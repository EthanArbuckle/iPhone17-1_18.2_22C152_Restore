uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t AudioAnalyticsTraceWrapperPost(__int16 a1)
{
  return MEMORY[0x270ED9F50]((4 * (a1 & 0x3FFF)) | 0x21040000u);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

__n128 __swift_memcpy162_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(_WORD *)(a1 + 160) = *((_WORD *)a2 + 80);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 __swift_memcpy208_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t AudioAnalyticsTapToRadarWrapperIsAvailable()
{
  return 1;
}

BOOL AudioAnalyticsTapToRadarWrapperSend(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, void *a8, void *a9)
{
  id v29 = a1;
  id v16 = a2;
  id v28 = a3;
  id v17 = a4;
  id v18 = a5;
  id v19 = a6;
  id v20 = a8;
  id v21 = a9;
  getRadarDraftClass();
  v22 = objc_opt_new();
  v23 = v22;
  if (v22)
  {
    [v22 setTitle:v29];
    [v23 setProblemDescription:v16];
    v24 = (void *)[objc_alloc(getRadarComponentClass()) initWithName:v18 version:v19 identifier:a7];
    BOOL v25 = v24 != 0;
    if (v24)
    {
      [v23 setComponent:v24];
      [v23 setReproducibility:5];
      [v23 setClassification:6];
      [v23 setDiagnosticExtensionIDs:&unk_26FC927F8];
      [v23 setAttachments:v17];
      [v23 setAutoDiagnostics:0];
      [v23 setIsUserInitiated:1];
      [v23 setKeywords:&unk_26FC92810];
      v26 = [(objc_class *)getTapToRadarServiceClass() shared];
      [v26 createDraft:v23 forProcessNamed:v20 withDisplayReason:v28 completionHandler:v21];
    }
  }
  else
  {
    BOOL v25 = 0;
  }

  return v25;
}

void sub_2488297C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

Class initRadarDraft(void)
{
  if (TapToRadarKitLibrary(void)::sOnce != -1) {
    dispatch_once(&TapToRadarKitLibrary(void)::sOnce, &__block_literal_global_0);
  }
  Class result = objc_getClass("RadarDraft");
  classRadarDraft = (uint64_t)result;
  getRadarDraftClass = (uint64_t (*)(void))RadarDraftFunction;
  return result;
}

id RadarDraftFunction(void)
{
  return (id)classRadarDraft;
}

void *___ZL20TapToRadarKitLibraryv_block_invoke()
{
  Class result = dlopen("/AppleInternal/Library/Frameworks/TapToRadarKit.framework/TapToRadarKit", 2);
  TapToRadarKitLibrary(void)::sLib = (uint64_t)result;
  return result;
}

Class initRadarComponent(void)
{
  if (TapToRadarKitLibrary(void)::sOnce != -1) {
    dispatch_once(&TapToRadarKitLibrary(void)::sOnce, &__block_literal_global_0);
  }
  Class result = objc_getClass("RadarComponent");
  classRadarComponent = (uint64_t)result;
  getRadarComponentClass = (uint64_t (*)(void))RadarComponentFunction;
  return result;
}

id RadarComponentFunction(void)
{
  return (id)classRadarComponent;
}

Class initTapToRadarService(void)
{
  if (TapToRadarKitLibrary(void)::sOnce != -1) {
    dispatch_once(&TapToRadarKitLibrary(void)::sOnce, &__block_literal_global_0);
  }
  Class result = objc_getClass("TapToRadarService");
  classTapToRadarService = (uint64_t)result;
  getTapToRadarServiceClass = (uint64_t (*)(void))TapToRadarServiceFunction;
  return result;
}

id TapToRadarServiceFunction(void)
{
  return (id)classTapToRadarService;
}

uint64_t AudioAnalyticsTraceWrapperPostStart(__int16 a1)
{
  return MEMORY[0x270ED9F50]((4 * (a1 & 0x3FFF)) | 0x21040001u);
}

uint64_t AudioAnalyticsTraceWrapperPostEnd(__int16 a1)
{
  return MEMORY[0x270ED9F50]((4 * (a1 & 0x3FFF)) | 0x21040002u);
}

uint64_t sub_2488299C4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  if (a2)
  {
    char v42 = a2;
    uint64_t v29 = a3;
    uint64_t v7 = 261;
  }
  else
  {
    uint64_t v7 = 5;
    sub_248864868(a1, 5);
    if (v3) {
      return swift_bridgeObjectRelease_n();
    }
    char v42 = a2;
    uint64_t v29 = a3;
  }
  char v41 = sub_248863120(0, a1, v7);
  uint64_t v40 = sub_248863138(1, a1, v7);
  unint64_t v58 = v9;
  uint64_t v39 = sub_248863138(2, a1, v7);
  unint64_t v46 = v10;
  uint64_t v38 = sub_248863138(3, a1, v7);
  uint64_t v45 = v11;
  uint64_t v37 = sub_248863138(4, a1, v7);
  uint64_t v44 = v12;
  uint64_t v36 = sub_248863138(5, a1, v7);
  uint64_t v43 = v13;
  char v35 = sub_248863120(6, a1, v7);
  uint64_t v34 = sub_248863150(7, a1);
  char v31 = v14;
  unint64_t v15 = sub_2488631F4(9, a1);
  uint64_t v33 = sub_248863150(10, a1);
  char v17 = v16;
  uint64_t v32 = sub_248863150(11, a1);
  char v19 = v18;
  uint64_t v30 = sub_248863150(12, a1);
  char v21 = v20;
  uint64_t v22 = sub_248863150(13, a1);
  char v24 = v23;
  uint64_t v25 = sub_2488632A0(8, a1, v7);
  swift_bridgeObjectRelease();
  CommonConfigFields.init(dict:)(a1, (uint64_t)&v52);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = 0x10000;
    if (!v53) {
      uint64_t v26 = 0;
    }
    long long v49 = v54;
    long long v50 = v55;
    uint64_t v48 = v26 | v52;
    uint64_t v51 = v56;
    uint64_t v28 = v15 | ((HIDWORD(v15) & 1) << 32);
    ABCConfig.init(enabled:instance:name:caseType:caseSubType:caseSubTypeContext:onlyFireOncePerSession:snapshotDelay:minInterestedCount:minInterestedDelaySeconds:minFireDelaySeconds:minSessionLength:maxSessionLength:interestedPredicates:interestedPredicatesParsed:commonFields:allowUnknownFields:)(v41, v40, v58, v39, v46, v38, v45, v37, v57, v44, v36, v43, v35, v34, v31 & 1, v27, v28, SBYTE4(v28), *(double *)&v33,
      v17 & 1,
      *(double *)&v32,
      v19 & 1,
      v30,
      v21 & 1,
      v22,
      v24 & 1,
      v25,
      0,
      &v48,
      v42 & 1);
    sub_24882CA78((uint64_t)v57, (uint64_t)v47);
    return sub_24882CA78((uint64_t)v47, v29);
  }
}

uint64_t ABCConfig.init(enabled:instance:name:caseType:caseSubType:caseSubTypeContext:onlyFireOncePerSession:snapshotDelay:minInterestedCount:minInterestedDelaySeconds:minFireDelaySeconds:minSessionLength:maxSessionLength:interestedPredicates:interestedPredicatesParsed:commonFields:allowUnknownFields:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, char a15, int a16, int a17, char a18, double a19, char a20,double a21,char a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,void *a28,uint64_t *a29,char a30)
{
  uint64_t v31 = v30;
  uint64_t v32 = a7;
  uint64_t v36 = a9;
  id v108 = a28;
  uint64_t v37 = *a29;
  uint64_t v38 = a29[1];
  uint64_t v39 = a29[2];
  uint64_t v40 = a29[3];
  if (a1 != 2 && (a1 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24882C87C(v37, v38);
    if (qword_26B143AF8 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_24887C618();
    __swift_project_value_buffer(v41, (uint64_t)qword_26B143AE0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v42 = sub_24887C5F8();
    os_log_type_t v43 = sub_24887CA98();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(void *)&long long v94 = v45;
      *(_DWORD *)uint64_t v44 = 136380675;
      unint64_t v46 = a3;
      uint64_t v47 = a2;
      if (!a3)
      {
        if (a5) {
          uint64_t v47 = a4;
        }
        else {
          uint64_t v47 = 0x6E776F6E6B6E75;
        }
        if (a5) {
          unint64_t v46 = a5;
        }
        else {
          unint64_t v46 = 0xE700000000000000;
        }
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      v107[0] = sub_24882CAE0(v47, v46, (uint64_t *)&v94);
      sub_24887CB88();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_248827000, v42, v43, "Instance disabled. { instance=%{private}s }", v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C582D20](v45, -1, -1);
      MEMORY[0x24C582D20](v44, -1, -1);

      uint64_t v36 = a9;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t v36 = a9;
    }
LABEL_19:
    sub_24882CA54(&v94);
    return sub_24882CA78((uint64_t)&v94, (uint64_t)v36);
  }
  if (a5 && a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24882C87C(v37, v38);
    sub_24882C828();
    swift_allocError();
    *(void *)uint64_t v48 = 0xD000000000000033;
    *(void *)(v48 + 8) = 0x8000000248881DA0;
    *(unsigned char *)(v48 + 16) = 1;
    return swift_willThrow();
  }
  uint64_t v85 = a29[5];
  unint64_t v86 = *a29;
  uint64_t v84 = a29[4];
  if (!a3)
  {
    if (!a5)
    {
      sub_24882C828();
      swift_allocError();
      *(void *)uint64_t v57 = 0xD000000000000025;
      *(void *)(v57 + 8) = 0x8000000248881D50;
      *(unsigned char *)(v57 + 16) = 1;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v51 = v37;
      uint64_t v52 = v38;
      return sub_24882C87C(v51, v52);
    }
    uint64_t v88 = a4;
    uint64_t v81 = a6;
    uint64_t v82 = a8;
    goto LABEL_34;
  }
  uint64_t v88 = a4;
  uint64_t v81 = a6;
  uint64_t v82 = a8;
  uint64_t v83 = a29[1];
  swift_bridgeObjectRetain();
  uint64_t v50 = sub_24887CDA8();
  swift_bridgeObjectRelease();
  sub_24882A880(a30 & 1, 0xD000000000000013, 0x8000000248881D80, a2, a3, v50 != 0, &v94);
  if (v31)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v51 = v37;
    uint64_t v52 = v83;
    return sub_24882C87C(v51, v52);
  }
  uint64_t v32 = a7;
  uint64_t v38 = v83;
  if (v94 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24882C87C(v37, v83);
    if (qword_26B143AF8 != -1) {
      swift_once();
    }
    uint64_t v53 = sub_24887C618();
    __swift_project_value_buffer(v53, (uint64_t)qword_26B143AE0);
    long long v54 = sub_24887C5F8();
    os_log_type_t v55 = sub_24887CA98();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v56 = 0;
      _os_log_impl(&dword_248827000, v54, v55, "Unknown ABC instance found in config, but allowUnknownFields is true, so continuing.", v56, 2u);
      MEMORY[0x24C582D20](v56, -1, -1);
    }

    goto LABEL_19;
  }
  uint64_t v58 = a2;
  unint64_t v59 = a3;
  if (a5)
  {
LABEL_34:
    swift_bridgeObjectRelease();
    uint64_t v58 = v88;
    unint64_t v59 = a5;
  }
  if (a20) {
    a19 = 0.0;
  }
  if (a22) {
    a21 = 3600.0;
  }
  uint64_t v90 = v58;
  uint64_t v80 = v40;
  if (v108)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v62 = a10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else if (a27)
  {
    uint64_t v69 = *(void *)(a27 + 16);
    if (v69)
    {
      uint64_t v79 = v39;
      v92 = v36;
      *(void *)&long long v94 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24887CCC8();
      id v108 = self;
      uint64_t v70 = a27 + 40;
      do
      {
        swift_bridgeObjectRetain();
        v71 = (void *)sub_24887C738();
        id v72 = objc_msgSend(v108, sel_buildPredicate_, v71);

        if (!v72)
        {
          sub_24882B504();
          if (v31)
          {
            swift_bridgeObjectRelease();
            swift_release();
            sub_24882C87C(v86, v38);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
        }
        uint64_t v32 = a7;
        v70 += 16;
        swift_bridgeObjectRelease();
        sub_24887CC98();
        sub_24887CCD8();
        sub_24887CCE8();
        sub_24887CCA8();
        --v69;
      }
      while (v69);
      id v108 = (id)v94;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v36 = v92;
      uint64_t v62 = a10;
      uint64_t v39 = v79;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v62 = a10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      id v108 = (id)MEMORY[0x263F8EE78];
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v62 = a10;
    swift_bridgeObjectRetain();
    id v108 = 0;
  }
  if (v38 == 1)
  {
    id v63 = v108;
    swift_bridgeObjectRetain();
    unint64_t v64 = sub_24882B5BC(MEMORY[0x263F8EE78]);
    CommonConfigFields.init(dict:)(v64, (uint64_t)v107);
    if (v31)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease_n();
    }
    __int16 v67 = v107[0];
    LOBYTE(v65) = BYTE2(v107[0]);
    uint64_t v38 = v107[1];
    uint64_t v39 = v107[2];
    uint64_t v68 = v107[4];
    uint64_t v80 = v107[3];
    uint64_t v66 = v107[5];
  }
  else
  {
    uint64_t v65 = (v86 >> 16) & 1;
    id v63 = v108;
    swift_bridgeObjectRetain();
    uint64_t v66 = v85;
    __int16 v67 = v86;
    uint64_t v68 = v84;
  }
  LOBYTE(v94) = a3 == 0;
  *((void *)&v94 + 1) = v90;
  *(void *)&long long v95 = v59;
  *((void *)&v95 + 1) = v81;
  *(void *)&long long v96 = v32;
  *((void *)&v96 + 1) = v82;
  *(void *)&long long v97 = v62;
  *((void *)&v97 + 1) = a11;
  *(void *)&long long v98 = a12;
  BYTE8(v98) = (a13 == 2) | a13 & 1;
  *(void *)&long long v99 = a14;
  BYTE8(v99) = a15 & 1;
  *(void *)&long long v100 = v63;
  DWORD2(v100) = a17;
  BYTE12(v100) = a18 & 1;
  *(double *)&long long v101 = a19;
  *((double *)&v101 + 1) = a21;
  *(void *)&long long v102 = a23;
  BYTE8(v102) = a24 & 1;
  *(void *)&long long v103 = a25;
  BYTE8(v103) = a26 & 1;
  LOWORD(v104) = v67;
  BYTE2(v104) = v65;
  *((void *)&v104 + 1) = v38;
  *(void *)&long long v105 = v39;
  *((void *)&v105 + 1) = v80;
  *(void *)&long long v106 = v68;
  *((void *)&v106 + 1) = v66;
  sub_24882C8F0((uint64_t)&v94);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v73 = v105;
  v36[10] = v104;
  v36[11] = v73;
  v36[12] = v106;
  long long v74 = v101;
  v36[6] = v100;
  v36[7] = v74;
  long long v75 = v103;
  v36[8] = v102;
  v36[9] = v75;
  long long v76 = v97;
  v36[2] = v96;
  v36[3] = v76;
  long long v77 = v99;
  v36[4] = v98;
  v36[5] = v77;
  long long v78 = v95;
  *uint64_t v36 = v94;
  v36[1] = v78;
  nullsub_1(v36);
  return sub_24882C9A4((uint64_t)&v94);
}

uint64_t ABCConfig.ABCInstanceName.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_24887CDA8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_24882A880(char a1@<W0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, char a6@<W5>, unsigned char *a7@<X8>)
{
  if (a6)
  {
    if (a1)
    {
      if (qword_26B143AF8 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_24887C618();
      __swift_project_value_buffer(v12, (uint64_t)qword_26B143AE0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v13 = sub_24887C5F8();
      os_log_type_t v14 = sub_24887CAB8();
      if (os_log_type_enabled(v13, v14))
      {
        os_log_type_t type = v14;
        uint64_t v15 = swift_slowAlloc();
        uint64_t v19 = swift_slowAlloc();
        uint64_t v21 = v19;
        *(_DWORD *)uint64_t v15 = 136446467;
        swift_bridgeObjectRetain();
        uint64_t v22 = sub_24882CAE0(a2, a3, &v21);
        sub_24887CB88();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v15 + 12) = 2081;
        if (a5) {
          uint64_t v16 = a4;
        }
        else {
          uint64_t v16 = 7104878;
        }
        if (a5) {
          unint64_t v17 = a5;
        }
        else {
          unint64_t v17 = 0xE300000000000000;
        }
        swift_bridgeObjectRetain();
        uint64_t v22 = sub_24882CAE0(v16, v17, &v21);
        sub_24887CB88();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_248827000, v13, type, "%{public}s %{private}s", (uint8_t *)v15, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C582D20](v19, -1, -1);
        MEMORY[0x24C582D20](v15, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      *a7 = 1;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_24887C838();
      swift_bridgeObjectRelease();
      sub_24887C838();
      swift_bridgeObjectRetain();
      sub_24887C838();
      swift_bridgeObjectRelease();
      sub_24882C828();
      swift_allocError();
      *(void *)uint64_t v18 = a2;
      *(void *)(v18 + 8) = a3;
      *(unsigned char *)(v18 + 16) = 1;
      swift_willThrow();
    }
  }
  else
  {
    *a7 = 0;
  }
}

uint64_t sub_24882AB98(char a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, int a6)
{
  return sub_24882ABB0(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_24882ABB0(char a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, int a6)
{
  unsigned __int16 v7 = a6;
  if ((a6 & 0x10000) != 0)
  {
    if ((a1 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_24887C838();
      swift_bridgeObjectRelease();
      sub_24887C838();
      swift_bridgeObjectRetain();
      sub_24887C838();
      swift_bridgeObjectRelease();
      sub_24882C828();
      swift_allocError();
      *(void *)uint64_t v19 = a2;
      *(void *)(v19 + 8) = a3;
      *(unsigned char *)(v19 + 16) = 1;
      return swift_willThrow();
    }
    if (qword_26B143AF8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_24887C618();
    __swift_project_value_buffer(v12, (uint64_t)qword_26B143AE0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v13 = sub_24887C5F8();
    os_log_type_t v14 = sub_24887CAB8();
    int v15 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      *(_DWORD *)os_log_type_t type = v15;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = v21;
      *(_DWORD *)uint64_t v16 = 136446467;
      swift_bridgeObjectRetain();
      sub_24882CAE0(a2, a3, &v22);
      sub_24887CB88();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v16 + 12) = 2081;
      if (a5) {
        uint64_t v17 = a4;
      }
      else {
        uint64_t v17 = 7104878;
      }
      if (a5) {
        unint64_t v18 = a5;
      }
      else {
        unint64_t v18 = 0xE300000000000000;
      }
      swift_bridgeObjectRetain();
      sub_24882CAE0(v17, v18, &v22);
      sub_24887CB88();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_248827000, v13, type[0], "%{public}s %{private}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C582D20](v21, -1, -1);
      MEMORY[0x24C582D20](v16, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    unsigned __int16 v7 = 0;
  }
  return a6 & 0x10000 | v7;
}

uint64_t sub_24882AEC8(char a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6)
{
  unsigned int v7 = a6;
  if ((a6 & 0x100000000) != 0)
  {
    if ((a1 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_24887C838();
      swift_bridgeObjectRelease();
      sub_24887C838();
      swift_bridgeObjectRetain();
      sub_24887C838();
      swift_bridgeObjectRelease();
      sub_24882C828();
      swift_allocError();
      *(void *)uint64_t v19 = a2;
      *(void *)(v19 + 8) = a3;
      *(unsigned char *)(v19 + 16) = 1;
      return swift_willThrow();
    }
    if (qword_26B143AF8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_24887C618();
    __swift_project_value_buffer(v12, (uint64_t)qword_26B143AE0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v13 = sub_24887C5F8();
    os_log_type_t v14 = sub_24887CAB8();
    int v15 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      *(_DWORD *)os_log_type_t type = v15;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = v21;
      *(_DWORD *)uint64_t v16 = 136446467;
      swift_bridgeObjectRetain();
      sub_24882CAE0(a2, a3, &v22);
      sub_24887CB88();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v16 + 12) = 2081;
      if (a5) {
        uint64_t v17 = a4;
      }
      else {
        uint64_t v17 = 7104878;
      }
      if (a5) {
        unint64_t v18 = a5;
      }
      else {
        unint64_t v18 = 0xE300000000000000;
      }
      swift_bridgeObjectRetain();
      sub_24882CAE0(v17, v18, &v22);
      sub_24887CB88();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_248827000, v13, type[0], "%{public}s %{private}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C582D20](v21, -1, -1);
      MEMORY[0x24C582D20](v16, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    unsigned int v7 = 0;
  }
  return v7 | ((HIDWORD(a6) & 1) << 32);
}

void sub_24882B1E4(char a1@<W0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, char a6@<W5>, unsigned char *a7@<X8>)
{
  if (a6 == 3)
  {
    if (a1)
    {
      if (qword_26B143AF8 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_24887C618();
      __swift_project_value_buffer(v12, (uint64_t)qword_26B143AE0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v13 = sub_24887C5F8();
      os_log_type_t v14 = sub_24887CAB8();
      if (os_log_type_enabled(v13, v14))
      {
        os_log_type_t type = v14;
        uint64_t v15 = swift_slowAlloc();
        uint64_t v19 = swift_slowAlloc();
        uint64_t v21 = v19;
        *(_DWORD *)uint64_t v15 = 136446467;
        swift_bridgeObjectRetain();
        uint64_t v22 = sub_24882CAE0(a2, a3, &v21);
        sub_24887CB88();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v15 + 12) = 2081;
        if (a5) {
          uint64_t v16 = a4;
        }
        else {
          uint64_t v16 = 7104878;
        }
        if (a5) {
          unint64_t v17 = a5;
        }
        else {
          unint64_t v17 = 0xE300000000000000;
        }
        swift_bridgeObjectRetain();
        uint64_t v22 = sub_24882CAE0(v16, v17, &v21);
        sub_24887CB88();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_248827000, v13, type, "%{public}s %{private}s", (uint8_t *)v15, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C582D20](v19, -1, -1);
        MEMORY[0x24C582D20](v15, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      *a7 = 3;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_24887C838();
      swift_bridgeObjectRelease();
      sub_24887C838();
      swift_bridgeObjectRetain();
      sub_24887C838();
      swift_bridgeObjectRelease();
      sub_24882C828();
      swift_allocError();
      *(void *)uint64_t v18 = a2;
      *(void *)(v18 + 8) = a3;
      *(unsigned char *)(v18 + 16) = 1;
      swift_willThrow();
    }
  }
  else
  {
    *a7 = a6;
  }
}

uint64_t sub_24882B504()
{
  sub_24887CC38();
  swift_bridgeObjectRelease();
  sub_24887C838();
  sub_24882C828();
  swift_allocError();
  *(void *)uint64_t v0 = 0xD00000000000002ALL;
  *(void *)(v0 + 8) = 0x8000000248882020;
  *(unsigned char *)(v0 + 16) = 1;
  return swift_willThrow();
}

unint64_t sub_24882B5BC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B143D40);
  uint64_t v2 = sub_24887CD78();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24882E36C(v6, (uint64_t)&v15, &qword_26B143BE8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_248840E50(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_24882D9E4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24882B6F4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26932CB70);
  uint64_t v2 = (void *)sub_24887CD78();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (void *)*(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v5;
    unint64_t result = sub_248840F34((uint64_t)v8);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v8;
    uint64_t v11 = (void *)(v2[7] + 16 * result);
    void *v11 = v6;
    v11[1] = v7;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24882B808(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143110);
  uint64_t v2 = sub_24887CD78();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24882E36C(v6, (uint64_t)v13, &qword_26932CB68);
    unsigned __int8 v7 = v13[0];
    unint64_t result = sub_248840EC8(v13[0]);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v7;
    unint64_t result = (unint64_t)sub_24882D9E4(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24882B938(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D28);
  uint64_t v2 = (void *)sub_24887CD78();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (char *)(a1 + 64);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 4);
    uint64_t v6 = *((void *)v4 - 3);
    uint64_t v7 = *((void *)v4 - 2);
    uint64_t v8 = *((void *)v4 - 1);
    char v9 = *v4;
    swift_bridgeObjectRetain();
    sub_24882D9F4(v7, v8, v9);
    unint64_t result = sub_248840E50(v5, v6);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v12 = v5;
    v12[1] = v6;
    uint64_t v13 = v2[7] + 24 * result;
    *(void *)uint64_t v13 = v7;
    *(void *)(v13 + 8) = v8;
    *(unsigned char *)(v13 + 16) = v9;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v4 += 40;
    v2[2] = v16;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24882BA7C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26932CB60);
  uint64_t v2 = (void *)sub_24887CD78();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_248840E50(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    void *v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24882BBA0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1430B0);
  uint64_t v2 = sub_24887CD78();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24882E36C(v6, (uint64_t)&v13, &qword_26B143CC8);
    uint64_t v7 = v13;
    unint64_t result = sub_248840FE4(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_24882D9E4(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void ABCConfig.instance.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t ABCConfig.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ABCConfig.caseType.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ABCConfig.caseSubType.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ABCConfig.caseSubTypeContext.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ABCConfig.onlyFireOncePerSession.getter()
{
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t ABCConfig.snapshotDelay.getter()
{
  return *(void *)(v0 + 80);
}

uint64_t ABCConfig.interestedPredicates.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t ABCConfig.minInterestedCount.getter()
{
  return *(unsigned int *)(v0 + 104) | ((unint64_t)*(unsigned __int8 *)(v0 + 108) << 32);
}

double ABCConfig.minInterestedDelaySeconds.getter()
{
  return *(double *)(v0 + 112);
}

double ABCConfig.minFireDelaySeconds.getter()
{
  return *(double *)(v0 + 120);
}

uint64_t ABCConfig.minSessionLength.getter()
{
  return *(void *)(v0 + 128);
}

uint64_t ABCConfig.maxSessionLength.getter()
{
  return *(void *)(v0 + 144);
}

uint64_t ABCConfig.commonFields.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 162);
  uint64_t v3 = *(void *)(v1 + 168);
  uint64_t v4 = *(void *)(v1 + 176);
  uint64_t v5 = *(void *)(v1 + 184);
  uint64_t v6 = *(void *)(v1 + 192);
  uint64_t v7 = *(void *)(v1 + 200);
  *(_WORD *)a1 = *(_WORD *)(v1 + 160);
  *(unsigned char *)(a1 + 2) = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ABCConfig.ABCInstanceName.rawValue.getter()
{
  return 1701736302;
}

uint64_t sub_24882BE94()
{
  return 1;
}

uint64_t sub_24882BE9C()
{
  return sub_24887D068();
}

uint64_t sub_24882BEE8()
{
  return sub_24887C808();
}

uint64_t sub_24882BEF8()
{
  return sub_24887D068();
}

unint64_t sub_24882BF40(char a1)
{
  unint64_t result = 0x64656C62616E65;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x65636E6174736E69;
      break;
    case 2:
      unint64_t result = 1701667182;
      break;
    case 3:
      unint64_t result = 0x6570795465736163;
      break;
    case 4:
      unint64_t result = 0x5462755365736163;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    case 7:
      unint64_t result = 0x746F687370616E73;
      break;
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 9:
      unint64_t result = 0xD000000000000012;
      break;
    case 10:
      unint64_t result = 0xD000000000000019;
      break;
    case 11:
      unint64_t result = 0xD000000000000013;
      break;
    case 12:
    case 13:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24882C0FC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_24887CDA8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_24882C150(void *a1@<X8>)
{
  *a1 = 1701736302;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_24882C164@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 162);
  uint64_t v3 = *(void *)(v1 + 168);
  uint64_t v4 = *(void *)(v1 + 176);
  uint64_t v5 = *(void *)(v1 + 184);
  uint64_t v6 = *(void *)(v1 + 192);
  uint64_t v7 = *(void *)(v1 + 200);
  *(_WORD *)a1 = *(_WORD *)(v1 + 160);
  *(unsigned char *)(a1 + 2) = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_24882C1E8(uint64_t a1, uint64_t a2)
{
  return sub_24882C690(a1, a2, MEMORY[0x263F07B58]);
}

BOOL sub_24882C20C(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 == *a2;
}

_DWORD *sub_24882C220@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_24882C230(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

_WORD *sub_24882C23C@<X0>(_WORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_WORD *)a2 = *result;
  *(unsigned char *)(a2 + 2) = 0;
  return result;
}

void sub_24882C24C(_WORD *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_24882C258(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24882C26C()
{
  return sub_24887D068();
}

uint64_t sub_24882C2B4()
{
  return sub_24887D038();
}

uint64_t sub_24882C2E0()
{
  return sub_24887D068();
}

uint64_t sub_24882C324(uint64_t a1, id *a2)
{
  uint64_t result = sub_24887C748();
  *a2 = 0;
  return result;
}

uint64_t sub_24882C39C(uint64_t a1, id *a2)
{
  char v3 = sub_24887C758();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_24882C41C@<X0>(uint64_t *a1@<X8>)
{
  sub_24887C768();
  uint64_t v2 = sub_24887C738();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24882C460(uint64_t a1, uint64_t a2)
{
  return sub_24882C690(a1, a2, MEMORY[0x263F8D308]);
}

void *sub_24882C480@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_24882C490(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_24882C4A4(uint64_t a1)
{
  uint64_t v2 = sub_24882D90C(&qword_26932CBA8, type metadata accessor for Name);
  uint64_t v3 = sub_24882D90C(&qword_26932CBB0, type metadata accessor for Name);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_24882C560@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_24887C738();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24882C5A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24887C768();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24882C5D4(uint64_t a1)
{
  uint64_t v2 = sub_24882D90C(&qword_26932CB50, type metadata accessor for FileAttributeKey);
  uint64_t v3 = sub_24882D90C(&qword_26932CB58, type metadata accessor for FileAttributeKey);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_24882C690(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_24887C768();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24882C6D4()
{
  sub_24887C768();
  sub_24887C808();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24882C728()
{
  sub_24887C768();
  sub_24887D008();
  sub_24887C808();
  uint64_t v0 = sub_24887D068();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24882C79C()
{
  uint64_t v0 = sub_24887C768();
  uint64_t v2 = v1;
  if (v0 == sub_24887C768() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_24887CF48();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_24882C828()
{
  unint64_t result = qword_26B143148;
  if (!qword_26B143148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B143148);
  }
  return result;
}

uint64_t sub_24882C87C(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24882C8F0(uint64_t a1)
{
  return a1;
}

uint64_t sub_24882C9A4(uint64_t a1)
{
  return a1;
}

double sub_24882CA54(_OWORD *a1)
{
  double result = 0.0;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_24882CA78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B143E30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24882CAE0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_24882CBB4(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_24882E1C8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_24882E1C8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_24882CBB4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_24887CB98();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_24882CD70(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_24887CC88();
  if (!v8)
  {
    sub_24887CD38();
    __break(1u);
LABEL_17:
    uint64_t result = sub_24887CD88();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_24882CD70(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_24882CE08(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24882CF80(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_24882CF80(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_24882CE08(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_24886A5A4(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_24887CC48();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_24887CD38();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_24887C868();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_24887CD88();
    __break(1u);
LABEL_14:
    uint64_t result = sub_24887CD38();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_24882CF80(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B143128);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

unint64_t sub_24882D0D4()
{
  unint64_t result = qword_26932CAB8;
  if (!qword_26932CAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CAB8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for CommonConfigFields(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for ABCConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ABCConfig(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v7 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v7;
  *(unsigned char *)(a1 + 162) = *(unsigned char *)(a2 + 162);
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  uint64_t v8 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v8;
  uint64_t v9 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v9;
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ABCConfig(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v4 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v4;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v5 = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  uint64_t v6 = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = v6;
  uint64_t v7 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v7;
  LOWORD(v7) = *(_WORD *)(a2 + 160);
  *(unsigned char *)(a1 + 162) = *(unsigned char *)(a2 + 162);
  *(_WORD *)(a1 + 160) = v7;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ABCConfig(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(unsigned char *)(a1 + 162) = *(unsigned char *)(a2 + 162);
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ABCConfig(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 208)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ABCConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 208) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ABCConfig()
{
  return &type metadata for ABCConfig;
}

uint64_t getEnumTagSinglePayload for ABCConfig.ABCInstanceName(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for ABCConfig.ABCInstanceName(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24882D79CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24882D7C4()
{
  return 0;
}

ValueMetadata *type metadata accessor for ABCConfig.ABCInstanceName()
{
  return &type metadata for ABCConfig.ABCInstanceName;
}

void type metadata accessor for AudioServiceType(uint64_t a1)
{
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

void type metadata accessor for AudioEventType(uint64_t a1)
{
}

void type metadata accessor for AudioEventCategory(uint64_t a1)
{
}

void type metadata accessor for CFError(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for ThermalState(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t sub_24882D87C()
{
  return sub_24882D90C(&qword_26932CB40, type metadata accessor for FileAttributeKey);
}

uint64_t sub_24882D8C4()
{
  return sub_24882D90C(&qword_26932CB48, type metadata accessor for FileAttributeKey);
}

uint64_t sub_24882D90C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24882D954()
{
  return sub_24882D90C(&qword_26B143E70, type metadata accessor for FileAttributeKey);
}

uint64_t sub_24882D99C()
{
  return sub_24882D90C(&qword_26B143C88, type metadata accessor for AudioServiceType);
}

_OWORD *sub_24882D9E4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_24882D9F4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 4 || a3 == 6 || a3 == 5) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_24882DA20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D50);
    int v3 = (void *)sub_24887CD78();
    for (i = (void *)(a1 + 40); ; i += 2)
    {
      unsigned __int16 v5 = *((_WORD *)i - 4);
      uint64_t v6 = *i;
      unint64_t result = sub_248840F78(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_WORD *)(v3[6] + 2 * result) = v5;
      *(void *)(v3[7] + 8 * result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

void *sub_24882DAF8(uint64_t a1, char a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v6 = *(void *)(swift_bridgeObjectRetain() + 32);
  swift_bridgeObjectRetain_n();
  sub_2488299C4(v6, a2 & 1, (uint64_t)v27);
  if (v2)
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v9 = v3 - 1;
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      swift_bridgeObjectRelease();
      sub_24882CA78((uint64_t)v27, (uint64_t)v25);
      sub_24882CA78((uint64_t)v25, (uint64_t)v26);
      if (sub_24882E354((uint64_t)v26) != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_248838564(0, v7[2] + 1, 1, v7);
        }
        unint64_t v11 = v7[2];
        unint64_t v10 = v7[3];
        if (v11 >= v10 >> 1) {
          uint64_t v7 = sub_248838564((void *)(v10 > 1), v11 + 1, 1, v7);
        }
        sub_24882CA78((uint64_t)v25, (uint64_t)v24);
        v7[2] = v11 + 1;
        uint64_t v12 = &v7[26 * v11];
        v12[2] = v24[0];
        long long v13 = v24[4];
        long long v14 = v24[2];
        long long v15 = v24[1];
        v12[5] = v24[3];
        v12[6] = v13;
        uint64_t v12[3] = v15;
        v12[4] = v14;
        long long v16 = v24[8];
        long long v17 = v24[6];
        long long v18 = v24[5];
        v12[9] = v24[7];
        v12[10] = v16;
        v12[7] = v18;
        v12[8] = v17;
        long long v19 = v24[12];
        long long v20 = v24[10];
        long long v21 = v24[9];
        v12[13] = v24[11];
        v12[14] = v19;
        v12[11] = v21;
        v12[12] = v20;
      }
      if (v9 == v8) {
        break;
      }
      uint64_t v22 = *(void *)(a1 + 8 * v8 + 40);
      swift_bridgeObjectRetain_n();
      sub_2488299C4(v22, a2 & 1, (uint64_t)v27);
      ++v8;
    }
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_24882DD04(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  uint64_t v5 = *(void *)(result + 16);
  if (v5)
  {
    unint64_t v8 = 0;
    unint64_t v9 = MEMORY[0x263F8EE78];
    do
    {
      unint64_t v55 = v9;
      uint64_t v10 = 208 * v8 + 32;
      unint64_t v11 = v8;
      while (1)
      {
        if (v11 >= *(void *)(v4 + 16))
        {
          __break(1u);
          return result;
        }
        long long v12 = *(_OWORD *)(v4 + v10 + 176);
        long long v51 = *(_OWORD *)(v4 + v10 + 160);
        long long v52 = v12;
        long long v53 = *(_OWORD *)(v4 + v10 + 192);
        long long v13 = *(_OWORD *)(v4 + v10 + 112);
        long long v47 = *(_OWORD *)(v4 + v10 + 96);
        long long v48 = v13;
        long long v14 = *(_OWORD *)(v4 + v10 + 144);
        long long v49 = *(_OWORD *)(v4 + v10 + 128);
        long long v50 = v14;
        long long v15 = *(_OWORD *)(v4 + v10 + 48);
        long long v43 = *(_OWORD *)(v4 + v10 + 32);
        long long v44 = v15;
        long long v16 = *(_OWORD *)(v4 + v10 + 80);
        long long v45 = *(_OWORD *)(v4 + v10 + 64);
        long long v46 = v16;
        long long v17 = *(_OWORD *)(v4 + v10 + 16);
        long long v41 = *(_OWORD *)(v4 + v10);
        long long v42 = v17;
        v40[3] = &type metadata for ABCConfig;
        v40[4] = &protocol witness table for ABCConfig;
        long long v18 = (_OWORD *)swift_allocObject();
        v40[0] = v18;
        long long v19 = *(_OWORD *)(v4 + v10 + 176);
        v18[11] = *(_OWORD *)(v4 + v10 + 160);
        v18[12] = v19;
        v18[13] = *(_OWORD *)(v4 + v10 + 192);
        long long v20 = *(_OWORD *)(v4 + v10 + 112);
        v18[7] = *(_OWORD *)(v4 + v10 + 96);
        v18[8] = v20;
        long long v21 = *(_OWORD *)(v4 + v10 + 144);
        v18[9] = *(_OWORD *)(v4 + v10 + 128);
        v18[10] = v21;
        long long v22 = *(_OWORD *)(v4 + v10 + 48);
        v18[3] = *(_OWORD *)(v4 + v10 + 32);
        v18[4] = v22;
        long long v23 = *(_OWORD *)(v4 + v10 + 80);
        v18[5] = *(_OWORD *)(v4 + v10 + 64);
        v18[6] = v23;
        long long v24 = *(_OWORD *)(v4 + v10 + 16);
        v18[1] = *(_OWORD *)(v4 + v10);
        v18[2] = v24;
        sub_24882C8F0((uint64_t)&v41);
        sub_24882C8F0((uint64_t)&v41);
        char v25 = sub_248843BF8(v40, a2, a3);
        if (v3)
        {
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v40);
          sub_24882C9A4((uint64_t)&v41);
          unint64_t v9 = v55;
          swift_release();
          goto LABEL_17;
        }
        char v26 = v25;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v40);
        if (v26) {
          break;
        }
        ++v11;
        unint64_t result = sub_24882C9A4((uint64_t)&v41);
        v10 += 208;
        if (v5 == v11)
        {
          unint64_t v9 = v55;
          goto LABEL_17;
        }
      }
      unint64_t v9 = v55;
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v54 = v9;
      if ((result & 1) == 0)
      {
        unint64_t result = sub_248841970(0, *(void *)(v9 + 16) + 1, 1);
        unint64_t v9 = v54;
      }
      unint64_t v28 = *(void *)(v9 + 16);
      unint64_t v27 = *(void *)(v9 + 24);
      unint64_t v29 = v28 + 1;
      if (v28 >= v27 >> 1)
      {
        unint64_t v55 = v28 + 1;
        unint64_t result = sub_248841970(v27 > 1, v28 + 1, 1);
        unint64_t v29 = v55;
        unint64_t v9 = v54;
      }
      unint64_t v8 = v11 + 1;
      *(void *)(v9 + 16) = v29;
      uint64_t v30 = (_OWORD *)(v9 + 208 * v28);
      v30[2] = v41;
      long long v31 = v42;
      long long v32 = v43;
      long long v33 = v45;
      v30[5] = v44;
      v30[6] = v33;
      v30[3] = v31;
      v30[4] = v32;
      long long v34 = v46;
      long long v35 = v47;
      long long v36 = v49;
      v30[9] = v48;
      v30[10] = v36;
      v30[7] = v34;
      v30[8] = v35;
      long long v37 = v50;
      long long v38 = v51;
      long long v39 = v53;
      v30[13] = v52;
      v30[14] = v39;
      v30[11] = v37;
      v30[12] = v38;
    }
    while (v5 - 1 != v11);
  }
  else
  {
    unint64_t v9 = MEMORY[0x263F8EE78];
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_24882DFA0(uint64_t *a1)
{
  uint64_t v17 = *a1;
  if (!*(void *)(v17 + 16)
    || (unint64_t v3 = sub_248840EC8(5u), (v4 & 1) == 0)
    || (sub_24882E1C8(*(void *)(v17 + 56) + 32 * v3, (uint64_t)v15),
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C08),
        (swift_dynamicCast() & 1) == 0))
  {
    if (qword_26B143AF8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_24887C618();
    __swift_project_value_buffer(v9, (uint64_t)qword_26B143AE0);
    uint64_t v10 = sub_24887C5F8();
    os_log_type_t v11 = sub_24887CA98();
    if (os_log_type_enabled(v10, v11))
    {
      long long v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v12 = 0;
      _os_log_impl(&dword_248827000, v10, v11, "No abc section found, or malformed.", v12, 2u);
      MEMORY[0x24C582D20](v12, -1, -1);
    }

    return 0;
  }
  long long v16 = *(_OWORD *)(a1 + 1);
  uint64_t v6 = a1[3];
  uint64_t v5 = a1[4];
  char v7 = *((unsigned char *)a1 + 40);
  sub_24882E224((uint64_t)&v17);
  sub_24882E250((uint64_t)&v16);
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_24882DAF8(v14, v7);
  sub_24882E27C((uint64_t)&v17);
  sub_24882E2A8((uint64_t)&v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_24882E224((uint64_t)&v17);
    sub_24882E250((uint64_t)&v16);
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_24882DD04((uint64_t)v8, v6, v5);
    sub_24882E27C((uint64_t)&v17);
    sub_24882E2A8((uint64_t)&v16);
    swift_bridgeObjectRelease();
    if (!*(void *)(v6 + 16))
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v6;
}

uint64_t sub_24882E1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_24882E224(uint64_t a1)
{
  return a1;
}

uint64_t sub_24882E250(uint64_t a1)
{
  return a1;
}

uint64_t sub_24882E27C(uint64_t a1)
{
  return a1;
}

uint64_t sub_24882E2A8(uint64_t a1)
{
  return a1;
}

uint64_t sub_24882E2D4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 224, 7);
}

uint64_t sub_24882E354(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_24882E36C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void type metadata accessor for Name(uint64_t a1)
{
}

void *__swift_memcpy648_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x288uLL);
}

uint64_t sub_24882E3EC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 648)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24882E40C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 648) = v3;
  return result;
}

void type metadata accessor for kinfo_proc(uint64_t a1)
{
}

uint64_t sub_24882E4F4()
{
  return sub_24882D90C(&qword_26932CB90, type metadata accessor for Name);
}

uint64_t sub_24882E53C()
{
  return sub_24882D90C(&qword_26932CB98, type metadata accessor for Name);
}

uint64_t sub_24882E584()
{
  return sub_24882D90C(&qword_26932CBA0, type metadata accessor for Name);
}

void *__swift_memcpy352_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x160uLL);
}

uint64_t sub_24882E5D4(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 352)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24882E5F4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 344) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 352) = v3;
  return result;
}

void type metadata accessor for eproc(uint64_t a1)
{
}

void *__swift_memcpy296_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x128uLL);
}

uint64_t sub_24882E698(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 296)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24882E6B8(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 296) = v3;
  return result;
}

void type metadata accessor for extern_proc(uint64_t a1)
{
}

__n128 __swift_memcpy76_4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 60) = *(_OWORD *)(a2 + 60);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_24882E768(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 76)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24882E788(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 72) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 76) = v3;
  return result;
}

void type metadata accessor for _ucred(uint64_t a1)
{
}

__n128 __swift_memcpy104_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t sub_24882E808(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 104)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24882E828(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 104) = v3;
  return result;
}

void type metadata accessor for _pcred(uint64_t a1)
{
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t sub_24882E8AC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 144)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24882E8CC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 144) = v3;
  return result;
}

void type metadata accessor for rusage(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for timeval(uint64_t a1)
{
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for TraceArgs(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TraceArgs(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for itimerval(uint64_t a1)
{
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_24882E9D0(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24882E9F0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

void type metadata accessor for vmspace(uint64_t a1)
{
}

uint64_t sub_24882EA40(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24882EA60(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for extern_proc.__Unnamed_union_p_un(uint64_t a1)
{
}

void sub_24882EA9C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

unint64_t sub_24882EB00@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(void *)(a3 + 16) && (__n128 result = sub_248840E50(result, a2), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(a3 + 56) + 24 * result;
    uint64_t v8 = *(void *)v7;
    uint64_t v9 = *(void *)(v7 + 8);
    *(void *)a4 = *(void *)v7;
    *(void *)(a4 + 8) = v9;
    char v10 = *(unsigned char *)(v7 + 16);
    *(unsigned char *)(a4 + 16) = v10;
    return sub_24882D9F4(v8, v9, v10);
  }
  else
  {
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(unsigned char *)(a4 + 16) = -1;
  }
  return result;
}

uint64_t static ActiveDevicesFilter.modifyMessage(_:)@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  int v3 = *a1;
  __int16 v4 = *((_WORD *)a1 + 2);
  uint64_t v5 = *((void *)a1 + 1);
  uint64_t v6 = *((void *)a1 + 2);
  uint64_t v7 = *((void *)a1 + 3);
  char v8 = *((unsigned char *)a1 + 32);
  char v9 = *((unsigned char *)a1 + 40);
  char v10 = *((unsigned char *)a1 + 41);
  char v11 = *((unsigned char *)a1 + 42);
  uint64_t v12 = *((void *)a1 + 6);
  uint64_t v13 = *((void *)a1 + 7);
  char v14 = *((unsigned char *)a1 + 64);
  uint64_t v16 = *((void *)a1 + 9);
  uint64_t v15 = *((void *)a1 + 10);
  if (!*(void *)(v5 + 16)) {
    goto LABEL_14;
  }
  char v30 = *((unsigned char *)a1 + 64);
  char v31 = *((unsigned char *)a1 + 40);
  uint64_t v34 = *((void *)a1 + 6);
  char v32 = *((unsigned char *)a1 + 41);
  char v33 = *((unsigned char *)a1 + 42);
  unint64_t v17 = sub_248840E50(0x645F657669746361, 0xEE00736563697665);
  char v9 = v31;
  char v10 = v32;
  char v11 = v33;
  uint64_t v12 = v34;
  if ((v18 & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v19 = *(void *)(v5 + 56) + 24 * v17;
  if (*(unsigned char *)(v19 + 16) != 4) {
    goto LABEL_14;
  }
  uint64_t v28 = v7;
  char v29 = v8;
  uint64_t v20 = *(void *)v19;
  uint64_t v21 = *(void *)(v19 + 8);
  sub_24882D9F4(*(void *)v19, v21, 4);
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_24882F440(v20, v21, qword_26FC8EAB0);
  if (!v22)
  {
    sub_24882F8D0(v20, v21, 4);
LABEL_13:
    uint64_t v12 = v34;
    char v10 = v32;
    char v11 = v33;
    char v9 = v31;
    char v8 = v29;
    uint64_t v7 = v28;
    goto LABEL_14;
  }
  uint64_t v37 = 8283;
  unint64_t v38 = 0xE200000000000000;
  v35[0] = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C10);
  sub_24882FA1C((unint64_t *)&qword_26B143C18, &qword_26B143C10);
  sub_24887C708();
  sub_24887C838();
  swift_bridgeObjectRelease();
  sub_24887C838();
  swift_bridgeObjectRelease();
  if (v20 == 8283 && v21 == v38)
  {
    sub_24882F8D0(v20, v21, 4);
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v27 = v37;
  char v24 = sub_24887CF48();
  sub_24882F8D0(v20, v21, 4);
  char v8 = v29;
  uint64_t v7 = v28;
  if (v24)
  {
    swift_bridgeObjectRelease();
    char v14 = v30;
    char v9 = v31;
    uint64_t v12 = v34;
    char v10 = v32;
    char v11 = v33;
LABEL_14:
    *(_DWORD *)a2 = v3;
    *(_WORD *)(a2 + 4) = v4;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(void *)(a2 + 24) = v7;
    *(unsigned char *)(a2 + 32) = v8;
    *(unsigned char *)(a2 + 40) = v9;
    *(unsigned char *)(a2 + 41) = v10;
    *(unsigned char *)(a2 + 42) = v11;
    *(void *)(a2 + 48) = v12;
    *(void *)(a2 + 56) = v13;
    *(unsigned char *)(a2 + 64) = v14;
    *(void *)(a2 + 72) = v16;
    *(void *)(a2 + 80) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  HIWORD(v37) = HIWORD(v5);
  sub_24882EFE4(v27, 0xE200000000000000, 4, 0x645F657669746361, 0xEE00736563697665, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  LODWORD(v37) = v3;
  WORD2(v37) = v4;
  unint64_t v38 = v5;
  uint64_t v39 = v6;
  uint64_t v40 = v28;
  char v41 = v29;
  char v42 = v31;
  char v43 = v32;
  char v44 = v33;
  uint64_t v45 = v34;
  uint64_t v46 = v13;
  char v47 = v30;
  uint64_t v48 = v16;
  uint64_t v49 = v15;
  memset(v35, 0, sizeof(v35));
  char v36 = 0;
  Message.copy(newCategory:newType:newContent:newMetadata:)(0x100000000, 0x10000, v5, v35, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24882EF04(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  if (a3 == -1)
  {
    sub_24885403C(a4, a5, (uint64_t)v13);
    swift_bridgeObjectRelease();
    return sub_24882F954(v13[0], v13[1], v14);
  }
  else
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13[0] = *v5;
    *uint64_t v5 = 0x8000000000000000;
    sub_24882EFE4(a1, a2, a3, a4, a5, isUniquelyReferenced_nonNull_native);
    *uint64_t v5 = v13[0];
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24882EFE4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = (void **)v6;
  char v14 = (void *)*v6;
  unint64_t v16 = sub_248840E50(a4, a5);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= v19 && (a6 & 1) != 0)
  {
LABEL_7:
    uint64_t v22 = *v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7] + 24 * v16;
      uint64_t result = sub_24882F8D0(*(void *)v23, *(void *)(v23 + 8), *(unsigned char *)(v23 + 16));
      *(void *)uint64_t v23 = a1;
      *(void *)(v23 + 8) = a2;
      *(unsigned char *)(v23 + 16) = a3;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_248839F90();
    goto LABEL_7;
  }
  sub_248838F6C(v19, a6 & 1);
  unint64_t v25 = sub_248840E50(a4, a5);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_15:
    uint64_t result = sub_24887CF98();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  uint64_t v22 = *v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  sub_248854328(v16, a4, a5, a1, a2, a3, v22);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24882F14C(uint64_t a1, void *a2)
{
  uint64_t v19 = *(void *)(a1 + 16);
  if (v19)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1430B8);
    uint64_t v20 = a2[2];
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v17 = a2 + 7;
    __int16 v4 = (void *)MEMORY[0x263F8EE78];
    BOOL v18 = a2;
    while (1)
    {
      swift_getKeyPath();
      sub_24887C5E8();
      swift_release();
      uint64_t v5 = MEMORY[0x24C581AD0]();
      uint64_t v7 = v6;
      swift_bridgeObjectRelease();
      if (v20)
      {
        BOOL v8 = a2[4] == v5 && a2[5] == v7;
        if (v8 || (uint64_t result = sub_24887CF48(), (result & 1) != 0))
        {
LABEL_11:
          swift_bridgeObjectRelease();
          swift_getKeyPath();
          sub_24887C5E8();
          swift_release();
          MEMORY[0x24C581AD0]();
          sub_24887C838();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24887C838();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            __int16 v4 = sub_248838454(0, v4[2] + 1, 1, v4);
          }
          unint64_t v11 = v4[2];
          unint64_t v10 = v4[3];
          if (v11 >= v10 >> 1) {
            __int16 v4 = sub_248838454((void *)(v10 > 1), v11 + 1, 1, v4);
          }
          v4[2] = v11 + 1;
          uint64_t v12 = &v4[2 * v11];
          v12[4] = 8315;
          v12[5] = 0xE200000000000000;
        }
        else
        {
          if (v20 != 1)
          {
            uint64_t v13 = v17;
            uint64_t v14 = 1;
            while (1)
            {
              uint64_t v15 = v14 + 1;
              if (__OFADD__(v14, 1)) {
                break;
              }
              if (*(v13 - 1) == v5 && *v13 == v7) {
                goto LABEL_11;
              }
              uint64_t result = sub_24887CF48();
              if (result) {
                goto LABEL_11;
              }
              v13 += 2;
              ++v14;
              if (v15 == v20) {
                goto LABEL_26;
              }
            }
            __break(1u);
            return result;
          }
LABEL_26:
          swift_bridgeObjectRelease();
        }
        a2 = v18;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      if (++v3 == v19)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v4;
      }
    }
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_24882F440(uint64_t a1, uint64_t a2, void *a3)
{
  char v31 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B142EE0);
  uint64_t v29 = *(void *)(v5 - 8);
  uint64_t v30 = v5;
  MEMORY[0x270FA5388]();
  uint64_t v28 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1430E0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388]();
  unint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1430C8);
  MEMORY[0x270FA5388]();
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1430C0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v27 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143108);
  sub_24887C5D8();
  sub_24882F968();
  sub_24882FA1C(&qword_26B1430D8, &qword_26B1430E0);
  sub_24887C6D8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    swift_bridgeObjectRelease();
    sub_24882F9BC((uint64_t)v12);
    return 0;
  }
  unint64_t v16 = v27;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v27, v12, v13);
  swift_getKeyPath();
  sub_24887C5E8();
  swift_release();
  uint64_t v17 = MEMORY[0x24C581AD0](v32, v33, v34, v35);
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  uint64_t v32 = v17;
  uint64_t v33 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143100);
  uint64_t v20 = v28;
  sub_24887C5D8();
  sub_24882FA1C(&qword_26B1430D0, &qword_26B142EE0);
  uint64_t v21 = v30;
  uint64_t v22 = sub_24887C6E8();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v21);
  swift_bridgeObjectRelease();
  uint64_t v23 = v31;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_24882F14C(v22, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v25 = *(void *)(v24 + 16);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if (!v25)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v24;
}

uint64_t sub_24882F8D0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 4 || a3 == 6 || a3 == 5) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActiveDevicesFilter()
{
  return &type metadata for ActiveDevicesFilter;
}

uint64_t sub_24882F954(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_24882F8D0(a1, a2, a3);
  }
  return a1;
}

unint64_t sub_24882F968()
{
  unint64_t result = qword_26B143BB0;
  if (!qword_26B143BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B143BB0);
  }
  return result;
}

uint64_t sub_24882F9BC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1430C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24882FA1C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t AlertNotification.init(with:message:buttonTitle:alternateButtonTitle:timeout:onAction:onDismiss:onCompletion:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, long long a11, long long a12, uint64_t a13, uint64_t a14)
{
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(double *)(a9 + 64) = a10;
  *(_OWORD *)(a9 + 72) = a11;
  *(_OWORD *)(a9 + 88) = a12;
  *(void *)(a9 + 104) = a13;
  *(void *)(a9 + 112) = a14;
  return result;
}

uint64_t sub_24882FA90(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x263F8EE80];
  uint64_t v3 = a1 + 64;
  uint64_t v35 = MEMORY[0x263F8EE80];
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(63 - v4) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (!v6) {
    goto LABEL_8;
  }
LABEL_5:
  unint64_t v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v11 = v10 | (v9 << 6);
  while (1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v11);
    uint64_t v13 = v12[1];
    if (v13)
    {
      uint64_t v18 = *(void **)(*(void *)(a1 + 48) + 8 * v11);
      uint64_t v19 = *v12;
      unint64_t v20 = *(void *)(v2 + 16);
      uint64_t v34 = v19;
      if (*(void *)(v2 + 24) <= v20)
      {
        uint64_t v22 = v20 + 1;
        swift_bridgeObjectRetain_n();
        id v23 = v18;
        sub_248839298(v22, 1);
        uint64_t v2 = v35;
      }
      else
      {
        swift_bridgeObjectRetain_n();
        id v21 = v18;
      }
      uint64_t result = sub_24887CB38();
      uint64_t v24 = v2 + 64;
      uint64_t v25 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v2 + 64 + 8 * (v26 >> 6))) == 0)
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v25) >> 6;
        while (++v27 != v30 || (v29 & 1) == 0)
        {
          BOOL v31 = v27 == v30;
          if (v27 == v30) {
            unint64_t v27 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v24 + 8 * v27);
          if (v32 != -1)
          {
            unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
            goto LABEL_37;
          }
        }
        goto LABEL_41;
      }
      unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v2 + 64 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_37:
      *(void *)(v24 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
      *(void *)(*(void *)(v2 + 48) + 8 * v28) = v18;
      uint64_t v33 = (void *)(*(void *)(v2 + 56) + 16 * v28);
      *uint64_t v33 = v34;
      v33[1] = v13;
      ++*(void *)(v2 + 16);
      uint64_t result = swift_bridgeObjectRelease();
      if (v6) {
        goto LABEL_5;
      }
    }
    else if (v6)
    {
      goto LABEL_5;
    }
LABEL_8:
    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v14 >= v7) {
      goto LABEL_39;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    int64_t v16 = v9 + 1;
    if (!v15)
    {
      int64_t v16 = v9 + 2;
      if (v9 + 2 >= v7) {
        goto LABEL_39;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v9 + 3;
        if (v9 + 3 >= v7) {
          goto LABEL_39;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v16);
        if (!v15)
        {
          int64_t v16 = v9 + 4;
          if (v9 + 4 >= v7) {
            goto LABEL_39;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v16);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v16 << 6);
    int64_t v9 = v16;
  }
  int64_t v17 = v9 + 5;
  if (v9 + 5 >= v7)
  {
LABEL_39:
    sub_2488309A0();
    return v2;
  }
  unint64_t v15 = *(void *)(v3 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v9 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v7) {
      goto LABEL_39;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

void _s18AudioAnalyticsBase17AlertNotificationV7surfaceyyACFZ_0(double *a1)
{
  responseFlags[19] = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_24887C618();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v6 = *a1;
  uint64_t v7 = *((void *)a1 + 1);
  uint64_t v8 = *((void *)a1 + 2);
  uint64_t v9 = *((void *)a1 + 3);
  uint64_t v10 = *((void *)a1 + 5);
  uint64_t v57 = *((void *)a1 + 4);
  uint64_t v11 = *((void *)a1 + 7);
  uint64_t v56 = *((void *)a1 + 6);
  CFTimeInterval v12 = a1[8];
  uint64_t v48 = (uint64_t (*)(uint64_t))*((void *)a1 + 9);
  uint64_t v47 = *((void *)a1 + 10);
  long long v50 = (uint64_t (*)(uint64_t))*((void *)a1 + 11);
  uint64_t v49 = *((void *)a1 + 12);
  long long v52 = (void (*)(uint64_t))*((void *)a1 + 13);
  uint64_t v51 = *((void *)a1 + 14);
  if (qword_26B143A68 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v2, (uint64_t)qword_26B143A48);
  uint64_t v54 = v3;
  int64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  long long v53 = v5;
  uint64_t v55 = v2;
  v14(v5, v13, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26932CC60);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24887E380;
  if (!*MEMORY[0x263EFFFC8])
  {
    __break(1u);
    goto LABEL_29;
  }
  int64_t v16 = (double *)inited;
  sub_248830908();
  *((void *)v16 + 4) = sub_24887CB58();
  v16[5] = v6;
  *((void *)v16 + 6) = v7;
  if (!*MEMORY[0x263EFFFD8])
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
  *((void *)v16 + 7) = sub_24887CB58();
  *((void *)v16 + 8) = v8;
  *((void *)v16 + 9) = v9;
  if (!*MEMORY[0x263F00000])
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_24887CB58();
  uint64_t v18 = v57;
  *((void *)v16 + 10) = v17;
  *((void *)v16 + 11) = v18;
  *((void *)v16 + 12) = v10;
  if (!*MEMORY[0x263EFFFE8]) {
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_24887CB58();
  uint64_t v20 = v56;
  *((void *)v16 + 13) = v19;
  *((void *)v16 + 14) = v20;
  *((void *)v16 + 15) = v11;
  swift_bridgeObjectRetain();
  unint64_t v21 = sub_24882B6F4((uint64_t)v16);
  sub_24882FA90(v21);
  swift_bridgeObjectRelease();
  error[0] = -1;
  CFAllocatorRef v22 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  sub_248830948();
  CFDictionaryRef v23 = (const __CFDictionary *)sub_24887C698();
  swift_bridgeObjectRelease();
  uint64_t v24 = CFUserNotificationCreate(v22, v12, 0, error, v23);

  if (v24)
  {
    SInt32 v25 = error[0];
    int v26 = sub_24887C638();
    uint64_t v27 = v55;
    uint64_t v28 = v54;
    char v29 = v53;
    if (v25 != v26)
    {
      char v43 = sub_24887C5F8();
      os_log_type_t v44 = sub_24887CAB8();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v45 = 67109120;
        swift_beginAccess();
        SInt32 v58 = error[0];
        sub_24887CB88();
        _os_log_impl(&dword_248827000, v43, v44, "Failed to create alert notification. { err=%d }", v45, 8u);
        MEMORY[0x24C582D20](v45, -1, -1);
        uint64_t v46 = v24;
      }
      else
      {
        uint64_t v46 = v43;
        char v43 = v24;
      }

      goto LABEL_25;
    }
    responseFlags[0] = 0;
    SInt32 v30 = CFUserNotificationReceiveResponse(v24, v12, responseFlags);
    uint64_t v31 = sub_24887C638();
    if (v30 != v31)
    {
      uint64_t v32 = sub_24887C5F8();
      os_log_type_t v33 = sub_24887CAC8();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v34 = 67109120;
        SInt32 v58 = v30;
        sub_24887CB88();
        _os_log_impl(&dword_248827000, v32, v33, "Failed to interpret overload notification user alert response. { response=%d }", v34, 8u);
        MEMORY[0x24C582D20](v34, -1, -1);
      }
    }
    if ((responseFlags[0] & 3) != 0)
    {
      uint64_t v35 = v52;
      if (v50) {
        uint64_t v31 = v50(v31);
      }
      if (v35) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v31 = v48(v31);
      uint64_t v35 = v52;
      if (v52)
      {
LABEL_17:
        v35(v31);

LABEL_25:
        (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v27);
        return;
      }
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v27);
  }
  else
  {
    char v36 = v53;
    uint64_t v37 = sub_24887C5F8();
    uint64_t v38 = sub_24887CAB8();
    BOOL v39 = os_log_type_enabled(v37, (os_log_type_t)v38);
    uint64_t v40 = v55;
    uint64_t v41 = v54;
    if (v39)
    {
      char v42 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)char v42 = 67109120;
      swift_beginAccess();
      SInt32 v58 = error[0];
      sub_24887CB88();
      _os_log_impl(&dword_248827000, v37, (os_log_type_t)v38, "Failed to create alert notification. { err=%d }", v42, 8u);
      MEMORY[0x24C582D20](v42, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v41 + 8))(v36, v40);
  }
}

uint64_t destroy for AlertNotification(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (*(void *)(a1 + 88)) {
    uint64_t result = swift_release();
  }
  if (*(void *)(a1 + 104))
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for AlertNotification(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v8 = a2[9];
  uint64_t v9 = a2[10];
  a1[8] = a2[8];
  a1[9] = v8;
  a1[10] = v9;
  uint64_t v11 = a2 + 11;
  uint64_t v10 = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v10)
  {
    uint64_t v12 = a2[12];
    a1[11] = v10;
    a1[12] = v12;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 11) = *v11;
  }
  uint64_t v13 = a2[13];
  if (v13)
  {
    uint64_t v14 = a2[14];
    a1[13] = v13;
    a1[14] = v14;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  }
  return a1;
}

void *assignWithCopy for AlertNotification(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  uint64_t v4 = a2[10];
  a1[9] = a2[9];
  a1[10] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[11];
  if (a1[11])
  {
    if (v5)
    {
      uint64_t v6 = a2[12];
      a1[11] = v5;
      a1[12] = v6;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    uint64_t v7 = a2[12];
    a1[11] = v5;
    a1[12] = v7;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
LABEL_8:
  uint64_t v8 = a2[13];
  if (!a1[13])
  {
    if (v8)
    {
      uint64_t v10 = a2[14];
      a1[13] = v8;
      a1[14] = v10;
      swift_retain();
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
    return a1;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v9 = a2[14];
  a1[13] = v8;
  a1[14] = v9;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for AlertNotification(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  uint64_t v8 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88))
  {
    if (v8)
    {
      uint64_t v9 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = v8;
      *(void *)(a1 + 96) = v9;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v8)
  {
    uint64_t v10 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = v8;
    *(void *)(a1 + 96) = v10;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
LABEL_8:
  uint64_t v11 = *(void *)(a2 + 104);
  if (!*(void *)(a1 + 104))
  {
    if (v11)
    {
      uint64_t v13 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = v11;
      *(void *)(a1 + 112) = v13;
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = v11;
  *(void *)(a1 + 112) = v12;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AlertNotification(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AlertNotification(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AlertNotification()
{
  return &type metadata for AlertNotification;
}

unint64_t sub_248830908()
{
  unint64_t result = qword_26932CC68;
  if (!qword_26932CC68)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26932CC68);
  }
  return result;
}

unint64_t sub_248830948()
{
  unint64_t result = qword_26932CC70;
  if (!qword_26932CC70)
  {
    sub_248830908();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CC70);
  }
  return result;
}

uint64_t sub_2488309A0()
{
  return swift_release();
}

uint64_t sub_2488309A8()
{
  type metadata accessor for BluetoothUtility();
  uint64_t v0 = swift_allocObject();
  uint64_t result = BluetoothUtility.init()();
  qword_26932CC78 = v0;
  return result;
}

uint64_t BluetoothUtility.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  BluetoothUtility.init()();
  return v0;
}

uint64_t static BluetoothUtility.shared.getter()
{
  if (qword_26932CA10 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t BluetoothUtility.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24887CAD8();
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = sub_24887CAE8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24887C688();
  MEMORY[0x270FA5388](v7 - 8);
  sub_248830D64();
  sub_24887C658();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8F138], v3);
  uint64_t v8 = MEMORY[0x263F8EE78];
  v15[1] = MEMORY[0x263F8EE78];
  sub_248830DA4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C20);
  sub_248830DFC();
  sub_24887CBE8();
  *(void *)(v0 + 16) = sub_24887CB18();
  uint64_t v9 = OBJC_IVAR____TtC18AudioAnalyticsBase16BluetoothUtility_logger;
  if (qword_26B143B78 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_24887C618();
  uint64_t v11 = __swift_project_value_buffer(v10, (uint64_t)qword_26B143B60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v1 + v9, v11, v10);
  *(void *)(v1 + OBJC_IVAR____TtC18AudioAnalyticsBase16BluetoothUtility_subscribers) = v8;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC18AudioAnalyticsBase16BluetoothUtility_isRegisteredForNotifications) = 0;
  uint64_t v12 = self;
  objc_msgSend(v12, sel_setSharedInstanceQueue_, *(void *)(v1 + 16));
  id v13 = objc_msgSend(v12, sel_sharedInstance);
  *(void *)(v1 + OBJC_IVAR____TtC18AudioAnalyticsBase16BluetoothUtility_bluetoothManager) = v13;
  return v1;
}

unint64_t sub_248830D64()
{
  unint64_t result = qword_26B143CA8;
  if (!qword_26B143CA8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B143CA8);
  }
  return result;
}

unint64_t sub_248830DA4()
{
  unint64_t result = qword_26B143CA0;
  if (!qword_26B143CA0)
  {
    sub_24887CAD8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B143CA0);
  }
  return result;
}

unint64_t sub_248830DFC()
{
  unint64_t result = qword_26B143C28;
  if (!qword_26B143C28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B143C20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B143C28);
  }
  return result;
}

Swift::Bool __swiftcall BluetoothUtility.isAvailable()()
{
  return sub_248830E88();
}

Swift::Bool __swiftcall BluetoothUtility.isEnabled()()
{
  return sub_248830E88();
}

uint64_t sub_248830E88()
{
  sub_24887CAF8();
  return v1;
}

uint64_t BluetoothUtility.withPairedDevices<A>(_:)()
{
  return sub_248830F2C();
}

uint64_t BluetoothUtility.withConnectedDevices<A>(_:)()
{
  return sub_248830F2C();
}

uint64_t sub_248830F2C()
{
  return sub_24887CAF8();
}

uint64_t sub_248830F6C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)(a3 + OBJC_IVAR____TtC18AudioAnalyticsBase16BluetoothUtility_bluetoothManager);
  if (v4 && (id v5 = objc_msgSend(v4, sel_connectedDevices)) != 0)
  {
    uint64_t v6 = v5;
    uint64_t v7 = sub_24887C988();
  }
  else
  {
    uint64_t v7 = 0;
  }
  a1(v7);
  return swift_bridgeObjectRelease();
}

uint64_t BluetoothUtility.startObservingFor(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(NSObject **)(v3 + 16);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v3;
  v7[3] = a1;
  v7[4] = a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_248831F3C;
  *(void *)(v8 + 24) = v7;
  v11[4] = sub_248831F58;
  v11[5] = v8;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  v11[2] = sub_248831454;
  v11[3] = &block_descriptor;
  uint64_t v9 = _Block_copy(v11);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v6) {
    __break(1u);
  }
  return result;
}

void sub_248831188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void **)(a1 + OBJC_IVAR____TtC18AudioAnalyticsBase16BluetoothUtility_subscribers);
  swift_beginAccess();
  uint64_t v7 = *v6;
  swift_unknownObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v6 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v7 = sub_248838690(0, v7[2] + 1, 1, v7);
    *uint64_t v6 = v7;
  }
  unint64_t v10 = v7[2];
  unint64_t v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    uint64_t v7 = sub_248838690((void *)(v9 > 1), v10 + 1, 1, v7);
    *uint64_t v6 = v7;
  }
  v7[2] = v10 + 1;
  uint64_t v11 = &v7[2 * v10];
  v11[4] = a2;
  v11[5] = a3;
  swift_endAccess();
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC18AudioAnalyticsBase16BluetoothUtility_isRegisteredForNotifications) & 1) == 0) {
    sub_248831354();
  }
  swift_retain();
  uint64_t v12 = sub_24887C5F8();
  os_log_type_t v13 = sub_24887CAA8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 134217984;
    sub_24887CB88();
    swift_release();
    _os_log_impl(&dword_248827000, v12, v13, "Number of bluetooth delegates incremented. { count=%ld }", v14, 0xCu);
    MEMORY[0x24C582D20](v14, -1, -1);
  }
  else
  {
    swift_release();
  }
}

void sub_248831354()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  if (qword_26932CA18 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_269331000;
  uint64_t v3 = *(void *)(qword_269331000 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v3; ++i)
    {
      uint64_t v5 = *(void *)(v2 + 8 * i + 32);
      objc_msgSend(v1, sel_addObserver_selector_name_object_, v0, sel_handleBluetoothManagerStateChangeWithNotification_, v5, 0);
    }

    swift_bridgeObjectRelease();
  }
  else
  {
  }
  *(unsigned char *)(v0 + OBJC_IVAR____TtC18AudioAnalyticsBase16BluetoothUtility_isRegisteredForNotifications) = 1;
}

uint64_t sub_248831454(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t BluetoothUtility.stopObservingFor(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(NSObject **)(v3 + 16);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v3;
  v7[3] = a1;
  v7[4] = a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_248831FC4;
  *(void *)(v8 + 24) = v7;
  v11[4] = sub_248832184;
  v11[5] = v8;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  v11[2] = sub_248831454;
  v11[3] = &block_descriptor_13;
  unint64_t v9 = _Block_copy(v11);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v6) {
    __break(1u);
  }
  return result;
}

void sub_2488315EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + OBJC_IVAR____TtC18AudioAnalyticsBase16BluetoothUtility_subscribers;
  swift_beginAccess();
  uint64_t v5 = *(void *)(*(void *)v4 + 16);
  if (!v5) {
    goto LABEL_7;
  }
  unint64_t v6 = 0;
  uint64_t v7 = (void *)(*(void *)v4 + 32);
  while (*v7 != a2)
  {
    ++v6;
    v7 += 2;
    if (v5 == v6) {
      goto LABEL_9;
    }
  }
  swift_beginAccess();
  sub_24883179C(v6);
  swift_endAccess();
  swift_unknownObjectRelease();
  if (!*(void *)(*(void *)v4 + 16))
  {
LABEL_7:
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtC18AudioAnalyticsBase16BluetoothUtility_isRegisteredForNotifications) == 1) {
      sub_24883187C();
    }
  }
LABEL_9:
  swift_retain();
  uint64_t v8 = sub_24887C5F8();
  os_log_type_t v9 = sub_24887CAA8();
  if (os_log_type_enabled(v8, v9))
  {
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v10 = 134217984;
    sub_24887CB88();
    swift_release();
    _os_log_impl(&dword_248827000, v8, v9, "Number of bluetooth delegates decremented. { count=%ld }", v10, 0xCu);
    MEMORY[0x24C582D20](v10, -1, -1);
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_24883179C(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_248874EEC(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t v7 = &v3[2 * a1];
      uint64_t v8 = v7[4];
      memmove(v7 + 4, v7 + 6, 16 * v6);
      v3[2] = v5;
      *id v1 = v3;
      return v8;
    }
  }
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

void sub_24883187C()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  if (qword_26932CA18 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_269331000;
  uint64_t v3 = *(void *)(qword_269331000 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v3; ++i)
    {
      uint64_t v5 = *(void *)(v2 + 8 * i + 32);
      objc_msgSend(v1, sel_removeObserver_name_object_, v0, v5, 0);
    }

    swift_bridgeObjectRelease();
  }
  else
  {
  }
  *(unsigned char *)(v0 + OBJC_IVAR____TtC18AudioAnalyticsBase16BluetoothUtility_isRegisteredForNotifications) = 0;
}

uint64_t sub_248831964()
{
  uint64_t v13 = MEMORY[0x263F8EE78];
  id v1 = *(NSObject **)(v0 + 16);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &v13;
  *(void *)(v2 + 24) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_24883216C;
  *(void *)(v3 + 24) = v2;
  aBlock[4] = sub_248832184;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_248831454;
  aBlock[3] = &block_descriptor_25;
  unint64_t v4 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = v13;
    uint64_t v7 = *(void *)(v13 + 16);
    if (v7)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = (uint64_t *)(v6 + 40);
      do
      {
        uint64_t v9 = *v8;
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
        swift_unknownObjectRetain();
        v11(ObjectType, v9);
        swift_unknownObjectRelease();
        v8 += 2;
        --v7;
      }
      while (v7);
      swift_bridgeObjectRelease();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_248831B4C(void *a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a2 + OBJC_IVAR____TtC18AudioAnalyticsBase16BluetoothUtility_subscribers);
  swift_beginAccess();
  *a1 = *v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

id sub_248831C98()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26932CCB0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24887E3D0;
  id v1 = (void *)*MEMORY[0x263F2B8E8];
  uint64_t v2 = (void *)*MEMORY[0x263F2B988];
  *(void *)(v0 + 32) = *MEMORY[0x263F2B8E8];
  *(void *)(v0 + 40) = v2;
  id v6 = (id)*MEMORY[0x263F2B900];
  *(void *)(v0 + 48) = *MEMORY[0x263F2B900];
  qword_269331000 = v0;
  id v3 = v1;
  id v4 = v2;
  return v6;
}

uint64_t BluetoothUtility.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18AudioAnalyticsBase16BluetoothUtility_logger;
  uint64_t v2 = sub_24887C618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t BluetoothUtility.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18AudioAnalyticsBase16BluetoothUtility_logger;
  uint64_t v2 = sub_24887C618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

id sub_248831E88@<X0>(unsigned char *a1@<X8>)
{
  return sub_248831EC8((SEL *)&selRef_available, a1);
}

id sub_248831EA8@<X0>(unsigned char *a1@<X8>)
{
  return sub_248831EC8((SEL *)&selRef_enabled, a1);
}

id sub_248831EC8@<X0>(SEL *a1@<X0>, unsigned char *a2@<X8>)
{
  if (*(void *)(v2 + OBJC_IVAR____TtC18AudioAnalyticsBase16BluetoothUtility_bluetoothManager)) {
    id result = [*(id *)(v2 + OBJC_IVAR____TtC18AudioAnalyticsBase16BluetoothUtility_bluetoothManager) *a1];
  }
  else {
    id result = 0;
  }
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_248831F18()
{
  return sub_248830F6C(*(void (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_248831F3C()
{
  sub_248831188(v0[2], v0[3], v0[4]);
}

uint64_t sub_248831F48()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_248831F58()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_248831FC4()
{
  sub_2488315EC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_248831FD0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t dispatch thunk of InterestestedInBluetoothStateChange.bluetoothManagerStateChanged()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_248831FF4()
{
  return type metadata accessor for BluetoothUtility();
}

uint64_t type metadata accessor for BluetoothUtility()
{
  uint64_t result = qword_26932CCA0;
  if (!qword_26932CCA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_248832048()
{
  uint64_t result = sub_24887C618();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for BluetoothUtility(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for BluetoothUtility);
}

uint64_t dispatch thunk of BluetoothUtility.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_248832134()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24883216C()
{
  return sub_248831B4C(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_248832174()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_248832190()
{
  return sub_248831F18();
}

uint64_t Collection.subscript.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v5 = &v14[-v4];
  sub_24887CA58();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  char v6 = sub_24887C908();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
  if (v6)
  {
    uint64_t v7 = (void (*)(unsigned char *, void))sub_24887CA78();
    uint64_t v9 = v8;
    uint64_t v10 = swift_getAssociatedTypeWitness();
    uint64_t v11 = *(void *)(v10 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a1, v9, v10);
    v7(v14, 0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
  }
  else
  {
    uint64_t v13 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 1, 1, v13);
  }
}

uint64_t Array.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (MEMORY[0x24C581CC0](a2, a3) <= a1)
  {
    uint64_t v6 = 1;
  }
  else
  {
    sub_24887C9F8();
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56);
  return v7(a4, v6, 1, a3);
}

uint64_t zip<A, B, C>(_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t *a7@<X8>, uint64_t a8)
{
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v30 = a1;
  uint64_t v35 = a7;
  uint64_t v27 = a8;
  uint64_t v52 = a3;
  uint64_t v53 = a4;
  uint64_t v54 = a6;
  uint64_t v55 = a8;
  uint64_t v11 = sub_24887CC58();
  uint64_t v26 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v26 - v12;
  uint64_t v33 = MEMORY[0x263F8DC68];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v52 = a2;
  uint64_t v53 = v11;
  uint64_t v54 = a5;
  uint64_t v55 = WitnessTable;
  uint64_t v32 = sub_24887CC58();
  uint64_t v34 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v31 = (char *)&v26 - v15;
  uint64_t v16 = v29;
  uint64_t v17 = v28;
  uint64_t v18 = v27;
  sub_24887CF78();
  sub_24887CF78();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v11);
  uint64_t v46 = a2;
  uint64_t v47 = a3;
  uint64_t v48 = v16;
  uint64_t v49 = a5;
  uint64_t v50 = v17;
  uint64_t v51 = v18;
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v39 = v16;
  uint64_t v40 = a5;
  uint64_t v41 = v17;
  uint64_t v42 = v18;
  char v43 = sub_248832BC0;
  os_log_type_t v44 = &v45;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = (char *)swift_getTupleTypeMetadata3();
  uint64_t v20 = v32;
  uint64_t v21 = swift_getWitnessTable();
  CFAllocatorRef v22 = v31;
  uint64_t v24 = sub_248832D7C((void (*)(char *, char *))sub_248832D44, (uint64_t)v36, v20, TupleTypeMetadata3, MEMORY[0x263F8E628], v21, MEMORY[0x263F8E658], v23);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v22, v20);
  *uint64_t v35 = v24;
  return result;
}

uint64_t sub_24883288C(uint64_t a1, uint64_t a2, char *a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v42 = a6;
  uint64_t v43 = a7;
  char v45 = a4;
  uint64_t v46 = a2;
  uint64_t v47 = a3;
  uint64_t v44 = a1;
  uint64_t v41 = a10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v14 = TupleTypeMetadata2 - 8;
  uint64_t v15 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v40 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v36 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v36 - v20;
  CFAllocatorRef v22 = (char *)&v36 + *(int *)(v14 + 56) - v20;
  uint64_t v23 = AssociatedTypeWitness;
  uint64_t v24 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v39((char *)&v36 - v20, a5, AssociatedTypeWitness);
  char v36 = v22;
  uint64_t v37 = v12;
  uint64_t v25 = *(void *)(v12 - 8);
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v38(v22, v42, v12);
  uint64_t v26 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v44, v45, v26);
  char v45 = &v19[*(int *)(v14 + 56)];
  uint64_t v27 = v45;
  v39(v19, (uint64_t)v21, v23);
  uint64_t v28 = v27;
  uint64_t v29 = v37;
  v38(v28, (uint64_t)v22, v37);
  uint64_t v30 = *(void (**)(uint64_t, char *, uint64_t))(v24 + 32);
  v30(v46, v19, v23);
  uint64_t v31 = *(int *)(v14 + 56);
  uint64_t v32 = v40;
  uint64_t v33 = &v40[v31];
  v30((uint64_t)v40, v21, v23);
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  v34(v33, v36, v29);
  v34(v47, v33, v29);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v32, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v45, v29);
}

uint64_t sub_248832BC0(uint64_t a1, uint64_t a2, char *a3, char *a4, uint64_t a5, uint64_t a6)
{
  return sub_24883288C(a1, a2, a3, a4, a5, a6, v6[2], v6[3], v6[4], v6[5]);
}

uint64_t sub_248832BF4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v6 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  uint64_t v7 = v6 + *(int *)(TupleTypeMetadata2 + 48);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  return a2(a3, a3 + *(int *)(TupleTypeMetadata3 + 48), a3 + *(int *)(TupleTypeMetadata3 + 64), a1, v6, v7);
}

uint64_t sub_248832D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_248832BF4(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 64), a2);
}

uint64_t sub_248832D7C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  unint64_t v59 = a4;
  uint64_t v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  uint64_t v55 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v53 = (char *)&v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_24887CB68();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v51 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v40 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v50 = *((void *)v15 - 1);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  uint64_t v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v30 = (char *)&v40 - v29;
  uint64_t v31 = sub_24887C8F8();
  uint64_t v61 = sub_24887CD08();
  uint64_t v56 = sub_24887CD18();
  sub_24887CCB8();
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  unint64_t v59 = v30;
  uint64_t result = sub_24887C8E8();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    uint64_t v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_24887CB78();
      uint64_t result = (*v33)(v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v23, AssociatedTypeWitness);
      sub_24887CCF8();
      if (!--v31)
      {
        uint64_t v35 = v54;
        char v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  char v36 = v51;
LABEL_9:
  sub_24887CB78();
  uint64_t v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    uint64_t v38 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_24887CCF8();
      sub_24887CB78();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

uint64_t zip<A, B, C, D>(_:_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t *a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v51 = a7;
  uint64_t v41 = a6;
  uint64_t v38 = a5;
  uint64_t v37 = a4;
  uint64_t v45 = a3;
  uint64_t v44 = a2;
  uint64_t v40 = a1;
  uint64_t v49 = a8;
  uint64_t v42 = a12;
  uint64_t v50 = a11;
  uint64_t AssociatedTypeWitness = a6;
  uint64_t v73 = a7;
  uint64_t v74 = a11;
  uint64_t v75 = a12;
  uint64_t v14 = sub_24887CC58();
  uint64_t v43 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v34 - v15;
  uint64_t AssociatedTypeWitness = a4;
  uint64_t v73 = a5;
  uint64_t v74 = a9;
  uint64_t v75 = a10;
  uint64_t v34 = a9;
  uint64_t v35 = a10;
  uint64_t v17 = sub_24887CC58();
  uint64_t v39 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v34 - v18;
  uint64_t v47 = MEMORY[0x263F8DC68];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v36 = WitnessTable;
  uint64_t v21 = swift_getWitnessTable();
  uint64_t AssociatedTypeWitness = v17;
  uint64_t v73 = v14;
  uint64_t v74 = WitnessTable;
  uint64_t v75 = v21;
  uint64_t v46 = sub_24887CC58();
  uint64_t v48 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v23 = (char *)&v34 - v22;
  uint64_t v24 = v37;
  uint64_t v25 = v38;
  sub_24887CF78();
  uint64_t v26 = v41;
  uint64_t v27 = v42;
  sub_24887CF78();
  sub_24887CF78();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v16, v14);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v17);
  uint64_t v64 = v24;
  uint64_t v65 = v25;
  uint64_t v66 = v26;
  uint64_t v67 = v51;
  uint64_t v68 = v34;
  uint64_t v69 = v35;
  uint64_t v70 = v50;
  uint64_t v71 = v27;
  uint64_t v53 = v24;
  uint64_t v54 = v25;
  uint64_t v55 = v26;
  uint64_t v56 = v51;
  uint64_t v57 = v34;
  uint64_t v58 = v35;
  uint64_t v59 = v50;
  uint64_t v60 = v27;
  uint64_t v61 = sub_248833F08;
  uint64_t v62 = &v63;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v73 = swift_getAssociatedTypeWitness();
  uint64_t v74 = swift_getAssociatedTypeWitness();
  uint64_t v75 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata = (char *)swift_getTupleTypeMetadata();
  uint64_t v29 = v46;
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v32 = sub_248832D7C((void (*)(char *, char *))sub_2488340F0, (uint64_t)v52, v29, TupleTypeMetadata, MEMORY[0x263F8E628], v30, MEMORY[0x263F8E658], v31);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v23, v29);
  *uint64_t v49 = v32;
  return result;
}

uint64_t sub_248833974(uint64_t a1, char *a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8)
{
  uint64_t v59 = a7;
  uint64_t v60 = a8;
  uint64_t v57 = a6;
  uint64_t v70 = a5;
  uint64_t v64 = a3;
  uint64_t v65 = a4;
  uint64_t v62 = a1;
  char v63 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v66 = swift_getAssociatedTypeWitness();
  uint64_t v67 = swift_getTupleTypeMetadata2() - 8;
  uint64_t v8 = MEMORY[0x270FA5388](v67);
  uint64_t v61 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v58 = (char *)&v50 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v50 - v12;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v17 = TupleTypeMetadata2 - 8;
  uint64_t v18 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v71 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v50 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v50 - v23;
  uint64_t v25 = (char *)&v50 + *(int *)(v17 + 56) - v23;
  uint64_t v72 = *(void *)(v14 - 8);
  uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 16);
  v51((char *)&v50 - v23, v70, v14);
  uint64_t v68 = v15;
  uint64_t v70 = *(void *)(v15 - 8);
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 16);
  v50(v25, v57, v15);
  uint64_t v26 = *(int *)(v67 + 56);
  uint64_t v55 = v13;
  uint64_t v27 = &v13[v26];
  uint64_t v57 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
  uint64_t v53 = v27;
  uint64_t v54 = v28;
  ((void (*)(char *, uint64_t))v28)(v13, v59);
  uint64_t v59 = *(void *)(v66 - 8);
  uint64_t v52 = *(void (**)(char *, char *))(v59 + 16);
  v52(v27, v60);
  uint64_t v60 = &v22[*(int *)(v17 + 56)];
  uint64_t v29 = v60;
  uint64_t v56 = v14;
  v51(v22, (uint64_t)v24, v14);
  uint64_t v30 = v29;
  uint64_t v31 = v68;
  v50(v30, (uint64_t)v25, v68);
  uint64_t v32 = *(void (**)(void))(v72 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v32)(v62, v22, v14);
  uint64_t v33 = &v71[*(int *)(v17 + 56)];
  v32();
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v70 + 32);
  v34(v33, v25, v31);
  v34(v63, v33, v31);
  uint64_t v35 = v67;
  uint64_t v36 = v58;
  char v63 = &v58[*(int *)(v67 + 56)];
  uint64_t v37 = v63;
  uint64_t v38 = v55;
  uint64_t v39 = AssociatedTypeWitness;
  v54(v58, v55, AssociatedTypeWitness);
  uint64_t v40 = v37;
  uint64_t v41 = v53;
  uint64_t v42 = v66;
  ((void (*)(char *, char *, uint64_t))v52)(v40, v53, v66);
  uint64_t v43 = v57;
  uint64_t v44 = *(void (**)(uint64_t, char *, uint64_t))(v57 + 32);
  v44(v64, v36, v39);
  uint64_t v45 = v61;
  uint64_t v46 = &v61[*(int *)(v35 + 56)];
  v44((uint64_t)v61, v38, v39);
  uint64_t v47 = v59;
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
  v48(v46, v41, v42);
  v48(v65, v46, v42);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v39);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v63, v42);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v56);
  return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v60, v68);
}

uint64_t sub_248833F08(uint64_t a1, char *a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8)
{
  return sub_248833974(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_248833F40@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v10 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v6 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  uint64_t v7 = v6 + *(int *)(TupleTypeMetadata2 + 48);
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return a2(a3, a3 + TupleTypeMetadata[12], a3 + TupleTypeMetadata[16], a3 + TupleTypeMetadata[20], a1, v10, v6, v7);
}

uint64_t sub_2488340F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_248833F40(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 80), a2);
}

uint64_t sub_248834134()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata3();
  sub_24887C9D8();
  return swift_getWitnessTable();
}

uint64_t sub_24883421C()
{
  return swift_getWitnessTable();
}

uint64_t Config.__allocating_init(configPath:allowUnknownFields:platform:encrypted:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5, char a6)
{
  return Config.init(configPath:allowUnknownFields:platform:encrypted:)(a1, a2, a3, a4, a5, a6);
}

uint64_t Config.init(configPath:allowUnknownFields:platform:encrypted:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5, char a6)
{
  unint64_t v7 = v6;
  LOBYTE(v6) = a6;
  uint64_t v127 = *MEMORY[0x263EF8340];
  *(void *)(v7 + 264) = MEMORY[0x263F8EE88];
  unint64_t v11 = v7 + OBJC_IVAR____TtC18AudioAnalyticsBase6Config_logger;
  if (qword_26B143AF8 != -1) {
LABEL_79:
  }
    swift_once();
  uint64_t v12 = sub_24887C618();
  uint64_t v13 = __swift_project_value_buffer(v12, (uint64_t)qword_26B143AE0);
  uint64_t v14 = *(void *)(v12 - 8);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 16))(v11, v13, v12);
  id v15 = objc_msgSend(self, sel_defaultManager);
  uint64_t v97 = a1;
  uint64_t v16 = (void *)sub_24887C738();
  id v17 = objc_msgSend(v15, sel_contentsAtPath_, v16);

  unint64_t v111 = v11;
  uint64_t v106 = v14;
  uint64_t v107 = v12;
  unint64_t v108 = a2;
  if (!v17)
  {
    swift_bridgeObjectRelease();
    sub_24882C828();
    uint64_t v21 = (long long *)swift_allocError();
    *(void *)uint64_t v22 = 0;
    *(void *)(v22 + 8) = 0;
    *(unsigned char *)(v22 + 16) = 7;
    swift_willThrow();
LABEL_46:
    char v53 = 0;
    int v54 = 0;
    int v99 = 0;
    int v101 = 0;
    int v103 = 0;
    int v105 = 0;
    int v113 = 0;
    int v115 = 0;
    int v116 = 0;
LABEL_47:
    swift_getErrorValue();
    uint64_t v55 = sub_24887CFA8();
    uint64_t v57 = v56;
    swift_beginAccess();
    qword_26B143838 = v55;
    qword_26B143840 = v57;
    swift_bridgeObjectRelease();
    uint64_t v58 = v21;
    swift_bridgeObjectRetain();
    uint64_t v59 = v21;
    uint64_t v60 = sub_24887C5F8();
    os_log_type_t v61 = sub_24887CAB8();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = swift_slowAlloc();
      char v110 = v53;
      int v63 = v54;
      uint64_t v64 = swift_slowAlloc();
      *(void *)&long long v122 = v64;
      *(_DWORD *)uint64_t v62 = 136380931;
      swift_bridgeObjectRetain();
      *(void *)v121 = sub_24882CAE0(v97, v108, (uint64_t *)&v122);
      sub_24887CB88();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v62 + 12) = 2081;
      swift_getErrorValue();
      uint64_t v65 = sub_24887CFA8();
      *(void *)v121 = sub_24882CAE0(v65, v66, (uint64_t *)&v122);
      sub_24887CB88();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_248827000, v60, v61, "Failed in loadConfig. { configPath=%{private}s, error=%{private}s }", (uint8_t *)v62, 0x16u);
      swift_arrayDestroy();
      uint64_t v67 = v64;
      int v54 = v63;
      MEMORY[0x24C582D20](v67, -1, -1);
      MEMORY[0x24C582D20](v62, -1, -1);

      if ((v110 & 1) == 0) {
        goto LABEL_50;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      if ((v53 & 1) == 0)
      {
LABEL_50:
        if (v54)
        {
          swift_bridgeObjectRelease();
          if (!v99) {
            goto LABEL_52;
          }
        }
        else if (!v99)
        {
LABEL_52:
          if (!v101) {
            goto LABEL_54;
          }
          goto LABEL_53;
        }
        swift_bridgeObjectRelease();
        if (!v101)
        {
LABEL_54:
          if (v105)
          {
            swift_bridgeObjectRelease();
            if (!v113) {
              goto LABEL_56;
            }
          }
          else if (!v113)
          {
LABEL_56:
            if (v115) {
              goto LABEL_57;
            }
            goto LABEL_65;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v115)
          {
LABEL_57:
            swift_bridgeObjectRelease();
            if (!v116) {
              goto LABEL_58;
            }
            goto LABEL_66;
          }
LABEL_65:
          if (!v116)
          {
LABEL_58:
            if (v103)
            {
LABEL_59:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v106 + 8))(v111, v107);
              swift_bridgeObjectRelease();
LABEL_68:
              swift_deallocPartialClassInstance();
              return 0;
            }
LABEL_67:
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v106 + 8))(v111, v107);
            goto LABEL_68;
          }
LABEL_66:
          swift_bridgeObjectRelease();
          if (v103) {
            goto LABEL_59;
          }
          goto LABEL_67;
        }
LABEL_53:
        swift_bridgeObjectRelease();
        goto LABEL_54;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_50;
  }
  unint64_t v102 = a5;
  uint64_t v18 = sub_24887C568();
  unint64_t v20 = v19;

  uint64_t v104 = v18;
  if (v6)
  {
    uint64_t v51 = (__SecKey *)sub_24884AFAC(0xD000000000000084, 0x8000000248882190, (uint8_t *)1);
    uint64_t v70 = sub_24884B3AC(v51);
    unint64_t v72 = v71;
  }
  else
  {
    sub_248838E5C(v18, v20);
    uint64_t v70 = (uint8_t *)v18;
    unint64_t v72 = v20;
  }
  unint64_t v96 = v72;
  uint64_t v23 = self;
  uint64_t v24 = (uint64_t)v70;
  uint64_t v25 = (void *)sub_24887C548();
  *(void *)v117 = 0;
  id v26 = objc_msgSend(v23, sel_propertyListWithData_options_format_error_, v25, 0, 0, v117);

  if (!v26)
  {
    id v50 = *(id *)v117;
    swift_bridgeObjectRelease();
    uint64_t v21 = (long long *)sub_24887C488();

    swift_willThrow();
    sub_248838EB4(v104, v20);
    sub_248838EB4(v24, v96);
    goto LABEL_46;
  }
  uint64_t v94 = v24;
  unint64_t v95 = v20;
  id v27 = *(id *)v117;
  sub_24887CBD8();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B143BD8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_24882C828();
    uint64_t v21 = (long long *)swift_allocError();
    *(_OWORD *)uint64_t v52 = xmmword_24887E480;
    *(unsigned char *)(v52 + 16) = 7;
    swift_willThrow();
    sub_248838EB4(v104, v20);
    sub_248838EB4(v24, v96);
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  a1 = v124;
  *(void *)(v7 + OBJC_IVAR____TtC18AudioAnalyticsBase6Config_plist) = v124;
  *(void *)(v7 + 248) = v97;
  *(void *)(v7 + 256) = a2;
  unint64_t v109 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_24882B808(MEMORY[0x263F8EE78]);
  uint64_t v112 = a1 + 64;
  uint64_t v28 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v29 = -1;
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  unint64_t v7 = v29 & *(void *)(a1 + 64);
  int64_t v114 = (unint64_t)(v28 + 63) >> 6;
  uint64_t v21 = &v125;
  uint64_t v30 = swift_bridgeObjectRetain();
  a2 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v32 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v33 = v32 | (a2 << 6);
    }
    else
    {
      BOOL v34 = __OFADD__(a2++, 1);
      if (v34) {
        goto LABEL_75;
      }
      if (a2 >= v114)
      {
        unint64_t v7 = v109;
LABEL_73:
        a2 = v104;
        swift_release();
        swift_bridgeObjectRelease();
        *(void *)&long long v124 = v6;
        *((void *)&v124 + 1) = v97;
        *(void *)&long long v125 = v108;
        *((void *)&v125 + 1) = a4;
        *(void *)&long long v126 = v102;
        BYTE8(v126) = a3 & 1;
        swift_bridgeObjectRetain();
        *(void *)(v7 + 96) = sub_248862168((uint64_t *)&v124);
        *(void *)(v7 + 104) = sub_24887131C((uint64_t *)&v124);
        *(void *)(v7 + 112) = sub_248873264((uint64_t *)&v124);
        *(void *)(v7 + 120) = sub_24884C5C8((uint64_t *)&v124);
        uint64_t v30 = sub_24882DFA0((uint64_t *)&v124);
        uint64_t v21 = 0;
        goto LABEL_76;
      }
      unint64_t v35 = *(void *)(v112 + 8 * a2);
      unint64_t v7 = v109;
      if (!v35)
      {
        uint64_t v36 = a2 + 1;
        if (a2 + 1 >= v114) {
          goto LABEL_73;
        }
        unint64_t v35 = *(void *)(v112 + 8 * v36);
        if (!v35)
        {
          uint64_t v36 = a2 + 2;
          if (a2 + 2 >= v114) {
            goto LABEL_73;
          }
          unint64_t v35 = *(void *)(v112 + 8 * v36);
          if (!v35)
          {
            uint64_t v36 = a2 + 3;
            if (a2 + 3 >= v114) {
              goto LABEL_73;
            }
            unint64_t v35 = *(void *)(v112 + 8 * v36);
            if (!v35)
            {
              uint64_t v36 = a2 + 4;
              if (a2 + 4 >= v114) {
                goto LABEL_73;
              }
              unint64_t v35 = *(void *)(v112 + 8 * v36);
              if (!v35)
              {
                while (1)
                {
                  a2 = v36 + 1;
                  if (__OFADD__(v36, 1)) {
                    break;
                  }
                  if (a2 >= v114) {
                    goto LABEL_73;
                  }
                  unint64_t v35 = *(void *)(v112 + 8 * a2);
                  ++v36;
                  if (v35) {
                    goto LABEL_29;
                  }
                }
                __break(1u);
                goto LABEL_82;
              }
            }
          }
        }
        a2 = v36;
      }
LABEL_29:
      unint64_t v7 = (v35 - 1) & v35;
      unint64_t v33 = __clz(__rbit64(v35)) + (a2 << 6);
    }
    uint64_t v37 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v33);
    uint64_t v39 = *v37;
    uint64_t v38 = v37[1];
    sub_24882E1C8(*(void *)(a1 + 56) + 32 * v33, (uint64_t)&v117[16]);
    *(void *)v117 = v39;
    *(void *)&v117[8] = v38;
    long long v124 = *(_OWORD *)v117;
    long long v125 = *(_OWORD *)&v117[16];
    long long v126 = *(_OWORD *)&v117[32];
    Swift::String v40 = *(Swift::String *)v117;
    long long v122 = *(_OWORD *)v117;
    sub_24882E1C8((uint64_t)&v125, (uint64_t)v123);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    ConfigSection.init(rawValue:)(v40);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v123);
    unsigned __int8 v41 = v121[0];
    if (v121[0] != 10) {
      break;
    }
LABEL_14:
    uint64_t v30 = sub_248838F0C((uint64_t)&v124);
  }
  long long v122 = v124;
  sub_24882E1C8((uint64_t)&v125, (uint64_t)v123);
  sub_24882D9E4(v123, v121);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  a5 = sub_248840EC8(v41);
  uint64_t v44 = *(void *)(v6 + 16);
  BOOL v45 = (v43 & 1) == 0;
  uint64_t v30 = v44 + v45;
  if (!__OFADD__(v44, v45))
  {
    unint64_t v11 = v43;
    if (*(void *)(v6 + 24) >= v30)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_24883A300();
      }
    }
    else
    {
      sub_24883984C(v30, isUniquelyReferenced_nonNull_native);
      unint64_t v46 = sub_248840EC8(v41);
      if ((v40._countAndFlagsBits & 1) != (v47 & 1))
      {
        uint64_t result = sub_24887CF98();
        __break(1u);
        return result;
      }
      a5 = v46;
    }
    if (v11)
    {
      uint64_t v31 = (_OWORD *)(*(void *)(v6 + 56) + 32 * a5);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
      sub_24882D9E4(v121, v31);
    }
    else
    {
      *(void *)(v6 + 8 * (a5 >> 6) + 64) |= 1 << a5;
      *(unsigned char *)(*(void *)(v6 + 48) + a5) = v41;
      sub_24882D9E4(v121, (_OWORD *)(*(void *)(v6 + 56) + 32 * a5));
      uint64_t v48 = *(void *)(v6 + 16);
      BOOL v34 = __OFADD__(v48, 1);
      uint64_t v49 = v48 + 1;
      if (v34)
      {
        __break(1u);
        goto LABEL_79;
      }
      *(void *)(v6 + 16) = v49;
    }
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  *(void *)(v7 + 216) = v30;
  sub_248862374((char *)&v124, (uint64_t)v117);
  if (v21)
  {
    sub_248838EB4(a2, v20);
    sub_248838EB4(v94, v96);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v53 = 0;
    int v113 = 0;
    int v116 = 0;
    int v54 = 1;
    int v99 = 1;
    int v101 = 1;
    int v105 = 1;
    int v115 = 1;
    int v103 = 1;
    goto LABEL_47;
  }
  char v73 = v117[2];
  uint64_t v74 = *(void *)&v117[40];
  uint64_t v75 = v120;
  *(_WORD *)(v7 + 128) = *(_WORD *)v117;
  *(unsigned char *)(v7 + 130) = v73;
  *(_OWORD *)(v7 + 136) = *(_OWORD *)&v117[8];
  *(_OWORD *)(v7 + 152) = *(_OWORD *)&v117[24];
  *(void *)(v7 + 168) = v74;
  long long v76 = v119;
  *(_OWORD *)(v7 + 176) = v118;
  *(_OWORD *)(v7 + 192) = v76;
  *(void *)(v7 + 208) = v75;
  *(void *)(v7 + 224) = sub_24887733C((uint64_t *)&v124);
  sub_248863DC8((uint64_t *)&v124, (uint64_t)v117);
  uint64_t v21 = 0;
LABEL_82:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v77 = v117[2];
  uint64_t v78 = *(void *)&v117[40];
  char v79 = v118;
  uint64_t v80 = *((void *)&v118 + 1);
  char v81 = v119;
  uint64_t v82 = *((void *)&v119 + 1);
  *(_WORD *)(v7 + 16) = *(_WORD *)v117;
  *(unsigned char *)(v7 + 18) = v77;
  *(_OWORD *)(v7 + 24) = *(_OWORD *)&v117[8];
  *(_OWORD *)(v7 + 40) = *(_OWORD *)&v117[24];
  *(void *)(v7 + 56) = v78;
  *(unsigned char *)(v7 + 64) = v79;
  *(void *)(v7 + 72) = v80;
  *(unsigned char *)(v7 + 80) = v81;
  *(void *)(v7 + 88) = v82;
  uint64_t v83 = swift_bridgeObjectRetain();
  uint64_t v84 = sub_24883E244(v83);
  if (v21)
  {
    sub_248838EB4(a2, v20);
    sub_248838EB4(v94, v96);
    swift_bridgeObjectRelease();
    char v53 = 1;
    int v54 = 1;
    int v99 = 1;
    int v101 = 1;
    int v103 = 1;
    int v105 = 1;
    int v113 = 1;
    int v115 = 1;
    int v116 = 1;
    goto LABEL_47;
  }
  uint64_t v86 = v84;
  uint64_t v87 = v85;
  swift_bridgeObjectRelease();
  *(void *)(v109 + 232) = v86;
  *(void *)(v109 + 240) = v87;
  swift_beginAccess();
  *(void *)aUnknown_0 = v86;
  qword_26B143830 = v87;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v88 = sub_24887C5F8();
  os_log_type_t v89 = sub_24887CAA8();
  if (os_log_type_enabled(v88, v89))
  {
    uint64_t v90 = swift_slowAlloc();
    uint64_t v91 = swift_slowAlloc();
    *(void *)&long long v122 = v91;
    *(_DWORD *)uint64_t v90 = 136380931;
    swift_bridgeObjectRetain();
    *(void *)v121 = sub_24882CAE0(v97, v108, (uint64_t *)&v122);
    sub_24887CB88();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v90 + 12) = 2081;
    unint64_t v68 = v109;
    uint64_t v92 = *(void *)(v109 + 232);
    unint64_t v93 = *(void *)(v109 + 240);
    swift_bridgeObjectRetain();
    *(void *)v121 = sub_24882CAE0(v92, v93, (uint64_t *)&v122);
    sub_24887CB88();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_248827000, v88, v89, "Config loaded. { configPath=%{private}s, configVersion=%{private}s }", (uint8_t *)v90, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C582D20](v91, -1, -1);
    MEMORY[0x24C582D20](v90, -1, -1);
    sub_248838EB4(a2, v95);
    sub_248838EB4(v94, v96);
  }
  else
  {
    sub_248838EB4(a2, v95);
    sub_248838EB4(v94, v96);
    unint64_t v68 = v109;
    swift_release_n();
    swift_bridgeObjectRelease_n();
  }

  return v68;
}

AudioAnalyticsBase::ConfigSection_optional __swiftcall ConfigSection.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_24887CDA8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 10;
  if (v3 < 0xA) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_248835674(char a1, uint64_t a2)
{
  uint64_t v3 = 0xD000000000000014;
  unint64_t v4 = 0x8000000248881C00;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0xD00000000000001CLL;
      unint64_t v6 = "keepUniqueValueSummaryFields";
      goto LABEL_8;
    case 2:
      unint64_t v4 = 0x8000000248881C40;
      uint64_t v3 = 0xD000000000000010;
      goto LABEL_4;
    case 3:
      uint64_t v3 = 0xD000000000000015;
      unint64_t v6 = "preserveSummaryFields";
      goto LABEL_8;
    case 4:
      uint64_t v3 = 0xD000000000000013;
      unint64_t v6 = "sampleByServiceType";
LABEL_8:
      unint64_t v4 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      if (*(void *)(a2 + 16)) {
        goto LABEL_9;
      }
      goto LABEL_11;
    default:
LABEL_4:
      if (!*(void *)(a2 + 16)) {
        goto LABEL_11;
      }
LABEL_9:
      unint64_t v7 = sub_248840E50(v3, v4);
      if (v8) {
        sub_24882E1C8(*(void *)(a2 + 56) + 32 * v7, (uint64_t)v11);
      }
      else {
LABEL_11:
      }
        memset(v11, 0, sizeof(v11));
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C10);
      if (swift_dynamicCast())
      {
        uint64_t v9 = v12;
        if (v12) {
          return v9;
        }
      }
      else
      {
        uint64_t v12 = 0;
      }
      uint64_t v9 = sub_24883753C(a1);
      swift_bridgeObjectRelease();
      return v9;
  }
}

uint64_t sub_248835834(char a1, uint64_t a2)
{
  uint64_t v3 = 0xD000000000000014;
  unint64_t v4 = 0x8000000248881C00;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0xD00000000000001CLL;
      unint64_t v6 = "keepUniqueValueSummaryFields";
      goto LABEL_8;
    case 2:
      unint64_t v4 = 0x8000000248881C40;
      uint64_t v3 = 0xD000000000000010;
      goto LABEL_4;
    case 3:
      uint64_t v3 = 0xD000000000000015;
      unint64_t v6 = "preserveSummaryFields";
      goto LABEL_8;
    case 4:
      uint64_t v3 = 0xD000000000000013;
      unint64_t v6 = "sampleByServiceType";
LABEL_8:
      unint64_t v4 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      if (*(void *)(a2 + 16)) {
        goto LABEL_9;
      }
      goto LABEL_11;
    default:
LABEL_4:
      if (!*(void *)(a2 + 16)) {
        goto LABEL_11;
      }
LABEL_9:
      unint64_t v7 = sub_248840E50(v3, v4);
      if (v8) {
        sub_24882E1C8(*(void *)(a2 + 56) + 32 * v7, (uint64_t)v11);
      }
      else {
LABEL_11:
      }
        memset(v11, 0, sizeof(v11));
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC8);
      if (swift_dynamicCast()) {
        return v10;
      }
      else {
        return sub_24883753C(a1);
      }
  }
}

uint64_t sub_2488359C8(unsigned __int8 a1, uint64_t a2)
{
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0xD000000000000014;
    }
    else {
      uint64_t v5 = 0xD000000000000012;
    }
    if (v4 == 1) {
      uint64_t v6 = 0x8000000248881CC0;
    }
    else {
      uint64_t v6 = 0x8000000248881CE0;
    }
    if (!*(void *)(a2 + 16)) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v5 = 0xD000000000000018;
    uint64_t v6 = 0x8000000248881CA0;
    if (!*(void *)(a2 + 16)) {
      goto LABEL_13;
    }
  }
  unint64_t v7 = sub_248840E50(v5, v6);
  if (v8)
  {
    sub_24882E1C8(*(void *)(a2 + 56) + 32 * v7, (uint64_t)v11);
    goto LABEL_14;
  }
LABEL_13:
  memset(v11, 0, sizeof(v11));
LABEL_14:
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    char v12 = 2;
    goto LABEL_18;
  }
  if (v12 == 2)
  {
LABEL_18:
    char v9 = sub_248837818(a1);
    return v9 & 1;
  }
  char v9 = v12 & 1;
  return v9 & 1;
}

uint64_t sub_248835B10(char a1, uint64_t a2)
{
  unint64_t v5 = sub_24886F410(a1);
  if (*(void *)(a2 + 16) && (unint64_t v7 = sub_248840E50(v5, v6), (v8 & 1) != 0)) {
    sub_24882E1C8(*(void *)(a2 + 56) + 32 * v7, (uint64_t)v13);
  }
  else {
    memset(v13, 0, sizeof(v13));
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC8);
  if ((swift_dynamicCast() & 1) != 0 && v12) {
    return v11;
  }
  uint64_t v9 = sub_248837F20(a1);
  if (!v2) {
    a2 = v9;
  }
  swift_bridgeObjectRelease();
  return a2;
}

uint64_t sub_248835C18(char a1, uint64_t a2)
{
  unint64_t v4 = sub_24886F410(a1);
  if (*(void *)(a2 + 16) && (unint64_t v6 = sub_248840E50(v4, v5), (v7 & 1) != 0)) {
    sub_24882E1C8(*(void *)(a2 + 56) + 32 * v6, (uint64_t)v9);
  }
  else {
    memset(v9, 0, sizeof(v9));
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC8);
  uint64_t result = swift_dynamicCast();
  if (!result) {
    return sub_248837CDC(a1);
  }
  return result;
}

uint64_t sub_248835CFC(char a1, uint64_t a2, uint64_t a3)
{
  return sub_248835D74(a1, a2, a3, (uint64_t *)&unk_26B143BD8);
}

uint64_t sub_248835D34(char a1, uint64_t a2, uint64_t a3)
{
  return sub_248835D74(a1, a2, a3, &qword_26B143C10);
}

uint64_t sub_248835D74(char a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v7 = sub_24886F410(a1);
  if (*(void *)(a2 + 16) && (unint64_t v9 = sub_248840E50(v7, v8), (v10 & 1) != 0)) {
    sub_24882E1C8(*(void *)(a2 + 56) + 32 * v9, (uint64_t)v14);
  }
  else {
    memset(v14, 0, sizeof(v14));
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC8);
  __swift_instantiateConcreteTypeFromMangledName(a4);
  if ((swift_dynamicCast() & 1) == 0 || (uint64_t v11 = v13) == 0)
  {
    uint64_t v11 = sub_248837A90(a1);
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_248835E88(char a1, uint64_t a2)
{
  uint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x6570795461746164;
  uint64_t v6 = a2;
  switch(a1)
  {
    case 1:
      uint64_t v4 = 0xEC00000065756C61;
      uint64_t v5 = 0x56746C7561666564;
      if (*(void *)(a2 + 16)) {
        goto LABEL_10;
      }
      goto LABEL_13;
    case 2:
      uint64_t v4 = 0xE600000000000000;
      uint64_t v5 = 0x6E69616D6F64;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_13;
      }
      goto LABEL_10;
    case 3:
      uint64_t v4 = 0xE400000000000000;
      uint64_t v5 = 1701667182;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_13;
      }
      goto LABEL_10;
    case 4:
      uint64_t v4 = 0xEC0000006E6F6974;
      uint64_t v5 = 0x6163696669746F6ELL;
      goto LABEL_9;
    case 5:
      uint64_t v4 = 0xE400000000000000;
      uint64_t v5 = 1701869940;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_13;
      }
      goto LABEL_10;
    default:
LABEL_9:
      if (!*(void *)(a2 + 16)) {
        goto LABEL_13;
      }
LABEL_10:
      unint64_t v7 = sub_248840E50(v5, v4);
      if (v8) {
        sub_24882E1C8(*(void *)(v6 + 56) + 32 * v7, (uint64_t)v13);
      }
      else {
LABEL_13:
      }
        memset(v13, 0, sizeof(v13));
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC8);
      if ((swift_dynamicCast() & 1) != 0 && v12) {
        return v11;
      }
      uint64_t v9 = sub_248838164(a1);
      if (!v2) {
        uint64_t v6 = v9;
      }
      swift_bridgeObjectRelease();
      return v6;
  }
}

uint64_t Config.__allocating_init(baseConfig:routerConfigs:summaryConfigs:systemMonitorConfigs:ioReportingConfigs:rtcConfig:serverConfig:neededPreviousFields:abcConfigs:tailspinConfigs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t *a6, unint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  swift_allocObject();
  uint64_t v17 = sub_24883E348(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  swift_release();
  return v17;
}

uint64_t Config.init(baseConfig:routerConfigs:summaryConfigs:systemMonitorConfigs:ioReportingConfigs:rtcConfig:serverConfig:neededPreviousFields:abcConfigs:tailspinConfigs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t *a6, unint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10 = sub_24883E348(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  swift_release();
  return v10;
}

uint64_t static Config.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 232) == *(void *)(a2 + 232) && *(void *)(a1 + 240) == *(void *)(a2 + 240)) {
    return 1;
  }
  else {
    return sub_24887CF48();
  }
}

uint64_t static Config.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 232) == *(void *)(a2 + 232) && *(void *)(a1 + 240) == *(void *)(a2 + 240)) {
    return 0;
  }
  else {
    return sub_24887CF48();
  }
}

void sub_2488361BC()
{
  type metadata accessor for Config();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = (void *)sub_24887C738();
  uint64_t v3 = (void *)sub_24887C738();
  id v4 = objc_msgSend(v1, sel_pathForResource_ofType_, v2, v3);

  if (v4)
  {
    uint64_t v5 = sub_24887C768();
    unint64_t v7 = v6;
  }
  else
  {
    unint64_t v7 = 0xE700000000000000;
    uint64_t v5 = 0x6E776F6E6B6E75;
  }
  qword_26B142FF0 = v5;
  unk_26B142FF8 = v7;
}

uint64_t static Config.defaultConfigPathEncrypted.getter()
{
  return sub_2488366CC(&qword_26B143810, &qword_26B142FF0);
}

Swift::Void __swiftcall Config.updateNeededPreviousFields(workers:)(Swift::OpaquePointer workers)
{
  uint64_t v2 = v1;
  uint64_t v3 = *((void *)workers._rawValue + 2);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = (void *)MEMORY[0x263F8EE78];
    uint64_t v6 = 32;
    do
    {
      uint64_t v8 = *(void *)((char *)workers._rawValue + v6);
      uint64_t v9 = swift_conformsToProtocol2();
      if (v9) {
        uint64_t v10 = v8;
      }
      else {
        uint64_t v10 = 0;
      }
      if (v9) {
        uint64_t v11 = v9;
      }
      else {
        uint64_t v11 = 0;
      }
      if (v10)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_2488388E4(0, v5[2] + 1, 1, v5, &qword_26B143120, (void (*)(void, int64_t, void *, void *))sub_24883EE30);
        }
        unint64_t v13 = v5[2];
        unint64_t v12 = v5[3];
        if (v13 >= v12 >> 1) {
          uint64_t v5 = sub_2488388E4((void *)(v12 > 1), v13 + 1, 1, v5, &qword_26B143120, (void (*)(void, int64_t, void *, void *))sub_24883EE30);
        }
        v5[2] = v13 + 1;
        unint64_t v7 = &v5[2 * v13];
        v7[4] = v10;
        v7[5] = v11;
      }
      v6 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v24 = MEMORY[0x263F8EE88];
  uint64_t v22 = v5[2];
  if (v22)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v22; ++i)
    {
      uint64_t v15 = (*(uint64_t (**)(uint64_t))(v5[2 * i + 5] + 8))(v2);
      swift_retain();
      uint64_t v16 = sub_24883DC88(v15, v2);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v17 = *(void *)(v16 + 16);
      if (v17)
      {
        uint64_t v18 = (uint64_t *)(v16 + 40);
        do
        {
          uint64_t v19 = *(v18 - 1);
          uint64_t v20 = *v18;
          swift_bridgeObjectRetain();
          sub_24883A68C(&v23, v19, v20);
          swift_bridgeObjectRelease();
          v18 += 2;
          --v17;
        }
        while (v17);
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease_n();
    uint64_t v21 = v24;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = MEMORY[0x263F8EE88];
  }
  swift_beginAccess();
  *(void *)(v2 + 264) = v21;
  swift_bridgeObjectRelease();
}

uint64_t sub_248836564()
{
  uint64_t v0 = sub_24887C518();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1439E8 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v0, (uint64_t)qword_26B143018);
  sub_24887C4D8();
  uint64_t v4 = sub_24887C4F8();
  uint64_t v6 = v5;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_26B1437F8 = v4;
  unk_26B143800 = v6;
  return result;
}

uint64_t static Config.assetConfigPath.getter()
{
  return sub_2488366CC(&qword_26B143808, &qword_26B1437F8);
}

uint64_t sub_2488366CC(void *a1, uint64_t *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

unint64_t static Config.distributedConfigName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t static Config.lastErrorMessage.getter()
{
  swift_beginAccess();
  uint64_t v0 = qword_26B143838;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static Config.lastErrorMessage.setter(uint64_t a1, uint64_t a2)
{
  qword_26B143838 = a1;
  qword_26B143840 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static Config.lastErrorMessage.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t Config.serverConfig.getter@<X0>(uint64_t a1@<X8>)
{
  __int16 v2 = *(_WORD *)(v1 + 16);
  char v3 = *(unsigned char *)(v1 + 18);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  char v9 = *(unsigned char *)(v1 + 64);
  uint64_t v10 = *(void *)(v1 + 72);
  char v11 = *(unsigned char *)(v1 + 80);
  uint64_t v12 = *(void *)(v1 + 88);
  *(_WORD *)a1 = v2;
  *(unsigned char *)(a1 + 2) = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Config.routerConfigs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Config.summaryConfigs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Config.systemMonitorConfigs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Config.ioReportingConfigs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Config.rtcConfig.getter@<X0>(uint64_t a1@<X8>)
{
  __int16 v2 = *(_WORD *)(v1 + 128);
  char v3 = *(unsigned char *)(v1 + 130);
  uint64_t v4 = *(void *)(v1 + 136);
  uint64_t v5 = *(void *)(v1 + 144);
  uint64_t v6 = *(void *)(v1 + 152);
  uint64_t v7 = *(void *)(v1 + 160);
  uint64_t v8 = *(void *)(v1 + 168);
  uint64_t v9 = *(void *)(v1 + 176);
  uint64_t v10 = *(void *)(v1 + 184);
  uint64_t v11 = *(void *)(v1 + 192);
  uint64_t v12 = *(void *)(v1 + 200);
  uint64_t v13 = *(void *)(v1 + 208);
  *(_WORD *)a1 = v2;
  *(unsigned char *)(a1 + 2) = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Config.abcConfigs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Config.tailspinConfigs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Config.sortableConfigVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 232);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static Config.configVersion.getter()
{
  swift_beginAccess();
  uint64_t v0 = *(void *)aUnknown_0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static Config.configVersion.setter(uint64_t a1, uint64_t a2)
{
  *(void *)aUnknown_0 = a1;
  qword_26B143830 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static Config.configVersion.modify())()
{
  return j__swift_endAccess;
}

uint64_t Config.configPath.getter()
{
  uint64_t v1 = *(void *)(v0 + 248);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Config.WorkerConfigs.messageProcessOrder.getter()
{
  return byte_24887E81E[*v0];
}

uint64_t Config.WorkerConfigs.stopOrder.getter()
{
  return byte_24887E82F[*v0];
}

AudioAnalyticsBase::Config::WorkerConfigs_optional __swiftcall Config.WorkerConfigs.init(rawValue:)(Swift::String rawValue)
{
  __int16 v2 = v1;
  unint64_t v3 = sub_24887CF58();
  result.value = swift_bridgeObjectRelease();
  char v5 = 17;
  if (v3 < 0x11) {
    char v5 = v3;
  }
  *__int16 v2 = v5;
  return result;
}

void *static Config.WorkerConfigs.allCases.getter()
{
  return &unk_26FC8ED30;
}

unint64_t Config.WorkerConfigs.rawValue.getter()
{
  unint64_t result = 0x6C6F56534F63616DLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6F57646F50726961;
      break;
    case 2:
      unint64_t result = 6513249;
      break;
    case 3:
      unint64_t result = 0x676F4C7265776F70;
      break;
    case 4:
    case 6:
    case 0xD:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 7:
      unint64_t result = 0x536E6F6973736573;
      break;
    case 8:
      unint64_t result = 0x6C616E4165726F63;
      break;
    case 9:
      unint64_t result = 6517874;
      break;
    case 0xA:
      unint64_t result = 1852797802;
      break;
    case 0xB:
      unint64_t result = 0x6E6970736C696174;
      break;
    case 0xC:
      unint64_t result = 0x6E53726576697264;
      break;
    case 0xE:
      unint64_t result = 0x6576697470616461;
      break;
    case 0xF:
      unint64_t result = 0x6163696669746F6ELL;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_248836E14(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2488752D4(*a1, *a2);
}

uint64_t sub_248836E20()
{
  return sub_24887D068();
}

uint64_t sub_248836E88()
{
  Config.WorkerConfigs.rawValue.getter();
  sub_24887C808();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248836EEC()
{
  return sub_24887D068();
}

AudioAnalyticsBase::Config::WorkerConfigs_optional sub_248836F50(Swift::String *a1)
{
  return Config.WorkerConfigs.init(rawValue:)(*a1);
}

unint64_t sub_248836F5C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = Config.WorkerConfigs.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_248836F84(void *a1@<X8>)
{
  *a1 = &unk_26FC8ED30;
}

uint64_t Config.neededPreviousFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Config.neededPreviousFields.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 264) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Config.neededPreviousFields.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t Config.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC18AudioAnalyticsBase6Config_logger;
  uint64_t v2 = sub_24887C618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Config.__deallocating_deinit()
{
  Config.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_248837230(uint64_t a1, uint64_t a2)
{
  if (*(void *)(*(void *)a1 + 232) == *(void *)(*(void *)a2 + 232)
    && *(void *)(*(void *)a1 + 240) == *(void *)(*(void *)a2 + 240))
  {
    return 0;
  }
  else
  {
    return sub_24887CF48();
  }
}

uint64_t sub_24883725C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*(void *)a2 + 232);
  uint64_t v4 = *(void *)(*(void *)a2 + 240);
  if (v3 == *(void *)(v2 + 232) && v4 == *(void *)(v2 + 240)) {
    char v6 = 1;
  }
  else {
    char v6 = sub_24887CF48() ^ 1;
  }
  return v6 & 1;
}

uint64_t sub_2488372A4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(*(void *)a1 + 232) == *(void *)(*(void *)a2 + 232)
    && *(void *)(*(void *)a1 + 240) == *(void *)(*(void *)a2 + 240))
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_24887CF48() ^ 1;
  }
  return v3 & 1;
}

uint64_t sub_2488372EC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*(void *)a2 + 232);
  uint64_t v4 = *(void *)(*(void *)a2 + 240);
  if (v3 == *(void *)(v2 + 232) && v4 == *(void *)(v2 + 240)) {
    return 0;
  }
  else {
    return sub_24887CF48();
  }
}

uint64_t sub_248837318(uint64_t a1, uint64_t a2)
{
  if (*(void *)(*(void *)a1 + 232) == *(void *)(*(void *)a2 + 232)
    && *(void *)(*(void *)a1 + 240) == *(void *)(*(void *)a2 + 240))
  {
    return 1;
  }
  else
  {
    return sub_24887CF48();
  }
}

uint64_t ConfigSection.rawValue.getter()
{
  uint64_t result = 1953460082;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x726576726573;
      break;
    case 2:
      uint64_t result = 6517874;
      break;
    case 3:
      uint64_t result = 0x656972616D6D7573;
      break;
    case 4:
      uint64_t result = 0x74726F7065526F69;
      break;
    case 5:
      uint64_t result = 6513249;
      break;
    case 6:
      uint64_t result = 0x6F4D6D6574737973;
      break;
    case 7:
      uint64_t result = 0x726574756F72;
      break;
    case 8:
      uint64_t result = 0x6E6970736C696174;
      break;
    case 9:
      uint64_t result = 1953719668;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_248837468(unsigned __int8 *a1, char *a2)
{
  return sub_248875D90(*a1, *a2);
}

uint64_t sub_248837474()
{
  return sub_24887D068();
}

uint64_t sub_2488374BC()
{
  return sub_24883FC70();
}

uint64_t sub_2488374C4()
{
  return sub_24887D068();
}

AudioAnalyticsBase::ConfigSection_optional sub_248837508(Swift::String *a1)
{
  return ConfigSection.init(rawValue:)(*a1);
}

uint64_t sub_248837514@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ConfigSection.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24883753C(char a1)
{
  sub_24887CC38();
  unint64_t v2 = 0xD000000000000014;
  unint64_t v3 = 0x8000000248881C00;
  switch(a1)
  {
    case 1:
      unint64_t v2 = 0xD00000000000001CLL;
      uint64_t v4 = "keepUniqueValueSummaryFields";
      goto LABEL_6;
    case 2:
      unint64_t v3 = 0x8000000248881C40;
      unint64_t v2 = 0xD000000000000010;
      break;
    case 3:
      unint64_t v2 = 0xD000000000000015;
      uint64_t v4 = "preserveSummaryFields";
      goto LABEL_6;
    case 4:
      unint64_t v2 = 0xD000000000000013;
      uint64_t v4 = "sampleByServiceType";
LABEL_6:
      unint64_t v3 = (unint64_t)(v4 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  sub_24887C838();
  sub_24887C838();
  swift_bridgeObjectRelease();
  sub_24887C838();
  sub_24887C838();
  sub_24882C828();
  swift_allocError();
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v3;
  *(unsigned char *)(v5 + 16) = 1;
  return swift_willThrow();
}

uint64_t sub_248837818(char a1)
{
  unint64_t v2 = 0xD000000000000012;
  sub_24887CC38();
  if (a1)
  {
    if (a1 == 1)
    {
      unint64_t v2 = 0xD000000000000014;
      unint64_t v3 = "osTransactionTimeout";
    }
    else
    {
      unint64_t v3 = "skipPreviousFields";
    }
  }
  else
  {
    unint64_t v2 = 0xD000000000000018;
    unint64_t v3 = "monitorClientConnections";
  }
  unint64_t v4 = (unint64_t)(v3 - 32) | 0x8000000000000000;
  swift_bridgeObjectRelease();
  sub_24887C838();
  sub_24887C838();
  swift_bridgeObjectRelease();
  sub_24887C838();
  sub_24887C838();
  sub_24882C828();
  swift_allocError();
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v4;
  *(unsigned char *)(v5 + 16) = 1;
  swift_willThrow();
  return 0;
}

uint64_t sub_248837A90(char a1)
{
  sub_24887CC38();
  unint64_t v2 = sub_24886F410(a1);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  sub_24887C838();
  sub_24887C838();
  swift_bridgeObjectRelease();
  sub_24887C838();
  sub_24887C838();
  sub_24882C828();
  swift_allocError();
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v4;
  *(unsigned char *)(v5 + 16) = 1;
  return swift_willThrow();
}

uint64_t sub_248837CDC(char a1)
{
  sub_24887CC38();
  unint64_t v2 = sub_24886F410(a1);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  sub_24887C838();
  sub_24887C838();
  swift_bridgeObjectRelease();
  sub_24887C838();
  sub_24887C838();
  sub_24882C828();
  swift_allocError();
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v4;
  *(unsigned char *)(v5 + 16) = 1;
  return swift_willThrow();
}

uint64_t sub_248837F20(char a1)
{
  sub_24887CC38();
  unint64_t v2 = sub_24886F410(a1);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  sub_24887C838();
  sub_24887C838();
  swift_bridgeObjectRelease();
  sub_24887C838();
  sub_24887C838();
  sub_24882C828();
  swift_allocError();
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v4;
  *(unsigned char *)(v5 + 16) = 1;
  return swift_willThrow();
}

uint64_t sub_248838164(char a1)
{
  sub_24887CC38();
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x6570795461746164;
  switch(a1)
  {
    case 1:
      unint64_t v2 = 0xEC00000065756C61;
      uint64_t v3 = 0x56746C7561666564;
      break;
    case 2:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x6E69616D6F64;
      break;
    case 3:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1701667182;
      break;
    case 4:
      unint64_t v2 = 0xEC0000006E6F6974;
      uint64_t v3 = 0x6163696669746F6ELL;
      break;
    case 5:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1701869940;
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  sub_24887C838();
  sub_24887C838();
  swift_bridgeObjectRelease();
  sub_24887C838();
  sub_24887C838();
  sub_24882C828();
  swift_allocError();
  *(void *)uint64_t v4 = v3;
  *(void *)(v4 + 8) = v2;
  *(unsigned char *)(v4 + 16) = 1;
  return swift_willThrow();
}

void *sub_248838454(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D90);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24883D59C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_248838564(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B143E38);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 208);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[26 * v8 + 4]) {
          memmove(v12, a4 + 4, 208 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24883D9A8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_248838690(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2488388E4(a1, a2, a3, a4, &qword_26932CCE0, (void (*)(void, int64_t, void *, void *))sub_24883DF24);
}

void *sub_2488386B0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D58);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4]) {
          memmove(v12, a4 + 4, 80 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24883DA9C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2488387D4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D78);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 95;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 7);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 7);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24883DB94(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2488388E4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, void (*a6)(void, int64_t, void *, void *))
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  int64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v10 = a2;
    }
LABEL_8:
    int64_t v11 = a4[2];
    if (v10 <= v11) {
      int64_t v12 = a4[2];
    }
    else {
      int64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 17;
      }
      _OWORD v13[2] = v11;
      v13[3] = 2 * (v15 >> 4);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4]) {
          memmove(v16, a4 + 4, 16 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    a6(0, v11, v16, a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

char *sub_248838A00(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_248838D64(a1, a2, a3, a4, &qword_26932CCD8);
}

void *sub_248838A0C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26932CCD0);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 648);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[81 * v8 + 4]) {
          memmove(v12, a4 + 4, 648 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      int64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24883EF1C(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_248838B38(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DB0);
      int64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32]) {
          memmove(v13, a4 + 32, 4 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_24883F010(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_248838C48(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26932CCC8);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24883F0FC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_248838D58(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_248838D64(a1, a2, a3, a4, &qword_26B143118);
}

char *sub_248838D64(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = *((void *)a4 + 3);
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      int64_t v10 = *((void *)a4 + 2);
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (char *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      *((void *)v11 + 2) = v9;
      *((void *)v11 + 3) = 2 * v12 - 64;
      uint64_t v13 = v11 + 32;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32]) {
          memmove(v13, a4 + 32, v9);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v11 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24883DE3C(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_248838E5C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_248838EB4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_248838F0C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1430F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_248838F6C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D28);
  char v40 = a2;
  uint64_t v6 = sub_24887CD68();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 24 * v21;
      uint64_t v34 = *(void *)v32;
      uint64_t v33 = *(void *)(v32 + 8);
      char v35 = *(unsigned char *)(v32 + 16);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_24882D9F4(v34, v33, v35);
      }
      sub_24887D008();
      sub_24887C808();
      uint64_t result = sub_24887D068();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *uint64_t v18 = v30;
      v18[1] = v31;
      uint64_t v19 = *(void *)(v7 + 56) + 24 * v17;
      *(void *)uint64_t v19 = v34;
      *(void *)(v19 + 8) = v33;
      *(unsigned char *)(v19 + 16) = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_248839298(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26932CCF0);
  char v38 = a2;
  uint64_t v6 = sub_24887CD68();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
    uint64_t v31 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v21);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    if ((v38 & 1) == 0)
    {
      id v34 = v30;
      swift_bridgeObjectRetain();
    }
    uint64_t result = sub_24887CB38();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v30;
    uint64_t v19 = (void *)(*(void *)(v7 + 56) + 16 * v18);
    *uint64_t v19 = v32;
    v19[1] = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_248839580(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D50);
  uint64_t result = sub_24887CD68();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v31 = a2;
    int64_t v8 = 0;
    uint64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13) {
          goto LABEL_31;
        }
        unint64_t v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v19 = v9[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v31 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
              if (v30 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v30;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v19 = v9[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      __int16 v21 = *(_WORD *)(*(void *)(v5 + 48) + 2 * v17);
      uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
      sub_24887D008();
      sub_24887D038();
      uint64_t result = sub_24887D068();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_WORD *)(*(void *)(v7 + 48) + 2 * v15) = v21;
      *(void *)(*(void *)(v7 + 56) + 8 * v15) = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_24883984C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143110);
  uint64_t v6 = sub_24887CD68();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_42;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  int64_t v13 = 0;
LABEL_9:
  if (v10)
  {
    unint64_t v19 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v20 = v19 | (v13 << 6);
    goto LABEL_31;
  }
  int64_t v21 = v13 + 1;
  if (__OFADD__(v13, 1)) {
    goto LABEL_43;
  }
  if (v21 >= v11)
  {
    swift_release();
    uint64_t v3 = v33;
    uint64_t v22 = (void *)(v5 + 64);
    if (a2)
    {
LABEL_38:
      uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
      if (v31 >= 64) {
        bzero(v22, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        void *v22 = -1 << v31;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v34 + 8 * v21);
    ++v13;
    if (v23) {
      goto LABEL_30;
    }
    int64_t v13 = v21 + 1;
    if (v21 + 1 >= v11) {
      goto LABEL_35;
    }
    unint64_t v23 = *(void *)(v34 + 8 * v13);
    if (v23)
    {
LABEL_30:
      unint64_t v10 = (v23 - 1) & v23;
      unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
      char v29 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
      uint64_t v30 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v20);
      if (a2) {
        sub_24882D9E4(v30, v35);
      }
      else {
        sub_24882E1C8((uint64_t)v30, (uint64_t)v35);
      }
      sub_24887D008();
      sub_24887C808();
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_24887D068();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = v14 & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      while (++v17 != v26 || (v25 & 1) == 0)
      {
        BOOL v27 = v17 == v26;
        if (v17 == v26) {
          unint64_t v17 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v17);
        if (v28 != -1)
        {
          unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
LABEL_8:
          *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
          *(unsigned char *)(*(void *)(v7 + 48) + v18) = v29;
          sub_24882D9E4(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v18));
          ++*(void *)(v7 + 16);
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      JUMPOUT(0x248839C3CLL);
    }
    int64_t v24 = v21 + 2;
    if (v24 < v11)
    {
      unint64_t v23 = *(void *)(v34 + 8 * v24);
      if (!v23)
      {
        while (1)
        {
          int64_t v13 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_44;
          }
          if (v13 >= v11) {
            goto LABEL_35;
          }
          unint64_t v23 = *(void *)(v34 + 8 * v13);
          ++v24;
          if (v23) {
            goto LABEL_30;
          }
        }
      }
      int64_t v13 = v24;
      goto LABEL_30;
    }
LABEL_35:
    swift_release();
    uint64_t v3 = v33;
    if (a2) {
      goto LABEL_38;
    }
  }
LABEL_42:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_248839C64(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D28);
  char v40 = a2;
  uint64_t v6 = sub_24887CD68();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      char v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 24 * v21;
      uint64_t v34 = *(void *)v32;
      uint64_t v33 = *(void *)(v32 + 8);
      char v35 = *(unsigned char *)(v32 + 16);
      if ((v40 & 1) == 0)
      {
        sub_24882D9F4(v34, v33, v35);
        swift_bridgeObjectRetain();
      }
      sub_24887D008();
      sub_24887C808();
      uint64_t result = sub_24887D068();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *unint64_t v18 = v30;
      v18[1] = v31;
      uint64_t v19 = *(void *)(v7 + 56) + 24 * v17;
      *(void *)uint64_t v19 = v34;
      *(void *)(v19 + 8) = v33;
      *(unsigned char *)(v19 + 16) = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void *sub_248839F90()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D28);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24887CD58();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    int64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    char v25 = *(unsigned char *)(v21 + 16);
    void *v24 = v19;
    v24[1] = v18;
    uint64_t v26 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v26 = v22;
    *(void *)(v26 + 8) = v23;
    *(unsigned char *)(v26 + 16) = v25;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_24882D9F4(v22, v23, v25);
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24883A16C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D50);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24887CD58();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v23 = __clz(__rbit64(v21));
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = v23 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 2 * v15;
    __int16 v17 = *(_WORD *)(*(void *)(v2 + 48) + 2 * v15);
    uint64_t v18 = 8 * v15;
    uint64_t v19 = *(void *)(*(void *)(v2 + 56) + v18);
    *(_WORD *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v18) = v19;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24883A300()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143110);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24887CD58();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    sub_24882E1C8(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v20);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = v16;
    uint64_t result = sub_24882D9E4(v20, (_OWORD *)(*(void *)(v4 + 56) + 32 * v15));
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24883A4C0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D28);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24887CD58();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    int64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    char v25 = *(unsigned char *)(v21 + 16);
    void *v24 = v18;
    v24[1] = v19;
    uint64_t v26 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v26 = v22;
    *(void *)(v26 + 8) = v23;
    *(unsigned char *)(v26 + 16) = v25;
    sub_24882D9F4(v22, v23, v25);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24883A68C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_24887D008();
  swift_bridgeObjectRetain();
  sub_24887C808();
  uint64_t v8 = sub_24887D068();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    unint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_24887CF48() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_24887CF48() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_24883BE64(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_24883A83C(unsigned char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_24887D008();
  swift_bridgeObjectRetain();
  sub_24887C808();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_24887D068();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v11 = *(void *)&aRoot_1[8 * (char)a2];
    while (*(void *)&aRoot_1[8 * *(char *)(*(void *)(v6 + 48) + v9)] != v11)
    {
      char v12 = sub_24887CF48();
      swift_bridgeObjectRelease_n();
      if (v12) {
        goto LABEL_8;
      }
      unint64_t v9 = (v9 + 1) & v10;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    LOBYTE(a2) = *(unsigned char *)(*(void *)(*v3 + 48) + v9);
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_24883C000(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = a2;
  return result;
}

uint64_t sub_24883A9D8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_24887CFF8();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_24883C1A8(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_24883AAD4(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  sub_24887D008();
  Config.WorkerConfigs.rawValue.getter();
  swift_bridgeObjectRetain();
  sub_24887C808();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_24887D068();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_57:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_24883C2CC(a2, v7, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v23;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_61;
  }
  uint64_t v8 = ~v6;
  while (2)
  {
    unint64_t v9 = 0xEB00000000656D75;
    unint64_t v10 = 0x6C6F56534F63616DLL;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        unint64_t v10 = 0x6F57646F50726961;
        unint64_t v9 = 0xEC00000072656B72;
        break;
      case 2:
        unint64_t v9 = 0xE300000000000000;
        unint64_t v10 = 6513249;
        break;
      case 3:
        unint64_t v9 = 0xE800000000000000;
        unint64_t v10 = 0x676F4C7265776F70;
        break;
      case 4:
        uint64_t v11 = "e";
        goto LABEL_17;
      case 5:
        unint64_t v10 = 0x6E6F697461727564;
        unint64_t v9 = 0xEF7972616D6D7553;
        break;
      case 6:
        uint64_t v11 = "";
        goto LABEL_17;
      case 7:
        unint64_t v10 = 0x536E6F6973736573;
        unint64_t v9 = 0xEE007972616D6D75;
        break;
      case 8:
        unint64_t v10 = 0x6C616E4165726F63;
        unsigned int v12 = 1667855481;
        goto LABEL_20;
      case 9:
        unint64_t v9 = 0xE300000000000000;
        unint64_t v10 = 6517874;
        break;
      case 0xA:
        unint64_t v9 = 0xE400000000000000;
        unint64_t v10 = 1852797802;
        break;
      case 0xB:
        unint64_t v9 = 0xE800000000000000;
        unint64_t v10 = 0x6E6970736C696174;
        break;
      case 0xC:
        unint64_t v10 = 0x6E53726576697264;
        unint64_t v9 = 0xEE00746F68737061;
        break;
      case 0xD:
        uint64_t v11 = "c";
LABEL_17:
        unint64_t v9 = (unint64_t)v11 | 0x8000000000000000;
        unint64_t v10 = 0xD000000000000010;
        break;
      case 0xE:
        unint64_t v10 = 0x6576697470616461;
        unint64_t v9 = 0xEE00656D756C6F56;
        break;
      case 0xF:
        unint64_t v10 = 0x6163696669746F6ELL;
        unsigned int v12 = 1852795252;
LABEL_20:
        unint64_t v9 = v12 | 0xED00007300000000;
        break;
      case 0x10:
        unint64_t v10 = 0xD000000000000019;
        unint64_t v9 = 0x8000000248881B50;
        break;
      default:
        break;
    }
    uint64_t v13 = 0x6C6F56534F63616DLL;
    unint64_t v14 = 0xEB00000000656D75;
    switch((char)a2)
    {
      case 1:
        unint64_t v14 = 0xEC00000072656B72;
        if (v10 == 0x6F57646F50726961) {
          goto LABEL_51;
        }
        goto LABEL_52;
      case 2:
        unint64_t v14 = 0xE300000000000000;
        unsigned __int16 v15 = 25185;
        goto LABEL_36;
      case 3:
        unint64_t v14 = 0xE800000000000000;
        if (v10 != 0x676F4C7265776F70) {
          goto LABEL_52;
        }
        goto LABEL_51;
      case 4:
        uint64_t v16 = "e";
        goto LABEL_44;
      case 5:
        unint64_t v14 = 0xEF7972616D6D7553;
        if (v10 != 0x6E6F697461727564) {
          goto LABEL_52;
        }
        goto LABEL_51;
      case 6:
        uint64_t v16 = "";
        goto LABEL_44;
      case 7:
        uint64_t v17 = 0x536E6F6973736573;
        uint64_t v18 = 0x7972616D6D75;
        goto LABEL_47;
      case 8:
        unint64_t v14 = 0xED00007363697479;
        if (v10 != 0x6C616E4165726F63) {
          goto LABEL_52;
        }
        goto LABEL_51;
      case 9:
        unint64_t v14 = 0xE300000000000000;
        unsigned __int16 v15 = 29810;
LABEL_36:
        if (v10 != (v15 | 0x630000)) {
          goto LABEL_52;
        }
        goto LABEL_51;
      case 10:
        unint64_t v14 = 0xE400000000000000;
        if (v10 != 1852797802) {
          goto LABEL_52;
        }
        goto LABEL_51;
      case 11:
        unint64_t v14 = 0xE800000000000000;
        if (v10 != 0x6E6970736C696174) {
          goto LABEL_52;
        }
        goto LABEL_51;
      case 12:
        uint64_t v17 = 0x6E53726576697264;
        uint64_t v18 = 0x746F68737061;
        goto LABEL_47;
      case 13:
        uint64_t v16 = "c";
LABEL_44:
        unint64_t v14 = (unint64_t)v16 | 0x8000000000000000;
        if (v10 != 0xD000000000000010) {
          goto LABEL_52;
        }
        goto LABEL_51;
      case 14:
        uint64_t v17 = 0x6576697470616461;
        uint64_t v18 = 0x656D756C6F56;
LABEL_47:
        unint64_t v14 = v18 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
        if (v10 != v17) {
          goto LABEL_52;
        }
        goto LABEL_51;
      case 15:
        uint64_t v13 = 0x6163696669746F6ELL;
        unint64_t v14 = 0xED0000736E6F6974;
        goto LABEL_50;
      case 16:
        unint64_t v14 = 0x8000000248881B50;
        if (v10 != 0xD000000000000019) {
          goto LABEL_52;
        }
        goto LABEL_51;
      default:
LABEL_50:
        if (v10 != v13) {
          goto LABEL_52;
        }
LABEL_51:
        if (v9 == v14)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_60;
        }
LABEL_52:
        char v19 = sub_24887CF48();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_57;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_60:
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
LABEL_61:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_24883B11C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143CE8);
  uint64_t v3 = sub_24887CC18();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      char v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_24887D008();
      sub_24887C808();
      uint64_t result = sub_24887D068();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_24883B3FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26932CF60);
  uint64_t v3 = sub_24887CC18();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
      sub_24887D008();
      sub_24887C808();
      swift_bridgeObjectRelease();
      uint64_t result = sub_24887D068();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_24883B6D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143CF0);
  uint64_t result = sub_24887CC18();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_24887CFF8();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_24883B954()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26932CF70);
  uint64_t v3 = sub_24887CC18();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = v6[v19];
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = v6[v11];
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = v6[v11];
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = v6[v21];
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_40;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = v6[v11];
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_24887D008();
    sub_24887C808();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_24887D068();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x24883BE20);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_24883BE64(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_24883B11C();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_24885E4E4();
      goto LABEL_22;
    }
    sub_24883C90C();
  }
  uint64_t v11 = *v4;
  sub_24887D008();
  sub_24887C808();
  uint64_t result = sub_24887D068();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_24887CF48(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_24887CF88();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        unint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_24887CF48();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  int64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *int64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_24883C000(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  char v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_13;
  }
  if (a3)
  {
    sub_24883B3FC();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_24885E698();
      goto LABEL_13;
    }
    sub_24883CBBC();
  }
  uint64_t v9 = *v3;
  sub_24887D008();
  sub_24887C808();
  swift_bridgeObjectRelease();
  uint64_t result = sub_24887D068();
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v10;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v11 = ~v10;
    uint64_t v12 = *(void *)&aRoot_1[8 * v6];
    while (*(void *)&aRoot_1[8 * *(char *)(*(void *)(v9 + 48) + a2)] != v12)
    {
      char v13 = sub_24887CF48();
      uint64_t result = swift_bridgeObjectRelease_n();
      if (v13) {
        goto LABEL_17;
      }
      a2 = (a2 + 1) & v11;
      if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_13;
      }
    }
    goto LABEL_16;
  }
LABEL_13:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v14 + 48) + a2) = v6;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (!v16)
  {
    *(void *)(v14 + 16) = v17;
    return result;
  }
  __break(1u);
LABEL_16:
  swift_bridgeObjectRelease_n();
LABEL_17:
  uint64_t result = sub_24887CF88();
  __break(1u);
  return result;
}

uint64_t sub_24883C1A8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_24883B6D0();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_24885E6A4();
      goto LABEL_14;
    }
    sub_24883CE5C();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_24887CFF8();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_24887CF88();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_24883C2CC(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_24883B954();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_24885E83C();
        goto LABEL_64;
      }
      sub_24883D0C0();
    }
    uint64_t v8 = *v3;
    sub_24887D008();
    Config.WorkerConfigs.rawValue.getter();
    sub_24887C808();
    swift_bridgeObjectRelease();
    uint64_t result = sub_24887D068();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xEB00000000656D75;
        unint64_t v12 = 0x6C6F56534F63616DLL;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v12 = 0x6F57646F50726961;
            unint64_t v11 = 0xEC00000072656B72;
            break;
          case 2:
            unint64_t v11 = 0xE300000000000000;
            unint64_t v12 = 6513249;
            break;
          case 3:
            unint64_t v11 = 0xE800000000000000;
            unint64_t v12 = 0x676F4C7265776F70;
            break;
          case 4:
            uint64_t v13 = "e";
            goto LABEL_28;
          case 5:
            unint64_t v12 = 0x6E6F697461727564;
            unint64_t v11 = 0xEF7972616D6D7553;
            break;
          case 6:
            uint64_t v13 = "";
            goto LABEL_28;
          case 7:
            unint64_t v12 = 0x536E6F6973736573;
            unint64_t v11 = 0xEE007972616D6D75;
            break;
          case 8:
            unint64_t v12 = 0x6C616E4165726F63;
            unsigned int v14 = 1667855481;
            goto LABEL_25;
          case 9:
            unint64_t v11 = 0xE300000000000000;
            unint64_t v12 = 6517874;
            break;
          case 0xA:
            unint64_t v11 = 0xE400000000000000;
            unint64_t v12 = 1852797802;
            break;
          case 0xB:
            unint64_t v11 = 0xE800000000000000;
            unint64_t v12 = 0x6E6970736C696174;
            break;
          case 0xC:
            unint64_t v12 = 0x6E53726576697264;
            unint64_t v11 = 0xEE00746F68737061;
            break;
          case 0xD:
            uint64_t v13 = "c";
LABEL_28:
            unint64_t v11 = (unint64_t)v13 | 0x8000000000000000;
            unint64_t v12 = 0xD000000000000010;
            break;
          case 0xE:
            unint64_t v12 = 0x6576697470616461;
            unint64_t v11 = 0xEE00656D756C6F56;
            break;
          case 0xF:
            unint64_t v12 = 0x6163696669746F6ELL;
            unsigned int v14 = 1852795252;
LABEL_25:
            unint64_t v11 = v14 | 0xED00007300000000;
            break;
          case 0x10:
            unint64_t v12 = 0xD000000000000019;
            unint64_t v11 = 0x8000000248881B50;
            break;
          default:
            break;
        }
        uint64_t v15 = 0x6C6F56534F63616DLL;
        unint64_t v16 = 0xEB00000000656D75;
        switch(v5)
        {
          case 1:
            unint64_t v16 = 0xEC00000072656B72;
            if (v12 != 0x6F57646F50726961) {
              goto LABEL_58;
            }
            goto LABEL_57;
          case 2:
            unint64_t v16 = 0xE300000000000000;
            unsigned __int16 v20 = 25185;
            goto LABEL_41;
          case 3:
            unint64_t v16 = 0xE800000000000000;
            if (v12 != 0x676F4C7265776F70) {
              goto LABEL_58;
            }
            goto LABEL_57;
          case 4:
            int64_t v19 = "e";
            goto LABEL_62;
          case 5:
            unint64_t v16 = 0xEF7972616D6D7553;
            if (v12 != 0x6E6F697461727564) {
              goto LABEL_58;
            }
            goto LABEL_57;
          case 6:
            int64_t v19 = "";
            goto LABEL_62;
          case 7:
            uint64_t v17 = 0x536E6F6973736573;
            uint64_t v18 = 0x7972616D6D75;
            goto LABEL_47;
          case 8:
            uint64_t v21 = 0x6C616E4165726F63;
            unsigned int v22 = 1667855481;
            goto LABEL_53;
          case 9:
            unint64_t v16 = 0xE300000000000000;
            unsigned __int16 v20 = 29810;
LABEL_41:
            if (v12 != (v20 | 0x630000)) {
              goto LABEL_58;
            }
            goto LABEL_57;
          case 10:
            unint64_t v16 = 0xE400000000000000;
            uint64_t v15 = 1852797802;
            goto LABEL_56;
          case 11:
            unint64_t v16 = 0xE800000000000000;
            if (v12 != 0x6E6970736C696174) {
              goto LABEL_58;
            }
            goto LABEL_57;
          case 12:
            uint64_t v17 = 0x6E53726576697264;
            uint64_t v18 = 0x746F68737061;
            goto LABEL_47;
          case 13:
            int64_t v19 = "c";
LABEL_62:
            unint64_t v16 = (unint64_t)v19 | 0x8000000000000000;
            if (v12 != 0xD000000000000010) {
              goto LABEL_58;
            }
            goto LABEL_57;
          case 14:
            uint64_t v17 = 0x6576697470616461;
            uint64_t v18 = 0x656D756C6F56;
LABEL_47:
            unint64_t v16 = v18 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
            if (v12 != v17) {
              goto LABEL_58;
            }
            goto LABEL_57;
          case 15:
            uint64_t v21 = 0x6163696669746F6ELL;
            unsigned int v22 = 1852795252;
LABEL_53:
            unint64_t v16 = v22 | 0xED00007300000000;
            if (v12 != v21) {
              goto LABEL_58;
            }
            goto LABEL_57;
          case 16:
            unint64_t v16 = 0x8000000248881B50;
            if (v12 != 0xD000000000000019) {
              goto LABEL_58;
            }
            goto LABEL_57;
          default:
LABEL_56:
            if (v12 != v15) {
              goto LABEL_58;
            }
LABEL_57:
            if (v11 == v16) {
              goto LABEL_67;
            }
LABEL_58:
            char v23 = sub_24887CF48();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v23) {
              goto LABEL_68;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_64:
  uint64_t v24 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v24 + 48) + a2) = v5;
  uint64_t v25 = *(void *)(v24 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26)
  {
    __break(1u);
LABEL_67:
    swift_bridgeObjectRelease_n();
LABEL_68:
    sub_24887CF88();
    __break(1u);
    JUMPOUT(0x24883C884);
  }
  *(void *)(v24 + 16) = v27;
  return result;
}

uint64_t sub_24883C90C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143CE8);
  uint64_t v3 = sub_24887CC18();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_24887D008();
    swift_bridgeObjectRetain();
    sub_24887C808();
    uint64_t result = sub_24887D068();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24883CBBC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26932CF60);
  uint64_t v3 = sub_24887CC18();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    sub_24887D008();
    sub_24887C808();
    swift_bridgeObjectRelease();
    uint64_t result = sub_24887D068();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24883CE5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143CF0);
  uint64_t result = sub_24887CC18();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_24887CFF8();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24883D0C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26932CF70);
  uint64_t v3 = sub_24887CC18();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_36;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_37;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v11);
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v11);
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = *(void *)(v6 + 8 * v21);
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_38;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = *(void *)(v6 + 8 * v11);
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_24887D008();
    sub_24887C808();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_24887D068();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        JUMPOUT(0x24883D558);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_36:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_24883D59C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t sub_24883D690()
{
  sub_24887CC38();
  swift_bridgeObjectRelease();
  sub_24887C838();
  swift_bridgeObjectRelease();
  sub_24887C838();
  sub_24887C838();
  sub_24882C828();
  swift_allocError();
  *(void *)uint64_t v0 = 0xD00000000000001ALL;
  *(void *)(v0 + 8) = 0x80000002488823F0;
  *(unsigned char *)(v0 + 16) = 1;
  return swift_willThrow();
}

uint64_t sub_24883D8B4(uint64_t a1)
{
  if (*(void *)(a1 + 16) && (unint64_t v2 = sub_248840E50(0x4364656C62616E65, 0xEC00000073657361), (v3 & 1) != 0)) {
    sub_24882E1C8(*(void *)(a1 + 56) + 32 * v2, (uint64_t)v7);
  }
  else {
    memset(v7, 0, sizeof(v7));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C10);
  if ((swift_dynamicCast() & 1) == 0 || (uint64_t v4 = v6) == 0)
  {
    uint64_t v4 = sub_24883D690();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_24883D9A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 208 * a1 + 32;
    unint64_t v6 = a3 + 208 * v4;
    if (v5 >= v6 || v5 + 208 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t sub_24883DA9C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 80 * a1 + 32;
    unint64_t v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t sub_24883DB94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 7) + 32;
    unint64_t v6 = a3 + (v4 << 7);
    if (v5 >= v6 || v5 + (v4 << 7) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t sub_24883DC88(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v3 = 0;
  uint64_t v20 = result + 32;
  uint64_t v4 = MEMORY[0x263F8EE78];
  do
  {
    uint64_t v19 = v4;
    if (v3 <= v2) {
      unint64_t v5 = v2;
    }
    else {
      unint64_t v5 = v3;
    }
    while (1)
    {
      if (v3 == v5) {
        goto LABEL_33;
      }
      unint64_t v6 = (uint64_t *)(v20 + 16 * v3);
      uint64_t v7 = *v6;
      uint64_t v8 = v6[1];
      ++v3;
      int64_t v9 = *(void **)(a2 + 88);
      uint64_t v10 = v9[2];
      if (!v10) {
        goto LABEL_23;
      }
      uint64_t result = v9[4];
      if (result != v7 || v9[5] != v8)
      {
        uint64_t result = sub_24887CF48();
        if ((result & 1) == 0) {
          break;
        }
      }
LABEL_6:
      if (v3 == v2) {
        return v19;
      }
    }
    if (v10 != 1)
    {
      uint64_t v12 = v9 + 7;
      uint64_t v13 = 1;
      while (1)
      {
        uint64_t v14 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          break;
        }
        uint64_t result = *(v12 - 1);
        if (result == v7 && *v12 == v8) {
          goto LABEL_6;
        }
        uint64_t result = sub_24887CF48();
        if (result) {
          goto LABEL_6;
        }
        v12 += 2;
        ++v13;
        if (v14 == v10) {
          goto LABEL_23;
        }
      }
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v4 = v19;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_248841928(0, *(void *)(v19 + 16) + 1, 1);
      uint64_t v4 = v19;
    }
    unint64_t v17 = *(void *)(v4 + 16);
    unint64_t v16 = *(void *)(v4 + 24);
    if (v17 >= v16 >> 1)
    {
      uint64_t result = sub_248841928(v16 > 1, v17 + 1, 1);
      uint64_t v4 = v19;
    }
    *(void *)(v4 + 16) = v17 + 1;
    uint64_t v18 = v4 + 16 * v17;
    *(void *)(v18 + 32) = v7;
    *(void *)(v18 + 40) = v8;
  }
  while (v3 != v2);
  return v4;
}

char *sub_24883DE3C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t sub_24883DF24(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26932CCE8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t sub_24883E030()
{
  sub_24887CC38();
  swift_bridgeObjectRelease();
  sub_24887C838();
  swift_bridgeObjectRelease();
  sub_24887C838();
  sub_24887C838();
  sub_24882C828();
  swift_allocError();
  *(void *)uint64_t v0 = 0xD00000000000001BLL;
  *(void *)(v0 + 8) = 0x80000002488823D0;
  *(unsigned char *)(v0 + 16) = 1;
  return swift_willThrow();
}

uint64_t sub_24883E244(uint64_t a1)
{
  uint64_t v2 = a1;
  if (*(void *)(a1 + 16) && (unint64_t v3 = sub_248840E50(0x65566769666E6F63, 0xED00006E6F697372), (v4 & 1) != 0)) {
    sub_24882E1C8(*(void *)(v2 + 56) + 32 * v3, (uint64_t)v9);
  }
  else {
    memset(v9, 0, sizeof(v9));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC8);
  if ((swift_dynamicCast() & 1) != 0 && v8) {
    return v7;
  }
  uint64_t v5 = sub_24883E030();
  if (!v1) {
    uint64_t v2 = v5;
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_24883E348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t *a6, unint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unint64_t v68 = a6[1];
  unint64_t v70 = *a6;
  unint64_t v67 = a6[2];
  unint64_t v76 = a6[3];
  uint64_t v86 = a6[4];
  unint64_t v62 = a6[5];
  unint64_t v66 = a6[6];
  unint64_t v83 = a6[7];
  unint64_t v16 = a6[9];
  unint64_t v61 = a6[8];
  unint64_t v17 = a6[10];
  unint64_t v73 = a7[1];
  unint64_t v75 = a7[2];
  unint64_t v81 = a7[4];
  unint64_t v82 = a7[3];
  unint64_t v63 = a7[6];
  unint64_t v78 = a7[7];
  unint64_t v80 = a7[5];
  unint64_t v64 = a7[8];
  unint64_t v65 = *a7;
  unint64_t v72 = a7[9];
  *(void *)(v10 + 264) = MEMORY[0x263F8EE88];
  uint64_t v18 = v10 + OBJC_IVAR____TtC18AudioAnalyticsBase6Config_logger;
  if (qword_26B143AF8 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_24887C618();
  uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_26B143AE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v18, v20, v19);
  uint64_t v21 = *(void *)(a1 + 256);
  *(void *)(v10 + 248) = *(void *)(a1 + 248);
  *(void *)(v10 + 256) = v21;
  *(void *)(v10 + OBJC_IVAR____TtC18AudioAnalyticsBase6Config_plist) = *(void *)(a1
                                                                                   + OBJC_IVAR____TtC18AudioAnalyticsBase6Config_plist);
  if (!a2)
  {
    a2 = *(void *)(a1 + 96);
    swift_bridgeObjectRetain();
  }
  unint64_t v22 = v67;
  *(void *)(v10 + 96) = a2;
  unint64_t v24 = v81;
  unint64_t v23 = v82;
  unint64_t v25 = v80;
  unint64_t v27 = v83;
  uint64_t v26 = v86;
  if (a3)
  {
    unint64_t v28 = v16;
    unint64_t v29 = v17;
  }
  else
  {
    a3 = *(void *)(a1 + 104);
    swift_bridgeObjectRetain();
    unint64_t v22 = v67;
    unint64_t v29 = v17;
    unint64_t v28 = v16;
    unint64_t v27 = v83;
    uint64_t v26 = v86;
    unint64_t v25 = v80;
    unint64_t v24 = v81;
    unint64_t v23 = v82;
  }
  unint64_t v30 = v68;
  unint64_t v31 = v76;
  *(void *)(v10 + 104) = a3;
  if (!a4)
  {
    a4 = *(void *)(a1 + 112);
    unint64_t v32 = v22;
    swift_bridgeObjectRetain();
    unint64_t v30 = v68;
    unint64_t v22 = v32;
    unint64_t v29 = v17;
    unint64_t v28 = v16;
    unint64_t v27 = v83;
    uint64_t v26 = v86;
    unint64_t v25 = v80;
    unint64_t v24 = v81;
    unint64_t v23 = v82;
  }
  __int16 v33 = v70;
  *(void *)(v10 + 112) = a4;
  if (!a5)
  {
    a5 = *(void *)(a1 + 120);
    unint64_t v34 = v22;
    unint64_t v35 = v30;
    swift_bridgeObjectRetain();
    unint64_t v30 = v35;
    unint64_t v22 = v34;
    unint64_t v29 = v17;
    unint64_t v28 = v16;
    unint64_t v27 = v83;
    uint64_t v26 = v86;
    unint64_t v25 = v80;
    unint64_t v24 = v81;
    unint64_t v23 = v82;
  }
  *(void *)(v10 + 120) = a5;
  unint64_t v36 = v75;
  unint64_t v37 = v78;
  if (v66)
  {
    unint64_t v38 = v66;
    uint64_t v39 = (v70 >> 16) & 1;
    unint64_t v40 = v73;
    unint64_t v41 = v61;
    unint64_t v42 = v62;
  }
  else
  {
    __int16 v33 = *(_WORD *)(a1 + 128);
    char v71 = *(unsigned char *)(a1 + 130);
    unint64_t v43 = *(void *)(a1 + 136);
    unint64_t v44 = *(void *)(a1 + 144);
    unint64_t v77 = *(void *)(a1 + 152);
    unint64_t v42 = *(void *)(a1 + 168);
    unint64_t v38 = *(void *)(a1 + 176);
    unint64_t v84 = *(void *)(a1 + 184);
    unint64_t v41 = *(void *)(a1 + 192);
    unint64_t v69 = *(void *)(a1 + 200);
    unint64_t v45 = *(void *)(a1 + 208);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v46 = v44;
    swift_bridgeObjectRetain();
    unint64_t v31 = v77;
    swift_bridgeObjectRetain();
    uint64_t v47 = swift_bridgeObjectRetain();
    unint64_t v28 = v69;
    LOBYTE(v39) = v71;
    unint64_t v30 = v43;
    unint64_t v22 = v46;
    unint64_t v37 = v78;
    unint64_t v25 = v80;
    unint64_t v36 = v75;
    unint64_t v29 = v45;
    unint64_t v27 = v84;
    uint64_t v26 = v47;
    unint64_t v24 = v81;
    unint64_t v23 = v82;
    unint64_t v40 = v73;
  }
  *(_WORD *)(v10 + 128) = v33;
  *(unsigned char *)(v10 + 130) = v39;
  *(void *)(v10 + 136) = v30;
  *(void *)(v10 + 144) = v22;
  *(void *)(v10 + 152) = v31;
  *(void *)(v10 + 160) = v26;
  *(void *)(v10 + 168) = v42;
  *(void *)(v10 + 176) = v38;
  *(void *)(v10 + 184) = v27;
  *(void *)(v10 + 192) = v41;
  *(void *)(v10 + 200) = v28;
  *(void *)(v10 + 208) = v29;
  unint64_t v48 = v72;
  if (v72)
  {
    __int16 v49 = v65;
    uint64_t v50 = (v65 >> 16) & 1;
    char v51 = v63 & 1;
    char v52 = v64 & 1;
  }
  else
  {
    __int16 v49 = *(_WORD *)(a1 + 16);
    char v87 = *(unsigned char *)(a1 + 18);
    unint64_t v40 = *(void *)(a1 + 24);
    unint64_t v53 = *(void *)(a1 + 32);
    unint64_t v54 = *(void *)(a1 + 40);
    unint64_t v55 = *(void *)(a1 + 48);
    unint64_t v56 = *(void *)(a1 + 56);
    char v85 = *(unsigned char *)(a1 + 64);
    unint64_t v79 = *(void *)(a1 + 72);
    char v52 = *(unsigned char *)(a1 + 80);
    unint64_t v48 = *(void *)(a1 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v51 = v85;
    LOBYTE(v50) = v87;
    unint64_t v36 = v53;
    unint64_t v25 = v56;
    unint64_t v37 = v79;
    unint64_t v24 = v55;
    unint64_t v23 = v54;
  }
  *(_WORD *)(v10 + 16) = v49;
  *(unsigned char *)(v10 + 18) = v50;
  *(void *)(v10 + 24) = v40;
  *(void *)(v10 + 32) = v36;
  *(void *)(v10 + 40) = v23;
  *(void *)(v10 + 48) = v24;
  *(void *)(v10 + 56) = v25;
  *(unsigned char *)(v10 + 64) = v51;
  *(void *)(v10 + 72) = v37;
  *(unsigned char *)(v10 + 80) = v52;
  *(void *)(v10 + 88) = v48;
  uint64_t v57 = a8;
  if (!a8)
  {
    swift_beginAccess();
    uint64_t v57 = *(void *)(a1 + 264);
    swift_bridgeObjectRetain();
  }
  uint64_t v58 = a10;
  swift_beginAccess();
  *(void *)(v10 + 264) = v57;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!a9)
  {
    uint64_t v60 = *(void *)(a1 + 216);
    swift_bridgeObjectRetain();
    *(void *)(v10 + 216) = v60;
    if (a10) {
      goto LABEL_22;
    }
LABEL_24:
    uint64_t v58 = *(void *)(a1 + 224);
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
  *(void *)(v10 + 216) = a9;
  if (!a10) {
    goto LABEL_24;
  }
LABEL_22:
  *(void *)(v10 + 224) = v58;
  *(void *)(v10 + 232) = 0x746573746F6ELL;
  *(void *)(v10 + 240) = 0xE600000000000000;
  return v10;
}

unint64_t sub_24883E820()
{
  unint64_t result = qword_26B143820;
  if (!qword_26B143820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B143820);
  }
  return result;
}

unint64_t sub_24883E878()
{
  unint64_t result = qword_26932CCB8;
  if (!qword_26932CCB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26932CCC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CCB8);
  }
  return result;
}

unint64_t sub_24883E8D8()
{
  unint64_t result = qword_26B143EA8;
  if (!qword_26B143EA8)
  {
    type metadata accessor for Config();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B143EA8);
  }
  return result;
}

uint64_t type metadata accessor for Config()
{
  uint64_t result = qword_26B143858;
  if (!qword_26B143858) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24883E980()
{
  unint64_t result = qword_26B1430E8;
  if (!qword_26B1430E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1430E8);
  }
  return result;
}

uint64_t sub_24883E9D4()
{
  return type metadata accessor for Config();
}

uint64_t sub_24883E9DC()
{
  uint64_t result = sub_24887C618();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for Config(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Config);
}

uint64_t dispatch thunk of Config.__allocating_init(configPath:allowUnknownFields:platform:encrypted:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of Config.__allocating_init(baseConfig:routerConfigs:summaryConfigs:systemMonitorConfigs:ioReportingConfigs:rtcConfig:serverConfig:neededPreviousFields:abcConfigs:tailspinConfigs:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t getEnumTagSinglePayload for Config.WorkerConfigs(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Config.WorkerConfigs(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *uint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24883EC54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Config.WorkerConfigs()
{
  return &type metadata for Config.WorkerConfigs;
}

uint64_t getEnumTagSinglePayload for ConfigSection(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ConfigSection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24883EDE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

uint64_t sub_24883EE10(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_24883EE18(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ConfigSection()
{
  return &type metadata for ConfigSection;
}

char *sub_24883EE30(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    BOOL v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_24887CD88();
  __break(1u);
  return result;
}

char *sub_24883EF1C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 648 * a1 + 32);
    size_t v6 = &__dst[648 * v4];
    if (v5 >= v6 || &v5[648 * v4] <= __dst)
    {
      memcpy(__dst, v5, 648 * v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_24887CD88();
  __break(1u);
  return result;
}

char *sub_24883F010(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    BOOL v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_24887CD88();
  __break(1u);
  return result;
}

char *sub_24883F0FC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    BOOL v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t CommonConfigFields.init(dict:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16)
    && (unint64_t v4 = sub_248840E50(0xD000000000000010, 0x80000002488811C0), (v5 & 1) != 0)
    && (sub_24882E1C8(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v77), (swift_dynamicCast() & 1) != 0))
  {
    int v6 = sub_248879700(v75, v76);
    if ((v6 & 0x10000) != 0)
    {
      *(void *)&long long v77 = 0;
      *((void *)&v77 + 1) = 0xE000000000000000;
      sub_24887CC38();
      swift_bridgeObjectRelease();
      *(void *)&long long v77 = 0xD000000000000011;
      *((void *)&v77 + 1) = 0x8000000248882430;
      sub_24887C838();
      long long v63 = v77;
      sub_24882C828();
      swift_allocError();
      *(_OWORD *)uint64_t v64 = v63;
      *(unsigned char *)(v64 + 16) = 1;
      swift_willThrow();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    int v7 = v6;
    swift_bridgeObjectRelease();
    char v8 = 0;
  }
  else
  {
    int v7 = 0;
    char v8 = 1;
  }
  char v80 = v8;
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v69 = a2;
  int v79 = v7;
  if (!v9)
  {
    uint64_t v12 = 0;
    goto LABEL_20;
  }
  unint64_t v10 = sub_248840E50(0x73646C697562, 0xE600000000000000);
  if ((v11 & 1) == 0)
  {
    uint64_t v12 = 0;
    if (*(void *)(a1 + 16)) {
      goto LABEL_16;
    }
LABEL_20:
    swift_bridgeObjectRetain();
    goto LABEL_21;
  }
  sub_24882E1C8(*(void *)(a1 + 56) + 32 * v10, (uint64_t)&v77);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C10);
  if (swift_dynamicCast()) {
    uint64_t v12 = v75;
  }
  else {
    uint64_t v12 = 0;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_20;
  }
LABEL_16:
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_248840E50(0x6C616E7265746E69, 0xE900000000000073);
  if ((v14 & 1) == 0)
  {
LABEL_21:
    uint64_t v15 = 0;
    goto LABEL_22;
  }
  sub_24882E1C8(*(void *)(a1 + 56) + 32 * v13, (uint64_t)&v77);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B143DD8);
  if (swift_dynamicCast()) {
    uint64_t v15 = v75;
  }
  else {
    uint64_t v15 = 0;
  }
LABEL_22:
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v73 = v15;
  swift_bridgeObjectRetain();
  uint64_t v71 = v12;
  uint64_t v72 = a1;
  if (!v16)
  {
LABEL_36:
    uint64_t v31 = 0;
    uint64_t v30 = MEMORY[0x263F8EE78];
    goto LABEL_37;
  }
  unint64_t v17 = sub_248840E50(0xD000000000000010, 0x8000000248881240);
  if ((v18 & 1) == 0
    || (sub_24882E1C8(*(void *)(a1 + 56) + 32 * v17, (uint64_t)&v77),
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C10),
        (swift_dynamicCast() & 1) == 0))
  {
    if (*(void *)(a1 + 16))
    {
      unint64_t v28 = sub_248840E50(0x6D726F6674616C70, 0xE900000000000073);
      if (v29)
      {
        sub_24882E1C8(*(void *)(a1 + 56) + 32 * v28, (uint64_t)&v77);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C10);
        if (swift_dynamicCast())
        {
          uint64_t v30 = v75;
          uint64_t v31 = v75;
          goto LABEL_37;
        }
      }
    }
    goto LABEL_36;
  }
  int64_t v19 = *(void *)(v75 + 16);
  uint64_t v20 = MEMORY[0x263F8EE78];
  if (v19)
  {
    *(void *)&long long v77 = MEMORY[0x263F8EE78];
    sub_248841948(0, v19, 0);
    uint64_t v21 = v77;
    unint64_t v22 = (uint64_t *)(v75 + 40);
    while (1)
    {
      uint64_t v24 = *(v22 - 1);
      uint64_t v23 = *v22;
      swift_bridgeObjectRetain_n();
      unint64_t v25 = sub_24887CDA8();
      swift_bridgeObjectRelease();
      if (v25 >= 5) {
        break;
      }
      swift_bridgeObjectRelease();
      *(void *)&long long v77 = v21;
      unint64_t v27 = *(void *)(v21 + 16);
      unint64_t v26 = *(void *)(v21 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_248841948(v26 > 1, v27 + 1, 1);
        uint64_t v21 = v77;
      }
      v22 += 2;
      *(void *)(v21 + 16) = v27 + 1;
      *(unsigned char *)(v21 + v27 + 32) = v25;
      if (!--v19)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = MEMORY[0x263F8EE78];
        goto LABEL_91;
      }
    }
    sub_24882C828();
    swift_allocError();
    *(void *)uint64_t v65 = v24;
    *(void *)(v65 + 8) = v23;
    *(unsigned char *)(v65 + 16) = 4;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
LABEL_65:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = MEMORY[0x263F8EE78];
LABEL_91:
  *(void *)&long long v77 = v20;
  uint64_t v66 = *(void *)(v21 + 16);
  if (v66)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v66; ++i)
    {
      uint64_t v68 = (uint64_t)*(&off_265241E80 + *(char *)(v21 + i + 32));
      sub_2488417D4(v68);
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v30 = v77;
  uint64_t v31 = v77;
LABEL_37:
  uint64_t v74 = *(void *)(v30 + 16);
  uint64_t v70 = v31;
  if (!v74)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
LABEL_68:
    __int16 v55 = v79;
    if (*(void *)(v72 + 16))
    {
      unint64_t v56 = sub_248840E50(0xD000000000000012, 0x80000002488811E0);
      if (v57)
      {
        sub_24882E1C8(*(void *)(v72 + 56) + 32 * v56, (uint64_t)&v77);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C10);
        if (swift_dynamicCast()) {
          uint64_t v58 = v75;
        }
        else {
          uint64_t v58 = 0;
        }
        if (!*(void *)(v72 + 16)) {
          goto LABEL_79;
        }
LABEL_77:
        swift_bridgeObjectRetain();
        unint64_t v59 = sub_248840E50(0xD000000000000018, 0x8000000248881210);
        if (v60)
        {
          sub_24882E1C8(*(void *)(v72 + 56) + 32 * v59, (uint64_t)&v77);
        }
        else
        {
          long long v77 = 0u;
          long long v78 = 0u;
        }
LABEL_81:
        swift_bridgeObjectRelease();
        if (*((void *)&v78 + 1))
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C10);
          if (swift_dynamicCast()) {
            uint64_t v61 = v75;
          }
          else {
            uint64_t v61 = 0;
          }
        }
        else
        {
          sub_2488431F0((uint64_t)&v77, &qword_26B143DC8);
          uint64_t v61 = 0;
        }
        char v62 = v80;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        *(_WORD *)uint64_t v69 = v55;
        *(unsigned char *)(v69 + 2) = v62;
        *(void *)(v69 + 8) = v58;
        *(void *)(v69 + 16) = v61;
        *(void *)(v69 + 24) = v70;
        *(void *)(v69 + 32) = v71;
        *(void *)(v69 + 40) = v73;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      uint64_t v58 = 0;
      if (*(void *)(v72 + 16)) {
        goto LABEL_77;
      }
    }
    else
    {
      uint64_t v58 = 0;
    }
LABEL_79:
    long long v77 = 0u;
    long long v78 = 0u;
    swift_bridgeObjectRetain();
    goto LABEL_81;
  }
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v33 = 0;
  while (v33 < *(void *)(v30 + 16))
  {
    unint64_t v34 = (uint64_t *)(v30 + 32 + 16 * v33);
    uint64_t v35 = *v34;
    uint64_t v36 = v34[1];
    uint64_t v37 = qword_26B143430;
    swift_bridgeObjectRetain();
    if (v37 != -1) {
      swift_once();
    }
    unint64_t v38 = off_26B143420;
    if (!*((void *)off_26B143420 + 2)) {
      goto LABEL_64;
    }
    sub_24887D008();
    sub_24887C808();
    uint64_t v39 = sub_24887D068();
    uint64_t v40 = -1 << v38[32];
    unint64_t v41 = v39 & ~v40;
    unint64_t v42 = v38 + 56;
    if (((*(void *)&v38[((v41 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v41) & 1) == 0) {
      goto LABEL_64;
    }
    uint64_t v43 = *((void *)v38 + 6);
    unint64_t v44 = (void *)(v43 + 16 * v41);
    BOOL v45 = *v44 == v35 && v44[1] == v36;
    if (!v45 && (sub_24887CF48() & 1) == 0)
    {
      uint64_t v46 = ~v40;
      unint64_t v47 = (v41 + 1) & ~v40;
      if (((*(void *)&v42[(v47 >> 3) & 0xFFFFFFFFFFFFFF8] >> v47) & 1) == 0) {
        goto LABEL_64;
      }
      unint64_t v48 = (void *)(v43 + 16 * v47);
      BOOL v49 = *v48 == v35 && v48[1] == v36;
      if (!v49 && (sub_24887CF48() & 1) == 0)
      {
        for (unint64_t j = v47 + 1; ; unint64_t j = v51 + 1)
        {
          unint64_t v51 = j & v46;
          if (((*(void *)&v42[((j & v46) >> 3) & 0xFFFFFFFFFFFFFF8] >> (j & v46)) & 1) == 0) {
            break;
          }
          char v52 = (void *)(v43 + 16 * v51);
          BOOL v53 = *v52 == v35 && v52[1] == v36;
          if (v53 || (sub_24887CF48() & 1) != 0) {
            goto LABEL_39;
          }
        }
LABEL_64:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24882C828();
        swift_allocError();
        *(void *)uint64_t v54 = v35;
        *(void *)(v54 + 8) = v36;
        *(unsigned char *)(v54 + 16) = 3;
        swift_willThrow();
        swift_bridgeObjectRelease();
        goto LABEL_65;
      }
    }
LABEL_39:
    ++v33;
    uint64_t result = swift_bridgeObjectRelease();
    if (v33 == v74)
    {
      swift_bridgeObjectRelease();
      goto LABEL_68;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24883FB30()
{
  sub_24887C808();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24883FC70()
{
  sub_24887C808();
  return swift_bridgeObjectRelease();
}

BOOL sub_24883FDCC(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = result;
  if (*(unsigned char *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 33; ; ++i)
  {
    uint64_t v5 = i - 31;
    if (__OFADD__(i - 32, 1)) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a2 + i);
    uint64_t result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24883FE30(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_24887CF48();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_24887CF48() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24883FEF8(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24883FF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_24887D008();
    sub_24887C808();
    uint64_t v6 = sub_24887D068();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_24887CF48() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_24887CF48() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

void sub_248840094(uint64_t a1, unint64_t a2)
{
  if (qword_26B143AF8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_24887C618();
  __swift_project_value_buffer(v4, (uint64_t)qword_26B143AE0);
  swift_bridgeObjectRetain_n();
  BOOL v5 = sub_24887C5F8();
  os_log_type_t v6 = sub_24887CAB8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = v8;
    *(_DWORD *)uint64_t v7 = 136380675;
    swift_bridgeObjectRetain();
    sub_24882CAE0(a1, a2, &v9);
    sub_24887CB88();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_248827000, v5, v6, "Unknown field, but allowing. { field=%{private}s }", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C582D20](v8, -1, -1);
    MEMORY[0x24C582D20](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_24884023C()
{
  sub_24887CC38();
  swift_bridgeObjectRelease();
  sub_24887C838();
  sub_24887C838();
  sub_24887C838();
  sub_24887C838();
  sub_24882C828();
  swift_allocError();
  *(void *)uint64_t v0 = 0x206E776F6E6B6E55;
  *(void *)(v0 + 8) = 0xEF2720646C656966;
  *(unsigned char *)(v0 + 16) = 1;
  return swift_willThrow();
}

uint64_t static ConfigCommon.matches(audioServiceType:config:)(int a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    int v4 = (unsigned __int16)a1;
    uint64_t v5 = a2 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_248843130(v5, (uint64_t)&v14);
      uint64_t v6 = v15;
      uint64_t v7 = v16;
      __swift_project_boxed_opaque_existential_1(&v14, v15);
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v7 + 8))(v12, v6, v7);
      int v8 = LOWORD(v12[0]);
      char v9 = BYTE2(v12[0]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v9 & 1) != 0 || (a1 & 0x10000) == 0 && v8 == v4)
      {
        swift_bridgeObjectRelease();
        sub_2488431D8(&v14, (uint64_t)v12);
        uint64_t v10 = 1;
        goto LABEL_10;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
      v5 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = 0;
  uint64_t v13 = 0;
  memset(v12, 0, sizeof(v12));
LABEL_10:
  sub_2488431F0((uint64_t)v12, (uint64_t *)&unk_26B143E48);
  return v10;
}

uint64_t static ConfigCommon.matches(sessionAppName:config:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    uint64_t v6 = a3 + 32;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    while (1)
    {
      sub_248843130(v6 + 40 * v7, (uint64_t)&v22);
      uint64_t v8 = v23;
      uint64_t v9 = v24;
      __swift_project_boxed_opaque_existential_1(&v22, v23);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v9 + 8))(&v19, v8, v9);
      uint64_t v10 = (void *)v20;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v10) {
        goto LABEL_23;
      }
      if (a2)
      {
        uint64_t v11 = v10[2];
        if (v11)
        {
          BOOL v12 = v10[4] == a1 && v10[5] == a2;
          if (v12 || (uint64_t result = sub_24887CF48(), (result & 1) != 0))
          {
LABEL_22:
            swift_bridgeObjectRelease();
LABEL_23:
            swift_bridgeObjectRelease();
            sub_2488431D8(&v22, (uint64_t)&v19);
            uint64_t v18 = 1;
            goto LABEL_27;
          }
          if (v11 != 1) {
            break;
          }
        }
      }
LABEL_3:
      ++v7;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v22);
      if (v7 == v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
    long long v14 = v10 + 7;
    uint64_t v15 = 1;
    while (1)
    {
      uint64_t v16 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        break;
      }
      if (*(v14 - 1) == a1 && *v14 == a2) {
        goto LABEL_22;
      }
      uint64_t result = sub_24887CF48();
      if (result) {
        goto LABEL_22;
      }
      v14 += 2;
      ++v15;
      if (v16 == v11) {
        goto LABEL_3;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_26:
    uint64_t v18 = 0;
    uint64_t v21 = 0;
    long long v19 = 0u;
    long long v20 = 0u;
LABEL_27:
    sub_2488431F0((uint64_t)&v19, (uint64_t *)&unk_26B143E48);
    return v18;
  }
  return result;
}

uint64_t static ConfigCommon.matches(sessionProcessName:config:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    uint64_t v6 = a3 + 32;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    while (1)
    {
      sub_248843130(v6 + 40 * v7, (uint64_t)&v21);
      uint64_t v8 = v22;
      uint64_t v9 = v23;
      __swift_project_boxed_opaque_existential_1(&v21, v22);
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v9 + 8))(v19, v8, v9);
      uint64_t v10 = (void *)*((void *)&v19[0] + 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v10) {
        goto LABEL_23;
      }
      if (a2)
      {
        uint64_t v11 = v10[2];
        if (v11)
        {
          BOOL v12 = v10[4] == a1 && v10[5] == a2;
          if (v12 || (uint64_t result = sub_24887CF48(), (result & 1) != 0))
          {
LABEL_22:
            swift_bridgeObjectRelease();
LABEL_23:
            swift_bridgeObjectRelease();
            sub_2488431D8(&v21, (uint64_t)v19);
            uint64_t v18 = 1;
            goto LABEL_27;
          }
          if (v11 != 1) {
            break;
          }
        }
      }
LABEL_3:
      ++v7;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v21);
      if (v7 == v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
    long long v14 = v10 + 7;
    uint64_t v15 = 1;
    while (1)
    {
      uint64_t v16 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        break;
      }
      if (*(v14 - 1) == a1 && *v14 == a2) {
        goto LABEL_22;
      }
      uint64_t result = sub_24887CF48();
      if (result) {
        goto LABEL_22;
      }
      v14 += 2;
      ++v15;
      if (v16 == v11) {
        goto LABEL_3;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_26:
    uint64_t v18 = 0;
    uint64_t v20 = 0;
    memset(v19, 0, sizeof(v19));
LABEL_27:
    sub_2488431F0((uint64_t)v19, (uint64_t *)&unk_26B143E48);
    return v18;
  }
  return result;
}

uint64_t CommonConfigFields.audioServiceType.getter()
{
  return *v0 | (*((unsigned __int8 *)v0 + 2) << 16);
}

uint64_t CommonConfigFields.clientProcessNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CommonConfigFields.hostApplicationDisplayIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CommonConfigFields.platforms.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CommonConfigFields.builds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CommonConfigFields.internals.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t CommonKnownFields.rawValue.getter()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x73646C697562;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x746E656D6D6F63;
      break;
    case 4:
      unint64_t result = 0x73746E656D6D6F63;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      unint64_t result = 0x6C616E7265746E69;
      break;
    case 8:
      unint64_t result = 0x6D726F6674616C70;
      break;
    default:
      return result;
  }
  return result;
}

AudioAnalyticsBase::CommonKnownFields_optional __swiftcall CommonKnownFields.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_24887CDA8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 9;
  if (v3 < 9) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_2488409EC(unsigned __int8 *a1, char *a2)
{
  return sub_248875674(*a1, *a2);
}

uint64_t sub_2488409F8()
{
  return sub_24887D068();
}

uint64_t sub_248840A40()
{
  return sub_24883FB30();
}

uint64_t sub_248840A48()
{
  return sub_24887D068();
}

AudioAnalyticsBase::CommonKnownFields_optional sub_248840A8C(Swift::String *a1)
{
  return CommonKnownFields.init(rawValue:)(*a1);
}

unint64_t sub_248840A98@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = CommonKnownFields.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_248840AC0(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 1:
      sub_24887CC38();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD000000000000016;
      goto LABEL_12;
    case 2:
      sub_24887CC38();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD000000000000019;
      goto LABEL_12;
    case 3:
      unint64_t v5 = 0;
      sub_24887CC38();
      sub_24887C838();
      sub_24887C838();
      sub_24887C838();
      if (qword_26B143430 != -1) {
        swift_once();
      }
      swift_bridgeObjectRetain();
      sub_24887CA18();
      sub_24887C838();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 4:
      sub_24887CC38();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000023;
      sub_24887C838();
      sub_24887C838();
      MEMORY[0x24C581C90](&unk_26FC8EF40, &type metadata for OperatingSystem);
      sub_24887C838();
LABEL_9:
      swift_bridgeObjectRelease();
      return v5;
    case 5:
      sub_24887CC38();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD00000000000001DLL;
      goto LABEL_12;
    case 6:
      sub_24887CC38();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD000000000000018;
      goto LABEL_12;
    case 7:
      if (a1 | a2) {
        return 0x726F467473696C70;
      }
      else {
        return 0x46746F4E656C6966;
      }
    default:
      sub_24887CC38();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD000000000000014;
LABEL_12:
      unint64_t v5 = v3;
      sub_24887C838();
      sub_24887C838();
      return v5;
  }
}

uint64_t sub_248840E28()
{
  return sub_248840AC0(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

unint64_t sub_248840E50(uint64_t a1, uint64_t a2)
{
  sub_24887D008();
  sub_24887C808();
  uint64_t v4 = sub_24887D068();
  return sub_248841078(a1, a2, v4);
}

unint64_t sub_248840EC8(unsigned __int8 a1)
{
  sub_24887D008();
  sub_24883FC70();
  uint64_t v2 = sub_24887D068();
  return sub_24884115C(a1, v2);
}

unint64_t sub_248840F34(uint64_t a1)
{
  uint64_t v2 = sub_24887CB38();
  return sub_2488414B0(a1, v2);
}

unint64_t sub_248840F78(unsigned __int16 a1)
{
  sub_24887D008();
  sub_24887D038();
  uint64_t v2 = sub_24887D068();
  return sub_2488415BC(a1, v2);
}

unint64_t sub_248840FE4(uint64_t a1)
{
  sub_24887C768();
  sub_24887D008();
  sub_24887C808();
  uint64_t v2 = sub_24887D068();
  swift_bridgeObjectRelease();
  return sub_24884165C(a1, v2);
}

unint64_t sub_248841078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_24887CF48() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_24887CF48() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_24884115C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE400000000000000;
      uint64_t v8 = 1953460082;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE600000000000000;
          uint64_t v8 = 0x726576726573;
          break;
        case 2:
          unint64_t v7 = 0xE300000000000000;
          uint64_t v8 = 6517874;
          break;
        case 3:
          uint64_t v8 = 0x656972616D6D7573;
          unint64_t v7 = 0xE900000000000073;
          break;
        case 4:
          uint64_t v8 = 0x74726F7065526F69;
          unint64_t v7 = 0xEB00000000676E69;
          break;
        case 5:
          unint64_t v7 = 0xE300000000000000;
          uint64_t v8 = 6513249;
          break;
        case 6:
          uint64_t v8 = 0x6F4D6D6574737973;
          unint64_t v7 = 0xEE0073726F74696ELL;
          break;
        case 7:
          unint64_t v7 = 0xE600000000000000;
          uint64_t v8 = 0x726574756F72;
          break;
        case 8:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x6E6970736C696174;
          break;
        case 9:
          uint64_t v8 = 1953719668;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE400000000000000;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xE600000000000000;
          uint64_t v11 = 1987208563;
          goto LABEL_31;
        case 2:
          unint64_t v9 = 0xE300000000000000;
          unsigned __int16 v12 = 29810;
          goto LABEL_26;
        case 3:
          unint64_t v9 = 0xE900000000000073;
          if (v8 != 0x656972616D6D7573) {
            goto LABEL_16;
          }
          goto LABEL_15;
        case 4:
          unint64_t v9 = 0xEB00000000676E69;
          if (v8 != 0x74726F7065526F69) {
            goto LABEL_16;
          }
          goto LABEL_15;
        case 5:
          unint64_t v9 = 0xE300000000000000;
          unsigned __int16 v12 = 25185;
LABEL_26:
          if (v8 != (v12 | 0x630000)) {
            goto LABEL_16;
          }
          goto LABEL_15;
        case 6:
          unint64_t v9 = 0xEE0073726F74696ELL;
          if (v8 != 0x6F4D6D6574737973) {
            goto LABEL_16;
          }
          goto LABEL_15;
        case 7:
          unint64_t v9 = 0xE600000000000000;
          uint64_t v11 = 1953853298;
LABEL_31:
          if (v8 != (v11 & 0xFFFF0000FFFFFFFFLL | 0x726500000000)) {
            goto LABEL_16;
          }
          goto LABEL_15;
        case 8:
          unint64_t v9 = 0xE800000000000000;
          if (v8 != 0x6E6970736C696174) {
            goto LABEL_16;
          }
          goto LABEL_15;
        case 9:
          if (v8 != 1953719668) {
            goto LABEL_16;
          }
          goto LABEL_15;
        default:
          if (v8 != 1953460082) {
            goto LABEL_16;
          }
LABEL_15:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_16:
          char v10 = sub_24887CF48();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v10) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_2488414B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_248830908();
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_24887CB48();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_24887CB48();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_2488415BC(unsigned __int16 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int16 *)(v7 + 2 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int16 *)(v7 + 2 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_24884165C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_24887C768();
    uint64_t v8 = v7;
    if (v6 == sub_24887C768() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_24887CF48();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_24887C768();
          uint64_t v15 = v14;
          if (v13 == sub_24887C768() && v15 == v16) {
            break;
          }
          char v18 = sub_24887CF48();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_2488417D4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_248838454(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t sub_248841928(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_248841B38(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_248841948(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_248842A38(a1, a2, a3, *v3, &qword_26B143D68);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_248841970(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_248841CA4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_248841990(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_248841E2C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2488419B0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_248841FB0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2488419D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_248842134(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2488419F0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24884229C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_248841A10(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_248842420(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_248841A30(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2488425AC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_248841A50(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_248842750(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_248841A70(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2488428D8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_248841A90(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_248842A38(a1, a2, a3, *v3, &qword_26B143D88);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_248841AB8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_248842B84(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_248841AD8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_248842D00(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_248841AF8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_248842E70(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_248841B18(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_248842FD0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_248841B38(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D90);
    char v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    char v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t sub_248841CA4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B143E38);
    char v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 208);
  }
  else
  {
    char v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[208 * v8]) {
      memmove(v12, v13, 208 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[208 * v8] || v12 >= &v13[208 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t sub_248841E2C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D58);
    char v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    char v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[80 * v8]) {
      memmove(v12, v13, 80 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[80 * v8] || v12 >= &v13[80 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t sub_248841FB0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D60);
    char v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 168);
  }
  else
  {
    char v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 168 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t sub_248842134(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D78);
    char v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 95;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 7);
  }
  else
  {
    char v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  size_t v15 = v8 << 7;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t sub_24884229C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D70);
    char v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    char v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[80 * v8]) {
      memmove(v12, v13, 80 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[80 * v8] || v12 >= &v13[80 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t sub_248842420(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B142F10);
    char v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    char v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[56 * v8] || v12 >= &v13[56 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t sub_2488425AC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D98);
    char v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    char v10 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 4;
  uint64_t v13 = a4 + 4;
  size_t v14 = 5 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26932CD20);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t sub_248842744(char a1, int64_t a2, char a3, char *a4)
{
  return sub_248842A38(a1, a2, a3, a4, &qword_26B143D80);
}

uint64_t sub_248842750(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26932CD10);
    char v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    char v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[88 * v8]) {
      memmove(v12, v13, 88 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[88 * v8] || v12 >= &v13[88 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t sub_2488428D8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26932CD18);
    char v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    char v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t sub_248842A38(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  int64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v11 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v9]) {
      memmove(v13, v14, v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t sub_248842B84(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26932CD08);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t sub_248842D00(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26932CD00);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t sub_248842E70(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26932CCC8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t sub_248842FD0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DB8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t sub_248843130(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_2488431D8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_2488431F0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_248843250()
{
  unint64_t result = qword_26932CCF8;
  if (!qword_26932CCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CCF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ConfigCommon()
{
  return &type metadata for ConfigCommon;
}

uint64_t destroy for CommonConfigFields()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CommonConfigFields(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CommonConfigFields(uint64_t a1, __int16 *a2)
{
  __int16 v4 = *a2;
  *(unsigned char *)(a1 + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)a1 = v4;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CommonConfigFields(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CommonConfigFields(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CommonConfigFields(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CommonConfigFields()
{
  return &type metadata for CommonConfigFields;
}

uint64_t getEnumTagSinglePayload for CommonKnownFields(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CommonKnownFields(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2488436F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CommonKnownFields()
{
  return &type metadata for CommonKnownFields;
}

uint64_t dispatch thunk of ConfigWithCommonFields.commonFields.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_248843744(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 6u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for ConfigError(uint64_t a1)
{
  return sub_24884376C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_24884376C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 6u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s18AudioAnalyticsBase11ConfigErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_248843744(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ConfigError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_248843744(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24884376C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ConfigError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24884376C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConfigError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 249);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 7) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ConfigError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 249;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2488438FC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 6u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 7);
  }
}

uint64_t sub_248843914(uint64_t result, unsigned int a2)
{
  if (a2 >= 7)
  {
    *(void *)uint64_t result = a2 - 7;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 7;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ConfigError()
{
  return &type metadata for ConfigError;
}

uint64_t sub_248843940(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  *(void *)(v9 + 24) = a4;
  if (a2)
  {
    int64_t v10 = (void (*)(uint64_t, void *))sub_248840094;
    uint64_t v11 = *(void *)(a1 + 16);
    if (v11) {
      goto LABEL_3;
    }
LABEL_9:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  swift_retain();
  int64_t v10 = (void (*)(uint64_t, void *))sub_248843FF4;
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11) {
    goto LABEL_9;
  }
LABEL_3:
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v12 = (void **)(a1 + 40);
  do
  {
    uint64_t v14 = (uint64_t)*(v12 - 1);
    uint64_t v13 = *v12;
    swift_bridgeObjectRetain_n();
    v15._countAndFlagsBits = v14;
    v15._object = v13;
    Keys.init(rawValue:)(v15);
    if (v17 == 66)
    {
      v10(v14, v13);
      if (v4)
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    v12 += 2;
    --v11;
  }
  while (v11);
  swift_release();
  swift_bridgeObjectRelease_n();
  return swift_release();
}

id sub_248843ADC(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  int v2 = self;
  unsigned int v3 = (void *)sub_24887C738();
  id v4 = objc_msgSend(v2, sel_buildPredicate_, v3);

  if (!v4)
  {
    sub_24887CC38();
    swift_bridgeObjectRelease();
    sub_24887C838();
    id v4 = (id)0xD00000000000002ALL;
    sub_24882C828();
    swift_allocError();
    *(void *)uint64_t v5 = 0xD00000000000002ALL;
    *(void *)(v5 + 8) = 0x8000000248882020;
    *(unsigned char *)(v5 + 16) = 1;
    swift_willThrow();
  }
  return v4;
}

unint64_t sub_248843BF8(void *a1, uint64_t a2, uint64_t a3)
{
  if (qword_26B143430 != -1) {
    swift_once();
  }
  if (sub_24883FF5C(a2, a3, (uint64_t)off_26B143420))
  {
    uint64_t v6 = a1[3];
    uint64_t v7 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v6);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 8))(v26, v6, v7);
    unsigned __int8 v8 = (void *)v26[4];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_26B143388 == -1)
    {
      if (!v8) {
        goto LABEL_11;
      }
    }
    else
    {
      swift_once();
      if (!v8) {
        goto LABEL_11;
      }
    }
    if (v8[2])
    {
      char v9 = sub_24883FE30(qword_26B143370, qword_26B143378[0], v8);
      swift_bridgeObjectRelease();
      sub_248843130((uint64_t)a1, (uint64_t)v23);
      if ((v9 & 1) == 0)
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
        sub_248843130((uint64_t)a1, (uint64_t)v20);
LABEL_15:
        LOBYTE(v10) = 0;
LABEL_28:
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
        return v10 & 1;
      }
LABEL_12:
      uint64_t v12 = v24;
      uint64_t v13 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v13 + 8))(v26, v12, v13);
      uint64_t v14 = (void *)v26[3];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v14)
      {
        if (v14[2])
        {
          char v15 = sub_24883FE30(a2, a3, v14);
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
          sub_248843130((uint64_t)a1, (uint64_t)v20);
          if ((v15 & 1) == 0) {
            goto LABEL_15;
          }
LABEL_18:
          uint64_t v16 = v21;
          uint64_t v17 = v22;
          __swift_project_boxed_opaque_existential_1(v20, v21);
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v17 + 8))(v26, v16, v17);
          uint64_t v18 = v26[5];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_26B143398 == -1)
          {
            if (v18)
            {
LABEL_20:
              if (*(void *)(v18 + 16)) {
                LOBYTE(v10) = sub_24883FDCC(byte_26B1433A3, v18);
              }
              else {
                LOBYTE(v10) = 1;
              }
              swift_bridgeObjectRelease();
              goto LABEL_28;
            }
          }
          else
          {
            swift_once();
            if (v18) {
              goto LABEL_20;
            }
          }
          LOBYTE(v10) = 1;
          goto LABEL_28;
        }
        swift_bridgeObjectRelease();
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
      sub_248843130((uint64_t)a1, (uint64_t)v20);
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
LABEL_11:
    sub_248843130((uint64_t)a1, (uint64_t)v23);
    goto LABEL_12;
  }
  sub_24887CC38();
  swift_bridgeObjectRelease();
  sub_24887C838();
  sub_24887C838();
  unint64_t v10 = 0x8000000248882560;
  sub_24882C828();
  swift_allocError();
  *(void *)uint64_t v11 = 0xD000000000000012;
  *(void *)(v11 + 8) = 0x8000000248882560;
  *(unsigned char *)(v11 + 16) = 1;
  swift_willThrow();
  return v10 & 1;
}

uint64_t sub_248843FBC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_248843FF4()
{
  return sub_24884023C();
}

uint64_t String.stringArray.getter(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D90);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24887EA40;
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = a2;
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t Dictionary<>.stringArray.getter()
{
  return sub_24887C9E8();
}

void sub_248844108()
{
  qword_26B143E80 = 0;
}

uint64_t static Constants.unknownReporterID.getter()
{
  if (qword_26B1439B0 != -1) {
    swift_once();
  }
  return qword_26B143E80;
}

unint64_t static Constants.machServiceName.getter()
{
  return 0xD000000000000019;
}

uint64_t static Constants.unknown.getter()
{
  return 0x6E776F6E6B6E75;
}

uint64_t static Constants.loadTestWorkerEnv.getter()
{
  return 0x5345545F44414F4CLL;
}

ValueMetadata *type metadata accessor for Constants()
{
  return &type metadata for Constants;
}

uint64_t DefaultsProfile.__allocating_init(profile:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  DefaultsProfile.init(profile:)(a1);
  return v2;
}

char *DefaultsProfile.init(profile:)(uint64_t a1)
{
  *((void *)v1 + 3) = 0;
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143CF8);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 24) = 0;
  *(void *)(v3 + 16) = 0;
  *((void *)v1 + 4) = v3;
  uint64_t v4 = OBJC_IVAR____TtC18AudioAnalyticsBase15DefaultsProfile_logger;
  if (qword_26B143B58 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24887C618();
  uint64_t v6 = __swift_project_value_buffer(v5, (uint64_t)qword_26B143B38);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(&v1[v4], v6, v5);
  uint64_t v7 = &v1[OBJC_IVAR____TtC18AudioAnalyticsBase15DefaultsProfile_profileURL];
  uint64_t v8 = sub_24887C518();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
  (*(void (**)(uint64_t))(*(void *)v1 + 136))(v10);
  sub_2488446C0();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  return v1;
}

uint64_t DefaultsProfile.deinit()
{
  (*(void (**)(void))(*(void *)v0 + 144))();
  sub_248845860(v0 + 16);
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC18AudioAnalyticsBase15DefaultsProfile_profileURL;
  uint64_t v2 = sub_24887C518();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC18AudioAnalyticsBase15DefaultsProfile_logger;
  uint64_t v4 = sub_24887C618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t DefaultsProfile.__deallocating_deinit()
{
  (*(void (**)(void))(*(void *)v0 + 144))();
  sub_248845860(v0 + 16);
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC18AudioAnalyticsBase15DefaultsProfile_profileURL;
  uint64_t v2 = sub_24887C518();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC18AudioAnalyticsBase15DefaultsProfile_logger;
  uint64_t v4 = sub_24887C618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_248844590@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 32);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  sub_248845888((uint64_t *)(v3 + 16), a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  return swift_release();
}

uint64_t *sub_24884460C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *result;
  if (*result && *(void *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_248840E50(a2, a3);
    if (v9)
    {
      uint64_t v10 = *(void *)(v5 + 56) + 24 * v8;
      uint64_t v11 = *(void *)v10;
      uint64_t v12 = *(void *)(v10 + 8);
      *(void *)a4 = *(void *)v10;
      *(void *)(a4 + 8) = v12;
      char v13 = *(unsigned char *)(v10 + 16);
      *(unsigned char *)(a4 + 16) = v13;
      sub_24882D9F4(v11, v12, v13);
      return (uint64_t *)swift_bridgeObjectRelease();
    }
    uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
  }
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(unsigned char *)(a4 + 16) = -1;
  return result;
}

uint64_t sub_2488446AC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA05D0](v2 + 16, a1);
}

uint64_t sub_2488446C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24887C518();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v0 + OBJC_IVAR____TtC18AudioAnalyticsBase15DefaultsProfile_logger;
  swift_retain_n();
  v39[1] = v6;
  uint64_t v7 = sub_24887C5F8();
  os_log_type_t v8 = sub_24887CAA8();
  char v9 = &unk_26B143000;
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v40 = (void (*)(char *, uint64_t))v2;
    uint64_t v11 = (uint8_t *)v10;
    uint64_t v12 = swift_slowAlloc();
    v42[0] = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    v39[0] = v11 + 4;
    (*(void (**)(char *, uint64_t, void (*)(char *, uint64_t)))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC18AudioAnalyticsBase15DefaultsProfile_profileURL, v40);
    uint64_t v13 = sub_24887C4F8();
    unint64_t v15 = v14;
    (*(void (**)(char *, void))(v3 + 8))(v5, v40);
    uint64_t v41 = sub_24882CAE0(v13, v15, v42);
    sub_24887CB88();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_248827000, v7, v8, "Reading profile. { profilePath=%s }", v11, 0xCu);
    swift_arrayDestroy();
    uint64_t v16 = v12;
    char v9 = (void *)&unk_26B143000;
    MEMORY[0x24C582D20](v16, -1, -1);
    uint64_t v17 = v11;
    uint64_t v2 = (uint64_t)v40;
    MEMORY[0x24C582D20](v17, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  id v18 = objc_msgSend(self, sel_defaultManager);
  uint64_t v19 = v1 + v9[65];
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v20(v5, v19, v2);
  sub_24887C4F8();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v3 + 8);
  v40(v5, v2);
  uint64_t v21 = (void *)sub_24887C738();
  swift_bridgeObjectRelease();
  unsigned int v22 = objc_msgSend(v18, sel_fileExistsAtPath_, v21);

  if (v22)
  {
    v39[0] = v1;
    v20(v5, v19, v2);
    id v23 = objc_allocWithZone(NSDictionary);
    uint64_t v24 = (void *)sub_24887C4C8();
    id v25 = objc_msgSend(v23, sel_initWithContentsOfURL_, v24);

    v40(v5, v2);
    if (v25 && (v42[0] = 0, sub_24887C6A8(), v25, v42[0]))
    {
      uint64_t v26 = Dictionary<>.asSimpleType()(v42[0]);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v26 = 0;
    }
    uint64_t v29 = v39[0];
    swift_bridgeObjectRetain_n();
    uint64_t v30 = sub_24887C5F8();
    os_log_type_t v31 = sub_24887CAA8();
    if (os_log_type_enabled(v30, v31))
    {
      unint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v41 = v26;
      v42[0] = v33;
      *(_DWORD *)unint64_t v32 = 136315138;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26932CD28);
      uint64_t v34 = sub_24887C7A8();
      uint64_t v41 = sub_24882CAE0(v34, v35, v42);
      sub_24887CB88();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_248827000, v30, v31, "Read profile. { newContents=%s }", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C582D20](v33, -1, -1);
      MEMORY[0x24C582D20](v32, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v36 = *(void *)(v29 + 32);
    MEMORY[0x270FA5388](v37);
    v39[-2] = v26;
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v36 + 24));
    sub_2488458A4((uint64_t *)(v36 + 16), (BOOL *)v42);
    os_unfair_lock_unlock((os_unfair_lock_t)(v36 + 24));
    uint64_t v28 = LOBYTE(v42[0]);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = *(void *)(v1 + 32);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v27 + 24));
    sub_248844C80((void *)(v27 + 16), (BOOL *)v42);
    os_unfair_lock_unlock((os_unfair_lock_t)(v27 + 24));
    uint64_t v28 = LOBYTE(v42[0]);
    swift_release();
  }
  return v28;
}

void *sub_248844C80@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2 = result;
  uint64_t v4 = *result;
  if (*result) {
    uint64_t result = (void *)swift_bridgeObjectRelease();
  }
  *uint64_t v2 = 0;
  *a2 = v4 != 0;
  return result;
}

uint64_t sub_248844CD4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  char v6 = a2 == 0;
  if (*a1)
  {
    if (a2)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = swift_bridgeObjectRetain();
      char v6 = sub_2488513D0(v7, a2);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v6 = 0;
    }
    swift_bridgeObjectRelease();
  }
  *a1 = a2;
  *a3 = (v6 & 1) == 0;
  return swift_bridgeObjectRetain();
}

uint64_t EmbeddedDefaultsProfile.__allocating_init(domainName:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  EmbeddedDefaultsProfile.init(domainName:)(a1, a2);
  return v4;
}

uint64_t EmbeddedDefaultsProfile.init(domainName:)(uint64_t a1, unint64_t a2)
{
  unint64_t v22 = a2;
  uint64_t v23 = a1;
  uint64_t v3 = sub_24887C4A8();
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v29 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v27 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B143130);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v26 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_24887C518();
  uint64_t v7 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  id v25 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24887CAD8();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_24887CAE8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24887C688();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v15 = OBJC_IVAR____TtC18AudioAnalyticsBase23EmbeddedDefaultsProfile_notificationQueue;
  sub_248830D64();
  swift_retain();
  sub_24887C678();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F8F138], v10);
  uint64_t v32 = MEMORY[0x263F8EE78];
  sub_248830DA4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C20);
  sub_248830DFC();
  unint64_t v16 = v22;
  sub_24887CBE8();
  *(void *)(v2 + v15) = sub_24887CB18();
  *(_DWORD *)(v2 + OBJC_IVAR____TtC18AudioAnalyticsBase23EmbeddedDefaultsProfile_notificationToken) = 0;
  swift_release();
  uint64_t v17 = v23;
  uint64_t v32 = v23;
  unint64_t v33 = v16;
  uint64_t v30 = 0xD000000000000024;
  unint64_t v31 = 0x80000002488825E0;
  uint64_t v30 = sub_24887C8C8();
  unint64_t v31 = v18;
  sub_24887C828();
  uint64_t v32 = v30;
  unint64_t v33 = v31;
  if (v17 == 0xD000000000000012 && v16 == 0x8000000248882610)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v19 = sub_24887CF48();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0) {
      sub_24887C838();
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v26, 1, 1, v24);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, *MEMORY[0x263F06E50], v29);
  uint64_t v20 = (uint64_t)v25;
  sub_24887C508();
  DefaultsProfile.init(profile:)(v20);
  return v2;
}

uint64_t sub_24884529C()
{
  uint64_t v1 = swift_allocObject();
  swift_weakInit();
  uint64_t v2 = *(NSObject **)(v0 + OBJC_IVAR____TtC18AudioAnalyticsBase23EmbeddedDefaultsProfile_notificationQueue);
  v6[4] = sub_248845B90;
  v6[5] = v1;
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 1107296256;
  v6[2] = sub_248845530;
  v6[3] = &block_descriptor_0;
  uint64_t v3 = _Block_copy(v6);
  swift_retain();
  swift_release();
  uint64_t v4 = (int *)(v0 + OBJC_IVAR____TtC18AudioAnalyticsBase23EmbeddedDefaultsProfile_notificationToken);
  swift_beginAccess();
  notify_register_dispatch("com.apple.ManagedConfiguration.profileListChanged", v4, v2, v3);
  swift_endAccess();
  _Block_release(v3);
  return swift_release();
}

uint64_t sub_2488453C8()
{
  if (qword_26B143B58 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24887C618();
  __swift_project_value_buffer(v0, (uint64_t)qword_26B143B38);
  uint64_t v1 = sub_24887C5F8();
  os_log_type_t v2 = sub_24887CAA8();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_248827000, v1, v2, "Received profileChanged notification.", v3, 2u);
    MEMORY[0x24C582D20](v3, -1, -1);
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    char v6 = sub_2488446C0();
    if (MEMORY[0x24C582DB0](v5 + 16))
    {
      uint64_t v7 = *(void *)(v5 + 24);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(void, uint64_t, uint64_t))(v7 + 8))(v6 & 1, ObjectType, v7);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_248845530(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_248845584()
{
  uint64_t v1 = (int *)(v0 + OBJC_IVAR____TtC18AudioAnalyticsBase23EmbeddedDefaultsProfile_notificationToken);
  swift_beginAccess();
  return notify_cancel(*v1);
}

void EmbeddedDefaultsProfile.__allocating_init(profile:)()
{
}

void EmbeddedDefaultsProfile.init(profile:)()
{
}

void sub_248845630()
{
}

uint64_t EmbeddedDefaultsProfile.deinit()
{
  uint64_t v1 = (int *)(v0 + OBJC_IVAR____TtC18AudioAnalyticsBase23EmbeddedDefaultsProfile_notificationToken);
  swift_beginAccess();
  notify_cancel(*v1);
  sub_248845860(v0 + 16);
  swift_release();
  uint64_t v2 = v0 + OBJC_IVAR____TtC18AudioAnalyticsBase15DefaultsProfile_profileURL;
  uint64_t v3 = sub_24887C518();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = v0 + OBJC_IVAR____TtC18AudioAnalyticsBase15DefaultsProfile_logger;
  uint64_t v5 = sub_24887C618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return v0;
}

uint64_t EmbeddedDefaultsProfile.__deallocating_deinit()
{
  uint64_t v1 = (int *)(v0 + OBJC_IVAR____TtC18AudioAnalyticsBase23EmbeddedDefaultsProfile_notificationToken);
  swift_beginAccess();
  notify_cancel(*v1);
  sub_248845860(v0 + 16);
  swift_release();
  uint64_t v2 = v0 + OBJC_IVAR____TtC18AudioAnalyticsBase15DefaultsProfile_profileURL;
  uint64_t v3 = sub_24887C518();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = v0 + OBJC_IVAR____TtC18AudioAnalyticsBase15DefaultsProfile_logger;
  uint64_t v5 = sub_24887C618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_deallocClassInstance();
}

uint64_t sub_248845860(uint64_t a1)
{
  return a1;
}

uint64_t *sub_248845888@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24884460C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_2488458A4@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_248844CD4(a1, *(void *)(v2 + 16), a2);
}

uint64_t dispatch thunk of InterestedInDefaultsProfileProtocol.handleProfileChange(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_2488458D4()
{
  return type metadata accessor for DefaultsProfile(0);
}

uint64_t type metadata accessor for DefaultsProfile(uint64_t a1)
{
  return sub_248845AA0(a1, (uint64_t *)&unk_26B143218);
}

uint64_t sub_2488458FC()
{
  uint64_t result = sub_24887C518();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24887C618();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for DefaultsProfile(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DefaultsProfile);
}

uint64_t dispatch thunk of DefaultsProfile.__allocating_init(profile:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of DefaultsProfile.subscript.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DefaultsProfile.registerForProfileChangeCallback(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DefaultsProfile.sync()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t sub_248845A78()
{
  return type metadata accessor for EmbeddedDefaultsProfile(0);
}

uint64_t type metadata accessor for EmbeddedDefaultsProfile(uint64_t a1)
{
  return sub_248845AA0(a1, (uint64_t *)&unk_26B143690);
}

uint64_t sub_248845AA0(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_248845AD8()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for EmbeddedDefaultsProfile(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for EmbeddedDefaultsProfile);
}

uint64_t dispatch thunk of EmbeddedDefaultsProfile.__allocating_init(domainName:)()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t sub_248845B58()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_248845B90()
{
  return sub_2488453C8();
}

unint64_t static DefaultsUtilities.reportingDomain.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t static DefaultsUtilities.platformDefaultUserName.getter()
{
  return 0x656C69626F6DLL;
}

uint64_t static DefaultsUtilities.remove(key:applicationID:userName:)()
{
  return _s18AudioAnalyticsBase17DefaultsUtilitiesO3set5value3key13applicationID8userNameyyXlSg_S3StFZ_0(0);
}

uint64_t static DefaultsUtilities.get<A>(key:applicationID:userName:)@<X0>(uint64_t a1@<X5>, uint64_t a2@<X6>, char *a3@<X8>)
{
  uint64_t v43 = a1;
  unint64_t v44 = a3;
  uint64_t v4 = sub_24887CB68();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v41 - v6;
  uint64_t v8 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (__CFString *)sub_24887C738();
  CFPreferencesAppSynchronize(v11);

  uint64_t v12 = (__CFString *)sub_24887C738();
  uint64_t v13 = (__CFString *)sub_24887C738();
  uint64_t v14 = (__CFString *)sub_24887C738();
  CFPropertyListRef v15 = CFPreferencesCopyValue(v12, v13, v14, (CFStringRef)*MEMORY[0x263EFFE50]);

  *(void *)&long long v45 = v15;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC0);
  int v16 = swift_dynamicCast();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v16)
  {
    v17(v7, 0, 1, a2);
    unint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v18(v10, v7, a2);
    char v19 = v44;
    v18(v44, v10, a2);
    uint64_t v20 = v19;
    uint64_t v21 = 0;
LABEL_27:
    uint64_t v37 = a2;
    goto LABEL_28;
  }
  unint64_t v22 = v44;
  v17(v7, 1, 1, a2);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v42);
  uint64_t v23 = swift_conformsToProtocol2();
  if (v23) {
    uint64_t v24 = v23;
  }
  else {
    uint64_t v24 = 0;
  }
  if (v23) {
    uint64_t v25 = a2;
  }
  else {
    uint64_t v25 = 0;
  }
  if (!v25 || !v15 || (CFPropertyListRef v48 = v15, swift_unknownObjectRetain(), !swift_dynamicCast()))
  {
LABEL_19:
    unint64_t v31 = v22;
    if (swift_dynamicCastMetatype() && v15)
    {
      swift_unknownObjectRetain();
      self;
      uint64_t v32 = (void *)swift_dynamicCastObjCClass();
      if (v32)
      {
        unsigned __int8 v33 = objc_msgSend(v32, sel_BOOLValue);
        swift_unknownObjectRelease();
        LOBYTE(v45) = v33;
LABEL_25:
        uint64_t v21 = swift_dynamicCast() ^ 1;
        uint64_t v20 = v31;
        goto LABEL_27;
      }
      swift_unknownObjectRelease();
      CFPropertyListRef v48 = v15;
      swift_unknownObjectRetain();
      if (swift_dynamicCast())
      {
        uint64_t v34 = sub_24887C7B8();
        uint64_t v36 = v35;
        swift_bridgeObjectRelease();
        LOBYTE(v34) = sub_24883FE2C(v34, v36, &unk_26FC8EF90);
        swift_bridgeObjectRelease();
        swift_arrayDestroy();
        LOBYTE(v45) = v34 & 1;
        goto LABEL_25;
      }
    }
    uint64_t v20 = v22;
    uint64_t v21 = 1;
    goto LABEL_27;
  }
  if (swift_conformsToProtocol2()) {
    uint64_t v26 = a2;
  }
  else {
    uint64_t v26 = 0;
  }
  if (!v26)
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v43 = a2;
  uint64_t v42 = sub_24887CB68();
  uint64_t v27 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v29 = (char *)&v41 - v28;
  sub_24887CF28();
  uint64_t v30 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v29, 1, v25) == 1)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v42);
    uint64_t v47 = 0;
    long long v45 = 0u;
    long long v46 = 0u;
  }
  else
  {
    *((void *)&v46 + 1) = v25;
    uint64_t v47 = v24;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v45);
    (*(void (**)(uint64_t *, char *, uint64_t))(v30 + 32))(boxed_opaque_existential_1, v29, v25);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26932CD30);
  uint64_t v40 = v43;
  uint64_t v21 = swift_dynamicCast() ^ 1;
  uint64_t v20 = v22;
  uint64_t v37 = v40;
LABEL_28:
  v17(v20, v21, 1, v37);
  sub_2488469A0();
  return swift_unknownObjectRelease();
}

id static DefaultsUtilities.setGeneric<A>(value:key:applicationID:userName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id result = sub_24884627C(a1, a8);
  if (result)
  {
    _s18AudioAnalyticsBase17DefaultsUtilitiesO3set5value3key13applicationID8userNameyyXlSg_S3StFZ_0(result);
    return (id)swift_unknownObjectRelease();
  }
  return result;
}

id sub_24884627C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v14 - v8;
  if (!swift_dynamicCastMetatype()
    || ((*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, a1, a2), (swift_dynamicCast() & 1) == 0))
  {
    if (swift_dynamicCastMetatype()
      || (swift_conformsToProtocol2() ? (uint64_t v11 = a2) : (uint64_t v11 = 0),
          v11 && (swift_conformsToProtocol2() ? (uint64_t v12 = a2) : (uint64_t v12 = 0), v12)))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a1, a2);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26932CD38);
      if (swift_dynamicCast())
      {
        sub_2488431D8(v14, (uint64_t)v16);
        __swift_project_boxed_opaque_existential_1(v16, v16[3]);
        sub_24887CF18();
        uint64_t v10 = sub_24887C738();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
        return (id)v10;
      }
      uint64_t v15 = 0;
      memset(v14, 0, sizeof(v14));
      sub_248846FFC((uint64_t)v14);
    }
    return 0;
  }
  return objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, LOBYTE(v16[0]));
}

uint64_t static DefaultsUtilities.mobile.getter()
{
  return 0x656C69626F6DLL;
}

uint64_t static DefaultsUtilities.root.getter()
{
  return 1953460082;
}

uint64_t sub_2488464F8()
{
  uint64_t v0 = sub_24887CAE8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24887CAD8();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_24887C688();
  MEMORY[0x270FA5388](v5 - 8);
  sub_248830D64();
  sub_24887C668();
  v7[1] = MEMORY[0x263F8EE78];
  sub_248847078((unint64_t *)&qword_26B143CA0, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C20);
  sub_2488470C0((unint64_t *)&qword_26B143C28, &qword_26B143C20);
  sub_24887CBE8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F130], v0);
  uint64_t result = sub_24887CB18();
  qword_26B143528 = result;
  return result;
}

uint64_t sub_248846738()
{
  if (qword_26B143C68 != -1) {
    swift_once();
  }
  double v0 = *(double *)&qword_26B143C60 * 10.0;
  type metadata accessor for PeriodicClosure();
  uint64_t v1 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D08);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(v1 + 16) = result;
  *(double *)(v1 + 24) = v0;
  off_26B143510 = (_UNKNOWN *)v1;
  return result;
}

void sub_2488467E4()
{
  if (qword_26B143520 != -1) {
    swift_once();
  }
  uint64_t v0 = *((void *)off_26B143510 + 2);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v0 + 24));
  sub_24884705C((double *)(v0 + 16), &v6);
  os_unfair_lock_unlock((os_unfair_lock_t)(v0 + 24));
  BOOL v1 = v6;
  swift_release();
  if (v1)
  {
    CFPreferencesFlushCaches();
    if (qword_26B143BA0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_24887C618();
    __swift_project_value_buffer(v2, (uint64_t)qword_26B143B80);
    oslog = sub_24887C5F8();
    os_log_type_t v3 = sub_24887CAA8();
    if (os_log_type_enabled(oslog, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_248827000, oslog, v3, "Flushed CFPreferences in-memory cache.", v4, 2u);
      MEMORY[0x24C582D20](v4, -1, -1);
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_2488469A0()
{
  uint64_t v0 = sub_24887C648();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  os_log_type_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = sub_24887C688();
  uint64_t v4 = *(void *)(v9[0] - 8);
  MEMORY[0x270FA5388](v9[0]);
  BOOL v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B143538 != -1) {
    swift_once();
  }
  aBlock[4] = sub_2488467E4;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24885B9A0;
  aBlock[3] = &block_descriptor_1;
  uint64_t v7 = _Block_copy(aBlock);
  sub_24887C668();
  v9[1] = MEMORY[0x263F8EE78];
  sub_248847078(&qword_26B143BA8, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143BF0);
  sub_2488470C0((unint64_t *)&unk_26B143BF8, &qword_26B143BF0);
  sub_24887CBE8();
  MEMORY[0x24C581E00](0, v6, v3, v7);
  _Block_release(v7);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, void))(v4 + 8))(v6, v9[0]);
  return swift_release();
}

uint64_t _s18AudioAnalyticsBase17DefaultsUtilitiesO3set5value3key13applicationID8userNameyyXlSg_S3StFZ_0(const void *a1)
{
  uint64_t v2 = sub_24887C648();
  uint64_t v15 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24887C688();
  uint64_t v13 = *(void *)(v5 - 8);
  uint64_t v14 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (__CFString *)sub_24887C738();
  uint64_t v9 = (__CFString *)sub_24887C738();
  uint64_t v10 = (__CFString *)sub_24887C738();
  CFPreferencesSetValue(v8, a1, v9, v10, (CFStringRef)*MEMORY[0x263EFFE50]);

  if (qword_26B143538 != -1) {
    swift_once();
  }
  aBlock[4] = sub_2488467E4;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24885B9A0;
  aBlock[3] = &block_descriptor_3;
  uint64_t v11 = _Block_copy(aBlock);
  sub_24887C668();
  uint64_t v16 = MEMORY[0x263F8EE78];
  sub_248847078(&qword_26B143BA8, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143BF0);
  sub_2488470C0((unint64_t *)&unk_26B143BF8, &qword_26B143BF0);
  sub_24887CBE8();
  MEMORY[0x24C581E00](0, v7, v4, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v14);
  return swift_release();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

ValueMetadata *type metadata accessor for DefaultsUtilities()
{
  return &type metadata for DefaultsUtilities;
}

uint64_t sub_248846FFC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26932CD30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24884705C@<X0>(double *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_24885F2BC(a1, v2, a2);
}

uint64_t sub_248847078(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2488470C0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static DeviceUtilities.currentPlatform.getter()
{
  return sub_2488366CC(&qword_26B1433B8, &qword_26B1433A8);
}

AudioAnalyticsBase::OperatingSystem_optional __swiftcall OperatingSystem.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_24887CDA8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t OperatingSystem.platforms.getter()
{
  return swift_bridgeObjectRetain();
}

void *static OperatingSystem.allCases.getter()
{
  return &unk_26FC8EF68;
}

uint64_t sub_2488471BC()
{
  uint64_t v0 = (__CFString *)sub_24887C738();
  CFPreferencesAppSynchronize(v0);

  uint64_t v1 = (__CFString *)sub_24887C738();
  uint64_t v2 = (__CFString *)sub_24887C738();
  unint64_t v3 = (__CFString *)sub_24887C738();
  CFPropertyListRef v4 = CFPreferencesCopyValue(v1, v2, v3, (CFStringRef)*MEMORY[0x263EFFE50]);

  *(void *)&long long v20 = v4;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC0);
  if (swift_dynamicCast())
  {
    unint64_t v5 = v23;
LABEL_17:
    sub_2488469A0();
    swift_unknownObjectRelease();
    return v5;
  }
  uint64_t v6 = MEMORY[0x263F8D4F8];
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    if (v4)
    {
      uint64_t v8 = result;
      CFPropertyListRef v23 = v4;
      swift_unknownObjectRetain();
      if (swift_dynamicCast())
      {
        if (swift_conformsToProtocol2()) {
          uint64_t v9 = v6;
        }
        else {
          uint64_t v9 = 0;
        }
        if (v9)
        {
          uint64_t v10 = sub_24887CB68();
          uint64_t v11 = *(void *)(v10 - 8);
          MEMORY[0x270FA5388](v10);
          uint64_t v13 = (char *)&v20 - v12;
          sub_24887CF28();
          uint64_t v14 = *(void *)(v6 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v6) == 1)
          {
            (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
            uint64_t v22 = 0;
            long long v20 = 0u;
            long long v21 = 0u;
          }
          else
          {
            *((void *)&v21 + 1) = v6;
            uint64_t v22 = v8;
            boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v20);
            (*(void (**)(uint64_t *, char *, uint64_t))(v14 + 32))(boxed_opaque_existential_1, v13, v6);
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_26932CD30);
          if ((swift_dynamicCast() & 1) == 0) {
            LOBYTE(v23) = 2;
          }
          sub_2488469A0();
          swift_unknownObjectRelease();
          return v23;
        }
        swift_bridgeObjectRelease();
      }
      swift_unknownObjectRetain();
      self;
      uint64_t v15 = (void *)swift_dynamicCastObjCClass();
      if (v15)
      {
        unint64_t v5 = (unint64_t)objc_msgSend(v15, sel_BOOLValue, (void)v20);
        swift_unknownObjectRelease();
        goto LABEL_17;
      }
      swift_unknownObjectRelease();
      CFPropertyListRef v23 = v4;
      swift_unknownObjectRetain();
      if (swift_dynamicCast())
      {
        uint64_t v16 = sub_24887C7B8();
        uint64_t v18 = v17;
        swift_bridgeObjectRelease();
        LOBYTE(v16) = sub_24883FE2C(v16, v18, &unk_26FC8EA40);
        swift_bridgeObjectRelease();
        swift_arrayDestroy();
        unint64_t v5 = v16 & 1;
        goto LABEL_17;
      }
    }
    sub_2488469A0();
    swift_unknownObjectRelease();
    return 2;
  }
  __break(1u);
  return result;
}

uint64_t sub_2488475DC()
{
  uint64_t v0 = (__CFString *)sub_24887C738();
  CFPreferencesAppSynchronize(v0);

  uint64_t v1 = (__CFString *)sub_24887C738();
  uint64_t v2 = (__CFString *)sub_24887C738();
  unint64_t v3 = (__CFString *)sub_24887C738();
  CFPropertyListRef v4 = CFPreferencesCopyValue(v1, v2, v3, (CFStringRef)*MEMORY[0x263EFFE50]);

  CFPropertyListRef v19 = v4;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC0);
  if (swift_dynamicCast())
  {
    uint64_t v5 = v16;
    sub_2488469A0();
    swift_unknownObjectRelease();
    return v5;
  }
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    if (v4)
    {
      uint64_t v7 = result;
      CFPropertyListRef v19 = v4;
      swift_unknownObjectRetain();
      uint64_t v8 = MEMORY[0x263F8D310];
      if (swift_dynamicCast())
      {
        if (swift_conformsToProtocol2()) {
          uint64_t v9 = v8;
        }
        else {
          uint64_t v9 = 0;
        }
        if (v9)
        {
          uint64_t v10 = sub_24887CB68();
          uint64_t v11 = *(void *)(v10 - 8);
          MEMORY[0x270FA5388](v10);
          uint64_t v13 = (char *)&v16 - v12;
          sub_24887CF28();
          uint64_t v14 = *(void *)(v8 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v8) == 1)
          {
            (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
            uint64_t v18 = 0;
            long long v16 = 0u;
            long long v17 = 0u;
          }
          else
          {
            *((void *)&v17 + 1) = v8;
            uint64_t v18 = v7;
            boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v16);
            (*(void (**)(uint64_t *, char *, uint64_t))(v14 + 32))(boxed_opaque_existential_1, v13, v8);
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_26932CD30);
          if ((swift_dynamicCast() & 1) == 0)
          {
            CFPropertyListRef v19 = 0;
            uint64_t v20 = 0;
          }
          sub_2488469A0();
          swift_unknownObjectRelease();
          return (uint64_t)v19;
        }
        swift_bridgeObjectRelease();
      }
    }
    sub_2488469A0();
    swift_unknownObjectRelease();
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_248847930()
{
  uint64_t v0 = (__CFString *)sub_24887C738();
  CFPreferencesAppSynchronize(v0);

  uint64_t v1 = (__CFString *)sub_24887C738();
  uint64_t v2 = (__CFString *)sub_24887C738();
  unint64_t v3 = (__CFString *)sub_24887C738();
  CFPropertyListRef v4 = CFPreferencesCopyValue(v1, v2, v3, (CFStringRef)*MEMORY[0x263EFFE50]);

  CFPropertyListRef v19 = v4;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC0);
  if (swift_dynamicCast())
  {
    uint64_t v5 = v16;
    sub_2488469A0();
    swift_unknownObjectRelease();
    return v5;
  }
  uint64_t v6 = MEMORY[0x263F8D6C8];
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    if (v4 && (uint64_t v8 = result, v19 = v4, swift_unknownObjectRetain(), (swift_dynamicCast() & 1) != 0))
    {
      uint64_t v9 = sub_24887CB68();
      uint64_t v10 = *(void *)(v9 - 8);
      MEMORY[0x270FA5388](v9);
      uint64_t v12 = (char *)&v16 - v11;
      sub_24887CF28();
      uint64_t v13 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v6) == 1)
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        uint64_t v18 = 0;
        long long v16 = 0u;
        long long v17 = 0u;
      }
      else
      {
        *((void *)&v17 + 1) = v6;
        uint64_t v18 = v8;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v16);
        (*(void (**)(uint64_t *, char *, uint64_t))(v13 + 32))(boxed_opaque_existential_1, v12, v6);
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26932CD30);
      char v15 = swift_dynamicCast();
      if ((v15 & 1) == 0) {
        CFPropertyListRef v19 = 0;
      }
      char v20 = v15 ^ 1;
      sub_2488469A0();
      swift_unknownObjectRelease();
      return (uint64_t)v19;
    }
    else
    {
      sub_2488469A0();
      swift_unknownObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

char *_s18AudioAnalyticsBase13SystemUtilityC10debugErrnoSSyFZ_0()
{
  int v0 = MEMORY[0x24C581920]();
  uint64_t result = strerror(v0);
  if (result)
  {
    sub_24887C848();
    sub_24887CC38();
    swift_bridgeObjectRelease();
    sub_24887CF18();
    sub_24887C838();
    swift_bridgeObjectRelease();
    sub_24887C838();
    sub_24887C838();
    swift_bridgeObjectRelease();
    return (char *)0x3D6F6E727265;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static DeviceUtilities.isInLowPower()()
{
  if (qword_26B143DE8 != -1) {
    swift_once();
  }
  sub_24887CAF8();
  return v1;
}

void sub_248847DE8(unsigned char *a1@<X8>)
{
  if (qword_26B143E20 != -1) {
    swift_once();
  }
  uint64_t v3 = *((void *)off_26B143E10 + 2);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  sub_24884705C((double *)(v3 + 16), &v7);
  if (v1)
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
    BOOL v4 = v7;
    swift_release();
    if (v4)
    {
      id v5 = objc_msgSend(self, sel_processInfo);
      unsigned __int8 v6 = objc_msgSend(v5, sel_isLowPowerModeEnabled);

      byte_26B143DF8 = v6;
    }
    swift_release();
    *a1 = byte_26B143DF8;
  }
}

uint64_t static DeviceUtilities.thermalState()()
{
  if (qword_26B143DE8 != -1) {
    swift_once();
  }
  type metadata accessor for ThermalState(0);
  sub_24887CAF8();
  return v1;
}

void sub_248847FA8(void *a1@<X8>)
{
  if (qword_26B143E08 != -1) {
    swift_once();
  }
  uint64_t v3 = *((void *)off_26B143E00 + 2);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  sub_24884705C((double *)(v3 + 16), &v7);
  if (v1)
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
    BOOL v4 = v7;
    swift_release();
    if (v4)
    {
      id v5 = objc_msgSend(self, sel_processInfo);
      id v6 = objc_msgSend(v5, sel_thermalState);

      qword_26B143DD0 = (uint64_t)v6;
    }
    swift_release();
    *a1 = qword_26B143DD0;
  }
}

uint64_t static DeviceUtilities.thermalStateString(from:)()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_248848178()
{
  uint64_t v3 = &type metadata for DeviceUtilities.Features;
  unint64_t v4 = sub_24884A23C();
  char v0 = sub_24887C5C8();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
  byte_26B143350 = v0 & 1;
  return result;
}

uint64_t static DeviceUtilities.isAudioMxdEnabled.getter()
{
  return sub_248848D5C(qword_26B143358, (unsigned __int8 *)&byte_26B143350);
}

void sub_2488481F4()
{
  word_26B142FD0 = 0;
  qword_26B142FB0 = 0xD000000000000017;
  *(void *)algn_26B142FB8 = 0x80000002488827F0;
  qword_26B142FC0 = 0xD00000000000001FLL;
  unk_26B142FC8 = 0x8000000248882780;
}

uint64_t static DeviceUtilities.isGlitchTailspinEnabled.getter()
{
  if (qword_26B142FE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  char v0 = sub_2488471BC();
  if (v0 == 2) {
    char v1 = HIBYTE(word_26B142FD0);
  }
  else {
    char v1 = v0 & 1;
  }
  if (v0 == 2) {
    char v2 = HIBYTE(word_26B142FD0);
  }
  else {
    char v2 = v0;
  }
  LOBYTE(word_26B142FD0) = v1;
  swift_endAccess();
  return v2 & 1;
}

void sub_2488482EC()
{
  if (qword_26B142FA8 != -1) {
    swift_once();
  }
  if (byte_26B1433C6 == 1 && (uint64_t v0 = sub_2488475DC(), v1))
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    if (v0 == 0x7972726163 && v1 == 0xE500000000000000
      || (sub_24887CF48() & 1) != 0
      || v2 == 0x756F62616B6C6177 && v3 == 0xE900000000000074)
    {
      char v4 = 1;
    }
    else
    {
      char v4 = sub_24887CF48();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v4 = 0;
  }
  byte_26B143E7A = v4 & 1;
}

uint64_t static DeviceUtilities.isCarryDevice.getter()
{
  return sub_248848D5C(&qword_26B143368, (unsigned __int8 *)&byte_26B143E7A);
}

void sub_248848484(uint64_t a1)
{
}

uint64_t static DeviceUtilities.isHomePod.getter()
{
  return sub_248848D5C(qword_26932CA20, byte_26932CD43);
}

void sub_2488484D4(uint64_t a1)
{
}

void sub_2488484F0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  id v5 = (id)MobileGestalt_get_current_device();
  if (v5)
  {
    id v6 = v5;
    id v7 = (id)MobileGestalt_copy_deviceClass_obj();

    if (v7)
    {
      sub_24887C768();

      sub_24884A1E8();
      char v8 = sub_24887CBC8();
      swift_bridgeObjectRelease();
      *a4 = v8 & 1;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t static DeviceUtilities.isIphone.getter()
{
  return sub_248848D5C(&qword_26B143418, byte_26B143414);
}

void sub_2488485DC()
{
  id v0 = (id)MobileGestalt_get_current_device();
  if (v0)
  {
    uint64_t v1 = v0;
    int deviceClassNumber = MobileGestalt_get_deviceClassNumber();

    byte_26932CD45 = deviceClassNumber == 11;
  }
  else
  {
    __break(1u);
  }
}

uint64_t static DeviceUtilities.isVision.getter()
{
  return sub_248848D5C(&qword_26B143E40, (unsigned __int8 *)byte_26932CD45);
}

void sub_248848650()
{
  id v0 = (id)MobileGestalt_get_current_device();
  if (v0)
  {
    uint64_t v1 = v0;
    int internalBuild = MobileGestalt_get_internalBuild();

    if (internalBuild)
    {
      id v6 = &type metadata for AudioAnalytics;
      unint64_t v7 = sub_24884A194();
      char v3 = sub_24887C5C8();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
      char v4 = v3 ^ 1;
    }
    else
    {
      char v4 = 0;
    }
    byte_26B1433C6 = v4 & 1;
  }
  else
  {
    __break(1u);
  }
}

uint64_t static DeviceUtilities.isInternalBuild.getter()
{
  return sub_248848D5C(&qword_26B142FA8, (unsigned __int8 *)byte_26B1433C6);
}

void sub_248848700(uint64_t a1)
{
}

uint64_t static DeviceUtilities.hasAppleNeuralEngine.getter()
{
  return sub_248848D5C(qword_26932CA30, (unsigned __int8 *)&unk_26932CD47);
}

uint64_t sub_248848744()
{
  uint64_t result = sub_248848768();
  qword_26B1433A8 = result;
  unk_26B1433B0 = v1;
  return result;
}

uint64_t sub_248848768()
{
  uint64_t result = (uint64_t)(id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v1 = (void *)result;
    id v2 = (id)MobileGestalt_copy_deviceName_obj();

    if (v2)
    {
      uint64_t v3 = sub_24887C768();
      unint64_t v5 = v4;

      if (qword_26B143430 != -1) {
        swift_once();
      }
      if ((sub_24883FF5C(v3, v5, (uint64_t)off_26B143420) & 1) == 0)
      {
        if (qword_26B143BA0 != -1) {
          swift_once();
        }
        uint64_t v6 = sub_24887C618();
        __swift_project_value_buffer(v6, (uint64_t)qword_26B143B80);
        swift_bridgeObjectRetain();
        unint64_t v7 = sub_24887C5F8();
        os_log_type_t v8 = sub_24887CAB8();
        if (os_log_type_enabled(v7, v8))
        {
          uint64_t v9 = (uint8_t *)swift_slowAlloc();
          uint64_t v10 = swift_slowAlloc();
          uint64_t v15 = v10;
          *(_DWORD *)uint64_t v9 = 136380675;
          swift_bridgeObjectRetain();
          sub_24882CAE0(v3, v5, &v15);
          sub_24887CB88();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_248827000, v7, v8, "Unknown platform. Defaulting to iPhone. { platform=%{private}s }", v9, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24C582D20](v10, -1, -1);
          MEMORY[0x24C582D20](v9, -1, -1);

          return 0x656E6F685069;
        }
        else
        {
          uint64_t v3 = 0x656E6F685069;

          swift_bridgeObjectRelease_n();
        }
      }
    }
    else
    {
      if (qword_26B143BA0 != -1) {
        swift_once();
      }
      uint64_t v3 = 0x656E6F685069;
      uint64_t v11 = sub_24887C618();
      __swift_project_value_buffer(v11, (uint64_t)qword_26B143B80);
      uint64_t v12 = sub_24887C5F8();
      os_log_type_t v13 = sub_24887CAB8();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl(&dword_248827000, v12, v13, "MobileGestalt.current.deviceName returned nil. Defaulting to iPhone.", v14, 2u);
        MEMORY[0x24C582D20](v14, -1, -1);
      }
    }
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_248848A7C(uint64_t a1)
{
}

uint64_t static DeviceUtilities.marketingProductName.getter()
{
  return sub_2488366CC(&qword_26932CA40, &qword_26932CD48);
}

void sub_248848AC8(uint64_t a1)
{
}

uint64_t static DeviceUtilities.productType.getter()
{
  return sub_2488366CC(&qword_26932CA48, &qword_26932CD58);
}

void sub_248848B14(uint64_t a1)
{
}

uint64_t static DeviceUtilities.productVersion.getter()
{
  return sub_2488366CC(qword_26932CA50, &qword_26932CD68);
}

void sub_248848B60(uint64_t a1)
{
}

void sub_248848B84(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, void *a4)
{
  id v7 = (id)MobileGestalt_get_current_device();
  if (v7)
  {
    os_log_type_t v8 = v7;
    id v9 = (id)a2();

    if (v9)
    {
      uint64_t v10 = sub_24887C768();
      uint64_t v12 = v11;

      *a3 = v10;
      *a4 = v12;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t static DeviceUtilities.buildVersion.getter()
{
  return sub_2488366CC(&qword_26B143388, &qword_26B143370);
}

void sub_248848C38(uint64_t a1)
{
}

uint64_t static DeviceUtilities.isVirtualDevice.getter()
{
  return sub_248848D5C(qword_26932CA60, byte_26932CD78);
}

void sub_248848C7C(uint64_t a1)
{
}

uint64_t static DeviceUtilities.supportsHaptics.getter()
{
  return sub_248848D5C(&qword_26B1433D8, byte_26B1433C9);
}

void sub_248848CC0(uint64_t a1)
{
}

void sub_248848CE0(uint64_t a1, uint64_t (*a2)(void), unsigned char *a3)
{
  id v5 = (id)MobileGestalt_get_current_device();
  if (v5)
  {
    uint64_t v6 = v5;
    char v7 = a2();

    *a3 = v7;
  }
  else
  {
    __break(1u);
  }
}

uint64_t static DeviceUtilities.isUIBuild.getter()
{
  return sub_248848D5C(&qword_26932CA70, byte_26932CD7A);
}

uint64_t sub_248848D5C(void *a1, unsigned __int8 *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  return *a2;
}

uint64_t sub_248848D98()
{
  if (qword_26B142FA8 != -1) {
    uint64_t result = swift_once();
  }
  byte_26B1433A3 = byte_26B1433C6;
  return result;
}

uint64_t static DeviceUtilities.internalOsInt.getter()
{
  if (qword_26B143398 != -1) {
    swift_once();
  }
  return byte_26B1433A3;
}

uint64_t static DeviceUtilities.deviceNameXrOS.getter()
{
  return 1397715576;
}

uint64_t sub_248848E48()
{
  id v0 = (void *)sub_248856690((uint64_t)&unk_26FC8D850);
  uint64_t result = swift_arrayDestroy();
  off_26B143420 = v0;
  return result;
}

uint64_t static DeviceUtilities.platforms.getter()
{
  if (qword_26B143430 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

void static DeviceUtilities.currentOperatingSystem.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

const char *sub_248848F00()
{
  return "CoreAudioServices";
}

const char *sub_248848F14()
{
  return "audiomxd";
}

uint64_t sub_248848F28()
{
  uint64_t v0 = sub_24887CAE8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24887CAD8();
  MEMORY[0x270FA5388]();
  sub_24887C688();
  MEMORY[0x270FA5388]();
  sub_248830D64();
  sub_24887C668();
  v5[1] = MEMORY[0x263F8EE78];
  sub_248830DA4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C20);
  sub_24882FA1C((unint64_t *)&qword_26B143C28, &qword_26B143C20);
  sub_24887CBE8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F130], v0);
  uint64_t result = sub_24887CB18();
  qword_26B143DF0 = result;
  return result;
}

uint64_t sub_24884914C()
{
  if (qword_26B1430A0 != -1) {
    swift_once();
  }
  double v0 = *(double *)&qword_26B143C70 * 5.0;
  type metadata accessor for PeriodicClosure();
  uint64_t v1 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D08);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(v1 + 16) = result;
  *(double *)(v1 + 24) = v0;
  off_26B143E10 = (_UNKNOWN *)v1;
  return result;
}

uint64_t sub_2488491F8()
{
  if (qword_26B1430A0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_26B143C70;
  type metadata accessor for PeriodicClosure();
  uint64_t v1 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D08);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(v1 + 16) = result;
  *(void *)(v1 + 24) = v0;
  off_26B143E00 = (_UNKNOWN *)v1;
  return result;
}

uint64_t sub_24884929C()
{
  uint64_t v0 = sub_24887C618();
  __swift_allocate_value_buffer(v0, qword_26B1433E0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26B1433E0);
  if (qword_26B143BA0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_26B143B80);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t OperatingSystem.rawValue.getter()
{
  uint64_t result = 5459817;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x534F6863746177;
      break;
    case 2:
      uint64_t result = 1397716596;
      break;
    case 3:
      uint64_t result = 0x534F63616DLL;
      break;
    case 4:
      uint64_t result = 1397715576;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2488493F8(unsigned __int8 *a1, char *a2)
{
  return sub_2488758F4(*a1, *a2);
}

uint64_t sub_248849404()
{
  return sub_24887D068();
}

uint64_t sub_2488494E4()
{
  sub_24887C808();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2488495AC()
{
  return sub_24887D068();
}

AudioAnalyticsBase::OperatingSystem_optional sub_248849688(Swift::String *a1)
{
  return OperatingSystem.init(rawValue:)(*a1);
}

void sub_248849694(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 5459817;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x534F6863746177;
      goto LABEL_3;
    case 2:
      *a1 = 1397716596;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 0x534F63616DLL;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 1397715576;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_248849738(void *a1@<X8>)
{
  *a1 = &unk_26FC8F000;
}

uint64_t sub_248849748()
{
  return sub_24887D068();
}

uint64_t sub_24884978C()
{
  return sub_24887D018();
}

uint64_t sub_2488497B4()
{
  return sub_24887D068();
}

const char *sub_2488497F4()
{
  return "AudioAnalytics";
}

const char *sub_248849808()
{
  return "SimulateCustomer";
}

BOOL _s18AudioAnalyticsBase15DeviceUtilitiesO17hasRootsInstalledSbyFZ_0()
{
  v16[3] = *MEMORY[0x263EF8340];
  size_t v14 = 8;
  v15[0] = 0;
  int v0 = sysctlbyname("kern.roots_installed", v15, &v14, 0, 0);
  if (v0 == sub_24887C638())
  {
    if (qword_26B143400 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_24887C618();
    __swift_project_value_buffer(v1, (uint64_t)qword_26B1433E0);
    unint64_t v2 = sub_24887C5F8();
    os_log_type_t v3 = sub_24887CAC8();
    if (os_log_type_enabled(v2, v3))
    {
      unint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unint64_t v4 = 134217984;
      swift_beginAccess();
      v16[0] = v15[0];
      sub_24887CB88();
      _os_log_impl(&dword_248827000, v2, v3, "Installed root info %llu", v4, 0xCu);
      MEMORY[0x24C582D20](v4, -1, -1);
    }

    swift_beginAccess();
    return v15[0] != 0;
  }
  else
  {
    uint64_t v6 = _s18AudioAnalyticsBase13SystemUtilityC10debugErrnoSSyFZ_0();
    unint64_t v8 = v7;
    if (qword_26B143400 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_24887C618();
    __swift_project_value_buffer(v9, (uint64_t)qword_26B1433E0);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_24887C5F8();
    os_log_type_t v11 = sub_24887CAB8();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      v16[0] = v13;
      *(_DWORD *)uint64_t v12 = 136380675;
      swift_bridgeObjectRetain();
      v15[1] = sub_24882CAE0((uint64_t)v6, v8, v16);
      sub_24887CB88();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_248827000, v10, v11, "hasRootsInstalled(): Unable to query kern.roots_installed { %{private}s }", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C582D20](v13, -1, -1);
      MEMORY[0x24C582D20](v12, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
}

uint64_t sub_248849B48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
LABEL_9:
    __break(1u);
    return MEMORY[0x270F9D6B0](a1, a2);
  }
  uint64_t v3 = a1;
  int v4 = *(unsigned __int8 *)(a1 + 32);
  a1 += 32;
  if (v4)
  {
    a2 = 0;
    uint64_t v5 = v2 - 1;
    uint64_t v6 = v3 + 33;
    while (v5 != a2)
    {
      if (!*(unsigned __int8 *)(v6 + a2++)) {
        return MEMORY[0x270F9D6B0](a1, a2);
      }
    }
    __break(1u);
    goto LABEL_9;
  }
  a2 = 0;
  return MEMORY[0x270F9D6B0](a1, a2);
}

uint64_t _s18AudioAnalyticsBase15DeviceUtilitiesO10hasSerial3SbyFZ_0()
{
  _OWORD v20[2] = *MEMORY[0x263EF8340];
  size_t v19 = 0;
  int v0 = sysctlbyname("kern.bootargs", 0, &v19, 0, 0);
  if (v0 != sub_24887C638())
  {
    if (qword_26B143400 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_24887C618();
    __swift_project_value_buffer(v8, (uint64_t)qword_26B1433E0);
    uint64_t v9 = sub_24887C5F8();
    os_log_type_t v10 = sub_24887CAB8();
    if (!os_log_type_enabled(v9, v10)) {
      goto LABEL_15;
    }
    os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v11 = 67174657;
    LODWORD(v20[0]) = v0;
    sub_24887CB88();
    _os_log_impl(&dword_248827000, v9, v10, "hasSerial3(): kern.bootargs getsize failed. { result=%{private}d }", v11, 8u);
LABEL_14:
    MEMORY[0x24C582D20](v11, -1, -1);
LABEL_15:

LABEL_16:
    char v7 = 0;
    return v7 & 1;
  }
  uint64_t v1 = sub_248873664(0, v19);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v1 = (uint64_t)sub_248874F00(v1);
  }
  int v2 = sysctlbyname("kern.bootargs", (void *)(v1 + 32), &v19, 0, 0);
  if (v2 != sub_24887C638())
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = _s18AudioAnalyticsBase13SystemUtilityC10debugErrnoSSyFZ_0();
    unint64_t v14 = v13;
    if (qword_26B143400 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_24887C618();
    __swift_project_value_buffer(v15, (uint64_t)qword_26B1433E0);
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_24887C5F8();
    os_log_type_t v16 = sub_24887CAB8();
    if (!os_log_type_enabled(v9, v16))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_16;
    }
    os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    v20[0] = v17;
    *(_DWORD *)os_log_type_t v11 = 136380675;
    swift_bridgeObjectRetain();
    sub_24882CAE0((uint64_t)v12, v14, v20);
    sub_24887CB88();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_248827000, v9, v16, "hasSerial3(): kern.bootargs failed. { %{private}s }", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C582D20](v17, -1, -1);
    goto LABEL_14;
  }
  uint64_t v4 = sub_248849B48(v1, v3);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  v20[0] = v4;
  v20[1] = v6;
  sub_24884A1E8();
  char v7 = sub_24887CBC8();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_248849F2C(unsigned char *a1@<X8>)
{
}

void sub_248849F44(void *a1@<X8>)
{
}

unint64_t sub_248849F60()
{
  unint64_t result = qword_26932CD80;
  if (!qword_26932CD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CD80);
  }
  return result;
}

uint64_t sub_248849FB4()
{
  return sub_24882FA1C(&qword_26932CD88, &qword_26932CD90);
}

ValueMetadata *type metadata accessor for DeviceUtilities()
{
  return &type metadata for DeviceUtilities;
}

uint64_t getEnumTagSinglePayload for OperatingSystem(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for OperatingSystem(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24884A15CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OperatingSystem()
{
  return &type metadata for OperatingSystem;
}

unint64_t sub_24884A194()
{
  unint64_t result = qword_26B143138;
  if (!qword_26B143138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B143138);
  }
  return result;
}

unint64_t sub_24884A1E8()
{
  unint64_t result = qword_26B143BC0;
  if (!qword_26B143BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B143BC0);
  }
  return result;
}

unint64_t sub_24884A23C()
{
  unint64_t result = qword_26B143408;
  if (!qword_26B143408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26B143408);
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

ValueMetadata *type metadata accessor for DeviceUtilities.Features()
{
  return &type metadata for DeviceUtilities.Features;
}

unsigned char *_s18AudioAnalyticsBase15DeviceUtilitiesO8FeaturesOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24884A3A8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioAnalytics()
{
  return &type metadata for AudioAnalytics;
}

unint64_t sub_24884A3E4()
{
  unint64_t result = qword_26932CD98;
  if (!qword_26932CD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CD98);
  }
  return result;
}

unint64_t sub_24884A43C()
{
  unint64_t result = qword_26932CDA0;
  if (!qword_26932CDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CDA0);
  }
  return result;
}

Swift::Double __swiftcall Double.rounded(toPlaces:)(Swift::Int toPlaces)
{
  double v2 = v1;
  double v3 = __exp10((double)toPlaces);
  return round(v3 * v2) / v3;
}

uint8_t *static EncryptionUtilities.decrypt(data:)(uint64_t a1, uint8_t *a2)
{
  unsigned int v4 = (__SecKey *)sub_24884AFAC(0xD000000000000084, 0x8000000248882190, (uint8_t *)1);
  if (!v2)
  {
    uint64_t v5 = v4;
    a2 = sub_24884B3AC(v4);
  }
  return a2;
}

BOOL static EncryptionError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t EncryptionError.hash(into:)()
{
  return sub_24887D018();
}

uint64_t EncryptionError.hashValue.getter()
{
  return sub_24887D068();
}

BOOL sub_24884A5D8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24884A5EC()
{
  return sub_24887D068();
}

uint64_t sub_24884A634()
{
  return sub_24887D018();
}

uint64_t sub_24884A660()
{
  return sub_24887D068();
}

SecKeyRef static EncryptionUtilities.buildPrivateKey()()
{
  v11[17] = *(CFErrorRef *)MEMORY[0x263EF8340];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DA0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24887EE20;
  *(void *)(inited + 32) = sub_24887C768();
  *(void *)(inited + 40) = v1;
  if (qword_26B143548 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24887C738();
  type metadata accessor for CFString(0);
  *(void *)(inited + 72) = v3;
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 80) = sub_24887C768();
  *(void *)(inited + 88) = v4;
  *(void *)(inited + 120) = MEMORY[0x263F8D6C8];
  *(void *)(inited + 96) = 256;
  sub_24882B5BC(inited);
  v11[0] = 0;
  CFDictionaryRef v5 = (const __CFDictionary *)sub_24887C698();
  swift_bridgeObjectRelease();
  SecKeyRef RandomKey = SecKeyCreateRandomKey(v5, v11);

  if (!RandomKey)
  {
    CFErrorRef v7 = v11[0];
    if (v11[0])
    {
      type metadata accessor for CFError(0);
      sub_24884B678();
      swift_allocError();
      *int v8 = v7;
    }
    else
    {
      sub_24884B6D0();
      swift_allocError();
      *uint64_t v9 = 0;
    }
    swift_willThrow();
  }
  return RandomKey;
}

SecKeyRef static EncryptionUtilities.getPublicKey(privateKey:)(__SecKey *a1)
{
  SecKeyRef v1 = SecKeyCopyPublicKey(a1);
  if (!v1)
  {
    sub_24884B6D0();
    swift_allocError();
    *uint64_t v2 = 0;
    swift_willThrow();
  }
  return v1;
}

uint8_t *static EncryptionUtilities.getBase64(fromKey:)(__SecKey *a1)
{
  error[1] = *(CFErrorRef *)MEMORY[0x263EF8340];
  error[0] = 0;
  CFDataRef v1 = SecKeyCopyExternalRepresentation(a1, error);
  if (v1)
  {
    CFDataRef v2 = v1;
    uint64_t v3 = sub_24887C568();
    unint64_t v5 = v4;
    unsigned int v6 = (uint8_t *)sub_24887C558();
    sub_248838EB4(v3, v5);
  }
  else
  {
    if (qword_26B143080 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_24887C618();
    unsigned int v6 = (uint8_t *)__swift_project_value_buffer(v7, (uint64_t)qword_26B143060);
    int v8 = sub_24887C5F8();
    os_log_type_t v9 = sub_24887CAB8();
    if (os_log_type_enabled(v8, v9))
    {
      unsigned int v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      v16[0] = v10;
      *(_DWORD *)unsigned int v6 = 136380675;
      swift_beginAccess();
      if (error[0]) {
        os_log_type_t v11 = error[0];
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26932CDB8);
      uint64_t v12 = sub_24887C7A8();
      sub_24882CAE0(v12, v13, v16);
      sub_24887CB88();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_248827000, v8, v9, "EncryptionUtilities: Failed in getBase64_fromKey: %{private}s", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C582D20](v10, -1, -1);
      MEMORY[0x24C582D20](v6, -1, -1);
    }

    swift_beginAccess();
    if (error[0]) {

    }
    sub_24884B6D0();
    swift_allocError();
    unsigned char *v14 = 2;
    swift_willThrow();
  }
  return v6;
}

uint8_t *static EncryptionUtilities.getKey(fromBase64:isPrivateKey:)(uint64_t a1, uint64_t a2, uint8_t *a3)
{
  return sub_24884AFAC(a1, a2, a3);
}

const __CFData *static EncryptionUtilities.encryptToData(privateKey:data:)(__SecKey *a1, uint64_t a2, const __CFData *a3)
{
  error[1] = *(CFErrorRef *)MEMORY[0x263EF8340];
  SecKeyRef v4 = SecKeyCopyPublicKey(a1);
  if (v4)
  {
    unint64_t v5 = v4;
    error[0] = 0;
    if (qword_26B143550 != -1) {
      swift_once();
    }
    CFStringRef v6 = (const __CFString *)qword_26B144EB0;
    a3 = (const __CFData *)sub_24887C548();
    CFDataRef EncryptedData = SecKeyCreateEncryptedData(v5, v6, a3, error);

    if (EncryptedData)
    {
      a3 = (const __CFData *)sub_24887C568();
    }
    else
    {
      if (qword_26B143080 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_24887C618();
      __swift_project_value_buffer(v9, (uint64_t)qword_26B143060);
      uint64_t v10 = sub_24887C5F8();
      os_log_type_t v11 = sub_24887CAB8();
      if (os_log_type_enabled(v10, v11))
      {
        a3 = (const __CFData *)swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        v18[0] = v12;
        *(_DWORD *)a3 = 136380675;
        swift_beginAccess();
        if (error[0]) {
          unint64_t v13 = error[0];
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26932CDB8);
        uint64_t v14 = sub_24887C7A8();
        sub_24882CAE0(v14, v15, v18);
        sub_24887CB88();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_248827000, v10, v11, "EncryptionUtilities: Failed in encryptToBase64String: %{private}s", (uint8_t *)a3, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C582D20](v12, -1, -1);
        MEMORY[0x24C582D20](a3, -1, -1);
      }

      swift_beginAccess();
      if (error[0]) {

      }
      sub_24884B6D0();
      swift_allocError();
      *os_log_type_t v16 = 4;
      swift_willThrow();
    }
  }
  else
  {
    sub_24884B6D0();
    swift_allocError();
    *int v8 = 0;
    swift_willThrow();
  }
  return a3;
}

__SecKey *static EncryptionUtilities.decryptToData(privateKey:base64String:)(__SecKey *a1)
{
  uint64_t v2 = sub_24887C538();
  if (v3 >> 60 == 15)
  {
    sub_24884B6D0();
    swift_allocError();
    *SecKeyRef v4 = 2;
    swift_willThrow();
  }
  else
  {
    uint64_t v5 = v2;
    unint64_t v6 = v3;
    a1 = (__SecKey *)sub_24884B3AC(a1);
    sub_24884B724(v5, v6);
  }
  return a1;
}

uint8_t *static EncryptionUtilities.decryptToData(privateKey:data:)(__SecKey *a1)
{
  return sub_24884B3AC(a1);
}

uint64_t sub_24884AF48()
{
  uint64_t result = sub_24887C768();
  qword_26B144EC0 = result;
  *(void *)algn_26B144EC8 = v1;
  return result;
}

id sub_24884AF78()
{
  qword_26B144EB0 = *MEMORY[0x263F17308];
  return (id)qword_26B144EB0;
}

unint64_t static EncryptionUtilities.defaultPrivateKeyBase64.getter()
{
  return 0xD000000000000084;
}

uint8_t *sub_24884AFAC(uint64_t a1, uint64_t a2, uint8_t *a3)
{
  error[1] = *(CFErrorRef *)MEMORY[0x263EF8340];
  uint64_t v4 = sub_24887C538();
  if (v5 >> 60 == 15)
  {
    sub_24884B6D0();
    swift_allocError();
    *unint64_t v6 = 2;
    swift_willThrow();
  }
  else
  {
    uint64_t v7 = v4;
    unint64_t v8 = v5;
    error[0] = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DA0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24887E3D0;
    *(void *)(inited + 32) = sub_24887C768();
    *(void *)(inited + 40) = v10;
    if (qword_26B143548 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_24887C738();
    type metadata accessor for CFString(0);
    *(void *)(inited + 72) = v12;
    *(void *)(inited + 48) = v11;
    *(void *)(inited + 80) = sub_24887C768();
    *(void *)(inited + 88) = v13;
    *(void *)(inited + 120) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 96) = 256;
    *(void *)(inited + 128) = sub_24887C768();
    *(void *)(inited + 136) = v14;
    uint64_t v15 = sub_24887C768();
    *(void *)(inited + 168) = MEMORY[0x263F8D310];
    *(void *)(inited + 144) = v15;
    *(void *)(inited + 152) = v16;
    sub_24882B5BC(inited);
    CFDataRef v17 = (const __CFData *)sub_24887C548();
    CFDictionaryRef v18 = (const __CFDictionary *)sub_24887C698();
    swift_bridgeObjectRelease();
    a3 = (uint8_t *)SecKeyCreateWithData(v17, v18, error);

    if (a3)
    {
      sub_24884B724(v7, v8);
    }
    else
    {
      if (qword_26B143080 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_24887C618();
      __swift_project_value_buffer(v19, (uint64_t)qword_26B143060);
      char v20 = sub_24887C5F8();
      os_log_type_t v21 = sub_24887CAB8();
      if (os_log_type_enabled(v20, v21))
      {
        a3 = (uint8_t *)swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        v28[0] = v22;
        *(_DWORD *)a3 = 136380675;
        swift_beginAccess();
        if (error[0]) {
          CFPropertyListRef v23 = error[0];
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26932CDB8);
        uint64_t v24 = sub_24887C7A8();
        sub_24882CAE0(v24, v25, v28);
        sub_24887CB88();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_248827000, v20, v21, "EncryptionUtilities: Failed in getKey_fromBase64: %{private}s", a3, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C582D20](v22, -1, -1);
        MEMORY[0x24C582D20](a3, -1, -1);
      }

      swift_beginAccess();
      if (error[0]) {

      }
      sub_24884B6D0();
      swift_allocError();
      unsigned char *v26 = 2;
      swift_willThrow();
      sub_24884B724(v7, v8);
    }
  }
  return a3;
}

uint8_t *sub_24884B3AC(__SecKey *a1)
{
  error[1] = *(CFErrorRef *)MEMORY[0x263EF8340];
  error[0] = 0;
  if (qword_26B143550 != -1) {
    swift_once();
  }
  CFStringRef v2 = (const __CFString *)qword_26B144EB0;
  CFDataRef v3 = (const __CFData *)sub_24887C548();
  CFDataRef DecryptedData = SecKeyCreateDecryptedData(a1, v2, v3, error);

  if (DecryptedData)
  {
    CFDataRef v5 = DecryptedData;
    unint64_t v6 = (uint8_t *)sub_24887C568();
  }
  else
  {
    if (qword_26B143080 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_24887C618();
    unint64_t v6 = (uint8_t *)__swift_project_value_buffer(v7, (uint64_t)qword_26B143060);
    unint64_t v8 = sub_24887C5F8();
    os_log_type_t v9 = sub_24887CAB8();
    if (os_log_type_enabled(v8, v9))
    {
      unint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      v16[0] = v10;
      *(_DWORD *)unint64_t v6 = 136380675;
      swift_beginAccess();
      if (error[0]) {
        uint64_t v11 = error[0];
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26932CDB8);
      uint64_t v12 = sub_24887C7A8();
      sub_24882CAE0(v12, v13, v16);
      sub_24887CB88();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_248827000, v8, v9, "EncryptionUtilities: Failed in decryptToData: %{private}s", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C582D20](v10, -1, -1);
      MEMORY[0x24C582D20](v6, -1, -1);
    }

    swift_beginAccess();
    if (error[0]) {

    }
    sub_24884B6D0();
    swift_allocError();
    unsigned char *v14 = 5;
    swift_willThrow();
  }
  return v6;
}

unint64_t sub_24884B678()
{
  unint64_t result = qword_26932CDA8;
  if (!qword_26932CDA8)
  {
    type metadata accessor for CFError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CDA8);
  }
  return result;
}

unint64_t sub_24884B6D0()
{
  unint64_t result = qword_26932CDB0;
  if (!qword_26932CDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CDB0);
  }
  return result;
}

uint64_t sub_24884B724(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_248838EB4(a1, a2);
  }
  return a1;
}

unint64_t sub_24884B73C()
{
  unint64_t result = qword_26932CDC0;
  if (!qword_26932CDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CDC0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EncryptionError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EncryptionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24884B8ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EncryptionError()
{
  return &type metadata for EncryptionError;
}

ValueMetadata *type metadata accessor for EncryptionUtilities()
{
  return &type metadata for EncryptionUtilities;
}

uint64_t IOReportingConfig.commonFields.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 2);
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  *(_WORD *)a1 = *(_WORD *)v1;
  *(unsigned char *)(a1 + 2) = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t IOReportingConfig.group.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IOReportingConfig.subgroup.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24884BA18@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 2);
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  *(_WORD *)a1 = *(_WORD *)v1;
  *(unsigned char *)(a1 + 2) = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t destroy for IOReportingConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IOReportingConfig(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IOReportingConfig(uint64_t a1, __int16 *a2)
{
  __int16 v4 = *a2;
  *(unsigned char *)(a1 + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)a1 = v4;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for IOReportingConfig(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IOReportingConfig(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IOReportingConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IOReportingConfig()
{
  return &type metadata for IOReportingConfig;
}

uint64_t sub_24884BE28(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v42 = MEMORY[0x263F8EE78];
    sub_2488419F0(0, v5, 0);
    uint64_t result = v42;
    uint64_t v7 = (uint64_t *)(a1 + 32);
    while (1)
    {
      uint64_t v35 = result;
      uint64_t v8 = *v7;
      swift_bridgeObjectRetain_n();
      if ((a2 & 1) == 0)
      {
        sub_2488648C0(v8, 4);
        if (v3) {
          break;
        }
      }
      CommonConfigFields.init(dict:)(v8, (uint64_t)&v38);
      if (v3) {
        break;
      }
      uint64_t v9 = *((void *)&v38 + 1);
      long long v10 = v39;
      unint64_t v31 = v7;
      int64_t v32 = v5;
      uint64_t v33 = v40;
      uint64_t v34 = v41;
      char v29 = BYTE2(v38);
      __int16 v30 = v38;
      if (*(void *)(v8 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v11 = sub_248840E50(0x70756F7267, 0xE500000000000000);
        uint64_t v12 = *((void *)&v10 + 1);
        uint64_t v13 = v10;
        uint64_t v14 = v9;
        if (v15)
        {
          sub_24882E1C8(*(void *)(v8 + 56) + 32 * v11, (uint64_t)&v38);
        }
        else
        {
          long long v38 = 0u;
          long long v39 = 0u;
        }
      }
      else
      {
        long long v38 = 0u;
        long long v39 = 0u;
        swift_bridgeObjectRetain();
        uint64_t v14 = v9;
        swift_bridgeObjectRetain();
        uint64_t v13 = v10;
        swift_bridgeObjectRetain();
        uint64_t v12 = *((void *)&v10 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC8);
      int v16 = swift_dynamicCast();
      if (v16) {
        uint64_t v17 = v37;
      }
      else {
        uint64_t v17 = 0;
      }
      if (v16) {
        uint64_t v18 = v36;
      }
      else {
        uint64_t v18 = 0;
      }
      if (*(void *)(v8 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v19 = sub_248840E50(0x70756F7267627573, 0xE800000000000000);
        if (v20)
        {
          sub_24882E1C8(*(void *)(v8 + 56) + 32 * v19, (uint64_t)&v38);
        }
        else
        {
          long long v38 = 0u;
          long long v39 = 0u;
        }
      }
      else
      {
        long long v38 = 0u;
        long long v39 = 0u;
        swift_bridgeObjectRetain();
      }
      if (swift_dynamicCast())
      {
        uint64_t v21 = v37;
        uint64_t v28 = v36;
      }
      else
      {
        uint64_t v21 = 0;
        uint64_t v28 = 0;
        uint64_t v36 = 0;
        uint64_t v37 = 0;
      }
      uint64_t v22 = v12;
      swift_bridgeObjectRelease();
      if (!(v17 | v21))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24882C828();
        swift_allocError();
        *(void *)uint64_t v26 = 0xD00000000000004ALL;
        *(void *)(v26 + 8) = 0x80000002488828B0;
        *(unsigned char *)(v26 + 16) = 1;
        swift_willThrow();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = v35;
      uint64_t v42 = v35;
      unint64_t v24 = *(void *)(v35 + 16);
      unint64_t v23 = *(void *)(v35 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_2488419F0(v23 > 1, v24 + 1, 1);
        uint64_t result = v42;
      }
      *(void *)(result + 16) = v24 + 1;
      uint64_t v25 = result + 80 * v24;
      *(_WORD *)(v25 + 32) = v30;
      *(unsigned char *)(v25 + 34) = v29;
      *(void *)(v25 + 40) = v14;
      *(void *)(v25 + 48) = v13;
      *(void *)(v25 + 56) = v22;
      *(void *)(v25 + 64) = v33;
      uint64_t v3 = 0;
      *(void *)(v25 + 72) = v34;
      *(void *)(v25 + 80) = v18;
      *(void *)(v25 + 88) = v17;
      *(void *)(v25 + 96) = v28;
      *(void *)(v25 + 104) = v21;
      uint64_t v7 = v31 + 1;
      int64_t v5 = v32 - 1;
      if (v32 == 1) {
        return result;
      }
    }
    swift_release();
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_24884C26C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(result + 16);
  if (v5)
  {
    unint64_t v6 = 0;
    uint64_t v7 = result + 56;
    uint64_t v31 = *(void *)(result + 16);
    uint64_t v28 = v5 - 1;
    uint64_t v8 = MEMORY[0x263F8EE78];
    uint64_t v32 = result;
    uint64_t v29 = result + 56;
    do
    {
      uint64_t v30 = v8;
      uint64_t v9 = (void *)(v7 + 80 * v6);
      unint64_t v10 = v6;
      while (1)
      {
        if (v10 >= *(void *)(result + 16))
        {
          __break(1u);
          return result;
        }
        unint64_t v35 = v10;
        __int16 v11 = *((_WORD *)v9 - 12);
        char v12 = *((unsigned char *)v9 - 22);
        uint64_t v40 = v4;
        uint64_t v13 = *(v9 - 2);
        uint64_t v14 = *(v9 - 1);
        uint64_t v15 = v9[2];
        uint64_t v37 = v9[1];
        uint64_t v38 = *v9;
        uint64_t v16 = v9[4];
        uint64_t v39 = v9[3];
        uint64_t v17 = v9[5];
        uint64_t v18 = v9[6];
        v41[3] = &type metadata for IOReportingConfig;
        v41[4] = &protocol witness table for IOReportingConfig;
        uint64_t v19 = swift_allocObject();
        v41[0] = v19;
        *(_WORD *)(v19 + 16) = v11;
        *(unsigned char *)(v19 + 18) = v12;
        *(void *)(v19 + 24) = v13;
        *(void *)(v19 + 32) = v14;
        *(void *)(v19 + 40) = v38;
        *(void *)(v19 + 48) = v37;
        *(void *)(v19 + 56) = v15;
        *(void *)(v19 + 64) = v39;
        *(void *)(v19 + 72) = v16;
        *(void *)(v19 + 80) = v17;
        *(void *)(v19 + 88) = v18;
        swift_bridgeObjectRetain_n();
        uint64_t v36 = v13;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        char v20 = sub_248843BF8(v41, a2, a3);
        if (v40)
        {
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v41);
          uint64_t v8 = v30;
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v8;
        }
        char v21 = v20;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v41);
        if (v21) {
          break;
        }
        unint64_t v10 = v35 + 1;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v9 += 10;
        uint64_t v4 = 0;
        uint64_t result = v32;
        if (v31 == v35 + 1)
        {
          uint64_t v8 = v30;
          goto LABEL_17;
        }
      }
      uint64_t v22 = v30;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v42 = v30;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_2488419F0(0, *(void *)(v30 + 16) + 1, 1);
        uint64_t v22 = v42;
      }
      uint64_t v24 = v22;
      unint64_t v26 = *(void *)(v22 + 16);
      unint64_t v25 = *(void *)(v22 + 24);
      uint64_t v4 = 0;
      if (v26 >= v25 >> 1)
      {
        sub_2488419F0(v25 > 1, v26 + 1, 1);
        uint64_t v4 = 0;
        uint64_t v24 = v42;
      }
      *(void *)(v24 + 16) = v26 + 1;
      uint64_t v27 = v24 + 80 * v26;
      *(_WORD *)(v27 + 32) = v11;
      unint64_t v6 = v35 + 1;
      *(unsigned char *)(v27 + 34) = v12;
      *(void *)(v27 + 40) = v36;
      *(void *)(v27 + 48) = v14;
      *(void *)(v27 + 56) = v38;
      *(void *)(v27 + 64) = v37;
      *(void *)(v27 + 72) = v15;
      *(void *)(v27 + 80) = v39;
      *(void *)(v27 + 88) = v16;
      *(void *)(v27 + 96) = v17;
      *(void *)(v27 + 104) = v18;
      uint64_t v8 = v24;
      uint64_t result = v32;
      uint64_t v7 = v29;
    }
    while (v28 != v35);
  }
  else
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_24884C5C8(uint64_t *a1)
{
  uint64_t v17 = *a1;
  if (*(void *)(v17 + 16)
    && (unint64_t v3 = sub_248840EC8(4u), (v4 & 1) != 0)
    && (sub_24882E1C8(*(void *)(v17 + 56) + 32 * v3, (uint64_t)v15),
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C08),
        (swift_dynamicCast() & 1) != 0))
  {
    long long v16 = *(_OWORD *)(a1 + 1);
    uint64_t v6 = a1[3];
    uint64_t v5 = a1[4];
    char v7 = a1[5] & 1;
    sub_24882E224((uint64_t)&v17);
    sub_24882E250((uint64_t)&v16);
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_24884BE28(v14, v7);
    sub_24882E27C((uint64_t)&v17);
    sub_24882E2A8((uint64_t)&v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v1)
    {
      sub_24882E224((uint64_t)&v17);
      sub_24882E250((uint64_t)&v16);
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_24884C26C(v8, v6, v5);
      sub_24882E27C((uint64_t)&v17);
      sub_24882E2A8((uint64_t)&v16);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (qword_26B143AF8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_24887C618();
    __swift_project_value_buffer(v9, (uint64_t)qword_26B143AE0);
    unint64_t v10 = sub_24887C5F8();
    os_log_type_t v11 = sub_24887CAA8();
    if (os_log_type_enabled(v10, v11))
    {
      char v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v12 = 0;
      _os_log_impl(&dword_248827000, v10, v11, "No ioReporting section found.", v12, 2u);
      MEMORY[0x24C582D20](v12, -1, -1);
    }

    return 0;
  }
  return v6;
}

uint64_t sub_24884C7E0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 96, 7);
}

uint64_t sub_24884C848(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  uint64_t v34 = MEMORY[0x263F8EE78];
  sub_248841A30(0, v1, 0);
  uint64_t v2 = v34;
  uint64_t result = sub_24884E2A4(v3);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = v3 + 64;
  uint64_t v26 = v3 + 80;
  int64_t v27 = v1;
  int v28 = v5;
  uint64_t v29 = v3 + 64;
  uint64_t v30 = v3;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v31 = v7;
    uint64_t v12 = *(void *)(v3 + 56) + 24 * v6;
    uint64_t v13 = *(void *)v12;
    uint64_t v14 = *(void *)(v12 + 8);
    char v15 = *(unsigned char *)(v12 + 16);
    uint64_t v16 = Keys.rawValue.getter();
    uint64_t v32 = v17;
    uint64_t v33 = v16;
    uint64_t result = sub_24882D9F4(v13, v14, v15);
    unint64_t v18 = *(void *)(v34 + 16);
    unint64_t v19 = *(void *)(v34 + 24);
    if (v18 >= v19 >> 1) {
      uint64_t result = sub_248841A30(v19 > 1, v18 + 1, 1);
    }
    *(void *)(v34 + 16) = v18 + 1;
    uint64_t v20 = v34 + 40 * v18;
    *(void *)(v20 + 32) = v33;
    *(void *)(v20 + 40) = v32;
    *(void *)(v20 + 48) = v13;
    *(void *)(v20 + 56) = v14;
    *(unsigned char *)(v20 + 64) = v15;
    uint64_t v3 = v30;
    int64_t v9 = 1 << *(unsigned char *)(v30 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = v29;
    uint64_t v21 = *(void *)(v29 + 8 * v11);
    if ((v21 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v28;
    if (*(_DWORD *)(v30 + 36) != v28) {
      goto LABEL_27;
    }
    unint64_t v22 = v21 & (-2 << (v6 & 0x3F));
    if (v22)
    {
      int64_t v9 = __clz(__rbit64(v22)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v27;
    }
    else
    {
      unint64_t v23 = v11 + 1;
      unint64_t v24 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v27;
      if (v11 + 1 < v24)
      {
        unint64_t v25 = *(void *)(v29 + 8 * v23);
        if (v25)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v25)) + (v23 << 6);
        }
        else
        {
          while (v24 - 2 != v11)
          {
            unint64_t v25 = *(void *)(v26 + 8 * v11++);
            if (v25)
            {
              unint64_t v23 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v31 + 1;
    uint64_t v6 = v9;
    if (v31 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t Dictionary<>.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = Keys.rawValue.getter();
  if (*(void *)(a1 + 16) && (unint64_t v6 = sub_248840E50(v4, v5), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(a1 + 56) + 24 * v6;
    uint64_t v9 = *(void *)v8;
    uint64_t v10 = *(void *)(v8 + 8);
    *(void *)a2 = *(void *)v8;
    *(void *)(a2 + 8) = v10;
    char v11 = *(unsigned char *)(v8 + 16);
    *(unsigned char *)(a2 + 16) = v11;
    sub_24882D9F4(v9, v10, v11);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(unsigned char *)(a2 + 16) = -1;
  }
  return result;
}

uint64_t Dictionary<>.subscript.setter(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = Keys.rawValue.getter();
  return sub_24882EF04(v1, v2, v3, v5, v4);
}

AudioAnalyticsBase::Keys_optional __swiftcall Keys.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_24887CF58();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 48;
  switch(v3)
  {
    case 0:
      goto LABEL_50;
    case 1:
      char v5 = 1;
      goto LABEL_50;
    case 2:
      char v5 = 2;
      goto LABEL_50;
    case 3:
      char v5 = 3;
      goto LABEL_50;
    case 4:
      char v5 = 4;
      goto LABEL_50;
    case 5:
      char v5 = 5;
      goto LABEL_50;
    case 6:
      char v5 = 6;
      goto LABEL_50;
    case 7:
      char v5 = 7;
      goto LABEL_50;
    case 8:
      char v5 = 8;
      goto LABEL_50;
    case 9:
      char v5 = 9;
      goto LABEL_50;
    case 10:
      char v5 = 10;
      goto LABEL_50;
    case 11:
      char v5 = 11;
      goto LABEL_50;
    case 12:
      char v5 = 12;
      goto LABEL_50;
    case 13:
      char v5 = 13;
      goto LABEL_50;
    case 14:
      char v5 = 14;
      goto LABEL_50;
    case 15:
      char v5 = 15;
      goto LABEL_50;
    case 16:
      char v5 = 16;
      goto LABEL_50;
    case 17:
      char v5 = 17;
      goto LABEL_50;
    case 18:
      char v5 = 18;
      goto LABEL_50;
    case 19:
      char v5 = 19;
      goto LABEL_50;
    case 20:
      char v5 = 20;
      goto LABEL_50;
    case 21:
      char v5 = 21;
      goto LABEL_50;
    case 22:
      char v5 = 22;
      goto LABEL_50;
    case 23:
      char v5 = 23;
      goto LABEL_50;
    case 24:
      char v5 = 24;
      goto LABEL_50;
    case 25:
      char v5 = 25;
      goto LABEL_50;
    case 26:
      char v5 = 26;
      goto LABEL_50;
    case 27:
      char v5 = 27;
      goto LABEL_50;
    case 28:
      char v5 = 28;
      goto LABEL_50;
    case 29:
      char v5 = 29;
      goto LABEL_50;
    case 30:
      char v5 = 30;
      goto LABEL_50;
    case 31:
      char v5 = 31;
      goto LABEL_50;
    case 32:
      char v5 = 32;
      goto LABEL_50;
    case 33:
      char v5 = 33;
      goto LABEL_50;
    case 34:
      char v5 = 34;
      goto LABEL_50;
    case 35:
      char v5 = 35;
      goto LABEL_50;
    case 36:
      char v5 = 36;
      goto LABEL_50;
    case 37:
      char v5 = 37;
      goto LABEL_50;
    case 38:
      char v5 = 38;
      goto LABEL_50;
    case 39:
      char v5 = 39;
      goto LABEL_50;
    case 40:
      char v5 = 40;
      goto LABEL_50;
    case 41:
      char v5 = 41;
      goto LABEL_50;
    case 42:
      char v5 = 42;
      goto LABEL_50;
    case 43:
      char v5 = 43;
      goto LABEL_50;
    case 44:
      char v5 = 44;
      goto LABEL_50;
    case 45:
      char v5 = 45;
      goto LABEL_50;
    case 46:
      char v5 = 46;
      goto LABEL_50;
    case 47:
      char v5 = 47;
LABEL_50:
      char v6 = v5;
      break;
    case 48:
      break;
    case 49:
      char v6 = 49;
      break;
    case 50:
      char v6 = 50;
      break;
    case 51:
      char v6 = 51;
      break;
    case 52:
      char v6 = 52;
      break;
    case 53:
      char v6 = 53;
      break;
    case 54:
      char v6 = 54;
      break;
    case 55:
      char v6 = 55;
      break;
    case 56:
      char v6 = 56;
      break;
    case 57:
      char v6 = 57;
      break;
    case 58:
      char v6 = 58;
      break;
    case 59:
      char v6 = 59;
      break;
    case 60:
      char v6 = 60;
      break;
    case 61:
      char v6 = 61;
      break;
    case 62:
      char v6 = 62;
      break;
    case 63:
      char v6 = 63;
      break;
    case 64:
      char v6 = 64;
      break;
    case 65:
      char v6 = 65;
      break;
    default:
      char v6 = 66;
      break;
  }
  *uint64_t v2 = v6;
  return result;
}

void *static Keys.allCases.getter()
{
  return &unk_26FC8F028;
}

uint64_t Keys.rawValue.getter()
{
  uint64_t result = 0x726574726F706572;
  switch(*v0)
  {
    case 1:
      return 0x5465636976726573;
    case 2:
    case 0xD:
    case 0x1B:
    case 0x22:
    case 0x24:
    case 0x2F:
    case 0x31:
    case 0x37:
      return 0xD000000000000015;
    case 3:
      return 0xD00000000000001ELL;
    case 4:
      return 0xD000000000000018;
    case 5:
      return 0xD00000000000001ALL;
    case 6:
      return 0xD000000000000012;
    case 7:
      return 0xD000000000000010;
    case 8:
      return 0x645F657669746361;
    case 9:
      return 0xD000000000000017;
    case 0xA:
      return 0x78646967736DLL;
    case 0xB:
      return 0x746E6367736DLL;
    case 0xC:
      return 0x6365735F79616C70;
    case 0xE:
      return 0xD000000000000016;
    case 0xF:
      return 0x6F6973736553584DLL;
    case 0x10:
      return 0xD00000000000001CLL;
    case 0x11:
      return 0xD000000000000017;
    case 0x12:
      return 0xD000000000000024;
    case 0x13:
      return 0x656D756C6F76;
    case 0x14:
      return 0x755F656369766564;
    case 0x15:
      return 0x65706F6373;
    case 0x16:
      return 0x646574756D5F7369;
    case 0x17:
      return 0x726F70736E617274;
    case 0x18:
      return 0xD000000000000011;
    case 0x19:
      return 0x74737265676E6972;
    case 0x1A:
      return 0x6F6D746E656C6973;
    case 0x1C:
      uint64_t v2 = 0x616D726F466DLL;
      return v2 & 0xFFFFFFFFFFFFLL | 0x4974000000000000;
    case 0x1D:
      uint64_t v2 = 0x6375646F7270;
      return v2 & 0xFFFFFFFFFFFFLL | 0x4974000000000000;
    case 0x1E:
      return 0xD000000000000011;
    case 0x1F:
      return 0x5F65736E61707865;
    case 0x20:
      return 0xD000000000000018;
    case 0x21:
      return 0xD000000000000014;
    case 0x23:
      return 0x5F746168635F7076;
    case 0x25:
      return 0x73617079625F7076;
    case 0x26:
      return 0xD00000000000001BLL;
    case 0x27:
      return 0xD000000000000019;
    case 0x28:
      return 0x69737265765F7076;
    case 0x29:
      return 0x737265646F636F76;
    case 0x2A:
      return 0x6D754E6C65646F6DLL;
    case 0x2B:
      unsigned int v3 = 1685217640;
      goto LABEL_42;
    case 0x2C:
      unsigned int v3 = 1836214630;
LABEL_42:
      uint64_t result = v3 | 0x6572617700000000;
      break;
    case 0x2D:
      uint64_t result = 0xD000000000000020;
      break;
    case 0x2E:
      uint64_t result = 0xD00000000000001DLL;
      break;
    case 0x30:
      uint64_t result = 0xD000000000000017;
      break;
    case 0x32:
      uint64_t result = 0xD000000000000013;
      break;
    case 0x33:
      uint64_t result = 0xD000000000000011;
      break;
    case 0x34:
      uint64_t result = 0xD000000000000011;
      break;
    case 0x35:
      uint64_t result = 0xD00000000000001DLL;
      break;
    case 0x36:
      uint64_t result = 0x6E5F656369766564;
      break;
    case 0x38:
      uint64_t result = 0xD000000000000016;
      break;
    case 0x39:
      uint64_t result = 0x7461635F72697268;
      break;
    case 0x3A:
      uint64_t result = 0xD000000000000014;
      break;
    case 0x3B:
      uint64_t result = 0x6D5F6C6576617274;
      break;
    case 0x3C:
      uint64_t result = 0x735F6C6576617274;
      break;
    case 0x3D:
      uint64_t result = 0x6867696E6574616CLL;
      break;
    case 0x3E:
      uint64_t result = 0x6465636E61686E65;
      break;
    case 0x3F:
      uint64_t result = 0xD000000000000014;
      break;
    case 0x40:
      uint64_t result = 0x79745F6575737369;
      break;
    case 0x41:
      uint64_t result = 0x65566769666E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24884D750(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2488752EC(*a1, *a2);
}

uint64_t sub_24884D75C()
{
  return sub_24887D068();
}

uint64_t sub_24884D7C4()
{
  Keys.rawValue.getter();
  sub_24887C808();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24884D828()
{
  return sub_24887D068();
}

AudioAnalyticsBase::Keys_optional sub_24884D88C(Swift::String *a1)
{
  return Keys.init(rawValue:)(*a1);
}

uint64_t sub_24884D898@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Keys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_24884D8C0(void *a1@<X8>)
{
  *a1 = &unk_26FC8F028;
}

double sub_24884D8D0@<D0>(uint64_t *a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  LOBYTE(v9) = *a2;
  unint64_t v5 = Keys.rawValue.getter();
  sub_24882EB00(v5, v6, v4, (uint64_t)&v9);
  swift_bridgeObjectRelease();
  char v7 = v10;
  double result = *(double *)&v9;
  *(_OWORD *)a3 = v9;
  *(unsigned char *)(a3 + 16) = v7;
  return result;
}

uint64_t sub_24884D93C(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);
  uint64_t v4 = Keys.rawValue.getter();
  uint64_t v6 = v5;
  sub_24884DC20(v1, v2, v3);
  return sub_24882EF04(v1, v2, v3, v4, v6);
}

uint64_t (*Dictionary<>.subscript.modify(uint64_t a1, unsigned char *a2))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v2;
  *(unsigned char *)(a1 + 17) = *a2;
  uint64_t v4 = *v2;
  uint64_t v5 = Keys.rawValue.getter();
  if (*(void *)(v4 + 16) && (unint64_t v7 = sub_248840E50(v5, v6), (v8 & 1) != 0))
  {
    uint64_t v9 = *(void *)(v4 + 56) + 24 * v7;
    uint64_t v10 = *(void *)v9;
    uint64_t v11 = *(void *)(v9 + 8);
    char v12 = *(unsigned char *)(v9 + 16);
    *(void *)a1 = *(void *)v9;
    *(void *)(a1 + 8) = v11;
    *(unsigned char *)(a1 + 16) = v12;
    sub_24882D9F4(v10, v11, v12);
  }
  else
  {
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(unsigned char *)(a1 + 16) = -1;
  }
  swift_bridgeObjectRelease();
  return sub_24884DA7C;
}

uint64_t sub_24884DA7C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  if (a2)
  {
    uint64_t v6 = Keys.rawValue.getter();
    uint64_t v8 = v7;
    sub_24884DC20(v2, v3, v4);
    sub_24882EF04(v2, v3, v4, v6, v8);
    uint64_t v9 = *(void *)a1;
    uint64_t v10 = *(void *)(a1 + 8);
    char v11 = *(unsigned char *)(a1 + 16);
    return sub_24882F954(v9, v10, v11);
  }
  else
  {
    uint64_t v13 = Keys.rawValue.getter();
    return sub_24882EF04(v2, v3, v4, v13, v14);
  }
}

uint64_t Dictionary<>.asStringKeyDict()(uint64_t a1)
{
  if (*(void *)(sub_24884C848(a1) + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D28);
    uint64_t v1 = sub_24887CD78();
  }
  else
  {
    uint64_t v1 = MEMORY[0x263F8EE80];
  }
  uint64_t v4 = v1;
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_24884DC34(v2, 1, &v4);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_24884DC20(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_24882D9F4(a1, a2, a3);
  }
  return a1;
}

void sub_24884DC34(uint64_t a1, char a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v46 = v5;
  if (v5)
  {
    if (!*(void *)(a1 + 16))
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    char v6 = *(unsigned char *)(a1 + 64);
    uint64_t v8 = *(void *)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 56);
    uint64_t v9 = *(void *)(a1 + 32);
    uint64_t v10 = *(void *)(a1 + 40);
    swift_bridgeObjectRetain();
    char v47 = v6;
    sub_24882D9F4(v8, v7, v6);
    if (v10)
    {
      char v11 = (void *)*a3;
      unint64_t v13 = sub_248840E50(v9, v10);
      uint64_t v14 = v11[2];
      BOOL v15 = (v12 & 1) == 0;
      uint64_t v16 = v14 + v15;
      if (__OFADD__(v14, v15))
      {
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      char v17 = v12;
      if (v11[3] >= v16)
      {
        if (a2)
        {
          if ((v12 & 1) == 0) {
            goto LABEL_14;
          }
        }
        else
        {
          sub_248839F90();
          if ((v17 & 1) == 0) {
            goto LABEL_14;
          }
        }
      }
      else
      {
        sub_248838F6C(v16, a2 & 1);
        unint64_t v18 = sub_248840E50(v9, v10);
        if ((v17 & 1) != (v19 & 1))
        {
LABEL_30:
          sub_24887CF98();
          __break(1u);
LABEL_31:
          sub_24887CC38();
          sub_24887C838();
          sub_24887CD28();
          sub_24887C838();
          sub_24887CD48();
          __break(1u);
          return;
        }
        unint64_t v13 = v18;
        if ((v17 & 1) == 0)
        {
LABEL_14:
          unint64_t v22 = (void *)*a3;
          *(void *)(*a3 + 8 * (v13 >> 6) + 64) |= 1 << v13;
          unint64_t v23 = (uint64_t *)(v22[6] + 16 * v13);
          uint64_t *v23 = v9;
          v23[1] = v10;
          uint64_t v24 = v22[7] + 24 * v13;
          *(void *)uint64_t v24 = v8;
          *(void *)(v24 + 8) = v7;
          *(unsigned char *)(v24 + 16) = v6;
          uint64_t v25 = v22[2];
          BOOL v26 = __OFADD__(v25, 1);
          uint64_t v27 = v25 + 1;
          if (v26)
          {
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
          v22[2] = v27;
          if (v46 != 1)
          {
            int v28 = (char *)(a1 + 104);
            unint64_t v29 = 1;
            while (v29 < *(void *)(a1 + 16))
            {
              char v30 = *v28;
              uint64_t v8 = *((void *)v28 - 2);
              uint64_t v7 = *((void *)v28 - 1);
              uint64_t v32 = *((void *)v28 - 4);
              uint64_t v31 = *((void *)v28 - 3);
              swift_bridgeObjectRetain();
              char v47 = v30;
              sub_24882D9F4(v8, v7, v30);
              if (!v31) {
                goto LABEL_25;
              }
              uint64_t v33 = (void *)*a3;
              unint64_t v34 = sub_248840E50(v32, v31);
              uint64_t v36 = v33[2];
              BOOL v37 = (v35 & 1) == 0;
              BOOL v26 = __OFADD__(v36, v37);
              uint64_t v38 = v36 + v37;
              if (v26) {
                goto LABEL_28;
              }
              char v39 = v35;
              if (v33[3] < v38)
              {
                sub_248838F6C(v38, 1);
                unint64_t v34 = sub_248840E50(v32, v31);
                if ((v39 & 1) != (v40 & 1)) {
                  goto LABEL_30;
                }
              }
              if (v39) {
                goto LABEL_11;
              }
              uint64_t v41 = (void *)*a3;
              *(void *)(*a3 + 8 * (v34 >> 6) + 64) |= 1 << v34;
              uint64_t v42 = (uint64_t *)(v41[6] + 16 * v34);
              *uint64_t v42 = v32;
              v42[1] = v31;
              uint64_t v43 = v41[7] + 24 * v34;
              *(void *)uint64_t v43 = v8;
              *(void *)(v43 + 8) = v7;
              *(unsigned char *)(v43 + 16) = v30;
              uint64_t v44 = v41[2];
              BOOL v26 = __OFADD__(v44, 1);
              uint64_t v45 = v44 + 1;
              if (v26) {
                goto LABEL_29;
              }
              ++v29;
              v41[2] = v45;
              v28 += 40;
              if (v46 == v29) {
                goto LABEL_25;
              }
            }
            goto LABEL_27;
          }
          goto LABEL_25;
        }
      }
LABEL_11:
      uint64_t v20 = (void *)swift_allocError();
      swift_willThrow();
      id v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26932CDE0);
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_24882F8D0(v8, v7, v47);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return;
      }
      goto LABEL_31;
    }
  }
LABEL_25:
  swift_bridgeObjectRelease_n();
}

unint64_t sub_24884E044()
{
  unint64_t result = qword_26932CDC8;
  if (!qword_26932CDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CDC8);
  }
  return result;
}

unint64_t sub_24884E09C()
{
  unint64_t result = qword_26932CDD0;
  if (!qword_26932CDD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26932CDD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CDD0);
  }
  return result;
}

uint64_t sub_24884E100()
{
  return 0;
}

uint64_t getEnumTagSinglePayload for Keys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xBF) {
    goto LABEL_17;
  }
  if (a2 + 65 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 65) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 65;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 65;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 65;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x42;
  int v8 = v6 - 66;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Keys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 65) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xBF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xBE)
  {
    unsigned int v6 = ((a2 - 191) >> 8) + 1;
    *unint64_t result = a2 + 65;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24884E26CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 65;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Keys()
{
  return &type metadata for Keys;
}

uint64_t sub_24884E2A4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_24884E32C(uint64_t a1)
{
  return sub_24884E688(a1, qword_26B143B00);
}

uint64_t static Logger.session.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24884E720(&qword_26B143088, (uint64_t)qword_26B143B00, a1);
}

uint64_t sub_24884E364(uint64_t a1)
{
  return sub_24884E688(a1, qword_26B143060);
}

uint64_t static Logger.service.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24884E720(&qword_26B143080, (uint64_t)qword_26B143060, a1);
}

uint64_t sub_24884E39C(uint64_t a1)
{
  return sub_24884E688(a1, qword_26932CDE8);
}

uint64_t static Logger.tests.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24884E720(&qword_26932CA78, (uint64_t)qword_26932CDE8, a1);
}

uint64_t sub_24884E3D4(uint64_t a1)
{
  return sub_24884E688(a1, qword_26932CE00);
}

uint64_t static Logger.simpleType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24884E720(&qword_26932CA80, (uint64_t)qword_26932CE00, a1);
}

uint64_t sub_24884E40C(uint64_t a1)
{
  return sub_24884E688(a1, qword_26B143AE0);
}

uint64_t static Logger.config.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24884E720(&qword_26B143AF8, (uint64_t)qword_26B143AE0, a1);
}

uint64_t sub_24884E444(uint64_t a1)
{
  return sub_24884E688(a1, qword_26B143A08);
}

uint64_t static Logger.mobileAsset.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24884E720(&qword_26B143A20, (uint64_t)qword_26B143A08, a1);
}

uint64_t sub_24884E47C(uint64_t a1)
{
  return sub_24884E688(a1, qword_26B143AB8);
}

uint64_t static Logger.rtc.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24884E720(&qword_26B143AD8, (uint64_t)qword_26B143AB8, a1);
}

uint64_t sub_24884E4B4(uint64_t a1)
{
  return sub_24884E688(a1, qword_26B143B18);
}

uint64_t static Logger.powerLog.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24884E720(&qword_26B143B30, (uint64_t)qword_26B143B18, a1);
}

uint64_t sub_24884E4EC(uint64_t a1)
{
  return sub_24884E688(a1, qword_26B143A48);
}

uint64_t static Logger.notifications.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24884E720(&qword_26B143A68, (uint64_t)qword_26B143A48, a1);
}

uint64_t sub_24884E524(uint64_t a1)
{
  return sub_24884E688(a1, qword_26B143B80);
}

uint64_t static Logger.utilities.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24884E720(&qword_26B143BA0, (uint64_t)qword_26B143B80, a1);
}

uint64_t sub_24884E55C(uint64_t a1)
{
  return sub_24884E688(a1, qword_26B143B38);
}

uint64_t static Logger.tailspin.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24884E720(&qword_26B143B58, (uint64_t)qword_26B143B38, a1);
}

uint64_t sub_24884E594(uint64_t a1)
{
  return sub_24884E688(a1, qword_26B143A28);
}

uint64_t static Logger.audioCapture.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24884E720(&qword_26B143A40, (uint64_t)qword_26B143A28, a1);
}

uint64_t sub_24884E5CC(uint64_t a1)
{
  return sub_24884E688(a1, qword_26B143B60);
}

uint64_t static Logger.bluetooth.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24884E720(&qword_26B143B78, (uint64_t)qword_26B143B60, a1);
}

uint64_t sub_24884E604(uint64_t a1)
{
  return sub_24884E688(a1, qword_26B143048);
}

uint64_t static Logger.ioreporting.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24884E720(&qword_26B143A00, (uint64_t)qword_26B143048, a1);
}

uint64_t sub_24884E63C(uint64_t a1)
{
  return sub_24884E688(a1, qword_26B143A70);
}

uint64_t static Logger.adaptiveVolume.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24884E720(&qword_26B143A88, (uint64_t)qword_26B143A70, a1);
}

uint64_t sub_24884E674(uint64_t a1)
{
  return sub_24884E688(a1, qword_26B143A90);
}

uint64_t sub_24884E688(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_24887C618();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_24887C608();
}

uint64_t static Logger.abc.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24884E720(&qword_26B143AB0, (uint64_t)qword_26B143A90, a1);
}

uint64_t sub_24884E720@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24887C618();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t Logger.ServiceLoggerCategory.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_24887CDA8();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 16;
  if (v2 < 0x10) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

void *static Logger.ServiceLoggerCategory.allCases.getter()
{
  return &unk_26FC8F230;
}

uint64_t Logger.ServiceLoggerCategory.rawValue.getter()
{
  return *(void *)&aCarr_0[8 * *v0];
}

uint64_t sub_24884E838(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2488752BC(*a1, *a2);
}

unint64_t sub_24884E848()
{
  unint64_t result = qword_26932CE18;
  if (!qword_26932CE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CE18);
  }
  return result;
}

uint64_t sub_24884E89C()
{
  return sub_24887D068();
}

uint64_t sub_24884E8FC()
{
  Logger.ServiceLoggerCategory.rawValue.getter();
  sub_24887C808();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24884E958()
{
  return sub_24887D068();
}

uint64_t sub_24884E9B4@<X0>(char *a1@<X8>)
{
  return Logger.ServiceLoggerCategory.init(rawValue:)(a1);
}

uint64_t sub_24884E9C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Logger.ServiceLoggerCategory.rawValue.getter();
  *a1 = result;
  a1[1] = 0xE400000000000000;
  return result;
}

unint64_t sub_24884E9F0()
{
  unint64_t result = qword_26932CE20;
  if (!qword_26932CE20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26932CE28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CE20);
  }
  return result;
}

void sub_24884EA4C(void *a1@<X8>)
{
  *a1 = &unk_26FC8F230;
}

uint64_t _s21ServiceLoggerCategoryOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s21ServiceLoggerCategoryOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *unint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24884EBB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Logger.ServiceLoggerCategory()
{
  return &type metadata for Logger.ServiceLoggerCategory;
}

uint64_t sub_24884EBF0(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
    sub_248841928(0, v2, 0);
    uint64_t result = v10;
    unsigned int v4 = (char *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t v6 = *(void *)&aRoot_2[8 * v5];
      uint64_t v11 = result;
      unint64_t v8 = *(void *)(result + 16);
      unint64_t v7 = *(void *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_248841928(v7 > 1, v8 + 1, 1);
        uint64_t result = v11;
      }
      *(void *)(result + 16) = v8 + 1;
      uint64_t v9 = result + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = 0xE400000000000000;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t Message.copy(newCategory:newType:newContent:newMetadata:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, unint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t v8 = *a4;
  unint64_t v7 = a4[1];
  unint64_t v9 = a4[2];
  char v10 = *((unsigned char *)a4 + 24);
  unsigned int v11 = *(unsigned __int8 *)(v5 + 40);
  LODWORD(v12) = *(unsigned __int8 *)(v5 + 41);
  LODWORD(v13) = *(unsigned __int8 *)(v5 + 42);
  unint64_t v14 = *(void *)(v5 + 56);
  unint64_t v41 = *(void *)(v5 + 48);
  char v15 = *(unsigned char *)(v5 + 64);
  uint64_t v42 = *(void *)(v5 + 72);
  if ((a1 & 0x100000000) != 0) {
    int v16 = *(_DWORD *)v5;
  }
  else {
    int v16 = a1;
  }
  if ((a2 & 0x10000) != 0) {
    __int16 v17 = *(_WORD *)(v5 + 4);
  }
  else {
    __int16 v17 = a2;
  }
  __int16 v43 = v17;
  int v44 = v16;
  if (a3)
  {
    uint64_t v18 = a3;
    if (v9)
    {
LABEL_9:
      unsigned int v11 = v8 & 1;
      uint64_t v12 = (v8 >> 8) & 1;
      uint64_t v13 = (v8 >> 16) & 1;
      char v15 = v10 & 1;
      unint64_t v14 = v9;
      goto LABEL_12;
    }
  }
  else
  {
    unint64_t v19 = a4[1];
    unsigned int v40 = v11;
    int v20 = v13;
    char v21 = v15;
    char v22 = *((unsigned char *)a4 + 24);
    uint64_t v23 = swift_bridgeObjectRetain();
    char v10 = v22;
    char v15 = v21;
    LODWORD(v13) = v20;
    unsigned int v11 = v40;
    unint64_t v7 = v19;
    uint64_t v18 = v23;
    if (v9) {
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = v41;
LABEL_12:
  uint64_t v24 = 256;
  if (!v12) {
    uint64_t v24 = 0;
  }
  uint64_t v25 = v24 | v11;
  uint64_t v26 = 0x10000;
  if (!v13) {
    uint64_t v26 = 0;
  }
  v45[0] = v25 | v26;
  v45[1] = v7;
  v45[2] = v14;
  char v46 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Message.init(category:type:content:metadata:)(v44, v43, v18, v45, (uint64_t)&v47);
  uint64_t v27 = v60;
  if (v60)
  {
    uint64_t v28 = v59;
  }
  else
  {
    uint64_t v27 = swift_bridgeObjectRetain();
    uint64_t v28 = v42;
  }
  __int16 v29 = v48;
  uint64_t v30 = v49;
  uint64_t v31 = v50;
  uint64_t v32 = v51;
  char v33 = v52;
  char v34 = v53;
  char v35 = v54;
  char v36 = v55;
  uint64_t v38 = v56;
  uint64_t result = v57;
  char v39 = v58;
  *(_DWORD *)a5 = v47;
  *(_WORD *)(a5 + 4) = v29;
  *(void *)(a5 + 8) = v30;
  *(void *)(a5 + 16) = v31;
  *(void *)(a5 + 24) = v32;
  *(unsigned char *)(a5 + 32) = v33;
  *(unsigned char *)(a5 + 40) = v34;
  *(unsigned char *)(a5 + 41) = v35;
  *(unsigned char *)(a5 + 42) = v36;
  *(void *)(a5 + 48) = v38;
  *(void *)(a5 + 56) = result;
  *(unsigned char *)(a5 + 64) = v39;
  *(void *)(a5 + 72) = v28;
  *(void *)(a5 + 80) = v27;
  return result;
}

uint64_t sub_24884EE9C(char a1, char a2)
{
  if (*(void *)&aRoot_2[8 * a2] == *(void *)&aRoot_2[8 * a1])
  {
    swift_bridgeObjectRelease_n();
    char v2 = 1;
  }
  else
  {
    char v3 = sub_24887CF48();
    swift_bridgeObjectRelease_n();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_24884EF18(char a1, char a2)
{
  if (*(void *)&aRoot_2[8 * a1] == *(void *)&aRoot_2[8 * a2])
  {
    swift_bridgeObjectRelease_n();
    char v2 = 1;
  }
  else
  {
    char v3 = sub_24887CF48();
    swift_bridgeObjectRelease_n();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_24884EF90(char a1, char a2)
{
  if (*(void *)&aRoot_2[8 * a2] == *(void *)&aRoot_2[8 * a1]) {
    char v2 = 0;
  }
  else {
    char v2 = sub_24887CF48();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_24884EFFC(uint64_t a1)
{
  int64_t v1 = 0;
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v3 = v4;
  uint64_t v23 = result;
  uint64_t v5 = 1 << *(unsigned char *)(result - 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & v3;
  uint64_t v22 = MEMORY[0x263F8EE78];
  int64_t v24 = (unint64_t)(v5 + 63) >> 6;
  if ((v6 & v3) != 0) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v10 = v1 + 1;
  if (!__OFADD__(v1, 1))
  {
    if (v10 < v24)
    {
      unint64_t v11 = *(void *)(v23 + 8 * v10);
      ++v1;
      if (v11) {
        goto LABEL_22;
      }
      int64_t v1 = v10 + 1;
      if (v10 + 1 >= v24) {
        goto LABEL_32;
      }
      unint64_t v11 = *(void *)(v23 + 8 * v1);
      if (v11) {
        goto LABEL_22;
      }
      int64_t v1 = v10 + 2;
      if (v10 + 2 >= v24) {
        goto LABEL_32;
      }
      unint64_t v11 = *(void *)(v23 + 8 * v1);
      if (v11) {
        goto LABEL_22;
      }
      int64_t v1 = v10 + 3;
      if (v10 + 3 >= v24) {
        goto LABEL_32;
      }
      unint64_t v11 = *(void *)(v23 + 8 * v1);
      if (v11)
      {
LABEL_22:
        unint64_t v7 = (v11 - 1) & v11;
        for (unint64_t i = __clz(__rbit64(v11)) + (v1 << 6); ; unint64_t i = v8 | (v1 << 6))
        {
          uint64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
          uint64_t v14 = *v13;
          uint64_t v15 = v13[1];
          uint64_t v16 = qword_26B142F08;
          swift_bridgeObjectRetain();
          if (v16 != -1) {
            swift_once();
          }
          uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(qword_26B142F20);
          __swift_project_value_buffer(v17, (uint64_t)qword_26B142EE8);
          sub_24882F968();
          sub_24882FA1C(&qword_26B142F18, qword_26B142F20);
          if (sub_24887C6F8())
          {
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v18 = v22;
            if ((result & 1) == 0)
            {
              uint64_t result = sub_248841928(0, *(void *)(v22 + 16) + 1, 1);
              uint64_t v18 = v22;
            }
            unint64_t v20 = *(void *)(v18 + 16);
            unint64_t v19 = *(void *)(v18 + 24);
            if (v20 >= v19 >> 1)
            {
              uint64_t result = sub_248841928(v19 > 1, v20 + 1, 1);
              uint64_t v18 = v22;
            }
            *(void *)(v18 + 16) = v20 + 1;
            uint64_t v22 = v18;
            uint64_t v21 = v18 + 16 * v20;
            *(void *)(v21 + 32) = v14;
            *(void *)(v21 + 40) = v15;
            if (!v7) {
              goto LABEL_7;
            }
          }
          else
          {
            uint64_t result = swift_bridgeObjectRelease();
            if (!v7) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v8 = __clz(__rbit64(v7));
          v7 &= v7 - 1;
        }
      }
      int64_t v12 = v10 + 4;
      if (v12 < v24)
      {
        unint64_t v11 = *(void *)(v23 + 8 * v12);
        if (v11)
        {
          int64_t v1 = v12;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v1 = v12 + 1;
          if (__OFADD__(v12, 1)) {
            goto LABEL_34;
          }
          if (v1 >= v24) {
            break;
          }
          unint64_t v11 = *(void *)(v23 + 8 * v1);
          ++v12;
          if (v11) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_32:
    swift_release();
    return v22;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

unint64_t Message.init(category:type:content:metadata:)@<X0>(int a1@<W0>, __int16 a2@<W1>, uint64_t a3@<X2>, unint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t v9 = *a4;
  uint64_t v34 = a4[1];
  unint64_t v10 = a4[2];
  char v33 = *((unsigned char *)a4 + 24);
  uint64_t v11 = sub_248856A50();
  unint64_t v13 = v12;
  uint64_t v39 = a3;
  sub_248856B8C(&v39);
  sub_248857164((unint64_t)&v39);
  swift_beginAccess();
  uint64_t v14 = *(void *)aUnknown_0;
  uint64_t v15 = qword_26B143830;
  swift_bridgeObjectRetain();
  uint64_t v16 = v39;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_24882EFE4(v14, v15, 4, 0x65566769666E6F63, 0xED00006E6F697372, isUniquelyReferenced_nonNull_native);
  uint64_t v39 = v16;
  swift_bridgeObjectRelease();
  sub_248857274((uint64_t)&v39, a1, a2);
  sub_2488573A4((unint64_t)&v39);
  sub_2488574F0(&v39);
  uint64_t v18 = v39;
  uint64_t v19 = swift_bridgeObjectRetain();
  double v20 = sub_2488575FC(v19);
  uint64_t v22 = v21;
  LOBYTE(v15) = v23;
  unint64_t result = swift_bridgeObjectRelease();
  char v38 = v15 & 1;
  int v36 = a1;
  __int16 v37 = a2;
  uint64_t v35 = v22;
  if (v10)
  {
    unint64_t result = swift_bridgeObjectRelease();
    char v25 = v9 & 1;
    uint64_t v26 = (v9 >> 8) & 1;
    uint64_t v27 = (v9 >> 16) & 1;
    char v28 = v33 & 1;
    uint64_t v11 = v34;
    unint64_t v13 = v10;
    if (!*(void *)(v18 + 16)) {
      goto LABEL_8;
    }
  }
  else
  {
    char v28 = 0;
    LOBYTE(v27) = 0;
    LOBYTE(v26) = 0;
    char v25 = 0;
    if (!*(void *)(v18 + 16))
    {
LABEL_8:
      uint64_t v32 = 0;
      uint64_t v31 = 0;
      goto LABEL_9;
    }
  }
  unint64_t result = sub_248840E50(0xD000000000000018, 0x8000000248881210);
  if ((v29 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v30 = *(void *)(v18 + 56) + 24 * result;
  if (*(unsigned char *)(v30 + 16) != 4) {
    goto LABEL_8;
  }
  uint64_t v32 = *(void *)v30;
  uint64_t v31 = *(void *)(v30 + 8);
  swift_bridgeObjectRetain();
  unint64_t result = swift_bridgeObjectRelease();
LABEL_9:
  *(_DWORD *)a5 = v36;
  *(_WORD *)(a5 + 4) = v37;
  *(void *)(a5 + 8) = v18;
  *(double *)(a5 + 16) = v20;
  *(void *)(a5 + 24) = v35;
  *(unsigned char *)(a5 + 32) = v38;
  *(unsigned char *)(a5 + 40) = v25;
  *(unsigned char *)(a5 + 41) = v26;
  *(unsigned char *)(a5 + 42) = v27;
  *(void *)(a5 + 48) = v11;
  *(void *)(a5 + 56) = v13;
  *(unsigned char *)(a5 + 64) = v28;
  *(void *)(a5 + 72) = v32;
  *(void *)(a5 + 80) = v31;
  return result;
}

uint64_t Message.flatten()()
{
  int v1 = *(_DWORD *)v0;
  uint64_t v2 = *(void *)(v0 + 16);
  int v23 = *(unsigned __int8 *)(v0 + 40);
  char v21 = *(unsigned char *)(v0 + 32);
  int v22 = *(unsigned __int8 *)(v0 + 41);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 42);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 80);
  uint64_t v19 = *(void *)(v0 + 24);
  uint64_t v20 = *(void *)(v0 + 72);
  unsigned __int16 v7 = *(_WORD *)(v0 + 4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D98);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24887E380;
  *(void *)(inited + 32) = 0x6761746F69647561;
  *(void *)(inited + 40) = 0xE800000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v24 = _s18AudioAnalyticsBase9UtilitiesO24eventCategoryDescription4fromSSSo0a5EventF0V_tFZ_0(v1);
  uint64_t v25 = v9;
  sub_24887C838();
  _s18AudioAnalyticsBase9UtilitiesO20eventTypeDescription4fromSSSo0a5EventF0V_tFZ_0(v7);
  sub_24887C838();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(inited + 48) = v24;
  *(void *)(inited + 56) = v25;
  *(unsigned char *)(inited + 64) = 4;
  *(void *)(inited + 72) = 0xD000000000000015;
  *(void *)(inited + 80) = 0x80000002488812A0;
  *(void *)(inited + 88) = v2;
  *(void *)(inited + 96) = 0;
  *(unsigned char *)(inited + 104) = 2;
  *(void *)(inited + 112) = 0xD000000000000010;
  *(void *)(inited + 120) = 0x8000000248882980;
  *(void *)(inited + 128) = v3;
  *(void *)(inited + 136) = 0;
  *(unsigned char *)(inited + 144) = 3;
  strcpy((char *)(inited + 152), "untrustworthy");
  *(_WORD *)(inited + 166) = -4864;
  *(void *)(inited + 168) = v5;
  *(void *)(inited + 176) = v4;
  *(unsigned char *)(inited + 184) = 4;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_24882B938(inited);
  if ((v21 & 1) == 0)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_24882EFE4(v19, 0, 2, 0xD000000000000011, 0x80000002488812C0, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    char v12 = swift_isUniquelyReferenced_nonNull_native();
    sub_24882EFE4(v20, v6, 4, 0xD000000000000018, 0x8000000248881210, v12);
    swift_bridgeObjectRelease();
  }
  if (v22)
  {
    char v13 = swift_isUniquelyReferenced_nonNull_native();
    sub_24882EFE4(1, 0, 3, 0xD000000000000011, 0x80000002488829A0, v13);
    swift_bridgeObjectRelease();
  }
  if (v23)
  {
    char v14 = swift_isUniquelyReferenced_nonNull_native();
    sub_24882EFE4(1, 0, 3, 0x646E756465527369, 0xEB00000000746E61, v14);
    swift_bridgeObjectRelease();
  }
  if (qword_26B143368 != -1) {
    swift_once();
  }
  if (byte_26B143E7A == 1)
  {
    char v15 = swift_isUniquelyReferenced_nonNull_native();
    sub_24882EFE4(1, 0, 3, 0x79727261437369, 0xE700000000000000, v15);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_24884F940(v16, v10);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t Message.audioTag.getter()
{
  unsigned __int16 v1 = *(_WORD *)(v0 + 4);
  uint64_t v3 = _s18AudioAnalyticsBase9UtilitiesO24eventCategoryDescription4fromSSSo0a5EventF0V_tFZ_0(*(_DWORD *)v0);
  sub_24887C838();
  _s18AudioAnalyticsBase9UtilitiesO20eventTypeDescription4fromSSSo0a5EventF0V_tFZ_0(v1);
  sub_24887C838();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_24884F940(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_24885459C(a1, (uint64_t)sub_248856400, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t Message.flattenToAnyDictionary()()
{
  uint64_t v0 = Message.flatten()();
  uint64_t v1 = sub_24885437C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

Swift::String __swiftcall Message.toString()()
{
  uint64_t v39 = *MEMORY[0x263EF8340];
  uint64_t v1 = sub_24887C798();
  MEMORY[0x270FA5388](v1 - 8);
  __int16 v2 = *(_WORD *)(v0 + 4);
  uint64_t v3 = *(void **)(v0 + 8);
  uint64_t v4 = *(void **)(v0 + 16);
  uint64_t v5 = *(void **)(v0 + 24);
  char v6 = *(unsigned char *)(v0 + 32);
  char v7 = *(unsigned char *)(v0 + 40);
  char v8 = *(unsigned char *)(v0 + 41);
  char v9 = *(unsigned char *)(v0 + 42);
  uint64_t v10 = *(void *)(v0 + 48);
  uint64_t v11 = *(void *)(v0 + 56);
  char v12 = *(unsigned char *)(v0 + 64);
  LODWORD(v30[0]) = *(_DWORD *)v0;
  WORD2(v30[0]) = v2;
  v30[1] = v3;
  v30[2] = v4;
  v30[3] = v5;
  char v31 = v6;
  char v32 = v7;
  char v33 = v8;
  char v34 = v9;
  uint64_t v35 = v10;
  uint64_t v36 = v11;
  char v37 = v12;
  long long v38 = *(_OWORD *)(v0 + 72);
  uint64_t v13 = Message.flatten()();
  sub_24885437C(v13);
  swift_bridgeObjectRelease();
  char v14 = self;
  char v15 = (void *)sub_24887C698();
  v30[0] = 0;
  id v16 = objc_msgSend(v14, sel_dataWithJSONObject_options_error_, v15, 11, v30);

  id v17 = v30[0];
  if (!v16)
  {
    uint64_t v24 = v17;
    uint64_t v25 = (void *)sub_24887C488();

    swift_willThrow();
    uint64_t v18 = 0;
    unint64_t v20 = 0xF000000000000000;
    goto LABEL_5;
  }
  uint64_t v18 = sub_24887C568();
  unint64_t v20 = v19;

  sub_248838E5C(v18, v20);
  sub_24887C788();
  uint64_t v21 = sub_24887C778();
  int v23 = v22;
  sub_248838EB4(v18, v20);
  if (!v23)
  {
LABEL_5:
    uint64_t v21 = sub_24887C6B8();
    int v23 = v26;
    swift_release();
    sub_24884B724(v18, v20);
    goto LABEL_6;
  }
  sub_248838EB4(v18, v20);
  swift_release();
LABEL_6:
  uint64_t v27 = v21;
  char v28 = v23;
  result._object = v28;
  result._countAndFlagsBits = v27;
  return result;
}

Swift::Void __swiftcall Message.addToContent(from:)(Swift::OpaquePointer from)
{
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v4 = *(void *)(v1 + 8);
  *(void *)(v1 + 8) = 0x8000000000000000;
  sub_24885459C((uint64_t)from._rawValue, (uint64_t)sub_248856400, 0, isUniquelyReferenced_nonNull_native, &v4);
  *(void *)(v1 + 8) = v4;
  swift_bridgeObjectRelease();
}

uint64_t Message.copyPrevious(fields:from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = a1 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 56);
  int64_t v65 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v64 = (void *)MEMORY[0x263F8EE78];
  while (v9)
  {
    unint64_t v11 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v12 = v11 | (v10 << 6);
LABEL_22:
    id v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    uint64_t v19 = *(void *)(*(void *)(v3 + 8) + 16);
    swift_bridgeObjectRetain();
    if (v19
      && (swift_bridgeObjectRetain(), sub_248840E50(v18, v17), char v21 = v20, swift_bridgeObjectRelease(), (v21 & 1) != 0)
      || !*(void *)(a2 + 16))
    {
LABEL_5:
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_248840E50(v18, v17);
      if ((v22 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v64 = sub_248838454(0, v64[2] + 1, 1, v64);
      }
      unint64_t v24 = v64[2];
      unint64_t v23 = v64[3];
      if (v24 >= v23 >> 1) {
        uint64_t v64 = sub_248838454((void *)(v23 > 1), v24 + 1, 1, v64);
      }
      v64[2] = v24 + 1;
      uint64_t v25 = &v64[2 * v24];
      v25[4] = v18;
      v25[5] = v17;
      if (*(void *)(a2 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v26 = sub_248840E50(v18, v17);
        if ((v27 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_38;
        }
        uint64_t v28 = *(void *)(a2 + 56) + 24 * v26;
        char v29 = *(unsigned char *)(v28 + 16);
        uint64_t v60 = *(void *)v28;
        uint64_t v62 = *(void *)(v28 + 8);
        sub_24882D9F4(*(void *)v28, v62, v29);
        swift_bridgeObjectRelease();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v30 = *(void **)(v3 + 8);
        *(void *)(v3 + 8) = 0x8000000000000000;
        unint64_t v32 = sub_248840E50(v18, v17);
        uint64_t v33 = v30[2];
        BOOL v34 = (v31 & 1) == 0;
        uint64_t v35 = v33 + v34;
        if (__OFADD__(v33, v34)) {
          goto LABEL_56;
        }
        if (v30[3] >= v35)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            if (v31) {
              goto LABEL_44;
            }
          }
          else
          {
            unint64_t v59 = v32;
            char v56 = v31;
            sub_248839F90();
            unint64_t v32 = v59;
            if (v56) {
              goto LABEL_44;
            }
          }
        }
        else
        {
          char v55 = v31;
          sub_248838F6C(v35, isUniquelyReferenced_nonNull_native);
          unint64_t v36 = sub_248840E50(v18, v17);
          if ((v55 & 1) != (v37 & 1)) {
            goto LABEL_58;
          }
          unint64_t v32 = v36;
          if (v55)
          {
LABEL_44:
            uint64_t v44 = v30[7] + 24 * v32;
            sub_24882F8D0(*(void *)v44, *(void *)(v44 + 8), *(unsigned char *)(v44 + 16));
            *(void *)uint64_t v44 = v60;
            *(void *)(v44 + 8) = v62;
            *(unsigned char *)(v44 + 16) = v29;
            goto LABEL_48;
          }
        }
        v30[(v32 >> 6) + 8] |= 1 << v32;
        uint64_t v45 = (uint64_t *)(v30[6] + 16 * v32);
        *uint64_t v45 = v18;
        v45[1] = v17;
        uint64_t v46 = v30[7] + 24 * v32;
        *(void *)uint64_t v46 = v60;
        *(void *)(v46 + 8) = v62;
        *(unsigned char *)(v46 + 16) = v29;
        uint64_t v47 = v30[2];
        BOOL v48 = __OFADD__(v47, 1);
        uint64_t v49 = v47 + 1;
        if (v48) {
          goto LABEL_57;
        }
        v30[2] = v49;
        swift_bridgeObjectRetain();
LABEL_48:
        *(void *)(v3 + 8) = v30;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_38:
        swift_bridgeObjectRetain();
        unint64_t v38 = sub_248840E50(v18, v17);
        char v40 = v39;
        swift_bridgeObjectRelease();
        if ((v40 & 1) == 0) {
          goto LABEL_5;
        }
        char v41 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v42 = *(void *)(v3 + 8);
        *(void *)(v3 + 8) = 0x8000000000000000;
        if ((v41 & 1) == 0) {
          sub_248839F90();
        }
        swift_bridgeObjectRelease();
        uint64_t v43 = *(void *)(v42 + 56) + 24 * v38;
        uint64_t v61 = *(void *)(v43 + 8);
        uint64_t v63 = *(void *)v43;
        char v58 = *(unsigned char *)(v43 + 16);
        sub_248854130(v38, v42);
        *(void *)(v3 + 8) = v42;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24882F8D0(v63, v61, v58);
      }
    }
  }
  int64_t v13 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_55;
  }
  if (v13 >= v65) {
    goto LABEL_49;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v13);
  ++v10;
  if (v14) {
    goto LABEL_21;
  }
  int64_t v10 = v13 + 1;
  if (v13 + 1 >= v65) {
    goto LABEL_49;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v10);
  if (v14) {
    goto LABEL_21;
  }
  int64_t v10 = v13 + 2;
  if (v13 + 2 >= v65) {
    goto LABEL_49;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v10);
  if (v14)
  {
LABEL_21:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_22;
  }
  int64_t v15 = v13 + 3;
  if (v15 < v65)
  {
    unint64_t v14 = *(void *)(v6 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v10 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          break;
        }
        if (v10 >= v65) {
          goto LABEL_49;
        }
        unint64_t v14 = *(void *)(v6 + 8 * v10);
        ++v15;
        if (v14) {
          goto LABEL_21;
        }
      }
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      uint64_t result = sub_24887CF98();
      __break(1u);
      return result;
    }
    int64_t v10 = v15;
    goto LABEL_21;
  }
LABEL_49:
  swift_release();
  if (v64[2])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C10);
    sub_24882FA1C((unint64_t *)&qword_26B143C18, &qword_26B143C10);
    uint64_t v50 = sub_24887C708();
    uint64_t v52 = v51;
    swift_bridgeObjectRelease();
    char v53 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v66 = *(void *)(v3 + 8);
    *(void *)(v3 + 8) = 0x8000000000000000;
    sub_24882EFE4(v50, v52, 4, 0xD00000000000001DLL, 0x80000002488829C0, v53);
    *(void *)(v3 + 8) = v66;
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t Message.Metadata.isRedundant.getter()
{
  return *v0;
}

uint64_t Message.Metadata.isRedundant.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*Message.Metadata.isRedundant.modify())()
{
  return nullsub_1;
}

uint64_t Message.Metadata.isBroadcast.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t Message.Metadata.isBroadcast.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*Message.Metadata.isBroadcast.modify())()
{
  return nullsub_1;
}

uint64_t Message.Metadata.isSessionStarted.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t Message.Metadata.isSessionStarted.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*Message.Metadata.isSessionStarted.modify())()
{
  return nullsub_1;
}

uint64_t Message.Metadata.untrustworthyReasons.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Message.Metadata.untrustworthyReasons.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*Message.Metadata.untrustworthyReasons.modify())()
{
  return nullsub_1;
}

uint64_t Message.Metadata.requiresSummaryDecoration.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t Message.Metadata.requiresSummaryDecoration.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  return result;
}

uint64_t (*Message.Metadata.requiresSummaryDecoration.modify())()
{
  return nullsub_1;
}

unint64_t sub_24885049C(char a1)
{
  unint64_t result = 0x646E756465527369;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6364616F72427369;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24885056C()
{
  return sub_24885049C(*v0);
}

uint64_t sub_248850574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2488584E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24885059C()
{
  return 0;
}

void sub_2488505A8(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_2488505B4(uint64_t a1)
{
  unint64_t v2 = sub_2488577A8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2488505F0(uint64_t a1)
{
  unint64_t v2 = sub_2488577A8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Message.Metadata.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26932CE30);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *(unsigned __int8 *)(v1 + 1);
  int v14 = *(unsigned __int8 *)(v1 + 2);
  int v15 = v8;
  uint64_t v9 = *(void *)(v1 + 8);
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = v9;
  v11[1] = *(unsigned __int8 *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2488577A8();
  sub_24887D088();
  char v20 = 0;
  sub_24887CEA8();
  if (!v2)
  {
    char v19 = 1;
    sub_24887CEA8();
    char v18 = 2;
    sub_24887CEA8();
    char v17 = 3;
    sub_24887CE98();
    char v16 = 4;
    sub_24887CEA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Message.Metadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26932CE40);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248856A50();
  uint64_t v23 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2488577A8();
  sub_24887D078();
  if (!v2)
  {
    uint64_t v10 = v6;
    char v28 = 0;
    char v11 = sub_24887CE08();
    char v27 = 1;
    int v12 = sub_24887CE08();
    char v26 = 2;
    int v21 = sub_24887CE08();
    int v22 = v12;
    char v25 = 3;
    uint64_t v13 = sub_24887CDF8();
    uint64_t v16 = v15;
    uint64_t v20 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    char v24 = 4;
    char v17 = sub_24887CE08();
    v22 &= 1u;
    LODWORD(v23) = v11 & 1;
    char v18 = v21 & 1;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
    *(unsigned char *)a2 = v23;
    *(unsigned char *)(a2 + 1) = v22;
    *(unsigned char *)(a2 + 2) = v18;
    *(void *)(a2 + 8) = v20;
    *(void *)(a2 + 16) = v16;
    *(unsigned char *)(a2 + 24) = v17 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_248850AD8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Message.Metadata.init(from:)(a1, a2);
}

uint64_t sub_248850AF0(void *a1)
{
  return Message.Metadata.encode(to:)(a1);
}

uint64_t Message.category.getter()
{
  return *v0;
}

uint64_t Message.type.getter()
{
  return *(unsigned __int16 *)(v0 + 4);
}

uint64_t Message.content.getter()
{
  return swift_bridgeObjectRetain();
}

double Message.timestamp.getter()
{
  return *(double *)(v0 + 16);
}

void Message.timestamp.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*Message.timestamp.modify())()
{
  return nullsub_1;
}

uint64_t Message.invalidTimestamp.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t static Message.volumeKey.getter()
{
  return 0x6F6973736553584DLL;
}

uint64_t Message.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 41);
  char v3 = *(unsigned char *)(v1 + 42);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  char v6 = *(unsigned char *)(v1 + 64);
  *(unsigned char *)a1 = *(unsigned char *)(v1 + 40);
  *(unsigned char *)(a1 + 1) = v2;
  *(unsigned char *)(a1 + 2) = v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v6;
  return swift_bridgeObjectRetain();
}

uint64_t Message.metadata.setter(char *a1)
{
  char v2 = *a1;
  char v3 = a1[1];
  char v4 = a1[2];
  uint64_t v5 = *((void *)a1 + 1);
  uint64_t v6 = *((void *)a1 + 2);
  char v7 = a1[24];
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)(v1 + 40) = v2;
  *(unsigned char *)(v1 + 41) = v3;
  *(unsigned char *)(v1 + 42) = v4;
  *(void *)(v1 + 48) = v5;
  *(void *)(v1 + 56) = v6;
  *(unsigned char *)(v1 + 64) = v7;
  return result;
}

uint64_t (*Message.metadata.modify())()
{
  return nullsub_1;
}

uint64_t Message.appName.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Message.appName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return result;
}

uint64_t (*Message.appName.modify())()
{
  return nullsub_1;
}

BOOL Message.shouldRetain.getter()
{
  BOOL v2 = *(void *)(*(void *)(v0 + 8) + 16)
    && (sub_248840E50(0xD00000000000001BLL, 0x80000002488829E0), (v1 & 1) != 0)
    && SimpleType.isTrue()();
  return v2;
}

uint64_t sub_248850D38()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(qword_26B142F20);
  __swift_allocate_value_buffer(v0, qword_26B142EE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B142EE8);
  return sub_24887C5D8();
}

uint64_t sub_248850DA0()
{
  uint64_t v0 = sub_248850DEC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D10);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = v0;
  qword_26B143988 = result;
  return result;
}

uint64_t sub_248850DEC()
{
  sub_248858B70();
  uint64_t v2 = sub_24887CA28();
  if (_s18AudioAnalyticsBase15DeviceUtilitiesO17hasRootsInstalledSbyFZ_0()) {
    sub_24883A83C(&v1, 0);
  }
  if (_s18AudioAnalyticsBase15DeviceUtilitiesO10hasSerial3SbyFZ_0()) {
    sub_24883A83C(&v1, 1);
  }
  if (qword_26B143DE8 != -1) {
    swift_once();
  }
  type metadata accessor for ThermalState(0);
  sub_24887CAF8();
  if (sub_24883FEF8(v1, (uint64_t)&unk_26FC8E9E0)) {
    sub_24883A83C(&v1, 2);
  }
  return v2;
}

uint64_t sub_248850EF4()
{
  if (qword_26B1430A0 != -1) {
    swift_once();
  }
  double v0 = *(double *)&qword_26B143C70 * 10.0;
  type metadata accessor for PeriodicClosure();
  uint64_t v1 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D08);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(v1 + 16) = result;
  *(double *)(v1 + 24) = v0;
  off_26B143980 = (_UNKNOWN *)v1;
  return result;
}

uint64_t sub_248850FA0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D00);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0xE000000000000000;
  qword_26B143990 = result;
  return result;
}

uint64_t sub_248850FE0()
{
  if (qword_26B143DE8 != -1) {
    swift_once();
  }
  type metadata accessor for ThermalState(0);
  sub_24887CAF8();
  if (sub_24883FEF8(v3, (uint64_t)&unk_26FC8EA10)) {
    return sub_24883A83C(&v1, 2);
  }
  else {
    return sub_24885E9D4(2, &v2);
  }
}

uint64_t UntrustworthyReason.rawValue.getter()
{
  return *(void *)&aRoot_2[8 * *v0];
}

unint64_t sub_2488510D4(char a1)
{
  unint64_t result = 0x79726F6765746163;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701869940;
      break;
    case 2:
      unint64_t result = 0x746E65746E6F63;
      break;
    case 3:
      unint64_t result = 0x6D617473656D6974;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x617461646174656DLL;
      break;
    case 6:
      unint64_t result = 0x656D614E707061;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2488511B8()
{
  return sub_2488510D4(*v0);
}

uint64_t sub_2488511C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_248858704(a1, a2);
  *a3 = result;
  return result;
}

void sub_2488511E8(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_2488511F4(uint64_t a1)
{
  unint64_t v2 = sub_2488577FC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248851230(uint64_t a1)
{
  unint64_t v2 = sub_2488577FC();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t static Message.CommonKeys.timestamp.getter()
{
  return 0xD000000000000015;
}

unint64_t static Message.CommonKeys.invalidTimestamp.getter()
{
  return 0xD000000000000011;
}

unint64_t static Message.CommonKeys.processUptimeMs.getter()
{
  return 0xD000000000000010;
}

unint64_t static Message.CommonKeys.systemUptimeSec.getter()
{
  return 0xD000000000000010;
}

unint64_t static Message.CommonKeys.retainMessage.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_2488512F8()
{
  uint64_t v0 = sub_248856690((uint64_t)&unk_26FC8DB50);
  uint64_t result = swift_arrayDestroy();
  qword_26B144EB8 = v0;
  return result;
}

uint64_t static Message.== infix(_:_:)()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  char v1 = sub_2488556C8(v0);
  swift_bridgeObjectRelease();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_2488556C8(v2);
  swift_bridgeObjectRelease();
  char v4 = sub_2488513D0((uint64_t)v1, (uint64_t)v3);
  swift_release();
  swift_release();
  return v4 & 1;
}

uint64_t sub_2488513D0(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t v7 = a2;
  uint64_t v8 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v9 = 0;
  uint64_t v278 = a1 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  uint64_t v12 = -1 << v10;
  if (v10 < 64) {
    uint64_t v11 = ~v12;
  }
  unint64_t v13 = v11 & *(void *)(a1 + 64);
  int64_t v279 = (unint64_t)(v10 + 63) >> 6;
  LOBYTE(v14) = 24;
  while (2)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      int64_t v280 = v9;
      unint64_t v16 = v15 | (v9 << 6);
    }
    else
    {
      int64_t v17 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_219;
      }
      if (v17 >= v279) {
        return 1;
      }
      unint64_t v18 = *(void *)(v278 + 8 * v17);
      int64_t v19 = v9 + 1;
      if (!v18)
      {
        int64_t v19 = v9 + 2;
        if (v9 + 2 >= v279) {
          return 1;
        }
        unint64_t v18 = *(void *)(v278 + 8 * v19);
        if (!v18)
        {
          int64_t v19 = v9 + 3;
          if (v9 + 3 >= v279) {
            return 1;
          }
          unint64_t v18 = *(void *)(v278 + 8 * v19);
          if (!v18)
          {
            int64_t v19 = v9 + 4;
            if (v9 + 4 >= v279) {
              return 1;
            }
            unint64_t v18 = *(void *)(v278 + 8 * v19);
            if (!v18)
            {
              uint64_t v20 = v9 + 5;
              if (v9 + 5 >= v279) {
                return 1;
              }
              unint64_t v18 = *(void *)(v278 + 8 * v20);
              if (!v18)
              {
                while (1)
                {
                  int64_t v19 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    break;
                  }
                  if (v19 >= v279) {
                    return 1;
                  }
                  unint64_t v18 = *(void *)(v278 + 8 * v19);
                  ++v20;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
LABEL_237:
                __break(1u);
LABEL_238:
                __break(1u);
LABEL_239:
                __break(1u);
                JUMPOUT(0x248852F2CLL);
              }
              int64_t v19 = v9 + 5;
            }
          }
        }
      }
LABEL_23:
      unint64_t v13 = (v18 - 1) & v18;
      int64_t v280 = v19;
      unint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
    }
    int v21 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v16);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    uint64_t v24 = *(void *)(v8 + 56) + 24 * v16;
    uint64_t v2 = *(uint64_t *)v24;
    uint64_t v3 = *(void *)(v24 + 8);
    int v25 = *(unsigned __int8 *)(v24 + 16);
    swift_bridgeObjectRetain();
    sub_24882D9F4(v2, v3, v25);
    unint64_t v26 = sub_248840E50(v22, v23);
    uint64_t v6 = 24;
    char v28 = v27;
    swift_bridgeObjectRelease();
    if ((v28 & 1) == 0) {
      goto LABEL_233;
    }
    uint64_t v29 = *(void *)(v7 + 56) + 24 * v26;
    uint64_t v5 = *(uint64_t *)v29;
    uint64_t v4 = *(uint64_t *)(v29 + 8);
    char v30 = *(unsigned char *)(v29 + 16);
    LOBYTE(v14) = 24;
    switch(v30)
    {
      case 1:
        if (v25 != 1) {
          goto LABEL_198;
        }
        sub_24882F8D0(*(void *)v29, *(void *)(v29 + 8), 1);
        uint64_t v31 = v2;
        uint64_t v32 = v3;
        char v33 = 1;
        goto LABEL_30;
      case 2:
        if (v25 != 2) {
          goto LABEL_198;
        }
        sub_24882F8D0(*(void *)v29, *(void *)(v29 + 8), 2);
        sub_24882F8D0(v2, v3, 2);
        BOOL v34 = *(double *)&v5 == *(double *)&v2;
        goto LABEL_33;
      case 3:
        if (v25 != 3) {
          goto LABEL_198;
        }
        uint64_t v4 = (*(void *)v29 & 1) == 0;
        sub_24882F8D0(*(void *)v29, *(void *)(v29 + 8), 3);
        sub_24882F8D0(v2, v3, 3);
        int64_t v9 = v280;
        if (((v2 ^ v4) & 1) == 0) {
          return 0;
        }
        continue;
      case 4:
        if (v25 != 4)
        {
          char v189 = *(unsigned char *)(v29 + 16);
LABEL_197:
          sub_24882D9F4(*(void *)v29, *(void *)(v29 + 8), v189);
          swift_bridgeObjectRetain();
          char v30 = v189;
LABEL_198:
          char v190 = v30;
          sub_24882D9F4(v2, v3, v25);
          goto LABEL_232;
        }
        if (v5 == v2 && v4 == v3)
        {
          char v273 = *(unsigned char *)(v29 + 16);
          swift_bridgeObjectRetain();
          uint64_t v42 = v2;
          uint64_t v43 = v3;
          char v44 = 4;
          goto LABEL_193;
        }
        char v36 = sub_24887CF48();
        swift_bridgeObjectRetain();
        sub_24882F8D0(v5, v4, 4);
        uint64_t v37 = v2;
        uint64_t v38 = v3;
        char v39 = 4;
LABEL_51:
        sub_24882F8D0(v37, v38, v39);
        int64_t v9 = v280;
        if ((v36 & 1) == 0) {
          return 0;
        }
        continue;
      case 5:
        if (v25 != 5) {
          goto LABEL_195;
        }
        uint64_t v40 = *(void *)(v5 + 16);
        if (v40 != *(void *)(v2 + 16))
        {
          char v190 = 5;
          sub_24882D9F4(v5, v4, 5);
          sub_24882D9F4(v2, v3, 5);
          sub_24882D9F4(v5, v4, 5);
          goto LABEL_231;
        }
        char v273 = *(unsigned char *)(v29 + 16);
        if (!v40)
        {
          sub_24882D9F4(v5, v4, 5);
          sub_24882D9F4(v2, v3, 5);
          sub_24882D9F4(v5, v4, 5);
          goto LABEL_192;
        }
        sub_24882D9F4(v5, v4, 5);
        sub_24882D9F4(v2, v3, 5);
        sub_24882D9F4(v5, v4, 5);
        if (v5 == v2)
        {
LABEL_192:
          sub_24882F8D0(v5, v4, 5);
          sub_24882F8D0(v2, v3, 5);
          uint64_t v42 = v5;
          uint64_t v43 = v4;
          char v44 = 5;
LABEL_193:
          sub_24882F8D0(v42, v43, v44);
          sub_24882F8D0(v2, v3, v273);
          int64_t v9 = v280;
          continue;
        }
        unint64_t v41 = 0;
        uint64_t v11 = v5 + 32;
        uint64_t v276 = v5 + 32;
        uint64_t v271 = v4;
        uint64_t v274 = v40;
        uint64_t v266 = v8;
        while (2)
        {
          unint64_t v50 = v41;
          uint64_t v10 = *(void *)(v2 + 16);
          if (v50 >= v10)
          {
            __break(1u);
LABEL_219:
            __break(1u);
LABEL_220:
            uint64_t v248 = v11;
            uint64_t v252 = v10;
LABEL_222:
            uint64_t v222 = a2;
            char v223 = v12;
            sub_24882D9F4(v6, a2, v12);
            swift_bridgeObjectRetain();
            LOBYTE(v12) = v223;
            a2 = v222;
            uint64_t v10 = v252;
            uint64_t v11 = v248;
LABEL_223:
            uint64_t v253 = v10;
            uint64_t v224 = a2;
            char v225 = v12;
            uint64_t v226 = v11;
            sub_24882D9F4(v10, v11, v14);
            sub_24882F8D0(v6, v224, v225);
            sub_24882F8D0(v253, v226, v14);
            sub_24882F8D0(v6, v224, v225);
            goto LABEL_226;
          }
          unint64_t v51 = v50 + 1;
          uint64_t v52 = 24 * v50;
          uint64_t v6 = *(uint64_t *)(v276 + v52);
          uint64_t v53 = *(void *)(v276 + v52 + 8);
          uint64_t v54 = *(unsigned __int8 *)(v276 + v52 + 16);
          uint64_t v55 = v2 + 32 + v52;
          uint64_t v56 = *(void *)v55;
          uint64_t v57 = *(void *)(v55 + 8);
          int v58 = *(unsigned __int8 *)(v55 + 16);
          unint64_t v277 = v51;
          switch(v54)
          {
            case 1:
              if (v58 != 1) {
                goto LABEL_205;
              }
              uint64_t v45 = *(void *)v55;
              uint64_t v59 = *(void *)(v55 + 8);
              sub_24882F8D0(v6, v53, 1);
              uint64_t v47 = v45;
              uint64_t v48 = v59;
              char v49 = 1;
              goto LABEL_56;
            case 2:
              if (v58 != 2) {
                goto LABEL_205;
              }
              double v60 = *(double *)v55;
              uint64_t v61 = *(void *)v55;
              uint64_t v62 = *(void *)(v55 + 8);
              sub_24882F8D0(v6, v53, 2);
              uint64_t v63 = v61;
              uint64_t v40 = v274;
              sub_24882F8D0(v63, v62, 2);
              if (*(double *)&v6 != v60) {
                goto LABEL_206;
              }
              goto LABEL_58;
            case 3:
              if (v58 != 3) {
                goto LABEL_205;
              }
              uint64_t v64 = *(void *)v55;
              uint64_t v65 = *(void *)(v55 + 8);
              sub_24882F8D0(v6, v53, 3);
              sub_24882F8D0(v64, v65, 3);
              char v66 = ((v6 & 1) == 0) ^ v64;
              uint64_t v40 = v274;
              uint64_t v4 = v271;
              if ((v66 & 1) == 0) {
                goto LABEL_206;
              }
              goto LABEL_58;
            case 4:
              if (v58 != 4)
              {
                uint64_t v191 = v4;
                uint64_t v263 = *(void *)(v55 + 8);
                uint64_t v192 = *(void *)v55;
                goto LABEL_204;
              }
              if (v6 == v56 && v53 == v57)
              {
                char v267 = v54;
                uint64_t v186 = v53;
                sub_24882D9F4(v6, v53, 4);
                sub_24882D9F4(v6, v186, 4);
                sub_24882F8D0(v6, v186, 4);
                goto LABEL_190;
              }
              uint64_t v68 = v53;
              uint64_t v69 = *(void *)v55;
              uint64_t v70 = v8;
              uint64_t v71 = v6;
              uint64_t v6 = *(uint64_t *)(v55 + 8);
              LODWORD(v275) = sub_24887CF48();
              sub_24882D9F4(v69, v6, 4);
              sub_24882D9F4(v71, v68, 4);
              uint64_t v72 = v71;
              uint64_t v8 = v70;
              sub_24882F8D0(v72, v68, 4);
              uint64_t v73 = v69;
              uint64_t v40 = v274;
              sub_24882F8D0(v73, v6, 4);
              uint64_t v4 = v271;
              if ((v275 & 1) == 0) {
                goto LABEL_206;
              }
              goto LABEL_58;
            case 5:
              uint64_t v263 = *(void *)(v55 + 8);
              if (v58 != 5)
              {
                uint64_t v191 = v4;
                goto LABEL_203;
              }
              uint64_t v74 = *(void *)(v6 + 16);
              uint64_t v268 = v53;
              uint64_t v272 = *(void *)v55;
              uint64_t v265 = v6;
              if (v74 != *(void *)(v56 + 16))
              {
                uint64_t v201 = v53;
                uint64_t v202 = *(void *)v55;
                uint64_t v203 = *(void *)(v55 + 8);
                sub_24882D9F4(v56, v57, 5);
                sub_24882D9F4(v6, v201, 5);
                sub_24882D9F4(v202, v203, 5);
                sub_24882D9F4(v6, v201, 5);
                goto LABEL_230;
              }
              char v267 = v54;
              if (!v74)
              {
                uint64_t v187 = *(void *)(v55 + 8);
                sub_24882D9F4(v56, v57, 5);
                sub_24882D9F4(v6, v268, 5);
                sub_24882D9F4(v272, v187, 5);
                sub_24882D9F4(v6, v268, 5);
                uint64_t v76 = v272;
                goto LABEL_189;
              }
              uint64_t v269 = *(void *)(v6 + 16);
              uint64_t v75 = *(void *)(v55 + 8);
              sub_24882D9F4(v56, v57, 5);
              sub_24882D9F4(v6, v268, 5);
              sub_24882D9F4(v272, v75, 5);
              sub_24882D9F4(v6, v268, 5);
              uint64_t v76 = v272;
              if (v6 == v272)
              {
LABEL_189:
                uint64_t v6 = v265;
                uint64_t v186 = v268;
                sub_24882F8D0(v265, v268, 5);
                sub_24882F8D0(v76, v263, 5);
                sub_24882F8D0(v76, v263, 5);
                uint64_t v8 = v266;
                uint64_t v40 = v274;
LABEL_190:
                sub_24882F8D0(v6, v186, v267);
                uint64_t v4 = v271;
LABEL_58:
                unint64_t v41 = v277;
                LOBYTE(v14) = 24;
                if (v277 == v40) {
                  goto LABEL_192;
                }
                continue;
              }
              unint64_t v77 = 0;
              uint64_t v270 = v6 + 32;
              while (2)
              {
                if (v77 >= *(void *)(v76 + 16))
                {
                  __break(1u);
LABEL_236:
                  __break(1u);
                  goto LABEL_237;
                }
                uint64_t v85 = v77++;
                v85 *= 24;
                uint64_t v8 = *(uint64_t *)(v270 + v85);
                uint64_t v275 = *(void *)(v270 + v85 + 8);
                uint64_t v86 = *(unsigned __int8 *)(v270 + v85 + 16);
                uint64_t v87 = v272 + 32 + v85;
                uint64_t v89 = *(uint64_t *)v87;
                uint64_t v88 = *(void *)(v87 + 8);
                int v90 = *(unsigned __int8 *)(v87 + 16);
                switch(v86)
                {
                  case 1:
                    if (v90 != 1) {
                      goto LABEL_211;
                    }
                    unint64_t v96 = v77;
                    uint64_t v97 = *(void *)(v87 + 8);
                    sub_24882F8D0(v8, v275, 1);
                    uint64_t v93 = v89;
                    uint64_t v94 = v97;
                    unint64_t v77 = v96;
                    char v95 = 1;
                    goto LABEL_84;
                  case 2:
                    if (v90 != 2) {
                      goto LABEL_211;
                    }
                    double v98 = *(double *)&v8;
                    uint64_t v99 = v8;
                    uint64_t v100 = *(void *)(v87 + 8);
                    sub_24882F8D0(v99, v275, 2);
                    sub_24882F8D0(v89, v100, 2);
                    if (v98 != *(double *)&v89) {
                      goto LABEL_230;
                    }
                    goto LABEL_85;
                  case 3:
                    if (v90 != 3) {
                      goto LABEL_211;
                    }
                    unint64_t v101 = v77;
                    BOOL v102 = (v8 & 1) == 0;
                    uint64_t v103 = v8;
                    uint64_t v104 = *(void *)(v87 + 8);
                    sub_24882F8D0(v103, v275, 3);
                    sub_24882F8D0(v89, v104, 3);
                    char v105 = v102 ^ v89;
                    unint64_t v77 = v101;
                    if ((v105 & 1) == 0) {
                      goto LABEL_230;
                    }
                    goto LABEL_85;
                  case 4:
                    if (v90 != 4)
                    {
                      uint64_t v204 = *(void *)(v87 + 8);
LABEL_210:
                      char v205 = v86;
                      sub_24882D9F4(v8, v275, v86);
                      swift_bridgeObjectRetain();
                      LOBYTE(v86) = v205;
                      uint64_t v88 = v204;
LABEL_211:
                      char v206 = v86;
                      uint64_t v207 = v88;
                      sub_24882D9F4(v89, v88, v90);
                      sub_24882F8D0(v8, v275, v206);
                      sub_24882F8D0(v89, v207, v90);
                      uint64_t v208 = v8;
                      uint64_t v209 = v275;
                      char v210 = v206;
                      goto LABEL_229;
                    }
                    if (v8 == v89 && v275 == v88)
                    {
                      char v254 = v86;
                      sub_24882D9F4(v8, v275, 4);
                      sub_24882D9F4(v8, v275, 4);
                      sub_24882F8D0(v8, v275, 4);
                      goto LABEL_186;
                    }
                    unint64_t v259 = v77;
                    uint64_t v107 = *(void *)(v87 + 8);
                    char v108 = sub_24887CF48();
                    sub_24882D9F4(v89, v107, 4);
                    sub_24882D9F4(v8, v275, 4);
                    sub_24882F8D0(v8, v275, 4);
                    uint64_t v109 = v89;
                    uint64_t v110 = v107;
                    unint64_t v77 = v259;
                    char v111 = 4;
LABEL_111:
                    sub_24882F8D0(v109, v110, v111);
                    if ((v108 & 1) == 0) {
                      goto LABEL_230;
                    }
                    goto LABEL_85;
                  case 5:
                    if (v90 != 5) {
                      goto LABEL_208;
                    }
                    uint64_t v112 = *(void *)(v8 + 16);
                    uint64_t v249 = *(void *)(v87 + 8);
                    if (v112 != *(void *)(v89 + 16))
                    {
                      uint64_t v211 = *(void *)(v87 + 8);
                      sub_24882D9F4(v89, v88, 5);
                      sub_24882D9F4(v8, v275, 5);
                      double v262 = *(double *)&v89;
                      sub_24882D9F4(v89, v211, 5);
                      sub_24882D9F4(v8, v275, 5);
                      goto LABEL_228;
                    }
                    char v254 = v86;
                    unint64_t v260 = v77;
                    if (!v112)
                    {
                      double v114 = *(double *)v87;
                      uint64_t v185 = *(void *)(v87 + 8);
                      sub_24882D9F4(v89, v88, 5);
                      sub_24882D9F4(v8, v275, 5);
                      sub_24882D9F4(v89, v185, 5);
                      sub_24882D9F4(v8, v275, 5);
                      goto LABEL_185;
                    }
                    double v262 = *(double *)v87;
                    uint64_t v113 = *(void *)(v87 + 8);
                    sub_24882D9F4(v89, v88, 5);
                    uint64_t v256 = v112;
                    sub_24882D9F4(v8, v275, 5);
                    sub_24882D9F4(v89, v113, 5);
                    sub_24882D9F4(v8, v275, 5);
                    double v114 = *(double *)&v89;
                    if (v8 == v89)
                    {
LABEL_185:
                      sub_24882F8D0(v8, v275, 5);
                      sub_24882F8D0(*(uint64_t *)&v114, v249, 5);
                      sub_24882F8D0(*(uint64_t *)&v114, v249, 5);
                      unint64_t v77 = v260;
LABEL_186:
                      sub_24882F8D0(v8, v275, v254);
LABEL_85:
                      uint64_t v76 = v272;
                      if (v77 == v269) {
                        goto LABEL_189;
                      }
                      continue;
                    }
                    unint64_t v115 = 0;
                    uint64_t v257 = v89 + 32;
                    uint64_t v258 = v8 + 32;
                    while (2)
                    {
                      if (v115 >= *(void *)(*(void *)&v114 + 16)) {
                        goto LABEL_236;
                      }
                      unint64_t v118 = v115 + 1;
                      uint64_t v4 = *(uint64_t *)(v258 + 24 * v115);
                      uint64_t v119 = *(void *)(v258 + 24 * v115 + 8);
                      uint64_t v120 = *(unsigned __int8 *)(v258 + 24 * v115 + 16);
                      uint64_t v121 = v257 + 24 * v115;
                      uint64_t v123 = *(uint64_t *)v121;
                      uint64_t v122 = *(void *)(v121 + 8);
                      int v124 = *(unsigned __int8 *)(v121 + 16);
                      unint64_t v264 = v118;
                      switch(v120)
                      {
                        case 1:
                          if (v124 != 1) {
                            goto LABEL_216;
                          }
                          uint64_t v129 = *(void *)(v121 + 8);
                          sub_24882F8D0(v4, v119, 1);
                          uint64_t v126 = v123;
                          uint64_t v127 = v129;
                          uint64_t v112 = v256;
                          char v128 = 1;
                          goto LABEL_113;
                        case 2:
                          if (v124 != 2) {
                            goto LABEL_216;
                          }
                          double v130 = *(double *)&v4;
                          uint64_t v131 = v4;
                          uint64_t v132 = *(void *)(v121 + 8);
                          sub_24882F8D0(v131, v119, 2);
                          sub_24882F8D0(v123, v132, 2);
                          if (v130 != *(double *)&v123) {
                            goto LABEL_228;
                          }
                          goto LABEL_114;
                        case 3:
                          if (v124 != 3) {
                            goto LABEL_216;
                          }
                          uint64_t v133 = *(void *)(v121 + 8);
                          sub_24882F8D0(v4, v119, 3);
                          sub_24882F8D0(v123, v133, 3);
                          if (((((v4 & 1) == 0) ^ v123) & 1) == 0) {
                            goto LABEL_228;
                          }
                          goto LABEL_114;
                        case 4:
                          if (v124 != 4)
                          {
                            uint64_t v235 = *(void *)(v121 + 8);
                            goto LABEL_215;
                          }
                          if (v4 == v123 && v119 == v122)
                          {
                            char v236 = v120;
                            uint64_t v183 = v119;
                            sub_24882D9F4(v4, v119, 4);
                            sub_24882D9F4(v4, v183, 4);
                            sub_24882F8D0(v4, v183, 4);
                            goto LABEL_182;
                          }
                          double v135 = *(double *)v121;
                          uint64_t v136 = v119;
                          uint64_t v137 = *(void *)(v121 + 8);
                          LODWORD(v255) = sub_24887CF48();
                          sub_24882D9F4(*(uint64_t *)&v135, v137, 4);
                          sub_24882D9F4(v4, v136, 4);
                          sub_24882F8D0(v4, v136, 4);
                          uint64_t v138 = *(void *)&v135;
                          uint64_t v139 = v137;
                          uint64_t v112 = v256;
                          char v140 = 4;
LABEL_140:
                          sub_24882F8D0(v138, v139, v140);
                          if ((LOBYTE(v255) & 1) == 0) {
                            goto LABEL_228;
                          }
                          goto LABEL_114;
                        case 5:
                          uint64_t v235 = *(void *)(v121 + 8);
                          if (v124 != 5) {
                            goto LABEL_215;
                          }
                          uint64_t v141 = *(void *)(v4 + 16);
                          double v255 = *(double *)v121;
                          uint64_t v239 = v119;
                          if (v141 != *(void *)(v123 + 16))
                          {
                            uint64_t v220 = v119;
                            uint64_t v221 = *(void *)(v121 + 8);
                            sub_24882D9F4(v123, v122, 5);
                            sub_24882D9F4(v4, v220, 5);
                            sub_24882D9F4(v123, v221, 5);
                            sub_24882D9F4(v4, v220, 5);
                            goto LABEL_226;
                          }
                          char v236 = v120;
                          if (!v141)
                          {
                            uint64_t v184 = *(void *)(v121 + 8);
                            sub_24882D9F4(v123, v122, 5);
                            sub_24882D9F4(v4, v239, 5);
                            sub_24882D9F4(v123, v184, 5);
                            sub_24882D9F4(v4, v239, 5);
LABEL_181:
                            uint64_t v183 = v239;
                            sub_24882F8D0(v4, v239, 5);
                            sub_24882F8D0(*(uint64_t *)&v255, v235, 5);
                            sub_24882F8D0(*(uint64_t *)&v255, v235, 5);
                            uint64_t v112 = v256;
LABEL_182:
                            sub_24882F8D0(v4, v183, v236);
LABEL_114:
                            unint64_t v115 = v264;
                            double v114 = v262;
                            if (v264 == v112) {
                              goto LABEL_185;
                            }
                            continue;
                          }
                          uint64_t v243 = *(void *)(v4 + 16);
                          uint64_t v142 = *(void *)(v121 + 8);
                          sub_24882D9F4(v123, v122, 5);
                          sub_24882D9F4(v4, v239, 5);
                          sub_24882D9F4(v123, v142, 5);
                          sub_24882D9F4(v4, v239, 5);
                          if (v4 == v123) {
                            goto LABEL_181;
                          }
                          unint64_t v143 = 0;
                          uint64_t v244 = v123 + 32;
                          uint64_t v245 = v4 + 32;
                          uint64_t v231 = v4;
                          while (2)
                          {
                            if (v143 >= *(void *)(*(void *)&v255 + 16)) {
                              goto LABEL_238;
                            }
                            uint64_t v147 = v143++;
                            v147 *= 24;
                            uint64_t v6 = *(uint64_t *)(v245 + v147);
                            a2 = *(void *)(v245 + v147 + 8);
                            uint64_t v12 = *(unsigned __int8 *)(v245 + v147 + 16);
                            uint64_t v148 = v244 + v147;
                            uint64_t v10 = *(void *)v148;
                            uint64_t v11 = *(void *)(v148 + 8);
                            int v14 = *(unsigned __int8 *)(v148 + 16);
                            switch(v12)
                            {
                              case 1:
                                if (v14 != 1) {
                                  goto LABEL_223;
                                }
                                uint64_t v149 = *(void *)v148;
                                uint64_t v247 = *(void *)(v148 + 8);
                                sub_24882F8D0(v6, a2, 1);
                                uint64_t v150 = v149;
                                uint64_t v151 = v247;
                                char v152 = 1;
                                goto LABEL_142;
                              case 2:
                                if (v14 != 2) {
                                  goto LABEL_223;
                                }
                                double v153 = *(double *)&v6;
                                double v154 = *(double *)v148;
                                uint64_t v155 = v6;
                                uint64_t v156 = *(void *)v148;
                                uint64_t v157 = *(void *)(v148 + 8);
                                sub_24882F8D0(v155, a2, 2);
                                sub_24882F8D0(v156, v157, 2);
                                if (v153 != v154) {
                                  goto LABEL_226;
                                }
                                goto LABEL_143;
                              case 3:
                                if (v14 != 3) {
                                  goto LABEL_223;
                                }
                                BOOL v158 = (v6 & 1) == 0;
                                uint64_t v159 = v6;
                                uint64_t v160 = *(void *)v148;
                                uint64_t v161 = *(void *)(v148 + 8);
                                sub_24882F8D0(v159, a2, 3);
                                sub_24882F8D0(v160, v161, 3);
                                char v162 = v158 ^ v160;
                                uint64_t v4 = v231;
                                if ((v162 & 1) == 0) {
                                  goto LABEL_226;
                                }
                                goto LABEL_143;
                              case 4:
                                if (v14 != 4) {
                                  goto LABEL_220;
                                }
                                if (v6 == v10 && a2 == v11)
                                {
                                  char v230 = v12;
                                  uint64_t v179 = a2;
                                  sub_24882D9F4(v6, a2, 4);
                                  sub_24882D9F4(v6, v179, 4);
                                  sub_24882F8D0(v6, v179, 4);
                                  goto LABEL_178;
                                }
                                unint64_t v232 = v143;
                                uint64_t v240 = a2;
                                uint64_t v164 = *(void *)v148;
                                uint64_t v250 = *(void *)v148;
                                uint64_t v165 = *(void *)(v148 + 8);
                                char v237 = sub_24887CF48();
                                sub_24882D9F4(v164, v165, 4);
                                sub_24882D9F4(v6, v240, 4);
                                unint64_t v143 = v232;
                                sub_24882F8D0(v6, v240, 4);
                                uint64_t v166 = v250;
                                uint64_t v167 = v165;
                                char v168 = 4;
LABEL_173:
                                sub_24882F8D0(v166, v167, v168);
                                if ((v237 & 1) == 0) {
                                  goto LABEL_226;
                                }
                                goto LABEL_143;
                              case 5:
                                uint64_t v248 = *(void *)(v148 + 8);
                                if (v14 != 5)
                                {
                                  uint64_t v252 = *(void *)v148;
                                  goto LABEL_222;
                                }
                                uint64_t v169 = *(void *)(v6 + 16);
                                uint64_t v241 = a2;
                                if (v169 == *(void *)(v10 + 16))
                                {
                                  char v230 = v12;
                                  unint64_t v233 = v143;
                                  if (v169)
                                  {
                                    uint64_t v238 = *(void *)(v6 + 16);
                                    uint64_t v251 = *(void *)v148;
                                    uint64_t v170 = *(void *)(v148 + 8);
                                    sub_24882D9F4(v10, v11, 5);
                                    sub_24882D9F4(v6, v241, 5);
                                    sub_24882D9F4(v251, v170, 5);
                                    sub_24882D9F4(v6, v241, 5);
                                    uint64_t v171 = v251;
                                    if (v6 != v251)
                                    {
                                      unint64_t v172 = 0;
                                      v173 = (unsigned char *)(v251 + 48);
                                      v174 = (unsigned char *)(v6 + 48);
                                      do
                                      {
                                        char v175 = *v174;
                                        long long v283 = *((_OWORD *)v174 - 1);
                                        char v284 = v175;
                                        if (v172 >= *(void *)(v171 + 16)) {
                                          goto LABEL_239;
                                        }
                                        char v176 = *v173;
                                        long long v281 = *((_OWORD *)v173 - 1);
                                        char v282 = v176;
                                        if ((static SimpleType.== infix(_:_:)(&v283, &v281) & 1) == 0) {
                                          goto LABEL_225;
                                        }
                                        ++v172;
                                        v173 += 24;
                                        v174 += 24;
                                        uint64_t v171 = v251;
                                      }
                                      while (v238 != v172);
                                    }
                                  }
                                  else
                                  {
                                    uint64_t v180 = *(void *)v148;
                                    uint64_t v181 = *(void *)(v148 + 8);
                                    sub_24882D9F4(v10, v11, 5);
                                    sub_24882D9F4(v6, v241, 5);
                                    sub_24882D9F4(v180, v181, 5);
                                    sub_24882D9F4(v6, v241, 5);
                                    uint64_t v171 = v180;
                                  }
                                  uint64_t v179 = v241;
                                  uint64_t v182 = v171;
                                  sub_24882F8D0(v6, v241, 5);
                                  sub_24882F8D0(v182, v248, 5);
                                  sub_24882F8D0(v182, v248, 5);
                                  uint64_t v4 = v231;
                                  unint64_t v143 = v233;
LABEL_178:
                                  sub_24882F8D0(v6, v179, v230);
LABEL_143:
                                  if (v143 == v243) {
                                    goto LABEL_181;
                                  }
                                  continue;
                                }
                                uint64_t v227 = a2;
                                uint64_t v228 = *(void *)v148;
                                uint64_t v229 = *(void *)(v148 + 8);
                                sub_24882D9F4(v10, v11, 5);
                                sub_24882D9F4(v6, v227, 5);
                                uint64_t v251 = v228;
                                sub_24882D9F4(v228, v229, 5);
                                sub_24882D9F4(v6, v227, 5);
LABEL_225:
                                sub_24882F8D0(v6, v241, 5);
                                sub_24882F8D0(v251, v248, 5);
                                sub_24882F8D0(v251, v248, 5);
                                sub_24882F8D0(v6, v241, 5);
                                uint64_t v4 = v231;
LABEL_226:
                                sub_24882F8D0(v4, v239, 5);
                                sub_24882F8D0(*(uint64_t *)&v255, v235, 5);
                                sub_24882F8D0(*(uint64_t *)&v255, v235, 5);
                                uint64_t v217 = v4;
                                uint64_t v218 = v239;
                                char v219 = 5;
LABEL_227:
                                sub_24882F8D0(v217, v218, v219);
LABEL_228:
                                sub_24882F8D0(v8, v275, 5);
                                sub_24882F8D0(*(uint64_t *)&v262, v249, 5);
                                sub_24882F8D0(*(uint64_t *)&v262, v249, 5);
                                uint64_t v208 = v8;
                                uint64_t v209 = v275;
                                char v210 = 5;
LABEL_229:
                                sub_24882F8D0(v208, v209, v210);
LABEL_230:
                                char v190 = 5;
                                sub_24882F8D0(v265, v268, 5);
                                sub_24882F8D0(v272, v263, 5);
                                sub_24882F8D0(v272, v263, 5);
                                uint64_t v4 = v271;
                                sub_24882F8D0(v265, v268, 5);
LABEL_231:
                                LOBYTE(v25) = 5;
LABEL_232:
                                sub_24882F8D0(v5, v4, v190);
                                sub_24882F8D0(v2, v3, v25);
                                sub_24882F8D0(v5, v4, v190);
LABEL_233:
                                sub_24882F8D0(v2, v3, v25);
                                return 0;
                              case 6:
                                uint64_t v252 = *(void *)v148;
                                uint64_t v248 = *(void *)(v148 + 8);
                                if (v14 != 6) {
                                  goto LABEL_222;
                                }
                                unint64_t v234 = v143;
                                uint64_t v177 = a2;
                                uint64_t v242 = a2;
                                uint64_t v178 = *(void *)(v148 + 8);
                                sub_24882D9F4(v10, v11, 6);
                                sub_24882D9F4(v6, v177, 6);
                                sub_24882D9F4(v252, v178, 6);
                                sub_24882D9F4(v6, v242, 6);
                                char v237 = sub_2488513D0(v6, v252);
                                sub_24882F8D0(v6, v242, 6);
                                sub_24882F8D0(v252, v248, 6);
                                sub_24882F8D0(v252, v248, 6);
                                uint64_t v166 = v6;
                                uint64_t v167 = v242;
                                unint64_t v143 = v234;
                                char v168 = 6;
                                goto LABEL_173;
                              default:
                                if (*(unsigned char *)(v148 + 16)) {
                                  goto LABEL_223;
                                }
                                uint64_t v149 = *(void *)v148;
                                uint64_t v246 = *(void *)(v148 + 8);
                                sub_24882F8D0(v6, a2, 0);
                                uint64_t v150 = v149;
                                uint64_t v151 = v246;
                                char v152 = 0;
LABEL_142:
                                sub_24882F8D0(v150, v151, v152);
                                if (v6 == v149) {
                                  goto LABEL_143;
                                }
                                goto LABEL_226;
                            }
                          }
                        case 6:
                          if (v124 != 6)
                          {
                            uint64_t v235 = *(void *)(v121 + 8);
LABEL_215:
                            uint64_t v212 = v119;
                            char v213 = v120;
                            sub_24882D9F4(v4, v119, v120);
                            swift_bridgeObjectRetain();
                            LOBYTE(v120) = v213;
                            uint64_t v119 = v212;
                            uint64_t v122 = v235;
LABEL_216:
                            uint64_t v214 = v119;
                            char v215 = v120;
                            uint64_t v216 = v122;
                            sub_24882D9F4(v123, v122, v124);
                            sub_24882F8D0(v4, v214, v215);
                            sub_24882F8D0(v123, v216, v124);
                            uint64_t v217 = v4;
                            uint64_t v218 = v214;
                            char v219 = v215;
                            goto LABEL_227;
                          }
                          uint64_t v144 = v119;
                          uint64_t v145 = *(void *)(v121 + 8);
                          sub_24882D9F4(v123, v122, 6);
                          sub_24882D9F4(v4, v144, 6);
                          sub_24882D9F4(v123, v145, 6);
                          sub_24882D9F4(v4, v144, 6);
                          LODWORD(v255) = sub_2488513D0(v4, v123);
                          sub_24882F8D0(v4, v144, 6);
                          sub_24882F8D0(v123, v145, 6);
                          uint64_t v146 = v145;
                          uint64_t v112 = v256;
                          sub_24882F8D0(v123, v146, 6);
                          uint64_t v138 = v4;
                          uint64_t v139 = v144;
                          char v140 = 6;
                          goto LABEL_140;
                        default:
                          if (*(unsigned char *)(v121 + 16)) {
                            goto LABEL_216;
                          }
                          uint64_t v125 = *(void *)(v121 + 8);
                          sub_24882F8D0(v4, v119, 0);
                          uint64_t v126 = v123;
                          uint64_t v127 = v125;
                          uint64_t v112 = v256;
                          char v128 = 0;
LABEL_113:
                          sub_24882F8D0(v126, v127, v128);
                          if (v4 == v123) {
                            goto LABEL_114;
                          }
                          goto LABEL_228;
                      }
                    }
                  case 6:
                    if (v90 != 6)
                    {
LABEL_208:
                      uint64_t v204 = *(void *)(v87 + 8);
                      goto LABEL_210;
                    }
                    unint64_t v261 = v77;
                    uint64_t v116 = *(void *)(v87 + 8);
                    sub_24882D9F4(*(void *)v87, v116, 6);
                    sub_24882D9F4(v8, v275, 6);
                    sub_24882D9F4(v89, v116, 6);
                    sub_24882D9F4(v8, v275, 6);
                    char v108 = sub_2488513D0(v8, v89);
                    sub_24882F8D0(v8, v275, 6);
                    sub_24882F8D0(v89, v116, 6);
                    uint64_t v117 = v116;
                    unint64_t v77 = v261;
                    sub_24882F8D0(v89, v117, 6);
                    uint64_t v109 = v8;
                    uint64_t v110 = v275;
                    char v111 = 6;
                    goto LABEL_111;
                  default:
                    if (*(unsigned char *)(v87 + 16)) {
                      goto LABEL_211;
                    }
                    unint64_t v91 = v77;
                    uint64_t v92 = *(void *)(v87 + 8);
                    sub_24882F8D0(v8, v275, 0);
                    uint64_t v93 = v89;
                    uint64_t v94 = v92;
                    unint64_t v77 = v91;
                    char v95 = 0;
LABEL_84:
                    sub_24882F8D0(v93, v94, v95);
                    if (v8 == v89) {
                      goto LABEL_85;
                    }
                    goto LABEL_230;
                }
              }
            case 6:
              if (v58 != 6)
              {
                uint64_t v191 = v4;
                uint64_t v263 = *(void *)(v55 + 8);
LABEL_203:
                uint64_t v192 = *(void *)v55;
LABEL_204:
                uint64_t v193 = v53;
                char v194 = v54;
                sub_24882D9F4(v6, v53, v54);
                swift_bridgeObjectRetain();
                LOBYTE(v54) = v194;
                uint64_t v53 = v193;
                uint64_t v56 = v192;
                uint64_t v57 = v263;
                uint64_t v4 = v191;
LABEL_205:
                uint64_t v195 = v4;
                uint64_t v196 = v53;
                uint64_t v197 = v56;
                char v198 = v54;
                uint64_t v199 = v57;
                sub_24882D9F4(v56, v57, v58);
                sub_24882F8D0(v6, v196, v198);
                sub_24882F8D0(v197, v199, v58);
                uint64_t v200 = v196;
                uint64_t v4 = v195;
                sub_24882F8D0(v6, v200, v198);
LABEL_206:
                char v190 = 5;
                goto LABEL_231;
              }
              uint64_t v78 = v53;
              uint64_t v79 = *(void *)v55;
              uint64_t v80 = *(void *)(v55 + 8);
              sub_24882D9F4(v56, v57, 6);
              sub_24882D9F4(v6, v78, 6);
              sub_24882D9F4(v79, v80, 6);
              sub_24882D9F4(v6, v78, 6);
              char v81 = sub_2488513D0(v6, v79);
              sub_24882F8D0(v6, v78, 6);
              sub_24882F8D0(v79, v80, 6);
              uint64_t v82 = v79;
              uint64_t v40 = v274;
              uint64_t v83 = v80;
              uint64_t v8 = v266;
              sub_24882F8D0(v82, v83, 6);
              uint64_t v84 = v78;
              uint64_t v4 = v271;
              sub_24882F8D0(v6, v84, 6);
              if ((v81 & 1) == 0) {
                goto LABEL_206;
              }
              goto LABEL_58;
            default:
              if (*(unsigned char *)(v55 + 16)) {
                goto LABEL_205;
              }
              uint64_t v45 = *(void *)v55;
              uint64_t v46 = *(void *)(v55 + 8);
              sub_24882F8D0(v6, v53, 0);
              uint64_t v47 = v45;
              uint64_t v48 = v46;
              char v49 = 0;
LABEL_56:
              sub_24882F8D0(v47, v48, v49);
              BOOL v34 = v6 == v45;
              uint64_t v40 = v274;
              if (!v34) {
                goto LABEL_206;
              }
              goto LABEL_58;
          }
        }
      case 6:
        if (v25 != 6)
        {
LABEL_195:
          char v189 = *(unsigned char *)(v29 + 16);
          goto LABEL_197;
        }
        sub_24882D9F4(*(void *)v29, *(void *)(v29 + 8), 6);
        sub_24882D9F4(v2, v3, 6);
        sub_24882D9F4(v5, v4, 6);
        char v36 = sub_2488513D0(v5, v2);
        sub_24882F8D0(v5, v4, 6);
        sub_24882F8D0(v2, v3, 6);
        sub_24882F8D0(v5, v4, 6);
        uint64_t v37 = v2;
        uint64_t v38 = v3;
        char v39 = 6;
        goto LABEL_51;
      default:
        if (v25) {
          goto LABEL_198;
        }
        sub_24882F8D0(*(void *)v29, *(void *)(v29 + 8), 0);
        uint64_t v31 = v2;
        uint64_t v32 = v3;
        char v33 = 0;
LABEL_30:
        sub_24882F8D0(v31, v32, v33);
        BOOL v34 = v5 == v2;
LABEL_33:
        int64_t v9 = v280;
        if (!v34) {
          return 0;
        }
        continue;
    }
  }
}

uint64_t sub_248852FB8()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  char v1 = sub_2488556C8(v0);
  swift_bridgeObjectRelease();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_2488556C8(v2);
  swift_bridgeObjectRelease();
  char v4 = sub_2488513D0((uint64_t)v1, (uint64_t)v3);
  swift_release();
  swift_release();
  return v4 & 1;
}

uint64_t sub_248853044()
{
  return sub_24887C968();
}

uint64_t sub_2488530D4()
{
  return sub_24887C938();
}

uint64_t sub_248853154()
{
  return sub_24887C958();
}

uint64_t sub_2488531E4()
{
  return sub_24887C928();
}

uint64_t Message.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26932CE48);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *v1;
  int v25 = *((unsigned __int16 *)v1 + 2);
  uint64_t v9 = *((void *)v1 + 1);
  uint64_t v23 = *((void *)v1 + 3);
  uint64_t v24 = v9;
  LODWORD(v9) = *((unsigned __int8 *)v1 + 32);
  int v21 = *((unsigned __int8 *)v1 + 40);
  int v22 = v9;
  LODWORD(v6) = *((unsigned __int8 *)v1 + 42);
  int v16 = *((unsigned __int8 *)v1 + 41);
  int v17 = v6;
  uint64_t v10 = *((void *)v1 + 6);
  uint64_t v19 = *((void *)v1 + 7);
  uint64_t v20 = v10;
  int v18 = *((unsigned __int8 *)v1 + 64);
  uint64_t v11 = *((void *)v1 + 10);
  v15[0] = *((void *)v1 + 9);
  v15[1] = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2488577FC();
  sub_24887D088();
  LODWORD(v26) = v8;
  char v30 = 0;
  type metadata accessor for AudioEventCategory(0);
  sub_248858A34(&qword_26932CE58, type metadata accessor for AudioEventCategory);
  sub_24887CEC8();
  if (!v2)
  {
    uint64_t v12 = v24;
    char v13 = v21;
    LOWORD(v26) = v25;
    char v30 = 1;
    type metadata accessor for AudioEventType(0);
    sub_248858A34(&qword_26932CE60, type metadata accessor for AudioEventType);
    sub_24887CEC8();
    uint64_t v26 = v12;
    char v30 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26932CE68);
    sub_2488578F8(&qword_26932CE70, (void (*)(void))sub_248857850);
    sub_24887CEC8();
    LOBYTE(v26) = 3;
    sub_24887CEB8();
    LOBYTE(v26) = 4;
    sub_24887CE88();
    LOBYTE(v26) = v13;
    BYTE1(v26) = v16;
    BYTE2(v26) = v17;
    uint64_t v27 = v20;
    uint64_t v28 = v19;
    char v29 = v18;
    char v30 = 5;
    sub_2488578A4();
    sub_24887CEC8();
    LOBYTE(v26) = 6;
    sub_24887CE78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Message.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26932CE88);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248856A50();
  uint64_t v33 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2488577FC();
  sub_24887D078();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    uint64_t v10 = v6;
    type metadata accessor for AudioEventCategory(0);
    char v38 = 0;
    sub_248858A34(&qword_26932CE90, type metadata accessor for AudioEventCategory);
    sub_24887CE28();
    int v11 = v34;
    type metadata accessor for AudioEventType(0);
    char v38 = 1;
    sub_248858A34(&qword_26932CE98, type metadata accessor for AudioEventType);
    sub_24887CE28();
    int v13 = (unsigned __int16)v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26932CE68);
    char v38 = 2;
    sub_2488578F8(&qword_26932CEA0, (void (*)(void))sub_248857974);
    sub_24887CE28();
    uint64_t v32 = v34;
    LOBYTE(v34) = 3;
    sub_24887CE18();
    uint64_t v15 = v14;
    LOBYTE(v34) = 4;
    uint64_t v31 = sub_24887CDE8();
    char v39 = v16 & 1;
    char v38 = 5;
    sub_2488579C8();
    sub_24887CE28();
    int v30 = v13;
    swift_bridgeObjectRelease();
    LODWORD(v33) = v34;
    int v28 = BYTE2(v34);
    int v29 = BYTE1(v34);
    uint64_t v17 = v36;
    uint64_t v27 = v35;
    int v26 = v37;
    LOBYTE(v34) = 6;
    uint64_t v18 = sub_24887CDD8();
    uint64_t v20 = v19;
    int v21 = *(void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v25 = v18;
    v21(v8, v5);
    swift_bridgeObjectRelease();
    char v22 = v39;
    *(_DWORD *)a2 = v11;
    *(_WORD *)(a2 + 4) = v30;
    uint64_t v23 = v31;
    *(void *)(a2 + 8) = v32;
    *(void *)(a2 + 16) = v15;
    *(void *)(a2 + 24) = v23;
    *(unsigned char *)(a2 + 32) = v22;
    *(unsigned char *)(a2 + 40) = v33;
    *(unsigned char *)(a2 + 41) = v29;
    *(unsigned char *)(a2 + 42) = v28;
    *(void *)(a2 + 48) = v27;
    *(void *)(a2 + 56) = v17;
    *(unsigned char *)(a2 + 64) = v26;
    *(void *)(a2 + 72) = v25;
    *(void *)(a2 + 80) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248853B00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Message.init(from:)(a1, a2);
}

uint64_t sub_248853B18(void *a1)
{
  return Message.encode(to:)(a1);
}

AudioAnalyticsBase::UntrustworthyReason_optional __swiftcall UntrustworthyReason.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_24887CDA8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_248853B90(char *a1, char *a2)
{
  return sub_2488753A8(*a1, *a2);
}

uint64_t sub_248853B9C()
{
  return sub_24887D068();
}

uint64_t sub_248853BF8()
{
  sub_24887C808();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248853C38()
{
  return sub_24887D068();
}

AudioAnalyticsBase::UntrustworthyReason_optional sub_248853C90(Swift::String *a1)
{
  return UntrustworthyReason.init(rawValue:)(*a1);
}

void sub_248853C9C(void *a1@<X8>)
{
  *a1 = *(void *)&aRoot_2[8 * *v1];
  a1[1] = 0xE400000000000000;
}

uint64_t sub_248853CBC(char *a1, char *a2)
{
  return sub_24884EE9C(*a1, *a2);
}

uint64_t sub_248853CC8(char *a1, char *a2)
{
  return sub_24884EF18(*a1, *a2);
}

uint64_t sub_248853CD4(char *a1, char *a2)
{
  return sub_24884EF90(*a1, *a2);
}

uint64_t sub_248853CE0()
{
  return sub_24887C948();
}

uint64_t sub_248853D40()
{
  return sub_24887C918();
}

uint64_t sub_248853D90(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D80);
  uint64_t v3 = swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * v4 - 64;
  char v5 = sub_248855E4C(&v7, (unsigned char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_2488309A0();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_248853E68(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D90);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_248855FE0((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2488309A0();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_248853F54(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D90);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_2488561E0((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2488309A0();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_24885403C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_248840E50(a1, a2);
  LOBYTE(a2) = v9;
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v4;
    uint64_t v15 = *v4;
    *int64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_248839F90();
      uint64_t v12 = v15;
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v12 + 56) + 24 * v8;
    char v14 = *(unsigned char *)(v13 + 16);
    *(_OWORD *)a3 = *(_OWORD *)v13;
    *(unsigned char *)(a3 + 16) = v14;
    sub_248854130(v8, v12);
    *int64_t v4 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(unsigned char *)(a3 + 16) = -1;
  }
  return result;
}

unint64_t sub_248854130(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_24887CBF8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_24887D008();
        swift_bridgeObjectRetain();
        sub_24887C808();
        uint64_t v10 = sub_24887D068();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          char v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            _OWORD *v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = v15 + 24 * v3;
          uint64_t v17 = (long long *)(v15 + 24 * v6);
          if (24 * v3 < (uint64_t)(24 * v6) || v16 >= (unint64_t)v17 + 24 || (v18 = v3 == v6, int64_t v3 = v6, !v18))
          {
            long long v9 = *v17;
            *(void *)(v16 + 16) = *((void *)v17 + 2);
            *(_OWORD *)unint64_t v16 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_248854328(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7)
{
  a7[(result >> 6) + 8] |= 1 << result;
  uint64_t v7 = (void *)(a7[6] + 16 * result);
  *uint64_t v7 = a2;
  v7[1] = a3;
  uint64_t v8 = a7[7] + 24 * result;
  *(void *)uint64_t v8 = a4;
  *(void *)(v8 + 8) = a5;
  *(unsigned char *)(v8 + 16) = a6;
  uint64_t v9 = a7[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a7[2] = v11;
  }
  return result;
}

uint64_t sub_24885437C(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B143D40);
  uint64_t result = sub_24887CD58();
  int64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v28 = a1;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v25 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = result + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(v28 + 48) + 16 * i);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = *(void *)(v28 + 56) + 24 * i;
    char v19 = *(unsigned char *)(v18 + 16);
    v26[2] = *(_OWORD *)v18;
    char v27 = v19;
    swift_bridgeObjectRetain();
    SimpleType.unwrap()((uint64_t *)v26);
    *(void *)(v9 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v20 = (void *)(v3[6] + 16 * i);
    *uint64_t v20 = v16;
    v20[1] = v17;
    uint64_t result = (uint64_t)sub_24882D9E4(v26, (_OWORD *)(v3[7] + 32 * i));
    uint64_t v21 = v3[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v23;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v12 >= v25) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v24 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v25) {
        return (uint64_t)v3;
      }
      unint64_t v13 = *(void *)(v24 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v25) {
          return (uint64_t)v3;
        }
        unint64_t v13 = *(void *)(v24 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v25) {
    return (uint64_t)v3;
  }
  unint64_t v13 = *(void *)(v24 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v25) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v24 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_24885459C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v57 = a1;
  uint64_t v58 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v59 = v8;
  uint64_t v60 = 0;
  uint64_t v61 = v11 & v9;
  uint64_t v62 = a2;
  uint64_t v63 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_248856460((uint64_t)&v52);
  uint64_t v12 = v53;
  if (!v53)
  {
LABEL_26:
    swift_release();
    swift_bridgeObjectRelease();
    sub_2488309A0();
    return swift_release();
  }
  uint64_t v13 = v52;
  uint64_t v14 = v54;
  uint64_t v51 = v55;
  char v15 = v56;
  uint64_t v16 = (void *)*a5;
  unint64_t v18 = sub_248840E50(v52, v53);
  uint64_t v19 = v16[2];
  BOOL v20 = (v17 & 1) == 0;
  uint64_t v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v22 = v17;
  if (v16[3] >= v21)
  {
    if (a4)
    {
      int64_t v25 = (void *)*a5;
      if ((v17 & 1) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_248839F90();
      int64_t v25 = (void *)*a5;
      if ((v22 & 1) == 0) {
        goto LABEL_14;
      }
    }
    goto LABEL_12;
  }
  sub_248838F6C(v21, a4 & 1);
  unint64_t v23 = sub_248840E50(v13, v12);
  if ((v22 & 1) == (v24 & 1))
  {
    unint64_t v18 = v23;
    int64_t v25 = (void *)*a5;
    if ((v22 & 1) == 0)
    {
LABEL_14:
      v25[(v18 >> 6) + 8] |= 1 << v18;
      char v27 = (uint64_t *)(v25[6] + 16 * v18);
      *char v27 = v13;
      v27[1] = v12;
      uint64_t v28 = v25[7] + 24 * v18;
      *(void *)uint64_t v28 = v14;
      *(void *)(v28 + 8) = v51;
      *(unsigned char *)(v28 + 16) = v15;
      uint64_t v29 = v25[2];
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (!v30)
      {
        v25[2] = v31;
        while (1)
        {
          sub_248856460((uint64_t)&v52);
          uint64_t v36 = v53;
          if (!v53) {
            goto LABEL_26;
          }
          uint64_t v37 = v52;
          uint64_t v38 = v54;
          uint64_t v39 = v55;
          char v15 = v56;
          uint64_t v40 = (void *)*a5;
          unint64_t v42 = sub_248840E50(v52, v53);
          uint64_t v43 = v40[2];
          BOOL v44 = (v41 & 1) == 0;
          uint64_t v45 = v43 + v44;
          if (__OFADD__(v43, v44)) {
            goto LABEL_27;
          }
          char v46 = v41;
          if (v40[3] < v45)
          {
            sub_248838F6C(v45, 1);
            unint64_t v47 = sub_248840E50(v37, v36);
            if ((v46 & 1) != (v48 & 1)) {
              goto LABEL_29;
            }
            unint64_t v42 = v47;
          }
          char v49 = (void *)*a5;
          if (v46)
          {
            swift_bridgeObjectRelease();
            uint64_t v26 = v49[7] + 24 * v42;
            sub_24882F8D0(*(void *)v26, *(void *)(v26 + 8), *(unsigned char *)(v26 + 16));
            *(void *)uint64_t v26 = v38;
            *(void *)(v26 + 8) = v39;
LABEL_16:
            *(unsigned char *)(v26 + 16) = v15;
          }
          else
          {
            v49[(v42 >> 6) + 8] |= 1 << v42;
            uint64_t v32 = (uint64_t *)(v49[6] + 16 * v42);
            *uint64_t v32 = v37;
            v32[1] = v36;
            uint64_t v33 = v49[7] + 24 * v42;
            *(void *)uint64_t v33 = v38;
            *(void *)(v33 + 8) = v39;
            *(unsigned char *)(v33 + 16) = v15;
            uint64_t v34 = v49[2];
            BOOL v30 = __OFADD__(v34, 1);
            uint64_t v35 = v34 + 1;
            if (v30) {
              goto LABEL_28;
            }
            v49[2] = v35;
          }
        }
      }
      goto LABEL_28;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v26 = v25[7] + 24 * v18;
    sub_24882F8D0(*(void *)v26, *(void *)(v26 + 8), *(unsigned char *)(v26 + 16));
    *(void *)uint64_t v26 = v14;
    *(void *)(v26 + 8) = v51;
    goto LABEL_16;
  }
LABEL_29:
  uint64_t result = sub_24887CF98();
  __break(1u);
  return result;
}

uint64_t sub_2488548C8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_248856648(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_248854934(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_248854934(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_24887CEF8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_145;
    }
    if (v3) {
      return sub_248855080(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_153;
  }
  uint64_t v93 = v3;
  uint64_t v94 = v3 - 2;
  uint64_t v92 = result;
  int v90 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (unsigned char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_111:
      uint64_t v82 = v11;
      uint64_t v91 = v8;
      if (v12 >= 2)
      {
        uint64_t v83 = *v90;
        do
        {
          unint64_t v84 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_140;
          }
          if (!v83) {
            goto LABEL_152;
          }
          uint64_t v85 = v82;
          uint64_t v86 = *(void *)&v82[16 * v84 + 32];
          uint64_t v87 = *(void *)&v82[16 * v12 + 24];
          sub_248855180((unsigned char *)(v83 + v86), (unsigned char *)(v83 + *(void *)&v82[16 * v12 + 16]), v83 + v87, __dst);
          if (v1) {
            break;
          }
          if (v87 < v86) {
            goto LABEL_141;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v85 = sub_2488556B4((uint64_t)v85);
          }
          if (v84 >= *((void *)v85 + 2)) {
            goto LABEL_142;
          }
          uint64_t v88 = &v85[16 * v84 + 32];
          *(void *)uint64_t v88 = v86;
          *((void *)v88 + 1) = v87;
          unint64_t v89 = *((void *)v85 + 2);
          if (v12 > v89) {
            goto LABEL_143;
          }
          memmove(&v85[16 * v12 + 16], &v85[16 * v12 + 32], 16 * (v89 - v12));
          uint64_t v82 = v85;
          *((void *)v85 + 2) = v89 - 1;
          unint64_t v12 = v89 - 1;
        }
        while (v89 > 2);
      }
LABEL_108:
      swift_bridgeObjectRelease();
      *(void *)(v91 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v91 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_24887C9B8();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v93;
    uint64_t v91 = v7;
    __dst = (unsigned char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_40;
    }
    if (*(void *)&aRoot_2[8 * *(char *)(v10 + v9)] == *(void *)&aRoot_2[8 * *(char *)(v10 + v13)]) {
      int v14 = 0;
    }
    else {
      int v14 = sub_24887CF48();
    }
    swift_bridgeObjectRelease_n();
    uint64_t v9 = v13 + 2;
    uint64_t v15 = v13;
    if (v13 + 2 < v3)
    {
      while (1)
      {
        if (*(void *)&aRoot_2[8 * *(char *)(v10 + v15 + 2)] == *(void *)&aRoot_2[8 * *(char *)(v10 + v15 + 1)])
        {
          swift_bridgeObjectRelease_n();
          if (v14)
          {
            uint64_t v9 = v15 + 2;
            if (v15 + 2 < v13) {
              goto LABEL_146;
            }
            goto LABEL_23;
          }
        }
        else
        {
          int v19 = sub_24887CF48();
          swift_bridgeObjectRelease_n();
          if ((v14 ^ v19))
          {
            uint64_t v9 = v15 + 2;
            if (v14) {
              goto LABEL_22;
            }
            goto LABEL_40;
          }
        }
        if (v94 == ++v15)
        {
          uint64_t v9 = v3;
          if ((v14 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_22;
        }
      }
    }
    if (v14)
    {
LABEL_22:
      if (v9 < v13) {
        goto LABEL_146;
      }
LABEL_23:
      if (v13 < v9)
      {
        uint64_t v16 = v9 - 1;
        uint64_t v17 = v13;
        do
        {
          if (v17 != v16)
          {
            if (!v10) {
              goto LABEL_151;
            }
            char v18 = *(unsigned char *)(v10 + v17);
            *(unsigned char *)(v10 + v17) = *(unsigned char *)(v10 + v16);
            *(unsigned char *)(v10 + v16) = v18;
          }
          BOOL v60 = ++v17 < v16--;
        }
        while (v60);
      }
    }
LABEL_40:
    if (v9 >= v3) {
      goto LABEL_60;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_144;
    }
    if (v9 - v13 >= v92) {
      goto LABEL_60;
    }
    if (__OFADD__(v13, v92)) {
      goto LABEL_147;
    }
    uint64_t v20 = v13;
    uint64_t v21 = v13 + v92 >= v3 ? v3 : v13 + v92;
    uint64_t v95 = v20;
    if (v21 < v20) {
      break;
    }
    if (v9 != v21)
    {
      char v22 = (char *)(v10 + v9);
      do
      {
        char v23 = *(unsigned char *)(v10 + v9);
        uint64_t v24 = v95;
        int64_t v25 = v22;
        while (*(void *)&aRoot_2[8 * v23] != *(void *)&aRoot_2[8 * *(v25 - 1)])
        {
          char v26 = sub_24887CF48();
          swift_bridgeObjectRelease_n();
          if ((v26 & 1) == 0) {
            goto LABEL_51;
          }
          if (!v10) {
            goto LABEL_149;
          }
          char v23 = *v25;
          *int64_t v25 = *(v25 - 1);
          *(v25 - 1) = v23;
          ++v24;
          --v25;
          if (v9 == v24) {
            goto LABEL_51;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_51:
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      uint64_t v9 = v21;
    }
    uint64_t v13 = v95;
LABEL_60:
    if (v9 < v13) {
      goto LABEL_139;
    }
    uint64_t v27 = v13;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_248855458(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v29 = *((void *)v11 + 2);
    unint64_t v28 = *((void *)v11 + 3);
    unint64_t v12 = v29 + 1;
    if (v29 >= v28 >> 1) {
      uint64_t v11 = sub_248855458((char *)(v28 > 1), v29 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    BOOL v30 = v11 + 32;
    uint64_t v31 = &v11[16 * v29 + 32];
    *(void *)uint64_t v31 = v27;
    *((void *)v31 + 1) = v9;
    if (v29)
    {
      uint64_t v96 = v9;
      while (1)
      {
        unint64_t v32 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v37 = &v30[16 * v12];
          uint64_t v38 = *((void *)v37 - 8);
          uint64_t v39 = *((void *)v37 - 7);
          BOOL v43 = __OFSUB__(v39, v38);
          uint64_t v40 = v39 - v38;
          if (v43) {
            goto LABEL_128;
          }
          uint64_t v42 = *((void *)v37 - 6);
          uint64_t v41 = *((void *)v37 - 5);
          BOOL v43 = __OFSUB__(v41, v42);
          uint64_t v35 = v41 - v42;
          char v36 = v43;
          if (v43) {
            goto LABEL_129;
          }
          unint64_t v44 = v12 - 2;
          uint64_t v45 = &v30[16 * v12 - 32];
          uint64_t v47 = *(void *)v45;
          uint64_t v46 = *((void *)v45 + 1);
          BOOL v43 = __OFSUB__(v46, v47);
          uint64_t v48 = v46 - v47;
          if (v43) {
            goto LABEL_131;
          }
          BOOL v43 = __OFADD__(v35, v48);
          uint64_t v49 = v35 + v48;
          if (v43) {
            goto LABEL_134;
          }
          if (v49 >= v40)
          {
            unint64_t v67 = &v30[16 * v32];
            uint64_t v69 = *(void *)v67;
            uint64_t v68 = *((void *)v67 + 1);
            BOOL v43 = __OFSUB__(v68, v69);
            uint64_t v70 = v68 - v69;
            if (v43) {
              goto LABEL_138;
            }
            BOOL v60 = v35 < v70;
            goto LABEL_98;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v61 = *((void *)v11 + 4);
            uint64_t v62 = *((void *)v11 + 5);
            BOOL v43 = __OFSUB__(v62, v61);
            uint64_t v54 = v62 - v61;
            char v55 = v43;
            goto LABEL_92;
          }
          uint64_t v34 = *((void *)v11 + 4);
          uint64_t v33 = *((void *)v11 + 5);
          BOOL v43 = __OFSUB__(v33, v34);
          uint64_t v35 = v33 - v34;
          char v36 = v43;
        }
        if (v36) {
          goto LABEL_130;
        }
        unint64_t v44 = v12 - 2;
        unint64_t v50 = &v30[16 * v12 - 32];
        uint64_t v52 = *(void *)v50;
        uint64_t v51 = *((void *)v50 + 1);
        BOOL v53 = __OFSUB__(v51, v52);
        uint64_t v54 = v51 - v52;
        char v55 = v53;
        if (v53) {
          goto LABEL_133;
        }
        char v56 = &v30[16 * v32];
        uint64_t v58 = *(void *)v56;
        uint64_t v57 = *((void *)v56 + 1);
        BOOL v43 = __OFSUB__(v57, v58);
        uint64_t v59 = v57 - v58;
        if (v43) {
          goto LABEL_136;
        }
        if (__OFADD__(v54, v59)) {
          goto LABEL_137;
        }
        if (v54 + v59 >= v35)
        {
          BOOL v60 = v35 < v59;
LABEL_98:
          if (v60) {
            unint64_t v32 = v44;
          }
          goto LABEL_100;
        }
LABEL_92:
        if (v55) {
          goto LABEL_132;
        }
        uint64_t v63 = &v30[16 * v32];
        uint64_t v65 = *(void *)v63;
        uint64_t v64 = *((void *)v63 + 1);
        BOOL v43 = __OFSUB__(v64, v65);
        uint64_t v66 = v64 - v65;
        if (v43) {
          goto LABEL_135;
        }
        if (v66 < v54) {
          goto LABEL_15;
        }
LABEL_100:
        unint64_t v71 = v32 - 1;
        if (v32 - 1 >= v12)
        {
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
          goto LABEL_148;
        }
        if (!v10) {
          goto LABEL_150;
        }
        uint64_t v72 = v11;
        uint64_t v73 = v10;
        uint64_t v74 = &v30[16 * v71];
        uint64_t v75 = *(void *)v74;
        uint64_t v76 = v30;
        unint64_t v77 = v32;
        uint64_t v78 = &v30[16 * v32];
        uint64_t v79 = *((void *)v78 + 1);
        uint64_t v80 = v73;
        sub_248855180((unsigned char *)(v73 + *(void *)v74), (unsigned char *)(v73 + *(void *)v78), v73 + v79, __dst);
        if (v1) {
          goto LABEL_108;
        }
        if (v79 < v75) {
          goto LABEL_125;
        }
        if (v77 > *((void *)v72 + 2)) {
          goto LABEL_126;
        }
        *(void *)uint64_t v74 = v75;
        *(void *)&v76[16 * v71 + 8] = v79;
        unint64_t v81 = *((void *)v72 + 2);
        if (v77 >= v81) {
          goto LABEL_127;
        }
        uint64_t v11 = v72;
        unint64_t v12 = v81 - 1;
        memmove(v78, v78 + 16, 16 * (v81 - 1 - v77));
        BOOL v30 = v76;
        *((void *)v72 + 2) = v81 - 1;
        uint64_t v10 = v80;
        uint64_t v9 = v96;
        if (v81 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v93;
    if (v9 >= v93)
    {
      uint64_t v8 = v91;
      goto LABEL_111;
    }
  }
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  uint64_t result = sub_24887CD38();
  __break(1u);
  return result;
}

uint64_t sub_248855080(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = (char *)(*a4 + a3);
LABEL_6:
    char v9 = *(unsigned char *)(v7 + v4);
    uint64_t v10 = v6;
    uint64_t v11 = v8;
    while (1)
    {
      if (*(void *)&aRoot_2[8 * v9] == *(void *)&aRoot_2[8 * *(v11 - 1)])
      {
        uint64_t result = swift_bridgeObjectRelease_n();
LABEL_5:
        ++v4;
        ++v8;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      char v12 = sub_24887CF48();
      uint64_t result = swift_bridgeObjectRelease_n();
      if ((v12 & 1) == 0) {
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      char v9 = *v11;
      char *v11 = *(v11 - 1);
      *(v11 - 1) = v9;
      ++v10;
      --v11;
      if (v4 == v10) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_248855180(unsigned char *__src, unsigned char *a2, unint64_t a3, unsigned char *__dst)
{
  char v22 = __src;
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  size_t v8 = a2 - __src;
  unint64_t v9 = a3 - (void)a2;
  uint64_t v21 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (void)a2))
  {
    if ((v9 & 0x8000000000000000) != 0) {
      goto LABEL_43;
    }
    if (__dst != a2 || a3 <= (unint64_t)__dst) {
      memmove(__dst, a2, a3 - (void)a2);
    }
    uint64_t v13 = &v4[v9];
    uint64_t v20 = &v4[v9];
    char v22 = v6;
    if (v7 >= v6 || (unsigned char *)a3 == v6)
    {
LABEL_42:
      sub_248855554(&v22, (const void **)&v21, &v20);
      return 1;
    }
    int v14 = (unsigned char *)(a3 - 1);
    uint64_t v15 = v6;
    while (1)
    {
      uint64_t v16 = (char)*--v15;
      uint64_t v17 = v14 + 1;
      if (*(void *)&aRoot_2[8 * (char)*(v13 - 1)] == *(void *)&aRoot_2[8 * v16]) {
        break;
      }
      char v18 = sub_24887CF48();
      swift_bridgeObjectRelease_n();
      if ((v18 & 1) == 0) {
        goto LABEL_36;
      }
      if (v17 != v6 || v14 >= v6) {
        unsigned char *v14 = *v15;
      }
      char v22 = v15;
      if (v15 <= v7) {
        goto LABEL_42;
      }
LABEL_41:
      --v14;
      uint64_t v6 = v15;
      if (v13 <= v4) {
        goto LABEL_42;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_36:
    uint64_t v20 = v13 - 1;
    if (v17 < v13 || v14 >= v13 || v17 != v13) {
      unsigned char *v14 = *(v13 - 1);
    }
    uint64_t v15 = v6;
    --v13;
    if (v6 <= v7) {
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst) {
      memmove(__dst, __src, v8);
    }
    uint64_t v10 = &v4[v8];
    uint64_t v20 = &v4[v8];
    if (v6 != v7 && (unint64_t)v6 < a3)
    {
      while (1)
      {
        if (*(void *)&aRoot_2[8 * (char)*v6] == *(void *)&aRoot_2[8 * (char)*v4])
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v11 = sub_24887CF48();
          swift_bridgeObjectRelease_n();
          if (v11)
          {
            char v12 = v6 + 1;
            if (v7 < v6 || v7 >= v12 || v7 != v6) {
              *uint64_t v7 = *v6;
            }
            goto LABEL_18;
          }
        }
        if (v7 != v4) {
          *uint64_t v7 = *v4;
        }
        uint64_t v21 = ++v4;
        char v12 = v6;
LABEL_18:
        ++v7;
        if (v4 < v10)
        {
          uint64_t v6 = v12;
          if ((unint64_t)v12 < a3) {
            continue;
          }
        }
        char v22 = v7;
        goto LABEL_42;
      }
    }
    goto LABEL_42;
  }
LABEL_43:
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

char *sub_248855458(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26932CF00);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  int v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_248855554(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  int64_t v4 = *a3 - (void)v3;
  if (v4 < 0)
  {
    uint64_t result = (char *)sub_24887CD88();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    if (result != v3 || result >= &v3[v4])
    {
      return (char *)memmove(result, v3, v4);
    }
  }
  return result;
}

char *sub_2488555F8(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_24887CD88();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_2488556B4(uint64_t a1)
{
  return sub_248855458(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_2488556C8(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = (void *)isStackAllocationSafe;
  v9[1] = *MEMORY[0x263EF8340];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_248855820((uint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return (void *)v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v2 = (void *)sub_248855820((uint64_t)v7, v4, v2);
    MEMORY[0x24C582D20](v7, -1, -1);
  }
  return v2;
}

uint64_t sub_248855820(uint64_t result, uint64_t a2, void *a3)
{
  uint64_t v37 = (unint64_t *)result;
  uint64_t v38 = 0;
  int64_t v3 = 0;
  uint64_t v6 = a3[8];
  unint64_t v4 = a3 + 8;
  uint64_t v5 = v6;
  uint64_t v7 = 1 << *((unsigned char *)v4 - 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & v5;
  uint64_t v39 = v4;
  int64_t v40 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    uint64_t v43 = (v9 - 1) & v9;
    int64_t v44 = v3;
    unint64_t v10 = __clz(__rbit64(v9)) | (v3 << 6);
LABEL_22:
    uint64_t v15 = (uint64_t *)(a3[6] + 16 * v10);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    unint64_t v42 = v10;
    uint64_t v18 = a3[7] + 24 * v10;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    char v21 = *(unsigned char *)(v18 + 16);
    swift_bridgeObjectRetain();
    sub_24882D9F4(v19, v20, v21);
    if (qword_26B143978 != -1) {
      swift_once();
    }
    uint64_t v22 = qword_26B144EB8;
    if (*(void *)(qword_26B144EB8 + 16)
      && (sub_24887D008(),
          sub_24887C808(),
          uint64_t v23 = sub_24887D068(),
          uint64_t v24 = -1 << *(unsigned char *)(v22 + 32),
          unint64_t v25 = v23 & ~v24,
          uint64_t v26 = v22 + 56,
          ((*(void *)(v22 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) != 0))
    {
      uint64_t v27 = *(void *)(v22 + 48);
      unint64_t v28 = (void *)(v27 + 16 * v25);
      BOOL v29 = *v28 == v16 && v28[1] == v17;
      if (!v29 && (sub_24887CF48() & 1) == 0)
      {
        uint64_t v30 = ~v24;
        for (unint64_t i = v25 + 1; ; unint64_t i = v32 + 1)
        {
          uint64_t v32 = i & v30;
          if (((*(void *)(v26 + (((i & v30) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v30)) & 1) == 0) {
            break;
          }
          uint64_t v33 = (void *)(v27 + 16 * v32);
          BOOL v34 = *v33 == v16 && v33[1] == v17;
          if (v34 || (sub_24887CF48() & 1) != 0) {
            goto LABEL_5;
          }
        }
        goto LABEL_39;
      }
LABEL_5:
      sub_24882F8D0(v19, v20, v21);
      uint64_t result = swift_bridgeObjectRelease();
      int64_t v3 = v44;
      unint64_t v9 = v43;
    }
    else
    {
LABEL_39:
      sub_24882F8D0(v19, v20, v21);
      uint64_t result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v37 + ((v42 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v42;
      BOOL v35 = __OFADD__(v38++, 1);
      int64_t v3 = v44;
      unint64_t v9 = v43;
      if (v35) {
        goto LABEL_44;
      }
    }
  }
  int64_t v11 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v11 >= v40) {
    return sub_248855B6C(v37, a2, v38, (uint64_t)a3);
  }
  unint64_t v12 = v39[v11];
  int64_t v13 = v3 + 1;
  if (v12) {
    goto LABEL_21;
  }
  int64_t v13 = v3 + 2;
  if (v3 + 2 >= v40) {
    return sub_248855B6C(v37, a2, v38, (uint64_t)a3);
  }
  unint64_t v12 = v39[v13];
  if (v12) {
    goto LABEL_21;
  }
  int64_t v13 = v3 + 3;
  if (v3 + 3 >= v40) {
    return sub_248855B6C(v37, a2, v38, (uint64_t)a3);
  }
  unint64_t v12 = v39[v13];
  if (v12)
  {
LABEL_21:
    uint64_t v43 = (v12 - 1) & v12;
    int64_t v44 = v13;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    goto LABEL_22;
  }
  uint64_t v14 = v3 + 4;
  if (v3 + 4 >= v40) {
    return sub_248855B6C(v37, a2, v38, (uint64_t)a3);
  }
  unint64_t v12 = v39[v14];
  if (v12)
  {
    int64_t v13 = v3 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v40) {
      return sub_248855B6C(v37, a2, v38, (uint64_t)a3);
    }
    unint64_t v12 = v39[v13];
    ++v14;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_248855B6C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D28);
  uint64_t result = sub_24887CD78();
  uint64_t v8 = result;
  uint64_t v37 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  uint64_t v39 = v4;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      uint64_t v40 = v10;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v37) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      uint64_t v16 = v10 + 1;
      if (!v15)
      {
        uint64_t v16 = v10 + 2;
        if (v10 + 2 >= v37) {
          return v8;
        }
        unint64_t v15 = a1[v16];
        if (!v15)
        {
          uint64_t v16 = v10 + 3;
          if (v10 + 3 >= v37) {
            return v8;
          }
          unint64_t v15 = a1[v16];
          if (!v15)
          {
            uint64_t v17 = v10 + 4;
            if (v10 + 4 >= v37) {
              return v8;
            }
            unint64_t v15 = a1[v17];
            if (!v15)
            {
              while (1)
              {
                uint64_t v16 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v16 >= v37) {
                  return v8;
                }
                unint64_t v15 = a1[v16];
                ++v17;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v16 = v10 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      uint64_t v40 = v16;
      unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    uint64_t v18 = *(void *)(v4 + 56);
    uint64_t v19 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = v18 + 24 * v13;
    uint64_t v24 = *(void *)v22;
    uint64_t v23 = *(void *)(v22 + 8);
    char v25 = *(unsigned char *)(v22 + 16);
    sub_24887D008();
    swift_bridgeObjectRetain();
    sub_24882D9F4(v24, v23, v25);
    sub_24887C808();
    uint64_t result = sub_24887D068();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v32 = v28 == v31;
        if (v28 == v31) {
          unint64_t v28 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v11 + 8 * v28);
      }
      while (v33 == -1);
      unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    BOOL v34 = (void *)(*(void *)(v8 + 48) + 16 * v29);
    *BOOL v34 = v20;
    v34[1] = v21;
    uint64_t v35 = *(void *)(v8 + 56) + 24 * v29;
    *(void *)uint64_t v35 = v24;
    *(void *)(v35 + 8) = v23;
    *(unsigned char *)(v35 + 16) = v25;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v4 = v39;
    uint64_t v10 = v40;
    if (!v5) {
      return v8;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void *sub_248855E4C(void *result, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(unsigned char *)(*(void *)(a4 + 48) + v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_248855FE0(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    void *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2488561E0(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    void *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2488563E0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  *a2 = v3;
  a2[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_248856400@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  char v6 = *((unsigned char *)a1 + 32);
  *(unsigned char *)(a2 + 32) = v6;
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v2;
  swift_bridgeObjectRetain();
  return sub_24882D9F4(v4, v5, v6);
}

void sub_248856460(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  int64_t v5 = v1[3];
  unint64_t v4 = v1[4];
  int64_t v6 = v5;
  if (!v4)
  {
    int64_t v17 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      return;
    }
    int64_t v18 = (unint64_t)(v1[2] + 64) >> 6;
    if (v17 < v18)
    {
      uint64_t v19 = v1[1];
      unint64_t v20 = *(void *)(v19 + 8 * v17);
      if (v20)
      {
LABEL_9:
        uint64_t v7 = (v20 - 1) & v20;
        unint64_t v8 = __clz(__rbit64(v20)) + (v17 << 6);
        int64_t v6 = v17;
        goto LABEL_3;
      }
      int64_t v21 = v5 + 2;
      int64_t v6 = v5 + 1;
      if (v5 + 2 < v18)
      {
        unint64_t v20 = *(void *)(v19 + 8 * v21);
        if (v20)
        {
LABEL_12:
          int64_t v17 = v21;
          goto LABEL_9;
        }
        int64_t v6 = v5 + 2;
        if (v5 + 3 < v18)
        {
          unint64_t v20 = *(void *)(v19 + 8 * (v5 + 3));
          if (v20)
          {
            int64_t v17 = v5 + 3;
            goto LABEL_9;
          }
          int64_t v21 = v5 + 4;
          int64_t v6 = v5 + 3;
          if (v5 + 4 < v18)
          {
            unint64_t v20 = *(void *)(v19 + 8 * v21);
            if (v20) {
              goto LABEL_12;
            }
            int64_t v17 = v5 + 5;
            int64_t v6 = v5 + 4;
            if (v5 + 5 < v18)
            {
              unint64_t v20 = *(void *)(v19 + 8 * v17);
              if (v20) {
                goto LABEL_9;
              }
              int64_t v6 = v18 - 1;
              int64_t v22 = v5 + 6;
              while (v18 != v22)
              {
                unint64_t v20 = *(void *)(v19 + 8 * v22++);
                if (v20)
                {
                  int64_t v17 = v22 - 1;
                  goto LABEL_9;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(unsigned char *)(a1 + 32) = 0;
    return;
  }
  uint64_t v7 = (v4 - 1) & v4;
  unint64_t v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
  unint64_t v9 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v8);
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = *(void *)(v3 + 56) + 24 * v8;
  uint64_t v13 = *(void *)v12;
  uint64_t v14 = *(void *)(v12 + 8);
  char v15 = *(unsigned char *)(v12 + 16);
  v1[3] = v6;
  v1[4] = v7;
  unint64_t v16 = (void (*)(void *))v1[5];
  v23[0] = v10;
  v23[1] = v11;
  v23[2] = v13;
  void v23[3] = v14;
  char v24 = v15;
  swift_bridgeObjectRetain();
  sub_24882D9F4(v13, v14, v15);
  v16(v23);
  swift_bridgeObjectRelease();
  sub_24882F8D0(v13, v14, v15);
}

uint64_t sub_248856648(uint64_t a1)
{
  return sub_248842744(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24885665C(uint64_t a1)
{
  return sub_248841B38(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_248856670@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_248856690(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_24887CA28();
  uint64_t v8 = result;
  if (v2)
  {
    unint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_24883A68C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t _s18AudioAnalyticsBase19UntrustworthyReasonO1loiySbAC_ACtFZ_0(char *a1, char *a2)
{
  if (*(void *)&aRoot_2[8 * *a1] == *(void *)&aRoot_2[8 * *a2]) {
    char v2 = 0;
  }
  else {
    char v2 = sub_24887CF48();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_248856790(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_248858BC4();
  uint64_t result = sub_24887CA28();
  uint64_t v7 = result;
  if (v2)
  {
    unint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_24883AAD4(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_248856804()
{
  if (qword_26B143010 != -1) {
    swift_once();
  }
  uint64_t v0 = (os_unfair_lock_s *)(qword_26B143988 + 24);
  swift_retain();
  os_unfair_lock_lock(v0);
  sub_248850FE0();
  os_unfair_lock_unlock(v0);
  swift_release();
  uint64_t v1 = qword_26B143988;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_248856670((void *)(v1 + 16), v11);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  swift_release();
  if (qword_26B1439A0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_26B143990;
  swift_retain();
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_248853D90(v3);
  swift_bridgeObjectRelease();
  v11[0] = v4;
  sub_2488548C8(v11);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_24884EBF0(v11[0]);
  swift_release();
  v11[0] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C10);
  sub_24882FA1C((unint64_t *)&qword_26B143C18, &qword_26B143C10);
  uint64_t v6 = sub_24887C708();
  uint64_t v8 = v7;
  uint64_t v9 = swift_bridgeObjectRelease();
  v11[0] = v6;
  v11[1] = v8;
  MEMORY[0x270FA5388](v9);
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 32));
  sub_248858B24((void *)(v2 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 32));
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_248856A50()
{
  if (qword_26B143008 != -1) {
    swift_once();
  }
  uint64_t v0 = *((void *)off_26B143980 + 2);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v0 + 24));
  sub_24884705C((double *)(v0 + 16), (BOOL *)&v6);
  os_unfair_lock_unlock((os_unfair_lock_t)(v0 + 24));
  int v1 = v6;
  swift_release();
  if (v1 == 1) {
    sub_248856804();
  }
  swift_release();
  if (qword_26B1439A0 != -1) {
    swift_once();
  }
  uint64_t v2 = (uint64_t *)(qword_26B143990 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(qword_26B143990 + 32);
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_2488563E0(v2, &v6);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v6;
  swift_release();
  return v4;
}

uint64_t sub_248856B8C(uint64_t *a1)
{
  uint64_t v67 = sub_24887C428();
  uint64_t v2 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v66 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_24884EFFC(v4);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6)
  {
    return swift_bridgeObjectRelease();
  }
  uint64_t v65 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v63 = v5;
  uint64_t v7 = (uint64_t *)(v5 + 40);
  while (1)
  {
    uint64_t v8 = *(v7 - 1);
    uint64_t v9 = *v7;
    uint64_t v70 = v7;
    uint64_t v10 = *a1;
    uint64_t v11 = *(void *)(*a1 + 16);
    swift_bridgeObjectRetain();
    if (v11)
    {
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_248840E50(v8, v9);
      if (v13)
      {
        uint64_t v14 = *(void *)(v10 + 56) + 24 * v12;
        uint64_t v15 = *(void *)v14;
        uint64_t v11 = *(void *)(v14 + 8);
        uint64_t v16 = *(void *)v14;
        int v71 = *(unsigned __int8 *)(v14 + 16);
        sub_24882D9F4(v16, v11, v71);
      }
      else
      {
        uint64_t v15 = 0;
        uint64_t v11 = 0;
        int v71 = 255;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = 0;
      int v71 = 255;
    }
    uint64_t v68 = v11;
    uint64_t v69 = v15;
    uint64_t v76 = (void *)v8;
    uint64_t v77 = v9;
    int64_t v17 = v66;
    sub_24887C418();
    sub_24884A1E8();
    uint64_t v18 = sub_24887CBB8();
    uint64_t v20 = v19;
    (*v65)(v17, v67);
    uint64_t v74 = v18;
    uint64_t v75 = v20;
    if (qword_26B142F08 != -1) {
      swift_once();
    }
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(qword_26B142F20);
    __swift_project_value_buffer(v21, (uint64_t)qword_26B142EE8);
    uint64_t v72 = 95;
    unint64_t v73 = 0xE100000000000000;
    sub_248858A7C();
    sub_248858AD0();
    sub_24882FA1C(&qword_26B142F18, qword_26B142F20);
    sub_24887CA88();
    swift_bridgeObjectRelease();
    uint64_t v22 = (uint64_t)v76;
    uint64_t v23 = v77;
    swift_bridgeObjectRetain();
    unint64_t v24 = sub_248840E50(v8, v9);
    char v26 = v25;
    swift_bridgeObjectRelease();
    if (v26)
    {
      uint64_t v64 = v6;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v28 = *a1;
      uint64_t v76 = (void *)*a1;
      *a1 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_248839F90();
        uint64_t v28 = (uint64_t)v76;
      }
      swift_bridgeObjectRelease();
      uint64_t v29 = *(void *)(v28 + 56) + 24 * v24;
      uint64_t v30 = *(void *)v29;
      uint64_t v31 = *(void *)(v29 + 8);
      char v32 = *(unsigned char *)(v29 + 16);
      sub_248854130(v24, v28);
      *a1 = v28;
      swift_bridgeObjectRelease();
      sub_24882F8D0(v30, v31, v32);
      swift_bridgeObjectRelease();
      uint64_t v6 = v64;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if (v71 != 255) {
      break;
    }
    swift_bridgeObjectRetain();
    unint64_t v43 = sub_248840E50(v22, v23);
    char v45 = v44;
    swift_bridgeObjectRelease();
    if (v45)
    {
      uint64_t v46 = v6;
      char v47 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v48 = *a1;
      uint64_t v76 = (void *)*a1;
      *a1 = 0x8000000000000000;
      if ((v47 & 1) == 0)
      {
        sub_248839F90();
        uint64_t v48 = (uint64_t)v76;
      }
      swift_bridgeObjectRelease();
      uint64_t v49 = *(void *)(v48 + 56) + 24 * v43;
      uint64_t v50 = *(void *)v49;
      uint64_t v51 = *(void *)(v49 + 8);
      char v52 = *(unsigned char *)(v49 + 16);
      sub_248854130(v43, v48);
      *a1 = v48;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24882F8D0(v50, v51, v52);
      uint64_t v6 = v46;
      goto LABEL_33;
    }
LABEL_32:
    swift_bridgeObjectRelease();
LABEL_33:
    uint64_t v7 = v70 + 2;
    if (!--v6) {
      return swift_bridgeObjectRelease();
    }
  }
  char v33 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v76 = (void *)*a1;
  BOOL v34 = v76;
  *a1 = 0x8000000000000000;
  unint64_t v36 = sub_248840E50(v22, v23);
  uint64_t v37 = v34[2];
  BOOL v38 = (v35 & 1) == 0;
  uint64_t v39 = v37 + v38;
  if (!__OFADD__(v37, v38))
  {
    char v40 = v35;
    if (v34[3] >= v39)
    {
      if ((v33 & 1) == 0) {
        sub_248839F90();
      }
    }
    else
    {
      sub_248838F6C(v39, v33);
      unint64_t v41 = sub_248840E50(v22, v23);
      if ((v40 & 1) != (v42 & 1)) {
        goto LABEL_40;
      }
      unint64_t v36 = v41;
    }
    uint64_t v54 = v68;
    uint64_t v53 = v69;
    char v55 = v76;
    if (v40)
    {
      uint64_t v56 = v76[7] + 24 * v36;
      sub_24882F8D0(*(void *)v56, *(void *)(v56 + 8), *(unsigned char *)(v56 + 16));
      *(void *)uint64_t v56 = v53;
      *(void *)(v56 + 8) = v54;
      *(unsigned char *)(v56 + 16) = v71;
    }
    else
    {
      v76[(v36 >> 6) + 8] |= 1 << v36;
      uint64_t v57 = (uint64_t *)(v55[6] + 16 * v36);
      *uint64_t v57 = v22;
      v57[1] = v23;
      uint64_t v58 = v55[7] + 24 * v36;
      *(void *)uint64_t v58 = v53;
      *(void *)(v58 + 8) = v54;
      *(unsigned char *)(v58 + 16) = v71;
      uint64_t v59 = v55[2];
      BOOL v60 = __OFADD__(v59, 1);
      uint64_t v61 = v59 + 1;
      if (v60) {
        goto LABEL_39;
      }
      v55[2] = v61;
      swift_bridgeObjectRetain();
    }
    *a1 = (uint64_t)v55;
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  uint64_t result = sub_24887CF98();
  __break(1u);
  return result;
}

unint64_t sub_248857164(unint64_t result)
{
  uint64_t v1 = *(void *)result;
  if (*(void *)(*(void *)result + 16))
  {
    uint64_t result = sub_248840E50(0x6D617473656D6974, 0xE900000000000070);
    if (v2)
    {
      if (*(void *)(v1 + 16) && (unint64_t v3 = sub_248840E50(0x6D617473656D6974, 0xE900000000000070), (v4 & 1) != 0))
      {
        uint64_t v5 = *(void *)(v1 + 56) + 24 * v3;
        uint64_t v6 = *(void *)v5;
        uint64_t v7 = *(void *)(v5 + 8);
        char v8 = *(unsigned char *)(v5 + 16);
        sub_24882D9F4(*(void *)v5, v7, v8);
      }
      else
      {
        uint64_t v6 = 0;
        uint64_t v7 = 0;
        char v8 = -1;
      }
      sub_24882EF04(v6, v7, v8, 0xD000000000000011, 0x8000000248882A80);
      sub_24885403C(0x6D617473656D6974, 0xE900000000000070, (uint64_t)v9);
      return sub_24882F954(v9[0], v9[1], v10);
    }
  }
  return result;
}

uint64_t sub_248857274(uint64_t result, int a2, __int16 a3)
{
  if (a2 == 7 && a3 == 6)
  {
    unint64_t v3 = (uint64_t *)result;
    if (qword_26B142FE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    char v4 = sub_2488471BC();
    if (v4 == 2) {
      char v5 = HIBYTE(word_26B142FD0);
    }
    else {
      char v5 = v4 & 1;
    }
    if (v4 == 2) {
      char v6 = HIBYTE(word_26B142FD0);
    }
    else {
      char v6 = v4;
    }
    LOBYTE(word_26B142FD0) = v5;
    swift_endAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    sub_24882EFE4(v6 & 1, 0, 3, 0xD000000000000013, 0x8000000248882A60, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v8;
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_2488573A4(unint64_t result)
{
  uint64_t v1 = *(void *)result;
  if (*(void *)(*(void *)result + 16))
  {
    unint64_t v2 = result;
    uint64_t result = sub_248840E50(0xD00000000000001ALL, 0x80000002488814A0);
    if (v3)
    {
      uint64_t v4 = *(void *)(v1 + 56) + 24 * result;
      uint64_t v5 = *(void *)v4;
      uint64_t v6 = *(void *)(v4 + 8);
      char v7 = *(unsigned char *)(v4 + 16);
      uint64_t v8 = *(void *)(*(void *)v2 + 16);
      sub_24882D9F4(*(void *)v4, v6, v7);
      if (v8 && (sub_248840E50(0xD000000000000018, 0x8000000248881210), (v9 & 1) != 0))
      {
        sub_24882F8D0(v5, v6, v7);
      }
      else
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v11[0] = *(void *)v2;
        *(void *)unint64_t v2 = 0x8000000000000000;
        sub_24882EFE4(v5, v6, v7, 0xD000000000000018, 0x8000000248881210, isUniquelyReferenced_nonNull_native);
        *(void *)unint64_t v2 = v11[0];
        swift_bridgeObjectRelease();
      }
      sub_24885403C(0xD00000000000001ALL, 0x80000002488814A0, (uint64_t)v11);
      return sub_24882F954(v11[0], v11[1], v12);
    }
  }
  return result;
}

uint64_t *sub_2488574F0(uint64_t *result)
{
  if (*(void *)(*result + 16))
  {
    uint64_t v1 = result;
    *(double *)&uint64_t result = COERCE_DOUBLE(sub_248840E50(0x6F6973736553584DLL, 0xEF656D756C6F566ELL));
    if (v2)
    {
      *(Swift::Double_optional *)(&result - 1) = SimpleType.unwrapToDouble()();
      if ((v3 & 1) == 0)
      {
        *(double *)&uint64_t v4 = round(*(double *)&result * 10000.0) / 10000.0;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v6 = *v1;
        *uint64_t v1 = 0x8000000000000000;
        sub_24882EFE4(v4, 0, 2, 0x6F6973736553584DLL, 0xEF656D756C6F566ELL, isUniquelyReferenced_nonNull_native);
        *uint64_t v1 = v6;
        *(double *)&uint64_t result = COERCE_DOUBLE(swift_bridgeObjectRelease());
      }
    }
  }
  return result;
}

double sub_2488575FC(uint64_t a1)
{
  uint64_t v2 = sub_24887C5B8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24887C5A8();
  sub_24887C598();
  double v7 = v6;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (*(void *)(a1 + 16))
  {
    unint64_t v8 = sub_248840E50(0xD000000000000015, 0x80000002488812A0);
    if (v9)
    {
      uint64_t v10 = *(void *)(a1 + 56) + 24 * v8;
      char v11 = *(unsigned char *)(v10 + 16);
      long long v17 = *(_OWORD *)v10;
      char v18 = v11;
      Swift::Double_optional v19 = SimpleType.unwrapToDouble()();
      if ((v12 & 1) == 0)
      {
        double v13 = *(double *)&v19.is_nil;
        if (qword_26B143098 != -1)
        {
          double v16 = *(double *)&v19.is_nil;
          swift_once();
          double v13 = v16;
        }
        if (v7 - *(double *)&qword_26B143C58 <= v13) {
          return v13;
        }
      }
    }
  }
  return v7;
}

unint64_t sub_2488577A8()
{
  unint64_t result = qword_26932CE38;
  if (!qword_26932CE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CE38);
  }
  return result;
}

unint64_t sub_2488577FC()
{
  unint64_t result = qword_26932CE50;
  if (!qword_26932CE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CE50);
  }
  return result;
}

unint64_t sub_248857850()
{
  unint64_t result = qword_26932CE78;
  if (!qword_26932CE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CE78);
  }
  return result;
}

unint64_t sub_2488578A4()
{
  unint64_t result = qword_26932CE80;
  if (!qword_26932CE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CE80);
  }
  return result;
}

uint64_t sub_2488578F8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26932CE68);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_248857974()
{
  unint64_t result = qword_26932CEA8;
  if (!qword_26932CEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CEA8);
  }
  return result;
}

unint64_t sub_2488579C8()
{
  unint64_t result = qword_26932CEB0;
  if (!qword_26932CEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CEB0);
  }
  return result;
}

unint64_t sub_248857A20()
{
  unint64_t result = qword_26B143570;
  if (!qword_26B143570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B143570);
  }
  return result;
}

uint64_t destroy for Message()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Message(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Message(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Message(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Message(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Message(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Message()
{
  return &type metadata for Message;
}

uint64_t destroy for Message.Metadata()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Message.Metadata(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Message.Metadata(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Message.Metadata(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for Message.Metadata(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Message.Metadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Message.Metadata()
{
  return &type metadata for Message.Metadata;
}

ValueMetadata *type metadata accessor for Message.CommonKeys()
{
  return &type metadata for Message.CommonKeys;
}

uint64_t getEnumTagSinglePayload for SystemMonitorConfig.MonitorType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for UntrustworthyReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248858098);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UntrustworthyReason()
{
  return &type metadata for UntrustworthyReason;
}

unsigned char *storeEnumTagSinglePayload for Message.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24885819CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Message.CodingKeys()
{
  return &type metadata for Message.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Message.Metadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2488582A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Message.Metadata.CodingKeys()
{
  return &type metadata for Message.Metadata.CodingKeys;
}

unint64_t sub_2488582DC()
{
  unint64_t result = qword_26932CEB8;
  if (!qword_26932CEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CEB8);
  }
  return result;
}

unint64_t sub_248858334()
{
  unint64_t result = qword_26932CEC0;
  if (!qword_26932CEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CEC0);
  }
  return result;
}

unint64_t sub_24885838C()
{
  unint64_t result = qword_26932CEC8;
  if (!qword_26932CEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CEC8);
  }
  return result;
}

unint64_t sub_2488583E4()
{
  unint64_t result = qword_26932CED0;
  if (!qword_26932CED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CED0);
  }
  return result;
}

unint64_t sub_24885843C()
{
  unint64_t result = qword_26932CED8;
  if (!qword_26932CED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CED8);
  }
  return result;
}

unint64_t sub_248858494()
{
  unint64_t result = qword_26932CEE0;
  if (!qword_26932CEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CEE0);
  }
  return result;
}

uint64_t sub_2488584E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x646E756465527369 && a2 == 0xEB00000000746E61;
  if (v2 || (sub_24887CF48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6364616F72427369 && a2 == 0xEB00000000747361 || (sub_24887CF48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000248882980 || (sub_24887CF48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000248882A00 || (sub_24887CF48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000248882A20)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24887CF48();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_248858704(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79726F6765746163 && a2 == 0xE800000000000000;
  if (v2 || (sub_24887CF48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_24887CF48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_24887CF48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_24887CF48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000248882A40 || (sub_24887CF48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000 || (sub_24887CF48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656D614E707061 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_24887CF48();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

unint64_t sub_2488589E0()
{
  unint64_t result = qword_26932CEE8;
  if (!qword_26932CEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CEE8);
  }
  return result;
}

uint64_t sub_248858A34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_248858A7C()
{
  unint64_t result = qword_26B143090;
  if (!qword_26B143090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B143090);
  }
  return result;
}

unint64_t sub_248858AD0()
{
  unint64_t result = qword_26B143BB8;
  if (!qword_26B143BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B143BB8);
  }
  return result;
}

uint64_t sub_248858B24(void *a1)
{
  int v3 = *(uint64_t **)(v1 + 16);
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  swift_bridgeObjectRelease();
  *a1 = v5;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

unint64_t sub_248858B70()
{
  unint64_t result = qword_26B143568;
  if (!qword_26B143568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B143568);
  }
  return result;
}

unint64_t sub_248858BC4()
{
  unint64_t result = qword_26B143818;
  if (!qword_26B143818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B143818);
  }
  return result;
}

uint64_t sub_248858C20(void (*a1)(uint64_t *__return_ptr, uint64_t *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v51 = MEMORY[0x263F8EE78];
    sub_248841A50(0, v5, 0);
    uint64_t v6 = v51;
    for (unint64_t i = (uint64_t *)(a3 + 32); ; ++i)
    {
      uint64_t v38 = *i;
      swift_bridgeObjectRetain();
      a1(&v39, &v38, &v37);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      int v9 = v39;
      __int16 v10 = WORD2(v39);
      uint64_t v11 = v40;
      uint64_t v12 = v41;
      uint64_t v13 = v42;
      char v14 = v43;
      char v15 = v44;
      char v16 = v45;
      char v17 = v46;
      uint64_t v18 = v47;
      uint64_t v19 = v48;
      unint64_t v21 = *(void *)(v6 + 16);
      unint64_t v20 = *(void *)(v6 + 24);
      char v22 = v49;
      long long v23 = v50;
      uint64_t v51 = v6;
      if (v21 >= v20 >> 1)
      {
        __int16 v25 = WORD2(v39);
        uint64_t v34 = v42;
        uint64_t v35 = v40;
        char v32 = v44;
        char v33 = v43;
        char v30 = v46;
        char v31 = v45;
        uint64_t v28 = v48;
        uint64_t v29 = v47;
        long long v27 = v50;
        sub_248841A50(v20 > 1, v21 + 1, 1);
        long long v23 = v27;
        uint64_t v19 = v28;
        uint64_t v18 = v29;
        char v17 = v30;
        char v16 = v31;
        char v15 = v32;
        char v14 = v33;
        uint64_t v13 = v34;
        uint64_t v11 = v35;
        __int16 v10 = v25;
        uint64_t v6 = v51;
      }
      *(void *)(v6 + 16) = v21 + 1;
      uint64_t v24 = v6 + 88 * v21;
      *(_DWORD *)(v24 + 32) = v9;
      *(_WORD *)(v24 + 36) = v10;
      *(void *)(v24 + 40) = v11;
      *(void *)(v24 + 48) = v12;
      *(void *)(v24 + 56) = v13;
      *(unsigned char *)(v24 + 64) = v14;
      *(unsigned char *)(v24 + 72) = v15;
      *(unsigned char *)(v24 + 73) = v16;
      *(unsigned char *)(v24 + 74) = v17;
      *(void *)(v24 + 80) = v18;
      *(void *)(v24 + 88) = v19;
      *(unsigned char *)(v24 + 96) = v22;
      *(_OWORD *)(v24 + 104) = v23;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

id static MessageUtilities.readMessages(clazz:filenamePrefix:doSlideTimes:timeRequired:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v30 = a4;
  int v31 = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B143130);
  MEMORY[0x270FA5388](v7 - 8);
  int v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24887C518();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  char v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  char v16 = (char *)&v29 - v15;
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v18 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v19 = (void *)sub_24887C738();
  unint64_t v20 = (void *)sub_24887C738();
  id v21 = objc_msgSend(v18, sel_URLForResource_withExtension_, v19, v20);

  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_6;
  }
  sub_24887C4E8();

  unint64_t v20 = (void *)(v11 + 32);
  char v22 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v22(v9, v14, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_6:
    sub_2488431F0((uint64_t)v9, &qword_26B143130);
    type metadata accessor for MessageUtilityError();
    sub_24885B8E0(&qword_26932CF08, (void (*)(uint64_t))type metadata accessor for MessageUtilityError);
    swift_allocError();
    uint64_t v25 = v34;
    void *v26 = v33;
    v26[1] = v25;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_willThrow();
    return v20;
  }
  v22(v16, v9, v10);
  uint64_t v23 = v32;
  id v24 = sub_24885A3A8((uint64_t)v16, (id)(v31 & 1));
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  else
  {
    id v28 = v24;
    if (v30)
    {
      unint64_t v20 = (void *)sub_24885A990((uint64_t)v24, 0, 1, 60.0);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      return v28;
    }
  }
  return v20;
}

uint64_t type metadata accessor for MessageUtilityError()
{
  uint64_t result = qword_26932CF18;
  if (!qword_26932CF18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id static MessageUtilities.readMessages(from:timeRequired:)(uint64_t a1, void *a2)
{
  return sub_24885A3A8(a1, a2);
}

uint64_t static MessageUtilities.slideTimes(messages:startingDelta:maxPause:)(uint64_t a1, uint64_t a2, char a3, double a4)
{
  return sub_24885A990(a1, a2, a3 & 1, a4);
}

uint64_t sub_248859250(uint64_t a1)
{
  uint64_t result = sub_24885A2F8(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  uint64_t v5 = sub_24885B94C(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_2488592D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X3>, _DWORD *a5@<X8>)
{
  uint64_t v72 = a4;
  uint64_t v73 = a2;
  uint64_t v6 = v5;
  int v71 = a5;
  uint64_t v9 = sub_24887C518();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v66 - v14;
  uint64_t v16 = *a1;
  uint64_t v17 = sub_248859250(v16);
  if (!v18) {
    goto LABEL_11;
  }
  uint64_t v19 = v18;
  if (!*(void *)(v16 + 16)
    || (uint64_t v20 = v17, v21 = sub_248840E50(v17, v18), (v22 & 1) == 0)
    || (sub_24882E1C8(*(void *)(v16 + 56) + 32 * v21, (uint64_t)&v78),
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B143BD8),
        (swift_dynamicCast() & 1) == 0))
  {
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:
    type metadata accessor for MessageUtilityError();
    sub_24885B8E0(&qword_26932CF08, (void (*)(uint64_t))type metadata accessor for MessageUtilityError);
    uint64_t v6 = swift_allocError();
    id v28 = v27;
    uint64_t v29 = (char *)v27 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26932CF10) + 48);
    unint64_t v30 = 0xD000000000000014;
    int v31 = "Failed to read entry";
LABEL_12:
    *id v28 = v30;
    v28[1] = (unint64_t)(v31 - 32) | 0x8000000000000000;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v29, v73, v9);
LABEL_13:
    swift_storeEnumTagMultiPayload();
    uint64_t result = swift_willThrow();
LABEL_14:
    *uint64_t v72 = v6;
    return result;
  }
  uint64_t v23 = v74;
  uint64_t v24 = Dictionary<>.asSimpleType()(v74);
  if (!v24)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v88 = v24;
  uint64_t v70 = v24;
  if ((a3 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  if (*(void *)(v23 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v25 = sub_248840E50(0xD000000000000015, 0x80000002488812A0);
    if (v26)
    {
      sub_24882E1C8(*(void *)(v23 + 56) + 32 * v25, (uint64_t)&v78);
    }
    else
    {
      long long v78 = 0u;
      long long v79 = 0u;
    }
  }
  else
  {
    long long v78 = 0u;
    long long v79 = 0u;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v79 + 1))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2488431F0((uint64_t)&v78, &qword_26B143DC8);
LABEL_30:
    swift_bridgeObjectRelease();
    type metadata accessor for MessageUtilityError();
    sub_24885B8E0(&qword_26932CF08, (void (*)(uint64_t))type metadata accessor for MessageUtilityError);
    uint64_t v6 = swift_allocError();
    id v28 = v44;
    uint64_t v29 = (char *)v44 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26932CF10) + 48);
    unint64_t v30 = 0xD000000000000013;
    int v31 = "No timestamp found!";
    goto LABEL_12;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
LABEL_21:
  *(void *)&long long v78 = v20;
  *((void *)&v78 + 1) = v19;
  uint64_t v74 = 24415;
  uint64_t v75 = 0xE200000000000000;
  sub_24884A1E8();
  uint64_t v33 = (void *)sub_24887CBA8();
  if (v33[2] != 3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    type metadata accessor for MessageUtilityError();
    sub_24885B8E0(&qword_26932CF08, (void (*)(uint64_t))type metadata accessor for MessageUtilityError);
    uint64_t v6 = swift_allocError();
    uint64_t v41 = v40;
    uint64_t v42 = (char *)v40 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26932CF10) + 48);
    strcpy((char *)&v78, "Invalid key! ");
    HIWORD(v78) = -4864;
    sub_24887C838();
    swift_bridgeObjectRelease();
    uint64_t v43 = *((void *)&v78 + 1);
    *uint64_t v41 = v78;
    v41[1] = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v42, v73, v9);
    goto LABEL_13;
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v34 = v33[2];
  if (!v34)
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v34 == 1)
  {
LABEL_45:
    __break(1u);
    return result;
  }
  uint64_t v35 = v33[4];
  uint64_t v36 = v33[5];
  uint64_t v37 = v33[7];
  uint64_t v68 = v33[6];
  swift_bridgeObjectRetain();
  uint64_t v69 = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v38 = sub_24887AF84(v35, v36);
  uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v67(v15, v73, v9);
  unint64_t v66 = v38;
  if ((v38 & 0x100000000) != 0)
  {
    uint64_t v39 = sub_248859ACC(v35, v36, (uint64_t)v15);
    if (v6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
LABEL_35:
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    unint64_t v66 = v39;
  }
  char v45 = *(void (**)(char *, uint64_t))(v10 + 8);
  v45(v15, v9);
  swift_bridgeObjectRelease();
  uint64_t v46 = v68;
  int v47 = sub_248879D44(v68, v69);
  v67(v13, v73, v9);
  if ((v47 & 0x10000) != 0)
  {
    __int16 v48 = sub_248859C2C(v46, v69, (uint64_t)v13);
    if (v6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v45(v13, v9);
      goto LABEL_35;
    }
    LOWORD(v47) = v48;
  }
  v45(v13, v9);
  swift_bridgeObjectRelease();
  uint64_t v74 = 0;
  uint64_t v75 = 0;
  char v77 = 0;
  uint64_t v76 = 0;
  uint64_t v49 = v70;
  swift_bridgeObjectRetain();
  Message.init(category:type:content:metadata:)(v66, v47, v49, (unint64_t *)&v74, (uint64_t)&v78);
  if (*(void *)(v49 + 16) && (unint64_t v50 = sub_248840E50(0xD000000000000010, 0x8000000248882980), (v51 & 1) != 0))
  {
    uint64_t v52 = *(void *)(v49 + 56) + 24 * v50;
    uint64_t v53 = *(void *)v52;
    uint64_t v54 = *(void *)(v52 + 8);
    int v55 = *(unsigned __int8 *)(v52 + 16);
    sub_24882D9F4(*(void *)v52, v54, *(unsigned char *)(v52 + 16));
    swift_bridgeObjectRelease();
    if (v55 == 3)
    {
      char v83 = v53 & 1;
      sub_24885403C(0xD000000000000010, 0x8000000248882980, (uint64_t)&v74);
      sub_24882F954(v74, v75, v76);
    }
    else
    {
      sub_24882F8D0(v53, v54, v55);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  __int16 v56 = WORD2(v78);
  uint64_t v57 = *((void *)&v78 + 1);
  long long v58 = v79;
  char v59 = v80;
  char v60 = v81;
  char v61 = v82;
  char v62 = v83;
  uint64_t v63 = v84;
  uint64_t v64 = v85;
  char v65 = v86;
  uint64_t result = (uint64_t)v71;
  _DWORD *v71 = v78;
  *(_WORD *)(result + 4) = v56;
  *(void *)(result + 8) = v57;
  *(_OWORD *)(result + 16) = v58;
  *(unsigned char *)(result + 32) = v59;
  *(unsigned char *)(result + 40) = v60;
  *(unsigned char *)(result + 41) = v61;
  *(unsigned char *)(result + 42) = v62;
  *(void *)(result + 48) = v63;
  *(void *)(result + 56) = v64;
  *(unsigned char *)(result + 64) = v65;
  *(_OWORD *)(result + 72) = v87;
  return result;
}

uint64_t sub_248859ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for MessageUtilityError();
  sub_24885B8E0(&qword_26932CF08, (void (*)(uint64_t))type metadata accessor for MessageUtilityError);
  swift_allocError();
  uint64_t v5 = v4;
  uint64_t v6 = (char *)v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26932CF10) + 48);
  sub_24887CC38();
  swift_bridgeObjectRelease();
  sub_24887C838();
  *uint64_t v5 = 0xD00000000000001CLL;
  v5[1] = 0x8000000248882C30;
  uint64_t v7 = sub_24887C518();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6, a3, v7);
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_248859C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for MessageUtilityError();
  sub_24885B8E0(&qword_26932CF08, (void (*)(uint64_t))type metadata accessor for MessageUtilityError);
  swift_allocError();
  uint64_t v5 = v4;
  uint64_t v6 = (char *)v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26932CF10) + 48);
  sub_24887CC38();
  swift_bridgeObjectRelease();
  sub_24887C838();
  *uint64_t v5 = 0xD000000000000018;
  v5[1] = 0x8000000248882C10;
  uint64_t v7 = sub_24887C518();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6, a3, v7);
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

double sub_248859D8C@<D0>(uint64_t a1@<X0>, double *a2@<X1>, double a3@<X2>, char a4@<W3>, double *a5@<X4>, uint64_t a6@<X8>)
{
  int v10 = *(_DWORD *)a1;
  __int16 v11 = *(_WORD *)(a1 + 4);
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = (double *)(a1 + 16);
  int v14 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v41 = *(unsigned __int8 *)(a1 + 40);
  int v39 = *(unsigned __int8 *)(a1 + 41);
  int v40 = *(unsigned __int8 *)(a1 + 42);
  unint64_t v15 = *(void *)(a1 + 56);
  unint64_t v54 = *(void *)(a1 + 48);
  char v42 = *(unsigned char *)(a1 + 64);
  if (!v14) {
    uint64_t v13 = (double *)(a1 + 24);
  }
  double v16 = *v13;
  swift_beginAccess();
  double v17 = v16 + *a2;
  if ((a4 & 1) == 0)
  {
    double v18 = v17 - *a5;
    if (v18 > a3)
    {
      double v19 = v18 - a3;
      swift_beginAccess();
      double v20 = *a2 - v19;
      *a2 = v20;
      double v17 = v16 + v20;
    }
  }
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v45[0] = v12;
  sub_24882EFE4(*(uint64_t *)&v17, 0, 2, 0xD000000000000015, 0x80000002488812A0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  uint64_t v22 = 256;
  if (!v39) {
    uint64_t v22 = 0;
  }
  uint64_t v23 = v22 | v41;
  uint64_t v24 = 0x10000;
  if (!v40) {
    uint64_t v24 = 0;
  }
  v43[0] = v23 | v24;
  v43[1] = v54;
  v43[2] = v15;
  char v44 = v42;
  swift_bridgeObjectRetain();
  Message.init(category:type:content:metadata:)(v10, v11, v12, v43, (uint64_t)v45);
  int v25 = v45[0];
  __int16 v26 = WORD2(v45[0]);
  uint64_t v27 = v45[1];
  double result = *(double *)&v45[2];
  uint64_t v29 = v45[3];
  char v30 = v46;
  char v31 = v47;
  char v32 = v48;
  char v33 = v49;
  uint64_t v34 = v50;
  uint64_t v35 = v51;
  char v36 = v52;
  long long v37 = v53;
  *a5 = v17;
  *(_DWORD *)a6 = v25;
  *(_WORD *)(a6 + 4) = v26;
  *(void *)(a6 + 8) = v27;
  *(double *)(a6 + 16) = result;
  *(void *)(a6 + 24) = v29;
  *(unsigned char *)(a6 + 32) = v30;
  *(unsigned char *)(a6 + 40) = v31;
  *(unsigned char *)(a6 + 41) = v32;
  *(unsigned char *)(a6 + 42) = v33;
  *(void *)(a6 + 48) = v34;
  *(void *)(a6 + 56) = v35;
  *(unsigned char *)(a6 + 64) = v36;
  *(_OWORD *)(a6 + 72) = v37;
  return result;
}

unint64_t sub_248859FB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24887C518();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MessageUtilityError();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (unint64_t *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24885B87C(v1, (uint64_t)v8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
      sub_24887CC38();
      swift_bridgeObjectRelease();
      unint64_t v14 = 0xD00000000000001FLL;
      unint64_t v15 = 0x8000000248882B10;
      sub_24887C838();
      swift_bridgeObjectRelease();
      sub_24887C838();
      sub_24887C838();
      goto LABEL_6;
    case 2u:
      unint64_t v9 = *v8;
      unint64_t v10 = v8[1];
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26932CF10);
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, (char *)v8 + *(int *)(v11 + 48), v2);
      unint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
      sub_24887CC38();
      swift_bridgeObjectRelease();
      unint64_t v14 = v9;
      unint64_t v15 = v10;
      sub_24887C838();
      sub_24885B8E0(&qword_26932CF28, MEMORY[0x263F06EA8]);
      sub_24887CF18();
      sub_24887C838();
      swift_bridgeObjectRelease();
      sub_24887C838();
      unint64_t v12 = v14;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      break;
    case 3u:
      unint64_t v12 = *v8;
      break;
    default:
      unint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
      sub_24887CC38();
      swift_bridgeObjectRelease();
      unint64_t v14 = 0xD00000000000001DLL;
      unint64_t v15 = 0x8000000248882B30;
      sub_24887C838();
LABEL_6:
      swift_bridgeObjectRelease();
      sub_24887C838();
      unint64_t v12 = v14;
      break;
  }
  return v12;
}

uint64_t sub_24885A2F8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  unint64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

id sub_24885A3A8(uint64_t a1, id a2)
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  uint64_t v5 = sub_24887C518();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24887C528();
  if (v2) {
    return a2;
  }
  uint64_t v11 = v9;
  unint64_t v12 = v10;
  int v40 = (int)a2;
  uint64_t v13 = self;
  unint64_t v14 = (void *)sub_24887C548();
  v43[0] = 0;
  a2 = objc_msgSend(v13, sel_JSONObjectWithData_options_error_, v14, 2, v43);

  id v15 = v43[0];
  if (!a2)
  {
    uint64_t v27 = v15;
    sub_24887C488();

    swift_willThrow();
    sub_248838EB4(v11, v12);
    return a2;
  }
  unint64_t v41 = v12;
  sub_24887CBD8();
  swift_unknownObjectRelease();
  sub_24882E1C8((uint64_t)v44, (uint64_t)v43);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C08);
  if (!swift_dynamicCast())
  {
    a2 = (id)type metadata accessor for MessageUtilityError();
    sub_24885B8E0(&qword_26932CF08, (void (*)(uint64_t))type metadata accessor for MessageUtilityError);
    swift_allocError();
    uint64_t v29 = v28;
    char v30 = (char *)v28 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26932CF10) + 48);
    unint64_t v31 = 0xD000000000000014;
    char v32 = "Failed to read file.";
LABEL_13:
    *uint64_t v29 = v31;
    v29[1] = (unint64_t)(v32 - 32) | 0x8000000000000000;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v30, a1, v5);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_248838EB4(v11, v41);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v44);
    return a2;
  }
  uint64_t v16 = v42;
  if (!*(void *)(v42 + 16) || !*(void *)(*(void *)(v42 + 32) + 16))
  {
    swift_bridgeObjectRelease();
    a2 = (id)type metadata accessor for MessageUtilityError();
    sub_24885B8E0(&qword_26932CF08, (void (*)(uint64_t))type metadata accessor for MessageUtilityError);
    swift_allocError();
    uint64_t v29 = v33;
    char v30 = (char *)v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26932CF10) + 48);
    unint64_t v31 = 0xD000000000000022;
    char v32 = "Results array appears to be empty!";
    goto LABEL_13;
  }
  if (qword_26B143BA0 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_24887C618();
  __swift_project_value_buffer(v17, (uint64_t)qword_26B143B80);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  swift_bridgeObjectRetain_n();
  double v18 = sub_24887C5F8();
  os_log_type_t v19 = sub_24887CAC8();
  int v39 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    unint64_t v38 = (void *)swift_slowAlloc();
    v43[0] = v38;
    *(_DWORD *)uint64_t v20 = 136380931;
    v36[0] = v20 + 4;
    os_log_t v37 = v18;
    uint64_t v21 = sub_24887C4F8();
    uint64_t v42 = sub_24882CAE0(v21, v22, (uint64_t *)v43);
    v36[1] = v43;
    sub_24887CB88();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_WORD *)(v20 + 12) = 2048;
    uint64_t v23 = *(void *)(v16 + 16);
    swift_bridgeObjectRelease();
    uint64_t v42 = v23;
    sub_24887CB88();
    swift_bridgeObjectRelease();
    os_log_t v24 = v37;
    _os_log_impl(&dword_248827000, v37, (os_log_type_t)v39, "Successfully parsed json file. { path=\"%{private}s\", entries=%ld }", (uint8_t *)v20, 0x16u);
    int v25 = v38;
    swift_arrayDestroy();
    MEMORY[0x24C582D20](v25, -1, -1);
    MEMORY[0x24C582D20](v20, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

    uint64_t v26 = swift_bridgeObjectRelease();
  }
  MEMORY[0x270FA5388](v26);
  v36[-2] = a1;
  LOBYTE(v36[-1]) = v35 & 1;
  a2 = (id)sub_248858C20((void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))sub_24885B928, (uint64_t)&v36[-4], v16);
  sub_248838EB4(v11, v41);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v44);
  swift_bridgeObjectRelease();
  return a2;
}

uint64_t sub_24885A990(uint64_t a1, uint64_t a2, int a3, double a4)
{
  LODWORD(v4) = a3;
  *(void *)&double v77 = a2;
  uint64_t v7 = sub_24887C5B8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (v11)
  {
    uint64_t v76 = v7;
    LODWORD(v78) = v4;
    v92[0] = MEMORY[0x263F8EE78];
    sub_248841A70(0, v11, 0);
    uint64_t v12 = v92[0];
    unint64_t v13 = *(void *)(v92[0] + 16);
    uint64_t v4 = a1;
    unint64_t v14 = (unsigned char *)(a1 + 64);
    int64_t v15 = v11;
    do
    {
      uint64_t v16 = (uint64_t *)(v14 - 16);
      if (!*v14) {
        uint64_t v16 = (uint64_t *)(v14 - 8);
      }
      uint64_t v17 = *v16;
      v92[0] = v12;
      unint64_t v18 = *(void *)(v12 + 24);
      unint64_t v19 = v13 + 1;
      if (v13 >= v18 >> 1)
      {
        sub_248841A70(v18 > 1, v13 + 1, 1);
        uint64_t v12 = v92[0];
      }
      *(void *)(v12 + 16) = v19;
      *(void *)(v12 + 8 * v13 + 32) = v17;
      v14 += 88;
      ++v13;
      --v15;
    }
    while (v15);
    a1 = v4;
    LOBYTE(v4) = v78;
    uint64_t v7 = v76;
  }
  else
  {
    unint64_t v19 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (!v19)
    {
      swift_bridgeObjectRelease();
      uint64_t v36 = type metadata accessor for MessageUtilityError();
      sub_24885B8E0(&qword_26932CF08, (void (*)(uint64_t))type metadata accessor for MessageUtilityError);
      swift_allocError();
      *unint64_t v66 = 0xD000000000000028;
      v66[1] = 0x8000000248882B50;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return v36;
    }
  }
  double v20 = *(double *)(v12 + 32);
  unint64_t v21 = v19 - 1;
  if (v19 == 1)
  {
    double v22 = *(double *)(v12 + 32);
  }
  else
  {
    uint64_t v23 = (double *)(v12 + 40);
    unint64_t v24 = v19 - 1;
    double v22 = *(double *)(v12 + 32);
    do
    {
      double v25 = *v23++;
      double v26 = v25;
      if (v25 < v22) {
        double v22 = v26;
      }
      --v24;
    }
    while (v24);
    uint64_t v27 = (double *)(v12 + 40);
    do
    {
      double v28 = *v27++;
      double v29 = v28;
      if (v20 < v28) {
        double v20 = v29;
      }
      --v21;
    }
    while (v21);
  }
  swift_bridgeObjectRelease();
  sub_24887C5A8();
  sub_24887C598();
  double v31 = v30;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  double v104 = v31 - a4;
  double v103 = v31 - a4 - v22;
  if (qword_26B143BA0 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_24887C618();
  __swift_project_value_buffer(v32, (uint64_t)qword_26B143B80);
  char v33 = sub_24887C5F8();
  os_log_type_t v34 = sub_24887CAC8();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 134218496;
    swift_beginAccess();
    *(double *)uint64_t v92 = v103;
    sub_24887CB88();
    *(_WORD *)(v35 + 12) = 2048;
    *(double *)uint64_t v92 = v22;
    sub_24887CB88();
    *(_WORD *)(v35 + 22) = 2048;
    *(double *)uint64_t v92 = v20;
    sub_24887CB88();
    _os_log_impl(&dword_248827000, v33, v34, "Time info. { timeDelta=%f, minTime=%f, maxTime=%f }", (uint8_t *)v35, 0x20u);
    MEMORY[0x24C582D20](v35, -1, -1);
  }

  if (!v11) {
    return MEMORY[0x263F8EE78];
  }
  LODWORD(v76) = v4 & 1;
  uint64_t v102 = MEMORY[0x263F8EE78];
  sub_248841A50(0, v11, 0);
  uint64_t v36 = v102;
  os_log_t v37 = (_OWORD *)(a1 + 104);
  uint64_t v38 = v75;
  do
  {
    int64_t v78 = v11;
    __int16 v39 = *((_WORD *)v37 - 34);
    uint64_t v40 = *((void *)v37 - 8);
    uint64_t v41 = *((void *)v37 - 7);
    uint64_t v42 = *((void *)v37 - 6);
    char v43 = *((unsigned char *)v37 - 40);
    char v44 = *((unsigned char *)v37 - 32);
    char v45 = *((unsigned char *)v37 - 31);
    char v46 = *((unsigned char *)v37 - 30);
    uint64_t v47 = *((void *)v37 - 3);
    uint64_t v48 = *((void *)v37 - 2);
    char v49 = *((unsigned char *)v37 - 8);
    int v79 = *((_DWORD *)v37 - 18);
    __int16 v80 = v39;
    uint64_t v81 = v40;
    uint64_t v82 = v41;
    uint64_t v83 = v42;
    char v84 = v43;
    char v85 = v44;
    char v86 = v45;
    char v87 = v46;
    uint64_t v88 = v47;
    uint64_t v89 = v48;
    char v90 = v49;
    long long v91 = *v37;
    sub_248859D8C((uint64_t)&v79, &v103, v77, v76, &v104, (uint64_t)v92);
    int v50 = v92[0];
    __int16 v51 = WORD2(v92[0]);
    uint64_t v52 = v92[1];
    uint64_t v53 = v92[2];
    uint64_t v54 = v93;
    char v55 = v94;
    unsigned __int8 v56 = v95;
    unsigned __int8 v57 = v96;
    unsigned __int8 v58 = v97;
    uint64_t v59 = v98;
    uint64_t v60 = v99;
    unint64_t v62 = *(void *)(v36 + 16);
    unint64_t v61 = *(void *)(v36 + 24);
    char v63 = v100;
    long long v64 = v101;
    uint64_t v102 = v36;
    if (v62 >= v61 >> 1)
    {
      uint64_t v75 = v38;
      uint64_t v74 = v93;
      int v73 = v95;
      int v72 = v96;
      int v71 = v97;
      uint64_t v70 = v98;
      uint64_t v69 = v99;
      long long v68 = v101;
      sub_248841A50(v61 > 1, v62 + 1, 1);
      long long v64 = v68;
      uint64_t v60 = v69;
      uint64_t v59 = v70;
      unsigned __int8 v58 = v71;
      unsigned __int8 v57 = v72;
      unsigned __int8 v56 = v73;
      uint64_t v54 = v74;
      uint64_t v38 = v75;
      uint64_t v36 = v102;
    }
    *(void *)(v36 + 16) = v62 + 1;
    uint64_t v65 = v36 + 88 * v62;
    *(_DWORD *)(v65 + 32) = v50;
    *(_WORD *)(v65 + 36) = v51;
    *(void *)(v65 + 40) = v52;
    *(void *)(v65 + 48) = v53;
    *(void *)(v65 + 56) = v54;
    *(unsigned char *)(v65 + 64) = v55;
    *(unsigned char *)(v65 + 72) = v56;
    *(unsigned char *)(v65 + 73) = v57;
    *(unsigned char *)(v65 + 74) = v58;
    *(void *)(v65 + 80) = v59;
    *(void *)(v65 + 88) = v60;
    *(unsigned char *)(v65 + 96) = v63;
    os_log_t v37 = (_OWORD *)((char *)v37 + 88);
    *(_OWORD *)(v65 + 104) = v64;
    int64_t v11 = v78 - 1;
  }
  while (v78 != 1);
  return v36;
}

ValueMetadata *type metadata accessor for MessageUtilities()
{
  return &type metadata for MessageUtilities;
}

uint64_t *sub_24885B004(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        uint64_t v14 = a2[2];
        uint64_t v15 = a2[3];
        a1[2] = v14;
        a1[3] = v15;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        swift_bridgeObjectRetain();
        uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26932CF10) + 48);
        unint64_t v10 = (char *)a1 + v9;
        int64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_24887C518();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        break;
      default:
        uint64_t v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24885B19C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 3:
      goto LABEL_3;
    case 1:
      swift_bridgeObjectRelease();
LABEL_3:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26932CF10) + 48);
      uint64_t v4 = sub_24887C518();
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      uint64_t result = v5(v3, v4);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_24885B298(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      uint64_t v6 = a2[2];
      uint64_t v7 = a2[3];
      a1[2] = v6;
      a1[3] = v7;
      swift_bridgeObjectRetain();
      goto LABEL_4;
    case 2u:
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26932CF10) + 48);
      unint64_t v10 = (char *)a1 + v9;
      int64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_24887C518();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      break;
    default:
      uint64_t v4 = a2[1];
      *a1 = *a2;
      a1[1] = v4;
LABEL_4:
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_24885B3B4(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_24885B500((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        goto LABEL_5;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26932CF10) + 48);
        uint64_t v5 = (char *)a1 + v4;
        uint64_t v6 = (char *)a2 + v4;
        uint64_t v7 = sub_24887C518();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
        break;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
LABEL_5:
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24885B500(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessageUtilityError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_24885B55C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26932CF10) + 48);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_24887C518();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_24885B634(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24885B500((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26932CF10) + 48);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_24887C518();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24885B71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_24885B744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_24885B770()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24885B780()
{
  v2[4] = &unk_24887F8D8;
  v2[5] = &unk_24887F8F0;
  uint64_t result = sub_24887C518();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[6] = v2;
    v2[7] = &unk_24887F8D8;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_24885B834()
{
  return sub_24885B8E0(&qword_26932CF08, (void (*)(uint64_t))type metadata accessor for MessageUtilityError);
}

uint64_t sub_24885B87C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageUtilityError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24885B8E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24885B928@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _DWORD *a3@<X8>)
{
  return sub_2488592D0(a1, *(void *)(v3 + 16), *(unsigned char *)(v3 + 24), a2, a3);
}

uint64_t sub_24885B94C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 16 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_24885B9A0(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_24885B9E4()
{
  type metadata accessor for NotificationManager();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_24885C93C();
  qword_26932CF30 = v0;
  return result;
}

uint64_t static NotificationManager.shared.getter()
{
  if (qword_26932CA90 != -1) {
    swift_once();
  }
  return swift_retain();
}

void NotificationManager.surfaceTapToRadar(_:)(_OWORD *a1)
{
  uint64_t v3 = sub_24887C648();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24887C688();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v11 = a1[3];
  v24[2] = a1[2];
  v24[3] = v11;
  long long v12 = a1[5];
  v24[4] = a1[4];
  v24[5] = v12;
  long long v13 = a1[1];
  v24[0] = *a1;
  v24[1] = v13;
  if (AudioAnalyticsTapToRadarWrapperIsAvailable())
  {
    v22[0] = *(os_log_t *)(v1 + 16);
    uint64_t v14 = swift_allocObject();
    long long v15 = a1[3];
    *(_OWORD *)(v14 + 56) = a1[2];
    *(_OWORD *)(v14 + 72) = v15;
    long long v16 = a1[5];
    *(_OWORD *)(v14 + 88) = a1[4];
    *(_OWORD *)(v14 + 104) = v16;
    long long v17 = a1[1];
    *(_OWORD *)(v14 + 24) = *a1;
    *(void *)(v14 + 16) = v1;
    *(_OWORD *)(v14 + 40) = v17;
    aBlock[4] = sub_24885CCA8;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24885B9A0;
    aBlock[3] = &block_descriptor_2;
    unint64_t v18 = _Block_copy(aBlock);
    swift_retain();
    sub_24885CCB4((uint64_t)v24);
    sub_24887C668();
    v22[1] = (os_log_t)MEMORY[0x263F8EE78];
    sub_248847078(&qword_26B143BA8, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B143BF0);
    sub_2488470C0((unint64_t *)&unk_26B143BF8, &qword_26B143BF0);
    sub_24887CBE8();
    MEMORY[0x24C581E00](0, v10, v6, v18);
    _Block_release(v18);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_release();
  }
  else
  {
    v22[0] = (os_log_t)sub_24887C5F8();
    os_log_type_t v19 = sub_24887CA98();
    if (os_log_type_enabled(v22[0], v19))
    {
      double v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v20 = 0;
      _os_log_impl(&dword_248827000, v22[0], v19, "TapToRadar is not available on this platform.", v20, 2u);
      MEMORY[0x24C582D20](v20, -1, -1);
    }
    os_log_t v21 = v22[0];
  }
}

uint64_t sub_24885BE20(uint64_t result)
{
  uint64_t v1 = result;
  if (qword_26B142FA8 != -1) {
    uint64_t result = swift_once();
  }
  if (byte_26B1433C6[0] == 1)
  {
    uint64_t result = sub_24885C638(&OBJC_IVAR____TtC18AudioAnalyticsBase19NotificationManager_radarRequestLastFired, "Less than 10 minutes since last notification. Not spawning notification.");
    if (result)
    {
      uint64_t v2 = sub_24887C5F8();
      os_log_type_t v3 = sub_24887CAC8();
      if (os_log_type_enabled(v2, v3))
      {
        uint64_t v4 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v4 = 0;
        _os_log_impl(&dword_248827000, v2, v3, "Creating TapToRadar Draft.", v4, 2u);
        MEMORY[0x24C582D20](v4, -1, -1);
      }

      swift_retain();
      RadarDraft.send(for:completionHandler:)(0, 0, (uint64_t)sub_24885CF7C, v1);
      return swift_release();
    }
  }
  return result;
}

void sub_24885BF80(void *a1)
{
  if (a1)
  {
    id v2 = a1;
    if (qword_26B143A68 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_24887C618();
    __swift_project_value_buffer(v3, (uint64_t)qword_26B143A48);
    id v4 = a1;
    id v5 = a1;
    oslog = sub_24887C5F8();
    os_log_type_t v6 = sub_24887CAB8();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v14 = v8;
      *(_DWORD *)uint64_t v7 = 136380675;
      swift_getErrorValue();
      uint64_t v9 = sub_24887CFA8();
      sub_24882CAE0(v9, v10, &v14);
      sub_24887CB88();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_248827000, oslog, v6, "Failed to create radar. { err=%{private}s }", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C582D20](v8, -1, -1);
      MEMORY[0x24C582D20](v7, -1, -1);

      return;
    }
  }
  else
  {
    oslog = sub_24887C5F8();
    os_log_type_t v11 = sub_24887CAC8();
    if (os_log_type_enabled(oslog, v11))
    {
      long long v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v12 = 0;
      _os_log_impl(&dword_248827000, oslog, v11, "Successfully surfaced overload notification.", v12, 2u);
      MEMORY[0x24C582D20](v12, -1, -1);
    }
  }
}

uint64_t NotificationManager.surfaceAlertNotification(_:)(uint64_t a1)
{
  uint64_t v3 = sub_24887C648();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  os_log_type_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24887C688();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v11 = *(_OWORD *)(a1 + 64);
  long long v12 = *(_OWORD *)(a1 + 96);
  v23[5] = *(_OWORD *)(a1 + 80);
  v23[6] = v12;
  uint64_t v24 = *(void *)(a1 + 112);
  long long v13 = *(_OWORD *)(a1 + 16);
  v23[0] = *(_OWORD *)a1;
  v23[1] = v13;
  long long v14 = *(_OWORD *)(a1 + 48);
  v23[2] = *(_OWORD *)(a1 + 32);
  void v23[3] = v14;
  void v23[4] = v11;
  v21[0] = *(void *)(v1 + 16);
  uint64_t v15 = swift_allocObject();
  long long v16 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v15 + 88) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v15 + 104) = v16;
  *(_OWORD *)(v15 + 120) = *(_OWORD *)(a1 + 96);
  long long v17 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v15 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v15 + 40) = v17;
  long long v18 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v15 + 56) = *(_OWORD *)(a1 + 32);
  *(void *)(v15 + 16) = v1;
  *(void *)(v15 + 136) = *(void *)(a1 + 112);
  *(_OWORD *)(v15 + 72) = v18;
  aBlock[4] = sub_24885CDA8;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24885B9A0;
  aBlock[3] = &block_descriptor_6;
  os_log_type_t v19 = _Block_copy(aBlock);
  swift_retain();
  sub_24885CDB4((uint64_t)v23);
  sub_24887C668();
  v21[1] = MEMORY[0x263F8EE78];
  sub_248847078(&qword_26B143BA8, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143BF0);
  sub_2488470C0((unint64_t *)&unk_26B143BF8, &qword_26B143BF0);
  sub_24887CBE8();
  MEMORY[0x24C581E00](0, v10, v6, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

void sub_24885C52C(uint64_t a1, uint64_t a2)
{
  if (sub_24885C638(&OBJC_IVAR____TtC18AudioAnalyticsBase19NotificationManager_alertNotificationLastFired, "Less than 10 minutes since last alert notification. Not spawning notification."))
  {
    long long v3 = *(_OWORD *)(a2 + 80);
    v9[4] = *(_OWORD *)(a2 + 64);
    v9[5] = v3;
    v9[6] = *(_OWORD *)(a2 + 96);
    uint64_t v10 = *(void *)(a2 + 112);
    long long v4 = *(_OWORD *)(a2 + 16);
    v9[0] = *(_OWORD *)a2;
    v9[1] = v4;
    long long v5 = *(_OWORD *)(a2 + 48);
    uint64_t v9[2] = *(_OWORD *)(a2 + 32);
    v9[3] = v5;
    _s18AudioAnalyticsBase17AlertNotificationV7surfaceyyACFZ_0((double *)v9);
    oslog = sub_24887C5F8();
    os_log_type_t v6 = sub_24887CAC8();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_248827000, oslog, v6, "Surfaced AlertNotification.", v7, 2u);
      MEMORY[0x24C582D20](v7, -1, -1);
    }
  }
}

BOOL sub_24885C638(uint64_t *a1, const char *a2)
{
  uint64_t v5 = v2;
  uint64_t v6 = sub_24887C5B8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24887C5A8();
  sub_24887C598();
  double v11 = v10;
  long long v12 = *(void (**)(char *, uint64_t))(v7 + 8);
  v12(v9, v6);
  uint64_t v13 = *a1;
  double v14 = v11 - *(double *)(v5 + v13);
  if (qword_26B143C68 != -1) {
    swift_once();
  }
  double v15 = *(double *)&qword_26B143C60 * 10.0;
  if (v14 < *(double *)&qword_26B143C60 * 10.0)
  {
    long long v18 = sub_24887C5F8();
    os_log_type_t v19 = sub_24887CAC8();
    if (os_log_type_enabled(v18, v19))
    {
      double v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v20 = 0;
      _os_log_impl(&dword_248827000, v18, v19, a2, v20, 2u);
      MEMORY[0x24C582D20](v20, -1, -1);
    }
  }
  else
  {
    sub_24887C5A8();
    sub_24887C598();
    uint64_t v17 = v16;
    v12(v9, v6);
    *(void *)(v5 + v13) = v17;
  }
  return v14 >= v15;
}

uint64_t NotificationManager.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18AudioAnalyticsBase19NotificationManager_logger;
  uint64_t v2 = sub_24887C618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t NotificationManager.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18AudioAnalyticsBase19NotificationManager_logger;
  uint64_t v2 = sub_24887C618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_24885C93C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24887CAE8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24887CAD8();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_24887C688();
  MEMORY[0x270FA5388](v7 - 8);
  v12[1] = sub_248830D64();
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_24887CC38();
  swift_bridgeObjectRelease();
  sub_24887C668();
  uint64_t v13 = MEMORY[0x263F8EE78];
  sub_248847078((unint64_t *)&qword_26B143CA0, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C20);
  sub_2488470C0((unint64_t *)&qword_26B143C28, &qword_26B143C20);
  sub_24887CBE8();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F130], v2);
  *(void *)(v0 + 16) = sub_24887CB18();
  uint64_t v8 = OBJC_IVAR____TtC18AudioAnalyticsBase19NotificationManager_logger;
  if (qword_26B143A68 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_24887C618();
  uint64_t v10 = __swift_project_value_buffer(v9, (uint64_t)qword_26B143A48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v1 + v8, v10, v9);
  *(void *)(v1 + OBJC_IVAR____TtC18AudioAnalyticsBase19NotificationManager_radarRequestLastFired) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC18AudioAnalyticsBase19NotificationManager_alertNotificationLastFired) = 0;
  return v1;
}

uint64_t sub_24885CC40()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 120, 7);
}

uint64_t sub_24885CCA8()
{
  return sub_24885BE20(*(void *)(v0 + 16));
}

uint64_t sub_24885CCB4(uint64_t a1)
{
  return a1;
}

uint64_t sub_24885CD28()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v0 + 112)) {
    swift_release();
  }
  if (*(void *)(v0 + 128)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 144, 7);
}

void sub_24885CDA8()
{
  sub_24885C52C(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_24885CDB4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  uint64_t v3 = *(void *)(a1 + 104);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24885CE50(v2);
  sub_24885CE50(v3);
  return a1;
}

uint64_t sub_24885CE50(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_24885CE60()
{
  return type metadata accessor for NotificationManager();
}

uint64_t type metadata accessor for NotificationManager()
{
  uint64_t result = qword_26932CF50;
  if (!qword_26932CF50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24885CEB4()
{
  uint64_t result = sub_24887C618();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for NotificationManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for NotificationManager);
}

void sub_24885CF7C(void *a1)
{
}

void OSAllocatedUnfairLock<A>.load()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)a1 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(a1 + ((*(unsigned int *)(*(void *)a1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_24885D0CC(v3, a2);
  os_unfair_lock_unlock(v4);
}

void OSAllocatedUnfairLock<A>.store(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)a2 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(a2 + ((*(unsigned int *)(*(void *)a2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_24885D1D0(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_24885D0CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v2 + 16) - 8) + 16))(a2, a1);
}

void OSAllocatedUnfairLock<A>.load<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (os_unfair_lock_s *)(a2 + ((*(unsigned int *)(*(void *)a2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v2);
  sub_24885D280();
  os_unfair_lock_unlock(v2);
}

uint64_t sub_24885D1D0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, v3, v4);
}

uint64_t sub_24885D280()
{
  return swift_getAtKeyPath();
}

void OSAllocatedUnfairLock<A>.assign<A>(_:newValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)a3 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(a3 + ((*(unsigned int *)(*(void *)a3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_24885D44C(v3);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_24885D348(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, uint64_t))(v1 + 16))((char *)&v5 - v2, v3);
  return swift_setAtWritableKeyPath();
}

uint64_t sub_24885D44C(uint64_t a1)
{
  return sub_24885D348(a1);
}

void OSAllocatedUnfairLock<A>.exchange(_:)(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)a1 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(a1 + ((*(unsigned int *)(*(void *)a1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_24885D50C(v3, a2);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_24885D50C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v4 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a2, a1, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, v4, v5);
}

void OSAllocatedUnfairLock<A>.increment()(uint64_t a1)
{
  uint64_t v1 = a1 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)a1 + 16);
  uint64_t v2 = (os_unfair_lock_s *)(a1 + ((*(unsigned int *)(*(void *)a1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v2);
  sub_24885D660(v1);
  os_unfair_lock_unlock(v2);
}

uint64_t sub_24885D660(uint64_t a1)
{
  return sub_24885D72C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), MEMORY[0x263F8DF30]);
}

void OSAllocatedUnfairLock<A>.decrement()(uint64_t a1)
{
  uint64_t v1 = a1 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)a1 + 16);
  uint64_t v2 = (os_unfair_lock_s *)(a1 + ((*(unsigned int *)(*(void *)a1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v2);
  sub_24885D8E4(v1);
  os_unfair_lock_unlock(v2);
}

uint64_t sub_24885D72C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, char *, uint64_t, void))
{
  unint64_t v14 = a4;
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  swift_getAssociatedConformanceWitness();
  sub_24887CF68();
  sub_24887CF38();
  v14(a1, v8, a2, *(void *)(v10 + 8));
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_24885D8E4(uint64_t a1)
{
  return sub_24885D72C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), MEMORY[0x263F8DF38]);
}

void OSAllocatedUnfairLock<A>.fetchAdd(_:)(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)a1 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(a1 + ((*(unsigned int *)(*(void *)a1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_24885D9BC(v3, a2);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_24885D9BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24885DABC(a1, MEMORY[0x263F8DF30], a2);
}

void OSAllocatedUnfairLock<A>.fetchSub(_:)(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)a1 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(a1 + ((*(unsigned int *)(*(void *)a1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_24885DA90(v3, a2);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_24885DA90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24885DABC(a1, MEMORY[0x263F8DF38], a2);
}

uint64_t sub_24885DABC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a3, a1, v6);
  return a2(a1, v8, v6, *(void *)(v7 + 8));
}

uint64_t sub_24885DB50()
{
  type metadata accessor for OsTransactionHandler();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_24885E33C();
  qword_26B1435A0 = v0;
  return result;
}

uint64_t static OsTransactionHandler.shared.getter()
{
  if (qword_26B142FE8 != -1) {
    swift_once();
  }
  return swift_retain();
}

Swift::Void __swiftcall OsTransactionHandler.sessionStarted(for:)(Swift::Int64 a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24887C5B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (os_unfair_lock_s *)(*(void *)(v2 + 16) + 16);
  os_unfair_lock_lock(v8);
  if (!*(void *)(v2 + 24))
  {
    *(void *)(v2 + 24) = os_transaction_create();
    swift_unknownObjectRelease();
    sub_24887C5A8();
    sub_24887C598();
    uint64_t v10 = v9;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(void *)(v2 + OBJC_IVAR____TtC18AudioAnalyticsBase20OsTransactionHandler_lastActiveTime) = v10;
    double v11 = sub_24887C5F8();
    os_log_type_t v12 = sub_24887CAA8();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 134217984;
      Swift::Int64 v14 = a1;
      sub_24887CB88();
      _os_log_impl(&dword_248827000, v11, v12, "Marking dirty, created OsTransaction. { reporterID=%lld }", v13, 0xCu);
      MEMORY[0x24C582D20](v13, -1, -1);
    }
  }
  swift_beginAccess();
  sub_24883A9D8(&v15, a1);
  swift_endAccess();
  os_unfair_lock_unlock(v8);
}

Swift::Void __swiftcall OsTransactionHandler.sessionStopped(for:)(Swift::Int64 a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24887C5B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v8);
  uint64_t v9 = v1 + OBJC_IVAR____TtC18AudioAnalyticsBase20OsTransactionHandler_activeReporterIDs;
  swift_beginAccess();
  sub_24885EB80(a1);
  swift_endAccess();
  if (*(void *)(v2 + 24) && !*(void *)(*(void *)v9 + 16))
  {
    *(void *)(v2 + 24) = 0;
    swift_unknownObjectRelease();
    sub_24887C5A8();
    sub_24887C598();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(void *)(v2 + OBJC_IVAR____TtC18AudioAnalyticsBase20OsTransactionHandler_lastActiveTime) = v11;
    os_log_type_t v12 = sub_24887C5F8();
    os_log_type_t v13 = sub_24887CAA8();
    if (os_log_type_enabled(v12, v13))
    {
      Swift::Int64 v14 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)Swift::Int64 v14 = 134217984;
      v15[1] = a1;
      sub_24887CB88();
      _os_log_impl(&dword_248827000, v12, v13, "Marking clean, setting OsTransaction to nil. { reporterID=%lld }", v14, 0xCu);
      MEMORY[0x24C582D20](v14, -1, -1);
    }
  }
  os_unfair_lock_unlock(v8);
}

Swift::Bool __swiftcall OsTransactionHandler.inactive()()
{
  uint64_t v1 = sub_24887C5B8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v5);
  if (*(void *)(v0 + 24))
  {
    Swift::Bool v6 = 0;
  }
  else
  {
    double v7 = *(double *)(v0 + OBJC_IVAR____TtC18AudioAnalyticsBase20OsTransactionHandler_lastActiveTime);
    sub_24887C5A8();
    sub_24887C598();
    double v9 = v8;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    Swift::Bool v6 = v7 < v9 + -10.0;
  }
  os_unfair_lock_unlock(v5);
  return v6;
}

Swift::Void __swiftcall OsTransactionHandler.expire()()
{
  uint64_t v1 = v0;
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v2);
  if (*(void *)(v0 + 24))
  {
    uint64_t v3 = sub_24887C5F8();
    os_log_type_t v4 = sub_24887CAA8();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_248827000, v3, v4, "Expiring OsTransaction.", v5, 2u);
      MEMORY[0x24C582D20](v5, -1, -1);
    }

    *(void *)(v1 + 24) = 0;
    swift_unknownObjectRelease();
  }
  os_unfair_lock_unlock(v2);
}

uint64_t OsTransactionHandler.deinit()
{
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC18AudioAnalyticsBase20OsTransactionHandler_logger;
  uint64_t v2 = sub_24887C618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t OsTransactionHandler.__deallocating_deinit()
{
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC18AudioAnalyticsBase20OsTransactionHandler_logger;
  uint64_t v2 = sub_24887C618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_24885E33C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24887C5B8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B143D18);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 16) = 0;
  *(void *)(v1 + 16) = v6;
  *(void *)(v1 + 24) = 0;
  uint64_t v7 = OBJC_IVAR____TtC18AudioAnalyticsBase20OsTransactionHandler_logger;
  if (qword_26B143080 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_24887C618();
  uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)qword_26B143060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v1 + v7, v9, v8);
  *(void *)(v1 + OBJC_IVAR____TtC18AudioAnalyticsBase20OsTransactionHandler_activeReporterIDs) = MEMORY[0x263F8EE88];
  uint64_t v10 = OBJC_IVAR____TtC18AudioAnalyticsBase20OsTransactionHandler_lastActiveTime;
  sub_24887C5A8();
  sub_24887C598();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(void *)(v1 + v10) = v12;
  return v1;
}

void *sub_24885E4E4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143CE8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24887CC08();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    os_log_type_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *os_log_type_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24885E698()
{
  return sub_24885E848((uint64_t *)&unk_26932CF60);
}

void *sub_24885E6A4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143CF0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24887CC08();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24885E83C()
{
  return sub_24885E848((uint64_t *)&unk_26932CF70);
}

void *sub_24885E848(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_24887CC08();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24885E9D4@<X0>(char a1@<W0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  sub_24887D008();
  swift_bridgeObjectRetain();
  sub_24887C808();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_24887D068();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v11 = *(void *)&aRoot_3[8 * a1];
    while (*(void *)&aRoot_3[8 * *(char *)(*(void *)(v6 + 48) + v9)] != v11)
    {
      char v12 = sub_24887CF48();
      swift_bridgeObjectRelease_n();
      if (v12) {
        goto LABEL_8;
      }
      unint64_t v9 = (v9 + 1) & v10;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_8:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    uint64_t v16 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_24885E848((uint64_t *)&unk_26932CF60);
      uint64_t v15 = v16;
    }
    *a2 = *(unsigned char *)(*(void *)(v15 + 48) + v9);
    sub_24885EDBC(v9);
    *uint64_t v3 = v16;
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_6:
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = 3;
  }
  return result;
}

uint64_t sub_24885EB80(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = sub_24887CFF8();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(v4 + 48);
  if (*(void *)(v8 + 8 * v7) != a1)
  {
    uint64_t v9 = ~v6;
    do
    {
      unint64_t v7 = (v7 + 1) & v9;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(v8 + 8 * v7) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v2;
  uint64_t v14 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_24885E6A4();
    uint64_t v11 = v14;
  }
  uint64_t v12 = *(void *)(*(void *)(v11 + 48) + 8 * v7);
  sub_24885EF7C(v7);
  *uint64_t v2 = v14;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_24885EC8C()
{
  return type metadata accessor for OsTransactionHandler();
}

uint64_t type metadata accessor for OsTransactionHandler()
{
  uint64_t result = qword_26B1435A8;
  if (!qword_26B1435A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24885ECE0()
{
  uint64_t result = sub_24887C618();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for OsTransactionHandler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for OsTransactionHandler);
}

unint64_t sub_24885EDBC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_24887CBF8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_24887D008();
        sub_24887C808();
        swift_bridgeObjectRelease();
        unint64_t v10 = sub_24887D068() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(v3 + 48);
          uint64_t v12 = (unsigned char *)(v11 + v2);
          unint64_t v13 = (unsigned char *)(v11 + v6);
          if (v2 != v6 || (int64_t v2 = v6, v12 >= v13 + 1))
          {
            unsigned char *v12 = *v13;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v14 = *(void *)(v3 + 16);
  BOOL v15 = __OFSUB__(v14, 1);
  uint64_t v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_24885EF7C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_24887CBF8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(v3 + 48);
        uint64_t v11 = (void *)(v10 + 8 * v6);
        uint64_t v12 = sub_24887CFF8() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            BOOL v15 = (void *)(v10 + 8 * v2);
            if (v2 != v6 || (int64_t v2 = v6, v15 >= v11 + 1))
            {
              void *v15 = *v11;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t PeriodicClosure.__allocating_init(at:)(double a1)
{
  uint64_t v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D08);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 24) = 0;
  *(void *)(v3 + 16) = 0;
  *(void *)(v2 + 16) = v3;
  *(double *)(v2 + 24) = a1;
  return v2;
}

uint64_t PeriodicClosure.init(at:)(double a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D08);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 24) = 0;
  *(void *)(v3 + 16) = 0;
  *(void *)(v1 + 16) = v3;
  *(double *)(v1 + 24) = a1;
  return v1;
}

uint64_t sub_24885F1B8(uint64_t (*a1)(uint64_t))
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  sub_24884705C((double *)(v3 + 16), &v6);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  BOOL v4 = v6;
  uint64_t result = swift_release();
  if (v4) {
    return a1(result);
  }
  return result;
}

uint64_t sub_24885F248()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_24885F42C((void *)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  return swift_release();
}

uint64_t sub_24885F2BC@<X0>(double *a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t v6 = sub_24887C5B8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388]();
  unint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24887C5A8();
  sub_24887C598();
  double v11 = v10;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  double v13 = *a1;
  if (*a1 <= v11) {
    *a1 = v11 + *(double *)(a2 + 24);
  }
  *a3 = v13 <= v11;
  return result;
}

uint64_t PeriodicClosure.deinit()
{
  swift_release();
  return v0;
}

uint64_t PeriodicClosure.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

double sub_24885F42C(void *a1)
{
  uint64_t v2 = *(double **)(v1 + 16);
  double result = *v2;
  *a1 = *(void *)v2;
  return result;
}

uint64_t type metadata accessor for PeriodicClosure()
{
  return self;
}

uint64_t method lookup function for PeriodicClosure(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PeriodicClosure);
}

uint64_t dispatch thunk of PeriodicClosure.__allocating_init(at:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of PeriodicClosure.invoke(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of PeriodicClosure.reset()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

id static Predicate.build(_:)()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_24887C738();
  id v2 = objc_msgSend(v0, sel_buildPredicate_, v1);

  return v2;
}

id static Predicate.evaluate(_:with:)(uint64_t a1)
{
  id v2 = self;
  uint64_t v3 = (void *)sub_24887C698();
  id v4 = objc_msgSend(v2, sel_evaluatePredicate_with_, a1, v3);

  return v4;
}

ValueMetadata *type metadata accessor for Predicate()
{
  return &type metadata for Predicate;
}

uint64_t Preference.init(_:initValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v6[0] = a1;
  v6[1] = a2;
  v6[2] = 0xD00000000000001FLL;
  v6[3] = 0x8000000248882780;
  return Preference.init(_:initValue:)((uint64_t)v6, a3, a4, a5);
}

uint64_t Preference.query()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  Preference.sync()();
  uint64_t v5 = v2 + *(int *)(a1 + 28);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16);
  return v6(a2, v5);
}

AudioAnalyticsBase::PreferenceInformation __swiftcall PreferenceInformation.init(key:applicationID:)(Swift::String key, Swift::String applicationID)
{
  *uint64_t v2 = key;
  v2[1] = applicationID;
  result.applicationID = applicationID;
  result.key = key;
  return result;
}

uint64_t PreferenceInformation.key.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PreferenceInformation.applicationID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Preference.init(_:initValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(void *)(a4 + 16) = v7;
  *(void *)(a4 + 24) = v8;
  uint64_t v9 = type metadata accessor for Preference();
  uint64_t v13 = *(void *)(a3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a4 + *(int *)(v9 + 32), a2, a3);
  uint64_t v10 = a4 + *(int *)(v9 + 28);
  double v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 32);
  return v11(v10, a2, a3);
}

uint64_t Preference.set(_:saveToDisk:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = sub_24887CB68();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v17 - v11;
  uint64_t v13 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v10);
  BOOL v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v13 + 24))((char *)v3 + *(int *)(a3 + 28), (char *)v3 + *(int *)(a3 + 32), v7);
    if (a2) {
      return _s18AudioAnalyticsBase17DefaultsUtilitiesO3set5value3key13applicationID8userNameyyXlSg_S3StFZ_0(0);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v12, v7);
    (*(void (**)(char *, char *, uint64_t))(v13 + 24))((char *)v3 + *(int *)(a3 + 28), v15, v7);
    if (a2) {
      static DefaultsUtilities.setGeneric<A>(value:key:applicationID:userName:)((uint64_t)v15, *v3, v3[1], v3[2], v3[3], 0x656C69626F6DLL, 0xE600000000000000, v7);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v7);
  }
  return result;
}

Swift::Void __swiftcall Preference.sync()()
{
  uint64_t v2 = v0;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = sub_24887CB68();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v12 - v7;
  uint64_t v9 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v12 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DefaultsUtilities.get<A>(key:applicationID:userName:)(0xE600000000000000, v3, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(v1 + *(int *)(v2 + 28), v1 + *(int *)(v2 + 32), v3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, v3);
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 40))(v1 + *(int *)(v2 + 28), v11, v3);
  }
}

uint64_t type metadata accessor for Preference()
{
  return __swift_instantiateGenericMetadata();
}

Swift::Void __swiftcall Preference.reset()()
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 24))(v1 + *(int *)(v0 + 28), v1 + *(int *)(v0 + 32));
}

uint64_t Preference.info.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Preference.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 28));
}

uint64_t Preference.initValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 32));
}

uint64_t destroy for PreferenceInformation()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for PreferenceInformation(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PreferenceInformation(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for PreferenceInformation(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PreferenceInformation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PreferenceInformation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PreferenceInformation()
{
  return &type metadata for PreferenceInformation;
}

uint64_t sub_24885FF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_24885FF0C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24885FFA8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = v7 + v6;
  unint64_t v9 = ((v7 + v6 + ((v6 + 32) & ~v6)) & ~v6) + v7;
  if (v6 > 7 || (*(_DWORD *)(v5 + 80) & 0x100000) != 0 || v9 > 0x18)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v13 = ~v6;
    uint64_t v14 = a2[1];
    *a1 = *a2;
    a1[1] = v14;
    uint64_t v15 = a2[3];
    a1[2] = a2[2];
    a1[3] = v15;
    uint64_t v16 = ((unint64_t)a1 + v6 + 32) & ~v6;
    uint64_t v17 = ((unint64_t)a2 + v6 + 32) & ~v6;
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(v16, v17, v4);
    v18((v8 + v16) & v13, (v8 + v17) & v13, v4);
  }
  return a1;
}

uint64_t sub_248860100(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v10 = v5 + 8;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (a1 + v6 + 32) & ~v6;
  v11(v7, v4);
  uint64_t v8 = (*(void *)(v10 + 56) + v6 + v7) & ~v6;
  return ((uint64_t (*)(uint64_t, uint64_t))v11)(v8, v4);
}

void *sub_2488601C0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  uint64_t v8 = *(void *)(v6 - 8) + 16;
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v10 = ((unint64_t)a2 + v9 + 32) & ~v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7(((unint64_t)a1 + v9 + 32) & ~v9, v10, v6);
  v7((*(void *)(v8 + 48) + v9 + (((unint64_t)a1 + v9 + 32) & ~v9)) & ~v9, (*(void *)(v8 + 48) + v9 + v10) & ~v9, v6);
  return a1;
}

void *sub_248860290(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 24);
  uint64_t v9 = v7 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = ((unint64_t)a2 + v10 + 32) & ~v10;
  v8(((unint64_t)a1 + v10 + 32) & ~v10, v11, v6);
  v8((*(void *)(v9 + 40) + v10 + (((unint64_t)a1 + v10 + 32) & ~v10)) & ~v10, (*(void *)(v9 + 40) + v10 + v11) & ~v10, v6);
  return a1;
}

_OWORD *sub_24886038C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  uint64_t v8 = v6 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 32) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 32) & ~v9;
  v7(v10, v11, v5);
  v7((*(void *)(v8 + 32) + v9 + v10) & ~v9, (*(void *)(v8 + 32) + v9 + v11) & ~v9, v5);
  return a1;
}

void *sub_248860448(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 40);
  uint64_t v11 = v9 + 40;
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = ((unint64_t)a2 + v12 + 32) & ~v12;
  v10(((unint64_t)a1 + v12 + 32) & ~v12, v13, v8);
  v10((*(void *)(v11 + 24) + v12 + (((unint64_t)a1 + v12 + 32) & ~v12)) & ~v12, (*(void *)(v11 + 24) + v12 + v13) & ~v12, v8);
  return a1;
}

uint64_t sub_248860524(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v9 = a2 - v8;
  if (a2 <= v8) {
    goto LABEL_23;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v10 = ((v7 + v6 + ((v6 + 32) & ~v6)) & ~v6) + v7;
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 32) & ~v6);
      }
      unint64_t v16 = *((void *)a1 + 1);
      if (v16 >= 0xFFFFFFFF) {
        LODWORD(v16) = -1;
      }
      return (v16 + 1);
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v10 | v15) + 1;
}

void sub_2488606D0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v9 + ((v9 + 32) & ~v9)) & ~v9)
      + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x248860940);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 32] & ~v9;
          int64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *((void *)a1 + 2) = 0;
          *((void *)a1 + 3) = 0;
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t static TapToRadar.isAvailable()()
{
  return AudioAnalyticsTapToRadarWrapperIsAvailable();
}

void RadarDraft.send(for:completionHandler:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = *(void *)(v4 + 88);
  int v15 = (void *)sub_24887C738();
  uint64_t v6 = (void *)sub_24887C738();
  unsigned int v7 = (void *)sub_24887C738();
  sub_24887C518();
  unsigned int v8 = (void *)sub_24887C978();
  uint64_t v9 = (void *)sub_24887C738();
  size_t v10 = (void *)sub_24887C738();
  if (a2) {
    a2 = (void *)sub_24887C738();
  }
  if (a3)
  {
    aBlock[4] = a3;
    aBlock[5] = a4;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_248860B54;
    aBlock[3] = &block_descriptor_3;
    BOOL v11 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
  }
  else
  {
    BOOL v11 = 0;
  }
  AudioAnalyticsTapToRadarWrapperSend(v15, v6, v7, v8, v9, v10, v14, a2, v11);
  _Block_release(v11);
}

__n128 RadarDraft.init(title:problemDescription:displayReason:attachments:component:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  __n128 result = *(__n128 *)a8;
  long long v10 = *(_OWORD *)(a8 + 16);
  uint64_t v11 = *(void *)(a8 + 32);
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(__n128 *)(a9 + 56) = result;
  *(_OWORD *)(a9 + 72) = v10;
  *(void *)(a9 + 88) = v11;
  return result;
}

void sub_248860B54(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void __swiftcall RadarComponent.init(name:version:identifier:)(AudioAnalyticsBase::RadarComponent *__return_ptr retstr, Swift::String name, Swift::String version, Swift::Int identifier)
{
  retstr->name = name;
  retstr->version = version;
  retstr->identifier = identifier;
}

ValueMetadata *type metadata accessor for TapToRadar()
{
  return &type metadata for TapToRadar;
}

uint64_t destroy for RadarDraft()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for RadarDraft(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RadarDraft(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for RadarDraft(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for RadarDraft(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RadarDraft(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RadarDraft()
{
  return &type metadata for RadarDraft;
}

void *initializeWithCopy for RadarComponent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RadarComponent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for RadarComponent(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for RadarComponent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RadarComponent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RadarComponent()
{
  return &type metadata for RadarComponent;
}

void sub_2488610DC(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  if ((a2 & 1) == 0)
  {
    sub_2488648EC(a1, 7);
    if (v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  CommonConfigFields.init(dict:)(a1, (uint64_t)v59);
  if (v3) {
    goto LABEL_5;
  }
  uint64_t v57 = a3;
  char v55 = BYTE2(v59[0]);
  __int16 v56 = v59[0];
  uint64_t v7 = v59[1];
  uint64_t v8 = v59[2];
  uint64_t v10 = v59[3];
  uint64_t v9 = v59[4];
  if (a2) {
    int v11 = 263;
  }
  else {
    int v11 = 7;
  }
  uint64_t v12 = v59[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int v60 = v11;
  uint64_t v13 = sub_24886360C(5, a1);
  id v58 = sub_248843ADC(v13, v14);
  uint64_t v54 = v7;
  uint64_t v52 = v12;
  uint64_t v53 = v9;
  uint64_t v51 = v10;
  swift_bridgeObjectRelease();
  id v15 = v58;
  int v16 = 1;
  uint64_t v17 = sub_24886360C(1, a1);
  if (v18)
  {
    uint64_t v19 = v17;
    unint64_t v20 = v18;
    uint64_t v21 = sub_248879D44(v17, v18);
    unsigned int v22 = sub_24882AB98(a2 & 1, 0xD000000000000016, 0x8000000248882E30, v19, v20, v21 & 0x1FFFF);
    swift_bridgeObjectRelease();
    int v16 = HIWORD(v22) & 1;
  }
  else
  {
    LOWORD(v22) = 0;
  }
  uint64_t v23 = sub_24886360C(0, a1);
  if (v24)
  {
    uint64_t v25 = v23;
    unint64_t v26 = v24;
    unint64_t v27 = sub_24887AF84(v23, v24);
    unint64_t v28 = sub_24882AEC8(a2 & 1, 0xD00000000000001ALL, 0x8000000248882E10, v25, v26, v27 | ((HIDWORD(v27) & 1) << 32));
    swift_bridgeObjectRelease();
    uint64_t v29 = HIDWORD(v28) & 1;
  }
  else
  {
    LODWORD(v28) = 0;
    LOBYTE(v29) = 1;
  }
  char v45 = v29;
  uint64_t v30 = v8;
  char v31 = sub_2488637C4(2, a1);
  BOOL v47 = v31 == 2;
  char v46 = sub_2488637C4(4, a1);
  uint64_t v32 = sub_24886397C(6, a1);
  swift_bridgeObjectRelease();
  int v50 = v15;
  __int16 v49 = v22;
  int v48 = v28;
  if (!v32)
  {
    int v60 = v16;
    goto LABEL_25;
  }
  int64_t v33 = *(void *)(v32 + 16);
  if (!v33)
  {
    int v60 = v16;
    swift_bridgeObjectRelease();
LABEL_25:
    uint64_t v43 = MEMORY[0x263F8EE88];
LABEL_27:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_WORD *)uint64_t v57 = v56;
    *(unsigned char *)(v57 + 2) = v55;
    *(void *)(v57 + 8) = v54;
    *(void *)(v57 + 16) = v30;
    *(void *)(v57 + 24) = v51;
    *(void *)(v57 + 32) = v53;
    *(void *)(v57 + 40) = v52;
    *(void *)(v57 + 48) = v58;
    *(_WORD *)(v57 + 56) = v49;
    *(unsigned char *)(v57 + 58) = v60;
    *(_DWORD *)(v57 + 60) = v48;
    *(unsigned char *)(v57 + 64) = v45;
    *(unsigned char *)(v57 + 65) = (v47 | v31) & 1;
    *(unsigned char *)(v57 + 66) = v46 & 1;
    *(void *)(v57 + 72) = v43;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    return;
  }
  char v44 = v31;
  v59[0] = MEMORY[0x263F8EE78];
  sub_248841A90(0, v33, 0);
  uint64_t v34 = v59[0];
  uint64_t v35 = (void **)(v32 + 40);
  while (1)
  {
    uint64_t v36 = (uint64_t)*(v35 - 1);
    os_log_t v37 = *v35;
    swift_bridgeObjectRetain_n();
    v38._countAndFlagsBits = v36;
    v38._object = v37;
    Config.WorkerConfigs.init(rawValue:)(v38);
    char v39 = v61;
    if (v61 == 17) {
      break;
    }
    swift_bridgeObjectRelease();
    v59[0] = v34;
    unint64_t v41 = *(void *)(v34 + 16);
    unint64_t v40 = *(void *)(v34 + 24);
    if (v41 >= v40 >> 1)
    {
      sub_248841A90(v40 > 1, v41 + 1, 1);
      uint64_t v34 = v59[0];
    }
    v35 += 2;
    *(void *)(v34 + 16) = v41 + 1;
    *(unsigned char *)(v34 + v41 + 32) = v39;
    if (!--v33)
    {
      int v60 = v16;
      swift_bridgeObjectRelease();
      uint64_t v43 = sub_248856790(v34);
      swift_release();
      uint64_t v30 = v8;
      char v31 = v44;
      goto LABEL_27;
    }
  }
  sub_24882C828();
  swift_allocError();
  *(void *)uint64_t v42 = v36;
  *(void *)(v42 + 8) = v37;
  *(unsigned char *)(v42 + 16) = 2;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t RouterConfig.commonFields.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 2);
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  *(_WORD *)a1 = *(_WORD *)v1;
  *(unsigned char *)(a1 + 2) = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void *RouterConfig.predicate.getter()
{
  uint64_t v1 = *(void **)(v0 + 48);
  id v2 = v1;
  return v1;
}

uint64_t RouterConfig.audioEventType.getter()
{
  return *(unsigned __int16 *)(v0 + 56) | (*(unsigned __int8 *)(v0 + 58) << 16);
}

unint64_t RouterConfig.audioEventCategory.getter()
{
  return *(unsigned int *)(v0 + 60) | ((unint64_t)*(unsigned __int8 *)(v0 + 64) << 32);
}

uint64_t RouterConfig.broadcast.getter()
{
  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t RouterConfig.discard.getter()
{
  return *(unsigned __int8 *)(v0 + 66);
}

uint64_t RouterConfig.workers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for RouterConfig(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RouterConfig(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  __int16 v6 = *(_WORD *)(a2 + 56);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(_WORD *)(a1 + 56) = v6;
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_WORD *)(a1 + 65) = *(_WORD *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RouterConfig(uint64_t a1, __int16 *a2)
{
  __int16 v4 = *a2;
  *(unsigned char *)(a1 + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)a1 = v4;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 48);
  __int16 v6 = (void *)*((void *)a2 + 6);
  *(void *)(a1 + 48) = v6;
  id v7 = v6;

  __int16 v8 = a2[28];
  *(unsigned char *)(a1 + 58) = *((unsigned char *)a2 + 58);
  *(_WORD *)(a1 + 56) = v8;
  int v9 = *((_DWORD *)a2 + 15);
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  *(_DWORD *)(a1 + 60) = v9;
  *(unsigned char *)(a1 + 65) = *((unsigned char *)a2 + 65);
  *(unsigned char *)(a1 + 66) = *((unsigned char *)a2 + 66);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RouterConfig(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __int16 v4 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerConfig(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 72) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RouterConfig()
{
  return &type metadata for RouterConfig;
}

void *sub_248861B94(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v19 = *(void *)(a1 + 16);
  if (!v19) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v5 = a1;
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  __int16 v8 = (void *)MEMORY[0x263F8EE78];
  uint64_t v18 = v6;
  while (1)
  {
    uint64_t v9 = *(void *)(v5 + 8 * v7 + 32);
    swift_bridgeObjectRetain_n();
    sub_2488610DC(v9, a2 & 1, (uint64_t)&v29);
    if (v3) {
      break;
    }
    swift_bridgeObjectRelease();
    __int16 v10 = v29;
    char v11 = v30;
    uint64_t v12 = v31;
    uint64_t v13 = v32;
    uint64_t v43 = v33;
    uint64_t v27 = v34;
    long long v28 = v35;
    char v25 = v37;
    __int16 v26 = v36;
    char v23 = v39;
    int v24 = v38;
    char v21 = v41;
    char v22 = v40;
    uint64_t v20 = v42;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      __int16 v8 = sub_2488386B0(0, v8[2] + 1, 1, v8);
    }
    unint64_t v15 = v8[2];
    unint64_t v14 = v8[3];
    if (v15 >= v14 >> 1) {
      __int16 v8 = sub_2488386B0((void *)(v14 > 1), v15 + 1, 1, v8);
    }
    v8[2] = v15 + 1;
    int v16 = &v8[10 * v15];
    *((_WORD *)v16 + 16) = v10;
    ++v7;
    *((unsigned char *)v16 + 34) = v11;
    v16[5] = v12;
    v16[6] = v13;
    v16[7] = v43;
    v16[8] = v27;
    *(_OWORD *)(v16 + 9) = v28;
    *((_WORD *)v16 + 44) = v26;
    *((unsigned char *)v16 + 90) = v25;
    *((_DWORD *)v16 + 23) = v24;
    *((unsigned char *)v16 + 96) = v23;
    *((unsigned char *)v16 + 97) = v22;
    *((unsigned char *)v16 + 98) = v21;
    v16[13] = v20;
    uint64_t v5 = v18;
    if (v19 == v7)
    {
      swift_bridgeObjectRelease();
      return v8;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_248861DA4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(result + 16);
  if (v5)
  {
    unint64_t v6 = 0;
    uint64_t v7 = MEMORY[0x263F8EE78];
    uint64_t v32 = *(void *)(result + 16);
    uint64_t v30 = v5 - 1;
    uint64_t v35 = result;
    do
    {
      uint64_t v31 = v7;
      uint64_t v8 = 80 * v6;
      unint64_t v9 = v6;
      while (1)
      {
        if (v9 >= *(void *)(result + 16))
        {
          __break(1u);
          return result;
        }
        uint64_t v38 = v8;
        unint64_t v39 = v9;
        uint64_t v47 = v4;
        __int16 v10 = *(_WORD *)(result + v8 + 32);
        char v11 = *(unsigned char *)(result + v8 + 34);
        uint64_t v45 = *(void *)(result + v8 + 40);
        uint64_t v12 = *(void *)(result + v8 + 56);
        uint64_t v46 = *(void *)(result + v8 + 48);
        uint64_t v42 = v12;
        uint64_t v43 = *(void *)(result + v8 + 64);
        uint64_t v13 = *(void **)(result + v8 + 80);
        uint64_t v40 = *(void *)(result + v8 + 72);
        __int16 v14 = *(_WORD *)(result + v8 + 88);
        char v41 = *(unsigned char *)(result + v8 + 90);
        int v15 = *(_DWORD *)(result + v8 + 92);
        char v44 = *(unsigned char *)(result + v8 + 96);
        uint64_t v16 = *(void *)(result + v8 + 104);
        char v17 = *(unsigned char *)(result + v8 + 98);
        char v18 = *(unsigned char *)(result + v8 + 97);
        v48[3] = &type metadata for RouterConfig;
        v48[4] = &protocol witness table for RouterConfig;
        uint64_t v19 = swift_allocObject();
        v48[0] = v19;
        __int16 v34 = v10;
        *(_WORD *)(v19 + 16) = v10;
        *(unsigned char *)(v19 + 18) = v11;
        *(void *)(v19 + 24) = v45;
        *(void *)(v19 + 32) = v46;
        *(void *)(v19 + 40) = v12;
        *(void *)(v19 + 48) = v43;
        *(void *)(v19 + 56) = v40;
        *(void *)(v19 + 64) = v13;
        *(_WORD *)(v19 + 72) = v14;
        *(unsigned char *)(v19 + 74) = v41;
        *(_DWORD *)(v19 + 76) = v15;
        *(unsigned char *)(v19 + 80) = v44;
        *(unsigned char *)(v19 + 81) = v18;
        *(unsigned char *)(v19 + 82) = v17;
        *(void *)(v19 + 88) = v16;
        uint64_t v33 = v13;
        id v20 = v13;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        id v21 = v20;
        char v22 = sub_248843BF8(v48, a2, a3);
        if (v47)
        {
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
          uint64_t v7 = v31;
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v7;
        }
        char v23 = v22;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
        if (v23) {
          break;
        }
        unint64_t v9 = v39 + 1;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v8 = v38 + 80;
        uint64_t v4 = 0;
        __n128 result = v35;
        if (v32 == v39 + 1)
        {
          uint64_t v7 = v31;
          goto LABEL_17;
        }
      }
      uint64_t v7 = v31;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v49 = v31;
      unint64_t v25 = v39;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_248841990(0, *(void *)(v31 + 16) + 1, 1);
        unint64_t v25 = v39;
        uint64_t v7 = v49;
      }
      unint64_t v27 = *(void *)(v7 + 16);
      unint64_t v26 = *(void *)(v7 + 24);
      if (v27 >= v26 >> 1)
      {
        unint64_t v29 = v25;
        sub_248841990(v26 > 1, v27 + 1, 1);
        unint64_t v25 = v29;
        uint64_t v7 = v49;
      }
      *(void *)(v7 + 16) = v27 + 1;
      uint64_t v28 = v7 + 80 * v27;
      *(_WORD *)(v28 + 32) = v34;
      unint64_t v6 = v25 + 1;
      *(unsigned char *)(v28 + 34) = v11;
      *(void *)(v28 + 40) = v45;
      *(void *)(v28 + 48) = v46;
      *(void *)(v28 + 56) = v42;
      *(void *)(v28 + 64) = v43;
      *(void *)(v28 + 72) = v40;
      *(void *)(v28 + 80) = v33;
      *(_WORD *)(v28 + 88) = v14;
      *(unsigned char *)(v28 + 90) = v41;
      *(_DWORD *)(v28 + 92) = v15;
      *(unsigned char *)(v28 + 96) = v44;
      *(unsigned char *)(v28 + 97) = v18;
      *(unsigned char *)(v28 + 98) = v17;
      *(void *)(v28 + 104) = v16;
      uint64_t v4 = 0;
      __n128 result = v35;
    }
    while (v30 != v25);
  }
  else
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_248862168(uint64_t *a1)
{
  uint64_t v14 = *a1;
  if (*(void *)(v14 + 16)
    && (unint64_t v4 = sub_248840EC8(7u), (v5 & 1) != 0)
    && (sub_24882E1C8(*(void *)(v14 + 56) + 32 * v4, (uint64_t)v12),
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C08),
        (swift_dynamicCast() & 1) != 0))
  {
    long long v13 = *(_OWORD *)(a1 + 1);
    uint64_t v2 = a1[3];
    uint64_t v6 = a1[4];
    char v7 = *((unsigned char *)a1 + 40);
    sub_24882E224((uint64_t)&v14);
    sub_24882E250((uint64_t)&v13);
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_248861B94(v11, v7);
    sub_24882E27C((uint64_t)&v14);
    sub_24882E2A8((uint64_t)&v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v1)
    {
      sub_24882E224((uint64_t)&v14);
      sub_24882E250((uint64_t)&v13);
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_248861DA4((uint64_t)v8, v2, v6);
      sub_24882E27C((uint64_t)&v14);
      sub_24882E2A8((uint64_t)&v13);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_24882C828();
    swift_allocError();
    *(void *)uint64_t v9 = 0xD000000000000018;
    *(void *)(v9 + 8) = 0x8000000248882DF0;
    *(unsigned char *)(v9 + 16) = 0;
    swift_willThrow();
  }
  return v2;
}

uint64_t sub_24886230C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 96, 7);
}

uint64_t sub_248862374@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)a1;
  if (*(void *)(*(void *)a1 + 16))
  {
    unint64_t v5 = sub_248840EC8(2u);
    if (v6)
    {
      sub_24882E1C8(*(void *)(v3 + 56) + 32 * v5, (uint64_t)v10);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B143BD8);
      if (swift_dynamicCast()) {
        return sub_24886246C(v9, a1[40], a2);
      }
    }
  }
  sub_24882C828();
  swift_allocError();
  *(void *)uint64_t v8 = 0xD00000000000001BLL;
  *(void *)(v8 + 8) = 0x8000000248882E50;
  *(unsigned char *)(v8 + 16) = 0;
  return swift_willThrow();
}

uint64_t sub_24886246C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  if ((a2 & 1) == 0)
  {
    sub_248864894(a1, 2);
    if (v3) {
      return swift_bridgeObjectRelease_n();
    }
  }
  CommonConfigFields.init(dict:)(a1, (uint64_t)v73);
  if (v3) {
    return swift_bridgeObjectRelease();
  }
  char v68 = BYTE2(v73[0]);
  __int16 v69 = v73[0];
  uint64_t v9 = v73[1];
  uint64_t v8 = v73[2];
  uint64_t v10 = v73[3];
  uint64_t v11 = v73[4];
  uint64_t v12 = v73[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v72 = v10;
  char v64 = a2;
  uint64_t v63 = a3;
  uint64_t v65 = v12;
  uint64_t v66 = v9;
  uint64_t v13 = sub_248835674(3, a1);
  uint64_t v14 = sub_248856690(v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v67 = v14;
  uint64_t v15 = sub_248835674(1, a1);
  uint64_t v16 = sub_248856690(v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v71 = v16;
  uint64_t v17 = sub_248835674(0, a1);
  uint64_t v18 = sub_248856690(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v70 = v18;
  uint64_t v57 = sub_248835834(2, a1);
  uint64_t v19 = sub_2488632C0(4, a1);
  swift_bridgeObjectRelease();
  uint64_t v20 = v19;
  uint64_t v21 = v72;
  if (!v20)
  {
    unint64_t v53 = sub_24882DA20(MEMORY[0x263F8EE78]);
    uint64_t v54 = v11;
    uint64_t v55 = v67;
LABEL_48:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_WORD *)uint64_t v63 = v69;
    *(unsigned char *)(v63 + 2) = v68;
    *(void *)(v63 + 8) = v66;
    *(void *)(v63 + 16) = v8;
    *(void *)(v63 + 24) = v21;
    *(void *)(v63 + 32) = v54;
    *(void *)(v63 + 40) = v12;
    *(void *)(v63 + 48) = v55;
    *(void *)(v63 + 56) = v71;
    *(void *)(v63 + 64) = v70;
    *(void *)(v63 + 72) = v57;
    *(void *)(v63 + 80) = v53;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v61 = v20 + 64;
  uint64_t v22 = 1 << *(unsigned char *)(v20 + 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & *(void *)(v20 + 64);
  int64_t v62 = (unint64_t)(v22 + 63) >> 6;
  uint64_t v25 = swift_bridgeObjectRetain();
  int64_t v26 = 0;
  unint64_t v58 = MEMORY[0x263F8EE80];
  if (!v24) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v27 = __clz(__rbit64(v24));
  v24 &= v24 - 1;
  int64_t v28 = v26;
  for (unint64_t i = v27 | (v26 << 6); ; unint64_t i = __clz(__rbit64(v32)) + (v31 << 6))
  {
    uint64_t v34 = v25;
    uint64_t v35 = (uint64_t *)(*(void *)(v25 + 48) + 16 * i);
    uint64_t v37 = *v35;
    unint64_t v36 = v35[1];
    uint64_t v38 = *(void *)(*(void *)(v25 + 56) + 8 * i);
    int v39 = sub_248879700(*v35, v36);
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_24882AB98(v64 & 1, 0xD00000000000002BLL, 0x8000000248882E70, v37, v36, v39 & 0x1FFFF);
    unsigned __int16 v41 = v40;
    if ((v40 & 0x10000) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v21 = v72;
    }
    else
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v73[0] = v58;
      unint64_t v43 = sub_248840F78(v41);
      uint64_t v44 = *(void *)(v58 + 16);
      BOOL v45 = (v42 & 1) == 0;
      uint64_t v46 = v44 + v45;
      if (__OFADD__(v44, v45)) {
        goto LABEL_50;
      }
      if (*(void *)(v58 + 24) >= v46)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          char v60 = v42;
          sub_24883A16C();
          char v42 = v60;
        }
      }
      else
      {
        char v59 = v42;
        sub_248839580(v46, isUniquelyReferenced_nonNull_native);
        unint64_t v47 = sub_248840F78(v41);
        int v49 = v48 & 1;
        char v42 = v59;
        if ((v59 & 1) != v49) {
          goto LABEL_53;
        }
        unint64_t v43 = v47;
      }
      int v50 = (void *)v73[0];
      unint64_t v58 = v73[0];
      if (v42)
      {
        *(void *)(*(void *)(v73[0] + 56) + 8 * v43) = v38;
      }
      else
      {
        *(void *)(v73[0] + 8 * (v43 >> 6) + 64) |= 1 << v43;
        *(_WORD *)(v50[6] + 2 * v43) = v41;
        *(void *)(v50[7] + 8 * v43) = v38;
        uint64_t v51 = v50[2];
        BOOL v30 = __OFADD__(v51, 1);
        uint64_t v52 = v51 + 1;
        if (v30) {
          goto LABEL_51;
        }
        v50[2] = v52;
      }
      uint64_t v21 = v72;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v25 = v34;
    int64_t v26 = v28;
    if (v24) {
      goto LABEL_11;
    }
LABEL_12:
    BOOL v30 = __OFADD__(v26, 1);
    int64_t v31 = v26 + 1;
    if (v30)
    {
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    if (v31 >= v62) {
      goto LABEL_47;
    }
    unint64_t v32 = *(void *)(v61 + 8 * v31);
    if (!v32) {
      break;
    }
LABEL_26:
    unint64_t v24 = (v32 - 1) & v32;
    int64_t v28 = v31;
  }
  int64_t v33 = v31 + 1;
  if (v31 + 1 >= v62) {
    goto LABEL_47;
  }
  unint64_t v32 = *(void *)(v61 + 8 * v33);
  if (v32) {
    goto LABEL_25;
  }
  int64_t v33 = v31 + 2;
  if (v31 + 2 >= v62) {
    goto LABEL_47;
  }
  unint64_t v32 = *(void *)(v61 + 8 * v33);
  if (v32) {
    goto LABEL_25;
  }
  int64_t v33 = v31 + 3;
  if (v31 + 3 >= v62) {
    goto LABEL_47;
  }
  unint64_t v32 = *(void *)(v61 + 8 * v33);
  if (v32) {
    goto LABEL_25;
  }
  int64_t v33 = v31 + 4;
  if (v31 + 4 >= v62) {
    goto LABEL_47;
  }
  unint64_t v32 = *(void *)(v61 + 8 * v33);
  if (v32) {
    goto LABEL_25;
  }
  int64_t v33 = v31 + 5;
  if (v31 + 5 >= v62)
  {
LABEL_47:
    uint64_t v54 = v11;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v12 = v65;
    uint64_t v55 = v67;
    unint64_t v53 = v58;
    goto LABEL_48;
  }
  unint64_t v32 = *(void *)(v61 + 8 * v33);
  if (v32)
  {
LABEL_25:
    int64_t v31 = v33;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v31 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v31 >= v62) {
      goto LABEL_47;
    }
    unint64_t v32 = *(void *)(v61 + 8 * v31);
    ++v33;
    if (v32) {
      goto LABEL_26;
    }
  }
LABEL_52:
  __break(1u);
LABEL_53:
  type metadata accessor for AudioServiceType(0);
  uint64_t result = sub_24887CF98();
  __break(1u);
  return result;
}

uint64_t RTCConfig.commonFields.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 2);
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  *(_WORD *)a1 = *(_WORD *)v1;
  *(unsigned char *)(a1 + 2) = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t RTCConfig.preserveSummaryFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RTCConfig.keepUniqueValueSummaryFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RTCConfig.ignoredSummaryFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RTCConfig.maxSummaryValues.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t RTCConfig.sampleByServiceType.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for RTCConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RTCConfig(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RTCConfig(uint64_t a1, __int16 *a2)
{
  __int16 v4 = *a2;
  *(unsigned char *)(a1 + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)a1 = v4;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  *(void *)(a1 + 80) = *((void *)a2 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RTCConfig(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RTCConfig(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RTCConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RTCConfig()
{
  return &type metadata for RTCConfig;
}

uint64_t sub_248863120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_248863C10(a1, a2, a3, (uint64_t (*)(void))sub_24882BF40);
}

uint64_t sub_248863138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_248863B54(a1, a2, a3, (uint64_t (*)(void))sub_24882BF40);
}

uint64_t sub_248863150(char a1, uint64_t a2)
{
  unint64_t v3 = sub_24882BF40(a1);
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_248840E50(v3, v4), (v6 & 1) != 0)) {
    sub_24882E1C8(*(void *)(a2 + 56) + 32 * v5, (uint64_t)v10);
  }
  else {
    memset(v10, 0, sizeof(v10));
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC8);
  int v7 = swift_dynamicCast();
  uint64_t v8 = v11;
  if (!v7) {
    return 0;
  }
  return v8;
}

unint64_t sub_2488631F4(char a1, uint64_t a2)
{
  unint64_t v3 = sub_24882BF40(a1);
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_248840E50(v3, v4), (v6 & 1) != 0)) {
    sub_24882E1C8(*(void *)(a2 + 56) + 32 * v5, (uint64_t)v10);
  }
  else {
    memset(v10, 0, sizeof(v10));
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC8);
  int v7 = swift_dynamicCast();
  uint64_t v8 = v11;
  if (!v7) {
    uint64_t v8 = 0;
  }
  return v8 | ((unint64_t)(v7 ^ 1u) << 32);
}

uint64_t sub_2488632A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_248863D14(a1, a2, a3, (uint64_t (*)(void))sub_24882BF40, &qword_26B143C10);
}

uint64_t sub_2488632C0(char a1, uint64_t a2)
{
  uint64_t v3 = 0xD000000000000014;
  unint64_t v4 = 0x8000000248881C00;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0xD00000000000001CLL;
      char v6 = "keepUniqueValueSummaryFields";
      goto LABEL_8;
    case 2:
      unint64_t v4 = 0x8000000248881C40;
      uint64_t v3 = 0xD000000000000010;
      goto LABEL_4;
    case 3:
      uint64_t v3 = 0xD000000000000015;
      char v6 = "preserveSummaryFields";
      goto LABEL_8;
    case 4:
      uint64_t v3 = 0xD000000000000013;
      char v6 = "sampleByServiceType";
LABEL_8:
      unint64_t v4 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      if (*(void *)(a2 + 16)) {
        goto LABEL_9;
      }
      goto LABEL_11;
    default:
LABEL_4:
      if (!*(void *)(a2 + 16)) {
        goto LABEL_11;
      }
LABEL_9:
      unint64_t v7 = sub_248840E50(v3, v4);
      if (v8) {
        sub_24882E1C8(*(void *)(a2 + 56) + 32 * v7, (uint64_t)v10);
      }
      else {
LABEL_11:
      }
        memset(v10, 0, sizeof(v10));
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B143BD0);
      if (swift_dynamicCast()) {
        return v11;
      }
      else {
        return 0;
      }
  }
}

uint64_t sub_248863410(unsigned __int8 a1, uint64_t a2)
{
  int v3 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 0xD000000000000014;
    }
    else {
      uint64_t v4 = 0xD000000000000012;
    }
    if (v3 == 1) {
      uint64_t v5 = 0x8000000248881CC0;
    }
    else {
      uint64_t v5 = 0x8000000248881CE0;
    }
    if (!*(void *)(a2 + 16)) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v4 = 0xD000000000000018;
    uint64_t v5 = 0x8000000248881CA0;
    if (!*(void *)(a2 + 16)) {
      goto LABEL_13;
    }
  }
  unint64_t v6 = sub_248840E50(v4, v5);
  if (v7)
  {
    sub_24882E1C8(*(void *)(a2 + 56) + 32 * v6, (uint64_t)v9);
    goto LABEL_14;
  }
LABEL_13:
  memset(v9, 0, sizeof(v9));
LABEL_14:
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C10);
  if (swift_dynamicCast()) {
    return v10;
  }
  else {
    return 0;
  }
}

uint64_t sub_248863510(unsigned __int8 a1, uint64_t a2)
{
  int v3 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 0xD000000000000014;
    }
    else {
      uint64_t v4 = 0xD000000000000012;
    }
    if (v3 == 1) {
      uint64_t v5 = 0x8000000248881CC0;
    }
    else {
      uint64_t v5 = 0x8000000248881CE0;
    }
    if (!*(void *)(a2 + 16)) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v4 = 0xD000000000000018;
    uint64_t v5 = 0x8000000248881CA0;
    if (!*(void *)(a2 + 16)) {
      goto LABEL_13;
    }
  }
  unint64_t v6 = sub_248840E50(v4, v5);
  if (v7)
  {
    sub_24882E1C8(*(void *)(a2 + 56) + 32 * v6, (uint64_t)v11);
    goto LABEL_14;
  }
LABEL_13:
  memset(v11, 0, sizeof(v11));
LABEL_14:
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC8);
  int v8 = swift_dynamicCast();
  uint64_t v9 = v12;
  if (!v8) {
    return 0;
  }
  return v9;
}

uint64_t sub_24886360C(char a1, uint64_t a2)
{
  uint64_t v3 = 0xD000000000000012;
  uint64_t v4 = 0x8000000248881A30;
  switch(a1)
  {
    case 1:
      uint64_t v4 = 0xEE0065707954746ELL;
      uint64_t v3 = 0x6576456F69647561;
      if (*(void *)(a2 + 16)) {
        goto LABEL_12;
      }
      goto LABEL_15;
    case 2:
      uint64_t v4 = 0xE900000000000074;
      uint64_t v3 = 0x73616364616F7262;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_15;
      }
      goto LABEL_12;
    case 3:
      uint64_t v4 = 0x80000002488811E0;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_15;
      }
      goto LABEL_12;
    case 4:
      uint64_t v4 = 0xE700000000000000;
      uint64_t v3 = 0x64726163736964;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_15;
      }
      goto LABEL_12;
    case 5:
      uint64_t v3 = 0x7461636964657270;
      uint64_t v4 = 0xE900000000000065;
      goto LABEL_11;
    case 6:
      uint64_t v4 = 0xE700000000000000;
      uint64_t v3 = 0x7372656B726F77;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_15;
      }
      goto LABEL_12;
    default:
LABEL_11:
      if (!*(void *)(a2 + 16)) {
        goto LABEL_15;
      }
LABEL_12:
      unint64_t v6 = sub_248840E50(v3, v4);
      if (v7) {
        sub_24882E1C8(*(void *)(a2 + 56) + 32 * v6, (uint64_t)v9);
      }
      else {
LABEL_15:
      }
        memset(v9, 0, sizeof(v9));
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC8);
      if (swift_dynamicCast()) {
        return v10;
      }
      else {
        return 0;
      }
  }
}

uint64_t sub_2488637C4(char a1, uint64_t a2)
{
  uint64_t v3 = 0xD000000000000012;
  uint64_t v4 = 0x8000000248881A30;
  switch(a1)
  {
    case 1:
      uint64_t v4 = 0xEE0065707954746ELL;
      uint64_t v3 = 0x6576456F69647561;
      if (*(void *)(a2 + 16)) {
        goto LABEL_12;
      }
      goto LABEL_15;
    case 2:
      uint64_t v4 = 0xE900000000000074;
      uint64_t v3 = 0x73616364616F7262;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_15;
      }
      goto LABEL_12;
    case 3:
      uint64_t v4 = 0x80000002488811E0;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_15;
      }
      goto LABEL_12;
    case 4:
      uint64_t v4 = 0xE700000000000000;
      uint64_t v3 = 0x64726163736964;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_15;
      }
      goto LABEL_12;
    case 5:
      uint64_t v3 = 0x7461636964657270;
      uint64_t v4 = 0xE900000000000065;
      goto LABEL_11;
    case 6:
      uint64_t v4 = 0xE700000000000000;
      uint64_t v3 = 0x7372656B726F77;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_15;
      }
      goto LABEL_12;
    default:
LABEL_11:
      if (!*(void *)(a2 + 16)) {
        goto LABEL_15;
      }
LABEL_12:
      unint64_t v6 = sub_248840E50(v3, v4);
      if (v7) {
        sub_24882E1C8(*(void *)(a2 + 56) + 32 * v6, (uint64_t)v9);
      }
      else {
LABEL_15:
      }
        memset(v9, 0, sizeof(v9));
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC8);
      if (swift_dynamicCast()) {
        return v10;
      }
      else {
        return 2;
      }
  }
}

uint64_t sub_24886397C(char a1, uint64_t a2)
{
  uint64_t v3 = 0xD000000000000012;
  uint64_t v4 = 0x8000000248881A30;
  switch(a1)
  {
    case 1:
      uint64_t v4 = 0xEE0065707954746ELL;
      uint64_t v3 = 0x6576456F69647561;
      if (*(void *)(a2 + 16)) {
        goto LABEL_12;
      }
      goto LABEL_15;
    case 2:
      uint64_t v4 = 0xE900000000000074;
      uint64_t v3 = 0x73616364616F7262;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_15;
      }
      goto LABEL_12;
    case 3:
      uint64_t v4 = 0x80000002488811E0;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_15;
      }
      goto LABEL_12;
    case 4:
      uint64_t v4 = 0xE700000000000000;
      uint64_t v3 = 0x64726163736964;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_15;
      }
      goto LABEL_12;
    case 5:
      uint64_t v3 = 0x7461636964657270;
      uint64_t v4 = 0xE900000000000065;
      goto LABEL_11;
    case 6:
      uint64_t v4 = 0xE700000000000000;
      uint64_t v3 = 0x7372656B726F77;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_15;
      }
      goto LABEL_12;
    default:
LABEL_11:
      if (!*(void *)(a2 + 16)) {
        goto LABEL_15;
      }
LABEL_12:
      unint64_t v6 = sub_248840E50(v3, v4);
      if (v7) {
        sub_24882E1C8(*(void *)(a2 + 56) + 32 * v6, (uint64_t)v9);
      }
      else {
LABEL_15:
      }
        memset(v9, 0, sizeof(v9));
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C10);
      if (swift_dynamicCast()) {
        return v10;
      }
      else {
        return 0;
      }
  }
}

uint64_t sub_248863B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_248863B54(a1, a2, a3, (uint64_t (*)(void))sub_24886F410);
}

uint64_t sub_248863B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5 = a4();
  if (*(void *)(a2 + 16) && (unint64_t v7 = sub_248840E50(v5, v6), (v8 & 1) != 0)) {
    sub_24882E1C8(*(void *)(a2 + 56) + 32 * v7, (uint64_t)v10);
  }
  else {
    memset(v10, 0, sizeof(v10));
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC8);
  if (swift_dynamicCast()) {
    return v11;
  }
  else {
    return 0;
  }
}

uint64_t sub_248863BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_248863C10(a1, a2, a3, (uint64_t (*)(void))sub_24886F410);
}

uint64_t sub_248863C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5 = a4();
  if (*(void *)(a2 + 16) && (unint64_t v7 = sub_248840E50(v5, v6), (v8 & 1) != 0)) {
    sub_24882E1C8(*(void *)(a2 + 56) + 32 * v7, (uint64_t)v10);
  }
  else {
    memset(v10, 0, sizeof(v10));
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC8);
  if (swift_dynamicCast()) {
    return v11;
  }
  else {
    return 2;
  }
}

uint64_t sub_248863CB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_248863D14(a1, a2, a3, (uint64_t (*)(void))sub_24886F410, &qword_26B143C10);
}

uint64_t sub_248863CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_248863D14(a1, a2, a3, (uint64_t (*)(void))sub_24886F410, (uint64_t *)&unk_26B143BD8);
}

uint64_t sub_248863CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_248863D14(a1, a2, a3, (uint64_t (*)(void))sub_24886F410, &qword_26B143BC8);
}

uint64_t sub_248863D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t *a5)
{
  uint64_t v7 = a4();
  if (*(void *)(a2 + 16) && (unint64_t v9 = sub_248840E50(v7, v8), (v10 & 1) != 0)) {
    sub_24882E1C8(*(void *)(a2 + 56) + 32 * v9, (uint64_t)v12);
  }
  else {
    memset(v12, 0, sizeof(v12));
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC8);
  __swift_instantiateConcreteTypeFromMangledName(a5);
  if (swift_dynamicCast()) {
    return v13;
  }
  else {
    return 0;
  }
}

void sub_248863DC8(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = a1[3];
  unint64_t v5 = a1[4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DA0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24887EE20;
  *(void *)(inited + 32) = 0xD000000000000018;
  *(void *)(inited + 40) = 0x8000000248881CA0;
  uint64_t v8 = MEMORY[0x263F8D4F8];
  *(unsigned char *)(inited + 48) = 0;
  *(void *)(inited + 72) = v8;
  *(void *)(inited + 80) = 0xD000000000000012;
  *(void *)(inited + 88) = 0x8000000248881CE0;
  *(void *)(inited + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C10);
  *(void *)(inited + 96) = &unk_26FC8ED00;
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_24882B5BC(inited);
  char v10 = *((unsigned char *)a1 + 40);
  swift_bridgeObjectRetain();
  if ((v10 & 1) == 0)
  {
    sub_24886499C(v9, 1, sub_2488650C8);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  CommonConfigFields.init(dict:)(v9, (uint64_t)&v60);
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v56 = a2;
  uint64_t v57 = v6;
  unint64_t v58 = v5;
  __int16 v54 = v60;
  char v55 = BYTE2(v60);
  uint64_t v11 = *((void *)&v60 + 1);
  long long v13 = v61;
  uint64_t v12 = v62;
  char v14 = v10;
  uint64_t v15 = v63;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v49 = sub_2488359C8(0, v9);
  uint64_t v51 = sub_248863510(1u, v9);
  char v50 = v16 & 1;
  uint64_t v52 = sub_248865E84(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v53 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v64 = *a1;
  uint64_t v17 = v64;
  if (!*(void *)(v64 + 16)
    || (unint64_t v18 = sub_248840EC8(1u), (v19 & 1) == 0)
    || (sub_24882E1C8(*(void *)(v17 + 56) + 32 * v18, (uint64_t)&v60),
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C08),
        (swift_dynamicCast() & 1) == 0))
  {
    if (qword_26B143AF8 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_24887C618();
    __swift_project_value_buffer(v20, (uint64_t)qword_26B143AE0);
    uint64_t v22 = a1[1];
    unint64_t v21 = a1[2];
    swift_bridgeObjectRetain_n();
    sub_24882E224((uint64_t)&v64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24882E224((uint64_t)&v64);
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_24887C5F8();
    os_log_type_t v24 = sub_24887CAA8();
    uint64_t v25 = v12;
    if (!os_log_type_enabled(v23, v24))
    {
      sub_24882E27C((uint64_t)&v64);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24882E27C((uint64_t)&v64);

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v28 = v13;
      uint64_t v29 = v53;
      uint64_t v31 = v15;
      __int16 v32 = v54;
      char v33 = v55;
      uint64_t v30 = *((void *)&v13 + 1);
      goto LABEL_17;
    }
    os_log_type_t type = v24;
    uint64_t v26 = swift_slowAlloc();
    *(void *)&long long v60 = swift_slowAlloc();
    uint64_t v27 = v60;
    *(_DWORD *)uint64_t v26 = 136380931;
    swift_bridgeObjectRetain();
    sub_24882CAE0(v22, v21, (uint64_t *)&v60);
    sub_24887CB88();
    swift_bridgeObjectRelease();
    sub_24882E27C((uint64_t)&v64);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24882E27C((uint64_t)&v64);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2081;
    swift_bridgeObjectRetain();
    sub_24882CAE0(v57, v58, (uint64_t *)&v60);
    sub_24887CB88();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_248827000, v23, type, "No server section found. Using default. { configPath=%{private}s, platform=%{private}s }", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C582D20](v27, -1, -1);
    MEMORY[0x24C582D20](v26, -1, -1);

LABEL_15:
    uint64_t v28 = v13;
    uint64_t v29 = v53;
    uint64_t v25 = v12;
    uint64_t v30 = *((void *)&v13 + 1);
    uint64_t v31 = v15;
    __int16 v32 = v54;
    char v33 = v55;
LABEL_17:
    char v34 = v49;
    char v35 = v50;
    uint64_t v37 = v51;
    unint64_t v36 = v52;
LABEL_18:
    *(_WORD *)uint64_t v56 = v32;
    *(unsigned char *)(v56 + 2) = v33;
    *(void *)(v56 + 8) = v29;
    *(void *)(v56 + 16) = v28;
    *(void *)(v56 + 24) = v30;
    *(void *)(v56 + 32) = v25;
    *(void *)(v56 + 40) = v31;
    *(unsigned char *)(v56 + 48) = v34 & 1;
    *(void *)(v56 + 56) = v37;
    *(unsigned char *)(v56 + 64) = v35;
    *(void *)(v56 + 72) = v36;
    return;
  }
  if (!*(void *)(v59 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (*(void *)(v59 + 16))
  {
    uint64_t v38 = *(void *)(v59 + 32);
    swift_bridgeObjectRetain_n();
    if ((v14 & 1) == 0) {
      sub_24886499C(v38, 1, sub_2488650C8);
    }
    CommonConfigFields.init(dict:)(v38, (uint64_t)&v60);
    char v44 = BYTE2(v60);
    __int16 v45 = v60;
    uint64_t v29 = *((void *)&v60 + 1);
    uint64_t v28 = v61;
    uint64_t v39 = v62;
    uint64_t v47 = v63;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v43 = sub_2488359C8(0, v38);
    if (*(void *)(v38 + 16))
    {
      unint64_t v40 = sub_248840E50(0xD000000000000014, 0x8000000248881CC0);
      if (v41)
      {
        sub_24882E1C8(*(void *)(v38 + 56) + 32 * v40, (uint64_t)&v60);
      }
      else
      {
        long long v60 = 0u;
        long long v61 = 0u;
      }
    }
    else
    {
      long long v60 = 0u;
      long long v61 = 0u;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC8);
    int v42 = swift_dynamicCast();
    uint64_t v46 = sub_248865E84(v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v42) {
      uint64_t v37 = v59;
    }
    else {
      uint64_t v37 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = 0;
    char v35 = v42 ^ 1;
    uint64_t v25 = v39;
    uint64_t v31 = v47;
    char v33 = v44;
    __int16 v32 = v45;
    char v34 = v43;
    unint64_t v36 = v46;
    goto LABEL_18;
  }
  __break(1u);
}

uint64_t sub_248864868(uint64_t a1, uint64_t a2)
{
  return sub_24886499C(a1, a2, sub_248864C30);
}

uint64_t sub_248864894(uint64_t a1, uint64_t a2)
{
  return sub_24886499C(a1, a2, sub_248864E7C);
}

uint64_t sub_2488648C0(uint64_t a1, uint64_t a2)
{
  return sub_24886499C(a1, a2, sub_248865314);
}

uint64_t sub_2488648EC(uint64_t a1, uint64_t a2)
{
  return sub_24886499C(a1, a2, sub_248865560);
}

uint64_t sub_248864918(uint64_t a1, uint64_t a2)
{
  return sub_24886499C(a1, a2, sub_2488657AC);
}

uint64_t sub_248864944(uint64_t a1, uint64_t a2)
{
  return sub_24886499C(a1, a2, sub_2488659F0);
}

uint64_t sub_248864970(uint64_t a1, uint64_t a2)
{
  return sub_24886499C(a1, a2, sub_248865C3C);
}

uint64_t sub_24886499C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = swift_bridgeObjectRetain();
  if (!*(void *)(a3(v4) + 16)) {
    return swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C10);
  sub_24886629C();
  sub_24887C708();
  swift_bridgeObjectRelease();
  sub_24887CC38();
  swift_bridgeObjectRelease();
  sub_24887C838();
  swift_bridgeObjectRelease();
  sub_24887C838();
  sub_24887C838();
  swift_bridgeObjectRelease();
  sub_24887C838();
  sub_24882C828();
  swift_allocError();
  *(void *)uint64_t v5 = 0xD00000000000001ALL;
  *(void *)(v5 + 8) = 0x8000000248882EA0;
  *(unsigned char *)(v5 + 16) = 0;
  return swift_willThrow();
}

uint64_t sub_248864C30(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v6) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v11 = v2 + 1;
  if (!__OFADD__(v2, 1))
  {
    if (v11 < v7)
    {
      unint64_t v12 = *(void *)(v3 + 8 * v11);
      ++v2;
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_31;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 2;
      if (v11 + 2 >= v7) {
        goto LABEL_31;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 3;
      if (v11 + 3 >= v7) {
        goto LABEL_31;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12)
      {
LABEL_22:
        unint64_t v6 = (v12 - 1) & v12;
        for (unint64_t i = __clz(__rbit64(v12)) + (v2 << 6); ; unint64_t i = v9 | (v2 << 6))
        {
          char v14 = (uint64_t *)(*(void *)(v1 + 48) + 16 * i);
          uint64_t v16 = *v14;
          uint64_t v15 = (void *)v14[1];
          swift_bridgeObjectRetain_n();
          unint64_t v17 = sub_24887CDA8();
          swift_bridgeObjectRelease();
          if (v17 >= 0xE
            && (swift_bridgeObjectRetain(),
                v18._countAndFlagsBits = v16,
                v18._object = v15,
                CommonKnownFields.init(rawValue:)(v18),
                v23 == 9))
          {
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0) {
              uint64_t result = sub_248841928(0, *(void *)(v8 + 16) + 1, 1);
            }
            unint64_t v20 = *(void *)(v8 + 16);
            unint64_t v19 = *(void *)(v8 + 24);
            unint64_t v21 = v20 + 1;
            if (v20 >= v19 >> 1)
            {
              uint64_t result = sub_248841928(v19 > 1, v20 + 1, 1);
              unint64_t v21 = v20 + 1;
            }
            *(void *)(v8 + 16) = v21;
            uint64_t v22 = v8 + 16 * v20;
            *(void *)(v22 + 32) = v16;
            *(void *)(v22 + 40) = v15;
            if (!v6) {
              goto LABEL_7;
            }
          }
          else
          {
            uint64_t result = swift_bridgeObjectRelease();
            if (!v6) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v9 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      int64_t v13 = v11 + 4;
      if (v13 < v7)
      {
        unint64_t v12 = *(void *)(v3 + 8 * v13);
        if (v12)
        {
          int64_t v2 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v2 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            goto LABEL_33;
          }
          if (v2 >= v7) {
            break;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v2);
          ++v13;
          if (v12) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_31:
    swift_release();
    return v8;
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_248864E7C(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v6) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v11 = v2 + 1;
  if (!__OFADD__(v2, 1))
  {
    if (v11 < v7)
    {
      unint64_t v12 = *(void *)(v3 + 8 * v11);
      ++v2;
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_31;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 2;
      if (v11 + 2 >= v7) {
        goto LABEL_31;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 3;
      if (v11 + 3 >= v7) {
        goto LABEL_31;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12)
      {
LABEL_22:
        unint64_t v6 = (v12 - 1) & v12;
        for (unint64_t i = __clz(__rbit64(v12)) + (v2 << 6); ; unint64_t i = v9 | (v2 << 6))
        {
          char v14 = (uint64_t *)(*(void *)(v1 + 48) + 16 * i);
          uint64_t v16 = *v14;
          uint64_t v15 = (void *)v14[1];
          swift_bridgeObjectRetain_n();
          unint64_t v17 = sub_24887CDA8();
          swift_bridgeObjectRelease();
          if (v17 >= 5
            && (swift_bridgeObjectRetain(),
                v18._countAndFlagsBits = v16,
                v18._object = v15,
                CommonKnownFields.init(rawValue:)(v18),
                v23 == 9))
          {
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0) {
              uint64_t result = sub_248841928(0, *(void *)(v8 + 16) + 1, 1);
            }
            unint64_t v20 = *(void *)(v8 + 16);
            unint64_t v19 = *(void *)(v8 + 24);
            unint64_t v21 = v20 + 1;
            if (v20 >= v19 >> 1)
            {
              uint64_t result = sub_248841928(v19 > 1, v20 + 1, 1);
              unint64_t v21 = v20 + 1;
            }
            *(void *)(v8 + 16) = v21;
            uint64_t v22 = v8 + 16 * v20;
            *(void *)(v22 + 32) = v16;
            *(void *)(v22 + 40) = v15;
            if (!v6) {
              goto LABEL_7;
            }
          }
          else
          {
            uint64_t result = swift_bridgeObjectRelease();
            if (!v6) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v9 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      int64_t v13 = v11 + 4;
      if (v13 < v7)
      {
        unint64_t v12 = *(void *)(v3 + 8 * v13);
        if (v12)
        {
          int64_t v2 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v2 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            goto LABEL_33;
          }
          if (v2 >= v7) {
            break;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v2);
          ++v13;
          if (v12) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_31:
    swift_release();
    return v8;
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_2488650C8(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v6) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v11 = v2 + 1;
  if (!__OFADD__(v2, 1))
  {
    if (v11 < v7)
    {
      unint64_t v12 = *(void *)(v3 + 8 * v11);
      ++v2;
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_31;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 2;
      if (v11 + 2 >= v7) {
        goto LABEL_31;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 3;
      if (v11 + 3 >= v7) {
        goto LABEL_31;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12)
      {
LABEL_22:
        unint64_t v6 = (v12 - 1) & v12;
        for (unint64_t i = __clz(__rbit64(v12)) + (v2 << 6); ; unint64_t i = v9 | (v2 << 6))
        {
          char v14 = (uint64_t *)(*(void *)(v1 + 48) + 16 * i);
          uint64_t v16 = *v14;
          uint64_t v15 = (void *)v14[1];
          swift_bridgeObjectRetain_n();
          unint64_t v17 = sub_24887CDA8();
          swift_bridgeObjectRelease();
          if (v17 >= 3
            && (swift_bridgeObjectRetain(),
                v18._countAndFlagsBits = v16,
                v18._object = v15,
                CommonKnownFields.init(rawValue:)(v18),
                v23 == 9))
          {
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0) {
              uint64_t result = sub_248841928(0, *(void *)(v8 + 16) + 1, 1);
            }
            unint64_t v20 = *(void *)(v8 + 16);
            unint64_t v19 = *(void *)(v8 + 24);
            unint64_t v21 = v20 + 1;
            if (v20 >= v19 >> 1)
            {
              uint64_t result = sub_248841928(v19 > 1, v20 + 1, 1);
              unint64_t v21 = v20 + 1;
            }
            *(void *)(v8 + 16) = v21;
            uint64_t v22 = v8 + 16 * v20;
            *(void *)(v22 + 32) = v16;
            *(void *)(v22 + 40) = v15;
            if (!v6) {
              goto LABEL_7;
            }
          }
          else
          {
            uint64_t result = swift_bridgeObjectRelease();
            if (!v6) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v9 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      int64_t v13 = v11 + 4;
      if (v13 < v7)
      {
        unint64_t v12 = *(void *)(v3 + 8 * v13);
        if (v12)
        {
          int64_t v2 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v2 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            goto LABEL_33;
          }
          if (v2 >= v7) {
            break;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v2);
          ++v13;
          if (v12) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_31:
    swift_release();
    return v8;
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_248865314(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v6) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v11 = v2 + 1;
  if (!__OFADD__(v2, 1))
  {
    if (v11 < v7)
    {
      unint64_t v12 = *(void *)(v3 + 8 * v11);
      ++v2;
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_31;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 2;
      if (v11 + 2 >= v7) {
        goto LABEL_31;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 3;
      if (v11 + 3 >= v7) {
        goto LABEL_31;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12)
      {
LABEL_22:
        unint64_t v6 = (v12 - 1) & v12;
        for (unint64_t i = __clz(__rbit64(v12)) + (v2 << 6); ; unint64_t i = v9 | (v2 << 6))
        {
          char v14 = (uint64_t *)(*(void *)(v1 + 48) + 16 * i);
          uint64_t v16 = *v14;
          uint64_t v15 = (void *)v14[1];
          swift_bridgeObjectRetain_n();
          unint64_t v17 = sub_24887CDA8();
          swift_bridgeObjectRelease();
          if (v17 >= 2
            && (swift_bridgeObjectRetain(),
                v18._countAndFlagsBits = v16,
                v18._object = v15,
                CommonKnownFields.init(rawValue:)(v18),
                v23 == 9))
          {
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0) {
              uint64_t result = sub_248841928(0, *(void *)(v8 + 16) + 1, 1);
            }
            unint64_t v20 = *(void *)(v8 + 16);
            unint64_t v19 = *(void *)(v8 + 24);
            unint64_t v21 = v20 + 1;
            if (v20 >= v19 >> 1)
            {
              uint64_t result = sub_248841928(v19 > 1, v20 + 1, 1);
              unint64_t v21 = v20 + 1;
            }
            *(void *)(v8 + 16) = v21;
            uint64_t v22 = v8 + 16 * v20;
            *(void *)(v22 + 32) = v16;
            *(void *)(v22 + 40) = v15;
            if (!v6) {
              goto LABEL_7;
            }
          }
          else
          {
            uint64_t result = swift_bridgeObjectRelease();
            if (!v6) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v9 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      int64_t v13 = v11 + 4;
      if (v13 < v7)
      {
        unint64_t v12 = *(void *)(v3 + 8 * v13);
        if (v12)
        {
          int64_t v2 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v2 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            goto LABEL_33;
          }
          if (v2 >= v7) {
            break;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v2);
          ++v13;
          if (v12) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_31:
    swift_release();
    return v8;
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_248865560(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v6) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v11 = v2 + 1;
  if (!__OFADD__(v2, 1))
  {
    if (v11 < v7)
    {
      unint64_t v12 = *(void *)(v3 + 8 * v11);
      ++v2;
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_31;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 2;
      if (v11 + 2 >= v7) {
        goto LABEL_31;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 3;
      if (v11 + 3 >= v7) {
        goto LABEL_31;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12)
      {
LABEL_22:
        unint64_t v6 = (v12 - 1) & v12;
        for (unint64_t i = __clz(__rbit64(v12)) + (v2 << 6); ; unint64_t i = v9 | (v2 << 6))
        {
          char v14 = (uint64_t *)(*(void *)(v1 + 48) + 16 * i);
          uint64_t v16 = *v14;
          uint64_t v15 = (void *)v14[1];
          swift_bridgeObjectRetain_n();
          unint64_t v17 = sub_24887CDA8();
          swift_bridgeObjectRelease();
          if (v17 >= 7
            && (swift_bridgeObjectRetain(),
                v18._countAndFlagsBits = v16,
                v18._object = v15,
                CommonKnownFields.init(rawValue:)(v18),
                v23 == 9))
          {
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0) {
              uint64_t result = sub_248841928(0, *(void *)(v8 + 16) + 1, 1);
            }
            unint64_t v20 = *(void *)(v8 + 16);
            unint64_t v19 = *(void *)(v8 + 24);
            unint64_t v21 = v20 + 1;
            if (v20 >= v19 >> 1)
            {
              uint64_t result = sub_248841928(v19 > 1, v20 + 1, 1);
              unint64_t v21 = v20 + 1;
            }
            *(void *)(v8 + 16) = v21;
            uint64_t v22 = v8 + 16 * v20;
            *(void *)(v22 + 32) = v16;
            *(void *)(v22 + 40) = v15;
            if (!v6) {
              goto LABEL_7;
            }
          }
          else
          {
            uint64_t result = swift_bridgeObjectRelease();
            if (!v6) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v9 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      int64_t v13 = v11 + 4;
      if (v13 < v7)
      {
        unint64_t v12 = *(void *)(v3 + 8 * v13);
        if (v12)
        {
          int64_t v2 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v2 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            goto LABEL_33;
          }
          if (v2 >= v7) {
            break;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v2);
          ++v13;
          if (v12) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_31:
    swift_release();
    return v8;
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_2488657AC(uint64_t result)
{
  uint64_t v2 = v1;
  uint64_t v3 = result;
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (v8) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v13 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v13 < v9)
    {
      unint64_t v14 = *(void *)(v5 + 8 * v13);
      ++v4;
      if (v14) {
        goto LABEL_22;
      }
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        goto LABEL_31;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v4);
      if (v14) {
        goto LABEL_22;
      }
      int64_t v4 = v13 + 2;
      if (v13 + 2 >= v9) {
        goto LABEL_31;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v4);
      if (v14) {
        goto LABEL_22;
      }
      int64_t v4 = v13 + 3;
      if (v13 + 3 >= v9) {
        goto LABEL_31;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v4);
      if (v14)
      {
LABEL_22:
        unint64_t v8 = (v14 - 1) & v14;
        for (unint64_t i = __clz(__rbit64(v14)) + (v4 << 6); ; unint64_t i = v11 | (v4 << 6))
        {
          uint64_t v16 = (uint64_t *)(*(void *)(v3 + 48) + 16 * i);
          uint64_t v18 = *v16;
          unint64_t v17 = (void *)v16[1];
          swift_bridgeObjectRetain_n();
          if (sub_248870DEC() == 16
            && (swift_bridgeObjectRetain(),
                v19._countAndFlagsBits = v18,
                v19._object = v17,
                CommonKnownFields.init(rawValue:)(v19),
                v25 == 9))
          {
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v24 = v2;
            if ((result & 1) == 0) {
              uint64_t result = sub_248841928(0, *(void *)(v10 + 16) + 1, 1);
            }
            unint64_t v21 = *(void *)(v10 + 16);
            unint64_t v20 = *(void *)(v10 + 24);
            unint64_t v22 = v21 + 1;
            if (v21 >= v20 >> 1)
            {
              uint64_t result = sub_248841928(v20 > 1, v21 + 1, 1);
              unint64_t v22 = v21 + 1;
            }
            *(void *)(v10 + 16) = v22;
            uint64_t v23 = v10 + 16 * v21;
            *(void *)(v23 + 32) = v18;
            *(void *)(v23 + 40) = v17;
            uint64_t v2 = v24;
            if (!v8) {
              goto LABEL_7;
            }
          }
          else
          {
            uint64_t result = swift_bridgeObjectRelease();
            if (!v8) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v11 = __clz(__rbit64(v8));
          v8 &= v8 - 1;
        }
      }
      int64_t v15 = v13 + 4;
      if (v15 < v9)
      {
        unint64_t v14 = *(void *)(v5 + 8 * v15);
        if (v14)
        {
          int64_t v4 = v15;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v4 = v15 + 1;
          if (__OFADD__(v15, 1)) {
            goto LABEL_33;
          }
          if (v4 >= v9) {
            break;
          }
          unint64_t v14 = *(void *)(v5 + 8 * v4);
          ++v15;
          if (v14) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_31:
    swift_release();
    return v10;
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_2488659F0(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v6) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v11 = v2 + 1;
  if (!__OFADD__(v2, 1))
  {
    if (v11 < v7)
    {
      unint64_t v12 = *(void *)(v3 + 8 * v11);
      ++v2;
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_31;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 2;
      if (v11 + 2 >= v7) {
        goto LABEL_31;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 3;
      if (v11 + 3 >= v7) {
        goto LABEL_31;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12)
      {
LABEL_22:
        unint64_t v6 = (v12 - 1) & v12;
        for (unint64_t i = __clz(__rbit64(v12)) + (v2 << 6); ; unint64_t i = v9 | (v2 << 6))
        {
          unint64_t v14 = (uint64_t *)(*(void *)(v1 + 48) + 16 * i);
          uint64_t v16 = *v14;
          int64_t v15 = (void *)v14[1];
          swift_bridgeObjectRetain_n();
          unint64_t v17 = sub_24887CDA8();
          swift_bridgeObjectRelease();
          if (v17 >= 6
            && (swift_bridgeObjectRetain(),
                v18._countAndFlagsBits = v16,
                v18._object = v15,
                CommonKnownFields.init(rawValue:)(v18),
                v23 == 9))
          {
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0) {
              uint64_t result = sub_248841928(0, *(void *)(v8 + 16) + 1, 1);
            }
            unint64_t v20 = *(void *)(v8 + 16);
            unint64_t v19 = *(void *)(v8 + 24);
            unint64_t v21 = v20 + 1;
            if (v20 >= v19 >> 1)
            {
              uint64_t result = sub_248841928(v19 > 1, v20 + 1, 1);
              unint64_t v21 = v20 + 1;
            }
            *(void *)(v8 + 16) = v21;
            uint64_t v22 = v8 + 16 * v20;
            *(void *)(v22 + 32) = v16;
            *(void *)(v22 + 40) = v15;
            if (!v6) {
              goto LABEL_7;
            }
          }
          else
          {
            uint64_t result = swift_bridgeObjectRelease();
            if (!v6) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v9 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      int64_t v13 = v11 + 4;
      if (v13 < v7)
      {
        unint64_t v12 = *(void *)(v3 + 8 * v13);
        if (v12)
        {
          int64_t v2 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v2 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            goto LABEL_33;
          }
          if (v2 >= v7) {
            break;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v2);
          ++v13;
          if (v12) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_31:
    swift_release();
    return v8;
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_248865C3C(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v6) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v11 = v2 + 1;
  if (!__OFADD__(v2, 1))
  {
    if (v11 < v7)
    {
      unint64_t v12 = *(void *)(v3 + 8 * v11);
      ++v2;
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_31;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 2;
      if (v11 + 2 >= v7) {
        goto LABEL_31;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 3;
      if (v11 + 3 >= v7) {
        goto LABEL_31;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12)
      {
LABEL_22:
        unint64_t v6 = (v12 - 1) & v12;
        for (unint64_t i = __clz(__rbit64(v12)) + (v2 << 6); ; unint64_t i = v9 | (v2 << 6))
        {
          unint64_t v14 = (uint64_t *)(*(void *)(v1 + 48) + 16 * i);
          uint64_t v16 = *v14;
          int64_t v15 = (void *)v14[1];
          swift_bridgeObjectRetain_n();
          uint64_t v17 = sub_24887CDA8();
          swift_bridgeObjectRelease();
          if (v17
            && (swift_bridgeObjectRetain(),
                v18._countAndFlagsBits = v16,
                v18._object = v15,
                CommonKnownFields.init(rawValue:)(v18),
                v23 == 9))
          {
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0) {
              uint64_t result = sub_248841928(0, *(void *)(v8 + 16) + 1, 1);
            }
            unint64_t v20 = *(void *)(v8 + 16);
            unint64_t v19 = *(void *)(v8 + 24);
            unint64_t v21 = v20 + 1;
            if (v20 >= v19 >> 1)
            {
              uint64_t result = sub_248841928(v19 > 1, v20 + 1, 1);
              unint64_t v21 = v20 + 1;
            }
            *(void *)(v8 + 16) = v21;
            uint64_t v22 = v8 + 16 * v20;
            *(void *)(v22 + 32) = v16;
            *(void *)(v22 + 40) = v15;
            if (!v6) {
              goto LABEL_7;
            }
          }
          else
          {
            uint64_t result = swift_bridgeObjectRelease();
            if (!v6) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v9 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      int64_t v13 = v11 + 4;
      if (v13 < v7)
      {
        unint64_t v12 = *(void *)(v3 + 8 * v13);
        if (v12)
        {
          int64_t v2 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v2 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            goto LABEL_33;
          }
          if (v2 >= v7) {
            break;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v2);
          ++v13;
          if (v12) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_31:
    swift_release();
    return v8;
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

void *sub_248865E84(uint64_t a1)
{
  uint64_t v1 = sub_248863410(2u, a1);
  if (v1) {
    int64_t v2 = (void *)v1;
  }
  else {
    int64_t v2 = (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_248838454(0, v2[2] + 1, 1, v2);
  }
  unint64_t v5 = v3[2];
  unint64_t v4 = v3[3];
  if (v5 >= v4 >> 1) {
    uint64_t v3 = sub_248838454((void *)(v4 > 1), v5 + 1, 1, v3);
  }
  v3[2] = v5 + 1;
  unint64_t v6 = &v3[2 * v5];
  void v6[4] = 0xD000000000000010;
  v6[5] = 0x80000002488814E0;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t ServerConfig.commonFields.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 2);
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  *(_WORD *)a1 = *(_WORD *)v1;
  *(unsigned char *)(a1 + 2) = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ServerConfig.monitorClientConnections.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t ServerConfig.osTransactionTimeout.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t ServerConfig.skipPreviousFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for ServerConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ServerConfig(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ServerConfig(uint64_t a1, __int16 *a2)
{
  __int16 v4 = *a2;
  *(unsigned char *)(a1 + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)a1 = v4;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  uint64_t v5 = *((void *)a2 + 7);
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ServerConfig(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ServerConfig()
{
  return &type metadata for ServerConfig;
}

unint64_t sub_24886629C()
{
  unint64_t result = qword_26B143C18;
  if (!qword_26B143C18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B143C10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B143C18);
  }
  return result;
}

uint64_t dispatch thunk of SessionProtocol.serviceType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SessionProtocol.serviceType.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of SessionProtocol.serviceType.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of SessionProtocol.clientProcessName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of SessionProtocol.reporterID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of SessionProtocol.isSingleMessageSession.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of SessionProtocol.appName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of SessionProtocol.configuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of SessionProtocol.pid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of SessionProtocol.serviceConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of SessionProtocol.processOnQueue(message:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of SessionProtocol.processAsync(message:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t sub_2488663E8(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  unint64_t v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  int64_t v15 = (char *)&v26 - v14;
  MEMORY[0x270FA5388](v13);
  char v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x270FA5388](v17);
  unint64_t v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_24887CA48();
  if (!v20) {
    return sub_24887C9A8();
  }
  uint64_t v21 = v20;
  uint64_t v27 = v15;
  uint64_t v43 = sub_24887CD08();
  uint64_t v35 = sub_24887CD18();
  sub_24887CCB8();
  char v41 = v19;
  uint64_t result = sub_24887CA38();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    char v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    uint64_t v37 = v23;
    uint64_t v24 = v27;
    while (1)
    {
      char v25 = (void (*)(char *, void))sub_24887CA78();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_24887CCF8();
      sub_24887CA68();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

uint64_t Dictionary<>.asSimpleType()(uint64_t a1)
{
  return sub_24886A688(a1);
}

uint64_t Dictionary<>.asStringAny()(uint64_t a1)
{
  return sub_24885437C(a1);
}

Swift::Double_optional __swiftcall SimpleType.unwrapToDouble()()
{
  uint64_t v1 = *v0;
  unint64_t v2 = *(unsigned int *)(v0 + 1) | ((unint64_t)(*(unsigned __int16 *)(v0 + 5) | (v0[7] << 16)) << 32);
  uint64_t v3 = *(uint64_t *)v0;
  switch(v0[16])
  {
    case 0u:
      double v4 = (double)(uint64_t)(v1 | (v2 << 8));
      *(double *)&uint64_t v3 = v4;
      break;
    case 1u:
      double v4 = (double)(v1 | (v2 << 8));
      *(double *)&uint64_t v3 = v4;
      break;
    case 2u:
      break;
    case 3u:
      LOBYTE(v3) = 0;
      break;
    case 4u:
      uint64_t v5 = *((void *)v0 + 1);
      swift_bridgeObjectRetain();
      LOBYTE(v3) = sub_24886C5CC(v3, v5);
      break;
    default:
      LOBYTE(v3) = 0;
      break;
  }
  Swift::Bool v6 = v3;
  result.value = v4;
  result.is_nil = v6;
  return result;
}

Swift::Bool __swiftcall SimpleType.isTrue()()
{
  double v1 = *(double *)v0;
  switch(*(unsigned char *)(v0 + 16))
  {
    case 0:
    case 1:
      Swift::Bool result = *(void *)&v1 == 1;
      break;
    case 2:
      Swift::Bool result = v1 == 1.0;
      break;
    case 3:
      Swift::Bool result = LOBYTE(v1) & 1;
      break;
    case 4:
      uint64_t v3 = sub_24887C7B8();
      char v5 = sub_24883FE2C(v3, v4, &unk_26FC8F260);
      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      Swift::Bool result = v5 & 1;
      break;
    default:
      Swift::Bool result = 0;
      break;
  }
  return result;
}

uint64_t SimpleType.hash(into:)(uint64_t a1)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(unsigned __int8 *)(v1 + 16);
  switch(v3)
  {
    case 3:
      sub_24887D018();
      uint64_t result = sub_24887D028();
      break;
    case 4:
      sub_24887D018();
      uint64_t result = sub_24887C808();
      break;
    case 5:
      sub_24887D018();
      uint64_t result = sub_24886C460(a1, v2);
      break;
    case 6:
      sub_24887D018();
      uint64_t result = sub_24886B4C4(a1, v2);
      break;
    default:
      sub_24887D018();
      uint64_t result = sub_24887D058();
      break;
  }
  return result;
}

uint64_t sub_248866D04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (uint64_t *)(a2 + 48);
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (2)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *(v3 - 2);
    uint64_t v8 = *(v3 - 1);
    int v10 = *(unsigned __int8 *)v3;
    v3 += 3;
    int v9 = v10;
    int v12 = *(unsigned __int8 *)v4;
    v4 += 3;
    char v11 = v12;
    switch(v12)
    {
      case 1:
        if (v9 != 1) {
          goto LABEL_35;
        }
        sub_24882F8D0(v5, v6, 1);
        uint64_t v13 = v7;
        uint64_t v14 = v8;
        char v15 = 1;
        goto LABEL_5;
      case 2:
        if (v9 != 2) {
          goto LABEL_35;
        }
        sub_24882F8D0(v5, v6, 2);
        sub_24882F8D0(v7, v8, 2);
        if (*(double *)&v5 != *(double *)&v7) {
          return 0;
        }
        goto LABEL_6;
      case 3:
        if (v9 != 3) {
          goto LABEL_35;
        }
        sub_24882F8D0(v5, v6, 3);
        sub_24882F8D0(v7, v8, 3);
        if (((((v5 & 1) == 0) ^ v7) & 1) == 0) {
          return 0;
        }
        goto LABEL_6;
      case 4:
        if (v9 != 4) {
          goto LABEL_34;
        }
        if (v5 != v7 || v6 != v8)
        {
          char v17 = sub_24887CF48();
          sub_24882D9F4(v7, v8, 4);
          sub_24882D9F4(v5, v6, 4);
          sub_24882F8D0(v5, v6, 4);
          sub_24882F8D0(v7, v8, 4);
          if ((v17 & 1) == 0) {
            return 0;
          }
          goto LABEL_6;
        }
        sub_24882D9F4(v5, v6, 4);
        sub_24882D9F4(v5, v6, 4);
        sub_24882F8D0(v5, v6, 4);
        sub_24882F8D0(v5, v6, 4);
        if (!--v2) {
          return 1;
        }
        continue;
      case 5:
        if (v9 != 5) {
          goto LABEL_34;
        }
        sub_24882D9F4(v7, v8, 5);
        sub_24882D9F4(v5, v6, 5);
        sub_24882D9F4(v7, v8, 5);
        sub_24882D9F4(v5, v6, 5);
        char v18 = sub_248866D04(v5, v7);
        sub_24882F8D0(v5, v6, 5);
        sub_24882F8D0(v7, v8, 5);
        sub_24882F8D0(v7, v8, 5);
        sub_24882F8D0(v5, v6, 5);
        if ((v18 & 1) == 0) {
          return 0;
        }
        goto LABEL_6;
      case 6:
        if (v9 == 6)
        {
          sub_24882D9F4(v7, v8, 6);
          sub_24882D9F4(v5, v6, 6);
          sub_24882D9F4(v7, v8, 6);
          sub_24882D9F4(v5, v6, 6);
          char v19 = sub_2488513D0(v5, v7);
          sub_24882F8D0(v5, v6, 6);
          sub_24882F8D0(v7, v8, 6);
          sub_24882F8D0(v7, v8, 6);
          sub_24882F8D0(v5, v6, 6);
          if ((v19 & 1) == 0) {
            return 0;
          }
LABEL_6:
          if (!--v2) {
            return 1;
          }
          continue;
        }
LABEL_34:
        sub_24882D9F4(v5, v6, v11);
        swift_bridgeObjectRetain();
LABEL_35:
        sub_24882D9F4(v7, v8, v9);
        sub_24882F8D0(v5, v6, v11);
        sub_24882F8D0(v7, v8, v9);
        sub_24882F8D0(v5, v6, v11);
        return 0;
      default:
        if (v9) {
          goto LABEL_35;
        }
        sub_24882F8D0(v5, v6, 0);
        uint64_t v13 = v7;
        uint64_t v14 = v8;
        char v15 = 0;
LABEL_5:
        sub_24882F8D0(v13, v14, v15);
        if (v5 == v7) {
          goto LABEL_6;
        }
        return 0;
    }
  }
}

uint64_t sub_248867108()
{
  return 12383;
}

void sub_248867118(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_248867124(uint64_t a1)
{
  unint64_t v2 = sub_24886CEAC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248867160(uint64_t a1)
{
  unint64_t v2 = sub_24886CEAC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24886719C(uint64_t a1)
{
  unint64_t v2 = sub_24886CF54();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2488671D8(uint64_t a1)
{
  unint64_t v2 = sub_24886CF54();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248867214()
{
  uint64_t result = 7630441;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1953393013;
      break;
    case 2:
      uint64_t result = 0x656C62756F64;
      break;
    case 3:
      uint64_t result = 1819242338;
      break;
    case 4:
      uint64_t result = 0x676E69727473;
      break;
    case 5:
      uint64_t result = 0x7961727261;
      break;
    case 6:
      uint64_t result = 0x616E6F6974636964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2488672D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24886E080(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248867300(uint64_t a1)
{
  unint64_t v2 = sub_24886CE04();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24886733C(uint64_t a1)
{
  unint64_t v2 = sub_24886CE04();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248867378(uint64_t a1)
{
  unint64_t v2 = sub_24886CE58();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2488673B4(uint64_t a1)
{
  unint64_t v2 = sub_24886CE58();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2488673F0(uint64_t a1)
{
  unint64_t v2 = sub_24886CFA8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24886742C(uint64_t a1)
{
  unint64_t v2 = sub_24886CFA8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248867468(uint64_t a1)
{
  unint64_t v2 = sub_24886D050();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2488674A4(uint64_t a1)
{
  unint64_t v2 = sub_24886D050();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2488674E0(uint64_t a1)
{
  unint64_t v2 = sub_24886CF00();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24886751C(uint64_t a1)
{
  unint64_t v2 = sub_24886CF00();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248867558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24887CF48();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2488675D8(uint64_t a1)
{
  unint64_t v2 = sub_24886CFFC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248867614(uint64_t a1)
{
  unint64_t v2 = sub_24886CFFC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SimpleType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26932CF80);
  uint64_t v48 = *(void *)(v3 - 8);
  uint64_t v49 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v47 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26932CF88);
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  MEMORY[0x270FA5388](v5);
  char v44 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26932CF90);
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  MEMORY[0x270FA5388](v7);
  char v41 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26932CF98);
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v38 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26932CFA0);
  uint64_t v36 = *(void *)(v11 - 8);
  uint64_t v37 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v35 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26932CFA8);
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26932CFB0);
  uint64_t v32 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  char v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26932CFB8);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v51 = v18;
  uint64_t v52 = v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = *v1;
  v31[1] = v1[1];
  uint64_t v22 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24886CE04();
  sub_24887D088();
  switch(v22)
  {
    case 1:
      LOBYTE(v53) = 1;
      sub_24886CFFC();
      uint64_t v25 = v51;
      uint64_t v26 = v21;
      sub_24887CE68();
      uint64_t v27 = v34;
      sub_24887CEE8();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v27);
      goto LABEL_10;
    case 2:
      LOBYTE(v53) = 2;
      sub_24886CFA8();
      uint64_t v28 = v35;
      uint64_t v25 = v51;
      uint64_t v26 = v21;
      sub_24887CE68();
      uint64_t v29 = v37;
      sub_24887CEB8();
      uint64_t v30 = v36;
      goto LABEL_9;
    case 3:
      LOBYTE(v53) = 3;
      sub_24886CF54();
      uint64_t v28 = v38;
      uint64_t v25 = v51;
      uint64_t v26 = v21;
      sub_24887CE68();
      uint64_t v29 = v40;
      sub_24887CEA8();
      uint64_t v30 = v39;
      goto LABEL_9;
    case 4:
      LOBYTE(v53) = 4;
      sub_24886CF00();
      uint64_t v28 = v41;
      uint64_t v25 = v51;
      uint64_t v26 = v21;
      sub_24887CE68();
      uint64_t v29 = v43;
      sub_24887CE98();
      uint64_t v30 = v42;
      goto LABEL_9;
    case 5:
      LOBYTE(v53) = 5;
      sub_24886CEAC();
      uint64_t v28 = v44;
      uint64_t v25 = v51;
      uint64_t v26 = v21;
      sub_24887CE68();
      uint64_t v53 = v50;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26932CFD8);
      sub_24886D0A4(&qword_26932CFE0, (void (*)(void))sub_248857850);
      uint64_t v29 = v46;
      sub_24887CEC8();
      uint64_t v30 = v45;
      goto LABEL_9;
    case 6:
      LOBYTE(v53) = 6;
      sub_24886CE58();
      uint64_t v28 = v47;
      uint64_t v25 = v51;
      uint64_t v26 = v21;
      sub_24887CE68();
      uint64_t v53 = v50;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26932CE68);
      sub_2488578F8(&qword_26932CE70, (void (*)(void))sub_248857850);
      uint64_t v29 = v49;
      sub_24887CEC8();
      uint64_t v30 = v48;
LABEL_9:
      (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v29);
LABEL_10:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v26, v25);
      break;
    default:
      LOBYTE(v53) = 0;
      sub_24886D050();
      uint64_t v23 = v51;
      sub_24887CE68();
      sub_24887CED8();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v17, v15);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v21, v23);
      break;
  }
  return result;
}

uint64_t SimpleType.hashValue.getter()
{
  char v1 = *((unsigned char *)v0 + 16);
  long long v4 = *v0;
  char v5 = v1;
  sub_24887D008();
  SimpleType.hash(into:)((uint64_t)v3);
  return sub_24887D068();
}

uint64_t SimpleType.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v92 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26932D010);
  uint64_t v85 = *(void *)(v3 - 8);
  uint64_t v86 = v3;
  MEMORY[0x270FA5388](v3);
  char v87 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26932D018);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v83 = v5;
  uint64_t v84 = v6;
  MEMORY[0x270FA5388](v5);
  long long v91 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_26932D020);
  uint64_t v82 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  char v90 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26932D028);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v80 = v9;
  uint64_t v81 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v89 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26932D030);
  uint64_t v78 = *(void *)(v12 - 8);
  uint64_t v79 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v88 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26932D038);
  uint64_t v75 = *(void *)(v14 - 8);
  uint64_t v76 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26932D040);
  uint64_t v74 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26932D048);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1[3];
  uint64_t v93 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_24886CE04();
  uint64_t v25 = v94;
  sub_24887D078();
  if (v25) {
    goto LABEL_6;
  }
  uint64_t v71 = v19;
  uint64_t v70 = v17;
  uint64_t v72 = v16;
  uint64_t v27 = v88;
  uint64_t v26 = v89;
  uint64_t v29 = v90;
  uint64_t v28 = v91;
  uint64_t v73 = v21;
  uint64_t v30 = v92;
  uint64_t v94 = v20;
  uint64_t v31 = sub_24887CE58();
  if (*(void *)(v31 + 16) != 1)
  {
    uint64_t v36 = sub_24887CC78();
    swift_allocError();
    uint64_t v38 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26932D050);
    *uint64_t v38 = &type metadata for SimpleType;
    uint64_t v39 = v94;
    sub_24887CDC8();
    sub_24887CC68();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v36 - 8) + 104))(v38, *MEMORY[0x263F8DCB0], v36);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v23, v39);
LABEL_6:
    uint64_t v40 = (uint64_t)v93;
    return __swift_destroy_boxed_opaque_existential_1Tm(v40);
  }
  uint64_t v32 = *(unsigned __int8 *)(v31 + 32);
  uint64_t v69 = v32;
  switch(v32)
  {
    case 1:
      LOBYTE(v95) = 1;
      sub_24886CFFC();
      uint64_t v42 = v72;
      uint64_t v43 = v94;
      sub_24887CDB8();
      uint64_t v44 = v76;
      uint64_t v60 = sub_24887CE48();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v42, v44);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v23, v43);
      goto LABEL_14;
    case 2:
      LOBYTE(v95) = 2;
      sub_24886CFA8();
      uint64_t v45 = v27;
      uint64_t v46 = v94;
      sub_24887CDB8();
      uint64_t v47 = v79;
      sub_24887CE18();
      uint64_t v48 = v73;
      uint64_t v65 = v64;
      (*(void (**)(char *, uint64_t))(v78 + 8))(v45, v47);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v23, v46);
      uint64_t v66 = 0;
      uint64_t v60 = v65;
      goto LABEL_16;
    case 3:
      LOBYTE(v95) = 3;
      sub_24886CF54();
      uint64_t v49 = v94;
      sub_24887CDB8();
      uint64_t v61 = v80;
      char v62 = sub_24887CE08();
      uint64_t v63 = v73;
      char v68 = v62;
      (*(void (**)(char *, uint64_t))(v81 + 8))(v26, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v23, v49);
      uint64_t v66 = 0;
      uint64_t v60 = v68 & 1;
      goto LABEL_16;
    case 4:
      LOBYTE(v95) = 4;
      sub_24886CF00();
      uint64_t v50 = v29;
      uint64_t v51 = v94;
      sub_24887CDB8();
      uint64_t v52 = v77;
      uint64_t v60 = sub_24887CDF8();
      uint64_t v53 = v50;
      uint64_t v66 = v67;
      (*(void (**)(char *, uint64_t))(v82 + 8))(v53, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v23, v51);
      goto LABEL_16;
    case 5:
      LOBYTE(v95) = 5;
      sub_24886CEAC();
      __int16 v54 = v28;
      uint64_t v55 = v94;
      sub_24887CDB8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26932CFD8);
      sub_24886D0A4(&qword_26932D058, (void (*)(void))sub_248857974);
      uint64_t v56 = v83;
      sub_24887CE28();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v54, v56);
      goto LABEL_15;
    case 6:
      LOBYTE(v95) = 6;
      sub_24886CE58();
      uint64_t v55 = v94;
      sub_24887CDB8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26932CE68);
      sub_2488578F8(&qword_26932CEA0, (void (*)(void))sub_248857974);
      uint64_t v58 = v86;
      uint64_t v57 = v87;
      sub_24887CE28();
      (*(void (**)(char *, uint64_t))(v85 + 8))(v57, v58);
LABEL_15:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v23, v55);
      uint64_t v66 = 0;
      uint64_t v60 = v95;
LABEL_16:
      uint64_t v40 = (uint64_t)v93;
      break;
    default:
      LOBYTE(v95) = 0;
      sub_24886D050();
      uint64_t v33 = v71;
      uint64_t v34 = v23;
      uint64_t v35 = v94;
      sub_24887CDB8();
      uint64_t v59 = v70;
      uint64_t v60 = sub_24887CE38();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v33, v59);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v34, v35);
LABEL_14:
      uint64_t v40 = (uint64_t)v93;
      uint64_t v66 = 0;
      break;
  }
  *(void *)uint64_t v30 = v60;
  *(void *)(v30 + 8) = v66;
  *(unsigned char *)(v30 + 16) = v69;
  return __swift_destroy_boxed_opaque_existential_1Tm(v40);
}

uint64_t sub_248868B68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SimpleType.init(from:)(a1, a2);
}

uint64_t sub_248868B80(void *a1)
{
  return SimpleType.encode(to:)(a1);
}

uint64_t sub_248868B98()
{
  char v1 = *((unsigned char *)v0 + 16);
  long long v4 = *v0;
  char v5 = v1;
  sub_24887D008();
  SimpleType.hash(into:)((uint64_t)v3);
  return sub_24887D068();
}

uint64_t sub_248868BF0()
{
  char v1 = *((unsigned char *)v0 + 16);
  long long v4 = *v0;
  char v5 = v1;
  sub_24887D008();
  SimpleType.hash(into:)((uint64_t)v3);
  return sub_24887D068();
}

uint64_t ConversionError.errorDescription.getter()
{
  return 0;
}

uint64_t SimpleType.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24887C498();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24882E1C8(a1, (uint64_t)v73);
  sub_24886D114(0, &qword_26B143CE0);
  if (!swift_dynamicCast()) {
    goto LABEL_10;
  }
  uint64_t v8 = (void *)v69;
  if (*MEMORY[0x263EFFB40]) {
    BOOL v9 = (void)v69 == *MEMORY[0x263EFFB40];
  }
  else {
    BOOL v9 = 0;
  }
  if (v9)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);

    char v13 = 3;
    uint64_t v12 = 1;
LABEL_21:
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v73);
    *(void *)a2 = v12;
    *(void *)(a2 + 8) = 0;
    *(unsigned char *)(a2 + 16) = v13;
    return result;
  }
  uint64_t v10 = (void *)*MEMORY[0x263EFFB38];

  if (v10) {
    BOOL v11 = v8 == v10;
  }
  else {
    BOOL v11 = 0;
  }
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    uint64_t v12 = 0;
    char v13 = 3;
    goto LABEL_21;
  }
LABEL_10:
  if (swift_dynamicCast())
  {
    uint64_t v12 = (char)v69;
LABEL_20:
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    char v13 = 0;
    goto LABEL_21;
  }
  if (swift_dynamicCast())
  {
    uint64_t v12 = (__int16)v69;
    goto LABEL_20;
  }
  if (swift_dynamicCast())
  {
    uint64_t v12 = (int)v69;
    goto LABEL_20;
  }
  if (swift_dynamicCast())
  {
    uint64_t v12 = v69;
    goto LABEL_20;
  }
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    char v13 = 0;
    uint64_t v12 = v69;
    goto LABEL_21;
  }
  if (swift_dynamicCast())
  {
    uint64_t v12 = v69;
LABEL_32:
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    char v13 = 1;
    goto LABEL_21;
  }
  if (swift_dynamicCast())
  {
    uint64_t v12 = (unsigned __int16)v69;
    goto LABEL_32;
  }
  if (swift_dynamicCast())
  {
    uint64_t v12 = v69;
    goto LABEL_32;
  }
  if (swift_dynamicCast())
  {
    uint64_t v12 = v69;
    goto LABEL_32;
  }
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    uint64_t v15 = v69;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v73);
    *(void *)a2 = v15;
    *(void *)(a2 + 8) = 0;
    char v16 = 1;
LABEL_40:
    *(unsigned char *)(a2 + 16) = v16;
    return result;
  }
  if (swift_dynamicCast())
  {
    double v17 = *(float *)&v69;
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v73);
    *(double *)a2 = v17;
LABEL_39:
    *(void *)(a2 + 8) = 0;
    char v16 = 2;
    goto LABEL_40;
  }
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    uint64_t v18 = v69;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v73);
    *(void *)a2 = v18;
    goto LABEL_39;
  }
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    long long v19 = v69;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v73);
    *(_OWORD *)a2 = v19;
    char v16 = 4;
    goto LABEL_40;
  }
  sub_24886D114(0, &qword_26B143CD8);
  if (!swift_dynamicCast())
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B143BD8);
    if (swift_dynamicCast())
    {
      uint64_t v58 = sub_24886A688(v69);
      __swift_destroy_boxed_opaque_existential_1Tm(a1);
      swift_bridgeObjectRelease();
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v73);
      *(void *)a2 = v58;
LABEL_80:
      *(void *)(a2 + 8) = 0;
      char v16 = 6;
      goto LABEL_40;
    }
    sub_24886D114(0, &qword_26932D060);
    if (swift_dynamicCast())
    {
      uint64_t v34 = (void *)v69;
      *(void *)&long long v65 = 0;
      sub_24887C6A8();
      if ((void)v65)
      {
        uint64_t v59 = sub_24886A688(v65);
        __swift_destroy_boxed_opaque_existential_1Tm(a1);
        swift_bridgeObjectRelease();

        uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v73);
        *(void *)a2 = v59;
        goto LABEL_80;
      }
    }
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    uint64_t v57 = v73;
LABEL_79:
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v57);
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    char v16 = -1;
    goto LABEL_40;
  }
  id v20 = v72;
  uint64_t v21 = (uint64_t)objc_msgSend(v72, sel_count);
  uint64_t v71 = MEMORY[0x263F8EE78];
  sub_248841AB8(0, v21 & ~(v21 >> 63), 0);
  id v22 = v20;
  sub_24887CB28();
  id v62 = v22;

  if (v21 < 0)
  {
LABEL_82:
    __break(1u);
LABEL_83:
    swift_once();
LABEL_73:
    uint64_t v48 = sub_24887C618();
    __swift_project_value_buffer(v48, (uint64_t)qword_26932CE00);
    id v49 = (id)v21;
    id v50 = (id)v21;
    uint64_t v51 = sub_24887C5F8();
    os_log_type_t v52 = sub_24887CAA8();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      v73[0] = v54;
      *(_DWORD *)uint64_t v53 = 136380675;
      *(void *)&long long v64 = v53 + 4;
      swift_getErrorValue();
      uint64_t v55 = sub_24887CFA8();
      *(void *)&long long v69 = sub_24882CAE0(v55, v56, v73);
      sub_24887CB88();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_248827000, v51, v52, "%{private}s", v53, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C582D20](v54, -1, -1);
      MEMORY[0x24C582D20](v53, -1, -1);
    }
    else
    {
    }
    uint64_t v57 = (uint64_t *)a1;
    goto LABEL_79;
  }
  uint64_t v23 = v21;
  if (!v21)
  {
LABEL_58:
    unint64_t v63 = sub_24886D150();
    while (1)
    {
      sub_24887CB78();
      if (!v66)
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        sub_24886D1FC((uint64_t)&v65);
        uint64_t v35 = v71;
        __swift_destroy_boxed_opaque_existential_1Tm(a1);

        uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v73);
        *(void *)a2 = v35;
        *(void *)(a2 + 8) = 0;
        char v16 = 5;
        goto LABEL_40;
      }
      sub_24882D9E4(&v65, &v69);
      sub_24882E1C8((uint64_t)&v69, (uint64_t)&v65);
      SimpleType.init(_:)(&v67, &v65);
      unsigned __int8 v29 = v68;
      if (v68 == 255) {
        break;
      }
      long long v64 = v67;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v69);
      uint64_t v30 = v71;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_248841AB8(0, *(void *)(v30 + 16) + 1, 1);
        uint64_t v30 = v71;
      }
      unint64_t v32 = *(void *)(v30 + 16);
      unint64_t v31 = *(void *)(v30 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_248841AB8(v31 > 1, v32 + 1, 1);
        uint64_t v30 = v71;
      }
      *(void *)(v30 + 16) = v32 + 1;
      uint64_t v33 = v30 + 24 * v32;
      *(_OWORD *)(v33 + 32) = v64;
      *(unsigned char *)(v33 + 48) = v29;
    }
    sub_24886D1A8();
    uint64_t v21 = swift_allocError();
    uint64_t v43 = v42;
    __swift_project_boxed_opaque_existential_1(&v69, v70);
    swift_getDynamicType();
    uint64_t v44 = sub_24887D0B8();
    uint64_t v46 = v45;
    *(void *)&long long v65 = 0;
    *((void *)&v65 + 1) = 0xE000000000000000;
    sub_24887CD28();
    long long v47 = v65;
    *(void *)uint64_t v43 = v44;
    *(void *)(v43 + 8) = v46;
    *(_OWORD *)(v43 + 16) = v47;
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v69);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

    swift_release();
LABEL_72:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v73);
    if (qword_26932CA80 == -1) {
      goto LABEL_73;
    }
    goto LABEL_83;
  }
  unint64_t v63 = sub_24886D150();
  while (1)
  {
    if (!v23)
    {
      __break(1u);
      goto LABEL_82;
    }
    uint64_t result = sub_24887CB78();
    if (!v70) {
      break;
    }
    sub_24882E1C8((uint64_t)&v69, (uint64_t)&v65);
    SimpleType.init(_:)(&v67, &v65);
    unsigned __int8 v24 = v68;
    if (v68 == 255)
    {
      sub_24886D1A8();
      uint64_t v21 = swift_allocError();
      uint64_t v37 = v36;
      __swift_project_boxed_opaque_existential_1(&v69, v70);
      swift_getDynamicType();
      uint64_t v38 = sub_24887D0B8();
      uint64_t v40 = v39;
      *(void *)&long long v65 = 0;
      *((void *)&v65 + 1) = 0xE000000000000000;
      sub_24887CD28();
      long long v41 = v65;
      *(void *)uint64_t v37 = v38;
      *(void *)(v37 + 8) = v40;
      *(_OWORD *)(v37 + 16) = v41;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v69);

      goto LABEL_72;
    }
    long long v64 = v67;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v69);
    uint64_t v25 = v71;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_248841AB8(0, *(void *)(v25 + 16) + 1, 1);
      uint64_t v25 = v71;
    }
    uint64_t v21 = *(void *)(v25 + 16);
    unint64_t v26 = *(void *)(v25 + 24);
    uint64_t v27 = v21 + 1;
    if (v21 >= v26 >> 1)
    {
      uint64_t v61 = v21 + 1;
      sub_248841AB8(v26 > 1, v21 + 1, 1);
      uint64_t v27 = v61;
      uint64_t v25 = v71;
    }
    *(void *)(v25 + 16) = v27;
    uint64_t v28 = v25 + 24 * v21;
    *(_OWORD *)(v28 + 32) = v64;
    *(unsigned char *)(v28 + 48) = v24;
    if (!--v23) {
      goto LABEL_58;
    }
  }
  __break(1u);
  return result;
}

uint64_t static SimpleType.initOrThrow(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_24882E1C8((uint64_t)a1, (uint64_t)&v13);
  uint64_t result = SimpleType.init(_:)((uint64_t)&v13, (uint64_t)&v15);
  unsigned __int8 v5 = v16;
  if (v16 == 255)
  {
    sub_24886D1A8();
    swift_allocError();
    uint64_t v7 = v6;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    swift_getDynamicType();
    uint64_t v8 = sub_24887D0B8();
    uint64_t v10 = v9;
    uint64_t v13 = 0;
    unint64_t v14 = 0xE000000000000000;
    sub_24887CD28();
    uint64_t v11 = v13;
    unint64_t v12 = v14;
    *uint64_t v7 = v8;
    v7[1] = v10;
    void v7[2] = v11;
    v7[3] = v12;
    return swift_willThrow();
  }
  else
  {
    *(_OWORD *)a2 = v15;
    *(unsigned char *)(a2 + 16) = v5;
  }
  return result;
}

uint64_t SimpleType.init(integerLiteral:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  return result;
}

void SimpleType.init(floatLiteral:)(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)a1 = a2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 2;
}

uint64_t SimpleType.init(BOOLeanLiteral:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result & 1;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 3;
  return result;
}

uint64_t SimpleType.init(stringLiteral:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  *(unsigned char *)(a3 + 16) = 4;
  return result;
}

void *sub_248869A6C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  return result;
}

void *sub_248869A7C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 2;
  return result;
}

unsigned __int8 *sub_248869A90@<X0>(unsigned __int8 *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 3;
  return result;
}

void *sub_248869AA4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = result[1];
  *(void *)a2 = *result;
  *(void *)(a2 + 8) = v2;
  *(unsigned char *)(a2 + 16) = 4;
  return result;
}

uint64_t SimpleType.description.getter()
{
  uint64_t v1 = *v0;
  uint64_t v3 = *(void *)v0;
  uint64_t v2 = *((void *)v0 + 1);
  char v4 = v0[16];
  switch(v4)
  {
    case 0:
      *(void *)&long long v10 = *(void *)v0;
      goto LABEL_5;
    case 1:
      *(void *)&long long v10 = *(void *)v0;
LABEL_5:
      uint64_t v8 = sub_24887CF18();
      goto LABEL_7;
    case 2:
      uint64_t v8 = sub_24887CA08();
LABEL_7:
      uint64_t v3 = v8;
      break;
    case 3:
      if (v1) {
        uint64_t v3 = 1702195828;
      }
      else {
        uint64_t v3 = 0x65736C6166;
      }
      break;
    case 4:
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v5 = *(unsigned __int16 *)(v0 + 5) | (v0[7] << 16);
      uint64_t v6 = *(unsigned int *)(v0 + 1);
      *(void *)&long long v10 = *(void *)v0;
      *((void *)&v10 + 1) = v2;
      char v11 = v4;
      uint64_t v7 = swift_allocObject();
      sub_24886D298(&v10, v7 + 16);
      *(void *)&long long v10 = sub_24886D2B0;
      *((void *)&v10 + 1) = v7;
      sub_24882D9F4(v3, v2, v4);
      sub_24882D9F4(v3, v2, v4);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26932D078);
      uint64_t v3 = sub_24887C7A8();
      sub_24882F8D0((v6 << 8) | (v5 << 40) | v1, v2, v4);
      break;
  }
  return v3;
}

void SimpleType.unwrap()(uint64_t *a1@<X8>)
{
  uint64_t v4 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  switch(*(unsigned char *)(v1 + 16))
  {
    case 0:
      uint64_t v5 = MEMORY[0x263F8E5C0];
      goto LABEL_9;
    case 1:
      uint64_t v5 = MEMORY[0x263F8E970];
      goto LABEL_9;
    case 2:
      uint64_t v5 = MEMORY[0x263F8D538];
LABEL_9:
      a1[3] = v5;
      *a1 = v4;
      break;
    case 3:
      a1[3] = MEMORY[0x263F8D4F8];
      *(unsigned char *)a1 = v4 & 1;
      break;
    case 4:
      a1[3] = MEMORY[0x263F8D310];
      *a1 = v4;
      a1[1] = v3;
      swift_bridgeObjectRetain();
      break;
    case 5:
      int64_t v6 = *(void *)(v4 + 16);
      uint64_t v7 = MEMORY[0x263F8EE78];
      if (v6)
      {
        uint64_t v15 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        uint64_t v8 = sub_248841AD8(0, v6, 0);
        uint64_t v7 = v15;
        uint64_t v9 = v4 + 48;
        do
        {
          SimpleType.unwrap()(v14, v8);
          uint64_t v15 = v7;
          unint64_t v11 = *(void *)(v7 + 16);
          unint64_t v10 = *(void *)(v7 + 24);
          if (v11 >= v10 >> 1)
          {
            sub_248841AD8(v10 > 1, v11 + 1, 1);
            uint64_t v7 = v15;
          }
          *(void *)(v7 + 16) = v11 + 1;
          uint64_t v8 = (uint64_t)sub_24882D9E4(v14, (_OWORD *)(v7 + 32 * v11 + 32));
          v9 += 24;
          --v6;
        }
        while (v6);
        sub_24882F8D0(v4, v3, 5);
      }
      a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26932D080);
      *a1 = v7;
      break;
    case 6:
      uint64_t v12 = swift_bridgeObjectRetain();
      uint64_t v13 = sub_24885437C(v12);
      swift_bridgeObjectRelease();
      a1[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B143BD8);
      *a1 = v13;
      break;
    default:
      sub_24887CD48();
      __break(1u);
      JUMPOUT(0x248869EC8);
  }
}

uint64_t SimpleType.init(arrayLiteral:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 5;
  return result;
}

uint64_t SimpleType.init(dictionaryLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D28);
    uint64_t v3 = sub_24887CD78();
  }
  else
  {
    uint64_t v3 = MEMORY[0x263F8EE80];
  }
  uint64_t v6 = v3;
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_24886A97C(v4, 1, &v6);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 16) = 6;
  return result;
}

uint64_t sub_248869FB4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 5;
  return result;
}

Swift::UInt64_optional __swiftcall SimpleType.unwrapToUInt()()
{
  LOBYTE(v1) = 0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)v0;
  switch(v0[16])
  {
    case 0u:
      unint64_t v4 = *(unsigned __int16 *)(v0 + 5) | (v0[7] << 16);
      uint64_t v1 = (v4 >> 23) & 1;
      uint64_t v3 = ((v4 << 40) | ((unint64_t)*(unsigned int *)(v0 + 1) << 8) | v2) & ~((uint64_t)(v4 << 40) >> 63);
      goto LABEL_43;
    case 1u:
      goto LABEL_43;
    case 3u:
      LOBYTE(v1) = 0;
      uint64_t v3 = v2 & 1;
      goto LABEL_43;
    case 4u:
      unint64_t v5 = *((void *)v0 + 1);
      uint64_t v6 = HIBYTE(v5) & 0xF;
      uint64_t v7 = v3 & 0xFFFFFFFFFFFFLL;
      if ((v5 & 0x2000000000000000) != 0) {
        uint64_t v8 = HIBYTE(v5) & 0xF;
      }
      else {
        uint64_t v8 = v3 & 0xFFFFFFFFFFFFLL;
      }
      if (!v8) {
        goto LABEL_13;
      }
      if ((v5 & 0x1000000000000000) == 0)
      {
        if ((v5 & 0x2000000000000000) == 0)
        {
          if ((v3 & 0x1000000000000000) != 0) {
            uint64_t v9 = (unsigned __int8 *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 32);
          }
          else {
            uint64_t v9 = (unsigned __int8 *)sub_24887CC88();
          }
          uint64_t v3 = (uint64_t)sub_24886AD5C(v9, v7, 10);
          char v11 = v10 & 1;
          goto LABEL_41;
        }
        v25[0] = v3;
        v25[1] = v5 & 0xFFFFFFFFFFFFFFLL;
        if (v3 == 43)
        {
          if (v6)
          {
            uint64_t v16 = v6 - 1;
            if (v6 != 1)
            {
              uint64_t v3 = 0;
              double v17 = (unsigned __int8 *)v25 + 1;
              while (1)
              {
                unsigned int v18 = *v17 - 48;
                if (v18 > 9) {
                  break;
                }
                if (!is_mul_ok(v3, 0xAuLL)) {
                  break;
                }
                BOOL v15 = __CFADD__(10 * v3, v18);
                uint64_t v3 = 10 * v3 + v18;
                if (v15) {
                  break;
                }
                char v11 = 0;
                ++v17;
                if (!--v16) {
                  goto LABEL_41;
                }
              }
            }
            goto LABEL_40;
          }
        }
        else
        {
          if (v3 != 45)
          {
            if (v6)
            {
              uint64_t v3 = 0;
              long long v19 = (unsigned __int8 *)v25;
              while (1)
              {
                unsigned int v20 = *v19 - 48;
                if (v20 > 9) {
                  break;
                }
                if (!is_mul_ok(v3, 0xAuLL)) {
                  break;
                }
                BOOL v15 = __CFADD__(10 * v3, v20);
                uint64_t v3 = 10 * v3 + v20;
                if (v15) {
                  break;
                }
                char v11 = 0;
                ++v19;
                if (!--v6) {
                  goto LABEL_41;
                }
              }
            }
            goto LABEL_40;
          }
          if (v6)
          {
            uint64_t v12 = v6 - 1;
            if (v6 != 1)
            {
              uint64_t v3 = 0;
              uint64_t v13 = (unsigned __int8 *)v25 + 1;
              while (1)
              {
                unsigned int v14 = *v13 - 48;
                if (v14 > 9) {
                  break;
                }
                if (!is_mul_ok(v3, 0xAuLL)) {
                  break;
                }
                BOOL v15 = 10 * v3 >= (unint64_t)v14;
                uint64_t v3 = 10 * v3 - v14;
                if (!v15) {
                  break;
                }
                char v11 = 0;
                ++v13;
                if (!--v12) {
                  goto LABEL_41;
                }
              }
            }
LABEL_40:
            uint64_t v3 = 0;
            char v11 = 1;
            goto LABEL_41;
          }
          __break(1u);
        }
        __break(1u);
        JUMPOUT(0x24886A238);
      }
      uint64_t v22 = v3;
      sub_24882D9F4(v3, v5, 4);
      uint64_t v23 = sub_24886C7D0(v22, v5, 10);
      char v11 = v24;
      sub_24882F8D0(v22, v5, 4);
      uint64_t v3 = (uint64_t)v23;
LABEL_41:
      LOBYTE(v1) = v11 & 1;
      if (v11) {
        uint64_t v3 = 0;
      }
LABEL_43:
      Swift::Bool v21 = v1;
      result.value = v3;
      result.is_nil = v21;
      return result;
    default:
LABEL_13:
      uint64_t v3 = 0;
      LOBYTE(v1) = 1;
      goto LABEL_43;
  }
}

Swift::String_optional __swiftcall SimpleType.unwrapToString()()
{
  if (*(unsigned char *)(v0 + 16) == 4)
  {
    uint64_t v3 = v0;
    uint64_t v2 = *(void *)v0;
    uint64_t v1 = *(void **)(v3 + 8);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v2 = 0;
    uint64_t v1 = 0;
  }
  uint64_t v4 = v2;
  unint64_t v5 = v1;
  result.value._object = v5;
  result.value._countAndFlagsBits = v4;
  return result;
}

Swift::OpaquePointer_optional __swiftcall Array.asSimpleType()()
{
  uint64_t v10 = v0;
  uint64_t v8 = v1;
  uint64_t v2 = sub_24887C9D8();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26932CDE0);
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v5 = (void *)sub_2488663E8((void (*)(char *, char *))sub_24886D2D4, (uint64_t)&v7, v2, (uint64_t)&type metadata for SimpleType, v3, WitnessTable, MEMORY[0x263F8E4E0], (uint64_t)&v9);
  result.value._rawValue = v5;
  result.is_nil = v6;
  return result;
}

uint64_t sub_24886A4F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  v11[3] = a2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_1, a1, a2);
  static SimpleType.initOrThrow(_:)(v11, a4);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  if (v4) {
    *a3 = v4;
  }
  return result;
}

void *sub_24886A5A4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143128);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_24886A60C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_24887C8B8();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x24C581B80](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_24886A688(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D28);
  uint64_t result = sub_24887CD58();
  char v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v42 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  uint64_t v34 = v6;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v36 = result + 64;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(v42 + 48) + 16 * i);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    sub_24882E1C8(*(void *)(v42 + 56) + 32 * i, (uint64_t)v41);
    sub_24882E1C8((uint64_t)v41, (uint64_t)&v37);
    swift_bridgeObjectRetain();
    SimpleType.init(_:)((uint64_t)&v37, (uint64_t)v39);
    unsigned __int8 v19 = v40;
    if (v40 == 255)
    {
      sub_24886D1A8();
      swift_allocError();
      uint64_t v28 = v27;
      __swift_project_boxed_opaque_existential_1(v41, v41[3]);
      swift_getDynamicType();
      uint64_t v29 = sub_24887D0B8();
      uint64_t v31 = v30;
      uint64_t v37 = 0;
      unint64_t v38 = 0xE000000000000000;
      sub_24887CD28();
      uint64_t v32 = v37;
      unint64_t v33 = v38;
      *uint64_t v28 = v29;
      v28[1] = v31;
      v28[2] = v32;
      uint64_t v28[3] = v33;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v41);
      return (uint64_t)v3;
    }
    uint64_t v21 = v39[0];
    uint64_t v20 = v39[1];
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v41);
    *(void *)(v36 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v22 = (void *)(v3[6] + 16 * i);
    void *v22 = v18;
    v22[1] = v17;
    uint64_t v23 = v3[7] + 24 * i;
    *(void *)uint64_t v23 = v21;
    *(void *)(v23 + 8) = v20;
    *(unsigned char *)(v23 + 16) = v19;
    uint64_t v24 = v3[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v3[2] = v26;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_26;
    }
    if (v13 >= v35) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v34 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v35) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v34 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v35) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v34 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v35) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v34 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v35) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v34 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_24886A97C(uint64_t a1, char a2, uint64_t *a3)
{
  if (!*(void *)(a1 + 16))
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v45 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  char v9 = *(unsigned char *)(a1 + 64);
  swift_bridgeObjectRetain();
  uint64_t v10 = *a3;
  swift_bridgeObjectRetain();
  sub_24882D9F4(v8, v7, v9);
  unint64_t v12 = sub_248840E50(v6, v5);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14)) {
    goto LABEL_23;
  }
  char v16 = v11;
  if (*(void *)(v10 + 24) >= v15)
  {
    if (a2)
    {
      if (v11) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_24883A4C0();
      if (v16) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v21 = a3;
    uint64_t v22 = (void *)*a3;
    *(void *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    uint64_t v23 = (uint64_t *)(v22[6] + 16 * v12);
    uint64_t *v23 = v6;
    v23[1] = v5;
    uint64_t v24 = v22[7] + 24 * v12;
    *(void *)uint64_t v24 = v8;
    *(void *)(v24 + 8) = v7;
    *(unsigned char *)(v24 + 16) = v9;
    uint64_t v25 = v22[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    os_log_t v22[2] = v27;
    uint64_t v28 = v45 - 1;
    if (v45 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v29 = (char *)(a1 + 104);
    while (1)
    {
      uint64_t v31 = *((void *)v29 - 4);
      uint64_t v30 = *((void *)v29 - 3);
      uint64_t v8 = *((void *)v29 - 2);
      uint64_t v7 = *((void *)v29 - 1);
      char v9 = *v29;
      uint64_t v32 = *v21;
      swift_bridgeObjectRetain();
      sub_24882D9F4(v8, v7, v9);
      unint64_t v33 = sub_248840E50(v31, v30);
      uint64_t v35 = *(void *)(v32 + 16);
      BOOL v36 = (v34 & 1) == 0;
      BOOL v26 = __OFADD__(v35, v36);
      uint64_t v37 = v35 + v36;
      if (v26) {
        break;
      }
      char v38 = v34;
      if (*(void *)(v32 + 24) < v37)
      {
        sub_248839C64(v37, 1);
        unint64_t v33 = sub_248840E50(v31, v30);
        if ((v38 & 1) != (v39 & 1)) {
          goto LABEL_25;
        }
      }
      if (v38) {
        goto LABEL_10;
      }
      uint64_t v21 = a3;
      unsigned __int8 v40 = (void *)*a3;
      *(void *)(*a3 + 8 * (v33 >> 6) + 64) |= 1 << v33;
      long long v41 = (uint64_t *)(v40[6] + 16 * v33);
      *long long v41 = v31;
      v41[1] = v30;
      uint64_t v42 = v40[7] + 24 * v33;
      *(void *)uint64_t v42 = v8;
      *(void *)(v42 + 8) = v7;
      *(unsigned char *)(v42 + 16) = v9;
      uint64_t v43 = v40[2];
      BOOL v26 = __OFADD__(v43, 1);
      uint64_t v44 = v43 + 1;
      if (v26) {
        goto LABEL_24;
      }
      v29 += 40;
      v40[2] = v44;
      if (!--v28) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_248839C64(v15, a2 & 1);
  unint64_t v17 = sub_248840E50(v6, v5);
  if ((v16 & 1) == (v18 & 1))
  {
    unint64_t v12 = v17;
    if ((v16 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    unsigned __int8 v19 = (void *)swift_allocError();
    swift_willThrow();
    id v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26932CDE0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_24882F8D0(v8, v7, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_24887CF98();
  __break(1u);
LABEL_26:
  sub_24887CC38();
  sub_24887C838();
  sub_24887CD28();
  sub_24887C838();
  sub_24887CD48();
  __break(1u);
}

unsigned __int8 *sub_24886AD5C(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v13 = v9 * a3;
              unsigned __int8 v14 = v11 + v12;
              BOOL v15 = v13 >= v14;
              unint64_t v9 = v13 - v14;
              if (!v15) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v25 = a3 + 48;
      unsigned __int8 v26 = a3 + 55;
      unsigned __int8 v27 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v25 = 58;
      }
      else
      {
        unsigned __int8 v27 = 97;
        unsigned __int8 v26 = 65;
      }
      if (result)
      {
        unint64_t v28 = 0;
        do
        {
          unsigned int v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27) {
                return 0;
              }
              char v30 = -87;
            }
            else
            {
              char v30 = -55;
            }
          }
          else
          {
            char v30 = -48;
          }
          if (!is_mul_ok(v28, a3)) {
            return 0;
          }
          unint64_t v31 = v28 * a3;
          unsigned __int8 v32 = v29 + v30;
          BOOL v15 = __CFADD__(v31, v32);
          unint64_t v28 = v31 + v32;
          if (v15) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v16 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v17 = a3 + 48;
  unsigned __int8 v18 = a3 + 55;
  unsigned __int8 v19 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v17 = 58;
  }
  else
  {
    unsigned __int8 v19 = 97;
    unsigned __int8 v18 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  id v20 = result + 1;
  do
  {
    unsigned int v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19) {
          return 0;
        }
        char v22 = -87;
      }
      else
      {
        char v22 = -55;
      }
    }
    else
    {
      char v22 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v23 = v9 * a3;
    unsigned __int8 v24 = v21 + v22;
    BOOL v15 = __CFADD__(v23, v24);
    unint64_t v9 = v23 + v24;
    if (v15) {
      return 0;
    }
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

uint64_t sub_24886AFD8()
{
  unint64_t v0 = sub_24887C8D8();
  uint64_t v4 = sub_24886B058(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_24886B058(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_24886B1B0(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_24886A5A4(v9, 0);
      unint64_t v12 = sub_24886B2B0((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_24887CC88();
LABEL_4:
        JUMPOUT(0x24C581AF0);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x24C581AF0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x24C581AF0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_24886B1B0(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_24886A60C(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_24886A60C(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t sub_24886B2B0(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    _OWORD v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_24886A60C(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_24887C8A8();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_24887CC88();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_24886A60C(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_24887C878();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_24886B4C4(uint64_t a1, uint64_t a2)
{
  uint64_t v87 = a2 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a2 + 64);
  int64_t v88 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  int64_t v6 = 0;
  while (1)
  {
    uint64_t v97 = v5;
    if (v4)
    {
      uint64_t v95 = (v4 - 1) & v4;
      int64_t v96 = v6;
      unint64_t v11 = __clz(__rbit64(v4)) | (v6 << 6);
      goto LABEL_21;
    }
    int64_t v12 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_117;
    }
    if (v12 >= v88) {
      goto LABEL_115;
    }
    unint64_t v13 = *(void *)(v87 + 8 * v12);
    int64_t v14 = v6 + 1;
    if (!v13)
    {
      int64_t v14 = v6 + 2;
      if (v6 + 2 >= v88) {
        goto LABEL_115;
      }
      unint64_t v13 = *(void *)(v87 + 8 * v14);
      if (!v13) {
        break;
      }
    }
LABEL_20:
    uint64_t v95 = (v13 - 1) & v13;
    int64_t v96 = v14;
    unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
LABEL_21:
    uint64_t v16 = *(void *)(a2 + 56) + 24 * v11;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    uint64_t v19 = *(unsigned __int8 *)(v16 + 16);
    uint64_t v20 = *(void *)(a1 + 64);
    long long v21 = *(_OWORD *)(a1 + 16);
    v128[0] = *(_OWORD *)a1;
    v128[1] = v21;
    long long v22 = *(_OWORD *)(a1 + 48);
    v128[2] = *(_OWORD *)(a1 + 32);
    v128[3] = v22;
    uint64_t v129 = v20;
    swift_bridgeObjectRetain();
    uint64_t v98 = v17;
    uint64_t v92 = v18;
    sub_24882D9F4(v17, v18, v19);
    sub_24887C808();
    swift_bridgeObjectRelease();
    switch(v19)
    {
      case 3:
        sub_24887D018();
        sub_24887D028();
        break;
      case 4:
        sub_24887D018();
        sub_24887C808();
        uint64_t v7 = v17;
        uint64_t v8 = v18;
        char v9 = 4;
        goto LABEL_5;
      case 5:
        sub_24887D018();
        sub_24887D018();
        uint64_t v7 = v17;
        uint64_t v99 = *(void *)(v17 + 16);
        if (v99)
        {
          uint64_t v23 = 0;
          while (2)
          {
            uint64_t v27 = v98 + 32 + 24 * v23;
            uint64_t v28 = *(void *)v27;
            uint64_t v29 = *(void *)(v27 + 8);
            uint64_t v102 = v23;
            switch(*(unsigned char *)(v27 + 16))
            {
              case 3:
                sub_24887D018();
                sub_24887D028();
                goto LABEL_29;
              case 4:
                sub_24887D018();
                swift_bridgeObjectRetain();
                sub_24887C808();
                uint64_t v24 = v28;
                uint64_t v25 = v29;
                char v26 = 4;
                goto LABEL_28;
              case 5:
                uint64_t v89 = *(void *)(v27 + 8);
                uint64_t v93 = *(void *)v27;
                sub_24887D018();
                sub_24887D018();
                uint64_t v104 = *(void *)(v28 + 16);
                if (!v104) {
                  goto LABEL_29;
                }
                uint64_t v103 = v28 + 32;
                swift_bridgeObjectRetain();
                uint64_t v30 = 0;
                while (2)
                {
                  uint64_t v34 = v103 + 24 * v30;
                  uint64_t v35 = *(void *)v34;
                  uint64_t v36 = *(void *)(v34 + 8);
                  uint64_t v108 = v30;
                  switch(*(unsigned char *)(v34 + 16))
                  {
                    case 3:
                      sub_24887D018();
                      sub_24887D028();
                      goto LABEL_38;
                    case 4:
                      sub_24887D018();
                      swift_bridgeObjectRetain();
                      sub_24887C808();
                      uint64_t v31 = v35;
                      uint64_t v32 = v36;
                      char v33 = 4;
                      goto LABEL_37;
                    case 5:
                      uint64_t v94 = *(void *)(v34 + 8);
                      uint64_t v100 = *(void *)v34;
                      sub_24887D018();
                      sub_24887D018();
                      uint64_t v111 = *(void *)(v35 + 16);
                      if (!v111) {
                        goto LABEL_38;
                      }
                      uint64_t v110 = v35 + 32;
                      swift_bridgeObjectRetain();
                      uint64_t v37 = 0;
                      while (2)
                      {
                        uint64_t v41 = v110 + 24 * v37;
                        uint64_t v42 = *(void *)v41;
                        uint64_t v43 = *(void *)(v41 + 8);
                        uint64_t v113 = v37;
                        switch(*(unsigned char *)(v41 + 16))
                        {
                          case 3:
                            sub_24887D018();
                            sub_24887D028();
                            goto LABEL_47;
                          case 4:
                            sub_24887D018();
                            swift_bridgeObjectRetain();
                            sub_24887C808();
                            uint64_t v38 = v42;
                            uint64_t v39 = v43;
                            char v40 = 4;
                            goto LABEL_46;
                          case 5:
                            uint64_t v101 = *(void *)(v41 + 8);
                            uint64_t v106 = *(void *)v41;
                            sub_24887D018();
                            sub_24887D018();
                            uint64_t v118 = *(void *)(v42 + 16);
                            if (!v118) {
                              goto LABEL_47;
                            }
                            uint64_t v117 = v42 + 32;
                            swift_bridgeObjectRetain();
                            uint64_t v44 = 0;
                            while (2)
                            {
                              uint64_t v48 = v117 + 24 * v44;
                              uint64_t v49 = *(void *)v48;
                              uint64_t v50 = *(void *)(v48 + 8);
                              switch(*(unsigned char *)(v48 + 16))
                              {
                                case 3:
                                  sub_24887D018();
                                  sub_24887D028();
                                  goto LABEL_56;
                                case 4:
                                  sub_24887D018();
                                  swift_bridgeObjectRetain();
                                  sub_24887C808();
                                  uint64_t v45 = v49;
                                  uint64_t v46 = v50;
                                  char v47 = 4;
                                  goto LABEL_55;
                                case 5:
                                  uint64_t v107 = *(void *)(v48 + 8);
                                  sub_24887D018();
                                  sub_24887D018();
                                  uint64_t v51 = *(void *)(v49 + 16);
                                  if (!v51) {
                                    goto LABEL_56;
                                  }
                                  uint64_t v52 = v49 + 32;
                                  uint64_t v105 = v49;
                                  swift_bridgeObjectRetain();
                                  uint64_t v53 = 0;
                                  uint64_t v114 = v51;
                                  uint64_t v115 = v44;
                                  uint64_t v109 = v49 + 32;
                                  do
                                  {
                                    uint64_t v57 = v52 + 24 * v53;
                                    uint64_t v58 = *(void *)v57;
                                    uint64_t v59 = *(void *)(v57 + 8);
                                    switch(*(unsigned char *)(v57 + 16))
                                    {
                                      case 3:
                                        sub_24887D018();
                                        sub_24887D028();
                                        break;
                                      case 4:
                                        sub_24887D018();
                                        swift_bridgeObjectRetain();
                                        sub_24887C808();
                                        uint64_t v54 = v58;
                                        uint64_t v55 = v59;
                                        char v56 = 4;
                                        goto LABEL_64;
                                      case 5:
                                        uint64_t v112 = *(void *)(v57 + 8);
                                        sub_24887D018();
                                        sub_24887D018();
                                        uint64_t v60 = *(void *)(v58 + 16);
                                        if (v60)
                                        {
                                          uint64_t v61 = v58 + 32;
                                          swift_bridgeObjectRetain();
                                          uint64_t v62 = 0;
                                          uint64_t v116 = v53;
                                          uint64_t v121 = v60;
                                          uint64_t v122 = v58;
                                          uint64_t v120 = v58 + 32;
                                          do
                                          {
                                            uint64_t v63 = v61 + 24 * v62;
                                            uint64_t v64 = *(void *)v63;
                                            uint64_t v65 = *(void *)(v63 + 8);
                                            uint64_t v126 = v62;
                                            switch(*(unsigned char *)(v63 + 16))
                                            {
                                              case 3:
                                                sub_24887D018();
                                                sub_24887D028();
                                                break;
                                              case 4:
                                                sub_24887D018();
                                                swift_bridgeObjectRetain();
                                                sub_24887C808();
                                                sub_24882F8D0(v64, v65, 4);
                                                break;
                                              case 5:
                                                uint64_t v119 = *(void *)(v63 + 8);
                                                uint64_t v124 = *(void *)v63;
                                                sub_24887D018();
                                                sub_24887D018();
                                                uint64_t v66 = *(void *)(v64 + 16);
                                                if (v66)
                                                {
                                                  uint64_t v67 = v124 + 32;
                                                  swift_bridgeObjectRetain();
                                                  uint64_t v68 = 0;
                                                  uint64_t v123 = v66;
                                                  do
                                                  {
                                                    uint64_t v72 = v67 + 24 * v68;
                                                    uint64_t v73 = *(void *)v72;
                                                    uint64_t v74 = *(void *)(v72 + 8);
                                                    uint64_t v127 = v68;
                                                    switch(*(unsigned char *)(v72 + 16))
                                                    {
                                                      case 3:
                                                        sub_24887D018();
                                                        sub_24887D028();
                                                        break;
                                                      case 4:
                                                        sub_24887D018();
                                                        swift_bridgeObjectRetain();
                                                        sub_24887C808();
                                                        uint64_t v69 = v73;
                                                        uint64_t v70 = v74;
                                                        char v71 = 4;
                                                        goto LABEL_80;
                                                      case 5:
                                                        uint64_t v125 = *(void *)(v72 + 8);
                                                        sub_24887D018();
                                                        sub_24887D018();
                                                        uint64_t v75 = *(void *)(v73 + 16);
                                                        if (v75)
                                                        {
                                                          swift_bridgeObjectRetain();
                                                          for (uint64_t i = 0; i != v75; ++i)
                                                          {
                                                            uint64_t v80 = v73 + 32 + 24 * i;
                                                            uint64_t v81 = *(void *)v80;
                                                            uint64_t v82 = *(void *)(v80 + 8);
                                                            switch(*(unsigned char *)(v80 + 16))
                                                            {
                                                              case 3:
                                                                sub_24887D018();
                                                                sub_24887D028();
                                                                break;
                                                              case 4:
                                                                sub_24887D018();
                                                                swift_bridgeObjectRetain();
                                                                sub_24887C808();
                                                                uint64_t v77 = v81;
                                                                uint64_t v78 = v82;
                                                                char v79 = 4;
                                                                goto LABEL_89;
                                                              case 5:
                                                                sub_24887D018();
                                                                sub_24887D018();
                                                                uint64_t v83 = *(void *)(v81 + 16);
                                                                if (v83)
                                                                {
                                                                  swift_bridgeObjectRetain();
                                                                  uint64_t v84 = (unsigned char *)(v81 + 48);
                                                                  do
                                                                  {
                                                                    uint64_t v85 = *((void *)v84 - 2);
                                                                    switch(*v84)
                                                                    {
                                                                      case 3:
                                                                        sub_24887D018();
                                                                        sub_24887D028();
                                                                        break;
                                                                      case 4:
                                                                        sub_24887D018();
                                                                        sub_24887C808();
                                                                        break;
                                                                      case 5:
                                                                        sub_24887D018();
                                                                        sub_24886C460((uint64_t)v128, v85);
                                                                        break;
                                                                      case 6:
                                                                        sub_24887D018();
                                                                        sub_24886B4C4(v128, v85);
                                                                        break;
                                                                      default:
                                                                        sub_24887D018();
                                                                        sub_24887D058();
                                                                        break;
                                                                    }
                                                                    v84 += 24;
                                                                    --v83;
                                                                  }
                                                                  while (v83);
                                                                  sub_24882F8D0(v81, v82, 5);
                                                                }
                                                                break;
                                                              case 6:
                                                                sub_24887D018();
                                                                swift_bridgeObjectRetain();
                                                                sub_24886B4C4(v128, v81);
                                                                uint64_t v77 = v81;
                                                                uint64_t v78 = v82;
                                                                char v79 = 6;
LABEL_89:
                                                                sub_24882F8D0(v77, v78, v79);
                                                                break;
                                                              default:
                                                                sub_24887D018();
                                                                sub_24887D058();
                                                                break;
                                                            }
                                                          }
                                                          sub_24882F8D0(v73, v125, 5);
                                                          uint64_t v60 = v121;
                                                          uint64_t v58 = v122;
                                                          uint64_t v61 = v120;
                                                          uint64_t v67 = v124 + 32;
                                                          uint64_t v66 = v123;
                                                        }
                                                        break;
                                                      case 6:
                                                        sub_24887D018();
                                                        swift_bridgeObjectRetain();
                                                        sub_24886B4C4(v128, v73);
                                                        uint64_t v69 = v73;
                                                        uint64_t v70 = v74;
                                                        char v71 = 6;
LABEL_80:
                                                        sub_24882F8D0(v69, v70, v71);
                                                        break;
                                                      default:
                                                        sub_24887D018();
                                                        sub_24887D058();
                                                        break;
                                                    }
                                                    uint64_t v68 = v127 + 1;
                                                  }
                                                  while (v127 + 1 != v66);
                                                  sub_24882F8D0(v124, v119, 5);
                                                  uint64_t v51 = v114;
                                                  uint64_t v44 = v115;
                                                  uint64_t v53 = v116;
                                                }
                                                break;
                                              case 6:
                                                sub_24887D018();
                                                swift_bridgeObjectRetain();
                                                sub_24886B4C4(v128, v64);
                                                sub_24882F8D0(v64, v65, 6);
                                                break;
                                              default:
                                                sub_24887D018();
                                                sub_24887D058();
                                                break;
                                            }
                                            uint64_t v62 = v126 + 1;
                                          }
                                          while (v126 + 1 != v60);
                                          sub_24882F8D0(v58, v112, 5);
                                          uint64_t v52 = v109;
                                        }
                                        break;
                                      case 6:
                                        sub_24887D018();
                                        swift_bridgeObjectRetain();
                                        sub_24886B4C4(v128, v58);
                                        uint64_t v54 = v58;
                                        uint64_t v55 = v59;
                                        char v56 = 6;
LABEL_64:
                                        sub_24882F8D0(v54, v55, v56);
                                        break;
                                      default:
                                        sub_24887D018();
                                        sub_24887D058();
                                        break;
                                    }
                                    ++v53;
                                  }
                                  while (v53 != v51);
                                  uint64_t v45 = v105;
                                  uint64_t v46 = v107;
                                  char v47 = 5;
LABEL_55:
                                  sub_24882F8D0(v45, v46, v47);
LABEL_56:
                                  if (++v44 != v118) {
                                    continue;
                                  }
                                  uint64_t v38 = v106;
                                  uint64_t v39 = v101;
                                  char v40 = 5;
                                  break;
                                case 6:
                                  sub_24887D018();
                                  swift_bridgeObjectRetain();
                                  sub_24886B4C4(v128, v49);
                                  uint64_t v45 = v49;
                                  uint64_t v46 = v50;
                                  char v47 = 6;
                                  goto LABEL_55;
                                default:
                                  sub_24887D018();
                                  sub_24887D058();
                                  goto LABEL_56;
                              }
                              break;
                            }
LABEL_46:
                            sub_24882F8D0(v38, v39, v40);
LABEL_47:
                            uint64_t v37 = v113 + 1;
                            if (v113 + 1 != v111) {
                              continue;
                            }
                            uint64_t v31 = v100;
                            uint64_t v32 = v94;
                            char v33 = 5;
                            break;
                          case 6:
                            sub_24887D018();
                            swift_bridgeObjectRetain();
                            sub_24886B4C4(v128, v42);
                            uint64_t v38 = v42;
                            uint64_t v39 = v43;
                            char v40 = 6;
                            goto LABEL_46;
                          default:
                            sub_24887D018();
                            sub_24887D058();
                            goto LABEL_47;
                        }
                        break;
                      }
LABEL_37:
                      sub_24882F8D0(v31, v32, v33);
LABEL_38:
                      uint64_t v30 = v108 + 1;
                      if (v108 + 1 != v104) {
                        continue;
                      }
                      uint64_t v24 = v93;
                      uint64_t v25 = v89;
                      char v26 = 5;
                      break;
                    case 6:
                      sub_24887D018();
                      swift_bridgeObjectRetain();
                      sub_24886B4C4(v128, v35);
                      uint64_t v31 = v35;
                      uint64_t v32 = v36;
                      char v33 = 6;
                      goto LABEL_37;
                    default:
                      sub_24887D018();
                      sub_24887D058();
                      goto LABEL_38;
                  }
                  break;
                }
LABEL_28:
                sub_24882F8D0(v24, v25, v26);
LABEL_29:
                uint64_t v23 = v102 + 1;
                if (v102 + 1 != v99) {
                  continue;
                }
                uint64_t v7 = v98;
                break;
              case 6:
                sub_24887D018();
                swift_bridgeObjectRetain();
                sub_24886B4C4(v128, v28);
                uint64_t v24 = v28;
                uint64_t v25 = v29;
                char v26 = 6;
                goto LABEL_28;
              default:
                sub_24887D018();
                sub_24887D058();
                goto LABEL_29;
            }
            break;
          }
        }
        uint64_t v8 = v92;
        char v9 = 5;
        goto LABEL_5;
      case 6:
        sub_24887D018();
        sub_24886B4C4(v128, v17);
        uint64_t v7 = v17;
        uint64_t v8 = v18;
        char v9 = 6;
LABEL_5:
        sub_24882F8D0(v7, v8, v9);
        break;
      default:
        sub_24887D018();
        sub_24887D058();
        break;
    }
    uint64_t v10 = sub_24887D068();
    int64_t v6 = v96;
    uint64_t v5 = v10 ^ v97;
    unint64_t v4 = v95;
  }
  uint64_t v15 = v6 + 3;
  if (v6 + 3 < v88)
  {
    unint64_t v13 = *(void *)(v87 + 8 * v15);
    if (!v13)
    {
      while (1)
      {
        int64_t v14 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          break;
        }
        if (v14 >= v88) {
          goto LABEL_115;
        }
        unint64_t v13 = *(void *)(v87 + 8 * v14);
        ++v15;
        if (v13) {
          goto LABEL_20;
        }
      }
LABEL_117:
      __break(1u);
      JUMPOUT(0x24886C348);
    }
    int64_t v14 = v6 + 3;
    goto LABEL_20;
  }
LABEL_115:
  swift_release();
  return sub_24887D018();
}

uint64_t sub_24886C460(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t result = sub_24887D018();
  if (v4)
  {
    int64_t v6 = (unsigned __int8 *)(a2 + 48);
    do
    {
      uint64_t v7 = *((void *)v6 - 2);
      uint64_t v8 = *((void *)v6 - 1);
      int v9 = *v6;
      v6 += 24;
      switch(v9)
      {
        case 3:
          sub_24887D018();
          uint64_t result = sub_24887D028();
          break;
        case 4:
          sub_24887D018();
          swift_bridgeObjectRetain();
          sub_24887C808();
          uint64_t result = sub_24882F8D0(v7, v8, 4);
          break;
        case 5:
          sub_24887D018();
          swift_bridgeObjectRetain();
          sub_24886C460(a1, v7);
          uint64_t result = sub_24882F8D0(v7, v8, 5);
          break;
        case 6:
          sub_24887D018();
          swift_bridgeObjectRetain();
          sub_24886B4C4(a1, v7);
          uint64_t result = sub_24882F8D0(v7, v8, 6);
          break;
        default:
          sub_24887D018();
          uint64_t result = sub_24887D058();
          break;
      }
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_24886C5CC(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_24887CC28();
    swift_bridgeObjectRelease();
    char v6 = v9;
  }
  else
  {
    MEMORY[0x270FA5388](a1);
    if ((a2 & 0x2000000000000000) != 0)
    {
      char v6 = (v3 > 0x20u || ((0x100003E01uLL >> v3) & 1) == 0)
        && (uint64_t v7 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
        && *v7 == 0;
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v3 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = v3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_24887CC88();
      }
      char v6 = sub_24886C770(v4, v5, (void (*)(uint64_t *__return_ptr))sub_24886E39C);
      swift_bridgeObjectRelease();
    }
  }
  if (v6) {
    return 0;
  }
  else {
    return 0;
  }
}

uint64_t sub_24886C770(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

unsigned __int8 *sub_24886C7D0(uint64_t a1, uint64_t a2, int64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_24887C8C8();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_24886AFD8();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_24887CC88();
  }
LABEL_7:
  unint64_t v11 = sub_24886C8B8(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_24886C8B8(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v14 = v9 * a3;
              unsigned __int8 v15 = v11 + v12;
              BOOL v16 = v14 >= v15;
              unint64_t v9 = v14 - v15;
              if (!v16) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_67;
    }
    if (a2)
    {
      unsigned __int8 v26 = a3 + 48;
      unsigned __int8 v27 = a3 + 55;
      unsigned __int8 v28 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v26 = 58;
      }
      else
      {
        unsigned __int8 v28 = 97;
        unsigned __int8 v27 = 65;
      }
      if (result)
      {
        unint64_t v29 = 0;
        do
        {
          unsigned int v30 = *result;
          if (v30 < 0x30 || v30 >= v26)
          {
            if (v30 < 0x41 || v30 >= v27)
            {
              uint64_t v13 = 0;
              if (v30 < 0x61 || v30 >= v28) {
                return (unsigned __int8 *)v13;
              }
              char v31 = -87;
            }
            else
            {
              char v31 = -55;
            }
          }
          else
          {
            char v31 = -48;
          }
          if (!is_mul_ok(v29, a3)) {
            return 0;
          }
          unint64_t v32 = v29 * a3;
          unsigned __int8 v33 = v30 + v31;
          BOOL v16 = __CFADD__(v32, v33);
          unint64_t v29 = v32 + v33;
          if (v16) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v29;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_67:
    __break(1u);
    return result;
  }
  uint64_t v17 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v18 = a3 + 48;
  unsigned __int8 v19 = a3 + 55;
  unsigned __int8 v20 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v18 = 58;
  }
  else
  {
    unsigned __int8 v20 = 97;
    unsigned __int8 v19 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  long long v21 = result + 1;
  do
  {
    unsigned int v22 = *v21;
    if (v22 < 0x30 || v22 >= v18)
    {
      if (v22 < 0x41 || v22 >= v19)
      {
        uint64_t v13 = 0;
        if (v22 < 0x61 || v22 >= v20) {
          return (unsigned __int8 *)v13;
        }
        char v23 = -87;
      }
      else
      {
        char v23 = -55;
      }
    }
    else
    {
      char v23 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v24 = v9 * a3;
    unsigned __int8 v25 = v22 + v23;
    BOOL v16 = __CFADD__(v24, v25);
    unint64_t v9 = v24 + v25;
    if (v16) {
      return 0;
    }
    ++v21;
    --v17;
  }
  while (v17);
  return (unsigned __int8 *)v9;
}

uint64_t _s18AudioAnalyticsBase10SimpleTypeO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *(uint64_t *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  switch(v4)
  {
    case 1:
      if (v7 != 1) {
        goto LABEL_22;
      }
      sub_24882F8D0(*(void *)a1, v3, 1);
      uint64_t v8 = v5;
      uint64_t v9 = v6;
      char v10 = 1;
      goto LABEL_6;
    case 2:
      if (v7 != 2) {
        goto LABEL_22;
      }
      sub_24882F8D0(*(void *)a1, v3, 2);
      sub_24882F8D0(v5, v6, 2);
      char v11 = *(double *)&v2 == *(double *)&v5;
      return v11 & 1;
    case 3:
      if (v7 != 3) {
        goto LABEL_22;
      }
      sub_24882F8D0(*(void *)a1, v3, 3);
      sub_24882F8D0(v5, v6, 3);
      char v11 = ((v2 & 1) == 0) ^ v5;
      return v11 & 1;
    case 4:
      if (v7 != 4) {
        goto LABEL_21;
      }
      if (v2 == v5 && v3 == v6) {
        char v11 = 1;
      }
      else {
        char v11 = sub_24887CF48();
      }
      sub_24882D9F4(v5, v6, 4);
      sub_24882D9F4(v2, v3, 4);
      sub_24882F8D0(v2, v3, 4);
      sub_24882F8D0(v5, v6, 4);
      return v11 & 1;
    case 5:
      if (v7 != 5) {
        goto LABEL_21;
      }
      sub_24882D9F4(*(void *)a2, *(void *)(a2 + 8), 5);
      sub_24882D9F4(v2, v3, 5);
      char v11 = sub_248866D04(v2, v5);
      sub_24882F8D0(v2, v3, 5);
      sub_24882F8D0(v5, v6, 5);
      return v11 & 1;
    case 6:
      if (v7 == 6)
      {
        sub_24882D9F4(*(void *)a2, *(void *)(a2 + 8), 6);
        sub_24882D9F4(v2, v3, 6);
        char v11 = sub_2488513D0(v2, v5);
        sub_24882F8D0(v2, v3, 6);
        sub_24882F8D0(v5, v6, 6);
      }
      else
      {
LABEL_21:
        swift_bridgeObjectRetain();
LABEL_22:
        sub_24882D9F4(v5, v6, v7);
        sub_24882F8D0(v2, v3, v4);
        sub_24882F8D0(v5, v6, v7);
        char v11 = 0;
      }
      break;
    default:
      if (*(unsigned char *)(a2 + 16)) {
        goto LABEL_22;
      }
      sub_24882F8D0(*(void *)a1, v3, 0);
      uint64_t v8 = v5;
      uint64_t v9 = v6;
      char v10 = 0;
LABEL_6:
      sub_24882F8D0(v8, v9, v10);
      char v11 = v2 == v5;
      break;
  }
  return v11 & 1;
}

unint64_t sub_24886CE04()
{
  unint64_t result = qword_26932CFC0;
  if (!qword_26932CFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CFC0);
  }
  return result;
}

unint64_t sub_24886CE58()
{
  unint64_t result = qword_26932CFC8;
  if (!qword_26932CFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CFC8);
  }
  return result;
}

unint64_t sub_24886CEAC()
{
  unint64_t result = qword_26932CFD0;
  if (!qword_26932CFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CFD0);
  }
  return result;
}

unint64_t sub_24886CF00()
{
  unint64_t result = qword_26932CFE8;
  if (!qword_26932CFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CFE8);
  }
  return result;
}

unint64_t sub_24886CF54()
{
  unint64_t result = qword_26932CFF0;
  if (!qword_26932CFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CFF0);
  }
  return result;
}

unint64_t sub_24886CFA8()
{
  unint64_t result = qword_26932CFF8;
  if (!qword_26932CFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932CFF8);
  }
  return result;
}

unint64_t sub_24886CFFC()
{
  unint64_t result = qword_26932D000;
  if (!qword_26932D000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D000);
  }
  return result;
}

unint64_t sub_24886D050()
{
  unint64_t result = qword_26932D008;
  if (!qword_26932D008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D008);
  }
  return result;
}

uint64_t sub_24886D0A4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26932CFD8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24886D114(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_24886D150()
{
  unint64_t result = qword_26932D068;
  if (!qword_26932D068)
  {
    sub_24887C498();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D068);
  }
  return result;
}

unint64_t sub_24886D1A8()
{
  unint64_t result = qword_26932D070;
  if (!qword_26932D070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D070);
  }
  return result;
}

uint64_t sub_24886D1FC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24886D25C()
{
  sub_24882F8D0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  return MEMORY[0x270FA0238](v0, 33, 7);
}

uint64_t sub_24886D298(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  *(unsigned char *)(a2 + 16) = *((unsigned char *)a1 + 16);
  *(_OWORD *)a2 = v2;
  return a2;
}

void sub_24886D2B0(uint64_t *a1@<X8>)
{
}

uint64_t sub_24886D2D4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24886A4F8(a1, *(void *)(v3 + 16), a2, a3);
}

unint64_t sub_24886D2F8()
{
  unint64_t result = qword_26B143140;
  if (!qword_26B143140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B143140);
  }
  return result;
}

uint64_t sub_24886D350()
{
  return MEMORY[0x263F8E618];
}

uint64_t sub_24886D35C()
{
  return MEMORY[0x263F8D5B0];
}

uint64_t sub_24886D368()
{
  return MEMORY[0x263F8D528];
}

unint64_t sub_24886D378()
{
  unint64_t result = qword_26932D088;
  if (!qword_26932D088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D088);
  }
  return result;
}

uint64_t sub_24886D3CC()
{
  return MEMORY[0x263F8D388];
}

unint64_t sub_24886D3DC()
{
  unint64_t result = qword_26932D090;
  if (!qword_26932D090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D090);
  }
  return result;
}

uint64_t sub_24886D430()
{
  return MEMORY[0x263F8D398];
}

uint64_t sub_24886D43C()
{
  return MEMORY[0x263F8D390];
}

uint64_t destroy for SimpleType(uint64_t a1)
{
  return sub_24882F8D0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s18AudioAnalyticsBase10SimpleTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24882D9F4(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SimpleType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24882D9F4(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24882F8D0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SimpleType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24882F8D0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SimpleType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 250);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 6) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SimpleType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 250;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24886D5D4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_24886D5DC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SimpleType()
{
  return &type metadata for SimpleType;
}

ValueMetadata *type metadata accessor for ConversionError()
{
  return &type metadata for ConversionError;
}

unsigned char *storeEnumTagSinglePayload for SimpleType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24886D6D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SimpleType.CodingKeys()
{
  return &type metadata for SimpleType.CodingKeys;
}

ValueMetadata *type metadata accessor for SimpleType.IntCodingKeys()
{
  return &type metadata for SimpleType.IntCodingKeys;
}

ValueMetadata *type metadata accessor for SimpleType.UintCodingKeys()
{
  return &type metadata for SimpleType.UintCodingKeys;
}

ValueMetadata *type metadata accessor for SimpleType.DoubleCodingKeys()
{
  return &type metadata for SimpleType.DoubleCodingKeys;
}

ValueMetadata *type metadata accessor for SimpleType.BoolCodingKeys()
{
  return &type metadata for SimpleType.BoolCodingKeys;
}

ValueMetadata *type metadata accessor for SimpleType.StringCodingKeys()
{
  return &type metadata for SimpleType.StringCodingKeys;
}

ValueMetadata *type metadata accessor for SimpleType.ArrayCodingKeys()
{
  return &type metadata for SimpleType.ArrayCodingKeys;
}

unsigned char *_s18AudioAnalyticsBase10SimpleTypeO13IntCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24886D808);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SimpleType.DictionaryCodingKeys()
{
  return &type metadata for SimpleType.DictionaryCodingKeys;
}

unint64_t sub_24886D844()
{
  unint64_t result = qword_26932D098;
  if (!qword_26932D098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D098);
  }
  return result;
}

unint64_t sub_24886D89C()
{
  unint64_t result = qword_26932D0A0;
  if (!qword_26932D0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D0A0);
  }
  return result;
}

unint64_t sub_24886D8F4()
{
  unint64_t result = qword_26932D0A8;
  if (!qword_26932D0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D0A8);
  }
  return result;
}

unint64_t sub_24886D94C()
{
  unint64_t result = qword_26932D0B0;
  if (!qword_26932D0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D0B0);
  }
  return result;
}

unint64_t sub_24886D9A4()
{
  unint64_t result = qword_26932D0B8;
  if (!qword_26932D0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D0B8);
  }
  return result;
}

unint64_t sub_24886D9FC()
{
  unint64_t result = qword_26932D0C0;
  if (!qword_26932D0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D0C0);
  }
  return result;
}

unint64_t sub_24886DA54()
{
  unint64_t result = qword_26932D0C8;
  if (!qword_26932D0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D0C8);
  }
  return result;
}

unint64_t sub_24886DAAC()
{
  unint64_t result = qword_26932D0D0;
  if (!qword_26932D0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D0D0);
  }
  return result;
}

unint64_t sub_24886DB04()
{
  unint64_t result = qword_26932D0D8;
  if (!qword_26932D0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D0D8);
  }
  return result;
}

unint64_t sub_24886DB5C()
{
  unint64_t result = qword_26932D0E0;
  if (!qword_26932D0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D0E0);
  }
  return result;
}

unint64_t sub_24886DBB4()
{
  unint64_t result = qword_26932D0E8;
  if (!qword_26932D0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D0E8);
  }
  return result;
}

unint64_t sub_24886DC0C()
{
  unint64_t result = qword_26932D0F0;
  if (!qword_26932D0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D0F0);
  }
  return result;
}

unint64_t sub_24886DC64()
{
  unint64_t result = qword_26932D0F8;
  if (!qword_26932D0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D0F8);
  }
  return result;
}

unint64_t sub_24886DCBC()
{
  unint64_t result = qword_26932D100;
  if (!qword_26932D100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D100);
  }
  return result;
}

unint64_t sub_24886DD14()
{
  unint64_t result = qword_26932D108;
  if (!qword_26932D108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D108);
  }
  return result;
}

unint64_t sub_24886DD6C()
{
  unint64_t result = qword_26932D110;
  if (!qword_26932D110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D110);
  }
  return result;
}

unint64_t sub_24886DDC4()
{
  unint64_t result = qword_26932D118;
  if (!qword_26932D118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D118);
  }
  return result;
}

unint64_t sub_24886DE1C()
{
  unint64_t result = qword_26932D120;
  if (!qword_26932D120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D120);
  }
  return result;
}

unint64_t sub_24886DE74()
{
  unint64_t result = qword_26932D128;
  if (!qword_26932D128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D128);
  }
  return result;
}

unint64_t sub_24886DECC()
{
  unint64_t result = qword_26932D130;
  if (!qword_26932D130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D130);
  }
  return result;
}

unint64_t sub_24886DF24()
{
  unint64_t result = qword_26932D138;
  if (!qword_26932D138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D138);
  }
  return result;
}

unint64_t sub_24886DF7C()
{
  unint64_t result = qword_26932D140;
  if (!qword_26932D140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D140);
  }
  return result;
}

unint64_t sub_24886DFD4()
{
  unint64_t result = qword_26932D148;
  if (!qword_26932D148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D148);
  }
  return result;
}

unint64_t sub_24886E02C()
{
  unint64_t result = qword_26932D150;
  if (!qword_26932D150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D150);
  }
  return result;
}

uint64_t sub_24886E080(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7630441 && a2 == 0xE300000000000000;
  if (v2 || (sub_24887CF48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953393013 && a2 == 0xE400000000000000 || (sub_24887CF48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C62756F64 && a2 == 0xE600000000000000 || (sub_24887CF48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1819242338 && a2 == 0xE400000000000000 || (sub_24887CF48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x676E69727473 && a2 == 0xE600000000000000 || (sub_24887CF48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7961727261 && a2 == 0xE500000000000000 || (sub_24887CF48() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x616E6F6974636964 && a2 == 0xEA00000000007972)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_24887CF48();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

unsigned char *sub_24886E32C@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  v7 = v6 && (unint64_t result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void *sub_24886E39C@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

Swift::String __swiftcall String.init(with4cc:)(Swift::UInt32 with4cc)
{
  uint64_t v1 = sub_24887C728();
  result._object = v2;
  result._countAndFlagsBits = v1;
  return result;
}

Swift::String __swiftcall String.init(with4cc:)(Swift::Int32 with4cc)
{
  uint64_t v1 = sub_24887C728();
  result._object = v2;
  result._countAndFlagsBits = v1;
  return result;
}

void sub_24886E48C(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  if ((a2 & 1) == 0)
  {
    sub_248864918(a1, 3);
    if (v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  CommonConfigFields.init(dict:)(a1, (uint64_t)&v91);
  if (v3)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    return;
  }
  __int16 v7 = (__int16)v91;
  char v8 = BYTE2(v91);
  unint64_t v86 = v92;
  uint64_t v87 = v93;
  uint64_t v88 = v94;
  uint64_t v89 = v95;
  if (a2) {
    uint64_t v9 = 259;
  }
  else {
    uint64_t v9 = 3;
  }
  uint64_t v90 = v96;
  uint64_t v10 = sub_248835B10(1, a1);
  int v12 = sub_248879D44(v10, v11);
  if ((v12 & 0x10000) != 0
    || (__int16 v78 = v12,
        swift_bridgeObjectRelease(),
        uint64_t v13 = sub_248835B10(0, a1),
        unint64_t v15 = sub_24887AF84(v13, v14),
        (v15 & 0x100000000) != 0))
  {
    long long v91 = 0;
    unint64_t v92 = 0xE000000000000000;
    sub_24887CC38();
    sub_24887C838();
    sub_24887C838();
    uint64_t v20 = (uint64_t)v91;
    unint64_t v21 = v92;
    sub_24882C828();
    swift_allocError();
    *(void *)uint64_t v22 = v20;
    *(void *)(v22 + 8) = v21;
    *(unsigned char *)(v22 + 16) = 1;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v23 = 0;
    int v24 = 0;
    int v25 = 0;
    int v26 = 0;
    int v27 = 0;
    int v28 = 0;
    int v29 = 0;
    goto LABEL_12;
  }
  int v77 = v15;
  swift_bridgeObjectRelease();
  sub_248835C18(11, a1);
  uint64_t v17 = v16;
  uint64_t v18 = sub_248835D34(14, a1, v9);
  uint64_t v19 = swift_bridgeObjectRetain();
  sub_248843940(v19, a2 & 1, 0xD000000000000013, 0x8000000248881420);
  uint64_t v85 = v18;
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_248835B10(13, a1);
  uint64_t v32 = v31;
  uint64_t v76 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143D90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24887EA40;
  *(void *)(inited + 32) = v76;
  uint64_t v84 = v32;
  *(void *)(inited + 40) = v32;
  swift_bridgeObjectRetain();
  sub_248843940(inited, a2 & 1, 0x695474757074756FLL, 0xEF646C656946656DLL);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v75 = sub_248863CB4(8, a1, v9);
  if (v75)
  {
    uint64_t v34 = swift_bridgeObjectRetain();
    sub_248843940(v34, a2 & 1, 0x6E696E6E75527369, 0xEF73646C65694667);
    swift_bridgeObjectRelease();
  }
  uint64_t v35 = sub_248863B3C(9, a1, v9);
  if (v36)
  {
    unint64_t v83 = (unint64_t)sub_248843ADC(v35, v36);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v83 = 0;
  }
  if (!(v75 | v83))
  {
    swift_bridgeObjectRelease();
    sub_24882C828();
    swift_allocError();
    *(void *)uint64_t v37 = 0xD000000000000041;
    *(void *)(v37 + 8) = 0x8000000248883010;
    int v23 = 1;
    *(unsigned char *)(v37 + 16) = 1;
    swift_willThrow();
    unint64_t v83 = 0;
    int v27 = 0;
    int v28 = 0;
    int v29 = 0;
    int v24 = 1;
    int v25 = 1;
    int v26 = 1;
    goto LABEL_12;
  }
  uint64_t v82 = sub_248863CB4(2, a1, v9);
  if (v82)
  {
    uint64_t v38 = swift_bridgeObjectRetain();
    sub_248843940(v38, a2 & 1, 0xD000000000000018, 0x8000000248881320);
    swift_bridgeObjectRelease();
  }
  uint64_t v39 = sub_248863CF4(10, a1, v9);
  if (v39)
  {
    uint64_t v40 = v39;
    uint64_t v41 = swift_bridgeObjectRetain();
    uint64_t v42 = sub_248853F50(v41);
    sub_248843940(v42, a2 & 1, 0xD00000000000001ALL, 0x80000002488813D0);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v81 = sub_24887008C(v40);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v81 = 0;
  }
  char v74 = sub_248863BF8(6, a1, v9);
  char v73 = sub_248863BF8(7, a1, v9);
  uint64_t v43 = sub_248835CFC(3, a1, v9);
  uint64_t v44 = swift_bridgeObjectRetain();
  uint64_t v45 = sub_248853F50(v44);
  swift_bridgeObjectRelease();
  sub_248843940(v45, a2 & 1, 0x56746C7561666564, 0xED00007365756C61);
  swift_release();
  uint64_t v80 = Dictionary<>.asSimpleType()(v43);
  if (!v80)
  {
    swift_bridgeObjectRetain();
    uint64_t v64 = sub_24887C6B8();
    uint64_t v66 = v65;
    swift_bridgeObjectRelease();
    sub_24882C828();
    swift_allocError();
    *(void *)uint64_t v67 = v64;
    *(void *)(v67 + 8) = v66;
    *(unsigned char *)(v67 + 16) = 5;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v28 = 0;
    int v23 = 1;
    int v24 = 1;
    int v25 = 1;
    int v26 = 1;
    int v27 = 1;
LABEL_42:
    int v29 = 1;
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v23)
    {
      swift_bridgeObjectRelease();
      if (!v24) {
        goto LABEL_14;
      }
    }
    else if (!v24)
    {
LABEL_14:
      if (v25) {
        goto LABEL_15;
      }
      goto LABEL_22;
    }
    swift_bridgeObjectRelease();
    if (v25)
    {
LABEL_15:
      swift_bridgeObjectRelease();
      if (!v26) {
        goto LABEL_16;
      }
      goto LABEL_23;
    }
LABEL_22:
    if (!v26)
    {
LABEL_16:
      if (v27) {
        goto LABEL_17;
      }
      goto LABEL_24;
    }
LABEL_23:

    if (v27)
    {
LABEL_17:
      swift_bridgeObjectRelease();
      if (!v28) {
        goto LABEL_18;
      }
      goto LABEL_25;
    }
LABEL_24:
    if (!v28)
    {
LABEL_18:
      if (!v29) {
        return;
      }
      goto LABEL_26;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v29) {
      return;
    }
    goto LABEL_26;
  }
  swift_bridgeObjectRelease();
  uint64_t v79 = sub_248863CB4(5, a1, v9);
  uint64_t v46 = sub_248863CD4(15, a1, v9);
  swift_bridgeObjectRelease();
  if (!v46) {
    uint64_t v46 = sub_24882B5BC(MEMORY[0x263F8EE78]);
  }
  uint64_t v47 = Dictionary<>.asSimpleType()(v46);
  if (!v47)
  {
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_24887C6B8();
    uint64_t v70 = v69;
    swift_bridgeObjectRelease();
    sub_24882C828();
    swift_allocError();
    *(void *)uint64_t v71 = v68;
    *(void *)(v71 + 8) = v70;
    *(unsigned char *)(v71 + 16) = 5;
    swift_willThrow();
    swift_bridgeObjectRelease();
    int v23 = 1;
    int v24 = 1;
    int v25 = 1;
    int v26 = 1;
    int v27 = 1;
    int v28 = 1;
    goto LABEL_42;
  }
  uint64_t v48 = v47;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v49 = sub_248856690((uint64_t)&unk_26FC8E458);
  swift_arrayDestroy();
  uint64_t v50 = swift_bridgeObjectRetain();
  uint64_t v51 = sub_24886F0CC(v50, v49);
  uint64_t v52 = MEMORY[0x263F8EE78];
  if (v82) {
    uint64_t v53 = v82;
  }
  else {
    uint64_t v53 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  uint64_t v54 = sub_248870E38(v53, v51);
  swift_bridgeObjectRelease();
  if (v75) {
    uint64_t v52 = v75;
  }
  swift_bridgeObjectRetain();
  uint64_t v55 = sub_248870E38(v52, v54);
  swift_bridgeObjectRelease();
  uint64_t v56 = swift_bridgeObjectRetain();
  sub_24886F0CC(v56, v55);
  uint64_t v57 = swift_bridgeObjectRetain();
  uint64_t v58 = sub_248853E68(v57);
  swift_bridgeObjectRelease();
  long long v91 = v58;
  sub_248870328((uint64_t *)&v91);
  swift_bridgeObjectRelease();
  uint64_t v72 = (uint64_t)v91;
  uint64_t v59 = swift_bridgeObjectRetain();
  uint64_t v60 = sub_24886F0CC(v59, MEMORY[0x263F8EE88]);
  swift_bridgeObjectRetain();
  sub_248870E38(v53, v60);
  swift_bridgeObjectRelease();
  uint64_t v61 = swift_bridgeObjectRetain();
  uint64_t v62 = sub_248853E68(v61);
  swift_bridgeObjectRelease();
  long long v91 = v62;
  sub_248870328((uint64_t *)&v91);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v63 = (uint64_t)v91;
  *(_WORD *)a3 = v7;
  *(unsigned char *)(a3 + 2) = v8;
  *(void *)(a3 + 8) = v86;
  *(void *)(a3 + 16) = v87;
  *(void *)(a3 + 24) = v88;
  *(void *)(a3 + 32) = v89;
  *(void *)(a3 + 40) = v90;
  *(_WORD *)(a3 + 48) = v78;
  *(_DWORD *)(a3 + 52) = v77;
  *(void *)(a3 + 56) = v17;
  *(void *)(a3 + 64) = v85;
  *(void *)(a3 + 72) = v76;
  *(void *)(a3 + 80) = v84;
  *(void *)(a3 + 88) = v75;
  *(void *)(a3 + 96) = v83;
  *(void *)(a3 + 104) = v81;
  *(void *)(a3 + 112) = v79;
  *(void *)(a3 + 120) = v48;
  *(void *)(a3 + 128) = v80;
  *(void *)(a3 + 136) = v82;
  *(void *)(a3 + 144) = v72;
  *(void *)(a3 + 152) = v63;
  *(unsigned char *)(a3 + 160) = v74 & 1;
  *(unsigned char *)(a3 + 161) = v73 & 1;
}

AudioAnalyticsBase::SummaryConfig::DataType_optional __swiftcall SummaryConfig.DataType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_24887CDA8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_24886F0CC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_24883A68C(&v17, v12, v13);
    AudioAnalyticsBase::SummaryConfig::DataType_optional result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t SummaryConfig.commonFields.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 2);
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  *(_WORD *)a1 = *(_WORD *)v1;
  *(unsigned char *)(a1 + 2) = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SummaryConfig.audioEventType.getter()
{
  return *(unsigned __int16 *)(v0 + 48);
}

uint64_t SummaryConfig.audioEventCategory.getter()
{
  return *(unsigned int *)(v0 + 52);
}

double SummaryConfig.minimumRunningTime.getter()
{
  return *(double *)(v0 + 56);
}

uint64_t SummaryConfig.requiredEventFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SummaryConfig.outputTimeField.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SummaryConfig.isRunningFields.getter()
{
  return swift_bridgeObjectRetain();
}

void *SummaryConfig.isRunningPredicate.getter()
{
  uint64_t v1 = *(void **)(v0 + 96);
  id v2 = v1;
  return v1;
}

uint64_t SummaryConfig.makeNewEventOnChangeFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SummaryConfig.dynamicCreationForKeys.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SummaryConfig.requiredDynamicCreationKeyValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SummaryConfig.defaultValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SummaryConfig.alsoIncludeInEventFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SummaryConfig.interestedInFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SummaryConfig.calculatedIncludeInEventFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SummaryConfig.isDecorator.getter()
{
  return *(unsigned __int8 *)(v0 + 160);
}

uint64_t SummaryConfig.isDecoratorOnly.getter()
{
  return *(unsigned __int8 *)(v0 + 161);
}

uint64_t SummaryConfig.DataType.rawValue.getter()
{
  uint64_t result = 0x676E69727473;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7630441;
      break;
    case 2:
      uint64_t result = 0x74616F6C66;
      break;
    case 3:
      uint64_t result = 1819242338;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24886F410(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6576456F69647541;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0x56746C7561666564;
      break;
    case 4:
      unint64_t result = 0x7470697263736564;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
    case 7:
      unint64_t result = 0x61726F6365447369;
      break;
    case 8:
      unint64_t result = 0x6E696E6E75527369;
      break;
    case 10:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 12:
      unint64_t result = 0xD000000000000010;
      break;
    case 13:
      unint64_t result = 0x695474757074756FLL;
      break;
    case 14:
      unint64_t result = 0xD000000000000013;
      break;
    case 15:
      unint64_t result = 0xD000000000000020;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24886F5F4(unsigned __int8 *a1, char *a2)
{
  return sub_248875C30(*a1, *a2);
}

unint64_t sub_24886F604()
{
  unint64_t result = qword_26932D158;
  if (!qword_26932D158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D158);
  }
  return result;
}

uint64_t sub_24886F658()
{
  return sub_24887D068();
}

uint64_t sub_24886F71C()
{
  sub_24887C808();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24886F7C8()
{
  return sub_24887D068();
}

AudioAnalyticsBase::SummaryConfig::DataType_optional sub_24886F888(Swift::String *a1)
{
  return SummaryConfig.DataType.init(rawValue:)(*a1);
}

void sub_24886F894(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x676E69727473;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE300000000000000;
      uint64_t v3 = 7630441;
      goto LABEL_3;
    case 2:
      *a1 = 0x74616F6C66;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 1819242338;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t destroy for SummaryConfig(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SummaryConfig(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  uint64_t v7 = *(void **)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  uint64_t v8 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  uint64_t v10 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v10;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SummaryConfig(uint64_t a1, __int16 *a2)
{
  __int16 v4 = *a2;
  *(unsigned char *)(a1 + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)a1 = v4;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 48) = a2[24];
  *(_DWORD *)(a1 + 52) = *((_DWORD *)a2 + 13);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  *(void *)(a1 + 80) = *((void *)a2 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *((void *)a2 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 96);
  uint64_t v6 = (void *)*((void *)a2 + 12);
  *(void *)(a1 + 96) = v6;
  id v7 = v6;

  *(void *)(a1 + 104) = *((void *)a2 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *((void *)a2 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *((void *)a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *((void *)a2 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *((void *)a2 + 18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *((void *)a2 + 19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *((unsigned char *)a2 + 160);
  *(unsigned char *)(a1 + 161) = *((unsigned char *)a2 + 161);
  return a1;
}

uint64_t assignWithTake for SummaryConfig(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();

  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(unsigned char *)(a1 + 161) = *(unsigned char *)(a2 + 161);
  return a1;
}

uint64_t getEnumTagSinglePayload for SummaryConfig(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 162)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SummaryConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 160) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 162) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 64) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 162) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SummaryConfig()
{
  return &type metadata for SummaryConfig;
}

uint64_t getEnumTagSinglePayload for SummaryConfig.DataType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SummaryConfig.DataType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248870054);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SummaryConfig.DataType()
{
  return &type metadata for SummaryConfig.DataType;
}

uint64_t sub_24887008C(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B143D30);
  uint64_t result = sub_24887CD58();
  int v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v31 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  uint64_t v28 = v6;
  int64_t v29 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v30 = result + 64;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    int64_t v16 = (uint64_t *)(*(void *)(v31 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = (uint64_t *)(*(void *)(v31 + 56) + 16 * i);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_24887CDA8();
    swift_bridgeObjectRelease();
    if (v22 > 3)
    {
      sub_24882C828();
      swift_allocError();
      *(void *)uint64_t v27 = v21;
      *(void *)(v27 + 8) = v20;
      *(unsigned char *)(v27 + 16) = 5;
      swift_bridgeObjectRetain();
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return (uint64_t)v3;
    }
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v30 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    int v23 = (void *)(v3[6] + 16 * i);
    void *v23 = v17;
    v23[1] = v18;
    *(unsigned char *)(v3[7] + i) = v22;
    uint64_t v24 = v3[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v3[2] = v26;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_26;
    }
    if (v13 >= v29) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v29) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v29) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v29) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v29) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_248870328(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24885665C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_248870394(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_248870394(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_24887CEF8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_248870A80(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      unint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      uint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_248870B50((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_2488556B4((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_24887C9B8();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  unint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    unint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_24887CF48();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      int v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_24887CF48()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v11 = sub_248855458(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      unint64_t v11 = sub_248855458((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        unint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_248870B50((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)unint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        unint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      unsigned __int8 v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_24887CF48() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_24887CD38();
  __break(1u);
  return result;
}

uint64_t sub_248870A80(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_24887CF48(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_248870B50(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_24887CF48() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    unint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_24887CF48() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_2488555F8((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_24887CD88();
  __break(1u);
  return result;
}

uint64_t sub_248870DEC()
{
  unint64_t v0 = sub_24887CDA8();
  swift_bridgeObjectRelease();
  if (v0 >= 0x10) {
    return 16;
  }
  else {
    return v0;
  }
}

uint64_t sub_248870E38(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = a2;
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v4 = *(v3 - 1);
      uint64_t v5 = *v3;
      swift_bridgeObjectRetain();
      sub_24883A68C(&v7, v4, v5);
      swift_bridgeObjectRelease();
      v3 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return a2;
}

uint64_t sub_248870EB8(int64_t *a1, char a2)
{
  int64_t v3 = a1[2];
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v28 = MEMORY[0x263F8EE78];
    sub_2488419B0(0, v3, 0);
    uint64_t v4 = v28;
    uint64_t v7 = a1[4];
    swift_bridgeObjectRetain_n();
    sub_24886E48C(v7, a2 & 1, (uint64_t)v26);
    if (v2)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      int64_t v9 = a1 + 5;
      for (int64_t i = v3 - 1; ; --i)
      {
        swift_bridgeObjectRelease();
        long long v19 = v26[4];
        long long v20 = v26[5];
        long long v16 = v26[1];
        long long v17 = v26[2];
        long long v18 = v26[3];
        long long v23 = v26[8];
        long long v24 = v26[9];
        long long v21 = v26[6];
        long long v22 = v26[7];
        __int16 v25 = v27;
        unint64_t v12 = *(void *)(v4 + 16);
        unint64_t v11 = *(void *)(v4 + 24);
        long long v15 = v26[0];
        uint64_t v28 = v4;
        if (v12 >= v11 >> 1)
        {
          sub_2488419B0(v11 > 1, v12 + 1, 1);
          uint64_t v4 = v28;
        }
        *(void *)(v4 + 16) = v12 + 1;
        uint64_t v13 = v4 + 168 * v12;
        *(_OWORD *)(v13 + 48) = v16;
        *(_OWORD *)(v13 + 64) = v17;
        *(_OWORD *)(v13 + 32) = v15;
        *(_OWORD *)(v13 + 112) = v20;
        *(_OWORD *)(v13 + 128) = v21;
        *(_OWORD *)(v13 + 80) = v18;
        *(_OWORD *)(v13 + 96) = v19;
        *(_WORD *)(v13 + 192) = v25;
        *(_OWORD *)(v13 + 160) = v23;
        *(_OWORD *)(v13 + 176) = v24;
        *(_OWORD *)(v13 + 144) = v22;
        if (!i) {
          break;
        }
        uint64_t v14 = *v9++;
        swift_bridgeObjectRetain_n();
        sub_24886E48C(v14, a2 & 1, (uint64_t)v26);
      }
    }
  }
  return v4;
}

uint64_t sub_248871090(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  uint64_t v5 = *(void *)(result + 16);
  if (v5)
  {
    unint64_t v8 = 0;
    unint64_t v9 = MEMORY[0x263F8EE78];
    do
    {
      unint64_t v50 = v9;
      uint64_t v10 = 168 * v8 + 32;
      unint64_t v11 = v8;
      while (1)
      {
        if (v11 >= *(void *)(v4 + 16))
        {
          __break(1u);
          return result;
        }
        long long v12 = *(_OWORD *)(v4 + v10 + 144);
        long long v46 = *(_OWORD *)(v4 + v10 + 128);
        long long v47 = v12;
        __int16 v48 = *(_WORD *)(v4 + v10 + 160);
        long long v13 = *(_OWORD *)(v4 + v10 + 80);
        long long v42 = *(_OWORD *)(v4 + v10 + 64);
        long long v43 = v13;
        long long v14 = *(_OWORD *)(v4 + v10 + 112);
        long long v44 = *(_OWORD *)(v4 + v10 + 96);
        long long v45 = v14;
        long long v15 = *(_OWORD *)(v4 + v10 + 16);
        long long v38 = *(_OWORD *)(v4 + v10);
        long long v39 = v15;
        long long v16 = *(_OWORD *)(v4 + v10 + 48);
        long long v40 = *(_OWORD *)(v4 + v10 + 32);
        long long v41 = v16;
        v37[3] = &type metadata for SummaryConfig;
        v37[4] = &protocol witness table for SummaryConfig;
        uint64_t v17 = swift_allocObject();
        v37[0] = v17;
        long long v18 = *(_OWORD *)(v4 + v10 + 144);
        *(_OWORD *)(v17 + 144) = *(_OWORD *)(v4 + v10 + 128);
        *(_OWORD *)(v17 + 160) = v18;
        *(_WORD *)(v17 + 176) = *(_WORD *)(v4 + v10 + 160);
        long long v19 = *(_OWORD *)(v4 + v10 + 80);
        *(_OWORD *)(v17 + 80) = *(_OWORD *)(v4 + v10 + 64);
        *(_OWORD *)(v17 + 96) = v19;
        long long v20 = *(_OWORD *)(v4 + v10 + 112);
        *(_OWORD *)(v17 + 112) = *(_OWORD *)(v4 + v10 + 96);
        *(_OWORD *)(v17 + 128) = v20;
        long long v21 = *(_OWORD *)(v4 + v10 + 16);
        *(_OWORD *)(v17 + 16) = *(_OWORD *)(v4 + v10);
        *(_OWORD *)(v17 + 32) = v21;
        long long v22 = *(_OWORD *)(v4 + v10 + 48);
        *(_OWORD *)(v17 + 48) = *(_OWORD *)(v4 + v10 + 32);
        *(_OWORD *)(v17 + 64) = v22;
        sub_248871570((uint64_t)&v38);
        sub_248871570((uint64_t)&v38);
        char v23 = sub_248843BF8(v37, a2, a3);
        if (v3)
        {
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
          sub_248871670((uint64_t)&v38);
          unint64_t v9 = v50;
          swift_release();
          goto LABEL_17;
        }
        char v24 = v23;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
        if (v24) {
          break;
        }
        ++v11;
        uint64_t result = sub_248871670((uint64_t)&v38);
        v10 += 168;
        if (v5 == v11)
        {
          unint64_t v9 = v50;
          goto LABEL_17;
        }
      }
      unint64_t v9 = v50;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v49 = v9;
      if ((result & 1) == 0)
      {
        uint64_t result = sub_2488419B0(0, *(void *)(v9 + 16) + 1, 1);
        unint64_t v9 = v49;
      }
      unint64_t v26 = *(void *)(v9 + 16);
      unint64_t v25 = *(void *)(v9 + 24);
      unint64_t v27 = v26 + 1;
      if (v26 >= v25 >> 1)
      {
        unint64_t v50 = v26 + 1;
        uint64_t result = sub_2488419B0(v25 > 1, v26 + 1, 1);
        unint64_t v27 = v50;
        unint64_t v9 = v49;
      }
      unint64_t v8 = v11 + 1;
      *(void *)(v9 + 16) = v27;
      unint64_t v28 = v9 + 168 * v26;
      long long v29 = v38;
      long long v30 = v40;
      *(_OWORD *)(v28 + 48) = v39;
      *(_OWORD *)(v28 + 64) = v30;
      *(_OWORD *)(v28 + 32) = v29;
      long long v31 = v41;
      long long v32 = v42;
      long long v33 = v44;
      *(_OWORD *)(v28 + 112) = v43;
      *(_OWORD *)(v28 + 128) = v33;
      *(_OWORD *)(v28 + 80) = v31;
      *(_OWORD *)(v28 + 96) = v32;
      long long v34 = v45;
      long long v35 = v46;
      long long v36 = v47;
      *(_WORD *)(v28 + 192) = v48;
      *(_OWORD *)(v28 + 160) = v35;
      *(_OWORD *)(v28 + 176) = v36;
      *(_OWORD *)(v28 + 144) = v34;
    }
    while (v5 - 1 != v11);
  }
  else
  {
    unint64_t v9 = MEMORY[0x263F8EE78];
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_24887131C(uint64_t *a1)
{
  uint64_t v14 = *a1;
  if (*(void *)(v14 + 16)
    && (unint64_t v4 = sub_248840EC8(3u), (v5 & 1) != 0)
    && (sub_24882E1C8(*(void *)(v14 + 56) + 32 * v4, (uint64_t)v12),
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C08),
        (swift_dynamicCast() & 1) != 0))
  {
    long long v13 = *(_OWORD *)(a1 + 1);
    uint64_t v2 = a1[3];
    uint64_t v6 = a1[4];
    char v7 = *((unsigned char *)a1 + 40);
    sub_24882E224((uint64_t)&v14);
    sub_24882E250((uint64_t)&v13);
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_248870EB8(v11, v7);
    sub_24882E27C((uint64_t)&v14);
    sub_24882E2A8((uint64_t)&v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v1)
    {
      sub_24882E224((uint64_t)&v14);
      sub_24882E250((uint64_t)&v13);
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_248871090(v8, v2, v6);
      sub_24882E27C((uint64_t)&v14);
      sub_24882E2A8((uint64_t)&v13);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_24882C828();
    swift_allocError();
    *(void *)uint64_t v9 = 0xD00000000000001BLL;
    *(void *)(v9 + 8) = 0x8000000248882F70;
    *(unsigned char *)(v9 + 16) = 0;
    swift_willThrow();
  }
  return v2;
}

uint64_t sub_2488714C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 178, 7);
}

uint64_t sub_248871570(uint64_t a1)
{
  unint64_t v4 = *(void **)(a1 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v2 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_248871670(uint64_t a1)
{
  uint64_t v3 = *(void **)(a1 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24887176C@<X0>(uint64_t a1@<X0>, char a2@<W1>, _OWORD *a3@<X8>)
{
  swift_bridgeObjectRetain();
  if ((a2 & 1) == 0)
  {
    sub_248864944(a1, 6);
    if (v3) {
      return swift_bridgeObjectRelease_n();
    }
  }
  CommonConfigFields.init(dict:)(a1, (uint64_t)&v46);
  if (v3) {
    return swift_bridgeObjectRelease();
  }
  long long v45 = a3;
  __int16 v43 = v46;
  char v41 = BYTE2(v46);
  uint64_t v8 = *((void *)&v46 + 1);
  long long v9 = v47;
  long long v10 = v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_248835E88(5, a1);
  long long v13 = v12;
  uint64_t v14 = v11;
  swift_bridgeObjectRetain();
  v15._countAndFlagsBits = v14;
  v15._object = v13;
  SystemMonitorConfig.MonitorType.init(rawValue:)(v15);
  sub_24882B1E4(a2 & 1, 0xD00000000000001BLL, 0x80000002488830A0, v14, (unint64_t)v13, v46, &v53);
  swift_bridgeObjectRelease();
  char v16 = v53;
  if (v53 == 3)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_248873648(&v46);
    return sub_2488735C8((uint64_t)&v46, (uint64_t)v45);
  }
  if (!v53)
  {
    __int16 v17 = v43;
    char v18 = v41;
LABEL_12:
    char v21 = sub_24887CF48();
    swift_bridgeObjectRelease();
    if (v21)
    {
      uint64_t v19 = 0x646573756E75;
      unint64_t v20 = 0xE600000000000000;
    }
    else
    {
      uint64_t v19 = sub_248835E88(2, a1);
      unint64_t v20 = v22;
    }
    goto LABEL_15;
  }
  __int16 v17 = v43;
  char v18 = v41;
  if (v53 != 1) {
    goto LABEL_12;
  }
  uint64_t v19 = 0x646573756E75;
  swift_bridgeObjectRelease();
  unint64_t v20 = 0xE600000000000000;
LABEL_15:
  swift_bridgeObjectRetain();
  unint64_t v44 = v20;
  uint64_t v23 = sub_248835E88(3, a1);
  uint64_t v25 = v24;
  swift_bridgeObjectRetain();
  uint64_t v42 = v25;
  uint64_t v38 = sub_248835E88(4, a1);
  uint64_t v27 = v26;
  swift_bridgeObjectRetain();
  uint64_t v40 = v27;
  uint64_t v37 = sub_248835E88(1, a1);
  uint64_t v39 = v28;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_248835E88(0, a1);
  long long v31 = v30;
  swift_bridgeObjectRelease();
  v32._countAndFlagsBits = v29;
  v32._object = v31;
  SystemMonitorConfig.DataType.init(rawValue:)(v32);
  if (v53 == 4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24882C828();
    swift_allocError();
    *(void *)uint64_t v33 = 0xD000000000000029;
    *(void *)(v33 + 8) = 0x80000002488830C0;
    *(unsigned char *)(v33 + 16) = 1;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    LOWORD(v46) = v17;
    BYTE2(v46) = v18;
    *((void *)&v46 + 1) = v8;
    long long v47 = v9;
    long long v48 = (unint64_t)v10;
    LOBYTE(v49) = v16;
    *((void *)&v49 + 1) = v23;
    *(void *)&long long v50 = v42;
    *((void *)&v50 + 1) = v19;
    *(void *)&long long v51 = v44;
    *((void *)&v51 + 1) = v38;
    *(void *)uint64_t v52 = v40;
    *(void *)&v52[8] = v37;
    *(void *)&char v52[16] = v39;
    v52[24] = v53;
    sub_248873480((uint64_t)&v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v34 = v51;
    void v45[4] = v50;
    v45[5] = v34;
    v45[6] = *(_OWORD *)v52;
    *(_OWORD *)((char *)v45 + 105) = *(_OWORD *)&v52[9];
    long long v35 = v47;
    *long long v45 = v46;
    v45[1] = v35;
    long long v36 = v49;
    v45[2] = v48;
    unint64_t v45[3] = v36;
    nullsub_1(v45);
    return sub_248873524((uint64_t)&v46);
  }
}

AudioAnalyticsBase::SystemMonitorConfig::MonitorType_optional __swiftcall SystemMonitorConfig.MonitorType.init(rawValue:)(Swift::String rawValue)
{
  id v2 = v1;
  unint64_t v3 = sub_24887CDA8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *id v2 = v5;
  return result;
}

AudioAnalyticsBase::SystemMonitorConfig::DataType_optional __swiftcall SystemMonitorConfig.DataType.init(rawValue:)(Swift::String rawValue)
{
  id v2 = v1;
  unint64_t v3 = sub_24887CDA8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *id v2 = v5;
  return result;
}

uint64_t SystemMonitorConfig.commonFields.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 2);
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  *(_WORD *)a1 = *(_WORD *)v1;
  *(unsigned char *)(a1 + 2) = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void SystemMonitorConfig.monitorType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48);
}

uint64_t SystemMonitorConfig.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SystemMonitorConfig.domain.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SystemMonitorConfig.notification.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SystemMonitorConfig.defaultValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

void SystemMonitorConfig.dataType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 120);
}

uint64_t SystemMonitorConfig.DataType.rawValue.getter()
{
  uint64_t result = 0x676E69727473;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7630441;
      break;
    case 2:
      uint64_t result = 0x656C62756F64;
      break;
    case 3:
      uint64_t result = 1819242338;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2488721EC(unsigned __int8 *a1, char *a2)
{
  return sub_248875410(*a1, *a2);
}

uint64_t sub_2488721F8()
{
  return sub_24887D068();
}

uint64_t sub_2488722B8()
{
  sub_24887C808();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248872360()
{
  return sub_24887D068();
}

AudioAnalyticsBase::SystemMonitorConfig::DataType_optional sub_24887241C(Swift::String *a1)
{
  return SystemMonitorConfig.DataType.init(rawValue:)(*a1);
}

void sub_248872428(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x676E69727473;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE300000000000000;
      uint64_t v3 = 7630441;
      goto LABEL_3;
    case 2:
      *a1 = 0x656C62756F64;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 1819242338;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t SystemMonitorConfig.MonitorType.rawValue.getter()
{
  uint64_t v1 = 0x796669746F6ELL;
  if (*v0 != 1) {
    uint64_t v1 = 0x726568746FLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x73746C7561666564;
  }
}

unint64_t sub_248872500()
{
  unint64_t result = qword_26B143560;
  if (!qword_26B143560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B143560);
  }
  return result;
}

uint64_t sub_248872554(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_248875568(*a1, *a2);
}

unint64_t sub_248872564()
{
  unint64_t result = qword_26B143558;
  if (!qword_26B143558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B143558);
  }
  return result;
}

uint64_t sub_2488725B8()
{
  return sub_24887D068();
}

uint64_t sub_248872654()
{
  sub_24887C808();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2488726DC()
{
  return sub_24887D068();
}

AudioAnalyticsBase::SystemMonitorConfig::MonitorType_optional sub_248872774(Swift::String *a1)
{
  return SystemMonitorConfig.MonitorType.init(rawValue:)(*a1);
}

void sub_248872780(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE800000000000000;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x796669746F6ELL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x726568746FLL;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x73746C7561666564;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t destroy for SystemMonitorConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SystemMonitorConfig(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  uint64_t v8 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SystemMonitorConfig(uint64_t a1, __int16 *a2)
{
  __int16 v4 = *a2;
  *(unsigned char *)(a1 + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)a1 = v4;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  *(void *)(a1 + 80) = *((void *)a2 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *((void *)a2 + 11);
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
  return a1;
}

__n128 __swift_memcpy121_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(_OWORD *)(a1 + 105) = *(long long *)((char *)a2 + 105);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for SystemMonitorConfig(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemMonitorConfig(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 121)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemMonitorConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 120) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 121) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 64) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 121) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemMonitorConfig()
{
  return &type metadata for SystemMonitorConfig;
}

unsigned char *storeEnumTagSinglePayload for SystemMonitorConfig.DataType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248872CECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemMonitorConfig.DataType()
{
  return &type metadata for SystemMonitorConfig.DataType;
}

unsigned char *storeEnumTagSinglePayload for SystemMonitorConfig.MonitorType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248872DF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemMonitorConfig.MonitorType()
{
  return &type metadata for SystemMonitorConfig.MonitorType;
}

void *sub_248872E28(uint64_t a1, char a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v6 = *(void *)(swift_bridgeObjectRetain() + 32);
  swift_bridgeObjectRetain_n();
  sub_24887176C(v6, a2 & 1, v25);
  if (v2)
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v9 = v3 - 1;
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      swift_bridgeObjectRelease();
      sub_2488735C8((uint64_t)v25, (uint64_t)v23);
      sub_2488735C8((uint64_t)v23, (uint64_t)v24);
      if (sub_248873630((uint64_t)v24) != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_2488387D4(0, v7[2] + 1, 1, v7);
        }
        unint64_t v11 = v7[2];
        unint64_t v10 = v7[3];
        if (v11 >= v10 >> 1) {
          uint64_t v7 = sub_2488387D4((void *)(v10 > 1), v11 + 1, 1, v7);
        }
        sub_2488735C8((uint64_t)v23, (uint64_t)v21);
        void v7[2] = v11 + 1;
        long long v12 = &v7[16 * v11];
        long long v13 = v21[3];
        long long v14 = v21[0];
        long long v15 = v21[1];
        v12[4] = v21[2];
        v12[5] = v13;
        _OWORD v12[2] = v14;
        uint64_t v12[3] = v15;
        long long v17 = v21[5];
        long long v16 = v22[0];
        long long v18 = v21[4];
        *(_OWORD *)((char *)v12 + 137) = *(_OWORD *)((char *)v22 + 9);
        v12[7] = v17;
        v12[8] = v16;
        v12[6] = v18;
      }
      if (v9 == v8) {
        break;
      }
      uint64_t v19 = *(void *)(a1 + 8 * v8 + 40);
      swift_bridgeObjectRetain_n();
      sub_24887176C(v19, a2 & 1, v25);
      ++v8;
    }
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_248873008(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  uint64_t v5 = *(void *)(result + 16);
  if (v5)
  {
    unint64_t v8 = 0;
    unint64_t v9 = MEMORY[0x263F8EE78];
    do
    {
      unint64_t v40 = v9;
      uint64_t v10 = (v8 << 7) | 0x20;
      unint64_t v11 = v8;
      while (1)
      {
        if (v11 >= *(void *)(v4 + 16))
        {
          __break(1u);
          return result;
        }
        long long v12 = *(_OWORD *)(v4 + v10 + 80);
        long long v36 = *(_OWORD *)(v4 + v10 + 64);
        long long v37 = v12;
        v38[0] = *(_OWORD *)(v4 + v10 + 96);
        *(_OWORD *)((char *)v38 + 9) = *(_OWORD *)(v4 + v10 + 105);
        long long v13 = *(_OWORD *)(v4 + v10 + 16);
        long long v32 = *(_OWORD *)(v4 + v10);
        long long v33 = v13;
        long long v14 = *(_OWORD *)(v4 + v10 + 48);
        long long v34 = *(_OWORD *)(v4 + v10 + 32);
        long long v35 = v14;
        v31[3] = &type metadata for SystemMonitorConfig;
        v31[4] = &protocol witness table for SystemMonitorConfig;
        long long v15 = (_OWORD *)swift_allocObject();
        v31[0] = v15;
        long long v16 = *(_OWORD *)(v4 + v10 + 80);
        v15[5] = *(_OWORD *)(v4 + v10 + 64);
        v15[6] = v16;
        v15[7] = *(_OWORD *)(v4 + v10 + 96);
        *(_OWORD *)((char *)v15 + 121) = *(_OWORD *)(v4 + v10 + 105);
        long long v17 = *(_OWORD *)(v4 + v10 + 16);
        v15[1] = *(_OWORD *)(v4 + v10);
        void v15[2] = v17;
        long long v18 = *(_OWORD *)(v4 + v10 + 48);
        v15[3] = *(_OWORD *)(v4 + v10 + 32);
        void v15[4] = v18;
        sub_248873480((uint64_t)&v32);
        sub_248873480((uint64_t)&v32);
        char v19 = sub_248843BF8(v31, a2, a3);
        if (v3)
        {
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
          sub_248873524((uint64_t)&v32);
          unint64_t v9 = v40;
          swift_release();
          goto LABEL_17;
        }
        char v20 = v19;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
        if (v20) {
          break;
        }
        ++v11;
        __n128 result = sub_248873524((uint64_t)&v32);
        v10 += 128;
        if (v5 == v11)
        {
          unint64_t v9 = v40;
          goto LABEL_17;
        }
      }
      unint64_t v9 = v40;
      __n128 result = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v39 = v9;
      if ((result & 1) == 0)
      {
        __n128 result = sub_2488419D0(0, *(void *)(v9 + 16) + 1, 1);
        unint64_t v9 = v39;
      }
      unint64_t v22 = *(void *)(v9 + 16);
      unint64_t v21 = *(void *)(v9 + 24);
      unint64_t v23 = v22 + 1;
      if (v22 >= v21 >> 1)
      {
        unint64_t v40 = v22 + 1;
        __n128 result = sub_2488419D0(v21 > 1, v22 + 1, 1);
        unint64_t v23 = v40;
        unint64_t v9 = v39;
      }
      unint64_t v8 = v11 + 1;
      *(void *)(v9 + 16) = v23;
      uint64_t v24 = (_OWORD *)(v9 + (v22 << 7));
      long long v25 = v32;
      long long v26 = v33;
      long long v27 = v35;
      v24[4] = v34;
      v24[5] = v27;
      v24[2] = v25;
      v24[3] = v26;
      long long v28 = v36;
      long long v29 = v37;
      long long v30 = v38[0];
      *(_OWORD *)((char *)v24 + 137) = *(_OWORD *)((char *)v38 + 9);
      _OWORD v24[7] = v29;
      v24[8] = v30;
      v24[6] = v28;
    }
    while (v5 - 1 != v11);
  }
  else
  {
    unint64_t v9 = MEMORY[0x263F8EE78];
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_248873264(uint64_t *a1)
{
  uint64_t v14 = *a1;
  if (*(void *)(v14 + 16)
    && (unint64_t v4 = sub_248840EC8(6u), (v5 & 1) != 0)
    && (sub_24882E1C8(*(void *)(v14 + 56) + 32 * v4, (uint64_t)v12),
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C08),
        (swift_dynamicCast() & 1) != 0))
  {
    long long v13 = *(_OWORD *)(a1 + 1);
    uint64_t v2 = a1[3];
    uint64_t v6 = a1[4];
    char v7 = *((unsigned char *)a1 + 40);
    sub_24882E224((uint64_t)&v14);
    sub_24882E250((uint64_t)&v13);
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_248872E28(v11, v7);
    sub_24882E27C((uint64_t)&v14);
    sub_24882E2A8((uint64_t)&v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v1)
    {
      sub_24882E224((uint64_t)&v14);
      sub_24882E250((uint64_t)&v13);
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_248873008((uint64_t)v8, v2, v6);
      sub_24882E27C((uint64_t)&v14);
      sub_24882E2A8((uint64_t)&v13);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_24882C828();
    swift_allocError();
    *(void *)uint64_t v9 = 0xD00000000000001FLL;
    *(void *)(v9 + 8) = 0x8000000248883080;
    *(unsigned char *)(v9 + 16) = 0;
    swift_willThrow();
  }
  return v2;
}

uint64_t sub_248873408()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 137, 7);
}

uint64_t sub_248873480(uint64_t a1)
{
  return a1;
}

uint64_t sub_248873524(uint64_t a1)
{
  return a1;
}

uint64_t sub_2488735C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1430F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_248873630(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_248873648(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 105) = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_248873664(int a1, size_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_24887CD38();
    __break(1u);
  }
  else
  {
    if (!a2) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v4 = sub_24887C9B8();
    *(void *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1, a2);
    return v4;
  }
  return result;
}

uint64_t sub_248873720(const void *a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = sub_24887CD38();
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    if (!a2) {
      return MEMORY[0x263F8EE78];
    }
    type metadata accessor for kinfo_proc(0);
    uint64_t v4 = sub_24887C9B8();
    *(void *)(v4 + 16) = v2;
    uint64_t v5 = 32;
    do
    {
      memcpy((void *)(v4 + v5), a1, 0x288uLL);
      v5 += 648;
      --v2;
    }
    while (v2);
    return v4;
  }
  return result;
}

uint64_t SystemUtility.__allocating_init(logger:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + OBJC_IVAR____TtC18AudioAnalyticsBase13SystemUtility_logger;
  uint64_t v4 = sub_24887C618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

uint64_t SystemUtility.init(logger:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18AudioAnalyticsBase13SystemUtility_logger;
  uint64_t v4 = sub_24887C618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t SystemUtility.setSysctl<A>(_:newValue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(*(void *)(a4 - 8) + 64);
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 16) = 0;
  uint64_t v11 = (unsigned int *)(v10 + 16);
  void v15[2] = a4;
  v15[3] = v10;
  void v15[4] = a1;
  v15[5] = a2;
  v15[6] = v9;
  uint64_t v16 = v4;
  sub_248873C24(a3, (uint64_t)sub_248873BF8, (uint64_t)v15, a4, MEMORY[0x263F8E628], MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8E658], v12);
  swift_beginAccess();
  uint64_t v13 = *v11;
  swift_release();
  return v13;
}

uint64_t sub_2488739E4()
{
  return MEMORY[0x270FA0238](v0, 20, 7);
}

void sub_2488739F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, size_t a5)
{
  uint64_t v8 = sub_24887C7C8();
  LODWORD(a5) = sysctlbyname((const char *)(v8 + 32), 0, 0, a1, a5);
  swift_release();
  swift_beginAccess();
  *(_DWORD *)(a2 + 16) = a5;
  if (a5 != sub_24887C638())
  {
    swift_retain();
    uint64_t v9 = sub_24887C5F8();
    os_log_type_t v10 = sub_24887CAB8();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)uint64_t v11 = 67109379;
      swift_beginAccess();
      sub_24887CB88();
      swift_release();
      *(_WORD *)(v11 + 8) = 2081;
      uint64_t v13 = _s18AudioAnalyticsBase13SystemUtilityC10debugErrnoSSyFZ_0();
      sub_24882CAE0((uint64_t)v13, v14, &v15);
      sub_24887CB88();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_248827000, v9, v10, "An error occurred in sysctlbyname { returnCode=%d, %{private}s }", (uint8_t *)v11, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x24C582D20](v12, -1, -1);
      MEMORY[0x24C582D20](v11, -1, -1);
    }
    else
    {
      swift_release();
    }
  }
}

void sub_248873BF8(void *a1)
{
  sub_2488739F4(a1, *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_248873C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = MEMORY[0x270FA5388]();
  unint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v15(v12, v14);
  if (v8) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  }
  return result;
}

Swift::Int32 __swiftcall SystemUtility.pgrep(_:allUsers:)(Swift::String _, Swift::Bool allUsers)
{
  uint64_t v93 = *MEMORY[0x263EF8340];
  uint64_t v2 = HIBYTE(_._object) & 0xF;
  if (((uint64_t)_._object & 0x2000000000000000) == 0) {
    uint64_t v2 = _._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (!v2)
  {
    uint64_t v24 = sub_24887C5F8();
    os_log_type_t v25 = sub_24887CAC8();
    if (os_log_type_enabled(v24, v25))
    {
      long long v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v26 = 0;
      _os_log_impl(&dword_248827000, v24, v25, "pgrep failure. Zero-length process name provided.", v26, 2u);
      MEMORY[0x24C582D20](v26, -1, -1);
    }

    return -1;
  }
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_248874F28(16);
  unint64_t v6 = v5;
  uint64_t v40 = v7;
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DB0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_248880B70;
  *(void *)(v10 + 32) = 0xE00000001;
  *(void *)(v10 + 40) = 0;
  *(void *)(v10 + 48) = 0;
  size_t v41 = 0;
  Swift::Int32 v11 = sysctl((int *)(v10 + 32), 3u, 0, &v41, 0, 0);
  if (v11 != sub_24887C638())
  {
    swift_bridgeObjectRelease();
    long long v27 = sub_24887C5F8();
    os_log_type_t v28 = sub_24887CAC8();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(void *)&long long v42 = v30;
      *(_DWORD *)uint64_t v29 = 67109379;
      swift_beginAccess();
      LODWORD(v44) = v11;
      sub_24887CB88();
      *(_WORD *)(v29 + 8) = 2081;
      long long v31 = _s18AudioAnalyticsBase13SystemUtilityC10debugErrnoSSyFZ_0();
      uint64_t v44 = sub_24882CAE0((uint64_t)v31, v32, (uint64_t *)&v42);
      sub_24887CB88();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_248827000, v27, v28, "pgrep failure: sysctl. Failed to get proc list buffer size. { returnCode=%d, %{private}s } ", (uint8_t *)v29, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x24C582D20](v30, -1, -1);
      MEMORY[0x24C582D20](v29, -1, -1);
    }

    swift_setDeallocating();
    swift_deallocClassInstance();
    return v11;
  }
  memset(v45, 0, sizeof(v45));
  uint64_t v46 = 0;
  int v47 = 0;
  uint64_t v54 = 0;
  int v55 = 0;
  uint64_t v56 = 0;
  int v57 = 0;
  uint64_t v61 = 0;
  uint64_t v74 = 0;
  __int16 v75 = 0;
  int v80 = 0;
  uint64_t v87 = 0;
  long long v48 = 0u;
  long long v49 = 0u;
  int v50 = 0;
  int v53 = 0;
  long long v51 = 0u;
  long long v52 = 0u;
  int v60 = 0;
  long long v58 = 0u;
  uint64_t v59 = 0;
  memset(v64, 0, sizeof(v64));
  long long v63 = 0u;
  long long v65 = 0u;
  int v62 = 0;
  int v66 = 0;
  long long v72 = 0u;
  memset(v73, 0, sizeof(v73));
  long long v70 = 0u;
  long long v71 = 0u;
  long long v68 = 0u;
  long long v69 = 0u;
  long long v67 = 0u;
  long long v78 = 0u;
  long long v79 = 0u;
  long long v76 = 0u;
  long long v77 = 0u;
  long long v81 = 0u;
  int v83 = 0;
  uint64_t v82 = 0;
  long long v84 = 0u;
  long long v85 = 0u;
  __int16 v86 = 0;
  long long v88 = 0u;
  uint64_t v89 = 0;
  __int16 v90 = 0;
  long long v91 = 0u;
  long long v92 = 0u;
  uint64_t v12 = (void *)sub_248873720(v45, (uint64_t)v41 / 648);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v12 = sub_248874F14(v12);
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v10 = (uint64_t)sub_248838B38(0, 6, 0, (char *)v10);
  }
  Swift::Int32 v11 = sysctl((int *)(v10 + 32), 3u, v12 + 4, &v41, 0, 0);
  if (v11 != sub_24887C638())
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v33 = sub_24887C5F8();
    os_log_type_t v34 = sub_24887CAC8();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v44 = v36;
      *(_DWORD *)uint64_t v35 = 67109379;
      swift_beginAccess();
      sub_24887CB88();
      *(_WORD *)(v35 + 8) = 2081;
      long long v37 = _s18AudioAnalyticsBase13SystemUtilityC10debugErrnoSSyFZ_0();
      sub_24882CAE0((uint64_t)v37, v38, &v44);
      sub_24887CB88();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_248827000, v33, v34, "pgrep failure: sysctl. Failed to get proc list. { returnCode=%d, %{private}s } ", (uint8_t *)v35, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x24C582D20](v36, -1, -1);
      MEMORY[0x24C582D20](v35, -1, -1);
    }
    swift_bridgeObjectRelease();

    return v11;
  }
  uid_t v13 = geteuid();
  uint64_t v14 = v12[2];
  if (!v14)
  {
LABEL_37:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return -1;
  }
  uid_t v15 = v13;
  unint64_t v16 = v4 >> 16;
  swift_bridgeObjectRetain();
  uint64_t v17 = (char *)v12 + 275;
  uint64_t v18 = v9;
  while (1)
  {
    Swift::Int32 v11 = *(_DWORD *)(v17 - 203);
    if (v15 != *(_DWORD *)(v17 + 177) && !allUsers) {
      goto LABEL_14;
    }
    char v20 = v17[16];
    long long v42 = *(_OWORD *)v17;
    char v43 = v20;
    uint64_t v21 = sub_24887C858();
    if (v11 >= 1) {
      break;
    }
    swift_bridgeObjectRelease();
LABEL_13:
    uint64_t v9 = v18;
LABEL_14:
    v17 += 648;
    if (!--v14)
    {
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
  }
  if ((v22 & 0x2000000000000000) != 0) {
    uint64_t v23 = HIBYTE(v22) & 0xF;
  }
  else {
    uint64_t v23 = v21 & 0xFFFFFFFFFFFFLL;
  }
  if (v21 == v40 && v22 == v9 && !v16 && v23 == v6 >> 16)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }
  char v19 = sub_24887CF08();
  swift_bridgeObjectRelease();
  if ((v19 & 1) == 0) {
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
LABEL_41:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

Swift::Int32 __swiftcall SystemUtility.pkill(_:signal:)(Swift::String _, Swift::Int32 signal)
{
  object = _._object;
  uint64_t countAndFlagsBits = _._countAndFlagsBits;
  Swift::Int32 v5 = SystemUtility.pgrep(_:allUsers:)(_, 1);
  if (v5 < 1)
  {
    swift_bridgeObjectRetain_n();
    uid_t v13 = sub_24887C5F8();
    os_log_type_t v14 = sub_24887CAC8();
    if (os_log_type_enabled(v13, v14))
    {
      uid_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v18 = v16;
      *(_DWORD *)uid_t v15 = 136380675;
      swift_bridgeObjectRetain();
      sub_24882CAE0(countAndFlagsBits, (unint64_t)object, &v18);
      sub_24887CB88();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_248827000, v13, v14, "Unable to retrieve pid for process. { procName=%{private}s }", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C582D20](v16, -1, -1);
      MEMORY[0x24C582D20](v15, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    return -1;
  }
  else
  {
    Swift::Int32 v6 = kill(v5, signal);
    if (v6 != sub_24887C638())
    {
      uint64_t v7 = sub_24887C5F8();
      os_log_type_t v8 = sub_24887CAC8();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = swift_slowAlloc();
        uint64_t v10 = swift_slowAlloc();
        uint64_t v18 = v10;
        *(_DWORD *)uint64_t v9 = 67109379;
        sub_24887CB88();
        *(_WORD *)(v9 + 8) = 2081;
        Swift::Int32 v11 = _s18AudioAnalyticsBase13SystemUtilityC10debugErrnoSSyFZ_0();
        sub_24882CAE0((uint64_t)v11, v12, &v18);
        sub_24887CB88();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_248827000, v7, v8, "Failed to kill process { returnCode=%d, %{private}s }", (uint8_t *)v9, 0x12u);
        swift_arrayDestroy();
        MEMORY[0x24C582D20](v10, -1, -1);
        MEMORY[0x24C582D20](v9, -1, -1);
      }
    }
  }
  return v6;
}

Swift::Int32_optional __swiftcall SystemUtility.spawn(cmd:)(Swift::OpaquePointer cmd)
{
  v38[1] = *(posix_spawnattr_t *)MEMORY[0x263EF8340];
  v38[0] = 0;
  int v2 = posix_spawnattr_init(v38);
  if (v2 != sub_24887C638())
  {
    Swift::Int32 v11 = sub_24887C5F8();
    os_log_type_t v12 = sub_24887CAB8();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v37 = v14;
      *(_DWORD *)uint64_t v13 = 67109379;
      sub_24887CB88();
      *(_WORD *)(v13 + 8) = 2081;
      uid_t v15 = _s18AudioAnalyticsBase13SystemUtilityC10debugErrnoSSyFZ_0();
      uint64_t v36 = sub_24882CAE0((uint64_t)v15, v16, &v37);
      sub_24887CB88();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_248827000, v11, v12, "posix_spawnattr_init failed. { returnCode=%d, %{private}s }", (uint8_t *)v13, 0x12u);
      unsigned __int8 v9 = 1;
      swift_arrayDestroy();
      MEMORY[0x24C582D20](v14, -1, -1);
      MEMORY[0x24C582D20](v13, -1, -1);

      uint64_t v10 = 0;
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  sigset_t v35 = 0;
  sigemptyset(&v35);
  int v3 = posix_spawnattr_setsigmask(v38, &v35);
  if (v3 != sub_24887C638())
  {
    Swift::Int32 v11 = sub_24887C5F8();
    os_log_type_t v17 = sub_24887CAB8();
    if (!os_log_type_enabled(v11, v17)) {
      goto LABEL_22;
    }
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v37 = v19;
    *(_DWORD *)uint64_t v18 = 67109379;
    LODWORD(v36) = v3;
    sub_24887CB88();
    *(_WORD *)(v18 + 8) = 2081;
    char v20 = _s18AudioAnalyticsBase13SystemUtilityC10debugErrnoSSyFZ_0();
    uint64_t v36 = sub_24882CAE0((uint64_t)v20, v21, &v37);
    sub_24887CB88();
    swift_bridgeObjectRelease();
    uint64_t v22 = "posix_spawnattr_setsigmask failed. { returnCode=%d, %{private}s }";
LABEL_21:
    _os_log_impl(&dword_248827000, v11, v17, v22, (uint8_t *)v18, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C582D20](v19, -1, -1);
    MEMORY[0x24C582D20](v18, -1, -1);
    goto LABEL_22;
  }
  sigset_t v34 = 0;
  sigfillset(&v34);
  int v4 = posix_spawnattr_setsigdefault(v38, &v34);
  if (v4 != sub_24887C638())
  {
    Swift::Int32 v11 = sub_24887C5F8();
    os_log_type_t v17 = sub_24887CAB8();
    if (!os_log_type_enabled(v11, v17)) {
      goto LABEL_22;
    }
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v37 = v19;
    *(_DWORD *)uint64_t v18 = 67109379;
    LODWORD(v36) = v4;
    sub_24887CB88();
    *(_WORD *)(v18 + 8) = 2081;
    uint64_t v23 = _s18AudioAnalyticsBase13SystemUtilityC10debugErrnoSSyFZ_0();
    uint64_t v36 = sub_24882CAE0((uint64_t)v23, v24, &v37);
    sub_24887CB88();
    swift_bridgeObjectRelease();
    uint64_t v22 = "posix_spawnattr_setsigdefault failed. { returnCode=%d, %{private}s }";
    goto LABEL_21;
  }
  __int16 v33 = 0;
  int v5 = posix_spawnattr_getflags(v38, &v33);
  if (v5 != sub_24887C638())
  {
    Swift::Int32 v11 = sub_24887C5F8();
    os_log_type_t v17 = sub_24887CAB8();
    if (!os_log_type_enabled(v11, v17)) {
      goto LABEL_22;
    }
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v37 = v19;
    *(_DWORD *)uint64_t v18 = 67109379;
    LODWORD(v36) = v5;
    sub_24887CB88();
    *(_WORD *)(v18 + 8) = 2081;
    os_log_type_t v25 = _s18AudioAnalyticsBase13SystemUtilityC10debugErrnoSSyFZ_0();
    uint64_t v36 = sub_24882CAE0((uint64_t)v25, v26, &v37);
    sub_24887CB88();
    swift_bridgeObjectRelease();
    uint64_t v22 = "posix_spawnattr_getflags failed. { returnCode=%d, %{private}s }";
    goto LABEL_21;
  }
  v33 |= 0xCu;
  int v6 = posix_spawnattr_setflags(v38, v33);
  if (v6 != sub_24887C638())
  {
    Swift::Int32 v11 = sub_24887C5F8();
    os_log_type_t v17 = sub_24887CAB8();
    if (!os_log_type_enabled(v11, v17)) {
      goto LABEL_22;
    }
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v37 = v19;
    *(_DWORD *)uint64_t v18 = 67109379;
    LODWORD(v36) = v6;
    sub_24887CB88();
    *(_WORD *)(v18 + 8) = 2081;
    long long v27 = _s18AudioAnalyticsBase13SystemUtilityC10debugErrnoSSyFZ_0();
    uint64_t v36 = sub_24882CAE0((uint64_t)v27, v28, &v37);
    sub_24887CB88();
    swift_bridgeObjectRelease();
    uint64_t v22 = "posix_spawnattr_setflags failed. { returnCode=%d, %{private}s }";
    goto LABEL_21;
  }
  unsigned int v32 = 0;
  uint64_t v7 = (char *const *)sub_248874FC4((uint64_t)cmd._rawValue);
  if (!*((void *)v7 + 2)) {
    __break(1u);
  }
  int v8 = posix_spawnp((pid_t *)&v32, *((const char **)v7 + 4), 0, v38, v7 + 4, 0);
  swift_bridgeObjectRelease();
  if (v8 != sub_24887C638())
  {
    Swift::Int32 v11 = sub_24887C5F8();
    os_log_type_t v17 = sub_24887CAB8();
    if (os_log_type_enabled(v11, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v37 = v19;
      *(_DWORD *)uint64_t v18 = 67109379;
      LODWORD(v36) = v8;
      sub_24887CB88();
      *(_WORD *)(v18 + 8) = 2081;
      uint64_t v29 = _s18AudioAnalyticsBase13SystemUtilityC10debugErrnoSSyFZ_0();
      uint64_t v36 = sub_24882CAE0((uint64_t)v29, v30, &v37);
      sub_24887CB88();
      swift_bridgeObjectRelease();
      uint64_t v22 = "posix_spawnp failed. { returnCode=%d, %{private}s }";
      goto LABEL_21;
    }
LABEL_22:

    uint64_t v10 = 0;
    unsigned __int8 v9 = 1;
    goto LABEL_23;
  }
  unsigned __int8 v9 = 0;
  uint64_t v10 = v32;
LABEL_23:
  LOBYTE(v38[0]) = v9;
  return (Swift::Int32_optional)(v10 | ((unint64_t)v9 << 32));
}

char *sub_248874DB8@<X0>(const char *a1@<X0>, char **a2@<X8>)
{
  uint64_t result = strdup(a1);
  *a2 = result;
  return result;
}

uint64_t SystemUtility.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18AudioAnalyticsBase13SystemUtility_logger;
  uint64_t v2 = sub_24887C618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SystemUtility.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18AudioAnalyticsBase13SystemUtility_logger;
  uint64_t v2 = sub_24887C618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

void *sub_248874EEC(void *a1)
{
  return sub_248838690(0, a1[2], 0, a1);
}

char *sub_248874F00(uint64_t a1)
{
  return sub_248838A00(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_248874F14(void *a1)
{
  return sub_248838A0C(0, a1[2], 0, a1);
}

uint64_t sub_248874F28(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_24887C818();
    return sub_24887C8D8();
  }
  return result;
}

void *sub_248874FC4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = (void *)MEMORY[0x263F8EE78];
  if (v1)
  {
    unint64_t v16 = (void *)MEMORY[0x263F8EE78];
    sub_248841AF8(0, v1, 0);
    int v4 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v5 = *v4;
      if ((*v4 & 0x1000000000000000) != 0) {
        break;
      }
      if ((v5 & 0x2000000000000000) != 0)
      {
        *(void *)__s1 = *(v4 - 1);
        uint64_t v14 = v5 & 0xFFFFFFFFFFFFFFLL;
        swift_bridgeObjectRetain();
        int v6 = __s1;
      }
      else
      {
        if ((*(v4 - 1) & 0x1000000000000000) == 0) {
          break;
        }
        swift_bridgeObjectRetain();
        int v6 = (char *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      uid_t v15 = strdup(v6);
LABEL_9:
      swift_bridgeObjectRelease();
      uint64_t v7 = v15;
      uint64_t v2 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_248841AF8(0, v2[2] + 1, 1);
        uint64_t v2 = v16;
      }
      unint64_t v9 = v2[2];
      unint64_t v8 = v2[3];
      if (v9 >= v8 >> 1)
      {
        sub_248841AF8(v8 > 1, v9 + 1, 1);
        uint64_t v2 = v16;
      }
      v4 += 2;
      v2[2] = v9 + 1;
      v2[v9 + 4] = v7;
      if (!--v1) {
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26932D160);
    sub_24887CC28();
    goto LABEL_9;
  }
LABEL_16:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_248838C48(0, v2[2] + 1, 1, v2);
  }
  unint64_t v11 = v2[2];
  unint64_t v10 = v2[3];
  if (v11 >= v10 >> 1) {
    uint64_t v2 = sub_248838C48((void *)(v10 > 1), v11 + 1, 1, v2);
  }
  v2[2] = v11 + 1;
  v2[v11 + 4] = 0;
  return v2;
}

uint64_t sub_2488751AC()
{
  return type metadata accessor for SystemUtility();
}

uint64_t type metadata accessor for SystemUtility()
{
  uint64_t result = qword_26B143158;
  if (!qword_26B143158) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_248875200()
{
  uint64_t result = sub_24887C618();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SystemUtility(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SystemUtility);
}

uint64_t dispatch thunk of SystemUtility.__allocating_init(logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_2488752BC(uint64_t a1, uint64_t a2)
{
  return sub_248875304(a1, a2, Logger.ServiceLoggerCategory.rawValue.getter);
}

uint64_t sub_2488752D4(uint64_t a1, uint64_t a2)
{
  return sub_248875304(a1, a2, (uint64_t (*)(void))Config.WorkerConfigs.rawValue.getter);
}

uint64_t sub_2488752EC(uint64_t a1, uint64_t a2)
{
  return sub_248875304(a1, a2, Keys.rawValue.getter);
}

uint64_t sub_248875304(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = a3();
  uint64_t v6 = v5;
  if (v4 == a3() && v6 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_24887CF48();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_2488753A8(char a1, char a2)
{
  if (*(void *)&aRoot_4[8 * a1] == *(void *)&aRoot_4[8 * a2]) {
    char v2 = 1;
  }
  else {
    char v2 = sub_24887CF48();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_248875410(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x676E69727473;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x676E69727473;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7630441;
      break;
    case 2:
      uint64_t v5 = 0x656C62756F64;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1819242338;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE300000000000000;
      if (v5 == 7630441) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x656C62756F64;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1819242338) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_24887CF48();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_248875568(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x796669746F6ELL;
    }
    else {
      uint64_t v3 = 0x726568746FLL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE600000000000000;
    }
    else {
      unint64_t v4 = 0xE500000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x796669746F6ELL;
      }
      else {
        uint64_t v6 = 0x726568746FLL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE600000000000000;
      }
      else {
        unint64_t v7 = 0xE500000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE800000000000000;
    uint64_t v3 = 0x73746C7561666564;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE800000000000000;
  if (v3 != 0x73746C7561666564)
  {
LABEL_21:
    char v8 = sub_24887CF48();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_248875674(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x80000002488811C0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x73646C697562;
      break;
    case 2:
      unint64_t v5 = 0xD000000000000012;
      uint64_t v6 = "clientProcessNames";
      goto LABEL_9;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x746E656D6D6F63;
      break;
    case 4:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x73746E656D6D6F63;
      break;
    case 5:
      unint64_t v5 = 0xD000000000000018;
      uint64_t v6 = "HostApplicationDisplayID";
      goto LABEL_9;
    case 6:
      unint64_t v5 = 0x6C616E7265746E69;
      goto LABEL_11;
    case 7:
      uint64_t v6 = "operatingSystems";
LABEL_9:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    case 8:
      unint64_t v5 = 0x6D726F6674616C70;
LABEL_11:
      unint64_t v3 = 0xE900000000000073;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000002488811C0;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE600000000000000;
      if (v5 == 0x73646C697562) {
        goto LABEL_25;
      }
      goto LABEL_29;
    case 2:
      unint64_t v2 = 0xD000000000000012;
      char v8 = "clientProcessNames";
      goto LABEL_23;
    case 3:
      unint64_t v7 = 0xE700000000000000;
      if (v5 != 0x746E656D6D6F63) {
        goto LABEL_29;
      }
      goto LABEL_25;
    case 4:
      unint64_t v7 = 0xE800000000000000;
      if (v5 != 0x73746E656D6D6F63) {
        goto LABEL_29;
      }
      goto LABEL_25;
    case 5:
      unint64_t v2 = 0xD000000000000018;
      char v8 = "HostApplicationDisplayID";
      goto LABEL_23;
    case 6:
      uint64_t v9 = 0x6C616E7265746E69;
      goto LABEL_28;
    case 7:
      char v8 = "operatingSystems";
LABEL_23:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      goto LABEL_24;
    case 8:
      uint64_t v9 = 0x6D726F6674616C70;
LABEL_28:
      unint64_t v7 = 0xE900000000000073;
      if (v5 != v9) {
        goto LABEL_29;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v5 != v2) {
        goto LABEL_29;
      }
LABEL_25:
      if (v3 == v7) {
        char v10 = 1;
      }
      else {
LABEL_29:
      }
        char v10 = sub_24887CF48();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
  }
}

uint64_t sub_2488758F4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 5459817;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 5459817;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x534F6863746177;
      break;
    case 2:
      uint64_t v5 = 1397716596;
      unint64_t v3 = 0xE400000000000000;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x534F63616DLL;
      break;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1397715576;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x534F6863746177) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1397716596) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x534F63616DLL;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1397715576) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_24887CF48();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_248875A90(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x64616F6C7265766FLL;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x64616F6C7265766FLL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6573616870;
      break;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x73747469726973;
      break;
    case 3:
      uint64_t v5 = 0x65646F63656D6974;
      unint64_t v3 = 0xED00006575737349;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6573616870) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x73747469726973;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xED00006575737349;
      if (v5 == 0x65646F63656D6974) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_24887CF48();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_248875C30(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x676E69727473;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x676E69727473;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7630441;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x74616F6C66;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1819242338;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE300000000000000;
      if (v5 == 7630441) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x74616F6C66;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1819242338) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_24887CF48();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_248875D90(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1953460082;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1953460082;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x726576726573;
      break;
    case 2:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 6517874;
      break;
    case 3:
      uint64_t v5 = 0x656972616D6D7573;
      unint64_t v3 = 0xE900000000000073;
      break;
    case 4:
      uint64_t v5 = 0x74726F7065526F69;
      unint64_t v3 = 0xEB00000000676E69;
      break;
    case 5:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 6513249;
      break;
    case 6:
      uint64_t v5 = 0x6F4D6D6574737973;
      unint64_t v3 = 0xEE0073726F74696ELL;
      break;
    case 7:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x726574756F72;
      break;
    case 8:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6E6970736C696174;
      break;
    case 9:
      uint64_t v5 = 1953719668;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v7 = 1987208563;
      goto LABEL_24;
    case 2:
      unint64_t v6 = 0xE300000000000000;
      unsigned __int16 v8 = 29810;
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xE900000000000073;
      if (v5 != 0x656972616D6D7573) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 4:
      unint64_t v6 = 0xEB00000000676E69;
      if (v5 != 0x74726F7065526F69) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 5:
      unint64_t v6 = 0xE300000000000000;
      unsigned __int16 v8 = 25185;
LABEL_19:
      if (v5 != (v8 | 0x630000)) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 6:
      unint64_t v6 = 0xEE0073726F74696ELL;
      if (v5 != 0x6F4D6D6574737973) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 7:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v7 = 1953853298;
LABEL_24:
      if (v5 != (v7 & 0xFFFF0000FFFFFFFFLL | 0x726500000000)) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 8:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v2 = 0x6E6970736C696174;
      goto LABEL_27;
    case 9:
      if (v5 != 1953719668) {
        goto LABEL_31;
      }
      goto LABEL_28;
    default:
LABEL_27:
      if (v5 != v2) {
        goto LABEL_31;
      }
LABEL_28:
      if (v3 == v6) {
        char v9 = 1;
      }
      else {
LABEL_31:
      }
        char v9 = sub_24887CF48();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_24887605C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  if ((a2 & 1) == 0)
  {
    sub_248864970(a1, 8);
    if (v3) {
      return swift_bridgeObjectRelease_n();
    }
  }
  CommonConfigFields.init(dict:)(a1, (uint64_t)&v30);
  if (v3) {
    return swift_bridgeObjectRelease();
  }
  int v37 = v31;
  int v38 = v30;
  uint64_t v8 = v32;
  uint64_t v9 = v33;
  uint64_t v10 = v34;
  uint64_t v11 = v35;
  uint64_t v12 = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v28 = v11;
  uint64_t v29 = sub_24883D8B4(a1);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v29 + 16);
  if (v13)
  {
    uint64_t v24 = v12;
    uint64_t v25 = v10;
    uint64_t v26 = v9;
    uint64_t v27 = v8;
    uint64_t v14 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    uid_t v15 = (char *)MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v17 = *(v14 - 1);
      uint64_t v16 = *v14;
      swift_bridgeObjectRetain_n();
      unint64_t v18 = sub_24887CDA8();
      swift_bridgeObjectRelease();
      if (v18 >= 4)
      {
        if ((a2 & 1) == 0)
        {
          sub_24882C828();
          swift_allocError();
          *(void *)uint64_t v23 = v17;
          *(void *)(v23 + 8) = v16;
          *(unsigned char *)(v23 + 16) = 5;
          swift_willThrow();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uid_t v15 = sub_248838D58(0, *((void *)v15 + 2) + 1, 1, v15);
        }
        unint64_t v20 = *((void *)v15 + 2);
        unint64_t v19 = *((void *)v15 + 3);
        if (v20 >= v19 >> 1) {
          uid_t v15 = sub_248838D58((char *)(v19 > 1), v20 + 1, 1, v15);
        }
        *((void *)v15 + 2) = v20 + 1;
        v15[v20 + 32] = v18;
      }
      v14 += 2;
      if (!--v13)
      {
        uint64_t v21 = v24;
        swift_bridgeObjectRelease();
        uint64_t v22 = v28;
        swift_bridgeObjectRelease();
        uint64_t v10 = v25;
        swift_bridgeObjectRelease();
        uint64_t v9 = v26;
        swift_bridgeObjectRelease();
        uint64_t v8 = v27;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = v12;
  uid_t v15 = (char *)MEMORY[0x263F8EE78];
LABEL_19:
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v15;
  *(_WORD *)(a3 + 8) = v38;
  *(unsigned char *)(a3 + 10) = v37;
  *(void *)(a3 + 16) = v8;
  *(void *)(a3 + 24) = v9;
  *(void *)(a3 + 32) = v10;
  *(void *)(a3 + 40) = v22;
  *(void *)(a3 + 48) = v21;
  return result;
}

AudioAnalyticsBase::TailspinConfig::CaseName_optional __swiftcall TailspinConfig.CaseName.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_24887CDA8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t TailspinConfig.enabledCases.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TailspinConfig.commonFields.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 10);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  *(_WORD *)a1 = *(_WORD *)(v1 + 8);
  *(unsigned char *)(a1 + 2) = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 TailspinConfig.commonFields.setter(__int16 *a1)
{
  __int16 v2 = *a1;
  char v3 = *((unsigned char *)a1 + 2);
  __n128 v6 = *(__n128 *)(a1 + 12);
  long long v7 = *(_OWORD *)(a1 + 4);
  uint64_t v4 = *((void *)a1 + 5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_WORD *)(v1 + 8) = v2;
  *(unsigned char *)(v1 + 10) = v3;
  __n128 result = v6;
  *(_OWORD *)(v1 + 16) = v7;
  *(__n128 *)(v1 + 32) = v6;
  *(void *)(v1 + 48) = v4;
  return result;
}

uint64_t (*TailspinConfig.commonFields.modify())()
{
  return nullsub_1;
}

void *static TailspinConfig.CaseName.allCases.getter()
{
  return &unk_26FC8F3B8;
}

uint64_t TailspinConfig.CaseName.rawValue.getter()
{
  uint64_t result = 0x64616F6C7265766FLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6573616870;
      break;
    case 2:
      uint64_t result = 0x73747469726973;
      break;
    case 3:
      uint64_t result = 0x65646F63656D6974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_248876644(unsigned __int8 *a1, char *a2)
{
  return sub_248875A90(*a1, *a2);
}

unint64_t sub_248876654()
{
  unint64_t result = qword_26932D168;
  if (!qword_26932D168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D168);
  }
  return result;
}

uint64_t sub_2488766A8()
{
  return sub_24887D068();
}

uint64_t sub_24887678C()
{
  sub_24887C808();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248876858()
{
  return sub_24887D068();
}

AudioAnalyticsBase::TailspinConfig::CaseName_optional sub_248876938(Swift::String *a1)
{
  return TailspinConfig.CaseName.init(rawValue:)(*a1);
}

void sub_248876944(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x64616F6C7265766FLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6573616870;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x73747469726973;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 3:
      strcpy((char *)a1, "timecodeIssue");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

unint64_t sub_2488769EC()
{
  unint64_t result = qword_26932D170;
  if (!qword_26932D170)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26932D178);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D170);
  }
  return result;
}

void sub_248876A48(void *a1@<X8>)
{
  *a1 = &unk_26FC8F3E0;
}

uint64_t sub_248876A58@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 10);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  *(_WORD *)a1 = *(_WORD *)(v1 + 8);
  *(unsigned char *)(a1 + 2) = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t destroy for TailspinConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TailspinConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TailspinConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __int16 v4 = *(_WORD *)(a2 + 8);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  *(_WORD *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TailspinConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TailspinConfig(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TailspinConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TailspinConfig()
{
  return &type metadata for TailspinConfig;
}

unsigned char *storeEnumTagSinglePayload for TailspinConfig.CaseName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248876EACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TailspinConfig.CaseName()
{
  return &type metadata for TailspinConfig.CaseName;
}

uint64_t sub_248876EE4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v29 = MEMORY[0x263F8EE78];
    sub_248841A10(0, v4, 0);
    uint64_t v5 = v29;
    uint64_t v8 = (uint64_t *)(a1 + 32);
    char v22 = a2 & 1;
    while (1)
    {
      uint64_t v9 = *v8;
      swift_bridgeObjectRetain_n();
      sub_24887605C(v9, v22, (uint64_t)&v23);
      if (v3) {
        break;
      }
      swift_bridgeObjectRelease();
      uint64_t v10 = v23;
      __int16 v11 = v24;
      char v12 = v25;
      long long v13 = v26;
      long long v14 = v27;
      uint64_t v15 = v28;
      uint64_t v29 = v5;
      unint64_t v17 = *(void *)(v5 + 16);
      unint64_t v16 = *(void *)(v5 + 24);
      if (v17 >= v16 >> 1)
      {
        long long v20 = v27;
        long long v21 = v26;
        sub_248841A10(v16 > 1, v17 + 1, 1);
        long long v14 = v20;
        long long v13 = v21;
        uint64_t v5 = v29;
      }
      *(void *)(v5 + 16) = v17 + 1;
      uint64_t v18 = v5 + 56 * v17;
      *(void *)(v18 + 32) = v10;
      *(_WORD *)(v18 + 40) = v11;
      *(unsigned char *)(v18 + 42) = v12;
      *(_OWORD *)(v18 + 48) = v13;
      *(_OWORD *)(v18 + 64) = v14;
      *(void *)(v18 + 80) = v15;
      ++v8;
      --v4;
      uint64_t v3 = 0;
      if (!v4) {
        return v5;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_248877044(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(result + 16);
  if (v5)
  {
    unint64_t v6 = 0;
    uint64_t v7 = MEMORY[0x263F8EE78];
    uint64_t v30 = *(void *)(result + 16);
    uint64_t v28 = v5 - 1;
    uint64_t v32 = result;
    do
    {
      uint64_t v29 = v7;
      uint64_t v8 = 56 * v6;
      unint64_t v9 = v6;
      while (1)
      {
        if (v9 >= *(void *)(result + 16))
        {
          __break(1u);
          return result;
        }
        unint64_t v35 = v9;
        uint64_t v36 = v4;
        uint64_t v10 = *(void *)(result + v8 + 32);
        __int16 v11 = *(_WORD *)(result + v8 + 40);
        char v12 = *(unsigned char *)(result + v8 + 42);
        uint64_t v13 = *(void *)(result + v8 + 48);
        uint64_t v14 = *(void *)(result + v8 + 56);
        uint64_t v16 = *(void *)(result + v8 + 64);
        uint64_t v15 = *(void *)(result + v8 + 72);
        uint64_t v17 = *(void *)(result + v8 + 80);
        v37[3] = &type metadata for TailspinConfig;
        v37[4] = &protocol witness table for TailspinConfig;
        uint64_t v18 = swift_allocObject();
        v37[0] = v18;
        *(void *)(v18 + 16) = v10;
        __int16 v31 = v11;
        *(_WORD *)(v18 + 24) = v11;
        *(unsigned char *)(v18 + 26) = v12;
        *(void *)(v18 + 32) = v13;
        *(void *)(v18 + 40) = v14;
        *(void *)(v18 + 48) = v16;
        *(void *)(v18 + 56) = v15;
        *(void *)(v18 + 64) = v17;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        char v19 = sub_248843BF8(v37, a2, a3);
        if (v36)
        {
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
          uint64_t v7 = v29;
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v7;
        }
        char v20 = v19;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
        if (v20) {
          break;
        }
        unint64_t v9 = v35 + 1;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 += 56;
        uint64_t v4 = 0;
        __n128 result = v32;
        if (v30 == v35 + 1)
        {
          uint64_t v7 = v29;
          goto LABEL_17;
        }
      }
      uint64_t v21 = v29;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v38 = v29;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_248841A10(0, *(void *)(v29 + 16) + 1, 1);
        uint64_t v21 = v38;
      }
      uint64_t v23 = v21;
      unint64_t v24 = *(void *)(v21 + 16);
      unint64_t v25 = *(void *)(v23 + 24);
      unint64_t v26 = v24 + 1;
      uint64_t v4 = 0;
      if (v24 >= v25 >> 1)
      {
        sub_248841A10(v25 > 1, v24 + 1, 1);
        unint64_t v26 = v24 + 1;
        uint64_t v4 = 0;
        uint64_t v23 = v38;
      }
      *(void *)(v23 + 16) = v26;
      uint64_t v27 = v23 + 56 * v24;
      *(void *)(v27 + 32) = v10;
      unint64_t v6 = v35 + 1;
      *(_WORD *)(v27 + 40) = v31;
      *(unsigned char *)(v27 + 42) = v12;
      *(void *)(v27 + 48) = v13;
      *(void *)(v27 + 56) = v14;
      *(void *)(v27 + 64) = v16;
      *(void *)(v27 + 72) = v15;
      *(void *)(v27 + 80) = v17;
      uint64_t v7 = v23;
      __n128 result = v32;
    }
    while (v28 != v35);
  }
  else
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_24887733C(uint64_t *a1)
{
  uint64_t v14 = *a1;
  if (*(void *)(v14 + 16)
    && (unint64_t v4 = sub_248840EC8(8u), (v5 & 1) != 0)
    && (sub_24882E1C8(*(void *)(v14 + 56) + 32 * v4, (uint64_t)v12),
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C08),
        (swift_dynamicCast() & 1) != 0))
  {
    long long v13 = *(_OWORD *)(a1 + 1);
    uint64_t v2 = a1[3];
    uint64_t v6 = a1[4];
    char v7 = *((unsigned char *)a1 + 40);
    sub_24882E224((uint64_t)&v14);
    sub_24882E250((uint64_t)&v13);
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_248876EE4(v11, v7);
    sub_24882E27C((uint64_t)&v14);
    sub_24882E2A8((uint64_t)&v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v1)
    {
      sub_24882E224((uint64_t)&v14);
      sub_24882E250((uint64_t)&v13);
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_248877044(v8, v2, v6);
      sub_24882E27C((uint64_t)&v14);
      sub_24882E2A8((uint64_t)&v13);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_24882C828();
    swift_allocError();
    *(void *)uint64_t v9 = 0xD00000000000001ALL;
    *(void *)(v9 + 8) = 0x8000000248883120;
    *(unsigned char *)(v9 + 16) = 0;
    swift_willThrow();
  }
  return v2;
}

uint64_t sub_2488774E0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 72, 7);
}

double static Double.minutes(_:)(double a1)
{
  return sub_2488779D8(&qword_26B143C68, (double *)&qword_26B143C60, a1);
}

double static Double.seconds(_:)(double a1)
{
  return sub_2488779D8(&qword_26B1430A0, (double *)&qword_26B143C70, a1);
}

double static Double.now()()
{
  uint64_t v0 = sub_24887C5B8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24887C5A8();
  sub_24887C598();
  double v5 = v4;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

void sub_24887765C()
{
  qword_26B143C70 = 0x3FF0000000000000;
}

double static Double.oneSecond.getter()
{
  return sub_24887790C(&qword_26B1430A0, (uint64_t)&qword_26B143C70);
}

double sub_248877690(uint64_t a1)
{
  return sub_24887770C(a1, &qword_26B1430A0, (double *)&qword_26B143C70, (double *)&qword_26B143C60);
}

double static Double.oneMinute.getter()
{
  return sub_24887790C(&qword_26B143C68, (uint64_t)&qword_26B143C60);
}

double sub_2488776E0(uint64_t a1)
{
  return sub_24887770C(a1, &qword_26B143C68, (double *)&qword_26B143C60, (double *)&qword_26B143C40);
}

double sub_24887770C(uint64_t a1, void *a2, double *a3, double *a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  double result = *a3 * 60.0;
  *a4 = result;
  return result;
}

double static Double.oneHour.getter()
{
  return sub_24887790C(&qword_26B143C50, (uint64_t)&qword_26B143C40);
}

double sub_248877784()
{
  if (qword_26B143C50 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_26B143C40 * 24.0;
  *(double *)&qword_26B143C30 = *(double *)&qword_26B143C40 * 24.0;
  return result;
}

double static Double.oneDay.getter()
{
  return sub_24887790C(&qword_26B143C38, (uint64_t)&qword_26B143C30);
}

double sub_248877804()
{
  if (qword_26B143C38 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_26B143C30 * 7.0;
  *(double *)&qword_26932D180 = *(double *)&qword_26B143C30 * 7.0;
  return result;
}

double static Double.oneWeek.getter()
{
  return sub_24887790C(qword_26932CAA0, (uint64_t)&qword_26932D180);
}

double sub_248877884()
{
  if (qword_26B143C38 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_26B143C30 * 365.0;
  *(double *)&qword_26B143C58 = *(double *)&qword_26B143C30 * 365.0;
  return result;
}

double static Double.oneYear.getter()
{
  return sub_24887790C(&qword_26B143098, (uint64_t)&qword_26B143C58);
}

double sub_24887790C(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  return *(double *)a2;
}

double static Double.hours(_:)(double a1)
{
  return sub_2488779D8(&qword_26B143C50, (double *)&qword_26B143C40, a1);
}

double static Double.days(_:)(double a1)
{
  return sub_2488779D8(&qword_26B143C38, (double *)&qword_26B143C30, a1);
}

double static Double.weeks(_:)(double a1)
{
  return sub_2488779D8(qword_26932CAA0, (double *)&qword_26932D180, a1);
}

double static Double.years(_:)(double a1)
{
  return sub_2488779D8(&qword_26B143098, (double *)&qword_26B143C58, a1);
}

double sub_2488779D8(void *a1, double *a2, double a3)
{
  if (*a1 != -1) {
    swift_once();
  }
  return *a2 * a3;
}

Swift::String __swiftcall Double.toDateString(_:)(Swift::String a1)
{
  uint64_t v1 = sub_24887C5B8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  double v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  uint64_t v6 = (void *)sub_24887C738();
  objc_msgSend(v5, sel_setDateFormat_, v6);

  sub_24887C588();
  uint64_t v7 = (void *)sub_24887C578();
  id v8 = objc_msgSend(v5, sel_stringFromDate_, v7);

  uint64_t v9 = sub_24887C768();
  uint64_t v11 = v10;

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v12 = v9;
  long long v13 = v11;
  result._object = v13;
  result._uint64_t countAndFlagsBits = v12;
  return result;
}

AudioAnalyticsBase::TraceCode_optional __swiftcall TraceCode.init(rawValue:)(Swift::UInt32 rawValue)
{
  HIDWORD(v3) = rawValue;
  LODWORD(v3) = rawValue - 4608;
  unsigned int v2 = v3 >> 2;
  if (v2 >= 0x12) {
    LOBYTE(v2) = 18;
  }
  *uint64_t v1 = v2;
  return (AudioAnalyticsBase::TraceCode_optional)rawValue;
}

uint64_t TraceCode.rawValue.getter()
{
  return 4 * *v0 + 4608;
}

uint64_t sub_248877BCC()
{
  return sub_24887D068();
}

uint64_t sub_248877C18()
{
  return sub_24887D048();
}

uint64_t sub_248877C4C()
{
  return sub_24887D068();
}

AudioAnalyticsBase::TraceCode_optional sub_248877C94(Swift::UInt32 *a1)
{
  return TraceCode.init(rawValue:)(*a1);
}

void sub_248877C9C(_DWORD *a1@<X8>)
{
  *a1 = 4 * *v1 + 4608;
}

uint64_t TraceArgs.init(arg1:arg2:arg3:arg4:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t static Trace.post(_:args:)(unsigned __int8 *a1, void *a2)
{
  return sub_248877D04(a1, a2, (uint64_t (*)(void, void, void, void, void))AudioAnalyticsTraceWrapperPost);
}

uint64_t static Trace.postStart(_:args:)(unsigned __int8 *a1, void *a2)
{
  return sub_248877D04(a1, a2, (uint64_t (*)(void, void, void, void, void))AudioAnalyticsTraceWrapperPostStart);
}

uint64_t static Trace.postEnd(_:args:)(unsigned __int8 *a1, void *a2)
{
  return sub_248877D04(a1, a2, (uint64_t (*)(void, void, void, void, void))AudioAnalyticsTraceWrapperPostEnd);
}

uint64_t sub_248877D04(unsigned __int8 *a1, void *a2, uint64_t (*a3)(void, void, void, void, void))
{
  return a3(4 * *a1 + 4608, *a2, a2[1], a2[2], a2[3]);
}

unint64_t sub_248877D2C()
{
  unint64_t result = qword_26932D188;
  if (!qword_26932D188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26932D188);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TraceCode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TraceCode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *unint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248877EDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TraceCode()
{
  return &type metadata for TraceCode;
}

ValueMetadata *type metadata accessor for TraceArgs()
{
  return &type metadata for TraceArgs;
}

ValueMetadata *type metadata accessor for Trace()
{
  return &type metadata for Trace;
}

uint64_t static Utilities.audioCapturesEnabled()()
{
  if ((sub_2488471BC() & 1) != 0
    || (sub_2488471BC() & 1) != 0
    || (sub_2488471BC() & 1) != 0
    || (sub_2488471BC() & 1) != 0)
  {
    return 1;
  }
  else
  {
    return sub_2488471BC() & 1;
  }
}

uint64_t static Utilities.ringBufferAudioCapturesEnabled()()
{
  uint64_t v0 = sub_248847930();
  BOOL v4 = (v1 & 1) == 0 && v0 > 0 && v0 < 4;
  uint64_t v5 = sub_2488475DC();
  if (v6) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v6) {
    unint64_t v8 = v6;
  }
  else {
    unint64_t v8 = 0xE000000000000000;
  }
  if (v7 == 0x74726F6853 && v8 == 0xE500000000000000
    || (sub_24887CF48() & 1) != 0
    || v7 == 0x6D756964654DLL && v8 == 0xE600000000000000
    || (sub_24887CF48() & 1) != 0
    || v7 == 1735290700 && v8 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v9 = 1;
  }
  else
  {
    char v9 = sub_24887CF48();
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = sub_248847930();
  if ((v11 & 1) != 0 || v10 <= 1)
  {
    char v12 = v4 | v9;
  }
  else if (v4)
  {
    char v12 = 1;
  }
  else
  {
    char v12 = v9 | ((unint64_t)v10 < 5);
  }
  return v12 & 1;
}

uint64_t sub_2488782D0(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_248841B18(0, v2, 0);
    uint64_t result = v9;
    BOOL v4 = (int *)(a1 + 32);
    do
    {
      int v6 = *v4++;
      int v5 = v6;
      uint64_t v10 = result;
      unint64_t v8 = *(void *)(result + 16);
      unint64_t v7 = *(void *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_248841B18(v7 > 1, v8 + 1, 1);
        uint64_t result = v10;
      }
      *(void *)(result + 16) = v8 + 1;
      *(_DWORD *)(result + 4 * v8 + 32) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t static Utilities.eventType(from:)(uint64_t a1, uint64_t a2)
{
  return sub_2488783EC(a1, a2, (uint64_t (*)(void))sub_248879D44);
}

uint64_t static Utilities.eventCategory(from:)(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_24887AF84(a1, a2);
  return v2 | ((HIDWORD(v2) & 1) << 32);
}

uint64_t static Utilities.serviceType(from:)(uint64_t a1, uint64_t a2)
{
  return sub_2488783EC(a1, a2, (uint64_t (*)(void))sub_248879700);
}

uint64_t sub_2488783EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 0x1FFFF;
}

uint64_t static Utilities.processName(for:)(int a1)
{
  uint64_t v55 = *MEMORY[0x263EF8340];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DB0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_24887E380;
  *(void *)(v2 + 32) = 0xE00000001;
  *(_DWORD *)(v2 + 40) = 1;
  *(_DWORD *)(v2 + 44) = a1;
  memset(v7, 0, sizeof(v7));
  uint64_t v8 = 0;
  int v9 = 0;
  uint64_t v16 = 0;
  int v17 = 0;
  uint64_t v18 = 0;
  int v19 = 0;
  uint64_t v23 = 0;
  uint64_t v36 = 0;
  __int16 v37 = 0;
  int v42 = 0;
  uint64_t v49 = 0;
  long long v10 = 0u;
  long long v11 = 0u;
  int v12 = 0;
  int v15 = 0;
  long long v13 = 0u;
  long long v14 = 0u;
  uint64_t v21 = 0;
  int v22 = 0;
  long long v20 = 0u;
  long long v25 = 0u;
  memset(v26, 0, sizeof(v26));
  long long v27 = 0u;
  int v24 = 0;
  int v28 = 0;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  memset(v35, 0, sizeof(v35));
  long long v40 = 0u;
  long long v41 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  long long v43 = 0u;
  int v45 = 0;
  uint64_t v44 = 0;
  long long v46 = 0u;
  long long v47 = 0u;
  __int16 v48 = 0;
  long long v50 = 0u;
  __int16 v52 = 0;
  uint64_t v51 = 0;
  long long v53 = 0u;
  long long v54 = 0u;
  size_t v6 = 648;
  int v3 = sysctl((int *)(v2 + 32), 4u, v7, &v6, 0, 0);
  if (v3 == sub_24887C638())
  {
    uint64_t v4 = sub_24887C848();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v4;
}

uint64_t static Utilities.applicationName(from:)(uint64_t a1)
{
  uint64_t v1 = 0x6E776F6E6B6E55;
  if (*(void *)(a1 + 16))
  {
    unint64_t v3 = sub_248840E50(0xD000000000000018, 0x8000000248881210);
    if (v4)
    {
      uint64_t v5 = *(void *)(a1 + 56) + 24 * v3;
      if (*(unsigned char *)(v5 + 16) == 4)
      {
        uint64_t v1 = *(void *)v5;
        swift_bridgeObjectRetain();
      }
    }
  }
  return v1;
}

id static Utilities.generateError(with:code:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_26932D198);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24887EA40;
  *(void *)(inited + 32) = sub_24887C768();
  *(void *)(inited + 40) = v7;
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_24882BA7C(inited);
  sub_2488787BC(v8);
  swift_bridgeObjectRelease();
  id v9 = objc_allocWithZone(MEMORY[0x263F087E8]);
  long long v10 = (void *)sub_24887C738();
  long long v11 = (void *)sub_24887C698();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v9, sel_initWithDomain_code_userInfo_, v10, a3, v11);

  return v12;
}

unint64_t sub_2488787BC(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B143D40);
    uint64_t v2 = (void *)sub_24887CD78();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  size_t v6 = &v37;
  uint64_t v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = MEMORY[0x263F8EE58] + 8;
  uint64_t v11 = MEMORY[0x263F8D310];
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_2488309A0();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    int v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_24882D9E4(v6, v7);
    sub_24882D9E4(v7, v40);
    sub_24882D9E4(v40, &v38);
    unint64_t result = sub_248840E50(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      id v12 = v7;
      long long v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      uint64_t v16 = v10;
      int v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *int v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      uint64_t v11 = v15;
      uint64_t v1 = v14;
      size_t v6 = v13;
      uint64_t v7 = v12;
      int64_t i = v33;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
      unint64_t result = (unint64_t)sub_24882D9E4(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v27 = (uint64_t *)(v2[6] + 16 * result);
    *long long v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_24882D9E4(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

BOOL static Utilities.isABTestModeEnabled(for:)(int a1)
{
  return (a1 - 0x10000) < 0xFFFEFFFF;
}

unint64_t static Utilities.serviceTypeDescription(from:)(unsigned __int16 a1)
{
  int v1 = a1;
  unint64_t result = 0x6E6F6870656C6574;
  switch(v1)
  {
    case 0:
      unint64_t result = 0x636972656E6567;
      break;
    case 1:
      unint64_t result = 1769105779;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x73636974706168;
      break;
    case 4:
      unint64_t result = 0x736D72616C61;
      break;
    case 5:
      unint64_t result = 0x6F6C41646E617473;
      break;
    case 6:
      unint64_t result = 0x747541646E756F73;
      break;
    case 7:
      unint64_t result = 0x6D726F46676E6F6CLL;
      break;
    case 8:
    case 9:
      unint64_t result = 0xD000000000000010;
      break;
    case 10:
      unint64_t result = 0x737472656C61;
      break;
    case 11:
      unint64_t result = 1953719668;
      break;
    case 12:
      unint64_t result = 0x6567617355697061;
      break;
    case 13:
      unint64_t result = 0x6F536D6574737973;
      break;
    case 14:
      unint64_t result = 0x616E41646E756F73;
      break;
    case 15:
      unint64_t result = 0x657275636573;
      break;
    default:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t static Utilities.createEventCategory(from:)(uint64_t a1)
{
  uint64_t v1 = sub_2488782D0(a1);
  unint64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
    uint64_t v4 = 0;
    goto LABEL_10;
  }
  if (v2 < 8)
  {
    uint64_t v3 = 0;
    LODWORD(v4) = 0;
LABEL_8:
    unint64_t v11 = v2 - v3;
    id v12 = (int *)(v1 + 4 * v3 + 32);
    do
    {
      int v13 = *v12++;
      uint64_t v4 = v13 | v4;
      --v11;
    }
    while (v11);
    goto LABEL_10;
  }
  uint64_t v3 = v2 & 0x7FFFFFFFFFFFFFF8;
  unint64_t v5 = (int8x16_t *)(v1 + 48);
  int8x16_t v6 = 0uLL;
  uint64_t v7 = v2 & 0x7FFFFFFFFFFFFFF8;
  int8x16_t v8 = 0uLL;
  do
  {
    int8x16_t v6 = vorrq_s8(v5[-1], v6);
    int8x16_t v8 = vorrq_s8(*v5, v8);
    v5 += 2;
    v7 -= 8;
  }
  while (v7);
  int8x16_t v9 = vorrq_s8(v8, v6);
  int8x8_t v10 = vorr_s8(*(int8x8_t *)v9.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v9, v9, 8uLL));
  uint64_t v4 = (v10.i32[0] | v10.i32[1]);
  if (v2 != v3) {
    goto LABEL_8;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_248878E44(int a1)
{
  int v1 = a1 + 1;
  unint64_t result = 0x636972656E6547;
  switch(v1)
  {
    case 0:
      unint64_t result = 0x6E776F6E6B6E55;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x64726F636552;
      break;
    case 4:
      unint64_t result = 0x7475706E49;
      break;
    case 5:
      unint64_t result = 0x6B63616279616C50;
      break;
    case 6:
      unint64_t result = 0x74757074754FLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 20297;
      break;
    case 9:
      unint64_t result = 0x7075746553;
      break;
    case 10:
      unint64_t result = 0x6552746E65696C43;
      break;
    case 11:
      unint64_t result = 0x6168436574756F52;
      break;
    case 12:
      unint64_t result = 0x726F727245;
      break;
    case 13:
      unint64_t result = 0x74726F7065524F49;
      break;
    case 14:
      unint64_t result = 0x616D726F66726550;
      break;
    case 15:
      unint64_t result = 0x656D756C6F56;
      break;
    case 16:
      unint64_t result = 0x65736E61707845;
      break;
    case 17:
      unint64_t result = 0x48676E6972616548;
      break;
    case 18:
      unint64_t result = 0x73646F50726941;
      break;
    case 19:
      unint64_t result = 0x6F72506563696F56;
      break;
    case 21:
      unint64_t result = 0x6C616974617053;
      break;
    case 22:
      unint64_t result = 0x556F5478694D5056;
      break;
    case 23:
      unint64_t result = 0x6863746157;
      break;
    case 24:
      unint64_t result = 0x636E657265666E49;
      break;
    default:
      unint64_t result = 0x656E696665646E55;
      break;
  }
  return result;
}

unint64_t static Utilities.reportingFolderAttributes.getter()
{
  return sub_248879144(493);
}

unint64_t static Utilities.reportingFileAttributes.getter()
{
  return sub_248879144(484);
}

unint64_t sub_248879144(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143DA8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24887E3D0;
  uint64_t v3 = (void *)*MEMORY[0x263F08078];
  uint64_t v4 = MEMORY[0x263F8D6C8];
  unint64_t v5 = (void **)MEMORY[0x263F08060];
  *(void *)(inited + 32) = *MEMORY[0x263F08078];
  *(void *)(inited + 40) = a1;
  int8x16_t v6 = *v5;
  *(void *)(inited + 64) = v4;
  *(void *)(inited + 72) = v6;
  uint64_t v7 = MEMORY[0x263F8D310];
  *(void *)(inited + 80) = 0x656C69626F6DLL;
  *(void *)(inited + 88) = 0xE600000000000000;
  int8x16_t v8 = (void *)*MEMORY[0x263F08028];
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 112) = v8;
  *(void *)(inited + 144) = v7;
  *(void *)(inited + 120) = 0x656C69626F6DLL;
  *(void *)(inited + 128) = 0xE600000000000000;
  id v9 = v3;
  id v10 = v6;
  id v11 = v8;
  return sub_24882BBA0(inited);
}

uint64_t sub_248879208()
{
  uint64_t v0 = sub_24887CAE8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24887CAD8();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_24887C688();
  MEMORY[0x270FA5388](v5 - 8);
  sub_248830D64();
  sub_24887C668();
  v7[1] = MEMORY[0x263F8EE78];
  sub_248830DA4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B143C20);
  sub_248830DFC();
  sub_24887CBE8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F130], v0);
  uint64_t result = sub_24887CB18();
  qword_26932D190 = result;
  return result;
}

id static Utilities.reportingServerQueue.getter()
{
  if (qword_26932CAB0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26932D190;
  return v0;
}

uint64_t sub_248879464()
{
  uint64_t v0 = sub_24887C518();
  __swift_allocate_value_buffer(v0, qword_26B1439B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B1439B8);
  return sub_24887C4B8();
}

uint64_t static Utilities.audioAnalyticsDirectory.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_248879668(&qword_26B1439D8, (uint64_t)qword_26B1439B8, a1);
}

uint64_t sub_2488794F0(uint64_t a1)
{
  return sub_248879598(a1, qword_26B143E88);
}

uint64_t static Utilities.logDirectory.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_248879668(&qword_26B143EA0, (uint64_t)qword_26B143E88, a1);
}

uint64_t sub_248879538(uint64_t a1)
{
  return sub_248879598(a1, qword_26B143018);
}

uint64_t static Utilities.configDirectory.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_248879668(&qword_26B1439E8, (uint64_t)qword_26B143018, a1);
}

uint64_t sub_248879578(uint64_t a1)
{
  return sub_248879598(a1, qword_26B143030);
}

uint64_t sub_248879598(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_24887C518();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  if (qword_26B1439D8 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v3, (uint64_t)qword_26B1439B8);
  return sub_24887C4D8();
}

uint64_t static Utilities.tailspinDirectory.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_248879668(qword_26B1439F0, (uint64_t)qword_26B143030, a1);
}

uint64_t sub_248879668@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24887C518();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t sub_248879700(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E6F6870656C6574 && a2 == 0xE900000000000079 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    int v5 = 2;
  }
  else if (a1 == 1769105779 && a2 == 0xE400000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    int v5 = 1;
  }
  else if (a1 == 0x736D72616C61 && a2 == 0xE600000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    int v5 = 4;
  }
  else if (a1 == 0x73636974706168 && a2 == 0xE700000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    int v5 = 3;
  }
  else if (a1 == 0x636972656E6567 && a2 == 0xE700000000000000 || (sub_24887CF48() & 1) != 0)
  {
    int v5 = 0;
    char v4 = 0;
  }
  else if (a1 == 0x6F6C41646E617473 && a2 == 0xEA0000000000656ELL || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    int v5 = 5;
  }
  else if (a1 == 0x747541646E756F73 && a2 == 0xEF6769666E6F436FLL || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    int v5 = 6;
  }
  else if (a1 == 0x6D726F46676E6F6CLL && a2 == 0xED00006F69647541 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    int v5 = 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000248883260 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    int v5 = 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000248883240 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    int v5 = 9;
  }
  else if (a1 == 0x737472656C61 && a2 == 0xE600000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    int v5 = 10;
  }
  else if (a1 == 1953719668 && a2 == 0xE400000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    int v5 = 11;
  }
  else if (a1 == 0x6567617355697061 && a2 == 0xE800000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    int v5 = 12;
  }
  else if (a1 == 0x6F536D6574737973 && a2 == 0xEC00000073646E75 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    int v5 = 13;
  }
  else if (a1 == 0x616E41646E756F73 && a2 == 0xED0000736973796CLL || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    int v5 = 14;
  }
  else if (a1 == 0x657275636573 && a2 == 0xE600000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    int v5 = 15;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
  {
    char v4 = 0;
    int v5 = 0xFFFF;
  }
  else
  {
    char v7 = sub_24887CF48();
    char v4 = v7 ^ 1;
    if (v7) {
      int v5 = 0xFFFF;
    }
    else {
      int v5 = 0;
    }
  }
  return v5 & 0xFFFEFFFF | ((v4 & 1) << 16);
}

uint64_t sub_248879D44(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x636972656E6547 && a2 == 0xE700000000000000) {
    return 0;
  }
  if (sub_24887CF48())
  {
    int v5 = 0;
    char v6 = 0;
  }
  else if (a1 == 0x7472617453 && a2 == 0xE500000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v6 = 0;
    int v5 = 1;
  }
  else if (a1 == 1886352467 && a2 == 0xE400000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v6 = 0;
    int v5 = 2;
  }
  else if (a1 == 0x7075746553 && a2 == 0xE500000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v6 = 0;
    int v5 = 5;
  }
  else if (a1 == 0x726F727245 && a2 == 0xE500000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v6 = 0;
    int v5 = 6;
  }
  else if (a1 == 0x7465446575737349 && a2 == 0xED0000726F746365 || (sub_24887CF48() & 1) != 0)
  {
    char v6 = 0;
    int v5 = 7;
  }
  else if (a1 == 0x6E776F6E6B6E55 && a2 == 0xE700000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v6 = 0;
    int v5 = 0xFFFF;
  }
  else if (a1 == 0x6574617669746341 && a2 == 0xE800000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v6 = 0;
    int v5 = 3;
  }
  else if (a1 == 0x6176697463616544 && a2 == 0xEA00000000006574 || (sub_24887CF48() & 1) != 0)
  {
    char v6 = 0;
    int v5 = 4;
  }
  else if (a1 == 0x766972444944494DLL && a2 == 0xEA00000000007265 || (sub_24887CF48() & 1) != 0)
  {
    char v6 = 0;
    int v5 = 10;
  }
  else if (a1 == 0x676F4C7265776F50 && a2 == 0xE800000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v6 = 0;
    int v5 = 8;
  }
  else if (a1 == 0x6F4C79726F6D654DLL && a2 == 0xE900000000000067 || (sub_24887CF48() & 1) != 0)
  {
    char v6 = 0;
    int v5 = 19;
  }
  else if (a1 == 0x696E556F69647541 && a2 == 0xEE00656761735574 || (sub_24887CF48() & 1) != 0)
  {
    char v6 = 0;
    int v5 = 9;
  }
  else if (a1 == 0x7972616D6D7553 && a2 == 0xE700000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v6 = 0;
    int v5 = 11;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000248883320 || (sub_24887CF48() & 1) != 0)
  {
    char v6 = 0;
    int v5 = 12;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000248883300 || (sub_24887CF48() & 1) != 0)
  {
    char v6 = 0;
    int v5 = 14;
  }
  else if (a1 == 0x7078456F69647541 && a2 == 0xED0000657275736FLL || (sub_24887CF48() & 1) != 0)
  {
    char v6 = 0;
    int v5 = 13;
  }
  else if (a1 == 0x694B726F736E6553 && a2 == 0xE900000000000074 || (sub_24887CF48() & 1) != 0)
  {
    char v6 = 0;
    int v5 = 15;
  }
  else if (a1 == 0x656C706D6953 && a2 == 0xE600000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v6 = 0;
    int v5 = 16;
  }
  else if (a1 == 0x6172676F74736948 && a2 == 0xE90000000000006DLL || (sub_24887CF48() & 1) != 0)
  {
    char v6 = 0;
    int v5 = 17;
  }
  else if (a1 == 0x6574617453 && a2 == 0xE500000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v6 = 0;
    int v5 = 18;
  }
  else if (a1 == 0x6E49646F50726941 && a2 == 0xEA00000000006F66)
  {
    char v6 = 0;
    int v5 = 20;
  }
  else
  {
    char v8 = sub_24887CF48();
    char v6 = v8 ^ 1;
    if (v8) {
      int v5 = 20;
    }
    else {
      int v5 = 0;
    }
  }
  return v5 & 0xFFFEFFFF | ((v6 & 1) << 16);
}

unint64_t sub_24887A534(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x636972656E6547 && a2 == 0xE700000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 1;
  }
  else if (a1 == 0x64726F636552 && a2 == 0xE600000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 2;
  }
  else if (a1 == 0x6B63616279616C50 && a2 == 0xE800000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000248883340 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 6;
  }
  else if (a1 == 0x7475706E49 && a2 == 0xE500000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 3;
  }
  else if (a1 == 0x74757074754FLL && a2 == 0xE600000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 5;
  }
  else if (a1 == 20297 && a2 == 0xE200000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 7;
  }
  else if (a1 == 0x7075746553 && a2 == 0xE500000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 8;
  }
  else if (a1 == 0x6552746E65696C43 && a2 == 0xED00007473657571 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 9;
  }
  else if (a1 == 0x6168436574756F52 && a2 == 0xEB0000000065676ELL || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 10;
  }
  else if (a1 == 0x726F727245 && a2 == 0xE500000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 11;
  }
  else if (a1 == 0x74726F7065524F49 && a2 == 0xEB00000000676E69 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 12;
  }
  else if (a1 == 0x616D726F66726550 && a2 == 0xEB0000000065636ELL || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 13;
  }
  else if (a1 == 0x656D756C6F56 && a2 == 0xE600000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 14;
  }
  else if (a1 == 0x65736E61707845 && a2 == 0xE700000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 15;
  }
  else if (a1 == 0x6F72506563696F56 && a2 == 0xEE00726F73736563 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 18;
  }
  else if (a1 == 0x48676E6972616548 && a2 == 0xED000068746C6165 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 16;
  }
  else if (a1 == 0x73646F50726941 && a2 == 0xE700000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 17;
  }
  else if (a1 == 0x6C616974617053 && a2 == 0xE700000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 20;
  }
  else if (a1 == 0x556F5478694D5056 && a2 == 0xED00006B6E696C70 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 21;
  }
  else if (a1 == 0x6863746157 && a2 == 0xE500000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 22;
  }
  else if (a1 == 0x636E657265666E49 && a2 == 0xE900000000000065 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 23;
  }
  else if (a1 == 0x6E776F6E6B6E55 && a2 == 0xE700000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 0xFFFFFFFFLL;
  }
  else if (a1 == 1229211981 && a2 == 0xE400000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 0x4000000;
  }
  else if (a1 == 0x6E6F6973736553 && a2 == 0xE700000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 0x8000000;
  }
  else if (a1 == 5264196 && a2 == 0xE300000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 0x10000000;
  }
  else if (a1 == 4997448 && a2 == 0xE300000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 0x20000000;
  }
  else if (a1 == 0x676E6974756F52 && a2 == 0xE700000000000000 || (sub_24887CF48() & 1) != 0)
  {
    char v4 = 0;
    uint64_t v5 = 0x40000000;
  }
  else if (a1 == 0x786F626C6F6F54 && a2 == 0xE700000000000000)
  {
    char v4 = 0;
    uint64_t v5 = 0x80000000;
  }
  else
  {
    char v7 = sub_24887CF48();
    char v4 = v7 ^ 1;
    uint64_t v5 = 0x80000000;
    if ((v7 & 1) == 0) {
      uint64_t v5 = 0;
    }
  }
  return v5 | ((unint64_t)(v4 & 1) << 32);
}

unint64_t sub_24887AF84(uint64_t a1, uint64_t a2)
{
  sub_24884A1E8();
  if (sub_24887CBC8())
  {
    uint64_t v4 = sub_24887CBA8();
    uint64_t v5 = *(void *)(v4 + 16);
    if (v5)
    {
      unsigned int v6 = 0;
      char v7 = (uint64_t *)(v4 + 40);
      do
      {
        unint64_t v8 = sub_24887A534(*(v7 - 1), *v7);
        if ((v8 & 0x100000000) != 0) {
          int v9 = 0;
        }
        else {
          int v9 = v8;
        }
        v6 |= v9;
        v7 += 2;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease();
      LOBYTE(v10) = v6 == 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      unsigned int v6 = 0;
      LOBYTE(v10) = 1;
    }
  }
  else
  {
    unint64_t v11 = sub_24887A534(a1, a2);
    unsigned int v6 = v11;
    uint64_t v10 = HIDWORD(v11) & 1;
  }
  return v6 | ((unint64_t)v10 << 32);
}

uint64_t _s18AudioAnalyticsBase9UtilitiesO24eventCategoryDescription4fromSSSo0a5EventF0V_tFZ_0(int a1)
{
  int v1 = (unsigned __int16)a1;
  if ((a1 & 0xFFFF0000) == 0)
  {
    if (!(_WORD)a1) {
      return 0;
    }
    goto LABEL_4;
  }
  sub_24887C838();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_24887C838();
LABEL_4:
    sub_248878E44(v1);
    sub_24887C838();
    swift_bridgeObjectRelease();
  }
  return 0;
}

unint64_t _s18AudioAnalyticsBase9UtilitiesO20eventTypeDescription4fromSSSo0a5EventF0V_tFZ_0(unsigned __int16 a1)
{
  int v1 = a1;
  unint64_t result = 0x636972656E6547;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0x7472617453;
      break;
    case 2:
      unint64_t result = 1886352467;
      break;
    case 3:
      unint64_t result = 0x6574617669746341;
      break;
    case 4:
      unint64_t result = 0x6176697463616544;
      break;
    case 5:
      unint64_t result = 0x7075746553;
      break;
    case 6:
      unint64_t result = 0x726F727245;
      break;
    case 7:
      unint64_t result = 0x7465446575737349;
      break;
    case 8:
      unint64_t result = 0x676F4C7265776F50;
      break;
    case 9:
      unint64_t result = 0x696E556F69647541;
      break;
    case 10:
      unint64_t result = 0x766972444944494DLL;
      break;
    case 11:
      unint64_t result = 0x7972616D6D7553;
      break;
    case 12:
      unint64_t result = 0xD000000000000016;
      break;
    case 13:
      unint64_t result = 0x7078456F69647541;
      break;
    case 14:
      unint64_t result = 0xD000000000000014;
      break;
    case 15:
      unint64_t result = 0x694B726F736E6553;
      break;
    case 16:
      unint64_t result = 0x656C706D6953;
      break;
    case 17:
      unint64_t result = 0x6172676F74736948;
      break;
    case 18:
      unint64_t result = 0x6574617453;
      break;
    case 19:
      unint64_t result = 0x6F4C79726F6D654DLL;
      break;
    case 20:
      unint64_t result = 0x6E49646F50726941;
      break;
    default:
      unint64_t result = 0x6E776F6E6B6E55;
      break;
  }
  return result;
}

ValueMetadata *type metadata accessor for Utilities()
{
  return &type metadata for Utilities;
}

uint64_t ValueWithChangeIndicator.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  ValueWithChangeIndicator.init(_:)(a1);
  return v2;
}

uint64_t *ValueWithChangeIndicator.init(_:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  *((unsigned char *)v1 + 16) = 0;
  uint64_t v4 = (uint64_t)v1 + *(void *)(v3 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)(*(void *)(v3 + 80) - 8) + 56))(v4, 1, 1, *(void *)(v3 + 80));
  swift_beginAccess();
  uint64_t v5 = sub_24887CB68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(v4, a1, v5);
  swift_endAccess();
  return v1;
}

uint64_t sub_24887B668(uint64_t a1)
{
  sub_24887BBD0(a1);
  uint64_t v2 = sub_24887CB68();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

void (*sub_24887B6F0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_24887CB68();
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  char v7 = malloc(v6);
  v3[4] = v7;
  sub_24887B91C((uint64_t)v7);
  return sub_24887B7CC;
}

void sub_24887B7CC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  uint64_t v5 = *(void *)(*(void *)a1 + 8);
  uint64_t v6 = *(void *)(*(void *)a1 + 16);
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    sub_24887BBD0((uint64_t)v3);
    char v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
    v7(v4, v5);
  }
  else
  {
    sub_24887BBD0(*(void *)(*(void *)a1 + 32));
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_24887B8A8()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_24887B8DC(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = a1;
  return result;
}

uint64_t sub_24887B91C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  uint64_t v4 = sub_24887CB68();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_24887B9CC(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  uint64_t v4 = sub_24887CB68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t ValueWithChangeIndicator.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  uint64_t v2 = sub_24887CB68();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ValueWithChangeIndicator.__deallocating_deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  uint64_t v2 = sub_24887CB68();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_24887BBD0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v62 = a1;
  uint64_t v54 = *v1;
  uint64_t v3 = *(void *)(v54 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  long long v53 = (char *)&v48 - v5;
  uint64_t v6 = sub_24887CB68();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v56 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v61 = (char *)&v48 - v8;
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  int v60 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v55 = (char *)&v48 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v48 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v48 - v17;
  sub_24887B91C((uint64_t)&v48 - v17);
  uint64_t v57 = v4;
  unint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48);
  int v20 = v19(v18, 1, v3);
  uint64_t v59 = *(void (**)(char *, uint64_t))(v9 + 8);
  v59(v18, v6);
  if (v20 != 1)
  {
    __int16 v52 = v2;
    sub_24887B91C((uint64_t)v16);
    uint64_t v23 = TupleTypeMetadata2;
    uint64_t v24 = *(int *)(TupleTypeMetadata2 + 48);
    unint64_t v25 = v61;
    uint64_t v49 = v3;
    char v26 = v16;
    long long v27 = &v61[v24];
    uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    unint64_t v51 = (v9 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v28(v61, v62, v6);
    long long v50 = v27;
    BOOL v29 = v27;
    uint64_t v30 = v26;
    uint64_t v31 = v49;
    v28(v29, (uint64_t)v30, v6);
    int v32 = v19(v25, 1, v31);
    uint64_t v33 = v23;
    if (v32 == 1)
    {
      uint64_t v34 = v23;
      uint64_t v35 = v61;
      uint64_t v36 = v30;
      uint64_t v37 = v59;
      v59(v36, v6);
      unint64_t v21 = v28;
      if (v19(v50, 1, v31) == 1)
      {
        v37(v35, v6);
LABEL_10:
        uint64_t v22 = v62;
        goto LABEL_12;
      }
    }
    else
    {
      long long v38 = v55;
      v28(v55, (uint64_t)v61, v6);
      uint64_t v39 = v50;
      unint64_t v21 = v28;
      if (v19(v50, 1, v31) != 1)
      {
        uint64_t v40 = v57;
        long long v41 = v53;
        (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v53, v39, v31);
        char v42 = sub_24887C718();
        long long v43 = *(void (**)(char *, uint64_t))(v40 + 8);
        v43(v41, v31);
        uint64_t v44 = v59;
        v59(v30, v6);
        v43(v38, v31);
        v44(v61, v6);
        if (v42) {
          goto LABEL_10;
        }
LABEL_11:
        int v45 = v52;
        swift_beginAccess();
        *((unsigned char *)v45 + 16) = 1;
        uint64_t v22 = v62;
        goto LABEL_12;
      }
      uint64_t v34 = v33;
      uint64_t v35 = v61;
      v59(v30, v6);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v38, v31);
    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v35, v34);
    goto LABEL_11;
  }
  unint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v22 = v62;
LABEL_12:
  uint64_t v46 = (uint64_t)v60;
  v21(v60, v22, v6);
  return sub_24887B9CC(v46);
}

uint64_t sub_24887C11C()
{
  return sub_24887B664();
}

uint64_t sub_24887C140(uint64_t a1)
{
  return sub_24887BBD0(a1);
}

uint64_t sub_24887C164()
{
  return 16;
}

__n128 sub_24887C170(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24887C17C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24887B8A8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24887C1AC(char *a1)
{
  return sub_24887B8DC(*a1);
}

uint64_t sub_24887C1D4()
{
  return 16;
}

__n128 sub_24887C1E0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24887C1F0()
{
  uint64_t result = sub_24887CB68();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ValueWithChangeIndicator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for ValueWithChangeIndicator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ValueWithChangeIndicator);
}

uint64_t dispatch thunk of ValueWithChangeIndicator.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of ValueWithChangeIndicator.value.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of ValueWithChangeIndicator.value.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of ValueWithChangeIndicator.value.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of ValueWithChangeIndicator.didChange.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of WorkerProtocol.init(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of WorkerProtocol.start()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of WorkerProtocol.process(message:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of WorkerProtocol.stop()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of WorkerProtocol.isStarted.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of WorkerProtocol.workerConfig.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of SummaryDecorator.addDecoratorData(_:operatingSystem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of static ProvidesNeededPreviousFields.getNeededPreviousFields(config:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_24887C418()
{
  return MEMORY[0x270EEE188]();
}

uint64_t sub_24887C428()
{
  return MEMORY[0x270EEE258]();
}

uint64_t sub_24887C438()
{
  return MEMORY[0x270EEE378]();
}

uint64_t sub_24887C448()
{
  return MEMORY[0x270EEE3D0]();
}

uint64_t sub_24887C458()
{
  return MEMORY[0x270EEE920]();
}

uint64_t sub_24887C468()
{
  return MEMORY[0x270EEE930]();
}

uint64_t sub_24887C478()
{
  return MEMORY[0x270EEE950]();
}

uint64_t sub_24887C488()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_24887C498()
{
  return MEMORY[0x270EEFA18]();
}

uint64_t sub_24887C4A8()
{
  return MEMORY[0x270EEFC10]();
}

uint64_t sub_24887C4B8()
{
  return MEMORY[0x270EEFCA0]();
}

uint64_t sub_24887C4C8()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_24887C4D8()
{
  return MEMORY[0x270EEFD78]();
}

uint64_t sub_24887C4E8()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_24887C4F8()
{
  return MEMORY[0x270EEFE80]();
}

uint64_t sub_24887C508()
{
  return MEMORY[0x270EEFF18]();
}

uint64_t sub_24887C518()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_24887C528()
{
  return MEMORY[0x270EEFFC8]();
}

uint64_t sub_24887C538()
{
  return MEMORY[0x270EF0060]();
}

uint64_t sub_24887C548()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_24887C558()
{
  return MEMORY[0x270EF0130]();
}

uint64_t sub_24887C568()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_24887C578()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_24887C588()
{
  return MEMORY[0x270EF0AF0]();
}

uint64_t sub_24887C598()
{
  return MEMORY[0x270EF0AF8]();
}

uint64_t sub_24887C5A8()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_24887C5B8()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_24887C5C8()
{
  return MEMORY[0x270F28690]();
}

uint64_t sub_24887C5D8()
{
  return MEMORY[0x270FA2A68]();
}

uint64_t sub_24887C5E8()
{
  return MEMORY[0x270FA2AA0]();
}

uint64_t sub_24887C5F8()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_24887C608()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_24887C618()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_24887C628()
{
  return MEMORY[0x270FA2C30]();
}

uint64_t sub_24887C638()
{
  return MEMORY[0x270FA08E0]();
}

uint64_t sub_24887C648()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_24887C658()
{
  return MEMORY[0x270FA09D8]();
}

uint64_t sub_24887C668()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_24887C678()
{
  return MEMORY[0x270FA0A00]();
}

uint64_t sub_24887C688()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_24887C698()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_24887C6A8()
{
  return MEMORY[0x270EF1830]();
}

uint64_t sub_24887C6B8()
{
  return MEMORY[0x270F9D060]();
}

uint64_t sub_24887C6C8()
{
  return MEMORY[0x270F9D0E8]();
}

uint64_t sub_24887C6D8()
{
  return MEMORY[0x270FA2B38]();
}

uint64_t sub_24887C6E8()
{
  return MEMORY[0x270FA2B78]();
}

uint64_t sub_24887C6F8()
{
  return MEMORY[0x270FA2B80]();
}

uint64_t sub_24887C708()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_24887C718()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_24887C728()
{
  return MEMORY[0x270EF18B8]();
}

uint64_t sub_24887C738()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_24887C748()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_24887C758()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_24887C768()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_24887C778()
{
  return MEMORY[0x270EF1A10]();
}

uint64_t sub_24887C788()
{
  return MEMORY[0x270EF1AA8]();
}

uint64_t sub_24887C798()
{
  return MEMORY[0x270EF1AD0]();
}

uint64_t sub_24887C7A8()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_24887C7B8()
{
  return MEMORY[0x270F9D5F8]();
}

uint64_t sub_24887C7C8()
{
  return MEMORY[0x270F9D620]();
}

uint64_t sub_24887C7D8()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_24887C7F8()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_24887C808()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_24887C818()
{
  return MEMORY[0x270F9D758]();
}

uint64_t sub_24887C828()
{
  return MEMORY[0x270F9D788]();
}

uint64_t sub_24887C838()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_24887C848()
{
  return MEMORY[0x270F9D7C0]();
}

uint64_t sub_24887C858()
{
  return MEMORY[0x270F9D7C8]();
}

uint64_t sub_24887C868()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_24887C878()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_24887C888()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_24887C8A8()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_24887C8B8()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_24887C8C8()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_24887C8D8()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_24887C8E8()
{
  return MEMORY[0x270F9D8F8]();
}

uint64_t sub_24887C8F8()
{
  return MEMORY[0x270F9D908]();
}

uint64_t sub_24887C908()
{
  return MEMORY[0x270F9DA18]();
}

uint64_t sub_24887C918()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_24887C928()
{
  return MEMORY[0x270F9DAD0]();
}

uint64_t sub_24887C938()
{
  return MEMORY[0x270F9DAD8]();
}

uint64_t sub_24887C948()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_24887C958()
{
  return MEMORY[0x270F9DB50]();
}

uint64_t sub_24887C968()
{
  return MEMORY[0x270F9DB58]();
}

uint64_t sub_24887C978()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_24887C988()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_24887C998()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_24887C9A8()
{
  return MEMORY[0x270F9DC10]();
}

uint64_t sub_24887C9B8()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_24887C9C8()
{
  return MEMORY[0x270F9DC60]();
}

uint64_t sub_24887C9D8()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_24887C9E8()
{
  return MEMORY[0x270F9DD08]();
}

uint64_t sub_24887C9F8()
{
  return MEMORY[0x270F9DD28]();
}

uint64_t sub_24887CA08()
{
  return MEMORY[0x270F9DD60]();
}

uint64_t sub_24887CA18()
{
  return MEMORY[0x270F9DEB0]();
}

uint64_t sub_24887CA28()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_24887CA38()
{
  return MEMORY[0x270F9E080]();
}

uint64_t sub_24887CA48()
{
  return MEMORY[0x270F9E0A0]();
}

uint64_t sub_24887CA58()
{
  return MEMORY[0x270F9E0C0]();
}

uint64_t sub_24887CA68()
{
  return MEMORY[0x270F9E0E0]();
}

uint64_t sub_24887CA78()
{
  return MEMORY[0x270F9E1E0]();
}

uint64_t sub_24887CA88()
{
  return MEMORY[0x270FA2BE8]();
}

uint64_t sub_24887CA98()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_24887CAA8()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_24887CAB8()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_24887CAC8()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_24887CAD8()
{
  return MEMORY[0x270FA0C50]();
}

uint64_t sub_24887CAE8()
{
  return MEMORY[0x270FA0D50]();
}

uint64_t sub_24887CAF8()
{
  return MEMORY[0x270FA0D88]();
}

uint64_t sub_24887CB08()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_24887CB18()
{
  return MEMORY[0x270FA0DB8]();
}

uint64_t sub_24887CB28()
{
  return MEMORY[0x270EF20D8]();
}

uint64_t sub_24887CB38()
{
  return MEMORY[0x270FA1170]();
}

uint64_t sub_24887CB48()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_24887CB58()
{
  return MEMORY[0x270EF21C8]();
}

uint64_t sub_24887CB68()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_24887CB78()
{
  return MEMORY[0x270F9E518]();
}

uint64_t sub_24887CB88()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_24887CB98()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_24887CBA8()
{
  return MEMORY[0x270EF23E8]();
}

uint64_t sub_24887CBB8()
{
  return MEMORY[0x270EF2478]();
}

uint64_t sub_24887CBC8()
{
  return MEMORY[0x270EF25B0]();
}

uint64_t sub_24887CBD8()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_24887CBE8()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_24887CBF8()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_24887CC08()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_24887CC18()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_24887CC28()
{
  return MEMORY[0x270F9E988]();
}

uint64_t sub_24887CC38()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_24887CC48()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_24887CC58()
{
  return MEMORY[0x270F9EA08]();
}

uint64_t sub_24887CC68()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_24887CC78()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_24887CC88()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_24887CC98()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_24887CCA8()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_24887CCB8()
{
  return MEMORY[0x270F9EBD8]();
}

uint64_t sub_24887CCC8()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_24887CCD8()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_24887CCE8()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_24887CCF8()
{
  return MEMORY[0x270F9EC48]();
}

uint64_t sub_24887CD08()
{
  return MEMORY[0x270F9EC88]();
}

uint64_t sub_24887CD18()
{
  return MEMORY[0x270F9EC90]();
}

uint64_t sub_24887CD28()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_24887CD38()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_24887CD48()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_24887CD58()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_24887CD68()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_24887CD78()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_24887CD88()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_24887CDA8()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_24887CDB8()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_24887CDC8()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_24887CDD8()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_24887CDE8()
{
  return MEMORY[0x270F9F280]();
}

uint64_t sub_24887CDF8()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_24887CE08()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_24887CE18()
{
  return MEMORY[0x270F9F2F8]();
}

uint64_t sub_24887CE28()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_24887CE38()
{
  return MEMORY[0x270F9F338]();
}

uint64_t sub_24887CE48()
{
  return MEMORY[0x270F9F358]();
}

uint64_t sub_24887CE58()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_24887CE68()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_24887CE78()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_24887CE88()
{
  return MEMORY[0x270F9F3C0]();
}

uint64_t sub_24887CE98()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_24887CEA8()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_24887CEB8()
{
  return MEMORY[0x270F9F438]();
}

uint64_t sub_24887CEC8()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_24887CED8()
{
  return MEMORY[0x270F9F478]();
}

uint64_t sub_24887CEE8()
{
  return MEMORY[0x270F9F498]();
}

uint64_t sub_24887CEF8()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_24887CF08()
{
  return MEMORY[0x270F9F4D0]();
}

uint64_t sub_24887CF18()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_24887CF28()
{
  return MEMORY[0x270F9F758]();
}

uint64_t sub_24887CF38()
{
  return MEMORY[0x270F9F7B0]();
}

uint64_t sub_24887CF48()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_24887CF58()
{
  return MEMORY[0x270F9FA40]();
}

uint64_t sub_24887CF68()
{
  return MEMORY[0x270F9FA80]();
}

uint64_t sub_24887CF78()
{
  return MEMORY[0x270F9FAB8]();
}

uint64_t sub_24887CF88()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_24887CF98()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_24887CFA8()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_24887CFB8()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_24887CFC8()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_24887CFD8()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_24887CFE8()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_24887CFF8()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_24887D008()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_24887D018()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_24887D028()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_24887D038()
{
  return MEMORY[0x270F9FC70]();
}

uint64_t sub_24887D048()
{
  return MEMORY[0x270F9FC78]();
}

uint64_t sub_24887D058()
{
  return MEMORY[0x270F9FC80]();
}

uint64_t sub_24887D068()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_24887D078()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_24887D088()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_24887D0B8()
{
  return MEMORY[0x270FA0128]();
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return MEMORY[0x270EE4C90](applicationID);
}

CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return (CFPropertyListRef)MEMORY[0x270EE4CC0](key, applicationID, userName, hostName);
}

uint64_t CFPreferencesFlushCaches()
{
  return MEMORY[0x270EE4CC8]();
}

void CFPreferencesSetValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
}

CFUserNotificationRef CFUserNotificationCreate(CFAllocatorRef allocator, CFTimeInterval timeout, CFOptionFlags flags, SInt32 *error, CFDictionaryRef dictionary)
{
  return (CFUserNotificationRef)MEMORY[0x270EE54C8](allocator, flags, error, dictionary, timeout);
}

SInt32 CFUserNotificationReceiveResponse(CFUserNotificationRef userNotification, CFTimeInterval timeout, CFOptionFlags *responseFlags)
{
  return MEMORY[0x270EE5500](userNotification, responseFlags, timeout);
}

uint64_t MobileGestalt_copy_deviceClass_obj()
{
  return MEMORY[0x270F96048]();
}

uint64_t MobileGestalt_copy_deviceName_obj()
{
  return MEMORY[0x270F96058]();
}

uint64_t MobileGestalt_get_current_device()
{
  return MEMORY[0x270F960E8]();
}

uint64_t MobileGestalt_get_deviceClassNumber()
{
  return MEMORY[0x270F960F0]();
}

uint64_t MobileGestalt_get_internalBuild()
{
  return MEMORY[0x270F96148]();
}

CFDataRef SecKeyCopyExternalRepresentation(SecKeyRef key, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x270EFD9B0](key, error);
}

SecKeyRef SecKeyCopyPublicKey(SecKeyRef key)
{
  return (SecKeyRef)MEMORY[0x270EFD9D8](key);
}

CFDataRef SecKeyCreateDecryptedData(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef ciphertext, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x270EFD9F8](key, algorithm, ciphertext, error);
}

CFDataRef SecKeyCreateEncryptedData(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef plaintext, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x270EFDA10](key, algorithm, plaintext, error);
}

SecKeyRef SecKeyCreateRandomKey(CFDictionaryRef parameters, CFErrorRef *error)
{
  return (SecKeyRef)MEMORY[0x270EFDA40](parameters, error);
}

SecKeyRef SecKeyCreateWithData(CFDataRef keyData, CFDictionaryRef attributes, CFErrorRef *error)
{
  return (SecKeyRef)MEMORY[0x270EFDA60](keyData, attributes, error);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

double __exp10(double a1)
{
  MEMORY[0x270ED7DC8](a1);
  return result;
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x270FA0170]();
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x270ED9628](__path, *(void *)&__mode);
}

void free(void *a1)
{
}

uid_t geteuid(void)
{
  return MEMORY[0x270ED9BF0]();
}

int kill(pid_t a1, int a2)
{
  return MEMORY[0x270ED9F70](*(void *)&a1, *(void *)&a2);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x270EDA498](__b, *(void *)&__c, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x270EDA738](*(void *)&token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x270EDA770](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x270F9A528](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x270F9A598](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x270F9A5A8]();
}

void objc_end_catch(void)
{
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x270F9A658](name);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

uint64_t objc_opt_new()
{
  return MEMORY[0x270F9A710]();
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A888](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x270EDA9A0](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x270EDAA90]();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

int posix_spawnattr_getflags(const posix_spawnattr_t *a1, __int16 *a2)
{
  return MEMORY[0x270EDACB0](a1, a2);
}

int posix_spawnattr_init(posix_spawnattr_t *a1)
{
  return MEMORY[0x270EDACB8](a1);
}

int posix_spawnattr_setflags(posix_spawnattr_t *a1, __int16 a2)
{
  return MEMORY[0x270EDACC8](a1, a2);
}

int posix_spawnattr_setsigdefault(posix_spawnattr_t *a1, const sigset_t *a2)
{
  return MEMORY[0x270EDACE0](a1, a2);
}

int posix_spawnattr_setsigmask(posix_spawnattr_t *a1, const sigset_t *a2)
{
  return MEMORY[0x270EDACE8](a1, a2);
}

int posix_spawnp(pid_t *a1, const char *a2, const posix_spawn_file_actions_t *a3, const posix_spawnattr_t *a4, char *const __argv[], char *const __envp[])
{
  return MEMORY[0x270EDACF0](a1, a2, a3, a4, __argv, __envp);
}

int sigemptyset(sigset_t *a1)
{
  return MEMORY[0x270EDB4C0](a1);
}

int sigfillset(sigset_t *a1)
{
  return MEMORY[0x270EDB4C8](a1);
}

char *__cdecl strdup(const char *__s1)
{
  return (char *)MEMORY[0x270EDB5D0](__s1);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x270EDB5D8](*(void *)&__errnum);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x270FA0218]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x270FA0278]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x270FA0310]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x270FA0330]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x270FA0410]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x270FA0420]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x270FA0430]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x270FA0498]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setAtWritableKeyPath()
{
  return MEMORY[0x270FA0548]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x270FA0588]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

int sysctl(int *a1, u_int a2, void *a3, size_t *a4, void *a5, size_t a6)
{
  return MEMORY[0x270EDB7D0](a1, *(void *)&a2, a3, a4, a5, a6);
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return MEMORY[0x270EDB7D8](a1, a2, a3, a4, a5);
}