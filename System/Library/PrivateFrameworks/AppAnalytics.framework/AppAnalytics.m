uint64_t sub_1A908A13C(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;

  sub_1A909B6F8(0, a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A908A198(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  sub_1A909B78C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t Tracker.chain(name:identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5 = (void *)v4;
  uint64_t v27 = a1;
  uint64_t v28 = a3;
  uint64_t v8 = type metadata accessor for DiagnosticsConsentProvider(0);
  MEMORY[0x1F4188790](v8 - 8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)(v4 + 80);
  v12 = *(void **)(v4 + 88);
  int v26 = *(unsigned __int8 *)(v4 + 176);
  uint64_t v13 = *(void *)(v4 + 96);
  uint64_t v14 = *(void *)(v4 + OBJC_IVAR____TtC12AppAnalytics7Tracker_actionsLock);
  id v25 = v11;
  id v15 = v12;
  swift_retain();
  os_unfair_lock_lock_with_options();
  uint64_t v16 = *(void *)(v4 + 160);
  swift_beginAccess();
  uint64_t v17 = v5[19];
  v29[0] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A90A6268(v17);
  uint64_t v18 = v29[0];
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
  uint64_t v30 = v18;
  uint64_t v19 = v5[23];
  uint64_t v20 = v5[24];
  sub_1A9098C68((uint64_t)v5 + OBJC_IVAR____TtC12AppAnalytics7Tracker_diagnosticsConsentProvider, (uint64_t)v10, type metadata accessor for DiagnosticsConsentProvider);
  sub_1A90A0DC8((uint64_t)v5 + OBJC_IVAR____TtC12AppAnalytics7Tracker_summaryEventManager, (uint64_t)v29);
  type metadata accessor for Tracker(0);
  uint64_t v21 = swift_allocObject();
  uint64_t ObjectType = swift_getObjectType();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return sub_1A909D008(v27, a2, v25, v15, v26, v13, (uint64_t)v5, &v30, v28, a4, 0, 0, v19, (uint64_t)v10, (uint64_t)v29, v21, ObjectType, v20);
}

uint64_t sub_1A908A404()
{
  uint64_t result = type metadata accessor for ProcessEvent();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1A908A498(uint64_t a1, unint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v6 = v5;
  int v50 = a4;
  uint64_t v49 = a3;
  uint64_t v10 = type metadata accessor for Tracker.Timer(0);
  v52 = *(void **)(v10 - 8);
  uint64_t v53 = v10;
  MEMORY[0x1F4188790](v10);
  v51 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A90934F0(0, &qword_1EB689398, type metadata accessor for Tracker.Timer, MEMORY[0x1E4FBB718]);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v48 = (uint64_t)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v46 - v15;
  uint64_t v17 = sub_1A916AE70();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (void *)((char *)v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = *(void **)(*(void *)(v6 + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v20 = v21;
  (*(void (**)(void *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FBCBF0], v17);
  id v22 = v21;
  LOBYTE(v21) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v18 + 8))(v20, v17);
  if (v21)
  {
    v46[2] = a5;
    unint64_t v47 = a2;
    uint64_t v24 = sub_1A9091A20(a1, a2);
    uint64_t v26 = v25;
    v46[1] = v6 + 104;
    swift_beginAccess();
    uint64_t v27 = *(void *)(v6 + 104);
    if (*(void *)(v27 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v28 = sub_1A90A1D98(v24, v26);
      uint64_t v30 = (uint64_t)v52;
      uint64_t v29 = v53;
      if (v31)
      {
        sub_1A9098C68(*(void *)(v27 + 56) + v52[9] * v28, (uint64_t)v16, type metadata accessor for Tracker.Timer);
        v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
        v32(v16, 0, 1, v29);
      }
      else
      {
        v32 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v52[7];
        v32(v16, 1, 1, v53);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v30 = (uint64_t)v52;
      uint64_t v29 = v53;
      v32 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v52[7];
      v32(v16, 1, 1, v53);
    }
    swift_bridgeObjectRelease();
    int v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v16, 1, v29);
    uint64_t result = sub_1A9093480((uint64_t)v16, &qword_1EB689398, type metadata accessor for Tracker.Timer);
    if (v33 == 1)
    {
      uint64_t v53 = v6;
      uint64_t v34 = sub_1A916AC90();
      uint64_t v35 = (uint64_t)v51;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v51, v49, v34);
      v52 = (void *)a1;
      uint64_t v36 = v29;
      unint64_t v37 = v47;
      uint64_t v38 = sub_1A9091A20(a1, v47);
      uint64_t v40 = v39;
      uint64_t v41 = v48;
      sub_1A9098C68(v35, v48, type metadata accessor for Tracker.Timer);
      v32((char *)v41, 0, 1, v36);
      swift_beginAccess();
      sub_1A90A64FC(v41, v38, v40);
      swift_endAccess();
      if (v50)
      {
        v42 = v52;
        uint64_t v43 = sub_1A9091A20((uint64_t)v52, v37);
        uint64_t v45 = v44;
        v54[3] = type metadata accessor for Tracker.RestartTimer();
        v54[4] = &off_1EFFA07C8;
        v54[0] = v42;
        v54[1] = v37;
        swift_beginAccess();
        sub_1A90F0DEC(v42, v37);
        sub_1A91085FC((uint64_t)v54, v43, v45);
        swift_endAccess();
      }
      return sub_1A9098AF0(v35, type metadata accessor for Tracker.Timer);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A908A9D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v32 = *(void *)(a1 + 16);
  uint64_t v30 = v4;
  uint64_t v5 = (int *)type metadata accessor for DataEventStack.Entry();
  uint64_t v29 = sub_1A916B540();
  uint64_t v6 = *(void *)(v29 - 8);
  uint64_t v7 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = *((void *)v5 - 1);
  uint64_t v11 = MEMORY[0x1F4188790](v7);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v28 - v14;
  char v31 = v2;
  *(void *)&long long v33 = *v2;
  sub_1A916B230();
  swift_getWitnessTable();
  sub_1A916AF20();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v9, 1, v5) == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v29);
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    (*(void (**)(char *, char *, int *))(v10 + 32))(v15, v9, v5);
    swift_getWitnessTable();
    uint64_t v17 = v31;
    sub_1A916B340();
    uint64_t v18 = *(void (**)(char *, int *))(v10 + 8);
    v18(v13, v5);
    uint64_t v19 = v17[1];
    uint64_t v20 = v17[2];
    uint64_t v29 = v19;
    uint64_t v21 = v32;
    uint64_t v34 = v32;
    uint64_t v35 = v30;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v33);
    (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(boxed_opaque_existential_1, v15, v21);
    uint64_t v23 = *(void *)&v15[v5[9]];
    LODWORD(v32) = v15[v5[10]];
    uint64_t v24 = &v15[v5[11]];
    uint64_t v26 = *(void *)v24;
    uint64_t v25 = *((void *)v24 + 1);
    uint64_t v27 = *(void *)&v15[v5[12]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(v15, v5);
    *(void *)a2 = v29;
    *(void *)(a2 + 8) = v20;
    uint64_t result = sub_1A908EC8C(&v33, a2 + 16);
    *(void *)(a2 + 56) = v23;
    *(unsigned char *)(a2 + 64) = v32;
    *(void *)(a2 + 72) = v26;
    *(void *)(a2 + 80) = v25;
    *(void *)(a2 + 88) = v27;
  }
  return result;
}

uint64_t SessionManager.transaction(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 48);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v2;
  v6[3] = a1;
  v6[4] = a2;
  swift_retain();
  swift_retain();
  sub_1A908CAA8(v5, (uint64_t)sub_1A909BE44, (uint64_t)v6);

  return swift_release();
}

uint64_t sub_1A908ADA8(void *a1)
{
  return EventData.encode(to:)(a1);
}

uint64_t EventData.encode(to:)(void *a1)
{
  sub_1A908B020(0, &qword_1EB6894A0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A908B084();
  sub_1A916BB50();
  v9[15] = 0;
  sub_1A916B930();
  if (!v1)
  {
    type metadata accessor for EventData();
    v9[14] = 1;
    sub_1A916AC90();
    sub_1A908B15C(qword_1EB689120, MEMORY[0x1E4F27928]);
    sub_1A916B960();
    v9[13] = 2;
    sub_1A916B930();
    v9[12] = 3;
    sub_1A916B930();
    v9[11] = 4;
    sub_1A916B910();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1A908B020(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1A908B084();
    unint64_t v7 = a3(a1, &type metadata for EventData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1A908B084()
{
  unint64_t result = qword_1EB688B30;
  if (!qword_1EB688B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB688B30);
  }
  return result;
}

uint64_t sub_1A908B0D8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1A908B15C(&qword_1EB688B48, (void (*)(uint64_t))type metadata accessor for EventData);
  uint64_t result = sub_1A908B15C(&qword_1EB688B40, (void (*)(uint64_t))type metadata accessor for EventData);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1A908B15C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A908B1A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A908B1EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for SessionManagerConfiguration(uint64_t a1, uint64_t a2)
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  swift_unknownObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1A916ACC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for DiagnosticsConsentProvider(0);

  return swift_release();
}

uint64_t sub_1A908B2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Tracker.Timer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A908B338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1A916AAD0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[3] = type metadata accessor for UploadDropboxFileManager();
  v25[4] = &off_1EFFA1230;
  v25[0] = a4;
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v14(a5 + OBJC_IVAR____TtC12AppAnalytics42DocumentDirectoryUploadDropboxPathProvider____lazy_storage___baseURL, 1, 1, v10);
  v14(a5 + OBJC_IVAR____TtC12AppAnalytics42DocumentDirectoryUploadDropboxPathProvider____lazy_storage___debugBaseURL, 1, 1, v10);
  uint64_t v15 = (uint64_t *)(a5 + OBJC_IVAR____TtC12AppAnalytics42DocumentDirectoryUploadDropboxPathProvider_environmentName);
  *uint64_t v15 = a2;
  v15[1] = a3;
  sub_1A90A0DC8((uint64_t)v25, a5 + OBJC_IVAR____TtC12AppAnalytics42DocumentDirectoryUploadDropboxPathProvider_fileManager);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  type metadata accessor for BaseDocumentDirectoryUploadDropboxPathProvider(0);
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1A90A7360((uint64_t)v13, a2, a3);
  sub_1A90A0DC8((uint64_t)v25, (uint64_t)&v22);
  uint64_t v17 = type metadata accessor for StaticUploadDropboxPathProvider(0);
  uint64_t v18 = swift_allocObject();
  v14(v18 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider____lazy_storage___baseURL, 1, 1, v10);
  v14(v18 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider____lazy_storage___debugBaseURL, 1, 1, v10);
  uint64_t v19 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v18
                                                   + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider_baseURLProvider);
  *uint64_t v19 = sub_1A90A7A04;
  v19[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v16;
  uint64_t v20 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v18
                                                   + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider_debugURLProvider);
  *uint64_t v20 = sub_1A914ECB8;
  v20[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v16;
  sub_1A908EC8C(&v22, v18 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider_fileManager);
  uint64_t v23 = v17;
  uint64_t v24 = &off_1EFFA2548;
  *(void *)&long long v22 = v18;
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  sub_1A908EC8C(&v22, a5 + OBJC_IVAR____TtC12AppAnalytics42DocumentDirectoryUploadDropboxPathProvider_staticPathProvider);
  return a5;
}

uint64_t AccessTracker.push<A>(data:traits:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v21 = a1;
  uint64_t v9 = type metadata accessor for PushEvent();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v20 - v11;
  uint64_t v13 = sub_1A916AE70();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (uint64_t *)((char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v18 = *(void **)(*(void *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *uint64_t v16 = v18;
    (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FBCBF0], v13);
    id v19 = v18;
    LOBYTE(v18) = sub_1A916AE90();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v14 + 8))(v16, v13);
    if (v18)
    {
      sub_1A90A3290(v21, a6, a7, (uint64_t)v12);
      sub_1A908E488((uint64_t)v12, v22, v23, v24, v25);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t SessionManager.start(for:identifier:startDate:timestampJitter:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v10 = sub_1A916AC90();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  unint64_t v14 = a1[1];
  uint64_t v16 = *(void *)(v6 + 56);
  uint64_t v24 = *(void *)(v6 + 48);
  uint64_t v25 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a4, v10);
  unint64_t v17 = (*(unsigned __int8 *)(v11 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v6;
  *(void *)(v18 + 24) = a5;
  *(void *)(v18 + 32) = 0;
  *(unsigned char *)(v18 + 40) = 0;
  uint64_t v19 = v23;
  *(void *)(v18 + 48) = v22;
  *(void *)(v18 + 56) = v19;
  *(void *)(v18 + 64) = v15;
  *(void *)(v18 + 72) = v14;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v18 + v17, v13, v10);
  id v20 = a5;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A908ED3C(v15, v14);
  sub_1A908CAA8(v24, (uint64_t)sub_1A908FF84, v18);
  return swift_release();
}

uint64_t AccessSessionManager.push<A>(_:traits:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v16 = a4;
  uint64_t v17 = a5;
  uint64_t v15 = a3;
  uint64_t v7 = type metadata accessor for SessionData();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = type metadata accessor for PushEvent();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v14 - v11;
  sub_1A90A3290(a1, v7, WitnessTable, (uint64_t)&v14 - v11);
  sub_1A908CF14((uint64_t)v12, a2, v15, v16, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1A908BB10()
{
  sub_1A9098B50(v0 + OBJC_IVAR____TtC12AppAnalyticsP33_C30334460221130696DFAC9959A2A23920LazyDiagnosticStatus_provider, type metadata accessor for DiagnosticsConsentProvider);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC12AppAnalyticsP33_C30334460221130696DFAC9959A2A23920LazyDiagnosticStatus_queue));
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v1, v2);
}

void sub_1A908BB98(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A908BBD4(a1, a2);
  if (v2) {
    swift_allocError();
  }
}

double sub_1A908BBD4@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v6 = (uint64_t)(a1 + 2);
  *(void *)&long long v11 = *a1;
  *((void *)&v11 + 1) = v4;
  sub_1A90A24B0((uint64_t)(a1 + 2), (uint64_t)v12);
  if (v4)
  {
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
    long long v11 = *(_OWORD *)a1;
    sub_1A90A24B0(v6, (uint64_t)v12);
    sub_1A908E870(0, &qword_1EB689388);
    if (swift_dynamicCast())
    {
      sub_1A908EC8C(v8, (uint64_t)v10);
      sub_1A908EC8C(v10, a2 + 16);
      *(void *)a2 = v5;
      *(void *)(a2 + 8) = v4;
      return result;
    }
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));
    swift_bridgeObjectRelease();
    sub_1A9106164((uint64_t)v8, (uint64_t (*)(void))sub_1A91061C4);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  }
  *(void *)(a2 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  return result;
}

void *AppSessionManager.createSessionManager(with:)(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for SummaryEventConfiguration(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DiagnosticsConsentProvider(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for SessionManager(0);
  uint64_t v9 = *(void **)(v1 + 32);
  id v28 = *(id *)(v1 + 24);
  id v10 = v9;
  long long v11 = sub_1A908C0F4();
  uint64_t v12 = a1[1];
  uint64_t v33 = *a1;
  sub_1A90A0DC8((uint64_t)(a1 + 2), (uint64_t)v30);
  uint64_t v13 = a1[7];
  uint64_t v26 = a1[8];
  uint64_t v14 = type metadata accessor for SessionManagerConfiguration();
  sub_1A9098E08((uint64_t)a1 + *(int *)(v14 + 32), (uint64_t)v8, type metadata accessor for DiagnosticsConsentProvider);
  sub_1A9098E08(v1 + OBJC_IVAR____TtC12AppAnalytics17AppSessionManager_summaryEventConfiguration, (uint64_t)v5, type metadata accessor for SummaryEventConfiguration);
  uint64_t v15 = (char *)a1 + *(int *)(v14 + 36);
  char v16 = *v15;
  LOBYTE(v15) = v15[1];
  v29[0] = v16;
  v29[1] = (_BYTE)v15;
  uint64_t v18 = v31;
  uint64_t v17 = v32;
  uint64_t v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v31);
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v25 = v17;
  *(void *)&long long v24 = v8;
  *((void *)&v24 + 1) = v5;
  id v20 = v28;
  uint64_t v21 = sub_1A908BFBC(v28, v10, (uint64_t)v11, &v33, v12, v19, v13, v26, v24, (uint64_t)v29, v27, v18, v25);

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
  v21[5] = &off_1EFFA1A78;
  swift_unknownObjectWeakAssign();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v1;
  *(void *)(v22 + 24) = v21;
  swift_retain();
  swift_retain();
  sub_1A908CAA8((uint64_t)v20, (uint64_t)sub_1A909F83C, v22);
  swift_release();
  return v21;
}

uint64_t type metadata accessor for SessionManager(uint64_t a1)
{
  return sub_1A9098ED8(a1, (uint64_t *)&unk_1EB689F50);
}

void *sub_1A908BFBC(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v25 = a7;
  uint64_t v26 = a8;
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  long long v22 = a9;
  uint64_t v17 = *(void *)(a12 - 8);
  MEMORY[0x1F4188790](a11);
  uint64_t v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = (void *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a6, a12);
  return sub_1A909C648(a1, a2, a3, v23, v24, (uint64_t)v19, v25, v26, v22, *((uint64_t *)&v22 + 1), a10, v20, a12, a13);
}

void *sub_1A908C0F4()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void **)(v0 + 16);
  }
  else
  {
    uint64_t v2 = *(void **)(v0 + 24);
    type metadata accessor for SessionGroupManager();
    uint64_t v1 = (void *)swift_allocObject();
    id v3 = v2;
    uint64_t v4 = MEMORY[0x1E4FBC860];
    v1[3] = sub_1A908C190(MEMORY[0x1E4FBC860]);
    v1[4] = sub_1A908C190(v4);
    v1[2] = v3;
    *(void *)(v0 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

unint64_t sub_1A908C190(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A90B50A4();
  uint64_t v2 = (void *)sub_1A916B810();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 72);
  while (1)
  {
    uint64_t v5 = *(v4 - 5);
    uint64_t v6 = *(v4 - 4);
    uint64_t v7 = *(v4 - 3);
    uint64_t v8 = *(v4 - 2);
    uint64_t v9 = *(v4 - 1);
    uint64_t v10 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A90BD98C(v5, v6, v7, v8);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (uint64_t *)(v2[6] + 32 * result);
    *uint64_t v13 = v5;
    v13[1] = v6;
    v13[2] = v7;
    v13[3] = v8;
    uint64_t v14 = (void *)(v2[7] + 16 * result);
    *uint64_t v14 = v9;
    v14[1] = v10;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v4 += 6;
    v2[2] = v17;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t SessionManagerConfiguration.init(options:flushProcessor:timestampJitter:privacyValidationProvider:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v12 = type metadata accessor for DiagnosticsConsentProvider(0);
  uint64_t v13 = v12 - 8;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a1;
  char v17 = *((unsigned char *)a3 + 16);
  uint64_t v25 = &type metadata for TimestampJitter;
  uint64_t v26 = &protocol witness table for TimestampJitter;
  long long v23 = *a3;
  char v24 = v17;
  sub_1A90A0DC8((uint64_t)&v23, (uint64_t)v22);
  sub_1A916ACB0();
  uint64_t v18 = &v15[*(int *)(v13 + 28)];
  *(void *)uint64_t v18 = sub_1A90A80E4;
  *((void *)v18 + 1) = 0;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v23);
  *a6 = v16;
  a6[1] = a2;
  sub_1A908EC8C(v22, (uint64_t)(a6 + 2));
  a6[7] = a4;
  a6[8] = a5;
  uint64_t v19 = type metadata accessor for SessionManagerConfiguration();
  uint64_t result = sub_1A9099290((uint64_t)v15, (uint64_t)a6 + *(int *)(v19 + 32));
  *(_WORD *)((char *)a6 + *(int *)(v19 + 36)) = 0;
  return result;
}

uint64_t type metadata accessor for SessionManagerConfiguration()
{
  uint64_t result = qword_1EB687A78;
  if (!qword_1EB687A78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t Tracker.push<A>(data:traits:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = type metadata accessor for PushEvent();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  char v17 = (char *)&v19 - v16;
  sub_1A90A3290(a1, a6, a7, (uint64_t)&v19 - v16);
  sub_1A908C584((uint64_t)v17, a2, a3, a4, a5, a6, a7);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t sub_1A908C584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v27 = a7;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v11 = type metadata accessor for PushEvent();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v16 = *(void *)(v8 + 88);
  uint64_t v28 = *(void *)(v8 + 80);
  uint64_t v29 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v26 - v14, a1, v11);
  unint64_t v17 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v18 = (v13 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  id v20 = (char *)swift_allocObject();
  uint64_t v21 = v27;
  *((void *)v20 + 2) = a6;
  *((void *)v20 + 3) = v21;
  *((void *)v20 + 4) = v8;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v20[v17], v15, v11);
  uint64_t v22 = v31;
  *(void *)&v20[v18] = v30;
  long long v23 = &v20[v19];
  uint64_t v24 = v32;
  *(void *)long long v23 = v22;
  *((void *)v23 + 1) = v24;
  *(void *)&v20[(v19 + 23) & 0xFFFFFFFFFFFFFFF8] = v33;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A908CAA8(v28, (uint64_t)sub_1A908CD54, (uint64_t)v20);
  return swift_release();
}

uint64_t SessionManager.push<A>(_:traits:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v21 = a5;
  uint64_t v20 = a4;
  uint64_t v12 = type metadata accessor for SessionData();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = type metadata accessor for PushEvent();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  unint64_t v17 = (char *)&v19 - v16;
  sub_1A90A3290(a1, v12, WitnessTable, (uint64_t)&v19 - v16);
  sub_1A908C8AC((uint64_t)v17, a2, a3, v20, v21, a6, a7);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t sub_1A908C8AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v29 = a7;
  uint64_t v30 = a2;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v31 = a3;
  type metadata accessor for SessionData();
  swift_getWitnessTable();
  uint64_t v11 = type metadata accessor for PushEvent();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v16 = *(void *)(v8 + 56);
  uint64_t v27 = *(void *)(v8 + 48);
  uint64_t v28 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v26 - v14, a1, v11);
  unint64_t v17 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v18 = (v13 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = (char *)swift_allocObject();
  uint64_t v21 = v29;
  *((void *)v20 + 2) = a6;
  *((void *)v20 + 3) = v21;
  *((void *)v20 + 4) = v8;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v20[v17], v15, v11);
  uint64_t v22 = v31;
  *(void *)&v20[v18] = v30;
  long long v23 = &v20[v19];
  uint64_t v24 = v32;
  *(void *)long long v23 = v22;
  *((void *)v23 + 1) = v24;
  *(void *)&v20[(v19 + 23) & 0xFFFFFFFFFFFFFFF8] = v33;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A908CAA8(v27, (uint64_t)sub_1A908CE1C, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_1A908CAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = a2;
  uint64_t v5 = sub_1A916ADB0();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1A916AE10();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void **)(a1 + OBJC_IVAR___AAAccessQueue__qos);
  swift_beginAccess();
  uint64_t v11 = *v10;
  uint64_t v12 = v11[2];
  swift_retain();
  os_unfair_lock_lock_with_options();
  uint64_t v13 = (char *)v11 + *(void *)(*v11 + 96);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v13, v6);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  swift_release();
  sub_1A916ADA0();
  aBlock[4] = v15;
  aBlock[5] = a3;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908CD10;
  aBlock[3] = &block_descriptor_8;
  _Block_copy(aBlock);
  sub_1A916AE60();
  swift_allocObject();
  swift_retain();
  sub_1A916AE50();
  swift_release();
  sub_1A916B410();
  return swift_release();
}

uint64_t sub_1A908CD10(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_1A908CD54()
{
  uint64_t v1 = *(void *)(type metadata accessor for PushEvent() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A908E488(v0 + v2, *(void *)(v0 + v3), *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1A908CE1C()
{
  type metadata accessor for SessionData();
  swift_getWitnessTable();
  uint64_t v1 = *(void *)(type metadata accessor for PushEvent() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A908CF14(v0 + v2, *(void *)(v0 + v3), *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1A908CF14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v61 = a4;
  uint64_t v62 = a5;
  uint64_t v59 = a2;
  uint64_t v60 = a3;
  uint64_t v56 = type metadata accessor for Session();
  MEMORY[0x1F4188790](v56);
  v57 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1F4188790](v63);
  uint64_t v64 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SessionData();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = type metadata accessor for PushEvent();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v56 - v11;
  uint64_t v13 = sub_1A916AE70();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (uint64_t *)((char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v17 = *(void **)(*(void *)(v5 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FBCBF0], v13);
  id v18 = v17;
  LOBYTE(v17) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v20 = *(int *)(v9 + 36);
  uint64_t v65 = a1;
  uint64_t v21 = (uint64_t *)(a1 + v20);
  uint64_t v23 = *(void *)(a1 + v20);
  uint64_t v22 = *(void *)(a1 + v20 + 8);
  uint64_t v58 = v5;
  uint64_t v24 = (uint64_t *)(v5 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_dataStacks);
  swift_beginAccess();
  uint64_t v25 = *v24;
  if (*(void *)(*v24 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v26 = sub_1A90A1D98(v23, v22);
    if (v27)
    {
      sub_1A90A0DC8(*(void *)(v25 + 56) + 40 * v26, (uint64_t)&v67);
    }
    else
    {
      v69 = 0;
      long long v67 = 0u;
      long long v68 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v69 = 0;
    long long v67 = 0u;
    long long v68 = 0u;
  }
  swift_endAccess();
  if (*((void *)&v68 + 1))
  {
    sub_1A908E870(0, (unint64_t *)&qword_1EB6897A8);
    type metadata accessor for DataEventStack();
    if (swift_dynamicCast())
    {
      uint64_t v28 = *((void *)&v70 + 1);
      uint64_t v29 = v70;
      uint64_t v30 = v71;
      goto LABEL_13;
    }
  }
  else
  {
    sub_1A908ED50((uint64_t)&v67);
  }
  uint64_t v29 = 0;
  uint64_t v28 = 0;
  uint64_t v30 = 0;
LABEL_13:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v65, v9);
  if (!v29)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1A908E448();
    uint64_t v28 = v31;
    uint64_t v30 = v32;
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *(void *)&long long v70 = v29;
  *((void *)&v70 + 1) = v28;
  uint64_t v71 = v30;
  uint64_t v33 = v65;
  int v34 = *(unsigned __int8 *)(v65 + *(int *)(v9 + 40));
  uint64_t v35 = type metadata accessor for DataEventStack();
  sub_1A908D93C(v33, v59, v34, v60, v61, v62, v35);
  uint64_t v36 = *v21;
  uint64_t v37 = v21[1];
  *((void *)&v68 + 1) = v35;
  v69 = &off_1EFF9E8F0;
  long long v67 = v70;
  *(void *)&long long v68 = v71;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1A908D668((uint64_t)&v67, v36, v37);
  swift_endAccess();
  uint64_t v38 = v58;
  uint64_t v39 = v58 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
  swift_beginAccess();
  uint64_t v40 = v39;
  uint64_t v41 = v64;
  sub_1A9098DA0(v40, v64, type metadata accessor for SessionManager.SessionState);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result)
  {
    if (result != 1) {
      return result;
    }
    v42 = type metadata accessor for SessionManager.SessionState;
    uint64_t v43 = v41;
  }
  else
  {
    uint64_t v44 = *(void *)v41;
    uint64_t v45 = *(void *)(v38 + 24);
    uint64_t v46 = *(void *)(*(void *)v41 + 24);
    uint64_t v65 = *(void *)(*(void *)v41 + 16);
    uint64_t WitnessTable = v45;
    uint64_t v47 = *(void *)(v44 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier + 8);
    uint64_t v64 = *(void *)(v44 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier);
    uint64_t v48 = *(void *)(v44 + 32);
    unint64_t v49 = *(void *)(v44 + 40);
    uint64_t v50 = v44 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_startDate;
    uint64_t v51 = v56;
    v52 = (uint64_t *)v57;
    uint64_t v53 = &v57[*(int *)(v56 + 28)];
    uint64_t v54 = sub_1A916AC90();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v53, v50, v54);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A908ED3C(v48, v49);
    uint64_t v55 = sub_1A908F034(v44);
    uint64_t *v52 = v65;
    v52[1] = v46;
    v52[2] = v64;
    v52[3] = v47;
    v52[4] = v48;
    v52[5] = v49;
    *(uint64_t *)((char *)v52 + *(int *)(v51 + 32)) = v55;
    sub_1A908F35C((uint64_t)v52);
    swift_release();
    v42 = (uint64_t (*)(void))type metadata accessor for Session;
    uint64_t v43 = (uint64_t)v52;
  }
  return sub_1A90A1B84(v43, v42);
}

uint64_t sub_1A908D568(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A908D5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A908D668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_1A908EC8C((long long *)a1, (uint64_t)v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    sub_1A908D8F8((uint64_t)v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A9109314(a1, (unint64_t *)&qword_1EB6897B0, (unint64_t *)&qword_1EB6897A8);
    sub_1A914CB3C(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_1A9109314((uint64_t)v9, (unint64_t *)&qword_1EB6897B0, (unint64_t *)&qword_1EB6897A8);
  }
}

uint64_t sub_1A908D768(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(uint64_t), void (*a6)(uint64_t), uint64_t (*a7)(uint64_t, uint64_t), uint64_t (*a8)(uint64_t, uint64_t))
{
  uint64_t v11 = (void **)v8;
  uint64_t v16 = (void *)*v8;
  unint64_t v18 = sub_1A90A1D98(a2, a3);
  uint64_t v19 = v16[2];
  BOOL v20 = (v17 & 1) == 0;
  uint64_t v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v22 = v17;
  uint64_t v23 = v16[3];
  if (v23 < v21 || (a4 & 1) == 0)
  {
    if (v23 >= v21 && (a4 & 1) == 0)
    {
      a5(v21);
      goto LABEL_7;
    }
    a6(v21);
    unint64_t v27 = sub_1A90A1D98(a2, a3);
    if ((v22 & 1) == (v28 & 1))
    {
      unint64_t v18 = v27;
      uint64_t v24 = *v11;
      if (v22) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1A916BA50();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v24 = *v11;
  if (v22)
  {
LABEL_8:
    uint64_t v25 = v24[7] + 40 * v18;
    __swift_destroy_boxed_opaque_existential_0(v25);
    return a7(a1, v25);
  }
LABEL_13:
  sub_1A908E3D4(v18, a2, a3, a1, v24, a8);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A908D8F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1A908D768(a1, a2, a3, a4, (void (*)(uint64_t))sub_1A90C00D4, (void (*)(uint64_t))sub_1A908ED0C, (uint64_t (*)(uint64_t, uint64_t))sub_1A908EC8C, (uint64_t (*)(uint64_t, uint64_t))sub_1A908EC8C);
}

uint64_t sub_1A908D93C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a6;
  uint64_t v25 = a4;
  int v24 = a3;
  uint64_t v10 = *(void *)(a7 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = (int *)type metadata accessor for DataEventStack.Entry();
  uint64_t v15 = *((void *)v14 - 1);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  unint64_t v18 = &v23[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v16);
  BOOL v20 = &v23[-v19];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v20, v13, v10);
  *(void *)&v20[v14[9]] = a2;
  v20[v14[10]] = v24;
  uint64_t v21 = &v20[v14[11]];
  *uint64_t v21 = v25;
  v21[1] = a5;
  *(void *)&v20[v14[12]] = v26;
  (*(void (**)(unsigned char *, unsigned char *, int *))(v15 + 16))(v18, v20, v14);
  sub_1A916B230();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A916B210();
  return (*(uint64_t (**)(unsigned char *, int *))(v15 + 8))(v20, v14);
}

uint64_t sub_1A908DB7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = (void *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)((v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v11 = *v12;
  v11[1] = v12[1];
  *(void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1A908DC48(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  swift_bridgeObjectRetain();
  v6(v8, v9, v5);
  return a1;
}

uint64_t sub_1A908DCD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v27 = a5;
  uint64_t v9 = (int *)type metadata accessor for DataEventStack.Entry();
  uint64_t v10 = sub_1A916B540();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v27 - v13;
  uint64_t v15 = *((void *)v9 - 1);
  MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v27 - v16;
  *(void *)&long long v30 = a1;
  sub_1A916B230();
  swift_getWitnessTable();
  sub_1A916AF20();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v14, 1, v9) == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    *(_OWORD *)(a6 + 64) = 0u;
    *(_OWORD *)(a6 + 80) = 0u;
    *(_OWORD *)(a6 + 32) = 0u;
    *(_OWORD *)(a6 + 48) = 0u;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
  }
  else
  {
    (*(void (**)(char *, char *, int *))(v15 + 32))(v17, v14, v9);
    uint64_t v31 = a4;
    uint64_t v32 = v27;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v30);
    (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_1, v17, a4);
    uint64_t v20 = *(void *)&v17[v9[9]];
    LODWORD(v27) = v17[v9[10]];
    uint64_t v21 = &v17[v9[11]];
    uint64_t v23 = *(void *)v21;
    uint64_t v22 = *((void *)v21 + 1);
    uint64_t v24 = *(void *)&v17[v9[12]];
    uint64_t v25 = *(void (**)(char *, int *))(v15 + 8);
    uint64_t v26 = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25(v17, v9);
    *(void *)a6 = v28;
    *(void *)(a6 + 8) = v26;
    uint64_t result = sub_1A908EC8C(&v30, a6 + 16);
    *(void *)(a6 + 56) = v20;
    *(unsigned char *)(a6 + 64) = v27;
    *(void *)(a6 + 72) = v23;
    *(void *)(a6 + 80) = v22;
    *(void *)(a6 + 88) = v24;
  }
  return result;
}

uint64_t sub_1A908DF98(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A908E018(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

uint64_t type metadata accessor for DataEventStack.Entry()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A908E0A4(uint64_t result, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 >= a2)
  {
LABEL_26:
    if (v5 < 0x7FFFFFFF)
    {
      unint64_t v16 = *(void *)((result + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (v16 >= 0xFFFFFFFF) {
        LODWORD(v16) = -1;
      }
      return (v16 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    unint64_t v8 = ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *(unsigned __int8 *)(result + v8);
        if (!v14) {
          goto LABEL_26;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)(result + v8);
        if (!v14) {
          goto LABEL_26;
        }
        goto LABEL_22;
      case 3:
        __break(1u);
        return result;
      case 4:
        int v14 = *(_DWORD *)(result + v8);
        if (!v14) {
          goto LABEL_26;
        }
LABEL_22:
        int v15 = v14 - 1;
        if (v10)
        {
          int v15 = 0;
          LODWORD(v10) = *(_DWORD *)result;
        }
        uint64_t result = v7 + (v10 | v15) + 1;
        break;
      default:
        goto LABEL_26;
    }
  }
  return result;
}

uint64_t sub_1A908E1F8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 16) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 16) & ~v6);
      }
      unint64_t v15 = *((void *)a1 + 1);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

uint64_t type metadata accessor for Session()
{
  uint64_t result = qword_1EB68A800;
  if (!qword_1EB68A800) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A908E3D4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unsigned int v7 = (void *)(a5[6] + 16 * a1);
  *unsigned int v7 = a2;
  v7[1] = a3;
  uint64_t result = a6(a4, a5[7] + 40 * a1);
  uint64_t v9 = a5[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a5[2] = v11;
  }
  return result;
}

uint64_t sub_1A908E448()
{
  return sub_1A916AEA0();
}

uint64_t sub_1A908E488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v9 = sub_1A916AE70();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unsigned int v12 = (uint64_t *)((char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned int v13 = *(void **)(*(void *)(v5 + 80) + OBJC_IVAR___AAAccessQueue_queue);
  void *v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBF0], v9);
  id v14 = v13;
  LOBYTE(v13) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v36 = a5;
  uint64_t v16 = type metadata accessor for PushEvent();
  uint64_t v17 = (uint64_t *)(a1 + *(int *)(v16 + 36));
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  uint64_t v20 = *(void *)(a2 + 16);
  if (v20)
  {
    uint64_t v21 = (unsigned __int8 *)(a2 + 32);
    uint64_t v22 = *(void *)(a2 + 16);
    while (1)
    {
      int v23 = *v21++;
      if (v23 == 2) {
        break;
      }
      if (!--v22) {
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRetain();
    sub_1A909562C(v19, v18, 0, 0, 1, (uint64_t)&v39);
    uint64_t v27 = *((void *)&v40 + 1);
    sub_1A908EEF4((uint64_t)&v39, &qword_1EB6887D8, qword_1EB6892F8, (uint64_t)&protocol descriptor for DataEventType);
    if (v27) {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRetain();
  }
  swift_beginAccess();
  uint64_t v24 = *(void *)(v5 + 120);
  if (!*(void *)(v24 + 16))
  {
    uint64_t v41 = 0;
    long long v39 = 0u;
    long long v40 = 0u;
LABEL_17:
    sub_1A908EEF4((uint64_t)&v39, (unint64_t *)&qword_1EB6897B0, (unint64_t *)&qword_1EB6897A8, (uint64_t)&protocol descriptor for DataEventStackType);
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v25 = sub_1A90A1D98(v19, v18);
  if (v26)
  {
    sub_1A90A0DC8(*(void *)(v24 + 56) + 40 * v25, (uint64_t)&v39);
  }
  else
  {
    uint64_t v41 = 0;
    long long v39 = 0u;
    long long v40 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v40 + 1)) {
    goto LABEL_17;
  }
  sub_1A908E870(0, (unint64_t *)&qword_1EB6897A8);
  type metadata accessor for DataEventStack();
  if (!swift_dynamicCast())
  {
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1A908E448();
    goto LABEL_19;
  }
  uint64_t v29 = *((void *)&v42 + 1);
  uint64_t v28 = v42;
  uint64_t v30 = v43;
LABEL_19:
  *(void *)&long long v42 = v28;
  *((void *)&v42 + 1) = v29;
  uint64_t v43 = v30;
  if (v20)
  {
    uint64_t v31 = (unsigned __int8 *)(a2 + 32);
    while (1)
    {
      int v32 = *v31++;
      if (v32 == 1) {
        break;
      }
      if (!--v20) {
        goto LABEL_25;
      }
    }
    type metadata accessor for DataEventStack();
    sub_1A908EE40();
  }
LABEL_25:
  int v33 = *(unsigned __int8 *)(a1 + *(int *)(v16 + 40));
  uint64_t v34 = type metadata accessor for DataEventStack();
  sub_1A908D93C(a1, a2, v33, v37, v38, v36, v34);
  *((void *)&v40 + 1) = v34;
  uint64_t v41 = &off_1EFF9E8F0;
  long long v39 = v42;
  *(void *)&long long v40 = v43;
  swift_beginAccess();
  sub_1A908D668((uint64_t)&v39, v19, v18);
  return swift_endAccess();
}

uint64_t type metadata accessor for DataEventStack()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A908E870(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t SessionData.init(key:data:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  unsigned int v7 = (char *)a5 + *(int *)(type metadata accessor for SessionData() + 36);
  int v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32);

  return v8(v7, a3, a4);
}

uint64_t type metadata accessor for SessionData()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A908E960(uint64_t a1, char a2, unint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(uint64_t, unsigned char *))
{
  int v8 = v6;
  uint64_t v10 = *v6;
  sub_1A908ECA4(0, a3, a4);
  char v40 = a2;
  uint64_t v11 = sub_1A916B800();
  uint64_t v12 = v11;
  if (*(void *)(v10 + 16))
  {
    uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
    long long v39 = (void *)(v10 + 64);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & *(void *)(v10 + 64);
    int64_t v38 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v16 = v11 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    while (1)
    {
      if (v15)
      {
        unint64_t v21 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v22 = v21 | (v18 << 6);
      }
      else
      {
        int64_t v23 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v23 >= v38) {
          goto LABEL_34;
        }
        unint64_t v24 = v39[v23];
        ++v18;
        if (!v24)
        {
          int64_t v18 = v23 + 1;
          if (v23 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v24 = v39[v18];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v38)
            {
LABEL_34:
              swift_release();
              int v8 = v6;
              if (v40)
              {
                uint64_t v37 = 1 << *(unsigned char *)(v10 + 32);
                if (v37 >= 64) {
                  bzero(v39, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *long long v39 = -1 << v37;
                }
                *(void *)(v10 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v39[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v18 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v24 = v39[v18];
                ++v25;
                if (v24) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v25;
          }
        }
LABEL_21:
        unint64_t v15 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v18 << 6);
      }
      char v26 = (uint64_t *)(*(void *)(v10 + 48) + 16 * v22);
      uint64_t v28 = *v26;
      uint64_t v27 = v26[1];
      uint64_t v29 = *(void *)(v10 + 56) + 40 * v22;
      if (v40)
      {
        a6(v29, v41);
      }
      else
      {
        sub_1A90A0DC8(v29, (uint64_t)v41);
        swift_bridgeObjectRetain();
      }
      sub_1A916BAB0();
      sub_1A916B030();
      uint64_t result = sub_1A916BAD0();
      uint64_t v30 = -1 << *(unsigned char *)(v12 + 32);
      unint64_t v31 = result & ~v30;
      unint64_t v32 = v31 >> 6;
      if (((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v33 = 0;
        unint64_t v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v35 = v32 == v34;
          if (v32 == v34) {
            unint64_t v32 = 0;
          }
          v33 |= v35;
          uint64_t v36 = *(void *)(v16 + 8 * v32);
        }
        while (v36 == -1);
        unint64_t v19 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t v20 = (void *)(*(void *)(v12 + 48) + 16 * v19);
      *uint64_t v20 = v28;
      v20[1] = v27;
      uint64_t result = ((uint64_t (*)(unsigned char *, unint64_t))a6)(v41, *(void *)(v12 + 56) + 40 * v19);
      ++*(void *)(v12 + 16);
    }
  }
  uint64_t result = swift_release();
  *int v8 = v12;
  return result;
}

uint64_t sub_1A908EC8C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_1A908ECA4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1A908E870(255, a3);
    unint64_t v4 = sub_1A916B820();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1A908ED0C(uint64_t a1, char a2)
{
  return sub_1A908E960(a1, a2, &qword_1EB689848, (unint64_t *)&qword_1EB6897A8, (uint64_t)&protocol descriptor for DataEventStackType, (void (*)(uint64_t, unsigned char *))sub_1A908EC8C);
}

uint64_t sub_1A908ED3C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1A908ED50(uint64_t a1)
{
  sub_1A908EDD8(0, (unint64_t *)&qword_1EB6897B0, (unint64_t *)&qword_1EB6897A8, (uint64_t)&protocol descriptor for DataEventStackType, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1A908EDD8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1A908E870(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1A908EE40()
{
  type metadata accessor for DataEventStack.Entry();
  uint64_t v0 = sub_1A916B230();

  return MEMORY[0x1F4183F98](0, v0);
}

uint64_t sub_1A908EE84(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_1A908EF64(0, a2, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1A908EEF4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_1A908EFCC(0, a2, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_1A908EF64(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1A908E870(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1A908EFCC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1A908E870(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1A908F034(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1A916AE70();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned int v7 = (uint64_t *)((char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v31 = *(char **)(v1 + 48);
  uint64_t v8 = *(void **)&v31[OBJC_IVAR___AAAccessQueue_queue];
  *unsigned int v7 = v8;
  uint64_t v9 = *MEMORY[0x1E4FBCBF0];
  uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t))(v5 + 104);
  v10(v7, v9, v4);
  id v11 = v8;
  LOBYTE(v8) = sub_1A916AE90();
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t))(v5 + 8);
  uint64_t result = v12(v7, v4);
  if (v8)
  {
    uint64_t v14 = *(void *)(a1 + 16);
    uint64_t v15 = *(void *)(a1 + 24);
    uint64_t v35 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v34 = v14;
    *((void *)&v34 + 1) = v15;
    sub_1A90A1A68(&v34, v33);
    swift_bridgeObjectRetain();
    uint64_t v16 = MEMORY[0x1E4FBC868];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v32 = v16;
    sub_1A90A1C44(v33, 0x496E6F6973736573, 0xE900000000000044, isUniquelyReferenced_nonNull_native);
    uint64_t v36 = v32;
    swift_bridgeObjectRelease();
    uint64_t v18 = MEMORY[0x1AD0EEDF0](v2 + 32);
    if (!v18) {
      goto LABEL_6;
    }
    uint64_t v19 = v18;
    uint64_t v30 = a1;
    uint64_t v20 = *(void **)(*(void *)(v18 + 24) + OBJC_IVAR___AAAccessQueue_queue);
    *unsigned int v7 = v20;
    v10(v7, v9, v4);
    id v21 = v20;
    char v22 = sub_1A916AE90();
    uint64_t result = v12(v7, v4);
    if (v22)
    {
      uint64_t v23 = *(void *)(v19 + 40);
      uint64_t v24 = *(void *)(v19 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      a1 = v30;
      if (v24)
      {
        uint64_t v35 = MEMORY[0x1E4FBB1A0];
        *(void *)&long long v34 = v23;
        *((void *)&v34 + 1) = v24;
        sub_1A90A1A68(&v34, v33);
        uint64_t v25 = v36;
        char v26 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v32 = v25;
        sub_1A90A1C44(v33, 0x6973736553707061, 0xEC00000044496E6FLL, v26);
        uint64_t v36 = v32;
        swift_bridgeObjectRelease();
LABEL_7:
        uint64_t v27 = *(void *)(v2 + 16) + OBJC_IVAR____TtC12AppAnalytics7Tracker_diagnosticsConsentProvider;
        swift_retain();
        swift_retain();
        sub_1A909837C(v31, v27, v2, a1, &v36, v28);
        return v36;
      }
LABEL_6:
      sub_1A90A66BC(0x6973736553707061, 0xEC00000044496E6FLL, &v34);
      sub_1A908A13C((uint64_t)&v34, (unint64_t *)&qword_1EB68A928);
      goto LABEL_7;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A908F35C(uint64_t a1)
{
  uint64_t v3 = sub_1A916AE70();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned int v7 = *(void **)(*(void *)(v1 + 32) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBF0], v3);
  id v8 = v7;
  LOBYTE(v7) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    uint64_t result = swift_beginAccess();
    uint64_t v10 = *(void *)(v1 + 48);
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = (uint64_t *)(v10 + 40);
      do
      {
        uint64_t v13 = *v12;
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 40);
        swift_unknownObjectRetain();
        v15(a1, ObjectType, v13);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 48))(a1, 0, ObjectType, v13);
        swift_unknownObjectRelease();
        v12 += 2;
        --v11;
      }
      while (v11);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1A908F530()
{
  if ((*(unsigned char *)(v0 + 32) & 2) != 0)
  {
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v2 = (void *)Strong;
      if (qword_1EB688398 != -1) {
        swift_once();
      }
      objc_msgSend(v2, sel_flushWithCallbackQueue_completion_, qword_1EB687E08, 0);
      swift_release();
    }
  }
}

uint64_t sub_1A908F5D8()
{
  return sub_1A908F5E0(*(void *)(v0 + 16));
}

uint64_t sub_1A908F5E0(uint64_t a1)
{
  uint64_t v1 = (uint64_t *)(a1 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_observers);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1A916B7E0();
    uint64_t v3 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x1E4FBC860];
    goto LABEL_15;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_14;
  }
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = MEMORY[0x1AD0EDEF0](i, v2);
    }
    else
    {
      uint64_t v6 = *(void *)(v2 + 8 * i + 32);
      swift_retain();
    }
    if (MEMORY[0x1AD0EEDF0](v6 + 16))
    {
      swift_unknownObjectRelease();
      sub_1A916B6E0();
      sub_1A916B720();
      sub_1A916B730();
      sub_1A916B6F0();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = v9;
LABEL_15:
  *uint64_t v1 = v7;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v8 = swift_retain();
  MEMORY[0x1AD0ED9C0](v8);
  if (*(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1A916B1D0();
  }
  sub_1A916B200();
  sub_1A916B1B0();
  return swift_endAccess();
}

uint64_t sub_1A908F7D4()
{
  return sub_1A908F7E0(v0[2], v0[3], v0[4]);
}

uint64_t sub_1A908F7E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A908FA08();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for Session();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_unknownObjectRetain();
  sub_1A908FA60(0, 0, a2, a3);
  swift_endAccess();
  if (!MEMORY[0x1AD0EEDF0](a1 + 16))
  {
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_5;
  }
  sub_1A909D7C4(v8);
  swift_unknownObjectRelease();
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_5:
    uint64_t v14 = (uint64_t (*)(void))sub_1A908FA08;
    uint64_t v15 = (uint64_t)v8;
    return sub_1A908FEB4(v15, v14);
  }
  sub_1A90AFE2C((uint64_t)v8, (uint64_t)v12);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t, uint64_t))(a3 + 32))(v12, ObjectType, a3);
  uint64_t v14 = (uint64_t (*)(void))type metadata accessor for Session;
  uint64_t v15 = (uint64_t)v12;
  return sub_1A908FEB4(v15, v14);
}

uint64_t getEnumTagSinglePayload for Session(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A9105E08);
}

void sub_1A908FA08()
{
  if (!qword_1EB68ACC8)
  {
    type metadata accessor for Session();
    unint64_t v0 = sub_1A916B540();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB68ACC8);
    }
  }
}

char *sub_1A908FA60(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = *(void **)v4;
  int64_t v7 = *(void *)(*(void *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    uint64_t v6 = sub_1A908FD74(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  uint64_t v16 = &v6[2 * a1 + 4];
  sub_1A908FBE8();
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v18 = v6[2];
  BOOL v19 = __OFSUB__(v18, a2);
  uint64_t v20 = v18 - a2;
  if (v19) {
    goto LABEL_26;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v16 + 2);
    id v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20]) {
      uint64_t result = (char *)memmove(result, v21, 16 * v20);
    }
    uint64_t v22 = v6[2];
    BOOL v19 = __OFADD__(v22, v10);
    uint64_t v23 = v22 + v10;
    if (!v19)
    {
      v6[2] = v23;
LABEL_20:
      *uint64_t v16 = a3;
      v16[1] = a4;
      *(void *)uint64_t v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)sub_1A916B830();
  __break(1u);
  return result;
}

unint64_t sub_1A908FBE8()
{
  unint64_t result = qword_1EB68ABC0;
  if (!qword_1EB68ABC0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB68ABC0);
  }
  return result;
}

void *sub_1A908FC3C(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), void (*a7)(void))
{
  char v9 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v11 = a2;
    goto LABEL_8;
  }
  unint64_t v10 = a4[3];
  uint64_t v11 = v10 >> 1;
  if ((uint64_t)(v10 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v11 + 0x4000000000000000 >= 0)
  {
    uint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v11 = a2;
    }
LABEL_8:
    uint64_t v12 = a4[2];
    if (v11 <= v12) {
      uint64_t v13 = a4[2];
    }
    else {
      uint64_t v13 = v11;
    }
    if (v13)
    {
      sub_1A9099C68(0, a5, a6, MEMORY[0x1E4FBBE00]);
      uint64_t v14 = (void *)swift_allocObject();
      int64_t v15 = _swift_stdlib_malloc_size(v14);
      uint64_t v16 = v15 - 32;
      if (v15 < 32) {
        uint64_t v16 = v15 - 17;
      }
      v14[2] = v12;
      v14[3] = 2 * (v16 >> 4);
      uint64_t v17 = v14 + 4;
      if (v9) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v17 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v14 != a4 || v17 >= &a4[2 * v12 + 4]) {
          memmove(v17, a4 + 4, 16 * v12);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A908FDA8(0, v12, (unint64_t)v17, (uint64_t)a4, a7);
LABEL_24:
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  return result;
}

void *sub_1A908FD74(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1A908FC3C(a1, a2, a3, a4, &qword_1EB68ACD0, (uint64_t (*)(uint64_t))sub_1A908FBE8, (void (*)(void))sub_1A908FBE8);
}

uint64_t sub_1A908FDA8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 16 * a1 + 32;
    unint64_t v7 = a3 + 16 * v5;
    if (v6 >= v7 || v6 + 16 * v5 <= a3)
    {
      a5(0);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

uint64_t sub_1A908FEB4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A908FF14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1A90A6CFC(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1A908FF84()
{
  uint64_t v1 = *(void *)(sub_1A916AC90() - 8);
  return sub_1A908FFF8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), (char *)(v0 + ((*(unsigned __int8 *)(v1 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))));
}

uint64_t sub_1A908FFF8(uint64_t a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, char *a9)
{
  unint64_t v82 = a8;
  uint64_t v83 = a7;
  uint64_t v76 = a6;
  uint64_t v79 = a5;
  unint64_t v87 = a3;
  uint64_t v81 = type metadata accessor for Session();
  MEMORY[0x1F4188790](v81);
  v80 = &v68[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v75 = sub_1A916AE70();
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v14 = &v68[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v84 = sub_1A916AC90();
  uint64_t v86 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  v85 = &v68[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = type metadata accessor for SessionObserverChange();
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = &v68[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = type metadata accessor for SessionManager.SessionState(0);
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  v78 = (char **)&v68[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = &v68[-v22];
  uint64_t v88 = a1;
  uint64_t v24 = a1 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
  swift_beginAccess();
  sub_1A9098DA0(v24, (uint64_t)v23, type metadata accessor for SessionManager.SessionState);
  uint64_t v77 = v19;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload) {
    return swift_release();
  }
  if (EnumCaseMultiPayload == 1) {
    sub_1A90A1B84((uint64_t)v23, type metadata accessor for SessionManager.SessionState);
  }
  swift_storeEnumTagMultiPayload();
  sub_1A9090764((uint64_t)v18);
  uint64_t v26 = sub_1A90A1B84((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for SessionObserverChange);
  unint64_t v27 = v82;
  if (a2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___AATimestampJitter_enabled))
    {
      double v28 = *(double *)(a2 + OBJC_IVAR___AATimestampJitter_lowerBound);
      double v29 = *(double *)(a2 + OBJC_IVAR___AATimestampJitter_upperBound);
      if (v28 > v29)
      {
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      sub_1A9090B64(v26, v28, v29);
      double v31 = v30;
      int v32 = 4;
    }
    else
    {
      int v32 = 0;
      double v31 = 0.0;
    }
  }
  else
  {
    uint64_t v34 = v16;
    uint64_t v35 = v18;
    uint64_t v37 = *(void *)(v88 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider + 24);
    uint64_t v36 = *(void *)(v88 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v88 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider), v37);
    int64_t v38 = *(double (**)(unint64_t *, uint64_t, uint64_t))(v36 + 8);
    uint64_t v39 = v36;
    uint64_t v18 = v35;
    uint64_t v16 = v34;
    unint64_t v27 = v82;
    double v31 = v38(v89, v37, v39);
    int v32 = LOBYTE(v89[0]);
  }
  int v71 = v32;
  if (a4)
  {
    unsigned int v40 = *(unsigned __int8 *)(v88 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timeDurationGranularity);
    unint64_t v87 = *(unsigned __int8 *)(v88 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timeDurationGranularity + 1);
    goto LABEL_15;
  }
  if (v87 < 4)
  {
    unsigned int v40 = (0xEu >> (v87 & 0xF)) & 1;
LABEL_15:
    uint64_t v41 = *(void (**)(unsigned char *, char *, uint64_t))(v86 + 16);
    unint64_t v82 = v86 + 16;
    long long v70 = v41;
    v41(v85, a9, v84);
    uint64_t v42 = MEMORY[0x1AD0EEDF0](v88 + 32);
    v73 = (char **)v18;
    uint64_t v72 = v16;
    if (!v42)
    {
      uint64_t v50 = v83;
      sub_1A908ED3C(v83, v27);
      uint64_t v49 = 0;
      uint64_t v48 = 0;
      goto LABEL_19;
    }
    uint64_t v43 = v42;
    unsigned int v69 = v40;
    uint64_t v44 = *(void **)(*(void *)(v42 + 24) + OBJC_IVAR___AAAccessQueue_queue);
    *uint64_t v14 = v44;
    uint64_t v45 = v74;
    uint64_t v46 = v75;
    (*(void (**)(void *, void, uint64_t))(v74 + 104))(v14, *MEMORY[0x1E4FBCBF0], v75);
    sub_1A908ED3C(v83, v27);
    id v47 = v44;
    LOBYTE(v44) = sub_1A916AE90();
    (*(void (**)(void *, uint64_t))(v45 + 8))(v14, v46);
    if (v44)
    {
      uint64_t v49 = *(void *)(v43 + 40);
      uint64_t v48 = *(void *)(v43 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      uint64_t v50 = v83;
      LOBYTE(v40) = v69;
LABEL_19:
      type metadata accessor for ActiveSession();
      uint64_t v51 = (char *)swift_allocObject();
      uint64_t v52 = v76;
      *((void *)v51 + 2) = v79;
      *((void *)v51 + 3) = v52;
      *((void *)v51 + 4) = v50;
      *((void *)v51 + 5) = v27;
      uint64_t v53 = v84;
      (*(void (**)(char *, unsigned char *, uint64_t))(v86 + 32))(&v51[OBJC_IVAR____TtC12AppAnalytics13ActiveSession_startDate], v85, v84);
      uint64_t v54 = &v51[OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier];
      *(void *)uint64_t v54 = v49;
      *((void *)v54 + 1) = v48;
      uint64_t v55 = (double *)&v51[OBJC_IVAR____TtC12AppAnalytics13ActiveSession_dataEventFormatter];
      *(unsigned char *)uint64_t v55 = v71;
      v55[1] = v31;
      *((unsigned char *)v55 + 16) = v40;
      *((unsigned char *)v55 + 17) = v87;
      uint64_t v56 = (uint64_t)v78;
      *v78 = v51;
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1A909D648(v56, v24);
      swift_endAccess();
      unint64_t v57 = *(void *)(v88 + 24);
      uint64_t v58 = *((void *)v51 + 3);
      uint64_t v86 = *((void *)v51 + 2);
      unint64_t v87 = v57;
      uint64_t v59 = *(void *)&v51[OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier];
      uint64_t v60 = *(void *)&v51[OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier + 8];
      uint64_t v61 = *((void *)v51 + 4);
      unint64_t v62 = *((void *)v51 + 5);
      uint64_t v63 = v81;
      uint64_t v64 = v53;
      uint64_t v65 = v80;
      v70(&v80[*(int *)(v81 + 28)], &v51[OBJC_IVAR____TtC12AppAnalytics13ActiveSession_startDate], v64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A908ED3C(v61, v62);
      uint64_t v66 = sub_1A908F034((uint64_t)v51);
      *uint64_t v65 = v86;
      v65[1] = v58;
      v65[2] = v59;
      v65[3] = v60;
      v65[4] = v61;
      v65[5] = v62;
      *(void *)((char *)v65 + *(int *)(v63 + 32)) = v66;
      sub_1A9090968((uint64_t)v65);
      sub_1A90A1B84((uint64_t)v65, (uint64_t (*)(void))type metadata accessor for Session);
      uint64_t v67 = (uint64_t)v73;
      *v73 = v51;
      swift_storeEnumTagMultiPayload();
      sub_1A9090764(v67);
      return sub_1A90A1B84(v67, (uint64_t (*)(void))type metadata accessor for SessionObserverChange);
    }
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  v89[0] = v87;
  uint64_t result = sub_1A916BA20();
  __break(1u);
  return result;
}

uint64_t sub_1A9090764(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DiagnosticsConsentProvider(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1A916AE70();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v10 = *(char **)(v1 + 48);
  uint64_t v11 = *(void **)&v10[OBJC_IVAR___AAAccessQueue_queue];
  *char v9 = v11;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBF0], v6);
  id v12 = v11;
  LOBYTE(v11) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if (v11)
  {
    uint64_t v14 = sub_1A9098DA0(*(void *)(v1 + 16) + OBJC_IVAR____TtC12AppAnalytics7Tracker_diagnosticsConsentProvider, (uint64_t)v5, type metadata accessor for DiagnosticsConsentProvider);
    MEMORY[0x1F4188790](v14);
    *(void *)&v15[-16] = v1;
    *(void *)&v15[-8] = a1;
    sub_1A9096610(v10, (void (*)(uint64_t))sub_1A90970F4, (uint64_t)&v15[-32], (uint64_t)v15);
    return sub_1A90A1B84((uint64_t)v5, type metadata accessor for DiagnosticsConsentProvider);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A9090968(uint64_t a1)
{
  uint64_t v3 = sub_1A916AE70();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void **)(*(void *)(v1 + 32) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBF0], v3);
  id v8 = v7;
  LOBYTE(v7) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    uint64_t result = swift_beginAccess();
    uint64_t v10 = *(void *)(v1 + 48);
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain();
      id v12 = (uint64_t *)(v10 + 40);
      do
      {
        uint64_t v13 = *v12;
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32);
        swift_unknownObjectRetain();
        v15(a1, ObjectType, v13);
        swift_unknownObjectRelease();
        v12 += 2;
        --v11;
      }
      while (v11);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A9090B14(uint64_t result)
{
  uint64_t v2 = (unsigned char *)result;
  if (*(unsigned char *)(v1 + 16))
  {
    char v3 = 0;
LABEL_5:
    unsigned char *v2 = v3;
    return result;
  }
  double v4 = *(double *)(v1 + 8);
  if (*(double *)v1 <= v4)
  {
    uint64_t result = sub_1A9090B64(result, *(double *)v1, v4);
    char v3 = 4;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9090B64(uint64_t result, double a2, double a3)
{
  if (a2 == a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  double v5 = a3 - a2;
  if ((~COERCE__INT64(a3 - a2) & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t result = MEMORY[0x1AD0EECC0](&v7, 8);
  if (v5 * ((double)(v7 & 0x1FFFFFFFFFFFFFLL) * 1.11022302e-16) + a2 == a3) {
    return sub_1A9090B64(v6, a2, a3);
  }
  return result;
}

uint64_t sub_1A9090C14()
{
  return sub_1A9090C20(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1A9090C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A9090C9C(a2, a3, a4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A9090C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1A916AE70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = *(void *)(v3 + 32);
  uint64_t v11 = *(void **)(v31 + OBJC_IVAR___AAAccessQueue_queue);
  void *v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBF0], v7);
  id v12 = v11;
  char v13 = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (v13)
  {
    if (a2)
    {
      swift_retain();
      uint64_t v15 = dispatch_group_create();
      swift_beginAccess();
      uint64_t v16 = *(void *)(*(void *)(v3 + 48) + 16);
      if (v16)
      {
        uint64_t v28 = a1;
        uint64_t v29 = a2;
        uint64_t v30 = a3;
        swift_bridgeObjectRetain();
        uint64_t v17 = 32;
        do
        {
          void aBlock[6] = &unk_1EFFAB778;
          uint64_t v18 = swift_dynamicCastObjCProtocolConditional();
          if (v18)
          {
            uint64_t v19 = (void *)v18;
            swift_unknownObjectRetain_n();
            dispatch_group_enter(v15);
            uint64_t v20 = swift_allocObject();
            *(void *)(v20 + 16) = v15;
            aBlock[4] = sub_1A90AFEC8;
            aBlock[5] = v20;
            aBlock[0] = MEMORY[0x1E4F143A8];
            aBlock[1] = 1107296256;
            aBlock[2] = sub_1A908CD10;
            aBlock[3] = &block_descriptor;
            uint64_t v21 = _Block_copy(aBlock);
            uint64_t v22 = v15;
            swift_release();
            objc_msgSend(v19, sel_flushWithCallbackQueue_completion_, v31, v21);
            swift_unknownObjectRelease();
            _Block_release(v21);
            swift_unknownObjectRelease();
          }
          v17 += 16;
          --v16;
        }
        while (v16);
        swift_bridgeObjectRelease();
        a2 = v29;
        a3 = v30;
        a1 = v28;
      }
      sub_1A908CAA8(a1, a2, a3);

      return sub_1A909E0EC(a2);
    }
    else
    {
      uint64_t result = swift_beginAccess();
      uint64_t v23 = *(void *)(*(void *)(v3 + 48) + 16);
      if (v23)
      {
        swift_bridgeObjectRetain();
        uint64_t v24 = 32;
        do
        {
          aBlock[10] = &unk_1EFFAB778;
          if (swift_dynamicCastObjCProtocolConditional())
          {
            swift_getObjectType();
            uint64_t v26 = qword_1EB688398;
            swift_unknownObjectRetain();
            if (v26 != -1) {
              swift_once();
            }
            id v25 = (id)qword_1EB687E08;
            Flushable.flush(callbackQueue:completion:)((uint64_t)v25, 0, 0);
            swift_unknownObjectRelease();
          }
          v24 += 16;
          --v23;
        }
        while (v23);
        return swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A9091044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  double v5 = (int *)type metadata accessor for ProcessEvent();
  uint64_t v6 = *((void *)v5 - 1);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v28 - v7);
  uint64_t v9 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_1A916AE70();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (uint64_t *)((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void **)(*(void *)(v4 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v15 = v16;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FBCBF0], v12);
  id v17 = v16;
  LOBYTE(v16) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if (v16)
  {
    uint64_t v19 = v4 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
    swift_beginAccess();
    sub_1A9098DA0(v19, (uint64_t)v11, type metadata accessor for SessionManager.SessionState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      uint64_t v22 = v29;
      uint64_t v21 = v30;
      if (EnumCaseMultiPayload == 1) {
        sub_1A90A1B84((uint64_t)v11, type metadata accessor for SessionManager.SessionState);
      }
      uint64_t v23 = *(void *)(v4 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider + 24);
      uint64_t v24 = *(void *)(v4 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider + 32);
      __swift_project_boxed_opaque_existential_1((void *)(v4 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider), v23);
      double v25 = (*(double (**)(uint64_t *, uint64_t, uint64_t))(v24 + 8))(v31, v23, v24);
      unsigned int v26 = LOBYTE(v31[0]);
    }
    else
    {
      uint64_t v27 = (double *)(*v11 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_dataEventFormatter);
      unsigned int v26 = *(unsigned __int8 *)v27;
      double v25 = v27[1];
      swift_release();
      uint64_t v22 = v29;
      uint64_t v21 = v30;
    }
    v31[0] = v26;
    *(double *)&v31[1] = v25;
    ProcessEvent.with(timestampConfiguration:)(v31, v5, v8);
    sub_1A909AD30((uint64_t)v8, v22, v21);
    return (*(uint64_t (**)(void *, int *))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A9091378@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v61 = a3;
  uint64_t v65 = a6;
  uint64_t v11 = sub_1A916AC90();
  uint64_t v64 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v63 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v62 = (char *)&v54 - v14;
  sub_1A90934F0(0, &qword_1EB689398, type metadata accessor for Tracker.Timer, MEMORY[0x1E4FBB718]);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v54 - v19;
  uint64_t v21 = type metadata accessor for Tracker.Timer(0);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v60 = (uint64_t)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = a1;
  unint64_t v57 = a2;
  uint64_t v58 = a4;
  uint64_t v59 = a5;
  uint64_t v24 = sub_1A9091A20(a1, a2);
  uint64_t v26 = v25;
  swift_beginAccess();
  uint64_t v55 = v6;
  uint64_t v27 = *(void *)(v6 + 104);
  if (*(void *)(v27 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v28 = sub_1A90A1D98(v24, v26);
    if (v29)
    {
      sub_1A9098C68(*(void *)(v27 + 56) + *(void *)(v22 + 72) * v28, (uint64_t)v20, type metadata accessor for Tracker.Timer);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v21);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_1A9093480((uint64_t)v20, &qword_1EB689398, type metadata accessor for Tracker.Timer);
    uint64_t v30 = type metadata accessor for TimedData();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v65, 1, 1, v30);
  }
  uint64_t v32 = (uint64_t)v18;
  uint64_t v33 = v11;
  uint64_t v34 = v60;
  sub_1A909540C((uint64_t)v20, v60, type metadata accessor for Tracker.Timer);
  uint64_t v35 = v56;
  unint64_t v36 = v57;
  uint64_t v37 = sub_1A9091A20(v56, v57);
  uint64_t v39 = v38;
  swift_beginAccess();
  sub_1A914CCBC(v37, v39, v32);
  sub_1A9093480(v32, &qword_1EB689398, type metadata accessor for Tracker.Timer);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v40 = sub_1A9091A20(v35, v36);
  uint64_t v42 = v41;
  swift_beginAccess();
  sub_1A914CB68(v40, v42, (uint64_t)v66);
  sub_1A908EEF4((uint64_t)v66, &qword_1EB6887E8, &qword_1EB6897A0, (uint64_t)&protocol descriptor for RestartTimerType);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v43 = v64;
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 16);
  uint64_t v45 = v62;
  v44(v62, v34, v33);
  uint64_t v46 = type metadata accessor for EventData();
  id v47 = v63;
  v44(v63, v61 + *(int *)(v46 + 20), v33);
  uint64_t v48 = v65;
  v44(v65, (uint64_t)v45, v33);
  uint64_t v49 = type metadata accessor for TimedData();
  v44(&v48[*(int *)(v49 + 20)], (uint64_t)v47, v33);
  sub_1A916ABF0();
  double v51 = v50;
  uint64_t v52 = *(void (**)(char *, uint64_t))(v43 + 8);
  v52(v47, v33);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v52)(v45, v33);
  double v53 = v51 * 1000.0;
  if ((~COERCE__INT64(v51 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v53 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v53 < 9.22337204e18)
  {
    *(void *)&v48[*(int *)(v49 + 24)] = (uint64_t)v53;
    sub_1A9098AF0(v34, type metadata accessor for Tracker.Timer);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 0, 1, v49);
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TimedData()
{
  uint64_t result = qword_1EB6897C0;
  if (!qword_1EB6897C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A9091A20(uint64_t a1, unint64_t a2)
{
  if (!(a2 >> 62)) {
    return sub_1A90A33F0();
  }
  if (a2 >> 62 == 1)
  {
    id v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
    uint64_t v3 = sub_1A916AF90();
  }
  else
  {
    uint64_t v3 = *(void *)(a1 + OBJC_IVAR___AARawEvent_name);
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t type metadata accessor for Tracker.Timer(uint64_t a1)
{
  return sub_1A9098ED8(a1, qword_1EB688AC8);
}

uint64_t storeEnumTagSinglePayload for TimedData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A915F458);
}

void sub_1A9091AF4(char *a1, unint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, void (*a8)(uint64_t *), uint64_t a9, uint64_t a10, uint64_t a11)
{
  v216 = a8;
  unint64_t v197 = a7;
  uint64_t v202 = a6;
  uint64_t v201 = a5;
  uint64_t v194 = a4;
  LODWORD(v214) = a3;
  v218 = a1;
  unint64_t v219 = a2;
  uint64_t v12 = type metadata accessor for EventSubmitResult();
  uint64_t v208 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)((char *)&v183 - v13);
  uint64_t v215 = a10;
  uint64_t v217 = a11;
  uint64_t v187 = type metadata accessor for ProcessEvent();
  uint64_t v186 = *(void *)(v187 - 8);
  MEMORY[0x1F4188790](v187);
  v185 = (void *)((char *)&v183 - v15);
  uint64_t v16 = type metadata accessor for Sequence(0);
  MEMORY[0x1F4188790](v16 - 8);
  v196 = (uint64_t *)((char *)&v183 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1A90934F0(0, &qword_1EB687A98, (uint64_t (*)(uint64_t))type metadata accessor for TimedData, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v19 - 8);
  v199 = (char *)&v183 - v20;
  uint64_t v206 = sub_1A916AC90();
  uint64_t v205 = *(void *)(v206 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v206);
  v184 = (char *)&v183 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  v204 = (char *)&v183 - v23;
  uint64_t v193 = sub_1A916ACC0();
  uint64_t v192 = *(void *)(v193 - 8);
  MEMORY[0x1F4188790](v193);
  v191 = (char *)&v183 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v195 = type metadata accessor for EventData();
  MEMORY[0x1F4188790](v195);
  v198 = (uint64_t *)((char *)&v183 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v207 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1F4188790](v207);
  uint64_t v27 = (uint64_t *)((char *)&v183 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A90934F0(0, &qword_1EB689398, type metadata accessor for Tracker.Timer, v18);
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v30 = (char *)&v183 - v29;
  uint64_t v31 = sub_1A916AE70();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v34 = (void *)((char *)&v183 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v220 = v11;
  uint64_t v35 = *(void *)(v11 + 80);
  uint64_t v190 = OBJC_IVAR___AAAccessQueue_queue;
  unint64_t v36 = *(void **)(v35 + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v34 = v36;
  uint64_t v37 = *(void (**)(void))(v32 + 104);
  unsigned int v209 = *MEMORY[0x1E4FBCBF0];
  uint64_t v211 = v32 + 104;
  v210 = (void (*)(void *, void, char *))v37;
  v37(v34);
  id v38 = v36;
  char v39 = sub_1A916AE90();
  uint64_t v41 = *(void (**)(void *, char *))(v32 + 8);
  uint64_t v40 = (void (*)(uint64_t *))(v32 + 8);
  v213 = (char *)v31;
  v212 = v41;
  v41(v34, (char *)v31);
  if ((v39 & 1) == 0)
  {
    __break(1u);
    goto LABEL_66;
  }
  uint64_t v42 = a9;
  v189 = (char *)v35;
  if (v214)
  {
    v200 = v14;
    uint64_t v203 = v12;
    uint64_t v43 = sub_1A9091A20((uint64_t)v218, v219);
    uint64_t v45 = v44;
    uint64_t v46 = v220;
    swift_beginAccess();
    uint64_t v47 = *(void *)(v46 + 104);
    if (*(void *)(v47 + 16))
    {
      uint64_t v188 = a9;
      swift_bridgeObjectRetain();
      unint64_t v48 = sub_1A90A1D98(v43, v45);
      if (v49)
      {
        unint64_t v50 = v48;
        uint64_t v214 = *(void *)(v47 + 56);
        uint64_t v51 = type metadata accessor for Tracker.Timer(0);
        uint64_t v52 = *(void *)(v51 - 8);
        sub_1A9098C68(v214 + *(void *)(v52 + 72) * v50, (uint64_t)v30, type metadata accessor for Tracker.Timer);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v30, 0, 1, v51);
      }
      else
      {
        uint64_t v51 = type metadata accessor for Tracker.Timer(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v30, 1, 1, v51);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v42 = v188;
    }
    else
    {
      uint64_t v51 = type metadata accessor for Tracker.Timer(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v30, 1, 1, v51);
      swift_bridgeObjectRelease();
    }
    type metadata accessor for Tracker.Timer(0);
    int v53 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 48))(v30, 1, v51);
    sub_1A9093480((uint64_t)v30, &qword_1EB689398, type metadata accessor for Tracker.Timer);
    uint64_t v12 = v203;
    uint64_t v14 = v200;
    if (v53 == 1)
    {
      uint64_t v54 = v216;
      if (v216)
      {
        sub_1A90F0788();
        uint64_t v55 = swift_allocError();
        *uint64_t v56 = xmmword_1A9170050;
LABEL_23:
        *uint64_t v14 = v55;
        swift_storeEnumTagMultiPayload();
        v54(v14);
        (*(void (**)(uint64_t *, uint64_t))(v208 + 8))(v14, v12);
        return;
      }
      return;
    }
  }
  uint64_t v57 = v220 + 64;
  uint64_t v58 = MEMORY[0x1AD0EEDF0](v220 + 64);
  if (v58)
  {
    uint64_t v59 = v58;
    uint64_t v214 = v57;
    uint64_t v60 = *(void **)(*(void *)(v58 + 48) + OBJC_IVAR___AAAccessQueue_queue);
    *uint64_t v34 = v60;
    uint64_t v61 = v213;
    v210(v34, v209, v213);
    id v62 = v60;
    uint64_t v35 = sub_1A916AE90();
    v212(v34, v61);
    if (v35)
    {
      uint64_t v63 = v59 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
      swift_beginAccess();
      sub_1A9098C68(v63, (uint64_t)v27, type metadata accessor for SessionManager.SessionState);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        uint64_t v57 = v214;
        if (EnumCaseMultiPayload == 1) {
          sub_1A9098AF0((uint64_t)v27, type metadata accessor for SessionManager.SessionState);
        }
        swift_unknownObjectRelease();
        goto LABEL_18;
      }
      uint64_t v71 = *v27;
      swift_unknownObjectRelease();
      uint64_t v72 = MEMORY[0x1AD0EEDF0](v214);
      uint64_t v203 = v12;
      v200 = v14;
      uint64_t v188 = v42;
      if (v72)
      {
        sub_1A909F5B8(v218, v219, v215, v217, (uint64_t)&v221);
        *(void *)v224 = v221;
        long long v183 = v222;
        *(_OWORD *)&v224[8] = v222;
        char v225 = v223;
        uint64_t v73 = sub_1A909DB08((uint64_t *)v224);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v73 = 0;
      }
      uint64_t v74 = v206;
      uint64_t v75 = v194;
      uint64_t v76 = v193;
      uint64_t v77 = v191;
      sub_1A916ACB0();
      uint64_t v194 = sub_1A916ACA0();
      uint64_t v193 = v78;
      (*(void (**)(char *, uint64_t))(v192 + 8))(v77, v76);
      uint64_t v79 = v205 + 16;
      v191 = *(char **)(v205 + 16);
      ((void (*)(char *, uint64_t, uint64_t))v191)(v204, v75, v74);
      uint64_t v221 = 47;
      *(void *)&long long v222 = 0xE100000000000000;
      *(void *)v224 = Tracker.path.getter();
      sub_1A909B78C(0, (unint64_t *)&qword_1EB688C10, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1A909384C();
      sub_1A916AF40();
      swift_bridgeObjectRelease();
      sub_1A916B050();
      swift_bridgeObjectRelease();
      uint64_t v80 = v221;
      uint64_t v81 = v222;
      uint64_t v207 = v71;
      *(void *)&long long v183 = v73;
      uint64_t v192 = v79;
      if (v73)
      {
        uint64_t v82 = v73;
        uint64_t v83 = *(void *)(v73 + 16);
        uint64_t v84 = *(void *)(v82 + 24);
        uint64_t v85 = OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier;
        uint64_t v86 = *(void *)(v82 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier + 8);
        if (v86)
        {
          uint64_t v87 = *(void *)(v82 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_34:
          uint64_t v90 = (uint64_t)v198;
          uint64_t v91 = v193;
          uint64_t *v198 = v194;
          *(void *)(v90 + 8) = v91;
          v92 = (int *)v195;
          v93 = *(void (**)(uint64_t))(v205 + 32);
          uint64_t v205 = v90 + *(int *)(v195 + 20);
          v93(v205);
          v94 = (uint64_t *)(v90 + v92[6]);
          uint64_t *v94 = v80;
          v94[1] = v81;
          v95 = (void *)(v90 + v92[7]);
          void *v95 = v83;
          v95[1] = v84;
          v96 = (void *)(v90 + v92[8]);
          void *v96 = v87;
          v96[1] = v86;
          v97 = v199;
          v99 = v218;
          unint64_t v98 = v219;
          uint64_t v100 = v215;
          uint64_t v101 = v217;
          sub_1A9091378((uint64_t)v218, v219, v90, v215, v217, v199);
          if ((sub_1A909F1BC((uint64_t)v99, v98, v100, v101) & 1) == 0) {
            goto LABEL_37;
          }
          sub_1A9095B68((char *)&v221);
          if (v221 == 2)
          {
            __break(1u);
            return;
          }
          if (v221)
          {
            if (qword_1EB688798 == -1)
            {
LABEL_42:
              uint64_t v125 = sub_1A916AD50();
              __swift_project_value_buffer(v125, (uint64_t)qword_1EB68D9C0);
              v126 = v218;
              unint64_t v127 = v219;
              sub_1A90F0DEC(v218, v219);
              sub_1A90F0DEC(v126, v127);
              v128 = sub_1A916AD40();
              os_log_type_t v129 = sub_1A916B3D0();
              BOOL v130 = os_log_type_enabled(v128, v129);
              uint64_t v131 = v203;
              if (v130)
              {
                v132 = (uint8_t *)swift_slowAlloc();
                uint64_t v133 = swift_slowAlloc();
                uint64_t v221 = v133;
                *(_DWORD *)v132 = 136446210;
                uint64_t v134 = sub_1A9091A20((uint64_t)v126, v219);
                *(void *)v224 = sub_1A90DCF6C(v134, v135, &v221);
                uint64_t v90 = (uint64_t)v198;
                unint64_t v127 = v219;
                sub_1A916B5A0();
                swift_bridgeObjectRelease();
                sub_1A909F588(v126, v127);
                sub_1A909F588(v126, v127);
                _os_log_impl(&dword_1A9088000, v128, v129, "Discarding D&U-only event %{public}s", v132, 0xCu);
                swift_arrayDestroy();
                uint64_t v136 = v133;
                v97 = v199;
                MEMORY[0x1AD0EECA0](v136, -1, -1);
                MEMORY[0x1AD0EECA0](v132, -1, -1);
              }
              else
              {
                sub_1A909F588(v126, v127);
                sub_1A909F588(v126, v127);
              }

              if (v216)
              {
                uint64_t v137 = sub_1A9091A20((uint64_t)v126, v127);
                uint64_t v139 = v138;
                sub_1A90F092C();
                uint64_t v140 = swift_allocError();
                uint64_t *v141 = v137;
                v141[1] = v139;
                v142 = v200;
                uint64_t *v200 = v140;
                swift_storeEnumTagMultiPayload();
                v216(v142);
                swift_release();
                swift_release();
                (*(void (**)(uint64_t *, uint64_t))(v208 + 8))(v142, v131);
              }
              else
              {
                swift_release();
                swift_release();
              }
              sub_1A9093480((uint64_t)v97, &qword_1EB687A98, (uint64_t (*)(uint64_t))type metadata accessor for TimedData);
              uint64_t v169 = v90;
LABEL_63:
              sub_1A9098AF0(v169, (uint64_t (*)(void))type metadata accessor for EventData);
              return;
            }
          }
          else
          {
LABEL_37:
            uint64_t v102 = v220;
            sub_1A9094018((unint64_t)v99, v219, v90, (uint64_t)v97, v201, v202, v100, v101, (uint64_t)v196);
            uint64_t v103 = *(void *)(v102 + 192);
            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v103 + 8))(&v221, ObjectType, v103);
            uint64_t v90 = v221;
            v105 = v189;
            v106 = *(void **)&v189[v190];
            *uint64_t v34 = v106;
            v97 = v213;
            v210(v34, v209, v213);
            id v107 = v106;
            char v108 = sub_1A916AE90();
            uint64_t v109 = ((uint64_t (*)(void *, char *))v212)(v34, v97);
            if (v108)
            {
              MEMORY[0x1F4188790](v109);
              v110 = v196;
              uint64_t v181 = v90;
              v182 = v196;
              uint64_t v111 = sub_1A9095E10(v105, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1A909A990, (uint64_t)&v180);
              v112 = v216;
              v143 = (void *)v111;
              swift_bridgeObjectRelease();
              if (v143)
              {
                uint64_t v144 = v217;
                unint64_t v145 = sub_1A9093D08(v100, v217);
                uint64_t v147 = v146;
                uint64_t v149 = v148;
                char v151 = v150 & 1;
                v152 = v110;
                uint64_t v153 = *v110;
                uint64_t v154 = v152[1];
                uint64_t v155 = (uint64_t)v184;
                ((void (*)(char *, uint64_t, uint64_t))v191)(v184, v205, v206);
                sub_1A90937D8(v197, (uint64_t)&v221, (uint64_t)&qword_1EB68A928, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1A909B78C);
                *(_OWORD *)v224 = xmmword_1A9170040;
                uint64_t v181 = v100;
                v182 = (void *)v144;
                uint64_t v156 = v153;
                v157 = v185;
                ProcessEvent.init(name:json:nonJitteredEventTimestamp:groupName:groupContentType:userInfo:timestampConfiguration:)(v156, v154, (uint64_t)v143, v155, v145, v147, v149, v151, v185, (uint64_t)&v221, (uint64_t *)v224);
                uint64_t v158 = MEMORY[0x1AD0EEDF0](v214);
                swift_bridgeObjectRetain();
                id v159 = v143;
                if (v158)
                {
                  sub_1A9091044((uint64_t)v157, v100, v144);
                  swift_unknownObjectRelease();
                }
                uint64_t v160 = v208;
                uint64_t v161 = v203;
                v162 = v200;
                v163 = v216;
                v164 = v198;
                if (v216)
                {
                  uint64_t v165 = v186;
                  v166 = v157;
                  v167 = v157;
                  uint64_t v168 = v187;
                  (*(void (**)(uint64_t *, void *, uint64_t))(v186 + 16))(v200, v166, v187);
                  swift_storeEnumTagMultiPayload();
                  v163(v162);

                  swift_release();
                  swift_release();
                  (*(void (**)(uint64_t *, uint64_t))(v160 + 8))(v162, v161);
                  (*(void (**)(void *, uint64_t))(v165 + 8))(v167, v168);
                }
                else
                {

                  swift_release();
                  swift_release();
                  (*(void (**)(void *, uint64_t))(v186 + 8))(v157, v187);
                }
                sub_1A9098AF0((uint64_t)v196, type metadata accessor for Sequence);
                sub_1A9093480((uint64_t)v199, &qword_1EB687A98, (uint64_t (*)(uint64_t))type metadata accessor for TimedData);
                uint64_t v169 = (uint64_t)v164;
              }
              else
              {
                uint64_t v170 = v203;
                v171 = v200;
                v172 = v198;
                if (qword_1EB68ACE8 != -1) {
                  swift_once();
                }
                id v173 = (id)qword_1EB689AA0;
                sub_1A916B3A0();
                sub_1A916AD30();

                if (v112)
                {
                  v174 = v196;
                  uint64_t v176 = *v196;
                  uint64_t v175 = v196[1];
                  sub_1A90F0864();
                  uint64_t v177 = swift_allocError();
                  uint64_t *v178 = v176;
                  v178[1] = v175;
                  uint64_t *v171 = v177;
                  swift_storeEnumTagMultiPayload();
                  swift_bridgeObjectRetain();
                  v112(v171);
                  swift_release();
                  swift_release();
                  (*(void (**)(uint64_t *, uint64_t))(v208 + 8))(v171, v170);
                  v179 = v174;
                }
                else
                {
                  swift_release();
                  swift_release();
                  v179 = v196;
                }
                sub_1A9098AF0((uint64_t)v179, type metadata accessor for Sequence);
                sub_1A9093480((uint64_t)v199, &qword_1EB687A98, (uint64_t (*)(uint64_t))type metadata accessor for TimedData);
                uint64_t v169 = (uint64_t)v172;
              }
              goto LABEL_63;
            }
            __break(1u);
          }
          swift_once();
          goto LABEL_42;
        }
        swift_bridgeObjectRetain();
        uint64_t v88 = v207;
      }
      else
      {
        uint64_t v83 = *(void *)(v71 + 16);
        uint64_t v84 = *(void *)(v71 + 24);
        swift_bridgeObjectRetain();
        uint64_t v88 = v71;
        uint64_t v85 = OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier;
      }
      uint64_t v89 = v88 + v85;
      uint64_t v87 = *(void *)(v88 + v85);
      uint64_t v86 = *(void *)(v89 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
LABEL_18:
  uint64_t v65 = MEMORY[0x1AD0EEDF0](v57);
  if (v65)
  {
    uint64_t v66 = v65;
    uint64_t v67 = *(void **)(*(void *)(v65 + 48) + OBJC_IVAR___AAAccessQueue_queue);
    *uint64_t v34 = v67;
    uint64_t v27 = (uint64_t *)v213;
    v210(v34, v209, v213);
    id v68 = v67;
    uint64_t v35 = sub_1A916AE90();
    v212(v34, (char *)v27);
    if (v35)
    {
      uint64_t v69 = *(void *)(v66 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_options);
      swift_unknownObjectRelease();
      if (v69)
      {
        sub_1A910CF34(v218, v219, v201, v202, v197, (uint64_t)v216, v42, v215, v217);
        return;
      }
      goto LABEL_21;
    }
LABEL_67:
    __break(1u);
    swift_once();
    id v113 = (id)qword_1EB689AA0;
    sub_1A916B3C0();
    sub_1A908EFCC(0, (unint64_t *)&qword_1EB68ACD8, (unint64_t *)&qword_1EB68A920, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v114 = swift_allocObject();
    *(_OWORD *)(v114 + 16) = xmmword_1A916E200;
    uint64_t v221 = 0;
    *(void *)&long long v222 = 0xE000000000000000;
    *(void *)v224 = v35;
    *(void *)&v224[8] = v219;
    type metadata accessor for EventSubmit();
    sub_1A916B9C0();
    uint64_t v115 = v221;
    uint64_t v116 = v222;
    uint64_t v117 = MEMORY[0x1E4FBB1A0];
    *(void *)(v114 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v118 = sub_1A90A67C0();
    *(void *)(v114 + 64) = v118;
    *(void *)(v114 + 32) = v115;
    *(void *)(v114 + 40) = v116;
    uint64_t v221 = 0;
    *(void *)&long long v222 = 0xE000000000000000;
    *(void *)v224 = v27;
    sub_1A908E870(0, (unint64_t *)&qword_1EB689860);
    sub_1A916B780();
    uint64_t v119 = v221;
    uint64_t v120 = v222;
    *(void *)(v114 + 96) = v117;
    *(void *)(v114 + 104) = v118;
    *(void *)(v114 + 72) = v119;
    *(void *)(v114 + 80) = v120;
    sub_1A916AD30();

    swift_bridgeObjectRelease();
    uint64_t v121 = v208;
    uint64_t v122 = v203;
    v123 = v200;
    if (v40)
    {
      uint64_t *v200 = (uint64_t)v27;
      swift_storeEnumTagMultiPayload();
      v124 = v27;
      v40(v123);

      (*(void (**)(uint64_t *, uint64_t))(v121 + 8))(v123, v122);
    }
    else
    {
    }
    return;
  }
LABEL_21:
  uint64_t v54 = v216;
  if (v216)
  {
    sub_1A90F0788();
    uint64_t v55 = swift_allocError();
    *long long v70 = 0;
    v70[1] = 0;
    goto LABEL_23;
  }
}

uint64_t sub_1A9093480(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1A90934F0(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1A90934F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1A9093554(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_1A916AC90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t result = a1 + *(int *)(a2 + 56);
  if (*(void *)(result + 24))
  {
    return __swift_destroy_boxed_opaque_existential_0(result);
  }
  return result;
}

uint64_t ProcessEvent.init(name:json:nonJitteredEventTimestamp:groupName:groupContentType:userInfo:timestampConfiguration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, void *a9@<X8>, uint64_t a10, uint64_t *a11)
{
  uint64_t v17 = *a11;
  uint64_t v16 = a11[1];
  *a9 = a1;
  a9[1] = a2;
  a9[3] = 0x302E312E30;
  a9[4] = 0xE500000000000000;
  a9[2] = a3;
  uint64_t v18 = (int *)type metadata accessor for ProcessEvent();
  uint64_t v19 = (char *)a9 + v18[11];
  uint64_t v20 = sub_1A916AC90();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v19, a4, v20);
  uint64_t v21 = (void *)((char *)a9 + v18[12]);
  *uint64_t v21 = a5;
  v21[1] = a6;
  uint64_t v22 = (char *)a9 + v18[13];
  *(void *)uint64_t v22 = a7;
  v22[8] = a8 & 1;
  uint64_t result = sub_1A909374C(a10, (uint64_t)a9 + v18[14]);
  uint64_t v24 = (void *)((char *)a9 + v18[15]);
  *uint64_t v24 = v17;
  v24[1] = v16;
  return result;
}

uint64_t type metadata accessor for ProcessEvent()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A909374C(uint64_t a1, uint64_t a2)
{
  sub_1A909B660(0, (unint64_t *)&qword_1EB68A928, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A90937D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

unint64_t sub_1A909384C()
{
  unint64_t result = qword_1EB689480;
  if (!qword_1EB689480)
  {
    sub_1A90A5620(255, (unint64_t *)&qword_1EB688C10, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB689480);
  }
  return result;
}

uint64_t sub_1A90938C0(uint64_t result)
{
  uint64_t v1 = (void *)result;
  unint64_t v2 = *(void *)(result + 16);
  if (v2 < 2) {
    return (uint64_t)v1;
  }
  uint64_t v3 = 0;
  unint64_t v4 = 0;
  unint64_t v5 = v2 >> 1;
  unint64_t v6 = v2 - 1;
  uint64_t v7 = 16 * v2 + 16;
  unint64_t v15 = v2 >> 1;
  while (1)
  {
    if (v4 == v6) {
      goto LABEL_4;
    }
    unint64_t v8 = v1[2];
    if (v4 >= v8) {
      break;
    }
    if (v6 >= v8) {
      goto LABEL_13;
    }
    uint64_t v10 = v1[v3 + 4];
    uint64_t v9 = v1[v3 + 5];
    uint64_t v12 = *(void *)((char *)v1 + v7);
    uint64_t v11 = *(void *)((char *)v1 + v7 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v1 = sub_1A91698BC(v1);
    }
    uint64_t v13 = &v1[v3];
    unint64_t result = swift_bridgeObjectRelease();
    v13[4] = v12;
    v13[5] = v11;
    if (v6 >= v1[2]) {
      goto LABEL_14;
    }
    uint64_t v14 = (void *)((char *)v1 + v7);
    unint64_t result = swift_bridgeObjectRelease();
    *uint64_t v14 = v10;
    v14[1] = v9;
    unint64_t v5 = v15;
LABEL_4:
    ++v4;
    --v6;
    v7 -= 16;
    v3 += 2;
    if (v5 == v4) {
      return (uint64_t)v1;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t Tracker.path.getter()
{
  swift_retain();
  uint64_t v1 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v4 = v0[3];
    if (v4)
    {
      uint64_t v5 = v0[2];
      swift_retain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v1 = sub_1A9093AE4(0, v1[2] + 1, 1, v1);
      }
      unint64_t v7 = v1[2];
      unint64_t v6 = v1[3];
      if (v7 >= v6 >> 1) {
        uint64_t v1 = sub_1A9093AE4((void *)(v6 > 1), v7 + 1, 1, v1);
      }
      v1[2] = v7 + 1;
      unint64_t v2 = &v1[2 * v7];
      v2[4] = v5;
      v2[5] = v4;
      swift_release();
    }
    uint64_t v3 = (void *)v0[17];
    swift_retain();
    swift_release();
    uint64_t v0 = v3;
  }
  while (v3);

  return sub_1A90938C0((uint64_t)v1);
}

void *sub_1A9093AE4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A909B6AC(0, &qword_1EB689858, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A9093C14(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9093C14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

unint64_t sub_1A9093D08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  (*(void (**)(void *__return_ptr))(a2 + 8))(v15);
  if (v15[1]) {
    return v15[0];
  }
  swift_retain();
  while (1)
  {
    unint64_t v5 = (uint64_t *)(v3 + 144);
    swift_beginAccess();
    unint64_t v6 = *(void *)(v3 + 144);
    if (v6 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_1A916B7E0();
      if (!v4)
      {
LABEL_19:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = 0;
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
      if (!v4) {
        goto LABEL_19;
      }
    }
    unint64_t result = v4 - 1;
    if (__OFSUB__(v4, 1)) {
      break;
    }
    if ((v6 & 0xC000000000000001) != 0)
    {
      uint64_t v8 = (char *)MEMORY[0x1AD0EDEF0](result, v6);
    }
    else
    {
      if ((result & 0x8000000000000000) != 0) {
        goto LABEL_29;
      }
      if (result >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_30;
      }
      uint64_t v8 = (char *)*(id *)(v6 + 8 * result + 32);
    }
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void *)&v9[OBJC_IVAR___AAGroup_name];
    uint64_t v10 = *(void *)&v9[OBJC_IVAR___AAGroup_name + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();

    uint64_t v11 = *v5;
    if ((unint64_t)*v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_1A916B7E0();
      if (!v12)
      {
LABEL_22:
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v12) {
        goto LABEL_22;
      }
    }
    unint64_t result = v12 - 1;
    if (__OFSUB__(v12, 1)) {
      goto LABEL_31;
    }
    if ((v11 & 0xC000000000000001) != 0)
    {
      MEMORY[0x1AD0EDEF0](result, v11);
      swift_bridgeObjectRelease();
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      if ((result & 0x8000000000000000) != 0) {
        goto LABEL_32;
      }
      if (result >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_33;
      }
      id v13 = *(id *)(v11 + 8 * result + 32);
      swift_bridgeObjectRelease();
      swift_release();
    }
LABEL_23:
    uint64_t v14 = *(void *)(v3 + 136);
    swift_retain();
    swift_release();
    if (!v14) {
      return v4;
    }
    uint64_t v3 = v14;
    if (v10)
    {
      swift_release();
      return v4;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t initializeWithCopy for SessionGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A9094018@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v10 = v9;
  uint64_t v134 = a8;
  uint64_t v144 = a7;
  uint64_t v152 = a6;
  uint64_t v151 = a5;
  uint64_t v141 = a4;
  uint64_t v142 = a3;
  unint64_t v143 = a2;
  unint64_t v133 = a1;
  uint64_t v130 = a9;
  uint64_t v150 = type metadata accessor for SequenceEntry(0);
  uint64_t v149 = *(void *)(v150 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v150);
  uint64_t v154 = (uint64_t)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v153 = (char *)&v128 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v136 = (uint64_t)&v128 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  unint64_t v135 = (char *)&v128 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v146 = (uint64_t)&v128 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  unint64_t v145 = (char *)&v128 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v139 = (uint64_t)&v128 - v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v138 = (void **)((char *)&v128 - v25);
  sub_1A90934F0(0, &qword_1EB687A98, (uint64_t (*)(uint64_t))type metadata accessor for TimedData, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v140 = (uint64_t)&v128 - v27;
  uint64_t v148 = type metadata accessor for TimedData();
  uint64_t v129 = *(void *)(v148 - 8);
  MEMORY[0x1F4188790](v148);
  uint64_t v137 = (uint64_t)&v128 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = (char *)type metadata accessor for Sequence(0);
  MEMORY[0x1F4188790](v156);
  uint64_t v158 = (char *)&v128 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1F4188790](v132);
  uint64_t v157 = (uint64_t)&v128 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1A916AE70();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v34 = (void **)((char *)&v128 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v35 = *(void **)(*(void *)(v10 + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v34 = v35;
  unint64_t v36 = *MEMORY[0x1E4FBCBF0];
  uint64_t v37 = *(void (**)(void *, unint64_t, uint64_t))(v32 + 104);
  v37(v34, v36, v31);
  id v38 = v35;
  uint64_t v39 = sub_1A916AE90();
  uint64_t v40 = *(void (**)(void *, uint64_t))(v32 + 8);
  v40(v34, v31);
  if ((v39 & 1) == 0)
  {
    __break(1u);
    goto LABEL_61;
  }
  sub_1A909F3A8(v133, v143, v144, v134, (char *)&v166);
  LODWORD(v147) = v166;
  uint64_t v155 = v10;
  uint64_t v41 = MEMORY[0x1AD0EEDF0](v10 + 64);
  uint64_t v42 = 0;
  if (!v41)
  {
    uint64_t v50 = v144;
    uint64_t v51 = (void *)v133;
    uint64_t v49 = v134;
    goto LABEL_10;
  }
  uint64_t v39 = v41;
  uint64_t v43 = *(void **)(*(void *)(v41 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v34 = v43;
  v37(v34, v36, v31);
  id v44 = v43;
  unint64_t v36 = sub_1A916AE90();
  v40(v34, v31);
  if ((v36 & 1) == 0)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  uint64_t v45 = v39 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
  swift_beginAccess();
  uint64_t v46 = v45;
  uint64_t v47 = (uint64_t *)v157;
  sub_1A9098C68(v46, v157, type metadata accessor for SessionManager.SessionState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    uint64_t v49 = v134;
    uint64_t v50 = v144;
    uint64_t v51 = (void *)v133;
    if (EnumCaseMultiPayload == 1) {
      sub_1A9098AF0((uint64_t)v47, type metadata accessor for SessionManager.SessionState);
    }
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v52 = *v47;
    swift_unknownObjectRelease();
    uint64_t v42 = *(void *)(v52 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_dataEventFormatter + 8);
    swift_release();
    uint64_t v49 = v134;
    uint64_t v50 = v144;
    uint64_t v51 = (void *)v133;
  }
LABEL_10:
  unint64_t v53 = v143;
  v132 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))sub_1A9091A20((uint64_t)v51, v143);
  uint64_t v55 = v54;
  uint64_t v131 = type metadata accessor for EventData();
  uint64_t v56 = v142 + *(int *)(v131 + 20);
  uint64_t v57 = (uint64_t)v156;
  uint64_t v39 = (uint64_t)v158;
  uint64_t v58 = &v158[*((int *)v156 + 5)];
  uint64_t v59 = sub_1A916AC90();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16))(v58, v56, v59);
  sub_1A909F260((unint64_t)v51, v53, v50, v49, &v166);
  char v60 = v166;
  char v61 = BYTE1(v166);
  uint64_t v157 = *(int *)(v57 + 28);
  *(void *)(v39 + v157) = MEMORY[0x1E4FBC860];
  *(void *)uint64_t v39 = v132;
  *(void *)(v39 + 8) = v55;
  uint64_t v62 = v39 + *(int *)(v57 + 24);
  *(unsigned char *)uint64_t v62 = (_BYTE)v147;
  *(void *)(v62 + 8) = v42;
  *(unsigned char *)(v62 + 16) = v60;
  *(unsigned char *)(v62 + 17) = v61;
  uint64_t v63 = sub_1A909F4F0(v51, v53, v50, v49);
  uint64_t v64 = v63[2];
  if (v64)
  {
    uint64_t v156 = &v168;
    v128 = v63;
    uint64_t v65 = (uint64_t)(v63 + 4);
    uint64_t v147 = (void *)MEMORY[0x1E4FBC860];
    v132 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v129 + 48);
    uint64_t v66 = v131;
    while (1)
    {
      sub_1A909553C(v65, (uint64_t)&v166);
      uint64_t v67 = v166;
      unint64_t v68 = v167;
      sub_1A90A0DC8((uint64_t)v156, (uint64_t)v163);
      swift_bridgeObjectRetain();
      sub_1A90954AC((uint64_t)&v166);
      uint64_t v69 = v164;
      uint64_t v70 = v165;
      __swift_project_boxed_opaque_existential_1(v163, v164);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v70 + 16))(v69, v70))
      {
        uint64_t v85 = v164;
        uint64_t v86 = v165;
        __swift_project_boxed_opaque_existential_1(v163, v164);
        uint64_t v87 = (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 8))(v85, v86);
        sub_1A909562C(v87, v88, v151, v152, 0, (uint64_t)&v159);
        swift_bridgeObjectRelease();
        if (v160)
        {
          sub_1A908EC8C(&v159, (uint64_t)v161);
          uint64_t v89 = v153;
          sub_1A90A0DC8((uint64_t)v161, (uint64_t)&v153[*(int *)(v150 + 20)]);
          *uint64_t v89 = v67;
          v89[1] = v68;
          type metadata accessor for SequenceEntry.Kind(0);
          swift_storeEnumTagMultiPayload();
          sub_1A9098C68((uint64_t)v89, v154, type metadata accessor for SequenceEntry);
          uint64_t v39 = (uint64_t)v158;
          unint64_t v90 = *(void *)&v158[v157];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v90 = sub_1A9095474(0, *(void *)(v90 + 16) + 1, 1, v90);
          }
          unint64_t v92 = *(void *)(v90 + 16);
          unint64_t v91 = *(void *)(v90 + 24);
          if (v92 >= v91 >> 1) {
            unint64_t v90 = sub_1A9095474(v91 > 1, v92 + 1, 1, v90);
          }
          *(void *)(v90 + 16) = v92 + 1;
          sub_1A909540C(v154, v90+ ((*(unsigned __int8 *)(v149 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80))+ *(void *)(v149 + 72) * v92, type metadata accessor for SequenceEntry);
          *(void *)(v39 + v157) = v90;
          v93 = &v170;
          goto LABEL_32;
        }
        swift_bridgeObjectRelease();
        sub_1A908EEF4((uint64_t)&v159, &qword_1EB6887D8, qword_1EB6892F8, (uint64_t)&protocol descriptor for DataEventType);
      }
      else
      {
        uint64_t v71 = v164;
        uint64_t v72 = v165;
        __swift_project_boxed_opaque_existential_1(v163, v164);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v72 + 24))(v71, v72))
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v73 = v164;
          uint64_t v74 = v165;
          __swift_project_boxed_opaque_existential_1(v163, v164);
          if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 40))(v148, v148, v73, v74))
          {
            uint64_t v75 = v140;
            sub_1A90937D8(v141, v140, (uint64_t)&qword_1EB687A98, (uint64_t)type metadata accessor for TimedData, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1A90934F0);
            int v76 = (*v132)(v75, 1, v148);
            uint64_t v39 = (uint64_t)v158;
            if (v76 != 1)
            {
              uint64_t v102 = v137;
              sub_1A909540C(v75, v137, (uint64_t (*)(void))type metadata accessor for TimedData);
              uint64_t v103 = v138;
              sub_1A9098C68(v102, (uint64_t)v138 + *(int *)(v150 + 20), (uint64_t (*)(void))type metadata accessor for TimedData);
              *uint64_t v103 = v67;
              v103[1] = v68;
              type metadata accessor for SequenceEntry.Kind(0);
              swift_storeEnumTagMultiPayload();
              sub_1A9098C68((uint64_t)v103, v139, type metadata accessor for SequenceEntry);
              unint64_t v104 = *(void *)(v39 + v157);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v104 = sub_1A9095474(0, *(void *)(v104 + 16) + 1, 1, v104);
              }
              unint64_t v106 = *(void *)(v104 + 16);
              unint64_t v105 = *(void *)(v104 + 24);
              uint64_t v66 = v131;
              if (v106 >= v105 >> 1) {
                unint64_t v104 = sub_1A9095474(v105 > 1, v106 + 1, 1, v104);
              }
              *(void *)(v104 + 16) = v106 + 1;
              sub_1A909540C(v139, v104+ ((*(unsigned __int8 *)(v149 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80))+ *(void *)(v149 + 72) * v106, type metadata accessor for SequenceEntry);
              *(void *)(v39 + v157) = v104;
              sub_1A9098AF0((uint64_t)v138, type metadata accessor for SequenceEntry);
              uint64_t v83 = (uint64_t (*)(void))type metadata accessor for TimedData;
              uint64_t v84 = (char *)v163;
              goto LABEL_45;
            }
            sub_1A9093480(v75, &qword_1EB687A98, (uint64_t (*)(uint64_t))type metadata accessor for TimedData);
          }
          uint64_t v77 = v164;
          uint64_t v78 = v165;
          __swift_project_boxed_opaque_existential_1(v163, v164);
          if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 40))(v66, v66, v77, v78))
          {
            uint64_t v79 = v145;
            sub_1A9098C68(v142, (uint64_t)&v145[*(int *)(v150 + 20)], (uint64_t (*)(void))type metadata accessor for EventData);
            *uint64_t v79 = v67;
            v79[1] = v68;
            type metadata accessor for SequenceEntry.Kind(0);
            swift_storeEnumTagMultiPayload();
            sub_1A9098C68((uint64_t)v79, v146, type metadata accessor for SequenceEntry);
            uint64_t v39 = (uint64_t)v158;
            unint64_t v80 = *(void *)&v158[v157];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v80 = sub_1A9095474(0, *(void *)(v80 + 16) + 1, 1, v80);
            }
            unint64_t v82 = *(void *)(v80 + 16);
            unint64_t v81 = *(void *)(v80 + 24);
            if (v82 >= v81 >> 1) {
              unint64_t v80 = sub_1A9095474(v81 > 1, v82 + 1, 1, v80);
            }
            *(void *)(v80 + 16) = v82 + 1;
            sub_1A909540C(v146, v80+ ((*(unsigned __int8 *)(v149 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80))+ *(void *)(v149 + 72) * v82, type metadata accessor for SequenceEntry);
            *(void *)(v39 + v157) = v80;
            uint64_t v83 = type metadata accessor for SequenceEntry;
            uint64_t v84 = &v169;
LABEL_45:
            sub_1A9098AF0(*((void *)v84 - 32), v83);
            goto LABEL_14;
          }
          uint64_t v94 = v164;
          uint64_t v95 = v165;
          __swift_project_boxed_opaque_existential_1(v163, v164);
          uint64_t v96 = (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 8))(v94, v95);
          sub_1A909562C(v96, v97, v151, v152, 0, (uint64_t)&v159);
          swift_bridgeObjectRelease();
          if (v160)
          {
            sub_1A908EC8C(&v159, (uint64_t)v161);
            unint64_t v98 = v135;
            sub_1A90A0DC8((uint64_t)v161, (uint64_t)&v135[*(int *)(v150 + 20)]);
            *unint64_t v98 = v67;
            v98[1] = v68;
            type metadata accessor for SequenceEntry.Kind(0);
            swift_storeEnumTagMultiPayload();
            sub_1A9098C68((uint64_t)v98, v136, type metadata accessor for SequenceEntry);
            uint64_t v39 = (uint64_t)v158;
            unint64_t v99 = *(void *)&v158[v157];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v99 = sub_1A9095474(0, *(void *)(v99 + 16) + 1, 1, v99);
            }
            unint64_t v101 = *(void *)(v99 + 16);
            unint64_t v100 = *(void *)(v99 + 24);
            if (v101 >= v100 >> 1) {
              unint64_t v99 = sub_1A9095474(v100 > 1, v101 + 1, 1, v99);
            }
            *(void *)(v99 + 16) = v101 + 1;
            sub_1A909540C(v136, v99+ ((*(unsigned __int8 *)(v149 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80))+ *(void *)(v149 + 72) * v101, type metadata accessor for SequenceEntry);
            *(void *)(v39 + v157) = v99;
            v93 = (uint64_t *)&v162;
LABEL_32:
            sub_1A9098AF0(*(v93 - 32), type metadata accessor for SequenceEntry);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)v161);
            goto LABEL_14;
          }
          sub_1A908EEF4((uint64_t)&v159, &qword_1EB6887D8, qword_1EB6892F8, (uint64_t)&protocol descriptor for DataEventType);
          uint64_t v107 = v164;
          uint64_t v108 = v165;
          __swift_project_boxed_opaque_existential_1(v163, v164);
          uint64_t v109 = (*(uint64_t (**)(uint64_t, uint64_t))(v108 + 32))(v107, v108);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            v110 = v147;
          }
          else {
            v110 = sub_1A90C3028(0, v147[2] + 1, 1, v147);
          }
          unint64_t v112 = v110[2];
          unint64_t v111 = v110[3];
          if (v112 >= v111 >> 1) {
            v110 = sub_1A90C3028((void *)(v111 > 1), v112 + 1, 1, v110);
          }
          v110[2] = v112 + 1;
          uint64_t v147 = v110;
          id v113 = &v110[3 * v112];
          v113[4] = v67;
          v113[5] = v68;
          v113[6] = v109;
        }
      }
      uint64_t v39 = (uint64_t)v158;
LABEL_14:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v163);
      v65 += 56;
      if (!--v64)
      {
        swift_bridgeObjectRelease();
        unint64_t v36 = v143;
        uint64_t v114 = v147;
        goto LABEL_54;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v114 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v36 = v143;
LABEL_54:
  uint64_t v115 = v155;
  if (!v114[2]) {
    goto LABEL_58;
  }
  uint64_t v116 = v114;
  uint64_t v37 = (void (*)(void *, unint64_t, uint64_t))sub_1A9152470();
  if (*(unsigned char *)(v115 + 176) == 1)
  {
    uint64_t v40 = (void (*)(void *, uint64_t))v116;
    if (qword_1EB68ACE8 == -1)
    {
LABEL_57:
      id v117 = (id)qword_1EB689AA0;
      LODWORD(v158) = sub_1A916B3C0();
      sub_1A908EFCC(0, (unint64_t *)&qword_1EB68ACD8, (unint64_t *)&qword_1EB68A920, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v118 = swift_allocObject();
      *(_OWORD *)(v118 + 16) = xmmword_1A916E200;
      uint64_t v119 = sub_1A9091A20(v133, v36);
      uint64_t v121 = v120;
      uint64_t v122 = MEMORY[0x1E4FBB1A0];
      *(void *)(v118 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v123 = sub_1A90A67C0();
      *(void *)(v118 + 64) = v123;
      *(void *)(v118 + 32) = v119;
      *(void *)(v118 + 40) = v121;
      uint64_t v166 = 0;
      unint64_t v167 = 0xE000000000000000;
      v163[0] = v40;
      v163[1] = v37;
      sub_1A916B780();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v124 = v166;
      unint64_t v125 = v167;
      *(void *)(v118 + 96) = v122;
      *(void *)(v118 + 104) = v123;
      *(void *)(v118 + 72) = v124;
      *(void *)(v118 + 80) = v125;
      sub_1A916AD30();

LABEL_58:
      swift_bridgeObjectRelease();
      return sub_1A909540C(v39, v130, type metadata accessor for Sequence);
    }
LABEL_62:
    swift_once();
    goto LABEL_57;
  }
  sub_1A90F0788();
  swift_allocError();
  *unint64_t v127 = v116;
  v127[1] = v37;
  swift_willThrow();
  return sub_1A9098AF0(v39, type metadata accessor for Sequence);
}

BOOL sub_1A90953D0()
{
  return sub_1A90953E0();
}

BOOL sub_1A90953E0()
{
  return swift_dynamicCastMetatype() != 0;
}

uint64_t sub_1A909540C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A9095474(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A90999AC(a1, a2, a3, a4, &qword_1EB6894B0, type metadata accessor for SequenceEntry, type metadata accessor for SequenceEntry, type metadata accessor for SequenceEntry);
}

uint64_t sub_1A90954AC(uint64_t a1)
{
  return a1;
}

uint64_t destroy for EventMirrorProperty(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return __swift_destroy_boxed_opaque_existential_0(a1 + 16);
}

uint64_t sub_1A909553C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for EventMirrorProperty(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2 + 16;
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  v7(a1 + 16, v4, v6);
  return a1;
}

uint64_t sub_1A9095624()
{
  return *v0;
}

uint64_t sub_1A909562C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  void (*v36)(long long *__return_ptr, uint64_t, uint64_t, unsigned char *);
  _OWORD *v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  unsigned char v42[24];
  long long v43;
  long long v44;
  long long v45;
  long long v46;
  long long v47;
  long long v48;
  long long v49;
  long long v50;
  long long v51;
  long long v52;
  long long v53;
  long long v54;
  void v55[3];
  uint64_t v56;
  uint64_t v57;

  uint64_t v7 = v6;
  uint64_t v40 = a6;
  uint64_t v41 = a1;
  uint64_t v12 = sub_1A916AE70();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (void *)((char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void **)(v7[10] + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v15 = v16;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FBCBF0], v12);
  id v17 = v16;
  LOBYTE(v16) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if (v16)
  {
    uint64_t v39 = a5;
    if (a5)
    {
      uint64_t v19 = a3;
      id v38 = 0;
      goto LABEL_6;
    }
    uint64_t result = sub_1A9095B68((char *)&v49);
    if (v49 != 2)
    {
      uint64_t v19 = a3;
      id v38 = v49 & 1;
LABEL_6:
      swift_beginAccess();
      uint64_t v20 = v7[15];
      if (*(void *)(v20 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v21 = sub_1A90A1D98(v41, a2);
        if (v22)
        {
          sub_1A90A0DC8(*(void *)(v20 + 56) + 40 * v21, (uint64_t)&v49);
        }
        else
        {
          *(void *)&uint64_t v51 = 0;
          uint64_t v50 = 0u;
          uint64_t v49 = 0u;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((void *)&v50 + 1))
        {
          sub_1A908EC8C(&v49, (uint64_t)v55);
          uint64_t v24 = v56;
          uint64_t v23 = v57;
          __swift_project_boxed_opaque_existential_1(v55, v56);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v23 + 24))(&v43, v24, v23);
          if (*((void *)&v43 + 1))
          {
            uint64_t v52 = v46;
            unint64_t v53 = v47;
            uint64_t v54 = v48;
            uint64_t v49 = v43;
            uint64_t v50 = v44;
            uint64_t v51 = v45;
            uint64_t v25 = *(void *)(*((void *)&v46 + 1) + 16);
            if (v25)
            {
              uint64_t v26 = (unsigned __int8 *)(*((void *)&v52 + 1) + 32);
              while (*v26++)
              {
                if (!--v25) {
                  goto LABEL_22;
                }
              }
              if ((v39 & 1) == 0)
              {
                uint64_t v28 = v56;
                uint64_t v29 = v57;
                __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v55, v56);
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v29 + 32))(&v43, v28, v29);
                sub_1A908A198((uint64_t)&v43, &qword_1EB689380, (uint64_t)&type metadata for AnyDataEventEntry);
                sub_1A90A0DC8((uint64_t)v55, (uint64_t)&v43);
                swift_beginAccess();
                swift_bridgeObjectRetain();
                sub_1A908D668((uint64_t)&v43, v41, a2);
                swift_endAccess();
              }
            }
LABEL_22:
            if ((v38 & v53 & 1) == 0)
            {
              sub_1A90A0DC8((uint64_t)&v50, v40);
              sub_1A90A0EAC((uint64_t)&v49);
              return __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
            }
            sub_1A90A0EAC((uint64_t)&v49);
          }
          else
          {
            sub_1A908A198((uint64_t)&v43, &qword_1EB689380, (uint64_t)&type metadata for AnyDataEventEntry);
          }
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
LABEL_25:
          uint64_t v30 = a4;
          char v31 = v39;
          if (!a4)
          {
            uint64_t v19 = v7[6];
            uint64_t v30 = v7[7];
            swift_bridgeObjectRetain();
          }
          swift_beginAccess();
          uint64_t v32 = v7[16];
          uint64_t v33 = *(void *)(v32 + 16);
          swift_bridgeObjectRetain();
          if (v33)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v34 = sub_1A90A1D98(v41, a2);
            if ((v35 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v7[17]) {
                goto LABEL_37;
              }
LABEL_39:
              uint64_t result = swift_bridgeObjectRelease();
              uint64_t v37 = (_OWORD *)v40;
              *(void *)(v40 + 32) = 0;
              *uint64_t v37 = 0u;
              v37[1] = 0u;
              return result;
            }
            unint64_t v36 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t, unsigned char *))(*(void *)(v32 + 56)
                                                                                           + 16 * v34);
            swift_retain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v30)
            {
              v42[0] = v38;
              swift_bridgeObjectRetain();
              v36(&v43, v19, v30, v42);
              swift_bridgeObjectRelease();
              swift_release();
              if (*((void *)&v44 + 1))
              {
                swift_bridgeObjectRelease();
                sub_1A908EC8C(&v43, (uint64_t)&v49);
                return sub_1A908EC8C(&v49, v40);
              }
              sub_1A908EEF4((uint64_t)&v43, &qword_1EB6887D8, qword_1EB6892F8, (uint64_t)&protocol descriptor for DataEventType);
              if (!v7[17]) {
                goto LABEL_39;
              }
LABEL_37:
              sub_1A909562C(v41, a2, v19, v30, v31 & 1);
              return swift_bridgeObjectRelease();
            }
            swift_release();
          }
          if (v7[17]) {
            goto LABEL_37;
          }
          goto LABEL_39;
        }
      }
      else
      {
        *(void *)&uint64_t v51 = 0;
        uint64_t v50 = 0u;
        uint64_t v49 = 0u;
      }
      sub_1A908EEF4((uint64_t)&v49, (unint64_t *)&qword_1EB6897B0, (unint64_t *)&qword_1EB6897A8, (uint64_t)&protocol descriptor for DataEventStackType);
      goto LABEL_25;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9095B68@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1A916AE70();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  long long v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EB687A08 != -1) {
    swift_once();
  }
  uint64_t result = sub_1A916BBA0();
  if (!v11)
  {
    char v9 = 2;
    goto LABEL_7;
  }
  uint64_t v7 = *(void **)(*(void *)(v11
                            + OBJC_IVAR____TtC12AppAnalyticsP33_C30334460221130696DFAC9959A2A23920LazyDiagnosticStatus_queue)
                + OBJC_IVAR___AAAccessQueue_queue);
  void *v5 = v7;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
  id v8 = v7;
  LOBYTE(v7) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v7)
  {
    sub_1A9095CF4((unsigned char *)&v10 + 7);
    uint64_t result = swift_release();
    char v9 = HIBYTE(v10);
LABEL_7:
    *a1 = v9;
    return result;
  }
  __break(1u);
  return result;
}

void sub_1A9095CF4(unsigned char *a1@<X8>)
{
  uint64_t v3 = OBJC_IVAR____TtC12AppAnalyticsP33_C30334460221130696DFAC9959A2A23920LazyDiagnosticStatus____lazy_storage____status;
  int v4 = *(unsigned __int8 *)(v1
                          + OBJC_IVAR____TtC12AppAnalyticsP33_C30334460221130696DFAC9959A2A23920LazyDiagnosticStatus____lazy_storage____status);
  if (v4 == 2)
  {
    uint64_t v5 = v1;
    uint64_t v6 = v1 + OBJC_IVAR____TtC12AppAnalyticsP33_C30334460221130696DFAC9959A2A23920LazyDiagnosticStatus_provider;
    uint64_t v7 = type metadata accessor for DiagnosticsConsentProvider(0);
    (*(void (**)(uint64_t *__return_ptr))(v6 + *(int *)(v7 + 20)))(&v9);
    char v8 = v9;
    *(unsigned char *)(v5 + v3) = v9;
  }
  else
  {
    char v8 = v4 & 1;
  }
  *a1 = v8;
}

uint64_t sub_1A9095D7C()
{
  return sub_1A9095DB4();
}

BOOL sub_1A9095D8C(uint64_t a1)
{
  return sub_1A9095DBC(*(void *)(a1 + 16));
}

uint64_t sub_1A9095DB4()
{
  return sub_1A916BBB0();
}

BOOL sub_1A9095DBC(uint64_t a1)
{
  if (swift_conformsToProtocol2()) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = 0;
  }
  return v2 == 0;
}

uint64_t sub_1A9095E04@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A9095E10(char *a1, void (*a2)(uint64_t *__return_ptr, uint64_t), uint64_t a3)
{
  void (*v59)(uint64_t *__return_ptr, uint64_t);
  uint64_t v60;
  unsigned char *v61;
  unsigned char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  uint64_t v59 = a2;
  uint64_t v58 = a3;
  uint64_t v54 = a1;
  uint64_t v3 = sub_1A916AE70();
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t v56 = v3;
  MEMORY[0x1F4188790](v3);
  unint64_t v53 = &v49[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for DiagnosticsConsentProvider(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v52 = &v49[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1A916ACC0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v51 = &v49[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A9098F30();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = &v49[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A9096EA0(0, &qword_1EB6879C0, MEMORY[0x1E4F27990]);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  id v17 = &v49[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v20 = &v49[-v19];
  MEMORY[0x1F4188790](v18);
  char v22 = &v49[-v21];
  if (qword_1EB687A08 != -1) {
    swift_once();
  }
  char v61 = v17;
  uint64_t v62 = v13;
  sub_1A916BBA0();
  uint64_t v57 = v65;
  if (v65)
  {
    uint64_t v23 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16);
    v23(v22, v65 + OBJC_IVAR____TtC12AppAnalyticsP33_C30334460221130696DFAC9959A2A23920LazyDiagnosticStatus_provider, v7);
    uint64_t v24 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v24(v22, 0, 1, v7);
  }
  else
  {
    uint64_t v24 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v24(v22, 1, 1, v7);
    uint64_t v23 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16);
  }
  v23(v20, v63, v7);
  v24(v20, 0, 1, v7);
  uint64_t v25 = (uint64_t)v62;
  uint64_t v26 = (uint64_t)&v62[*(int *)(v11 + 48)];
  uint64_t v27 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1A9096E34((uint64_t)v22, (uint64_t)v62, &qword_1EB6879C0, MEMORY[0x1E4F27990]);
  sub_1A9096E34((uint64_t)v20, v26, &qword_1EB6879C0, v27);
  uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v28(v25, 1, v7) == 1)
  {
    uint64_t v29 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
    sub_1A9096DD8((uint64_t)v20, &qword_1EB6879C0, MEMORY[0x1E4F27990]);
    uint64_t v25 = (uint64_t)v62;
    sub_1A9096DD8((uint64_t)v22, &qword_1EB6879C0, v29);
    if (v28(v26, 1, v7) == 1)
    {
      uint64_t v30 = sub_1A9096DD8(v25, &qword_1EB6879C0, MEMORY[0x1E4F27990]);
      goto LABEL_16;
    }
    goto LABEL_11;
  }
  sub_1A9096E34(v25, (uint64_t)v61, &qword_1EB6879C0, MEMORY[0x1E4F27990]);
  if (v28(v26, 1, v7) == 1)
  {
    char v31 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
    sub_1A9096DD8((uint64_t)v20, &qword_1EB6879C0, MEMORY[0x1E4F27990]);
    sub_1A9096DD8((uint64_t)v22, &qword_1EB6879C0, v31);
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v61, v7);
LABEL_11:
    sub_1A9096FC4(v25, (uint64_t (*)(void))sub_1A9098F30);
    goto LABEL_12;
  }
  id v44 = v51;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 32))(v51, v26, v7);
  sub_1A9097640((unint64_t *)&qword_1EB687870, MEMORY[0x1E4F27990]);
  uint64_t v45 = (uint64_t)v61;
  int v50 = sub_1A916AF50();
  uint64_t v46 = *(void (**)(unsigned char *, uint64_t))(v8 + 8);
  v46(v44, v7);
  uint64_t v47 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1A9096DD8((uint64_t)v20, &qword_1EB6879C0, MEMORY[0x1E4F27990]);
  sub_1A9096DD8((uint64_t)v22, &qword_1EB6879C0, v47);
  v46((unsigned char *)v45, v7);
  uint64_t v30 = sub_1A9096DD8(v25, &qword_1EB6879C0, v47);
  if (v50)
  {
LABEL_16:
    uint64_t v48 = v60;
    v59(&v66, v30);
    uint64_t result = swift_release();
    if (!v48) {
      return v66;
    }
    return result;
  }
LABEL_12:
  uint64_t v32 = v52;
  sub_1A9097024(v63, (uint64_t)v52, type metadata accessor for DiagnosticsConsentProvider);
  type metadata accessor for LazyDiagnosticStatus(0);
  uint64_t v33 = swift_allocObject();
  *(unsigned char *)(v33
           + OBJC_IVAR____TtC12AppAnalyticsP33_C30334460221130696DFAC9959A2A23920LazyDiagnosticStatus____lazy_storage____status) = 2;
  char v35 = v53;
  unint64_t v34 = v54;
  unint64_t v36 = *(void **)&v54[OBJC_IVAR___AAAccessQueue_queue];
  *unint64_t v53 = v36;
  uint64_t v38 = v55;
  uint64_t v37 = v56;
  (*(void (**)(void *, void, uint64_t))(v55 + 104))(v35, *MEMORY[0x1E4FBCBF0], v56);
  id v39 = v34;
  id v40 = v36;
  LOBYTE(v36) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v38 + 8))(v35, v37);
  if (v36)
  {
    sub_1A9096EF4((uint64_t)v32, v33 + OBJC_IVAR____TtC12AppAnalyticsP33_C30334460221130696DFAC9959A2A23920LazyDiagnosticStatus_provider, type metadata accessor for DiagnosticsConsentProvider);
    *(void *)(v33 + OBJC_IVAR____TtC12AppAnalyticsP33_C30334460221130696DFAC9959A2A23920LazyDiagnosticStatus_queue) = v39;
    uint64_t v64 = v33;
    sub_1A9096EA0(0, &qword_1EB6879F8, (void (*)(uint64_t))type metadata accessor for LazyDiagnosticStatus);
    swift_retain();
    uint64_t v42 = swift_task_localValuePush();
    uint64_t v43 = v60;
    v59(&v65, v42);
    swift_task_localValuePop();
    swift_release();
    if (v43)
    {
      return swift_release();
    }
    else
    {
      swift_release();
      return v65;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A9096610@<X0>(char *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v61 = a2;
  uint64_t v59 = a4;
  uint64_t v60 = a3;
  uint64_t v55 = a1;
  uint64_t v4 = sub_1A916AE70();
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v57 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v54 = &v49[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for DiagnosticsConsentProvider(0);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v53 = &v49[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1A916ACC0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v51 = &v49[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A9098F30();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v49[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A9096EA0(0, &qword_1EB6879C0, MEMORY[0x1E4F27990]);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v52 = &v49[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = &v49[-v19];
  MEMORY[0x1F4188790](v18);
  char v22 = &v49[-v21];
  if (qword_1EB687A08 != -1) {
    swift_once();
  }
  uint64_t v62 = v14;
  sub_1A916BBA0();
  uint64_t v58 = v64;
  if (v64)
  {
    uint64_t v23 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16);
    v23(v22, v64 + OBJC_IVAR____TtC12AppAnalyticsP33_C30334460221130696DFAC9959A2A23920LazyDiagnosticStatus_provider, v8);
    uint64_t v24 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v24(v22, 0, 1, v8);
  }
  else
  {
    uint64_t v24 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v24(v22, 1, 1, v8);
    uint64_t v23 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16);
  }
  v23(v20, v63, v8);
  v24(v20, 0, 1, v8);
  uint64_t v25 = (uint64_t)v62;
  uint64_t v26 = (uint64_t)&v62[*(int *)(v12 + 48)];
  uint64_t v27 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1A9096E34((uint64_t)v22, (uint64_t)v62, &qword_1EB6879C0, MEMORY[0x1E4F27990]);
  sub_1A9096E34((uint64_t)v20, v26, &qword_1EB6879C0, v27);
  uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v28(v25, 1, v8) == 1)
  {
    uint64_t v29 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
    sub_1A9096DD8((uint64_t)v20, &qword_1EB6879C0, MEMORY[0x1E4F27990]);
    uint64_t v30 = v29;
    uint64_t v25 = (uint64_t)v62;
    sub_1A9096DD8((uint64_t)v22, &qword_1EB6879C0, v30);
    if (v28(v26, 1, v8) == 1)
    {
      uint64_t v31 = sub_1A9096DD8(v25, &qword_1EB6879C0, MEMORY[0x1E4F27990]);
LABEL_15:
      v61(v31);
      return swift_release();
    }
    goto LABEL_11;
  }
  uint64_t v32 = v52;
  sub_1A9096E34(v25, (uint64_t)v52, &qword_1EB6879C0, MEMORY[0x1E4F27990]);
  if (v28(v26, 1, v8) == 1)
  {
    uint64_t v33 = v32;
    unint64_t v34 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
    sub_1A9096DD8((uint64_t)v20, &qword_1EB6879C0, MEMORY[0x1E4F27990]);
    sub_1A9096DD8((uint64_t)v22, &qword_1EB6879C0, v34);
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v33, v8);
LABEL_11:
    sub_1A9096FC4(v25, (uint64_t (*)(void))sub_1A9098F30);
    goto LABEL_12;
  }
  uint64_t v46 = v51;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 32))(v51, v26, v8);
  sub_1A9097640((unint64_t *)&qword_1EB687870, MEMORY[0x1E4F27990]);
  int v50 = sub_1A916AF50();
  uint64_t v47 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v47(v46, v8);
  uint64_t v48 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1A9096DD8((uint64_t)v20, &qword_1EB6879C0, MEMORY[0x1E4F27990]);
  sub_1A9096DD8((uint64_t)v22, &qword_1EB6879C0, v48);
  v47(v32, v8);
  uint64_t v31 = sub_1A9096DD8(v25, &qword_1EB6879C0, v48);
  if (v50) {
    goto LABEL_15;
  }
LABEL_12:
  char v35 = v53;
  sub_1A9097024(v63, (uint64_t)v53, type metadata accessor for DiagnosticsConsentProvider);
  type metadata accessor for LazyDiagnosticStatus(0);
  uint64_t v36 = swift_allocObject();
  *(unsigned char *)(v36
           + OBJC_IVAR____TtC12AppAnalyticsP33_C30334460221130696DFAC9959A2A23920LazyDiagnosticStatus____lazy_storage____status) = 2;
  uint64_t v38 = v54;
  uint64_t v37 = v55;
  id v39 = *(void **)&v55[OBJC_IVAR___AAAccessQueue_queue];
  *uint64_t v54 = v39;
  uint64_t v41 = v56;
  uint64_t v40 = v57;
  (*(void (**)(void *, void, uint64_t))(v56 + 104))(v38, *MEMORY[0x1E4FBCBF0], v57);
  id v42 = v37;
  id v43 = v39;
  LOBYTE(v39) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v41 + 8))(v38, v40);
  if (v39)
  {
    sub_1A9096EF4((uint64_t)v35, v36 + OBJC_IVAR____TtC12AppAnalyticsP33_C30334460221130696DFAC9959A2A23920LazyDiagnosticStatus_provider, type metadata accessor for DiagnosticsConsentProvider);
    *(void *)(v36 + OBJC_IVAR____TtC12AppAnalyticsP33_C30334460221130696DFAC9959A2A23920LazyDiagnosticStatus_queue) = v42;
    uint64_t v64 = v36;
    sub_1A9096EA0(0, &qword_1EB6879F8, (void (*)(uint64_t))type metadata accessor for LazyDiagnosticStatus);
    swift_retain();
    uint64_t v45 = swift_task_localValuePush();
    v61(v45);
    swift_task_localValuePop();
    swift_release();
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9096DD8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1A9096EA0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1A9096E34(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1A9096EA0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1A9096EA0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1A916B540();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1A9096EF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A9096F5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A9096FC4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A9097024(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A909708C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A90970F4()
{
  return sub_1A9097110(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1A9097110(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_observers);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1A916B7E0();
  uint64_t v5 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = MEMORY[0x1AD0EDEF0](i, v4);
      }
      else
      {
        uint64_t v8 = *(void *)(v4 + 8 * i + 32);
        swift_retain();
      }
      if (MEMORY[0x1AD0EEDF0](v8 + 16))
      {
        swift_unknownObjectRelease();
        uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 32);
        uint64_t v10 = swift_retain();
        v9(v10, a2);
        swift_release();
      }
      swift_release();
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A909725C(uint64_t a1, uint64_t a2)
{
  return sub_1A9097264(a1, a2);
}

uint64_t sub_1A9097264(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v4 = result;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 112);
  uint64_t v20 = v5 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(v5 + 64);
  int64_t v21 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v13 = v12 | (v9 << 6);
  while (2)
  {
    uint64_t v14 = *(void *)(v5 + 56);
    uint64_t v15 = (void *)(*(void *)(v5 + 48) + 16 * v13);
    uint64_t v16 = v15[1];
    *(void *)&long long v22 = *v15;
    *((void *)&v22 + 1) = v16;
    sub_1A90A0DC8(v14 + 40 * v13, (uint64_t)&v23);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1A90A1678((uint64_t)&v22, (uint64_t)v26, &qword_1EB6897E0, &qword_1EB6897D8, &qword_1EB6897A0);
      if (!v27)
      {
        swift_release();
        return swift_release();
      }
      swift_bridgeObjectRelease();
      sub_1A908EC8C(&v28, (uint64_t)&v22);
      uint64_t v10 = *((void *)&v23 + 1);
      uint64_t v11 = v24;
      __swift_project_boxed_opaque_existential_1(&v22, *((uint64_t *)&v23 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(a2, v4, v10, v11);
      uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v22);
      if (v8) {
        goto LABEL_7;
      }
LABEL_9:
      int64_t v17 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_31;
      }
      if (v17 < v21)
      {
        unint64_t v18 = *(void *)(v20 + 8 * v17);
        if (v18) {
          goto LABEL_12;
        }
        int64_t v19 = v9 + 2;
        ++v9;
        if (v17 + 1 < v21)
        {
          unint64_t v18 = *(void *)(v20 + 8 * v19);
          if (v18) {
            goto LABEL_15;
          }
          int64_t v9 = v17 + 1;
          if (v17 + 2 < v21)
          {
            unint64_t v18 = *(void *)(v20 + 8 * (v17 + 2));
            if (v18)
            {
              v17 += 2;
              goto LABEL_12;
            }
            int64_t v19 = v17 + 3;
            int64_t v9 = v17 + 2;
            if (v17 + 3 < v21) {
              break;
            }
          }
        }
      }
LABEL_26:
      unint64_t v8 = 0;
      uint64_t v25 = 0;
      long long v23 = 0u;
      long long v24 = 0u;
      long long v22 = 0u;
    }
    unint64_t v18 = *(void *)(v20 + 8 * v19);
    if (v18)
    {
LABEL_15:
      int64_t v17 = v19;
LABEL_12:
      unint64_t v8 = (v18 - 1) & v18;
      unint64_t v13 = __clz(__rbit64(v18)) + (v17 << 6);
      int64_t v9 = v17;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v21)
    {
      int64_t v9 = v21 - 1;
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v20 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_12;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1A909751C(uint64_t a1, uint64_t a2)
{
  return sub_1A9097524(a1, a2, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16));
}

uint64_t sub_1A9097524(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6 = type metadata accessor for SessionObserverChange();
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9098C68(a2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SessionObserverChange);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v10 = 1;
  uint64_t v11 = 0;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v10 = 2;
      goto LABEL_4;
    case 2:
      uint64_t v10 = 3;
      goto LABEL_4;
    case 3:
      return a3(a1, v11);
    default:
LABEL_4:
      sub_1A9098AF0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SessionObserverChange);
      uint64_t v11 = v10;
      return a3(a1, v11);
  }
}

uint64_t sub_1A9097640(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A9097688(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A90976D0(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v73 = type metadata accessor for SequenceEntry.Kind(0);
  MEMORY[0x1F4188790](v73);
  uint64_t v83 = (long long *)((char *)v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v81 = type metadata accessor for SequenceEntry(0);
  uint64_t v7 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  int64_t v9 = (void *)((char *)v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v72 = type metadata accessor for Sequence(0);
  uint64_t v10 = *(void *)((char *)v4 + *(int *)(v72 + 28));
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11)
  {
    uint64_t v63 = (void *)MEMORY[0x1E4FBC868];
LABEL_30:
    sub_1A90A250C();
    uint64_t v90 = v64;
    *(void *)&long long v89 = v63;
    uint64_t v65 = (objc_class *)type metadata accessor for JSON();
    id v66 = objc_allocWithZone(v65);
    sub_1A909F130((uint64_t)&v89, (uint64_t)v66 + OBJC_IVAR___AAJSON_value);
    v92.receiver = v66;
    v92.super_class = v65;
    id v67 = objc_msgSendSuper2(&v92, sel_init);
    sub_1A909B5DC((uint64_t)&v89);
    return (uint64_t)v67;
  }
  id v84 = v3;
  uint64_t v76 = a1;
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = v10 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v78 = *(void *)(v7 + 72);
  uint64_t v79 = v12;
  v69[1] = v10;
  swift_bridgeObjectRetain();
  uint64_t v77 = (void *)MEMORY[0x1E4FBC868];
  long long v70 = xmmword_1A916E200;
  long long v71 = xmmword_1A916E210;
  unint64_t v80 = v4;
  unint64_t v82 = v9;
  while (1)
  {
    uint64_t v85 = v11;
    sub_1A9097EF4(v13, (uint64_t)v9, type metadata accessor for SequenceEntry);
    if (!v79) {
      break;
    }
    uint64_t v15 = *v4;
    uint64_t v14 = v4[1];
    uint64_t v16 = *(void *)(v76 + 24);
    uint64_t v18 = *v9;
    uint64_t v17 = v9[1];
    sub_1A90DDB98(0, (unint64_t *)&qword_1EB686760, (uint64_t)&type metadata for DenylistDescriptor, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 32) = 42;
    *(_OWORD *)(inited + 16) = v71;
    *(void *)(inited + 40) = 0xE100000000000000;
    *(void *)(inited + 48) = 42;
    *(void *)(inited + 56) = 0xE100000000000000;
    *(void *)(inited + 64) = 42;
    *(void *)(inited + 72) = 0xE100000000000000;
    *(void *)(inited + 80) = v15;
    *(void *)(inited + 88) = v14;
    *(void *)(inited + 96) = 42;
    *(void *)(inited + 104) = 0xE100000000000000;
    *(void *)(inited + 112) = 42;
    *(void *)(inited + 120) = 0xE100000000000000;
    *(void *)(inited + 128) = v15;
    *(void *)(inited + 136) = v14;
    *(void *)(inited + 144) = v18;
    uint64_t v4 = v80;
    *(void *)(inited + 152) = v17;
    *(void *)(inited + 160) = 42;
    *(void *)(inited + 168) = 0xE100000000000000;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1A9139678(inited);
    swift_setDeallocating();
    int64_t v9 = v82;
    swift_arrayDestroy();
    LOBYTE(v17) = sub_1A910A860(v20, *(void *)(v16 + 16));
    swift_bridgeObjectRelease();
    if (v17) {
      break;
    }
LABEL_3:
    sub_1A9099E04((uint64_t)v9, type metadata accessor for SequenceEntry);
LABEL_4:
    v13 += v78;
    uint64_t v11 = v85 - 1;
    if (v85 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v63 = v77;
      goto LABEL_30;
    }
  }
  sub_1A9097EF4((uint64_t)v9 + *(int *)(v81 + 20), (uint64_t)v83, type metadata accessor for SequenceEntry.Kind);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v90 = type metadata accessor for TimedData();
    long long v22 = type metadata accessor for TimedData;
    long long v23 = (unint64_t *)&qword_1EB6893C8;
    goto LABEL_11;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v90 = type metadata accessor for EventData();
    long long v22 = type metadata accessor for EventData;
    long long v23 = (unint64_t *)&unk_1EB688B50;
LABEL_11:
    uint64_t v91 = sub_1A909A710(v23, (void (*)(uint64_t))v22);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v89);
    sub_1A909A6A8((uint64_t)v83, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v22);
    goto LABEL_13;
  }
  sub_1A908EC8C(v83, (uint64_t)&v89);
LABEL_13:
  uint64_t v25 = v90;
  uint64_t v26 = v91;
  __swift_project_boxed_opaque_existential_1(&v89, v90);
  uint64_t v27 = (char *)v4 + *(int *)(v72 + 24);
  char v28 = *v27;
  uint64_t v29 = *((void *)v27 + 1);
  char v30 = v27[16];
  LOBYTE(v27) = v27[17];
  LOBYTE(v86) = v28;
  *((void *)&v86 + 1) = v29;
  char v87 = v30;
  char v88 = (char)v27;
  uint64_t v31 = v84;
  uint64_t v32 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v26 + 48))(&v86, v25, v26);
  if (v31)
  {
    uint64_t v75 = v13;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v89);
    if (qword_1EB68ACE8 != -1) {
      swift_once();
    }
    id v84 = (id)qword_1EB689AA0;
    int v74 = sub_1A916B3C0();
    sub_1A90CA164();
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = v70;
    *(void *)&long long v89 = 0;
    *((void *)&v89 + 1) = 0xE000000000000000;
    *(void *)&long long v86 = v31;
    sub_1A908E870(0, (unint64_t *)&qword_1EB689860);
    sub_1A916B780();
    unint64_t v35 = *((void *)&v89 + 1);
    unint64_t v34 = v89;
    uint64_t v36 = MEMORY[0x1E4FBB1A0];
    *(void *)(v33 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v37 = sub_1A90A67C0();
    *(void *)(v33 + 64) = v37;
    *(_OWORD *)(v33 + 32) = __PAIR128__(v35, v34);
    *(void *)&long long v89 = 0;
    *((void *)&v89 + 1) = 0xE000000000000000;
    uint64_t v38 = (uint64_t)v82;
    sub_1A916B780();
    long long v39 = v89;
    *(void *)(v33 + 96) = v36;
    *(void *)(v33 + 104) = v37;
    *(_OWORD *)(v33 + 72) = v39;
    uint64_t v40 = v84;
    int64_t v9 = (uint64_t *)v38;
    sub_1A916AD30();

    swift_bridgeObjectRelease();
    sub_1A9099E04(v38, type metadata accessor for SequenceEntry);
    id v84 = 0;
    uint64_t v4 = v80;
    uint64_t v13 = v75;
    goto LABEL_4;
  }
  uint64_t v41 = v32;
  uint64_t v42 = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v89);
  MEMORY[0x1F4188790](v42);
  v69[-4] = v76;
  v69[-3] = v9;
  v69[-2] = v4;
  uint64_t v43 = sub_1A9099348(v41, (uint64_t (*)(uint64_t, uint64_t, unsigned char *))sub_1A9099688, (uint64_t)&v69[-6]);
  id v84 = 0;
  swift_bridgeObjectRelease();
  id v44 = v9;
  uint64_t v45 = *v9;
  uint64_t v46 = v44[1];
  sub_1A90A250C();
  uint64_t v90 = v47;
  *(void *)&long long v89 = v43;
  sub_1A90A1A68(&v89, &v86);
  swift_bridgeObjectRetain();
  uint64_t v48 = v77;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v93 = v48;
  unint64_t v51 = sub_1A90A1D98(v45, v46);
  uint64_t v52 = v48[2];
  BOOL v53 = (v50 & 1) == 0;
  uint64_t v54 = v52 + v53;
  if (!__OFADD__(v52, v53))
  {
    char v55 = v50;
    if (v48[3] >= v54)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1A90BF480();
      }
    }
    else
    {
      sub_1A90A1740(v54, isUniquelyReferenced_nonNull_native);
      unint64_t v56 = sub_1A90A1D98(v45, v46);
      if ((v55 & 1) != (v57 & 1)) {
        goto LABEL_33;
      }
      unint64_t v51 = v56;
    }
    uint64_t v77 = v93;
    if (v55)
    {
      uint64_t v58 = (_OWORD *)(v93[7] + 32 * v51);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
      sub_1A90A1A68(&v86, v58);
    }
    else
    {
      v93[(v51 >> 6) + 8] |= 1 << v51;
      uint64_t v59 = (uint64_t *)(v77[6] + 16 * v51);
      *uint64_t v59 = v45;
      v59[1] = v46;
      sub_1A90A1A68(&v86, (_OWORD *)(v77[7] + 32 * v51));
      uint64_t v60 = v77[2];
      BOOL v61 = __OFADD__(v60, 1);
      uint64_t v62 = v60 + 1;
      if (v61) {
        goto LABEL_32;
      }
      v77[2] = v62;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v9 = v82;
    goto LABEL_3;
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  uint64_t result = sub_1A916BA50();
  __break(1u);
  return result;
}

uint64_t sub_1A9097EF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *sub_1A9097F5C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  type metadata accessor for SequenceEntry.Kind(0);
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    long long v26 = *(_OWORD *)(v7 + 24);
    *(_OWORD *)(v6 + 24) = v26;
    (**(void (***)(char *, char *))(v26 - 8))(v6, v7);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = *((void *)v7 + 1);
    *(void *)uint64_t v6 = *(void *)v7;
    *((void *)v6 + 1) = v9;
    uint64_t v10 = (int *)type metadata accessor for EventData();
    uint64_t v11 = v10[5];
    uint64_t v31 = &v7[v11];
    uint64_t v32 = &v6[v11];
    uint64_t v12 = sub_1A916AC90();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v32, v31, v12);
    uint64_t v14 = v10[6];
    uint64_t v15 = &v6[v14];
    uint64_t v16 = &v7[v14];
    uint64_t v17 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    uint64_t v18 = v10[7];
    int64_t v19 = &v6[v18];
    uint64_t v20 = &v7[v18];
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)int64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    uint64_t v22 = v10[8];
    long long v23 = &v6[v22];
    long long v24 = &v7[v22];
    uint64_t v25 = *((void *)v24 + 1);
    *(void *)long long v23 = *(void *)v24;
    *((void *)v23 + 1) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v27 = sub_1A916AC90();
    char v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
    v28(v6, v7, v27);
    uint64_t v29 = type metadata accessor for TimedData();
    v28(&v6[*(int *)(v29 + 20)], &v7[*(int *)(v29 + 20)], v27);
    *(void *)&v6[*(int *)(v29 + 24)] = *(void *)&v7[*(int *)(v29 + 24)];
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1A9098170(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for SequenceEntry.Kind(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      return __swift_destroy_boxed_opaque_existential_0(v4);
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v8 = v4 + *(int *)(type metadata accessor for EventData() + 20);
      uint64_t v9 = sub_1A916AC90();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 0:
      uint64_t v6 = sub_1A916AC90();
      uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
      ((void (*)(void *__return_ptr, uint64_t, uint64_t))v10)((void *)(v6 - 8), v4, v6);
      uint64_t v7 = v4 + *(int *)(type metadata accessor for TimedData() + 20);
      return v10(v7, v6);
  }
  return result;
}

uint64_t type metadata accessor for SequenceEntry.Kind(uint64_t a1)
{
  return sub_1A9098ED8(a1, qword_1EB687530);
}

uint64_t type metadata accessor for EventData()
{
  uint64_t result = qword_1EB6893B8;
  if (!qword_1EB6893B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A909837C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  char v55 = a5;
  uint64_t v56 = a3;
  uint64_t v57 = a4;
  uint64_t v60 = a2;
  unint64_t v51 = a1;
  uint64_t v54 = a6;
  uint64_t v6 = sub_1A916AE70();
  uint64_t v52 = *(void *)(v6 - 8);
  uint64_t v53 = v6;
  MEMORY[0x1F4188790](v6);
  char v50 = (uint64_t *)((char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for DiagnosticsConsentProvider(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v49 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A916ACC0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v47 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9098F30();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9098C34(0);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  long long v23 = (char *)&v46 - v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v46 - v24;
  if (qword_1EB687A08 != -1) {
    swift_once();
  }
  uint64_t v48 = v20;
  uint64_t v59 = v16;
  sub_1A916BBA0();
  uint64_t v58 = v61;
  if (v61)
  {
    long long v26 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v26(v25, v61 + OBJC_IVAR____TtC12AppAnalyticsP33_C30334460221130696DFAC9959A2A23920LazyDiagnosticStatus_provider, v10);
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v27(v25, 0, 1, v10);
  }
  else
  {
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v27(v25, 1, 1, v10);
    long long v26 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  }
  v26(v23, v60, v10);
  v27(v23, 0, 1, v10);
  uint64_t v28 = (uint64_t)v59;
  uint64_t v29 = (uint64_t)&v59[*(int *)(v14 + 48)];
  sub_1A9098CD0((uint64_t)v25, (uint64_t)v59, (uint64_t (*)(void))sub_1A9098C34);
  sub_1A9098CD0((uint64_t)v23, v29, (uint64_t (*)(void))sub_1A9098C34);
  char v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v30(v28, 1, v10) == 1)
  {
    sub_1A9098B50((uint64_t)v23, (uint64_t (*)(void))sub_1A9098C34);
    sub_1A9098B50((uint64_t)v25, (uint64_t (*)(void))sub_1A9098C34);
    if (v30(v29, 1, v10) == 1)
    {
      sub_1A9098B50(v28, (uint64_t (*)(void))sub_1A9098C34);
LABEL_15:
      sub_1A90A0660(v56, v57, v55);
      goto LABEL_16;
    }
    goto LABEL_11;
  }
  uint64_t v31 = (uint64_t)v48;
  sub_1A9098CD0(v28, (uint64_t)v48, (uint64_t (*)(void))sub_1A9098C34);
  if (v30(v29, 1, v10) == 1)
  {
    sub_1A9098B50((uint64_t)v23, (uint64_t (*)(void))sub_1A9098C34);
    sub_1A9098B50((uint64_t)v25, (uint64_t (*)(void))sub_1A9098C34);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v31, v10);
LABEL_11:
    sub_1A9098B50(v28, (uint64_t (*)(void))sub_1A9098F30);
    goto LABEL_12;
  }
  uint64_t v42 = v31;
  uint64_t v43 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v47, v29, v10);
  sub_1A90AD134();
  char v44 = sub_1A916AF50();
  uint64_t v45 = *(void (**)(char *, uint64_t))(v11 + 8);
  v45(v43, v10);
  sub_1A9098B50((uint64_t)v23, (uint64_t (*)(void))sub_1A9098C34);
  sub_1A9098B50((uint64_t)v25, (uint64_t (*)(void))sub_1A9098C34);
  v45((char *)v42, v10);
  sub_1A9098B50(v28, (uint64_t (*)(void))sub_1A9098C34);
  if (v44) {
    goto LABEL_15;
  }
LABEL_12:
  uint64_t v32 = v49;
  sub_1A9098CD0(v60, v49, type metadata accessor for DiagnosticsConsentProvider);
  type metadata accessor for LazyDiagnosticStatus(0);
  uint64_t v33 = swift_allocObject();
  *(unsigned char *)(v33
           + OBJC_IVAR____TtC12AppAnalyticsP33_C30334460221130696DFAC9959A2A23920LazyDiagnosticStatus____lazy_storage____status) = 2;
  unint64_t v35 = v50;
  unint64_t v34 = v51;
  uint64_t v36 = *(void **)&v51[OBJC_IVAR___AAAccessQueue_queue];
  *char v50 = v36;
  uint64_t v38 = v52;
  uint64_t v37 = v53;
  (*(void (**)(void *, void, uint64_t))(v52 + 104))(v35, *MEMORY[0x1E4FBCBF0], v53);
  id v39 = v34;
  id v40 = v36;
  LOBYTE(v36) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v38 + 8))(v35, v37);
  if (v36)
  {
    sub_1A9099290(v32, v33 + OBJC_IVAR____TtC12AppAnalyticsP33_C30334460221130696DFAC9959A2A23920LazyDiagnosticStatus_provider);
    *(void *)(v33 + OBJC_IVAR____TtC12AppAnalyticsP33_C30334460221130696DFAC9959A2A23920LazyDiagnosticStatus_queue) = v39;
    uint64_t v61 = v33;
    sub_1A90992F4(0);
    swift_retain();
    swift_task_localValuePush();
    sub_1A90A0660(v56, v57, v55);
    swift_task_localValuePop();
    swift_release();
LABEL_16:
    swift_release();
    swift_release();
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9098A90(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A9098AF0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A9098B50(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for DiagnosticsConsentProvider(uint64_t a1)
{
  return sub_1A9098ED8(a1, (uint64_t *)&unk_1EB6880B0);
}

void sub_1A9098BD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1A9098C34(uint64_t a1)
{
}

uint64_t sub_1A9098C68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A9098CD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A9098D38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A9098DA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A9098E08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A9098E70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A9098ED8(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for SessionManager.SessionState(uint64_t a1)
{
  return sub_1A9098ED8(a1, qword_1EB689EA8);
}

void sub_1A9098F30()
{
  if (!qword_1EB6879C8)
  {
    sub_1A9096EA0(255, &qword_1EB6879C0, MEMORY[0x1E4F27990]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB6879C8);
    }
  }
}

uint64_t initializeWithCopy for DiagnosticsConsentProvider(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A916ACC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  unint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *unint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  return a1;
}

uint64_t destroy for DiagnosticsConsentProvider(uint64_t a1)
{
  uint64_t v2 = sub_1A916ACC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

void *sub_1A90990B0(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2 + 4;
    unint64_t v10 = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10 >= 3)
    {
      a1[4] = *v9;
      a1[5] = v10;
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)a1 + 2) = *(_OWORD *)v9;
    }
    uint64_t v11 = type metadata accessor for Session();
    uint64_t v12 = *(int *)(v11 + 28);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1A916AC90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    *(void *)((char *)a1 + *(int *)(v11 + 32)) = *(void *)((char *)a2 + *(int *)(v11 + 32));
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  if (!EnumCaseMultiPayload)
  {
    *a1 = *a2;
    swift_retain();
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t type metadata accessor for SessionObserverChange()
{
  uint64_t result = qword_1EB689700;
  if (!qword_1EB689700) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for SummaryEventConfiguration(uint64_t a1)
{
  return sub_1A9098ED8(a1, (uint64_t *)&unk_1EB6886A8);
}

uint64_t type metadata accessor for LazyDiagnosticStatus(uint64_t a1)
{
  return sub_1A9098ED8(a1, (uint64_t *)&unk_1EB6879E8);
}

uint64_t sub_1A9099290(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DiagnosticsConsentProvider(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1A90992F4(uint64_t a1)
{
}

uint64_t type metadata accessor for Sequence(uint64_t a1)
{
  return sub_1A9098ED8(a1, (uint64_t *)&unk_1EB687F48);
}

uint64_t sub_1A9099348(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t, uint64_t, unsigned char *), uint64_t a3)
{
  uint64_t v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E4F143B8];
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = sub_1A90994C0((uint64_t)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, v6, a2);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_1A90994C0((uint64_t)v11, v8, v6, a2);
    MEMORY[0x1AD0EECA0](v11, -1, -1);
  }
  return a3;
}

uint64_t sub_1A90994C0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, unsigned char *))
{
  uint64_t v21 = (unint64_t *)result;
  uint64_t v22 = 0;
  int64_t v6 = 0;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v16 >= v10) {
      return sub_1A90996E8(v21, a2, v22, a3);
    }
    unint64_t v17 = *(void *)(v24 + 8 * v16);
    ++v6;
    if (!v17)
    {
      int64_t v6 = v16 + 1;
      if (v16 + 1 >= v10) {
        return sub_1A90996E8(v21, a2, v22, a3);
      }
      unint64_t v17 = *(void *)(v24 + 8 * v6);
      if (!v17) {
        break;
      }
    }
LABEL_18:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v12 = __clz(__rbit64(v17)) + (v6 << 6);
LABEL_5:
    uint64_t v13 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v12);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    sub_1A90A24B0(*(void *)(a3 + 56) + 32 * v12, (uint64_t)v23);
    swift_bridgeObjectRetain();
    LOBYTE(v14) = a4(v14, v15, v23);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
    uint64_t result = swift_bridgeObjectRelease();
    if (v14)
    {
      *(unint64_t *)((char *)v21 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v22++, 1))
      {
        __break(1u);
        return sub_1A90996E8(v21, a2, v22, a3);
      }
    }
  }
  int64_t v18 = v16 + 2;
  if (v18 >= v10) {
    return sub_1A90996E8(v21, a2, v22, a3);
  }
  unint64_t v17 = *(void *)(v24 + 8 * v18);
  if (v17)
  {
    int64_t v6 = v18;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v6 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v6 >= v10) {
      return sub_1A90996E8(v21, a2, v22, a3);
    }
    unint64_t v17 = *(void *)(v24 + 8 * v6);
    ++v18;
    if (v17) {
      goto LABEL_18;
    }
  }
LABEL_24:
  __break(1u);
  return result;
}

BOOL sub_1A9099688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A9099694(a1, a2, a3, *(void *)(v3 + 16), *(uint64_t **)(v3 + 24), *(uint64_t **)(v3 + 32));
}

BOOL sub_1A9099694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6)
{
  return !*(void *)(a4 + 16) || !sub_1A90F1218(*a6, a6[1], *a5, a5[1], a1, a2);
}

uint64_t sub_1A90996E8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_1A90A1A78(0, &qword_1EB689850, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBD58]);
  uint64_t result = sub_1A916B810();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v30) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        uint64_t v10 = v14 + 1;
        if (v14 + 1 >= v30) {
          return v8;
        }
        unint64_t v15 = a1[v10];
        if (!v15)
        {
          uint64_t v16 = v14 + 2;
          if (v16 >= v30) {
            return v8;
          }
          unint64_t v15 = a1[v16];
          if (!v15)
          {
            while (1)
            {
              uint64_t v10 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_39;
              }
              if (v10 >= v30) {
                return v8;
              }
              unint64_t v15 = a1[v10];
              ++v16;
              if (v15) {
                goto LABEL_22;
              }
            }
          }
          uint64_t v10 = v16;
        }
      }
LABEL_22:
      unint64_t v9 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1A90A24B0(*(void *)(v4 + 56) + 32 * v13, (uint64_t)v33);
    sub_1A90A1A68(v33, v32);
    sub_1A916BAB0();
    swift_bridgeObjectRetain();
    sub_1A916B030();
    uint64_t result = sub_1A916BAD0();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *uint64_t v28 = v19;
    v28[1] = v18;
    uint64_t result = (uint64_t)sub_1A90A1A68(v32, (_OWORD *)(*(void *)(v8 + 56) + 32 * v23));
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v8;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1A90999AC(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  if (a3)
  {
    unint64_t v12 = *(void *)(a4 + 24);
    uint64_t v13 = v12 >> 1;
    if ((uint64_t)(v12 >> 1) < a2)
    {
      if (v13 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v12 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v13 = a2;
      }
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v13 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v13;
  }
  if (!v15)
  {
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1A9099C68(0, a5, a6, MEMORY[0x1E4FBBE00]);
  uint64_t v16 = *(void *)(a7(0) - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = (void *)swift_allocObject();
  size_t v20 = _swift_stdlib_malloc_size(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (BOOL v21 = v17 == -1) : (BOOL v21 = 0), v21))
  {
LABEL_29:
    uint64_t result = sub_1A916B7B0();
    __break(1u);
    return result;
  }
  v19[2] = v14;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  uint64_t v22 = *(void *)(a7(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v19 + v23;
  if (a1)
  {
    if ((unint64_t)v19 < a4 || v24 >= a4 + v23 + *(void *)(v22 + 72) * v14)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1A909A458(0, v14, v24, a4, a8);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v19;
}

uint64_t type metadata accessor for SequenceEntry(uint64_t a1)
{
  return sub_1A9098ED8(a1, qword_1EB6875D8);
}

void sub_1A9099C68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t initializeWithCopy for SummaryEventConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)(a1 + v4);
  int64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_1A916AAD0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(0);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t type metadata accessor for SummaryEventConfiguration.StorageURLOptions(uint64_t a1)
{
  return sub_1A9098ED8(a1, (uint64_t *)&unk_1EB688660);
}

uint64_t sub_1A9099E04(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A9099E64(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    long long v24 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v24;
    (**(void (***)(uint64_t, uint64_t))(v24 - 8))(a1, a2);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v5;
    int64_t v6 = (int *)type metadata accessor for EventData();
    uint64_t v7 = v6[5];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = a2 + v7;
    uint64_t v10 = sub_1A916AC90();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    uint64_t v12 = v6[6];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = v6[7];
    uint64_t v17 = (void *)(a1 + v16);
    unint64_t v18 = (void *)(a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = v6[8];
    BOOL v21 = (void *)(a1 + v20);
    uint64_t v22 = (void *)(a2 + v20);
    uint64_t v23 = v22[1];
    *BOOL v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v25 = sub_1A916AC90();
    BOOL v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
    v26(a1, a2, v25);
    uint64_t v27 = type metadata accessor for TimedData();
    v26(a1 + *(int *)(v27 + 20), a2 + *(int *)(v27 + 20), v25);
    *(void *)(a1 + *(int *)(v27 + 24)) = *(void *)(a2 + *(int *)(v27 + 24));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1A909A064(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 40) >= 3uLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v3 = a1 + *(int *)(type metadata accessor for Session() + 28);
    uint64_t v4 = sub_1A916AC90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
    return swift_bridgeObjectRelease();
  }
  else if (result <= 1)
  {
    return swift_release();
  }
  return result;
}

void *sub_1A909A15C(void *a1, void *a2, uint64_t a3)
{
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2 + 4;
    unint64_t v10 = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10 >= 3)
    {
      a1[4] = *v9;
      a1[5] = v10;
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)a1 + 2) = *(_OWORD *)v9;
    }
    uint64_t v11 = type metadata accessor for Session();
    uint64_t v12 = *(int *)(v11 + 28);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1A916AC90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    *(void *)((char *)a1 + *(int *)(v11 + 32)) = *(void *)((char *)a2 + *(int *)(v11 + 32));
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload <= 1)
  {
    *a1 = *a2;
    swift_retain();
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t destroy for EventData(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1A916AC90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t destroy for SummaryEventConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1A916AAD0();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

uint64_t sub_1A909A458(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

void *initializeWithCopy for EventData(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A916AC90();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)((char *)a1 + v13);
  unint64_t v18 = (void *)((char *)a2 + v13);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a3[8];
  BOOL v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v23 = v22[1];
  *BOOL v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A909A6A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A909A710(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A909A758(double *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A909A784(a1, a2, a3, (uint64_t (*)(void, void, double))sub_1A909E9D8);
}

uint64_t sub_1A909A784(double *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void, double))
{
  return a4(*(unsigned __int8 *)a1, *((unsigned __int8 *)a1 + 16) | (*((unsigned __int8 *)a1 + 17) << 8), a1[1]);
}

uint64_t sub_1A909A7B4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1A916AC90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A909A840(uint64_t result, uint64_t a2)
{
  return sub_1A909A848(result, a2);
}

uint64_t sub_1A909A848(uint64_t result, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) >= 2)
  {
    if (a2 && a2 != 3)
    {
      uint64_t result = sub_1A916BA20();
      __break(1u);
    }
  }
  else
  {
    uint64_t v2 = result;
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      sub_1A90A0DC8(result + OBJC_IVAR____TtC12AppAnalytics7Tracker_summaryEventManager, (uint64_t)v5);
      swift_release();
      uint64_t v3 = v6;
      uint64_t v4 = v7;
      __swift_project_boxed_opaque_existential_1(v5, v6);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v3, v4);
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    }
  }
  return result;
}

void sub_1A909A938()
{
  sub_1A9091AF4(*(char **)(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void (**)(uint64_t *))(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1A909A990@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A909A9A8(a1);
}

uint64_t sub_1A909A9A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A909A9C4(*(void *)(v1 + 16), *(uint64_t **)(v1 + 24), a1);
}

uint64_t sub_1A909A9C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  type metadata accessor for PrivacySequenceValidator();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = a1;
  if (a1) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = MEMORY[0x1E4FBC870];
  }
  type metadata accessor for DenylistDescriptorMatcher();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(void *)(inited + 24) = v10;
  if (!a1) {
    goto LABEL_6;
  }
  uint64_t v11 = v10;
  uint64_t v12 = a3;
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  sub_1A909B78C(0, (unint64_t *)&qword_1EB686760, (uint64_t)&type metadata for DenylistDescriptor, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1A916E200;
  *(void *)(v15 + 32) = 42;
  *(void *)(v15 + 40) = 0xE100000000000000;
  *(void *)(v15 + 48) = 42;
  *(void *)(v15 + 56) = 0xE100000000000000;
  *(void *)(v15 + 64) = 42;
  *(void *)(v15 + 72) = 0xE100000000000000;
  *(void *)(v15 + 80) = v13;
  a3 = v12;
  *(void *)(v15 + 88) = v14;
  *(void *)(v15 + 96) = 42;
  *(void *)(v15 + 104) = 0xE100000000000000;
  *(void *)(v15 + 112) = 42;
  *(void *)(v15 + 120) = 0xE100000000000000;
  swift_bridgeObjectRetain_n();
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1A9139678(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  char v17 = sub_1A910A860(v16, *(void *)(v11 + 16));
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    uint64_t v18 = 0;
  }
  else
  {
LABEL_6:
    uint64_t v18 = sub_1A90976D0(inited);
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v4) {
      return result;
    }
  }
  *a3 = v18;
  return result;
}

uint64_t type metadata accessor for JSON()
{
  return self;
}

uint64_t sub_1A909ABC4(uint64_t a1)
{
  sub_1A909CF9C();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = sub_1A916AAD0();
    uint64_t v6 = *(void *)(v4 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v4);
    if (!result)
    {
      uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
      return v5(a1, v4);
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SummaryEventConfiguration.StorageURLOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A90AE820);
}

uint64_t type metadata accessor for DenylistDescriptorMatcher()
{
  return self;
}

uint64_t type metadata accessor for PrivacySequenceValidator()
{
  return self;
}

uint64_t sub_1A909AD30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1A916AE70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)(*(void *)(v3 + 32) + OBJC_IVAR___AAAccessQueue_queue);
  void *v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBF0], v7);
  id v12 = v11;
  LOBYTE(v11) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    swift_beginAccess();
    uint64_t result = *(void *)(v3 + 48);
    uint64_t v14 = *(void *)(result + 16);
    if (v14)
    {
      uint64_t v19 = swift_bridgeObjectRetain();
      uint64_t v15 = (uint64_t *)(v19 + 40);
      do
      {
        uint64_t v16 = *v15;
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8);
        swift_unknownObjectRetain();
        v18(a1, a2, a3, ObjectType, v16);
        swift_unknownObjectRelease();
        v15 += 2;
        --v14;
      }
      while (v14);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1A909AEEC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1A916BB00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getMetatypeMetadata();
  uint64_t v34 = sub_1A916BBB0();
  uint64_t v10 = v9;
  uint64_t v11 = (void *)(v2 + 16);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v2 + 16);
  if (*(void *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_1A90A1D98(v34, v10);
    if (v14)
    {
      uint64_t v15 = *(void **)(*(void *)(v12 + 56) + 8 * v13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      return v15;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v32 = v6;
  uint64_t v33 = v5;
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(a2 + 40);
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  __swift_allocate_boxed_opaque_existential_1(v43);
  v16(a1, a2);
  uint64_t v17 = v44;
  uint64_t v18 = __swift_project_boxed_opaque_existential_1(v43, v44);
  *((void *)&v40 + 1) = v17;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v39);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(boxed_opaque_existential_1, v18, v17);
  sub_1A916BAE0();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
  sub_1A916BAF0();
  sub_1A909B514();
  uint64_t v20 = sub_1A916B770();
  swift_release();
  uint64_t v21 = *(void *)(v20 + 16);
  if (v21)
  {
    uint64_t v22 = v20 + 32;
    swift_bridgeObjectRetain();
    uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1A909B4B0(v22, (uint64_t)v43);
      sub_1A909B56C((uint64_t)v43, (uint64_t)&v39);
      if (*((void *)&v39 + 1))
      {
        long long v35 = v39;
        long long v36 = v40;
        long long v37 = v41;
        uint64_t v38 = v42;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v15 = sub_1A909B364(0, v15[2] + 1, 1, v15);
        }
        unint64_t v24 = v15[2];
        unint64_t v23 = v15[3];
        if (v24 >= v23 >> 1) {
          uint64_t v15 = sub_1A909B364((void *)(v23 > 1), v24 + 1, 1, v15);
        }
        void v15[2] = v24 + 1;
        uint64_t v25 = &v15[7 * v24];
        long long v26 = v35;
        long long v27 = v36;
        long long v28 = v37;
        v25[10] = v38;
        *((_OWORD *)v25 + 3) = v27;
        *((_OWORD *)v25 + 4) = v28;
        *((_OWORD *)v25 + 2) = v26;
      }
      else
      {
        sub_1A9106164((uint64_t)&v39, (uint64_t (*)(void))sub_1A909B514);
      }
      v22 += 56;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v39 = *v11;
  void *v11 = 0x8000000000000000;
  sub_1A909B824((uint64_t)v15, v34, v10, isUniquelyReferenced_nonNull_native);
  void *v11 = v39;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v33);
  return v15;
}

void *sub_1A909B364(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A909B6AC(0, &qword_1EB6894B8, (uint64_t)&type metadata for EventMirrorProperty, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      long long v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A909BD4C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A909B4B0(uint64_t a1, uint64_t a2)
{
  sub_1A909B514();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1A909B514()
{
  if (!qword_1EB686D40)
  {
    unint64_t v0 = sub_1A916B540();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB686D40);
    }
  }
}

uint64_t sub_1A909B56C(uint64_t a1, uint64_t a2)
{
  sub_1A909B514();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *sub_1A909B5D0(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

uint64_t sub_1A909B5DC(uint64_t a1)
{
  sub_1A909B660(0, (unint64_t *)&qword_1EB68A928, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1A909B660(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1A909B6AC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1A909B6F8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1A916B540();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_1A909B740(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1A909B78C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1A909B7D8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1A909B824(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1A90A1D98(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1A90BFEC0();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1A909BD30(v15, a4 & 1);
  unint64_t v21 = sub_1A90A1D98(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_1A916BA50();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A909B994(uint64_t a1, char a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v8 = *v5;
  sub_1A909BCB4(0, a3, a4, a5);
  char v39 = a2;
  uint64_t v9 = sub_1A916B800();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_40;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v38 = v8 + 64;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v8 + 64);
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v14 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v22 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v23 = v22 | (v16 << 6);
      goto LABEL_31;
    }
    int64_t v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v24 >= v37) {
      break;
    }
    BOOL v25 = (void *)(v8 + 64);
    unint64_t v26 = *(void *)(v38 + 8 * v24);
    ++v16;
    if (!v26)
    {
      int64_t v16 = v24 + 1;
      if (v24 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v26 = *(void *)(v38 + 8 * v16);
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v37)
        {
LABEL_33:
          swift_release();
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v26 = *(void *)(v38 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            int64_t v16 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_42;
            }
            if (v16 >= v37) {
              goto LABEL_33;
            }
            unint64_t v26 = *(void *)(v38 + 8 * v16);
            ++v27;
            if (v26) {
              goto LABEL_30;
            }
          }
        }
        int64_t v16 = v27;
      }
    }
LABEL_30:
    unint64_t v13 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v16 << 6);
LABEL_31:
    uint64_t v32 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v23);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = *(void *)(*(void *)(v8 + 56) + 8 * v23);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1A916BAB0();
    sub_1A916B030();
    uint64_t result = sub_1A916BAD0();
    uint64_t v17 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v18 = result & ~v17;
    unint64_t v19 = v18 >> 6;
    if (((-1 << v18) & ~*(void *)(v14 + 8 * (v18 >> 6))) != 0)
    {
      unint64_t v20 = __clz(__rbit64((-1 << v18) & ~*(void *)(v14 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v30 = v19 == v29;
        if (v19 == v29) {
          unint64_t v19 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v14 + 8 * v19);
      }
      while (v31 == -1);
      unint64_t v20 = __clz(__rbit64(~v31)) + (v19 << 6);
    }
    *(void *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    unint64_t v21 = (void *)(*(void *)(v10 + 48) + 16 * v20);
    *unint64_t v21 = v34;
    v21[1] = v33;
    *(void *)(*(void *)(v10 + 56) + 8 * v20) = v35;
    ++*(void *)(v10 + 16);
  }
  swift_release();
  BOOL v25 = (void *)(v8 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
  if (v36 >= 64) {
    bzero(v25, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *BOOL v25 = -1 << v36;
  }
  *(void *)(v8 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v6 = v10;
  return result;
}

void sub_1A909BCB4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_1A909B660(255, a3, a4, MEMORY[0x1E4FBB320]);
    unint64_t v5 = sub_1A916B820();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1A909BD30(uint64_t a1, char a2)
{
  return sub_1A909B994(a1, a2, &qword_1EB688C38, &qword_1EB689470, (uint64_t)&type metadata for EventMirrorProperty);
}

uint64_t sub_1A909BD4C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

uint64_t sub_1A909BE44()
{
  return sub_1A909BE50(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1A909BE50(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v6 = *(void *)(a1 + 16) + OBJC_IVAR____TtC12AppAnalytics7Tracker_diagnosticsConsentProvider;
  uint64_t v7 = *(char **)(a1 + 48);
  swift_retain();
  swift_retain();
  return sub_1A909BED4(v7, v6, a2, a3, a1);
}

uint64_t sub_1A909BED4(char *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v56 = a5;
  uint64_t v54 = a3;
  uint64_t v55 = a4;
  uint64_t v58 = a2;
  char v50 = a1;
  uint64_t v5 = sub_1A916AE70();
  uint64_t v51 = *(void *)(v5 - 8);
  uint64_t v52 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v49 = (char **)((char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for DiagnosticsConsentProvider(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v48 = (uint64_t)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A916ACC0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v46 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9098F30();
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9098C34(0);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  unint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  unint64_t v22 = (char *)&v46 - v21;
  MEMORY[0x1F4188790](v20);
  int64_t v24 = (char *)&v46 - v23;
  if (qword_1EB687A08 != -1) {
    swift_once();
  }
  uint64_t v47 = v19;
  uint64_t v57 = v15;
  sub_1A916BBA0();
  uint64_t v53 = v59;
  if (v59)
  {
    BOOL v25 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v25(v24, v59 + OBJC_IVAR____TtC12AppAnalyticsP33_C30334460221130696DFAC9959A2A23920LazyDiagnosticStatus_provider, v9);
    unint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v26(v24, 0, 1, v9);
  }
  else
  {
    unint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v26(v24, 1, 1, v9);
    BOOL v25 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  }
  v25(v22, v58, v9);
  v26(v22, 0, 1, v9);
  uint64_t v27 = (uint64_t)v57;
  uint64_t v28 = (uint64_t)&v57[*(int *)(v13 + 48)];
  sub_1A9098CD0((uint64_t)v24, (uint64_t)v57, (uint64_t (*)(void))sub_1A9098C34);
  sub_1A9098CD0((uint64_t)v22, v28, (uint64_t (*)(void))sub_1A9098C34);
  unint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (v29(v27, 1, v9) == 1)
  {
    sub_1A9098B50((uint64_t)v22, (uint64_t (*)(void))sub_1A9098C34);
    sub_1A9098B50((uint64_t)v24, (uint64_t (*)(void))sub_1A9098C34);
    if (v29(v28, 1, v9) == 1)
    {
      sub_1A9098B50(v27, (uint64_t (*)(void))sub_1A9098C34);
LABEL_15:
      type metadata accessor for AccessSessionManager();
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = v56;
      swift_retain();
      v54(v45);
      goto LABEL_16;
    }
    goto LABEL_11;
  }
  uint64_t v30 = (uint64_t)v47;
  sub_1A9098CD0(v27, (uint64_t)v47, (uint64_t (*)(void))sub_1A9098C34);
  if (v29(v28, 1, v9) == 1)
  {
    sub_1A9098B50((uint64_t)v22, (uint64_t (*)(void))sub_1A9098C34);
    sub_1A9098B50((uint64_t)v24, (uint64_t (*)(void))sub_1A9098C34);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v30, v9);
LABEL_11:
    sub_1A9098B50(v27, (uint64_t (*)(void))sub_1A9098F30);
    goto LABEL_12;
  }
  uint64_t v42 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v46, v28, v9);
  sub_1A90AD134();
  char v43 = sub_1A916AF50();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v10 + 8);
  v44(v42, v9);
  sub_1A9098B50((uint64_t)v22, (uint64_t (*)(void))sub_1A9098C34);
  sub_1A9098B50((uint64_t)v24, (uint64_t (*)(void))sub_1A9098C34);
  v44((char *)v30, v9);
  sub_1A9098B50(v27, (uint64_t (*)(void))sub_1A9098C34);
  if (v43) {
    goto LABEL_15;
  }
LABEL_12:
  uint64_t v31 = v48;
  sub_1A9098CD0(v58, v48, type metadata accessor for DiagnosticsConsentProvider);
  type metadata accessor for LazyDiagnosticStatus(0);
  uint64_t v32 = swift_allocObject();
  *(unsigned char *)(v32
           + OBJC_IVAR____TtC12AppAnalyticsP33_C30334460221130696DFAC9959A2A23920LazyDiagnosticStatus____lazy_storage____status) = 2;
  uint64_t v34 = v49;
  uint64_t v33 = v50;
  uint64_t v35 = *(void **)&v50[OBJC_IVAR___AAAccessQueue_queue];
  *uint64_t v49 = v35;
  uint64_t v37 = v51;
  uint64_t v36 = v52;
  (*(void (**)(void *, void, uint64_t))(v51 + 104))(v34, *MEMORY[0x1E4FBCBF0], v52);
  id v38 = v33;
  id v39 = v35;
  LOBYTE(v35) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v37 + 8))(v34, v36);
  if (v35)
  {
    sub_1A9099290(v31, v32 + OBJC_IVAR____TtC12AppAnalyticsP33_C30334460221130696DFAC9959A2A23920LazyDiagnosticStatus_provider);
    *(void *)(v32 + OBJC_IVAR____TtC12AppAnalyticsP33_C30334460221130696DFAC9959A2A23920LazyDiagnosticStatus_queue) = v38;
    uint64_t v59 = v32;
    sub_1A90992F4(0);
    swift_retain();
    swift_task_localValuePush();
    type metadata accessor for AccessSessionManager();
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v56;
    swift_retain();
    v54(v41);
    swift_release();
    swift_task_localValuePop();
LABEL_16:
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AccessSessionManager()
{
  return self;
}

void *sub_1A909C648(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14)
{
  uint64_t v47 = a7;
  uint64_t v48 = a8;
  v45[1] = a3;
  uint64_t v49 = a10;
  uint64_t v50 = a9;
  uint64_t v20 = type metadata accessor for SummaryEventConfiguration(0);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v46 = (uint64_t)v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for DiagnosticsConsentProvider(0);
  MEMORY[0x1F4188790](v22 - 8);
  int64_t v24 = (char *)v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51[3] = a13;
  v51[4] = a14;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v51);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a13 - 8) + 32))(boxed_opaque_existential_1, a6, a13);
  v45[0] = *a4;
  unint64_t v26 = v45[0];
  a12[5] = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for SessionManager.SessionState(0);
  swift_storeEnumTagMultiPayload();
  *(void *)((char *)a12 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_dataStacks) = MEMORY[0x1E4FBC868];
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)((char *)a12 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_observers) = MEMORY[0x1E4FBC860];
  a12[6] = a1;
  a12[7] = a2;
  a12[8] = a3;
  type metadata accessor for ProcessorManager();
  uint64_t v28 = (void *)swift_allocObject();
  v28[3] = 0;
  swift_unknownObjectWeakInit();
  v28[5] = a2;
  v28[6] = v27;
  v28[4] = a1;
  a12[3] = v28;
  uint64_t v29 = type metadata accessor for Tracker(0);
  uint64_t v30 = (v26 >> 1) & 1;
  sub_1A9098DA0(v50, (uint64_t)v24, type metadata accessor for DiagnosticsConsentProvider);
  uint64_t v31 = v46;
  sub_1A9098DA0(v49, v46, type metadata accessor for SummaryEventConfiguration);
  uint64_t v32 = v47;
  uint64_t ObjectType = swift_getObjectType();
  id v34 = a1;
  id v35 = a2;
  id v36 = v34;
  id v37 = v35;
  id v38 = v36;
  id v39 = v37;
  swift_retain();
  swift_unknownObjectRetain();
  a12[2] = sub_1A909CBDC(1953460082, 0xE400000000000000, v38, v39, v30, v32, (uint64_t)v24, v31, v29, ObjectType, v48);
  *(void *)((char *)a12 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_options) = v45[0];
  *(void *)((char *)a12 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_flushProcessor) = a5;
  sub_1A90A0DC8((uint64_t)v51, (uint64_t)a12 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider);
  *(_WORD *)((char *)a12 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timeDurationGranularity) = 0;
  swift_beginAccess();
  swift_weakAssign();
  swift_retain();
  swift_retain();
  uint64_t v40 = swift_retain();
  sub_1A909CA74(v40, (uint64_t)&off_1EFF9DB78);
  swift_release();
  swift_release();
  uint64_t v41 = a12[3];
  *(void *)(v41 + 24) = &off_1EFF9DBD8;
  swift_unknownObjectWeakAssign();
  uint64_t v42 = *(void *)(v41 + 32);
  char v43 = (void *)swift_allocObject();
  v43[2] = v41;
  uint64_t v43[3] = a5;
  v43[4] = &protocol witness table for FlushProcessor;
  swift_retain_n();
  swift_retain();
  sub_1A908CAA8(v42, (uint64_t)sub_1A908F7D4, (uint64_t)v43);
  swift_release();
  swift_release();
  sub_1A90A1B84(v49, type metadata accessor for SummaryEventConfiguration);
  sub_1A90A1B84(v50, type metadata accessor for DiagnosticsConsentProvider);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
  return a12;
}

uint64_t sub_1A909CA74(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 72) = a2;
  uint64_t v3 = swift_unknownObjectWeakAssign();
  uint64_t result = MEMORY[0x1AD0EEDF0](v3);
  if (result)
  {
    uint64_t v5 = result;
    type metadata accessor for AccessTracker();
    uint64_t v6 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    *(void *)(v6 + 24) = 0;
    *(void *)(v6 + 32) = 0;
    uint64_t v7 = swift_allocObject();
    swift_weakInit();
    type metadata accessor for SessionObserver();
    uint64_t v8 = (void *)swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    v8[3] = v6;
    v8[4] = sub_1A909725C;
    v8[5] = v7;
    uint64_t v9 = *(void *)(v5 + 48);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v5;
    *(void *)(v10 + 24) = v8;
    swift_unknownObjectRetain();
    swift_retain();
    sub_1A908CAA8(v9, (uint64_t)sub_1A908F7D0, v10);
    swift_unknownObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A909CBDC(uint64_t a1, uint64_t a2, void *a3, void *a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v40 = a5;
  char v43 = a3;
  uint64_t v44 = a4;
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v38 = a11;
  uint64_t v39 = a6;
  uint64_t v13 = type metadata accessor for SummaryEventConfiguration(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for SummaryEventDatabaseManager.StorageOptions(0);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  unint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v37 - v20;
  uint64_t v22 = type metadata accessor for DiagnosticsConsentProvider(0);
  MEMORY[0x1F4188790](v22 - 8);
  int64_t v24 = (char *)&v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for EventMirrorStore();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = MEMORY[0x1E4FBC868];
  uint64_t v46 = 0;
  sub_1A9098C68(a7, (uint64_t)v24, type metadata accessor for DiagnosticsConsentProvider);
  sub_1A909CF9C();
  uint64_t v27 = v26;
  uint64_t v28 = *(int *)(v26 + 48);
  uint64_t v29 = sub_1A916AAD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v21, 1, 1, v29);
  *(void *)&v21[v28] = 0;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v21, 0, 1, v27);
  if (*(unsigned char *)(a8 + 8))
  {
    uint64_t v30 = type metadata accessor for DisabledSummaryEventManager();
    uint64_t v31 = swift_allocObject();
    uint64_t v32 = &off_1EFFA2620;
  }
  else
  {
    sub_1A9098C68(a8, (uint64_t)v15, type metadata accessor for SummaryEventConfiguration);
    sub_1A9098C68((uint64_t)v21, (uint64_t)v19, type metadata accessor for SummaryEventDatabaseManager.StorageOptions);
    uint64_t v30 = type metadata accessor for SummaryEventManager();
    uint64_t v33 = swift_allocObject();
    uint64_t v31 = sub_1A9141DD4((uint64_t)v15, (uint64_t)v19, v33);
    uint64_t v32 = &off_1EFFA1968;
  }
  v45[3] = v30;
  v45[4] = v32;
  v45[0] = v31;
  sub_1A9098AF0((uint64_t)v21, type metadata accessor for SummaryEventDatabaseManager.StorageOptions);
  type metadata accessor for Tracker(0);
  uint64_t v34 = swift_allocObject();
  uint64_t v35 = sub_1A909D008(v41, v42, v43, v44, v40 & 1, v25, 0, &v46, 0, 0, 0, 0, v39, (uint64_t)v24, (uint64_t)v45, v34, a10, v38);
  sub_1A9098AF0(a8, type metadata accessor for SummaryEventConfiguration);
  sub_1A9098AF0(a7, type metadata accessor for DiagnosticsConsentProvider);
  return v35;
}

uint64_t type metadata accessor for Tracker(uint64_t a1)
{
  return sub_1A9098ED8(a1, (uint64_t *)&unk_1EB687F90);
}

uint64_t type metadata accessor for SummaryEventDatabaseManager.StorageOptions(uint64_t a1)
{
  return sub_1A9098ED8(a1, (uint64_t *)&unk_1EB6883B8);
}

void sub_1A909CF9C()
{
  if (!qword_1EB688670)
  {
    type metadata accessor for SummaryEventConfiguration.StorageURLOptions(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB688670);
    }
  }
}

uint64_t sub_1A909D008(uint64_t a1, uint64_t a2, void *a3, void *a4, char a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v23 = *a8;
  *(void *)(a16 + 72) = 0;
  *(void *)(a16 + 48) = 0;
  *(void *)(a16 + 56) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v24 = MEMORY[0x1E4FBC868];
  *(void *)(a16 + 104) = MEMORY[0x1E4FBC868];
  *(void *)(a16 + 112) = v24;
  uint64_t v25 = MEMORY[0x1E4FBC860];
  *(void *)(a16 + 120) = v24;
  *(void *)(a16 + 128) = v24;
  *(void *)(a16 + 144) = v25;
  *(void *)(a16 + 152) = v25;
  *(void *)(a16 + 168) = v25;
  uint64_t v26 = OBJC_IVAR____TtC12AppAnalytics7Tracker_actionsLock;
  type metadata accessor for UnfairLock();
  uint64_t v27 = swift_allocObject();
  uint64_t v28 = (_DWORD *)swift_slowAlloc();
  *(void *)(v27 + 16) = v28;
  *uint64_t v28 = 0;
  *(_DWORD *)(v27 + 24) = 0x10000;
  *(void *)(a16 + v26) = v27;
  *(void *)(a16 + 16) = a1;
  *(void *)(a16 + 24) = a2;
  *(void *)(a16 + 80) = a3;
  *(void *)(a16 + 88) = a4;
  *(unsigned char *)(a16 + 176) = a5;
  *(void *)(a16 + 96) = a6;
  *(void *)(a16 + 136) = a7;
  if (a7)
  {
    MEMORY[0x1AD0EEDF0](a7 + 64);
    uint64_t v29 = *(void *)(a7 + 72);
  }
  else
  {
    uint64_t v29 = 0;
  }
  *(void *)(a16 + 72) = v29;
  swift_unknownObjectWeakAssign();
  id v30 = a3;
  id v31 = a4;
  swift_retain();
  swift_retain();
  swift_unknownObjectRelease();
  uint64_t v32 = MEMORY[0x1E4FBC860];
  if (v23) {
    uint64_t v32 = v23;
  }
  *(void *)(a16 + 160) = v32;
  *(void *)(a16 + 32) = a9;
  *(void *)(a16 + 40) = a10;
  *(void *)(a16 + 48) = a11;
  *(void *)(a16 + 56) = a12;
  swift_bridgeObjectRelease();
  *(void *)(a16 + 184) = a13;
  *(void *)(a16 + 192) = a18;
  sub_1A9098C68(a14, a16 + OBJC_IVAR____TtC12AppAnalytics7Tracker_diagnosticsConsentProvider, type metadata accessor for DiagnosticsConsentProvider);
  sub_1A90A0DC8(a15, a16 + OBJC_IVAR____TtC12AppAnalytics7Tracker_summaryEventManager);
  swift_unknownObjectRetain();
  sub_1A909D2D0();
  uint64_t v33 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  Tracker.onSessionChange(block:)((uint64_t)sub_1A909A840, v33);

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(a15);
  sub_1A9098AF0(a14, type metadata accessor for DiagnosticsConsentProvider);
  swift_release();
  return a16;
}

uint64_t sub_1A909D2D0()
{
  uint64_t result = MEMORY[0x1AD0EEDF0](v0 + 64);
  if (result)
  {
    uint64_t v2 = result;
    type metadata accessor for AccessTracker();
    uint64_t v3 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    *(void *)(v3 + 24) = 0;
    *(void *)(v3 + 32) = 0;
    uint64_t v4 = swift_allocObject();
    swift_weakInit();
    type metadata accessor for SessionObserver();
    uint64_t v5 = (void *)swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    void v5[3] = v3;
    v5[4] = sub_1A909725C;
    v5[5] = v4;
    uint64_t v6 = *(void *)(v2 + 48);
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v2;
    *(void *)(v7 + 24) = v5;
    swift_unknownObjectRetain();
    swift_retain();
    sub_1A908CAA8(v6, (uint64_t)sub_1A908F7D0, v7);
    swift_unknownObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

void *Tracker.onSessionChange(block:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for AccessTracker();
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  *(void *)(v5 + 24) = 0;
  *(void *)(v5 + 32) = 0;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  type metadata accessor for SessionObserver();
  uint64_t v7 = (void *)swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v7[3] = v5;
  v7[4] = sub_1A909751C;
  v7[5] = v6;
  uint64_t v8 = MEMORY[0x1AD0EEDF0](v2 + 64);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 + 48);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v9;
    *(void *)(v11 + 24) = v7;
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    sub_1A908CAA8(v10, (uint64_t)sub_1A908F5D8, v11);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    swift_retain();
  }
  return v7;
}

uint64_t type metadata accessor for SessionObserver()
{
  return self;
}

uint64_t type metadata accessor for AccessTracker()
{
  return self;
}

uint64_t type metadata accessor for UnfairLock()
{
  return self;
}

uint64_t type metadata accessor for DisabledSummaryEventManager()
{
  return self;
}

uint64_t type metadata accessor for ProcessorManager()
{
  return self;
}

uint64_t type metadata accessor for EventMirrorStore()
{
  return self;
}

uint64_t sub_1A909D648(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SessionManager.SessionState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_OWORD *sub_1A909D6AC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A90A1B84((uint64_t)a1, type metadata accessor for SessionManager.SessionState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      uint64_t v7 = type metadata accessor for Session();
      uint64_t v8 = *(int *)(v7 + 28);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1A916AC90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      *(void *)((char *)a1 + *(int *)(v7 + 32)) = *(void *)((char *)a2 + *(int *)(v7 + 32));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1A909D7C4@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1A916AE70();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)(*(void *)(v1 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v9 = v10;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBF0], v6);
  id v11 = v10;
  LOBYTE(v10) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    uint64_t v13 = v1 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
    swift_beginAccess();
    sub_1A9098DA0(v13, (uint64_t)v5, type metadata accessor for SessionManager.SessionState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1) {
        sub_1A90A1B84((uint64_t)v5, type metadata accessor for SessionManager.SessionState);
      }
      uint64_t v15 = type metadata accessor for Session();
      return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 1, 1, v15);
    }
    else
    {
      uint64_t v16 = *(void *)v5;
      uint64_t v17 = *(void *)(*(void *)v5 + 24);
      uint64_t v28 = *(void *)(*(void *)v5 + 16);
      uint64_t v18 = *(void *)(v16 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier + 8);
      uint64_t v27 = *(void *)(v16 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier);
      uint64_t v19 = *(void *)(v16 + 32);
      unint64_t v20 = *(void *)(v16 + 40);
      uint64_t v21 = v16 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_startDate;
      uint64_t v22 = type metadata accessor for Session();
      uint64_t v23 = (char *)a1 + *(int *)(v22 + 28);
      uint64_t v24 = sub_1A916AC90();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v23, v21, v24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A908ED3C(v19, v20);
      uint64_t v25 = sub_1A908F034(v16);
      swift_release();
      *a1 = v28;
      a1[1] = v17;
      a1[2] = v27;
      a1[3] = v18;
      a1[4] = v19;
      a1[5] = v20;
      *(void *)((char *)a1 + *(int *)(v22 + 32)) = v25;
      return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a1, 0, 1, v22);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Session(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A9105EB8);
}

uint64_t sub_1A909DB08(uint64_t *a1)
{
  uint64_t v3 = sub_1A916AC90();
  uint64_t v43 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A916AE70();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (uint64_t *)((char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = a1[1];
  if (!v13) {
    return 0;
  }
  uint64_t v42 = v3;
  uint64_t v14 = *a1;
  uint64_t v15 = *(void **)(*(void *)(v1 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  void *v12 = v15;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBF0], v9);
  id v16 = v15;
  LOBYTE(v15) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if (v15)
  {
    uint64_t v18 = v1 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
    swift_beginAccess();
    sub_1A9098DA0(v18, (uint64_t)v8, type metadata accessor for SessionManager.SessionState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload)
    {
      uint64_t v21 = *(void **)v8;
      uint64_t v22 = *(void *)(*(void *)v8 + 16);
      uint64_t v23 = v21[3];
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1A90CD19C(v14, v13, v22, v23);
      uint64_t v40 = v25;
      uint64_t v41 = v24;
      swift_bridgeObjectRelease();
      uint64_t v27 = v21[4];
      unint64_t v26 = v21[5];
      uint64_t v28 = v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v5, (uint64_t)v21 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_startDate, v42);
      uint64_t v29 = *(void *)((char *)v21 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier);
      uint64_t v30 = *(void *)((char *)v21 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier + 8);
      sub_1A908ED3C(v27, v26);
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_1A90CD4C4(v14, v13, v29, v30);
      uint64_t v32 = v31;
      swift_bridgeObjectRelease();
      LOBYTE(v29) = *((unsigned char *)v21 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_dataEventFormatter);
      uint64_t v33 = *(void *)((char *)v21 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_dataEventFormatter + 8);
      LOBYTE(v30) = *((unsigned char *)v21 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_dataEventFormatter + 16);
      char v34 = *((unsigned char *)v21 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_dataEventFormatter + 17);
      swift_release();
      type metadata accessor for ActiveSession();
      unint64_t v20 = (void *)swift_allocObject();
      uint64_t v35 = v42;
      uint64_t v36 = v40;
      v20[2] = v41;
      v20[3] = v36;
      v20[4] = v27;
      v20[5] = v26;
      (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))((uint64_t)v20 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_startDate, v5, v35);
      uint64_t v37 = (void *)((char *)v20 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier);
      *uint64_t v37 = v39;
      v37[1] = v32;
      uint64_t v38 = (char *)v20 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_dataEventFormatter;
      *uint64_t v38 = v29;
      *((void *)v38 + 1) = v33;
      v38[16] = v30;
      v38[17] = v34;
      return (uint64_t)v20;
    }
    unint64_t v20 = 0;
    if (EnumCaseMultiPayload != 1) {
      return (uint64_t)v20;
    }
    sub_1A90A1B84((uint64_t)v8, type metadata accessor for SessionManager.SessionState);
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A909DEF4()
{
  if (*(unsigned char *)(v0 + 32))
  {
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v2 = (void *)Strong;
      if (qword_1EB688398 != -1) {
        swift_once();
      }
      objc_msgSend(v2, sel_flushWithCallbackQueue_completion_, qword_1EB687E08, 0);
      swift_release();
    }
  }
  return sub_1A909E0FC();
}

uint64_t sub_1A909E0EC(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1A909E0FC()
{
  uint64_t v0 = sub_1A916ADB0();
  uint64_t v47 = *(void *)(v0 - 8);
  uint64_t v48 = v0;
  MEMORY[0x1F4188790](v0);
  uint64_t v46 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1A916AE10();
  uint64_t v45 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A916AD80();
  uint64_t v44 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A916AE40();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v36 - v13;
  uint64_t v15 = sub_1A916B4A0();
  uint64_t result = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v20 = *(double *)(v49 + 40);
  if (v20 > 0.0)
  {
    uint64_t v37 = v17;
    uint64_t v38 = v12;
    uint64_t v39 = v14;
    uint64_t v40 = v9;
    uint64_t v41 = v7;
    uint64_t v42 = v4;
    uint64_t v43 = v2;
    if (*(void *)(v49 + 48))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1A916B4D0();
      swift_unknownObjectRelease();
    }
    sub_1A909E998();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1A909E78C(&qword_1EB689838, MEMORY[0x1E4FBCC70]);
    uint64_t v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC70];
    sub_1A909E728(0, &qword_1EB689820, MEMORY[0x1E4FBCC70], MEMORY[0x1E4FBB320]);
    sub_1A909E838((unint64_t *)&unk_1EB689828, &qword_1EB689820, v21);
    sub_1A916B610();
    uint64_t v22 = sub_1A916B4B0();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v15);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v24 = v38;
    sub_1A916AE30();
    uint64_t v25 = v39;
    MEMORY[0x1AD0ED6D0](v24, v20);
    unint64_t v26 = *(void (**)(char *, uint64_t))(v40 + 8);
    uint64_t v27 = v8;
    v26(v24, v8);
    uint64_t v28 = v41;
    *uint64_t v41 = 0;
    uint64_t v29 = v44;
    (*(void (**)(void *, void, uint64_t))(v44 + 104))(v28, *MEMORY[0x1E4FBCAA8], v5);
    MEMORY[0x1AD0EDD40](v25, v28, ObjectType, v20);
    (*(void (**)(void *, uint64_t))(v29 + 8))(v28, v5);
    v26(v25, v27);
    uint64_t v30 = v49;
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    uint64_t v32 = swift_allocObject();
    *(double *)(v32 + 16) = v20;
    *(void *)(v32 + 24) = Strong;
    aBlock[4] = sub_1A9150BA4;
    aBlock[5] = v32;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908CD10;
    aBlock[3] = &block_descriptor_11;
    uint64_t v33 = _Block_copy(aBlock);
    swift_retain();
    char v34 = v42;
    sub_1A916ADE0();
    uint64_t v35 = v46;
    sub_1A909E89C();
    sub_1A916B4C0();
    _Block_release(v33);
    swift_release();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v48);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v34, v43);
    swift_release();
    sub_1A916B4E0();
    *(void *)(v30 + 48) = v22;
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1A909E728(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1A909E78C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A909E7D4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A90A613C(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A909E838(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A909E728(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A909E89C()
{
  sub_1A916ADB0();
  sub_1A909E78C((unint64_t *)&qword_1EB68A8D0, MEMORY[0x1E4FBCB00]);
  uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1A909E728(0, (unint64_t *)&unk_1EB689800, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1A909E838((unint64_t *)&qword_1EB689810, (unint64_t *)&unk_1EB689800, v0);
  return sub_1A916B610();
}

unint64_t sub_1A909E998()
{
  unint64_t result = qword_1EB689840;
  if (!qword_1EB689840)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB689840);
  }
  return result;
}

id sub_1A909E9D8(int a1, __int16 a2, double a3)
{
  int v33 = a1;
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1A916A7D0();
  uint64_t v34 = *(void *)(v5 - 8);
  uint64_t v35 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A90A2578(0, (unint64_t *)&qword_1EB687AA0, MEMORY[0x1E4FBBC50]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v32[-v9];
  uint64_t v11 = sub_1A916B7A0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v32[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A916A820();
  swift_allocObject();
  id v15 = (id)sub_1A916A810();
  sub_1A916B790();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    __break(1u);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32))(v14, v10, v11);
  uint64_t v40 = &type metadata for TimeDurationGranularity;
  v39[0] = a2 & 0xFF01;
  id v16 = (void (*)(id *, void))sub_1A916A800();
  sub_1A90A25CC((uint64_t)v39, (uint64_t)v14);
  v16(v38, 0);
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = v33;
  *(double *)(v17 + 24) = a3;
  *(unsigned char *)(v17 + 32) = a2 & 1;
  *(unsigned char *)(v17 + 33) = HIBYTE(a2);
  *uint64_t v7 = sub_1A90A3FB8;
  v7[1] = v17;
  (*(void (**)(void *, void, uint64_t))(v34 + 104))(v7, *MEMORY[0x1E4F26D08], v35);
  sub_1A916A7E0();
  type metadata accessor for EventData();
  sub_1A909EF14(&qword_1EB688B40, (void (*)(uint64_t))type metadata accessor for EventData);
  uint64_t v18 = v36;
  uint64_t v19 = sub_1A916A7F0();
  if (!v18)
  {
    uint64_t v22 = v19;
    unint64_t v23 = v20;
    uint64_t v24 = self;
    uint64_t v25 = (void *)sub_1A916AB60();
    v38[0] = 0;
    id v15 = objc_msgSend(v24, sel_JSONObjectWithData_options_error_, v25, 0, v38);

    id v26 = v38[0];
    if (v15)
    {
      sub_1A916B5F0();
      swift_unknownObjectRelease();
      sub_1A90A24B0((uint64_t)v39, (uint64_t)v38);
      sub_1A90A250C();
      if (swift_dynamicCast())
      {
        id v15 = v37;
        uint64_t v27 = (void *)sub_1A916AEB0();
        unsigned __int8 v28 = objc_msgSend(v24, sel_isValidJSONObject_, v27);

        if (v28)
        {
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
          sub_1A90A2FD4(v22, v23);
          swift_release();
          return v15;
        }
        sub_1A90C3D34();
        swift_allocError();
        *uint64_t v31 = v15;
      }
      else
      {
        sub_1A90C3D34();
        swift_allocError();
        *uint64_t v30 = 0;
      }
      swift_willThrow();
      sub_1A90A2FD4(v22, v23);
      swift_release();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
      return v15;
    }
    uint64_t v29 = v26;
    sub_1A916A990();

    swift_willThrow();
    sub_1A90A2FD4(v22, v23);
  }
  swift_release();
  return v15;
}

uint64_t sub_1A909EF14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ActiveSession()
{
  uint64_t result = qword_1EB689228;
  if (!qword_1EB689228) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id ProcessEvent.with(timestampConfiguration:)@<X0>(uint64_t *a1@<X0>, int *a2@<X1>, void *a3@<X8>)
{
  unint64_t v23 = a3;
  uint64_t v6 = sub_1A916AC90();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v11 = v3[1];
  uint64_t v22 = *v3;
  uint64_t v24 = (void *)v3[2];
  (*(void (**)(char *, char *))(v12 + 16))(v8, (char *)v3 + a2[11]);
  uint64_t v13 = a2[13];
  uint64_t v14 = (uint64_t *)((char *)v3 + a2[12]);
  uint64_t v15 = *v14;
  uint64_t v16 = v14[1];
  uint64_t v17 = *(uint64_t *)((char *)v3 + v13);
  char v18 = *((unsigned char *)v3 + v13 + 8);
  sub_1A909F130((uint64_t)v3 + a2[14], (uint64_t)v26);
  v25[0] = v9;
  v25[1] = v10;
  ProcessEvent.init(name:json:nonJitteredEventTimestamp:groupName:groupContentType:userInfo:timestampConfiguration:)(v22, v11, (uint64_t)v24, (uint64_t)v8, v15, v16, v17, v18, v23, (uint64_t)v26, v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = v24;

  return v19;
}

uint64_t sub_1A909F130(uint64_t a1, uint64_t a2)
{
  sub_1A909B660(0, (unint64_t *)&qword_1EB68A928, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_1A909F1BC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!(a2 >> 62)) {
    return (id)((*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4) & 1);
  }
  if (a2 >> 62 != 1) {
    return (id)*(unsigned __int8 *)(a1 + OBJC_IVAR___AARawEvent_requiresDiagnosticsConsent);
  }
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  if (objc_msgSend(ObjCClassFromMetadata, sel_respondsToSelector_, sel_requiresDiagnosticsConsent)) {
    return objc_msgSend(ObjCClassFromMetadata, sel_requiresDiagnosticsConsent);
  }
  else {
    return 0;
  }
}

uint64_t static EventType.requiresDiagnosticsConsent.getter()
{
  return 0;
}

unint64_t sub_1A909F260@<X0>(unint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned char *a5@<X8>)
{
  if (!(a2 >> 62)) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  }
  if (a2 >> 62 == 1)
  {
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    uint64_t result = (unint64_t)objc_msgSend(ObjCClassFromMetadata, sel_respondsToSelector_, sel_timeDurationGranularity);
    if (result)
    {
      uint64_t result = (unint64_t)objc_msgSend(ObjCClassFromMetadata, sel_timeDurationGranularity);
      if (result >= 4)
      {
LABEL_14:
        uint64_t result = sub_1A916BA20();
        __break(1u);
      }
      else
      {
        *a5 = (0xEu >> (result & 0xF)) & 1;
        a5[1] = result;
      }
    }
    else
    {
LABEL_8:
      *(_WORD *)a5 = 0;
    }
  }
  else
  {
    switch(*(void *)(result + OBJC_IVAR___AARawEvent_timeDurationGranularity))
    {
      case 0:
        goto LABEL_8;
      case 1:
        __int16 v7 = 257;
        break;
      case 2:
        __int16 v7 = 513;
        break;
      case 3:
        __int16 v7 = 769;
        break;
      default:
        id v8 = (id)result;
        goto LABEL_14;
    }
    *(_WORD *)a5 = v7;
  }
  return result;
}

void static EventType.timeDurationGranularity.getter(_WORD *a1@<X8>)
{
  *a1 = 0;
}

unint64_t sub_1A909F3A8@<X0>(unint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  if (!(a2 >> 62)) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  }
  if (a2 >> 62 == 1)
  {
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    uint64_t result = (unint64_t)objc_msgSend(ObjCClassFromMetadata, sel_respondsToSelector_, sel_timestampGranularity);
    if (result)
    {
      uint64_t result = (unint64_t)objc_msgSend(ObjCClassFromMetadata, sel_timestampGranularity);
      if (result >= 5)
      {
LABEL_15:
        uint64_t result = sub_1A916BA20();
        __break(1u);
      }
      else
      {
        *a5 = 0x302040100uLL >> (8 * result);
      }
    }
    else
    {
LABEL_8:
      *a5 = 0;
    }
  }
  else
  {
    switch(*(void *)(result + OBJC_IVAR___AARawEvent_timestampGranularity))
    {
      case 0:
        goto LABEL_8;
      case 1:
        char v7 = 1;
        break;
      case 2:
        char v7 = 4;
        break;
      case 3:
        char v7 = 2;
        break;
      case 4:
        char v7 = 3;
        break;
      default:
        id v8 = (id)result;
        goto LABEL_15;
    }
    *a5 = v7;
  }
  return result;
}

void *sub_1A909F4F0(void *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 >> 62)
  {
    if (a2 >> 62 == 1)
    {
      swift_retain();
      sub_1A90C1570();
    }
    else
    {
      id v9 = a1;
      sub_1A9106C94();
    }
  }
  else
  {
    swift_retain();
    uint64_t v6 = sub_1A909AEEC(a3, a4);
  }
  uint64_t v10 = v6;
  sub_1A909F588(a1, a2);
  return v10;
}

void sub_1A909F588(void *a1, unint64_t a2)
{
  if (a2 >> 62 == 2)
  {
  }
  else if ((a2 >> 62) <= 1)
  {
    swift_release();
  }
}

void sub_1A909F5B8(char *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  if (!(a2 >> 62))
  {
    (*(void (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
    return;
  }
  if (a2 >> 62 != 1)
  {
    uint64_t v14 = *(char **)&a1[OBJC_IVAR___AARawEvent_sessionGroup];
    uint64_t v15 = &v14[OBJC_IVAR___AASessionGroup_groupName];
    swift_beginAccess();
    if (sub_1A916AFF0() == 0x746C7561666564 && v16 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v18 = sub_1A916B9E0();
      sub_1A90F0DEC(a1, a2);
      uint64_t v19 = v14;
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0)
      {
        uint64_t v23 = *((void *)v15 + 1);
        *(void *)a5 = *(void *)v15;
        *(void *)(a5 + 8) = v23;
        *(void *)(a5 + 16) = 0;
        *(unsigned char *)(a5 + 24) = 1;
        swift_bridgeObjectRetain();

        sub_1A909F588(a1, a2);
        return;
      }

      sub_1A909F588(a1, a2);
    }
LABEL_18:
    *(void *)a5 = 0;
    *(void *)(a5 + 8) = 0;
    *(unsigned char *)(a5 + 24) = 0;
    *(void *)(a5 + 16) = 0;
    return;
  }
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  if ((objc_msgSend(ObjCClassFromMetadata, sel_respondsToSelector_, sel_sessionGroup) & 1) == 0) {
    goto LABEL_18;
  }
  id v8 = (char *)objc_msgSend(ObjCClassFromMetadata, sel_sessionGroup);
  id v9 = &v8[OBJC_IVAR___AASessionGroup_groupName];
  swift_beginAccess();
  if (sub_1A916AFF0() == 0x746C7561666564 && v10 == 0xE700000000000000)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = sub_1A916B9E0();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      uint64_t v20 = *(void *)v9;
      uint64_t v21 = *((void *)v9 + 1);
      swift_bridgeObjectRetain();

      char v22 = 1;
      goto LABEL_23;
    }
  }
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  char v22 = 0;
LABEL_23:
  *(void *)a5 = v20;
  *(void *)(a5 + 8) = v21;
  *(void *)(a5 + 16) = 0;
  *(unsigned char *)(a5 + 24) = v22;
}

uint64_t sub_1A909F83C()
{
  return sub_1A909F844(*(void *)(v0 + 16));
}

uint64_t sub_1A909F844(uint64_t a1)
{
  uint64_t v2 = sub_1A916AE70();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for WeakSessionManager();
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  uint64_t v6 = OBJC_IVAR___AAAccessQueue_queue;
  uint64_t v19 = *(void *)(a1 + 24);
  char v7 = *(void **)(v19 + OBJC_IVAR___AAAccessQueue_queue);
  void *v5 = v7;
  uint64_t v8 = *MEMORY[0x1E4FBCBF0];
  id v9 = *(void (**)(void *, uint64_t, uint64_t))(v3 + 104);
  v9(v5, v8, v2);
  id v10 = v7;
  char v11 = sub_1A916AE90();
  char v12 = *(void (**)(void *, uint64_t))(v3 + 8);
  v12(v5, v2);
  if (v11)
  {
    uint64_t v18 = a1;
    uint64_t v21 = *(void *)(a1 + 56);
    uint64_t v13 = swift_bridgeObjectRetain();
    MEMORY[0x1AD0ED9C0](v13);
    if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  sub_1A916B1D0();
LABEL_3:
  sub_1A916B200();
  sub_1A916B1B0();
  uint64_t v14 = v21;
  uint64_t v15 = *(void **)(v19 + v6);
  void *v5 = v15;
  v9(v5, v8, v2);
  id v16 = v15;
  LOBYTE(v15) = sub_1A916AE90();
  uint64_t result = ((uint64_t (*)(void *, uint64_t))v12)(v5, v2);
  if (v15)
  {
    *(void *)(v18 + 56) = v14;
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for WeakSessionManager()
{
  return self;
}

uint64_t AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)(uint64_t a1, int a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a5;
  unsigned __int8 v28 = a4;
  uint64_t v25 = a1;
  uint64_t v26 = a3;
  int v24 = a2;
  uint64_t v9 = type metadata accessor for EventSubmitResult();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v12 = (uint64_t *)&v23[-v11];
  uint64_t v13 = sub_1A916AC90();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  id v16 = &v23[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v18 = *(void *)(result + 96);
    swift_retain();
    sub_1A916AC80();
    sub_1A909FCCC(v25, v18, v24 & 1, (uint64_t)v16, v26, (void (*)(void))v28, v27, a6, a7);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    uint64_t v19 = v10;
    uint64_t v20 = v28;
    if (v28)
    {
      sub_1A90F0788();
      uint64_t v21 = swift_allocError();
      *char v22 = xmmword_1A9170030;
      uint64_t *v12 = v21;
      swift_storeEnumTagMultiPayload();
      v20(v12);
      return (*(uint64_t (**)(uint64_t *, uint64_t))(v19 + 8))(v12, v9);
    }
  }
  return result;
}

uint64_t type metadata accessor for EventSubmitResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A909FCCC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, void (*a6)(void), uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v34 = a5;
  uint64_t v35 = a7;
  uint64_t v33 = a4;
  int v32 = a3;
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v28 = a8;
  uint64_t v11 = type metadata accessor for EventSubmitResult();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (uint64_t *)((char *)&v28 - v13);
  uint64_t v15 = sub_1A916AE70();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (uint64_t *)((char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = v9;
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v20 = result;
    uint64_t v21 = a6;
    char v22 = *(void **)(*(void *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *uint64_t v18 = v22;
    (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E4FBCBF0], v15);
    id v23 = v22;
    char v24 = sub_1A916AE90();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v16 + 8))(v18, v15);
    if (v24)
    {
      uint64_t v25 = *(char **)(v20 + 80);
      uint64_t v37 = v28;
      uint64_t v38 = a9;
      uint64_t v39 = v20;
      uint64_t v40 = v30;
      uint64_t v41 = v31;
      char v42 = v32 & 1;
      uint64_t v43 = v33;
      long long v44 = *(_OWORD *)(v29 + 24);
      uint64_t v45 = v34;
      uint64_t v46 = v21;
      uint64_t v47 = v35;
      sub_1A9096610(v25, (void (*)(uint64_t))sub_1A909A938, (uint64_t)v36, (uint64_t)&v48);
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  else if (a6)
  {
    sub_1A90F0788();
    uint64_t v26 = swift_allocError();
    *uint64_t v27 = xmmword_1A9170030;
    *uint64_t v14 = v26;
    swift_storeEnumTagMultiPayload();
    a6(v14);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  }
  return result;
}

void sub_1A909FFA0(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v7 = sub_1A916ADB0();
  uint64_t v34 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A916AE10();
  uint64_t v32 = *(void *)(v10 - 8);
  uint64_t v33 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v13 = v4[29];
  uint64_t v14 = *(void *)(v13 + 16);
  swift_retain();
  os_unfair_lock_lock_with_options();
  swift_beginAccess();
  int v15 = *(unsigned __int8 *)(v13 + 24);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
  swift_release();
  if (v15)
  {
    uint64_t v16 = sub_1A916AD40();
    os_log_type_t v17 = sub_1A916B3B0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_1A9088000, v16, v17, "Error: Flush manager attempting to flush with a flush already in progress.", v18, 2u);
      MEMORY[0x1AD0EECA0](v18, -1, -1);
    }

    if (a3) {
      a3();
    }
  }
  else
  {
    uint64_t v19 = v4[29];
    uint64_t v20 = *(void *)(v19 + 16);
    swift_retain();
    os_unfair_lock_lock_with_options();
    swift_beginAccess();
    *(unsigned char *)(v19 + 24) = 1;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));
    swift_release();
    uint64_t v21 = *(void **)(v4[2] + 32);
    v29[1] = v4[30];
    char v22 = (void *)swift_allocObject();
    long long v22[2] = v4;
    v22[3] = a3;
    uint64_t v23 = (uint64_t)a3;
    uint64_t v24 = v30;
    uint64_t v25 = v31;
    v22[4] = a4;
    v22[5] = v24;
    v22[6] = v25;
    aBlock[4] = sub_1A90AB4AC;
    aBlock[5] = v22;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A908CD10;
    aBlock[3] = &block_descriptor_1;
    v29[0] = _Block_copy(aBlock);
    id v26 = v21;
    swift_retain();
    sub_1A90A0418(v23);
    sub_1A90A0418(v24);
    sub_1A916ADE0();
    uint64_t v35 = MEMORY[0x1E4FBC860];
    sub_1A90A6868((unint64_t *)&qword_1EB68A8D0, MEMORY[0x1E4FBCB00]);
    uint64_t v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
    sub_1A90A613C(0, (unint64_t *)&unk_1EB689800, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1A909E7D4((unint64_t *)&qword_1EB689810, (unint64_t *)&unk_1EB689800, v27);
    sub_1A916B610();
    uint64_t v28 = (const void *)v29[0];
    sub_1A916B400();
    _Block_release(v28);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v7);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v33);
    swift_release();
  }
}

uint64_t sub_1A90A0418(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

void sub_1A90A0430(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v19 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0) {
                uint64_t v20 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v20 = a2 - 1;
              }
              *uint64_t v19 = v20;
            }
            else
            {
              uint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((v9 + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((v9 + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((v9 + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      break;
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t sub_1A90A0620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

unsigned char *sub_1A90A0628(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

uint64_t SessionManager.tracker.getter()
{
  return swift_retain();
}

ValueMetadata *type metadata accessor for DataEventTrait()
{
  return &type metadata for DataEventTrait;
}

uint64_t type metadata accessor for EventProperty()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A90A0660(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v55 = a3;
  uint64_t v63 = sub_1A916AE70();
  uint64_t v7 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v62 = (uint64_t *)((char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = (uint64_t *)(a1 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_dataStacks);
  swift_beginAccess();
  uint64_t v10 = *v9;
  uint64_t v11 = *(void *)(*v9 + 64);
  uint64_t v56 = *v9 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  uint64_t v64 = a2 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_dataEventFormatter;
  unint64_t v15 = (unint64_t)(v12 + 63) >> 6;
  int v16 = &v81;
  uint64_t v69 = (long long *)&v91;
  unsigned int v61 = *MEMORY[0x1E4FBCBF0];
  int v17 = (void (**)(void *, void, unint64_t))(v7 + 104);
  uint64_t v18 = (void (**)(void *, unint64_t))(v7 + 8);
  unint64_t v19 = v14;
  uint64_t v59 = v18;
  uint64_t v60 = v17;
  unint64_t v52 = v15 - 1;
  swift_bridgeObjectRetain();
  unint64_t v20 = 0;
  int64_t v65 = v15;
  uint64_t v53 = v10 + 104;
  unint64_t v54 = v15 - 5;
  long long v57 = xmmword_1A916E200;
  unint64_t v68 = &v81;
  uint64_t v58 = v10;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v21 = __clz(__rbit64(v19));
  uint64_t v22 = (v19 - 1) & v19;
  unint64_t v23 = v21 | (v20 << 6);
LABEL_8:
  uint64_t v24 = *(void *)(v10 + 56);
  uint64_t v25 = (void *)(*(void *)(v10 + 48) + 16 * v23);
  uint64_t v26 = v25[1];
  *(void *)&long long v80 = *v25;
  *((void *)&v80 + 1) = v26;
  sub_1A90A0DC8(v24 + 40 * v23, (uint64_t)v16);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1A90A160C((uint64_t)&v80, (uint64_t)v89, &qword_1EB6897F0, (void (*)(uint64_t))sub_1A90A6414);
    if (!v90) {
      return swift_release();
    }
    unint64_t v70 = v22;
    unint64_t v92 = v20;
    swift_bridgeObjectRelease();
    sub_1A908EC8C(v69, (uint64_t)v86);
    uint64_t v29 = v87;
    unint64_t v19 = v88;
    __swift_project_boxed_opaque_existential_1(v86, v87);
    (*(void (**)(long long *__return_ptr, uint64_t, unint64_t))(v19 + 24))(&v74, v29, v19);
    if (!*((void *)&v74 + 1))
    {
      sub_1A908A13C((uint64_t)&v74, &qword_1EB689380);
      goto LABEL_6;
    }
    long long v83 = v77;
    long long v84 = v78;
    long long v85 = v79;
    long long v80 = v74;
    long long v81 = v75;
    long long v82 = v76;
    sub_1A90A0DC8((uint64_t)v16, (uint64_t)&v74);
    if (v84 != 1) {
      goto LABEL_28;
    }
    if (qword_1EB687A08 != -1) {
      swift_once();
    }
    sub_1A916BBA0();
    if (!v71[0]) {
      goto LABEL_47;
    }
    uint64_t v30 = *(void **)(*(void *)(v71[0]
                               + OBJC_IVAR____TtC12AppAnalyticsP33_C30334460221130696DFAC9959A2A23920LazyDiagnosticStatus_queue)
                   + OBJC_IVAR___AAAccessQueue_queue);
    uint64_t v31 = v62;
    unint64_t v19 = v63;
    *uint64_t v62 = v30;
    (*v60)(v31, v61, v19);
    id v32 = v30;
    LOBYTE(v30) = sub_1A916AE90();
    (*v59)(v31, v19);
    if ((v30 & 1) == 0) {
      goto LABEL_46;
    }
    sub_1A9095CF4(v71);
    swift_release();
    int v16 = v68;
    if (LOBYTE(v71[0]) != 1)
    {
LABEL_28:
      uint64_t v33 = *((void *)&v75 + 1);
      uint64_t v34 = v76;
      __swift_project_boxed_opaque_existential_1(&v74, *((uint64_t *)&v75 + 1));
      uint64_t v35 = *(void *)(v64 + 8);
      char v36 = *(unsigned char *)(v64 + 16);
      char v37 = *(unsigned char *)(v64 + 17);
      LOBYTE(v71[0]) = *(unsigned char *)v64;
      v71[1] = v35;
      char v72 = v36;
      char v73 = v37;
      uint64_t v38 = (void *)v4;
      uint64_t v39 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v34 + 48))(v71, v33, v34);
      if (v4)
      {
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v74);
        if (qword_1EB68ACE8 != -1) {
          swift_once();
        }
        id v67 = (id)qword_1EB689AA0;
        int v66 = sub_1A916B3C0();
        sub_1A908EDD8(0, (unint64_t *)&qword_1EB68ACD8, (unint64_t *)&qword_1EB68A920, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
        uint64_t v40 = swift_allocObject();
        *(_OWORD *)(v40 + 16) = v57;
        *(void *)&long long v74 = 0;
        *((void *)&v74 + 1) = 0xE000000000000000;
        v71[0] = v4;
        sub_1A908E870(0, (unint64_t *)&qword_1EB689860);
        sub_1A916B780();
        unint64_t v42 = *((void *)&v74 + 1);
        unint64_t v41 = v74;
        uint64_t v43 = MEMORY[0x1E4FBB1A0];
        *(void *)(v40 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v44 = sub_1A90A67C0();
        *(void *)(v40 + 64) = v44;
        *(_OWORD *)(v40 + 32) = __PAIR128__(v42, v41);
        *(void *)&long long v74 = 0;
        *((void *)&v74 + 1) = 0xE000000000000000;
        sub_1A916B780();
        long long v45 = v74;
        *(void *)(v40 + 96) = v43;
        *(void *)(v40 + 104) = v44;
        *(_OWORD *)(v40 + 72) = v45;
        uint64_t v46 = v67;
        sub_1A916AD30();

        swift_bridgeObjectRelease();
        sub_1A90A0EAC((uint64_t)&v80);
        uint64_t v4 = 0;
        uint64_t v10 = v58;
        int v16 = v68;
      }
      else
      {
        uint64_t v47 = v39;
        uint64_t v48 = v55;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v71[0] = *v48;
        *uint64_t v48 = 0x8000000000000000;
        sub_1A90A119C(v47, (uint64_t)sub_1A90A1F60, 0, isUniquelyReferenced_nonNull_native, v71);
        uint64_t v4 = 0;
        *uint64_t v48 = v71[0];
        swift_bridgeObjectRelease();
        sub_1A90A0EAC((uint64_t)&v80);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v74);
      }
LABEL_6:
      unint64_t v20 = v92;
      unint64_t v19 = v70;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v86);
      if (v19) {
        goto LABEL_7;
      }
      goto LABEL_9;
    }
    sub_1A90A0EAC((uint64_t)&v80);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v74);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v86);
    unint64_t v20 = v92;
    unint64_t v19 = v70;
    if (v70) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v27 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v27 < v65)
    {
      unint64_t v28 = *(void *)(v56 + 8 * v27);
      if (v28) {
        goto LABEL_12;
      }
      if ((uint64_t)(v20 + 2) >= v65)
      {
        ++v20;
      }
      else
      {
        unint64_t v28 = *(void *)(v56 + 8 * (v20 + 2));
        if (v28)
        {
          int64_t v27 = v20 + 2;
LABEL_12:
          uint64_t v22 = (v28 - 1) & v28;
          unint64_t v23 = __clz(__rbit64(v28)) + (v27 << 6);
          unint64_t v20 = v27;
          goto LABEL_8;
        }
        if ((uint64_t)(v20 + 3) >= v65)
        {
          v20 += 2;
        }
        else
        {
          unint64_t v28 = *(void *)(v56 + 8 * (v20 + 3));
          if (v28)
          {
            int64_t v27 = v20 + 3;
            goto LABEL_12;
          }
          int64_t v27 = v20 + 4;
          if ((uint64_t)(v20 + 4) >= v65)
          {
            v20 += 3;
          }
          else
          {
            unint64_t v28 = *(void *)(v56 + 8 * v27);
            if (v28) {
              goto LABEL_12;
            }
            while (v54 != v20)
            {
              unint64_t v28 = *(void *)(v53 + 8 * v20++);
              if (v28)
              {
                int64_t v27 = v20 + 4;
                goto LABEL_12;
              }
            }
            unint64_t v20 = v52;
          }
        }
      }
    }
    uint64_t v22 = 0;
    *(void *)&long long v83 = 0;
    long long v81 = 0u;
    long long v82 = 0u;
    long long v80 = 0u;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
  *(void *)unint64_t v19 = v71[0];
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1A90A0DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void *sub_1A90A0E2C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A90A0E70()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A90A0EAC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A90A0F00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A908DCD8(*v2, v2[1], v2[2], *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t destroy for AnyDataEventEntry(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

char *sub_1A90A0F60(uint64_t a1, uint64_t a2)
{
  return SessionData.toDict(dataEventFormatter:)(a1, a2);
}

uint64_t *sub_1A90A0F78(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    uint64_t v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    uint64_t v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v13(v11, v12, v4);
  }
  return a1;
}

char *SessionData.toDict(dataEventFormatter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  char v5 = *(unsigned char *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 17);
  uint64_t v8 = *v2;
  uint64_t v7 = v2[1];
  uint64_t v9 = (char *)v2 + *(int *)(a2 + 36);
  LOBYTE(v19) = *(unsigned char *)a1;
  *((void *)&v19 + 1) = v4;
  char v20 = v5;
  char v21 = v6;
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v12 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  uint64_t v13 = v12(&v19, v11, v10);
  if (!v3)
  {
    uint64_t v14 = v13;
    sub_1A90A250C();
    uint64_t v23 = v15;
    *(void *)&long long v22 = v14;
    sub_1A90A1A68(&v22, &v19);
    int v16 = (char *)MEMORY[0x1E4FBC868];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v16;
    sub_1A90A1C44(&v19, v8, v7, isUniquelyReferenced_nonNull_native);
    uint64_t v9 = v24;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1A90A119C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v36 = a1;
  uint64_t v37 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v38 = v8;
  uint64_t v39 = 0;
  uint64_t v40 = v11 & v9;
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A90A1400(&v34);
  uint64_t v12 = *((void *)&v34 + 1);
  if (!*((void *)&v34 + 1))
  {
LABEL_19:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1A90A309C();
    return swift_release();
  }
  while (1)
  {
    uint64_t v15 = v34;
    sub_1A90A1A68(&v35, v33);
    uint64_t v16 = *a5;
    unint64_t v18 = sub_1A90A1D98(v15, v12);
    uint64_t v19 = *(void *)(v16 + 16);
    BOOL v20 = (v17 & 1) == 0;
    uint64_t v21 = v19 + v20;
    if (__OFADD__(v19, v20)) {
      break;
    }
    char v22 = v17;
    if (*(void *)(v16 + 24) >= v21)
    {
      if (a4)
      {
        if (v17) {
          goto LABEL_6;
        }
      }
      else
      {
        sub_1A90BF480();
        if (v22) {
          goto LABEL_6;
        }
      }
    }
    else
    {
      sub_1A90A1740(v21, a4 & 1);
      unint64_t v23 = sub_1A90A1D98(v15, v12);
      if ((v22 & 1) != (v24 & 1)) {
        goto LABEL_22;
      }
      unint64_t v18 = v23;
      if (v22)
      {
LABEL_6:
        uint64_t v13 = 32 * v18;
        sub_1A90A24B0(*(void *)(*a5 + 56) + v13, (uint64_t)v31);
        sub_1A90A24B0((uint64_t)v31, (uint64_t)v32);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
        swift_bridgeObjectRelease();
        uint64_t v14 = (_OWORD *)(*(void *)(*a5 + 56) + v13);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
        sub_1A90A1A68(v32, v14);
        goto LABEL_7;
      }
    }
    uint64_t v25 = (void *)*a5;
    *(void *)(*a5 + 8 * (v18 >> 6) + 64) |= 1 << v18;
    uint64_t v26 = (uint64_t *)(v25[6] + 16 * v18);
    *uint64_t v26 = v15;
    v26[1] = v12;
    sub_1A90A1A68(v33, (_OWORD *)(v25[7] + 32 * v18));
    uint64_t v27 = v25[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_21;
    }
    uint64_t v25[2] = v29;
LABEL_7:
    sub_1A90A1400(&v34);
    uint64_t v12 = *((void *)&v34 + 1);
    a4 = 1;
    if (!*((void *)&v34 + 1)) {
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_1A916BA50();
  __break(1u);
  return result;
}

uint64_t sub_1A90A1400@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    sub_1A90A24B0(*(void *)(v3 + 56) + 32 * v10, (uint64_t)v24);
    *(void *)&long long v23 = v13;
    *((void *)&v23 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  int64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    unint64_t v16 = *(void *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      uint64_t v9 = (v16 - 1) & v16;
      unint64_t v10 = __clz(__rbit64(v16)) + (v14 << 6);
      int64_t v7 = v14;
      goto LABEL_3;
    }
    int64_t v17 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      unint64_t v16 = *(void *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        int64_t v14 = v17;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        unint64_t v16 = *(void *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          int64_t v14 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v17 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          unint64_t v16 = *(void *)(v4 + 8 * v17);
          if (v16) {
            goto LABEL_10;
          }
          int64_t v14 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            unint64_t v16 = *(void *)(v4 + 8 * v14);
            if (v16) {
              goto LABEL_7;
            }
            int64_t v7 = v15 - 1;
            int64_t v18 = v5 + 6;
            while (v15 != v18)
            {
              unint64_t v16 = *(void *)(v4 + 8 * v18++);
              if (v16)
              {
                int64_t v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  memset(v24, 0, sizeof(v24));
  long long v23 = 0u;
LABEL_23:
  *uint64_t v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  uint64_t v19 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_1A90A160C((uint64_t)&v23, (uint64_t)v22, (unint64_t *)&qword_1EB689468, (void (*)(uint64_t))sub_1A90A302C);
  if (*((void *)&v22[0] + 1))
  {
    v21[0] = v22[0];
    v21[1] = v22[1];
    v21[2] = v22[2];
    v19(v21);
    return sub_1A90A1B84((uint64_t)v21, (uint64_t (*)(void))sub_1A90A302C);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

uint64_t sub_1A90A160C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1A90A16EC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1A90A1678(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, unint64_t *a5)
{
  sub_1A90A34F8(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_1A90A16EC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1A916B540();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1A90A1740(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1A90A1AD4(0, &qword_1EB689850, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBD58]);
  char v6 = a2;
  uint64_t v7 = sub_1A916B800();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    long long v35 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v14 << 6);
      }
      else
      {
        int64_t v19 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v19 >= v34) {
          goto LABEL_34;
        }
        unint64_t v20 = v35[v19];
        ++v14;
        if (!v20)
        {
          int64_t v14 = v19 + 1;
          if (v19 + 1 >= v34) {
            goto LABEL_34;
          }
          unint64_t v20 = v35[v14];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v34)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *long long v35 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v20 = v35[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v14 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_41;
                }
                if (v14 >= v34) {
                  goto LABEL_34;
                }
                unint64_t v20 = v35[v14];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v14 = v21;
          }
        }
LABEL_21:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v14 << 6);
      }
      char v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      uint64_t v24 = *v22;
      uint64_t v23 = v22[1];
      uint64_t v25 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v18);
      if (v6)
      {
        sub_1A90A1A68(v25, v36);
      }
      else
      {
        sub_1A90A24B0((uint64_t)v25, (uint64_t)v36);
        swift_bridgeObjectRetain();
      }
      sub_1A916BAB0();
      sub_1A916B030();
      uint64_t result = sub_1A916BAD0();
      uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      unint64_t v16 = (void *)(*(void *)(v8 + 48) + 16 * v15);
      *unint64_t v16 = v24;
      v16[1] = v23;
      uint64_t result = (uint64_t)sub_1A90A1A68(v36, (_OWORD *)(*(void *)(v8 + 56) + 32 * v15));
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

_OWORD *sub_1A90A1A68(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_1A90A1A78(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, void, uint64_t, void))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, MEMORY[0x1E4FBB1A0], a3, MEMORY[0x1E4FBB1B0]);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1A90A1AD4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, void, uint64_t, void))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, MEMORY[0x1E4FBB1A0], a3, MEMORY[0x1E4FBB1B0]);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1A90A1B30(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1A916AEF0();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1A90A1B84(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A90A1BE4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_1A90A1C44(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1A90A1D98(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1A90BF480();
      goto LABEL_7;
    }
    sub_1A90A1740(v15, a4 & 1);
    unint64_t v21 = sub_1A90A1D98(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_1A916BA50();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    int64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    return sub_1A90A1A68(a1, v19);
  }
LABEL_13:
  sub_1A90A1EF4(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

unint64_t sub_1A90A1D98(uint64_t a1, uint64_t a2)
{
  sub_1A916BAB0();
  sub_1A916B030();
  uint64_t v4 = sub_1A916BAD0();

  return sub_1A90A1E10(a1, a2, v4);
}

unint64_t sub_1A90A1E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1A916B9E0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1A916B9E0() & 1) == 0);
    }
  }
  return v6;
}

_OWORD *sub_1A90A1EF4(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v6 = (void *)(a5[6] + 16 * a1);
  *unint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1A90A1A68(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_1A90A1F60@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  sub_1A90A24B0((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;

  return swift_bridgeObjectRetain();
}

id *DataEventType.toDict(dataEventFormatter:)(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1A916A7D0();
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  MEMORY[0x1F4188790](v4);
  unint64_t v6 = &v34[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A90A2578(0, (unint64_t *)&qword_1EB687AA0, MEMORY[0x1E4FBBC50]);
  MEMORY[0x1F4188790](v7 - 8);
  BOOL v9 = &v34[-v8];
  uint64_t v10 = sub_1A916B7A0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = &v34[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v35 = *a1;
  uint64_t v14 = *((void *)a1 + 1);
  unsigned __int8 v15 = a1[16];
  unsigned __int8 v16 = a1[17];
  sub_1A916A820();
  swift_allocObject();
  sub_1A916A810();
  sub_1A916B790();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
    __break(1u);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v13, v9, v10);
  unint64_t v44 = &type metadata for TimeDurationGranularity;
  v43[0] = v15;
  v43[1] = v16;
  uint64_t v17 = v42;
  unint64_t v18 = (void (*)(id *, void))sub_1A916A800();
  sub_1A90A25CC((uint64_t)v43, (uint64_t)v13);
  v18(v42, 0);
  uint64_t v19 = swift_allocObject();
  *(unsigned char *)(v19 + 16) = v35;
  *(void *)(v19 + 24) = v14;
  *(unsigned char *)(v19 + 32) = v15;
  *(unsigned char *)(v19 + 33) = v16;
  *unint64_t v6 = sub_1A90A3FB8;
  v6[1] = v19;
  (*(void (**)(void *, void, uint64_t))(v36 + 104))(v6, *MEMORY[0x1E4F26D08], v37);
  sub_1A916A7E0();
  uint64_t v20 = v40;
  uint64_t v21 = sub_1A916A7F0();
  if (!v20)
  {
    uint64_t v24 = v21;
    unint64_t v25 = v22;
    uint64_t v26 = self;
    unint64_t v27 = (void *)sub_1A916AB60();
    v42[0] = 0;
    uint64_t v17 = (id *)objc_msgSend(v26, sel_JSONObjectWithData_options_error_, v27, 0, v42);

    id v28 = v42[0];
    if (v17)
    {
      sub_1A916B5F0();
      swift_unknownObjectRelease();
      sub_1A90A24B0((uint64_t)v43, (uint64_t)v42);
      sub_1A90A250C();
      if (swift_dynamicCast())
      {
        uint64_t v17 = v41;
        char v29 = (void *)sub_1A916AEB0();
        unsigned __int8 v30 = objc_msgSend(v26, sel_isValidJSONObject_, v29);

        if (v30)
        {
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
          sub_1A90A2FD4(v24, v25);
          swift_release();
          return v17;
        }
        sub_1A90C3D34();
        swift_allocError();
        *uint64_t v33 = v17;
      }
      else
      {
        sub_1A90C3D34();
        swift_allocError();
        *uint64_t v32 = 0;
      }
      swift_willThrow();
      sub_1A90A2FD4(v24, v25);
      swift_release();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
      return v17;
    }
    BOOL v31 = v28;
    sub_1A916A990();

    swift_willThrow();
    sub_1A90A2FD4(v24, v25);
  }
  swift_release();
  return v17;
}

uint64_t sub_1A90A24B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_1A90A250C()
{
  if (!qword_1EB6897D0)
  {
    unint64_t v0 = sub_1A916AEF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB6897D0);
    }
  }
}

void sub_1A90A2578(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1A916B540();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1A90A25CC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_1A90A1A68((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_1A90A26DC(v9, a2, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v8;
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1A916B7A0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_1A909B5DC(a1);
    sub_1A914CA10(a2, v9);
    uint64_t v7 = sub_1A916B7A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a2, v7);
    return sub_1A909B5DC((uint64_t)v9);
  }
}

_OWORD *sub_1A90A26DC(_OWORD *a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1A916B7A0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1A90A28B4(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1A90BFC20();
      goto LABEL_7;
    }
    sub_1A90A2AB0(v17, a3 & 1);
    unint64_t v23 = sub_1A90A28B4(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      uint64_t v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1A90A2F14(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_1A916BA50();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = (_OWORD *)(v20[7] + 32 * v14);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);

  return sub_1A90A1A68(a1, v21);
}

unint64_t sub_1A90A28B4(uint64_t a1)
{
  sub_1A916B7A0();
  uint64_t v2 = sub_1A916AF00();

  return sub_1A90A2918(a1, v2);
}

unint64_t sub_1A90A2918(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v4 = sub_1A916B7A0();
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v20 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    char v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      uint64_t v16 = v11;
      v12(v7, *(void *)(v22 + 48) + v14 * v9, v4);
      char v17 = sub_1A916AF50();
      (*v15)(v7, v4);
      if (v17) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      uint64_t v11 = v16;
    }
    while (((*(void *)(v20 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

uint64_t sub_1A90A2AB0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = sub_1A916B7A0();
  uint64_t v5 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1A90A2EA8();
  int v45 = a2;
  uint64_t v9 = sub_1A916B800();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    uint64_t v38 = v2;
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 64);
    uint64_t v40 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    int64_t v39 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v41 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v15 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    uint64_t v42 = v8;
    uint64_t v43 = v7;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v39) {
          goto LABEL_34;
        }
        unint64_t v22 = v40[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v39) {
            goto LABEL_34;
          }
          unint64_t v22 = v40[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v39)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v38;
              if (v45)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
                if (v36 >= 64) {
                  bzero(v40, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v40 = -1 << v36;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v40[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v22 = v40[v17];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_21:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = v5;
      uint64_t v25 = *(void *)(v5 + 72);
      unint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
      unint64_t v27 = v43;
      uint64_t v28 = v44;
      if (v45)
      {
        (*v46)(v43, v26, v44);
        sub_1A90A1A68((_OWORD *)(*(void *)(v8 + 56) + 32 * v20), v47);
      }
      else
      {
        (*v41)(v43, v26, v44);
        sub_1A90A24B0(*(void *)(v8 + 56) + 32 * v20, (uint64_t)v47);
      }
      uint64_t result = sub_1A916AF00();
      uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v15 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v18 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      (*v46)((char *)(*(void *)(v10 + 48) + v25 * v18), (unint64_t)v27, v28);
      uint64_t result = (uint64_t)sub_1A90A1A68(v47, (_OWORD *)(*(void *)(v10 + 56) + 32 * v18));
      ++*(void *)(v10 + 16);
      uint64_t v5 = v24;
      uint64_t v8 = v42;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

void sub_1A90A2EA8()
{
  if (!qword_1EB687AA8)
  {
    sub_1A916B7A0();
    unint64_t v0 = sub_1A916B820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB687AA8);
    }
  }
}

_OWORD *sub_1A90A2F14(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1A916B7A0();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t result = sub_1A90A1A68(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_1A90A2FD4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

void sub_1A90A302C()
{
  if (!qword_1EB6897F8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB6897F8);
    }
  }
}

uint64_t sub_1A90A309C()
{
  return swift_release();
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1A90A3290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  uint64_t v10 = sub_1A90A33F0();
  uint64_t v12 = v11;
  char v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a4, v9, a2);
  uint64_t result = type metadata accessor for PushEvent();
  uint64_t v15 = (uint64_t *)(a4 + *(int *)(result + 36));
  *uint64_t v15 = v10;
  v15[1] = v12;
  *(unsigned char *)(a4 + *(int *)(result + 40)) = v13 & 1;
  return result;
}

uint64_t type metadata accessor for PushEvent()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A90A33F0()
{
  return sub_1A916BBB0();
}

uint64_t static DataEventType.requiresDiagnosticsConsent.getter()
{
  return 0;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t sub_1A90A3410(uint64_t a1)
{
  return static SessionData.requiresDiagnosticsConsent.getter(*(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t static SessionData.requiresDiagnosticsConsent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))() & 1;
}

uint64_t destroy for Session(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1A916AC90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

void sub_1A90A34F8(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_1A90A6490(255, a3, a4);
    unint64_t v5 = sub_1A916B540();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1A90A3554(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 40) >= 3uLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v3 = a1 + *(int *)(type metadata accessor for Session() + 28);
    uint64_t v4 = sub_1A916AC90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    return swift_release();
  }
  return result;
}

BOOL sub_1A90A3644(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

uint64_t sub_1A90A3674()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A90A3718()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A90A37D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 40);
}

uint64_t sub_1A90A37E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

uint64_t getEnumTagSinglePayload for EventMirrorProperty(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1A90A3830()
{
  uint64_t result = 0x4449746E657665;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D6954746E657665;
      break;
    case 2:
      uint64_t result = 0x746150746E657665;
      break;
    case 3:
      uint64_t result = 0x496E6F6973736573;
      break;
    case 4:
      uint64_t result = 0x6973736553707061;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1A90A38E8()
{
  sub_1A90A3B7C(319, (unint64_t *)&qword_1EB6899A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1A90A39C8(uint64_t a1, uint64_t a2)
{
  sub_1A90A3B7C(0, (unint64_t *)&qword_1EB6899A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A90A3A5C(uint64_t a1)
{
  sub_1A90A3B7C(0, (unint64_t *)&qword_1EB6899A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A90A3AE8(uint64_t a1, uint64_t a2)
{
  sub_1A90A3B7C(0, (unint64_t *)&qword_1EB6899A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1A90A3B7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t LoggingEventProcessor.__allocating_init(logFormat:)(uint64_t a1)
{
  sub_1A90A3D94(a1, (uint64_t)v12);
  uint64_t v2 = swift_allocObject();
  sub_1A90A3D94((uint64_t)v12, (uint64_t)v7);
  if (v8)
  {
    if (v8 == 1)
    {
      sub_1A908EC8C(v7, (uint64_t)&v9);
    }
    else
    {
      uint64_t v10 = &type metadata for DefaultLoggingEventProcessorFormatter;
      uint64_t v11 = &off_1EFFA0878;
    }
  }
  else
  {
    uint64_t v3 = *(void *)&v7[0];
    uint64_t v10 = &type metadata for JSONLoggingEventProcessorFormatter;
    uint64_t v11 = &off_1EFFA0888;
    uint64_t v4 = (void *)swift_allocObject();
    *(void *)&long long v9 = v4;
    v4[6] = &type metadata for DefaultLoggingEventProcessorFormatter;
    v4[7] = &off_1EFFA0878;
    v4[2] = v3;
  }
  sub_1A908EC8C(&v9, v2 + 16);
  if (qword_1EB68ACE8 != -1) {
    swift_once();
  }
  id v5 = (id)qword_1EB689AA0;
  sub_1A90A3D1C((uint64_t)v12);
  *(void *)(v2 + 56) = v5;
  sub_1A90A3D1C(a1);
  return v2;
}

uint64_t sub_1A90A3D1C(uint64_t a1)
{
  return a1;
}

uint64_t destroy for LoggingEventProcessorFormat(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)a1 + 2;
  }
  if (v1 == 1) {
    return __swift_destroy_boxed_opaque_existential_0(a1);
  }
  return a1;
}

uint64_t sub_1A90A3D94(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for LoggingEventProcessorFormat(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    long long v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    *(unsigned char *)(a1 + 40) = 1;
  }
  else if (v3)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 40) = 0;
  }
  return a1;
}

uint64_t sub_1A90A3E98()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1A90A3F34(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t storeEnumTagSinglePayload for EventMirrorProperty(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TimestampJitter(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

uint64_t sub_1A90A3FB8(uint64_t a1, void *a2)
{
  return sub_1A90A3FD0(a1, a2);
}

uint64_t sub_1A90A3FD0(uint64_t a1, void *a2)
{
  return sub_1A90A3FFC(a1, a2, *(unsigned char *)(v2 + 16));
}

uint64_t sub_1A90A3FFC(uint64_t a1, void *a2, char a3)
{
  uint64_t v6 = sub_1A916AD10();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v10 = sub_1A916AC90();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v13 = &v18[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  switch(a3)
  {
    case 1:
      sub_1A916ACF0();
      sub_1A916ACD0();
      (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
      break;
    case 2:
    case 3:
      sub_1A916ABE0();
      sub_1A916ABD0();
      break;
    case 4:
      sub_1A916AC00();
      break;
    default:
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
      break;
  }
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1A916BB30();
  uint64_t result = sub_1A916AC50();
  double v16 = v15 * 1000.0;
  if ((~*(void *)&v16 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v16 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v16 < 9.22337204e18)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    sub_1A916BA00();
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  }
LABEL_12:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for SessionGroup()
{
  return &type metadata for SessionGroup;
}

uint64_t sub_1A90A42EC(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

ValueMetadata *type metadata accessor for FlushEvents()
{
  return &type metadata for FlushEvents;
}

ValueMetadata *type metadata accessor for TimestampGranularity()
{
  return &type metadata for TimestampGranularity;
}

uint64_t SessionObserver.__deallocating_deinit()
{
  sub_1A90A43B4(v0 + 16);
  swift_release();
  swift_release();

  return MEMORY[0x1F4186488](v0, 48, 7);
}

uint64_t sub_1A90A43B4(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for SessionManager.Options()
{
  return &type metadata for SessionManager.Options;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1A90A4568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

unsigned char *storeEnumTagSinglePayload for EventData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EventData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for Session.Kind()
{
  return &type metadata for Session.Kind;
}

uint64_t Client.version.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AAClient_version);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Client.buildNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AAClient_buildNumber);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A90A4764()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *_s12AppAnalytics25EffectiveUserSettingsFileV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        break;
      case 2:
        *(_WORD *)uint64_t result = a2;
        break;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = 0;
        break;
      case 2:
        *(_WORD *)uint64_t result = 0;
        break;
      case 3:
LABEL_19:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)uint64_t result = 0;
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t sub_1A90A48B8()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t AccessSessionManager.__deallocating_deinit()
{
  swift_release();

  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t getEnumTagSinglePayload for TimestampJitter(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

ValueMetadata *type metadata accessor for TimestampJitter()
{
  return &type metadata for TimestampJitter;
}

uint64_t type metadata accessor for FlushProcessor()
{
  return self;
}

uint64_t FlushProcessor.init(flushEvents:flushInterval:)(uint64_t *a1, double a2)
{
  uint64_t v4 = *a1;
  swift_weakInit();
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 32) = v4;
  *(double *)(v2 + 40) = a2;
  *(void *)(v2 + 24) = dispatch_group_create();
  return v2;
}

uint64_t AccessTracker.__deallocating_deinit()
{
  swift_weakDestroy();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 40, 7);
}

uint64_t sub_1A90A4A7C(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1A90A4AA4()
{
  uint64_t result = sub_1A916AC90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A90A4B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 48);
}

void static FlushEvents.didStartSession.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static FlushEvents.didLeaveGroup.getter(void *a1@<X8>)
{
  *a1 = 8;
}

void static FlushEvents.didEndSession.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void sub_1A90A4BA0()
{
  uint64_t v0 = sub_1A916B430();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A916B420();
  MEMORY[0x1F4188790](v4);
  uint64_t v24 = sub_1A916AE10();
  uint64_t v5 = *(void *)(v24 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v24);
  int64_t v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  long long v9 = (char *)&v22 - v8;
  sub_1A90A601C();
  sub_1A916ADD0();
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_1A90A605C();
  sub_1A90A4F94(0, (unint64_t *)&qword_1EB68A8F0, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1A90A60B4();
  sub_1A916B610();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t v10 = (void *)sub_1A916B480();
  uint64_t v11 = (objc_class *)type metadata accessor for AccessQueue();
  uint64_t v12 = (char *)objc_allocWithZone(v11);
  *(void *)&v12[OBJC_IVAR___AAAccessQueue_queue] = v10;
  char v13 = v12;
  id v14 = v10;
  sub_1A916ADD0();
  double v15 = &v13[OBJC_IVAR___AAAccessQueue__qos];
  swift_beginAccess();
  int64_t v17 = v23;
  uint64_t v16 = v24;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v23, v9, v24);
  sub_1A90A4F94(0, &qword_1EB689598, MEMORY[0x1E4FBCB80], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Atomic);
  unint64_t v18 = (char *)swift_allocObject();
  type metadata accessor for UnfairLock();
  uint64_t v19 = swift_allocObject();
  unint64_t v20 = (_DWORD *)swift_slowAlloc();
  *(void *)(v19 + 16) = v20;
  *unint64_t v20 = 0;
  *(_DWORD *)(v19 + 24) = 0x10000;
  *((void *)v18 + 2) = v19;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v18[*(void *)(*(void *)v18 + 96)], v17, v16);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v16);
  *(void *)double v15 = v18;
  swift_endAccess();

  v25.receiver = v13;
  v25.super_class = v11;
  id v21 = objc_msgSendSuper2(&v25, sel_init);

  qword_1EB689580 = (uint64_t)v21;
}

void sub_1A90A4F94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1A90A4FF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for ExternalAnalyticsUploader.Errors(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

uint64_t objectdestroy_2Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 24));

  return MEMORY[0x1F4186498](v1, 32, 7);
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = sub_1A916AC90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  swift_release();
  sub_1A909F588(*(void **)(v0 + 24), *(void *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t objectdestroy_119Tm(void (*a1)(void), uint64_t a2)
{
  swift_release();
  a1(*(void *)(v2 + 32));

  return MEMORY[0x1F4186498](v2, a2, 7);
}

uint64_t sub_1A90A528C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1A916AD50();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  if (qword_1EB68ACE8 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EB689AA0;
  return sub_1A916AD60();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t objectdestroy_5Tm()
{
  swift_release();

  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t objectdestroy_8Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));

  return MEMORY[0x1F4186498](v1, 40, 7);
}

uint64_t objectdestroy_133Tm(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v1, a1, 7);
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t objectdestroy_18Tm()
{
  uint64_t v1 = sub_1A916AC90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 41) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 39) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  sub_1A909F588(*(void **)(v0 + 24), *(void *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(void *)(v0 + v5 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + v5);
  }
  if (*(void *)(v0 + v6)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, v6 + 16, v3 | 7);
}

unint64_t sub_1A90A557C()
{
  unint64_t result = qword_1EB68A920;
  if (!qword_1EB68A920)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB68A920);
  }
  return result;
}

void sub_1A90A55D4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1A90A5620(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1A90A5670(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1A90A56BC(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1A916B900();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1A90A571C(uint64_t a1, unint64_t *a2, uint64_t a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a4(a3);
    unint64_t v5 = sub_1A916B820();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1A90A5780(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1A90A1D98(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1A90C0334();
      goto LABEL_7;
    }
    sub_1A90A597C(v15, a4 & 1);
    unint64_t v22 = sub_1A90A1D98(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      unint64_t v12 = v22;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1A916BA50();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = v19 + *(void *)(*(void *)(type metadata accessor for Tracker.Timer(0) - 8) + 72) * v12;
    return sub_1A90C5734(a1, v20);
  }
LABEL_13:
  sub_1A90A58E4(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A90A58E4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v8 = (void *)(a5[6] + 16 * a1);
  *unint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for Tracker.Timer(0);
  uint64_t result = sub_1A908B2D4(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

uint64_t sub_1A90A597C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for Tracker.Timer(0);
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1A90A571C(0, &qword_1EB688C30, 255, (void (*)(uint64_t))type metadata accessor for Tracker.Timer);
  int v43 = a2;
  uint64_t v9 = sub_1A916B800();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    char v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_1A90C12D4(v30, (uint64_t)v7, type metadata accessor for Tracker.Timer);
    }
    else
    {
      sub_1A90C1270(v30, (uint64_t)v7);
      swift_bridgeObjectRetain();
    }
    sub_1A916BAB0();
    sub_1A916B030();
    uint64_t result = sub_1A916BAD0();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *uint64_t v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_1A90C12D4((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18, type metadata accessor for Tracker.Timer);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  char v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

void *sub_1A90A5D64(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A909B6AC(0, &qword_1EB6865F8, (uint64_t)&type metadata for Action.Entry, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      long long v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A90A5EA8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A90A5EA8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

unint64_t sub_1A90A5FA0()
{
  unint64_t result = qword_1EB68A910;
  if (!qword_1EB68A910)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB68A910);
  }
  return result;
}

uint64_t sub_1A90A5FE0(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_1A90A601C()
{
  unint64_t result = qword_1EB68A908;
  if (!qword_1EB68A908)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB68A908);
  }
  return result;
}

unint64_t sub_1A90A605C()
{
  unint64_t result = qword_1EB68A900;
  if (!qword_1EB68A900)
  {
    sub_1A916B420();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB68A900);
  }
  return result;
}

unint64_t sub_1A90A60B4()
{
  unint64_t result = qword_1EB68A8F8;
  if (!qword_1EB68A8F8)
  {
    sub_1A90A4F94(255, (unint64_t *)&qword_1EB68A8F0, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB68A8F8);
  }
  return result;
}

void sub_1A90A613C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1A90A61A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1A90A6204(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1A90A6268(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1A90A5D64(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

void sub_1A90A63C8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1A90A6414()
{
  if (!qword_1EB6897E8)
  {
    sub_1A908E870(255, (unint64_t *)&qword_1EB6897A8);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB6897E8);
    }
  }
}

void sub_1A90A6490(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1A908E870(255, a3);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1A90A64FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4 = v3;
  sub_1A90A2578(0, &qword_1EB689398, (void (*)(uint64_t))type metadata accessor for Tracker.Timer);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = type metadata accessor for Tracker.Timer(0);
  MEMORY[0x1F4188790](v11);
  BOOL v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_1A9109370(a1);
    sub_1A914CCBC(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1A9109370((uint64_t)v10);
  }
  else
  {
    sub_1A908B2D4(a1, (uint64_t)v13);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *int64_t v4 = 0x8000000000000000;
    sub_1A90A5780((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *int64_t v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

double sub_1A90A66BC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  int64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1A90A1D98(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *int64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1A90BF480();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1A90A1A68((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_1A914CE60(v8, v11);
    *int64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

unint64_t sub_1A90A67C0()
{
  unint64_t result = qword_1EB68A8E8;
  if (!qword_1EB68A8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB68A8E8);
  }
  return result;
}

unint64_t sub_1A90A6814()
{
  unint64_t result = qword_1EB68A8E0;
  if (!qword_1EB68A8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB68A8E0);
  }
  return result;
}

uint64_t sub_1A90A6868(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A90A68B0(uint64_t a1)
{
  return sub_1A90A528C(a1, qword_1EB68D970);
}

uint64_t sub_1A90A68BC(uint64_t a1)
{
  return sub_1A90A528C(a1, qword_1EB68D9C0);
}

uint64_t sub_1A90A68C8()
{
  uint64_t result = sub_1A916AC90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A90A6964()
{
  uint64_t result = sub_1A916AC90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1A90A6A10()
{
  unint64_t result = qword_1EB6893B0;
  if (!qword_1EB6893B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6893B0);
  }
  return result;
}

unint64_t sub_1A90A6A64()
{
  unint64_t result = qword_1EB688B38;
  if (!qword_1EB688B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB688B38);
  }
  return result;
}

uint64_t sub_1A90A6AB8()
{
  uint64_t result = sub_1A916AC90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A90A6B68()
{
  uint64_t result = type metadata accessor for DiagnosticsConsentProvider(319);
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_1A90A6C70()
{
  uint64_t result = sub_1A916AC90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1A90A6CFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1A90A6D60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1A90A6DC4()
{
  uint64_t result = sub_1A916AC90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t destroy for Session.Kind(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1A90A6E94(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for Client()
{
  return self;
}

void Client.init(bundle:)(void *a1)
{
  id v4 = objc_msgSend(a1, sel_bundleIdentifier);
  if (!v4)
  {
    __break(1u);
    goto LABEL_7;
  }
  unint64_t v2 = v4;
  uint64_t v5 = (void *)sub_1A916AF60();
  id v6 = objc_msgSend(a1, sel_objectForInfoDictionaryKey_, v5);

  if (!v6)
  {
LABEL_7:

    __break(1u);
    goto LABEL_8;
  }
  sub_1A916B5F0();
  swift_unknownObjectRelease();
  sub_1A90A1A68(v14, v15);
  swift_dynamicCast();
  uint64_t v7 = (void *)sub_1A916AF60();
  id v8 = objc_msgSend(a1, sel_objectForInfoDictionaryKey_, v7);

  if (!v8)
  {
LABEL_8:

    __break(1u);
    goto LABEL_9;
  }
  sub_1A916B5F0();
  swift_unknownObjectRelease();
  sub_1A90A1A68(v14, v15);
  swift_dynamicCast();
  uint64_t v9 = (void *)sub_1A916AF60();
  id v10 = objc_msgSend(a1, sel_objectForInfoDictionaryKey_, v9);

  if (v10)
  {
    sub_1A916B5F0();
    swift_unknownObjectRelease();
    sub_1A90A1A68(v14, v15);
    swift_dynamicCast();
    uint64_t v11 = (void *)sub_1A916AF60();
    swift_bridgeObjectRelease();
    uint64_t v12 = (void *)sub_1A916AF60();
    swift_bridgeObjectRelease();
    uint64_t v13 = (void *)sub_1A916AF60();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_initWithIdentifier_name_version_buildNumber_, v2, v11, v12, v13);

    return;
  }
LABEL_9:

  __break(1u);
}

void Client.__allocating_init(bundle:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  Client.init(bundle:)(a1);
}

uint64_t type metadata accessor for Atomic()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A90A72B0()
{
  uint64_t result = sub_1A916AAD0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for BaseDocumentDirectoryUploadDropboxPathProvider(uint64_t a1)
{
  return sub_1A9098ED8(a1, (uint64_t *)&unk_1EB68A738);
}

uint64_t sub_1A90A7360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a1;
  uint64_t v21 = a2;
  uint64_t v5 = sub_1A916A840();
  uint64_t v18 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1A916AAD0();
  uint64_t v20 = *(void *)(v23 - 8);
  uint64_t v9 = v20;
  MEMORY[0x1F4188790](v23);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v28 = 0;
  unint64_t v29 = 0xE000000000000000;
  sub_1A916B680();
  swift_bridgeObjectRelease();
  unint64_t v28 = 0xD000000000000018;
  unint64_t v29 = 0x80000001A917ACA0;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  sub_1A916A830();
  unint64_t v19 = sub_1A90A6814();
  sub_1A916B5D0();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17(v8, v5);
  sub_1A916AFF0();
  swift_bridgeObjectRelease();
  sub_1A916B050();
  swift_bridgeObjectRelease();
  sub_1A916B050();
  uint64_t v12 = v24;
  sub_1A916AA50();
  swift_bridgeObjectRelease();
  int64_t v22 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  uint64_t v13 = v23;
  v22(v25 + OBJC_IVAR____TtC12AppAnalytics46BaseDocumentDirectoryUploadDropboxPathProvider_baseURL, v11, v23);
  unint64_t v28 = 0;
  unint64_t v29 = 0xE000000000000000;
  sub_1A916B680();
  sub_1A916B050();
  uint64_t v26 = v21;
  uint64_t v27 = a3;
  sub_1A916A830();
  sub_1A916B5D0();
  v17(v8, v18);
  sub_1A916AFF0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A916B050();
  swift_bridgeObjectRelease();
  sub_1A916B050();
  sub_1A916AA50();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v12, v13);
  uint64_t v14 = v25;
  v22(v25 + OBJC_IVAR____TtC12AppAnalytics46BaseDocumentDirectoryUploadDropboxPathProvider_debugBaseURL, v11, v13);
  return v14;
}

void sub_1A90A7710()
{
}

uint64_t type metadata accessor for DocumentDirectoryUploadDropboxPathProvider(uint64_t a1)
{
  return sub_1A9098ED8(a1, (uint64_t *)&unk_1EB68A638);
}

uint64_t sub_1A90A7744@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90A7768(a1);
}

uint64_t sub_1A90A7768@<X0>(uint64_t a1@<X8>)
{
  sub_1A90A3B7C(0, (unint64_t *)&qword_1EB6899A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  id v8 = &v15[-v7];
  uint64_t v9 = v1 + OBJC_IVAR____TtC12AppAnalytics42DocumentDirectoryUploadDropboxPathProvider____lazy_storage___baseURL;
  swift_beginAccess();
  sub_1A90A39C8(v9, (uint64_t)v8);
  uint64_t v10 = sub_1A916AAD0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v11 + 32))(a1, v8, v10);
  }
  sub_1A90A3A5C((uint64_t)v8);
  uint64_t v12 = *(void *)(v1
                  + OBJC_IVAR____TtC12AppAnalytics42DocumentDirectoryUploadDropboxPathProvider_staticPathProvider
                  + 24);
  uint64_t v13 = *(void *)(v1
                  + OBJC_IVAR____TtC12AppAnalytics42DocumentDirectoryUploadDropboxPathProvider_staticPathProvider
                  + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC12AppAnalytics42DocumentDirectoryUploadDropboxPathProvider_staticPathProvider), v12);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_1A90A3AE8((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_1A90A7994@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a1 + *a2;
  uint64_t v5 = sub_1A916AAD0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a3, v4, v5);
}

uint64_t sub_1A90A7A04@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90A7A0C(v1, a1);
}

uint64_t sub_1A90A7A0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A90A7994(a1, &OBJC_IVAR____TtC12AppAnalytics46BaseDocumentDirectoryUploadDropboxPathProvider_baseURL, a2);
}

uint64_t type metadata accessor for DisabledPrivacyValidationProvider()
{
  return self;
}

uint64_t DisabledPrivacyValidationProvider.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = 0;
  return result;
}

void sub_1A90A7A48()
{
}

uint64_t type metadata accessor for StaticUploadDropboxPathProvider(uint64_t a1)
{
  return sub_1A9098ED8(a1, (uint64_t *)&unk_1EB68A510);
}

uint64_t sub_1A90A7A7C@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90A7E6C(a1);
}

uint64_t sub_1A90A7AA0@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1A90A3B7C(0, (unint64_t *)&qword_1EB6899A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = &v17[-v11];
  uint64_t v13 = v3 + *a1;
  swift_beginAccess();
  sub_1A90A39C8(v13, (uint64_t)v12);
  uint64_t v14 = sub_1A916AAD0();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v15 + 32))(a3, v12, v14);
  }
  sub_1A90A3A5C((uint64_t)v12);
  sub_1A90A7CBC(v3, a2, a3);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 16))(v10, a3, v14);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
  swift_beginAccess();
  sub_1A90A3AE8((uint64_t)v10, v13);
  return swift_endAccess();
}

uint64_t sub_1A90A7CBC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  (*(void (**)(void))(a1 + *a2))();
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider_fileManager + 24);
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider_fileManager + 32);
  __swift_project_boxed_opaque_existential_1((void *)(a1 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider_fileManager), v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 120))(a3, v5, v6);
  if (qword_1EB68ACE8 != -1) {
    swift_once();
  }
  id v7 = (id)qword_1EB689AA0;
  sub_1A916B3A0();
  sub_1A90A3B7C(0, (unint64_t *)&qword_1EB68ACD8, (uint64_t (*)(uint64_t))sub_1A90A557C, MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1A916EF60;
  uint64_t v9 = sub_1A916AA90();
  uint64_t v11 = v10;
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v8 + 64) = sub_1A90A67C0();
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v11;
  sub_1A916AD30();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A90A7E6C@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90A7AA0(&OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider____lazy_storage___baseURL, &OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider_baseURLProvider, a1);
}

uint64_t type metadata accessor for URLSessionUploadClientFactory()
{
  return self;
}

uint64_t URLSessionUploadClientFactory.init()()
{
  return v0;
}

uint64_t sub_1A90A7EB8()
{
  uint64_t result = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1A90A7F50()
{
  uint64_t result = type metadata accessor for DiagnosticsConsentProvider(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A90A8014(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for LoggingEventProcessorFormat()
{
  return &type metadata for LoggingEventProcessorFormat;
}

uint64_t sub_1A90A804C()
{
  uint64_t result = sub_1A916ACC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1A90A80E4(unsigned char *a1@<X8>)
{
  uint64_t v2 = sub_1A916AAD0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB688798 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1A916AD50();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB68D9C0);
  id v7 = sub_1A916AD40();
  os_log_type_t v8 = sub_1A916B3A0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1A9088000, v7, v8, "Reading PublicEffectiveUserSettings", v9, 2u);
    MEMORY[0x1AD0EECA0](v9, -1, -1);
  }

  sub_1A916AA00();
  uint64_t v10 = sub_1A916AAF0();
  unint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1A916A960();
  swift_allocObject();
  sub_1A916A950();
  sub_1A90A88FC();
  sub_1A916A940();
  sub_1A90A2FD4(v10, v12);
  swift_release();
  int v13 = v17;
  uint64_t v14 = sub_1A916AD40();
  os_log_type_t v15 = sub_1A916B3D0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 67109120;
    LODWORD(v17) = v13;
    sub_1A916B5A0();
    _os_log_impl(&dword_1A9088000, v14, v15, "Read PublicEffectiveUserSettings: %{BOOL}d", v16, 8u);
    MEMORY[0x1AD0EECA0](v16, -1, -1);
  }

  *a1 = v13 ^ 1;
}

void sub_1A90A8594()
{
  sub_1A90A6D60(319, (unint64_t *)&qword_1EB68ACC8, (uint64_t (*)(uint64_t))type metadata accessor for Session, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for UploadBatchEventProcessor()
{
  uint64_t result = qword_1EB68A428;
  if (!qword_1EB68A428) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A90A86B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SummaryEventConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A90A8718()
{
  uint64_t result = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A90A87B0()
{
  uint64_t v0 = type metadata accessor for SummaryEventConfiguration(0);
  __swift_allocate_value_buffer(v0, qword_1EB688098);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB688098);
  uint64_t v2 = v1 + *(int *)(v0 + 20);
  uint64_t v3 = sub_1A916AAD0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(void *)uint64_t v1 = 0;
  *(unsigned char *)(v1 + 8) = 1;
  return result;
}

uint64_t sub_1A90A8854()
{
  uint64_t result = sub_1A916AAD0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1A90A88CC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1A90A8C58(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

unint64_t sub_1A90A88FC()
{
  unint64_t result = qword_1EB687A70;
  if (!qword_1EB687A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB687A70);
  }
  return result;
}

uint64_t sub_1A90A8950@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  int v13 = a2;
  sub_1A90A56BC(0, &qword_1EB687AC0, (void (*)(void))sub_1A90A8C04);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  os_log_type_t v8 = (char *)&v12 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A90A8C04();
  sub_1A916BB20();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v9 = v13;
  char v10 = sub_1A916B8B0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  *uint64_t v9 = v10 & 1;
  return result;
}

unint64_t sub_1A90A8AEC()
{
  unint64_t result = qword_1EB687A68;
  if (!qword_1EB687A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB687A68);
  }
  return result;
}

uint64_t sub_1A90A8B40()
{
  return 0x65756C6176;
}

unint64_t sub_1A90A8B5C()
{
  unint64_t result = qword_1EB687A60;
  if (!qword_1EB687A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB687A60);
  }
  return result;
}

unint64_t sub_1A90A8BB0()
{
  unint64_t result = qword_1EB687A58;
  if (!qword_1EB687A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB687A58);
  }
  return result;
}

unint64_t sub_1A90A8C04()
{
  unint64_t result = qword_1EB687A50;
  if (!qword_1EB687A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB687A50);
  }
  return result;
}

uint64_t sub_1A90A8C58(void *a1)
{
  sub_1A90A56BC(0, &qword_1EB687AB0, (void (*)(void))sub_1A90A9220);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v11 - v6;
  unsigned __int8 v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A90A9220();
  unsigned __int8 v9 = v8;
  sub_1A916BB20();
  if (!v1)
  {
    sub_1A90A8E30();
    sub_1A916B8E0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    unsigned __int8 v9 = v12;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v9 & 1;
}

uint64_t sub_1A90A8E00@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1A90A8E84(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

unint64_t sub_1A90A8E30()
{
  unint64_t result = qword_1EB687A48;
  if (!qword_1EB687A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB687A48);
  }
  return result;
}

uint64_t sub_1A90A8E84(void *a1)
{
  sub_1A90A56BC(0, &qword_1EB687AB8, (void (*)(void))sub_1A90A90F8);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v11 - v6;
  unsigned __int8 v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A90A90F8();
  unsigned __int8 v9 = v8;
  sub_1A916BB20();
  if (!v1)
  {
    sub_1A90A8AEC();
    sub_1A916B8E0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    unsigned __int8 v9 = v12;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v9 & 1;
}

unint64_t sub_1A90A902C()
{
  return 0xD000000000000019;
}

unint64_t sub_1A90A9050()
{
  unint64_t result = qword_1EB687A40;
  if (!qword_1EB687A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB687A40);
  }
  return result;
}

unint64_t sub_1A90A90A4()
{
  unint64_t result = qword_1EB687A38;
  if (!qword_1EB687A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB687A38);
  }
  return result;
}

unint64_t sub_1A90A90F8()
{
  unint64_t result = qword_1EB687A30;
  if (!qword_1EB687A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB687A30);
  }
  return result;
}

uint64_t sub_1A90A914C()
{
  return 0x7463697274736572;
}

unint64_t sub_1A90A9178()
{
  unint64_t result = qword_1EB687A28;
  if (!qword_1EB687A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB687A28);
  }
  return result;
}

unint64_t sub_1A90A91CC()
{
  unint64_t result = qword_1EB687A20;
  if (!qword_1EB687A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB687A20);
  }
  return result;
}

unint64_t sub_1A90A9220()
{
  unint64_t result = qword_1EB687A18;
  if (!qword_1EB687A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB687A18);
  }
  return result;
}

uint64_t type metadata accessor for UploadDropboxFileManager()
{
  return self;
}

void *sub_1A90A9298()
{
  return sub_1A90A92C8();
}

id sub_1A90A92B0()
{
  return sub_1A90A93E0();
}

void *sub_1A90A92C8()
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  id v0 = objc_msgSend(self, sel_defaultManager);
  uint64_t v1 = (void *)sub_1A916AA40();
  v7[0] = 0;
  id v2 = objc_msgSend(v0, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v1, 0, 4, v7);

  id v3 = v7[0];
  if (v2)
  {
    sub_1A916AAD0();
    uint64_t v1 = (void *)sub_1A916B190();
    id v4 = v3;
  }
  else
  {
    id v5 = v7[0];
    sub_1A916A990();

    swift_willThrow();
  }
  return v1;
}

id sub_1A90A93E0()
{
  v5[1] = *(id *)MEMORY[0x1E4F143B8];
  id v0 = objc_msgSend(self, sel_defaultManager);
  uint64_t v1 = (void *)sub_1A916AA40();
  v5[0] = 0;
  unsigned int v2 = objc_msgSend(v0, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v1, 1, 0, v5);

  if (v2) {
    return v5[0];
  }
  id v4 = v5[0];
  sub_1A916A990();

  return (id)swift_willThrow();
}

uint64_t type metadata accessor for SHA1Base64SigningService()
{
  return self;
}

uint64_t sub_1A90A94F4()
{
  sub_1A9098BD0(0, &qword_1EB687AD0, (uint64_t (*)(uint64_t))sub_1A90992F4, MEMORY[0x1E4FBD2A0]);
  swift_allocObject();
  uint64_t result = sub_1A916BB90();
  qword_1EB687A10 = result;
  return result;
}

uint64_t sub_1A90A9574()
{
  uint64_t result = sub_1A916AAD0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for UploadBatchEventConfig()
{
  uint64_t result = qword_1EB6898F8;
  if (!qword_1EB6898F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A90A9670()
{
  uint64_t v0 = sub_1A916AAD0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = NSSearchPathForDirectoriesInDomains(NSApplicationSupportDirectory, 1uLL, 1);
  uint64_t v5 = sub_1A916B190();

  if (*(void *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1A916AA10();
    swift_bridgeObjectRelease();
    uint64_t v6 = (objc_class *)type metadata accessor for UploadBatchEventConfig();
    uint64_t v7 = objc_allocWithZone(v6);
    *(void *)&v7[OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch] = 50;
    *(void *)&v7[OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch] = 200000;
    v7[OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled] = 0;
    v7[OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled] = 0;
    *(void *)&v7[OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries] = 5;
    (*(void (**)(unsigned char *, char *, uint64_t))(v1 + 16))(&v7[OBJC_IVAR___AAUploadBatchEventConfig_directory], v3, v0);
    v10.receiver = v7;
    v10.super_class = v6;
    id v8 = objc_msgSendSuper2(&v10, sel_init);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    qword_1EB6897B8 = (uint64_t)v8;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

id static UploadBatchEventConfig.default.getter()
{
  if (qword_1EB689870 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB6897B8;

  return v0;
}

id UploadBatchEventConfig.with(debuggingEnabled:)(int a1)
{
  int v17 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_1A916AAD0();
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch);
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch);
  char v9 = *(unsigned char *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled);
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries);
  uint64_t v11 = v1 + OBJC_IVAR___AAUploadBatchEventConfig_directory;
  unsigned __int8 v12 = *(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16);
  v12(v7, v11, v3, v5);
  int v13 = objc_allocWithZone(ObjectType);
  *(void *)&v13[OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch] = v16;
  *(void *)&v13[OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch] = v8;
  v13[OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled] = v9;
  v13[OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled] = v17;
  *(void *)&v13[OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries] = v10;
  ((void (*)(unsigned char *, char *, uint64_t))v12)(&v13[OBJC_IVAR___AAUploadBatchEventConfig_directory], v7, v3);
  v18.receiver = v13;
  v18.super_class = ObjectType;
  id v14 = objc_msgSendSuper2(&v18, sel_init);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v14;
}

id UploadBatchEventConfig.with(maxUploadTries:)(uint64_t a1)
{
  uint64_t v17 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_1A916AAD0();
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch);
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch);
  char v9 = *(unsigned char *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled);
  char v10 = *(unsigned char *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled);
  uint64_t v11 = v1 + OBJC_IVAR___AAUploadBatchEventConfig_directory;
  unsigned __int8 v12 = *(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16);
  v12(v7, v11, v3, v5);
  int v13 = objc_allocWithZone(ObjectType);
  *(void *)&v13[OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch] = v16;
  *(void *)&v13[OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch] = v8;
  v13[OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled] = v9;
  v13[OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled] = v10;
  *(void *)&v13[OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries] = v17;
  ((void (*)(unsigned char *, char *, uint64_t))v12)(&v13[OBJC_IVAR___AAUploadBatchEventConfig_directory], v7, v3);
  v18.receiver = v13;
  v18.super_class = ObjectType;
  id v14 = objc_msgSendSuper2(&v18, sel_init);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v14;
}

id UploadBatchEventConfig.with(maxEventsPerSessionBatch:)(uint64_t a1)
{
  uint64_t v17 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_1A916AAD0();
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch);
  char v8 = *(unsigned char *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled);
  char v9 = *(unsigned char *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled);
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries);
  uint64_t v11 = v1 + OBJC_IVAR___AAUploadBatchEventConfig_directory;
  unsigned __int8 v12 = *(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16);
  v12(v7, v11, v3, v5);
  int v13 = objc_allocWithZone(ObjectType);
  *(void *)&v13[OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch] = v17;
  *(void *)&v13[OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch] = v16;
  v13[OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled] = v8;
  v13[OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled] = v9;
  *(void *)&v13[OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries] = v10;
  ((void (*)(unsigned char *, char *, uint64_t))v12)(&v13[OBJC_IVAR___AAUploadBatchEventConfig_directory], v7, v3);
  v18.receiver = v13;
  v18.super_class = ObjectType;
  id v14 = objc_msgSendSuper2(&v18, sel_init);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v14;
}

uint64_t sub_1A90A9E0C()
{
  uint64_t result = type metadata accessor for Session();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t LoggingEventProcessor.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  return MEMORY[0x1F4186488](v0, 64, 7);
}

uint64_t type metadata accessor for LoggingEventProcessor()
{
  return self;
}

uint64_t sub_1A90A9F08()
{
  uint64_t result = type metadata accessor for DiagnosticsConsentProvider(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for TransparencyLogging()
{
  return self;
}

id sub_1A90A9FD4(char a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v1[OBJC_IVAR___AATransparencyLogging_isEnabled] = a1;
  if (a1)
  {
    if (qword_1EB68ACE8 != -1) {
      swift_once();
    }
  }
  else if (qword_1EB68ACE8 != -1)
  {
    swift_once();
  }
  id v4 = (id)qword_1EB689AA0;
  sub_1A916B3D0();
  sub_1A916AD30();

  v6.receiver = v1;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t type metadata accessor for SessionGroupManager()
{
  return self;
}

uint64_t type metadata accessor for LazyEventProcessor()
{
  return self;
}

uint64_t getEnumTagSinglePayload for AnyDataEventEntry(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t type metadata accessor for TrackingConsent()
{
  return self;
}

char *sub_1A90AA1DC()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = OBJC_IVAR___AATrackingConsent_accessGroup;
  uint64_t v3 = v0;
  *(void *)&v0[v2] = dispatch_group_create();
  uint64_t v4 = OBJC_IVAR___AATrackingConsent_consented;
  sub_1A90CB34C();
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 20) = 0;
  *(unsigned char *)(v5 + 16) = 0;
  *(void *)&v3[v4] = v5;

  v14.receiver = v3;
  v14.super_class = ObjectType;
  objc_super v6 = (char *)objc_msgSendSuper2(&v14, sel_init);
  uint64_t v7 = *(NSObject **)&v6[OBJC_IVAR___AATrackingConsent_accessGroup];
  char v8 = v6;
  dispatch_group_enter(v7);
  if (qword_1EB688700 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1A916AD50();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EB68D970);
  uint64_t v10 = sub_1A916AD40();
  os_log_type_t v11 = sub_1A916B3D0();
  if (os_log_type_enabled(v10, v11))
  {
    unsigned __int8 v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unsigned __int8 v12 = 0;
    _os_log_impl(&dword_1A9088000, v10, v11, "Will track user consent for tracking analytics; All analytics processing will be queued until user consent",
      v12,
      2u);
    MEMORY[0x1AD0EECA0](v12, -1, -1);
  }

  return v8;
}

id sub_1A90AA348()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TrackingConsent()), sel_init);
  qword_1EB688DF0 = (uint64_t)result;
  return result;
}

id static TrackingConsent.shared.getter()
{
  if (qword_1EB688E00 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB688DF0;

  return v0;
}

Swift::Void __swiftcall TrackingConsent.allow()()
{
  unint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR___AATrackingConsent_consented);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1A90CB2D0(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1A90AA438(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)id result = (a2 - 1);
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 1;
  }
  else
  {
    *(unsigned char *)(result + 16) = 0;
  }
  return result;
}

uint64_t SessionObserver.dispose(on:)()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1A90AA464()
{
  uint64_t result = type metadata accessor for SessionManager.SessionState(319);
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

unint64_t sub_1A90AA558()
{
  unint64_t result = qword_1EB688240;
  if (!qword_1EB688240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB688240);
  }
  return result;
}

unint64_t sub_1A90AA5AC()
{
  unint64_t result = qword_1EB688238;
  if (!qword_1EB688238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB688238);
  }
  return result;
}

void static SessionManager.Options.gracefulEventCreation.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static SessionManager.Options.gracefulNoSessionEventSubmission.getter(void *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1A90AA618()
{
  uint64_t result = type metadata accessor for Session();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1A90AA6B4()
{
  uint64_t result = type metadata accessor for SequenceEntry.Kind(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A90AA74C()
{
  uint64_t result = type metadata accessor for TimedData();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for EventData();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CrashDetector()
{
  return self;
}

uint64_t sub_1A90AA83C(void *a1)
{
  unint64_t v2 = (void *)sub_1A916AF60();
  id v3 = objc_msgSend(a1, sel_objectForKey_, v2);

  if (v3)
  {
    sub_1A916B5F0();
    swift_unknownObjectRelease();
    sub_1A909B5DC((uint64_t)v7);
    uint64_t v4 = (void *)sub_1A916AF60();
    id v5 = objc_msgSend(a1, sel_BOOLForKey_, v4);
  }
  else
  {
    memset(v7, 0, sizeof(v7));
    sub_1A909B5DC((uint64_t)v7);
    return 1;
  }
  return (uint64_t)v5;
}

uint64_t sub_1A90AA920()
{
  id v1 = objc_msgSend(self, sel_standardUserDefaults);
  char v2 = sub_1A90AA83C(v1);
  *(void *)(v0 + 16) = v1;
  *(unsigned char *)(v0 + 24) = (v2 & 1) == 0;
  id v3 = self;
  id v4 = v1;
  id v5 = objc_msgSend(v3, sel_defaultCenter);
  swift_retain();
  objc_super v6 = (void *)sub_1A916AF60();
  objc_msgSend(v5, sel_addObserver_selector_name_object_, v0, sel_willTerminate, v6, 0);

  swift_release();
  id v7 = objc_msgSend(v3, sel_defaultCenter);
  swift_retain();
  char v8 = (void *)sub_1A916AF60();
  objc_msgSend(v7, sel_addObserver_selector_name_object_, v0, sel_willTerminate, v8, 0);

  swift_release();
  if (*(unsigned char *)(v0 + 24) == 1)
  {
    if (qword_1EB68ACE8 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  if (qword_1EB68ACE8 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  id v9 = (id)qword_1EB689AA0;
  sub_1A916B3D0();
  sub_1A916AD30();

  uint64_t v10 = (void *)sub_1A916AF60();
  objc_msgSend(v4, sel_setBool_forKey_, 0, v10);

  return v0;
}

uint64_t sub_1A90AABBC()
{
  type metadata accessor for CrashDetector();
  swift_allocObject();
  uint64_t result = sub_1A90AA920();
  qword_1EB688F98 = result;
  return result;
}

uint64_t static CrashDetector.shared.getter()
{
  if (qword_1EB688FA8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_1A90AAC70()
{
  uint64_t result = sub_1A916AC90();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t AccessTracker.time<A>(_:submitAndRestartWithSession:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  v19[0] = a3;
  v19[1] = a4;
  uint64_t v6 = sub_1A916AC90();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A916AE70();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  int v13 = (uint64_t *)((char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v15 = result;
    uint64_t v16 = *(void **)(*(void *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *int v13 = v16;
    (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCBF0], v10);
    id v17 = v16;
    LOBYTE(v16) = sub_1A916AE90();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v11 + 8))(v13, v10);
    if (v16)
    {
      unint64_t v18 = *(void *)(v15 + 96);
      swift_retain();
      sub_1A916AC80();
      sub_1A908A498(a1, v18, (uint64_t)v9, a2 & 1, v19[0]);
      swift_release();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1A90AAF3C()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1A916AF90();
  }
  sub_1A90A5FA0();
  uint64_t result = sub_1A916B520();
  qword_1EB689AA0 = result;
  return result;
}

uint64_t type metadata accessor for MescalSigner()
{
  return self;
}

uint64_t sub_1A90AB034()
{
  uint64_t result = sub_1A916AD50();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t type metadata accessor for FlushManager()
{
  uint64_t result = qword_1EB689060;
  if (!qword_1EB689060) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A90AB160(uint64_t a1)
{
  uint64_t v3 = sub_1A916AAD0();
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = v1[26];
  uint64_t v5 = v1[27];
  __swift_project_boxed_opaque_existential_1(v1 + 23, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 136))(a1, v4, v5);
}

void sub_1A90AB4AC()
{
  sub_1A90AB4BC(*(NSObject **)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48));
}

void sub_1A90AB4BC(NSObject *a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v65 = a4;
  int v66 = a5;
  sub_1A90A613C(0, (unint64_t *)&qword_1EB6899A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v59 - v9;
  uint64_t v11 = sub_1A916AAD0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  objc_super v14 = (char *)v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t isa = (uint64_t)a1[21].isa;
  Class v16 = a1[22].isa;
  unint64_t v68 = a1 + 18;
  __swift_project_boxed_opaque_existential_1(&a1[18].isa, isa);
  (*((void (**)(uint64_t, Class))v16 + 1))(isa, v16);
  uint64_t v17 = sub_1A90AB160((uint64_t)v14);
  uint64_t v73 = v11;
  uint64_t v74 = v12;
  unint64_t v18 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v71 = v12 + 8;
  char v72 = v14;
  uint64_t v19 = v11;
  uint64_t v20 = v17;
  unint64_t v70 = v18;
  v18(v14, v19);
  uint64_t v64 = *(void *)(v20 + 16);
  if (v64)
  {
    uint64_t v21 = (char *)a1 + OBJC_IVAR____TtC12AppAnalytics12FlushManager_logger;
    swift_retain_n();
    swift_bridgeObjectRetain();
    v59[1] = v21;
    int64_t v22 = sub_1A916AD40();
    os_log_type_t v23 = sub_1A916B3D0();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v60 = a2;
    v59[2] = a3;
    uint64_t v69 = a1;
    if (v24)
    {
      uint64_t v25 = swift_slowAlloc();
      id v67 = (void (**)(void, void, void, void))swift_slowAlloc();
      v77[0] = (uint64_t)v67;
      *(_DWORD *)uint64_t v25 = 134218242;
      uint64_t v75 = *(void *)(v20 + 16);
      uint64_t v63 = &v76;
      sub_1A916B5A0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2082;
      uint64_t v62 = v25 + 14;
      uint64_t v26 = (uint64_t)a1[21].isa;
      Class v27 = a1[22].isa;
      __swift_project_boxed_opaque_existential_1(v68, v26);
      unint64_t v28 = v72;
      (*((void (**)(uint64_t, Class))v27 + 1))(v26, v27);
      uint64_t v29 = sub_1A916A9E0();
      unint64_t v31 = v30;
      unint64_t v32 = v28;
      uint64_t v33 = v73;
      v70(v32, v73);
      uint64_t v75 = sub_1A90DCF6C(v29, v31, v77);
      sub_1A916B5A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A9088000, v22, v23, "Flush manager attempting to flush directory with %ld items, url=%{public}s", (uint8_t *)v25, 0x16u);
      char v34 = v67;
      swift_arrayDestroy();
      MEMORY[0x1AD0EECA0](v34, -1, -1);
      MEMORY[0x1AD0EECA0](v25, -1, -1);
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease();

      uint64_t v33 = v73;
    }
    unint64_t v68 = dispatch_group_create();
    uint64_t v38 = 0;
    uint64_t v63 = *(uint64_t **)(v74 + 16);
    unint64_t v39 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
    v59[0] = v20;
    unint64_t v40 = v20 + v39;
    uint64_t v41 = *(void *)(v74 + 72);
    id v67 = (void (**)(void, void, void, void))(v74 + 56);
    uint64_t v42 = (unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
    v74 += 16;
    unsigned int v61 = (void (**)(uint64_t, char *, uint64_t))(v74 + 16);
    uint64_t v62 = v41;
    uint64_t v43 = (uint64_t)v72;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v63)(v10, v40, v33);
      uint64_t v44 = v38 + 1;
      if (__OFADD__(v38, 1))
      {
        __break(1u);
        return;
      }
      int v45 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*v67;
      (*v67)(v10, 0, 1, v33);
      if ((*v42)(v10, 1, v33) == 1) {
        break;
      }
      (*v61)(v43, v10, v33);
      uint64_t v46 = v68;
      dispatch_group_enter(v68);
      uint64_t v47 = swift_allocObject();
      *(void *)(v47 + 16) = v46;
      uint64_t v48 = v46;
      sub_1A90C5934(v43, v65, v66, (uint64_t)sub_1A90AFEC8, v47);
      swift_release();
      uint64_t v33 = v73;
      sub_1A916B3F0();
      v70((char *)v43, v33);
      ++v38;
      v40 += v62;
      if (v44 == v64)
      {
        v45(v10, 1, 1, v33);
        break;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v49 = v69;
    uint64_t v50 = (void *)*((void *)v69[2].isa + 3);
    sub_1A90CA784();
    id v51 = v50;
    sub_1A916B450();

    uint64_t v52 = v77[0];
    swift_beginAccess();
    Class v53 = v49[29].isa;
    uint64_t v54 = *((void *)v53 + 2);
    swift_retain();
    os_unfair_lock_lock_with_options();
    swift_beginAccess();
    *((unsigned char *)v53 + 24) = 2;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v54 + 16));
    swift_release();
    sub_1A90C8508(v52);
    swift_bridgeObjectRelease();
    uint64_t v55 = sub_1A916AD40();
    os_log_type_t v56 = sub_1A916B3D0();
    if (os_log_type_enabled(v55, v56))
    {
      long long v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v57 = 0;
      _os_log_impl(&dword_1A9088000, v55, v56, "Flush manager finished flushing all files.", v57, 2u);
      MEMORY[0x1AD0EECA0](v57, -1, -1);
    }

    if (v60) {
      v60(v58);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    Class v35 = a1[29].isa;
    uint64_t v36 = *((void *)v35 + 2);
    swift_retain();
    os_unfair_lock_lock_with_options();
    swift_beginAccess();
    *((unsigned char *)v35 + 24) = 2;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v36 + 16));
    uint64_t v37 = swift_release();
    if (a2) {
      a2(v37);
    }
  }
}

uint64_t dispatch thunk of FlushManager.repairThenFlush(repair:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

char *sub_1A90ABC24(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v48 = a1;
  uint64_t v49 = a5;
  uint64_t v54 = a2;
  uint64_t v55 = a4;
  uint64_t v47 = (uint64_t)a3;
  uint64_t v53 = a9;
  uint64_t v12 = sub_1A916AAD0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  Class v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = a8;
  uint64_t v50 = *(void *)(a8 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v52 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  id v51 = (char *)&v46 - v19;
  (*(void (**)(void))(v20 + 32))();
  type metadata accessor for UploadDropboxFileManager();
  uint64_t v21 = swift_allocObject();
  type metadata accessor for MescalSigner();
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = type metadata accessor for SHA1Base64SigningService();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v22;
  *(void *)(v24 + 24) = &off_1EFF9D600;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, (uint64_t)a5 + OBJC_IVAR___AAUploadBatchEventConfig_directory, v12);
  swift_retain();
  id v25 = objc_msgSend(a3, sel_name);
  uint64_t v26 = sub_1A916AF90();
  uint64_t v28 = v27;

  type metadata accessor for DocumentDirectoryUploadDropboxPathProvider(0);
  uint64_t v29 = swift_allocObject();
  swift_retain();
  uint64_t v30 = sub_1A908B338((uint64_t)v16, v26, v28, v21, v29);
  v57[3] = v23;
  v57[4] = &off_1EFF9DA20;
  uint64_t v46 = v24;
  v57[0] = v24;
  type metadata accessor for FlushManager();
  unint64_t v31 = (char *)swift_allocObject();
  uint64_t v32 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v57, v23);
  MEMORY[0x1F4188790](v32);
  char v34 = (uint64_t *)((char *)&v46 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v35 + 16))(v34);
  uint64_t v36 = *v34;
  uint64_t v38 = v50;
  uint64_t v37 = v51;
  uint64_t v39 = (uint64_t)v52;
  uint64_t v40 = v56;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v52, v51, v56);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v45 = v21;
  uint64_t v41 = v54;
  uint64_t v42 = v49;
  uint64_t v43 = sub_1A90AC18C(v48, v54, v47, v55, v49, v39, v36, v30, v45, v31, v40, v53);
  swift_release();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v57);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v56);
  return v43;
}

char *FlushManager.__allocating_init(appSessionManager:client:endpoint:contentType:config:clientFactory:)(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v13 = *(void *)(a6 + 24);
  uint64_t v14 = *(void *)(a6 + 32);
  uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1(a6, v13);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v18 + 16))(v17);
  uint64_t v19 = sub_1A90ABC24(a1, a2, a3, a4, a5, (uint64_t)v17, v6, v13, v14);
  __swift_destroy_boxed_opaque_existential_0(a6);
  return v19;
}

char *sub_1A90AC18C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10, uint64_t a11, uint64_t a12)
{
  uint64_t v36 = a7;
  uint64_t v42 = a5;
  uint64_t v38 = a4;
  uint64_t v41 = a3;
  uint64_t v40 = a2;
  uint64_t v39 = a1;
  uint64_t v35 = a9;
  uint64_t v37 = sub_1A916B430();
  uint64_t v14 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1A916B420();
  MEMORY[0x1F4188790](v17);
  uint64_t v18 = sub_1A916AE10();
  MEMORY[0x1F4188790](v18 - 8);
  v47[3] = a11;
  v47[4] = a12;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v47);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32))(boxed_opaque_existential_1, a6, a11);
  void v46[3] = type metadata accessor for DocumentDirectoryUploadDropboxPathProvider(0);
  v46[4] = &off_1EFFA2578;
  v46[0] = a8;
  v45[3] = type metadata accessor for UploadDropboxFileManager();
  v45[4] = &off_1EFFA1230;
  v45[0] = v35;
  v44[3] = type metadata accessor for SHA1Base64SigningService();
  v44[4] = &off_1EFF9DA20;
  v44[0] = v36;
  uint64_t v36 = sub_1A90A5FE0(0, (unint64_t *)&qword_1EB68A908);
  sub_1A916ADD0();
  uint64_t v43 = MEMORY[0x1E4FBC860];
  sub_1A90A6868((unint64_t *)&qword_1EB68A900, MEMORY[0x1E4FBCC10]);
  uint64_t v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1A90A613C(0, (unint64_t *)&qword_1EB68A8F0, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1A909E7D4((unint64_t *)&qword_1EB68A8F8, (unint64_t *)&qword_1EB68A8F0, v20);
  sub_1A916B610();
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FBCC58], v37);
  *((void *)a10 + 30) = sub_1A916B480();
  uint64_t v21 = OBJC_IVAR____TtC12AppAnalytics12FlushManager_logger;
  if (qword_1EB688700 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1A916AD50();
  uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1EB68D970);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(&a10[v21], v23, v22);
  *((void *)a10 + 2) = v39;
  *((void *)a10 + 3) = &off_1EFFA1A48;
  uint64_t v24 = v40;
  uint64_t v25 = v41;
  *((void *)a10 + 4) = v40;
  *((void *)a10 + 5) = v25;
  uint64_t v26 = v42;
  *((void *)a10 + 6) = v38;
  *((void *)a10 + 7) = v26;
  sub_1A90A0DC8((uint64_t)v47, (uint64_t)(a10 + 64));
  sub_1A90A0DC8((uint64_t)v44, (uint64_t)(a10 + 104));
  sub_1A90A0DC8((uint64_t)v46, (uint64_t)(a10 + 144));
  sub_1A90A0DC8((uint64_t)v45, (uint64_t)(a10 + 184));
  swift_beginAccess();
  sub_1A90A63C8(0, (unint64_t *)&qword_1EB688E08, (uint64_t)&type metadata for FlushManager.State, (uint64_t (*)(void, uint64_t))type metadata accessor for Atomic);
  uint64_t v27 = swift_allocObject();
  type metadata accessor for UnfairLock();
  uint64_t v28 = swift_allocObject();
  swift_retain();
  id v29 = v24;
  swift_unknownObjectRetain();
  uint64_t v30 = v26;
  unint64_t v31 = (_DWORD *)swift_slowAlloc();
  *(void *)(v28 + 16) = v31;
  *unint64_t v31 = 0;
  *(_DWORD *)(v28 + 24) = 0x10000;
  *(void *)(v27 + 16) = v28;
  *(unsigned char *)(v27 + 24) = 0;
  *((void *)a10 + 29) = v27;
  swift_endAccess();
  LOBYTE(v27) = v30[OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled];
  id v32 = objc_allocWithZone((Class)type metadata accessor for TransparencyLogging());
  id v33 = sub_1A90A9FD4(v27);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v46);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
  *((void *)a10 + 28) = v33;
  return a10;
}

unint64_t sub_1A90AC704()
{
  unint64_t result = qword_1EB688230;
  if (!qword_1EB688230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB688230);
  }
  return result;
}

unint64_t sub_1A90AC758()
{
  unint64_t result = qword_1EB688228;
  if (!qword_1EB688228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB688228);
  }
  return result;
}

uint64_t type metadata accessor for AccessQueue()
{
  return self;
}

void sub_1A90AC7D0()
{
  uint64_t v0 = sub_1A916AE10();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v17 - v5;
  sub_1A90A601C();
  uint64_t v7 = (void *)sub_1A916B440();
  uint64_t v8 = (objc_class *)type metadata accessor for AccessQueue();
  uint64_t v9 = (char *)objc_allocWithZone(v8);
  *(void *)&v9[OBJC_IVAR___AAAccessQueue_queue] = v7;
  uint64_t v10 = v9;
  id v11 = v7;
  sub_1A916ADD0();
  uint64_t v12 = &v10[OBJC_IVAR___AAAccessQueue__qos];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  sub_1A90A4F94(0, &qword_1EB689598, MEMORY[0x1E4FBCB80], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Atomic);
  uint64_t v13 = (char *)swift_allocObject();
  type metadata accessor for UnfairLock();
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = (_DWORD *)swift_slowAlloc();
  *(void *)(v14 + 16) = v15;
  *uint64_t v15 = 0;
  *(_DWORD *)(v14 + 24) = 0x10000;
  *((void *)v13 + 2) = v14;
  (*(void (**)(char *, char *, uint64_t))(v1 + 32))(&v13[*(void *)(*(void *)v13 + 96)], v4, v0);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  *(void *)uint64_t v12 = v13;
  swift_endAccess();

  v18.receiver = v10;
  v18.super_class = v8;
  id v16 = objc_msgSendSuper2(&v18, sel_init);

  qword_1EB687E08 = (uint64_t)v16;
}

id sub_1A90ACA30(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;

  return v3;
}

id static AccessQueue.background.getter()
{
  return sub_1A90ACA30(&qword_1EB689590, (void **)&qword_1EB689580);
}

uint64_t sub_1A90ACAA0()
{
  uint64_t result = type metadata accessor for SummaryEventConfiguration(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AppSessionManager()
{
  uint64_t result = qword_1EB6883A8;
  if (!qword_1EB6883A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1A90ACBB8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for SummaryEventConfiguration(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[5] = 0;
  v3[6] = 0;
  v3[7] = MEMORY[0x1E4FBC860];
  v3[2] = 0;
  v3[3] = a1;
  uint64_t v10 = *(void **)(a2 + OBJC_IVAR___AATrackingConsent_accessGroup);
  v3[4] = v10;
  sub_1A90A0DC8(a3, (uint64_t)(v3 + 8));
  uint64_t v11 = qword_1EB6887D0;
  id v12 = a1;
  id v13 = v10;
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v7, (uint64_t)qword_1EB688098);
  sub_1A9098E08(v14, (uint64_t)v9, type metadata accessor for SummaryEventConfiguration);
  __swift_destroy_boxed_opaque_existential_0(a3);
  sub_1A90A86B4((uint64_t)v9, (uint64_t)v3 + OBJC_IVAR____TtC12AppAnalytics17AppSessionManager_summaryEventConfiguration);
  return v3;
}

void *AppSessionManager.init(accessQueue:trackingConsent:crashDetector:)(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = sub_1A90ACBB8(a1, (uint64_t)a2, a3);

  return v5;
}

Swift::Void __swiftcall AppSessionManager.startAppSession()()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = swift_allocObject();
  *(unsigned char *)(v2 + 16) = 1;
  *(void *)(v2 + 24) = v0;
  swift_retain();
  sub_1A908CAA8(v1, (uint64_t)sub_1A90ACDD0, v2);

  swift_release();
}

uint64_t sub_1A90ACDD0()
{
  return sub_1A90ACDDC(*(unsigned char *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1A90ACDDC(char a1, void *a2)
{
  uint64_t v4 = sub_1A916AE70();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1A916ACC0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_1A916ACB0();
    uint64_t v12 = sub_1A916ACA0();
    uint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v15 = *(void **)(a2[3] + OBJC_IVAR___AAAccessQueue_queue);
    *uint64_t v7 = v15;
    (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
    id v16 = v15;
    LOBYTE(v15) = sub_1A916AE90();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v7, v4);
    if ((v15 & 1) == 0)
    {
LABEL_13:
      __break(1u);
      return result;
    }
    a2[5] = v12;
    a2[6] = v14;
    swift_bridgeObjectRelease();
  }
  if (qword_1EB68ACE8 != -1) {
    swift_once();
  }
  objc_super v18 = (void *)qword_1EB689AA0;
  sub_1A90A6204(0, (unint64_t *)&qword_1EB68ACD8, (uint64_t (*)(uint64_t))sub_1A90A557C, MEMORY[0x1E4FBBE00]);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1A916EF60;
  uint64_t v20 = *(void **)(a2[3] + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v7 = v20;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
  id v21 = v18;
  id v22 = v20;
  LOBYTE(v20) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v20 & 1) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v24 = a2[5];
  unint64_t v23 = a2[6];
  *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v19 + 64) = sub_1A90A67C0();
  uint64_t v25 = 7104878;
  if (v23) {
    uint64_t v25 = v24;
  }
  unint64_t v26 = 0xE300000000000000;
  if (v23) {
    unint64_t v26 = v23;
  }
  *(void *)(v19 + 32) = v25;
  *(void *)(v19 + 40) = v26;
  swift_bridgeObjectRetain();
  sub_1A916B3D0();
  sub_1A916AD30();

  return swift_bridgeObjectRelease();
}

unint64_t sub_1A90AD134()
{
  unint64_t result = qword_1EB687870;
  if (!qword_1EB687870)
  {
    sub_1A916ACC0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB687870);
  }
  return result;
}

Class initAMSBag()
{
  if (LoadAppleMediaServices_loadPredicate != -1) {
    dispatch_once(&LoadAppleMediaServices_loadPredicate, &__block_literal_global);
  }
  Class result = objc_getClass("AMSBag");
  classAMSBag = (uint64_t)result;
  getAMSBagClass = (uint64_t (*)())AMSBagFunction;
  return result;
}

id AMSBagFunction()
{
  return (id)classAMSBag;
}

void __LoadAppleMediaServices_block_invoke()
{
  LoadAppleMediaServices_frameworkLibrary = (uint64_t)dlopen("/System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices", 2);
  if (!LoadAppleMediaServices_frameworkLibrary) {
    NSLog(&cfstr_FailedToSoftLi.isa);
  }
}

Class initAMSMutableBagKeySet()
{
  if (LoadAppleMediaServices_loadPredicate != -1) {
    dispatch_once(&LoadAppleMediaServices_loadPredicate, &__block_literal_global);
  }
  Class result = objc_getClass("AMSMutableBagKeySet");
  classAMSMutableBagKeySet = (uint64_t)result;
  getAMSMutableBagKeySetClass = (uint64_t (*)())AMSMutableBagKeySetFunction;
  return result;
}

id AMSMutableBagKeySetFunction()
{
  return (id)classAMSMutableBagKeySet;
}

Class initAMSMescal()
{
  if (LoadAppleMediaServices_loadPredicate != -1) {
    dispatch_once(&LoadAppleMediaServices_loadPredicate, &__block_literal_global);
  }
  Class result = objc_getClass("AMSMescal");
  classAMSMescal = (uint64_t)result;
  getAMSMescalClass = (uint64_t (*)())AMSMescalFunction;
  return result;
}

id AMSMescalFunction()
{
  return (id)classAMSMescal;
}

uint64_t static SummaryEventConfiguration.disabled.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90AD87C(&qword_1EB6887D0, (uint64_t)qword_1EB688098, a1);
}

uint64_t sub_1A90AD538(uint64_t a1)
{
  return sub_1A90AD678(a1, qword_1EB688638);
}

uint64_t static SummaryEventConfiguration.defaultCadence.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90AD87C(qword_1EB688650, (uint64_t)qword_1EB688638, a1);
}

uint64_t sub_1A90AD568()
{
  uint64_t v0 = type metadata accessor for SummaryEventConfiguration(0);
  __swift_allocate_value_buffer(v0, qword_1E97B0F68);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E97B0F68);
  if (qword_1E97B0FC0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1E97B0FC8;
  char v3 = byte_1E97B0FD0;
  uint64_t v4 = v1 + *(int *)(v0 + 20);
  uint64_t v5 = sub_1A916AAD0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(void *)uint64_t v1 = v2;
  *(unsigned char *)(v1 + 8) = v3;
  return result;
}

uint64_t static SummaryEventConfiguration.dailyCadence.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90AD87C(&qword_1E97B0F60, (uint64_t)qword_1E97B0F68, a1);
}

uint64_t sub_1A90AD66C(uint64_t a1)
{
  return sub_1A90AD678(a1, qword_1E97B0F88);
}

uint64_t sub_1A90AD678(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for SummaryEventConfiguration(0);
  __swift_allocate_value_buffer(v3, a2);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)a2);
  if (qword_1EB688F88 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1EB688680;
  char v6 = byte_1EB688688;
  uint64_t v7 = v4 + *(int *)(v3 + 20);
  uint64_t v8 = sub_1A916AAD0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(void *)uint64_t v4 = v5;
  *(unsigned char *)(v4 + 8) = v6;
  return result;
}

uint64_t static SummaryEventConfiguration.weeklyCadence.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90AD87C(&qword_1EB687EA0, (uint64_t)qword_1E97B0F88, a1);
}

uint64_t sub_1A90AD778()
{
  uint64_t v0 = type metadata accessor for SummaryEventConfiguration(0);
  __swift_allocate_value_buffer(v0, qword_1E97B0FA8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E97B0FA8);
  if (qword_1E97B0FE0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1E97B0FE8;
  char v3 = byte_1E97B0FF0;
  uint64_t v4 = v1 + *(int *)(v0 + 20);
  uint64_t v5 = sub_1A916AAD0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(void *)uint64_t v1 = v2;
  *(unsigned char *)(v1 + 8) = v3;
  return result;
}

uint64_t static SummaryEventConfiguration.monthlyCadence.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90AD87C(&qword_1E97B0FA0, (uint64_t)qword_1E97B0FA8, a1);
}

uint64_t sub_1A90AD87C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for SummaryEventConfiguration(0);
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  return sub_1A9098D38(v6, a3, type metadata accessor for SummaryEventConfiguration);
}

uint64_t static SummaryEventConfiguration.custom(timeInterval:)@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4 = a1 + *(int *)(type metadata accessor for SummaryEventConfiguration(0) + 20);
  uint64_t v5 = sub_1A916AAD0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(double *)a1 = a2;
  *(unsigned char *)(a1 + 8) = 0;
  return result;
}

void SummaryEventConfiguration.flushCadence.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t SummaryEventConfiguration.storageURLOptions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SummaryEventConfiguration(0);
  return sub_1A9098D38(v1 + *(int *)(v3 + 20), a1, type metadata accessor for SummaryEventConfiguration.StorageURLOptions);
}

void *initializeBufferWithCopyOfBuffer for SummaryEventConfiguration(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (void *)(a1 + v5);
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1A916AAD0();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      uint64_t v10 = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(0);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t assignWithCopy for SummaryEventConfiguration(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1A916AAD0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(v6, 1, v8);
  int v12 = v10(v7, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, char *, uint64_t))(v9 + 24))(v6, v7, v8);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v6, v8);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v13 = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(0);
    memcpy(v6, v7, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  return a1;
}

uint64_t initializeWithTake for SummaryEventConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_1A916AAD0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(0);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for SummaryEventConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (void *)(a2 + v4);
  uint64_t v7 = sub_1A916AAD0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v12 = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(0);
    memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for SummaryEventConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A90ADF54);
}

uint64_t sub_1A90ADF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for SummaryEventConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A90ADFD8);
}

uint64_t sub_1A90ADFD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SummaryEventConfiguration.FlushCadence(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SummaryEventConfiguration.FlushCadence(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1A90AE0B0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1A90AE0CC(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SummaryEventConfiguration.FlushCadence()
{
  return &type metadata for SummaryEventConfiguration.FlushCadence;
}

uint64_t *initializeBufferWithCopyOfBuffer for SummaryEventConfiguration.StorageURLOptions(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_1A916AAD0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for SummaryEventConfiguration.StorageURLOptions(uint64_t a1)
{
  uint64_t v2 = sub_1A916AAD0();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *initializeWithCopy for SummaryEventConfiguration.StorageURLOptions(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1A916AAD0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for SummaryEventConfiguration.StorageURLOptions(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1A916AAD0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for SummaryEventConfiguration.StorageURLOptions(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1A916AAD0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for SummaryEventConfiguration.StorageURLOptions(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1A916AAD0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1A90AE820(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A916AAD0();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SummaryEventConfiguration.StorageURLOptions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A90AE8A0);
}

uint64_t sub_1A90AE8A0(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_1A916AAD0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_1A90AE920(uint64_t a1)
{
  uint64_t v2 = sub_1A916AAD0();
  char v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 1, v2);
}

uint64_t sub_1A90AE988(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A916AAD0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 1, v4);
}

void type metadata accessor for WritingOptions(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_options_t(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t sub_1A90AEA34()
{
  if (qword_1E97B0FF8 != -1) {
    uint64_t result = swift_once();
  }
  qword_1E97B0FC8 = qword_1E97B1000;
  byte_1E97B0FD0 = 0;
  return result;
}

uint64_t sub_1A90AEA90()
{
  if (qword_1EB688698 != -1) {
    uint64_t result = swift_once();
  }
  qword_1EB688680 = qword_1EB688690;
  byte_1EB688688 = 0;
  return result;
}

uint64_t sub_1A90AEAEC()
{
  if (qword_1E97B1008 != -1) {
    uint64_t result = swift_once();
  }
  qword_1E97B0FE8 = qword_1E97B1010;
  byte_1E97B0FF0 = 0;
  return result;
}

void sub_1A90AEB48()
{
  qword_1E97B1000 = 0x40F5180000000000;
}

void sub_1A90AEB5C()
{
  qword_1EB688690 = 0x4122750000000000;
}

void sub_1A90AEB70()
{
  qword_1E97B1010 = 0x4143C68000000000;
}

void *sub_1A90AEB84@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_1A90AEB98@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_1A90AEBAC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_1A90AEBC0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1A90AEBEC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_1A90AEC10(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_1A90AEC24(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_1A90AEC38(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_1A90AEC4C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1A90AEC60(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1A90AEC74(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1A90AEC88(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1A90AEC9C()
{
  return *v0 == 0;
}

void *sub_1A90AECAC(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_1A90AECC0(uint64_t a1, uint64_t a2)
{
  return sub_1A90AEE40(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1A90AECEC(uint64_t a1, uint64_t a2)
{
  return sub_1A90AEE40(a1, a2, MEMORY[0x1E4F27EB8]);
}

uint64_t sub_1A90AED04(uint64_t a1, id *a2)
{
  uint64_t result = sub_1A916AF70();
  *a2 = 0;
  return result;
}

uint64_t sub_1A90AED7C(uint64_t a1, id *a2)
{
  char v3 = sub_1A916AF80();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1A90AEDFC@<X0>(uint64_t *a1@<X8>)
{
  sub_1A916AF90();
  uint64_t v2 = sub_1A916AF60();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1A90AEE40(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1A916AF90();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A90AEE84()
{
  sub_1A916AF90();
  sub_1A916B030();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A90AEED8()
{
  sub_1A916AF90();
  sub_1A916BAB0();
  sub_1A916B030();
  uint64_t v0 = sub_1A916BAD0();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_1A90AEF4C(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A90AEF60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1A91187D8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void *sub_1A90AEFA4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1A90AEFB0()
{
  uint64_t v0 = sub_1A916AF90();
  uint64_t v2 = v1;
  if (v0 == sub_1A916AF90() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1A916B9E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void *sub_1A90AF03C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1A90AF04C(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1A90AF058()
{
  return sub_1A90AF0E8(&qword_1E97B1098, type metadata accessor for WritingOptions);
}

uint64_t sub_1A90AF0A0()
{
  return sub_1A90AF0E8(&qword_1E97B10A0, type metadata accessor for WritingOptions);
}

uint64_t sub_1A90AF0E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A90AF130()
{
  return sub_1A90AF0E8(&qword_1E97B10A8, type metadata accessor for WritingOptions);
}

uint64_t sub_1A90AF178()
{
  return sub_1A90AF0E8(&qword_1E97B10B0, type metadata accessor for WritingOptions);
}

uint64_t sub_1A90AF1C4(uint64_t a1)
{
  uint64_t v2 = sub_1A90AF0E8((unint64_t *)&qword_1E97B10F8, type metadata accessor for FileAttributeKey);
  uint64_t v3 = sub_1A90AF0E8((unint64_t *)&unk_1E97B1100, type metadata accessor for FileAttributeKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1A90AF280@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1A916AF60();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1A90AF2C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A916AF90();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A90AF2F4(uint64_t a1)
{
  uint64_t v2 = sub_1A90AF0E8((unint64_t *)&qword_1EB6872C8, type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_1A90AF0E8((unint64_t *)&unk_1E97B1110, type metadata accessor for URLResourceKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

void sub_1A90AF3D8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_1A90AF420()
{
  return sub_1A90AF0E8(&qword_1E97B10C8, type metadata accessor for URLResourceKey);
}

uint64_t sub_1A90AF468()
{
  return sub_1A90AF0E8(&qword_1E97B10D0, type metadata accessor for URLResourceKey);
}

uint64_t sub_1A90AF4B0()
{
  return sub_1A90AF0E8(&qword_1E97B10D8, type metadata accessor for FileAttributeKey);
}

uint64_t sub_1A90AF4F8()
{
  return sub_1A90AF0E8(&qword_1E97B10E0, type metadata accessor for FileAttributeKey);
}

uint64_t sub_1A90AF540()
{
  return sub_1A90AF0E8((unint64_t *)&unk_1E97B10E8, type metadata accessor for FileAttributeKey);
}

uint64_t sub_1A90AF588()
{
  return sub_1A90AF0E8(&qword_1EB689550, type metadata accessor for URLResourceKey);
}

uint64_t ProcessorManager.deinit()
{
  sub_1A90A43B4(v0 + 16);

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ProcessorManager.__deallocating_deinit()
{
  sub_1A90A43B4(v0 + 16);

  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 56, 7);
}

uint64_t ProcessorManager.add(eventProcessor:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();

  return sub_1A90AFD64(a1, v2, ObjectType, a2);
}

uint64_t ProcessorManager.remove(eventProcessor:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 32);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v2;
  v6[3] = a1;
  v6[4] = a2;
  swift_retain();
  swift_unknownObjectRetain();
  sub_1A908CAA8(v5, (uint64_t)sub_1A90AFE08, (uint64_t)v6);

  return swift_release();
}

uint64_t sub_1A90AF760(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  swift_unknownObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1A90AFED0(v4, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(void *)(a1 + 48) = v5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A90AF7FC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A90AF858(uint64_t a1)
{
  uint64_t v3 = sub_1A916AE70();
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(*(void *)(v1 + 32) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t, double))(v4 + 104))(v7, *MEMORY[0x1E4FBCBF0], v3, v5);
  id v9 = v8;
  LOBYTE(v8) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v7, v3);
  if (v8)
  {
    uint64_t result = swift_beginAccess();
    uint64_t v11 = *(void *)(v1 + 48);
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = (uint64_t *)(v11 + 40);
      do
      {
        uint64_t v14 = *v13;
        uint64_t ObjectType = swift_getObjectType();
        id v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
        swift_unknownObjectRetain();
        v16(a1, ObjectType, v14);
        swift_unknownObjectRelease();
        v13 += 2;
        --v12;
      }
      while (v12);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A90AFA04(uint64_t a1)
{
  uint64_t v3 = sub_1A916AE70();
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(*(void *)(v1 + 32) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t, double))(v4 + 104))(v7, *MEMORY[0x1E4FBCBF0], v3, v5);
  id v9 = v8;
  LOBYTE(v8) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v7, v3);
  if (v8)
  {
    uint64_t result = swift_beginAccess();
    uint64_t v11 = *(void *)(v1 + 48);
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = (uint64_t *)(v11 + 40);
      do
      {
        uint64_t v14 = *v13;
        uint64_t ObjectType = swift_getObjectType();
        id v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 24);
        swift_unknownObjectRetain();
        v16(a1, ObjectType, v14);
        swift_unknownObjectRelease();
        v13 += 2;
        --v12;
      }
      while (v12);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A90AFBB0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1A916AE70();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v9 = *(void **)(*(void *)(v2 + 32) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBF0], v5);
  id v10 = v9;
  LOBYTE(v9) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    uint64_t result = swift_beginAccess();
    uint64_t v12 = *(void *)(v2 + 48);
    uint64_t v13 = *(void *)(v12 + 16);
    if (v13)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = (uint64_t *)(v12 + 40);
      do
      {
        uint64_t v15 = *v14;
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
        swift_unknownObjectRetain();
        v17(a1, a2, ObjectType, v15);
        swift_unknownObjectRelease();
        v14 += 2;
        --v13;
      }
      while (v13);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A90AFD64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = (void *)swift_allocObject();
  long long v8[2] = a2;
  v8[3] = a1;
  v8[4] = a4;
  swift_retain();
  swift_unknownObjectRetain();
  sub_1A908CAA8(v7, (uint64_t)sub_1A908F7D4, (uint64_t)v8);

  return swift_release();
}

uint64_t sub_1A90AFE08()
{
  return sub_1A90AF760(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t method lookup function for ProcessorManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ProcessorManager);
}

uint64_t sub_1A90AFE2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Session();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A90AFE90()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1A90AFEC8()
{
  dispatch_group_leave(*(dispatch_group_t *)(v0 + 16));
}

uint64_t sub_1A90AFED0(uint64_t result, uint64_t a2)
{
  unint64_t v3 = 0;
  unint64_t v4 = *(void *)(result + 16);
  uint64_t v5 = result + 32;
  uint64_t v6 = MEMORY[0x1E4FBC860];
LABEL_2:
  if (v3 <= v4) {
    unint64_t v7 = v4;
  }
  else {
    unint64_t v7 = v3;
  }
  unint64_t v8 = v7 + 1;
  id v9 = (uint64_t *)(v5 + 16 * v3);
  while (1)
  {
    if (v4 == v3) {
      return v6;
    }
    if (v8 == ++v3) {
      break;
    }
    id v10 = v9 + 2;
    uint64_t v11 = *v9;
    v9 += 2;
    if (v11 != a2)
    {
      uint64_t v15 = *(v10 - 1);
      swift_unknownObjectRetain();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = sub_1A90B2890(0, *(void *)(v6 + 16) + 1, 1);
      }
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1) {
        uint64_t result = sub_1A90B2890(v12 > 1, v13 + 1, 1);
      }
      *(void *)(v6 + 16) = v13 + 1;
      uint64_t v14 = v6 + 16 * v13;
      *(void *)(v14 + 32) = v11;
      *(void *)(v14 + 40) = v15;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A90AFFF8()
{
  return 1;
}

uint64_t sub_1A90B0000()
{
  return sub_1A916BAD0();
}

uint64_t sub_1A90B0044()
{
  return sub_1A916BAC0();
}

uint64_t sub_1A90B006C()
{
  return sub_1A916BAD0();
}

uint64_t ExternalAnalyticsUploader.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  id v1 = objc_msgSend(self, sel_defaultSessionConfiguration);
  if (qword_1EB687F80 != -1) {
    swift_once();
  }
  if (qword_1EB687F60)
  {
    uint64_t v2 = (void *)sub_1A916AF60();
    objc_msgSend(v1, sel_set_sourceApplicationBundleIdentifier_, v2);
  }
  id v3 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, v1, 0, 0);

  *(void *)(v0 + 16) = v3;
  return v0;
}

uint64_t ExternalAnalyticsUploader.init()()
{
  id v1 = objc_msgSend(self, sel_defaultSessionConfiguration);
  if (qword_1EB687F80 != -1) {
    swift_once();
  }
  if (qword_1EB687F60)
  {
    uint64_t v2 = (void *)sub_1A916AF60();
    objc_msgSend(v1, sel_set_sourceApplicationBundleIdentifier_, v2);
  }
  id v3 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, v1, 0, 0);

  *(void *)(v0 + 16) = v3;
  return v0;
}

uint64_t ExternalAnalyticsUploader.submitExternalAnalytics(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1A916AAD0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A916A790();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_1A916A750();
  uint64_t v15 = *(void **)(v3 + 16);
  id v16 = (void *)sub_1A916A720();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  aBlock[4] = sub_1A90B0768;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A90B05EC;
  aBlock[3] = &block_descriptor_0;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v19 = objc_msgSend(v15, sel_dataTaskWithRequest_completionHandler_, v16, v18);
  _Block_release(v18);

  objc_msgSend(v19, sel_resume);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

void sub_1A90B0510(int a1, int a2, void *a3, id a4, void (*a5)(uint64_t *))
{
  if (a3 && (self, (uint64_t v8 = swift_dynamicCastObjCClass()) != 0))
  {
    uint64_t v11 = v8;
    char v12 = 0;
    id v9 = a3;
    a5(&v11);
  }
  else
  {
    if (a4)
    {
      uint64_t v11 = (uint64_t)a4;
      char v12 = 1;
      id v10 = a4;
    }
    else
    {
      sub_1A90B07E8();
      a4 = (id)swift_allocError();
      uint64_t v11 = (uint64_t)a4;
      char v12 = 1;
    }
    a5(&v11);
  }
}

uint64_t sub_1A90B05EC(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v6 = a2;
  uint64_t v7 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v8 = v6;
    uint64_t v6 = (void *)sub_1A916AB80();
    unint64_t v10 = v9;
  }
  else
  {
    swift_retain();
    unint64_t v10 = 0xF000000000000000;
  }
  id v11 = a3;
  id v12 = a4;
  v7(v6, v10, a3, a4);

  sub_1A90B07D4((uint64_t)v6, v10);

  return swift_release();
}

uint64_t ExternalAnalyticsUploader.deinit()
{
  return v0;
}

uint64_t ExternalAnalyticsUploader.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t sub_1A90B070C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ExternalAnalyticsUploader.submitExternalAnalytics(with:completion:)(a1, a2, a3);
}

uint64_t sub_1A90B0730()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1A90B0768(int a1, int a2, void *a3, void *a4)
{
  sub_1A90B0510(a1, a2, a3, a4, *(void (**)(uint64_t *))(v4 + 16));
}

uint64_t dispatch thunk of ExternalAnalyticsUploaderType.submitExternalAnalytics(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for ExternalAnalyticsUploader()
{
  return self;
}

uint64_t method lookup function for ExternalAnalyticsUploader(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ExternalAnalyticsUploader);
}

uint64_t dispatch thunk of ExternalAnalyticsUploader.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1A90B07D4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1A90A2FD4(a1, a2);
  }
  return a1;
}

unint64_t sub_1A90B07E8()
{
  unint64_t result = qword_1E97B11E0;
  if (!qword_1E97B11E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B11E0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ExternalAnalyticsUploader.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A90B08D8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A90B0900()
{
  return 0;
}

ValueMetadata *type metadata accessor for ExternalAnalyticsUploader.Errors()
{
  return &type metadata for ExternalAnalyticsUploader.Errors;
}

unint64_t sub_1A90B091C()
{
  unint64_t result = qword_1E97B11E8;
  if (!qword_1E97B11E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B11E8);
  }
  return result;
}

unint64_t BridgedSessionKind.init(rawValue:)(unint64_t a1)
{
  return sub_1A90B0E88(a1);
}

uint64_t sub_1A90B0990()
{
  return sub_1A916BAD0();
}

uint64_t sub_1A90B09D8()
{
  return sub_1A916BAC0();
}

uint64_t sub_1A90B0A04()
{
  return sub_1A916BAD0();
}

unint64_t sub_1A90B0A48@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1A90B0E88(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t BridgedSession.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AASession_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BridgedSession.kind.getter()
{
  return *(void *)(v0 + OBJC_IVAR___AASession_kind);
}

uint64_t BridgedSession.name.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AASession_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BridgedSession.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___AASession_startDate;
  uint64_t v4 = sub_1A916AC90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BridgedSession.sessionData.getter()
{
  return swift_bridgeObjectRetain();
}

id BridgedSession.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void BridgedSession.init()()
{
}

id BridgedSession.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BridgedSession();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1A90B0E88(unint64_t result)
{
  if (result > 3) {
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for BridgedSession()
{
  uint64_t result = qword_1E97B1210;
  if (!qword_1E97B1210) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1A90B0EE8()
{
  unint64_t result = qword_1E97B1208;
  if (!qword_1E97B1208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1208);
  }
  return result;
}

ValueMetadata *type metadata accessor for BridgedSessionKind()
{
  return &type metadata for BridgedSessionKind;
}

uint64_t sub_1A90B0F4C()
{
  return type metadata accessor for BridgedSession();
}

uint64_t sub_1A90B0F54()
{
  uint64_t result = sub_1A916AC90();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for BridgedSession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BridgedSession);
}

uint64_t Batch.sessionData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Batch.events.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Batch.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Batch.userAgent.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Batch.contentType.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t Batch.groupName.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Batch.sessionStartDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Batch() + 40);

  return sub_1A90B1164(v3, a1);
}

uint64_t type metadata accessor for Batch()
{
  uint64_t result = qword_1EB68A990;
  if (!qword_1EB68A990) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A90B1164(uint64_t a1, uint64_t a2)
{
  sub_1A90B2710(0, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Batch.sessionID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Batch() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Batch.sessionCrashDetected.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Batch() + 48));
}

uint64_t Batch.flushDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Batch() + 52);

  return sub_1A90B1164(v3, a1);
}

uint64_t sub_1A90B12A0@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v38 = a2;
  int v37 = a1;
  uint64_t v5 = (int *)type metadata accessor for Batch();
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  id v8 = &v36[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  unint64_t v10 = &v36[-v9];
  sub_1A90B2710(0, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = &v36[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = &v36[-v16];
  MEMORY[0x1F4188790](v15);
  id v19 = &v36[-v18];
  uint64_t v20 = v3[4];
  uint64_t v21 = v3[5];
  uint64_t v42 = v3[6];
  uint64_t v43 = v20;
  uint64_t v22 = v3[8];
  uint64_t v41 = v3[7];
  sub_1A90B1164((uint64_t)v3 + v5[10], (uint64_t)&v36[-v18]);
  unint64_t v23 = (uint64_t *)((char *)v3 + v5[11]);
  uint64_t v24 = *v23;
  uint64_t v25 = v23[1];
  uint64_t v46 = *v3;
  uint64_t v47 = v25;
  uint64_t v26 = v3[1];
  uint64_t v39 = v3[2];
  uint64_t v40 = v24;
  uint64_t v44 = v3[3];
  uint64_t v45 = v26;
  sub_1A90B51DC((uint64_t)v3, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Batch);
  if (v37 == 2) {
    int v27 = v10[v5[12]];
  }
  else {
    int v27 = v37 & 1;
  }
  int v37 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A90B4F24((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Batch);
  sub_1A90B1164(v38, (uint64_t)v14);
  sub_1A90B51DC((uint64_t)v3, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Batch);
  uint64_t v28 = sub_1A916AC90();
  uint64_t v29 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v29 + 48))(v14, 1, v28) == 1)
  {
    sub_1A90B1164((uint64_t)&v8[v5[13]], (uint64_t)v17);
    sub_1A90B4F24((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Batch);
    sub_1A90B4F84((uint64_t)v14);
  }
  else
  {
    sub_1A90B4F24((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Batch);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v29 + 32))(v17, v14, v28);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v29 + 56))(v17, 0, 1, v28);
  }
  a3[4] = v43;
  a3[5] = v21;
  uint64_t v30 = v41;
  a3[6] = v42;
  a3[7] = v30;
  a3[8] = v22;
  sub_1A90B5010((uint64_t)v19, (uint64_t)a3 + v5[10]);
  unint64_t v31 = (void *)((char *)a3 + v5[11]);
  uint64_t v32 = v47;
  *unint64_t v31 = v40;
  v31[1] = v32;
  uint64_t v33 = v45;
  *a3 = v46;
  a3[1] = v33;
  uint64_t v34 = v44;
  a3[2] = v39;
  a3[3] = v34;
  *((unsigned char *)a3 + v5[12]) = v37;
  return sub_1A90B5010((uint64_t)v17, (uint64_t)a3 + v5[13]);
}

uint64_t static Batch.version.getter()
{
  return 0x312E312E30;
}

uint64_t Batch.version.getter()
{
  return 0x312E312E30;
}

unint64_t Batch.toJSONObject()()
{
  uint64_t v1 = v0;
  v93[58] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1A916AC90();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A90B2710(0, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v78 - v7;
  uint64_t v9 = type metadata accessor for Batch();
  sub_1A90B1164((uint64_t)v1 + *(int *)(v9 + 52), (uint64_t)v8);
  int v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2);
  uint64_t v11 = 0;
  if (v10 != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1A916AC50();
    double v13 = v12 * 1000.0;
    if ((~*(void *)&v13 & 0x7FF0000000000000) == 0) {
      goto LABEL_89;
    }
    if (v13 <= -9.22337204e18)
    {
LABEL_90:
      __break(1u);
    }
    else if (v13 < 9.22337204e18)
    {
      uint64_t v11 = (uint64_t)v13;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      goto LABEL_6;
    }
    __break(1u);
  }
LABEL_6:
  sub_1A90B2710(0, &qword_1EB6894C0, (uint64_t (*)(uint64_t))sub_1A90B2774, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  long long v89 = xmmword_1A916E200;
  *(_OWORD *)(inited + 16) = xmmword_1A916E200;
  *(void *)(inited + 32) = 0x617461646174656DLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  long long v81 = (void *)inited;
  uint64_t v15 = swift_initStackObject();
  uint64_t v16 = v15;
  *(_OWORD *)(v15 + 16) = xmmword_1A916E210;
  *(void *)(v15 + 32) = 0x6E6F6973726576;
  *(void *)(v15 + 40) = 0xE700000000000000;
  uint64_t v17 = MEMORY[0x1E4FBB1A0];
  *(void *)(v15 + 48) = 0x312E312E30;
  *(void *)(v15 + 56) = 0xE500000000000000;
  *(void *)(v15 + 72) = v17;
  *(void *)(v15 + 80) = 0x696669746E656469;
  *(void *)(v15 + 88) = 0xEA00000000007265;
  uint64_t v18 = v1[3];
  *(void *)(v15 + 96) = v1[2];
  *(void *)(v15 + 104) = v18;
  *(void *)(v15 + 120) = v17;
  *(void *)(v15 + 128) = 0x7461446873756C66;
  *(void *)(v15 + 136) = 0xE900000000000065;
  if (v10 == 1)
  {
    id v19 = objc_allocWithZone(MEMORY[0x1E4F1CA98]);
    swift_bridgeObjectRetain();
    id v20 = objc_msgSend(v19, sel_init);
    *(void *)(v16 + 168) = sub_1A90B27E0();
    *(void *)(v16 + 144) = v20;
  }
  else
  {
    v92[1] = MEMORY[0x1E4FBC1C8];
    *(void *)&long long v91 = v11;
    sub_1A90A1A68(&v91, (_OWORD *)(v15 + 144));
    swift_bridgeObjectRetain();
  }
  unint64_t v21 = sub_1A90B2180(v16);
  sub_1A90A1A78(0, (unint64_t *)&qword_1EB6897D0, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBAEA0]);
  uint64_t v23 = v22;
  uint64_t v24 = v81;
  v81[6] = v21;
  v24[9] = v22;
  v24[10] = 1635017060;
  v24[11] = 0xE400000000000000;
  uint64_t v25 = swift_initStackObject();
  *(_OWORD *)(v25 + 16) = v89;
  *(void *)(v25 + 32) = 0x6E6F6973736573;
  *(void *)(v25 + 40) = 0xE700000000000000;
  *(void *)(v25 + 48) = *v1;
  *(void *)(v25 + 72) = v23;
  *(void *)(v25 + 80) = 0x73746E657665;
  *(void *)(v25 + 88) = 0xE600000000000000;
  uint64_t v26 = v1[1];
  int64_t v27 = *(void *)(v26 + 16);
  if (!v27)
  {
    swift_bridgeObjectRetain();
    uint64_t v71 = MEMORY[0x1E4FBC860];
    goto LABEL_82;
  }
  uint64_t v79 = v25;
  uint64_t v80 = v23;
  uint64_t v90 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A90B28B0(0, v27, 0);
  uint64_t v28 = 0;
  uint64_t v78 = v26;
  int64_t v82 = v27;
  uint64_t v83 = v26 + 32;
  *(void *)&long long v89 = v92;
  do
  {
    uint64_t v29 = *(void *)(v83 + 8 * v28);
    char v30 = *(unsigned char *)(v29 + 32);
    unsigned int v31 = v30 & 0x3F;
    unint64_t v86 = (unint64_t)((1 << v30) + 63) >> 6;
    uint64_t v87 = v28;
    size_t v32 = 8 * v86;
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v31 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
    {
      long long v84 = &v78;
      MEMORY[0x1F4188790](isStackAllocationSafe);
      long long v85 = (char *)&v78 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0);
      bzero(v85, v32);
      uint64_t v34 = 0;
      int64_t v35 = 0;
      uint64_t v36 = v29 + 64;
      uint64_t v37 = 1 << *(unsigned char *)(v29 + 32);
      if (v37 < 64) {
        uint64_t v38 = ~(-1 << v37);
      }
      else {
        uint64_t v38 = -1;
      }
      unint64_t v39 = v38 & *(void *)(v29 + 64);
      int64_t v40 = (unint64_t)(v37 + 63) >> 6;
LABEL_17:
      uint64_t v88 = v34;
      while (1)
      {
        if (v39)
        {
          unint64_t v41 = __clz(__rbit64(v39));
          v39 &= v39 - 1;
          unint64_t v42 = v41 | (v35 << 6);
        }
        else
        {
          BOOL v43 = __OFADD__(v35++, 1);
          if (v43)
          {
            __break(1u);
            goto LABEL_84;
          }
          if (v35 >= v40) {
            goto LABEL_43;
          }
          unint64_t v44 = *(void *)(v36 + 8 * v35);
          if (!v44)
          {
            int64_t v45 = v35 + 1;
            if (v35 + 1 >= v40) {
              goto LABEL_43;
            }
            unint64_t v44 = *(void *)(v36 + 8 * v45);
            if (!v44)
            {
              int64_t v45 = v35 + 2;
              if (v35 + 2 >= v40)
              {
LABEL_43:
                int64_t v51 = v82;
                uint64_t v52 = v87;
                uint64_t v53 = sub_1A90996E8((unint64_t *)v85, v86, v88, v29);
                goto LABEL_75;
              }
              unint64_t v44 = *(void *)(v36 + 8 * v45);
              if (!v44)
              {
                while (1)
                {
                  int64_t v35 = v45 + 1;
                  if (__OFADD__(v45, 1)) {
                    break;
                  }
                  if (v35 >= v40) {
                    goto LABEL_43;
                  }
                  unint64_t v44 = *(void *)(v36 + 8 * v35);
                  ++v45;
                  if (v44) {
                    goto LABEL_29;
                  }
                }
LABEL_84:
                __break(1u);
LABEL_85:
                __break(1u);
LABEL_86:
                __break(1u);
                goto LABEL_87;
              }
            }
            int64_t v35 = v45;
          }
LABEL_29:
          unint64_t v39 = (v44 - 1) & v44;
          unint64_t v42 = __clz(__rbit64(v44)) + (v35 << 6);
        }
        uint64_t v46 = (uint64_t *)(*(void *)(v29 + 48) + 16 * v42);
        uint64_t v48 = *v46;
        uint64_t v47 = v46[1];
        sub_1A90A24B0(*(void *)(v29 + 56) + 32 * v42, (uint64_t)v93);
        *(void *)&long long v91 = v48;
        *((void *)&v91 + 1) = v47;
        sub_1A90A24B0((uint64_t)v93, v89);
        if (v48 == 0x4D65746176697270 && v47 == 0xEF61746164617465)
        {
          swift_bridgeObjectRetain_n();
          sub_1A90B4F24((uint64_t)&v91, (uint64_t (*)(void))sub_1A90A302C);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v93);
          swift_bridgeObjectRelease();
        }
        else
        {
          char v50 = sub_1A916B9E0();
          swift_bridgeObjectRetain_n();
          sub_1A90B4F24((uint64_t)&v91, (uint64_t (*)(void))sub_1A90A302C);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v93);
          swift_bridgeObjectRelease();
          if ((v50 & 1) == 0)
          {
            *(void *)&v85[(v42 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v42;
            uint64_t v34 = v88 + 1;
            if (!__OFADD__(v88, 1)) {
              goto LABEL_17;
            }
LABEL_87:
            __break(1u);
LABEL_88:
            __break(1u);
LABEL_89:
            __break(1u);
            goto LABEL_90;
          }
        }
      }
    }
    long long v85 = (char *)swift_slowAlloc();
    bzero(v85, v32);
    uint64_t v54 = 0;
    int64_t v55 = 0;
    uint64_t v56 = v29 + 64;
    uint64_t v57 = 1 << *(unsigned char *)(v29 + 32);
    if (v57 < 64) {
      uint64_t v58 = ~(-1 << v57);
    }
    else {
      uint64_t v58 = -1;
    }
    unint64_t v59 = v58 & *(void *)(v29 + 64);
    int64_t v60 = (unint64_t)(v57 + 63) >> 6;
LABEL_48:
    uint64_t v88 = v54;
    while (v59)
    {
      unint64_t v61 = __clz(__rbit64(v59));
      v59 &= v59 - 1;
      unint64_t v62 = v61 | (v55 << 6);
LABEL_61:
      uint64_t v65 = (uint64_t *)(*(void *)(v29 + 48) + 16 * v62);
      uint64_t v67 = *v65;
      uint64_t v66 = v65[1];
      sub_1A90A24B0(*(void *)(v29 + 56) + 32 * v62, (uint64_t)v93);
      *(void *)&long long v91 = v67;
      *((void *)&v91 + 1) = v66;
      sub_1A90A24B0((uint64_t)v93, v89);
      if (v67 == 0x4D65746176697270 && v66 == 0xEF61746164617465)
      {
        swift_bridgeObjectRetain_n();
        sub_1A90B4F24((uint64_t)&v91, (uint64_t (*)(void))sub_1A90A302C);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v93);
        swift_bridgeObjectRelease();
      }
      else
      {
        char v69 = sub_1A916B9E0();
        swift_bridgeObjectRetain_n();
        sub_1A90B4F24((uint64_t)&v91, (uint64_t (*)(void))sub_1A90A302C);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v93);
        swift_bridgeObjectRelease();
        if ((v69 & 1) == 0)
        {
          *(void *)&v85[(v62 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v62;
          uint64_t v54 = v88 + 1;
          if (__OFADD__(v88, 1)) {
            goto LABEL_88;
          }
          goto LABEL_48;
        }
      }
    }
    BOOL v43 = __OFADD__(v55++, 1);
    if (v43) {
      goto LABEL_85;
    }
    if (v55 >= v60) {
      goto LABEL_74;
    }
    unint64_t v63 = *(void *)(v56 + 8 * v55);
    if (v63) {
      goto LABEL_60;
    }
    int64_t v64 = v55 + 1;
    if (v55 + 1 >= v60) {
      goto LABEL_74;
    }
    unint64_t v63 = *(void *)(v56 + 8 * v64);
    if (v63) {
      goto LABEL_59;
    }
    int64_t v64 = v55 + 2;
    if (v55 + 2 >= v60) {
      goto LABEL_74;
    }
    unint64_t v63 = *(void *)(v56 + 8 * v64);
    if (v63)
    {
LABEL_59:
      int64_t v55 = v64;
LABEL_60:
      unint64_t v59 = (v63 - 1) & v63;
      unint64_t v62 = __clz(__rbit64(v63)) + (v55 << 6);
      goto LABEL_61;
    }
    while (1)
    {
      int64_t v55 = v64 + 1;
      if (__OFADD__(v64, 1)) {
        goto LABEL_86;
      }
      if (v55 >= v60) {
        break;
      }
      unint64_t v63 = *(void *)(v56 + 8 * v55);
      ++v64;
      if (v63) {
        goto LABEL_60;
      }
    }
LABEL_74:
    int64_t v51 = v82;
    uint64_t v52 = v87;
    unint64_t v70 = v85;
    uint64_t v53 = sub_1A90996E8((unint64_t *)v85, v86, v88, v29);
    MEMORY[0x1AD0EECA0](v70, -1, -1);
LABEL_75:
    swift_bridgeObjectRelease();
    uint64_t v71 = v90;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1A90B28B0(0, *(void *)(v71 + 16) + 1, 1);
      uint64_t v71 = v90;
    }
    unint64_t v73 = *(void *)(v71 + 16);
    unint64_t v72 = *(void *)(v71 + 24);
    if (v73 >= v72 >> 1)
    {
      sub_1A90B28B0(v72 > 1, v73 + 1, 1);
      uint64_t v71 = v90;
    }
    uint64_t v28 = v52 + 1;
    *(void *)(v71 + 16) = v73 + 1;
    *(void *)(v71 + 8 * v73 + 32) = v53;
  }
  while (v28 != v51);
  swift_bridgeObjectRelease();
  uint64_t v25 = v79;
  uint64_t v23 = v80;
LABEL_82:
  sub_1A90B3B80(0, &qword_1EB689478, MEMORY[0x1E4FBB320]);
  *(void *)(v25 + 120) = v74;
  *(void *)(v25 + 96) = v71;
  unint64_t v75 = sub_1A90B2180(v25);
  uint64_t v76 = (uint64_t)v81;
  v81[15] = v23;
  *(void *)(v76 + 96) = v75;
  return sub_1A90B2180(v76);
}

unint64_t sub_1A90B2180(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A90A1A78(0, &qword_1EB689850, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = sub_1A916B810();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A90B51DC(v6, (uint64_t)&v15, (uint64_t (*)(void))sub_1A90B2774);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1A90A1D98(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1A90A1A68(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A90B22E4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A90A1A78(0, &qword_1EB688C18, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBD58]);
  uint64_t v2 = (void *)sub_1A916B810();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A90A1D98(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    void *v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A90B2428(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A90A1A78(0, &qword_1EB687708, MEMORY[0x1E4FBC1C8], MEMORY[0x1E4FBBD58]);
  uint64_t v2 = (void *)sub_1A916B810();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A90A1D98(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A90B255C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1A90A1A78(0, &qword_1E97B1220, (uint64_t)&type metadata for SummaryEventDatabaseEntity, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = (void *)sub_1A916B810();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 72);
  while (1)
  {
    uint64_t v5 = *(v4 - 5);
    uint64_t v6 = *(v4 - 4);
    uint64_t v8 = *(v4 - 3);
    uint64_t v7 = *(v4 - 2);
    uint64_t v9 = *(v4 - 1);
    uint64_t v10 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A90A1D98(v5, v6);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v13 = v5;
    v13[1] = v6;
    BOOL v14 = (void *)(v2[7] + 32 * result);
    *BOOL v14 = v8;
    v14[1] = v7;
    _OWORD v14[2] = v9;
    v14[3] = v10;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v4 += 6;
    v2[2] = v17;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A90B26B4()
{
  return 0x312E312E30;
}

uint64_t sub_1A90B26C8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1A90B26F8()
{
  return Batch.toJSONObject()();
}

void sub_1A90B2710(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1A90B2774()
{
  if (!qword_1EB688C08)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB688C08);
    }
  }
}

unint64_t sub_1A90B27E0()
{
  unint64_t result = qword_1EB686D10;
  if (!qword_1EB686D10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB686D10);
  }
  return result;
}

uint64_t sub_1A90B2820(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A90B2A30(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A90B2840(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A90B328C(a1, a2, a3, (void *)*v3, &qword_1EB6894A8, MEMORY[0x1E4F276F0], MEMORY[0x1E4F276F0]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1A90B2890(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A90B2BBC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1A90B28B0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A90B2D70(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1A90B28D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A90B2F38(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A90B28F0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A90B30E0(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1A90B2910(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A90B328C(a1, a2, a3, (void *)*v3, &qword_1EB686EF0, (uint64_t (*)(uint64_t))type metadata accessor for BatchRepair, (uint64_t (*)(void))type metadata accessor for BatchRepair);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1A90B2960(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A90B328C(a1, a2, a3, (void *)*v3, &qword_1EB6894B0, type metadata accessor for SequenceEntry, type metadata accessor for SequenceEntry);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1A90B29B0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A90B34F0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A90B29D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A90B3698(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A90B29F0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A90B3840(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A90B2A10(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A90B39E4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A90B2A30(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A90A55D4(0, &qword_1EB689858, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  BOOL v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

uint64_t sub_1A90B2BBC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A90B2710(0, &qword_1EB68ACD0, (uint64_t (*)(uint64_t))sub_1A908FBE8, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    long long v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1A908FBE8();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

uint64_t sub_1A90B2D70(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A90B3B80(0, &qword_1EB688C40, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    long long v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1A90A1A78(0, (unint64_t *)&qword_1EB6897D0, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBAEA0]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

uint64_t sub_1A90B2F38(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A90A55D4(0, (unint64_t *)&qword_1EB686760, (uint64_t)&type metadata for DenylistDescriptor, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

uint64_t sub_1A90B30E0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A90B515C();
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    long long v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_1A90A55D4(0, (unint64_t *)&qword_1EB68A928, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

uint64_t sub_1A90B328C(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (!v13)
  {
    uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1A90B2710(0, a5, a6, MEMORY[0x1E4FBBE00]);
  uint64_t v14 = *(void *)(a7(0) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (void *)swift_allocObject();
  size_t v18 = _swift_stdlib_malloc_size(v17);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v18 - v16 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_34;
  }
  v17[2] = v12;
  v17[3] = 2 * ((uint64_t)(v18 - v16) / v15);
LABEL_19:
  uint64_t v20 = *(void *)(a7(0) - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = (char *)v17 + v21;
  uint64_t v23 = (char *)a4 + v21;
  if (a1)
  {
    if (v17 < a4 || v22 >= &v23[*(void *)(v20 + 72) * v12])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v17 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v24 = *(void *)(v20 + 72) * v12;
  uint64_t v25 = &v22[v24];
  unint64_t v26 = (unint64_t)&v23[v24];
  if (v23 >= v25 || (unint64_t)v22 >= v26)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v17;
  }
LABEL_36:
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

uint64_t sub_1A90B34F0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A90A55D4(0, &qword_1EB6872F0, (uint64_t)&type metadata for TrackerError.FoundData, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

uint64_t sub_1A90B3698(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A90A55D4(0, &qword_1E97B1228, (uint64_t)&type metadata for SummaryEventDataItem, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

uint64_t sub_1A90B3840(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A90A55D4(0, &qword_1EB6865F8, (uint64_t)&type metadata for Action.Entry, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

uint64_t sub_1A90B39E4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A90A55D4(0, &qword_1EB686600, (uint64_t)&type metadata for Action, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

void sub_1A90B3B80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1A90A1A78(255, (unint64_t *)&qword_1EB6897D0, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBAEA0]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for Batch(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v8;
    uint64_t v9 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = a2[5];
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    uint64_t v10 = a3[10];
    __dst = (void *)(a1 + v10);
    uint64_t v25 = (char *)a2 + v10;
    *(void *)(a1 + 64) = a2[8];
    uint64_t v11 = sub_1A916AC90();
    uint64_t v26 = *(void *)(v11 - 8);
    uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v25, 1, v11))
    {
      sub_1A90B2710(0, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(__dst, v25, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(__dst, v25, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v14 = a3[11];
    uint64_t v15 = a3[12];
    unint64_t v16 = (void *)(v7 + v14);
    uint64_t v17 = (uint64_t *)((char *)a2 + v14);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    LOBYTE(v17) = *((unsigned char *)a2 + v15);
    *unint64_t v16 = v19;
    v16[1] = v18;
    *(unsigned char *)(v7 + v15) = (_BYTE)v17;
    uint64_t v20 = a3[13];
    unint64_t v21 = (void *)(v7 + v20);
    uint64_t v22 = (char *)a2 + v20;
    swift_bridgeObjectRetain();
    if (v12(v22, 1, v11))
    {
      sub_1A90B2710(0, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v21, v22, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v21, 0, 1, v11);
    }
  }
  return v7;
}

uint64_t destroy for Batch(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_1A916AC90();
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 52);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

uint64_t initializeWithCopy for Batch(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v8 = a3[10];
  __dst = (void *)(a1 + v8);
  uint64_t v9 = (const void *)(a2 + v8);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v10 = sub_1A916AC90();
  uint64_t v24 = *(void *)(v10 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v9, 1, v10))
  {
    sub_1A90B2710(0, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(__dst, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(__dst, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v13 = a3[11];
  uint64_t v14 = a3[12];
  uint64_t v15 = (void *)(a1 + v13);
  unint64_t v16 = (uint64_t *)(a2 + v13);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  LOBYTE(v16) = *(unsigned char *)(a2 + v14);
  *uint64_t v15 = v18;
  v15[1] = v17;
  *(unsigned char *)(a1 + v14) = (_BYTE)v16;
  uint64_t v19 = a3[13];
  uint64_t v20 = (void *)(a1 + v19);
  unint64_t v21 = (const void *)(a2 + v19);
  swift_bridgeObjectRetain();
  if (v11(v21, 1, v10))
  {
    sub_1A90B2710(0, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(v20, v21, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v20, 0, 1, v10);
  }
  return a1;
}

void *assignWithCopy for Batch(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[10];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A916AC90();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_1A90B2710(0, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[11];
  unint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *unint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  uint64_t v18 = a3[13];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  int v21 = v11((char *)a1 + v18, 1, v9);
  int v22 = v11(v20, 1, v9);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v19, v20, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    sub_1A90B2710(0, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v20, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for Batch(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = a3[10];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1A916AC90();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    sub_1A90B2710(0, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  uint64_t v15 = a3[13];
  unint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  if (v12(v17, 1, v10))
  {
    sub_1A90B2710(0, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v16, v17, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithTake for Batch(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[10];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_1A916AC90();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    sub_1A90B2710(0, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = a3[11];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  int v25 = v13((void *)(a1 + v22), 1, v11);
  int v26 = v13(v24, 1, v11);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v23, v24, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v23, v11);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    sub_1A90B2710(0, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v23, v24, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v23, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for Batch(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A90B4C5C);
}

uint64_t sub_1A90B4C5C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1A90B2710(0, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Batch(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A90B4D50);
}

void *sub_1A90B4D50(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_1A90B2710(0, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 40);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1A90B4E28()
{
  sub_1A90B2710(319, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1A90B4F24(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A90B4F84(uint64_t a1)
{
  sub_1A90B2710(0, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A90B5010(uint64_t a1, uint64_t a2)
{
  sub_1A90B2710(0, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1A90B50A4()
{
  if (!qword_1EB6867C0)
  {
    sub_1A90B5108();
    unint64_t v0 = sub_1A916B820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB6867C0);
    }
  }
}

unint64_t sub_1A90B5108()
{
  unint64_t result = qword_1EB6867B8;
  if (!qword_1EB6867B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6867B8);
  }
  return result;
}

void sub_1A90B515C()
{
  if (!qword_1EB688158)
  {
    sub_1A90A55D4(255, (unint64_t *)&qword_1EB68A928, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1A916B9A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB688158);
    }
  }
}

uint64_t sub_1A90B51DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1A90B5244()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = type metadata accessor for ProcessEvent();
  id v3 = sub_1A91643E4(v2, (uint64_t)&protocol witness table for ProcessEvent<A>);
  objc_msgSend(v1, sel_processEvent_, v3);
}

uint64_t sub_1A90B52BC()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t type metadata accessor for BridgedEventProcessor()
{
  return self;
}

id sub_1A90B531C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A90B5334(a1, a2, a3, (const char **)&selRef_didEnterGroup_);
}

id sub_1A90B5328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A90B5334(a1, a2, a3, (const char **)&selRef_didLeaveGroup_);
}

id sub_1A90B5334(uint64_t a1, uint64_t a2, uint64_t a3, const char **a4)
{
  uint64_t v7 = *(void **)(v4 + 16);
  id result = objc_msgSend(v7, sel_respondsToSelector_, *a4);
  if (result)
  {
    uint64_t v9 = *a4;
    return objc_msgSend(v7, v9, a1);
  }
  return result;
}

uint64_t sub_1A90B53A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A90B53C0(a1, a2, a3, (SEL *)&selRef_didStartSession_);
}

uint64_t sub_1A90B53B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A90B53C0(a1, a2, a3, (SEL *)&selRef_didUpdateSession_);
}

uint64_t sub_1A90B53C0(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v6 = *(void **)(v4 + 16);
  uint64_t result = (uint64_t)objc_msgSend(v6, sel_respondsToSelector_, *a4);
  if (result)
  {
    swift_unknownObjectRetain();
    id v8 = sub_1A91054A4();
    objc_msgSend(v6, *a4, v8);

    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1A90B5454()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (objc_msgSend(v1, sel_respondsToSelector_, sel_didEndSession_endDate_))
  {
    swift_unknownObjectRetain();
    id v2 = sub_1A91054A4();
    id v3 = (id)sub_1A916AC10();
    objc_msgSend(v1, sel_didEndSession_endDate_, v2, v3);

    swift_unknownObjectRelease();
  }
}

uint64_t sub_1A90B551C()
{
  return swift_unknownObjectRetain();
}

ValueMetadata *type metadata accessor for BridgedEvent()
{
  return &type metadata for BridgedEvent;
}

uint64_t DenylistDescriptor.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1A916B030();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A916B030();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A916B030();

  return swift_bridgeObjectRelease();
}

uint64_t DenylistDescriptor.hashValue.getter()
{
  return sub_1A916BAD0();
}

uint64_t sub_1A90B56A0()
{
  return sub_1A916BAD0();
}

uint64_t sub_1A90B5754()
{
  swift_bridgeObjectRetain();
  sub_1A916B030();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A916B030();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A916B030();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A90B5804()
{
  return sub_1A916BAD0();
}

void __swiftcall DenylistDescriptor.init(value:)(AppAnalytics::DenylistDescriptor *__return_ptr retstr, Swift::String value)
{
  object = value._object;
  uint64_t countAndFlagsBits = value._countAndFlagsBits;
  uint64_t v5 = (void *)0xE100000000000000;
  sub_1A90A6814();
  uint64_t v6 = (void *)sub_1A916B5C0();
  uint64_t v7 = v6[2];
  if (!v7) {
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  switch(v7)
  {
    case 3:
      unint64_t v11 = v6[2];
      if (v11)
      {
        if (v11 != 1)
        {
          if (v11 >= 3)
          {
            uint64_t countAndFlagsBits = v6[4];
            object = (void *)v6[5];
            uint64_t v8 = v6[6];
            uint64_t v5 = (void *)v6[7];
            uint64_t v9 = v6[8];
            uint64_t v12 = (void *)v6[9];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v10 = v12;
LABEL_17:
            swift_bridgeObjectRetain();
            goto LABEL_18;
          }
          goto LABEL_21;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    case 2:
      uint64_t v13 = v6[2];
      if (v13)
      {
        if (v13 != 1)
        {
          uint64_t countAndFlagsBits = v6[4];
          object = (void *)v6[5];
          uint64_t v8 = v6[6];
          int v14 = (void *)v6[7];
          swift_bridgeObjectRetain();
          uint64_t v10 = (void *)0xE100000000000000;
          uint64_t v9 = 42;
          uint64_t v5 = v14;
          goto LABEL_17;
        }
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
LABEL_22:
      __break(1u);
      goto LABEL_23;
    case 1:
      if (!v6[2])
      {
        __break(1u);
LABEL_7:
        uint64_t v8 = 42;
        uint64_t v9 = 42;
        uint64_t v10 = (void *)0xE100000000000000;
LABEL_18:
        swift_bridgeObjectRelease();
        retstr->eventName._uint64_t countAndFlagsBits = countAndFlagsBits;
        retstr->eventName._object = object;
        retstr->dataName._uint64_t countAndFlagsBits = v8;
        retstr->dataName._object = v5;
        retstr->propertyName._uint64_t countAndFlagsBits = v9;
        retstr->propertyName._object = v10;
        return;
      }
      goto LABEL_16;
  }
  if (v6[2])
  {
LABEL_16:
    uint64_t countAndFlagsBits = v6[4];
    uint64_t v8 = 42;
    object = (void *)v6[5];
    uint64_t v9 = 42;
    uint64_t v10 = (void *)0xE100000000000000;
    goto LABEL_17;
  }
LABEL_24:
  __break(1u);
}

uint64_t DenylistDescriptor.description.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  sub_1A90A5620(0, &qword_1EB689858, MEMORY[0x1E4FBBE00]);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1A916E210;
  *(void *)(v7 + 32) = v2;
  *(void *)(v7 + 40) = v1;
  *(void *)(v7 + 48) = v4;
  *(void *)(v7 + 56) = v3;
  *(void *)(v7 + 64) = v6;
  *(void *)(v7 + 72) = v5;
  sub_1A90A5620(0, (unint64_t *)&qword_1EB688C10, MEMORY[0x1E4FBB320]);
  sub_1A909384C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1A916AF40();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t _s12AppAnalytics18DenylistDescriptorV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (v10 = sub_1A916B9E0(), uint64_t result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v4 == v7 || (v12 = sub_1A916B9E0(), uint64_t result = 0, (v12 & 1) != 0))
    {
      if (v3 == v8 && v5 == v9)
      {
        return 1;
      }
      else
      {
        return sub_1A916B9E0();
      }
    }
  }
  return result;
}

unint64_t sub_1A90B5C58()
{
  unint64_t result = qword_1EB6867B0;
  if (!qword_1EB6867B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6867B0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for DenylistDescriptor(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for DenylistDescriptor()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DenylistDescriptor(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DenylistDescriptor(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for DenylistDescriptor(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DenylistDescriptor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DenylistDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DenylistDescriptor()
{
  return &type metadata for DenylistDescriptor;
}

uint64_t static PrivacyValidation.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (v2) {
    BOOL v4 = v3 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4) {
    return (v2 | v3) == 0;
  }
  else {
    return sub_1A90B5F34(v2, v3);
  }
}

uint64_t sub_1A90B5F34(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v35 = result;
  uint64_t v36 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v37 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v42 = a2 + 56;
  if (!v6) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v38 = (v6 - 1) & v6;
  int64_t v39 = v3;
  for (unint64_t i = __clz(__rbit64(v6)) | (v3 << 6); ; unint64_t i = __clz(__rbit64(v9)) + (v10 << 6))
  {
    char v12 = (uint64_t *)(*(void *)(result + 48) + 48 * i);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    uint64_t v16 = v12[2];
    uint64_t v15 = v12[3];
    uint64_t v18 = v12[4];
    uint64_t v17 = v12[5];
    sub_1A916BAB0();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v19 = v13;
    sub_1A916B030();
    uint64_t v20 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v43 = v16;
    sub_1A916B030();
    uint64_t v44 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v21 = v18;
    sub_1A916B030();
    uint64_t v22 = v17;
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_1A916BAD0();
    uint64_t v24 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v25 = v23 & ~v24;
    if (((*(void *)(v42 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
    {
LABEL_45:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v41 = ~v24;
    uint64_t v26 = *(void *)(a2 + 48);
    while (1)
    {
      uint64_t v27 = (void *)(v26 + 48 * v25);
      uint64_t v29 = v27[2];
      uint64_t v28 = v27[3];
      uint64_t v30 = v27[4];
      uint64_t v31 = v27[5];
      BOOL v32 = *v27 == v19 && v27[1] == v20;
      if (v32 || (sub_1A916B9E0() & 1) != 0)
      {
        BOOL v33 = v29 == v43 && v28 == v44;
        if (v33 || (sub_1A916B9E0() & 1) != 0)
        {
          BOOL v34 = v30 == v21 && v31 == v22;
          if (v34 || (sub_1A916B9E0() & 1) != 0) {
            break;
          }
        }
      }
      unint64_t v25 = (v25 + 1) & v41;
      if (((*(void *)(v42 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
        goto LABEL_45;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v3 = v39;
    uint64_t v2 = a2;
    unint64_t result = v35;
    unint64_t v6 = v38;
    if (v38) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v8 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_48;
    }
    if (v8 >= v37) {
      return 1;
    }
    unint64_t v9 = *(void *)(v36 + 8 * v8);
    int64_t v10 = v3 + 1;
    if (!v9)
    {
      int64_t v10 = v3 + 2;
      if (v3 + 2 >= v37) {
        return 1;
      }
      unint64_t v9 = *(void *)(v36 + 8 * v10);
      if (!v9)
      {
        int64_t v10 = v3 + 3;
        if (v3 + 3 >= v37) {
          return 1;
        }
        unint64_t v9 = *(void *)(v36 + 8 * v10);
        if (!v9)
        {
          int64_t v10 = v3 + 4;
          if (v3 + 4 >= v37) {
            return 1;
          }
          unint64_t v9 = *(void *)(v36 + 8 * v10);
          if (!v9) {
            break;
          }
        }
      }
    }
LABEL_23:
    uint64_t v38 = (v9 - 1) & v9;
    int64_t v39 = v10;
  }
  uint64_t v11 = v3 + 5;
  if (v3 + 5 >= v37) {
    return 1;
  }
  unint64_t v9 = *(void *)(v36 + 8 * v11);
  if (v9)
  {
    int64_t v10 = v3 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v10 >= v37) {
      return 1;
    }
    unint64_t v9 = *(void *)(v36 + 8 * v10);
    ++v11;
    if (v9) {
      goto LABEL_23;
    }
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1A90B62CC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (v2) {
    BOOL v4 = v3 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4) {
    return (v2 | v3) == 0;
  }
  else {
    return sub_1A90B5F34(v2, v3);
  }
}

uint64_t sub_1A90B62F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a2;
  int64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v32 = MEMORY[0x1E4FBC860];
    sub_1A90B28D0(0, v4, 0);
    uint64_t v5 = v32;
    uint64_t result = sub_1A90B8010(a1);
    int64_t v8 = result;
    char v10 = v9 & 1;
    while ((v8 & 0x8000000000000000) == 0 && v8 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(a1 + 56 + (((unint64_t)v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_14;
      }
      if (*(_DWORD *)(a1 + 36) != v7) {
        goto LABEL_15;
      }
      char v29 = v10;
      int v30 = v7;
      uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v8);
      uint64_t v12 = *v11;
      uint64_t v13 = (void *)v11[1];
      swift_bridgeObjectRetain();
      v14._uint64_t countAndFlagsBits = v12;
      v14._object = v13;
      DenylistDescriptor.init(value:)(&v31, v14);
      uint64_t countAndFlagsBits = v31.eventName._countAndFlagsBits;
      object = v31.eventName._object;
      uint64_t v18 = v31.dataName._countAndFlagsBits;
      uint64_t v17 = v31.dataName._object;
      uint64_t v20 = v31.propertyName._countAndFlagsBits;
      uint64_t v19 = v31.propertyName._object;
      uint64_t v32 = v5;
      unint64_t v22 = *(void *)(v5 + 16);
      unint64_t v21 = *(void *)(v5 + 24);
      if (v22 >= v21 >> 1)
      {
        uint64_t v26 = v31.dataName._object;
        uint64_t v27 = v31.eventName._object;
        sub_1A90B28D0(v21 > 1, v22 + 1, 1);
        uint64_t v17 = v26;
        object = v27;
        uint64_t v5 = v32;
      }
      *(void *)(v5 + 16) = v22 + 1;
      uint64_t v23 = (void *)(v5 + 48 * v22);
      unsigned char v23[4] = countAndFlagsBits;
      v23[5] = object;
      v23[6] = v18;
      v23[7] = v17;
      v23[8] = v20;
      v23[9] = v19;
      uint64_t result = sub_1A90B80B0(v8, v30, v29 & 1, a1);
      int64_t v8 = result;
      char v10 = v24 & 1;
      if (!--v4)
      {
        sub_1A90B8194(result, v7, v10);
        swift_bridgeObjectRelease();
        uint64_t v3 = a2;
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = MEMORY[0x1E4FBC860];
LABEL_12:
    uint64_t v25 = sub_1A90B81A0(v5);
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v25;
  }
  return result;
}

uint64_t PrivacyValidation.denylistDescriptors.getter()
{
  if (*v0) {
    uint64_t v1 = *v0;
  }
  else {
    uint64_t v1 = MEMORY[0x1E4FBC870];
  }
  swift_bridgeObjectRetain();
  return v1;
}

BOOL PrivacyValidation.isEnabled.getter()
{
  return *v0 != 0;
}

void *initializeBufferWithCopyOfBuffer for PrivacyValidation(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for PrivacyValidation()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for PrivacyValidation(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for PrivacyValidation(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrivacyValidation(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PrivacyValidation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_1A90B6660(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1A90B6678(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for PrivacyValidation()
{
  return &type metadata for PrivacyValidation;
}

void *initializeBufferWithCopyOfBuffer for PrivacyValidationError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for PrivacyValidationError()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for PrivacyValidationError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for PrivacyValidationError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrivacyValidationError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrivacyValidationError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivacyValidationError()
{
  return &type metadata for PrivacyValidationError;
}

uint64_t sub_1A90B67F8(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_1A916BAB0();
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v10 = a2[3];
  uint64_t v11 = a2[4];
  uint64_t v12 = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A916B030();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v42 = v9;
  sub_1A916B030();
  uint64_t v41 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v40 = v11;
  sub_1A916B030();
  uint64_t v39 = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_1A916BAD0();
  uint64_t v14 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v15 = v13 & ~v14;
  uint64_t v16 = v6 + 56;
  int64_t v37 = a2;
  uint64_t v38 = a1;
  uint64_t v36 = v3;
  if ((*(void *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
  {
    uint64_t v17 = ~v14;
    uint64_t v18 = *(void *)(v6 + 48);
    while (1)
    {
      uint64_t v19 = (void *)(v18 + 48 * v15);
      uint64_t v20 = v19[2];
      uint64_t v21 = v19[3];
      uint64_t v22 = v19[4];
      uint64_t v23 = v19[5];
      BOOL v24 = *v19 == v7 && v19[1] == v8;
      if (v24 || (sub_1A916B9E0() & 1) != 0)
      {
        BOOL v25 = v20 == v42 && v21 == v41;
        if (v25 || (sub_1A916B9E0() & 1) != 0)
        {
          BOOL v26 = v22 == v40 && v23 == v39;
          if (v26 || (sub_1A916B9E0() & 1) != 0) {
            break;
          }
        }
      }
      unint64_t v15 = (v15 + 1) & v17;
      if (((*(void *)(v16 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease();
    sub_1A90B82F0((uint64_t)v37);
    uint64_t v27 = (void *)(*(void *)(*v36 + 48) + 48 * v15);
    uint64_t v28 = v27[1];
    uint64_t v29 = v27[2];
    uint64_t v30 = v27[3];
    uint64_t v31 = v27[4];
    uint64_t v32 = v27[5];
    *uint64_t v38 = *v27;
    v38[1] = v28;
    v38[2] = v29;
    v38[3] = v30;
    id v38[4] = v31;
    v38[5] = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_20:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v43 = *v36;
    *uint64_t v36 = 0x8000000000000000;
    sub_1A90B82A4((uint64_t)v37);
    sub_1A90B7290((uint64_t)v37, v15, isUniquelyReferenced_nonNull_native);
    *uint64_t v36 = v43;
    swift_bridgeObjectRelease();
    long long v35 = v37[1];
    *(_OWORD *)uint64_t v38 = *v37;
    *((_OWORD *)v38 + 1) = v35;
    *((_OWORD *)v38 + 2) = v37[2];
    return 1;
  }
}

uint64_t sub_1A90B6A94(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1A916BAB0();
  swift_bridgeObjectRetain();
  sub_1A916B030();
  uint64_t v8 = sub_1A916BAD0();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1A916B9E0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1A916B9E0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1A90B74F0(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1A90B6C44()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1A90B833C();
  uint64_t v3 = sub_1A916B640();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    long long v35 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v34 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    uint64_t v36 = v2;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        int64_t v37 = v10;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v34) {
          goto LABEL_33;
        }
        unint64_t v16 = v35[v15];
        int64_t v17 = v10 + 1;
        if (!v16)
        {
          int64_t v17 = v10 + 2;
          if (v10 + 2 >= v34) {
            goto LABEL_33;
          }
          unint64_t v16 = v35[v17];
          if (!v16)
          {
            int64_t v17 = v10 + 3;
            if (v10 + 3 >= v34) {
              goto LABEL_33;
            }
            unint64_t v16 = v35[v17];
            if (!v16)
            {
              uint64_t v18 = v10 + 4;
              if (v10 + 4 >= v34)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v33 = 1 << *(unsigned char *)(v2 + 32);
                if (v33 > 63) {
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *long long v35 = -1 << v33;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v35[v18];
              if (!v16)
              {
                while (1)
                {
                  int64_t v17 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v34) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v35[v17];
                  ++v18;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v10 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        int64_t v37 = v17;
        unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
      }
      BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 48 * v14);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v22 = v19[2];
      uint64_t v23 = v19[3];
      uint64_t v25 = v19[4];
      uint64_t v24 = v19[5];
      sub_1A916BAB0();
      swift_bridgeObjectRetain();
      sub_1A916B030();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1A916B030();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1A916B030();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1A916BAD0();
      uint64_t v26 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v8 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v11 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = (void *)(*(void *)(v4 + 48) + 48 * v11);
      void *v12 = v20;
      v12[1] = v21;
      v12[2] = v22;
      v12[3] = v23;
      v12[4] = v25;
      v12[5] = v24;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v36;
      int64_t v10 = v37;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1A90B6FB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1A90B8398();
  uint64_t v3 = sub_1A916B640();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1A916BAB0();
      sub_1A916B030();
      uint64_t result = sub_1A916BAD0();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1A90B7290(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = (uint64_t *)result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  int64_t v34 = (_OWORD *)result;
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_27;
  }
  if (a3)
  {
    sub_1A90B6C44();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1A90B768C();
      goto LABEL_27;
    }
    sub_1A90B7A18();
  }
  uint64_t v8 = *v3;
  sub_1A916BAB0();
  uint64_t v9 = *v5;
  uint64_t v10 = v5[1];
  uint64_t v11 = v5[2];
  uint64_t v12 = v5[3];
  uint64_t v14 = v5[4];
  uint64_t v13 = v5[5];
  swift_bridgeObjectRetain();
  sub_1A916B030();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v36 = v11;
  sub_1A916B030();
  uint64_t v35 = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v38 = v14;
  sub_1A916B030();
  uint64_t v37 = v13;
  swift_bridgeObjectRelease();
  uint64_t result = sub_1A916BAD0();
  uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v15;
  uint64_t v16 = v8 + 56;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v18 = *(void *)(v8 + 48);
    while (1)
    {
      BOOL v19 = (void *)(v18 + 48 * a2);
      uint64_t v20 = v19[2];
      uint64_t v21 = v19[3];
      uint64_t v22 = v19[4];
      uint64_t v23 = v19[5];
      BOOL v24 = *v19 == v9 && v19[1] == v10;
      if (v24 || (uint64_t result = sub_1A916B9E0(), (result & 1) != 0))
      {
        BOOL v25 = v20 == v36 && v21 == v35;
        if (v25 || (uint64_t result = sub_1A916B9E0(), (result & 1) != 0))
        {
          if (v22 == v38 && v23 == v37) {
            break;
          }
          uint64_t result = sub_1A916B9E0();
          if (result) {
            break;
          }
        }
      }
      a2 = (a2 + 1) & v17;
      if (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_27;
      }
    }
    uint64_t result = sub_1A916BA40();
    __break(1u);
  }
LABEL_27:
  uint64_t v27 = *v33;
  *(void *)(*v33 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v28 = (_OWORD *)(*(void *)(v27 + 48) + 48 * a2);
  long long v29 = v34[1];
  *uint64_t v28 = *v34;
  v28[1] = v29;
  v28[2] = v34[2];
  uint64_t v30 = *(void *)(v27 + 16);
  BOOL v31 = __OFADD__(v30, 1);
  uint64_t v32 = v30 + 1;
  if (v31) {
    __break(1u);
  }
  else {
    *(void *)(v27 + 16) = v32;
  }
  return result;
}

uint64_t sub_1A90B74F0(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1A90B6FB4();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1A90B7868();
      goto LABEL_22;
    }
    sub_1A90B7D64();
  }
  uint64_t v11 = *v4;
  sub_1A916BAB0();
  sub_1A916B030();
  uint64_t result = sub_1A916BAD0();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1A916B9E0(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1A916BA40();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1A916B9E0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_1A90B768C()
{
  uint64_t v1 = v0;
  sub_1A90B833C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A916B630();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v13) {
      goto LABEL_28;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25)
      {
        int64_t v9 = v24 + 2;
        if (v24 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v25 = *(void *)(v6 + 8 * v9);
        if (!v25) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 48 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = v17[2];
    uint64_t v20 = v17[3];
    uint64_t v21 = v17[4];
    uint64_t v22 = v17[5];
    BOOL v23 = (void *)(*(void *)(v4 + 48) + v16);
    *BOOL v23 = *v17;
    v23[1] = v18;
    v23[2] = v19;
    v23[3] = v20;
    unsigned char v23[4] = v21;
    v23[5] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 3;
  if (v26 >= v13) {
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A90B7868()
{
  uint64_t v1 = v0;
  sub_1A90B8398();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A916B630();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A90B7A18()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1A90B833C();
  uint64_t v3 = sub_1A916B640();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v33 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v34 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  uint64_t v35 = v2;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      int64_t v36 = v10;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v34) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v15);
    int64_t v17 = v10 + 1;
    if (!v16)
    {
      int64_t v17 = v10 + 2;
      if (v10 + 2 >= v34) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v33 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v10 + 3;
        if (v10 + 3 >= v34) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v33 + 8 * v17);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    int64_t v36 = v17;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 48 * v14);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = v19[2];
    uint64_t v23 = v19[3];
    uint64_t v24 = v19[4];
    uint64_t v25 = v19[5];
    sub_1A916BAB0();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A916B030();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1A916B030();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1A916B030();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1A916BAD0();
    uint64_t v26 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v8 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v11 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (void *)(*(void *)(v4 + 48) + 48 * v11);
    void *v12 = v20;
    v12[1] = v21;
    v12[2] = v22;
    v12[3] = v23;
    v12[4] = v24;
    v12[5] = v25;
    ++*(void *)(v4 + 16);
    uint64_t v2 = v35;
    int64_t v10 = v36;
  }
  uint64_t v18 = v10 + 4;
  if (v10 + 4 >= v34)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v18);
  if (v16)
  {
    int64_t v17 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= v34) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A90B7D64()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1A90B8398();
  uint64_t v3 = sub_1A916B640();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1A916BAB0();
    swift_bridgeObjectRetain();
    sub_1A916B030();
    uint64_t result = sub_1A916BAD0();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A90B8010(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_1A90B80B0(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1A90B8194(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A90B81A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1A90B8250();
  uint64_t result = sub_1A916B2C0();
  uint64_t v7 = result;
  if (v2)
  {
    unint64_t v4 = (_OWORD *)(a1 + 32);
    do
    {
      long long v5 = v4[1];
      v8[0] = *v4;
      v8[1] = v5;
      long long v8[2] = v4[2];
      sub_1A90B82A4((uint64_t)v8);
      sub_1A90B67F8(&v6, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 3;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

unint64_t sub_1A90B8250()
{
  unint64_t result = qword_1EB6867A8;
  if (!qword_1EB6867A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6867A8);
  }
  return result;
}

uint64_t sub_1A90B82A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A90B82F0(uint64_t a1)
{
  return a1;
}

void sub_1A90B833C()
{
  if (!qword_1EB686758)
  {
    sub_1A90B8250();
    unint64_t v0 = sub_1A916B660();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB686758);
    }
  }
}

void sub_1A90B8398()
{
  if (!qword_1E97B1230)
  {
    unint64_t v0 = sub_1A916B660();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E97B1230);
    }
  }
}

uint64_t sub_1A90B83F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1A916B2C0();
  uint64_t v8 = result;
  if (v2)
  {
    unint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1A90B6A94(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t EventData.eventID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventData.eventTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventData() + 20);
  uint64_t v4 = sub_1A916AC90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t EventData.eventPath.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for EventData() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventData.sessionID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for EventData() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventData.appSessionID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for EventData() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventData.init(eventID:eventTimestamp:eventPath:sessionID:appSessionID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  *a9 = a1;
  a9[1] = a2;
  unint64_t v17 = (int *)type metadata accessor for EventData();
  int64_t v18 = (char *)a9 + v17[5];
  uint64_t v19 = sub_1A916AC90();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18, a3, v19);
  uint64_t v21 = (void *)((char *)a9 + v17[6]);
  *uint64_t v21 = a4;
  v21[1] = a5;
  uint64_t v22 = (void *)((char *)a9 + v17[7]);
  *uint64_t v22 = a6;
  v22[1] = a7;
  unint64_t v23 = (void *)((char *)a9 + v17[8]);
  *unint64_t v23 = a8;
  v23[1] = a10;
  return result;
}

BOOL sub_1A90B86D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A90B86E8()
{
  return sub_1A916BAD0();
}

uint64_t sub_1A90B8730()
{
  return sub_1A916BAC0();
}

uint64_t sub_1A90B875C()
{
  return sub_1A916BAD0();
}

uint64_t sub_1A90B87B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A90B9438(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A90B87DC()
{
  return 0;
}

void sub_1A90B87E8(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1A90B87F4(uint64_t a1)
{
  unint64_t v2 = sub_1A908B084();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A90B8830(uint64_t a1)
{
  unint64_t v2 = sub_1A908B084();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EventData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = sub_1A916AC90();
  uint64_t v33 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A908B020(0, &qword_1EB686D48, MEMORY[0x1E4FBBDC0]);
  uint64_t v34 = v6;
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v30 - v7;
  unint64_t v9 = (int *)type metadata accessor for EventData();
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = (void *)((char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A908B084();
  uint64_t v35 = v8;
  uint64_t v12 = (uint64_t)v36;
  sub_1A916BB20();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  int64_t v36 = a1;
  unint64_t v13 = v11;
  uint64_t v15 = v33;
  uint64_t v14 = v34;
  char v41 = 0;
  *unint64_t v13 = sub_1A916B8A0();
  v13[1] = v16;
  char v40 = 1;
  sub_1A908B15C(&qword_1EB686D38, MEMORY[0x1E4F27928]);
  sub_1A916B8E0();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))((char *)v13 + v9[5], v5, v3);
  char v39 = 2;
  v30[1] = 0;
  uint64_t v17 = sub_1A916B8A0();
  int64_t v18 = (uint64_t *)((char *)v13 + v9[6]);
  *int64_t v18 = v17;
  v18[1] = v19;
  char v38 = 3;
  uint64_t v20 = sub_1A916B8A0();
  uint64_t v21 = (uint64_t)v13;
  uint64_t v22 = (uint64_t *)((char *)v13 + v9[7]);
  *uint64_t v22 = v20;
  v22[1] = v23;
  char v37 = 4;
  unint64_t v24 = v9;
  uint64_t v25 = sub_1A916B880();
  uint64_t v27 = v26;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v14);
  uint64_t v28 = (uint64_t *)(v21 + v24[8]);
  *uint64_t v28 = v25;
  v28[1] = v27;
  sub_1A90B8D48(v21, v31);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
  return sub_1A90B8DAC(v21);
}

uint64_t sub_1A90B8D48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A90B8DAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A90B8E08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EventData.init(from:)(a1, a2);
}

uint64_t *initializeBufferWithCopyOfBuffer for EventData(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1A916AC90();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (uint64_t *)((char *)v4 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    int64_t v18 = (uint64_t *)((char *)v4 + v14);
    uint64_t v19 = (uint64_t *)((char *)a2 + v14);
    uint64_t v20 = v19[1];
    *int64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = a3[8];
    uint64_t v22 = (uint64_t *)((char *)v4 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

void *assignWithCopy for EventData(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A916AC90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)((char *)a1 + v16);
  int64_t v18 = (void *)((char *)a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for EventData(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A916AC90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

void *assignWithTake for EventData(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A916AC90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  void *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  int64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EventData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A90B9234);
}

uint64_t sub_1A90B9234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1A916AC90();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for EventData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A90B92F8);
}

uint64_t sub_1A90B92F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1A916AC90();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A90B93C8(unsigned __int8 *a1)
{
  return *a1;
}

ValueMetadata *type metadata accessor for EventData.CodingKeys()
{
  return &type metadata for EventData.CodingKeys;
}

unint64_t sub_1A90B93E4()
{
  unint64_t result = qword_1E97B1238;
  if (!qword_1E97B1238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1238);
  }
  return result;
}

uint64_t sub_1A90B9438(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449746E657665 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A916B9E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6954746E657665 && a2 == 0xEE00706D61747365 || (sub_1A916B9E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746150746E657665 && a2 == 0xE900000000000068 || (sub_1A916B9E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000044 || (sub_1A916B9E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6973736553707061 && a2 == 0xEC00000044496E6FLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A916B9E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

void sub_1A90B96A4(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  *(void *)(a1 + 16) = 0;
}

void static EventType.sessionGroup.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  *(void *)(a1 + 16) = 0;
}

void sub_1A90B96C4(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static EventType.timestampGranularity.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void sub_1A90B96D4(_WORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_1A90B96DC(uint64_t a1@<X8>)
{
}

void sub_1A90B96F4(unsigned char *a1@<X8>)
{
}

void sub_1A90B970C(_WORD *a1@<X8>)
{
}

uint64_t dispatch thunk of static EventType.sessionGroup.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static EventType.requiresDiagnosticsConsent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static EventType.timestampGranularity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static EventType.timeDurationGranularity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EventType.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

id BridgedFlushManager.__allocating_init(appSessionManager:client:endpoint:config:)(char *a1, void *a2, void *a3, void *a4)
{
  uint64_t v5 = v4;
  id v10 = objc_allocWithZone(v5);
  uint64_t v11 = *(void *)&a1[OBJC_IVAR___AAAppSessionManager_appSessionManager];
  type metadata accessor for URLSessionUploadClientFactory();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = (char *)v10;
  swift_retain();
  id v14 = a2;
  swift_unknownObjectRetain();
  id v15 = a4;
  uint64_t v16 = sub_1A90BA194(v11, v14, a3, 0, v15, v12);
  swift_release();
  *(void *)&v13[OBJC_IVAR___AAFlushManager_flushManager] = v16;

  v19.receiver = v13;
  v19.super_class = v5;
  id v17 = objc_msgSendSuper2(&v19, sel_init);

  swift_unknownObjectRelease();
  return v17;
}

id BridgedFlushManager.init(appSessionManager:client:endpoint:config:)(char *a1, void *a2, void *a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = *(void *)&a1[OBJC_IVAR___AAAppSessionManager_appSessionManager];
  type metadata accessor for URLSessionUploadClientFactory();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = v5;
  swift_retain();
  id v14 = a2;
  swift_unknownObjectRetain();
  id v15 = a4;
  uint64_t v16 = sub_1A90BA194(v11, v14, a3, 0, v15, v12);
  swift_release();
  *(void *)&v13[OBJC_IVAR___AAFlushManager_flushManager] = v16;

  v19.receiver = v13;
  v19.super_class = ObjectType;
  id v17 = objc_msgSendSuper2(&v19, sel_init);

  swift_unknownObjectRelease();
  return v17;
}

void BridgedFlushManager.flush(_:)(void (*a1)(void), uint64_t a2)
{
}

id BridgedFlushManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void BridgedFlushManager.init()()
{
}

id BridgedFlushManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *sub_1A90B9CB8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
  uint64_t v32 = a7;
  char v37 = a5;
  uint64_t v33 = a4;
  uint64_t v36 = a3;
  uint64_t v35 = a2;
  uint64_t v34 = a1;
  uint64_t v12 = sub_1A916B430();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1A916B420();
  MEMORY[0x1F4188790](v16);
  uint64_t v17 = sub_1A916AE10();
  MEMORY[0x1F4188790](v17 - 8);
  v42[3] = type metadata accessor for URLSessionUploadClientFactory();
  id v42[4] = &protocol witness table for URLSessionUploadClientFactory;
  v42[0] = a6;
  v41[3] = type metadata accessor for DocumentDirectoryUploadDropboxPathProvider(0);
  v41[4] = &off_1EFFA2578;
  v41[0] = a8;
  v40[3] = type metadata accessor for UploadDropboxFileManager();
  v40[4] = &off_1EFFA1230;
  v40[0] = a9;
  v39[3] = type metadata accessor for SHA1Base64SigningService();
  v39[4] = &off_1EFF9DA20;
  v39[0] = v32;
  sub_1A90A601C();
  sub_1A916ADD0();
  uint64_t v38 = MEMORY[0x1E4FBC860];
  sub_1A90BA594((unint64_t *)&qword_1EB68A900, MEMORY[0x1E4FBCC10]);
  sub_1A90BA53C();
  sub_1A90BA594((unint64_t *)&qword_1EB68A8F8, (void (*)(uint64_t))sub_1A90BA53C);
  sub_1A916B610();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FBCC58], v12);
  *((void *)a10 + 30) = sub_1A916B480();
  uint64_t v18 = OBJC_IVAR____TtC12AppAnalytics12FlushManager_logger;
  if (qword_1EB688700 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1A916AD50();
  uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1EB68D970);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(&a10[v18], v20, v19);
  *((void *)a10 + 2) = v34;
  *((void *)a10 + 3) = &off_1EFFA1A48;
  uint64_t v21 = v35;
  uint64_t v22 = v36;
  *((void *)a10 + 4) = v35;
  *((void *)a10 + 5) = v22;
  uint64_t v23 = v37;
  *((void *)a10 + 6) = v33;
  *((void *)a10 + 7) = v23;
  sub_1A90A0DC8((uint64_t)v42, (uint64_t)(a10 + 64));
  sub_1A90A0DC8((uint64_t)v39, (uint64_t)(a10 + 104));
  sub_1A90A0DC8((uint64_t)v41, (uint64_t)(a10 + 144));
  sub_1A90A0DC8((uint64_t)v40, (uint64_t)(a10 + 184));
  swift_beginAccess();
  sub_1A90BA5DC();
  uint64_t v24 = swift_allocObject();
  type metadata accessor for UnfairLock();
  uint64_t v25 = swift_allocObject();
  swift_retain();
  id v26 = v21;
  swift_unknownObjectRetain();
  uint64_t v27 = v23;
  uint64_t v28 = (_DWORD *)swift_slowAlloc();
  *(void *)(v25 + 16) = v28;
  *uint64_t v28 = 0;
  *(_DWORD *)(v25 + 24) = 0x10000;
  *(void *)(v24 + 16) = v25;
  *(unsigned char *)(v24 + 24) = 0;
  *((void *)a10 + 29) = v24;
  swift_endAccess();
  LOBYTE(v24) = v27[OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled];
  id v29 = objc_allocWithZone((Class)type metadata accessor for TransparencyLogging());
  id v30 = sub_1A90A9FD4(v24);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
  *((void *)a10 + 28) = v30;
  return a10;
}

char *sub_1A90BA194(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v33 = a6;
  uint64_t v34 = a2;
  uint64_t v35 = a4;
  uint64_t v9 = sub_1A916AAD0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UploadDropboxFileManager();
  uint64_t v13 = swift_allocObject();
  type metadata accessor for MescalSigner();
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = type metadata accessor for SHA1Base64SigningService();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v14;
  *(void *)(v16 + 24) = &off_1EFF9D600;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, (uint64_t)a5 + OBJC_IVAR___AAUploadBatchEventConfig_directory, v9);
  swift_retain();
  id v17 = objc_msgSend(a3, sel_name);
  uint64_t v18 = sub_1A916AF90();
  uint64_t v20 = v19;

  type metadata accessor for DocumentDirectoryUploadDropboxPathProvider(0);
  uint64_t v21 = swift_allocObject();
  swift_retain();
  uint64_t v22 = sub_1A908B338((uint64_t)v12, v18, v20, v13, v21);
  v36[3] = v15;
  v36[4] = &off_1EFF9DA20;
  v36[0] = v16;
  type metadata accessor for FlushManager();
  uint64_t v23 = (char *)swift_allocObject();
  uint64_t v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v15);
  MEMORY[0x1F4188790](v24);
  id v26 = (uint64_t *)((char *)&v33 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v27 + 16))(v26);
  uint64_t v28 = *v26;
  swift_retain();
  uint64_t v29 = v33;
  swift_retain();
  swift_retain();
  swift_retain();
  id v30 = v34;
  uint64_t v31 = sub_1A90B9CB8(a1, v34, (uint64_t)a3, v35, a5, v29, v28, v22, v13, v23);
  swift_release();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v31;
}

uint64_t type metadata accessor for BridgedFlushManager()
{
  return self;
}

uint64_t method lookup function for BridgedFlushManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BridgedFlushManager);
}

uint64_t dispatch thunk of BridgedFlushManager.__allocating_init(appSessionManager:client:endpoint:config:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1A90BA4FC()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A90BA534()
{
  return sub_1A9167438(*(void *)(v0 + 16));
}

void sub_1A90BA53C()
{
  if (!qword_1EB68A8F0)
  {
    sub_1A916B420();
    unint64_t v0 = sub_1A916B230();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB68A8F0);
    }
  }
}

uint64_t sub_1A90BA594(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1A90BA5DC()
{
  if (!qword_1EB688E08)
  {
    unint64_t v0 = type metadata accessor for Atomic();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB688E08);
    }
  }
}

id BridgedRawDataEvent.__allocating_init(name:dictionary:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = objc_allocWithZone(v3);
  uint64_t v8 = &v7[OBJC_IVAR___AARawDataEvent_name];
  *uint64_t v8 = a1;
  v8[1] = a2;
  *(void *)&v7[OBJC_IVAR___AARawDataEvent_dictionary] = a3;
  v7[OBJC_IVAR___AARawDataEvent_requiresDiagnosticsConsent] = 0;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, sel_init);
}

id BridgedRawDataEvent.init(name:dictionary:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = &v3[OBJC_IVAR___AARawDataEvent_name];
  *uint64_t v8 = a1;
  v8[1] = a2;
  *(void *)&v3[OBJC_IVAR___AARawDataEvent_dictionary] = a3;
  v3[OBJC_IVAR___AARawDataEvent_requiresDiagnosticsConsent] = 0;
  v10.receiver = v3;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_init);
}

id BridgedRawDataEvent.__allocating_init(name:dictionary:requiresDiagnosticsConsent:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v9 = objc_allocWithZone(v4);
  objc_super v10 = &v9[OBJC_IVAR___AARawDataEvent_name];
  void *v10 = a1;
  v10[1] = a2;
  *(void *)&v9[OBJC_IVAR___AARawDataEvent_dictionary] = a3;
  v9[OBJC_IVAR___AARawDataEvent_requiresDiagnosticsConsent] = a4;
  v12.receiver = v9;
  v12.super_class = v4;
  return objc_msgSendSuper2(&v12, sel_init);
}

id BridgedRawDataEvent.init(name:dictionary:requiresDiagnosticsConsent:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  objc_super v10 = &v4[OBJC_IVAR___AARawDataEvent_name];
  void *v10 = a1;
  v10[1] = a2;
  *(void *)&v4[OBJC_IVAR___AARawDataEvent_dictionary] = a3;
  v4[OBJC_IVAR___AARawDataEvent_requiresDiagnosticsConsent] = a4;
  v12.receiver = v4;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, sel_init);
}

void static BridgedRawDataEvent.dataName.getter()
{
}

uint64_t BridgedRawDataEvent.toDict()()
{
  return swift_bridgeObjectRetain();
}

id BridgedRawDataEvent.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void BridgedRawDataEvent.init()()
{
}

id BridgedRawDataEvent.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BridgedRawDataEvent()
{
  return self;
}

uint64_t method lookup function for BridgedRawDataEvent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BridgedRawDataEvent);
}

uint64_t dispatch thunk of BridgedRawDataEvent.__allocating_init(name:dictionary:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of BridgedRawDataEvent.__allocating_init(name:dictionary:requiresDiagnosticsConsent:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1A90BACB0()
{
  id v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___AADataEventTraits_onlyOnce);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1A90BAD44(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___AADataEventTraits_onlyOnce);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1A90BAD90())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A90BAE34()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___AADataEventTraits_unique);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1A90BAEC8(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___AADataEventTraits_unique);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1A90BAF14())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1A90BAFB8()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___AADataEventTraits_discardWhenPresent);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1A90BB04C(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___AADataEventTraits_discardWhenPresent);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1A90BB098())()
{
  return j__swift_endAccess;
}

id BridgedDataEventTraits.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id BridgedDataEventTraits.init()()
{
  v0[OBJC_IVAR___AADataEventTraits_onlyOnce] = 0;
  v0[OBJC_IVAR___AADataEventTraits_unique] = 0;
  v0[OBJC_IVAR___AADataEventTraits_discardWhenPresent] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BridgedDataEventTraits();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for BridgedDataEventTraits()
{
  return self;
}

char *sub_1A90BB20C()
{
  id v1 = (unsigned char *)(v0 + OBJC_IVAR___AADataEventTraits_onlyOnce);
  swift_beginAccess();
  if (*v1 == 1)
  {
    objc_super v2 = sub_1A90C2D80(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v4 = *((void *)v2 + 2);
    unint64_t v3 = *((void *)v2 + 3);
    if (v4 >= v3 >> 1) {
      objc_super v2 = sub_1A90C2D80((char *)(v3 > 1), v4 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v4 + 1;
    v2[v4 + 32] = 0;
  }
  else
  {
    objc_super v2 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v5 = (unsigned char *)(v0 + OBJC_IVAR___AADataEventTraits_unique);
  swift_beginAccess();
  if (*v5 == 1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      objc_super v2 = sub_1A90C2D80(0, *((void *)v2 + 2) + 1, 1, v2);
    }
    unint64_t v7 = *((void *)v2 + 2);
    unint64_t v6 = *((void *)v2 + 3);
    if (v7 >= v6 >> 1) {
      objc_super v2 = sub_1A90C2D80((char *)(v6 > 1), v7 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v7 + 1;
    v2[v7 + 32] = 1;
  }
  uint64_t v8 = (unsigned char *)(v0 + OBJC_IVAR___AADataEventTraits_discardWhenPresent);
  swift_beginAccess();
  if (*v8 == 1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      objc_super v2 = sub_1A90C2D80(0, *((void *)v2 + 2) + 1, 1, v2);
    }
    unint64_t v10 = *((void *)v2 + 2);
    unint64_t v9 = *((void *)v2 + 3);
    if (v10 >= v9 >> 1) {
      objc_super v2 = sub_1A90C2D80((char *)(v9 > 1), v10 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v10 + 1;
    v2[v10 + 32] = 2;
  }
  return v2;
}

id BridgedDataEventTraits.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BridgedDataEventTraits();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A90BB430@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR___AADataEventTraits_onlyOnce, a2);
}

uint64_t sub_1A90BB43C(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR___AADataEventTraits_onlyOnce);
}

uint64_t sub_1A90BB448@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR___AADataEventTraits_unique, a2);
}

uint64_t sub_1A90BB454(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR___AADataEventTraits_unique);
}

uint64_t sub_1A90BB460@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR___AADataEventTraits_discardWhenPresent, a2);
}

uint64_t keypath_getTm@<X0>(void *a1@<X0>, void *a2@<X3>, unsigned char *a3@<X8>)
{
  unint64_t v4 = (unsigned char *)(*a1 + *a2);
  uint64_t result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

uint64_t sub_1A90BB4BC(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR___AADataEventTraits_discardWhenPresent);
}

uint64_t keypath_setTm(char *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  char v5 = *a1;
  unint64_t v6 = (unsigned char *)(*a2 + *a5);
  uint64_t result = swift_beginAccess();
  *unint64_t v6 = v5;
  return result;
}

uint64_t method lookup function for BridgedDataEventTraits(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BridgedDataEventTraits);
}

uint64_t dispatch thunk of BridgedDataEventTraits.onlyOnce.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of BridgedDataEventTraits.onlyOnce.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of BridgedDataEventTraits.onlyOnce.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of BridgedDataEventTraits.unique.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of BridgedDataEventTraits.unique.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of BridgedDataEventTraits.unique.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of BridgedDataEventTraits.discardWhenPresent.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of BridgedDataEventTraits.discardWhenPresent.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of BridgedDataEventTraits.discardWhenPresent.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

id sub_1A90BB704()
{
  uint64_t v0 = (objc_class *)type metadata accessor for BridgedTimestampJitter();
  id v1 = objc_allocWithZone(v0);
  v1[OBJC_IVAR___AATimestampJitter_enabled] = 0;
  *(void *)&v1[OBJC_IVAR___AATimestampJitter_lowerBound] = 0xC082C00000000000;
  *(void *)&v1[OBJC_IVAR___AATimestampJitter_upperBound] = 0x4082C00000000000;
  v3.receiver = v1;
  v3.super_class = v0;
  id result = objc_msgSendSuper2(&v3, sel_init);
  qword_1EB686FB0 = (uint64_t)result;
  return result;
}

id static BridgedTimestampJitter.default.getter()
{
  if (qword_1EB686FB8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB686FB0;

  return v0;
}

uint64_t BridgedTimestampJitter.enabled.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___AATimestampJitter_enabled);
}

double BridgedTimestampJitter.lowerBound.getter()
{
  return *(double *)(v0 + OBJC_IVAR___AATimestampJitter_lowerBound);
}

double BridgedTimestampJitter.upperBound.getter()
{
  return *(double *)(v0 + OBJC_IVAR___AATimestampJitter_upperBound);
}

id BridgedTimestampJitter.with(enabled:)(char a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___AATimestampJitter_lowerBound);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR___AATimestampJitter_upperBound);
  unint64_t v6 = objc_allocWithZone(ObjectType);
  v6[OBJC_IVAR___AATimestampJitter_enabled] = a1;
  *(void *)&v6[OBJC_IVAR___AATimestampJitter_lowerBound] = v4;
  *(void *)&v6[OBJC_IVAR___AATimestampJitter_upperBound] = v5;
  v8.receiver = v6;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

id BridgedTimestampJitter.with(lowerBound:)(double a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  char v4 = *(unsigned char *)(v1 + OBJC_IVAR___AATimestampJitter_enabled);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR___AATimestampJitter_upperBound);
  unint64_t v6 = objc_allocWithZone(ObjectType);
  v6[OBJC_IVAR___AATimestampJitter_enabled] = v4;
  *(double *)&v6[OBJC_IVAR___AATimestampJitter_lowerBound] = a1;
  *(void *)&v6[OBJC_IVAR___AATimestampJitter_upperBound] = v5;
  v8.receiver = v6;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

id BridgedTimestampJitter.with(upperBound:)(double a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  char v4 = *(unsigned char *)(v1 + OBJC_IVAR___AATimestampJitter_enabled);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR___AATimestampJitter_lowerBound);
  unint64_t v6 = objc_allocWithZone(ObjectType);
  v6[OBJC_IVAR___AATimestampJitter_enabled] = v4;
  *(void *)&v6[OBJC_IVAR___AATimestampJitter_lowerBound] = v5;
  *(double *)&v6[OBJC_IVAR___AATimestampJitter_upperBound] = a1;
  v8.receiver = v6;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

id BridgedTimestampJitter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void BridgedTimestampJitter.init()()
{
}

id BridgedTimestampJitter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BridgedTimestampJitter()
{
  return self;
}

uint64_t method lookup function for BridgedTimestampJitter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BridgedTimestampJitter);
}

uint64_t JSONError.init(rawValue:)()
{
  return 0;
}

unint64_t static JSONError._nsErrorDomain.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_1A90BBD98()
{
  return sub_1A916BAD0();
}

uint64_t sub_1A90BBDFC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1A90C151C();

  return MEMORY[0x1F40E3B98](a1, a2, v4);
}

uint64_t sub_1A90BBE48()
{
  return sub_1A916BAD0();
}

void *sub_1A90BBEA8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 0;
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_1A90BBEC0(uint64_t a1)
{
  unint64_t v2 = sub_1A90C151C();

  return MEMORY[0x1F40E3BA8](a1, v2);
}

uint64_t sub_1A90BBEFC(uint64_t a1)
{
  unint64_t v2 = sub_1A90C151C();

  return MEMORY[0x1F40E3BA0](a1, v2);
}

unint64_t sub_1A90BBF38()
{
  return 0xD000000000000016;
}

uint64_t sub_1A90BBF54(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1A90C151C();

  return MEMORY[0x1F40E3B90](a1, a2, v4);
}

id JSON.__allocating_init(_:)(uint64_t a1, unint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  id v6 = sub_1A90C0B78();
  sub_1A90A2FD4(a1, a2);
  return v6;
}

id JSON.init(_:)(uint64_t a1, unint64_t a2)
{
  id v4 = sub_1A90C0B78();
  sub_1A90A2FD4(a1, a2);
  return v4;
}

id sub_1A90BC120(uint64_t a1, uint64_t a2)
{
  sub_1A909F130(v2 + OBJC_IVAR___AAJSON_value, (uint64_t)&v17);
  if (!*((void *)&v18 + 1))
  {
    sub_1A909B5DC((uint64_t)&v17);
    goto LABEL_7;
  }
  sub_1A90A1AD4(0, (unint64_t *)&qword_1EB6897D0, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBAEA0]);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    unint64_t v7 = (objc_class *)type metadata accessor for JSON();
    long long v17 = 0u;
    long long v18 = 0u;
    id v8 = objc_allocWithZone(v7);
    sub_1A909F130((uint64_t)&v17, (uint64_t)v8 + OBJC_IVAR___AAJSON_value);
    v16.receiver = v8;
    v16.super_class = v7;
    id v9 = objc_msgSendSuper2(&v16, sel_init);
    goto LABEL_12;
  }
  if (*(void *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_1A90A1D98(a1, a2);
    if (v6)
    {
      sub_1A90A24B0(*(void *)(v15 + 56) + 32 * v5, (uint64_t)&v17);
    }
    else
    {
      long long v17 = 0u;
      long long v18 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  swift_bridgeObjectRelease();
  unint64_t v10 = (objc_class *)type metadata accessor for JSON();
  id v11 = objc_allocWithZone(v10);
  sub_1A909F130((uint64_t)&v17, (uint64_t)v11 + OBJC_IVAR___AAJSON_value);
  v14.receiver = v11;
  v14.super_class = v10;
  id v9 = objc_msgSendSuper2(&v14, sel_init);
LABEL_12:
  id v12 = v9;
  sub_1A909B5DC((uint64_t)&v17);
  return v12;
}

id sub_1A90BC2FC(unint64_t a1)
{
  sub_1A909F130(v1 + OBJC_IVAR___AAJSON_value, (uint64_t)&v16);
  if (!*((void *)&v17 + 1))
  {
    sub_1A909B5DC((uint64_t)&v16);
    goto LABEL_7;
  }
  sub_1A909B660(0, &qword_1EB687C38, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB320]);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    char v6 = (objc_class *)type metadata accessor for JSON();
    long long v16 = 0u;
    long long v17 = 0u;
    id v7 = objc_allocWithZone(v6);
    sub_1A909F130((uint64_t)&v16, (uint64_t)v7 + OBJC_IVAR___AAJSON_value);
    v15.receiver = v7;
    v15.super_class = v6;
    id v5 = objc_msgSendSuper2(&v15, sel_init);
    goto LABEL_9;
  }
  if ((a1 & 0x8000000000000000) != 0 || *(void *)(v14 + 16) <= a1)
  {
    swift_bridgeObjectRelease();
    id v8 = (objc_class *)type metadata accessor for JSON();
    long long v16 = 0u;
    long long v17 = 0u;
    id v9 = objc_allocWithZone(v8);
    sub_1A909F130((uint64_t)&v16, (uint64_t)v9 + OBJC_IVAR___AAJSON_value);
    v13.receiver = v9;
    v13.super_class = v8;
    id v5 = objc_msgSendSuper2(&v13, sel_init);
  }
  else
  {
    sub_1A90A24B0(v14 + 32 * a1 + 32, (uint64_t)&v16);
    swift_bridgeObjectRelease();
    objc_super v3 = (objc_class *)type metadata accessor for JSON();
    id v4 = objc_allocWithZone(v3);
    sub_1A909F130((uint64_t)&v16, (uint64_t)v4 + OBJC_IVAR___AAJSON_value);
    v12.receiver = v4;
    v12.super_class = v3;
    id v5 = objc_msgSendSuper2(&v12, sel_init);
  }
LABEL_9:
  id v10 = v5;
  sub_1A909B5DC((uint64_t)&v16);
  return v10;
}

BOOL sub_1A90BC4E0()
{
  sub_1A909F130(v0 + OBJC_IVAR___AAJSON_value, (uint64_t)v3);
  BOOL v1 = v3[3] != 0;
  sub_1A909B5DC((uint64_t)v3);
  return v1;
}

uint64_t sub_1A90BC66C@<X0>(uint64_t a1@<X8>)
{
  return sub_1A909F130(v1 + OBJC_IVAR___AAJSON_value, a1);
}

uint64_t sub_1A90BC748()
{
  sub_1A909F130(v0 + OBJC_IVAR___AAJSON_value, (uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast()) {
      return v2;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1A909B5DC((uint64_t)v3);
    return 0;
  }
}

uint64_t sub_1A90BC7C8()
{
  return sub_1A90BC7E0();
}

uint64_t sub_1A90BC7D4()
{
  return sub_1A90BC7E0();
}

uint64_t sub_1A90BC7E0()
{
  sub_1A909F130(v0 + OBJC_IVAR___AAJSON_value, (uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast()) {
      return v2;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1A909B5DC((uint64_t)v3);
    return 0;
  }
}

uint64_t sub_1A90BC86C()
{
  sub_1A909F130(v0 + OBJC_IVAR___AAJSON_value, (uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast()) {
      return v2;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1A909B5DC((uint64_t)v3);
    return 0;
  }
}

uint64_t sub_1A90BC8F0()
{
  sub_1A909F130(v0 + OBJC_IVAR___AAJSON_value, (uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast()) {
      return v2;
    }
    else {
      return 2;
    }
  }
  else
  {
    sub_1A909B5DC((uint64_t)v3);
    return 2;
  }
}

uint64_t sub_1A90BC9D8()
{
  sub_1A909F130(v0 + OBJC_IVAR___AAJSON_value, (uint64_t)v10);
  if (!v11)
  {
    sub_1A909B5DC((uint64_t)v10);
    return 0;
  }
  sub_1A909B660(0, &qword_1EB687C38, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB320]);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v1 = *(void *)(v8[0] + 16);
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1A916B710();
    uint64_t v2 = v8[0] + 32;
    do
    {
      sub_1A90A24B0(v2, (uint64_t)v10);
      sub_1A90A24B0((uint64_t)v10, (uint64_t)v8);
      objc_super v3 = (objc_class *)type metadata accessor for JSON();
      id v4 = objc_allocWithZone(v3);
      sub_1A909F130((uint64_t)v8, (uint64_t)v4 + OBJC_IVAR___AAJSON_value);
      v7.receiver = v4;
      v7.super_class = v3;
      objc_msgSendSuper2(&v7, sel_init);
      sub_1A909B5DC((uint64_t)v8);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
      sub_1A916B6E0();
      sub_1A916B720();
      sub_1A916B730();
      sub_1A916B6F0();
      v2 += 32;
      --v1;
    }
    while (v1);
    uint64_t v5 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v5;
}

uint64_t sub_1A90BCBF8()
{
  sub_1A909F130(v0 + OBJC_IVAR___AAJSON_value, (uint64_t)&v42);
  if (!*((void *)&v44 + 1))
  {
    sub_1A909B5DC((uint64_t)&v42);
    return 0;
  }
  sub_1A90A1AD4(0, (unint64_t *)&qword_1EB6897D0, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBAEA0]);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  int64_t v1 = 0;
  uint64_t v2 = v40;
  uint64_t v37 = v40 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v40 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v40 + 64);
  int64_t v38 = (unint64_t)(v3 + 63) >> 6;
  char v6 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v1 << 6);
LABEL_10:
      uint64_t v11 = *(void *)(v2 + 56);
      objc_super v12 = (void *)(*(void *)(v2 + 48) + 16 * v10);
      uint64_t v13 = v12[1];
      *(void *)&long long v40 = *v12;
      *((void *)&v40 + 1) = v13;
      sub_1A90A24B0(v11 + 32 * v10, (uint64_t)v41);
      swift_bridgeObjectRetain();
      goto LABEL_29;
    }
    int64_t v14 = v1 + 1;
    if (__OFADD__(v1, 1)) {
      goto LABEL_47;
    }
    if (v14 < v38)
    {
      unint64_t v15 = *(void *)(v37 + 8 * v14);
      if (v15) {
        goto LABEL_14;
      }
      int64_t v16 = v1 + 2;
      ++v1;
      if (v14 + 1 < v38)
      {
        unint64_t v15 = *(void *)(v37 + 8 * v16);
        if (v15) {
          goto LABEL_17;
        }
        int64_t v1 = v14 + 1;
        if (v14 + 2 < v38)
        {
          unint64_t v15 = *(void *)(v37 + 8 * (v14 + 2));
          if (v15)
          {
            v14 += 2;
            goto LABEL_14;
          }
          int64_t v16 = v14 + 3;
          int64_t v1 = v14 + 2;
          if (v14 + 3 < v38) {
            break;
          }
        }
      }
    }
LABEL_28:
    unint64_t v5 = 0;
    memset(v41, 0, sizeof(v41));
    long long v40 = 0u;
LABEL_29:
    sub_1A90C12D4((uint64_t)&v40, (uint64_t)&v42, (uint64_t (*)(void))sub_1A90C0CB4);
    uint64_t v17 = v43;
    if (!v43)
    {
      swift_release();
      return (uint64_t)v6;
    }
    uint64_t v18 = v42;
    sub_1A90A1A68(&v44, &v40);
    uint64_t v19 = (objc_class *)type metadata accessor for JSON();
    id v20 = objc_allocWithZone(v19);
    sub_1A909F130((uint64_t)&v40, (uint64_t)v20 + OBJC_IVAR___AAJSON_value);
    v39.receiver = v20;
    v39.super_class = v19;
    id v21 = objc_msgSendSuper2(&v39, sel_init);
    sub_1A909B5DC((uint64_t)&v40);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v40 = v6;
    unint64_t v25 = sub_1A90A1D98(v18, v17);
    uint64_t v26 = v6[2];
    BOOL v27 = (v23 & 1) == 0;
    uint64_t v28 = v26 + v27;
    if (__OFADD__(v26, v27))
    {
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    char v29 = v23;
    if (v6[3] >= v28)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        char v6 = (void *)v40;
        if (v23) {
          goto LABEL_6;
        }
      }
      else
      {
        sub_1A90BF860(v28, v23, v24);
        char v6 = (void *)v40;
        if (v29) {
          goto LABEL_6;
        }
      }
    }
    else
    {
      sub_1A90BE378(v28, isUniquelyReferenced_nonNull_native, v24);
      unint64_t v30 = sub_1A90A1D98(v18, v17);
      if ((v29 & 1) != (v31 & 1)) {
        goto LABEL_49;
      }
      unint64_t v25 = v30;
      char v6 = (void *)v40;
      if (v29)
      {
LABEL_6:
        uint64_t v7 = v6[7];
        uint64_t v8 = 8 * v25;

        *(void *)(v7 + v8) = v21;
        goto LABEL_7;
      }
    }
    v6[(v25 >> 6) + 8] |= 1 << v25;
    uint64_t v32 = (uint64_t *)(v6[6] + 16 * v25);
    *uint64_t v32 = v18;
    v32[1] = v17;
    *(void *)(v6[7] + 8 * v25) = v21;
    uint64_t v33 = v6[2];
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34) {
      goto LABEL_46;
    }
    v6[2] = v35;
    swift_bridgeObjectRetain();
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v15 = *(void *)(v37 + 8 * v16);
  if (v15)
  {
LABEL_17:
    int64_t v14 = v16;
LABEL_14:
    unint64_t v5 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v14 << 6);
    int64_t v1 = v14;
    goto LABEL_10;
  }
  while (1)
  {
    int64_t v14 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v14 >= v38)
    {
      int64_t v1 = v38 - 1;
      goto LABEL_28;
    }
    unint64_t v15 = *(void *)(v37 + 8 * v14);
    ++v16;
    if (v15) {
      goto LABEL_14;
    }
  }
LABEL_48:
  __break(1u);
LABEL_49:
  uint64_t result = sub_1A916BA50();
  __break(1u);
  return result;
}

id sub_1A90BD044()
{
  uint64_t v1 = v0 + OBJC_IVAR___AAJSON_value;
  sub_1A909F130(v0 + OBJC_IVAR___AAJSON_value, (uint64_t)v4);
  if (v5)
  {
    if (swift_dynamicCast()) {
      return objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)&v3);
    }
  }
  else
  {
    sub_1A909B5DC((uint64_t)v4);
  }
  sub_1A909F130(v1, (uint64_t)v4);
  if (v5)
  {
    if (swift_dynamicCast()) {
      return objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v3);
    }
  }
  else
  {
    sub_1A909B5DC((uint64_t)v4);
  }
  sub_1A909F130(v1, (uint64_t)v4);
  if (v5)
  {
    if (swift_dynamicCast()) {
      return objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, LOBYTE(v3));
    }
  }
  else
  {
    sub_1A909B5DC((uint64_t)v4);
  }
  return 0;
}

void *sub_1A90BD1A8(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1A90BCBF8();
  swift_bridgeObjectRelease();
  if (!v3)
  {
    uint64_t v4 = sub_1A90BC9D8();
    swift_bridgeObjectRelease();
    if (!v4)
    {
      sub_1A90C0D0C();
      swift_allocError();
      void *v10 = 0;
      goto LABEL_10;
    }
  }
  sub_1A909F130((uint64_t)v1 + OBJC_IVAR___AAJSON_value, (uint64_t)&v12);
  if (v13)
  {
    sub_1A90A1A68(&v12, &v14);
  }
  else
  {
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
    unint64_t v15 = sub_1A90B27E0();
    *(void *)&long long v14 = v5;
    sub_1A909B5DC((uint64_t)&v12);
  }
  char v6 = self;
  __swift_project_boxed_opaque_existential_1(&v14, v15);
  uint64_t v7 = sub_1A916B9D0();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v14);
  *(void *)&long long v14 = 0;
  id v8 = objc_msgSend(v6, sel_dataWithJSONObject_options_error_, v7, a1, &v14);
  swift_unknownObjectRelease();
  id v9 = (id)v14;
  if (!v8)
  {
    uint64_t v1 = v9;
    sub_1A916A990();

LABEL_10:
    swift_willThrow();
    return v1;
  }
  uint64_t v1 = (void *)sub_1A916AB80();

  return v1;
}

id JSON.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void JSON.init()()
{
}

id JSON.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSON();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t JSON.payload()()
{
  uint64_t v1 = sub_1A90BCBF8();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_1A909F130(v0 + OBJC_IVAR___AAJSON_value, (uint64_t)v4);
    if (v4[3])
    {
      sub_1A90A1AD4(0, (unint64_t *)&qword_1EB6897D0, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBAEA0]);
      if (swift_dynamicCast()) {
        return v4[5];
      }
    }
    else
    {
      sub_1A909B5DC((uint64_t)v4);
    }
  }
  sub_1A90C0D0C();
  swift_allocError();
  *uint64_t v3 = 0;
  return swift_willThrow();
}

uint64_t sub_1A90BD5F0()
{
  return JSON.payload()();
}

unint64_t JSON.description.getter()
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = sub_1A916AFD0();
  MEMORY[0x1F4188790](v1 - 8);
  sub_1A909F130(v0 + OBJC_IVAR___AAJSON_value, (uint64_t)&v16);
  if (v17)
  {
    sub_1A90A1A68(&v16, &v18);
  }
  else
  {
    id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
    unint64_t v19 = sub_1A90B27E0();
    *(void *)&long long v18 = v2;
    sub_1A909B5DC((uint64_t)&v16);
  }
  uint64_t v3 = self;
  __swift_project_boxed_opaque_existential_1(&v18, v19);
  uint64_t v4 = sub_1A916B9D0();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v18);
  *(void *)&long long v18 = 0;
  id v5 = objc_msgSend(v3, sel_dataWithJSONObject_options_error_, v4, 4, &v18);
  swift_unknownObjectRelease();
  id v6 = (id)v18;
  if (v5)
  {
    uint64_t v7 = sub_1A916AB80();
    unint64_t v9 = v8;

    sub_1A916AFC0();
    uint64_t v10 = sub_1A916AFA0();
    uint64_t v12 = v11;
    sub_1A90A2FD4(v7, v9);
    if (!v12) {
      return 0xD00000000000001ELL;
    }
  }
  else
  {
    uint64_t v13 = v6;
    long long v14 = (void *)sub_1A916A990();

    swift_willThrow();
    *(void *)&long long v18 = 0;
    *((void *)&v18 + 1) = 0xE000000000000000;
    *(void *)&long long v16 = v14;
    sub_1A908E870(0, (unint64_t *)&qword_1EB689860);
    sub_1A916B780();

    return v18;
  }
  return v10;
}

unint64_t sub_1A90BD8BC(uint64_t a1)
{
  sub_1A916BAB0();
  sub_1A90C1438(a1, (uint64_t)&v4);
  if (v5)
  {
    sub_1A916BAC0();
    sub_1A916B030();
  }
  else
  {
    sub_1A916BAC0();
  }
  sub_1A916B030();
  uint64_t v2 = sub_1A916BAD0();
  return sub_1A90BDAE0(a1, v2);
}

unint64_t sub_1A90BD98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1A916BAB0();
  swift_bridgeObjectRetain();
  sub_1A916B030();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A916B030();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1A916BAD0();

  return sub_1A90BDDCC(a1, a2, a3, a4, v8);
}

unint64_t sub_1A90BDA4C(uint64_t a1)
{
  sub_1A916AF90();
  sub_1A916BAB0();
  sub_1A916B030();
  uint64_t v2 = sub_1A916BAD0();
  swift_bridgeObjectRelease();

  return sub_1A90BDECC(a1, v2);
}

unint64_t sub_1A90BDAE0(uint64_t a1, uint64_t a2)
{
  sub_1A90C1438(a1, (uint64_t)v28);
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v6 = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v7 = v28[0];
    uint64_t v26 = v28[2];
    uint64_t v27 = v28[1];
    uint64_t v25 = v28[3];
    uint64_t v22 = v28[0];
    uint64_t v23 = ~v5;
    char v24 = v29;
    do
    {
      uint64_t v9 = *(void *)(v2 + 48) + 40 * v6;
      uint64_t v11 = *(void *)v9;
      uint64_t v10 = *(void *)(v9 + 8);
      uint64_t v13 = *(void *)(v9 + 16);
      uint64_t v12 = *(void *)(v9 + 24);
      char v8 = *(unsigned char *)(v9 + 32);
      if (v8)
      {
        sub_1A90C1438(a1, (uint64_t)v32);
        if ((v33 & 1) == 0) {
          goto LABEL_4;
        }
        uint64_t v14 = v32[2];
        uint64_t v15 = v32[3];
        BOOL v16 = v11 == v32[0] && v10 == v32[1];
        if (!v16 && (sub_1A916B9E0() & 1) == 0)
        {
          char v8 = 1;
          uint64_t v7 = v22;
LABEL_4:
          sub_1A90C13F8(v11, v10, v13, v12, v8);
          sub_1A90C1494(a1);
          sub_1A90C14CC(v11, v10, v13, v12, v8);
          sub_1A90C14CC(v7, v27, v26, v25, v24);
          goto LABEL_5;
        }
        if (v13 == v14 && v12 == v15) {
          goto LABEL_27;
        }
        char v18 = sub_1A916B9E0();
        sub_1A90C13F8(v11, v10, v13, v12, 1);
        sub_1A90C1494(a1);
        sub_1A90C14CC(v11, v10, v13, v12, 1);
        uint64_t v7 = v22;
        sub_1A90C14CC(v22, v27, v26, v25, v24);
        if (v18) {
          return v6;
        }
      }
      else
      {
        sub_1A90C1438(a1, (uint64_t)v30);
        if (v31) {
          goto LABEL_4;
        }
        if (v11 == v30[0] && v10 == v30[1])
        {
LABEL_27:
          sub_1A90C13F8(v11, v10, v13, v12, v8);
          sub_1A90C1494(a1);
          sub_1A90C14CC(v11, v10, v13, v12, v8);
          sub_1A90C14CC(v22, v27, v26, v25, v24);
          return v6;
        }
        char v20 = sub_1A916B9E0();
        sub_1A90C13F8(v11, v10, v13, v12, 0);
        sub_1A90C1494(a1);
        sub_1A90C14CC(v11, v10, v13, v12, 0);
        uint64_t v7 = v22;
        sub_1A90C14CC(v22, v27, v26, v25, v24);
        if (v20) {
          return v6;
        }
      }
LABEL_5:
      unint64_t v6 = (v6 + 1) & v23;
    }
    while (((*(void *)(v2 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

unint64_t sub_1A90BDDCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = a5 & ~v7;
  if ((*(void *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v13 = ~v7;
    uint64_t v14 = *(void *)(v5 + 48);
    do
    {
      uint64_t v15 = (void *)(v14 + 32 * v8);
      uint64_t v16 = v15[2];
      uint64_t v17 = v15[3];
      BOOL v18 = *v15 == a1 && v15[1] == a2;
      if (v18 || (sub_1A916B9E0() & 1) != 0)
      {
        BOOL v19 = v16 == a3 && v17 == a4;
        if (v19 || (sub_1A916B9E0() & 1) != 0) {
          break;
        }
      }
      unint64_t v8 = (v8 + 1) & v13;
    }
    while (((*(void *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

unint64_t sub_1A90BDECC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1A916AF90();
    uint64_t v8 = v7;
    if (v6 == sub_1A916AF90() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1A916B9E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1A916AF90();
          uint64_t v15 = v14;
          if (v13 == sub_1A916AF90() && v15 == v16) {
            break;
          }
          char v18 = sub_1A916B9E0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_1A90BE044(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1A90A571C(0, &qword_1EB688C20, 255, (void (*)(uint64_t))type metadata accessor for UploadDropboxFile);
  char v36 = a2;
  uint64_t v6 = sub_1A916B800();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    char v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1A916BAB0();
    sub_1A916B030();
    uint64_t result = sub_1A916BAD0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    char v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *char v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A90BE378(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_1A90A571C(0, &qword_1EB688C28, a3, (void (*)(uint64_t))type metadata accessor for JSON);
  char v39 = a2;
  uint64_t v7 = sub_1A916B800();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  char v36 = v3;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void **)(*(void *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v34 = v33;
    }
    sub_1A916BAB0();
    sub_1A916B030();
    uint64_t result = sub_1A916BAD0();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v36;
  unint64_t v23 = (void *)(v6 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1A90BE6A0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1A90C133C(0, &qword_1EB689498, (void (*)(void))sub_1A90C13A4);
  char v43 = a2;
  uint64_t v6 = sub_1A916B800();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v41 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v40 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v44 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v19 >= v40) {
          goto LABEL_35;
        }
        unint64_t v20 = v41[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v40) {
            goto LABEL_35;
          }
          unint64_t v20 = v41[v21];
          if (!v20)
          {
            uint64_t v22 = v13 + 3;
            if (v13 + 3 >= v40)
            {
LABEL_35:
              swift_release();
              uint64_t v3 = v2;
              if (v43)
              {
                uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
                if (v39 >= 64) {
                  bzero(v41, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v41 = -1 << v39;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v20 = v41[v22];
            if (!v20)
            {
              while (1)
              {
                int64_t v21 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v21 >= v40) {
                  goto LABEL_35;
                }
                unint64_t v20 = v41[v21];
                ++v22;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v21 = v13 + 3;
          }
        }
LABEL_21:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v44 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = *(void *)(v5 + 56);
      uint64_t v24 = *(void *)(v5 + 48) + 40 * v18;
      uint64_t v26 = *(void *)v24;
      uint64_t v25 = *(void *)(v24 + 8);
      uint64_t v28 = *(void *)(v24 + 16);
      uint64_t v27 = *(void *)(v24 + 24);
      char v29 = *(unsigned char *)(v24 + 32);
      uint64_t v30 = (uint64_t *)(v23 + 16 * v18);
      uint64_t v31 = v30[1];
      uint64_t v45 = *v30;
      if ((v43 & 1) == 0)
      {
        sub_1A90C13F8(v26, v25, v28, v27, v29);
        swift_bridgeObjectRetain();
      }
      sub_1A916BAB0();
      sub_1A916BAC0();
      if (v29) {
        sub_1A916B030();
      }
      sub_1A916B030();
      uint64_t result = sub_1A916BAD0();
      uint64_t v32 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v33 = result & ~v32;
      unint64_t v34 = v33 >> 6;
      if (((-1 << v33) & ~*(void *)(v11 + 8 * (v33 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v33) & ~*(void *)(v11 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v35 = 0;
        unint64_t v36 = (unint64_t)(63 - v32) >> 6;
        do
        {
          if (++v34 == v36 && (v35 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v37 = v34 == v36;
          if (v34 == v36) {
            unint64_t v34 = 0;
          }
          v35 |= v37;
          uint64_t v38 = *(void *)(v11 + 8 * v34);
        }
        while (v38 == -1);
        unint64_t v14 = __clz(__rbit64(~v38)) + (v34 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = *(void *)(v7 + 48) + 40 * v14;
      *(void *)uint64_t v15 = v26;
      *(void *)(v15 + 8) = v25;
      *(void *)(v15 + 16) = v28;
      *(void *)(v15 + 24) = v27;
      *(unsigned char *)(v15 + 32) = v29;
      unint64_t v16 = (void *)(*(void *)(v7 + 56) + 16 * v14);
      int64_t v13 = v44;
      *unint64_t v16 = v45;
      v16[1] = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A90BEA40(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1A90C133C(0, (unint64_t *)&qword_1EB6867C0, (void (*)(void))sub_1A90B5108);
  char v40 = a2;
  uint64_t v6 = sub_1A916B800();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      char v29 = (uint64_t *)(*(void *)(v5 + 48) + 32 * v21);
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
      uint64_t v33 = v29[2];
      uint64_t v32 = v29[3];
      unint64_t v34 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v21);
      uint64_t v35 = v34[1];
      uint64_t v41 = *v34;
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1A916BAB0();
      swift_bridgeObjectRetain();
      sub_1A916B030();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1A916B030();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1A916BAD0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 32 * v17);
      *unint64_t v18 = v30;
      v18[1] = v31;
      v18[2] = v33;
      v18[3] = v32;
      int64_t v19 = (void *)(*(void *)(v7 + 56) + 16 * v17);
      *int64_t v19 = v41;
      v19[1] = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1A90BEDB8(uint64_t a1, char a2)
{
  return sub_1A908E960(a1, a2, &qword_1EB688150, &qword_1EB6897A0, (uint64_t)&protocol descriptor for RestartTimerType, (void (*)(uint64_t, unsigned char *))sub_1A908EC8C);
}

uint64_t sub_1A90BEDE8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1A90A1AD4(0, qword_1EB686568, (uint64_t)&type metadata for DataProvider, MEMORY[0x1E4FBBD58]);
  char v6 = a2;
  uint64_t v7 = sub_1A916B800();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35) {
          goto LABEL_33;
        }
        unint64_t v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v24 = v36[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v24 = v36[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
      }
      sub_1A916BAB0();
      sub_1A916B030();
      uint64_t result = sub_1A916BAD0();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      unint64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
      *unint64_t v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v37;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

uint64_t sub_1A90BF114(uint64_t a1, char a2)
{
  return sub_1A909B994(a1, a2, &qword_1E97B12C8, &qword_1E97B12D0, (uint64_t)&type metadata for AnyDataEventEntry);
}

uint64_t sub_1A90BF130(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1A90A1AD4(0, &qword_1E97B1220, (uint64_t)&type metadata for SummaryEventDatabaseEntity, MEMORY[0x1E4FBBD58]);
  char v40 = a2;
  uint64_t v6 = sub_1A916B800();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v39 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v37 = v2;
  int64_t v38 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v38) {
      break;
    }
    int64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v39 + 8 * v22);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v38) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v39 + 8 * v13);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v37;
          if ((v40 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v39 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v38) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v39 + 8 * v13);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(v5 + 56) + 32 * v21;
    uint64_t v34 = *(void *)v33;
    uint64_t v35 = *(void *)(v33 + 8);
    long long v41 = *(_OWORD *)(v33 + 16);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1A916BAB0();
    sub_1A916B030();
    uint64_t result = sub_1A916BAD0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v32;
    v18[1] = v31;
    uint64_t v19 = *(void *)(v7 + 56) + 32 * v17;
    *(void *)uint64_t v19 = v34;
    *(void *)(v19 + 8) = v35;
    *(_OWORD *)(v19 + 16) = v41;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v37;
  int64_t v23 = (void *)(v5 + 64);
  if ((v40 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
  if (v36 >= 64) {
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v36;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void *sub_1A90BF480()
{
  uint64_t v1 = v0;
  sub_1A90A1AD4(0, &qword_1EB689850, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A916B7F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1A90A24B0(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    sub_1A90A1A68(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A90BF68C()
{
  uint64_t v1 = v0;
  sub_1A90A571C(0, &qword_1EB688C20, 255, (void (*)(uint64_t))type metadata accessor for UploadDropboxFile);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A916B7F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A90BF860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1A90A571C(0, &qword_1EB688C28, a3, (void (*)(uint64_t))type metadata accessor for JSON);
  uint64_t v5 = *v3;
  uint64_t v6 = sub_1A916B7F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v4 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v16) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v9 + 8 * v25);
    ++v12;
    if (!v26)
    {
      int64_t v12 = v25 + 1;
      if (v25 + 1 >= v16) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v9 + 8 * v12);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v26 - 1) & v26;
    unint64_t v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    uint64_t v19 = 16 * v18;
    uint64_t v20 = (void *)(*(void *)(v5 + 48) + 16 * v18);
    uint64_t v21 = v20[1];
    uint64_t v22 = 8 * v18;
    unint64_t v23 = *(void **)(*(void *)(v5 + 56) + v22);
    int64_t v24 = (void *)(*(void *)(v7 + 48) + v19);
    *int64_t v24 = *v20;
    v24[1] = v21;
    *(void *)(*(void *)(v7 + 56) + v22) = v23;
    swift_bridgeObjectRetain();
    id result = v23;
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v16) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v9 + 8 * v27);
  if (v26)
  {
    int64_t v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v9 + 8 * v12);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A90BFA2C()
{
  uint64_t v1 = v0;
  sub_1A90C133C(0, &qword_1EB689498, (void (*)(void))sub_1A90C13A4);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A916B7F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      int64_t v9 = v29 + 1;
      if (v29 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v6 + 8 * v9);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v30 - 1) & v30;
    unint64_t v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 40 * v15;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    uint64_t v21 = *(void *)(v17 + 24);
    char v22 = *(unsigned char *)(v17 + 32);
    uint64_t v23 = 16 * v15;
    int64_t v24 = (uint64_t *)(*(void *)(v2 + 56) + v23);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v27 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v27 = v18;
    *(void *)(v27 + 8) = v19;
    *(void *)(v27 + 16) = v20;
    *(void *)(v27 + 24) = v21;
    *(unsigned char *)(v27 + 32) = v22;
    BOOL v28 = (void *)(*(void *)(v4 + 56) + v23);
    *BOOL v28 = v25;
    v28[1] = v26;
    sub_1A90C13F8(v18, v19, v20, v21, v22);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v13) {
    goto LABEL_26;
  }
  unint64_t v30 = *(void *)(v6 + 8 * v31);
  if (v30)
  {
    int64_t v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v9);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A90BFC20()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1A916B7A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A90A2EA8();
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1A916B7F0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v23 = v1;
  id result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v24 = v6 + 64;
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 64);
  int64_t v25 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v26 = v3 + 16;
  while (1)
  {
    if (v15)
    {
      unint64_t v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v25) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v25) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v24 + 8 * v12);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_12:
    unint64_t v18 = *(void *)(v3 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v18, v2);
    uint64_t v19 = 32 * v17;
    sub_1A90A24B0(*(void *)(v6 + 56) + v19, (uint64_t)v27);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v18, v5, v2);
    id result = sub_1A90A1A68(v27, (_OWORD *)(*(void *)(v8 + 56) + v19));
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v25)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v24 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v25) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A90BFEC0()
{
  return sub_1A90C07D0(&qword_1EB688C38, &qword_1EB689470, (uint64_t)&type metadata for EventMirrorProperty);
}

void *sub_1A90BFEDC()
{
  uint64_t v1 = v0;
  sub_1A90C133C(0, (unint64_t *)&qword_1EB6867C0, (void (*)(void))sub_1A90B5108);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A916B7F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = v17[2];
    uint64_t v21 = v17[3];
    uint64_t v22 = 16 * v15;
    uint64_t v23 = (uint64_t *)(*(void *)(v2 + 56) + v22);
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    uint64_t v26 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v26 = v19;
    v26[1] = v18;
    _OWORD v26[2] = v20;
    v26[3] = v21;
    uint64_t v27 = (void *)(*(void *)(v4 + 56) + v22);
    *uint64_t v27 = v24;
    v27[1] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A90C00D4()
{
  return sub_1A90C0134(&qword_1EB689848, (unint64_t *)&qword_1EB6897A8, (uint64_t)&protocol descriptor for DataEventStackType, (void (*)(unsigned char *, uint64_t))sub_1A908EC8C);
}

void *sub_1A90C0104()
{
  return sub_1A90C0134(&qword_1EB688150, &qword_1EB6897A0, (uint64_t)&protocol descriptor for RestartTimerType, (void (*)(unsigned char *, uint64_t))sub_1A908EC8C);
}

void *sub_1A90C0134(unint64_t *a1, unint64_t *a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t))
{
  uint64_t v5 = v4;
  sub_1A908ECA4(0, a1, a2);
  uint64_t v6 = *v4;
  uint64_t v7 = sub_1A916B7F0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    uint64_t *v5 = v8;
    return result;
  }
  unint64_t v29 = v5;
  id result = (void *)(v7 + 64);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 64);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v17) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v10 + 8 * v26);
    ++v13;
    if (!v27)
    {
      int64_t v13 = v26 + 1;
      if (v26 + 1 >= v17) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v10 + 8 * v13);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v16 = (v27 - 1) & v27;
    unint64_t v19 = __clz(__rbit64(v27)) + (v13 << 6);
LABEL_12:
    uint64_t v20 = 16 * v19;
    uint64_t v21 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v19);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    uint64_t v24 = 40 * v19;
    sub_1A90A0DC8(*(void *)(v6 + 56) + 40 * v19, (uint64_t)v31);
    uint64_t v25 = (void *)(*(void *)(v8 + 48) + v20);
    *uint64_t v25 = v22;
    v25[1] = v23;
    a4(v31, *(void *)(v8 + 56) + v24);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v17)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v5 = v29;
    goto LABEL_28;
  }
  unint64_t v27 = *(void *)(v10 + 8 * v28);
  if (v27)
  {
    int64_t v13 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v13 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v10 + 8 * v13);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A90C0334()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Tracker.Timer(0);
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A90A571C(0, &qword_1EB688C30, 255, (void (*)(uint64_t))type metadata accessor for Tracker.Timer);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1A916B7F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  unint64_t v27 = v1;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_1A90C1270(*(void *)(v5 + 56) + v21, (uint64_t)v4);
    uint64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    *uint64_t v22 = v19;
    v22[1] = v20;
    sub_1A90C12D4((uint64_t)v4, *(void *)(v7 + 56) + v21, type metadata accessor for Tracker.Timer);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1A90C05D0()
{
  uint64_t v1 = v0;
  sub_1A90A1AD4(0, qword_1EB686568, (uint64_t)&type metadata for DataProvider, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A916B7F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A90C07B4()
{
  return sub_1A90C07D0(&qword_1E97B12C8, &qword_1E97B12D0, (uint64_t)&type metadata for AnyDataEventEntry);
}

void *sub_1A90C07D0(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1A909BCB4(0, a1, a2, a3);
  uint64_t v5 = *v3;
  uint64_t v6 = sub_1A916B7F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v4 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v16) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v9 + 8 * v25);
    ++v12;
    if (!v26)
    {
      int64_t v12 = v25 + 1;
      if (v25 + 1 >= v16) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v9 + 8 * v12);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v26 - 1) & v26;
    unint64_t v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    uint64_t v19 = 16 * v18;
    long long v20 = (void *)(*(void *)(v5 + 48) + 16 * v18);
    uint64_t v21 = v20[1];
    uint64_t v22 = 8 * v18;
    uint64_t v23 = *(void *)(*(void *)(v5 + 56) + v22);
    int64_t v24 = (void *)(*(void *)(v7 + 48) + v19);
    *int64_t v24 = *v20;
    v24[1] = v21;
    *(void *)(*(void *)(v7 + 56) + v22) = v23;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v16) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v9 + 8 * v27);
  if (v26)
  {
    int64_t v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v9 + 8 * v12);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A90C0990()
{
  uint64_t v1 = v0;
  sub_1A90A1AD4(0, &qword_1E97B1220, (uint64_t)&type metadata for SummaryEventDatabaseEntity, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1A916B7F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    int64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    long long v25 = *(_OWORD *)(v21 + 16);
    *int64_t v24 = v19;
    v24[1] = v18;
    uint64_t v26 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v26 = v22;
    *(void *)(v26 + 8) = v23;
    *(_OWORD *)(v26 + 16) = v25;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A90C0B78()
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = self;
  id v2 = v0;
  uint64_t v3 = (void *)sub_1A916AB60();
  *(void *)&v10[0] = 0;
  id v4 = objc_msgSend(v1, sel_JSONObjectWithData_options_error_, v3, 4, v10);

  id v5 = *(id *)&v10[0];
  if (v4)
  {
    sub_1A916B5F0();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v6 = v5;
    unint64_t v7 = (void *)sub_1A916A990();

    swift_willThrow();
    memset(v10, 0, sizeof(v10));
  }
  sub_1A909374C((uint64_t)v10, (uint64_t)v2 + OBJC_IVAR___AAJSON_value);

  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for JSON();
  return objc_msgSendSuper2(&v9, sel_init);
}

void sub_1A90C0CB4()
{
  if (!qword_1EB689468)
  {
    sub_1A90A302C();
    unint64_t v0 = sub_1A916B540();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB689468);
    }
  }
}

unint64_t sub_1A90C0D0C()
{
  unint64_t result = qword_1E97B1298;
  if (!qword_1E97B1298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1298);
  }
  return result;
}

unint64_t sub_1A90C0D64()
{
  unint64_t result = qword_1E97B12A0;
  if (!qword_1E97B12A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B12A0);
  }
  return result;
}

unint64_t sub_1A90C0DBC()
{
  unint64_t result = qword_1E97B12A8;
  if (!qword_1E97B12A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B12A8);
  }
  return result;
}

unint64_t sub_1A90C0E14()
{
  unint64_t result = qword_1E97B12B0;
  if (!qword_1E97B12B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B12B0);
  }
  return result;
}

unint64_t sub_1A90C0E6C()
{
  unint64_t result = qword_1E97B12B8;
  if (!qword_1E97B12B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B12B8);
  }
  return result;
}

unint64_t sub_1A90C0EC4()
{
  unint64_t result = qword_1EB688BF8;
  if (!qword_1EB688BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB688BF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONError()
{
  return &type metadata for JSONError;
}

uint64_t method lookup function for JSON(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for JSON);
}

uint64_t dispatch thunk of JSON.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of JSON.subscript.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of JSON.exists.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of JSON.any.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of JSON.string.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of JSON.integer.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of JSON.integer64.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of JSON.double.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of JSON.BOOL.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of JSON.array.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of JSON.object.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of JSON.number.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of JSON.toData(options:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t sub_1A90C1270(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Tracker.Timer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A90C12D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1A90C133C(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1A916B820();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1A90C13A4()
{
  unint64_t result = qword_1EB689390;
  if (!qword_1EB689390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB689390);
  }
  return result;
}

uint64_t sub_1A90C13F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = vars8;
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A90C1438(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1A90C1494(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A90C14CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (a5)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A90C151C()
{
  unint64_t result = qword_1E97B12C0;
  if (!qword_1E97B12C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B12C0);
  }
  return result;
}

void sub_1A90C1570()
{
  uint64_t v1 = sub_1A916BBB0();
  uint64_t v3 = v2;
  swift_beginAccess();
  if (*(void *)(*(void *)(v0 + 16) + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A90A1D98(v1, v3);
    if (v4)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v27 = v1;
  unint64_t v28 = (uint64_t *)(v0 + 16);
  uint64_t v29 = v3;
  id v5 = objc_msgSend(objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init), sel_eventProperties);
  type metadata accessor for BridgedEventProperty();
  uint64_t v6 = sub_1A916AED0();

  int64_t v7 = 0;
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v30 = v6 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  unint64_t v12 = (void *)MEMORY[0x1E4FBC860];
  int64_t v13 = (unint64_t)(v9 + 63) >> 6;
  if ((v10 & v8) == 0) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v14 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v14 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v7 << 6))
  {
    uint64_t v19 = (uint64_t *)(*(void *)(v6 + 48) + 16 * i);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    id v22 = *(id *)(*(void *)(v6 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v12 = sub_1A909B364(0, v12[2] + 1, 1, v12);
    }
    unint64_t v24 = v12[2];
    unint64_t v23 = v12[3];
    if (v24 >= v23 >> 1) {
      unint64_t v12 = sub_1A909B364((void *)(v23 > 1), v24 + 1, 1, v12);
    }
    v12[2] = v24 + 1;
    long long v25 = &v12[7 * v24];
    v25[4] = v20;
    void v25[5] = v21;
    v25[6] = v22;
    *(_OWORD *)(v25 + 7) = v32;
    v25[9] = &type metadata for BridgedEventMirrorProperty;
    v25[10] = &off_1EFFA0AF8;

    if (v11) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v16 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v16 >= v13) {
      goto LABEL_29;
    }
    unint64_t v17 = *(void *)(v30 + 8 * v16);
    ++v7;
    if (!v17)
    {
      int64_t v7 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_29;
      }
      unint64_t v17 = *(void *)(v30 + 8 * v7);
      if (!v17)
      {
        int64_t v7 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_29;
        }
        unint64_t v17 = *(void *)(v30 + 8 * v7);
        if (!v17) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v11 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13)
  {
LABEL_29:
    swift_release();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v31 = *v28;
    *unint64_t v28 = 0x8000000000000000;
    sub_1A909B824((uint64_t)v12, v27, v29, isUniquelyReferenced_nonNull_native);
    *unint64_t v28 = v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_unknownObjectRelease();
    return;
  }
  unint64_t v17 = *(void *)(v30 + 8 * v18);
  if (v17)
  {
    int64_t v7 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v7 >= v13) {
      goto LABEL_29;
    }
    unint64_t v17 = *(void *)(v30 + 8 * v7);
    ++v18;
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
}

uint64_t type metadata accessor for BridgedEventMirrorStore()
{
  return self;
}

double static Double.defaultJitterDeviation.getter()
{
  return 600.0;
}

id NSNull.toJsonValue()@<X0>(void *a1@<X8>)
{
  a1[3] = sub_1A90A5FE0(0, (unint64_t *)&qword_1EB686D10);
  *a1 = v1;
  return v1;
}

id NSString.toJsonValue()@<X0>(void *a1@<X8>)
{
  a1[3] = sub_1A90A5FE0(0, &qword_1EB686D20);
  *a1 = v1;
  return v1;
}

id NSNumber.toJsonValue()@<X0>(void *a1@<X8>)
{
  a1[3] = sub_1A90A5FE0(0, &qword_1EB686D18);
  *a1 = v1;
  return v1;
}

id NSDate.toJsonValue()@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  id result = objc_msgSend(v2, sel_timeIntervalSince1970);
  double v6 = v5 * 1000.0;
  if ((~*(void *)&v6 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v6 < 9.22337204e18)
  {
    a1[3] = MEMORY[0x1E4FBC1C8];
    *a1 = (uint64_t)v6;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

id sub_1A90C1AB8(void *a1)
{
  id result = objc_msgSend(a1, sel_timeIntervalSince1970);
  double v3 = v2 * 1000.0;
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  char v4 = (void *)sub_1A916BA30();

  return v4;
}

void NSArray.toJsonValue()(void *a1@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1A916A9B0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)objc_msgSend(v1, sel_count);
  *(void *)&long long v30 = MEMORY[0x1E4FBC860];
  sub_1A90B28F0(0, v9 & ~(v9 >> 63), 0);
  id v10 = v1;
  sub_1A916B500();

  if (v9 < 0)
  {
    __break(1u);
LABEL_35:
    __break(1u);
    return;
  }
  unint64_t v28 = a1;
  uint64_t v29 = v6;
  uint64_t v11 = MEMORY[0x1E4FBC840];
  if (v9)
  {
    sub_1A90C550C(&qword_1EB689108, MEMORY[0x1E4F27660]);
    uint64_t v12 = v11 + 8;
    do
    {
      sub_1A916B590();
      if (!v33) {
        goto LABEL_35;
      }
      sub_1A90C2124((uint64_t)&v32, &v35);
      if (v3)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v5);
        swift_release();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v32);
        return;
      }
      uint64_t v3 = 0;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v32);
      uint64_t v13 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A90B28F0(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v13 = v30;
      }
      unint64_t v15 = *(void *)(v13 + 16);
      unint64_t v14 = *(void *)(v13 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1A90B28F0(v14 > 1, v15 + 1, 1);
        uint64_t v13 = v30;
      }
      *(void *)(v13 + 16) = v15 + 1;
      sub_1A90C3D88((uint64_t)v34, v13 + 32 * v15 + 32, (uint64_t)&qword_1EB68A928, v12, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1A909B6AC);
    }
    while (--v9);
  }
  sub_1A90C550C(&qword_1EB689108, MEMORY[0x1E4F27660]);
  sub_1A916B590();
  if (v33)
  {
    uint64_t v16 = MEMORY[0x1E4FBC840] + 8;
    while (1)
    {
      sub_1A90A1A68(&v32, v34);
      sub_1A90C2124((uint64_t)v34, &v35);
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
      uint64_t v17 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A90B28F0(0, *(void *)(v17 + 16) + 1, 1);
        uint64_t v17 = v30;
      }
      unint64_t v19 = *(void *)(v17 + 16);
      unint64_t v18 = *(void *)(v17 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1A90B28F0(v18 > 1, v19 + 1, 1);
        uint64_t v17 = v30;
      }
      *(void *)(v17 + 16) = v19 + 1;
      sub_1A90C3D88((uint64_t)&v32, v17 + 32 * v19 + 32, (uint64_t)&qword_1EB68A928, v16, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1A909B6AC);
      sub_1A916B590();
      if (!v33) {
        goto LABEL_19;
      }
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v5);
    swift_release();
  }
  else
  {
LABEL_19:
    (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v5);
    sub_1A909B5DC((uint64_t)&v32);
    uint64_t v20 = *(void *)(v30 + 16);
    if (v20)
    {
      uint64_t v21 = v30 + 32;
      swift_retain();
      id v22 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v23 = MEMORY[0x1E4FBC840] + 8;
      do
      {
        sub_1A909F130(v21, (uint64_t)v34);
        sub_1A90C3D88((uint64_t)v34, (uint64_t)&v30, (uint64_t)&qword_1EB68A928, v23, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1A909B6AC);
        if (v31)
        {
          sub_1A90A1A68(&v30, &v32);
          sub_1A90A1A68(&v32, &v30);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v22 = sub_1A90C2D94(0, v22[2] + 1, 1, v22);
          }
          unint64_t v25 = v22[2];
          unint64_t v24 = v22[3];
          if (v25 >= v24 >> 1) {
            id v22 = sub_1A90C2D94((void *)(v24 > 1), v25 + 1, 1, v22);
          }
          long long v22[2] = v25 + 1;
          sub_1A90A1A68(&v30, &v22[4 * v25 + 4]);
        }
        else
        {
          sub_1A909B5DC((uint64_t)&v30);
        }
        v21 += 32;
        --v20;
      }
      while (v20);
      swift_release_n();
    }
    else
    {
      swift_release();
      id v22 = (void *)MEMORY[0x1E4FBC860];
    }
    sub_1A909B6AC(0, &qword_1EB687C38, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB320]);
    uint64_t v26 = v28;
    v28[3] = v27;
    *uint64_t v26 = v22;
  }
}

void sub_1A90C2124(uint64_t a1, uint64_t *a2)
{
  v14[4] = *(id *)MEMORY[0x1E4F143B8];
  sub_1A90A24B0(a1, (uint64_t)v14);
  sub_1A90C3DFC(0, &qword_1EB687B58);
  if (swift_dynamicCast())
  {
    id v4 = objc_msgSend(v13, sel_toDict);
    v14[0] = 0;
    id v5 = objc_msgSend(v4, sel_toJsonValueAndReturnError_, v14);
    id v6 = v14[0];
    if (v5)
    {
      sub_1A916B5F0();
      swift_unknownObjectRelease();

LABEL_7:
      swift_unknownObjectRelease();
      return;
    }
    uint64_t v11 = v6;
    uint64_t v9 = sub_1A916A990();

    swift_willThrow();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1A90A24B0(a1, (uint64_t)v14);
    sub_1A90C3DFC(0, qword_1EB6880C8);
    if (swift_dynamicCast())
    {
      v14[0] = 0;
      id v7 = objc_msgSend(v13, sel_toJsonValueAndReturnError_, v14);
      id v8 = v14[0];
      if (v7)
      {
        sub_1A916B5F0();
        swift_unknownObjectRelease();
        goto LABEL_7;
      }
      uint64_t v12 = v8;
      uint64_t v9 = sub_1A916A990();

      swift_willThrow();
      swift_unknownObjectRelease();
    }
    else
    {
      sub_1A90C3D34();
      uint64_t v9 = swift_allocError();
      void *v10 = 3;
      swift_willThrow();
    }
  }
  *a2 = v9;
}

id sub_1A90C236C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A90C2B88(a1, a2, a3, (void (*)(void *__return_ptr))NSArray.toJsonValue());
}

void NSDictionary.toJsonValue()()
{
  sub_1A916AEC0();
  sub_1A90C3D34();
  swift_allocError();
  *uint64_t v0 = 4;
  swift_willThrow();
}

id sub_1A90C2B70(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A90C2B88(a1, a2, a3, (void (*)(void *__return_ptr))NSDictionary.toJsonValue());
}

id sub_1A90C2B88(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr))
{
  id v5 = a1;
  a4(v8);

  __swift_project_boxed_opaque_existential_1(v8, v8[3]);
  id v6 = (void *)sub_1A916B9D0();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);

  return v6;
}

void *sub_1A90C2C50(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A909B6AC(0, &qword_1EB6894C8, MEMORY[0x1E4FBB7A8], MEMORY[0x1E4FBBE00]);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x1E4FBC860];
      id v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A90C46B0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1A90C2D80(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1A90C2F14(a1, a2, a3, a4, &qword_1EB687C40, (uint64_t)&type metadata for DataEventTrait);
}

void *sub_1A90C2D94(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A909B6AC(0, &qword_1EB687C48, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBE00]);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x1E4FBC860];
      id v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A90C48AC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A90C2EC8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A90999AC(a1, a2, a3, a4, &qword_1EB686EF8, (uint64_t (*)(uint64_t))type metadata accessor for Batch, (uint64_t (*)(void))type metadata accessor for Batch, (uint64_t (*)(void))type metadata accessor for Batch);
}

char *sub_1A90C2F00(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1A90C2F14(a1, a2, a3, a4, &qword_1EB688C50, MEMORY[0x1E4FBC358]);
}

char *sub_1A90C2F14(char *result, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  char v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v9 = a2;
    goto LABEL_8;
  }
  unint64_t v8 = *((void *)a4 + 3);
  int64_t v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v9 + 0x4000000000000000 >= 0)
  {
    int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v9 = a2;
    }
LABEL_8:
    int64_t v10 = *((void *)a4 + 2);
    if (v9 <= v10) {
      int64_t v11 = *((void *)a4 + 2);
    }
    else {
      int64_t v11 = v9;
    }
    if (v11)
    {
      sub_1A909B6AC(0, a5, a6, MEMORY[0x1E4FBBE00]);
      uint64_t v12 = (char *)swift_allocObject();
      size_t v13 = _swift_stdlib_malloc_size(v12);
      *((void *)v12 + 2) = v10;
      *((void *)v12 + 3) = 2 * v13 - 64;
      unint64_t v14 = v12 + 32;
      if (v7)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[v10 + 32]) {
          memmove(v14, a4 + 32, v10);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
      unint64_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A90C49A4(0, v10, v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

void *sub_1A90C3028(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A909B6AC(0, &qword_1EB687D40, (uint64_t)&type metadata for TrackerError.MissingData, MEMORY[0x1E4FBBE00]);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A90C4DB4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A90C3170(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A90C5798(0, qword_1EB6870B8, (uint64_t)&qword_1EB686CF8, (uint64_t)type metadata accessor for DataEventStack.Entry, (void (*)(uint64_t, uint64_t, uint64_t))sub_1A90C58B4);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A90C4B94(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A90C32CC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A90999AC(a1, a2, a3, a4, &qword_1E97B12F8, (uint64_t (*)(uint64_t))sub_1A90C5478, (uint64_t (*)(void))sub_1A90C5478, (uint64_t (*)(void))sub_1A90C5478);
}

void *sub_1A90C3304(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A909B6AC(0, &qword_1E97B1330, (uint64_t)&type metadata for TrackerWillSubmitObserver, MEMORY[0x1E4FBBE00]);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A90C4CBC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A90C344C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A909B6AC(0, &qword_1E97B12F0, (uint64_t)&type metadata for AnyDataEventEntry, MEMORY[0x1E4FBBE00]);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 96);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[12 * v8 + 4]) {
          memmove(v12, a4 + 4, 96 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A90C4FD0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A90C3594(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A90C5798(0, &qword_1E97B1308, (uint64_t)&qword_1E97B1310, (uint64_t)type metadata accessor for SnapshotLevel, (void (*)(uint64_t, uint64_t, uint64_t))sub_1A90C52C8);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      size_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x1E4FBC860];
      size_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A90C4EAC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A90C36D8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A9099C68(0, &qword_1E97B1318, (uint64_t (*)(uint64_t))sub_1A90C57F4, MEMORY[0x1E4FBBE00]);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      size_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x1E4FBC860];
      size_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A90C50C8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A90C3814(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A9099C68(0, &qword_1EB688C40, (uint64_t (*)(uint64_t))sub_1A90A250C, MEMORY[0x1E4FBBE00]);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      size_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x1E4FBC860];
      size_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A90C47A4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A90C3950(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A90C52C8(0, &qword_1E97B12E8, MEMORY[0x1E4FBBE00]);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      size_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x1E4FBC860];
      size_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A90C534C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A90C3A78(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A909B6AC(0, &qword_1E97B12E0, (uint64_t)&type metadata for SnapshotEntry, MEMORY[0x1E4FBBE00]);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 112);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[14 * v8 + 4]) {
          memmove(v12, a4 + 4, 112 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A90C51D0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A90C3BC4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1A9099C68(0, &qword_1EB686D08, (uint64_t (*)(uint64_t))sub_1A90C55EC, MEMORY[0x1E4FBBE00]);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      size_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x1E4FBC860];
      size_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A90C4A8C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A90C3D00(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1A908FC3C(a1, a2, a3, a4, &qword_1EB6862A8, (uint64_t (*)(uint64_t))sub_1A90C5554, (void (*)(void))sub_1A90C55A8);
}

unint64_t sub_1A90C3D34()
{
  unint64_t result = qword_1E97B12D8;
  if (!qword_1E97B12D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B12D8);
  }
  return result;
}

uint64_t sub_1A90C3D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

uint64_t sub_1A90C3DFC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1A90C3E50(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1A90A1D98(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1A90BF68C();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1A90BE044(v15, a4 & 1);
  unint64_t v21 = sub_1A90A1D98(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_1A916BA50();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A90C3FC0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1A90BD8BC(a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    unint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (uint64_t *)(v18[7] + 16 * v12);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v19 = a1;
      v19[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1A90BFA2C();
    goto LABEL_7;
  }
  sub_1A90BE6A0(v15, a4 & 1);
  unint64_t v21 = sub_1A90BD8BC(a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    uint64_t result = sub_1A916BA50();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  unint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1A90C4628(v12, a3, a1, a2, v18);

  return sub_1A90C1494(a3);
}

uint64_t sub_1A90C40F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v8 = v7;
  uint64_t v15 = *v7;
  unint64_t v17 = sub_1A90BD98C(a3, a4, a5, a6);
  uint64_t v18 = *(void *)(v15 + 16);
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v21 = v16;
  uint64_t v22 = *(void *)(v15 + 24);
  if (v22 >= v20 && (a7 & 1) != 0) {
    goto LABEL_7;
  }
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_1A90BFEDC();
LABEL_7:
    uint64_t v23 = (void *)*v8;
    if (v21)
    {
LABEL_8:
      uint64_t v24 = (void *)(v23[7] + 16 * v17);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v24 = a1;
      v24[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_1A90BEA40(v20, a7 & 1);
  unint64_t v26 = sub_1A90BD98C(a3, a4, a5, a6);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_17:
    uint64_t result = sub_1A916BA50();
    __break(1u);
    return result;
  }
  unint64_t v17 = v26;
  uint64_t v23 = (void *)*v8;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  v23[(v17 >> 6) + 8] |= 1 << v17;
  unint64_t v28 = (uint64_t *)(v23[6] + 32 * v17);
  *unint64_t v28 = a3;
  v28[1] = a4;
  v28[2] = a5;
  v28[3] = a6;
  uint64_t v29 = (void *)(v23[7] + 16 * v17);
  *uint64_t v29 = a1;
  v29[1] = a2;
  uint64_t v30 = v23[2];
  BOOL v31 = __OFADD__(v30, 1);
  uint64_t v32 = v30 + 1;
  if (v31)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v23[2] = v32;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A90C42B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1A908D768(a1, a2, a3, a4, (void (*)(uint64_t))sub_1A90C0104, (void (*)(uint64_t))sub_1A90BEDB8, (uint64_t (*)(uint64_t, uint64_t))sub_1A908EC8C, (uint64_t (*)(uint64_t, uint64_t))sub_1A908EC8C);
}

uint64_t sub_1A90C42F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1A90A1D98(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1A90C05D0();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      char v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_release();
      *char v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_1A90BEDE8(v17, a5 & 1);
  unint64_t v23 = sub_1A90A1D98(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_1A916BA50();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  BOOL v25 = (uint64_t *)(v20[6] + 16 * v14);
  *BOOL v25 = a3;
  v25[1] = a4;
  unint64_t v26 = (void *)(v20[7] + 16 * v14);
  *unint64_t v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v29;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A90C4480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v8 = v7;
  uint64_t v15 = *v7;
  unint64_t v17 = sub_1A90A1D98(a5, a6);
  uint64_t v18 = *(void *)(v15 + 16);
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v21 = v16;
  uint64_t v22 = *(void *)(v15 + 24);
  if (v22 >= v20 && (a7 & 1) != 0) {
    goto LABEL_7;
  }
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_1A90C0990();
LABEL_7:
    unint64_t v23 = (void *)*v8;
    if (v21)
    {
LABEL_8:
      char v24 = (void *)(v23[7] + 32 * v17);
      uint64_t result = swift_bridgeObjectRelease();
      *char v24 = a1;
      v24[1] = a2;
      _OWORD v24[2] = a3;
      v24[3] = a4;
      return result;
    }
    goto LABEL_11;
  }
  sub_1A90BF130(v20, a7 & 1);
  unint64_t v26 = sub_1A90A1D98(a5, a6);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_17:
    uint64_t result = sub_1A916BA50();
    __break(1u);
    return result;
  }
  unint64_t v17 = v26;
  unint64_t v23 = (void *)*v8;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  v23[(v17 >> 6) + 8] |= 1 << v17;
  BOOL v28 = (uint64_t *)(v23[6] + 16 * v17);
  *BOOL v28 = a5;
  v28[1] = a6;
  uint64_t v29 = (void *)(v23[7] + 32 * v17);
  *uint64_t v29 = a1;
  v29[1] = a2;
  void v29[2] = a3;
  v29[3] = a4;
  uint64_t v30 = v23[2];
  BOOL v31 = __OFADD__(v30, 1);
  uint64_t v32 = v30 + 1;
  if (v31)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v23[2] = v32;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A90C4628(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t result = sub_1A90C1438(a2, a5[6] + 40 * a1);
  uint64_t v10 = (void *)(a5[7] + 16 * a1);
  void *v10 = a3;
  v10[1] = a4;
  uint64_t v11 = a5[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a5[2] = v13;
  }
  return result;
}

uint64_t sub_1A90C46B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

uint64_t sub_1A90C47A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1A90A250C();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

uint64_t sub_1A90C48AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

char *sub_1A90C49A4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_1A916B830();
  __break(1u);
  return result;
}

uint64_t sub_1A90C4A8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      sub_1A90C55EC();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

uint64_t sub_1A90C4B94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_1A90C58B4(0, &qword_1EB686CF8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))type metadata accessor for DataEventStack.Entry);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

uint64_t sub_1A90C4CBC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

uint64_t sub_1A90C4DB4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

uint64_t sub_1A90C4EAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_1A90C52C8(0, (unint64_t *)&qword_1E97B1310, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SnapshotLevel);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

uint64_t sub_1A90C4FD0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 96 * a1 + 32;
    unint64_t v6 = a3 + 96 * v4;
    if (v5 >= v6 || v5 + 96 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

uint64_t sub_1A90C50C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_1A90C57F4(0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

uint64_t sub_1A90C51D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 112 * a1 + 32;
    unint64_t v6 = a3 + 112 * v4;
    if (v5 >= v6 || v5 + 112 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

void sub_1A90C52C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1A909B6AC(255, &qword_1E97B12D0, (uint64_t)&type metadata for AnyDataEventEntry, MEMORY[0x1E4FBB320]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1A90C534C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1A909B6AC(0, &qword_1E97B12D0, (uint64_t)&type metadata for AnyDataEventEntry, MEMORY[0x1E4FBB320]);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

void sub_1A90C5478()
{
  if (!qword_1E97B1300)
  {
    type metadata accessor for SummaryEventData();
    sub_1A90C550C(&qword_1EB687730, (void (*)(uint64_t))type metadata accessor for SummaryEventData);
    unint64_t v0 = type metadata accessor for DataEventStack.Entry();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E97B1300);
    }
  }
}

uint64_t sub_1A90C550C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A90C5554()
{
  unint64_t result = qword_1EB6862B0;
  if (!qword_1EB6862B0)
  {
    type metadata accessor for ViewingSession();
    unint64_t result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_1EB6862B0);
  }
  return result;
}

unint64_t sub_1A90C55A8()
{
  unint64_t result = qword_1EB6862B8;
  if (!qword_1EB6862B8)
  {
    unint64_t result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1EB6862B8);
  }
  return result;
}

void sub_1A90C55EC()
{
  if (!qword_1EB686D00)
  {
    sub_1A90C58B4(255, (unint64_t *)&qword_1EB687AE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))type metadata accessor for SessionData);
    sub_1A90C56C0();
    unint64_t v0 = type metadata accessor for DataEventStack.Entry();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB686D00);
    }
  }
}

unint64_t sub_1A90C566C()
{
  unint64_t result = qword_1EB687B08;
  if (!qword_1EB687B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB687B08);
  }
  return result;
}

unint64_t sub_1A90C56C0()
{
  unint64_t result = qword_1EB687AD8;
  if (!qword_1EB687AD8)
  {
    sub_1A90C58B4(255, (unint64_t *)&qword_1EB687AE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))type metadata accessor for SessionData);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB687AD8);
  }
  return result;
}

uint64_t sub_1A90C5734(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Tracker.Timer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1A90C5798(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1A916B9A0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1A90C57F4(uint64_t a1)
{
}

void sub_1A90C5828()
{
  if (!qword_1E97B1328)
  {
    sub_1A909B6AC(255, &qword_1E97B12D0, (uint64_t)&type metadata for AnyDataEventEntry, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1A916AEF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E97B1328);
    }
  }
}

void sub_1A90C58B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1A90C566C();
    unint64_t v7 = a3(a1, &type metadata for BridgedDataEvent, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1A90C5920(void (*a1)(void), uint64_t a2)
{
}

uint64_t sub_1A90C5934(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6 = (void *)v5;
  uint64_t v178 = a5;
  uint64_t v177 = a4;
  uint64_t v190 = a3;
  v191 = a2;
  os_log_t v189 = 0;
  sub_1A90A613C(0, &qword_1EB6883A0, MEMORY[0x1E4FBCB58], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  v174 = (char *)&v158 - v9;
  uint64_t v179 = sub_1A916AAD0();
  uint64_t v182 = *(void *)(v179 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v179);
  char v168 = (char *)&v158 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v176 = (char *)&v158 - v13;
  uint64_t v175 = v14;
  MEMORY[0x1F4188790](v12);
  char v169 = (char *)&v158 - v15;
  uint64_t v166 = sub_1A916AD50();
  uint64_t v165 = *(void *)(v166 - 8);
  MEMORY[0x1F4188790](v166);
  uint64_t v162 = v16;
  v163 = (char *)&v158 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = type metadata accessor for DiagnosticsConsentProvider(0);
  MEMORY[0x1F4188790](v164);
  unint64_t v167 = (char *)&v158 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = sub_1A916B430();
  uint64_t v187 = *(char **)(v188 - 8);
  MEMORY[0x1F4188790](v188);
  uint64_t v186 = (char *)&v158 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = sub_1A916B420();
  MEMORY[0x1F4188790](v185);
  *(void *)&long long v184 = (char *)&v158 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_1A916AE10();
  uint64_t v160 = *(void *)(v161 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v161);
  long long v159 = (char *)&v158 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  id v173 = (char *)&v158 - v22;
  uint64_t v181 = a1;
  sub_1A90C7248(a1, v5, (uint64_t)v200);
  sub_1A90A0DC8(v5 + 104, (uint64_t)&v197);
  sub_1A90A0DC8(v5 + 64, (uint64_t)&v194);
  sub_1A90C9C38();
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v197, v198);
  MEMORY[0x1F4188790](v24);
  unint64_t v26 = (uint64_t *)((char *)&v158 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v27 + 16))(v26);
  uint64_t v28 = *v26;
  uint64_t v30 = v195;
  uint64_t v29 = (uint64_t)v196;
  uint64_t v31 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v194, v195);
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)&v158 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v34 + 16))(v33);
  uint64_t v35 = swift_unknownObjectRetain();
  uint64_t v180 = sub_1A90DDD4C(v35, v28, (uint64_t)v33, 1885960807, 0xE400000000000000, 0, v23, v30, v29);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v194);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v197);
  uint64_t v36 = (void *)v6[4];
  id v171 = (id)v6[7];
  sub_1A90A0DC8((uint64_t)v200, (uint64_t)&v197);
  sub_1A90A0DC8((uint64_t)(v6 + 23), (uint64_t)&v194);
  uint64_t v172 = v6[6];
  long long v183 = v6;
  long long v37 = (void *)v6[28];
  uint64_t v38 = type metadata accessor for UploadDropbox(0);
  uint64_t v170 = (void *)swift_allocObject();
  uint64_t v39 = v198;
  uint64_t v40 = (uint64_t)v199;
  uint64_t v41 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v197, v198);
  MEMORY[0x1F4188790](v41);
  char v43 = (char *)&v158 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v44 + 16))(v43);
  uint64_t v46 = v195;
  uint64_t v45 = (uint64_t)v196;
  uint64_t v47 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v194, v195);
  MEMORY[0x1F4188790](v47);
  uint64_t v49 = (char *)&v158 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v50 + 16))(v49);
  id v51 = v36;
  id v52 = v171;
  id v53 = v37;
  uint64_t v54 = sub_1A911FA38(v51, v52, (uint64_t)v43, (uint64_t)v49, v172, v53, v170, v39, v46, v40, v45);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v194);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v197);
  uint64_t v198 = v38;
  v199 = &off_1EFFA0998;
  unint64_t v197 = v54;
  type metadata accessor for UploadManager();
  uint64_t v55 = swift_allocObject();
  uint64_t v56 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v197, v38);
  MEMORY[0x1F4188790](v56);
  uint64_t v58 = (uint64_t *)((char *)&v158 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v59 + 16))(v58);
  uint64_t v60 = *v58;
  uint64_t v195 = v38;
  v196 = &off_1EFFA0998;
  *(void *)&long long v194 = v60;
  uint64_t v61 = MEMORY[0x1E4FBC868];
  *(void *)(v55 + 80) = MEMORY[0x1E4FBC868];
  uint64_t v172 = type metadata accessor for UnfairLock();
  uint64_t v62 = swift_allocObject();
  id v63 = v52;
  int64_t v64 = (_DWORD *)swift_slowAlloc();
  *(void *)(v62 + 16) = v64;
  *int64_t v64 = 0;
  *(_DWORD *)(v62 + 24) = 0x10000;
  *(void *)(v55 + 88) = v62;
  sub_1A90A5FE0(0, (unint64_t *)&qword_1EB68A908);
  uint64_t v65 = v173;
  sub_1A916AE00();
  uint64_t v193 = MEMORY[0x1E4FBC860];
  sub_1A90A6868((unint64_t *)&qword_1EB68A900, MEMORY[0x1E4FBCC10]);
  uint64_t v66 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1A90A613C(0, (unint64_t *)&qword_1EB68A8F0, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1A909E7D4((unint64_t *)&qword_1EB68A8F8, (unint64_t *)&qword_1EB68A8F0, v66);
  sub_1A916B610();
  (*((void (**)(char *, void, uint64_t))v187 + 13))(v186, *MEMORY[0x1E4FBCC68], v188);
  *(void *)(v55 + 96) = sub_1A916B480();
  *(void *)(v55 + 16) = v180;
  *(void *)(v55 + 24) = &off_1EFF9E098;
  os_log_t v67 = (os_log_t)(v55 + 32);
  sub_1A908EC8C(&v194, v55 + 32);
  *(void *)(v55 + 72) = v63;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v197);
  uint64_t v180 = v55;
  if (v191)
  {
    uint64_t v188 = v55 + 80;
    __swift_project_boxed_opaque_existential_1((void *)(v55 + 32), *(void *)(v55 + 56));
    swift_retain();
    os_log_t v68 = v189;
    sub_1A911C760();
    os_log_t v70 = v68;
    if (v68)
    {
      os_log_t v71 = 0;
      unint64_t v72 = v70;
      unint64_t v73 = v70;
      uint64_t v74 = sub_1A916AD40();
      os_log_type_t v75 = sub_1A916B3C0();
      if (os_log_type_enabled(v74, v75))
      {
        uint64_t v76 = (uint8_t *)swift_slowAlloc();
        long long v77 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v76 = 138543362;
        uint64_t v78 = v70;
        uint64_t v79 = _swift_stdlib_bridgeErrorToNSError();
        unint64_t v197 = (void *)v79;
        sub_1A916B5A0();
        *long long v77 = v79;
        uint64_t v61 = MEMORY[0x1E4FBC868];
        uint64_t v55 = v180;

        _os_log_impl(&dword_1A9088000, v74, v75, "Failed checking for batches to repair, error=%{public}@", v76, 0xCu);
        sub_1A90C9BD0();
        swift_arrayDestroy();
        MEMORY[0x1AD0EECA0](v77, -1, -1);
        MEMORY[0x1AD0EECA0](v76, -1, -1);
        sub_1A909E0EC((uint64_t)v191);
      }
      else
      {
        sub_1A909E0EC((uint64_t)v191);
      }
      uint64_t v80 = v169;
    }
    else
    {
      uint64_t v81 = v69;
      os_log_t v189 = (os_log_t)(v55 + 32);
      swift_retain();
      uint64_t v82 = sub_1A90C9C98(v81, v55);
      uint64_t v187 = 0;
      swift_bridgeObjectRelease();
      swift_release();
      if (*(void *)(v82 + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v83 = sub_1A916AD40();
        os_log_type_t v84 = sub_1A916B3D0();
        if (os_log_type_enabled(v83, v84))
        {
          long long v85 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)long long v85 = 134217984;
          unint64_t v197 = *(void **)(v82 + 16);
          sub_1A916B5A0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A9088000, v83, v84, "Will attempt to repair %ld batches", v85, 0xCu);
          MEMORY[0x1AD0EECA0](v85, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      unint64_t v86 = (void *)v183[30];
      uint64_t v87 = (objc_class *)type metadata accessor for AccessQueue();
      uint64_t v88 = (char *)objc_allocWithZone(v87);
      *(void *)&v88[OBJC_IVAR___AAAccessQueue_queue] = v86;
      uint64_t v186 = v86;
      long long v89 = v88;
      uint64_t v90 = v65;
      sub_1A916ADD0();
      long long v91 = &v89[OBJC_IVAR___AAAccessQueue__qos];
      swift_beginAccess();
      uint64_t v92 = v160;
      v93 = v159;
      uint64_t v94 = v161;
      (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v159, v65, v161);
      sub_1A90A613C(0, &qword_1EB689598, MEMORY[0x1E4FBCB80], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Atomic);
      uint64_t v95 = (char *)swift_allocObject();
      uint64_t v96 = swift_allocObject();
      uint64_t v97 = (_DWORD *)swift_slowAlloc();
      *(void *)(v96 + 16) = v97;
      _DWORD *v97 = 0;
      *(_DWORD *)(v96 + 24) = 0x10000;
      *((void *)v95 + 2) = v96;
      (*(void (**)(char *, char *, uint64_t))(v92 + 32))(&v95[*(void *)(*(void *)v95 + 96)], v93, v94);
      (*(void (**)(char *, uint64_t))(v92 + 8))(v90, v94);
      *(void *)long long v91 = v95;
      swift_endAccess();

      v192.receiver = v89;
      v192.super_class = v87;
      unint64_t v98 = (char *)objc_msgSendSuper2(&v192, sel_init);

      uint64_t v99 = (uint64_t)v183;
      uint64_t v100 = v165;
      unint64_t v101 = v163;
      uint64_t v102 = v166;
      (*(void (**)(char *, uint64_t, uint64_t))(v165 + 16))(v163, (uint64_t)v183 + OBJC_IVAR____TtC12AppAnalytics12FlushManager_logger, v166);
      unint64_t v103 = (*(unsigned __int8 *)(v100 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
      uint64_t v104 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v100 + 32))(v104 + v103, v101, v102);
      uint64_t v105 = (uint64_t)v167;
      sub_1A916ACB0();
      unint64_t v106 = (void *)(v105 + *(int *)(v164 + 20));
      void *v106 = sub_1A90CA1E4;
      v106[1] = v104;
      uint64_t v107 = v191;
      uint64_t v108 = v190;
      sub_1A90A0418((uint64_t)v191);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v55 = v180;
      os_log_t v71 = (os_log_t)v187;
      sub_1A915F774(v98, v105, v82, v99, v107, (uint64_t)v108);

      swift_bridgeObjectRelease();
      sub_1A9098A90(v105, type metadata accessor for DiagnosticsConsentProvider);
      sub_1A909E0EC((uint64_t)v107);
      uint64_t v80 = v169;
      uint64_t v61 = MEMORY[0x1E4FBC868];
      os_log_t v67 = v189;
    }
  }
  else
  {
    uint64_t v80 = v169;
    os_log_t v71 = v189;
  }
  os_unfair_lock_lock_with_options();
  swift_beginAccess();
  *(void *)(v55 + 80) = v61;
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(v55 + 88) + 16));
  uint64_t v109 = (void **)__swift_project_boxed_opaque_existential_1(v67, *(void *)(v55 + 56));
  v110 = (char *)*v109;
  unint64_t v111 = (char *)*v109 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager;
  uint64_t v112 = v111[3];
  uint64_t v113 = v111[4];
  __swift_project_boxed_opaque_existential_1(v111, v112);
  sub_1A9119550();
  uint64_t v114 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v113 + 128))(v80, v112, v113);
  if (v71)
  {
    uint64_t v115 = v182;
    uint64_t v116 = *(void (**)(char *, uint64_t))(v182 + 8);
    uint64_t v117 = v179;
    v116(v80, v179);
    uint64_t v118 = v168;
    (*(void (**)(char *, uint64_t, uint64_t))(v115 + 16))(v168, v181, v117);
    uint64_t v119 = v71;
    uint64_t v120 = v71;
    uint64_t v121 = sub_1A916AD40();
    os_log_type_t v122 = sub_1A916B3B0();
    if (os_log_type_enabled(v121, v122))
    {
      uint64_t v123 = swift_slowAlloc();
      uint64_t v190 = (void *)swift_slowAlloc();
      v191 = swift_slowAlloc();
      *(void *)&long long v194 = v191;
      *(_DWORD *)uint64_t v123 = 136446466;
      os_log_t v189 = v121;
      uint64_t v124 = sub_1A916A9E0();
      uint64_t v193 = sub_1A90DCF6C(v124, v125, (uint64_t *)&v194);
      sub_1A916B5A0();
      swift_bridgeObjectRelease();
      v116(v118, v117);
      *(_WORD *)(v123 + 12) = 2114;
      v126 = v71;
      uint64_t v127 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v193 = v127;
      sub_1A916B5A0();
      v128 = v190;
      *uint64_t v190 = v127;

      os_log_t v129 = v189;
      _os_log_impl(&dword_1A9088000, v189, v122, "Failed to close batch during flush, url=%{public}s, error=%{public}@", (uint8_t *)v123, 0x16u);
      sub_1A90C9BD0();
      swift_arrayDestroy();
      MEMORY[0x1AD0EECA0](v128, -1, -1);
      uint64_t v130 = (uint64_t)v191;
      swift_arrayDestroy();
      MEMORY[0x1AD0EECA0](v130, -1, -1);
      MEMORY[0x1AD0EECA0](v123, -1, -1);
    }
    else
    {

      v116(v118, v117);
    }
  }
  else
  {
    uint64_t v131 = (char *)v114;
    uint64_t v185 = (uint64_t)v111;
    uint64_t v186 = v110;
    uint64_t v117 = v179;
    (*(void (**)(char *, uint64_t))(v182 + 8))(v80, v179);
    uint64_t v132 = *((void *)v131 + 2);
    if (v132)
    {
      unint64_t v133 = v186;
      id v173 = v131;
      uint64_t v134 = (uint64_t *)(v131 + 40);
      long long v184 = xmmword_1A916E200;
      unint64_t v135 = (void *)v185;
      uint64_t v188 = OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_lock;
      uint64_t v187 = v186 + 40;
      do
      {
        v191 = v132;
        uint64_t v137 = *(v134 - 1);
        uint64_t v136 = *v134;
        swift_bridgeObjectRetain();
        os_unfair_lock_lock_with_options();
        uint64_t v190 = (void *)v136;
        uint64_t v138 = sub_1A911A9E4(v137, v136);
        uint64_t v139 = v135[3];
        uint64_t v140 = v135[4];
        __swift_project_boxed_opaque_existential_1(v135, v139);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v140 + 24))(v138, v139, v140);
        swift_release();
        uint64_t v141 = (uint64_t *)v187;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        unint64_t v142 = sub_1A90A1D98(v137, (uint64_t)v190);
        LOBYTE(v136) = v143;
        swift_bridgeObjectRelease();
        if (v136)
        {
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v145 = *v141;
          uint64_t v193 = *v141;
          uint64_t *v141 = 0x8000000000000000;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_1A90BF68C();
            uint64_t v145 = v193;
          }
          swift_bridgeObjectRelease();
          sub_1A914D038(v142, v145);
          uint64_t *v141 = v145;
          swift_bridgeObjectRelease();
        }
        v134 += 2;
        swift_endAccess();
        swift_release();
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)&v133[v188] + 16));
        swift_bridgeObjectRelease();
        uint64_t v132 = (uint64_t)&v191[-1].isa + 7;
      }
      while (v191 != 1);
      swift_bridgeObjectRelease();
      uint64_t v117 = v179;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v146 = sub_1A916ADC0();
  uint64_t v147 = (uint64_t)v174;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v146 - 8) + 56))(v174, 1, 1, v146);
  id v148 = _s12AppAnalytics11AccessQueueC6globalyAC8Dispatch0F3QoSV0G6SClassOSgFZ_0(v147);
  sub_1A90CA254(v147, &qword_1EB6883A0, MEMORY[0x1E4FBCB58]);
  uint64_t v149 = swift_allocObject();
  swift_weakInit();
  uint64_t v150 = v182;
  uint64_t v151 = v176;
  (*(void (**)(char *, uint64_t, uint64_t))(v182 + 16))(v176, v181, v117);
  unint64_t v152 = (*(unsigned __int8 *)(v150 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80);
  unint64_t v153 = (v175 + v152 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v154 = swift_allocObject();
  *(void *)(v154 + 16) = v149;
  (*(void (**)(unint64_t, char *, uint64_t))(v150 + 32))(v154 + v152, v151, v117);
  *(void *)(v154 + v153) = v180;
  uint64_t v155 = (void *)(v154 + ((v153 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v156 = v178;
  *uint64_t v155 = v177;
  v155[1] = v156;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A9120BB8(v148, (uint64_t)sub_1A90CA0C4, v154);
  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v200);
  return swift_release();
}

uint64_t sub_1A90C7248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1A916AAD0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  id v53 = (char *)&v48 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  id v52 = (char *)&v48 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v48 - v15;
  char v17 = sub_1A916AA20();
  uint64_t v55 = a2;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  if (v17)
  {
    uint64_t v54 = (uint64_t *)a3;
    v18(v16, a1, v6);
    uint64_t v19 = sub_1A916AD40();
    os_log_type_t v20 = sub_1A916B3D0();
    BOOL v21 = os_log_type_enabled(v19, v20);
    id v51 = v18;
    if (v21)
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      *(void *)&v56[0] = v50;
      *(_DWORD *)uint64_t v22 = 136446210;
      uint64_t v48 = v22 + 4;
      uint64_t v49 = v22;
      uint64_t v23 = sub_1A916A9E0();
      uint64_t v57 = sub_1A90DCF6C(v23, v24, (uint64_t *)v56);
      uint64_t v18 = v51;
      sub_1A916B5A0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
      uint64_t v25 = v49;
      _os_log_impl(&dword_1A9088000, v19, v20, "Flush manager attempting to flush sub-directory, url=%{public}s", v49, 0xCu);
      uint64_t v26 = v50;
      swift_arrayDestroy();
      MEMORY[0x1AD0EECA0](v26, -1, -1);
      MEMORY[0x1AD0EECA0](v25, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    }
    uint64_t v35 = v52;
    v18(v52, a1, v6);
    unint64_t v36 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v50 = swift_allocObject();
    long long v37 = *(void (**)(unint64_t, char *, uint64_t))(v7 + 32);
    v37(v50 + v36, v35, v6);
    uint64_t v38 = v53;
    v51(v53, a1, v6);
    uint64_t v39 = swift_allocObject();
    v37(v39 + v36, v38, v6);
    sub_1A90A0DC8(v55 + 184, (uint64_t)v56);
    uint64_t v40 = type metadata accessor for StaticUploadDropboxPathProvider(0);
    uint64_t v41 = swift_allocObject();
    uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v42(v41 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider____lazy_storage___baseURL, 1, 1, v6);
    v42(v41 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider____lazy_storage___debugBaseURL, 1, 1, v6);
    char v43 = (void *)(v41 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider_baseURLProvider);
    uint64_t v44 = v50;
    *char v43 = sub_1A90CA620;
    v43[1] = v44;
    uint64_t v45 = (void *)(v41 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider_debugURLProvider);
    *uint64_t v45 = sub_1A90CA620;
    v45[1] = v39;
    uint64_t result = sub_1A908EC8C(v56, v41 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider_fileManager);
    uint64_t v47 = v54;
    v54[3] = v40;
    v47[4] = (uint64_t)&off_1EFFA2548;
    *uint64_t v47 = v41;
  }
  else
  {
    v18(v10, a1, v6);
    uint64_t v27 = sub_1A916AD40();
    os_log_type_t v28 = sub_1A916B3D0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v54 = (uint64_t *)a3;
      uint64_t v31 = v30;
      *(void *)&v56[0] = v30;
      *(_DWORD *)uint64_t v29 = 136446210;
      uint64_t v32 = sub_1A916A9E0();
      uint64_t v57 = sub_1A90DCF6C(v32, v33, (uint64_t *)v56);
      sub_1A916B5A0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      _os_log_impl(&dword_1A9088000, v27, v28, "Flush manager attempting to flush file, url=%{public}s", v29, 0xCu);
      swift_arrayDestroy();
      uint64_t v34 = v31;
      a3 = (uint64_t)v54;
      MEMORY[0x1AD0EECA0](v34, -1, -1);
      MEMORY[0x1AD0EECA0](v29, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    return sub_1A90A0DC8(v55 + 144, a3);
  }
  return result;
}

void sub_1A90C77FC(unsigned char *a1@<X8>)
{
  uint64_t v2 = sub_1A916AD40();
  os_log_type_t v3 = sub_1A916B3B0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1A9088000, v2, v3, "Attempting to use DiagnosticsConsentProvider during repair, but it wasn't provided. See rdar://137756327", v4, 2u);
    MEMORY[0x1AD0EECA0](v4, -1, -1);
  }

  *a1 = 1;
}

void sub_1A90C789C(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4)
{
  uint64_t v77 = a4;
  sub_1A90A613C(0, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v79 = &v70[-v8];
  uint64_t v9 = type metadata accessor for Batch();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v80 = &v70[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for BatchRepair();
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v83 = &v70[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = &v70[-v15];
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v78 = &v70[-v18];
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  BOOL v21 = &v70[-v20];
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  unint64_t v24 = &v70[-v23];
  MEMORY[0x1F4188790](v22);
  uint64_t v26 = &v70[-v25];
  uint64_t v76 = a1;
  uint64_t v27 = a1 + OBJC_IVAR____TtC12AppAnalytics12FlushManager_logger;
  sub_1A90CA2C4(a2, (uint64_t)&v70[-v25], (uint64_t (*)(void))type metadata accessor for BatchRepair);
  sub_1A90CA2C4(a2, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for BatchRepair);
  sub_1A90CA2C4(a2, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for BatchRepair);
  uint64_t v75 = v27;
  os_log_type_t v28 = sub_1A916AD40();
  os_log_type_t v29 = sub_1A916B3D0();
  int v30 = v29;
  BOOL v31 = os_log_type_enabled(v28, v29);
  uint64_t v81 = a3;
  uint64_t v74 = v11;
  if (v31)
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v72 = swift_slowAlloc();
    uint64_t v86 = v72;
    *(_DWORD *)uint64_t v32 = 136446722;
    unint64_t v73 = v16;
    int v71 = v30;
    uint64_t v33 = *((void *)v26 + 2);
    unint64_t v34 = *((void *)v26 + 3);
    swift_bridgeObjectRetain();
    uint64_t v84 = sub_1A90DCF6C(v33, v34, &v86);
    sub_1A916B5A0();
    swift_bridgeObjectRelease();
    sub_1A9098A90((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for BatchRepair);
    *(_WORD *)(v32 + 12) = 2082;
    unint64_t v35 = ContentType.description.getter(*((void *)v24 + 6));
    uint64_t v84 = sub_1A90DCF6C(v35, v36, &v86);
    sub_1A916B5A0();
    swift_bridgeObjectRelease();
    sub_1A9098A90((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for BatchRepair);
    *(_WORD *)(v32 + 22) = 2082;
    uint64_t v37 = *((void *)v21 + 8);
    uint64_t v84 = *((void *)v21 + 7);
    uint64_t v85 = v37;
    sub_1A90A63C8(0, &qword_1EB687300, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_1A916AFE0();
    uint64_t v84 = sub_1A90DCF6C(v38, v39, &v86);
    sub_1A916B5A0();
    swift_bridgeObjectRelease();
    uint64_t v16 = v73;
    sub_1A9098A90((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for BatchRepair);
    _os_log_impl(&dword_1A9088000, v28, (os_log_type_t)v71, "Attempting to repair batch, identifier=%{public}s, contentType=%{public}s, groupName=%{public}s)", (uint8_t *)v32, 0x20u);
    uint64_t v40 = v72;
    swift_arrayDestroy();
    MEMORY[0x1AD0EECA0](v40, -1, -1);
    MEMORY[0x1AD0EECA0](v32, -1, -1);
  }
  else
  {

    sub_1A9098A90((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for BatchRepair);
    sub_1A9098A90((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for BatchRepair);
    sub_1A9098A90((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for BatchRepair);
  }
  uint64_t v41 = (uint64_t)v78;
  uint64_t v42 = *(void **)(v76 + 16);
  uint64_t v43 = v42[11];
  uint64_t v44 = v42[12];
  __swift_project_boxed_opaque_existential_1(v42 + 8, v43);
  LOBYTE(v43) = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v43, v44);
  uint64_t v45 = sub_1A916AC90();
  uint64_t v46 = (uint64_t)v79;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v79, 1, 1, v45);
  uint64_t v47 = v80;
  sub_1A90B12A0(v43 & 1, v46, v80);
  sub_1A90CA254(v46, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928]);
  uint64_t v48 = (void *)v82;
  ((void (*)(void *))v81)(v47);
  uint64_t v49 = v48;
  if (v48)
  {
    sub_1A9098A90((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for Batch);
    sub_1A90CA2C4(a2, v41, (uint64_t (*)(void))type metadata accessor for BatchRepair);
    sub_1A90CA2C4(a2, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for BatchRepair);
    sub_1A90CA2C4(a2, (uint64_t)v83, (uint64_t (*)(void))type metadata accessor for BatchRepair);
    id v50 = v48;
    id v51 = v48;
    id v52 = sub_1A916AD40();
    os_log_type_t v53 = sub_1A916B3B0();
    int v54 = v53;
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v55 = swift_slowAlloc();
      uint64_t v81 = v52;
      uint64_t v56 = v55;
      uint64_t v80 = (void *)swift_slowAlloc();
      uint64_t v82 = swift_slowAlloc();
      uint64_t v86 = v82;
      *(_DWORD *)uint64_t v56 = 136446978;
      uint64_t v57 = *(void *)(v41 + 16);
      unint64_t v58 = *(void *)(v41 + 24);
      swift_bridgeObjectRetain();
      uint64_t v84 = sub_1A90DCF6C(v57, v58, &v86);
      LODWORD(v79) = v54;
      sub_1A916B5A0();
      swift_bridgeObjectRelease();
      sub_1A9098A90(v41, (uint64_t (*)(void))type metadata accessor for BatchRepair);
      uint64_t v59 = v83;
      *(_WORD *)(v56 + 12) = 2082;
      unint64_t v60 = ContentType.description.getter(*((void *)v16 + 6));
      uint64_t v84 = sub_1A90DCF6C(v60, v61, &v86);
      sub_1A916B5A0();
      swift_bridgeObjectRelease();
      sub_1A9098A90((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for BatchRepair);
      *(_WORD *)(v56 + 22) = 2082;
      uint64_t v62 = *((void *)v59 + 8);
      uint64_t v84 = *((void *)v59 + 7);
      uint64_t v85 = v62;
      sub_1A90A63C8(0, &qword_1EB687300, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
      swift_bridgeObjectRetain();
      uint64_t v63 = sub_1A916AFE0();
      uint64_t v84 = sub_1A90DCF6C(v63, v64, &v86);
      sub_1A916B5A0();
      swift_bridgeObjectRelease();
      sub_1A9098A90((uint64_t)v59, (uint64_t (*)(void))type metadata accessor for BatchRepair);
      *(_WORD *)(v56 + 32) = 2114;
      id v65 = v49;
      uint64_t v66 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v84 = v66;
      sub_1A916B5A0();
      os_log_t v67 = v80;
      void *v80 = v66;

      os_log_t v68 = v81;
      _os_log_impl(&dword_1A9088000, v81, (os_log_type_t)v79, "Failed to repair batch, identifier=%{public}s, contentType=%{public}s, groupName=%{public}s, error: %{public}@", (uint8_t *)v56, 0x2Au);
      sub_1A90C9BD0();
      swift_arrayDestroy();
      MEMORY[0x1AD0EECA0](v67, -1, -1);
      uint64_t v69 = v82;
      swift_arrayDestroy();
      MEMORY[0x1AD0EECA0](v69, -1, -1);
      MEMORY[0x1AD0EECA0](v56, -1, -1);
    }
    else
    {

      sub_1A9098A90(v41, (uint64_t (*)(void))type metadata accessor for BatchRepair);
      sub_1A9098A90((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for BatchRepair);
      sub_1A9098A90((uint64_t)v83, (uint64_t (*)(void))type metadata accessor for BatchRepair);
    }
  }
  else
  {
    (*(void (**)(void))(a2 + *(int *)(v74 + 20)))();
    swift_bridgeObjectRelease();
    sub_1A9098A90((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for Batch);
  }
}

uint64_t sub_1A90C81E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v8 = sub_1A916AAD0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A916AD50();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v27 = v12;
    uint64_t v28 = a5;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, Strong + OBJC_IVAR____TtC12AppAnalytics12FlushManager_logger, v12);
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
    uint64_t v17 = sub_1A916AD40();
    os_log_type_t v18 = sub_1A916B3D0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v30 = v25;
      uint64_t v26 = a4;
      *(_DWORD *)uint64_t v19 = 136446210;
      unint64_t v24 = v19 + 4;
      uint64_t v20 = sub_1A916A9E0();
      uint64_t v29 = sub_1A90DCF6C(v20, v21, &v30);
      a4 = v26;
      sub_1A916B5A0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      _os_log_impl(&dword_1A9088000, v17, v18, "Flush manager finished flushing file, url=%{public}s", v19, 0xCu);
      uint64_t v22 = v25;
      swift_arrayDestroy();
      MEMORY[0x1AD0EECA0](v22, -1, -1);
      MEMORY[0x1AD0EECA0](v19, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v27);
  }
  return a4();
}

void sub_1A90C8508(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v135 = a1;
  sub_1A90A613C(0, (unint64_t *)&qword_1EB6899A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  os_log_type_t v122 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unint64_t v133 = (char *)&v109 - v6;
  uint64_t v7 = sub_1A916AAD0();
  uint64_t v116 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v119 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  *(void *)&long long v121 = (char *)&v109 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v120 = (char *)&v109 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v109 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v109 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v109 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v115 = (char *)&v109 - v23;
  uint64_t v136 = (char *)v1 + OBJC_IVAR____TtC12AppAnalytics12FlushManager_logger;
  unint64_t v24 = sub_1A916AD40();
  os_log_type_t v25 = sub_1A916B3D0();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl(&dword_1A9088000, v24, v25, "Flush manager attempting clean up of flushed directories.", v26, 2u);
    MEMORY[0x1AD0EECA0](v26, -1, -1);
  }

  swift_beginAccess();
  uint64_t v27 = v2[29];
  uint64_t v28 = *(void *)(v27 + 16);
  swift_retain();
  os_unfair_lock_lock_with_options();
  swift_beginAccess();
  int v29 = *(unsigned __int8 *)(v27 + 24);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v28 + 16));
  swift_release();
  if (v29 == 2)
  {
    uint64_t v112 = v2 + 29;
    uint64_t v30 = v2[21];
    uint64_t v31 = v2[22];
    v110 = v2 + 18;
    __swift_project_boxed_opaque_existential_1(v2 + 18, v30);
    uint64_t v32 = (uint64_t)v115;
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31);
    uint64_t v33 = sub_1A90AB160(v32);
    uint64_t v34 = v116;
    uint64_t v140 = *(void (**)(uint64_t, uint64_t))(v116 + 8);
    uint64_t v141 = v116 + 8;
    v140(v32, v7);
    uint64_t v36 = *(void *)(v33 + 16);
    uint64_t v131 = v2;
    uint64_t v130 = v36;
    unint64_t v125 = v16;
    uint64_t v111 = v33;
    if (!v36)
    {
      uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
      uint64_t v69 = v122;
      os_log_t v70 = v112;
      v43(v133, 1, 1, v7);
      goto LABEL_36;
    }
    uint64_t v37 = 0;
    uint64_t v123 = v2 + 23;
    unint64_t v39 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
    uint64_t v38 = v34 + 16;
    uint64_t v137 = v39;
    os_log_t v129 = (unsigned int (**)(char *, uint64_t, uint64_t))(v33
                                                                  + ((*(unsigned __int8 *)(v38 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 64)));
    v128 = *(void (***)(char *, char *, uint64_t))(v38 + 56);
    unint64_t v40 = v38 + 40;
    v126 = (unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 32);
    uint64_t v138 = v38;
    *(void *)&long long v124 = v38 + 16;
    uint64_t v41 = v135;
    uint64_t v134 = v135 + 56;
    uint64_t v127 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v40;
    unint64_t v109 = v40 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    *(void *)&long long v35 = 136446210;
    long long v118 = v35;
    uint64_t v117 = MEMORY[0x1E4FBC840] + 8;
    *(void *)&long long v35 = 136446466;
    long long v113 = v35;
    uint64_t v42 = v133;
    uint64_t v114 = v19;
    uint64_t v132 = v22;
    v39(v133, (char *)v129, v7);
    while (1)
    {
      uint64_t v43 = *v127;
      (*v127)(v42, 0, 1, v7);
      if ((*v126)(v42, 1, v7) == 1) {
        break;
      }
      uint64_t v139 = v43;
      (*(void (**)(char *, char *, uint64_t))v124)(v22, v42, v7);
      uint64_t v44 = sub_1A916AA30();
      uint64_t v46 = v45;
      if (*(void *)(v41 + 16))
      {
        uint64_t v47 = v44;
        sub_1A916BAB0();
        sub_1A916B030();
        uint64_t v48 = sub_1A916BAD0();
        uint64_t v49 = -1 << *(unsigned char *)(v41 + 32);
        unint64_t v50 = v48 & ~v49;
        if ((*(void *)(v134 + ((v50 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v50))
        {
          uint64_t v51 = *(void *)(v41 + 48);
          id v52 = (void *)(v51 + 16 * v50);
          BOOL v53 = *v52 == v47 && v52[1] == v46;
          if (v53 || (sub_1A916B9E0() & 1) != 0)
          {
LABEL_6:
            uint64_t v41 = v135;
            uint64_t v43 = v139;
            uint64_t v42 = v133;
            uint64_t v22 = v132;
            swift_bridgeObjectRelease();
            v140((uint64_t)v22, v7);
            goto LABEL_7;
          }
          uint64_t v54 = ~v49;
          while (1)
          {
            unint64_t v50 = (v50 + 1) & v54;
            if (((*(void *)(v134 + ((v50 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v50) & 1) == 0) {
              break;
            }
            uint64_t v55 = (void *)(v51 + 16 * v50);
            BOOL v56 = *v55 == v47 && v55[1] == v46;
            if (v56 || (sub_1A916B9E0() & 1) != 0) {
              goto LABEL_6;
            }
          }
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v22 = v132;
      v137(v19, v132, v7);
      uint64_t v57 = sub_1A916AD40();
      os_log_type_t v58 = sub_1A916B3D0();
      if (os_log_type_enabled(v57, v58))
      {
        uint64_t v59 = swift_slowAlloc();
        uint64_t v60 = swift_slowAlloc();
        uint64_t v142 = v60;
        *(_DWORD *)uint64_t v59 = v118;
        uint64_t v61 = sub_1A916A9E0();
        *(void *)(v59 + 4) = sub_1A90DCF6C(v61, v62, &v142);
        swift_bridgeObjectRelease();
        v140((uint64_t)v19, v7);
        _os_log_impl(&dword_1A9088000, v57, v58, "Flush manager cleaning up directory, url=%{public}s", (uint8_t *)v59, 0xCu);
        swift_arrayDestroy();
        uint64_t v63 = v60;
        uint64_t v2 = v131;
        MEMORY[0x1AD0EECA0](v63, -1, -1);
        MEMORY[0x1AD0EECA0](v59, -1, -1);
      }
      else
      {

        v140((uint64_t)v19, v7);
      }
      uint64_t v64 = v2[26];
      uint64_t v65 = v2[27];
      __swift_project_boxed_opaque_existential_1(v123, v64);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v65 + 112))(v22, 1, v64, v65);
      v140((uint64_t)v22, v7);
      uint64_t v41 = v135;
      uint64_t v43 = v139;
      uint64_t v42 = v133;
LABEL_7:
      if (++v37 == v130)
      {
        uint64_t v69 = v122;
        uint64_t v16 = v125;
        os_log_t v70 = v112;
        v43(v42, 1, 1, v7);
        goto LABEL_36;
      }
      v137(v42, (char *)v129 + (void)v128 * v37, v7);
    }
    uint64_t v69 = v122;
    uint64_t v16 = v125;
    os_log_t v70 = v112;
LABEL_36:
    swift_bridgeObjectRelease();
    if ((*(unsigned char *)(v2[7] + OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled) & 1) == 0)
    {
      uint64_t v71 = v2[21];
      uint64_t v72 = v2[22];
      uint64_t v139 = v43;
      __swift_project_boxed_opaque_existential_1(v110, v71);
      unint64_t v73 = *(void (**)(uint64_t, uint64_t))(v72 + 16);
      uint64_t v74 = (uint64_t)v115;
      uint64_t v75 = v71;
      uint64_t v76 = v135;
      uint64_t v77 = v72;
      uint64_t v78 = v139;
      v73(v75, v77);
      uint64_t v79 = sub_1A90AB160(v74);
      v140(v74, v7);
      *(void *)&long long v118 = v79;
      uint64_t v81 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v79 + 16);
      if (v81)
      {
        uint64_t v82 = 0;
        uint64_t v127 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v131 + 23);
        uint64_t v137 = *(void (**)(char *, char *, uint64_t))(v116 + 16);
        unint64_t v133 = (char *)(v118
                      + ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80)));
        uint64_t v132 = *(char **)(v116 + 72);
        uint64_t v130 = v116 + 56;
        os_log_t v129 = (unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48);
        uint64_t v138 = v116 + 16;
        v128 = (void (**)(char *, char *, uint64_t))(v116 + 32);
        uint64_t v134 = v76 + 56;
        *(void *)&long long v80 = 136446210;
        long long v124 = v80;
        uint64_t v123 = (void *)(MEMORY[0x1E4FBC840] + 8);
        *(void *)&long long v80 = 136446466;
        long long v121 = v80;
        v126 = v81;
        v137(v69, v133, v7);
        while (1)
        {
          v78(v69, 0, 1, v7);
          if ((*v129)(v69, 1, v7) == 1) {
            goto LABEL_63;
          }
          (*v128)(v16, v69, v7);
          uint64_t v83 = sub_1A916AA30();
          uint64_t v85 = v84;
          if (*(void *)(v76 + 16))
          {
            uint64_t v86 = v83;
            sub_1A916BAB0();
            sub_1A916B030();
            uint64_t v87 = sub_1A916BAD0();
            uint64_t v88 = -1 << *(unsigned char *)(v76 + 32);
            unint64_t v89 = v87 & ~v88;
            if ((*(void *)(v134 + ((v89 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v89))
            {
              uint64_t v90 = *(void *)(v76 + 48);
              long long v91 = (void *)(v90 + 16 * v89);
              BOOL v92 = *v91 == v86 && v91[1] == v85;
              if (v92 || (sub_1A916B9E0() & 1) != 0)
              {
LABEL_39:
                uint64_t v76 = v135;
                uint64_t v78 = v139;
                swift_bridgeObjectRelease();
                uint64_t v16 = v125;
                v140((uint64_t)v125, v7);
                goto LABEL_40;
              }
              uint64_t v93 = ~v88;
              while (1)
              {
                unint64_t v89 = (v89 + 1) & v93;
                if (((*(void *)(v134 + ((v89 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v89) & 1) == 0) {
                  break;
                }
                uint64_t v94 = (void *)(v90 + 16 * v89);
                BOOL v95 = *v94 == v86 && v94[1] == v85;
                if (v95 || (sub_1A916B9E0() & 1) != 0) {
                  goto LABEL_39;
                }
              }
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v96 = v120;
          v137(v120, v125, v7);
          uint64_t v97 = sub_1A916AD40();
          os_log_type_t v98 = sub_1A916B3D0();
          if (os_log_type_enabled(v97, v98))
          {
            uint64_t v99 = v96;
            uint64_t v100 = swift_slowAlloc();
            uint64_t v101 = swift_slowAlloc();
            uint64_t v142 = v101;
            *(_DWORD *)uint64_t v100 = v124;
            uint64_t v102 = sub_1A916A9E0();
            *(void *)(v100 + 4) = sub_1A90DCF6C(v102, v103, &v142);
            swift_bridgeObjectRelease();
            uint64_t v104 = v99;
            uint64_t v81 = v126;
            v140((uint64_t)v104, v7);
            _os_log_impl(&dword_1A9088000, v97, v98, "Flush manager cleaning up debug directory, url=%{public}s", (uint8_t *)v100, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1AD0EECA0](v101, -1, -1);
            MEMORY[0x1AD0EECA0](v100, -1, -1);
          }
          else
          {

            v140((uint64_t)v96, v7);
          }
          uint64_t v16 = v125;
          uint64_t v105 = v131[26];
          uint64_t v106 = v131[27];
          __swift_project_boxed_opaque_existential_1(v127, v105);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 112))(v16, 0, v105, v106);
          v140((uint64_t)v16, v7);
          uint64_t v76 = v135;
          uint64_t v69 = v122;
          uint64_t v78 = v139;
LABEL_40:
          if ((unsigned int (**)(char *, uint64_t, uint64_t))++v82 == v81) {
            break;
          }
          v137(v69, &v133[(void)v132 * v82], v7);
        }
      }
      v78(v69, 1, 1, v7);
LABEL_63:
      swift_bridgeObjectRelease();
      os_log_t v70 = v112;
    }
    uint64_t v107 = *v70;
    uint64_t v108 = *(void *)(v107 + 16);
    swift_retain();
    os_unfair_lock_lock_with_options();
    swift_beginAccess();
    *(unsigned char *)(v107 + 24) = 0;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v108 + 16));
    swift_release();
  }
  else
  {
    uint64_t v66 = sub_1A916AD40();
    os_log_type_t v67 = sub_1A916B3B0();
    if (os_log_type_enabled(v66, v67))
    {
      os_log_t v68 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_t v68 = 0;
      _os_log_impl(&dword_1A9088000, v66, v67, "Error: Flush manager attempting to clean up unflushed directories.", v68, 2u);
      MEMORY[0x1AD0EECA0](v68, -1, -1);
    }
  }
}

id *FlushManager.deinit()
{
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 8));
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 13));
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 18));
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 23));

  swift_release();
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC12AppAnalytics12FlushManager_logger;
  uint64_t v2 = sub_1A916AD50();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t FlushManager.__deallocating_deinit()
{
  FlushManager.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t sub_1A90C9914(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  unsigned char *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1A90C9924()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A90C997C()
{
  return type metadata accessor for FlushManager();
}

uint64_t method lookup function for FlushManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FlushManager);
}

uint64_t dispatch thunk of FlushManager.flush(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of FlushManager.repairThenFlushOnQueue(repair:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t getEnumTagSinglePayload for FlushManager.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FlushManager.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A90C9B40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlushManager.State()
{
  return &type metadata for FlushManager.State;
}

unint64_t sub_1A90C9B7C()
{
  unint64_t result = qword_1E97B1338[0];
  if (!qword_1E97B1338[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E97B1338);
  }
  return result;
}

void sub_1A90C9BD0()
{
  if (!qword_1EB6872E8)
  {
    sub_1A90A5FE0(255, (unint64_t *)&qword_1EB6872E0);
    unint64_t v0 = sub_1A916B540();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB6872E8);
    }
  }
}

void sub_1A90C9C38()
{
  if (!qword_1EB689E48)
  {
    type metadata accessor for Batch();
    unint64_t v0 = type metadata accessor for UploadService();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB689E48);
    }
  }
}

uint64_t sub_1A90C9C98(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Batch();
  uint64_t v25 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v25 + 64);
  MEMORY[0x1F4188790](v5 - 8);
  BOOL v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for BatchRepair();
  uint64_t v8 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    v21[1] = v2;
    uint64_t v27 = MEMORY[0x1E4FBC860];
    sub_1A90B2910(0, v11, 0);
    uint64_t v13 = *(unsigned __int8 *)(v25 + 80);
    uint64_t v14 = a1 + ((v13 + 32) & ~v13);
    uint64_t v15 = *(void *)(v25 + 72);
    uint64_t v24 = (v13 + 16) & ~v13;
    uint64_t v25 = v15;
    unint64_t v22 = (v6 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v23 = v13 | 7;
    v21[2] = v22 + 8;
    do
    {
      sub_1A90CA2C4(v14, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Batch);
      uint64_t v16 = swift_allocObject();
      sub_1A90CA5A0((uint64_t)v7, v16 + v24, (uint64_t (*)(void))type metadata accessor for Batch);
      *(void *)(v16 + v22) = a2;
      sub_1A90CA2C4(v14, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Batch);
      uint64_t v17 = (uint64_t (**)(uint64_t))&v10[*(int *)(v26 + 20)];
      *uint64_t v17 = sub_1A90CA504;
      v17[1] = (uint64_t (*)(uint64_t))v16;
      uint64_t v12 = v27;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A90B2910(0, *(void *)(v12 + 16) + 1, 1);
        uint64_t v12 = v27;
      }
      unint64_t v19 = *(void *)(v12 + 16);
      unint64_t v18 = *(void *)(v12 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1A90B2910(v18 > 1, v19 + 1, 1);
        uint64_t v12 = v27;
      }
      *(void *)(v12 + 16) = v19 + 1;
      sub_1A90CA5A0((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v19, (uint64_t (*)(void))type metadata accessor for BatchRepair);
      v14 += v25;
      --v11;
    }
    while (v11);
  }
  return v12;
}

uint64_t sub_1A90C9F90()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A90C9FC8()
{
  uint64_t v1 = sub_1A916AAD0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, v6 + 16, v5);
}

uint64_t sub_1A90CA0C4()
{
  uint64_t v1 = *(void *)(sub_1A916AAD0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = v0 + v2;
  uint64_t v6 = *(void *)(v0 + v3);
  uint64_t v7 = v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(uint64_t (**)(void))v7;
  uint64_t v9 = *(void *)(v7 + 8);

  return sub_1A90C81E4(v4, v5, v6, v8, v9);
}

void sub_1A90CA164()
{
  if (!qword_1EB68ACD8)
  {
    sub_1A908E870(255, (unint64_t *)&qword_1EB68A920);
    unint64_t v0 = sub_1A916B9A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB68ACD8);
    }
  }
}

uint64_t sub_1A90CA1CC()
{
  return objectdestroy_17Tm(MEMORY[0x1E4FBD360]);
}

void sub_1A90CA1E4(unsigned char *a1@<X8>)
{
  sub_1A916AD50();

  sub_1A90C77FC(a1);
}

uint64_t sub_1A90CA254(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1A90A613C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1A90CA2C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A90CA32C()
{
  uint64_t v1 = type metadata accessor for Batch();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v10 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + v3 + *(int *)(v1 + 40);
  uint64_t v5 = sub_1A916AC90();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = v0 + v3 + *(int *)(v1 + 52);
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_release();

  return MEMORY[0x1F4186498](v0, ((v10 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1A90CA504(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Batch() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1A9121488(a1, v1 + v4, v5);
}

uint64_t sub_1A90CA5A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A90CA608()
{
  return objectdestroy_17Tm(MEMORY[0x1E4F276F0]);
}

uint64_t sub_1A90CA624()
{
  return objectdestroy_17Tm(MEMORY[0x1E4F276F0]);
}

uint64_t objectdestroy_17Tm(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return MEMORY[0x1F4186498](v1, v6, v7);
}

uint64_t sub_1A90CA6D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1A916AAD0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return v5(a1, v6, v3);
}

uint64_t sub_1A90CA748@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A91442E8();
  *a1 = result;
  return result;
}

void sub_1A90CA784()
{
  if (!qword_1EB688300[0])
  {
    unint64_t v0 = sub_1A916B2D0();
    if (!v1) {
      atomic_store(v0, qword_1EB688300);
    }
  }
}

uint64_t sub_1A90CA7E4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t SnapshotEvent.isValid.getter()
{
  return *v0;
}

uint64_t SnapshotEvent.entries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SnapshotEvent.missingData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A90CA834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for SnapshotEvent.MissingData();
  sub_1A916B230();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  char v6 = sub_1A916B110();
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)a3 = (v6 & 1) == 0;
  *(void *)(a3 + 8) = a1;
  *(void *)(a3 + 16) = a2;
  return result;
}

BOOL static SnapshotEvent.MissingData.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  BOOL v4 = (*a1 & 0x7FFFFFFFFFFFFFFFLL) == (*a2 & 0x7FFFFFFFFFFFFFFFLL);
  if (*a2 >= 0) {
    BOOL v4 = 0;
  }
  BOOL v5 = v3 >= 0 && v2 == v3;
  if (v2 >= 0) {
    return v5;
  }
  else {
    return v4;
  }
}

uint64_t sub_1A90CA94C()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A90CA988(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A90CA9C8(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A90CAA30(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrackerWillSubmitObserver(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrackerWillSubmitObserver(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for SnapshotEvent()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A90CAB18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t sub_1A90CAB20(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 6) | (2 * ((*(void *)a1 >> 57) & 0x38 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_1A90CAB7C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)uint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1A90CABCC(void *a1)
{
  return *a1 >> 63;
}

void *sub_1A90CABD8(void *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_1A90CABE8(uint64_t *result, uint64_t a2)
{
  *uint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

uint64_t type metadata accessor for SnapshotEvent.MissingData()
{
  return __swift_instantiateGenericMetadata();
}

BOOL sub_1A90CAC14(void *a1)
{
  return *a1 >= 0;
}

Swift::Void __swiftcall TrackingConsent.push()()
{
}

Swift::Void __swiftcall TrackingConsent.pop()()
{
}

uint64_t sub_1A90CACE0(const char *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = v2;
  if (qword_1EB688700 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1A916AD50();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EB68D970);
  char v6 = sub_1A916AD40();
  os_log_type_t v7 = sub_1A916B3D0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1A9088000, v6, v7, a1, v8, 2u);
    MEMORY[0x1AD0EECA0](v8, -1, -1);
  }

  uint64_t v9 = *(void *)(v4 + OBJC_IVAR___AATrackingConsent_accessGroup);

  return a2(v9);
}

void sub_1A90CAE14(void *a1, uint64_t a2, const char *a3, void (*a4)(void))
{
  uint64_t v6 = qword_1EB688700;
  int64_t v11 = a1;
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1A916AD50();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EB68D970);
  uint64_t v8 = sub_1A916AD40();
  os_log_type_t v9 = sub_1A916B3D0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_1A9088000, v8, v9, a3, v10, 2u);
    MEMORY[0x1AD0EECA0](v10, -1, -1);
  }

  a4(*(void *)&v11[OBJC_IVAR___AATrackingConsent_accessGroup]);
}

void sub_1A90CAF34(unsigned char *a1, uint64_t a2)
{
  if ((*a1 & 1) == 0)
  {
    *a1 = 1;
    if (qword_1EB688700 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1A916AD50();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB68D970);
    uint64_t v4 = sub_1A916AD40();
    os_log_type_t v5 = sub_1A916B3D0();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_1A9088000, v4, v5, "Tracking consent has been allowed", v6, 2u);
      MEMORY[0x1AD0EECA0](v6, -1, -1);
    }

    dispatch_group_leave(*(dispatch_group_t *)(a2 + OBJC_IVAR___AATrackingConsent_accessGroup));
  }
}

uint64_t TrackingConsent.whenAllowed(_:)(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v4 = sub_1A916AE40();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A916AE30();
  sub_1A916B3E0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (sub_1A916AD90()) {
    return a1();
  }
  if (qword_1EB688398 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1EB687E08;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  swift_retain();
  sub_1A908CAA8(v9, (uint64_t)sub_1A90CB324, v10);
  return swift_release();
}

id TrackingConsent.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1A90CB2D0(unsigned char *a1)
{
  sub_1A90CAF34(a1, *(void *)(v1 + 16));
}

uint64_t sub_1A90CB2EC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A90CB324()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1A90CB34C()
{
  if (!qword_1E97B1450)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1A916B6C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E97B1450);
    }
  }
}

void sub_1A90CB3AC(unsigned char *a1)
{
}

BOOL BridgedEventPropertyRequirement.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

unint64_t sub_1A90CB3EC()
{
  unint64_t result = qword_1E97B1458;
  if (!qword_1E97B1458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1458);
  }
  return result;
}

void *sub_1A90CB440@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 1 && *result != 0;
  *(void *)a2 = *result == 1;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for BridgedEventPropertyRequirement()
{
  return &type metadata for BridgedEventPropertyRequirement;
}

uint64_t sub_1A90CB480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1A90CB58C;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1A90CB58C(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

id _s12AppAnalytics14ViewingSessionCfD_0()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A90CB7BC()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t type metadata accessor for MescalSigner.Contract()
{
  return self;
}

uint64_t sub_1A90CB7F0()
{
  uint64_t v0 = sub_1A916B870();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1A90CB844(char a1)
{
  if (a1) {
    return 1635017060;
  }
  else {
    return 7955819;
  }
}

uint64_t sub_1A90CB86C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];

  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1A90CB8E0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1A90CB94C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1A90CB9BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1A90CBA2C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A90CB7F0();
  *a1 = result;
  return result;
}

uint64_t sub_1A90CBA5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A90CB844(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A90CBA88()
{
  return sub_1A90CB844(*v0);
}

uint64_t sub_1A90CBA90@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A90CB7F0();
  *a1 = result;
  return result;
}

uint64_t sub_1A90CBAB8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A90CC6F8();
  *a1 = result;
  return result;
}

uint64_t sub_1A90CBAE4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1A90CBB38(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t SessionData.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  v11[0] = *(void *)(a2 + 24);
  v11[1] = v4;
  type metadata accessor for SessionData.Keys();
  swift_getWitnessTable();
  uint64_t v5 = sub_1A916B980();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A916BB50();
  char v13 = 0;
  uint64_t v9 = v11[3];
  sub_1A916B930();
  if (!v9)
  {
    char v12 = 1;
    sub_1A916B960();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t type metadata accessor for SessionData.Keys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t SessionData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v22 = a4;
  uint64_t v21 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v24 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SessionData.Keys();
  swift_getWitnessTable();
  uint64_t v26 = sub_1A916B900();
  uint64_t v23 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v25 = a3;
  uint64_t v10 = type metadata accessor for SessionData();
  uint64_t v20 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v12 = (uint64_t *)((char *)&v20 - v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = v27;
  sub_1A916BB20();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v27 = v10;
  uint64_t v14 = v23;
  uint64_t v15 = v24;
  char v29 = 0;
  uint64_t *v12 = sub_1A916B8A0();
  v12[1] = v16;
  char v28 = 1;
  sub_1A916B8E0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v26);
  uint64_t v17 = v27;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))((char *)v12 + *(int *)(v27 + 36), v15, a2);
  uint64_t v18 = v20;
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v20 + 16))(v22, v12, v17);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v18 + 8))(v12, v17);
}

uint64_t sub_1A90CC0C0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return SessionData.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1A90CC0E0(void *a1, uint64_t a2)
{
  return SessionData.encode(to:)(a1, a2);
}

void *sub_1A90CC0F8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_OWORD *sub_1A90CC190(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_1A90CC200(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

void sub_1A90CC298(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 16) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1A90CC4F8);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 16] & ~v9;
          unint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t getEnumTagSinglePayload for UploadResponse.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_1A90CC5B0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A90CC67CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1A90CC6A4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A90CC6C0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A90CC6DC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A90CC6F8()
{
  return 2;
}

uint64_t URLSessionUploadClientFactory.__allocating_init()()
{
  return swift_allocObject();
}

void URLSessionUploadClientFactory.makeUploadClient()(uint64_t *a1@<X8>)
{
  if (qword_1EB68ACE8 != -1) {
    swift_once();
  }
  int v2 = (void *)qword_1EB689AA0;
  sub_1A90CA164();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1A916EF60;
  uint64_t v4 = MEMORY[0x1E4FBB1A0];
  *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v5 = sub_1A90A67C0();
  *(void *)(v3 + 64) = v5;
  *(void *)(v3 + 32) = 0xD000000000000026;
  *(void *)(v3 + 40) = 0x80000001A9175A00;
  id v6 = v2;
  sub_1A916B3D0();
  sub_1A916AD30();

  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(self, sel_defaultSessionConfiguration);
  if (qword_1EB687F80 != -1) {
    swift_once();
  }
  if (qword_1EB687F60)
  {
    int v8 = (void *)sub_1A916AF60();
    objc_msgSend(v7, sel_set_sourceApplicationBundleIdentifier_, v8);
  }
  id v9 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, v7, 0, 0);
  size_t v10 = (void *)sub_1A916AF60();
  objc_msgSend(v9, sel_setSessionDescription_, v10);

  BOOL v11 = (void *)qword_1EB689AA0;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1A916EF60;
  *(void *)(v12 + 56) = v4;
  *(void *)(v12 + 64) = v5;
  *(void *)(v12 + 32) = 0xD000000000000026;
  *(void *)(v12 + 40) = 0x80000001A9175A00;
  id v13 = v11;
  sub_1A916B3D0();
  sub_1A916AD30();

  swift_bridgeObjectRelease();
  uint64_t v14 = type metadata accessor for URLSessionUploadClient();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v9;
  a1[3] = v14;
  a1[4] = (uint64_t)&off_1EFF9D720;

  *a1 = v15;
}

uint64_t URLSessionUploadClientFactory.deinit()
{
  return v0;
}

uint64_t URLSessionUploadClientFactory.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

void sub_1A90CC9C8(uint64_t *a1@<X8>)
{
}

uint64_t sub_1A90CC9E0()
{
  id v1 = objc_msgSend(*v0, sel_taskDescription);
  if (!v1) {
    return 0;
  }
  int v2 = v1;
  uint64_t v3 = sub_1A916AF90();

  return v3;
}

void sub_1A90CCA48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  if (a2)
  {
    id v4 = (id)sub_1A916AF60();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v4 = 0;
  }
  objc_msgSend(v3, sel_setTaskDescription_, v4);
}

void (*sub_1A90CCAC0(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[2] = (uint64_t)v1;
  id v3 = objc_msgSend(*v1, sel_taskDescription);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_1A916AF90();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1A90CCB48;
}

void sub_1A90CCB48(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  id v3 = **(void ***)(a1 + 16);
  if (a2)
  {
    if (v2)
    {
      swift_bridgeObjectRetain();
      id v4 = (id)sub_1A916AF60();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v4 = 0;
    }
    objc_msgSend(v3, sel_setTaskDescription_, v4);
    swift_bridgeObjectRelease();
  }
  else if (v2)
  {
    id v4 = (id)sub_1A916AF60();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setTaskDescription_, v4);
  }
  else
  {
    id v4 = 0;
    objc_msgSend(v3, sel_setTaskDescription_, 0);
  }
}

id sub_1A90CCC1C()
{
  return objc_msgSend(*v0, sel_resume);
}

uint64_t sub_1A90CCC2C()
{
  id v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_finishTasksAndInvalidate);

  return MEMORY[0x1F4186488](v0, 24, 7);
}

void sub_1A90CCC7C(unint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, void *a4@<X8>)
{
  id v9 = *(void **)(v4 + 16);
  size_t v10 = (void *)sub_1A916A720();
  if (a1 >> 60 == 15) {
    BOOL v11 = 0;
  }
  else {
    BOOL v11 = (void *)sub_1A916AB60();
  }
  v14[4] = a2;
  id v14[5] = a3;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  _OWORD v14[2] = sub_1A90B05EC;
  v14[3] = &block_descriptor_2;
  uint64_t v12 = _Block_copy(v14);
  swift_retain();
  swift_release();
  id v13 = objc_msgSend(v9, sel_uploadTaskWithRequest_fromData_completionHandler_, v10, v11, v12);
  _Block_release(v12);

  a4[3] = &type metadata for ProxyURLSessionUploadTask;
  a4[4] = &off_1EFF9D780;
  *a4 = v13;
}

void sub_1A90CCDB8(unint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, void *a4@<X8>)
{
}

uint64_t type metadata accessor for URLSessionUploadClient()
{
  return self;
}

uint64_t dispatch thunk of UploadClient.uploadTask(with:from:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t dispatch thunk of UploadClientFactory.makeUploadClient()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of UploadTask.taskDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of UploadTask.taskDescription.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of UploadTask.taskDescription.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of UploadTask.resume()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t method lookup function for URLSessionUploadClientFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for URLSessionUploadClientFactory);
}

uint64_t dispatch thunk of URLSessionUploadClientFactory.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

ValueMetadata *type metadata accessor for ProxyURLSessionUploadTask()
{
  return &type metadata for ProxyURLSessionUploadTask;
}

uint64_t sub_1A90CCEB4()
{
  return sub_1A916BAD0();
}

uint64_t sub_1A90CCF3C()
{
  swift_bridgeObjectRetain();
  sub_1A916B030();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A916B030();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A90CCFC0()
{
  return sub_1A916BAD0();
}

uint64_t sub_1A90CD044(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1A916B9E0(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_1A916B9E0();
    }
  }
  return result;
}

void *SessionGroupManager.__allocating_init(accessQueue:)(uint64_t a1)
{
  uint64_t v2 = (void *)swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  v2[3] = sub_1A908C190(MEMORY[0x1E4FBC860]);
  v2[4] = sub_1A908C190(v3);
  v2[2] = a1;
  return v2;
}

void *SessionGroupManager.init(accessQueue:)(uint64_t a1)
{
  uint64_t v3 = MEMORY[0x1E4FBC860];
  v1[3] = sub_1A908C190(MEMORY[0x1E4FBC860]);
  v1[4] = sub_1A908C190(v3);
  v1[2] = a1;
  return v1;
}

uint64_t sub_1A90CD19C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a3;
  uint64_t v28 = a1;
  uint64_t v7 = sub_1A916ACC0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  size_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A916AE70();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (uint64_t *)((char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void **)(*(void *)(v4 + 16) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4FBCBF0], v11);
  id v16 = v15;
  LOBYTE(v15) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if (v15)
  {
    unint64_t v18 = (uint64_t *)(v4 + 24);
    swift_beginAccess();
    uint64_t v19 = *(void *)(v4 + 24);
    if (*(void *)(v19 + 16))
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v20 = v27;
      unint64_t v21 = sub_1A90BD98C(v27, a4, v28, a2);
      if (v22)
      {
        uint64_t v23 = *(void *)(*(void *)(v19 + 56) + 16 * v21);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        return v23;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v20 = v27;
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_1A916ACB0();
    uint64_t v23 = sub_1A916ACA0();
    uint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v18;
    *unint64_t v18 = 0x8000000000000000;
    sub_1A90C40F8(v23, v25, v20, a4, v28, a2, isUniquelyReferenced_nonNull_native);
    *unint64_t v18 = v29;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    return v23;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A90CD4C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a1;
  uint64_t v8 = sub_1A916ACC0();
  uint64_t v27 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  size_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1A916AE70();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (uint64_t *)((char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void **)(*(void *)(v4 + 16) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4FBCBF0], v11);
  id v16 = v15;
  LOBYTE(v15) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if (v15)
  {
    if (!a4) {
      return a3;
    }
    unint64_t v18 = (uint64_t *)(v4 + 32);
    swift_beginAccess();
    uint64_t v19 = *(void *)(v4 + 32);
    uint64_t v20 = *(void *)(v19 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v21 = sub_1A90BD98C(a3, a4, v28, a2);
      if (v22)
      {
        a3 = *(void *)(*(void *)(v19 + 56) + 16 * v21);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        return a3;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    sub_1A916ACB0();
    uint64_t v23 = sub_1A916ACA0();
    uint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v18;
    *unint64_t v18 = 0x8000000000000000;
    sub_1A90C40F8(v23, v25, a3, a4, v28, a2, isUniquelyReferenced_nonNull_native);
    *unint64_t v18 = v29;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    return v23;
  }
  __break(1u);
  return result;
}

uint64_t SessionGroupManager.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SessionGroupManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 40, 7);
}

uint64_t method lookup function for SessionGroupManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SessionGroupManager);
}

uint64_t dispatch thunk of SessionGroupManager.__allocating_init(accessQueue:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t destroy for SessionGroupManager.Key()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SessionGroupManager.Key(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SessionGroupManager.Key(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for SessionGroupManager.Key(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionGroupManager.Key(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionGroupManager.Key(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionGroupManager.Key()
{
  return &type metadata for SessionGroupManager.Key;
}

unint64_t sub_1A90CDA70()
{
  unint64_t result = qword_1EB686750;
  if (!qword_1EB686750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB686750);
  }
  return result;
}

uint64_t sub_1A90CDAC4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1A90CDAD8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = 0x73736563637573;
  switch(a3)
  {
    case 1:
      uint64_t result = 0x7972746572;
      break;
    case 2:
      uint64_t result = 0x64656C696166;
      break;
    case 3:
      ContentType.description.getter(a1);
      sub_1A916B050();
      swift_bridgeObjectRelease();
      uint64_t result = 0x696F70646E456F6ELL;
      break;
    case 4:
      uint64_t v5 = a1 | a2;
      if (a1 ^ 1 | a2) {
        uint64_t v6 = 0x656E6F646E616261;
      }
      else {
        uint64_t v6 = 0x656E696C66666FLL;
      }
      if (v5) {
        uint64_t result = v6;
      }
      else {
        uint64_t result = 0x64656C6261736964;
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A90CDC24(uint64_t a1, uint64_t a2)
{
  return sub_1A90CE544(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_1A90CDC40()
{
  return 0x6F43737574617473;
}

uint64_t sub_1A90CDD40(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1A90CE9F4(0, &qword_1E97B14F0, MEMORY[0x1E4FBBDE0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  size_t v10 = (char *)v12 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A90CE284();
  sub_1A916BB50();
  char v14 = 0;
  sub_1A916B950();
  if (!v3)
  {
    v12[1] = a3;
    char v13 = 1;
    sub_1A90CE2D8();
    sub_1A90CEA58((unint64_t *)&qword_1EB686C20);
    sub_1A916B960();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

BOOL sub_1A90CDF00(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1A90CDF18()
{
  if (*v0) {
    return 0x73726564616568;
  }
  else {
    return 0x6F43737574617473;
  }
}

uint64_t sub_1A90CDF58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A90CE6FC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A90CDF80(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1A90CDF8C(uint64_t a1)
{
  unint64_t v2 = sub_1A90CE284();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A90CDFC8(uint64_t a1)
{
  unint64_t v2 = sub_1A90CE284();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A90CE004(void *a1, void *a2)
{
  if (*a1 == *a2) {
    return sub_1A90CE33C(a1[1], a2[1]);
  }
  else {
    return 0;
  }
}

uint64_t sub_1A90CE028@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1A90CE7FC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1A90CE054(void *a1)
{
  return sub_1A90CDD40(a1, *v1, v1[1]);
}

uint64_t sub_1A90CE070()
{
  return sub_1A90CDC40();
}

ValueMetadata *type metadata accessor for UploadResponse()
{
  return &type metadata for UploadResponse;
}

uint64_t sub_1A90CE08C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for UploadResult(uint64_t a1)
{
  return sub_1A90CE0B4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1A90CE0B4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s12AppAnalytics12UploadResultOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1A90CE08C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for UploadResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1A90CE08C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1A90CE0B4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for UploadResult(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1A90CE0B4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for UploadResult(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UploadResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A90CE244(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1A90CE25C(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)uint64_t result = a2 - 4;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for UploadResult()
{
  return &type metadata for UploadResult;
}

unint64_t sub_1A90CE284()
{
  unint64_t result = qword_1E97B14F8;
  if (!qword_1E97B14F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B14F8);
  }
  return result;
}

void sub_1A90CE2D8()
{
  if (!qword_1EB689460)
  {
    unint64_t v0 = sub_1A916AEF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB689460);
    }
  }
}

uint64_t sub_1A90CE33C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v27) {
        return 1;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v27) {
          return 1;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
    uint64_t v14 = 16 * v10;
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + v14);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    unint64_t v18 = (uint64_t *)(*(void *)(v3 + 56) + v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_1A90A1D98(v16, v17);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v24 = (void *)(*(void *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      unint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      char v26 = sub_1A916B9E0();
      unint64_t result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v27) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1A90CE544(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a3)
  {
    case 1:
      if (a6 != 1) {
        return 0;
      }
      if (!a2)
      {
        if (!a5) {
          return 1;
        }
        sub_1A90CE0B4(a1, 0, 1u);
        return 0;
      }
      if (!a5) {
        return 0;
      }
      if (a1 != a4) {
        return 0;
      }
      uint64_t v9 = 1;
      sub_1A90CE08C(a1, a5, 1u);
      sub_1A90CE08C(a1, a2, 1u);
      char v10 = sub_1A90CE33C(a2, a5);
      sub_1A90CE0B4(a1, a5, 1u);
      sub_1A90CE0B4(a1, a2, 1u);
      if ((v10 & 1) == 0) {
        return 0;
      }
      return v9;
    case 2:
      if (a6 != 2) {
        return 0;
      }
      return a1 == a4 && (sub_1A90CE33C(a2, a5) & 1) != 0;
    case 3:
      if (a6 != 3) {
        return 0;
      }
      return a1 == a4;
    case 4:
      if (a1 | a2)
      {
        if (a1 ^ 1 | a2)
        {
          if (a6 != 4 || a4 != 2) {
            return 0;
          }
        }
        else if (a6 != 4 || a4 != 1)
        {
          return 0;
        }
        if (a5) {
          return 0;
        }
      }
      else if (a6 != 4 || a5 | a4)
      {
        return 0;
      }
      return 1;
    default:
      if (a6) {
        return 0;
      }
      return a1 == a4 && (sub_1A90CE33C(a2, a5) & 1) != 0;
  }
}

uint64_t sub_1A90CE6FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F43737574617473 && a2 == 0xEA00000000006564;
  if (v2 || (sub_1A916B9E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73726564616568 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A916B9E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A90CE7FC(void *a1)
{
  sub_1A90CE9F4(0, &qword_1E97B1500, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v10[-v6];
  uint64_t v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1A90CE284();
  sub_1A916BB20();
  if (!v1)
  {
    v10[31] = 0;
    uint64_t v8 = sub_1A916B8D0();
    sub_1A90CE2D8();
    v10[15] = 1;
    sub_1A90CEA58(&qword_1E97B1508);
    sub_1A916B8E0();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v8;
}

void sub_1A90CE9F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1A90CE284();
    unint64_t v7 = a3(a1, &type metadata for UploadResponse.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1A90CEA58(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A90CE2D8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for UploadResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A90CEB84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UploadResponse.CodingKeys()
{
  return &type metadata for UploadResponse.CodingKeys;
}

unint64_t sub_1A90CEBC0()
{
  unint64_t result = qword_1E97B1510;
  if (!qword_1E97B1510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1510);
  }
  return result;
}

unint64_t sub_1A90CEC18()
{
  unint64_t result = qword_1E97B1518;
  if (!qword_1E97B1518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1518);
  }
  return result;
}

unint64_t sub_1A90CEC70()
{
  unint64_t result = qword_1E97B1520;
  if (!qword_1E97B1520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1520);
  }
  return result;
}

uint64_t sub_1A90CECC4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for TimedData();
  if (swift_dynamicCastMetatype())
  {
    uint64_t v3 = *(void *)(a2 + OBJC_IVAR___AARawEventProperty_dataName);
    uint64_t v4 = *(void *)(a2 + OBJC_IVAR___AARawEventProperty_dataName + 8);
    BOOL v5 = v3 == 0x4464656D69544141 && v4 == 0xEB00000000617461;
    if (v5
      || (sub_1A916B9E0() & 1) != 0
      || v3 == 0xD000000000000010 && v4 == 0x80000001A9175BE0
      || (sub_1A916B9E0() & 1) != 0)
    {
      return 1;
    }
  }
  type metadata accessor for EventData();
  if (swift_dynamicCastMetatype()
    && ((uint64_t v6 = a2 + OBJC_IVAR___AARawEventProperty_dataName,
         uint64_t v7 = *(void *)(a2 + OBJC_IVAR___AARawEventProperty_dataName),
         uint64_t v8 = *(void *)(v6 + 8),
         v7 == 0x44746E6576454141)
      ? (BOOL v9 = v8 == 0xEB00000000617461)
      : (BOOL v9 = 0),
        v9
     || (sub_1A916B9E0() & 1) != 0
     || v7 == 0xD000000000000010 && v8 == 0x80000001A9175BC0
     || (sub_1A916B9E0() & 1) != 0))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1A90CEE9C()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR___AARawEventProperty_dataName);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A90CEEE0()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR___AARawEventProperty_requirement);
  if (v1 == 1) {
    return 1;
  }
  if (!v1) {
    return 0;
  }
  uint64_t result = sub_1A916BA20();
  __break(1u);
  return result;
}

uint64_t sub_1A90CEF4C()
{
  return MEMORY[0x1E4FBC840] + 8;
}

uint64_t sub_1A90CEF5C(uint64_t a1)
{
  return sub_1A90CECC4(a1, *v1);
}

ValueMetadata *type metadata accessor for BridgedRawEventMirrorProperty()
{
  return &type metadata for BridgedRawEventMirrorProperty;
}

uint64_t Client.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AAClient_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Client.name.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AAClient_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A90CF044()
{
  uint64_t v1 = v0 + OBJC_IVAR___AAClient_buildNumber;
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR___AAClient_buildNumber);
  unint64_t v2 = *(void *)(v1 + 8);
  if ((v2 & 0x2000000000000000) != 0) {
    uint64_t v4 = HIBYTE(v2) & 0xF;
  }
  else {
    uint64_t v4 = v3 & 0xFFFFFFFFFFFFLL;
  }
  swift_bridgeObjectRetain();
  if (v4)
  {
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1A916B0E0();
      uint64_t v7 = v6;
      swift_bridgeObjectRelease();
      if (v5 == 46 && v7 == 0xE100000000000000) {
        break;
      }
      char v8 = sub_1A916B9E0();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0 || 4 * v4 == (unint64_t)sub_1A916B040() >> 14) {
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
  }
LABEL_12:
  uint64_t v9 = sub_1A916B100();
  unint64_t v11 = v10;
  unint64_t v13 = v12;
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();
  if ((v9 ^ v11) < 0x4000)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    uint64_t v16 = sub_1A90CFD20(v9, v11, v13, v15, 10);
    if ((v17 & 0x100) != 0) {
      uint64_t v16 = (uint64_t)sub_1A90CF9B0(v9, v11, v13, v15, 10);
    }
    uint64_t v18 = v16;
    char v19 = v17;
    swift_bridgeObjectRelease();
    if (v19) {
      return 0;
    }
    else {
      return v18;
    }
  }
}

id sub_1A90CF1F0()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = (void *)sub_1A916AF60();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_1A90CF30C()
{
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR___AAClient_version);
  swift_bridgeObjectRetain();
  sub_1A916B050();
  swift_bridgeObjectRetain();
  sub_1A916B050();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1A90CF398()
{
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR___AAClient_identifier);
  swift_bridgeObjectRetain();
  sub_1A916B050();
  swift_bridgeObjectRetain();
  sub_1A916B050();
  swift_bridgeObjectRetain();
  sub_1A916B050();
  swift_bridgeObjectRelease();
  sub_1A916B050();
  swift_bridgeObjectRelease();
  return v2;
}

id Client.__allocating_init(identifier:name:version:buildNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __int16 v17 = (char *)objc_allocWithZone(v8);
  uint64_t v18 = &v17[OBJC_IVAR___AAClient_identifier];
  *(void *)uint64_t v18 = a1;
  *((void *)v18 + 1) = a2;
  char v19 = &v17[OBJC_IVAR___AAClient_name];
  *(void *)char v19 = a3;
  *((void *)v19 + 1) = a4;
  uint64_t v20 = &v17[OBJC_IVAR___AAClient_version];
  *(void *)uint64_t v20 = a5;
  *((void *)v20 + 1) = a6;
  unint64_t v21 = &v17[OBJC_IVAR___AAClient_buildNumber];
  *(void *)unint64_t v21 = a7;
  *((void *)v21 + 1) = a8;
  v23.receiver = v17;
  v23.super_class = v8;
  return objc_msgSendSuper2(&v23, sel_init);
}

id Client.init(identifier:name:version:buildNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = &v8[OBJC_IVAR___AAClient_identifier];
  *(void *)uint64_t v9 = a1;
  *((void *)v9 + 1) = a2;
  unint64_t v10 = &v8[OBJC_IVAR___AAClient_name];
  *(void *)unint64_t v10 = a3;
  *((void *)v10 + 1) = a4;
  unint64_t v11 = &v8[OBJC_IVAR___AAClient_version];
  *(void *)unint64_t v11 = a5;
  *((void *)v11 + 1) = a6;
  unint64_t v12 = &v8[OBJC_IVAR___AAClient_buildNumber];
  *(void *)unint64_t v12 = a7;
  *((void *)v12 + 1) = a8;
  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for Client();
  return objc_msgSendSuper2(&v14, sel_init);
}

id Client.__allocating_init(identifier:name:version:build:)()
{
  id v1 = objc_allocWithZone(v0);
  uint64_t v2 = (void *)sub_1A916AF60();
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_1A916AF60();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)sub_1A916AF60();
  swift_bridgeObjectRelease();
  sub_1A916B990();
  uint64_t v5 = (void *)sub_1A916AF60();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v1, sel_initWithIdentifier_name_version_buildNumber_, v2, v3, v4, v5);

  return v6;
}

id Client.init(identifier:name:version:build:)()
{
  id v1 = (void *)sub_1A916AF60();
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)sub_1A916AF60();
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_1A916AF60();
  swift_bridgeObjectRelease();
  sub_1A916B990();
  uint64_t v4 = (void *)sub_1A916AF60();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v0, sel_initWithIdentifier_name_version_buildNumber_, v1, v2, v3, v4);

  return v5;
}

id Client.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void Client.init()()
{
}

id Client.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Client();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unsigned __int8 *sub_1A90CF9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_1A90CFE88();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1A916B0F0();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1A9133BCC();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (unsigned __int8 *)sub_1A916B6D0();
  }
LABEL_7:
  unint64_t v13 = sub_1A90CFAA4(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1A90CFAA4(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }
      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }
      if (result)
      {
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
            return 0;
          }
          uint64_t v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }
  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  char v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }
      else
      {
        char v21 = -55;
      }
    }
    else
    {
      char v21 = -48;
    }
    uint64_t v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21))) {
      return 0;
    }
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1A90CFD20(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    unsigned int v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    unsigned int v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    unsigned int v11 = (void *)sub_1A916B6D0();
  }
  uint64_t result = sub_1A90CFEDC((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    char v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

uint64_t method lookup function for Client(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Client);
}

uint64_t dispatch thunk of Client.build.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of Client.fullVersion.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of Client.__allocating_init(identifier:name:version:buildNumber:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

unint64_t sub_1A90CFE88()
{
  unint64_t result = qword_1E97B1548;
  if (!qword_1E97B1548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1548);
  }
  return result;
}

uint64_t sub_1A90CFEDC(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    unint64_t result = sub_1A90DD494(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_95;
  }
  unint64_t result = sub_1A916B0A0();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    unint64_t result = sub_1A90DD494(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    unint64_t result = sub_1A90DD494(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    unint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_91;
  }
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  unint64_t result = sub_1A916B0A0();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  char v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    char v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v31 = a6 + 48;
        unsigned __int8 v32 = a6 + 55;
        unsigned __int8 v33 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v31 = 58;
        }
        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v32 = 65;
        }
        if (v19)
        {
          uint64_t v24 = 0;
          uint64_t v34 = v19 + 1;
          uint64_t v35 = result - 1;
          do
          {
            unsigned int v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                uint64_t v29 = 0;
                if (v36 < 0x61 || v36 >= v33) {
                  return v29;
                }
                char v37 = -87;
              }
              else
              {
                char v37 = -55;
              }
            }
            else
            {
              char v37 = -48;
            }
            uint64_t v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
              return 0;
            }
            uint64_t v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37))) {
              return 0;
            }
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v39 = a6 + 48;
      unsigned __int8 v40 = a6 + 55;
      unsigned __int8 v41 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v39 = 58;
      }
      else
      {
        unsigned __int8 v41 = 97;
        unsigned __int8 v40 = 65;
      }
      if (v19)
      {
        uint64_t v42 = 0;
        do
        {
          unsigned int v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              uint64_t v29 = 0;
              if (v43 < 0x61 || v43 >= v41) {
                return v29;
              }
              char v44 = -87;
            }
            else
            {
              char v44 = -55;
            }
          }
          else
          {
            char v44 = -48;
          }
          uint64_t v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63) {
            return 0;
          }
          uint64_t v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44))) {
            return 0;
          }
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 48;
      unsigned __int8 v22 = a6 + 55;
      unsigned __int8 v23 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v21 = 58;
      }
      else
      {
        unsigned __int8 v23 = 97;
        unsigned __int8 v22 = 65;
      }
      if (v19)
      {
        uint64_t v24 = 0;
        unsigned __int8 v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              uint64_t v29 = 0;
              if (v27 < 0x61 || v27 >= v23) {
                return v29;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
            return 0;
          }
          uint64_t v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28))) {
            return 0;
          }
          ++v25;
          if (!--v26) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t sub_1A90D0304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1A90CB58C;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1A90D0410(uint64_t a1, unint64_t a2)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  unint64_t v2 = a2 >> 62;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_43;
      }
      uint64_t v4 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (!v4) {
        return v3;
      }
      uint64_t v29 = MEMORY[0x1E4FBC860];
      int64_t v7 = v4 & ~(v4 >> 63);
      sub_1A90B2820(0, v7, 0);
      uint64_t v3 = v29;
      if (v2)
      {
        if (v2 == 1) {
          uint64_t v8 = (int)a1;
        }
        else {
          uint64_t v8 = *(void *)(a1 + 16);
        }
        if (v4 < 0)
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
        }
      }
      else
      {
        if (v4 < 0) {
          goto LABEL_45;
        }
        uint64_t v8 = 0;
      }
      int v25 = v2;
      do
      {
        if (!v7)
        {
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        if (v2)
        {
          if (v2 == 1)
          {
            if (v8 < (int)a1 || v8 >= a1 >> 32) {
              goto LABEL_36;
            }
            uint64_t v9 = sub_1A916A870();
            if (!v9) {
              goto LABEL_46;
            }
            uint64_t v10 = v9;
            uint64_t v11 = sub_1A916A8A0();
            uint64_t v12 = v8 - v11;
            if (__OFSUB__(v8, v11)) {
              goto LABEL_39;
            }
          }
          else
          {
            if (v8 < *(void *)(a1 + 16)) {
              goto LABEL_38;
            }
            if (v8 >= *(void *)(a1 + 24)) {
              goto LABEL_40;
            }
            uint64_t v14 = sub_1A916A870();
            if (!v14) {
              goto LABEL_47;
            }
            uint64_t v10 = v14;
            uint64_t v15 = sub_1A916A8A0();
            uint64_t v12 = v8 - v15;
            if (__OFSUB__(v8, v15)) {
              goto LABEL_41;
            }
          }
          char v13 = *(unsigned char *)(v10 + v12);
        }
        else
        {
          if (v8 >= BYTE6(a2)) {
            goto LABEL_37;
          }
          uint64_t v26 = a1;
          int v27 = a2;
          __int16 v28 = WORD2(a2);
          char v13 = *((unsigned char *)&v26 + v8);
        }
        sub_1A90CA164();
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_1A916EF60;
        *(void *)(v16 + 56) = MEMORY[0x1E4FBC358];
        *(void *)(v16 + 64) = MEMORY[0x1E4FBC3B0];
        *(unsigned char *)(v16 + 32) = v13;
        uint64_t v17 = sub_1A916AFB0();
        unint64_t v2 = v18;
        uint64_t v29 = v3;
        unint64_t v20 = *(void *)(v3 + 16);
        unint64_t v19 = *(void *)(v3 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_1A90B2820(v19 > 1, v20 + 1, 1);
          uint64_t v3 = v29;
        }
        *(void *)(v3 + 16) = v20 + 1;
        uint64_t v21 = v3 + 16 * v20;
        *(void *)(v21 + 32) = v17;
        *(void *)(v21 + 40) = v2;
        ++v8;
        --v7;
        --v4;
        LODWORD(v2) = v25;
      }
      while (v4);
      return v3;
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      uint64_t v4 = v5 - v6;
      if (!__OFSUB__(v5, v6)) {
        goto LABEL_6;
      }
      goto LABEL_44;
    case 3uLL:
      return v3;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

unsigned __int8 *sub_1A90D07B4(const void *a1, uint64_t a2, uint64_t a3, unint64_t a4, char **a5)
{
  LODWORD(v7) = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a3), a3))
      {
        __break(1u);
LABEL_12:
        __break(1u);
LABEL_13:
        sub_1A916B7B0();
        __break(1u);
        JUMPOUT(0x1A90D0920);
      }
      unint64_t v7 = HIDWORD(a3) - (int)a3;
LABEL_6:
      if ((v7 & 0x8000000000000000) != 0 || HIDWORD(v7)) {
        goto LABEL_13;
      }
LABEL_8:
      uint64_t v10 = *a5;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a5 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v10 = sub_1A90C2F00(0, *((void *)v10 + 2), 0, v10);
      }
      *a5 = v10;
      return CC_SHA1(a1, v7, (unsigned __int8 *)v10 + 32);
    case 2uLL:
      uint64_t v9 = *(void *)(a3 + 16);
      uint64_t v8 = *(void *)(a3 + 24);
      unint64_t v7 = v8 - v9;
      if (!__OFSUB__(v8, v9)) {
        goto LABEL_6;
      }
      goto LABEL_12;
    case 3uLL:
      goto LABEL_8;
    default:
      LODWORD(v7) = BYTE6(a4);
      goto LABEL_8;
  }
}

uint64_t sub_1A90D0930()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t sub_1A90D0968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char **a6)
{
  uint64_t result = sub_1A916A870();
  uint64_t v12 = (char *)result;
  if (result)
  {
    uint64_t result = sub_1A916A8A0();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v12 += a1 - result;
  }
  BOOL v13 = __OFSUB__(a2, a1);
  uint64_t v14 = a2 - a1;
  if (v13)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v15 = sub_1A916A890();
  if (v15 >= v14) {
    uint64_t v16 = v14;
  }
  else {
    uint64_t v16 = v15;
  }
  uint64_t v17 = &v12[v16];
  if (v12) {
    uint64_t v18 = (uint64_t)v17;
  }
  else {
    uint64_t v18 = 0;
  }
  sub_1A90D07B4(v12, v18, a4, a5, a6);
  return sub_1A90A2FD4(a4, a5);
}

uint64_t sub_1A90D0A38(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_1A90D0AFC(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_1A90D0A38(__src, &__src[a2]);
  }
  sub_1A916A8C0();
  swift_allocObject();
  sub_1A916A860();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  sub_1A916AB10();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t sub_1A90D0BB0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return MEMORY[0x1F4188298](sub_1A90D0C40, 0, 0);
}

uint64_t sub_1A90D0C40()
{
  uint64_t v32 = v0;
  v31[1] = *MEMORY[0x1E4F143B8];
  unint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = sub_1A916B1F0();
  *(void *)(v2 + 16) = 20;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(_DWORD *)(v2 + 48) = 0;
  *(void *)(v0 + 32) = v2;
  switch(v1 >> 62)
  {
    case 1uLL:
      uint64_t v7 = *(void *)(v0 + 64);
      if (v7 >> 32 < (int)v7) {
        __break(1u);
      }
      unint64_t v8 = *(void *)(v0 + 72);
      sub_1A90D1784(*(void *)(v0 + 64), v8);
      sub_1A90D0968((int)v7, v7 >> 32, v8 & 0x3FFFFFFFFFFFFFFFLL, v7, v8, (char **)(v0 + 32));
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(v0 + 64);
      unint64_t v9 = *(void *)(v0 + 72);
      uint64_t v11 = *(void *)(v10 + 16);
      uint64_t v12 = *(void *)(v10 + 24);
      sub_1A90D1784(v10, v9);
      swift_retain();
      swift_retain();
      sub_1A90D0968(v11, v12, v9 & 0x3FFFFFFFFFFFFFFFLL, v10, v9, (char **)(v0 + 32));
      swift_release();
      swift_release();
      break;
    case 3uLL:
      *(void *)(v0 + 152) = 0;
      uint64_t v24 = *(void *)(v0 + 64);
      unint64_t v23 = *(void *)(v0 + 72);
      *(void *)(v0 + 158) = 0;
      sub_1A90D07B4((const void *)(v0 + 152), v0 + 152, v24, v23, (char **)(v0 + 32));
      sub_1A90A2FD4(v24, v23);
      uint64_t v5 = v24;
      unint64_t v6 = v23;
      goto LABEL_11;
    default:
      uint64_t v3 = *(void *)(v0 + 64);
      *(unsigned char *)(v0 + 166) = v3;
      unint64_t v4 = *(void *)(v0 + 72);
      *(unsigned char *)(v0 + 167) = BYTE1(v3);
      *(unsigned char *)(v0 + 168) = BYTE2(v3);
      *(unsigned char *)(v0 + 169) = BYTE3(v3);
      *(unsigned char *)(v0 + 170) = BYTE4(v3);
      *(unsigned char *)(v0 + 171) = BYTE5(v3);
      *(unsigned char *)(v0 + 172) = BYTE6(v3);
      *(unsigned char *)(v0 + 173) = HIBYTE(v3);
      *(_WORD *)(v0 + 174) = v4;
      *(unsigned char *)(v0 + 176) = BYTE2(v4);
      *(unsigned char *)(v0 + 177) = BYTE3(v4);
      *(unsigned char *)(v0 + 178) = BYTE4(v4);
      *(unsigned char *)(v0 + 179) = BYTE5(v4);
      sub_1A90D07B4((const void *)(v0 + 166), v0 + 166 + BYTE6(v4), v3, v4, (char **)(v0 + 32));
      sub_1A90A2FD4(v3, v4);
      uint64_t v5 = v3;
      unint64_t v6 = v4;
LABEL_11:
      sub_1A90A2FD4(v5, v6);
      break;
  }
  uint64_t v13 = sub_1A90D0AFC((unsigned char *)(*(void *)(v0 + 32) + 32), *(void *)(*(void *)(v0 + 32) + 16));
  unint64_t v15 = v14;
  *(void *)(v0 + 80) = v13;
  *(void *)(v0 + 88) = v14;
  if (qword_1EB688798 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1A916AD50();
  *(void *)(v0 + 96) = v16;
  *(void *)(v0 + 104) = __swift_project_value_buffer(v16, (uint64_t)qword_1EB68D9C0);
  sub_1A90D1784(v13, v15);
  sub_1A90D1784(v13, v15);
  uint64_t v17 = sub_1A916AD40();
  os_log_type_t v18 = sub_1A916B3D0();
  if (os_log_type_enabled(v17, v18))
  {
    unint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    v31[0] = v30;
    *(_DWORD *)unint64_t v19 = 136315138;
    *(void *)(v0 + 56) = sub_1A90D0410(v13, v15);
    sub_1A90D17DC();
    sub_1A909384C();
    uint64_t v20 = sub_1A916AF40();
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 40) = sub_1A90DCF6C(v20, v22, v31);
    sub_1A916B5A0();
    swift_bridgeObjectRelease();
    sub_1A90A2FD4(v13, v15);
    sub_1A90A2FD4(v13, v15);
    _os_log_impl(&dword_1A9088000, v17, v18, "Generated SHA1 from data, %s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0EECA0](v30, -1, -1);
    MEMORY[0x1AD0EECA0](v19, -1, -1);
  }
  else
  {
    sub_1A90A2FD4(v13, v15);
    sub_1A90A2FD4(v13, v15);
  }

  sub_1A90A5FE0(0, &qword_1EB687860);
  int v25 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MescalSigner.Contract()), sel_init);
  uint64_t v26 = *(void **)&v25[OBJC_IVAR____TtCC12AppAnalytics12MescalSignerP33_50212C62307B91282DB5DA35D73009738Contract_bag];
  *(void *)(v0 + 112) = v26;
  id v27 = v26;

  __int16 v28 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v28;
  *__int16 v28 = v0;
  v28[1] = sub_1A90D11C4;
  return MEMORY[0x1F410A908](v13, v15, 1, v27);
}

uint64_t sub_1A90D11C4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 128) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_1A90D1544;
  }
  else
  {

    *(void *)(v6 + 136) = a2;
    *(void *)(v6 + 144) = a1;
    uint64_t v7 = sub_1A90D1328;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1A90D1328()
{
  unint64_t v15 = v0;
  v14[1] = *MEMORY[0x1E4F143B8];
  unint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v3 = sub_1A916AB70();
  unint64_t v5 = v4;
  sub_1A90A2FD4(v2, v1);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1A916AD40();
  os_log_type_t v7 = sub_1A916B3D0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = v0[10];
    unint64_t v13 = v0[11];
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v14[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_bridgeObjectRetain();
    v0[2] = sub_1A90DCF6C(v3, v5, v14);
    sub_1A916B5A0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A9088000, v6, v7, "Generated base64 signature from SHA1, base64=%s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0EECA0](v10, -1, -1);
    MEMORY[0x1AD0EECA0](v9, -1, -1);

    sub_1A90A2FD4(v8, v13);
  }
  else
  {
    sub_1A90A2FD4(v0[10], v0[11]);
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = (uint64_t (*)(uint64_t, unint64_t))v0[1];
  return v11(v3, v5);
}

uint64_t sub_1A90D1544()
{
  uint64_t v1 = *(void *)(v0 + 80);
  unint64_t v2 = *(void *)(v0 + 88);

  sub_1A90A2FD4(v1, v2);
  swift_bridgeObjectRelease();
  if (qword_1EB688700 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void **)(v0 + 128);
  __swift_project_value_buffer(*(void *)(v0 + 96), (uint64_t)qword_1EB68D970);
  id v4 = v3;
  id v5 = v3;
  uint64_t v6 = sub_1A916AD40();
  os_log_type_t v7 = sub_1A916B3B0();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = *(void **)(v0 + 128);
  if (v8)
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412290;
    id v12 = v9;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 48) = v13;
    sub_1A916B5A0();
    void *v11 = v13;

    _os_log_impl(&dword_1A9088000, v6, v7, "Failed to sign our data, error=%@", v10, 0xCu);
    sub_1A90C9BD0();
    swift_arrayDestroy();
    MEMORY[0x1AD0EECA0](v11, -1, -1);
    MEMORY[0x1AD0EECA0](v10, -1, -1);
  }
  else
  {
  }
  swift_willThrow();
  unint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_1A90D1784(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

void sub_1A90D17DC()
{
  if (!qword_1EB688C10)
  {
    unint64_t v0 = sub_1A916B230();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB688C10);
    }
  }
}

unint64_t ContentType.description.getter(uint64_t a1)
{
  unint64_t result = 0x7274656D656C6574;
  switch(a1)
  {
    case 0:
      unint64_t result = 0x6E65764572657375;
      break;
    case 1:
      return result;
    case 2:
      unint64_t result = 0x656D69746C616572;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x6B63616264656566;
      break;
    case 5:
      unint64_t result = 0xD000000000000019;
      break;
    case 6:
      unint64_t result = 0x76457374726F7073;
      break;
    case 7:
      unint64_t result = 0x746C616548707061;
      break;
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      sub_1A916BA20();
      __break(1u);
      JUMPOUT(0x1A90D19A8);
  }
  return result;
}

unint64_t sub_1A90D19CC(uint64_t a1)
{
  unint64_t result = 0xD000000000000034;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0xD000000000000039;
      break;
    case 2:
    case 4:
      unint64_t result = 0xD000000000000038;
      break;
    case 3:
      unint64_t result = 0xD00000000000003DLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000044;
      break;
    case 6:
      unint64_t result = 0xD000000000000036;
      break;
    case 7:
      unint64_t result = 0xD00000000000003ALL;
      break;
    case 8:
      unint64_t result = 0xD000000000000039;
      break;
    default:
      sub_1A916BA20();
      __break(1u);
      JUMPOUT(0x1A90D1AD8);
  }
  return result;
}

unint64_t ContentType.init(rawValue:)(unint64_t a1)
{
  return sub_1A90D1B58(a1);
}

unint64_t sub_1A90D1B1C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1A90D1B58(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t sub_1A90D1B50()
{
  return ContentType.description.getter(*v0);
}

unint64_t sub_1A90D1B58(unint64_t result)
{
  if (result > 8) {
    return 0;
  }
  return result;
}

unint64_t sub_1A90D1B6C()
{
  unint64_t result = qword_1E97B1560;
  if (!qword_1E97B1560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1560);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentType()
{
  return &type metadata for ContentType;
}

uint64_t sub_1A90D1BD0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1A90D1BE4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1A90D1BF8()
{
  MEMORY[0x1AD0EECA0](*(void *)(v0 + 16), -1, -1);

  return MEMORY[0x1F4186488](v0, 28, 7);
}

unint64_t BridgedTimestampGranularity.init(rawValue:)(unint64_t a1)
{
  return sub_1A90D1EC0(a1);
}

unint64_t sub_1A90D1C58@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1A90D1EC0(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

id sub_1A90D1C8C()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BridgedTimestampGranularityFactory()), sel_init);
  qword_1EB686768 = (uint64_t)result;
  return result;
}

id BridgedTimestampGranularityFactory.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id static BridgedTimestampGranularityFactory.sharedInstance.getter()
{
  if (qword_1EB686778 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB686768;

  return v0;
}

id BridgedTimestampGranularityFactory.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id BridgedTimestampGranularityFactory.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1A90D1EC0(unint64_t result)
{
  if (result > 4) {
    return 0;
  }
  return result;
}

uint64_t _s12AppAnalytics34BridgedTimestampGranularityFactoryC04makedE0yAA0cdE0OSSF_0()
{
  uint64_t v1 = sub_1A916AFF0();
  uint64_t v2 = v0;
  if (v1 == 7954788 && v0 == 0xE300000000000000 || (sub_1A916B9E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (v1 == 1920298856 && v2 == 0xE400000000000000 || (sub_1A916B9E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (v1 == 0x6574756E696DLL && v2 == 0xE600000000000000 || (sub_1A916B9E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (v1 == 0x72657474696ALL && v2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v4 = sub_1A916B9E0();
    swift_bridgeObjectRelease();
    if (v4) {
      return 2;
    }
    else {
      return 0;
    }
  }
}

unint64_t sub_1A90D2070()
{
  unint64_t result = qword_1E97B1568;
  if (!qword_1E97B1568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1568);
  }
  return result;
}

ValueMetadata *type metadata accessor for BridgedTimestampGranularity()
{
  return &type metadata for BridgedTimestampGranularity;
}

uint64_t type metadata accessor for BridgedTimestampGranularityFactory()
{
  return self;
}

uint64_t SessionManager.processorManager.getter()
{
  return swift_retain();
}

AppAnalytics::SessionManager::Options __swiftcall SessionManager.Options.init(rawValue:)(AppAnalytics::SessionManager::Options rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

uint64_t SessionManager.Options.rawValue.getter()
{
  return *(void *)v0;
}

void *SessionManager.__allocating_init(accessQueue:sessionGroupManager:flushProcessor:timestampJitter:privacyValidationProvider:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v14 = sub_1A90D4CB0(a1, a2, a3, a4, a5, v6, ObjectType, a6);

  return v14;
}

void *SessionManager.__allocating_init(accessQueue:sessionGroupManager:options:flushProcessor:timestampJitter:privacyValidationProvider:)(void *a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v28 = a7;
  uint64_t v13 = type metadata accessor for SummaryEventConfiguration(0);
  MEMORY[0x1F4188790](v13);
  unint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v16 = *a3;
  uint64_t v17 = *(void *)(a5 + 8);
  uint64_t v26 = *(void *)a5;
  unint64_t v27 = v16;
  char v18 = *(unsigned char *)(a5 + 16);
  dispatch_group_t v19 = dispatch_group_create();
  if (qword_1EB6887D0 != -1) {
    swift_once();
  }
  uint64_t v20 = __swift_project_value_buffer(v13, (uint64_t)qword_1EB688098);
  sub_1A9098DA0(v20, (uint64_t)v15, type metadata accessor for SummaryEventConfiguration);
  unint64_t v21 = (void *)swift_allocObject();
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v23 = sub_1A90D48BC(a1, v19, a2, v27, a4, v26, v17, v18, a6, (uint64_t)v15, v21, ObjectType, v28);

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v23;
}

void *SessionManager.__allocating_init(accessQueue:accessGroup:sessionGroupManager:options:flushProcessor:timestampJitter:privacyValidationProvider:)(void *a1, void *a2, uint64_t a3, unint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v31 = a8;
  id v32 = a2;
  uint64_t v34 = a3;
  uint64_t v35 = a5;
  uint64_t v33 = a1;
  uint64_t v11 = type metadata accessor for SummaryEventConfiguration(0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DiagnosticsConsentProvider(0);
  uint64_t v15 = v14 - 8;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v18 = *a4;
  uint64_t v19 = *(void *)(a6 + 8);
  uint64_t v30 = *(void *)a6;
  char v20 = *(unsigned char *)(a6 + 16);
  dispatch_group_t v21 = dispatch_group_create();
  sub_1A916ACB0();
  unint64_t v22 = &v17[*(int *)(v15 + 28)];
  *(void *)unint64_t v22 = sub_1A90A80E4;
  *((void *)v22 + 1) = 0;
  if (qword_1EB6887D0 != -1) {
    swift_once();
  }
  uint64_t v23 = __swift_project_value_buffer(v11, (uint64_t)qword_1EB688098);
  sub_1A9098DA0(v23, (uint64_t)v13, type metadata accessor for SummaryEventConfiguration);
  uint64_t v24 = (void *)swift_allocObject();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v29 = (uint64_t)v17;
  uint64_t v26 = v33;
  unint64_t v27 = sub_1A90D4E3C(v33, v21, v34, v18, v35, v30, v19, v20, a7, v29, (uint64_t)v13, v24, ObjectType, v31);

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v27;
}

void *SessionManager.__allocating_init(accessQueue:accessGroup:sessionGroupManager:options:flushProcessor:timestampConfigurationProvider:privacyValidationProvider:summaryEventConfiguration:)(void *a1, void *a2, uint64_t a3, unint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17 = *(void *)(a6 + 24);
  uint64_t v16 = *(void *)(a6 + 32);
  uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1(a6, v17);
  uint64_t v19 = sub_1A90D5648(a1, a2, a3, a4, a5, v18, a7, a8, a9, v9, v17, v16);

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a6);
  return v19;
}

void *SessionManager.init(accessQueue:accessGroup:sessionGroupManager:options:flushProcessor:timestampConfigurationProvider:privacyValidationProvider:summaryEventConfiguration:)(void *a1, void *a2, uint64_t a3, unint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v25 = a7;
  uint64_t v26 = a8;
  uint64_t v24 = a4;
  uint64_t v16 = *(void *)(a6 + 24);
  uint64_t v15 = *(void *)(a6 + 32);
  uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1(a6, v16);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v19);
  dispatch_group_t v21 = sub_1A90D5240(a1, a2, a3, v24, a5, (uint64_t)v19, v25, v26, a9, v9, v16, v15);

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a6);
  return v21;
}

void *SessionManager.__allocating_init(accessQueue:accessGroup:sessionGroupManager:options:flushProcessor:timestampConfigurationProvider:privacyValidationProvider:diagnosticsConsentProvider:summaryEventConfiguration:timeDurationGranularity:)(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10)
{
  uint64_t v18 = *(void *)(a6 + 24);
  uint64_t v17 = *(void *)(a6 + 32);
  uint64_t v19 = __swift_mutable_project_boxed_opaque_existential_1(a6, v18);
  uint64_t v20 = sub_1A908BFBC(a1, a2, a3, a4, a5, v19, a7, a8, a9, a10, v10, v18, v17);

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a6);
  return v20;
}

void *SessionManager.init(accessQueue:accessGroup:sessionGroupManager:options:flushProcessor:timestampConfigurationProvider:privacyValidationProvider:diagnosticsConsentProvider:summaryEventConfiguration:timeDurationGranularity:)(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v25 = a4;
  long long v24 = a9;
  uint64_t v17 = *(void *)(a6 + 24);
  uint64_t v16 = *(void *)(a6 + 32);
  uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1(a6, v17);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v21 + 16))(v20);
  unint64_t v22 = sub_1A909C648(a1, a2, a3, v25, a5, (uint64_t)v20, v26, v27, v24, *((uint64_t *)&v24 + 1), a10, v10, v17, v16);

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a6);
  return v22;
}

uint64_t SessionManager.deinit()
{
  swift_release();
  swift_release();
  sub_1A90A43B4(v0 + 32);

  swift_release();
  sub_1A90A1B84(v0 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state, type metadata accessor for SessionManager.SessionState);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider);
  return v0;
}

uint64_t SessionManager.__deallocating_deinit()
{
  SessionManager.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t SessionManager.push<A>(_:traits:submitEventQueues:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return SessionManager.push<A>(_:traits:file:line:)(a1, a2, a4, a5, a6, a7, a8);
}

uint64_t SessionManager.flush(callbackQueue:completion:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 48);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = v8;
  v9[3] = a1;
  v9[4] = a2;
  v9[5] = a3;
  swift_retain();
  id v10 = a1;
  sub_1A90A0418(a2);
  sub_1A908CAA8(v7, (uint64_t)sub_1A9090C14, (uint64_t)v9);
  swift_release();

  return swift_release();
}

uint64_t SessionManager.end(endDate:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = a3;
  uint64_t v6 = sub_1A916AC90();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = *(void *)(v3 + 48);
  sub_1A90F82A4();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v12 = (uint64_t *)(v11 + ((v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = v16;
  uint64_t *v12 = a2;
  v12[1] = v13;
  swift_retain();
  sub_1A90A0418(a2);
  sub_1A908CAA8(v9, (uint64_t)sub_1A90D59BC, v11);
  return swift_release();
}

uint64_t sub_1A90D2D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = (void *)swift_allocObject();
  long long v8[2] = v7;
  _OWORD v8[3] = a3;
  void v8[4] = a4;
  swift_retain();
  sub_1A90A0418(a3);
  sub_1A90D2F20(a2, (uint64_t (*)(uint64_t))sub_1A90D62A8, (uint64_t)v8);
  swift_release();

  return swift_release();
}

void sub_1A90D2E38(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = sub_1A916AE10();
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v7 = *(id *)(Strong + 48);
    swift_release();
    sub_1A916ADD0();
    sub_1A90F844C((uint64_t)v5);
  }
  if (a2) {
    a2();
  }
}

uint64_t sub_1A90D2F20(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v86 = a3;
  uint64_t v84 = a1;
  uint64_t v88 = type metadata accessor for Session();
  MEMORY[0x1F4188790](v88);
  uint64_t v85 = (void *)((char *)v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v89 = type metadata accessor for SessionObserverChange();
  MEMORY[0x1F4188790](v89);
  uint64_t v8 = (void *)((char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for SessionManager.SessionState(0);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v83 = (uint64_t)v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (void **)((char *)v75 - v12);
  uint64_t v14 = sub_1A916AE70();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (void *)((char *)v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v82 = *(void *)(v4 + 48);
  uint64_t v18 = *(void **)(v82 + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v17 = v18;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E4FBCBF0], v14);
  id v19 = v18;
  LOBYTE(v18) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) == 0)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  uint64_t v21 = v4 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
  swift_beginAccess();
  sub_1A9098DA0(v21, (uint64_t)v13, type metadata accessor for SessionManager.SessionState);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result)
  {
    if (result == 1) {
      uint64_t result = sub_1A90A1B84((uint64_t)v13, type metadata accessor for SessionManager.SessionState);
    }
    if (a2) {
      return a2(result);
    }
    return result;
  }
  uint64_t v76 = a2;
  unint64_t v22 = *v13;
  *uint64_t v8 = *v13;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  sub_1A9090764((uint64_t)v8);
  uint64_t v81 = type metadata accessor for SessionObserverChange;
  sub_1A90A1B84((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SessionObserverChange);
  uint64_t v80 = v22[2];
  uint64_t v77 = v22[3];
  uint64_t v23 = *(void *)((char *)v22 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier);
  uint64_t v24 = *(void *)((char *)v22 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier + 8);
  uint64_t v78 = v9;
  uint64_t v79 = v23;
  uint64_t v87 = v4;
  uint64_t v25 = v22[4];
  unint64_t v26 = v22[5];
  uint64_t v27 = (char *)v22 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_startDate;
  uint64_t v28 = v85;
  uint64_t v29 = (char *)v85 + *(int *)(v88 + 28);
  uint64_t v30 = sub_1A916AC90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v29, v27, v30);
  swift_bridgeObjectRetain();
  uint64_t v31 = v77;
  swift_bridgeObjectRetain();
  sub_1A908ED3C(v25, v26);
  v75[1] = v22;
  uint64_t v32 = sub_1A908F034((uint64_t)v22);
  *uint64_t v28 = v80;
  v28[1] = v31;
  v28[2] = v79;
  v28[3] = v24;
  uint64_t v34 = v87;
  uint64_t v33 = v88;
  void v28[4] = v25;
  v28[5] = v26;
  *(void *)((char *)v28 + *(int *)(v33 + 32)) = v32;
  uint64_t v35 = v83;
  sub_1A9098DA0((uint64_t)v28, v83, (uint64_t (*)(void))type metadata accessor for Session);
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  sub_1A909D648(v35, v21);
  swift_endAccess();
  sub_1A90AFBB0((uint64_t)v28, v84);
  sub_1A9098DA0((uint64_t)v28, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Session);
  swift_storeEnumTagMultiPayload();
  sub_1A9090764((uint64_t)v8);
  sub_1A90A1B84((uint64_t)v8, (uint64_t (*)(void))v81);
  unsigned int v36 = (uint64_t *)(v34 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_dataStacks);
  swift_beginAccess();
  uint64_t v37 = *v36;
  uint64_t v38 = *(void *)(*v36 + 64);
  uint64_t v88 = *v36 + 64;
  uint64_t v39 = 1 << *(unsigned char *)(v37 + 32);
  uint64_t v40 = -1;
  if (v39 < 64) {
    uint64_t v40 = ~(-1 << v39);
  }
  unint64_t v41 = v40 & v38;
  int64_t v89 = (unint64_t)(v39 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v42 = 0;
  while (1)
  {
    if (v41)
    {
      unint64_t v43 = __clz(__rbit64(v41));
      v41 &= v41 - 1;
      unint64_t v44 = v43 | (v42 << 6);
      goto LABEL_31;
    }
    int64_t v45 = v42 + 1;
    if (__OFADD__(v42, 1))
    {
      __break(1u);
      goto LABEL_53;
    }
    if (v45 >= v89) {
      goto LABEL_50;
    }
    unint64_t v46 = *(void *)(v88 + 8 * v45);
    ++v42;
    if (!v46)
    {
      int64_t v42 = v45 + 1;
      if (v45 + 1 >= v89) {
        goto LABEL_50;
      }
      unint64_t v46 = *(void *)(v88 + 8 * v42);
      if (!v46)
      {
        int64_t v42 = v45 + 2;
        if (v45 + 2 >= v89) {
          goto LABEL_50;
        }
        unint64_t v46 = *(void *)(v88 + 8 * v42);
        if (!v46)
        {
          int64_t v42 = v45 + 3;
          if (v45 + 3 >= v89) {
            goto LABEL_50;
          }
          unint64_t v46 = *(void *)(v88 + 8 * v42);
          if (!v46)
          {
            int64_t v42 = v45 + 4;
            if (v45 + 4 >= v89) {
              goto LABEL_50;
            }
            unint64_t v46 = *(void *)(v88 + 8 * v42);
            if (!v46) {
              break;
            }
          }
        }
      }
    }
LABEL_30:
    unint64_t v41 = (v46 - 1) & v46;
    unint64_t v44 = __clz(__rbit64(v46)) + (v42 << 6);
LABEL_31:
    uint64_t v48 = (uint64_t *)(*(void *)(v37 + 48) + 16 * v44);
    uint64_t v49 = *v48;
    uint64_t v50 = v48[1];
    swift_beginAccess();
    uint64_t v51 = *v36;
    uint64_t v52 = *(void *)(*v36 + 16);
    swift_bridgeObjectRetain();
    if (v52 && (unint64_t v53 = sub_1A90A1D98(v49, v50), (v54 & 1) != 0))
    {
      sub_1A90A0DC8(*(void *)(v51 + 56) + 40 * v53, (uint64_t)v97);
      sub_1A908EC8C(v97, (uint64_t)v98);
      swift_endAccess();
      uint64_t v55 = v99;
      uint64_t v56 = v100;
      __swift_project_boxed_opaque_existential_1(v98, v99);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v56 + 24))(&v91, v55, v56);
      if (*((void *)&v91 + 1))
      {
        v97[2] = v93;
        v97[3] = v94;
        v97[4] = v95;
        v97[5] = v96;
        v97[0] = v91;
        v97[1] = v92;
        uint64_t v57 = *(void *)(*((void *)&v94 + 1) + 16);
        uint64_t v34 = v87;
        if (v57)
        {
          os_log_type_t v58 = (unsigned __int8 *)(*((void *)&v94 + 1) + 32);
          while (*v58++)
          {
            if (!--v57) {
              goto LABEL_48;
            }
          }
          uint64_t v60 = v99;
          uint64_t v61 = v100;
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v98, v99);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v61 + 32))(&v91, v60, v61);
          sub_1A908A13C((uint64_t)&v91, &qword_1EB689380);
          uint64_t v62 = v99;
          uint64_t v63 = v100;
          __swift_project_boxed_opaque_existential_1(v98, v99);
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v63 + 8))(v62, v63) & 1) == 0)
          {
            swift_beginAccess();
            sub_1A90A0DC8((uint64_t)v98, (uint64_t)&v91);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v90 = *v36;
            *unsigned int v36 = 0x8000000000000000;
            sub_1A908D8F8((uint64_t)&v91, v49, v50, isUniquelyReferenced_nonNull_native);
            *unsigned int v36 = v90;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_endAccess();
            sub_1A90A0EAC((uint64_t)v97);
            uint64_t v34 = v87;
            goto LABEL_49;
          }
          swift_beginAccess();
          swift_bridgeObjectRetain();
          unint64_t v64 = sub_1A90A1D98(v49, v50);
          char v66 = v65;
          swift_bridgeObjectRelease();
          uint64_t v34 = v87;
          if (v66)
          {
            char v67 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v68 = *v36;
            uint64_t v90 = *v36;
            *unsigned int v36 = 0x8000000000000000;
            if ((v67 & 1) == 0)
            {
              sub_1A90C00D4();
              uint64_t v68 = v90;
            }
            swift_bridgeObjectRelease();
            sub_1A908EC8C((long long *)(*(void *)(v68 + 56) + 40 * v64), (uint64_t)&v91);
            sub_1A914D73C(v64, v68);
            *unsigned int v36 = v68;
            swift_bridgeObjectRelease();
          }
          else
          {
            *(void *)&long long v93 = 0;
            long long v91 = 0u;
            long long v92 = 0u;
          }
          swift_endAccess();
          sub_1A908ED50((uint64_t)&v91);
        }
LABEL_48:
        sub_1A90A0EAC((uint64_t)v97);
        swift_bridgeObjectRelease();
LABEL_49:
        uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v98);
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1A908A13C((uint64_t)&v91, &qword_1EB689380);
        uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v98);
        uint64_t v34 = v87;
      }
    }
    else
    {
      swift_endAccess();
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  int64_t v47 = v45 + 5;
  if (v47 >= v89)
  {
LABEL_50:
    swift_release();
    os_log_t v70 = *(void **)(*(void *)(v34 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_flushProcessor) + 24);
    uint64_t v71 = swift_allocObject();
    uint64_t v72 = (uint64_t)v76;
    uint64_t v73 = v86;
    *(void *)(v71 + 16) = v76;
    *(void *)(v71 + 24) = v73;
    id v74 = v70;
    sub_1A90A0418(v72);
    sub_1A908CAA8(v82, (uint64_t)sub_1A90D61E8, v71);
    swift_release();
    swift_bridgeObjectRelease();

    swift_release();
    return sub_1A90A1B84((uint64_t)v85, (uint64_t (*)(void))type metadata accessor for Session);
  }
  unint64_t v46 = *(void *)(v88 + 8 * v47);
  if (v46)
  {
    int64_t v42 = v47;
    goto LABEL_30;
  }
  while (1)
  {
    int64_t v42 = v47 + 1;
    if (__OFADD__(v47, 1)) {
      break;
    }
    if (v42 >= v89) {
      goto LABEL_50;
    }
    unint64_t v46 = *(void *)(v88 + 8 * v42);
    ++v47;
    if (v46) {
      goto LABEL_30;
    }
  }
LABEL_54:
  __break(1u);
  return result;
}

Swift::Void __swiftcall SessionManager.endSync()()
{
}

Swift::Void __swiftcall SessionManager.endSync(timeout:)(Swift::Double timeout)
{
  uint64_t v3 = sub_1A916AC90();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  int64_t v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v36 - v7;
  uint64_t v9 = sub_1A916AE40();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v36 - v14;
  uint64_t v16 = v1;
  uint64_t v17 = *(void *)(v1 + 56);
  sub_1A916AE30();
  uint64_t v40 = v17;
  sub_1A916B3E0();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v41 = v9;
  unint64_t v43 = v18;
  v18(v15, v9);
  if (sub_1A916AD90())
  {
    sub_1A916AC80();
    id v19 = dispatch_group_create();
    uint64_t v38 = v13;
    uint64_t v20 = v19;
    dispatch_group_enter(v19);
    uint64_t v37 = *(void *)(v16 + 48);
    sub_1A90F82A4();
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    unint64_t v22 = v42;
    uint64_t v39 = v8;
    v21(v42, v8, v3);
    unint64_t v23 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v24 = (char *)v3;
    unint64_t v25 = (v5 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v16;
    uint64_t v27 = *(void (**)(unint64_t, char *, char *))(v4 + 32);
    int64_t v42 = v24;
    v27(v26 + v23, v22, v24);
    *(void *)(v26 + v25) = v20;
    swift_retain();
    uint64_t v28 = v20;
    sub_1A908CAA8(v37, (uint64_t)sub_1A90D5B38, v26);
    swift_release();
    uint64_t v29 = v38;
    sub_1A916AE30();
    MEMORY[0x1AD0ED6D0](v29, timeout);
    uint64_t v30 = v41;
    uint64_t v31 = v43;
    v43(v29, v41);
    LOBYTE(v29) = sub_1A916B3E0();
    v31(v15, v30);
    if (v29)
    {
      uint64_t v33 = v39;
      uint64_t v34 = v42;
      if (qword_1EB68ACE8 != -1) {
        swift_once();
      }
      id v35 = (id)qword_1EB689AA0;
      sub_1A916B3B0();
      sub_1A916AD30();

      (*(void (**)(char *, char *))(v4 + 8))(v33, v34);
    }
    else
    {
      (*(void (**)(char *, char *))(v4 + 8))(v39, v42);
    }
  }
  else
  {
    if (qword_1EB68ACE8 != -1) {
      swift_once();
    }
    id v32 = (id)qword_1EB689AA0;
    sub_1A916B3B0();
    sub_1A916AD30();
  }
}

uint64_t sub_1A90D3D58(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = v5;
  id v7 = a3;
  swift_retain();
  sub_1A90D2F20(a2, (uint64_t (*)(uint64_t))sub_1A90D6258, v6);
  swift_release();

  return swift_release();
}

void sub_1A90D3E1C(NSObject *a1)
{
  uint64_t v2 = sub_1A916AE10();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_group_leave(a1);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v6 = *(id *)(Strong + 48);
    swift_release();
    sub_1A916ADD0();
    sub_1A90F844C((uint64_t)v4);
  }
}

uint64_t sub_1A90D3EF0()
{
  uint64_t v1 = (unint64_t *)sub_1A916AE70();
  uint64_t v2 = *(v1 - 1);
  MEMORY[0x1F4188790](v1);
  unint64_t v4 = (unint64_t)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(*(void *)(v0 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *(void *)unint64_t v4 = v5;
  (*(void (**)(unint64_t, void, unint64_t *))(v2 + 104))(v4, *MEMORY[0x1E4FBCBF0], v1);
  id v6 = v5;
  LOBYTE(v5) = sub_1A916AE90();
  (*(void (**)(unint64_t, unint64_t *))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t result = sub_1A916B7E0();
    uint64_t v7 = result;
    if (result) {
      goto LABEL_4;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_17;
  }
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_observers);
  swift_beginAccess();
  unint64_t v4 = *v1;
  uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  if (v4 >> 62) {
    goto LABEL_15;
  }
  uint64_t v7 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v7) {
    goto LABEL_16;
  }
LABEL_4:
  if (v7 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v7; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0)
    {
      uint64_t v10 = MEMORY[0x1AD0EDEF0](i, v4);
    }
    else
    {
      uint64_t v10 = *(void *)(v4 + 8 * i + 32);
      swift_retain();
    }
    if (MEMORY[0x1AD0EEDF0](v10 + 16))
    {
      swift_unknownObjectRelease();
      sub_1A916B6E0();
      sub_1A916B720();
      sub_1A916B730();
      sub_1A916B6F0();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = v13;
LABEL_17:
  *uint64_t v1 = (unint64_t)v11;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v12 = swift_retain();
  MEMORY[0x1AD0ED9C0](v12);
  if (*(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1A916B1D0();
  }
  sub_1A916B200();
  sub_1A916B1B0();
  return swift_endAccess();
}

uint64_t sub_1A90D41B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_observers);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (*v3 >> 62)
  {
LABEL_18:
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1A916B7E0();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      uint64_t v12 = v3;
      unint64_t v6 = 0;
      while (1)
      {
        if ((v4 & 0xC000000000000001) != 0)
        {
          uint64_t v7 = MEMORY[0x1AD0EDEF0](v6, v4);
          uint64_t v3 = (void *)(v6 + 1);
          if (__OFADD__(v6, 1))
          {
LABEL_15:
            __break(1u);
LABEL_16:
            uint64_t v3 = v12;
            uint64_t v10 = v13;
            goto LABEL_20;
          }
        }
        else
        {
          if (v6 >= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_18;
          }
          uint64_t v7 = *(void *)(v4 + 8 * v6 + 32);
          swift_retain();
          uint64_t v3 = (void *)(v6 + 1);
          if (__OFADD__(v6, 1)) {
            goto LABEL_15;
          }
        }
        uint64_t v8 = MEMORY[0x1AD0EEDF0](v7 + 16);
        if (v8 && (uint64_t v9 = v8, swift_unknownObjectRelease(), v9 == a2) || !MEMORY[0x1AD0EEDF0](v7 + 16))
        {
          swift_release();
        }
        else
        {
          swift_unknownObjectRelease();
          sub_1A916B6E0();
          sub_1A916B720();
          sub_1A916B730();
          sub_1A916B6F0();
        }
        ++v6;
        if (v3 == (void *)v5) {
          goto LABEL_16;
        }
      }
    }
  }
  uint64_t v10 = MEMORY[0x1E4FBC860];
LABEL_20:
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *uint64_t v3 = v10;
  return swift_bridgeObjectRelease();
}

uint64_t AccessSessionManager.isActive.getter()
{
  uint64_t v1 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A916AE70();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void **)(*(void *)(v8 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v7 = v9;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
  id v10 = v9;
  LOBYTE(v9) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if (v9)
  {
    uint64_t v12 = v8 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
    swift_beginAccess();
    sub_1A9098DA0(v12, (uint64_t)v3, type metadata accessor for SessionManager.SessionState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1) {
        sub_1A90A1B84((uint64_t)v3, type metadata accessor for SessionManager.SessionState);
      }
      return 0;
    }
    else
    {
      swift_release();
      return 1;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t AccessSessionManager.activeKind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1A916AE70();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void **)(*(void *)(v10 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v9 = v11;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBF0], v6);
  id v12 = v11;
  LOBYTE(v11) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if (v11)
  {
    uint64_t v14 = v10 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
    swift_beginAccess();
    sub_1A9098DA0(v14, (uint64_t)v5, type metadata accessor for SessionManager.SessionState);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result)
    {
      if (result == 1) {
        uint64_t result = sub_1A90A1B84((uint64_t)v5, type metadata accessor for SessionManager.SessionState);
      }
      uint64_t v15 = 0;
      unint64_t v16 = 3;
    }
    else
    {
      uint64_t v17 = *v5;
      uint64_t v15 = *(void *)(v17 + 32);
      unint64_t v16 = *(void *)(v17 + 40);
      sub_1A908ED3C(v15, v16);
      uint64_t result = swift_release();
    }
    *a1 = v15;
    a1[1] = v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A90D4790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A908CF14(a1, a2, a3, a4, a5);
}

Swift::Void __swiftcall AccessSessionManager.flush()()
{
  uint64_t v0 = qword_1EB688398;
  swift_retain();
  if (v0 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EB687E08;
  sub_1A9090C9C((uint64_t)v1, 0, 0);
  swift_release();
}

uint64_t AccessSessionManager.push<A>(_:traits:submitEventQueues:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return AccessSessionManager.push<A>(_:traits:file:line:)(a1, a2, a4, a5, a6);
}

BOOL AccessSessionManager.isDiagnosticSubmissionAllowed.getter()
{
  sub_1A9095B68(&v2);
  return (v2 & 1) == 0 && v2 != 2;
}

uint64_t AccessSessionManager.deinit()
{
  swift_release();
  return v0;
}

void *sub_1A90D48BC(void *a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13)
{
  unint64_t v44 = a4;
  uint64_t v49 = a13;
  uint64_t v50 = a10;
  uint64_t v46 = a9;
  uint64_t v47 = a5;
  uint64_t v48 = a12;
  uint64_t v19 = type metadata accessor for SummaryEventConfiguration(0);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v45 = (uint64_t)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DiagnosticsConsentProvider(0);
  uint64_t v22 = v21 - 8;
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v53 = &type metadata for TimestampJitter;
  char v54 = &protocol witness table for TimestampJitter;
  v51[0] = a6;
  v51[1] = a7;
  char v52 = a8 & 1;
  a11[5] = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for SessionManager.SessionState(0);
  swift_storeEnumTagMultiPayload();
  *(void *)((char *)a11 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_dataStacks) = MEMORY[0x1E4FBC868];
  uint64_t v25 = MEMORY[0x1E4FBC860];
  *(void *)((char *)a11 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_observers) = MEMORY[0x1E4FBC860];
  a11[6] = a1;
  a11[7] = a2;
  a11[8] = a3;
  type metadata accessor for ProcessorManager();
  uint64_t v26 = (void *)swift_allocObject();
  v26[3] = 0;
  swift_unknownObjectWeakInit();
  v26[5] = a2;
  v26[6] = v25;
  v26[4] = a1;
  a11[3] = v26;
  uint64_t v27 = type metadata accessor for Tracker(0);
  unint64_t v28 = v44;
  id v29 = a1;
  id v30 = a2;
  id v31 = v29;
  id v32 = v30;
  id v33 = v31;
  id v34 = v32;
  swift_retain();
  uint64_t v35 = v46;
  swift_unknownObjectRetain();
  sub_1A916ACB0();
  uint64_t v36 = &v24[*(int *)(v22 + 28)];
  *(void *)uint64_t v36 = sub_1A90A80E4;
  *((void *)v36 + 1) = 0;
  uint64_t v37 = v45;
  sub_1A9098DA0(v50, v45, type metadata accessor for SummaryEventConfiguration);
  a11[2] = sub_1A909CBDC(1953460082, 0xE400000000000000, v33, v34, (v28 >> 1) & 1, v35, (uint64_t)v24, v37, v27, v48, v49);
  *(void *)((char *)a11 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_options) = v28;
  uint64_t v38 = v47;
  *(void *)((char *)a11 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_flushProcessor) = v47;
  sub_1A90A0DC8((uint64_t)v51, (uint64_t)a11 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider);
  *(_WORD *)((char *)a11 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timeDurationGranularity) = 0;
  swift_beginAccess();
  swift_weakAssign();
  swift_retain();
  swift_retain();
  uint64_t v39 = swift_retain();
  sub_1A909CA74(v39, (uint64_t)&off_1EFF9DB78);
  swift_release();
  swift_release();
  uint64_t v40 = a11[3];
  *(void *)(v40 + 24) = &off_1EFF9DBD8;
  swift_unknownObjectWeakAssign();
  uint64_t v41 = *(void *)(v40 + 32);
  int64_t v42 = (void *)swift_allocObject();
  v42[2] = v40;
  v42[3] = v38;
  id v42[4] = &protocol witness table for FlushProcessor;
  swift_retain_n();
  swift_retain();
  sub_1A908CAA8(v41, (uint64_t)sub_1A90D6440, (uint64_t)v42);
  swift_release();
  swift_release();
  sub_1A90A1B84(v50, type metadata accessor for SummaryEventConfiguration);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
  return a11;
}

void *sub_1A90D4CB0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v25 = a8;
  uint64_t v26 = a7;
  uint64_t v24 = a1;
  uint64_t v12 = type metadata accessor for SummaryEventConfiguration(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)a4;
  uint64_t v16 = *(void *)(a4 + 8);
  char v17 = *(unsigned char *)(a4 + 16);
  dispatch_group_t v18 = dispatch_group_create();
  if (qword_1EB6887D0 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v12, (uint64_t)qword_1EB688098);
  sub_1A9098DA0(v19, (uint64_t)v14, type metadata accessor for SummaryEventConfiguration);
  uint64_t v20 = (void *)swift_allocObject();
  uint64_t v21 = sub_1A90D48BC(v24, v18, a2, 0, a3, v15, v16, v17, a5, (uint64_t)v14, v20, v26, v25);

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v21;
}

void *sub_1A90D4E3C(void *a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14)
{
  uint64_t v43 = a3;
  unint64_t v44 = a4;
  uint64_t v46 = a14;
  uint64_t v47 = a13;
  uint64_t v45 = a9;
  uint64_t v48 = a10;
  uint64_t v49 = a11;
  uint64_t v21 = type metadata accessor for SummaryEventConfiguration(0);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for DiagnosticsConsentProvider(0);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v43 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v52 = &type metadata for TimestampJitter;
  unint64_t v53 = &protocol witness table for TimestampJitter;
  v50[0] = a6;
  v50[1] = a7;
  char v51 = a8 & 1;
  a12[5] = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for SessionManager.SessionState(0);
  swift_storeEnumTagMultiPayload();
  *(void *)((char *)a12 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_dataStacks) = MEMORY[0x1E4FBC868];
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)((char *)a12 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_observers) = MEMORY[0x1E4FBC860];
  a12[6] = a1;
  a12[7] = a2;
  a12[8] = a3;
  type metadata accessor for ProcessorManager();
  unint64_t v28 = (void *)swift_allocObject();
  v28[3] = 0;
  swift_unknownObjectWeakInit();
  v28[5] = a2;
  v28[6] = v27;
  void v28[4] = a1;
  a12[3] = v28;
  uint64_t v29 = type metadata accessor for Tracker(0);
  unint64_t v30 = v44;
  sub_1A9098DA0(v48, (uint64_t)v26, type metadata accessor for DiagnosticsConsentProvider);
  sub_1A9098DA0(v49, (uint64_t)v23, type metadata accessor for SummaryEventConfiguration);
  id v31 = a1;
  id v32 = a2;
  id v33 = v31;
  id v34 = v32;
  id v35 = v33;
  id v36 = v34;
  swift_retain();
  uint64_t v37 = v45;
  swift_unknownObjectRetain();
  a12[2] = sub_1A909CBDC(1953460082, 0xE400000000000000, v35, v36, (v30 >> 1) & 1, v37, (uint64_t)v26, (uint64_t)v23, v29, v47, v46);
  *(void *)((char *)a12 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_options) = v30;
  *(void *)((char *)a12 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_flushProcessor) = a5;
  sub_1A90A0DC8((uint64_t)v50, (uint64_t)a12 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider);
  *(_WORD *)((char *)a12 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timeDurationGranularity) = 0;
  swift_beginAccess();
  swift_weakAssign();
  swift_retain();
  swift_retain();
  uint64_t v38 = swift_retain();
  sub_1A909CA74(v38, (uint64_t)&off_1EFF9DB78);
  swift_release();
  swift_release();
  uint64_t v39 = a12[3];
  *(void *)(v39 + 24) = &off_1EFF9DBD8;
  swift_unknownObjectWeakAssign();
  uint64_t v40 = *(void *)(v39 + 32);
  uint64_t v41 = (void *)swift_allocObject();
  _OWORD v41[2] = v39;
  v41[3] = a5;
  v41[4] = &protocol witness table for FlushProcessor;
  swift_retain_n();
  swift_retain();
  sub_1A908CAA8(v40, (uint64_t)sub_1A90D6440, (uint64_t)v41);
  swift_release();
  swift_release();
  sub_1A90A1B84(v49, type metadata accessor for SummaryEventConfiguration);
  sub_1A90A1B84(v48, type metadata accessor for DiagnosticsConsentProvider);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
  return a12;
}

void *sub_1A90D5240(void *a1, void *a2, uint64_t a3, unint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12)
{
  uint64_t v47 = a7;
  uint64_t v44 = a3;
  uint64_t v45 = a5;
  uint64_t v48 = a9;
  uint64_t v49 = a8;
  uint64_t v16 = type metadata accessor for SummaryEventConfiguration(0);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v46 = (uint64_t)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DiagnosticsConsentProvider(0);
  uint64_t v19 = v18 - 8;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50[3] = a11;
  v50[4] = a12;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v50);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32))(boxed_opaque_existential_1, a6, a11);
  unint64_t v23 = *a4;
  a10[5] = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for SessionManager.SessionState(0);
  swift_storeEnumTagMultiPayload();
  *(void *)((char *)a10 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_dataStacks) = MEMORY[0x1E4FBC868];
  uint64_t v24 = MEMORY[0x1E4FBC860];
  *(void *)((char *)a10 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_observers) = MEMORY[0x1E4FBC860];
  a10[6] = a1;
  a10[7] = a2;
  a10[8] = v44;
  type metadata accessor for ProcessorManager();
  uint64_t v25 = (void *)swift_allocObject();
  v25[3] = 0;
  swift_unknownObjectWeakInit();
  void v25[5] = a2;
  v25[6] = v24;
  v25[4] = a1;
  a10[3] = v25;
  uint64_t v26 = type metadata accessor for Tracker(0);
  id v27 = a1;
  id v28 = a2;
  id v29 = v27;
  id v30 = v28;
  id v31 = v29;
  id v32 = v30;
  swift_retain();
  uint64_t v33 = v47;
  swift_unknownObjectRetain();
  sub_1A916ACB0();
  id v34 = &v21[*(int *)(v19 + 28)];
  *(void *)id v34 = sub_1A90A80E4;
  *((void *)v34 + 1) = 0;
  uint64_t v35 = v48;
  uint64_t v36 = v46;
  sub_1A9098DA0(v48, v46, type metadata accessor for SummaryEventConfiguration);
  uint64_t ObjectType = swift_getObjectType();
  a10[2] = sub_1A909CBDC(1953460082, 0xE400000000000000, v31, v32, (v23 >> 1) & 1, v33, (uint64_t)v21, v36, v26, ObjectType, v49);
  *(void *)((char *)a10 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_options) = v23;
  uint64_t v38 = v45;
  *(void *)((char *)a10 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_flushProcessor) = v45;
  sub_1A90A0DC8((uint64_t)v50, (uint64_t)a10 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider);
  *(_WORD *)((char *)a10 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timeDurationGranularity) = 0;
  swift_beginAccess();
  swift_weakAssign();
  swift_retain();
  swift_retain();
  uint64_t v39 = swift_retain();
  sub_1A909CA74(v39, (uint64_t)&off_1EFF9DB78);
  swift_release();
  swift_release();
  uint64_t v40 = a10[3];
  *(void *)(v40 + 24) = &off_1EFF9DBD8;
  swift_unknownObjectWeakAssign();
  uint64_t v41 = *(void *)(v40 + 32);
  int64_t v42 = (void *)swift_allocObject();
  v42[2] = v40;
  v42[3] = v38;
  id v42[4] = &protocol witness table for FlushProcessor;
  swift_retain_n();
  swift_retain();
  sub_1A908CAA8(v41, (uint64_t)sub_1A90D6440, (uint64_t)v42);
  swift_release();
  swift_release();
  sub_1A90A1B84(v35, type metadata accessor for SummaryEventConfiguration);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
  return a10;
}

void *sub_1A90D5648(void *a1, void *a2, uint64_t a3, unint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  uint64_t v16 = *(void *)(a11 - 8);
  MEMORY[0x1F4188790](a10);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (void *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a6, a11);
  return sub_1A90D5240(a1, a2, a3, v21, v22, (uint64_t)v18, v23, v24, a9, v19, a11, a12);
}

uint64_t sub_1A90D5770()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A90D57B0()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A90D57EC()
{
  uint64_t v1 = sub_1A916AC90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  swift_release();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 72) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = v3 | 7;
  uint64_t v6 = (v3 + 80) & ~v3;
  uint64_t v7 = v6 + v4;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v6, v1);

  return MEMORY[0x1F4186498](v0, v7, v5);
}

uint64_t sub_1A90D58D8()
{
  uint64_t v1 = sub_1A916AC90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(void *)(v0 + v5)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, v5 + 16, v3 | 7);
}

uint64_t sub_1A90D59BC()
{
  uint64_t v1 = *(void *)(sub_1A916AC90() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + v2;
  unint64_t v5 = (uint64_t *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];

  return sub_1A90D2D64(v3, v4, v6, v7);
}

uint64_t sub_1A90D5A50()
{
  uint64_t v1 = sub_1A916AC90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v6 + 8, v5);
}

uint64_t sub_1A90D5B38()
{
  uint64_t v1 = *(void *)(sub_1A916AC90() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1A90D3D58(v3, v0 + v2, v4);
}

unint64_t sub_1A90D5BCC()
{
  unint64_t result = qword_1E97B1570;
  if (!qword_1E97B1570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1570);
  }
  return result;
}

unint64_t sub_1A90D5C24()
{
  unint64_t result = qword_1E97B1578;
  if (!qword_1E97B1578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1578);
  }
  return result;
}

uint64_t sub_1A90D5C78()
{
  return type metadata accessor for SessionManager(0);
}

uint64_t method lookup function for SessionManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SessionManager);
}

uint64_t dispatch thunk of SessionManager.__allocating_init(accessQueue:accessGroup:sessionGroupManager:options:flushProcessor:timestampConfigurationProvider:privacyValidationProvider:summaryEventConfiguration:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of SessionManager.__allocating_init(accessQueue:accessGroup:sessionGroupManager:options:flushProcessor:timestampConfigurationProvider:privacyValidationProvider:diagnosticsConsentProvider:summaryEventConfiguration:timeDurationGranularity:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t method lookup function for AccessSessionManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AccessSessionManager);
}

uint64_t *sub_1A90D5CF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      uint64_t v11 = a2 + 4;
      unint64_t v12 = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v12 >= 3)
      {
        a1[4] = *v11;
        a1[5] = v12;
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)a1 + 2) = *(_OWORD *)v11;
      }
      uint64_t v13 = type metadata accessor for Session();
      uint64_t v14 = *(int *)(v13 + 28);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_1A916AC90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      *(uint64_t *)((char *)a1 + *(int *)(v13 + 32)) = *(uint64_t *)((char *)a2 + *(int *)(v13 + 32));
      swift_bridgeObjectRetain();
      goto LABEL_11;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      swift_retain();
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

void *sub_1A90D5E88(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A90A1B84((uint64_t)a1, type metadata accessor for SessionManager.SessionState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      unint64_t v7 = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v7 >= 3)
      {
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      }
      uint64_t v8 = type metadata accessor for Session();
      uint64_t v9 = *(int *)(v8 + 28);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_1A916AC90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      *(void *)((char *)a1 + *(int *)(v8 + 32)) = *(void *)((char *)a2 + *(int *)(v8 + 32));
      swift_bridgeObjectRetain();
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      swift_retain();
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1A90D6014(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    uint64_t v7 = type metadata accessor for Session();
    uint64_t v8 = *(int *)(v7 + 28);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1A916AC90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    *(void *)((char *)a1 + *(int *)(v7 + 32)) = *(void *)((char *)a2 + *(int *)(v7 + 32));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1A90D6108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_1A90D6130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1A90D615C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1A90D6170()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A90D61A8()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A90D61E8()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_1A90D6218()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1A90D6258()
{
  sub_1A90D3E1C(*(NSObject **)(v0 + 16));
}

uint64_t sub_1A90D6260()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1A90D62A8()
{
  sub_1A90D2E38(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_1A90D62B4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for SessionData();
  swift_getWitnessTable();
  uint64_t v3 = *(void *)(type metadata accessor for PushEvent() - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 40) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = ((((((*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v5 + *(int *)(v2 + 36), v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, v7, v6);
}

uint64_t assignWithCopy for LoggingEventProcessorFormat(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1) {
      __swift_destroy_boxed_opaque_existential_0(a1);
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      uint64_t v6 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      long long v7 = *a2;
      long long v8 = a2[1];
      *(_OWORD *)(a1 + 25) = *(long long *)((char *)a2 + 25);
      *(_OWORD *)a1 = v7;
      *(_OWORD *)(a1 + 16) = v8;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 0;
    }
  }
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for LoggingEventProcessorFormat(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1) {
      __swift_destroy_boxed_opaque_existential_0(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for LoggingEventProcessorFormat(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LoggingEventProcessorFormat(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A90D6670(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

ValueMetadata *type metadata accessor for SummaryEventDatabase()
{
  return &type metadata for SummaryEventDatabase;
}

uint64_t sub_1A90D669C(void *a1, uint64_t a2)
{
  sub_1A90D6CB8(0, &qword_1E97B15A8, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A90D6BA8();
  sub_1A916BB50();
  v10[1] = a2;
  sub_1A90D6BFC();
  sub_1A90D6D1C(&qword_1E97B15B0, (void (*)(void))sub_1A90D6D94);
  sub_1A916B960();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A90D6834()
{
  return 0x615473746E657665;
}

uint64_t sub_1A90D6854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x615473746E657665 && a2 == 0xEB00000000656C62)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A916B9E0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_1A90D6904(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1A90D6910(uint64_t a1)
{
  unint64_t v2 = sub_1A90D6BA8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A90D694C(uint64_t a1)
{
  unint64_t v2 = sub_1A90D6BA8();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1A90D6988@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1A90D69D0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1A90D69B4(void *a1)
{
  return sub_1A90D669C(a1, *v1);
}

void *sub_1A90D69D0(void *a1)
{
  sub_1A90D6CB8(0, &qword_1E97B1580, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)v10 - v6;
  long long v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A90D6BA8();
  sub_1A916BB20();
  if (!v1)
  {
    sub_1A90D6BFC();
    sub_1A90D6D1C(&qword_1E97B1598, (void (*)(void))sub_1A90D6C64);
    sub_1A916B8E0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    long long v8 = (void *)v10[1];
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v8;
}

unint64_t sub_1A90D6BA8()
{
  unint64_t result = qword_1E97B1588;
  if (!qword_1E97B1588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1588);
  }
  return result;
}

void sub_1A90D6BFC()
{
  if (!qword_1E97B1590)
  {
    unint64_t v0 = sub_1A916AEF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E97B1590);
    }
  }
}

unint64_t sub_1A90D6C64()
{
  unint64_t result = qword_1E97B15A0;
  if (!qword_1E97B15A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B15A0);
  }
  return result;
}

void sub_1A90D6CB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1A90D6BA8();
    unint64_t v7 = a3(a1, &type metadata for SummaryEventDatabase.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1A90D6D1C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A90D6BFC();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A90D6D94()
{
  unint64_t result = qword_1E97B15B8;
  if (!qword_1E97B15B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B15B8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SummaryEventDatabase.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A90D6E84);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SummaryEventDatabase.CodingKeys()
{
  return &type metadata for SummaryEventDatabase.CodingKeys;
}

unint64_t sub_1A90D6EC0()
{
  unint64_t result = qword_1E97B15C0;
  if (!qword_1E97B15C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B15C0);
  }
  return result;
}

unint64_t sub_1A90D6F18()
{
  unint64_t result = qword_1E97B15C8;
  if (!qword_1E97B15C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B15C8);
  }
  return result;
}

unint64_t sub_1A90D6F70()
{
  unint64_t result = qword_1E97B15D0;
  if (!qword_1E97B15D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B15D0);
  }
  return result;
}

uint64_t BridgedProcessEvent.name.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AAProcessEvent_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BridgedProcessEvent.version.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AAProcessEvent_version);
  swift_bridgeObjectRetain();
  return v1;
}

id BridgedProcessEvent.json.getter()
{
  return *(id *)(v0 + OBJC_IVAR___AAProcessEvent_json);
}

uint64_t BridgedProcessEvent.groupName.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AAProcessEvent_groupName);
  swift_bridgeObjectRetain();
  return v1;
}

id BridgedProcessEvent.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void BridgedProcessEvent.init()()
{
}

id BridgedProcessEvent.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BridgedProcessEvent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BridgedProcessEvent()
{
  return self;
}

uint64_t method lookup function for BridgedProcessEvent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BridgedProcessEvent);
}

uint64_t dispatch thunk of TimestampConfigurationProviderType.makeTimestampConfiguration()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

id BridgedUploadBatchEventProcessor.__allocating_init(client:endpoint:)(void *a1, void *a2)
{
  id v5 = objc_allocWithZone(v2);
  uint64_t v6 = qword_1EB689870;
  unint64_t v7 = (char *)v5;
  id v8 = a1;
  swift_unknownObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v9 = _s12AppAnalytics25UploadBatchEventProcessorC6client8endpoint11contentType6configAcA6ClientC_AA08EndpointJ0_pAA07ContentJ0OAA0cdE6ConfigCtcfC_0(v8, a2, 0, (id)qword_1EB6897B8);
  uint64_t v10 = (uint64_t *)&v7[OBJC_IVAR___AAUploadBatchEventProcessor_proxyEventProcessor];
  uint64_t *v10 = v9;
  v10[1] = (uint64_t)&protocol witness table for UploadBatchEventProcessor;

  v13.receiver = v7;
  v13.super_class = v2;
  id v11 = objc_msgSendSuper2(&v13, sel_init);

  swift_unknownObjectRelease();
  return v11;
}

id BridgedUploadBatchEventProcessor.init(client:endpoint:)(void *a1, void *a2)
{
  int v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = qword_1EB689870;
  id v8 = v3;
  id v9 = a1;
  swift_unknownObjectRetain();
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v10 = _s12AppAnalytics25UploadBatchEventProcessorC6client8endpoint11contentType6configAcA6ClientC_AA08EndpointJ0_pAA07ContentJ0OAA0cdE6ConfigCtcfC_0(v9, a2, 0, (id)qword_1EB6897B8);
  id v11 = (uint64_t *)&v8[OBJC_IVAR___AAUploadBatchEventProcessor_proxyEventProcessor];
  uint64_t *v11 = v10;
  v11[1] = (uint64_t)&protocol witness table for UploadBatchEventProcessor;

  v14.receiver = v8;
  v14.super_class = ObjectType;
  id v12 = objc_msgSendSuper2(&v14, sel_init);

  swift_unknownObjectRelease();
  return v12;
}

id BridgedUploadBatchEventProcessor.__allocating_init(client:endpoint:config:)(void *a1, void *a2, void *a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  id v8 = a1;
  swift_unknownObjectRetain();
  id v9 = a3;
  uint64_t v10 = _s12AppAnalytics25UploadBatchEventProcessorC6client8endpoint11contentType6configAcA6ClientC_AA08EndpointJ0_pAA07ContentJ0OAA0cdE6ConfigCtcfC_0(v8, a2, 0, v9);
  id v11 = (uint64_t *)&v7[OBJC_IVAR___AAUploadBatchEventProcessor_proxyEventProcessor];
  uint64_t *v11 = v10;
  v11[1] = (uint64_t)&protocol witness table for UploadBatchEventProcessor;

  v14.receiver = v7;
  v14.super_class = v3;
  id v12 = objc_msgSendSuper2(&v14, sel_init);

  swift_unknownObjectRelease();
  return v12;
}

id BridgedUploadBatchEventProcessor.init(client:endpoint:config:)(void *a1, void *a2, void *a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v8 = v3;
  id v9 = a1;
  swift_unknownObjectRetain();
  id v10 = a3;
  uint64_t v11 = _s12AppAnalytics25UploadBatchEventProcessorC6client8endpoint11contentType6configAcA6ClientC_AA08EndpointJ0_pAA07ContentJ0OAA0cdE6ConfigCtcfC_0(v9, a2, 0, v10);
  id v12 = (uint64_t *)&v8[OBJC_IVAR___AAUploadBatchEventProcessor_proxyEventProcessor];
  uint64_t *v12 = v11;
  v12[1] = (uint64_t)&protocol witness table for UploadBatchEventProcessor;

  v15.receiver = v8;
  v15.super_class = ObjectType;
  id v13 = objc_msgSendSuper2(&v15, sel_init);

  swift_unknownObjectRelease();
  return v13;
}

id BridgedUploadBatchEventProcessor.__allocating_init(client:endpoint:contentType:config:)(void *a1, void *a2, uint64_t a3, void *a4)
{
  id v9 = (char *)objc_allocWithZone(v4);
  id v10 = a1;
  swift_unknownObjectRetain();
  id v11 = a4;
  uint64_t v12 = _s12AppAnalytics25UploadBatchEventProcessorC6client8endpoint11contentType6configAcA6ClientC_AA08EndpointJ0_pAA07ContentJ0OAA0cdE6ConfigCtcfC_0(v10, a2, a3, v11);
  id v13 = (uint64_t *)&v9[OBJC_IVAR___AAUploadBatchEventProcessor_proxyEventProcessor];
  *id v13 = v12;
  v13[1] = (uint64_t)&protocol witness table for UploadBatchEventProcessor;

  v16.receiver = v9;
  v16.super_class = v4;
  id v14 = objc_msgSendSuper2(&v16, sel_init);

  swift_unknownObjectRelease();
  return v14;
}

id BridgedUploadBatchEventProcessor.init(client:endpoint:contentType:config:)(void *a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v10 = v4;
  id v11 = a1;
  swift_unknownObjectRetain();
  id v12 = a4;
  uint64_t v13 = _s12AppAnalytics25UploadBatchEventProcessorC6client8endpoint11contentType6configAcA6ClientC_AA08EndpointJ0_pAA07ContentJ0OAA0cdE6ConfigCtcfC_0(v11, a2, a3, v12);
  id v14 = (uint64_t *)&v10[OBJC_IVAR___AAUploadBatchEventProcessor_proxyEventProcessor];
  *id v14 = v13;
  v14[1] = (uint64_t)&protocol witness table for UploadBatchEventProcessor;

  v17.receiver = v10;
  v17.super_class = ObjectType;
  id v15 = objc_msgSendSuper2(&v17, sel_init);

  swift_unknownObjectRelease();
  return v15;
}

void BridgedUploadBatchEventProcessor.process(processEvent:)()
{
}

id BridgedUploadBatchEventProcessor.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void BridgedUploadBatchEventProcessor.init()()
{
}

id BridgedUploadBatchEventProcessor.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A90D7C08()
{
  return swift_unknownObjectRetain();
}

uint64_t type metadata accessor for BridgedUploadBatchEventProcessor()
{
  return self;
}

uint64_t method lookup function for BridgedUploadBatchEventProcessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BridgedUploadBatchEventProcessor);
}

uint64_t dispatch thunk of BridgedUploadBatchEventProcessor.__allocating_init(client:endpoint:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of BridgedUploadBatchEventProcessor.__allocating_init(client:endpoint:config:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of BridgedUploadBatchEventProcessor.__allocating_init(client:endpoint:contentType:config:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1A90D7CB8()
{
  swift_bridgeObjectRelease();
  sub_1A90D7D84(*(void *)(v0 + 32), *(void *)(v0 + 40));
  uint64_t v1 = v0 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_startDate;
  uint64_t v2 = sub_1A916AC90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v3, v4);
}

uint64_t sub_1A90D7D7C()
{
  return type metadata accessor for ActiveSession();
}

uint64_t sub_1A90D7D84(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DataEventError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    uint64_t v3 = swift_bridgeObjectRetain();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for DataEventError(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t *assignWithCopy for DataEventError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      swift_bridgeObjectRetain();
    }
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

unint64_t *assignWithTake for DataEventError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DataEventError(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF9 && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483642);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 5;
  if (v4 >= 7) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DataEventError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFA)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483642;
    if (a3 >= 0x7FFFFFFA) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFA) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 5;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DataEventError()
{
  return &type metadata for DataEventError;
}

unint64_t BridgedLoggingEventProcessorFormat.init(rawValue:)(unint64_t result)
{
  if (result > 2) {
    return 0;
  }
  return result;
}

uint64_t *sub_1A90D7FA8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  BOOL v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2) {
    uint64_t v2 = 0;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  return result;
}

id BridgingLoggingEventProcessor.__allocating_init(format:subsystem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  id v8 = objc_allocWithZone(v4);
  id v9 = v8;
  switch(a1)
  {
    case 2:
      *(void *)&v16[0] = 1;
      goto LABEL_5;
    case 1:
      *(void *)&v16[0] = 0;
LABEL_5:
      char v18 = 0;
LABEL_8:
      type metadata accessor for LoggingEventProcessor();
      swift_allocObject();
      id v10 = v9;
      uint64_t v11 = LoggingEventProcessor.init(logFormat:subsystem:)((uint64_t)v16, a2, a3);
      id v12 = (uint64_t *)&v10[OBJC_IVAR___AALoggingEventProcessor_proxyEventProcessor];
      uint64_t *v12 = v11;
      v12[1] = (uint64_t)&protocol witness table for LoggingEventProcessor;

      v15.receiver = v9;
      v15.super_class = v4;
      return objc_msgSendSuper2(&v15, sel_init);
    case 0:
      uint64_t v17 = 0;
      memset(v16, 0, sizeof(v16));
      char v18 = 2;
      goto LABEL_8;
  }
  id v14 = v8;
  id result = (id)sub_1A916BA20();
  __break(1u);
  return result;
}

id BridgingLoggingEventProcessor.init(format:subsystem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  switch(a1)
  {
    case 2:
      *(void *)&v15[0] = 1;
      goto LABEL_5;
    case 1:
      *(void *)&v15[0] = 0;
LABEL_5:
      char v17 = 0;
LABEL_8:
      type metadata accessor for LoggingEventProcessor();
      swift_allocObject();
      id v9 = v4;
      uint64_t v10 = LoggingEventProcessor.init(logFormat:subsystem:)((uint64_t)v15, a2, a3);
      uint64_t v11 = (uint64_t *)&v9[OBJC_IVAR___AALoggingEventProcessor_proxyEventProcessor];
      uint64_t *v11 = v10;
      v11[1] = (uint64_t)&protocol witness table for LoggingEventProcessor;

      v14.receiver = v4;
      v14.super_class = ObjectType;
      return objc_msgSendSuper2(&v14, sel_init);
    case 0:
      uint64_t v16 = 0;
      memset(v15, 0, sizeof(v15));
      char v17 = 2;
      goto LABEL_8;
  }
  id v13 = v4;
  id result = (id)sub_1A916BA20();
  __break(1u);
  return result;
}

id BridgingLoggingEventProcessor.__allocating_init(format:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);

  return objc_msgSend(v3, sel_initWithFormat_subsystem_, a1, 0);
}

id BridgingLoggingEventProcessor.init(format:)(uint64_t a1)
{
  return objc_msgSend(v1, sel_initWithFormat_subsystem_, a1, 0);
}

void BridgingLoggingEventProcessor.process(processEvent:)()
{
}

id BridgingLoggingEventProcessor.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void BridgingLoggingEventProcessor.init()()
{
}

id BridgingLoggingEventProcessor.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A90D8454()
{
  return swift_unknownObjectRetain();
}

unint64_t sub_1A90D8490()
{
  unint64_t result = qword_1E97B1608;
  if (!qword_1E97B1608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1608);
  }
  return result;
}

ValueMetadata *type metadata accessor for BridgedLoggingEventProcessorFormat()
{
  return &type metadata for BridgedLoggingEventProcessorFormat;
}

uint64_t type metadata accessor for BridgingLoggingEventProcessor()
{
  return self;
}

uint64_t method lookup function for BridgingLoggingEventProcessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BridgingLoggingEventProcessor);
}

uint64_t dispatch thunk of BridgingLoggingEventProcessor.__allocating_init(format:subsystem:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1A90D8544(long long *a1, uint64_t a2, uint64_t a3)
{
  long long v10 = a1[1];
  long long v11 = *a1;
  long long v9 = a1[2];
  uint64_t v6 = *((void *)a1 + 6);
  id v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 64) = v6;
  *(void *)(v3 + 72) = v7;
  *(_OWORD *)(v3 + 16) = v11;
  *(_OWORD *)(v3 + 32) = v10;
  *(_OWORD *)(v3 + 48) = v9;
  *uint64_t v7 = v3;
  v7[1] = sub_1A90D867C;
  return v12(v3 + 16, a2, a3);
}

uint64_t sub_1A90D867C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *v3;
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  return v7(a1, a2, a3);
}

uint64_t sub_1A90D8790(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1A90D87A4()
{
  uint64_t result = sub_1A916AD50();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1A90D8864(uint64_t a1@<X8>)
{
  objc_super v2 = v1;
  sub_1A90DD810(0, &qword_1EB6887E0, (void (*)(uint64_t))type metadata accessor for UploadDropbox.Debugging);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v15[-v8];
  uint64_t v10 = *((void *)*v2 + 13);
  os_unfair_lock_lock_with_options();
  uint64_t v11 = (uint64_t)v2 + *((void *)*v2 + 12);
  swift_beginAccess();
  sub_1A90DDFD8(v11, (uint64_t)v9, (uint64_t)&qword_1EB6887E0, (uint64_t)type metadata accessor for UploadDropbox.Debugging, (uint64_t (*)(void, uint64_t, uint64_t))sub_1A90DD810);
  uint64_t v12 = type metadata accessor for UploadDropbox.Debugging(0);
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12) == 1)
  {
    uint64_t v14 = sub_1A90DE048((uint64_t)v9, (uint64_t)&qword_1EB6887E0, (uint64_t)type metadata accessor for UploadDropbox.Debugging, (uint64_t (*)(void))sub_1A90DD810);
    v2[2](v14);
    sub_1A90DE0A8(a1, (uint64_t)v6);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
    swift_beginAccess();
    sub_1A90DE10C((uint64_t)v6, v11, (uint64_t)&qword_1EB6887E0, (uint64_t)type metadata accessor for UploadDropbox.Debugging, (uint64_t (*)(void, uint64_t, uint64_t))sub_1A90DD810);
    swift_endAccess();
  }
  else
  {
    sub_1A90DE17C((uint64_t)v9, a1);
  }
  os_unfair_lock_unlock((*(os_unfair_lock_t **)((char *)v2 + v10))[2]);
}

void sub_1A90D8AEC(uint64_t a1@<X8>)
{
  os_unfair_lock_lock_with_options();
  swift_beginAccess();
  sub_1A90DDFD8(v1 + 32, (uint64_t)&v5, (uint64_t)&unk_1EB689718, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t))sub_1A90DE274);
  if (v6)
  {
    sub_1A908EC8C(&v5, a1);
  }
  else
  {
    uint64_t v3 = MEMORY[0x1E4FBB718];
    uint64_t v4 = sub_1A90DE048((uint64_t)&v5, (uint64_t)&unk_1EB689718, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1A90DE274);
    (*(void (**)(uint64_t))(v1 + 16))(v4);
    sub_1A90A0DC8(a1, (uint64_t)&v5);
    swift_beginAccess();
    sub_1A90DE10C((uint64_t)&v5, v1 + 32, (uint64_t)&unk_1EB689718, v3, (uint64_t (*)(void, uint64_t, uint64_t))sub_1A90DE274);
    swift_endAccess();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(v1 + 72) + 16));
}

uint64_t sub_1A90D8C50(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_1A90D8CA8(uint64_t a1)
{
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = v1;
  return MEMORY[0x1F4188298](sub_1A90D8CC8, 0, 0);
}

uint64_t sub_1A90D8CC8()
{
  objc_super v15 = v0;
  uint64_t v1 = v0[10];
  v0[12] = qword_1EB688710;
  sub_1A90DCD84(v1);
  sub_1A90DCD84(v1);
  uint64_t v2 = sub_1A916AD40();
  os_log_type_t v3 = sub_1A916B3D0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint64_t *)v0[10];
    long long v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = v13;
    *(_DWORD *)long long v5 = 136315138;
    uint64_t v7 = *v4;
    unint64_t v6 = v4[1];
    swift_bridgeObjectRetain();
    v0[9] = sub_1A90DCF6C(v7, v6, &v14);
    sub_1A916B5A0();
    swift_bridgeObjectRelease();
    sub_1A90DCDD4((uint64_t)v4);
    sub_1A90DCDD4((uint64_t)v4);
    _os_log_impl(&dword_1A9088000, v2, v3, "Upload service will sign data for upload, identifier=%s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0EECA0](v13, -1, -1);
    MEMORY[0x1AD0EECA0](v5, -1, -1);
  }
  else
  {
    uint64_t v8 = v0[10];

    sub_1A90DCDD4(v8);
    sub_1A90DCDD4(v8);
  }
  uint64_t v9 = (void *)swift_task_alloc();
  v0[13] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1A90D8ED0;
  uint64_t v10 = v0[10];
  uint64_t v11 = v0[11];
  return sub_1A90D9390(v11, v10);
}

uint64_t sub_1A90D8ED0(uint64_t a1, uint64_t a2)
{
  os_log_type_t v3 = (void *)*v2;
  v3[2] = v2;
  v3[3] = a1;
  void v3[4] = a2;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A90D8FD4, 0, 0);
}

uint64_t sub_1A90D8FD4()
{
  uint64_t v16 = v0;
  uint64_t v1 = v0[5].i64[0];
  sub_1A90DCD84(v1);
  sub_1A90DCD84(v1);
  uint64_t v2 = sub_1A916AD40();
  os_log_type_t v3 = sub_1A916B3D0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint64_t *)v0[5].i64[0];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v15 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v7 = *v4;
    unint64_t v8 = v4[1];
    swift_bridgeObjectRetain();
    v0[4].i64[0] = sub_1A90DCF6C(v7, v8, &v15);
    sub_1A916B5A0();
    swift_bridgeObjectRelease();
    sub_1A90DCDD4((uint64_t)v4);
    sub_1A90DCDD4((uint64_t)v4);
    _os_log_impl(&dword_1A9088000, v2, v3, "Upload service did sign data for upload, identifier=%s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AD0EECA0](v6, -1, -1);
    MEMORY[0x1AD0EECA0](v5, -1, -1);
  }
  else
  {
    uint64_t v9 = v0[5].i64[0];

    sub_1A90DCDD4(v9);
    sub_1A90DCDD4(v9);
  }
  uint64_t v10 = v0[1].i64[1];
  uint64_t v11 = v0[2].i64[0];
  v0[7].i64[0] = v11;
  uint64_t v12 = (int8x16_t *)swift_task_alloc();
  v0[7].i64[1] = (uint64_t)v12;
  v12[1] = vextq_s8(v0[5], v0[5], 8uLL);
  v12[2].i64[0] = v10;
  v12[2].i64[1] = v11;
  uint64_t v13 = (void *)swift_task_alloc();
  v0[8].i64[0] = (uint64_t)v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1A90D9240;
  return MEMORY[0x1F41880D8](&v0[2].u64[1], 0, 0, 0xD000000000000010, 0x80000001A9176620, sub_1A90DCE24, v12, &type metadata for UploadResult);
}

uint64_t sub_1A90D9240()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A90D9374, 0, 0);
}

uint64_t sub_1A90D9374()
{
  return (*(uint64_t (**)(void, void, void))(v0 + 8))(*(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_1A90D9390(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 24);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E97B1558 + dword_1E97B1558);
  uint64_t v5 = (void *)swift_task_alloc();
  v2[9] = v5;
  void *v5 = v2;
  v5[1] = sub_1A90D9444;
  return v7(v4, v3);
}

uint64_t sub_1A90D9444(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(v6 + 80) = v2;
  swift_task_dealloc();
  if (v2)
  {
    return MEMORY[0x1F4188298](sub_1A90D9594, 0, 0);
  }
  else
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v7(a1, a2);
  }
}

uint64_t sub_1A90D9594()
{
  uint64_t v26 = v0;
  uint64_t v1 = (void *)v0[10];
  uint64_t v2 = v0[8];
  sub_1A90DCD84(v2);
  id v3 = v1;
  sub_1A90DCD84(v2);
  id v4 = v1;
  uint64_t v5 = sub_1A916AD40();
  os_log_type_t v6 = sub_1A916B3B0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (void *)v0[10];
    uint64_t v8 = (uint64_t *)v0[8];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = v23;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v11 = *v8;
    unint64_t v10 = v8[1];
    swift_bridgeObjectRetain();
    v0[5] = sub_1A90DCF6C(v11, v10, &v24);
    sub_1A916B5A0();
    swift_bridgeObjectRelease();
    sub_1A90DCDD4((uint64_t)v8);
    sub_1A90DCDD4((uint64_t)v8);
    *(_WORD *)(v9 + 12) = 2112;
    id v12 = v7;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    v0[6] = v13;
    sub_1A916B5A0();
    *uint64_t v22 = v13;

    _os_log_impl(&dword_1A9088000, v5, v6, "Upload service failed to sign data for upload; fallback to no signature, identifier=%s, error=%@",
      (uint8_t *)v9,
      0x16u);
    sub_1A90DD810(0, (unint64_t *)&qword_1EB6872E8, (void (*)(uint64_t))sub_1A90DDBE4);
    swift_arrayDestroy();
    MEMORY[0x1AD0EECA0](v22, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1AD0EECA0](v23, -1, -1);
    MEMORY[0x1AD0EECA0](v9, -1, -1);
  }
  else
  {
    uint64_t v14 = (void *)v0[10];
    uint64_t v15 = v0[8];

    sub_1A90DCDD4(v15);
    sub_1A90DCDD4(v15);
  }
  uint64_t v16 = (void *)v0[10];
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  sub_1A916B680();
  unint64_t v17 = v25;
  v0[2] = v24;
  v0[3] = v17;
  sub_1A916B050();
  v0[4] = v16;
  sub_1A908E870(0, (unint64_t *)&qword_1EB689860);
  sub_1A916B780();

  uint64_t v18 = v0[2];
  uint64_t v19 = v0[3];
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v20(v18, v19);
}

uint64_t sub_1A90D98C4(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  sub_1A90DD690();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  sub_1A90D9A68(a3, a4, a5, (uint64_t (*)(uint64_t, void, uint64_t))sub_1A90DD788, v14);
  return swift_release();
}

uint64_t sub_1A90D9A20(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  return sub_1A916B250();
}

uint64_t sub_1A90D9A68(uint64_t a1, char *a2, uint64_t a3, uint64_t (*a4)(uint64_t, void, uint64_t), uint64_t a5)
{
  void (*v75)(uint64_t *__return_ptr, char *, uint64_t, char *, uint64_t (*)(uint64_t, unint64_t, void *, void *), uint64_t, uint64_t, uint64_t);
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, char *, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unsigned int (*v93)(uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t (*v103)(uint64_t, void, uint64_t);
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110[3];
  uint64_t v111;
  uint64_t v112;
  uint64_t v113[3];
  uint64_t v114;
  uint64_t v115;

  os_log_type_t v6 = v5;
  uint64_t v108 = a1;
  uint64_t v105 = *v5;
  uint64_t v106 = a2;
  uint64_t v10 = sub_1A916A790();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A90DD810(0, (unint64_t *)&qword_1EB6899A0, MEMORY[0x1E4F276F0]);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  unint64_t v17 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v87 - v18;
  uint64_t v20 = sub_1A916AAD0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v23 = MEMORY[0x1F4188790](v22);
  if (*((unsigned char *)v6 + 120) == 1) {
    return a4(0, 0, 4);
  }
  uint64_t v27 = a3;
  uint64_t v28 = a5;
  uint64_t v97 = v25;
  os_log_type_t v98 = v17;
  uint64_t v99 = v27;
  long long v96 = v13;
  unint64_t v103 = a4;
  uint64_t v104 = v10;
  uint64_t v100 = v11;
  uint64_t v102 = (char *)&v87 - v24;
  uint64_t v107 = v23;
  uint64_t v29 = v108;
  uint64_t v30 = *(void *)(v108 + 48);
  sub_1A9150C38(v30, (uint64_t)v19);
  uint64_t v31 = v107;
  id v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v32((uint64_t)v19, 1, v107) == 1)
  {
    sub_1A90DE048((uint64_t)v19, (uint64_t)&qword_1EB6899A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1A90DD810);
    return v103(v30, 0, 3);
  }
  else
  {
    int64_t v89 = v28;
    long long v95 = 7104878;
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    long long v93 = v32;
    id v34 = v102;
    v33(v102, v19, v31);
    long long v92 = v6[3];
    long long v91 = v6[4];
    uint64_t v101 = swift_allocBox();
    uint64_t v36 = v35;
    uint64_t v37 = v97;
    uint64_t v38 = v34;
    uint64_t v39 = v29;
    uint64_t v40 = v36;
    uint64_t v88 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 16);
    v88(v97, v38, v31);
    sub_1A916A750();
    sub_1A916A710();
    v113[0] = sub_1A90D19CC(v30);
    v113[1] = v41;
    sub_1A916B050();
    uint64_t v42 = *(void *)(v105 + 88);
    uint64_t v43 = *(void (**)(void))(v42 + 8);
    uint64_t v105 = *(void *)(v105 + 80);
    long long v94 = v42;
    v43();
    sub_1A916B050();
    swift_bridgeObjectRelease();
    sub_1A916A780();
    swift_bridgeObjectRelease();
    sub_1A916A780();
    sub_1A916A780();
    sub_1A916A780();
    uint64_t v44 = (uint64_t)v98;
    sub_1A916A760();
    uint64_t v45 = v107;
    if (v93(v44, 1, v107))
    {
      sub_1A90DE048(v44, (uint64_t)&qword_1EB6899A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1A90DD810);
      unint64_t v46 = 0xE300000000000000;
      uint64_t v47 = 7104878;
    }
    else
    {
      v88(v37, (char *)v44, v45);
      sub_1A90DE048(v44, (uint64_t)&qword_1EB6899A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1A90DD810);
      uint64_t v47 = sub_1A916A9C0();
      uint64_t v48 = v37;
      unint64_t v46 = v49;
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v48, v45);
    }
    uint64_t v50 = v21;
    if (sub_1A916A730())
    {
      long long v95 = sub_1A916AEE0();
      unint64_t v52 = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v52 = 0xE300000000000000;
    }
    uint64_t v99 = (uint64_t)v6;
    unint64_t v53 = (char *)v6 + qword_1EB688710;
    sub_1A90DCD84(v39);
    sub_1A90DCD84(v39);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v54 = sub_1A916AD40();
    os_log_type_t v55 = sub_1A916B3D0();
    int v56 = v55;
    BOOL v57 = os_log_type_enabled(v54, v55);
    uint64_t v90 = v50;
    uint64_t v106 = v53;
    if (v57)
    {
      uint64_t v58 = swift_slowAlloc();
      LODWORD(v98) = v56;
      uint64_t v59 = v58;
      uint64_t v97 = swift_slowAlloc();
      v113[0] = v97;
      *(_DWORD *)uint64_t v59 = 136315650;
      uint64_t v60 = v47;
      uint64_t v61 = v40;
      uint64_t v62 = *(void *)v39;
      unint64_t v63 = *(void *)(v39 + 8);
      swift_bridgeObjectRetain();
      v110[0] = sub_1A90DCF6C(v62, v63, v113);
      sub_1A916B5A0();
      uint64_t v40 = v61;
      swift_bridgeObjectRelease();
      sub_1A90DCDD4(v39);
      sub_1A90DCDD4(v39);
      *(_WORD *)(v59 + 12) = 2080;
      swift_bridgeObjectRetain();
      v110[0] = sub_1A90DCF6C(v60, v46, v113);
      sub_1A916B5A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v59 + 22) = 2080;
      swift_bridgeObjectRetain();
      v110[0] = sub_1A90DCF6C(v95, v52, v113);
      sub_1A916B5A0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A9088000, v54, (os_log_type_t)v98, "Upload service sending upload request, identifier=%s, url=%s, headers=%s", (uint8_t *)v59, 0x20u);
      uint64_t v64 = v97;
      swift_arrayDestroy();
      MEMORY[0x1AD0EECA0](v64, -1, -1);
      MEMORY[0x1AD0EECA0](v59, -1, -1);
    }
    else
    {

      sub_1A90DCDD4(v39);
      sub_1A90DCDD4(v39);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v65 = v89;
    char v66 = v96;
    sub_1A90D8AEC((uint64_t)v110);
    uint64_t v67 = v112;
    uint64_t v99 = v111;
    os_log_type_t v98 = __swift_project_boxed_opaque_existential_1(v110, v111);
    uint64_t v68 = v100;
    (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v66, v40, v104);
    uint64_t v97 = *(void *)(v39 + 16);
    long long v96 = *(char **)(v39 + 24);
    uint64_t v69 = swift_allocObject();
    swift_weakInit();
    uint64_t v70 = swift_allocObject();
    long long v71 = *(_OWORD *)(v39 + 16);
    *(_OWORD *)(v70 + 56) = *(_OWORD *)v39;
    uint64_t v72 = v94;
    *(void *)(v70 + 16) = v105;
    *(void *)(v70 + 24) = v72;
    uint64_t v73 = v103;
    *(void *)(v70 + 32) = v69;
    *(void *)(v70 + 40) = v73;
    *(void *)(v70 + 48) = v65;
    *(_OWORD *)(v70 + 72) = v71;
    *(_OWORD *)(v70 + 88) = *(_OWORD *)(v39 + 32);
    uint64_t v74 = v101;
    *(void *)(v70 + 104) = *(void *)(v39 + 48);
    *(void *)(v70 + 112) = v74;
    uint64_t v75 = *(void (**)(uint64_t *__return_ptr, char *, uint64_t, char *, uint64_t (*)(uint64_t, unint64_t, void *, void *), uint64_t, uint64_t, uint64_t))(v67 + 8);
    sub_1A90DCD84(v39);
    swift_retain();
    swift_retain();
    swift_retain();
    v75(v113, v66, v97, v96, sub_1A90DD8FC, v70, v99, v67);
    swift_release();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v66, v104);
    swift_release();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v110);
    uint64_t v77 = *(void *)v39;
    uint64_t v76 = *(void *)(v39 + 8);
    uint64_t v78 = v114;
    uint64_t v79 = v115;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v113, v114);
    uint64_t v80 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v79 + 16);
    swift_bridgeObjectRetain();
    v80(v77, v76, v78, v79);
    uint64_t v81 = v114;
    uint64_t v82 = v115;
    __swift_project_boxed_opaque_existential_1(v113, v114);
    (*(void (**)(uint64_t, uint64_t))(v82 + 32))(v81, v82);
    sub_1A90DCD84(v39);
    uint64_t v83 = sub_1A916AD40();
    uint64_t v84 = sub_1A916B3D0();
    if (os_log_type_enabled(v83, v84))
    {
      uint64_t v85 = (uint8_t *)swift_slowAlloc();
      uint64_t v86 = swift_slowAlloc();
      v110[0] = v86;
      *(_DWORD *)uint64_t v85 = 136315138;
      swift_bridgeObjectRetain();
      unint64_t v109 = sub_1A90DCF6C(v77, v76, v110);
      sub_1A916B5A0();
      swift_bridgeObjectRelease();
      sub_1A90DCDD4(v39);
      _os_log_impl(&dword_1A9088000, v83, v84, "Upload task submitted, identifier=%s", v85, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AD0EECA0](v86, -1, -1);
      MEMORY[0x1AD0EECA0](v85, -1, -1);
    }
    else
    {
      sub_1A90DCDD4(v39);
    }

    (*(void (**)(char *, uint64_t))(v90 + 8))(v102, v107);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v113);
    return swift_release();
  }
}

uint64_t sub_1A90DA614()
{
  sub_1A90D8AEC((uint64_t)v1);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v1);
}

uint64_t sub_1A90DA64C(uint64_t a1, unint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t), uint64_t a7, uint64_t *a8)
{
  uint64_t v25 = a7;
  uint64_t v26 = a6;
  uint64_t v24 = a4;
  uint64_t v12 = sub_1A916A790();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_projectBox();
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return v26(2, 0, 4);
  }
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  uint64_t v17 = sub_1A90DA820(a8, (uint64_t)v15, a3, a1, a2, v24);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v26(v17, v19, v21);
  sub_1A90CE0B4(v17, v19, v21);
  return swift_release();
}

uint64_t sub_1A90DA820(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, void *a6)
{
  uint64_t v158 = a1;
  uint64_t v11 = sub_1A916A790();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v150 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v150 - v16;
  uint64_t v18 = sub_1A916AFD0();
  uint64_t result = MEMORY[0x1F4188790](v18 - 8);
  if (a6)
  {
    id v20 = a6;
    uint64_t v21 = (void *)sub_1A916A980();
    id v22 = objc_msgSend(v21, sel_domain);
    uint64_t v23 = sub_1A916AF90();
    uint64_t v25 = v24;

    if (v23 == sub_1A916AF90() && v25 == v26)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v29 = v158;
    }
    else
    {
      char v28 = sub_1A916B9E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v29 = v158;
      if ((v28 & 1) == 0)
      {
        id v30 = a6;
        sub_1A90DCD84((uint64_t)v29);
        id v31 = a6;
        sub_1A90DCD84((uint64_t)v29);
        id v32 = sub_1A916AD40();
        os_log_type_t v33 = sub_1A916B3B0();
        if (os_log_type_enabled(v32, v33))
        {
          uint64_t v34 = swift_slowAlloc();
          uint64_t v35 = (void *)swift_slowAlloc();
          uint64_t v36 = swift_slowAlloc();
          uint64_t v161 = v36;
          *(_DWORD *)uint64_t v34 = 136315394;
          id v159 = v21;
          uint64_t v37 = *v29;
          unint64_t v38 = v29[1];
          swift_bridgeObjectRetain();
          id v163 = (id)sub_1A90DCF6C(v37, v38, &v161);
          sub_1A916B5A0();
          swift_bridgeObjectRelease();
          sub_1A90DCDD4((uint64_t)v29);
          sub_1A90DCDD4((uint64_t)v29);
          *(_WORD *)(v34 + 12) = 2112;
          id v39 = a6;
          id v40 = (id)_swift_stdlib_bridgeErrorToNSError();
          id v163 = v40;
          sub_1A916B5A0();
          *uint64_t v35 = v40;

          _os_log_impl(&dword_1A9088000, v32, v33, "Upload encountered unknown error; will retry with attempt increment, identifier=%s, error=%@",
            (uint8_t *)v34,
            0x16u);
          sub_1A90DD810(0, (unint64_t *)&qword_1EB6872E8, (void (*)(uint64_t))sub_1A90DDBE4);
          swift_arrayDestroy();
          MEMORY[0x1AD0EECA0](v35, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x1AD0EECA0](v36, -1, -1);
          MEMORY[0x1AD0EECA0](v34, -1, -1);

          return 0;
        }
        goto LABEL_28;
      }
    }
    id v58 = objc_msgSend(v21, sel_code);
    if ((unint64_t)v58 + 1009 <= 8 && ((1 << (v58 - 15)) & 0x131) != 0)
    {
      id v59 = a6;
      sub_1A90DCD84((uint64_t)v29);
      id v60 = a6;
      sub_1A90DCD84((uint64_t)v29);
      uint64_t v61 = sub_1A916AD40();
      os_log_type_t v62 = sub_1A916B3B0();
      if (os_log_type_enabled(v61, v62))
      {
        uint64_t v63 = swift_slowAlloc();
        uint64_t v64 = (void *)swift_slowAlloc();
        uint64_t v65 = swift_slowAlloc();
        uint64_t v161 = v65;
        *(_DWORD *)uint64_t v63 = 136315394;
        id v159 = v21;
        uint64_t v67 = *v29;
        unint64_t v66 = v29[1];
        swift_bridgeObjectRetain();
        id v163 = (id)sub_1A90DCF6C(v67, v66, &v161);
        sub_1A916B5A0();
        swift_bridgeObjectRelease();
        sub_1A90DCDD4((uint64_t)v29);
        sub_1A90DCDD4((uint64_t)v29);
        *(_WORD *)(v63 + 12) = 2112;
        id v68 = a6;
        id v69 = (id)_swift_stdlib_bridgeErrorToNSError();
        id v163 = v69;
        sub_1A916B5A0();
        *uint64_t v64 = v69;

        _os_log_impl(&dword_1A9088000, v61, v62, "Upload attempted while offline; will retry without attempt increment, identifier=%s, error=%@",
          (uint8_t *)v63,
          0x16u);
        sub_1A90DD810(0, (unint64_t *)&qword_1EB6872E8, (void (*)(uint64_t))sub_1A90DDBE4);
        uint64_t v41 = 1;
        swift_arrayDestroy();
        MEMORY[0x1AD0EECA0](v64, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1AD0EECA0](v65, -1, -1);
        MEMORY[0x1AD0EECA0](v63, -1, -1);
      }
      else
      {

        sub_1A90DCDD4((uint64_t)v29);
        sub_1A90DCDD4((uint64_t)v29);

        return 1;
      }
      return v41;
    }
    id v80 = a6;
    sub_1A90DCD84((uint64_t)v29);
    id v81 = a6;
    sub_1A90DCD84((uint64_t)v29);
    id v32 = sub_1A916AD40();
    os_log_type_t v82 = sub_1A916B3B0();
    if (os_log_type_enabled(v32, v82))
    {
      uint64_t v83 = swift_slowAlloc();
      uint64_t v84 = (void *)swift_slowAlloc();
      uint64_t v85 = swift_slowAlloc();
      uint64_t v161 = v85;
      *(_DWORD *)uint64_t v83 = 136315394;
      id v159 = v21;
      uint64_t v86 = *v29;
      unint64_t v87 = v29[1];
      swift_bridgeObjectRetain();
      id v163 = (id)sub_1A90DCF6C(v86, v87, &v161);
      sub_1A916B5A0();
      swift_bridgeObjectRelease();
      sub_1A90DCDD4((uint64_t)v29);
      sub_1A90DCDD4((uint64_t)v29);
      *(_WORD *)(v83 + 12) = 2112;
      id v88 = a6;
      id v89 = (id)_swift_stdlib_bridgeErrorToNSError();
      id v163 = v89;
      sub_1A916B5A0();
      *uint64_t v84 = v89;

      _os_log_impl(&dword_1A9088000, v32, v82, "Upload URLError; will retry with attempt increment, identifier=%s, error=%@",
        (uint8_t *)v83,
        0x16u);
      sub_1A90DD810(0, (unint64_t *)&qword_1EB6872E8, (void (*)(uint64_t))sub_1A90DDBE4);
      swift_arrayDestroy();
      MEMORY[0x1AD0EECA0](v84, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1AD0EECA0](v85, -1, -1);
      MEMORY[0x1AD0EECA0](v83, -1, -1);

      return 0;
    }
LABEL_28:

    sub_1A90DCDD4((uint64_t)v29);
    sub_1A90DCDD4((uint64_t)v29);

    return 0;
  }
  unint64_t v154 = (unint64_t)v15;
  uint64_t v155 = v12;
  if (a3)
  {
    self;
    uint64_t v42 = (void *)swift_dynamicCastObjCClassUnconditional();
    id v43 = a3;
    id v156 = objc_msgSend(v42, sel_statusCode);
    id v157 = v42;
    id v44 = objc_msgSend(v42, sel_allHeaderFields);
    uint64_t v45 = sub_1A916AED0();

    unint64_t v46 = sub_1A90DC6EC(v45);
    swift_bridgeObjectRelease();
    if (!v46) {
      sub_1A90B22E4(MEMORY[0x1E4FBC860]);
    }
    uint64_t v47 = (uint64_t)objc_msgSend(v157, sel_statusCode);
    if ((unint64_t)(v47 - 200) <= 0x63)
    {
      uint64_t v48 = v158;
      sub_1A90DCD84((uint64_t)v158);
      id v49 = v43;
      swift_bridgeObjectRetain();
      sub_1A90DCD84((uint64_t)v48);
      id v50 = v49;
      swift_bridgeObjectRetain();
      unint64_t v51 = sub_1A916AD40();
      os_log_type_t v52 = sub_1A916B3D0();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v53 = swift_slowAlloc();
        id v159 = (id)swift_slowAlloc();
        id v163 = v159;
        *(_DWORD *)uint64_t v53 = 136315650;
        uint64_t v54 = *v48;
        unint64_t v55 = v48[1];
        swift_bridgeObjectRetain();
        uint64_t v161 = sub_1A90DCF6C(v54, v55, (uint64_t *)&v163);
        sub_1A916B5A0();
        swift_bridgeObjectRelease();
        sub_1A90DCDD4((uint64_t)v48);
        sub_1A90DCDD4((uint64_t)v48);
        *(_WORD *)(v53 + 12) = 2048;
        id v56 = objc_msgSend(v157, sel_statusCode);

        uint64_t v161 = (uint64_t)v56;
        sub_1A916B5A0();

        *(_WORD *)(v53 + 22) = 2080;
        uint64_t v161 = 0;
        unint64_t v162 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_1A916B680();
        swift_bridgeObjectRelease();
        uint64_t v161 = 0x6F43737574617473;
        unint64_t v162 = 0xEB000000003D6564;
        uint64_t v41 = (uint64_t)v156;
        id v160 = v156;
        sub_1A916B990();
        sub_1A916B050();
        swift_bridgeObjectRelease();
        sub_1A916B050();
        swift_bridgeObjectRetain();
        sub_1A916AEE0();
        sub_1A916B050();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        uint64_t v161 = sub_1A90DCF6C(v161, v162, (uint64_t *)&v163);
        sub_1A916B5A0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A9088000, v51, v52, "Upload completed successfully, identifier=%s, status=%ld, uploadResponse=%s", (uint8_t *)v53, 0x20u);
        id v57 = v159;
        swift_arrayDestroy();
        MEMORY[0x1AD0EECA0](v57, -1, -1);
        MEMORY[0x1AD0EECA0](v53, -1, -1);
      }
      else
      {

        sub_1A90DCDD4((uint64_t)v48);
        sub_1A90DCDD4((uint64_t)v48);
        swift_bridgeObjectRelease_n();

        return (uint64_t)v156;
      }
      return v41;
    }
    switch(v47)
    {
      case 429:
        uint64_t v70 = v158;
        sub_1A90DCD84((uint64_t)v158);
        id v94 = v43;
        swift_bridgeObjectRetain();
        sub_1A90DCD84((uint64_t)v70);
        id v72 = v94;
        swift_bridgeObjectRetain();
        uint64_t v73 = sub_1A916AD40();
        os_log_type_t v74 = sub_1A916B3B0();
        if (os_log_type_enabled(v73, v74))
        {
          uint64_t v75 = swift_slowAlloc();
          id v159 = (id)swift_slowAlloc();
          id v163 = v159;
          *(_DWORD *)uint64_t v75 = 136315650;
          uint64_t v95 = *v70;
          unint64_t v96 = v70[1];
          swift_bridgeObjectRetain();
          uint64_t v161 = sub_1A90DCF6C(v95, v96, (uint64_t *)&v163);
          sub_1A916B5A0();
          swift_bridgeObjectRelease();
          sub_1A90DCDD4((uint64_t)v70);
          sub_1A90DCDD4((uint64_t)v70);
          *(_WORD *)(v75 + 12) = 2048;
          id v97 = objc_msgSend(v157, sel_statusCode);

          uint64_t v161 = (uint64_t)v97;
          sub_1A916B5A0();

          *(_WORD *)(v75 + 22) = 2080;
          uint64_t v161 = 0;
          unint64_t v162 = 0xE000000000000000;
          swift_bridgeObjectRetain();
          sub_1A916B680();
          swift_bridgeObjectRelease();
          uint64_t v161 = 0x6F43737574617473;
          unint64_t v162 = 0xEB000000003D6564;
          uint64_t v41 = (uint64_t)v156;
          id v160 = v156;
          sub_1A916B990();
          sub_1A916B050();
          swift_bridgeObjectRelease();
          sub_1A916B050();
          swift_bridgeObjectRetain();
          sub_1A916AEE0();
          sub_1A916B050();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          uint64_t v161 = sub_1A90DCF6C(v161, v162, (uint64_t *)&v163);
          sub_1A916B5A0();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          uint64_t v79 = "Upload HTTP too many requests, and will retry, identifier=%s, status=%ld, uploadResponse=%s";
          goto LABEL_34;
        }
LABEL_35:

        sub_1A90DCDD4((uint64_t)v70);
        sub_1A90DCDD4((uint64_t)v70);
        swift_bridgeObjectRelease_n();
LABEL_36:

        return (uint64_t)v156;
      case 408:
        uint64_t v70 = v158;
        sub_1A90DCD84((uint64_t)v158);
        id v90 = v43;
        swift_bridgeObjectRetain();
        sub_1A90DCD84((uint64_t)v70);
        id v72 = v90;
        swift_bridgeObjectRetain();
        uint64_t v73 = sub_1A916AD40();
        os_log_type_t v74 = sub_1A916B3B0();
        if (os_log_type_enabled(v73, v74))
        {
          uint64_t v75 = swift_slowAlloc();
          id v159 = (id)swift_slowAlloc();
          id v163 = v159;
          *(_DWORD *)uint64_t v75 = 136315650;
          uint64_t v91 = *v70;
          unint64_t v92 = v70[1];
          swift_bridgeObjectRetain();
          uint64_t v161 = sub_1A90DCF6C(v91, v92, (uint64_t *)&v163);
          sub_1A916B5A0();
          swift_bridgeObjectRelease();
          sub_1A90DCDD4((uint64_t)v70);
          sub_1A90DCDD4((uint64_t)v70);
          *(_WORD *)(v75 + 12) = 2048;
          id v93 = objc_msgSend(v157, sel_statusCode);

          uint64_t v161 = (uint64_t)v93;
          sub_1A916B5A0();

          *(_WORD *)(v75 + 22) = 2080;
          uint64_t v161 = 0;
          unint64_t v162 = 0xE000000000000000;
          swift_bridgeObjectRetain();
          sub_1A916B680();
          swift_bridgeObjectRelease();
          uint64_t v161 = 0x6F43737574617473;
          unint64_t v162 = 0xEB000000003D6564;
          uint64_t v41 = (uint64_t)v156;
          id v160 = v156;
          sub_1A916B990();
          sub_1A916B050();
          swift_bridgeObjectRelease();
          sub_1A916B050();
          swift_bridgeObjectRetain();
          sub_1A916AEE0();
          sub_1A916B050();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          uint64_t v161 = sub_1A90DCF6C(v161, v162, (uint64_t *)&v163);
          sub_1A916B5A0();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          uint64_t v79 = "Upload HTTP timeout, and will retry, identifier=%s, status=%ld, uploadResponse=%s";
          goto LABEL_34;
        }
        goto LABEL_35;
      case 401:
        uint64_t v70 = v158;
        sub_1A90DCD84((uint64_t)v158);
        id v71 = v43;
        swift_bridgeObjectRetain();
        sub_1A90DCD84((uint64_t)v70);
        id v72 = v71;
        swift_bridgeObjectRetain();
        uint64_t v73 = sub_1A916AD40();
        os_log_type_t v74 = sub_1A916B3B0();
        if (os_log_type_enabled(v73, v74))
        {
          uint64_t v75 = swift_slowAlloc();
          id v159 = (id)swift_slowAlloc();
          id v163 = v159;
          *(_DWORD *)uint64_t v75 = 136315650;
          uint64_t v76 = *v70;
          unint64_t v77 = v70[1];
          swift_bridgeObjectRetain();
          uint64_t v161 = sub_1A90DCF6C(v76, v77, (uint64_t *)&v163);
          sub_1A916B5A0();
          swift_bridgeObjectRelease();
          sub_1A90DCDD4((uint64_t)v70);
          sub_1A90DCDD4((uint64_t)v70);
          *(_WORD *)(v75 + 12) = 2048;
          id v78 = objc_msgSend(v157, sel_statusCode);

          uint64_t v161 = (uint64_t)v78;
          sub_1A916B5A0();

          *(_WORD *)(v75 + 22) = 2080;
          uint64_t v161 = 0;
          unint64_t v162 = 0xE000000000000000;
          swift_bridgeObjectRetain();
          sub_1A916B680();
          swift_bridgeObjectRelease();
          uint64_t v161 = 0x6F43737574617473;
          unint64_t v162 = 0xEB000000003D6564;
          uint64_t v41 = (uint64_t)v156;
          id v160 = v156;
          sub_1A916B990();
          sub_1A916B050();
          swift_bridgeObjectRelease();
          sub_1A916B050();
          swift_bridgeObjectRetain();
          sub_1A916AEE0();
          sub_1A916B050();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          uint64_t v161 = sub_1A90DCF6C(v161, v162, (uint64_t *)&v163);
          sub_1A916B5A0();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          uint64_t v79 = "Upload HTTP failed authorization, and will retry, identifier=%s, status=%ld, uploadResponse=%s";
LABEL_34:
          _os_log_impl(&dword_1A9088000, v73, v74, v79, (uint8_t *)v75, 0x20u);
          id v98 = v159;
          swift_arrayDestroy();
          MEMORY[0x1AD0EECA0](v98, -1, -1);
          MEMORY[0x1AD0EECA0](v75, -1, -1);

          return v41;
        }
        goto LABEL_35;
    }
    if ((unint64_t)(v47 - 430) < 0x46
      || (v47 & 0xFFFFFFFFFFFFFFF8) == 0x190
      || (unint64_t)(v47 - 409) <= 0x13)
    {
      if (a5 >> 60 == 15)
      {
        uint64_t v153 = 0;
        unint64_t v154 = 0xE000000000000000;
      }
      else
      {
        sub_1A90D1784(a4, a5);
        sub_1A916AFC0();
        uint64_t v161 = sub_1A916AFA0();
        unint64_t v162 = v107;
        sub_1A90DDB98(0, &qword_1EB687300, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
        uint64_t v153 = sub_1A916B530();
        unint64_t v154 = v108;
        sub_1A90B07D4(a4, a5);
        swift_bridgeObjectRelease();
      }
      uint64_t v109 = v11;
      uint64_t v110 = a2;
      uint64_t v111 = v155;
      (*(void (**)(char *, uint64_t, uint64_t))(v155 + 16))(v17, v110, v11);
      uint64_t v112 = v158;
      sub_1A90DCD84((uint64_t)v158);
      id v113 = v43;
      swift_bridgeObjectRetain();
      sub_1A90DCD84((uint64_t)v112);
      id v114 = v113;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v115 = sub_1A916AD40();
      os_log_type_t v116 = sub_1A916B3C0();
      int v117 = v116;
      if (os_log_type_enabled(v115, v116))
      {
        uint64_t v118 = swift_slowAlloc();
        id v159 = (id)swift_slowAlloc();
        id v163 = v159;
        *(_DWORD *)uint64_t v118 = 136316162;
        os_log_t v151 = v115;
        int v152 = v117;
        uint64_t v119 = v111;
        uint64_t v120 = *v112;
        unint64_t v121 = v112[1];
        swift_bridgeObjectRetain();
        uint64_t v161 = sub_1A90DCF6C(v120, v121, (uint64_t *)&v163);
        sub_1A916B5A0();
        swift_bridgeObjectRelease();
        sub_1A90DCDD4((uint64_t)v112);
        sub_1A90DCDD4((uint64_t)v112);
        *(_WORD *)(v118 + 12) = 2048;
        id v122 = objc_msgSend(v157, sel_statusCode);

        uint64_t v161 = (uint64_t)v122;
        sub_1A916B5A0();

        *(_WORD *)(v118 + 22) = 2080;
        uint64_t v161 = sub_1A916A730();
        sub_1A90DDAC4();
        uint64_t v158 = (uint64_t *)v114;
        uint64_t v123 = sub_1A916B530();
        unint64_t v125 = v124;
        swift_bridgeObjectRelease();
        uint64_t v161 = sub_1A90DCF6C(v123, v125, (uint64_t *)&v163);
        sub_1A916B5A0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v119 + 8))(v17, v109);
        *(_WORD *)(v118 + 32) = 2080;
        uint64_t v161 = 0;
        unint64_t v162 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_1A916B680();
        swift_bridgeObjectRelease();
        uint64_t v161 = 0x6F43737574617473;
        unint64_t v162 = 0xEB000000003D6564;
        id v160 = v156;
        sub_1A916B990();
        sub_1A916B050();
        swift_bridgeObjectRelease();
        sub_1A916B050();
        swift_bridgeObjectRetain();
        sub_1A916AEE0();
        sub_1A916B050();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        uint64_t v161 = sub_1A90DCF6C(v161, v162, (uint64_t *)&v163);
        sub_1A916B5A0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v118 + 42) = 2080;
        unint64_t v126 = v154;
        swift_bridgeObjectRetain();
        uint64_t v161 = sub_1A90DCF6C(v153, v126, (uint64_t *)&v163);
        sub_1A916B5A0();
        swift_bridgeObjectRelease_n();
        uint64_t v127 = "Upload HTTP failed and won't retry, identifier=%s, status=%ld, headers=%s, uploadResponse=%s, body=%s";
LABEL_54:
        os_log_t v148 = v151;
        _os_log_impl(&dword_1A9088000, v151, (os_log_type_t)v152, v127, (uint8_t *)v118, 0x34u);
        id v149 = v159;
        swift_arrayDestroy();
        MEMORY[0x1AD0EECA0](v149, -1, -1);
        MEMORY[0x1AD0EECA0](v118, -1, -1);

        return (uint64_t)v156;
      }

      sub_1A90DCDD4((uint64_t)v112);
      sub_1A90DCDD4((uint64_t)v112);

      (*(void (**)(char *, uint64_t))(v111 + 8))(v17, v11);
    }
    else
    {
      if (v47 >= 500)
      {
        uint64_t v100 = v158;
        sub_1A90DCD84((uint64_t)v158);
        sub_1A90DCD84((uint64_t)v100);
        id v72 = v43;
        uint64_t v101 = sub_1A916AD40();
        os_log_type_t v102 = sub_1A916B3B0();
        if (os_log_type_enabled(v101, v102))
        {
          uint64_t v103 = swift_slowAlloc();
          uint64_t v104 = swift_slowAlloc();
          uint64_t v161 = v104;
          *(_DWORD *)uint64_t v103 = 136315394;
          uint64_t v105 = *v100;
          unint64_t v106 = v100[1];
          swift_bridgeObjectRetain();
          id v163 = (id)sub_1A90DCF6C(v105, v106, &v161);
          sub_1A916B5A0();
          swift_bridgeObjectRelease();
          sub_1A90DCDD4((uint64_t)v100);
          sub_1A90DCDD4((uint64_t)v100);
          *(_WORD *)(v103 + 12) = 2048;
          id v163 = objc_msgSend(v157, sel_statusCode);
          sub_1A916B5A0();

          _os_log_impl(&dword_1A9088000, v101, v102, "Upload HTTP failed--will retry later, identifier=%s, statusCode=%ld", (uint8_t *)v103, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1AD0EECA0](v104, -1, -1);
          MEMORY[0x1AD0EECA0](v103, -1, -1);
        }
        else
        {

          sub_1A90DCDD4((uint64_t)v100);
          sub_1A90DCDD4((uint64_t)v100);
        }
        goto LABEL_36;
      }
      if (a5 >> 60 == 15)
      {
        uint64_t v153 = 0;
        unint64_t v99 = 0xE000000000000000;
      }
      else
      {
        sub_1A90D1784(a4, a5);
        sub_1A916AFC0();
        uint64_t v161 = sub_1A916AFA0();
        unint64_t v162 = v128;
        sub_1A90DDB98(0, &qword_1EB687300, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
        uint64_t v153 = sub_1A916B530();
        unint64_t v99 = v129;
        sub_1A90B07D4(a4, a5);
        swift_bridgeObjectRelease();
      }
      uint64_t v130 = v11;
      uint64_t v131 = a2;
      unint64_t v133 = v154;
      uint64_t v132 = v155;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v155 + 16))(v154, v131, v11);
      uint64_t v134 = v158;
      sub_1A90DCD84((uint64_t)v158);
      id v135 = v43;
      swift_bridgeObjectRetain();
      sub_1A90DCD84((uint64_t)v134);
      id v136 = v135;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v137 = sub_1A916AD40();
      os_log_type_t v138 = sub_1A916B3C0();
      int v139 = v138;
      if (os_log_type_enabled(v137, v138))
      {
        uint64_t v118 = swift_slowAlloc();
        id v159 = (id)swift_slowAlloc();
        id v163 = v159;
        *(_DWORD *)uint64_t v118 = 136316162;
        unint64_t v150 = v99;
        os_log_t v151 = v137;
        int v152 = v139;
        uint64_t v140 = v132;
        uint64_t v141 = *v134;
        unint64_t v142 = v134[1];
        swift_bridgeObjectRetain();
        uint64_t v161 = sub_1A90DCF6C(v141, v142, (uint64_t *)&v163);
        sub_1A916B5A0();
        swift_bridgeObjectRelease();
        sub_1A90DCDD4((uint64_t)v134);
        sub_1A90DCDD4((uint64_t)v134);
        *(_WORD *)(v118 + 12) = 2048;
        id v143 = objc_msgSend(v157, sel_statusCode);

        uint64_t v161 = (uint64_t)v143;
        sub_1A916B5A0();

        *(_WORD *)(v118 + 22) = 2080;
        uint64_t v161 = sub_1A916A730();
        sub_1A90DDAC4();
        uint64_t v158 = (uint64_t *)v136;
        uint64_t v144 = sub_1A916B530();
        unint64_t v146 = v145;
        swift_bridgeObjectRelease();
        uint64_t v161 = sub_1A90DCF6C(v144, v146, (uint64_t *)&v163);
        sub_1A916B5A0();
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v140 + 8))(v133, v130);
        *(_WORD *)(v118 + 32) = 2080;
        uint64_t v161 = 0;
        unint64_t v162 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_1A916B680();
        swift_bridgeObjectRelease();
        uint64_t v161 = 0x6F43737574617473;
        unint64_t v162 = 0xEB000000003D6564;
        id v160 = v156;
        sub_1A916B990();
        sub_1A916B050();
        swift_bridgeObjectRelease();
        sub_1A916B050();
        swift_bridgeObjectRetain();
        sub_1A916AEE0();
        sub_1A916B050();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        uint64_t v161 = sub_1A90DCF6C(v161, v162, (uint64_t *)&v163);
        sub_1A916B5A0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v118 + 42) = 2080;
        unint64_t v147 = v150;
        swift_bridgeObjectRetain();
        uint64_t v161 = sub_1A90DCF6C(v153, v147, (uint64_t *)&v163);
        sub_1A916B5A0();
        swift_bridgeObjectRelease_n();
        uint64_t v127 = "Upload HTTP failed and unhandled. No retry, identifier=%s, status=%ld, headers=%s, uploadResponse=%s, body=%s";
        goto LABEL_54;
      }

      sub_1A90DCDD4((uint64_t)v134);
      sub_1A90DCDD4((uint64_t)v134);

      (*(void (**)(unint64_t, uint64_t))(v132 + 8))(v133, v11);
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return (uint64_t)v156;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A90DC6EC(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1A90DDB38(0, &qword_1EB688C18, MEMORY[0x1E4FBBD58]);
    uint64_t v2 = sub_1A916B810();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v25 = a1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(a1 + 64);
  uint64_t v26 = (void *)v2;
  uint64_t v23 = v2 + 64;
  int64_t v24 = (unint64_t)(63 - v4) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      uint64_t v11 = (v5 - 1) & v5;
      unint64_t v12 = __clz(__rbit64(v5)) | (v7 << 6);
      int64_t v13 = v7;
    }
    else
    {
      int64_t v14 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v24)
      {
LABEL_36:
        sub_1A90A309C();
        return (unint64_t)v26;
      }
      unint64_t v15 = *(void *)(v25 + 8 * v14);
      int64_t v13 = v7 + 1;
      if (!v15)
      {
        int64_t v13 = v7 + 2;
        if (v7 + 2 >= v24) {
          goto LABEL_36;
        }
        unint64_t v15 = *(void *)(v25 + 8 * v13);
        if (!v15)
        {
          int64_t v13 = v7 + 3;
          if (v7 + 3 >= v24) {
            goto LABEL_36;
          }
          unint64_t v15 = *(void *)(v25 + 8 * v13);
          if (!v15)
          {
            int64_t v13 = v7 + 4;
            if (v7 + 4 >= v24) {
              goto LABEL_36;
            }
            unint64_t v15 = *(void *)(v25 + 8 * v13);
            if (!v15)
            {
              int64_t v16 = v7 + 5;
              if (v7 + 5 >= v24) {
                goto LABEL_36;
              }
              unint64_t v15 = *(void *)(v25 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  int64_t v13 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_41;
                  }
                  if (v13 >= v24) {
                    goto LABEL_36;
                  }
                  unint64_t v15 = *(void *)(v25 + 8 * v13);
                  ++v16;
                  if (v15) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v13 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      uint64_t v11 = (v15 - 1) & v15;
      unint64_t v12 = __clz(__rbit64(v15)) + (v13 << 6);
    }
    sub_1A90DDC24(*(void *)(a1 + 48) + 40 * v12, (uint64_t)v33);
    sub_1A90A24B0(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v34 + 8);
    v31[0] = v34[0];
    v31[1] = v34[1];
    uint64_t v32 = v35;
    v30[0] = v33[0];
    v30[1] = v33[1];
    sub_1A90DDC24((uint64_t)v30, (uint64_t)v29);
    if (!swift_dynamicCast())
    {
      sub_1A90DDC80((uint64_t)v30);
LABEL_35:
      swift_bridgeObjectRelease();
      sub_1A90A309C();
      swift_release();
      return 0;
    }
    sub_1A90A24B0((uint64_t)v31 + 8, (uint64_t)v29);
    sub_1A90DDC80((uint64_t)v30);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    unint64_t result = sub_1A90A1D98(v27, v28);
    if (v17)
    {
      uint64_t v8 = 16 * result;
      uint64_t v9 = (uint64_t *)(v26[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v9 = v27;
      v9[1] = v28;
      uint64_t v10 = (uint64_t *)(v26[7] + v8);
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t *v10 = v27;
      v10[1] = v28;
      goto LABEL_8;
    }
    if (v26[2] >= v26[3]) {
      break;
    }
    *(void *)(v23 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = (uint64_t *)(v26[6] + 16 * result);
    *uint64_t v18 = v27;
    v18[1] = v28;
    uint64_t v19 = (uint64_t *)(v26[7] + 16 * result);
    *uint64_t v19 = v27;
    v19[1] = v28;
    uint64_t v20 = v26[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_39;
    }
    _OWORD v26[2] = v22;
LABEL_8:
    int64_t v7 = v13;
    unint64_t v5 = v11;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A90DCAC4()
{
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  __swift_destroy_boxed_opaque_existential_0(v0 + 80);
  swift_release();
  uint64_t v1 = v0 + qword_1EB688710;
  uint64_t v2 = sub_1A916AD50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1A90DCB50()
{
  sub_1A90DCAC4();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t type metadata accessor for UploadService()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A90DCBC0(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1A90DCC6C;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1A90D8CC8, 0, 0);
}

uint64_t sub_1A90DCC6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *v3;
  swift_task_dealloc();
  int64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  return v7(a1, a2, a3);
}

uint64_t sub_1A90DCD84(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_1A90D1784(v2, v3);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A90DCDD4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  swift_bridgeObjectRelease();
  sub_1A90A2FD4(v2, v3);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A90DCE24(uint64_t a1)
{
  return sub_1A90D98C4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(char **)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1A90DCE30(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1A90DCE6C(void (*a1)(void))
{
  a1();

  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_1A90DCEA4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1A90DCECC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1A90DCEF4(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_1A90DCF6C(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_1A916B5A0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1A90DCF6C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1A90DD040(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1A90A24B0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1A90A24B0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1A90DD040(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1A916B5B0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1A90DD1FC(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1A916B6D0();
  if (!v8)
  {
    sub_1A916B7B0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1A916B830();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1A90DD1FC(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1A90DD294(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1A90DD510(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1A90DD510(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1A90DD294(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1A90DD40C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1A916B690();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1A916B7B0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1A916B070();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1A916B830();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1A916B7B0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void *sub_1A90DD40C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1A90DDB98(0, &qword_1EB688C50, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBBE00]);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1A90DD494(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1A916B0C0();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1AD0ED8E0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_1A90DD510(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1A90DDB98(0, &qword_1EB688C50, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

unsigned char **sub_1A90DD680(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  *uint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

void sub_1A90DD690()
{
  if (!qword_1EB687718)
  {
    unint64_t v0 = sub_1A916B260();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB687718);
    }
  }
}

uint64_t sub_1A90DD6F8()
{
  sub_1A90DD690();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1A90DD788(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  sub_1A90DD690();

  return sub_1A90D9A20(a1, a2, a3);
}

void sub_1A90DD810(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1A916B540();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1A90DD864()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A90DD89C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1A90A2FD4(*(void *)(v0 + 72), *(void *)(v0 + 80));
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 120, 7);
}

uint64_t sub_1A90DD8FC(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  return sub_1A90DA64C(a1, a2, a3, a4, *(void *)(v4 + 32), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40), *(void *)(v4 + 48), (uint64_t *)(v4 + 56));
}

void *sub_1A90DD938(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)sub_1A916B830();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

void sub_1A90DD9DC(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_1A916B5A0();
  *a1 = v7;
  int64_t v8 = *a2;
  if (*a2)
  {
    *int64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_1A90DDA94@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

void sub_1A90DDAC4()
{
  if (!qword_1EB686320)
  {
    sub_1A90DDB38(255, (unint64_t *)&qword_1EB689460, MEMORY[0x1E4FBAEA0]);
    unint64_t v0 = sub_1A916B540();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB686320);
    }
  }
}

void sub_1A90DDB38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void, void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1A90DDB98(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1A90DDBE4()
{
  unint64_t result = qword_1EB6872E0;
  if (!qword_1EB6872E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB6872E0);
  }
  return result;
}

uint64_t sub_1A90DDC24(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1A90DDC80(uint64_t a1)
{
  sub_1A90DDCDC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1A90DDCDC()
{
  if (!qword_1EB689490)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB689490);
    }
  }
}

uint64_t sub_1A90DDD4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v32[3] = a8;
  void v32[4] = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v32);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(boxed_opaque_existential_1, a3, a8);
  v31[3] = type metadata accessor for SHA1Base64SigningService();
  v31[4] = &off_1EFF9DA20;
  v31[0] = a2;
  uint64_t v18 = qword_1EB688710;
  if (qword_1EB688798 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1A916AD50();
  uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1EB68D9C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(a7 + v18, v20, v19);
  type metadata accessor for UploadEndpoint();
  uint64_t v21 = swift_allocObject();
  id v30 = &unk_1EFFAEEB0;
  uint64_t v22 = swift_dynamicCastObjCProtocolConditional();
  if (v22) {
    uint64_t v23 = v22;
  }
  else {
    uint64_t v23 = a1;
  }
  *(void *)(v21 + 16) = v23;
  *(unsigned char *)(v21 + 24) = v22 != 0;
  *(void *)(a7 + 16) = v21;
  sub_1A90A0DC8((uint64_t)v31, a7 + 40);
  *(void *)(a7 + 24) = a4;
  *(void *)(a7 + 32) = a5;
  sub_1A90A0DC8((uint64_t)v32, a7 + 80);
  *(unsigned char *)(a7 + 120) = a6 & 1;
  sub_1A90A0DC8((uint64_t)v32, (uint64_t)v29);
  uint64_t v24 = swift_allocObject();
  sub_1A908EC8C(v29, v24 + 16);
  sub_1A90DE274(0, &qword_1EB68A7F0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Lazy);
  uint64_t v25 = swift_allocObject();
  type metadata accessor for UnfairLock();
  *(_OWORD *)(v25 + 32) = 0u;
  *(_OWORD *)(v25 + 48) = 0u;
  *(void *)(v25 + 64) = 0;
  uint64_t v26 = swift_allocObject();
  swift_unknownObjectRetain();
  uint64_t v27 = (_DWORD *)swift_slowAlloc();
  *(void *)(v26 + 16) = v27;
  *uint64_t v27 = 0;
  *(_DWORD *)(v26 + 24) = 0x10000;
  *(void *)(v25 + 72) = v26;
  *(void *)(v25 + 80) = 1;
  *(void *)(v25 + 16) = sub_1A90DE218;
  *(void *)(v25 + 24) = v24;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
  *(void *)(a7 + 128) = v25;
  return a7;
}

uint64_t sub_1A90DDFD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  uint64_t v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1A90DE048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1A90DE0A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UploadDropbox.Debugging(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A90DE10C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  uint64_t v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(a2, a1, v7);
  return a2;
}

uint64_t sub_1A90DE17C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UploadDropbox.Debugging(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A90DE1E0()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A90DE218()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

void sub_1A90DE274(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1A908E870(255, &qword_1EB689A98);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t static ProcessError.== infix(_:_:)()
{
  return 1;
}

uint64_t ProcessError.hash(into:)()
{
  return sub_1A916BAC0();
}

uint64_t ProcessError.hashValue.getter()
{
  return sub_1A916BAD0();
}

unint64_t sub_1A90DE35C()
{
  unint64_t result = qword_1E97B1630;
  if (!qword_1E97B1630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1630);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ProcessError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A90DE44CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProcessError()
{
  return &type metadata for ProcessError;
}

uint64_t sub_1A90DE484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1A916AE70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  size_t v11 = *(void **)(*(void *)(v3 + 32) + OBJC_IVAR___AAAccessQueue_queue);
  void *v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBF0], v7);
  id v12 = v11;
  LOBYTE(v11) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    swift_beginAccess();
    uint64_t result = *(void *)(v3 + 48);
    uint64_t v14 = *(void *)(result + 16);
    if (v14)
    {
      uint64_t v19 = swift_bridgeObjectRetain();
      unint64_t v15 = (uint64_t *)(v19 + 40);
      do
      {
        uint64_t v16 = *v15;
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8);
        swift_unknownObjectRetain();
        v18(a1, a2, a3, ObjectType, v16);
        swift_unknownObjectRelease();
        v15 += 2;
        --v14;
      }
      while (v14);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A90DE640(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v6 = type metadata accessor for SequenceEntry(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1A90B2960(0, v10, 0);
    uint64_t v11 = v21;
    unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v12 = a3 + v18;
    uint64_t v13 = *(void *)(v7 + 72);
    while (1)
    {
      v19(v12);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v21 = v11;
      unint64_t v15 = *(void *)(v11 + 16);
      unint64_t v14 = *(void *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1A90B2960(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v21;
      }
      *(void *)(v11 + 16) = v15 + 1;
      sub_1A9096EF4((uint64_t)v9, v11 + v18 + v15 * v13, type metadata accessor for SequenceEntry);
      v12 += v13;
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1A90DE7E8(void *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v50 = a4;
  sub_1A90F1138(0, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v7);
  int64_t v10 = (void *)((char *)v47 - v9);
  uint64_t v11 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (void *)((char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_1A916AE70();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (void *)((char *)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v18 = *(void **)(*(void *)(v5 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v17 = v18;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E4FBCBF0], v14);
  id v19 = v18;
  LOBYTE(v18) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if (v18)
  {
    uint64_t v21 = v5 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
    swift_beginAccess();
    sub_1A9097024(v21, (uint64_t)v13, type metadata accessor for SessionManager.SessionState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v47[1] = v5;
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1) {
        sub_1A9096FC4((uint64_t)v13, type metadata accessor for SessionManager.SessionState);
      }
      uint64_t v23 = *(void *)(v5 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider + 24);
      uint64_t v24 = *(void *)(v5 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider + 32);
      __swift_project_boxed_opaque_existential_1((void *)(v5 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider), v23);
      double v25 = (*(double (**)(char *, uint64_t, uint64_t))(v24 + 8))(v51, v23, v24);
      unsigned int v26 = v51[0];
    }
    else
    {
      uint64_t v27 = (double *)(*v13 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_dataEventFormatter);
      unsigned int v26 = *(unsigned __int8 *)v27;
      double v25 = v27[1];
      swift_release();
    }
    v47[0] = v26;
    uint64_t v28 = *a1;
    uint64_t v29 = a1[1];
    id v30 = (void *)a1[2];
    uint64_t v31 = v8[11];
    uint64_t v32 = (char *)a1 + v31;
    os_log_type_t v33 = (char *)v10 + v31;
    uint64_t v34 = sub_1A916AC90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v33, v32, v34);
    uint64_t v35 = v8[13];
    uint64_t v36 = (void *)((char *)a1 + v8[12]);
    uint64_t v38 = *v36;
    uint64_t v37 = v36[1];
    uint64_t v39 = *(void *)((char *)a1 + v35);
    char v40 = *((unsigned char *)a1 + v35 + 8);
    sub_1A909F130((uint64_t)a1 + v8[14], (uint64_t)v10 + v8[14]);
    void *v10 = v28;
    v10[1] = v29;
    v10[3] = 0x302E312E30;
    v10[4] = 0xE500000000000000;
    void v10[2] = v30;
    uint64_t v41 = (void *)((char *)v10 + v8[12]);
    *uint64_t v41 = v38;
    v41[1] = v37;
    uint64_t v42 = (char *)v10 + v8[13];
    *(void *)uint64_t v42 = v39;
    v42[8] = v40;
    id v43 = (double *)((char *)v10 + v8[15]);
    *id v43 = *(double *)v47;
    v43[1] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v44 = v30;
    uint64_t v46 = v49;
    uint64_t v45 = v50;
    sub_1A90DE484((uint64_t)v10, v49, v50);
    return sub_1A90F07DC((uint64_t)v10, v48, v46, v45, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id BridgedAccessTracker.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void BridgedAccessTracker.init()()
{
}

id BridgedAccessTracker.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BridgedAccessTracker();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BridgedAccessTracker()
{
  return self;
}

uint64_t BridgedAccessTracker.time(eventType:)(char *a1)
{
  uint64_t v3 = sub_1A916AC90();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A916AE70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  int64_t v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR___AAAccessTracker_eventMirrorStore);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v13 = *(void **)(*(void *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    void *v10 = v13;
    (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBF0], v7);
    swift_retain();
    id v14 = v13;
    LOBYTE(v13) = sub_1A916AE90();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
    if (v13)
    {
      sub_1A916AC80();
      sub_1A90E3300(a1, v11 | 0x4000000000000000, (uint64_t)v6, 1);
      swift_release();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t BridgedAccessTracker.time(eventType:startTime:)(char *a1, uint64_t a2)
{
  uint64_t v5 = sub_1A916AE70();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR___AAAccessTracker_eventMirrorStore);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = *(void **)(*(void *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *uint64_t v8 = v11;
    (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBF0], v5);
    swift_retain();
    id v12 = v11;
    LOBYTE(v11) = sub_1A916AE90();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v6 + 8))(v8, v5);
    if (v11)
    {
      sub_1A90E3300(a1, v9 | 0x4000000000000000, a2, 1);
      swift_release();
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t BridgedAccessTracker.time(eventType:submitAndRestartWithSession:)(char *a1, int a2)
{
  int v17 = a2;
  uint64_t v4 = sub_1A916AC90();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1A916AE70();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = *(void *)(v2 + OBJC_IVAR___AAAccessTracker_eventMirrorStore);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v14 = *(void **)(*(void *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    void *v11 = v14;
    (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCBF0], v8);
    swift_retain();
    id v15 = v14;
    LOBYTE(v14) = sub_1A916AE90();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v9 + 8))(v11, v8);
    if (v14)
    {
      sub_1A916AC80();
      sub_1A90E3300(a1, v12 | 0x4000000000000000, (uint64_t)v7, v17 & 1);
      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t BridgedAccessTracker.time(eventType:submitAndRestartWithSession:startTime:)(char *a1, char a2, uint64_t a3)
{
  uint64_t v7 = sub_1A916AE70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void *)(v3 + OBJC_IVAR___AAAccessTracker_eventMirrorStore);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v13 = *(void **)(*(void *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    void *v10 = v13;
    (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBF0], v7);
    swift_retain();
    id v14 = v13;
    LOBYTE(v13) = sub_1A916AE90();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
    if (v13)
    {
      sub_1A90E3300(a1, v11 | 0x4000000000000000, a3, a2 & 1);
      swift_release();
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id BridgedAccessTracker.time(rawEvent:)(uint64_t a1)
{
  return objc_msgSend(v1, sel_timeRawEvent_submitAndRestartWithSession_, a1, 1);
}

void BridgedAccessTracker.time(rawEvent:startTime:)(uint64_t a1, uint64_t a2)
{
}

void BridgedAccessTracker.time(rawEvent:submitAndRestartWithSession:)(void *a1, int a2)
{
  uint64_t v4 = sub_1A916AC90();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1A916AE70();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    int v17 = a2;
    uint64_t v13 = *(void **)(*(void *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
    void *v11 = v13;
    (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCBF0], v8);
    id v14 = a1;
    id v15 = v13;
    LOBYTE(v13) = sub_1A916AE90();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
    if (v13)
    {
      sub_1A916AC80();
      sub_1A90E3300((char *)a1, 0x8000000000000000, (uint64_t)v7, v17 & 1);
      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t BridgedAccessTracker.time(rawEvent:submitAndRestartWithSession:startTime:)(void *a1, char a2, uint64_t a3)
{
  uint64_t v6 = sub_1A916AE70();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = *(void **)(*(void *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *uint64_t v9 = v11;
    (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBF0], v6);
    id v12 = a1;
    id v13 = v11;
    LOBYTE(v11) = sub_1A916AE90();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v9, v6);
    if (v11)
    {
      sub_1A90E3300((char *)a1, 0x8000000000000000, a3, a2 & 1);

      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id BridgedAccessTracker.submit(eventType:)()
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();

  return objc_msgSend(v0, sel_submitEventType_onlyIfTimed_, ObjCClassFromMetadata, 0);
}

uint64_t BridgedAccessTracker.submit(eventType:onlyIfTimed:)(uint64_t a1, int a2)
{
  void v21[3] = a2;
  uint64_t v22 = a1;
  uint64_t v3 = sub_1A916AC90();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A916AE70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (void *)((char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR___AAAccessTracker_eventMirrorStore);
  memset(v23, 0, sizeof(v23));
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return sub_1A909B5DC((uint64_t)v23);
  }
  uint64_t v13 = Strong;
  uint64_t v14 = *(void **)(*(void *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
  void *v10 = v14;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBF0], v7);
  swift_retain();
  id v15 = v14;
  LOBYTE(v14) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (v14)
  {
    sub_1A916AC80();
    int v17 = (char *)MEMORY[0x1F4188790](*(void *)(v13 + 80));
    uint64_t v18 = v22;
    *(void *)&v21[-20] = v13;
    *(void *)&v21[-18] = v18;
    *(void *)&v21[-16] = v11 | 0x4000000000000000;
    LOBYTE(v21[-14]) = v19;
    *(void *)&v21[-12] = v6;
    *(_OWORD *)&v21[-10] = v20;
    *(void *)&v21[-4] = 0;
    *(void *)&v21[-2] = 0;
    *(void *)&v21[-6] = v23;
    sub_1A9096610(v17, (void (*)(uint64_t))sub_1A90E39B4, (uint64_t)&v21[-24], (uint64_t)v23);
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_release();
    return sub_1A909B5DC((uint64_t)v23);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A90DFCA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6)
{
  uint64_t v32 = a4;
  uint64_t v33 = a6;
  v28[3] = a3;
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  sub_1A90F1138(0, (unint64_t *)&unk_1EB686890, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (uint64_t *)((char *)v28 - v8);
  uint64_t v29 = sub_1A916AC90();
  uint64_t v10 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  id v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1A916AE70();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (void *)((char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v18 = result;
    char v19 = *(void **)(*(void *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *uint64_t v16 = v19;
    (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FBCBF0], v13);
    id v20 = v19;
    LOBYTE(v19) = sub_1A916AE90();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v14 + 8))(v16, v13);
    if (v19)
    {
      sub_1A916AC80();
      uint64_t v21 = (char *)MEMORY[0x1F4188790](*(void *)(v18 + 80));
      uint64_t v22 = v30;
      *(void *)&v28[-20] = v18;
      *(void *)&v28[-18] = v22;
      *(void *)&v28[-16] = v31;
      LOBYTE(v28[-14]) = v23;
      *(void *)&v28[-12] = v12;
      *(_OWORD *)&v28[-10] = v24;
      *(void *)&v28[-6] = v32;
      *(void *)&v28[-4] = a5;
      *(void *)&v28[-2] = v33;
      sub_1A9096610(v21, (void (*)(uint64_t))sub_1A90E39B4, (uint64_t)&v28[-24], v25);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v29);
    }
    else
    {
      __break(1u);
    }
  }
  else if (a5)
  {
    sub_1A90F0788();
    uint64_t v26 = swift_allocError();
    *uint64_t v27 = xmmword_1A9170030;
    *uint64_t v9 = v26;
    swift_storeEnumTagMultiPayload();
    a5(v9);
    return sub_1A90F07DC((uint64_t)v9, (unint64_t *)&unk_1EB686890, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  }
  return result;
}

void BridgedAccessTracker.submit(eventType:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  void v8[4] = a2;
  v8[5] = a3;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  long long v8[2] = sub_1A90E015C;
  _OWORD v8[3] = &block_descriptor_3;
  uint64_t v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_submitEventType_onlyIfTimed_completion_, ObjCClassFromMetadata, 0, v7);
  _Block_release(v7);
}

void sub_1A90E015C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t BridgedAccessTracker.submit(eventType:onlyIfTimed:completion:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(v4 + OBJC_IVAR___AAAccessTracker_eventMirrorStore);
  memset(v12, 0, sizeof(v12));
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  *(void *)(v10 + 24) = a4;
  swift_retain();
  swift_retain();
  sub_1A90DFCA4(a1, v9 | 0x4000000000000000, a2, (uint64_t)v12, (void (*)(uint64_t *))sub_1A90F1214, v10);
  swift_release();
  swift_release();
  return sub_1A909B5DC((uint64_t)v12);
}

id BridgedAccessTracker.submit(rawEvent:)(uint64_t a1)
{
  return objc_msgSend(v1, sel_submitRawEvent_onlyIfTimed_, a1, 0);
}

uint64_t BridgedAccessTracker.submit(rawEvent:onlyIfTimed:)(void *a1, int a2)
{
  int v21 = a2;
  uint64_t v3 = sub_1A916AC90();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A916AE70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  memset(v22, 0, sizeof(v22));
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return sub_1A909B5DC((uint64_t)v22);
  }
  uint64_t v12 = Strong;
  uint64_t v13 = *(void **)(*(void *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
  void *v10 = v13;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBF0], v7);
  id v20 = a1;
  id v14 = v13;
  LOBYTE(v13) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (v13)
  {
    sub_1A916AC80();
    uint64_t v16 = (char *)MEMORY[0x1F4188790](*(void *)(v12 + 80));
    *(&v19 - 10) = v12;
    *(&v19 - 9) = (uint64_t)a1;
    *(&v19 - 8) = 0x8000000000000000;
    *((unsigned char *)&v19 - 56) = v17;
    *(&v19 - 6) = (uint64_t)v6;
    *(_OWORD *)(&v19 - 5) = v18;
    *(&v19 - 2) = 0;
    *(&v19 - 1) = 0;
    *(&v19 - 3) = (uint64_t)v22;
    sub_1A9096610(v16, (void (*)(uint64_t))sub_1A90E39B4, (uint64_t)(&v19 - 12), (uint64_t)v22);
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);

    return sub_1A909B5DC((uint64_t)v22);
  }
  __break(1u);
  return result;
}

void BridgedAccessTracker.submit(rawEvent:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v6[4] = a2;
  v6[5] = a3;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  v6[2] = sub_1A90E015C;
  v6[3] = &block_descriptor_4;
  uint64_t v5 = _Block_copy(v6);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_submitRawEvent_onlyIfTimed_completion_, a1, 0, v5);
  _Block_release(v5);
}

uint64_t BridgedAccessTracker.submit(rawEvent:onlyIfTimed:completion:)(void *a1, int a2, uint64_t a3, uint64_t a4)
{
  memset(v11, 0, sizeof(v11));
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  id v9 = a1;
  swift_retain();
  sub_1A90DFCA4((uint64_t)a1, 0x8000000000000000, a2, (uint64_t)v11, (void (*)(uint64_t *))sub_1A90F1214, v8);

  swift_release();
  return sub_1A909B5DC((uint64_t)v11);
}

uint64_t BridgedAccessTracker.explicitSubmit(eventType:submitTime:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A916AE70();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  memset(v17, 0, sizeof(v17));
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return sub_1A909B5DC((uint64_t)v17);
  }
  uint64_t v9 = Strong;
  uint64_t v10 = *(void **)(*(void *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v7 = v10;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
  swift_retain();
  id v11 = v10;
  LOBYTE(v10) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if (v10)
  {
    uint64_t v13 = (char *)MEMORY[0x1F4188790](*(void *)(v9 + 80));
    *(void *)&v16[-80] = v9;
    *(void *)&v16[-72] = a1;
    *(void *)&v16[-64] = v14;
    v16[-56] = 0;
    *(void *)&v16[-48] = a2;
    *(_OWORD *)&v16[-40] = v15;
    *(void *)&v16[-16] = 0;
    *(void *)&v16[-8] = 0;
    *(void *)&v16[-24] = v17;
    sub_1A9096610(v13, (void (*)(uint64_t))sub_1A90E39B4, (uint64_t)&v16[-96], (uint64_t)v17);
    swift_release();
    swift_release();
    return sub_1A909B5DC((uint64_t)v17);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A90E0E04(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, void (*a6)(void), uint64_t a7)
{
  return sub_1A90E0E54(a1, a2, a3, a4, a5, a6, a7, &qword_1E97B1658, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80);
}

uint64_t sub_1A90E0E54(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, void (*a6)(void), uint64_t a7, unint64_t *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v40 = a7;
  uint64_t v41 = a6;
  uint64_t v38 = a4;
  uint64_t v39 = a5;
  int v35 = a3;
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  sub_1A90F1138(0, a8, a9, a10, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)((char *)&v33 - v13);
  uint64_t v15 = sub_1A916AE70();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  long long v18 = (uint64_t *)((char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = v10;
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v20 = result;
    int v21 = v41;
    uint64_t v22 = *(void **)(*(void *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *long long v18 = v22;
    (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E4FBCBF0], v15);
    id v23 = v22;
    LOBYTE(v22) = sub_1A916AE90();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v16 + 8))(v18, v15);
    if (v22)
    {
      *(double *)&long long v24 = MEMORY[0x1F4188790](*(void *)(v20 + 80));
      uint64_t v25 = v36;
      *(&v33 - 10) = v20;
      *(&v33 - 9) = v25;
      *(&v33 - 8) = v37;
      *((unsigned char *)&v33 - 56) = v26;
      *(&v33 - 6) = v38;
      *(_OWORD *)(&v33 - 5) = v24;
      *(&v33 - 3) = v39;
      *(&v33 - 2) = (uint64_t)v21;
      *(&v33 - 1) = v40;
      sub_1A9096610(v27, v28, (uint64_t)(&v33 - 12), v29);
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v30 = (void (*)(uint64_t *))v41;
    if (v41)
    {
      sub_1A90F0788();
      uint64_t v31 = swift_allocError();
      *uint64_t v32 = xmmword_1A9170030;
      *uint64_t v14 = v31;
      swift_storeEnumTagMultiPayload();
      v30(v14);
      return sub_1A90F07DC((uint64_t)v14, a8, a9, a10, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
    }
  }
  return result;
}

uint64_t sub_1A90E1140(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, char *))
{
  uint64_t v7 = sub_1A916AC90();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
  sub_1A916AC60();
  id v12 = a1;
  a5(ObjCClassMetadata, v10);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t BridgedAccessTracker.explicitSubmit(eventType:onlyIfTimed:submitTime:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1A916AE70();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  memset(v19, 0, sizeof(v19));
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return sub_1A909B5DC((uint64_t)v19);
  }
  uint64_t v10 = Strong;
  id v11 = *(void **)(*(void *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v8 = v11;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBF0], v5);
  swift_retain();
  id v12 = v11;
  LOBYTE(v11) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if (v11)
  {
    uint64_t v14 = (char *)MEMORY[0x1F4188790](*(void *)(v10 + 80));
    *(void *)&v18[-80] = v10;
    *(void *)&v18[-72] = a1;
    *(void *)&v18[-64] = v15;
    v18[-56] = v16;
    *(void *)&v18[-48] = a3;
    *(_OWORD *)&v18[-40] = v17;
    *(void *)&v18[-16] = 0;
    *(void *)&v18[-8] = 0;
    *(void *)&v18[-24] = v19;
    sub_1A9096610(v14, (void (*)(uint64_t))sub_1A90E39B4, (uint64_t)&v18[-96], (uint64_t)v19);
    swift_release();
    swift_release();
    return sub_1A909B5DC((uint64_t)v19);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A90E146C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, char *))
{
  uint64_t v9 = sub_1A916AC90();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
  sub_1A916AC60();
  id v14 = a1;
  a6(ObjCClassMetadata, a4, v12);

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void BridgedAccessTracker.explicitSubmit(eventType:submitTime:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v9 = (void *)sub_1A916AC10();
  void v11[4] = a3;
  v11[5] = a4;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  _OWORD v11[2] = sub_1A90E015C;
  v11[3] = &block_descriptor_12;
  uint64_t v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_explicitSubmitEventType_onlyIfTimed_submitTime_completion_, ObjCClassFromMetadata, 0, v9, v10);
  _Block_release(v10);
}

uint64_t BridgedAccessTracker.explicitSubmit(eventType:onlyIfTimed:submitTime:completion:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(v5 + OBJC_IVAR___AAAccessTracker_eventMirrorStore);
  memset(v14, 0, sizeof(v14));
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a4;
  *(void *)(v12 + 24) = a5;
  swift_retain();
  swift_retain();
  sub_1A90E0E54(a1, v11 | 0x4000000000000000, a2, a3, (uint64_t)v14, (void (*)(void))sub_1A90F1214, v12, (unint64_t *)&unk_1EB686890, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000);
  swift_release();
  swift_release();
  return sub_1A909B5DC((uint64_t)v14);
}

void BridgedAccessTracker.explicitSubmit(rawEvent:submitTime:)(uint64_t a1, uint64_t a2)
{
}

void sub_1A90E1B8C(uint64_t a1, uint64_t a2, SEL *a3, char a4)
{
  id v8 = (id)sub_1A916AC10();
  objc_msgSend(v4, *a3, a1, a4 & 1, v8);
}

uint64_t sub_1A90E1C18(void *a1, uint64_t a2, void *a3, uint64_t a4, SEL *a5, char a6)
{
  uint64_t v10 = sub_1A916AC90();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A916AC60();
  id v14 = a3;
  id v15 = a1;
  uint64_t v16 = (void *)sub_1A916AC10();
  objc_msgSend(v15, *a5, v14, a6 & 1, v16);

  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t BridgedAccessTracker.explicitSubmit(rawEvent:onlyIfTimed:submitTime:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1A916AE70();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  memset(v19, 0, sizeof(v19));
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return sub_1A909B5DC((uint64_t)v19);
  }
  uint64_t v10 = Strong;
  uint64_t v11 = *(void **)(*(void *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *id v8 = v11;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBF0], v5);
  id v12 = a1;
  id v13 = v11;
  LOBYTE(v11) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if (v11)
  {
    *(double *)&long long v15 = MEMORY[0x1F4188790](*(void *)(v10 + 80));
    *(void *)&v18[-80] = v10;
    *(void *)&v18[-72] = a1;
    *(void *)&v18[-64] = 0x8000000000000000;
    v18[-56] = v16;
    *(void *)&v18[-48] = a3;
    *(_OWORD *)&v18[-40] = v15;
    *(void *)&v18[-16] = 0;
    *(void *)&v18[-8] = 0;
    *(void *)&v18[-24] = v19;
    sub_1A9096610(v17, (void (*)(uint64_t))sub_1A90E39B4, (uint64_t)&v18[-96], (uint64_t)v19);

    swift_release();
    return sub_1A909B5DC((uint64_t)v19);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A90E1F50(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(id, uint64_t, char *))
{
  uint64_t v10 = sub_1A916AC90();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A916AC60();
  id v14 = a3;
  id v15 = a1;
  a6(v14, a4, v13);

  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void BridgedAccessTracker.explicitSubmit(rawEvent:submitTime:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = (void *)sub_1A916AC10();
  void v11[4] = a3;
  v11[5] = a4;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  _OWORD v11[2] = sub_1A90E015C;
  v11[3] = &block_descriptor_19;
  uint64_t v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_explicitSubmitRawEvent_onlyIfTimed_submitTime_completion_, a1, 0, v9, v10);
  _Block_release(v10);
}

uint64_t BridgedAccessTracker.explicitSubmit(rawEvent:onlyIfTimed:submitTime:completion:)(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  memset(v13, 0, sizeof(v13));
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a4;
  *(void *)(v10 + 24) = a5;
  id v11 = a1;
  swift_retain();
  sub_1A90E0E54((uint64_t)a1, 0x8000000000000000, a2, a3, (uint64_t)v13, sub_1A90E3A18, v10, (unint64_t *)&unk_1EB686890, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000);

  swift_release();
  return sub_1A909B5DC((uint64_t)v13);
}

void sub_1A90E2430(uint64_t a1, void (*a2)(id, id))
{
  uint64_t v28 = a2;
  sub_1A90F1138(0, &qword_1EB687078, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v27 - v5);
  sub_1A90F1138(0, (unint64_t *)&unk_1EB686890, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (id *)((char *)&v27 - v8);
  sub_1A90F08B8(a1, (uint64_t)&v27 - v8, (unint64_t *)&unk_1EB686890, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v10 = *v9;
    id v11 = *v9;
    v28(0, v10);
  }
  else
  {
    sub_1A90F0D5C((uint64_t)v9, (uint64_t)v6);
    uint64_t v13 = *v6;
    uint64_t v12 = v6[1];
    uint64_t v15 = v6[3];
    uint64_t v14 = v6[4];
    char v16 = (void *)v6[2];
    uint64_t v17 = (uint64_t *)((char *)v6 + *(int *)(v4 + 48));
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (objc_class *)type metadata accessor for BridgedProcessEvent();
    int v21 = (char *)objc_allocWithZone(v20);
    uint64_t v22 = &v21[OBJC_IVAR___AAProcessEvent_name];
    *(void *)uint64_t v22 = v13;
    *((void *)v22 + 1) = v12;
    id v23 = &v21[OBJC_IVAR___AAProcessEvent_version];
    *(void *)id v23 = v15;
    *((void *)v23 + 1) = v14;
    *(void *)&v21[OBJC_IVAR___AAProcessEvent_json] = v16;
    long long v24 = &v21[OBJC_IVAR___AAProcessEvent_groupName];
    *(void *)long long v24 = v19;
    *((void *)v24 + 1) = v18;
    v29.receiver = v21;
    v29.super_class = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v25 = v16;
    swift_bridgeObjectRetain();
    id v26 = objc_msgSendSuper2(&v29, sel_init);
    v28(v26, 0);

    sub_1A90F07DC((uint64_t)v6, &qword_1EB687078, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
  }
}

uint64_t BridgedAccessTracker.push(data:traits:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  uint64_t v23 = a3;
  uint64_t v6 = sub_1A916AE70();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getObjectType();
  uint64_t v10 = sub_1A910872C();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  char v16 = v15;
  if (a2) {
    uint64_t v17 = sub_1A90BB20C();
  }
  else {
    uint64_t v17 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v19 = *(void **)(*(void *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v9 = v19;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBF0], v6);
  id v20 = v19;
  LOBYTE(v19) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if (v19)
  {
    sub_1A90EF5A8(v10, v12, v14, v16 & 1, (uint64_t)v17, v23, v24, v25);
    swift_bridgeObjectRelease();
    swift_release();
LABEL_8:
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t BridgedAccessTracker.pop(dataType:)()
{
  uint64_t v0 = sub_1A916AE70();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (uint64_t *)((char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_1A916BBB0();
  uint64_t v6 = v5;
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = *(void **)(*(void *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *uint64_t v3 = v8;
    (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCBF0], v0);
    id v9 = v8;
    LOBYTE(v8) = sub_1A916AE90();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v1 + 8))(v3, v0);
    if (v8)
    {
      sub_1A90EFF44(v4, v6);
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall BridgedAccessTracker.pop(dataName:)(Swift::String dataName)
{
  object = dataName._object;
  uint64_t countAndFlagsBits = dataName._countAndFlagsBits;
  uint64_t v3 = sub_1A916AE70();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = *(void **)(*(void *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *uint64_t v6 = v8;
    (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBF0], v3);
    id v9 = v8;
    LOBYTE(v8) = sub_1A916AE90();
    (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v3);
    if (v8)
    {
      sub_1A90EFF44(countAndFlagsBits, object);
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t BridgedAccessTracker.peek(dataName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1A916AE70();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (void *)((char *)&v17[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = *(void **)(*(void *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *id v9 = v11;
    (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBF0], v6);
    id v12 = v11;
    LOBYTE(v11) = sub_1A916AE90();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v9, v6);
    if ((v11 & 1) == 0)
    {
      __break(1u);
      return result;
    }
    sub_1A909562C(a1, a2, 0, 0, 1, (uint64_t)v17);
    uint64_t v13 = v18;
    if (v18)
    {
      uint64_t v14 = __swift_project_boxed_opaque_existential_1(v17, v18);
      *(void *)(a3 + 24) = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a3);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(boxed_opaque_existential_1, v14, v13);
      swift_release();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
    }
    swift_release();
    uint64_t result = sub_1A908EE84((uint64_t)v17, &qword_1EB6887D8, qword_1EB6892F8, (uint64_t)&protocol descriptor for DataEventType);
  }
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

BOOL BridgedAccessTracker.isDiagnosticSubmissionAllowed.getter()
{
  sub_1A9095B68(&v2);
  return (v2 & 1) == 0 && v2 != 2;
}

uint64_t sub_1A90E3300(char *a1, unint64_t a2, uint64_t a3, int a4)
{
  int v51 = a4;
  uint64_t v49 = a3;
  uint64_t v7 = type metadata accessor for Tracker.Timer(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  os_log_type_t v52 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9096EA0(0, &qword_1EB689398, (void (*)(uint64_t))type metadata accessor for Tracker.Timer);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v50 = (uint64_t)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v48 - v13;
  uint64_t v15 = sub_1A916AE70();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (unint64_t *)((char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v54 = v4;
  uint64_t v19 = *(void **)(*(void *)(v4 + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v18 = v19;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E4FBCBF0], v15);
  id v20 = v19;
  LOBYTE(v19) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v16 + 8))(v18, v15);
  if (v19)
  {
    uint64_t v22 = 0x4564656764697242;
    unint64_t v23 = a2 >> 62;
    unint64_t v48 = a2;
    uint64_t v53 = a1;
    if (a2 >> 62)
    {
      if (v23 == 1)
      {
        id v24 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
        uint64_t v25 = sub_1A916AF90();
        uint64_t v27 = v26;
      }
      else
      {
        uint64_t v25 = *(void *)&a1[OBJC_IVAR___AARawEvent_name];
        uint64_t v27 = *(void *)&a1[OBJC_IVAR___AARawEvent_name + 8];
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      uint64_t v25 = 0x4564656764697242;
      uint64_t v27 = 0xEC000000746E6576;
    }
    uint64_t v28 = v54;
    swift_beginAccess();
    uint64_t v29 = *(void *)(v28 + 104);
    if (*(void *)(v29 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v30 = sub_1A90A1D98(v25, v27);
      if (v31)
      {
        sub_1A9097024(*(void *)(v29 + 56) + *(void *)(v8 + 72) * v30, (uint64_t)v14, type metadata accessor for Tracker.Timer);
        uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
        v32(v14, 0, 1, v7);
      }
      else
      {
        uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
        v32(v14, 1, 1, v7);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v32(v14, 1, 1, v7);
    }
    swift_bridgeObjectRelease();
    int v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7);
    uint64_t result = sub_1A9096DD8((uint64_t)v14, &qword_1EB689398, (void (*)(uint64_t))type metadata accessor for Tracker.Timer);
    if (v33 == 1)
    {
      uint64_t v34 = sub_1A916AC90();
      uint64_t v35 = (uint64_t)v52;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v52, v49, v34);
      if (v23)
      {
        if (v23 == 1)
        {
          id v36 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
          uint64_t v37 = sub_1A916AF90();
          uint64_t v39 = v38;
        }
        else
        {
          uint64_t v37 = *(void *)&v53[OBJC_IVAR___AARawEvent_name];
          uint64_t v39 = *(void *)&v53[OBJC_IVAR___AARawEvent_name + 8];
          swift_bridgeObjectRetain();
        }
      }
      else
      {
        uint64_t v37 = 0x4564656764697242;
        uint64_t v39 = 0xEC000000746E6576;
      }
      uint64_t v40 = v50;
      sub_1A9097024(v35, v50, type metadata accessor for Tracker.Timer);
      v32((char *)v40, 0, 1, v7);
      swift_beginAccess();
      sub_1A90A64FC(v40, v37, v39);
      swift_endAccess();
      if (v51)
      {
        if (v23)
        {
          BOOL v41 = v23 == 1;
          unint64_t v42 = v48;
          id v43 = v53;
          if (v41)
          {
            id v44 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
            uint64_t v22 = sub_1A916AF90();
            uint64_t v46 = v45;
          }
          else
          {
            uint64_t v22 = *(void *)&v53[OBJC_IVAR___AARawEvent_name];
            uint64_t v46 = *(void *)&v53[OBJC_IVAR___AARawEvent_name + 8];
            swift_bridgeObjectRetain();
          }
        }
        else
        {
          unint64_t v42 = v48;
          id v43 = v53;
          uint64_t v46 = 0xEC000000746E6576;
        }
        sub_1A90F1138(0, &qword_1EB687C30, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Tracker.RestartTimer);
        v55[3] = v47;
        v55[4] = &off_1EFFA07C8;
        v55[0] = v43;
        v55[1] = v42;
        swift_beginAccess();
        sub_1A90F0DEC(v43, v42);
        sub_1A91085FC((uint64_t)v55, v22, v46);
        swift_endAccess();
      }
      return sub_1A9096FC4(v35, type metadata accessor for Tracker.Timer);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1A90E3958(uint64_t a1, char *a2, unint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, void (*a9)(uint64_t *), uint64_t a10)
{
}

uint64_t sub_1A90E39B4()
{
  return sub_1A90F10E0((uint64_t (*)(void, void, void, void, void, void, void, void, void))sub_1A90E3A34);
}

uint64_t sub_1A90E39E0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1A90E3A18(uint64_t a1)
{
  sub_1A90E2430(a1, *(void (**)(id, id))(v1 + 16));
}

void sub_1A90E3A34(char *a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, void (*a8)(uint64_t *), uint64_t a9)
{
  uint64_t v217 = a8;
  uint64_t v205 = a6;
  uint64_t v204 = a5;
  uint64_t v195 = a4;
  unint64_t v219 = a2;
  v210 = a1;
  sub_1A90F1138(0, (unint64_t *)&unk_1EB686890, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  uint64_t v209 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  os_log_t v189 = (uint64_t *)((char *)&v184 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (uint64_t *)((char *)&v184 - v15);
  sub_1A90F1138(0, &qword_1EB687078, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
  uint64_t v187 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v188 = (char *)&v184 - v18;
  uint64_t v19 = type metadata accessor for Sequence(0);
  MEMORY[0x1F4188790](v19 - 8);
  v199 = (uint64_t *)((char *)&v184 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A9096EA0(0, &qword_1EB687A98, (void (*)(uint64_t))type metadata accessor for TimedData);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v201 = (char *)&v184 - v22;
  uint64_t v206 = sub_1A916AC90();
  uint64_t v197 = *(void *)(v206 - 8);
  MEMORY[0x1F4188790](v206);
  uint64_t v203 = (char *)&v184 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v194 = (void (*)(char *, uint64_t, uint64_t))sub_1A916ACC0();
  uint64_t v193 = *((void *)v194 - 1);
  MEMORY[0x1F4188790](v194);
  objc_super v192 = (char *)&v184 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = type metadata accessor for EventData();
  MEMORY[0x1F4188790](v196);
  uint64_t v198 = (uint64_t *)((char *)&v184 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v208 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1F4188790](v208);
  uint64_t v27 = (uint64_t *)((char *)&v184 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A9096EA0(0, &qword_1EB689398, (void (*)(uint64_t))type metadata accessor for Tracker.Timer);
  MEMORY[0x1F4188790](v28 - 8);
  unint64_t v30 = (char *)&v184 - v29;
  unint64_t v31 = sub_1A916AE70();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v34 = (uint64_t *)((char *)&v184 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v218 = v9;
  uint64_t v35 = *(char **)(v9 + 80);
  uint64_t v191 = OBJC_IVAR___AAAccessQueue_queue;
  id v36 = *(void **)&v35[OBJC_IVAR___AAAccessQueue_queue];
  *uint64_t v34 = v36;
  uint64_t v37 = *(void (**)(void))(v32 + 104);
  unsigned int v211 = *MEMORY[0x1E4FBCBF0];
  uint64_t v213 = v32 + 104;
  v212 = (void (*)(void *, void, unint64_t))v37;
  v37(v34);
  id v38 = v36;
  LOBYTE(v36) = sub_1A916AE90();
  uint64_t v39 = *(void (**)(void *, unint64_t))(v32 + 8);
  uint64_t v215 = v32 + 8;
  unint64_t v216 = v31;
  uint64_t v214 = v39;
  v39(v34, v31);
  if ((v36 & 1) == 0)
  {
    __break(1u);
    goto LABEL_107;
  }
  uint64_t v190 = v35;
  unint64_t v200 = a7;
  uint64_t v40 = a9;
  BOOL v41 = v217;
  unint64_t v42 = v219;
  if (a3)
  {
    uint64_t v207 = v16;
    if (v219 >> 62)
    {
      if (v219 >> 62 == 1)
      {
        id v43 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
        uint64_t v44 = sub_1A916AF90();
        uint64_t v46 = v45;
      }
      else
      {
        uint64_t v44 = *(void *)&v210[OBJC_IVAR___AARawEvent_name];
        uint64_t v46 = *(void *)&v210[OBJC_IVAR___AARawEvent_name + 8];
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      uint64_t v46 = 0xEC000000746E6576;
      uint64_t v44 = 0x4564656764697242;
    }
    uint64_t v47 = v218;
    swift_beginAccess();
    uint64_t v48 = *(void *)(v47 + 104);
    uint64_t v49 = *(void *)(v48 + 16);
    uint64_t v202 = a9;
    if (v49)
    {
      swift_bridgeObjectRetain();
      unint64_t v50 = sub_1A90A1D98(v44, v46);
      if (v51)
      {
        unint64_t v52 = v50;
        uint64_t v53 = *(void *)(v48 + 56);
        uint64_t v54 = type metadata accessor for Tracker.Timer(0);
        uint64_t v55 = *(void *)(v54 - 8);
        uint64_t v56 = v53 + *(void *)(v55 + 72) * v52;
        unint64_t v57 = v219;
        sub_1A9097024(v56, (uint64_t)v30, type metadata accessor for Tracker.Timer);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v30, 0, 1, v54);
        unint64_t v42 = v57;
        BOOL v41 = v217;
      }
      else
      {
        uint64_t v54 = type metadata accessor for Tracker.Timer(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v30, 1, 1, v54);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v54 = type metadata accessor for Tracker.Timer(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v30, 1, 1, v54);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for Tracker.Timer(0);
    int v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48))(v30, 1, v54);
    sub_1A9096DD8((uint64_t)v30, &qword_1EB689398, (void (*)(uint64_t))type metadata accessor for Tracker.Timer);
    uint64_t v40 = v202;
    uint64_t v16 = v207;
    if (v58 == 1)
    {
      if (!v41) {
        return;
      }
      sub_1A90F0788();
      uint64_t v59 = swift_allocError();
      *id v60 = xmmword_1A9170050;
      goto LABEL_28;
    }
  }
  uint64_t v61 = v218;
  uint64_t v62 = v218 + 64;
  uint64_t v63 = MEMORY[0x1AD0EEDF0](v218 + 64);
  if (!v63) {
    goto LABEL_23;
  }
  unint64_t v31 = v63;
  uint64_t v64 = *(void **)(*(void *)(v63 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v34 = v64;
  unint64_t v65 = v216;
  v212(v34, v211, v216);
  id v66 = v64;
  LOBYTE(v64) = sub_1A916AE90();
  v214(v34, v65);
  if ((v64 & 1) == 0)
  {
LABEL_107:
    __break(1u);
    goto LABEL_108;
  }
  uint64_t v67 = v31 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
  swift_beginAccess();
  sub_1A9097024(v67, (uint64_t)v27, type metadata accessor for SessionManager.SessionState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1) {
      sub_1A9096FC4((uint64_t)v27, type metadata accessor for SessionManager.SessionState);
    }
    swift_unknownObjectRelease();
    unint64_t v42 = v219;
LABEL_23:
    uint64_t v69 = MEMORY[0x1AD0EEDF0](v61 + 64);
    if (!v69)
    {
LABEL_26:
      if (!v41) {
        return;
      }
      sub_1A90F0788();
      uint64_t v59 = swift_allocError();
      *os_log_type_t v74 = 0;
      v74[1] = 0;
LABEL_28:
      *uint64_t v16 = v59;
      swift_storeEnumTagMultiPayload();
      v41(v16);
      sub_1A90F07DC((uint64_t)v16, (unint64_t *)&unk_1EB686890, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
      return;
    }
    unint64_t v31 = v69;
    uint64_t v70 = *(void **)(*(void *)(v69 + 48) + OBJC_IVAR___AAAccessQueue_queue);
    *uint64_t v34 = v70;
    unint64_t v71 = v216;
    v212(v34, v211, v216);
    id v72 = v70;
    LOBYTE(v70) = sub_1A916AE90();
    v214(v34, v71);
    if (v70)
    {
      uint64_t v73 = *(void *)(v31 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_options);
      swift_unknownObjectRelease();
      if (v73)
      {
        sub_1A90E736C(v210, v42, v204, v205, v200, (uint64_t)v41, v40);
        return;
      }
      goto LABEL_26;
    }
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    __break(1u);
    swift_once();
    id v116 = (id)qword_1EB689AA0;
    LODWORD(v218) = sub_1A916B3C0();
    sub_1A908EF64(0, (unint64_t *)&qword_1EB68ACD8, (unint64_t *)&qword_1EB68A920, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v117 = swift_allocObject();
    *(_OWORD *)(v117 + 16) = xmmword_1A916E200;
    uint64_t v223 = 0;
    *(void *)&long long v224 = 0xE000000000000000;
    uint64_t v220 = v210;
    *(void *)&long long v221 = v219;
    sub_1A90F1138(0, &qword_1EB6872F8, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmit);
    sub_1A916B780();
    uint64_t v118 = v223;
    uint64_t v119 = v224;
    uint64_t v120 = MEMORY[0x1E4FBB1A0];
    *(void *)(v117 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v121 = sub_1A90A67C0();
    *(void *)(v117 + 64) = v121;
    *(void *)(v117 + 32) = v118;
    *(void *)(v117 + 40) = v119;
    uint64_t v223 = 0;
    *(void *)&long long v224 = 0xE000000000000000;
    uint64_t v220 = (char *)v31;
    sub_1A908E870(0, (unint64_t *)&qword_1EB689860);
    sub_1A916B780();
    uint64_t v122 = v223;
    uint64_t v123 = v224;
    *(void *)(v117 + 96) = v120;
    *(void *)(v117 + 104) = v121;
    *(void *)(v117 + 72) = v122;
    *(void *)(v117 + 80) = v123;
    sub_1A916AD30();

    swift_bridgeObjectRelease();
    unint64_t v124 = v217;
    unint64_t v125 = v207;
    if (v217)
    {
      *uint64_t v207 = v31;
      swift_storeEnumTagMultiPayload();
      id v126 = (id)v31;
      v124(v125);

      sub_1A90F07DC((uint64_t)v125, (unint64_t *)&unk_1EB686890, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
    }
    else
    {
    }
    return;
  }
  uint64_t v208 = *v27;
  swift_unknownObjectRelease();
  uint64_t v185 = v62;
  uint64_t v75 = MEMORY[0x1AD0EEDF0](v61 + 64);
  uint64_t v202 = v40;
  uint64_t v207 = v16;
  if (v75)
  {
    sub_1A90E851C(v210, v219, (uint64_t)&v223);
    uint64_t v220 = (char *)v223;
    long long v186 = v224;
    long long v221 = v224;
    char v222 = v225;
    uint64_t v76 = sub_1A909DB08((uint64_t *)&v220);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v76 = 0;
  }
  uint64_t v77 = v197;
  id v78 = v192;
  sub_1A916ACB0();
  uint64_t v79 = sub_1A916ACA0();
  *(void *)&long long v186 = v80;
  (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v193 + 8))(v78, v194);
  id v81 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 16);
  uint64_t v82 = v195;
  uint64_t v195 = v77 + 16;
  long long v194 = v81;
  v81(v203, v82, v206);
  uint64_t v223 = 47;
  *(void *)&long long v224 = 0xE100000000000000;
  uint64_t v220 = (char *)Tracker.path.getter();
  sub_1A909B740(0, (unint64_t *)&qword_1EB688C10, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1A909384C();
  sub_1A916AF40();
  swift_bridgeObjectRelease();
  sub_1A916B050();
  swift_bridgeObjectRelease();
  uint64_t v83 = v223;
  uint64_t v84 = v224;
  uint64_t v197 = v76;
  if (v76)
  {
    uint64_t v85 = v76;
    uint64_t v86 = *(void *)(v76 + 16);
    uint64_t v87 = *(void *)(v85 + 24);
    uint64_t v88 = OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier;
    id v89 = (uint64_t *)(v85 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier);
    uint64_t v90 = v89[1];
    if (v90)
    {
      uint64_t v91 = *v89;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_39;
    }
    swift_bridgeObjectRetain();
    uint64_t v92 = v208;
  }
  else
  {
    uint64_t v92 = v208;
    uint64_t v86 = *(void *)(v208 + 16);
    uint64_t v87 = *(void *)(v208 + 24);
    swift_bridgeObjectRetain();
    uint64_t v88 = OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier;
  }
  uint64_t v93 = v92 + v88;
  uint64_t v91 = *(void *)(v92 + v88);
  uint64_t v90 = *(void *)(v93 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_39:
  uint64_t v94 = (uint64_t)v198;
  uint64_t v95 = v186;
  uint64_t *v198 = v79;
  *(void *)(v94 + 8) = v95;
  unint64_t v96 = (int *)v196;
  id v97 = *(void (**)(void))(v77 + 32);
  uint64_t v193 = v94 + *(int *)(v196 + 20);
  v97();
  id v98 = (uint64_t *)(v94 + v96[6]);
  *id v98 = v83;
  v98[1] = v84;
  unint64_t v99 = (void *)(v94 + v96[7]);
  void *v99 = v86;
  v99[1] = v87;
  uint64_t v100 = (void *)(v94 + v96[8]);
  *uint64_t v100 = v91;
  v100[1] = v90;
  uint64_t v101 = v201;
  os_log_type_t v102 = v210;
  unint64_t v103 = v219;
  sub_1A90E8778((uint64_t)v210, v219, v94, (uint64_t)v201);
  uint64_t v104 = v103 >> 62;
  uint64_t v105 = v199;
  if (!(v103 >> 62)) {
    goto LABEL_47;
  }
  if (v104 == 1)
  {
    uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    if ((objc_msgSend(ObjCClassFromMetadata, sel_respondsToSelector_, sel_requiresDiagnosticsConsent) & 1) == 0
      || !objc_msgSend(ObjCClassFromMetadata, sel_requiresDiagnosticsConsent))
    {
      goto LABEL_47;
    }
  }
  else if ((v102[OBJC_IVAR___AARawEvent_requiresDiagnosticsConsent] & 1) == 0)
  {
    goto LABEL_47;
  }
  sub_1A9095B68((char *)&v223);
  if (v223 == 2)
  {
    __break(1u);
    return;
  }
  if (v223)
  {
    if (qword_1EB688798 == -1)
    {
LABEL_53:
      uint64_t v127 = sub_1A916AD50();
      __swift_project_value_buffer(v127, (uint64_t)qword_1EB68D9C0);
      unint64_t v128 = v219;
      sub_1A90F0DEC(v102, v219);
      sub_1A90F0DEC(v102, v128);
      unint64_t v129 = sub_1A916AD40();
      uint64_t v130 = v102;
      os_log_type_t v131 = sub_1A916B3D0();
      if (os_log_type_enabled(v129, v131))
      {
        uint64_t v132 = (uint8_t *)swift_slowAlloc();
        uint64_t v133 = swift_slowAlloc();
        uint64_t v223 = v133;
        *(_DWORD *)uint64_t v132 = 136446210;
        uint64_t v134 = v210;
        if (v104 == 2)
        {
          uint64_t v136 = *(void *)&v210[OBJC_IVAR___AARawEvent_name];
          unint64_t v135 = *(void *)&v210[OBJC_IVAR___AARawEvent_name + 8];
          swift_bridgeObjectRetain();
        }
        else
        {
          id v171 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
          uint64_t v136 = sub_1A916AF90();
          unint64_t v135 = v172;
        }
        uint64_t v220 = (char *)sub_1A90DCF6C(v136, v135, &v223);
        sub_1A916B5A0();
        swift_bridgeObjectRelease();
        unint64_t v173 = v219;
        sub_1A909F588(v134, v219);
        sub_1A909F588(v134, v173);
        _os_log_impl(&dword_1A9088000, v129, v131, "Discarding D&U-only event %{public}s", v132, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0EECA0](v133, -1, -1);
        MEMORY[0x1AD0EECA0](v132, -1, -1);

        uint64_t v94 = (uint64_t)v198;
        uint64_t v154 = (uint64_t)v201;
        uint64_t v130 = v134;
      }
      else
      {
        uint64_t v154 = (uint64_t)v101;
        sub_1A909F588(v130, v128);
        sub_1A909F588(v130, v128);
      }
      v174 = v217;
      if (v217)
      {
        if (v104 == 2)
        {
          uint64_t v175 = *(void *)&v130[OBJC_IVAR___AARawEvent_name];
          uint64_t v176 = *(void *)&v130[OBJC_IVAR___AARawEvent_name + 8];
          swift_bridgeObjectRetain();
        }
        else
        {
          id v177 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
          uint64_t v175 = sub_1A916AF90();
          uint64_t v176 = v178;
        }
        uint64_t v179 = v189;
        sub_1A90F092C();
        uint64_t v180 = swift_allocError();
        *uint64_t v181 = v175;
        v181[1] = v176;
        uint64_t *v179 = v180;
        swift_storeEnumTagMultiPayload();
        v174(v179);
        swift_release();
        swift_release();
        sub_1A90F07DC((uint64_t)v179, (unint64_t *)&unk_1EB686890, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
      }
      else
      {
        swift_release();
        swift_release();
      }
      uint64_t v182 = v154;
LABEL_103:
      sub_1A9096DD8(v182, &qword_1EB687A98, (void (*)(uint64_t))type metadata accessor for TimedData);
      uint64_t v183 = v94;
      goto LABEL_104;
    }
LABEL_116:
    swift_once();
    goto LABEL_53;
  }
LABEL_47:
  unint64_t v107 = v217;
  uint64_t v108 = v218;
  unint64_t v109 = (unint64_t)v102;
  os_log_type_t v102 = 0;
  sub_1A90E96C8(v109, v219, v94, (uint64_t)v101, v204, v205, (uint64_t)v105);
  uint64_t v110 = *(void *)(v108 + 192);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v110 + 8))(&v223, ObjectType, v110);
  uint64_t v104 = v223;
  uint64_t v101 = v190;
  uint64_t v112 = *(void **)&v190[v191];
  *uint64_t v34 = v112;
  unint64_t v113 = v216;
  v212(v34, v211, v216);
  id v114 = v112;
  LOBYTE(v112) = sub_1A916AE90();
  uint64_t v115 = ((uint64_t (*)(void *, unint64_t))v214)(v34, v113);
  if ((v112 & 1) == 0)
  {
    __break(1u);
    goto LABEL_116;
  }
  MEMORY[0x1F4188790](v115);
  *(&v184 - 2) = v104;
  *(&v184 - 1) = (uint64_t)v105;
  uint64_t v137 = (void *)sub_1A9095E10(v101, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1A909A990, (uint64_t)(&v184 - 4));
  swift_bridgeObjectRelease();
  uint64_t v138 = (uint64_t)v201;
  if (!v137)
  {
    if (qword_1EB68ACE8 != -1) {
      swift_once();
    }
    id v155 = (id)qword_1EB689AA0;
    sub_1A916B3A0();
    sub_1A916AD30();

    if (v107)
    {
      uint64_t v157 = *v105;
      uint64_t v156 = v105[1];
      sub_1A90F0864();
      uint64_t v158 = swift_allocError();
      *id v159 = v157;
      v159[1] = v156;
      id v160 = v207;
      *uint64_t v207 = v158;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      v107(v160);
      swift_release();
      swift_release();
      sub_1A90F07DC((uint64_t)v160, (unint64_t *)&unk_1EB686890, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
    }
    else
    {
      swift_release();
      swift_release();
    }
    sub_1A9096FC4((uint64_t)v105, type metadata accessor for Sequence);
    uint64_t v182 = v138;
    goto LABEL_103;
  }
  uint64_t v139 = v218;
  swift_retain();
  uint64_t v140 = 0;
  char v141 = 1;
  do
  {
    swift_beginAccess();
    unint64_t v31 = *(void *)(v139 + 144);
    if (v31 >> 62)
    {
      uint64_t v143 = v139;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v142 = sub_1A916B7E0();
      if (!v142)
      {
LABEL_73:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v147 = 0;
        unint64_t v31 = 0;
        goto LABEL_77;
      }
    }
    else
    {
      uint64_t v142 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v143 = v139;
      swift_retain();
      swift_bridgeObjectRetain();
      if (!v142) {
        goto LABEL_73;
      }
    }
    unint64_t v144 = v142 - 1;
    if (__OFSUB__(v142, 1)) {
      goto LABEL_109;
    }
    if ((v31 & 0xC000000000000001) != 0)
    {
      unint64_t v145 = (char *)MEMORY[0x1AD0EDEF0](v144, v31);
    }
    else
    {
      if ((v144 & 0x8000000000000000) != 0) {
        goto LABEL_110;
      }
      if (v144 >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_111;
      }
      unint64_t v145 = (char *)*(id *)(v31 + 8 * v144 + 32);
    }
    unint64_t v146 = v145;
    swift_bridgeObjectRelease();
    uint64_t v147 = *(void *)&v146[OBJC_IVAR___AAGroup_name];
    unint64_t v31 = *(void *)&v146[OBJC_IVAR___AAGroup_name + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();

    unint64_t v148 = *(void *)(v139 + 144);
    if (v148 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v149 = sub_1A916B7E0();
      if (!v149)
      {
LABEL_76:
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v140 = 0;
        char v141 = 1;
        goto LABEL_77;
      }
    }
    else
    {
      uint64_t v149 = *(void *)((v148 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v149) {
        goto LABEL_76;
      }
    }
    unint64_t v150 = v149 - 1;
    if (__OFSUB__(v149, 1)) {
      goto LABEL_112;
    }
    if ((v148 & 0xC000000000000001) != 0)
    {
      uint64_t v153 = MEMORY[0x1AD0EDEF0](v150, v148);
      swift_bridgeObjectRelease();
      uint64_t v140 = *(void *)(v153 + OBJC_IVAR___AAGroup_contentType);
      char v141 = *(unsigned char *)(v153 + OBJC_IVAR___AAGroup_contentType + 8);
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      if ((v150 & 0x8000000000000000) != 0) {
        goto LABEL_113;
      }
      if (v150 >= *(void *)((v148 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_114;
      }
      os_log_t v151 = *(id *)(v148 + 8 * v150 + 32);
      swift_bridgeObjectRelease();
      uint64_t v140 = *(void *)&v151[OBJC_IVAR___AAGroup_contentType];
      char v141 = v151[OBJC_IVAR___AAGroup_contentType + 8];
      swift_release();
    }
LABEL_77:
    uint64_t v152 = *(void *)(v143 + 136);
    swift_retain();
    swift_release();
    if (!v152) {
      goto LABEL_86;
    }
    uint64_t v139 = v152;
  }
  while (!v31);
  swift_release();
LABEL_86:
  uint64_t v162 = *v199;
  uint64_t v161 = v199[1];
  id v163 = v187;
  uint64_t v164 = v188;
  v194(&v188[v187[11]], v193, v206);
  sub_1A909F130(v200, (uint64_t)v164 + v163[14]);
  void *v164 = v162;
  v164[1] = v161;
  v164[3] = 0x302E312E30;
  v164[4] = 0xE500000000000000;
  v164[2] = v137;
  uint64_t v165 = (void *)((char *)v164 + v163[12]);
  *uint64_t v165 = v147;
  v165[1] = v31;
  uint64_t v166 = (char *)v164 + v163[13];
  *(void *)uint64_t v166 = v140;
  v166[8] = v141 & 1;
  *(_OWORD *)((char *)v164 + v163[15]) = xmmword_1A9170040;
  uint64_t v167 = MEMORY[0x1AD0EEDF0](v185);
  swift_bridgeObjectRetain();
  id v168 = v137;
  if (v167)
  {
    sub_1A90DE7E8(v164, &qword_1EB687078, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000);
    swift_unknownObjectRelease();
  }
  char v169 = v217;
  if (v217)
  {
    uint64_t v170 = v207;
    sub_1A90F08B8((uint64_t)v164, (uint64_t)v207, &qword_1EB687078, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
    swift_storeEnumTagMultiPayload();
    v169(v170);

    swift_release();
    swift_release();
    sub_1A90F07DC((uint64_t)v170, (unint64_t *)&unk_1EB686890, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  }
  else
  {

    swift_release();
    swift_release();
  }
  sub_1A90F07DC((uint64_t)v164, &qword_1EB687078, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
  sub_1A9096FC4((uint64_t)v199, type metadata accessor for Sequence);
  sub_1A9096DD8((uint64_t)v201, &qword_1EB687A98, (void (*)(uint64_t))type metadata accessor for TimedData);
  uint64_t v183 = (uint64_t)v198;
LABEL_104:
  sub_1A9096FC4(v183, (uint64_t (*)(void))type metadata accessor for EventData);
}

void sub_1A90E56D0(char *a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, void (*a8)(uint64_t *), uint64_t a9)
{
  uint64_t v218 = a8;
  uint64_t v206 = a6;
  uint64_t v205 = a5;
  uint64_t v196 = a4;
  unint64_t v220 = a2;
  unsigned int v211 = a1;
  sub_1A90F1138(0, &qword_1E97B1658, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  uint64_t v210 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v190 = (uint64_t *)((char *)&v185 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (uint64_t *)((char *)&v185 - v15);
  sub_1A90F1138(0, &qword_1E97B1660, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
  uint64_t v188 = v17;
  MEMORY[0x1F4188790](v17);
  os_log_t v189 = (char *)&v185 - v18;
  uint64_t v19 = type metadata accessor for Sequence(0);
  MEMORY[0x1F4188790](v19 - 8);
  unint64_t v200 = (uint64_t *)((char *)&v185 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A9096EA0(0, &qword_1EB687A98, (void (*)(uint64_t))type metadata accessor for TimedData);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v202 = (char *)&v185 - v22;
  uint64_t v207 = sub_1A916AC90();
  uint64_t v198 = *(void *)(v207 - 8);
  MEMORY[0x1F4188790](v207);
  uint64_t v204 = (char *)&v185 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v195 = (void (*)(char *, uint64_t, uint64_t))sub_1A916ACC0();
  uint64_t v194 = *((void *)v195 - 1);
  MEMORY[0x1F4188790](v195);
  uint64_t v193 = (char *)&v185 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = type metadata accessor for EventData();
  MEMORY[0x1F4188790](v197);
  v199 = (uint64_t *)((char *)&v185 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v209 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1F4188790](v209);
  uint64_t v27 = (uint64_t *)((char *)&v185 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A9096EA0(0, &qword_1EB689398, (void (*)(uint64_t))type metadata accessor for Tracker.Timer);
  MEMORY[0x1F4188790](v28 - 8);
  unint64_t v30 = (char *)&v185 - v29;
  unint64_t v31 = sub_1A916AE70();
  uint64_t v32 = *(void *)(v31 - 8);
  double v33 = MEMORY[0x1F4188790](v31);
  uint64_t v35 = (uint64_t *)((char *)&v185 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v219 = v9;
  id v36 = *(char **)(v9 + 80);
  uint64_t v192 = OBJC_IVAR___AAAccessQueue_queue;
  uint64_t v37 = *(void **)&v36[OBJC_IVAR___AAAccessQueue_queue];
  *uint64_t v35 = v37;
  id v38 = *(void (**)(void, double))(v32 + 104);
  unsigned int v212 = *MEMORY[0x1E4FBCBF0];
  uint64_t v214 = v32 + 104;
  uint64_t v213 = (void (*)(void *, void, unint64_t))v38;
  v38(v35, v33);
  id v39 = v37;
  LOBYTE(v37) = sub_1A916AE90();
  uint64_t v40 = *(void (**)(void *, unint64_t))(v32 + 8);
  uint64_t v216 = v32 + 8;
  unint64_t v217 = v31;
  uint64_t v215 = v40;
  v40(v35, v31);
  if ((v37 & 1) == 0)
  {
    __break(1u);
    goto LABEL_107;
  }
  uint64_t v191 = v36;
  unint64_t v201 = a7;
  uint64_t v41 = a9;
  unint64_t v42 = v218;
  unint64_t v43 = v220;
  if (a3)
  {
    uint64_t v208 = v16;
    if (v220 >> 62)
    {
      if (v220 >> 62 == 1)
      {
        id v44 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
        uint64_t v45 = sub_1A916AF90();
        uint64_t v47 = v46;
      }
      else
      {
        uint64_t v45 = *(void *)&v211[OBJC_IVAR___AARawEvent_name];
        uint64_t v47 = *(void *)&v211[OBJC_IVAR___AARawEvent_name + 8];
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      uint64_t v47 = 0xEC000000746E6576;
      uint64_t v45 = 0x457972616D6D7553;
    }
    uint64_t v48 = v219;
    swift_beginAccess();
    uint64_t v49 = *(void *)(v48 + 104);
    uint64_t v50 = *(void *)(v49 + 16);
    uint64_t v203 = a9;
    if (v50)
    {
      swift_bridgeObjectRetain();
      unint64_t v51 = sub_1A90A1D98(v45, v47);
      if (v52)
      {
        unint64_t v53 = v51;
        uint64_t v54 = *(void *)(v49 + 56);
        uint64_t v55 = type metadata accessor for Tracker.Timer(0);
        uint64_t v56 = *(void *)(v55 - 8);
        uint64_t v57 = v54 + *(void *)(v56 + 72) * v53;
        unint64_t v58 = v220;
        sub_1A9097024(v57, (uint64_t)v30, type metadata accessor for Tracker.Timer);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v30, 0, 1, v55);
        unint64_t v43 = v58;
        unint64_t v42 = v218;
      }
      else
      {
        uint64_t v55 = type metadata accessor for Tracker.Timer(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v30, 1, 1, v55);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v55 = type metadata accessor for Tracker.Timer(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v30, 1, 1, v55);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for Tracker.Timer(0);
    int v59 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v55 - 8) + 48))(v30, 1, v55);
    sub_1A9096DD8((uint64_t)v30, &qword_1EB689398, (void (*)(uint64_t))type metadata accessor for Tracker.Timer);
    uint64_t v41 = v203;
    uint64_t v16 = v208;
    if (v59 == 1)
    {
      if (!v42) {
        return;
      }
      sub_1A90F0788();
      uint64_t v60 = swift_allocError();
      *uint64_t v61 = xmmword_1A9170050;
      goto LABEL_28;
    }
  }
  uint64_t v62 = v219;
  uint64_t v63 = v219 + 64;
  uint64_t v64 = MEMORY[0x1AD0EEDF0](v219 + 64);
  if (!v64) {
    goto LABEL_23;
  }
  unint64_t v31 = v64;
  unint64_t v65 = *(void **)(*(void *)(v64 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v35 = v65;
  unint64_t v66 = v217;
  v213(v35, v212, v217);
  id v67 = v65;
  LOBYTE(v65) = sub_1A916AE90();
  v215(v35, v66);
  if ((v65 & 1) == 0)
  {
LABEL_107:
    __break(1u);
    goto LABEL_108;
  }
  uint64_t v68 = v31 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
  swift_beginAccess();
  sub_1A9097024(v68, (uint64_t)v27, type metadata accessor for SessionManager.SessionState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1) {
      sub_1A9096FC4((uint64_t)v27, type metadata accessor for SessionManager.SessionState);
    }
    swift_unknownObjectRelease();
    unint64_t v43 = v220;
LABEL_23:
    uint64_t v70 = MEMORY[0x1AD0EEDF0](v62 + 64);
    if (!v70)
    {
LABEL_26:
      if (!v42) {
        return;
      }
      sub_1A90F0788();
      uint64_t v60 = swift_allocError();
      *uint64_t v75 = 0;
      v75[1] = 0;
LABEL_28:
      *uint64_t v16 = v60;
      swift_storeEnumTagMultiPayload();
      v42(v16);
      sub_1A90F07DC((uint64_t)v16, &qword_1E97B1658, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
      return;
    }
    unint64_t v31 = v70;
    unint64_t v71 = *(void **)(*(void *)(v70 + 48) + OBJC_IVAR___AAAccessQueue_queue);
    *uint64_t v35 = v71;
    unint64_t v72 = v217;
    v213(v35, v212, v217);
    id v73 = v71;
    LOBYTE(v71) = sub_1A916AE90();
    v215(v35, v72);
    if (v71)
    {
      uint64_t v74 = *(void *)(v31 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_options);
      swift_unknownObjectRelease();
      if (v74)
      {
        sub_1A90E7C44(v211, v43, v205, v206, v201, (uint64_t)v42, v41);
        return;
      }
      goto LABEL_26;
    }
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    __break(1u);
    swift_once();
    id v117 = (id)qword_1EB689AA0;
    LODWORD(v219) = sub_1A916B3C0();
    sub_1A908EF64(0, (unint64_t *)&qword_1EB68ACD8, (unint64_t *)&qword_1EB68A920, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v118 = swift_allocObject();
    *(_OWORD *)(v118 + 16) = xmmword_1A916E200;
    uint64_t v224 = 0;
    *(void *)&long long v225 = 0xE000000000000000;
    long long v221 = v211;
    *(void *)&long long v222 = v220;
    sub_1A90F1138(0, &qword_1E97B1668, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmit);
    sub_1A916B780();
    uint64_t v119 = v224;
    uint64_t v120 = v225;
    uint64_t v121 = MEMORY[0x1E4FBB1A0];
    *(void *)(v118 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v122 = sub_1A90A67C0();
    *(void *)(v118 + 64) = v122;
    *(void *)(v118 + 32) = v119;
    *(void *)(v118 + 40) = v120;
    uint64_t v224 = 0;
    *(void *)&long long v225 = 0xE000000000000000;
    long long v221 = (char *)v31;
    sub_1A908E870(0, (unint64_t *)&qword_1EB689860);
    sub_1A916B780();
    uint64_t v123 = v224;
    uint64_t v124 = v225;
    *(void *)(v118 + 96) = v121;
    *(void *)(v118 + 104) = v122;
    *(void *)(v118 + 72) = v123;
    *(void *)(v118 + 80) = v124;
    sub_1A916AD30();

    swift_bridgeObjectRelease();
    unint64_t v125 = v218;
    id v126 = v208;
    if (v218)
    {
      *uint64_t v208 = v31;
      swift_storeEnumTagMultiPayload();
      id v127 = (id)v31;
      v125(v126);

      sub_1A90F07DC((uint64_t)v126, &qword_1E97B1658, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
    }
    else
    {
    }
    return;
  }
  uint64_t v209 = *v27;
  swift_unknownObjectRelease();
  uint64_t v186 = v63;
  uint64_t v76 = MEMORY[0x1AD0EEDF0](v62 + 64);
  uint64_t v203 = v41;
  uint64_t v208 = v16;
  if (v76)
  {
    sub_1A90E851C(v211, v220, (uint64_t)&v224);
    long long v221 = (char *)v224;
    long long v187 = v225;
    long long v222 = v225;
    char v223 = v226;
    uint64_t v77 = sub_1A909DB08((uint64_t *)&v221);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v77 = 0;
  }
  uint64_t v78 = v198;
  uint64_t v79 = v193;
  sub_1A916ACB0();
  uint64_t v80 = sub_1A916ACA0();
  *(void *)&long long v187 = v81;
  (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v194 + 8))(v79, v195);
  uint64_t v82 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 16);
  uint64_t v83 = v196;
  uint64_t v196 = v78 + 16;
  uint64_t v195 = v82;
  v82(v204, v83, v207);
  uint64_t v224 = 47;
  *(void *)&long long v225 = 0xE100000000000000;
  long long v221 = (char *)Tracker.path.getter();
  sub_1A909B740(0, (unint64_t *)&qword_1EB688C10, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1A909384C();
  sub_1A916AF40();
  swift_bridgeObjectRelease();
  sub_1A916B050();
  swift_bridgeObjectRelease();
  uint64_t v84 = v224;
  uint64_t v85 = v225;
  uint64_t v198 = v77;
  if (v77)
  {
    uint64_t v86 = v77;
    uint64_t v87 = *(void *)(v77 + 16);
    uint64_t v88 = *(void *)(v86 + 24);
    uint64_t v89 = OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier;
    uint64_t v90 = (uint64_t *)(v86 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier);
    uint64_t v91 = v90[1];
    if (v91)
    {
      uint64_t v92 = *v90;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_39;
    }
    swift_bridgeObjectRetain();
    uint64_t v93 = v209;
  }
  else
  {
    uint64_t v93 = v209;
    uint64_t v87 = *(void *)(v209 + 16);
    uint64_t v88 = *(void *)(v209 + 24);
    swift_bridgeObjectRetain();
    uint64_t v89 = OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier;
  }
  uint64_t v94 = v93 + v89;
  uint64_t v92 = *(void *)(v93 + v89);
  uint64_t v91 = *(void *)(v94 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_39:
  uint64_t v95 = (uint64_t)v199;
  uint64_t v96 = v187;
  uint64_t *v199 = v80;
  *(void *)(v95 + 8) = v96;
  id v97 = (int *)v197;
  id v98 = *(void (**)(void))(v78 + 32);
  uint64_t v194 = v95 + *(int *)(v197 + 20);
  v98();
  unint64_t v99 = (uint64_t *)(v95 + v97[6]);
  uint64_t *v99 = v84;
  v99[1] = v85;
  uint64_t v100 = (void *)(v95 + v97[7]);
  *uint64_t v100 = v87;
  v100[1] = v88;
  uint64_t v101 = (void *)(v95 + v97[8]);
  *uint64_t v101 = v92;
  v101[1] = v91;
  os_log_type_t v102 = v202;
  unint64_t v103 = v211;
  unint64_t v104 = v220;
  sub_1A90E8F20((uint64_t)v211, v220, v95, (uint64_t)v202);
  uint64_t v105 = v104 >> 62;
  unint64_t v106 = v200;
  if (!(v104 >> 62)) {
    goto LABEL_47;
  }
  if (v105 == 1)
  {
    uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    if ((objc_msgSend(ObjCClassFromMetadata, sel_respondsToSelector_, sel_requiresDiagnosticsConsent) & 1) == 0
      || !objc_msgSend(ObjCClassFromMetadata, sel_requiresDiagnosticsConsent))
    {
      goto LABEL_47;
    }
  }
  else if ((v103[OBJC_IVAR___AARawEvent_requiresDiagnosticsConsent] & 1) == 0)
  {
    goto LABEL_47;
  }
  sub_1A9095B68((char *)&v224);
  if (v224 == 2)
  {
    __break(1u);
    return;
  }
  if (v224)
  {
    if (qword_1EB688798 == -1)
    {
LABEL_53:
      uint64_t v128 = sub_1A916AD50();
      __swift_project_value_buffer(v128, (uint64_t)qword_1EB68D9C0);
      unint64_t v129 = v220;
      sub_1A90F0DEC(v103, v220);
      sub_1A90F0DEC(v103, v129);
      uint64_t v130 = sub_1A916AD40();
      os_log_type_t v131 = v103;
      os_log_type_t v132 = sub_1A916B3D0();
      if (os_log_type_enabled(v130, v132))
      {
        uint64_t v133 = (uint8_t *)swift_slowAlloc();
        uint64_t v134 = swift_slowAlloc();
        uint64_t v224 = v134;
        *(_DWORD *)uint64_t v133 = 136446210;
        unint64_t v135 = v211;
        if (v105 == 2)
        {
          uint64_t v137 = *(void *)&v211[OBJC_IVAR___AARawEvent_name];
          unint64_t v136 = *(void *)&v211[OBJC_IVAR___AARawEvent_name + 8];
          swift_bridgeObjectRetain();
        }
        else
        {
          id v172 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
          uint64_t v137 = sub_1A916AF90();
          unint64_t v136 = v173;
        }
        long long v221 = (char *)sub_1A90DCF6C(v137, v136, &v224);
        sub_1A916B5A0();
        swift_bridgeObjectRelease();
        unint64_t v174 = v220;
        sub_1A909F588(v135, v220);
        sub_1A909F588(v135, v174);
        _os_log_impl(&dword_1A9088000, v130, v132, "Discarding D&U-only event %{public}s", v133, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0EECA0](v134, -1, -1);
        MEMORY[0x1AD0EECA0](v133, -1, -1);

        uint64_t v95 = (uint64_t)v199;
        uint64_t v155 = (uint64_t)v202;
        os_log_type_t v131 = v135;
      }
      else
      {
        uint64_t v155 = (uint64_t)v102;
        sub_1A909F588(v131, v129);
        sub_1A909F588(v131, v129);
      }
      uint64_t v175 = v218;
      if (v218)
      {
        if (v105 == 2)
        {
          uint64_t v176 = *(void *)&v131[OBJC_IVAR___AARawEvent_name];
          uint64_t v177 = *(void *)&v131[OBJC_IVAR___AARawEvent_name + 8];
          swift_bridgeObjectRetain();
        }
        else
        {
          id v178 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
          uint64_t v176 = sub_1A916AF90();
          uint64_t v177 = v179;
        }
        uint64_t v180 = v190;
        sub_1A90F092C();
        uint64_t v181 = swift_allocError();
        uint64_t *v182 = v176;
        v182[1] = v177;
        *uint64_t v180 = v181;
        swift_storeEnumTagMultiPayload();
        v175(v180);
        swift_release();
        swift_release();
        sub_1A90F07DC((uint64_t)v180, &qword_1E97B1658, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
      }
      else
      {
        swift_release();
        swift_release();
      }
      uint64_t v183 = v155;
LABEL_103:
      sub_1A9096DD8(v183, &qword_1EB687A98, (void (*)(uint64_t))type metadata accessor for TimedData);
      uint64_t v184 = v95;
      goto LABEL_104;
    }
LABEL_116:
    swift_once();
    goto LABEL_53;
  }
LABEL_47:
  uint64_t v108 = v218;
  uint64_t v109 = v219;
  unint64_t v110 = (unint64_t)v103;
  unint64_t v103 = 0;
  sub_1A90EAE8C(v110, v220, v95, (uint64_t)v102, v205, v206, (uint64_t)v106);
  uint64_t v111 = *(void *)(v109 + 192);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v111 + 8))(&v224, ObjectType, v111);
  uint64_t v105 = v224;
  os_log_type_t v102 = v191;
  unint64_t v113 = *(void **)&v191[v192];
  *uint64_t v35 = v113;
  unint64_t v114 = v217;
  v213(v35, v212, v217);
  id v115 = v113;
  LOBYTE(v113) = sub_1A916AE90();
  uint64_t v116 = ((uint64_t (*)(void *, unint64_t))v215)(v35, v114);
  if ((v113 & 1) == 0)
  {
    __break(1u);
    goto LABEL_116;
  }
  MEMORY[0x1F4188790](v116);
  *(&v185 - 2) = v105;
  *(&v185 - 1) = (uint64_t)v106;
  uint64_t v138 = (void *)sub_1A9095E10(v102, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1A909A9A8, (uint64_t)(&v185 - 4));
  swift_bridgeObjectRelease();
  uint64_t v139 = (uint64_t)v202;
  if (!v138)
  {
    if (qword_1EB68ACE8 != -1) {
      swift_once();
    }
    id v156 = (id)qword_1EB689AA0;
    sub_1A916B3A0();
    sub_1A916AD30();

    if (v108)
    {
      uint64_t v158 = *v106;
      uint64_t v157 = v106[1];
      sub_1A90F0864();
      uint64_t v159 = swift_allocError();
      *id v160 = v158;
      v160[1] = v157;
      uint64_t v161 = v208;
      *uint64_t v208 = v159;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      v108(v161);
      swift_release();
      swift_release();
      sub_1A90F07DC((uint64_t)v161, &qword_1E97B1658, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
    }
    else
    {
      swift_release();
      swift_release();
    }
    sub_1A9096FC4((uint64_t)v106, type metadata accessor for Sequence);
    uint64_t v183 = v139;
    goto LABEL_103;
  }
  uint64_t v140 = v219;
  swift_retain();
  uint64_t v141 = 0;
  char v142 = 1;
  do
  {
    swift_beginAccess();
    unint64_t v31 = *(void *)(v140 + 144);
    if (v31 >> 62)
    {
      uint64_t v144 = v140;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v143 = sub_1A916B7E0();
      if (!v143)
      {
LABEL_73:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v148 = 0;
        unint64_t v31 = 0;
        goto LABEL_77;
      }
    }
    else
    {
      uint64_t v143 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v144 = v140;
      swift_retain();
      swift_bridgeObjectRetain();
      if (!v143) {
        goto LABEL_73;
      }
    }
    unint64_t v145 = v143 - 1;
    if (__OFSUB__(v143, 1)) {
      goto LABEL_109;
    }
    if ((v31 & 0xC000000000000001) != 0)
    {
      unint64_t v146 = (char *)MEMORY[0x1AD0EDEF0](v145, v31);
    }
    else
    {
      if ((v145 & 0x8000000000000000) != 0) {
        goto LABEL_110;
      }
      if (v145 >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_111;
      }
      unint64_t v146 = (char *)*(id *)(v31 + 8 * v145 + 32);
    }
    uint64_t v147 = v146;
    swift_bridgeObjectRelease();
    uint64_t v148 = *(void *)&v147[OBJC_IVAR___AAGroup_name];
    unint64_t v31 = *(void *)&v147[OBJC_IVAR___AAGroup_name + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();

    unint64_t v149 = *(void *)(v140 + 144);
    if (v149 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v150 = sub_1A916B7E0();
      if (!v150)
      {
LABEL_76:
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v141 = 0;
        char v142 = 1;
        goto LABEL_77;
      }
    }
    else
    {
      uint64_t v150 = *(void *)((v149 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v150) {
        goto LABEL_76;
      }
    }
    unint64_t v151 = v150 - 1;
    if (__OFSUB__(v150, 1)) {
      goto LABEL_112;
    }
    if ((v149 & 0xC000000000000001) != 0)
    {
      uint64_t v154 = MEMORY[0x1AD0EDEF0](v151, v149);
      swift_bridgeObjectRelease();
      uint64_t v141 = *(void *)(v154 + OBJC_IVAR___AAGroup_contentType);
      char v142 = *(unsigned char *)(v154 + OBJC_IVAR___AAGroup_contentType + 8);
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      if ((v151 & 0x8000000000000000) != 0) {
        goto LABEL_113;
      }
      if (v151 >= *(void *)((v149 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_114;
      }
      uint64_t v152 = *(id *)(v149 + 8 * v151 + 32);
      swift_bridgeObjectRelease();
      uint64_t v141 = *(void *)&v152[OBJC_IVAR___AAGroup_contentType];
      char v142 = v152[OBJC_IVAR___AAGroup_contentType + 8];
      swift_release();
    }
LABEL_77:
    uint64_t v153 = *(void *)(v144 + 136);
    swift_retain();
    swift_release();
    if (!v153) {
      goto LABEL_86;
    }
    uint64_t v140 = v153;
  }
  while (!v31);
  swift_release();
LABEL_86:
  uint64_t v163 = *v200;
  uint64_t v162 = v200[1];
  uint64_t v164 = v188;
  uint64_t v165 = v189;
  v195(&v189[v188[11]], v194, v207);
  sub_1A909F130(v201, (uint64_t)v165 + v164[14]);
  *uint64_t v165 = v163;
  v165[1] = v162;
  v165[3] = 0x302E312E30;
  v165[4] = 0xE500000000000000;
  v165[2] = v138;
  uint64_t v166 = (void *)((char *)v165 + v164[12]);
  void *v166 = v148;
  v166[1] = v31;
  uint64_t v167 = (char *)v165 + v164[13];
  *(void *)uint64_t v167 = v141;
  v167[8] = v142 & 1;
  *(_OWORD *)((char *)v165 + v164[15]) = xmmword_1A9170040;
  uint64_t v168 = MEMORY[0x1AD0EEDF0](v186);
  swift_bridgeObjectRetain();
  id v169 = v138;
  if (v168)
  {
    sub_1A90DE7E8(v165, &qword_1E97B1660, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80);
    swift_unknownObjectRelease();
  }
  uint64_t v170 = v218;
  if (v218)
  {
    id v171 = v208;
    sub_1A90F08B8((uint64_t)v165, (uint64_t)v208, &qword_1E97B1660, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
    swift_storeEnumTagMultiPayload();
    v170(v171);

    swift_release();
    swift_release();
    sub_1A90F07DC((uint64_t)v171, &qword_1E97B1658, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  }
  else
  {

    swift_release();
    swift_release();
  }
  sub_1A90F07DC((uint64_t)v165, &qword_1E97B1660, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
  sub_1A9096FC4((uint64_t)v200, type metadata accessor for Sequence);
  sub_1A9096DD8((uint64_t)v202, &qword_1EB687A98, (void (*)(uint64_t))type metadata accessor for TimedData);
  uint64_t v184 = (uint64_t)v199;
LABEL_104:
  sub_1A9096FC4(v184, (uint64_t (*)(void))type metadata accessor for EventData);
}

id sub_1A90E736C(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v72 = a7;
  uint64_t v73 = a6;
  unint64_t v67 = a5;
  uint64_t v70 = a3;
  uint64_t v71 = a4;
  unint64_t v75 = a2;
  id v76 = a1;
  sub_1A90F1138(0, (unint64_t *)&unk_1EB686890, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  uint64_t v68 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v69 = (char *)&v61 - v10;
  sub_1A9096EA0(0, &qword_1EB687A98, (void (*)(uint64_t))type metadata accessor for TimedData);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v74 = (uint64_t)&v61 - v12;
  uint64_t v13 = sub_1A916ACC0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for EventData();
  uint64_t v18 = (int *)(v17 - 8);
  uint64_t v66 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v66 + 64);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  unint64_t v65 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (uint64_t *)((char *)&v61 - v21);
  sub_1A916ACB0();
  uint64_t v23 = sub_1A916ACA0();
  uint64_t v25 = v24;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_1A916AC80();
  uint64_t v77 = 47;
  unint64_t v78 = 0xE100000000000000;
  uint64_t v79 = Tracker.path.getter();
  sub_1A909B740(0, (unint64_t *)&qword_1EB688C10, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1A909384C();
  sub_1A916AF40();
  swift_bridgeObjectRelease();
  sub_1A916B050();
  swift_bridgeObjectRelease();
  uint64_t v26 = v77;
  unint64_t v27 = v78;
  *uint64_t v22 = v23;
  v22[1] = v25;
  uint64_t v28 = (uint64_t *)((char *)v22 + v18[8]);
  *uint64_t v28 = v26;
  v28[1] = v27;
  uint64_t v29 = (uint64_t *)((char *)v22 + v18[9]);
  *uint64_t v29 = 0x6F69737365536F6ELL;
  v29[1] = 0xE90000000000006ELL;
  uint64_t v30 = v18[10];
  uint64_t v32 = v74;
  unint64_t v31 = v75;
  *(_OWORD *)((char *)v22 + v30) = xmmword_1A9170060;
  unint64_t v33 = (unint64_t)v76;
  sub_1A90E8778((uint64_t)v76, v31, (uint64_t)v22, v32);
  type metadata accessor for Sequence(0);
  uint64_t v34 = swift_allocBox();
  sub_1A90E96C8(v33, v31, (uint64_t)v22, v32, v70, v71, v35);
  uint64_t v36 = (uint64_t)v65;
  uint64_t v37 = v66;
  uint64_t v38 = v19;
  uint64_t v69 = (char *)v34;
  uint64_t v39 = v67;
  unint64_t v63 = sub_1A90F0980();
  unint64_t v62 = v40;
  uint64_t v68 = v41;
  int v64 = v42;
  uint64_t v43 = swift_allocObject();
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FBA8A8]), sel_init);
  uint64_t v70 = (uint64_t)result;
  uint64_t v71 = v43;
  *(void *)(v43 + 16) = result;
  if (result)
  {
    type metadata accessor for AccessTracker();
    uint64_t v45 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    uint64_t v61 = v45;
    *(void *)(v45 + 24) = 0;
    *(void *)(v45 + 32) = 0;
    uint64_t v46 = swift_allocObject();
    swift_weakInit();
    sub_1A9097024((uint64_t)v22, v36, (uint64_t (*)(void))type metadata accessor for EventData);
    sub_1A909F130(v39, (uint64_t)&v77);
    unint64_t v47 = (*(unsigned __int8 *)(v37 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    unint64_t v48 = (v38 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v49 = (v48 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v67 = (v49 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v50 = (v49 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v51 = (void *)swift_allocObject();
    uint64_t v52 = v73;
    void v51[2] = v46;
    v51[3] = v52;
    id v53 = v76;
    v51[4] = v72;
    v51[5] = v53;
    uint64_t v54 = (uint64_t)v51 + v47;
    unint64_t v55 = v75;
    uint64_t v51[6] = v75;
    sub_1A9096EF4(v36, v54, (uint64_t (*)(void))type metadata accessor for EventData);
    *(void *)((char *)v51 + v48) = v69;
    uint64_t v56 = (void *)((char *)v51 + v49);
    unint64_t v57 = v62;
    *uint64_t v56 = v63;
    v56[1] = v57;
    unint64_t v58 = (char *)v51 + v67;
    *(void *)unint64_t v58 = v68;
    v58[8] = v64 & 1;
    sub_1A909374C((uint64_t)&v77, (uint64_t)v51 + v50);
    *(void *)((char *)v51 + ((v50 + 39) & 0xFFFFFFFFFFFFFFF8)) = v71;
    type metadata accessor for SessionObserver();
    int v59 = (void *)swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    void v59[3] = v61;
    v59[4] = sub_1A90F0FC0;
    v59[5] = v51;
    uint64_t v60 = MEMORY[0x1AD0EEDF0](v8 + 64);
    sub_1A90A0418(v73);
    sub_1A90F0DEC(v76, v55);
    swift_retain();
    swift_retain();
    if (v60)
    {
      sub_1A90D3EF0();
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();
    }
    sub_1A9096DD8(v74, &qword_1EB687A98, (void (*)(uint64_t))type metadata accessor for TimedData);
    sub_1A9096FC4((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for EventData);
    swift_release();
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1A90E7C44(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v72 = a7;
  uint64_t v73 = a6;
  unint64_t v67 = a5;
  uint64_t v70 = a3;
  uint64_t v71 = a4;
  unint64_t v75 = a2;
  id v76 = a1;
  sub_1A90F1138(0, &qword_1E97B1658, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  uint64_t v68 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v69 = (char *)&v61 - v10;
  sub_1A9096EA0(0, &qword_1EB687A98, (void (*)(uint64_t))type metadata accessor for TimedData);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v74 = (uint64_t)&v61 - v12;
  uint64_t v13 = sub_1A916ACC0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for EventData();
  uint64_t v18 = (int *)(v17 - 8);
  uint64_t v66 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v66 + 64);
  MEMORY[0x1F4188790](v17);
  unint64_t v65 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (uint64_t *)((char *)&v61 - v21);
  sub_1A916ACB0();
  uint64_t v23 = sub_1A916ACA0();
  uint64_t v25 = v24;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_1A916AC80();
  uint64_t v77 = 47;
  unint64_t v78 = 0xE100000000000000;
  uint64_t v79 = Tracker.path.getter();
  sub_1A909B740(0, (unint64_t *)&qword_1EB688C10, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1A909384C();
  sub_1A916AF40();
  swift_bridgeObjectRelease();
  sub_1A916B050();
  swift_bridgeObjectRelease();
  uint64_t v26 = v77;
  unint64_t v27 = v78;
  *uint64_t v22 = v23;
  v22[1] = v25;
  uint64_t v28 = (uint64_t *)((char *)v22 + v18[8]);
  *uint64_t v28 = v26;
  v28[1] = v27;
  uint64_t v29 = (uint64_t *)((char *)v22 + v18[9]);
  *uint64_t v29 = 0x6F69737365536F6ELL;
  v29[1] = 0xE90000000000006ELL;
  uint64_t v30 = v18[10];
  uint64_t v32 = v74;
  unint64_t v31 = v75;
  *(_OWORD *)((char *)v22 + v30) = xmmword_1A9170060;
  unint64_t v33 = (unint64_t)v76;
  sub_1A90E8F20((uint64_t)v76, v31, (uint64_t)v22, v32);
  type metadata accessor for Sequence(0);
  uint64_t v34 = swift_allocBox();
  sub_1A90EAE8C(v33, v31, (uint64_t)v22, v32, v70, v71, v35);
  uint64_t v36 = (uint64_t)v65;
  uint64_t v37 = v66;
  uint64_t v38 = v19;
  uint64_t v69 = (char *)v34;
  uint64_t v39 = v67;
  unint64_t v63 = sub_1A90F0980();
  unint64_t v62 = v40;
  uint64_t v68 = v41;
  int v64 = v42;
  uint64_t v43 = swift_allocObject();
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FBA8A8]), sel_init);
  uint64_t v70 = (uint64_t)result;
  uint64_t v71 = v43;
  *(void *)(v43 + 16) = result;
  if (result)
  {
    type metadata accessor for AccessTracker();
    uint64_t v45 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    uint64_t v61 = v45;
    *(void *)(v45 + 24) = 0;
    *(void *)(v45 + 32) = 0;
    uint64_t v46 = swift_allocObject();
    swift_weakInit();
    sub_1A9097024((uint64_t)v22, v36, (uint64_t (*)(void))type metadata accessor for EventData);
    sub_1A909F130(v39, (uint64_t)&v77);
    unint64_t v47 = (*(unsigned __int8 *)(v37 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    unint64_t v48 = (v38 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v49 = (v48 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v67 = (v49 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v50 = (v49 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v51 = (void *)swift_allocObject();
    uint64_t v52 = v73;
    void v51[2] = v46;
    v51[3] = v52;
    id v53 = v76;
    v51[4] = v72;
    v51[5] = v53;
    uint64_t v54 = (uint64_t)v51 + v47;
    unint64_t v55 = v75;
    uint64_t v51[6] = v75;
    sub_1A9096EF4(v36, v54, (uint64_t (*)(void))type metadata accessor for EventData);
    *(void *)((char *)v51 + v48) = v69;
    uint64_t v56 = (void *)((char *)v51 + v49);
    unint64_t v57 = v62;
    *uint64_t v56 = v63;
    v56[1] = v57;
    unint64_t v58 = (char *)v51 + v67;
    *(void *)unint64_t v58 = v68;
    v58[8] = v64 & 1;
    sub_1A909374C((uint64_t)&v77, (uint64_t)v51 + v50);
    *(void *)((char *)v51 + ((v50 + 39) & 0xFFFFFFFFFFFFFFF8)) = v71;
    type metadata accessor for SessionObserver();
    int v59 = (void *)swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    void v59[3] = v61;
    v59[4] = sub_1A90F0C88;
    v59[5] = v51;
    uint64_t v60 = MEMORY[0x1AD0EEDF0](v8 + 64);
    sub_1A90A0418(v73);
    sub_1A90F0DEC(v76, v55);
    swift_retain();
    swift_retain();
    if (v60)
    {
      sub_1A90D3EF0();
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();
    }
    sub_1A9096DD8(v74, &qword_1EB687A98, (void (*)(uint64_t))type metadata accessor for TimedData);
    sub_1A9096FC4((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for EventData);
    swift_release();
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1A90E851C(char *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (a2 >> 62)
  {
    if (a2 >> 62 == 1)
    {
      uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      if (objc_msgSend(ObjCClassFromMetadata, sel_respondsToSelector_, sel_sessionGroup))
      {
        uint64_t v6 = (char *)objc_msgSend(ObjCClassFromMetadata, sel_sessionGroup);
        uint64_t v7 = &v6[OBJC_IVAR___AASessionGroup_groupName];
        swift_beginAccess();
        if (sub_1A916AFF0() == 0x746C7561666564 && v8 == 0xE700000000000000)
        {

          swift_bridgeObjectRelease();
        }
        else
        {
          char v10 = sub_1A916B9E0();
          swift_bridgeObjectRelease();
          if ((v10 & 1) == 0)
          {
            uint64_t v18 = *(void *)v7;
            uint64_t v19 = *((void *)v7 + 1);
            swift_bridgeObjectRetain();

            char v20 = 1;
            goto LABEL_23;
          }
        }
        uint64_t v18 = 0;
        uint64_t v19 = 0;
        char v20 = 0;
LABEL_23:
        *(void *)a3 = v18;
        *(void *)(a3 + 8) = v19;
        *(void *)(a3 + 16) = 0;
        *(unsigned char *)(a3 + 24) = v20;
        return;
      }
    }
    else
    {
      uint64_t v12 = *(char **)&a1[OBJC_IVAR___AARawEvent_sessionGroup];
      uint64_t v13 = &v12[OBJC_IVAR___AASessionGroup_groupName];
      swift_beginAccess();
      if (sub_1A916AFF0() == 0x746C7561666564 && v14 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v16 = sub_1A916B9E0();
        sub_1A90F0DEC(a1, a2);
        uint64_t v17 = v12;
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0)
        {
          uint64_t v21 = *((void *)v13 + 1);
          *(void *)a3 = *(void *)v13;
          *(void *)(a3 + 8) = v21;
          *(void *)(a3 + 16) = 0;
          *(unsigned char *)(a3 + 24) = 1;
          swift_bridgeObjectRetain();

          sub_1A909F588(a1, a2);
          return;
        }

        sub_1A909F588(a1, a2);
      }
    }
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 24) = 0;
  *(void *)(a3 + 16) = 0;
}

uint64_t sub_1A90E8778@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v65 = a4;
  uint64_t v7 = type metadata accessor for TimedData();
  uint64_t v64 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v60 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A916AC90();
  uint64_t v59 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  unint64_t v58 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v57 = (char *)&v56 - v12;
  sub_1A9096EA0(0, &qword_1EB689398, (void (*)(uint64_t))type metadata accessor for Tracker.Timer);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  char v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v56 - v17;
  uint64_t v19 = type metadata accessor for Tracker.Timer(0);
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v61 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = a3;
  unint64_t v22 = a2 >> 62;
  uint64_t v66 = v7;
  uint64_t v63 = a1;
  if (a2 >> 62)
  {
    if (v22 == 1)
    {
      id v23 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
      uint64_t v24 = sub_1A916AF90();
      uint64_t v26 = v25;
    }
    else
    {
      uint64_t v27 = a1 + OBJC_IVAR___AARawEvent_name;
      uint64_t v24 = *(void *)(a1 + OBJC_IVAR___AARawEvent_name);
      uint64_t v26 = *(void *)(v27 + 8);
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    uint64_t v24 = 0x4564656764697242;
    uint64_t v26 = 0xEC000000746E6576;
  }
  uint64_t v28 = v67;
  swift_beginAccess();
  uint64_t v29 = *(void *)(v28 + 104);
  if (*(void *)(v29 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v30 = sub_1A90A1D98(v24, v26);
    if (v31)
    {
      sub_1A9097024(*(void *)(v29 + 56) + *(void *)(v20 + 72) * v30, (uint64_t)v18, type metadata accessor for Tracker.Timer);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v19);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v19);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v19);
  }
  swift_bridgeObjectRelease();
  uint64_t v32 = 0x4564656764697242;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_1A9096DD8((uint64_t)v18, &qword_1EB689398, (void (*)(uint64_t))type metadata accessor for Tracker.Timer);
    uint64_t v33 = 1;
    uint64_t v34 = v65;
    uint64_t v35 = v66;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v34, v33, 1, v35);
  }
  uint64_t v36 = v61;
  sub_1A9096EF4((uint64_t)v18, v61, type metadata accessor for Tracker.Timer);
  if (v22)
  {
    uint64_t v37 = v58;
    if (v22 == 1)
    {
      id v38 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
      uint64_t v39 = sub_1A916AF90();
      uint64_t v41 = v40;
    }
    else
    {
      uint64_t v39 = *(void *)(v63 + OBJC_IVAR___AARawEvent_name);
      uint64_t v41 = *(void *)(v63 + OBJC_IVAR___AARawEvent_name + 8);
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    uint64_t v39 = 0x4564656764697242;
    uint64_t v41 = 0xEC000000746E6576;
    uint64_t v37 = v58;
  }
  swift_beginAccess();
  sub_1A914CCBC(v39, v41, (uint64_t)v16);
  sub_1A9096DD8((uint64_t)v16, &qword_1EB689398, (void (*)(uint64_t))type metadata accessor for Tracker.Timer);
  swift_endAccess();
  swift_bridgeObjectRelease();
  if (v22)
  {
    uint64_t v35 = v66;
    int v42 = v57;
    if (v22 == 1)
    {
      id v43 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
      uint64_t v32 = sub_1A916AF90();
      uint64_t v45 = v44;

      uint64_t v46 = v45;
    }
    else
    {
      uint64_t v32 = *(void *)(v63 + OBJC_IVAR___AARawEvent_name);
      uint64_t v46 = *(void *)(v63 + OBJC_IVAR___AARawEvent_name + 8);
      swift_bridgeObjectRetain();
    }
    uint64_t v48 = v59;
    uint64_t v47 = (uint64_t)v60;
  }
  else
  {
    uint64_t v35 = v66;
    uint64_t v48 = v59;
    uint64_t v47 = (uint64_t)v60;
    int v42 = v57;
    uint64_t v46 = 0xEC000000746E6576;
  }
  swift_beginAccess();
  sub_1A914CB68(v32, v46, (uint64_t)v68);
  sub_1A908EE84((uint64_t)v68, &qword_1EB6887E8, &qword_1EB6897A0, (uint64_t)&protocol descriptor for RestartTimerType);
  swift_endAccess();
  swift_bridgeObjectRelease();
  unint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 16);
  v49(v42, v36, v9);
  uint64_t v50 = type metadata accessor for EventData();
  v49(v37, v62 + *(int *)(v50 + 20), v9);
  v49((char *)v47, (uint64_t)v42, v9);
  v49((char *)(v47 + *(int *)(v35 + 20)), (uint64_t)v37, v9);
  uint64_t result = sub_1A916ABF0();
  double v53 = v52 * 1000.0;
  if ((~*(void *)&v53 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v53 <= -9.22337204e18)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v53 < 9.22337204e18)
  {
    uint64_t v54 = (uint64_t)v53;
    unint64_t v55 = *(void (**)(char *, uint64_t))(v48 + 8);
    v55(v37, v9);
    v55(v42, v9);
    *(void *)(v47 + *(int *)(v35 + 24)) = v54;
    uint64_t v34 = v65;
    sub_1A9096EF4(v47, v65, (uint64_t (*)(void))type metadata accessor for TimedData);
    sub_1A9096FC4(v36, type metadata accessor for Tracker.Timer);
    uint64_t v33 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v34, v33, 1, v35);
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1A90E8F20@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v65 = a4;
  uint64_t v7 = type metadata accessor for TimedData();
  uint64_t v64 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v60 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A916AC90();
  uint64_t v59 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v58 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v57 = (char *)&v56 - v12;
  sub_1A9096EA0(0, &qword_1EB689398, (void (*)(uint64_t))type metadata accessor for Tracker.Timer);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v56 - v17;
  uint64_t v19 = type metadata accessor for Tracker.Timer(0);
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v61 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = a3;
  unint64_t v22 = a2 >> 62;
  uint64_t v66 = v7;
  uint64_t v63 = a1;
  if (a2 >> 62)
  {
    if (v22 == 1)
    {
      id v23 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
      uint64_t v24 = sub_1A916AF90();
      uint64_t v26 = v25;
    }
    else
    {
      uint64_t v27 = a1 + OBJC_IVAR___AARawEvent_name;
      uint64_t v24 = *(void *)(a1 + OBJC_IVAR___AARawEvent_name);
      uint64_t v26 = *(void *)(v27 + 8);
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    uint64_t v24 = 0x457972616D6D7553;
    uint64_t v26 = 0xEC000000746E6576;
  }
  uint64_t v28 = v67;
  swift_beginAccess();
  uint64_t v29 = *(void *)(v28 + 104);
  if (*(void *)(v29 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v30 = sub_1A90A1D98(v24, v26);
    if (v31)
    {
      sub_1A9097024(*(void *)(v29 + 56) + *(void *)(v20 + 72) * v30, (uint64_t)v18, type metadata accessor for Tracker.Timer);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v19);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v19);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v19);
  }
  swift_bridgeObjectRelease();
  uint64_t v32 = 0x457972616D6D7553;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_1A9096DD8((uint64_t)v18, &qword_1EB689398, (void (*)(uint64_t))type metadata accessor for Tracker.Timer);
    uint64_t v33 = 1;
    uint64_t v34 = v65;
    uint64_t v35 = v66;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v34, v33, 1, v35);
  }
  uint64_t v36 = v61;
  sub_1A9096EF4((uint64_t)v18, v61, type metadata accessor for Tracker.Timer);
  if (v22)
  {
    uint64_t v37 = v58;
    if (v22 == 1)
    {
      id v38 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
      uint64_t v39 = sub_1A916AF90();
      uint64_t v41 = v40;
    }
    else
    {
      uint64_t v39 = *(void *)(v63 + OBJC_IVAR___AARawEvent_name);
      uint64_t v41 = *(void *)(v63 + OBJC_IVAR___AARawEvent_name + 8);
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    uint64_t v39 = 0x457972616D6D7553;
    uint64_t v41 = 0xEC000000746E6576;
    uint64_t v37 = v58;
  }
  swift_beginAccess();
  sub_1A914CCBC(v39, v41, (uint64_t)v15);
  sub_1A9096DD8((uint64_t)v15, &qword_1EB689398, (void (*)(uint64_t))type metadata accessor for Tracker.Timer);
  swift_endAccess();
  swift_bridgeObjectRelease();
  if (v22)
  {
    uint64_t v35 = v66;
    int v42 = v57;
    if (v22 == 1)
    {
      id v43 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
      uint64_t v32 = sub_1A916AF90();
      uint64_t v45 = v44;

      uint64_t v46 = v45;
    }
    else
    {
      uint64_t v32 = *(void *)(v63 + OBJC_IVAR___AARawEvent_name);
      uint64_t v46 = *(void *)(v63 + OBJC_IVAR___AARawEvent_name + 8);
      swift_bridgeObjectRetain();
    }
    uint64_t v48 = v59;
    uint64_t v47 = (uint64_t)v60;
  }
  else
  {
    uint64_t v35 = v66;
    uint64_t v48 = v59;
    uint64_t v47 = (uint64_t)v60;
    int v42 = v57;
    uint64_t v46 = 0xEC000000746E6576;
  }
  swift_beginAccess();
  sub_1A914CB68(v32, v46, (uint64_t)v68);
  sub_1A908EE84((uint64_t)v68, &qword_1EB6887E8, &qword_1EB6897A0, (uint64_t)&protocol descriptor for RestartTimerType);
  swift_endAccess();
  swift_bridgeObjectRelease();
  unint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 16);
  v49(v42, v36, v9);
  uint64_t v50 = type metadata accessor for EventData();
  v49(v37, v62 + *(int *)(v50 + 20), v9);
  v49((char *)v47, (uint64_t)v42, v9);
  v49((char *)(v47 + *(int *)(v35 + 20)), (uint64_t)v37, v9);
  uint64_t result = sub_1A916ABF0();
  double v53 = v52 * 1000.0;
  if ((~*(void *)&v53 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v53 <= -9.22337204e18)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v53 < 9.22337204e18)
  {
    uint64_t v54 = (uint64_t)v53;
    unint64_t v55 = *(void (**)(char *, uint64_t))(v48 + 8);
    v55(v37, v9);
    v55(v42, v9);
    *(void *)(v47 + *(int *)(v35 + 24)) = v54;
    uint64_t v34 = v65;
    sub_1A9096EF4(v47, v65, (uint64_t (*)(void))type metadata accessor for TimedData);
    sub_1A9096FC4(v36, type metadata accessor for Tracker.Timer);
    uint64_t v33 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v34, v33, 1, v35);
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1A90E96C8@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v169 = a6;
  uint64_t v168 = a5;
  uint64_t v159 = a4;
  uint64_t v161 = a3;
  unint64_t v174 = a2;
  id v160 = (char *)a1;
  uint64_t v150 = a7;
  uint64_t v176 = type metadata accessor for SequenceEntry.Kind(0);
  MEMORY[0x1F4188790](v176);
  id v178 = (long long *)((char *)&v149 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v175 = type metadata accessor for SequenceEntry(0);
  uint64_t v166 = *(void *)(v175 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v175);
  uint64_t v179 = (uint64_t *)((char *)&v149 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v171 = (uint64_t)&v149 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v170 = (char *)&v149 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v154 = (uint64_t)&v149 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v153 = (char *)&v149 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v164 = (uint64_t)&v149 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v163 = (char *)&v149 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v157 = (uint64_t)&v149 - v24;
  MEMORY[0x1F4188790](v23);
  id v156 = (_OWORD *)((char *)&v149 - v25);
  sub_1A9096EA0(0, &qword_1EB687A98, (void (*)(uint64_t))type metadata accessor for TimedData);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v158 = (uint64_t)&v149 - v27;
  uint64_t v167 = type metadata accessor for TimedData();
  uint64_t v152 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v167 - 8);
  MEMORY[0x1F4188790](v167);
  uint64_t v155 = (uint64_t)&v149 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v173 = (long long *)type metadata accessor for Sequence(0);
  MEMORY[0x1F4188790](v173);
  uint64_t v177 = (uint64_t *)((char *)&v149 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v151 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1F4188790](v151);
  uint64_t v165 = (uint64_t)&v149 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1A916AE70();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v34 = (void **)((char *)&v149 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v35 = *(void **)(v7[10] + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v34 = v35;
  uint64_t v36 = *MEMORY[0x1E4FBCBF0];
  uint64_t v37 = *(void (**)(void *, uint64_t, uint64_t))(v32 + 104);
  v37(v34, v36, v31);
  id v38 = v35;
  char v39 = sub_1A916AE90();
  uint64_t v40 = *(char **)(v32 + 8);
  ((void (*)(void *, uint64_t))v40)(v34, v31);
  if ((v39 & 1) == 0)
  {
    __break(1u);
    goto LABEL_92;
  }
  unint64_t v41 = (unint64_t)v160;
  sub_1A90F0294((unint64_t)v160, v174, &v187);
  LODWORD(v162) = v187;
  id v172 = v7;
  uint64_t v42 = MEMORY[0x1AD0EEDF0](v7 + 8);
  uint64_t v43 = 0;
  if (!v42) {
    goto LABEL_9;
  }
  uint64_t v7 = (void *)v42;
  uint64_t v44 = *(void **)(*(void *)(v42 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v34 = v44;
  v37(v34, v36, v31);
  id v45 = v44;
  char v46 = sub_1A916AE90();
  ((void (*)(void *, uint64_t))v40)(v34, v31);
  if ((v46 & 1) == 0)
  {
LABEL_92:
    __break(1u);
LABEL_93:
    swift_once();
LABEL_83:
    id v138 = (id)qword_1EB689AA0;
    sub_1A916B3C0();
    sub_1A908EF64(0, (unint64_t *)&qword_1EB68ACD8, (unint64_t *)&qword_1EB68A920, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v139 = swift_allocObject();
    *(_OWORD *)(v139 + 16) = xmmword_1A916E200;
    if (v151)
    {
      if (v151 == 1)
      {
        id v140 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
        uint64_t v141 = sub_1A916AF90();
        unint64_t v143 = v142;
      }
      else
      {
        uint64_t v141 = *(void *)&v40[OBJC_IVAR___AARawEvent_name];
        unint64_t v143 = *(void *)&v40[OBJC_IVAR___AARawEvent_name + 8];
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      uint64_t v141 = 0x4564656764697242;
      unint64_t v143 = 0xEC000000746E6576;
    }
    uint64_t v146 = MEMORY[0x1E4FBB1A0];
    *(void *)(v139 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v147 = sub_1A90A67C0();
    *(void *)(v139 + 64) = v147;
    *(void *)(v139 + 32) = v141;
    *(void *)(v139 + 40) = v143;
    *(void *)&long long v187 = 0;
    *((void *)&v187 + 1) = 0xE000000000000000;
    v184[0] = (uint64_t)v162;
    v184[1] = (uint64_t)v7;
    sub_1A916B780();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v148 = v187;
    *(void *)(v139 + 96) = v146;
    *(void *)(v139 + 104) = v147;
    *(_OWORD *)(v139 + 72) = v148;
    sub_1A916AD30();

    goto LABEL_90;
  }
  uint64_t v47 = (char *)v7 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
  swift_beginAccess();
  uint64_t v48 = (uint64_t)v47;
  unint64_t v49 = (uint64_t *)v165;
  sub_1A9097024(v48, v165, type metadata accessor for SessionManager.SessionState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    unint64_t v41 = (unint64_t)v160;
    unint64_t v51 = v174;
    if (EnumCaseMultiPayload == 1) {
      sub_1A9096FC4((uint64_t)v49, type metadata accessor for SessionManager.SessionState);
    }
    swift_unknownObjectRelease();
    goto LABEL_10;
  }
  uint64_t v52 = *v49;
  swift_unknownObjectRelease();
  uint64_t v43 = *(void *)(v52 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_dataEventFormatter + 8);
  swift_release();
  unint64_t v41 = (unint64_t)v160;
LABEL_9:
  unint64_t v51 = v174;
LABEL_10:
  uint64_t v151 = v51 >> 62;
  if (v51 >> 62)
  {
    if (v51 >> 62 == 1)
    {
      id v53 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
      uint64_t v54 = sub_1A916AF90();
      unint64_t v56 = v55;
    }
    else
    {
      uint64_t v54 = *(void *)(v41 + OBJC_IVAR___AARawEvent_name);
      unint64_t v56 = *(void *)(v41 + OBJC_IVAR___AARawEvent_name + 8);
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    uint64_t v54 = 0x4564656764697242;
    unint64_t v56 = 0xEC000000746E6576;
  }
  uint64_t v40 = (char *)v41;
  uint64_t v165 = type metadata accessor for EventData();
  uint64_t v57 = v161 + *(int *)(v165 + 20);
  uint64_t v58 = (uint64_t)v173;
  uint64_t v59 = v177;
  uint64_t v60 = (char *)v177 + *((int *)v173 + 5);
  uint64_t v61 = sub_1A916AC90();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v61 - 8) + 16))(v60, v57, v61);
  sub_1A90F0474((unint64_t)v40, v51, &v187);
  char v62 = v187;
  char v63 = BYTE1(v187);
  unint64_t v174 = *(int *)(v58 + 28);
  *(uint64_t *)((char *)v59 + v174) = MEMORY[0x1E4FBC860];
  *uint64_t v59 = v54;
  v59[1] = v56;
  uint64_t v64 = (char *)v59 + *(int *)(v58 + 24);
  *uint64_t v64 = (char)v162;
  *((void *)v64 + 1) = v43;
  v64[16] = v62;
  v64[17] = v63;
  if (v151)
  {
    uint64_t v65 = v172;
    if (v151 == 1)
    {
      swift_retain();
      sub_1A90C1570();
    }
    else
    {
      uint64_t v67 = v40;
      sub_1A9106C94();
    }
    uint64_t v66 = v68;
  }
  else
  {
    swift_retain();
    uint64_t v66 = sub_1A909AEEC((uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000);
    uint64_t v65 = v172;
  }
  sub_1A909F588(v40, v51);
  uint64_t v69 = v66[2];
  if (v69)
  {
    unint64_t v173 = &v188;
    unint64_t v149 = v66;
    uint64_t v70 = (uint64_t)(v66 + 4);
    uint64_t v162 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v71 = &qword_1EB687A98;
    v152 += 6;
    while (1)
    {
      uint64_t v74 = v71;
      sub_1A909553C(v70, (uint64_t)&v187);
      long long v75 = v187;
      sub_1A90A0DC8((uint64_t)v173, (uint64_t)v184);
      swift_bridgeObjectRetain();
      sub_1A90954AC((uint64_t)&v187);
      uint64_t v76 = v185;
      uint64_t v77 = v186;
      __swift_project_boxed_opaque_existential_1(v184, v185);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v77 + 16))(v76, v77))
      {
        uint64_t v89 = v185;
        uint64_t v90 = v186;
        __swift_project_boxed_opaque_existential_1(v184, v185);
        uint64_t v91 = (*(uint64_t (**)(uint64_t, uint64_t))(v90 + 8))(v89, v90);
        sub_1A909562C(v91, v92, v168, v169, 0, (uint64_t)&v180);
        swift_bridgeObjectRelease();
        if (!v181)
        {
          swift_bridgeObjectRelease();
          sub_1A908EE84((uint64_t)&v180, &qword_1EB6887D8, qword_1EB6892F8, (uint64_t)&protocol descriptor for DataEventType);
          goto LABEL_46;
        }
        sub_1A908EC8C(&v180, (uint64_t)&v182);
        uint64_t v93 = v170;
        sub_1A90A0DC8((uint64_t)&v182, (uint64_t)&v170[*(int *)(v175 + 20)]);
        _OWORD *v93 = v75;
        swift_storeEnumTagMultiPayload();
        sub_1A9097024((uint64_t)v93, v171, type metadata accessor for SequenceEntry);
        unint64_t v94 = *(uint64_t *)((char *)v177 + v174);
        uint64_t v71 = v74;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v94 = sub_1A9095474(0, *(void *)(v94 + 16) + 1, 1, v94);
        }
        unint64_t v96 = *(void *)(v94 + 16);
        unint64_t v95 = *(void *)(v94 + 24);
        if (v96 >= v95 >> 1) {
          unint64_t v94 = sub_1A9095474(v95 > 1, v96 + 1, 1, v94);
        }
        *(void *)(v94 + 16) = v96 + 1;
        sub_1A9096EF4(v171, v94+ ((*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80))+ *(void *)(v166 + 72) * v96, type metadata accessor for SequenceEntry);
        *(uint64_t *)((char *)v177 + v174) = v94;
        id v97 = &v190;
LABEL_43:
        sub_1A9096FC4(*((void *)v97 - 32), type metadata accessor for SequenceEntry);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v182);
        goto LABEL_25;
      }
      uint64_t v78 = v185;
      uint64_t v79 = v186;
      __swift_project_boxed_opaque_existential_1(v184, v185);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v79 + 24))(v78, v79))
      {
        swift_bridgeObjectRelease();
LABEL_46:
        uint64_t v71 = v74;
        goto LABEL_26;
      }
      uint64_t v80 = v185;
      uint64_t v81 = v186;
      __swift_project_boxed_opaque_existential_1(v184, v185);
      if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 40))(v167, v167, v80, v81))
      {
        uint64_t v82 = v158;
        uint64_t v71 = v74;
        sub_1A9096E34(v159, v158, v74, (void (*)(uint64_t))type metadata accessor for TimedData);
        if ((*v152)(v82, 1, v167) != 1)
        {
          uint64_t v106 = v155;
          sub_1A9096EF4(v82, v155, (uint64_t (*)(void))type metadata accessor for TimedData);
          unint64_t v107 = v156;
          sub_1A9097024(v106, (uint64_t)v156 + *(int *)(v175 + 20), (uint64_t (*)(void))type metadata accessor for TimedData);
          *unint64_t v107 = v75;
          swift_storeEnumTagMultiPayload();
          sub_1A9097024((uint64_t)v107, v157, type metadata accessor for SequenceEntry);
          unint64_t v108 = *(uint64_t *)((char *)v177 + v174);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v108 = sub_1A9095474(0, *(void *)(v108 + 16) + 1, 1, v108);
          }
          unint64_t v110 = *(void *)(v108 + 16);
          unint64_t v109 = *(void *)(v108 + 24);
          if (v110 >= v109 >> 1) {
            unint64_t v108 = sub_1A9095474(v109 > 1, v110 + 1, 1, v108);
          }
          *(void *)(v108 + 16) = v110 + 1;
          sub_1A9096EF4(v157, v108+ ((*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80))+ *(void *)(v166 + 72) * v110, type metadata accessor for SequenceEntry);
          *(uint64_t *)((char *)v177 + v174) = v108;
          sub_1A9096FC4((uint64_t)v156, type metadata accessor for SequenceEntry);
          uint64_t v72 = (uint64_t (*)(void))type metadata accessor for TimedData;
          uint64_t v73 = (long long *)&v183;
          goto LABEL_24;
        }
        sub_1A9096DD8(v82, v74, (void (*)(uint64_t))type metadata accessor for TimedData);
      }
      uint64_t v83 = v185;
      uint64_t v84 = v186;
      __swift_project_boxed_opaque_existential_1(v184, v185);
      if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 40))(v165, v165, v83, v84) & 1) == 0)
      {
        uint64_t v98 = v185;
        uint64_t v99 = v186;
        __swift_project_boxed_opaque_existential_1(v184, v185);
        uint64_t v100 = (*(uint64_t (**)(uint64_t, uint64_t))(v99 + 8))(v98, v99);
        sub_1A909562C(v100, v101, v168, v169, 0, (uint64_t)&v180);
        swift_bridgeObjectRelease();
        if (!v181)
        {
          sub_1A908EE84((uint64_t)&v180, &qword_1EB6887D8, qword_1EB6892F8, (uint64_t)&protocol descriptor for DataEventType);
          uint64_t v111 = v185;
          uint64_t v112 = v186;
          __swift_project_boxed_opaque_existential_1(v184, v185);
          uint64_t v113 = (*(uint64_t (**)(uint64_t, uint64_t))(v112 + 32))(v111, v112);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v114 = v162;
          }
          else {
            unint64_t v114 = sub_1A90C3028(0, v162[2] + 1, 1, v162);
          }
          uint64_t v71 = v74;
          unint64_t v116 = v114[2];
          unint64_t v115 = v114[3];
          if (v116 >= v115 >> 1) {
            unint64_t v114 = sub_1A90C3028((void *)(v115 > 1), v116 + 1, 1, v114);
          }
          v114[2] = v116 + 1;
          uint64_t v162 = v114;
          id v117 = &v114[3 * v116];
          *((_OWORD *)v117 + 2) = v75;
          v117[6] = v113;
          goto LABEL_25;
        }
        sub_1A908EC8C(&v180, (uint64_t)&v182);
        os_log_type_t v102 = v153;
        sub_1A90A0DC8((uint64_t)&v182, (uint64_t)&v153[*(int *)(v175 + 20)]);
        *os_log_type_t v102 = v75;
        swift_storeEnumTagMultiPayload();
        sub_1A9097024((uint64_t)v102, v154, type metadata accessor for SequenceEntry);
        unint64_t v103 = *(uint64_t *)((char *)v177 + v174);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v103 = sub_1A9095474(0, *(void *)(v103 + 16) + 1, 1, v103);
        }
        uint64_t v71 = v74;
        unint64_t v105 = *(void *)(v103 + 16);
        unint64_t v104 = *(void *)(v103 + 24);
        if (v105 >= v104 >> 1) {
          unint64_t v103 = sub_1A9095474(v104 > 1, v105 + 1, 1, v103);
        }
        *(void *)(v103 + 16) = v105 + 1;
        sub_1A9096EF4(v154, v103+ ((*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80))+ *(void *)(v166 + 72) * v105, type metadata accessor for SequenceEntry);
        *(uint64_t *)((char *)v177 + v174) = v103;
        id v97 = (char *)&v182;
        goto LABEL_43;
      }
      uint64_t v85 = v163;
      sub_1A9097024(v161, (uint64_t)&v163[*(int *)(v175 + 20)], (uint64_t (*)(void))type metadata accessor for EventData);
      _OWORD *v85 = v75;
      swift_storeEnumTagMultiPayload();
      sub_1A9097024((uint64_t)v85, v164, type metadata accessor for SequenceEntry);
      unint64_t v86 = *(uint64_t *)((char *)v177 + v174);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v86 = sub_1A9095474(0, *(void *)(v86 + 16) + 1, 1, v86);
      }
      uint64_t v71 = v74;
      unint64_t v88 = *(void *)(v86 + 16);
      unint64_t v87 = *(void *)(v86 + 24);
      if (v88 >= v87 >> 1) {
        unint64_t v86 = sub_1A9095474(v87 > 1, v88 + 1, 1, v86);
      }
      *(void *)(v86 + 16) = v88 + 1;
      sub_1A9096EF4(v164, v86+ ((*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80))+ *(void *)(v166 + 72) * v88, type metadata accessor for SequenceEntry);
      *(uint64_t *)((char *)v177 + v174) = v86;
      uint64_t v72 = type metadata accessor for SequenceEntry;
      uint64_t v73 = &v187;
LABEL_24:
      sub_1A9096FC4(*((void *)v73 - 32), v72);
LABEL_25:
      uint64_t v65 = v172;
LABEL_26:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v184);
      v70 += 56;
      if (!--v69)
      {
        swift_bridgeObjectRelease();
        uint64_t v40 = v160;
        uint64_t v118 = v162;
        if (!v162[2]) {
          goto LABEL_90;
        }
        goto LABEL_67;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v118 = (void *)MEMORY[0x1E4FBC860];
  if (!*(void *)(MEMORY[0x1E4FBC860] + 16))
  {
LABEL_90:
    swift_bridgeObjectRelease();
    return sub_1A9096EF4((uint64_t)v177, v150, type metadata accessor for Sequence);
  }
LABEL_67:
  uint64_t v162 = v118;
  unint64_t v119 = *(uint64_t *)((char *)v177 + v174);
  int64_t v120 = *(void *)(v119 + 16);
  uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  if (!v120) {
    goto LABEL_81;
  }
  uint64_t v182 = (void *)MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_1A90B29B0(0, v120, 0);
  unint64_t v121 = (*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80);
  unint64_t v174 = v119;
  uint64_t v122 = v119 + v121;
  uint64_t v123 = *(void *)(v166 + 72);
  do
  {
    uint64_t v124 = v179;
    sub_1A9097024(v122, (uint64_t)v179, type metadata accessor for SequenceEntry);
    uint64_t v126 = *v124;
    uint64_t v125 = v124[1];
    sub_1A9097024((uint64_t)v124 + *(int *)(v175 + 20), (uint64_t)v178, type metadata accessor for SequenceEntry.Kind);
    int v127 = swift_getEnumCaseMultiPayload();
    if (!v127)
    {
      uint64_t v185 = v167;
      uint64_t v186 = sub_1A9097640(qword_1EB6893C8, (void (*)(uint64_t))type metadata accessor for TimedData);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v184);
      unint64_t v129 = type metadata accessor for TimedData;
      goto LABEL_73;
    }
    if (v127 == 1)
    {
      uint64_t v185 = v165;
      uint64_t v186 = sub_1A9097640(qword_1EB688B50, (void (*)(uint64_t))type metadata accessor for EventData);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v184);
      unint64_t v129 = type metadata accessor for EventData;
LABEL_73:
      sub_1A9096EF4((uint64_t)v178, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v129);
      goto LABEL_75;
    }
    sub_1A908EC8C(v178, (uint64_t)v184);
LABEL_75:
    uint64_t v130 = v185;
    os_log_type_t v131 = __swift_project_boxed_opaque_existential_1(v184, v185);
    *((void *)&v189 + 1) = v130;
    os_log_type_t v132 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v188);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v130 - 8) + 16))(v132, v131, v130);
    *(void *)&long long v187 = v126;
    *((void *)&v187 + 1) = v125;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v184);
    sub_1A9096FC4((uint64_t)v179, type metadata accessor for SequenceEntry);
    uint64_t v7 = v182;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1A90B29B0(0, v7[2] + 1, 1);
      uint64_t v7 = v182;
    }
    unint64_t v134 = v7[2];
    unint64_t v133 = v7[3];
    if (v134 >= v133 >> 1)
    {
      sub_1A90B29B0(v133 > 1, v134 + 1, 1);
      uint64_t v7 = v182;
    }
    _OWORD v7[2] = v134 + 1;
    unint64_t v135 = &v7[6 * v134];
    long long v136 = v187;
    long long v137 = v189;
    v135[3] = v188;
    v135[4] = v137;
    v135[2] = v136;
    v122 += v123;
    --v120;
  }
  while (v120);
  swift_bridgeObjectRelease();
  uint64_t v40 = v160;
  uint64_t v65 = v172;
LABEL_81:
  if (v65[22])
  {
    if (qword_1EB68ACE8 == -1) {
      goto LABEL_83;
    }
    goto LABEL_93;
  }
  sub_1A90F0788();
  swift_allocError();
  *uint64_t v144 = v162;
  v144[1] = v7;
  swift_willThrow();
  return sub_1A9096FC4((uint64_t)v177, type metadata accessor for Sequence);
}

uint64_t sub_1A90EAE8C@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v170 = a6;
  uint64_t v169 = a5;
  uint64_t v160 = a4;
  uint64_t v162 = a3;
  unint64_t v175 = a2;
  uint64_t v161 = (char *)a1;
  uint64_t v151 = a7;
  uint64_t v177 = type metadata accessor for SequenceEntry.Kind(0);
  MEMORY[0x1F4188790](v177);
  uint64_t v179 = (long long *)((char *)&v150 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v176 = type metadata accessor for SequenceEntry(0);
  uint64_t v167 = *(void *)(v176 - 8);
  MEMORY[0x1F4188790](v176);
  long long v180 = (uint64_t *)((char *)&v150 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v172 = (uint64_t)&v150 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v171 = (char *)&v150 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v155 = (uint64_t)&v150 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v154 = (char *)&v150 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v165 = (uint64_t)&v150 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v164 = (char *)&v150 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v158 = (uint64_t)&v150 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v157 = (_OWORD *)((char *)&v150 - v25);
  sub_1A9096EA0(0, &qword_1EB687A98, (void (*)(uint64_t))type metadata accessor for TimedData);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v159 = (uint64_t)&v150 - v27;
  uint64_t v168 = type metadata accessor for TimedData();
  uint64_t v153 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v168 - 8);
  MEMORY[0x1F4188790](v168);
  uint64_t v156 = (uint64_t)&v150 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v174 = (long long *)type metadata accessor for Sequence(0);
  MEMORY[0x1F4188790](v174);
  id v178 = (uint64_t *)((char *)&v150 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v152 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1F4188790](v152);
  uint64_t v166 = (uint64_t)&v150 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1A916AE70();
  uint64_t v32 = *(void *)(v31 - 8);
  double v33 = MEMORY[0x1F4188790](v31);
  uint64_t v35 = (void **)((char *)&v150 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = *(void **)(v7[10] + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v35 = v36;
  uint64_t v37 = *MEMORY[0x1E4FBCBF0];
  id v38 = *(void (**)(void *, uint64_t, uint64_t, double))(v32 + 104);
  v38(v35, v37, v31, v33);
  id v39 = v36;
  char v40 = sub_1A916AE90();
  unint64_t v41 = *(char **)(v32 + 8);
  ((void (*)(void *, uint64_t))v41)(v35, v31);
  if ((v40 & 1) == 0)
  {
    __break(1u);
    goto LABEL_92;
  }
  unint64_t v42 = (unint64_t)v161;
  sub_1A90F0378((unint64_t)v161, v175, &v188);
  LODWORD(v163) = v188;
  unint64_t v173 = v7;
  uint64_t v43 = MEMORY[0x1AD0EEDF0](v7 + 8);
  uint64_t v44 = 0;
  if (!v43) {
    goto LABEL_9;
  }
  uint64_t v7 = (void *)v43;
  id v45 = *(void **)(*(void *)(v43 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v35 = v45;
  ((void (*)(void *, uint64_t, uint64_t))v38)(v35, v37, v31);
  id v46 = v45;
  char v47 = sub_1A916AE90();
  ((void (*)(void *, uint64_t))v41)(v35, v31);
  if ((v47 & 1) == 0)
  {
LABEL_92:
    __break(1u);
LABEL_93:
    swift_once();
LABEL_83:
    id v139 = (id)qword_1EB689AA0;
    sub_1A916B3C0();
    sub_1A908EF64(0, (unint64_t *)&qword_1EB68ACD8, (unint64_t *)&qword_1EB68A920, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v140 = swift_allocObject();
    *(_OWORD *)(v140 + 16) = xmmword_1A916E200;
    if (v152)
    {
      if (v152 == 1)
      {
        id v141 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
        uint64_t v142 = sub_1A916AF90();
        unint64_t v144 = v143;
      }
      else
      {
        uint64_t v142 = *(void *)&v41[OBJC_IVAR___AARawEvent_name];
        unint64_t v144 = *(void *)&v41[OBJC_IVAR___AARawEvent_name + 8];
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      uint64_t v142 = 0x457972616D6D7553;
      unint64_t v144 = 0xEC000000746E6576;
    }
    uint64_t v147 = MEMORY[0x1E4FBB1A0];
    *(void *)(v140 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v148 = sub_1A90A67C0();
    *(void *)(v140 + 64) = v148;
    *(void *)(v140 + 32) = v142;
    *(void *)(v140 + 40) = v144;
    *(void *)&long long v188 = 0;
    *((void *)&v188 + 1) = 0xE000000000000000;
    v185[0] = (uint64_t)v163;
    v185[1] = (uint64_t)v7;
    sub_1A916B780();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v149 = v188;
    *(void *)(v140 + 96) = v147;
    *(void *)(v140 + 104) = v148;
    *(_OWORD *)(v140 + 72) = v149;
    sub_1A916AD30();

    goto LABEL_90;
  }
  uint64_t v48 = (char *)v7 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
  swift_beginAccess();
  uint64_t v49 = (uint64_t)v48;
  uint64_t v50 = (uint64_t *)v166;
  sub_1A9097024(v49, v166, type metadata accessor for SessionManager.SessionState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    unint64_t v42 = (unint64_t)v161;
    unint64_t v52 = v175;
    if (EnumCaseMultiPayload == 1) {
      sub_1A9096FC4((uint64_t)v50, type metadata accessor for SessionManager.SessionState);
    }
    swift_unknownObjectRelease();
    goto LABEL_10;
  }
  uint64_t v53 = *v50;
  swift_unknownObjectRelease();
  uint64_t v44 = *(void *)(v53 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_dataEventFormatter + 8);
  swift_release();
  unint64_t v42 = (unint64_t)v161;
LABEL_9:
  unint64_t v52 = v175;
LABEL_10:
  uint64_t v152 = v52 >> 62;
  if (v52 >> 62)
  {
    if (v52 >> 62 == 1)
    {
      id v54 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
      uint64_t v55 = sub_1A916AF90();
      unint64_t v57 = v56;
    }
    else
    {
      uint64_t v55 = *(void *)(v42 + OBJC_IVAR___AARawEvent_name);
      unint64_t v57 = *(void *)(v42 + OBJC_IVAR___AARawEvent_name + 8);
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    uint64_t v55 = 0x457972616D6D7553;
    unint64_t v57 = 0xEC000000746E6576;
  }
  unint64_t v41 = (char *)v42;
  uint64_t v166 = type metadata accessor for EventData();
  uint64_t v58 = v162 + *(int *)(v166 + 20);
  uint64_t v59 = (uint64_t)v174;
  uint64_t v60 = v178;
  uint64_t v61 = (char *)v178 + *((int *)v174 + 5);
  uint64_t v62 = sub_1A916AC90();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v61, v58, v62);
  sub_1A90F0474((unint64_t)v41, v52, &v188);
  char v63 = v188;
  char v64 = BYTE1(v188);
  unint64_t v175 = *(int *)(v59 + 28);
  *(uint64_t *)((char *)v60 + v175) = MEMORY[0x1E4FBC860];
  *uint64_t v60 = v55;
  v60[1] = v57;
  uint64_t v65 = (char *)v60 + *(int *)(v59 + 24);
  *uint64_t v65 = (char)v163;
  *((void *)v65 + 1) = v44;
  v65[16] = v63;
  v65[17] = v64;
  if (v152)
  {
    uint64_t v66 = v173;
    if (v152 == 1)
    {
      swift_retain();
      sub_1A90C1570();
    }
    else
    {
      uint64_t v68 = v41;
      sub_1A9106C94();
    }
    uint64_t v67 = v69;
  }
  else
  {
    swift_retain();
    uint64_t v67 = sub_1A909AEEC((uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80);
    uint64_t v66 = v173;
  }
  sub_1A909F588(v41, v52);
  uint64_t v70 = v67[2];
  if (v70)
  {
    unint64_t v174 = &v189;
    uint64_t v150 = v67;
    uint64_t v71 = (uint64_t)(v67 + 4);
    uint64_t v163 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v72 = &qword_1EB687A98;
    v153 += 6;
    while (1)
    {
      long long v75 = v72;
      sub_1A909553C(v71, (uint64_t)&v188);
      long long v76 = v188;
      sub_1A90A0DC8((uint64_t)v174, (uint64_t)v185);
      swift_bridgeObjectRetain();
      sub_1A90954AC((uint64_t)&v188);
      uint64_t v77 = v186;
      uint64_t v78 = v187;
      __swift_project_boxed_opaque_existential_1(v185, v186);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v78 + 16))(v77, v78))
      {
        uint64_t v90 = v186;
        uint64_t v91 = v187;
        __swift_project_boxed_opaque_existential_1(v185, v186);
        uint64_t v92 = (*(uint64_t (**)(uint64_t, uint64_t))(v91 + 8))(v90, v91);
        sub_1A909562C(v92, v93, v169, v170, 0, (uint64_t)&v181);
        swift_bridgeObjectRelease();
        if (!v182)
        {
          swift_bridgeObjectRelease();
          sub_1A908EE84((uint64_t)&v181, &qword_1EB6887D8, qword_1EB6892F8, (uint64_t)&protocol descriptor for DataEventType);
          goto LABEL_46;
        }
        sub_1A908EC8C(&v181, (uint64_t)&v183);
        unint64_t v94 = v171;
        sub_1A90A0DC8((uint64_t)&v183, (uint64_t)&v171[*(int *)(v176 + 20)]);
        _OWORD *v94 = v76;
        swift_storeEnumTagMultiPayload();
        sub_1A9097024((uint64_t)v94, v172, type metadata accessor for SequenceEntry);
        unint64_t v95 = *(uint64_t *)((char *)v178 + v175);
        uint64_t v72 = v75;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v95 = sub_1A9095474(0, *(void *)(v95 + 16) + 1, 1, v95);
        }
        unint64_t v97 = *(void *)(v95 + 16);
        unint64_t v96 = *(void *)(v95 + 24);
        if (v97 >= v96 >> 1) {
          unint64_t v95 = sub_1A9095474(v96 > 1, v97 + 1, 1, v95);
        }
        *(void *)(v95 + 16) = v97 + 1;
        sub_1A9096EF4(v172, v95+ ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80))+ *(void *)(v167 + 72) * v97, type metadata accessor for SequenceEntry);
        *(uint64_t *)((char *)v178 + v175) = v95;
        uint64_t v98 = &v191;
LABEL_43:
        sub_1A9096FC4(*((void *)v98 - 32), type metadata accessor for SequenceEntry);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v183);
        goto LABEL_25;
      }
      uint64_t v79 = v186;
      uint64_t v80 = v187;
      __swift_project_boxed_opaque_existential_1(v185, v186);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v80 + 24))(v79, v80))
      {
        swift_bridgeObjectRelease();
LABEL_46:
        uint64_t v72 = v75;
        goto LABEL_26;
      }
      uint64_t v81 = v186;
      uint64_t v82 = v187;
      __swift_project_boxed_opaque_existential_1(v185, v186);
      if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 40))(v168, v168, v81, v82))
      {
        uint64_t v83 = v159;
        uint64_t v72 = v75;
        sub_1A9096E34(v160, v159, v75, (void (*)(uint64_t))type metadata accessor for TimedData);
        if ((*v153)(v83, 1, v168) != 1)
        {
          uint64_t v107 = v156;
          sub_1A9096EF4(v83, v156, (uint64_t (*)(void))type metadata accessor for TimedData);
          unint64_t v108 = v157;
          sub_1A9097024(v107, (uint64_t)v157 + *(int *)(v176 + 20), (uint64_t (*)(void))type metadata accessor for TimedData);
          *unint64_t v108 = v76;
          swift_storeEnumTagMultiPayload();
          sub_1A9097024((uint64_t)v108, v158, type metadata accessor for SequenceEntry);
          unint64_t v109 = *(uint64_t *)((char *)v178 + v175);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v109 = sub_1A9095474(0, *(void *)(v109 + 16) + 1, 1, v109);
          }
          unint64_t v111 = *(void *)(v109 + 16);
          unint64_t v110 = *(void *)(v109 + 24);
          if (v111 >= v110 >> 1) {
            unint64_t v109 = sub_1A9095474(v110 > 1, v111 + 1, 1, v109);
          }
          *(void *)(v109 + 16) = v111 + 1;
          sub_1A9096EF4(v158, v109+ ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80))+ *(void *)(v167 + 72) * v111, type metadata accessor for SequenceEntry);
          *(uint64_t *)((char *)v178 + v175) = v109;
          sub_1A9096FC4((uint64_t)v157, type metadata accessor for SequenceEntry);
          uint64_t v73 = (uint64_t (*)(void))type metadata accessor for TimedData;
          uint64_t v74 = (long long *)&v184;
          goto LABEL_24;
        }
        sub_1A9096DD8(v83, v75, (void (*)(uint64_t))type metadata accessor for TimedData);
      }
      uint64_t v84 = v186;
      uint64_t v85 = v187;
      __swift_project_boxed_opaque_existential_1(v185, v186);
      if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v85 + 40))(v166, v166, v84, v85) & 1) == 0)
      {
        uint64_t v99 = v186;
        uint64_t v100 = v187;
        __swift_project_boxed_opaque_existential_1(v185, v186);
        uint64_t v101 = (*(uint64_t (**)(uint64_t, uint64_t))(v100 + 8))(v99, v100);
        sub_1A909562C(v101, v102, v169, v170, 0, (uint64_t)&v181);
        swift_bridgeObjectRelease();
        if (!v182)
        {
          sub_1A908EE84((uint64_t)&v181, &qword_1EB6887D8, qword_1EB6892F8, (uint64_t)&protocol descriptor for DataEventType);
          uint64_t v112 = v186;
          uint64_t v113 = v187;
          __swift_project_boxed_opaque_existential_1(v185, v186);
          uint64_t v114 = (*(uint64_t (**)(uint64_t, uint64_t))(v113 + 32))(v112, v113);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v115 = v163;
          }
          else {
            unint64_t v115 = sub_1A90C3028(0, v163[2] + 1, 1, v163);
          }
          uint64_t v72 = v75;
          unint64_t v117 = v115[2];
          unint64_t v116 = v115[3];
          if (v117 >= v116 >> 1) {
            unint64_t v115 = sub_1A90C3028((void *)(v116 > 1), v117 + 1, 1, v115);
          }
          v115[2] = v117 + 1;
          uint64_t v163 = v115;
          uint64_t v118 = &v115[3 * v117];
          *((_OWORD *)v118 + 2) = v76;
          v118[6] = v114;
          goto LABEL_25;
        }
        sub_1A908EC8C(&v181, (uint64_t)&v183);
        unint64_t v103 = v154;
        sub_1A90A0DC8((uint64_t)&v183, (uint64_t)&v154[*(int *)(v176 + 20)]);
        *unint64_t v103 = v76;
        swift_storeEnumTagMultiPayload();
        sub_1A9097024((uint64_t)v103, v155, type metadata accessor for SequenceEntry);
        unint64_t v104 = *(uint64_t *)((char *)v178 + v175);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v104 = sub_1A9095474(0, *(void *)(v104 + 16) + 1, 1, v104);
        }
        uint64_t v72 = v75;
        unint64_t v106 = *(void *)(v104 + 16);
        unint64_t v105 = *(void *)(v104 + 24);
        if (v106 >= v105 >> 1) {
          unint64_t v104 = sub_1A9095474(v105 > 1, v106 + 1, 1, v104);
        }
        *(void *)(v104 + 16) = v106 + 1;
        sub_1A9096EF4(v155, v104+ ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80))+ *(void *)(v167 + 72) * v106, type metadata accessor for SequenceEntry);
        *(uint64_t *)((char *)v178 + v175) = v104;
        uint64_t v98 = (char *)&v183;
        goto LABEL_43;
      }
      unint64_t v86 = v164;
      sub_1A9097024(v162, (uint64_t)&v164[*(int *)(v176 + 20)], (uint64_t (*)(void))type metadata accessor for EventData);
      *unint64_t v86 = v76;
      swift_storeEnumTagMultiPayload();
      sub_1A9097024((uint64_t)v86, v165, type metadata accessor for SequenceEntry);
      unint64_t v87 = *(uint64_t *)((char *)v178 + v175);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v87 = sub_1A9095474(0, *(void *)(v87 + 16) + 1, 1, v87);
      }
      uint64_t v72 = v75;
      unint64_t v89 = *(void *)(v87 + 16);
      unint64_t v88 = *(void *)(v87 + 24);
      if (v89 >= v88 >> 1) {
        unint64_t v87 = sub_1A9095474(v88 > 1, v89 + 1, 1, v87);
      }
      *(void *)(v87 + 16) = v89 + 1;
      sub_1A9096EF4(v165, v87+ ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80))+ *(void *)(v167 + 72) * v89, type metadata accessor for SequenceEntry);
      *(uint64_t *)((char *)v178 + v175) = v87;
      uint64_t v73 = type metadata accessor for SequenceEntry;
      uint64_t v74 = &v188;
LABEL_24:
      sub_1A9096FC4(*((void *)v74 - 32), v73);
LABEL_25:
      uint64_t v66 = v173;
LABEL_26:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v185);
      v71 += 56;
      if (!--v70)
      {
        swift_bridgeObjectRelease();
        unint64_t v41 = v161;
        unint64_t v119 = v163;
        if (!v163[2]) {
          goto LABEL_90;
        }
        goto LABEL_67;
      }
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v119 = (void *)MEMORY[0x1E4FBC860];
  if (!*(void *)(MEMORY[0x1E4FBC860] + 16))
  {
LABEL_90:
    swift_bridgeObjectRelease();
    return sub_1A9096EF4((uint64_t)v178, v151, type metadata accessor for Sequence);
  }
LABEL_67:
  uint64_t v163 = v119;
  unint64_t v120 = *(uint64_t *)((char *)v178 + v175);
  int64_t v121 = *(void *)(v120 + 16);
  uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  if (!v121) {
    goto LABEL_81;
  }
  char v183 = (void *)MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_1A90B29B0(0, v121, 0);
  unint64_t v122 = (*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80);
  unint64_t v175 = v120;
  uint64_t v123 = v120 + v122;
  uint64_t v124 = *(void *)(v167 + 72);
  do
  {
    uint64_t v125 = v180;
    sub_1A9097024(v123, (uint64_t)v180, type metadata accessor for SequenceEntry);
    uint64_t v127 = *v125;
    uint64_t v126 = v125[1];
    sub_1A9097024((uint64_t)v125 + *(int *)(v176 + 20), (uint64_t)v179, type metadata accessor for SequenceEntry.Kind);
    int v128 = swift_getEnumCaseMultiPayload();
    if (!v128)
    {
      uint64_t v186 = v168;
      uint64_t v187 = sub_1A9097640(qword_1EB6893C8, (void (*)(uint64_t))type metadata accessor for TimedData);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v185);
      uint64_t v130 = type metadata accessor for TimedData;
      goto LABEL_73;
    }
    if (v128 == 1)
    {
      uint64_t v186 = v166;
      uint64_t v187 = sub_1A9097640(qword_1EB688B50, (void (*)(uint64_t))type metadata accessor for EventData);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v185);
      uint64_t v130 = type metadata accessor for EventData;
LABEL_73:
      sub_1A9096EF4((uint64_t)v179, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))v130);
      goto LABEL_75;
    }
    sub_1A908EC8C(v179, (uint64_t)v185);
LABEL_75:
    uint64_t v131 = v186;
    os_log_type_t v132 = __swift_project_boxed_opaque_existential_1(v185, v186);
    *((void *)&v190 + 1) = v131;
    unint64_t v133 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v189);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v131 - 8) + 16))(v133, v132, v131);
    *(void *)&long long v188 = v127;
    *((void *)&v188 + 1) = v126;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v185);
    sub_1A9096FC4((uint64_t)v180, type metadata accessor for SequenceEntry);
    uint64_t v7 = v183;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1A90B29B0(0, v7[2] + 1, 1);
      uint64_t v7 = v183;
    }
    unint64_t v135 = v7[2];
    unint64_t v134 = v7[3];
    if (v135 >= v134 >> 1)
    {
      sub_1A90B29B0(v134 > 1, v135 + 1, 1);
      uint64_t v7 = v183;
    }
    _OWORD v7[2] = v135 + 1;
    long long v136 = &v7[6 * v135];
    long long v137 = v188;
    long long v138 = v190;
    v136[3] = v189;
    v136[4] = v138;
    v136[2] = v137;
    v123 += v124;
    --v121;
  }
  while (v121);
  swift_bridgeObjectRelease();
  unint64_t v41 = v161;
  uint64_t v66 = v173;
LABEL_81:
  if (v66[22])
  {
    if (qword_1EB68ACE8 == -1) {
      goto LABEL_83;
    }
    goto LABEL_93;
  }
  sub_1A90F0788();
  swift_allocError();
  *unint64_t v145 = v163;
  v145[1] = v7;
  swift_willThrow();
  return sub_1A9096FC4((uint64_t)v178, type metadata accessor for Sequence);
}

void sub_1A90EC650(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *), uint64_t a5, char *a6, unint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13, uint64_t a14, uint64_t a15)
{
  uint64_t v192 = a8;
  unint64_t v204 = a7;
  uint64_t v195 = a6;
  uint64_t v202 = a5;
  uint64_t v206 = a2;
  sub_1A90F1138(0, (unint64_t *)&unk_1EB686890, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  uint64_t v201 = v17;
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v186 = (uint64_t *)((char *)&v164 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v18);
  unint64_t v200 = (uint64_t *)((char *)&v164 - v20);
  sub_1A90F1138(0, &qword_1EB687078, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
  long long v188 = v21;
  MEMORY[0x1F4188790](v21);
  long long v189 = (char *)&v164 - v22;
  uint64_t v190 = type metadata accessor for Sequence(0);
  MEMORY[0x1F4188790](v190);
  char v191 = (char *)&v164 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = type metadata accessor for TimedData();
  uint64_t v24 = MEMORY[0x1F4188790](v194);
  uint64_t v193 = (char *)&v164 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v196 = (uint64_t)&v164 - v26;
  uint64_t v203 = sub_1A916AC90();
  uint64_t v199 = *(void *)(v203 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v203);
  uint64_t v198 = (char *)&v164 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v197 = (int *)((char *)&v164 - v30);
  MEMORY[0x1F4188790](v29);
  uint64_t v32 = (char *)&v164 - v31;
  double v33 = (int *)type metadata accessor for EventData();
  MEMORY[0x1F4188790](v33);
  uint64_t v205 = (uint64_t *)((char *)&v164 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v35 = type metadata accessor for SessionObserverChange();
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (uint64_t)&v164 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1A916AE70();
  uint64_t v39 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  unint64_t v41 = (uint64_t *)((char *)&v164 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = swift_projectBox();
  swift_beginAccess();
  uint64_t v187 = a3 + 16;
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v44 = Strong;
    uint64_t v185 = (void *)v42;
    char v184 = a4;
    id v45 = *(void **)(*(void *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *unint64_t v41 = v45;
    uint64_t v47 = v39 + 104;
    id v46 = *(void (**)(void))(v39 + 104);
    unsigned int v182 = *MEMORY[0x1E4FBCBF0];
    long long v181 = (void (*)(void *, void, uint64_t))v46;
    v46(v41);
    id v48 = v45;
    LOBYTE(v45) = sub_1A916AE90();
    uint64_t v50 = *(uint64_t (**)(void *, uint64_t))(v39 + 8);
    uint64_t v49 = v39 + 8;
    long long v180 = v50;
    v50(v41, v38);
    if (v45)
    {
      uint64_t v179 = v47;
      uint64_t v178 = v49;
      uint64_t v183 = v38;
      int v177 = a13;
      uint64_t v176 = a12;
      uint64_t v175 = a10;
      uint64_t v174 = a14;
      sub_1A9097024(v206, v37, (uint64_t (*)(void))type metadata accessor for SessionObserverChange);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          swift_release();
          swift_release();
          return;
        case 2u:
          swift_release();
          unint64_t v57 = type metadata accessor for SessionObserverChange;
          uint64_t v58 = (void *)v37;
          goto LABEL_64;
        case 3u:
          swift_release();
          return;
        default:
          uint64_t v167 = (void **)(a15 + 16);
          uint64_t v51 = v44;
          uint64_t v52 = *(void *)v37;
          uint64_t v173 = v51;
          if (MEMORY[0x1AD0EEDF0](v51 + 64))
          {
            sub_1A90E851C(v195, v204, (uint64_t)&v212);
            uint64_t v209 = v212;
            long long v172 = v213;
            long long v210 = v213;
            char v211 = v214;
            uint64_t v53 = sub_1A909DB08(&v209);
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v53 = 0;
          }
          uint64_t v165 = a11;
          uint64_t v59 = v192;
          uint64_t v60 = v192[1];
          uint64_t v171 = *v192;
          swift_bridgeObjectRetain();
          sub_1A916AC80();
          uint64_t v61 = (void *)((char *)v59 + v33[6]);
          uint64_t v62 = (void *)*v61;
          uint64_t v63 = v61[1];
          uint64_t v168 = v53;
          uint64_t v206 = v52;
          uint64_t v192 = v62;
          *(void *)&long long v172 = v60;
          if (v53)
          {
            uint64_t v64 = *(void *)(v53 + 24);
            uint64_t v170 = *(void *)(v53 + 16);
            uint64_t v65 = OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier;
            uint64_t v66 = *(void *)(v53 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier + 8);
            if (v66)
            {
              uint64_t v169 = *(void *)(v53 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v67 = v63;
              goto LABEL_18;
            }
            uint64_t v166 = v64;
            swift_bridgeObjectRetain();
            uint64_t v52 = v206;
          }
          else
          {
            uint64_t v68 = *(void *)(v52 + 24);
            uint64_t v170 = *(void *)(v52 + 16);
            uint64_t v166 = v68;
            swift_bridgeObjectRetain();
            uint64_t v65 = OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier;
          }
          uint64_t v66 = *(void *)(v52 + v65 + 8);
          uint64_t v169 = *(void *)(v52 + v65);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v67 = v63;
          uint64_t v64 = v166;
LABEL_18:
          uint64_t v69 = v205;
          uint64_t v70 = v172;
          *uint64_t v205 = v171;
          v69[1] = v70;
          uint64_t v71 = (void *)((char *)v69 + v33[5]);
          uint64_t v72 = v199;
          uint64_t v73 = v203;
          (*(void (**)(void *, char *, uint64_t))(v199 + 32))(v71, v32, v203);
          uint64_t v74 = (void *)((char *)v69 + v33[6]);
          *uint64_t v74 = v192;
          v74[1] = v67;
          long long v75 = (void *)((char *)v69 + v33[7]);
          *long long v75 = v170;
          v75[1] = v64;
          long long v76 = (void *)((char *)v69 + v33[8]);
          *long long v76 = v169;
          v76[1] = v66;
          uint64_t v77 = *(void (**)(int *, uint64_t, uint64_t))(v72 + 16);
          double v33 = v197;
          v77(v197, v206 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_startDate, v73);
          uint64_t v37 = (uint64_t)v198;
          uint64_t v192 = v71;
          v77((int *)v198, (uint64_t)v71, v73);
          uint64_t v78 = (uint64_t)v193;
          v77((int *)v193, (uint64_t)v33, v73);
          uint64_t v79 = v194;
          v77((int *)(v78 + *(int *)(v194 + 20)), v37, v73);
          sub_1A916ABF0();
          double v81 = v80 * 1000.0;
          if ((~*(void *)&v81 & 0x7FF0000000000000) == 0) {
            goto LABEL_67;
          }
          if (v81 <= -9.22337204e18) {
            goto LABEL_68;
          }
          if (v81 >= 9.22337204e18) {
            goto LABEL_69;
          }
          uint64_t v82 = (uint64_t)v81;
          uint64_t v83 = *(void (**)(char *, uint64_t))(v199 + 8);
          uint64_t v84 = v203;
          v83(v198, v203);
          v83((char *)v197, v84);
          *(void *)(v78 + *(int *)(v79 + 24)) = v82;
          uint64_t v85 = v196;
          sub_1A9096EF4(v78, v196, (uint64_t (*)(void))type metadata accessor for TimedData);
          unint64_t v86 = v185;
          uint64_t v87 = swift_beginAccess();
          uint64_t v88 = *(int *)(v190 + 28);
          uint64_t v89 = *(void *)((char *)v86 + v88);
          MEMORY[0x1F4188790](v87);
          *(&v164 - 2) = (uint64_t)v205;
          *(&v164 - 1) = v85;
          swift_bridgeObjectRetain();
          double v33 = 0;
          uint64_t v90 = sub_1A90DE640((void (*)(uint64_t))sub_1A90F118C, (uint64_t)(&v164 - 4), v89);
          swift_bridgeObjectRelease();
          *(void *)((char *)v86 + v88) = v90;
          swift_endAccess();
          swift_bridgeObjectRelease();
          unint64_t v91 = v204 >> 62;
          uint64_t v92 = v173;
          uint64_t v93 = (uint64_t)v191;
          uint64_t v94 = v183;
          if (!(v204 >> 62)) {
            goto LABEL_29;
          }
          if (v91 == 1)
          {
            uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
            if ((objc_msgSend(ObjCClassFromMetadata, sel_respondsToSelector_, sel_requiresDiagnosticsConsent) & 1) == 0|| !objc_msgSend(ObjCClassFromMetadata, sel_requiresDiagnosticsConsent))
            {
LABEL_29:
              uint64_t v96 = (uint64_t)v185;
              swift_beginAccess();
              sub_1A9097024(v96, v93, type metadata accessor for Sequence);
              uint64_t v97 = *(void *)(v92 + 192);
              uint64_t ObjectType = swift_getObjectType();
              (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v97 + 8))(&v209, ObjectType, v97);
              uint64_t v99 = v209;
              uint64_t v100 = *(char **)(v92 + 80);
              uint64_t v101 = *(void **)&v100[OBJC_IVAR___AAAccessQueue_queue];
              *unint64_t v41 = v101;
              v181(v41, v182, v94);
              id v102 = v101;
              uint64_t v37 = sub_1A916AE90();
              uint64_t v103 = v180(v41, v94);
              if ((v37 & 1) == 0) {
                goto LABEL_70;
              }
              MEMORY[0x1F4188790](v103);
              *(&v164 - 2) = v99;
              *(&v164 - 1) = v93;
              uint64_t v118 = (void *)sub_1A9095E10(v100, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1A909A990, (uint64_t)(&v164 - 4));
              swift_bridgeObjectRelease();
              sub_1A9096FC4(v93, type metadata accessor for Sequence);
              if (v118)
              {
                unint64_t v119 = v185;
                swift_beginAccess();
                uint64_t v121 = *v119;
                uint64_t v120 = v119[1];
                unint64_t v122 = v188;
                uint64_t v123 = v189;
                v77((int *)&v189[v188[11]], (uint64_t)v192, v203);
                sub_1A909F130(v174, (uint64_t)v123 + v122[14]);
                void *v123 = v121;
                v123[1] = v120;
                v123[3] = 0x302E312E30;
                v123[4] = 0xE500000000000000;
                v123[2] = v118;
                uint64_t v124 = (void *)((char *)v123 + v122[12]);
                uint64_t v125 = v165;
                void *v124 = v175;
                v124[1] = v125;
                uint64_t v126 = (char *)v123 + v122[13];
                *(void *)uint64_t v126 = v176;
                v126[8] = v177 & 1;
                *(_OWORD *)((char *)v123 + v122[15]) = xmmword_1A9170040;
                swift_beginAccess();
                uint64_t v127 = swift_weakLoadStrong();
                if (v127)
                {
                  uint64_t v128 = MEMORY[0x1AD0EEDF0](v127 + 64);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  id v129 = v118;
                  swift_release();
                  uint64_t v130 = v184;
                  if (v128)
                  {
                    sub_1A90DE7E8(v123, &qword_1EB687078, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000);
                    swift_unknownObjectRelease();
                  }
                }
                else
                {
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  id v150 = v118;
                  uint64_t v130 = v184;
                }
                if (v130)
                {
                  uint64_t v151 = v200;
                  sub_1A90F08B8((uint64_t)v123, (uint64_t)v200, &qword_1EB687078, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
                  swift_storeEnumTagMultiPayload();
                  v130(v151);

                  swift_release();
                  swift_release();
                  swift_release();
                  sub_1A90F07DC((uint64_t)v151, (unint64_t *)&unk_1EB686890, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
                  uint64_t v117 = (uint64_t)v123;
                  unint64_t v115 = &qword_1EB687078;
                  unint64_t v116 = type metadata accessor for ProcessEvent;
                }
                else
                {

                  swift_release();
                  swift_release();
                  swift_release();
                  unint64_t v115 = &qword_1EB687078;
                  unint64_t v116 = type metadata accessor for ProcessEvent;
                  uint64_t v117 = (uint64_t)v123;
                }
                goto LABEL_52;
              }
              uint64_t v142 = v185;
              if (qword_1EB68ACE8 != -1) {
                swift_once();
              }
              id v143 = (id)qword_1EB689AA0;
              sub_1A916B3A0();
              sub_1A916AD30();

              unint64_t v144 = v184;
              if (v184)
              {
                swift_beginAccess();
                uint64_t v146 = *v142;
                uint64_t v145 = v142[1];
                sub_1A90F0864();
                uint64_t v147 = swift_allocError();
                *unint64_t v148 = v146;
                v148[1] = v145;
                long long v149 = v200;
                void *v200 = v147;
                swift_storeEnumTagMultiPayload();
                swift_bridgeObjectRetain();
                v144(v149);
                swift_release();
                swift_release();
                swift_release();
                sub_1A90F07DC((uint64_t)v149, (unint64_t *)&unk_1EB686890, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
                goto LABEL_63;
              }
              goto LABEL_62;
            }
          }
          else if ((v195[OBJC_IVAR___AARawEvent_requiresDiagnosticsConsent] & 1) == 0)
          {
            goto LABEL_29;
          }
          sub_1A9095B68((char *)&v212);
          if (v212 != 2 && (v212 & 1) == 0) {
            goto LABEL_29;
          }
          if (qword_1EB688798 != -1) {
            swift_once();
          }
          uint64_t v131 = sub_1A916AD50();
          __swift_project_value_buffer(v131, (uint64_t)qword_1EB68D9C0);
          os_log_type_t v132 = v195;
          unint64_t v133 = v204;
          sub_1A90F0DEC(v195, v204);
          sub_1A90F0DEC(v132, v133);
          unint64_t v134 = sub_1A916AD40();
          os_log_type_t v135 = sub_1A916B3D0();
          BOOL v136 = os_log_type_enabled(v134, v135);
          long long v137 = (void (*)(uint64_t))v184;
          if (v136)
          {
            long long v138 = (uint8_t *)swift_slowAlloc();
            uint64_t v139 = swift_slowAlloc();
            uint64_t v212 = v139;
            *(_DWORD *)long long v138 = 136446210;
            if (v91 == 2)
            {
              uint64_t v141 = *(void *)&v132[OBJC_IVAR___AARawEvent_name];
              unint64_t v140 = *(void *)&v132[OBJC_IVAR___AARawEvent_name + 8];
              swift_bridgeObjectRetain();
            }
            else
            {
              id v154 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
              uint64_t v141 = sub_1A916AF90();
              unint64_t v140 = v155;
            }
            uint64_t v209 = sub_1A90DCF6C(v141, v140, &v212);
            sub_1A916B5A0();
            swift_bridgeObjectRelease();
            unint64_t v156 = v204;
            sub_1A909F588(v132, v204);
            sub_1A909F588(v132, v156);
            _os_log_impl(&dword_1A9088000, v134, v135, "Discarding D&U-only event %{public}s", v138, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1AD0EECA0](v139, -1, -1);
            MEMORY[0x1AD0EECA0](v138, -1, -1);

            long long v137 = (void (*)(uint64_t))v184;
          }
          else
          {
            sub_1A909F588(v132, v133);
            sub_1A909F588(v132, v133);
          }
          if (!v137)
          {
LABEL_62:
            swift_release();
            swift_release();
            swift_release();
            goto LABEL_63;
          }
          if (v91 == 2)
          {
            uint64_t v157 = *(void *)&v132[OBJC_IVAR___AARawEvent_name];
            uint64_t v158 = *(void *)&v132[OBJC_IVAR___AARawEvent_name + 8];
            swift_bridgeObjectRetain();
          }
          else
          {
            id v159 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
            uint64_t v157 = sub_1A916AF90();
            uint64_t v158 = v160;
          }
          sub_1A90F092C();
          uint64_t v161 = swift_allocError();
          uint64_t *v162 = v157;
          v162[1] = v158;
          uint64_t v163 = (uint64_t)v186;
          *uint64_t v186 = v161;
          swift_storeEnumTagMultiPayload();
          v137(v163);
          swift_release();
          swift_release();
          swift_release();
          sub_1A90F07DC(v163, (unint64_t *)&unk_1EB686890, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
LABEL_63:
          sub_1A9096FC4(v196, (uint64_t (*)(void))type metadata accessor for TimedData);
          unint64_t v57 = type metadata accessor for EventData;
          uint64_t v58 = v205;
LABEL_64:
          sub_1A9096FC4((uint64_t)v58, (uint64_t (*)(void))v57);
          break;
      }
    }
    else
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
      swift_once();
      id v104 = (id)qword_1EB689AA0;
      LODWORD(v203) = sub_1A916B3C0();
      sub_1A908EF64(0, (unint64_t *)&qword_1EB68ACD8, (unint64_t *)&qword_1EB68A920, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v105 = swift_allocObject();
      *(_OWORD *)(v105 + 16) = xmmword_1A916E200;
      uint64_t v209 = 0;
      *(void *)&long long v210 = 0xE000000000000000;
      uint64_t v207 = v195;
      uint64_t v208 = v37;
      sub_1A90F1138(0, &qword_1EB6872F8, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmit);
      sub_1A916B780();
      uint64_t v106 = v209;
      uint64_t v107 = v210;
      uint64_t v108 = MEMORY[0x1E4FBB1A0];
      *(void *)(v105 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v109 = sub_1A90A67C0();
      *(void *)(v105 + 64) = v109;
      *(void *)(v105 + 32) = v106;
      *(void *)(v105 + 40) = v107;
      uint64_t v209 = 0;
      *(void *)&long long v210 = 0xE000000000000000;
      uint64_t v207 = (char *)v33;
      sub_1A908E870(0, (unint64_t *)&qword_1EB689860);
      sub_1A916B780();
      uint64_t v110 = v209;
      uint64_t v111 = v210;
      *(void *)(v105 + 96) = v108;
      *(void *)(v105 + 104) = v109;
      *(void *)(v105 + 72) = v110;
      *(void *)(v105 + 80) = v111;
      sub_1A916AD30();

      swift_bridgeObjectRelease();
      uint64_t v112 = v184;
      if (v184)
      {
        uint64_t v113 = v200;
        void *v200 = v33;
        swift_storeEnumTagMultiPayload();
        uint64_t v114 = v33;
        v112(v113);
        swift_release();
        swift_release();

        swift_release();
        unint64_t v115 = (unint64_t *)&unk_1EB686890;
        unint64_t v116 = type metadata accessor for EventSubmitResult;
        uint64_t v117 = (uint64_t)v113;
LABEL_52:
        sub_1A90F07DC(v117, v115, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))v116);
      }
      else
      {
        swift_release();
        swift_release();

        swift_release();
      }
      sub_1A9096FC4(v196, (uint64_t (*)(void))type metadata accessor for TimedData);
      sub_1A9096FC4((uint64_t)v205, (uint64_t (*)(void))type metadata accessor for EventData);
      uint64_t v152 = v167;
      swift_beginAccess();
      uint64_t v153 = *v152;
      unsigned char *v152 = 0;
    }
  }
  else if (a4)
  {
    sub_1A90F0788();
    uint64_t v54 = swift_allocError();
    *uint64_t v55 = xmmword_1A9170030;
    unint64_t v56 = v200;
    void *v200 = v54;
    swift_storeEnumTagMultiPayload();
    a4(v56);
    sub_1A90F07DC((uint64_t)v56, (unint64_t *)&unk_1EB686890, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  }
}

void sub_1A90EDDFC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *), uint64_t a5, char *a6, unint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13, uint64_t a14, uint64_t a15)
{
  uint64_t v192 = a8;
  unint64_t v204 = a7;
  uint64_t v195 = a6;
  uint64_t v202 = a5;
  uint64_t v206 = a2;
  sub_1A90F1138(0, &qword_1E97B1658, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  uint64_t v201 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v186 = (uint64_t *)((char *)&v164 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v19);
  unint64_t v200 = (uint64_t *)((char *)&v164 - v20);
  sub_1A90F1138(0, &qword_1E97B1660, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
  long long v188 = v21;
  MEMORY[0x1F4188790](v21);
  long long v189 = (char *)&v164 - v22;
  uint64_t v190 = type metadata accessor for Sequence(0);
  MEMORY[0x1F4188790](v190);
  char v191 = (char *)&v164 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = type metadata accessor for TimedData();
  MEMORY[0x1F4188790](v194);
  uint64_t v193 = (char *)&v164 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v196 = (uint64_t)&v164 - v26;
  uint64_t v203 = sub_1A916AC90();
  uint64_t v199 = *(void *)(v203 - 8);
  MEMORY[0x1F4188790](v203);
  uint64_t v198 = (char *)&v164 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v197 = (int *)((char *)&v164 - v29);
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v164 - v31;
  double v33 = (int *)type metadata accessor for EventData();
  MEMORY[0x1F4188790](v33);
  uint64_t v205 = (uint64_t *)((char *)&v164 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v35 = type metadata accessor for SessionObserverChange();
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (uint64_t)&v164 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1A916AE70();
  uint64_t v39 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  unint64_t v41 = (uint64_t *)((char *)&v164 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = swift_projectBox();
  swift_beginAccess();
  uint64_t v187 = a3 + 16;
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v44 = Strong;
    uint64_t v185 = (void *)v42;
    char v184 = a4;
    id v45 = *(void **)(*(void *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *unint64_t v41 = v45;
    uint64_t v47 = v39 + 104;
    id v46 = *(void (**)(void))(v39 + 104);
    unsigned int v182 = *MEMORY[0x1E4FBCBF0];
    long long v181 = (void (*)(void *, void, uint64_t))v46;
    v46(v41);
    id v48 = v45;
    LOBYTE(v45) = sub_1A916AE90();
    uint64_t v50 = *(uint64_t (**)(void *, uint64_t))(v39 + 8);
    uint64_t v49 = v39 + 8;
    long long v180 = v50;
    v50(v41, v38);
    if (v45)
    {
      uint64_t v179 = v47;
      uint64_t v178 = v49;
      uint64_t v183 = v38;
      int v177 = a13;
      uint64_t v176 = a12;
      uint64_t v175 = a10;
      uint64_t v174 = a14;
      sub_1A9097024(v206, v37, (uint64_t (*)(void))type metadata accessor for SessionObserverChange);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          swift_release();
          swift_release();
          return;
        case 2u:
          swift_release();
          unint64_t v57 = type metadata accessor for SessionObserverChange;
          uint64_t v58 = (void *)v37;
          goto LABEL_64;
        case 3u:
          swift_release();
          return;
        default:
          uint64_t v167 = (void **)(a15 + 16);
          uint64_t v51 = v44;
          uint64_t v52 = *(void *)v37;
          uint64_t v173 = v51;
          if (MEMORY[0x1AD0EEDF0](v51 + 64))
          {
            sub_1A90E851C(v195, v204, (uint64_t)&v212);
            uint64_t v209 = v212;
            long long v172 = v213;
            long long v210 = v213;
            char v211 = v214;
            uint64_t v53 = sub_1A909DB08(&v209);
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v53 = 0;
          }
          uint64_t v165 = a11;
          uint64_t v59 = v192;
          uint64_t v60 = v192[1];
          uint64_t v171 = *v192;
          swift_bridgeObjectRetain();
          sub_1A916AC80();
          uint64_t v61 = (void *)((char *)v59 + v33[6]);
          uint64_t v62 = (void *)*v61;
          uint64_t v63 = v61[1];
          uint64_t v168 = v53;
          uint64_t v206 = v52;
          uint64_t v192 = v62;
          *(void *)&long long v172 = v60;
          if (v53)
          {
            uint64_t v64 = *(void *)(v53 + 24);
            uint64_t v170 = *(void *)(v53 + 16);
            uint64_t v65 = OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier;
            uint64_t v66 = *(void *)(v53 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier + 8);
            if (v66)
            {
              uint64_t v169 = *(void *)(v53 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v67 = v63;
              goto LABEL_18;
            }
            uint64_t v166 = v64;
            swift_bridgeObjectRetain();
            uint64_t v52 = v206;
          }
          else
          {
            uint64_t v68 = *(void *)(v52 + 24);
            uint64_t v170 = *(void *)(v52 + 16);
            uint64_t v166 = v68;
            swift_bridgeObjectRetain();
            uint64_t v65 = OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier;
          }
          uint64_t v66 = *(void *)(v52 + v65 + 8);
          uint64_t v169 = *(void *)(v52 + v65);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v67 = v63;
          uint64_t v64 = v166;
LABEL_18:
          uint64_t v69 = v205;
          uint64_t v70 = v172;
          *uint64_t v205 = v171;
          v69[1] = v70;
          uint64_t v71 = (void *)((char *)v69 + v33[5]);
          uint64_t v72 = v199;
          uint64_t v73 = v203;
          (*(void (**)(void *, char *, uint64_t))(v199 + 32))(v71, v32, v203);
          uint64_t v74 = (void *)((char *)v69 + v33[6]);
          *uint64_t v74 = v192;
          v74[1] = v67;
          long long v75 = (void *)((char *)v69 + v33[7]);
          *long long v75 = v170;
          v75[1] = v64;
          long long v76 = (void *)((char *)v69 + v33[8]);
          *long long v76 = v169;
          v76[1] = v66;
          uint64_t v77 = *(void (**)(int *, uint64_t, uint64_t))(v72 + 16);
          double v33 = v197;
          v77(v197, v206 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_startDate, v73);
          uint64_t v37 = (uint64_t)v198;
          uint64_t v192 = v71;
          v77((int *)v198, (uint64_t)v71, v73);
          uint64_t v78 = (uint64_t)v193;
          v77((int *)v193, (uint64_t)v33, v73);
          uint64_t v79 = v194;
          v77((int *)(v78 + *(int *)(v194 + 20)), v37, v73);
          sub_1A916ABF0();
          double v81 = v80 * 1000.0;
          if ((~*(void *)&v81 & 0x7FF0000000000000) == 0) {
            goto LABEL_67;
          }
          if (v81 <= -9.22337204e18) {
            goto LABEL_68;
          }
          if (v81 >= 9.22337204e18) {
            goto LABEL_69;
          }
          uint64_t v82 = (uint64_t)v81;
          uint64_t v83 = *(void (**)(char *, uint64_t))(v199 + 8);
          uint64_t v84 = v203;
          v83(v198, v203);
          v83((char *)v197, v84);
          *(void *)(v78 + *(int *)(v79 + 24)) = v82;
          uint64_t v85 = v196;
          sub_1A9096EF4(v78, v196, (uint64_t (*)(void))type metadata accessor for TimedData);
          unint64_t v86 = v185;
          uint64_t v87 = swift_beginAccess();
          uint64_t v88 = *(int *)(v190 + 28);
          uint64_t v89 = *(void *)((char *)v86 + v88);
          MEMORY[0x1F4188790](v87);
          *(&v164 - 2) = (uint64_t)v205;
          *(&v164 - 1) = v85;
          swift_bridgeObjectRetain();
          double v33 = 0;
          uint64_t v90 = sub_1A90DE640((void (*)(uint64_t))sub_1A90F0CA0, (uint64_t)(&v164 - 4), v89);
          swift_bridgeObjectRelease();
          *(void *)((char *)v86 + v88) = v90;
          swift_endAccess();
          swift_bridgeObjectRelease();
          unint64_t v91 = v204 >> 62;
          uint64_t v92 = v173;
          uint64_t v93 = (uint64_t)v191;
          uint64_t v94 = v183;
          if (!(v204 >> 62)) {
            goto LABEL_29;
          }
          if (v91 == 1)
          {
            uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
            if ((objc_msgSend(ObjCClassFromMetadata, sel_respondsToSelector_, sel_requiresDiagnosticsConsent) & 1) == 0|| !objc_msgSend(ObjCClassFromMetadata, sel_requiresDiagnosticsConsent))
            {
LABEL_29:
              uint64_t v96 = (uint64_t)v185;
              swift_beginAccess();
              sub_1A9097024(v96, v93, type metadata accessor for Sequence);
              uint64_t v97 = *(void *)(v92 + 192);
              uint64_t ObjectType = swift_getObjectType();
              (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v97 + 8))(&v209, ObjectType, v97);
              uint64_t v99 = v209;
              uint64_t v100 = *(char **)(v92 + 80);
              uint64_t v101 = *(void **)&v100[OBJC_IVAR___AAAccessQueue_queue];
              *unint64_t v41 = v101;
              v181(v41, v182, v94);
              id v102 = v101;
              uint64_t v37 = sub_1A916AE90();
              uint64_t v103 = v180(v41, v94);
              if ((v37 & 1) == 0) {
                goto LABEL_70;
              }
              MEMORY[0x1F4188790](v103);
              *(&v164 - 2) = v99;
              *(&v164 - 1) = v93;
              uint64_t v118 = (void *)sub_1A9095E10(v100, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1A909A990, (uint64_t)(&v164 - 4));
              swift_bridgeObjectRelease();
              sub_1A9096FC4(v93, type metadata accessor for Sequence);
              if (v118)
              {
                unint64_t v119 = v185;
                swift_beginAccess();
                uint64_t v121 = *v119;
                uint64_t v120 = v119[1];
                unint64_t v122 = v188;
                uint64_t v123 = v189;
                v77((int *)&v189[v188[11]], (uint64_t)v192, v203);
                sub_1A909F130(v174, (uint64_t)v123 + v122[14]);
                void *v123 = v121;
                v123[1] = v120;
                v123[3] = 0x302E312E30;
                v123[4] = 0xE500000000000000;
                v123[2] = v118;
                uint64_t v124 = (void *)((char *)v123 + v122[12]);
                uint64_t v125 = v165;
                void *v124 = v175;
                v124[1] = v125;
                uint64_t v126 = (char *)v123 + v122[13];
                *(void *)uint64_t v126 = v176;
                v126[8] = v177 & 1;
                *(_OWORD *)((char *)v123 + v122[15]) = xmmword_1A9170040;
                swift_beginAccess();
                uint64_t v127 = swift_weakLoadStrong();
                if (v127)
                {
                  uint64_t v128 = MEMORY[0x1AD0EEDF0](v127 + 64);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  id v129 = v118;
                  swift_release();
                  uint64_t v130 = v184;
                  if (v128)
                  {
                    sub_1A90DE7E8(v123, &qword_1E97B1660, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80);
                    swift_unknownObjectRelease();
                  }
                }
                else
                {
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  id v150 = v118;
                  uint64_t v130 = v184;
                }
                if (v130)
                {
                  uint64_t v151 = v200;
                  sub_1A90F08B8((uint64_t)v123, (uint64_t)v200, &qword_1E97B1660, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
                  swift_storeEnumTagMultiPayload();
                  v130(v151);

                  swift_release();
                  swift_release();
                  swift_release();
                  sub_1A90F07DC((uint64_t)v151, &qword_1E97B1658, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
                  uint64_t v117 = (uint64_t)v123;
                  unint64_t v115 = &qword_1E97B1660;
                  unint64_t v116 = type metadata accessor for ProcessEvent;
                }
                else
                {

                  swift_release();
                  swift_release();
                  swift_release();
                  unint64_t v115 = &qword_1E97B1660;
                  unint64_t v116 = type metadata accessor for ProcessEvent;
                  uint64_t v117 = (uint64_t)v123;
                }
                goto LABEL_52;
              }
              uint64_t v142 = v185;
              if (qword_1EB68ACE8 != -1) {
                swift_once();
              }
              id v143 = (id)qword_1EB689AA0;
              sub_1A916B3A0();
              sub_1A916AD30();

              unint64_t v144 = v184;
              if (v184)
              {
                swift_beginAccess();
                uint64_t v146 = *v142;
                uint64_t v145 = v142[1];
                sub_1A90F0864();
                uint64_t v147 = swift_allocError();
                *unint64_t v148 = v146;
                v148[1] = v145;
                long long v149 = v200;
                void *v200 = v147;
                swift_storeEnumTagMultiPayload();
                swift_bridgeObjectRetain();
                v144(v149);
                swift_release();
                swift_release();
                swift_release();
                sub_1A90F07DC((uint64_t)v149, &qword_1E97B1658, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
                goto LABEL_63;
              }
              goto LABEL_62;
            }
          }
          else if ((v195[OBJC_IVAR___AARawEvent_requiresDiagnosticsConsent] & 1) == 0)
          {
            goto LABEL_29;
          }
          sub_1A9095B68((char *)&v212);
          if (v212 != 2 && (v212 & 1) == 0) {
            goto LABEL_29;
          }
          if (qword_1EB688798 != -1) {
            swift_once();
          }
          uint64_t v131 = sub_1A916AD50();
          __swift_project_value_buffer(v131, (uint64_t)qword_1EB68D9C0);
          os_log_type_t v132 = v195;
          unint64_t v133 = v204;
          sub_1A90F0DEC(v195, v204);
          sub_1A90F0DEC(v132, v133);
          unint64_t v134 = sub_1A916AD40();
          os_log_type_t v135 = sub_1A916B3D0();
          BOOL v136 = os_log_type_enabled(v134, v135);
          long long v137 = (void (*)(uint64_t))v184;
          if (v136)
          {
            long long v138 = (uint8_t *)swift_slowAlloc();
            uint64_t v139 = swift_slowAlloc();
            uint64_t v212 = v139;
            *(_DWORD *)long long v138 = 136446210;
            if (v91 == 2)
            {
              uint64_t v141 = *(void *)&v132[OBJC_IVAR___AARawEvent_name];
              unint64_t v140 = *(void *)&v132[OBJC_IVAR___AARawEvent_name + 8];
              swift_bridgeObjectRetain();
            }
            else
            {
              id v154 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
              uint64_t v141 = sub_1A916AF90();
              unint64_t v140 = v155;
            }
            uint64_t v209 = sub_1A90DCF6C(v141, v140, &v212);
            sub_1A916B5A0();
            swift_bridgeObjectRelease();
            unint64_t v156 = v204;
            sub_1A909F588(v132, v204);
            sub_1A909F588(v132, v156);
            _os_log_impl(&dword_1A9088000, v134, v135, "Discarding D&U-only event %{public}s", v138, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1AD0EECA0](v139, -1, -1);
            MEMORY[0x1AD0EECA0](v138, -1, -1);

            long long v137 = (void (*)(uint64_t))v184;
          }
          else
          {
            sub_1A909F588(v132, v133);
            sub_1A909F588(v132, v133);
          }
          if (!v137)
          {
LABEL_62:
            swift_release();
            swift_release();
            swift_release();
            goto LABEL_63;
          }
          if (v91 == 2)
          {
            uint64_t v157 = *(void *)&v132[OBJC_IVAR___AARawEvent_name];
            uint64_t v158 = *(void *)&v132[OBJC_IVAR___AARawEvent_name + 8];
            swift_bridgeObjectRetain();
          }
          else
          {
            id v159 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
            uint64_t v157 = sub_1A916AF90();
            uint64_t v158 = v160;
          }
          sub_1A90F092C();
          uint64_t v161 = swift_allocError();
          uint64_t *v162 = v157;
          v162[1] = v158;
          uint64_t v163 = (uint64_t)v186;
          *uint64_t v186 = v161;
          swift_storeEnumTagMultiPayload();
          v137(v163);
          swift_release();
          swift_release();
          swift_release();
          sub_1A90F07DC(v163, &qword_1E97B1658, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
LABEL_63:
          sub_1A9096FC4(v196, (uint64_t (*)(void))type metadata accessor for TimedData);
          unint64_t v57 = type metadata accessor for EventData;
          uint64_t v58 = v205;
LABEL_64:
          sub_1A9096FC4((uint64_t)v58, (uint64_t (*)(void))v57);
          break;
      }
    }
    else
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
      swift_once();
      id v104 = (id)qword_1EB689AA0;
      LODWORD(v203) = sub_1A916B3C0();
      sub_1A908EF64(0, (unint64_t *)&qword_1EB68ACD8, (unint64_t *)&qword_1EB68A920, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v105 = swift_allocObject();
      *(_OWORD *)(v105 + 16) = xmmword_1A916E200;
      uint64_t v209 = 0;
      *(void *)&long long v210 = 0xE000000000000000;
      uint64_t v207 = v195;
      uint64_t v208 = v37;
      sub_1A90F1138(0, &qword_1E97B1668, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmit);
      sub_1A916B780();
      uint64_t v106 = v209;
      uint64_t v107 = v210;
      uint64_t v108 = MEMORY[0x1E4FBB1A0];
      *(void *)(v105 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v109 = sub_1A90A67C0();
      *(void *)(v105 + 64) = v109;
      *(void *)(v105 + 32) = v106;
      *(void *)(v105 + 40) = v107;
      uint64_t v209 = 0;
      *(void *)&long long v210 = 0xE000000000000000;
      uint64_t v207 = (char *)v33;
      sub_1A908E870(0, (unint64_t *)&qword_1EB689860);
      sub_1A916B780();
      uint64_t v110 = v209;
      uint64_t v111 = v210;
      *(void *)(v105 + 96) = v108;
      *(void *)(v105 + 104) = v109;
      *(void *)(v105 + 72) = v110;
      *(void *)(v105 + 80) = v111;
      sub_1A916AD30();

      swift_bridgeObjectRelease();
      uint64_t v112 = v184;
      if (v184)
      {
        uint64_t v113 = v200;
        void *v200 = v33;
        swift_storeEnumTagMultiPayload();
        uint64_t v114 = v33;
        v112(v113);
        swift_release();
        swift_release();

        swift_release();
        unint64_t v115 = &qword_1E97B1658;
        unint64_t v116 = type metadata accessor for EventSubmitResult;
        uint64_t v117 = (uint64_t)v113;
LABEL_52:
        sub_1A90F07DC(v117, v115, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80, (uint64_t (*)(void, uint64_t, uint64_t))v116);
      }
      else
      {
        swift_release();
        swift_release();

        swift_release();
      }
      sub_1A9096FC4(v196, (uint64_t (*)(void))type metadata accessor for TimedData);
      sub_1A9096FC4((uint64_t)v205, (uint64_t (*)(void))type metadata accessor for EventData);
      uint64_t v152 = v167;
      swift_beginAccess();
      uint64_t v153 = *v152;
      unsigned char *v152 = 0;
    }
  }
  else if (a4)
  {
    sub_1A90F0788();
    uint64_t v54 = swift_allocError();
    *uint64_t v55 = xmmword_1A9170030;
    unint64_t v56 = v200;
    void *v200 = v54;
    swift_storeEnumTagMultiPayload();
    a4(v56);
    sub_1A90F07DC((uint64_t)v56, &qword_1E97B1658, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1EFFA1E80, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  }
}

uint64_t sub_1A90EF5A8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v41 = a1;
  uint64_t v42 = a7;
  int v40 = a4;
  uint64_t v14 = sub_1A916AE70();
  uint64_t v15 = *(void *)(v14 - 8);
  double v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (uint64_t *)((char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = *(void **)(v8[10] + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v18 = v19;
  (*(void (**)(void *, void, uint64_t, double))(v15 + 104))(v18, *MEMORY[0x1E4FBCBF0], v14, v16);
  id v20 = v19;
  uint64_t v21 = sub_1A916AE90();
  (*(void (**)(void *, uint64_t))(v15 + 8))(v18, v14);
  if ((v21 & 1) == 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v22 = *(void *)(a5 + 16);
  if (v22)
  {
    uint64_t v23 = (unsigned __int8 *)(a5 + 32);
    uint64_t v24 = *(void *)(a5 + 16);
    while (1)
    {
      int v25 = *v23++;
      if (v25 == 2) {
        break;
      }
      if (!--v24) {
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRetain();
    sub_1A909562C(a2, a3, 0, 0, 1, (uint64_t)&v46);
    uint64_t v30 = *((void *)&v47 + 1);
    sub_1A908EE84((uint64_t)&v46, &qword_1EB6887D8, qword_1EB6892F8, (uint64_t)&protocol descriptor for DataEventType);
    if (v30) {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRetain();
  }
  swift_beginAccess();
  uint64_t v26 = v8[15];
  uint64_t v27 = *(void *)(v26 + 16);
  uint64_t v39 = a6;
  if (!v27)
  {
    id v48 = 0;
    long long v46 = 0u;
    long long v47 = 0u;
LABEL_18:
    a6 = a8;
    sub_1A908EE84((uint64_t)&v46, (unint64_t *)&qword_1EB6897B0, (unint64_t *)&qword_1EB6897A8, (uint64_t)&protocol descriptor for DataEventStackType);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v28 = sub_1A90A1D98(a2, a3);
  if (v29)
  {
    sub_1A90A0DC8(*(void *)(v26 + 56) + 40 * v28, (uint64_t)&v46);
  }
  else
  {
    id v48 = 0;
    long long v46 = 0u;
    long long v47 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v47 + 1)) {
    goto LABEL_18;
  }
  sub_1A908E870(0, (unint64_t *)&qword_1EB6897A8);
  sub_1A90F0D00();
  a6 = a8;
  if (swift_dynamicCast())
  {
    uint64_t v8 = v43;
    uint64_t v21 = v44;
    a8 = v45;
    if (!v22) {
      goto LABEL_25;
    }
    goto LABEL_20;
  }
LABEL_19:
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v21 = a2;
  a8 = a3;
  if (!v22) {
    goto LABEL_25;
  }
LABEL_20:
  uint64_t v32 = (unsigned __int8 *)(a5 + 32);
  while (1)
  {
    int v33 = *v32++;
    if (v33 == 1) {
      break;
    }
    if (!--v22) {
      goto LABEL_25;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
LABEL_25:
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_30:
  }
    uint64_t v8 = sub_1A90C3170(0, v8[2] + 1, 1, v8);
  unint64_t v35 = v8[2];
  unint64_t v34 = v8[3];
  if (v35 >= v34 >> 1) {
    uint64_t v8 = sub_1A90C3170((void *)(v34 > 1), v35 + 1, 1, v8);
  }
  long long v8[2] = v35 + 1;
  uint64_t v36 = &v8[6 * v35];
  v36[4] = v41;
  void v36[5] = a5;
  *((unsigned char *)v36 + 48) = v40 & 1;
  uint64_t v37 = v42;
  v36[7] = v39;
  v36[8] = v37;
  v36[9] = a6;
  swift_unknownObjectRelease();
  sub_1A90F0D00();
  *((void *)&v47 + 1) = v38;
  id v48 = &off_1EFF9E8F0;
  *(void *)&long long v46 = v8;
  *((void *)&v46 + 1) = v21;
  *(void *)&long long v47 = a8;
  swift_beginAccess();
  sub_1A908D668((uint64_t)&v46, a2, a3);
  return swift_endAccess();
}

uint64_t sub_1A90EF9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v52 = a5;
  uint64_t v53 = a4;
  uint64_t v51 = a3;
  sub_1A90F06EC(0, (unint64_t *)&qword_1E97B1300, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DataEventStack.Entry);
  uint64_t v9 = v8;
  uint64_t v10 = *((void *)v8 - 1);
  MEMORY[0x1F4188790](v8);
  uint64_t v54 = (int *)((char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v47 - v13;
  uint64_t v15 = sub_1A916AE70();
  uint64_t v16 = *(void *)(v15 - 8);
  double v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (uint64_t *)((char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v20 = *(void **)(v5[10] + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v19 = v20;
  (*(void (**)(void *, void, uint64_t, double))(v16 + 104))(v19, *MEMORY[0x1E4FBCBF0], v15, v17);
  id v21 = v20;
  uint64_t v22 = sub_1A916AE90();
  uint64_t v24 = *(void (**)(void *, uint64_t))(v16 + 8);
  uint64_t v23 = v16 + 8;
  v24(v19, v15);
  if ((v22 & 1) == 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v50 = v10;
  sub_1A90F06EC(0, (unint64_t *)&qword_1E97B1648, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for PushEvent);
  uint64_t v26 = v25;
  uint64_t v27 = (uint64_t *)(a1 + *(int *)(v25 + 36));
  uint64_t v28 = *v27;
  uint64_t v22 = v27[1];
  uint64_t v29 = *(void *)(a2 + 16);
  if (v29)
  {
    uint64_t v30 = (unsigned __int8 *)(a2 + 32);
    uint64_t v31 = *(void *)(a2 + 16);
    while (1)
    {
      int v32 = *v30++;
      if (v32 == 2) {
        break;
      }
      if (!--v31) {
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRetain();
    sub_1A909562C(v28, v22, 0, 0, 1, (uint64_t)&v58);
    uint64_t v37 = *((void *)&v59 + 1);
    sub_1A908EE84((uint64_t)&v58, &qword_1EB6887D8, qword_1EB6892F8, (uint64_t)&protocol descriptor for DataEventType);
    if (v37) {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRetain();
  }
  swift_beginAccess();
  uint64_t v33 = v5[15];
  uint64_t v34 = *(void *)(v33 + 16);
  uint64_t v49 = v28;
  if (!v34)
  {
    uint64_t v60 = 0;
    long long v58 = 0u;
    long long v59 = 0u;
LABEL_18:
    sub_1A908EE84((uint64_t)&v58, (unint64_t *)&qword_1EB6897B0, (unint64_t *)&qword_1EB6897A8, (uint64_t)&protocol descriptor for DataEventStackType);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v35 = sub_1A90A1D98(v28, v22);
  if (v36)
  {
    sub_1A90A0DC8(*(void *)(v33 + 56) + 40 * v35, (uint64_t)&v58);
  }
  else
  {
    uint64_t v60 = 0;
    long long v58 = 0u;
    long long v59 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v59 + 1)) {
    goto LABEL_18;
  }
  sub_1A908E870(0, (unint64_t *)&qword_1EB6897A8);
  sub_1A90F06EC(0, &qword_1E97B1650, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DataEventStack);
  if (swift_dynamicCast())
  {
    uint64_t v5 = v55;
    uint64_t v48 = v56;
    uint64_t v23 = v57;
    if (!v29) {
      goto LABEL_25;
    }
    goto LABEL_20;
  }
LABEL_19:
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v48 = v28;
  uint64_t v23 = v22;
  if (!v29) {
    goto LABEL_25;
  }
LABEL_20:
  uint64_t v39 = (unsigned __int8 *)(a2 + 32);
  while (1)
  {
    int v40 = *v39++;
    if (v40 == 1) {
      break;
    }
    if (!--v29) {
      goto LABEL_25;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
LABEL_25:
  char v41 = *(unsigned char *)(a1 + *(int *)(v26 + 40));
  sub_1A9097024(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SummaryEventData);
  *(void *)&v14[v9[9]] = a2;
  v14[v9[10]] = v41;
  uint64_t v42 = &v14[v9[11]];
  uint64_t v43 = v53;
  *(void *)uint64_t v42 = v51;
  *((void *)v42 + 1) = v43;
  *(void *)&v14[v9[12]] = v52;
  uint64_t v9 = v54;
  sub_1A90F0574((uint64_t)v14, (uint64_t)v54);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_30:
  }
    uint64_t v5 = (void *)sub_1A90C32CC(0, v5[2] + 1, 1, (unint64_t)v5);
  unint64_t v45 = v5[2];
  unint64_t v44 = v5[3];
  if (v45 >= v44 >> 1) {
    uint64_t v5 = (void *)sub_1A90C32CC(v44 > 1, v45 + 1, 1, (unint64_t)v5);
  }
  id v5[2] = v45 + 1;
  sub_1A90F05F4((uint64_t)v9, (uint64_t)v5+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v45);
  sub_1A90F0674((uint64_t)v14);
  sub_1A90F06EC(0, &qword_1E97B1650, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DataEventStack);
  *((void *)&v59 + 1) = v46;
  uint64_t v60 = &off_1EFF9E8F0;
  *(void *)&long long v58 = v5;
  *((void *)&v58 + 1) = v48;
  *(void *)&long long v59 = v23;
  swift_beginAccess();
  sub_1A908D668((uint64_t)&v58, v49, v22);
  return swift_endAccess();
}

uint64_t sub_1A90EFF44(uint64_t a1, void *a2)
{
  unint64_t v6 = sub_1A916AE70();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (void *)((char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)(*(void *)(v2 + 80) + OBJC_IVAR___AAAccessQueue_queue);
  void *v10 = v11;
  (*(void (**)(void *, void, unint64_t, double))(v7 + 104))(v10, *MEMORY[0x1E4FBCBF0], v6, v8);
  id v12 = v11;
  uint64_t v13 = sub_1A916AE90();
  (*(void (**)(void *, unint64_t))(v7 + 8))(v10, v6);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (a2) {
    unint64_t v6 = a1;
  }
  else {
    unint64_t v6 = 0xD000000000000010;
  }
  if (a2) {
    a1 = (uint64_t)a2;
  }
  else {
    a1 = 0x80000001A9176CD0;
  }
  swift_beginAccess();
  uint64_t v14 = *(void *)(v2 + 120);
  if (!*(void *)(v14 + 16))
  {
    uint64_t v23 = 0;
    long long v21 = 0u;
    long long v22 = 0u;
    swift_bridgeObjectRetain();
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1A908EE84((uint64_t)&v21, (unint64_t *)&qword_1EB6897B0, (unint64_t *)&qword_1EB6897A8, (uint64_t)&protocol descriptor for DataEventStackType);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_1A90A1D98(v6, a1);
  if (v16)
  {
    sub_1A90A0DC8(*(void *)(v14 + 56) + 40 * v15, (uint64_t)&v21);
  }
  else
  {
    uint64_t v23 = 0;
    long long v21 = 0u;
    long long v22 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v22 + 1)) {
    goto LABEL_19;
  }
  sub_1A908E870(0, (unint64_t *)&qword_1EB6897A8);
  sub_1A90F0D00();
  uint64_t v2 = v17;
  if (swift_dynamicCast())
  {
    a2 = (void *)v20[0];
    uint64_t v13 = v20[2];
    if (*(void *)(v20[0] + 16))
    {
      uint64_t v3 = v20[1];
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (result)
      {
        uint64_t v19 = a2[2];
        if (v19)
        {
LABEL_18:
          a2[2] = v19 - 1;
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *((void *)&v22 + 1) = v2;
          uint64_t v23 = &off_1EFF9E8F0;
          *(void *)&long long v21 = a2;
          *((void *)&v21 + 1) = v3;
          *(void *)&long long v22 = v13;
          swift_beginAccess();
          sub_1A908D668((uint64_t)&v21, v6, a1);
          return swift_endAccess();
        }
        goto LABEL_26;
      }
LABEL_25:
      uint64_t result = (uint64_t)sub_1A91698D0(a2);
      a2 = (void *)result;
      uint64_t v19 = *(void *)(result + 16);
      if (v19) {
        goto LABEL_18;
      }
LABEL_26:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t method lookup function for BridgedAccessTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BridgedAccessTracker);
}

unint64_t sub_1A90F0294@<X0>(unint64_t result@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  unint64_t v4 = a2 >> 62;
  if (!(a2 >> 62)) {
    goto LABEL_10;
  }
  if (v4 == 1)
  {
    uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    uint64_t result = (unint64_t)objc_msgSend(ObjCClassFromMetadata, sel_respondsToSelector_, sel_timestampGranularity);
    if ((result & 1) == 0)
    {
      LOBYTE(v4) = 0;
      goto LABEL_10;
    }
    uint64_t result = (unint64_t)objc_msgSend(ObjCClassFromMetadata, sel_timestampGranularity);
    if (result < 5)
    {
      char v6 = 8 * result;
LABEL_8:
      unint64_t v4 = 0x302040100uLL >> v6;
LABEL_10:
      *a3 = v4;
      return result;
    }
  }
  else
  {
    unint64_t v7 = *(void *)(result + OBJC_IVAR___AARawEvent_timestampGranularity);
    if (v7 < 5)
    {
      char v6 = 8 * v7;
      goto LABEL_8;
    }
    id v8 = (id)result;
  }
  uint64_t result = sub_1A916BA20();
  __break(1u);
  return result;
}

unint64_t sub_1A90F0378@<X0>(unint64_t result@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (!(a2 >> 62))
  {
    LOBYTE(v5) = 2;
    goto LABEL_10;
  }
  if (a2 >> 62 == 1)
  {
    uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    uint64_t result = (unint64_t)objc_msgSend(ObjCClassFromMetadata, sel_respondsToSelector_, sel_timestampGranularity);
    if ((result & 1) == 0)
    {
      LOBYTE(v5) = 0;
      goto LABEL_10;
    }
    uint64_t result = (unint64_t)objc_msgSend(ObjCClassFromMetadata, sel_timestampGranularity);
    if (result < 5)
    {
      unint64_t v5 = 0x302040100uLL >> (8 * result);
LABEL_10:
      *a3 = v5;
      return result;
    }
  }
  else
  {
    unint64_t v6 = *(void *)(result + OBJC_IVAR___AARawEvent_timestampGranularity);
    if (v6 < 5)
    {
      unint64_t v5 = 0x302040100uLL >> (8 * v6);
      goto LABEL_10;
    }
    id v7 = (id)result;
  }
  uint64_t result = sub_1A916BA20();
  __break(1u);
  return result;
}

unint64_t sub_1A90F0474@<X0>(unint64_t result@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  unint64_t v4 = a2 >> 62;
  if (!(a2 >> 62))
  {
    unint64_t v6 = a2 >> 62;
    goto LABEL_10;
  }
  if (v4 == 1)
  {
    uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    uint64_t result = (unint64_t)objc_msgSend(ObjCClassFromMetadata, sel_respondsToSelector_, sel_timeDurationGranularity);
    if ((result & 1) == 0)
    {
      LOBYTE(v4) = 0;
      LOBYTE(v6) = 0;
      goto LABEL_10;
    }
    uint64_t result = (unint64_t)objc_msgSend(ObjCClassFromMetadata, sel_timeDurationGranularity);
    if (result < 4)
    {
      LODWORD(v4) = (0xEu >> (result & 0xF)) & 1;
      LOBYTE(v6) = result;
LABEL_10:
      *a3 = v4;
      a3[1] = v6;
      return result;
    }
  }
  else
  {
    unint64_t v6 = *(void *)(result + OBJC_IVAR___AARawEvent_timeDurationGranularity);
    if (v6 < 4)
    {
      LODWORD(v4) = 0x1010100u >> (8 * v6);
      goto LABEL_10;
    }
    id v7 = (id)result;
  }
  uint64_t result = sub_1A916BA20();
  __break(1u);
  return result;
}

uint64_t sub_1A90F0574(uint64_t a1, uint64_t a2)
{
  sub_1A90F06EC(0, (unint64_t *)&qword_1E97B1300, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DataEventStack.Entry);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A90F05F4(uint64_t a1, uint64_t a2)
{
  sub_1A90F06EC(0, (unint64_t *)&qword_1E97B1300, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DataEventStack.Entry);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A90F0674(uint64_t a1)
{
  sub_1A90F06EC(0, (unint64_t *)&qword_1E97B1300, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DataEventStack.Entry);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1A90F06EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for SummaryEventData();
    uint64_t v7 = sub_1A9097640(&qword_1EB687730, (void (*)(uint64_t))type metadata accessor for SummaryEventData);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1A90F0788()
{
  unint64_t result = qword_1EB688388;
  if (!qword_1EB688388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB688388);
  }
  return result;
}

uint64_t sub_1A90F07DC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  sub_1A90F1138(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1A90F0838()
{
  return sub_1A90F10E0((uint64_t (*)(void, void, void, void, void, void, void, void, void))sub_1A90E56D0);
}

unint64_t sub_1A90F0864()
{
  unint64_t result = qword_1E97B1670;
  if (!qword_1E97B1670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1670);
  }
  return result;
}

uint64_t sub_1A90F08B8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t))
{
  sub_1A90F1138(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

unint64_t sub_1A90F092C()
{
  unint64_t result = qword_1E97B1678;
  if (!qword_1E97B1678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1678);
  }
  return result;
}

unint64_t sub_1A90F0980()
{
  swift_retain();
  while (1)
  {
    uint64_t v1 = (uint64_t *)(v0 + 144);
    swift_beginAccess();
    unint64_t v2 = *(void *)(v0 + 144);
    if (v2 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1A916B7E0();
      if (!v3)
      {
LABEL_17:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v7 = 0;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
      if (!v3) {
        goto LABEL_17;
      }
    }
    unint64_t result = v3 - 1;
    if (__OFSUB__(v3, 1)) {
      break;
    }
    if ((v2 & 0xC000000000000001) != 0)
    {
      unint64_t v5 = (char *)MEMORY[0x1AD0EDEF0](result, v2);
    }
    else
    {
      if ((result & 0x8000000000000000) != 0) {
        goto LABEL_27;
      }
      if (result >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_28;
      }
      unint64_t v5 = (char *)*(id *)(v2 + 8 * result + 32);
    }
    uint64_t v6 = v5;
    swift_bridgeObjectRelease();
    uint64_t v7 = *(void *)&v6[OBJC_IVAR___AAGroup_name];
    uint64_t v3 = *(void *)&v6[OBJC_IVAR___AAGroup_name + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();

    uint64_t v8 = *v1;
    if ((unint64_t)*v1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1A916B7E0();
      if (!v9)
      {
LABEL_20:
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v9) {
        goto LABEL_20;
      }
    }
    unint64_t result = v9 - 1;
    if (__OFSUB__(v9, 1)) {
      goto LABEL_29;
    }
    if ((v8 & 0xC000000000000001) != 0)
    {
      MEMORY[0x1AD0EDEF0](result, v8);
      swift_bridgeObjectRelease();
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      if ((result & 0x8000000000000000) != 0) {
        goto LABEL_30;
      }
      if (result >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_31;
      }
      id v10 = *(id *)(v8 + 8 * result + 32);
      swift_bridgeObjectRelease();
      swift_release();
    }
LABEL_21:
    uint64_t v11 = *(void *)(v0 + 136);
    swift_retain();
    swift_release();
    if (!v11) {
      return v7;
    }
    uint64_t v0 = v11;
    if (v3)
    {
      swift_release();
      return v7;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1A90F0C14()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A90F0C4C()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A90F0C88(uint64_t a1, uint64_t a2)
{
  return sub_1A90F0FD8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, char *, void, void, void, void, char, char *, void))sub_1A90EDDFC);
}

uint64_t sub_1A90F0CA0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1A9152804(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1A90F0CC0()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1A90F0CF8(uint64_t a1, uint64_t a2)
{
  sub_1A90FAD54(a1, a2, *(void *)(v2 + 16));
}

void sub_1A90F0D00()
{
  if (!qword_1EB687AE8)
  {
    sub_1A90C566C();
    unint64_t v0 = type metadata accessor for DataEventStack();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB687AE8);
    }
  }
}

uint64_t sub_1A90F0D5C(uint64_t a1, uint64_t a2)
{
  sub_1A90F1138(0, &qword_1EB687078, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1EFF9D000, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1A90F0DEC(id result, unint64_t a2)
{
  if (a2 >> 62 == 2) {
    return result;
  }
  if ((a2 >> 62) <= 1) {
    return (id)swift_retain();
  }
  return result;
}

uint64_t objectdestroy_32Tm()
{
  uint64_t v1 = type metadata accessor for EventData();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  unint64_t v4 = (((((*(void *)(*(void *)(v1 - 8) + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  sub_1A909F588(*(void **)(v0 + 40), *(void *)(v0 + 48));
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 20);
  uint64_t v6 = sub_1A916AC90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v4 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + v4);
  }
  swift_release();

  return MEMORY[0x1F4186498](v0, ((v4 + 39) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1A90F0FC0(uint64_t a1, uint64_t a2)
{
  return sub_1A90F0FD8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, char *, void, void, void, void, char, char *, void))sub_1A90EC650);
}

uint64_t sub_1A90F0FD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void, char *, void, void, void, void, char, char *, void))
{
  uint64_t v7 = *(void *)(type metadata accessor for EventData() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = &v3[(v10 + 23) & 0xFFFFFFFFFFFFFFF8];
  char v13 = v11[8];
  return a3(a1, a2, *((void *)v3 + 2), *((void *)v3 + 3), *((void *)v3 + 4), *((void *)v3 + 5), *((void *)v3 + 6), &v3[v8], *(void *)&v3[v9], *(void *)&v3[v10], *(void *)&v3[v10 + 8], *(void *)v11, v13, &v3[(v10 + 39) & 0xFFFFFFFFFFFFFFF8], *(void *)&v3[(((v10 + 39) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8]);
}

uint64_t sub_1A90F10E0(uint64_t (*a1)(void, void, void, void, void, void, void, void, void))
{
  return a1(*(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88));
}

void sub_1A90F1138(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1A90F118C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1A90F0CA0(a1, a2);
}

BOOL sub_1A90F1218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1A90F133C();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A91700C0;
  *(void *)(inited + 32) = 42;
  *(void *)(inited + 40) = 0xE100000000000000;
  *(void *)(inited + 48) = 42;
  *(void *)(inited + 56) = 0xE100000000000000;
  *(void *)(inited + 64) = 42;
  *(void *)(inited + 72) = 0xE100000000000000;
  *(void *)(inited + 80) = a1;
  *(void *)(inited + 88) = a2;
  *(void *)(inited + 96) = 42;
  *(void *)(inited + 104) = 0xE100000000000000;
  *(void *)(inited + 112) = 42;
  *(void *)(inited + 120) = 0xE100000000000000;
  *(void *)(inited + 128) = a1;
  *(void *)(inited + 136) = a2;
  *(void *)(inited + 144) = a3;
  *(void *)(inited + 152) = a4;
  *(void *)(inited + 160) = 42;
  *(void *)(inited + 168) = 0xE100000000000000;
  *(void *)(inited + 176) = a1;
  *(void *)(inited + 184) = a2;
  *(void *)(inited + 192) = a3;
  *(void *)(inited + 200) = a4;
  *(void *)(inited + 208) = a5;
  *(void *)(inited + 216) = a6;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1A9139678(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  char v15 = sub_1A910A860(v14, *(void *)(v6 + 16));
  swift_bridgeObjectRelease();
  return (v15 & 1) == 0;
}

void sub_1A90F133C()
{
  if (!qword_1EB686760)
  {
    unint64_t v0 = sub_1A916B9A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB686760);
    }
  }
}

uint64_t SessionObserver.deinit()
{
  sub_1A90A43B4(v0 + 16);
  swift_release();
  swift_release();
  return v0;
}

uint64_t method lookup function for SessionObserver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SessionObserver);
}

uint64_t *sub_1A90F13DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      uint64_t v11 = a2 + 4;
      unint64_t v12 = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v12 >= 3)
      {
        a1[4] = *v11;
        a1[5] = v12;
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)a1 + 2) = *(_OWORD *)v11;
      }
      uint64_t v13 = type metadata accessor for Session();
      uint64_t v14 = *(int *)(v13 + 28);
      char v15 = (char *)a1 + v14;
      char v16 = (char *)a2 + v14;
      uint64_t v17 = sub_1A916AC90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      *(uint64_t *)((char *)a1 + *(int *)(v13 + 32)) = *(uint64_t *)((char *)a2 + *(int *)(v13 + 32));
      swift_bridgeObjectRetain();
      goto LABEL_11;
    }
    if (EnumCaseMultiPayload <= 1)
    {
      *a1 = *a2;
      swift_retain();
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

void *sub_1A90F1598(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A90F1734((uint64_t)a1);
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      unint64_t v7 = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v7 >= 3)
      {
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      }
      uint64_t v8 = type metadata accessor for Session();
      uint64_t v9 = *(int *)(v8 + 28);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_1A916AC90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      *(void *)((char *)a1 + *(int *)(v8 + 32)) = *(void *)((char *)a2 + *(int *)(v8 + 32));
      swift_bridgeObjectRetain();
      goto LABEL_10;
    }
    if (EnumCaseMultiPayload <= 1)
    {
      *a1 = *a2;
      swift_retain();
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1A90F1734(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SessionObserverChange();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1A90F1790(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    uint64_t v7 = type metadata accessor for Session();
    uint64_t v8 = *(int *)(v7 + 28);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1A916AC90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    *(void *)((char *)a1 + *(int *)(v7 + 32)) = *(void *)((char *)a2 + *(int *)(v7 + 32));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1A90F1884(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A90F1734((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      uint64_t v7 = type metadata accessor for Session();
      uint64_t v8 = *(int *)(v7 + 28);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1A916AC90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      *(void *)((char *)a1 + *(int *)(v7 + 32)) = *(void *)((char *)a2 + *(int *)(v7 + 32));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1A90F1988()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR___AADelayedToken_sealed) & 1) == 0)
  {
    *(unsigned char *)(v0 + OBJC_IVAR___AADelayedToken_sealed) = 1;
    return (*(uint64_t (**)(void))(v0 + OBJC_IVAR___AADelayedToken_block))();
  }
  return result;
}

id DelayedToken.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void DelayedToken.init()()
{
}

id DelayedToken.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DelayedToken();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DelayedToken()
{
  return self;
}

uint64_t method lookup function for DelayedToken(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DelayedToken);
}

uint64_t dispatch thunk of DelayedToken.commit()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t LoggingEventProcessor.__allocating_init(logFormat:subsystem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  sub_1A90A3D94(a1, (uint64_t)v11);
  if (v12)
  {
    if (v12 == 1)
    {
      sub_1A908EC8C(v11, (uint64_t)&v13);
    }
    else
    {
      uint64_t v14 = &type metadata for DefaultLoggingEventProcessorFormatter;
      char v15 = &off_1EFFA0878;
    }
  }
  else
  {
    uint64_t v6 = *(void *)&v11[0];
    uint64_t v14 = &type metadata for JSONLoggingEventProcessorFormatter;
    char v15 = &off_1EFFA0888;
    uint64_t v7 = (void *)swift_allocObject();
    *(void *)&long long v13 = v7;
    v7[6] = &type metadata for DefaultLoggingEventProcessorFormatter;
    v7[7] = &off_1EFFA0878;
    _OWORD v7[2] = v6;
  }
  sub_1A908EC8C(&v13, v5 + 16);
  if (a3)
  {
    sub_1A90A5FA0();
    id v8 = (id)sub_1A916B520();
  }
  else
  {
    if (qword_1EB68ACE8 != -1) {
      swift_once();
    }
    id v8 = (id)qword_1EB689AA0;
  }
  id v9 = v8;
  sub_1A90A3D1C(a1);
  *(void *)(v5 + 56) = v9;
  return v5;
}

uint64_t LoggingEventProcessor.init(logFormat:subsystem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1A90A3D94(a1, (uint64_t)v12);
  if (v13)
  {
    if (v13 == 1)
    {
      sub_1A908EC8C(v12, (uint64_t)&v14);
    }
    else
    {
      char v15 = &type metadata for DefaultLoggingEventProcessorFormatter;
      char v16 = &off_1EFFA0878;
    }
  }
  else
  {
    uint64_t v7 = *(void *)&v12[0];
    char v15 = &type metadata for JSONLoggingEventProcessorFormatter;
    char v16 = &off_1EFFA0888;
    id v8 = (void *)swift_allocObject();
    *(void *)&long long v14 = v8;
    void v8[6] = &type metadata for DefaultLoggingEventProcessorFormatter;
    v8[7] = &off_1EFFA0878;
    long long v8[2] = v7;
  }
  sub_1A908EC8C(&v14, v4 + 16);
  if (a3)
  {
    sub_1A90A5FA0();
    id v9 = (id)sub_1A916B520();
  }
  else
  {
    if (qword_1EB68ACE8 != -1) {
      swift_once();
    }
    id v9 = (id)qword_1EB689AA0;
  }
  id v10 = v9;
  sub_1A90A3D1C(a1);
  *(void *)(v4 + 56) = v10;
  return v4;
}

uint64_t LoggingEventProcessor.process<A>(processEvent:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A916B3A0();
  sub_1A90CA164();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1A916EF60;
  uint64_t v8 = v3[5];
  uint64_t v9 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v8);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(a1, a2, a3, v8, v9);
  uint64_t v12 = v11;
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 64) = sub_1A90A67C0();
  *(void *)(v7 + 32) = v10;
  *(void *)(v7 + 40) = v12;
  sub_1A916AD30();

  return swift_bridgeObjectRelease();
}

uint64_t LoggingEventProcessor.didEnterGroup(_:)(uint64_t a1)
{
  sub_1A916B3A0();
  sub_1A90CA164();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A916E200;
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR___AAGroup_name);
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR___AAGroup_name + 8);
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v6 = sub_1A90A67C0();
  *(void *)(v2 + 64) = v6;
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v4;
  sub_1A916AC90();
  sub_1A90F25AC();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1A916B990();
  *(void *)(v2 + 96) = v5;
  *(void *)(v2 + 104) = v6;
  *(void *)(v2 + 72) = v7;
  *(void *)(v2 + 80) = v8;
  sub_1A916AD30();

  return swift_bridgeObjectRelease();
}

uint64_t LoggingEventProcessor.didLeaveGroup(_:)(uint64_t a1)
{
  sub_1A916B3A0();
  sub_1A90CA164();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A916EF60;
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR___AAGroup_name);
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR___AAGroup_name + 8);
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 64) = sub_1A90A67C0();
  *(void *)(v2 + 32) = v4;
  *(void *)(v2 + 40) = v3;
  swift_bridgeObjectRetain();
  sub_1A916AD30();

  return swift_bridgeObjectRelease();
}

uint64_t LoggingEventProcessor.didStartSession(_:)(uint64_t *a1)
{
  return sub_1A90F2194(a1);
}

uint64_t LoggingEventProcessor.didUpdateSession(_:)(uint64_t *a1)
{
  return sub_1A90F2194(a1);
}

uint64_t sub_1A90F2194(uint64_t *a1)
{
  sub_1A916B3A0();
  sub_1A90CA164();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A916E210;
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v6 = sub_1A90A67C0();
  *(void *)(v2 + 64) = v6;
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v4;
  type metadata accessor for Session();
  sub_1A916AC90();
  sub_1A90F25AC();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1A916B990();
  *(void *)(v2 + 96) = v5;
  *(void *)(v2 + 104) = v6;
  *(void *)(v2 + 72) = v7;
  *(void *)(v2 + 80) = v8;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1A916AEE0();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  *(void *)(v2 + 136) = v5;
  *(void *)(v2 + 144) = v6;
  *(void *)(v2 + 112) = v9;
  *(void *)(v2 + 120) = v11;
  sub_1A916AD30();

  return swift_bridgeObjectRelease();
}

uint64_t LoggingEventProcessor.didEndSession(_:endDate:)(uint64_t *a1)
{
  sub_1A916B3A0();
  sub_1A90CA164();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A91700C0;
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v6 = sub_1A90A67C0();
  *(void *)(v2 + 64) = v6;
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v4;
  type metadata accessor for Session();
  sub_1A916AC90();
  sub_1A90F25AC();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1A916B990();
  *(void *)(v2 + 96) = v5;
  *(void *)(v2 + 104) = v6;
  *(void *)(v2 + 72) = v7;
  *(void *)(v2 + 80) = v8;
  uint64_t v9 = sub_1A916B990();
  *(void *)(v2 + 136) = v5;
  *(void *)(v2 + 144) = v6;
  *(void *)(v2 + 112) = v9;
  *(void *)(v2 + 120) = v10;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1A916AEE0();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  *(void *)(v2 + 176) = v5;
  *(void *)(v2 + 184) = v6;
  *(void *)(v2 + 152) = v11;
  *(void *)(v2 + 160) = v13;
  sub_1A916AD30();

  return swift_bridgeObjectRelease();
}

uint64_t LoggingEventProcessor.deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  return v0;
}

uint64_t sub_1A90F2498(uint64_t a1)
{
  sub_1A916B3A0();
  sub_1A90CA164();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A916EF60;
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR___AAGroup_name);
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR___AAGroup_name + 8);
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 64) = sub_1A90A67C0();
  *(void *)(v2 + 32) = v4;
  *(void *)(v2 + 40) = v3;
  swift_bridgeObjectRetain();
  sub_1A916AD30();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A90F2574()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);

  return MEMORY[0x1F4186498](v0, 64, 7);
}

unint64_t sub_1A90F25AC()
{
  unint64_t result = qword_1EB689710;
  if (!qword_1EB689710)
  {
    sub_1A916AC90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB689710);
  }
  return result;
}

uint64_t method lookup function for LoggingEventProcessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LoggingEventProcessor);
}

uint64_t dispatch thunk of LoggingEventProcessor.__allocating_init(logFormat:subsystem:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1A90F2630(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = sub_1A916ABB0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  switch(a3 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_1A90D1784(a2, a3);
      sub_1A90D1784(a2, a3);
      break;
    default:
      break;
  }
  swift_bridgeObjectRetain();
  sub_1A916ABC0();
  sub_1A90A2FD4(a2, a3);
  sub_1A90F30F4();
  unint64_t v10 = 0;
  while (1)
  {
    sub_1A916B590();
    if (v15[15]) {
      break;
    }
    unint64_t v11 = *(void *)(a1 + 16);
    if (v10 == v11)
    {
      (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
      swift_bridgeObjectRelease();
      return 1;
    }
    if (v10 >= v11)
    {
      __break(1u);
      goto LABEL_16;
    }
    uint64_t v12 = a1 + v10++;
    if (v15[14] != *(unsigned __int8 *)(v12 + 32))
    {
      (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  unint64_t v13 = *(void *)(a1 + 16);
  swift_bridgeObjectRelease();
  if (v13 == v10) {
    return 1;
  }
  if (v10 >= v13)
  {
LABEL_16:
    __break(1u);
    JUMPOUT(0x1A90F283CLL);
  }
  return 0;
}

uint64_t sub_1A90F284C(uint64_t a1, unint64_t a2)
{
  uint64_t v59 = *MEMORY[0x1E4F143B8];
  unint64_t v2 = a2 >> 62;
  uint64_t v3 = (Bytef *)a2;
  uint64_t v4 = a1;
  switch(a2 >> 62)
  {
    case 1uLL:
      if ((int)a1 == a1 >> 32) {
        goto LABEL_8;
      }
      goto LABEL_7;
    case 2uLL:
      if (*(void *)(a1 + 16) != *(void *)(a1 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((a2 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      if ((sub_1A90F2630((uint64_t)&unk_1EFF9C888, a1, a2) & 1) == 0)
      {
        strm.next_in = 0;
        strm.avail_in = 0;
        memset(&strm.total_in, 0, 20);
        memset(&strm.total_out, 0, 52);
        strm.adler = 0;
        strm.reserved = 0;
        if (!v2)
        {
          LODWORD(v10) = BYTE6(v3);
          strm.next_in = (Bytef *)&v56;
LABEL_31:
          strm.avail_in = v10;
          int v17 = deflateInit2_(&strm, 9, 8, 31, 9, 0, "1.2.12", 112);
          if (v17)
          {
            int v18 = v17;
            sub_1A90F30A0();
            swift_allocError();
            *uint64_t v19 = v18;
            swift_willThrow();
            return v4;
          }
          sub_1A916A8C0();
          swift_allocObject();
          unint64_t v20 = sub_1A916A8B0() | 0x4000000000000000;
          uint64_t v56 = 0;
          unint64_t v57 = v20;
          if (strm.avail_out)
          {
LABEL_34:
            deflateEnd(&strm);
            if ((strm.total_out & 0x8000000000000000) == 0)
            {
              sub_1A916AB30();
              return v56;
            }
            goto LABEL_119;
          }
          int64_t total_out = strm.total_out;
          if ((strm.total_out & 0x8000000000000000) != 0) {
            goto LABEL_129;
          }
          uint64_t v22 = 0;
          LODWORD(v23) = 0;
          while (2)
          {
            int64_t v23 = (int)v23;
LABEL_40:
            if (total_out >= v23)
            {
              uint64_t v24 = 0;
              switch(v20 >> 62)
              {
                case 1uLL:
                  if (__OFSUB__(HIDWORD(v22), v22)) {
                    goto LABEL_121;
                  }
                  uint64_t v24 = HIDWORD(v22) - (int)v22;
LABEL_53:
                  if (__OFADD__(v24, 0x4000)) {
                    goto LABEL_102;
                  }
                  if (v24 + 0x4000 < 0) {
                    goto LABEL_103;
                  }
                  sub_1A916AB30();
                  uint64_t v22 = v56;
                  unint64_t v20 = v57;
                  break;
                case 2uLL:
                  uint64_t v26 = *(void *)(v22 + 16);
                  uint64_t v25 = *(void *)(v22 + 24);
                  BOOL v16 = __OFSUB__(v25, v26);
                  uint64_t v24 = v25 - v26;
                  if (!v16) {
                    goto LABEL_53;
                  }
                  goto LABEL_120;
                case 3uLL:
                  goto LABEL_53;
                default:
                  uint64_t v24 = BYTE6(v20);
                  goto LABEL_53;
              }
            }
            switch(v20 >> 62)
            {
              case 1uLL:
                uint64_t v43 = v20 & 0x3FFFFFFFFFFFFFFFLL;
                uint64_t v44 = v22 >> 32;
                if (swift_isUniquelyReferenced_nonNull_native()) {
                  goto LABEL_78;
                }
                if (v44 < (int)v22) {
                  goto LABEL_117;
                }
                if (sub_1A916A870() && __OFSUB__((int)v22, sub_1A916A8A0())) {
                  goto LABEL_126;
                }
                swift_allocObject();
                uint64_t v45 = sub_1A916A850();
                swift_release();
                uint64_t v43 = v45;
LABEL_78:
                if (v44 < (int)v22) {
                  goto LABEL_110;
                }
                uint64_t v46 = sub_1A916A870();
                if (!v46) {
                  goto LABEL_131;
                }
                uint64_t v47 = v46;
                uint64_t v48 = sub_1A916A8A0();
                uint64_t v49 = (int)v22 - v48;
                if (__OFSUB__((int)v22, v48)) {
                  goto LABEL_111;
                }
                sub_1A916A890();
                uLong v29 = strm.total_out;
                if ((strm.total_out & 0x8000000000000000) != 0) {
                  goto LABEL_116;
                }
                strm.next_out = (Bytef *)(v47 + v49 + strm.total_out);
                unint64_t v20 = v43 | 0x4000000000000000;
                goto LABEL_83;
              case 2uLL:
                uint64_t v30 = v20 & 0x3FFFFFFFFFFFFFFFLL;
                if (swift_isUniquelyReferenced_nonNull_native()) {
                  goto LABEL_64;
                }
                uint64_t v31 = *(void *)(v22 + 16);
                uint64_t v32 = *(void *)(v22 + 24);
                if (sub_1A916A870() && __OFSUB__(v31, sub_1A916A8A0())) {
                  goto LABEL_125;
                }
                if (__OFSUB__(v32, v31)) {
                  goto LABEL_118;
                }
                swift_allocObject();
                uint64_t v33 = sub_1A916A850();
                swift_release();
                uint64_t v30 = v33;
LABEL_64:
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  uint64_t v34 = *(void *)(v22 + 16);
                  uint64_t v35 = *(void *)(v22 + 24);
                  sub_1A916AB10();
                  uint64_t v36 = swift_allocObject();
                  *(void *)(v36 + 16) = v34;
                  *(void *)(v36 + 24) = v35;
                  swift_release();
                  uint64_t v22 = v36;
                }
                uint64_t v37 = *(void *)(v22 + 16);
                uint64_t v38 = *(void *)(v22 + 24);
                uint64_t v39 = sub_1A916A870();
                if (v39)
                {
                  uint64_t v40 = v39;
                  uint64_t v41 = sub_1A916A8A0();
                  uint64_t v42 = v37 - v41;
                  if (!__OFSUB__(v37, v41))
                  {
                    if (__OFSUB__(v38, v37))
                    {
LABEL_112:
                      __break(1u);
LABEL_113:
                      __break(1u);
LABEL_114:
                      __break(1u);
LABEL_115:
                      __break(1u);
LABEL_116:
                      __break(1u);
LABEL_117:
                      __break(1u);
LABEL_118:
                      __break(1u);
LABEL_119:
                      __break(1u);
LABEL_120:
                      __break(1u);
LABEL_121:
                      __break(1u);
                      goto LABEL_122;
                    }
                    sub_1A916A890();
                    uLong v29 = strm.total_out;
                    if ((strm.total_out & 0x8000000000000000) != 0) {
                      goto LABEL_115;
                    }
                    strm.next_out = (Bytef *)(v40 + v42 + strm.total_out);
                    unint64_t v20 = v30 | 0x8000000000000000;
LABEL_83:
                    uint64_t v56 = v22;
                    unint64_t v57 = v20;
LABEL_84:
                    switch(v20 >> 62)
                    {
                      case 1uLL:
                        LODWORD(v50) = HIDWORD(v22) - v22;
                        if (__OFSUB__(HIDWORD(v22), v22)) {
                          goto LABEL_114;
                        }
                        unint64_t v50 = (int)v50;
LABEL_92:
                        if ((v50 & 0x8000000000000000) != 0 || HIDWORD(v50)) {
                          goto LABEL_132;
                        }
LABEL_94:
                        if (HIDWORD(v29)) {
                          goto LABEL_132;
                        }
                        BOOL v53 = v50 >= v29;
                        uInt v54 = v50 - v29;
                        if (!v53) {
                          goto LABEL_104;
                        }
                        strm.avail_out = v54;
                        deflate(&strm, 4);
                        if (strm.avail_out) {
                          goto LABEL_34;
                        }
                        int64_t total_out = strm.total_out;
                        if ((strm.total_out & 0x8000000000000000) != 0) {
                          goto LABEL_105;
                        }
                        uint64_t v24 = 0;
                        switch(v20 >> 62)
                        {
                          case 1uLL:
                            LODWORD(v23) = HIDWORD(v22) - v22;
                            if (!__OFSUB__(HIDWORD(v22), v22)) {
                              continue;
                            }
                            __break(1u);
                            break;
                          case 2uLL:
                            uint64_t v28 = *(void *)(v22 + 16);
                            uint64_t v27 = *(void *)(v22 + 24);
                            BOOL v16 = __OFSUB__(v27, v28);
                            int64_t v23 = v27 - v28;
                            if (!v16) {
                              goto LABEL_40;
                            }
                            goto LABEL_106;
                          case 3uLL:
                            goto LABEL_53;
                          default:
                            int64_t v23 = BYTE6(v20);
                            goto LABEL_40;
                        }
                        break;
                      case 2uLL:
                        uint64_t v52 = *(void *)(v22 + 16);
                        uint64_t v51 = *(void *)(v22 + 24);
                        BOOL v16 = __OFSUB__(v51, v52);
                        unint64_t v50 = v51 - v52;
                        if (!v16) {
                          goto LABEL_92;
                        }
                        goto LABEL_113;
                      case 3uLL:
                        LODWORD(v50) = 0;
                        goto LABEL_94;
                      default:
                        LODWORD(v50) = BYTE6(v20);
                        goto LABEL_94;
                    }
LABEL_102:
                    __break(1u);
LABEL_103:
                    __break(1u);
LABEL_104:
                    __break(1u);
LABEL_105:
                    __break(1u);
LABEL_106:
                    __break(1u);
LABEL_107:
                    __break(1u);
LABEL_108:
                    __break(1u);
                  }
                  __break(1u);
LABEL_110:
                  __break(1u);
LABEL_111:
                  __break(1u);
                  goto LABEL_112;
                }
                __break(1u);
LABEL_131:
                __break(1u);
                break;
              case 3uLL:
                memset(v55, 0, 15);
                uLong v29 = strm.total_out;
                if ((strm.total_out & 0x8000000000000000) != 0) {
                  goto LABEL_108;
                }
                strm.next_out = (Bytef *)v55 + strm.total_out;
                goto LABEL_84;
              default:
                v55[0] = v22;
                LOWORD(v55[1]) = v20;
                BYTE2(v55[1]) = BYTE2(v20);
                BYTE3(v55[1]) = BYTE3(v20);
                BYTE4(v55[1]) = BYTE4(v20);
                BYTE5(v55[1]) = BYTE5(v20);
                BYTE6(v55[1]) = BYTE6(v20);
                uLong v29 = strm.total_out;
                if ((strm.total_out & 0x8000000000000000) != 0) {
                  goto LABEL_107;
                }
                strm.next_out = (Bytef *)v55 + strm.total_out;
                v20 &= 0xFFFFFFFFFFFFFFuLL;
                goto LABEL_83;
            }
            break;
          }
LABEL_132:
          sub_1A916B7B0();
          __break(1u);
          JUMPOUT(0x1A90F3050);
        }
        if (v2 == 1)
        {
          if ((int)v4 > v4 >> 32)
          {
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
            goto LABEL_124;
          }
          sub_1A90D1784(v4, (unint64_t)v3);
          uint64_t v6 = sub_1A916A870();
          if (v6)
          {
            uint64_t v7 = v6;
            uint64_t v8 = sub_1A916A8A0();
            uint64_t v9 = (int)v4 - v8;
            if (__OFSUB__((int)v4, v8))
            {
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
            }
            sub_1A916A890();
            sub_1A90A2FD4(v4, (unint64_t)v3);
            strm.next_in = (Bytef *)(v7 + v9);
            goto LABEL_27;
          }
        }
        else
        {
          uint64_t v11 = *(void *)(v4 + 16);
          uint64_t v12 = *(void *)(v4 + 24);
          swift_retain();
          swift_retain();
          uint64_t v3 = (Bytef *)sub_1A916A870();
          if (v3)
          {
            uint64_t v13 = sub_1A916A8A0();
            if (__OFSUB__(v11, v13))
            {
LABEL_127:
              __break(1u);
              goto LABEL_128;
            }
            v3 += v11 - v13;
          }
          if (__OFSUB__(v12, v11)) {
            goto LABEL_123;
          }
          sub_1A916A890();
          swift_release();
          swift_release();
          if (v3) {
            strm.next_in = v3;
          }
          uint64_t v15 = *(void *)(v4 + 16);
          uint64_t v14 = *(void *)(v4 + 24);
          BOOL v16 = __OFSUB__(v14, v15);
          unint64_t v10 = v14 - v15;
          if (!v16)
          {
LABEL_29:
            if ((v10 & 0x8000000000000000) != 0 || HIDWORD(v10)) {
              goto LABEL_132;
            }
            goto LABEL_31;
          }
          __break(1u);
        }
        sub_1A916A890();
        sub_1A90A2FD4(v4, (unint64_t)v3);
LABEL_27:
        LODWORD(v10) = HIDWORD(v4) - v4;
        if (__OFSUB__(HIDWORD(v4), v4))
        {
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
          goto LABEL_127;
        }
        unint64_t v10 = (int)v10;
        goto LABEL_29;
      }
LABEL_8:
      sub_1A90D1784(v4, (unint64_t)v3);
      return v4;
  }
}

unint64_t sub_1A90F30A0()
{
  unint64_t result = qword_1E97B1690;
  if (!qword_1E97B1690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1690);
  }
  return result;
}

unint64_t sub_1A90F30F4()
{
  unint64_t result = qword_1EB689118;
  if (!qword_1EB689118)
  {
    sub_1A916ABB0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB689118);
  }
  return result;
}

_DWORD *__swift_memcpy4_4(_DWORD *result, _DWORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for GZIPError(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for GZIPError(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 4) = v3;
  return result;
}

ValueMetadata *type metadata accessor for GZIPError()
{
  return &type metadata for GZIPError;
}

uint64_t ExternalResult.valueOrNil()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  double v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v4 + 16))(v7, v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a1);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 56))(a2, 1, 1);
  }
  else
  {
    uint64_t v9 = *(void *)(a1 + 16);
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v7, v9);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a2, 0, 1, v9);
  }
}

uint64_t sub_1A90F3358()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_1A90F33EC(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(char **)a2;
    *(void *)char v3 = *(void *)a2;
    char v3 = &v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      uint64_t v14 = *(void *)a2;
      id v15 = *(id *)a2;
      *(void *)char v3 = v14;
      v3[v5] = 1;
    }
    else
    {
      (*(void (**)(char *))(v4 + 16))(a1);
      v3[v5] = 0;
    }
  }
  return v3;
}

void sub_1A90F3574(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {

  }
  else {
    (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
}

void *sub_1A90F3674(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    uint64_t v10 = *(void *)a2;
    id v11 = *(id *)a2;
    *a1 = v10;
    char v12 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v12 = 0;
  }
  *((unsigned char *)a1 + v4) = v12;
  return a1;
}

unsigned __int8 *sub_1A90F37BC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {

    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      int v18 = *(void **)a2;
      id v19 = v18;
      *(void *)a1 = v18;
      char v20 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v20 = 0;
    }
    a1[v7] = v20;
  }
  return a1;
}

void *sub_1A90F39DC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *a1 = *(void *)a2;
    char v10 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1A90F3B14(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {

    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(void *)a1 = *(void *)a2;
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_1A90F3D2C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_1A90F3E60(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1A90F4028);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1A90F4050(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1A90F4108(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    size_t v4 = 8;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t type metadata accessor for ExternalResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t AnyDataEventEntry.key.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AnyDataEventEntry.data.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A90A0DC8(v1 + 16, a1);
}

uint64_t AnyDataEventEntry.traits.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AnyDataEventEntry.requiresDiagnosticsConsent.getter()
{
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t AnyDataEventEntry.file.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AnyDataEventEntry.line.getter()
{
  return *(void *)(v0 + 88);
}

uint64_t sub_1A90F427C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1A90F4290(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1A90F42A4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1A90F42B8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t initializeWithCopy for AnyDataEventEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  unsigned int v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  v8(a1 + 16, v5, v7);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AnyDataEventEntry(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        int v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for AnyDataEventEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t storeEnumTagSinglePayload for AnyDataEventEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyDataEventEntry()
{
  return &type metadata for AnyDataEventEntry;
}

uint64_t sub_1A90F475C()
{
  return sub_1A916B320() & 1;
}

uint64_t sub_1A90F47D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for DataEventStack.Entry();
  sub_1A916B230();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1A916AF30();
  v15[8] = v15[9];
  _OWORD v15[2] = a4;
  v15[3] = a5;
  v15[4] = a1;
  v15[5] = a2;
  v15[6] = a3;
  uint64_t v10 = sub_1A916B7D0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = sub_1A912CDAC((void (*)(char *, char *))sub_1A90F50F4, (uint64_t)v15, v10, (uint64_t)&type metadata for AnyDataEventEntry, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v12);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1A90F491C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  *(void *)(a6 + 40) = a4;
  *(void *)(a6 + 48) = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(a6 + 16));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
  uint64_t v12 = (int *)type metadata accessor for DataEventStack.Entry();
  uint64_t v13 = *(void *)(a1 + v12[9]);
  char v14 = *(unsigned char *)(a1 + v12[10]);
  uint64_t v15 = (uint64_t *)(a1 + v12[11]);
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  uint64_t v18 = *(void *)(a1 + v12[12]);
  *(void *)a6 = a2;
  *(void *)(a6 + 8) = a3;
  *(void *)(a6 + 56) = v13;
  *(unsigned char *)(a6 + 64) = v14;
  *(void *)(a6 + 72) = v16;
  *(void *)(a6 + 80) = v17;
  *(void *)(a6 + 88) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A90F4A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = type metadata accessor for DataEventStack.Entry();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - v6;
  sub_1A916B230();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1A916B340();
  uint64_t v8 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(a2, v7, v3);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v3);
}

void *sub_1A90F4BA0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1A90F4C08(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A90F4C50(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1A90F4C98(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t *sub_1A90F4CD8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v10 = *(void *)v11;
    *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
    uint64_t v12 = (void *)(((unint64_t)v4 + v6 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (void *)(((unint64_t)a2 + v6 + 23) & 0xFFFFFFFFFFFFFFF8);
    void *v12 = *v13;
    v12[1] = v13[1];
    *(void *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1A90F4E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v6 + a2 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  unint64_t v11 = (void *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)((v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A90F4F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  unint64_t v11 = (_OWORD *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (_OWORD *)((v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v11 = *v12;
  *(void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A90F4FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  unint64_t v11 = (void *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)((v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A90F50D0()
{
  return sub_1A90F475C();
}

uint64_t sub_1A90F50E0(uint64_t a1)
{
  return sub_1A90F47D4(*v1, v1[1], v1[2], *(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t sub_1A90F50F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A90F491C(a1, v2[5], v2[6], v2[2], v2[3], a2);
}

id BridgedProcessorManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void BridgedProcessorManager.init()()
{
}

id BridgedProcessorManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BridgedProcessorManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BridgedProcessorManager()
{
  return self;
}

uint64_t BridgedProcessorManager.add(eventProcessor:)(uint64_t a1)
{
  uint64_t v20 = a1;
  sub_1A90F5464();
  sub_1A90F57C4(0, &qword_1EB687C28);
  swift_unknownObjectRetain();
  if (swift_dynamicCast())
  {
    sub_1A908EC8C(v18, (uint64_t)v21);
    uint64_t v3 = *(void *)(v1 + OBJC_IVAR___AAProcessorManager_processorManager);
    uint64_t v4 = v22;
    uint64_t v5 = v23;
    __swift_project_boxed_opaque_existential_1(v21, v22);
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    swift_unknownObjectRetain();
    uint64_t v7 = v6(v4, v5);
    uint64_t v9 = v8;
    type metadata accessor for ProxyEventProcessor();
    unint64_t v10 = (void *)swift_allocObject();
    void v10[2] = a1;
    v10[3] = v7;
    v10[4] = v9;
    uint64_t v11 = *(void *)(v3 + 32);
    uint64_t v12 = (void *)swift_allocObject();
    long long v12[2] = v3;
    uint64_t v12[3] = v10;
    v12[4] = &off_1EFFA24B0;
    swift_retain();
    swift_retain();
    sub_1A908CAA8(v11, (uint64_t)sub_1A90D6440, (uint64_t)v12);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  }
  else
  {
    uint64_t v19 = 0;
    memset(v18, 0, sizeof(v18));
    sub_1A90F5814((uint64_t)v18, &qword_1E97B1698, &qword_1EB687C28);
    uint64_t v14 = *(void *)(v1 + OBJC_IVAR___AAProcessorManager_processorManager);
    type metadata accessor for BridgedEventProcessor();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a1;
    uint64_t v16 = *(void *)(v14 + 32);
    uint64_t v17 = (void *)swift_allocObject();
    _OWORD v17[2] = v14;
    void v17[3] = v15;
    v17[4] = &off_1EFF9CF98;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    sub_1A908CAA8(v16, (uint64_t)sub_1A908F7D4, (uint64_t)v17);
    swift_release();
    return swift_release();
  }
}

unint64_t sub_1A90F5464()
{
  unint64_t result = qword_1EB687C20;
  if (!qword_1EB687C20)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB687C20);
  }
  return result;
}

uint64_t BridgedProcessorManager.remove(eventProcessor:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___AAProcessorManager_processorManager);
  sub_1A90F5758();
  sub_1A916B450();
  uint64_t v4 = v18[0];
  uint64_t v5 = *(void *)(v18[0] + 16);
  if (!v5) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v13 = v3;
  swift_bridgeObjectRetain();
  sub_1A90F57C4(0, (unint64_t *)&qword_1EB68ABC0);
  sub_1A90F57C4(0, &qword_1E97B16A8);
  for (uint64_t i = 0; i != v5; ++i)
  {
    long long v17 = *(_OWORD *)(v4 + 16 * i + 32);
    long long v14 = v17;
    swift_unknownObjectRetain_n();
    if (swift_dynamicCast())
    {
      sub_1A908EC8C(v15, (uint64_t)v18);
      uint64_t v7 = v19;
      uint64_t v8 = v20;
      __swift_project_boxed_opaque_existential_1(v18, v19);
      uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
      if (v9 == a1)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v10 = *(void *)(v13 + 32);
        uint64_t v11 = swift_allocObject();
        *(void *)(v11 + 16) = v13;
        *(_OWORD *)(v11 + 24) = v14;
        swift_unknownObjectRetain_n();
        swift_retain();
        sub_1A908CAA8(v10, (uint64_t)sub_1A90AFE08, v11);
        swift_unknownObjectRelease_n();
        return swift_release();
      }
    }
    else
    {
      uint64_t v16 = 0;
      memset(v15, 0, sizeof(v15));
      sub_1A90F5814((uint64_t)v15, &qword_1E97B16B0, &qword_1E97B16A8);
    }
    swift_unknownObjectRelease();
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1A90F573C@<X0>(void *a1@<X8>)
{
  return sub_1A90AF7FC(v1, a1);
}

void sub_1A90F5758()
{
  if (!qword_1EB687070)
  {
    sub_1A90F57C4(255, (unint64_t *)&qword_1EB68ABC0);
    unint64_t v0 = sub_1A916B230();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB687070);
    }
  }
}

uint64_t sub_1A90F57C4(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1A90F5814(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_1A90F5870(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1A90F5870(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1A90F57C4(255, a3);
    unint64_t v4 = sub_1A916B540();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1A90F58E8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v7 = a1;
  a4(a3);
  swift_unknownObjectRelease();
}

uint64_t BridgedProcessorManager.flush(callbackQueue:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A9090C9C(a1, a2, a3);
}

uint64_t method lookup function for BridgedProcessorManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BridgedProcessorManager);
}

uint64_t sub_1A90F5AA8()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1A90F5AE0(void (*a1)(char *, uint64_t))
{
  uint64_t v78 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1A916A9D0();
  unint64_t v4 = *(void (**)(char *, uint64_t))(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A916AAD0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v65 - v12;
  MEMORY[0x1F4188790](v14);
  *(void *)&long long v75 = (char *)&v65 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v65 - v17;
  if (*(unsigned char *)(v1 + OBJC_IVAR___AATransparencyLogging_isEnabled) == 1 && (sub_1A90F6490() & 1) != 0)
  {
    uint64_t v71 = v4;
    uint64_t v73 = v18;
    sub_1A90F7578();
    id v19 = objc_msgSend(self, sel_mainBundle);
    id v20 = objc_msgSend(v19, sel_bundleIdentifier);

    uint64_t v72 = v7;
    uint64_t v74 = v8;
    uint64_t v70 = v13;
    if (v20)
    {
      uint64_t v21 = sub_1A916AF90();
      unint64_t v23 = v22;
    }
    else
    {
      unint64_t v23 = 0xE700000000000000;
      uint64_t v21 = 0x6C6172656E6567;
    }
    id v76 = (id)v21;
    unint64_t v77 = v23;
    sub_1A916B050();
    swift_bridgeObjectRetain();
    sub_1A916B050();
    swift_bridgeObjectRelease();
    unint64_t v24 = v77;
    id v69 = v76;
    sub_1A916AA00();
    uint64_t v25 = *MEMORY[0x1E4F276A8];
    uint64_t v26 = v71;
    uint64_t v68 = (void (*)(char *, uint64_t, uint64_t))*((void *)v71 + 13);
    v68(v6, v25, v3);
    unint64_t v67 = sub_1A90A6814();
    uint64_t v27 = v70;
    sub_1A916AAB0();
    uint64_t v66 = (void (*)(char *, uint64_t))*((void *)v26 + 1);
    v66(v6, v3);
    uint64_t v28 = v3;
    uint64_t v71 = a1;
    uint64_t v29 = v74 + 8;
    uint64_t v30 = *(void (**)(char *, uint64_t))(v74 + 8);
    uint64_t v31 = v10;
    uint64_t v32 = v72;
    v30(v31, v72);
    id v76 = v69;
    unint64_t v77 = v24;
    v68(v6, *MEMORY[0x1E4F276C0], v28);
    uint64_t v33 = (char *)v75;
    sub_1A916AAC0();
    v66(v6, v28);
    v30(v27, v32);
    swift_bridgeObjectRelease();
    sub_1A916AA60();
    uint64_t v74 = v29;
    v30(v33, v32);
    if (qword_1EB68ACE8 != -1) {
      swift_once();
    }
    id v34 = (id)qword_1EB689AA0;
    sub_1A916B3D0();
    sub_1A90F7F9C(0, (unint64_t *)&qword_1EB68ACD8, (uint64_t (*)(uint64_t))sub_1A90A557C, MEMORY[0x1E4FBBE00]);
    uint64_t v35 = swift_allocObject();
    long long v75 = xmmword_1A916EF60;
    *(_OWORD *)(v35 + 16) = xmmword_1A916EF60;
    uint64_t v36 = *((void *)v71 + 2);
    uint64_t v37 = *((void *)v71 + 3);
    *(void *)(v35 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v38 = sub_1A90A67C0();
    *(void *)(v35 + 64) = v38;
    *(void *)(v35 + 32) = v36;
    *(void *)(v35 + 40) = v37;
    swift_bridgeObjectRetain();
    sub_1A916AD30();

    swift_bridgeObjectRelease();
    unint64_t v39 = Batch.toJSONObject()();
    uint64_t v71 = v30;
    uint64_t v40 = self;
    uint64_t v41 = MEMORY[0x1E4FBB1A0];
    uint64_t v42 = (void *)sub_1A916AEB0();
    unsigned int v43 = objc_msgSend(v40, sel_isValidJSONObject_, v42);

    if (v43)
    {
      uint64_t v44 = (void *)sub_1A916AEB0();
      swift_bridgeObjectRelease();
      id v76 = 0;
      id v45 = objc_msgSend(v40, sel_dataWithJSONObject_options_error_, v44, 0, &v76);

      id v46 = v76;
      uint64_t v47 = v72;
      if (v45)
      {
        uint64_t v48 = sub_1A916AB80();
        unint64_t v50 = v49;

        uint64_t v51 = v73;
        sub_1A916AB90();
        v71(v51, v47);
        sub_1A90A2FD4(v48, v50);
        return;
      }
      long long v58 = v46;
      uint64_t v56 = (void *)sub_1A916A990();

      swift_willThrow();
    }
    else
    {
      id v52 = (id)qword_1EB689AA0;
      sub_1A916B3C0();
      uint64_t v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = v75;
      uint64_t v54 = sub_1A916AEE0();
      *(void *)(v53 + 56) = v41;
      *(void *)(v53 + 64) = v38;
      *(void *)(v53 + 32) = v54;
      *(void *)(v53 + 40) = v55;
      sub_1A916AD30();

      swift_bridgeObjectRelease();
      sub_1A90F7E7C();
      uint64_t v56 = (void *)swift_allocError();
      *(void *)uint64_t v57 = v39;
      *(unsigned char *)(v57 + 8) = 0;
      swift_willThrow();
      uint64_t v47 = v72;
    }
    uint64_t v59 = v71;
    uint64_t v60 = MEMORY[0x1E4FBB1A0];
    id v61 = (id)qword_1EB689AA0;
    sub_1A916B3B0();
    uint64_t v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = v75;
    swift_getErrorValue();
    uint64_t v63 = sub_1A916BA60();
    *(void *)(v62 + 56) = v60;
    *(void *)(v62 + 64) = v38;
    *(void *)(v62 + 32) = v63;
    *(void *)(v62 + 40) = v64;
    sub_1A916AD30();

    swift_bridgeObjectRelease();
    v59(v73, v47);
  }
}

id TransparencyLogging.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void TransparencyLogging.init()()
{
}

id TransparencyLogging.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *static TransparencyLogging.logs()()
{
  return sub_1A90F7C0C();
}

id sub_1A90F6490()
{
  v26[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v0 = sub_1A916A9D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  uint64_t v4 = sub_1A916AAD0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v26 - v9 + 32;
  id v11 = objc_msgSend(self, sel_defaultManager);
  sub_1A916AA00();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F276A8], v0);
  sub_1A90A6814();
  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  sub_1A916AAB0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v7, v4);
  uint64_t v14 = (void *)sub_1A916AA40();
  v13(v10, v4);
  v26[0] = 0;
  id v15 = objc_msgSend(v11, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v14, 1, 0, v26);

  id v16 = v26[0];
  if (!v15)
  {
    uint64_t v17 = v16;
    uint64_t v18 = (void *)sub_1A916A990();

    swift_willThrow();
    if (qword_1EB68ACE8 != -1) {
      swift_once();
    }
    id v19 = (id)qword_1EB689AA0;
    sub_1A916B3B0();
    sub_1A90F7F9C(0, (unint64_t *)&qword_1EB68ACD8, (uint64_t (*)(uint64_t))sub_1A90A557C, MEMORY[0x1E4FBBE00]);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1A916EF60;
    swift_getErrorValue();
    uint64_t v21 = sub_1A916BA60();
    uint64_t v23 = v22;
    *(void *)(v20 + 56) = v12;
    *(void *)(v20 + 64) = sub_1A90A67C0();
    *(void *)(v20 + 32) = v21;
    *(void *)(v20 + 40) = v23;
    sub_1A916AD30();

    swift_bridgeObjectRelease();
  }
  return v15;
}

uint64_t sub_1A90F6860(uint64_t a1)
{
  uint64_t v62 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1A916AD00();
  uint64_t v57 = *(void *)(v2 - 8);
  uint64_t v58 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v55 = (char *)v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1A916AD10();
  uint64_t v54 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v53 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A90F7F9C(0, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v48 - v9;
  uint64_t v11 = sub_1A916AC90();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  id v52 = (char *)v48 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v59 = (char *)v48 - v18;
  id v50 = self;
  id v19 = objc_msgSend(v50, sel_defaultManager);
  uint64_t v51 = a1;
  sub_1A916AA80();
  uint64_t v20 = (void *)sub_1A916AF60();
  swift_bridgeObjectRelease();
  *(void *)&long long v60 = 0;
  id v21 = objc_msgSend(v19, sel_attributesOfItemAtPath_error_, v20, &v60);

  uint64_t v22 = (void *)v60;
  if (!v21)
  {
    id v28 = (id)v60;
    uint64_t v29 = (void *)sub_1A916A990();

    swift_willThrow();
    goto LABEL_7;
  }
  type metadata accessor for FileAttributeKey(0);
  sub_1A90F8000();
  uint64_t v23 = sub_1A916AED0();
  id v24 = v22;

  if (!v23)
  {
LABEL_7:
    long long v60 = 0u;
    long long v61 = 0u;
LABEL_8:
    sub_1A909B5DC((uint64_t)&v60);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
LABEL_9:
    sub_1A90F7F2C((uint64_t)v10, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928]);
    return 0;
  }
  if (*(void *)(v23 + 16))
  {
    id v25 = (id)*MEMORY[0x1E4F282C0];
    unint64_t v26 = sub_1A90BDA4C((uint64_t)v25);
    if (v27)
    {
      sub_1A90A24B0(*(void *)(v23 + 56) + 32 * v26, (uint64_t)&v60);
    }
    else
    {
      long long v60 = 0u;
      long long v61 = 0u;
    }
  }
  else
  {
    long long v60 = 0u;
    long long v61 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v61 + 1)) {
    goto LABEL_8;
  }
  int v31 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, v31 ^ 1u, 1, v11);
  uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v32(v10, 1, v11) == 1) {
    goto LABEL_9;
  }
  v48[0] = *(void *)(v12 + 32);
  v48[1] = v12 + 32;
  ((void (*)(char *, char *, uint64_t))v48[0])(v59, v10, v11);
  unint64_t v49 = (uint64_t (*)(char *, uint64_t, uint64_t))v32;
  uint64_t v33 = v53;
  sub_1A916ACF0();
  uint64_t v35 = v57;
  uint64_t v34 = v58;
  uint64_t v36 = v55;
  (*(void (**)(char *, void, uint64_t))(v57 + 104))(v55, *MEMORY[0x1E4F27BF0], v58);
  sub_1A916AC70();
  sub_1A916ACE0();
  uint64_t v37 = v14;
  unint64_t v38 = *(void (**)(char *, uint64_t))(v12 + 8);
  v38(v37, v11);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v34);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v33, v56);
  uint64_t result = v49(v7, 1, v11);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v39 = v52;
    ((void (*)(char *, char *, uint64_t))v48[0])(v52, v7, v11);
    uint64_t v40 = v59;
    char v41 = sub_1A916AC20();
    v38(v39, v11);
    if ((v41 & 1) == 0)
    {
      id v42 = objc_msgSend(v50, sel_defaultManager);
      unsigned int v43 = (void *)sub_1A916AA40();
      *(void *)&long long v60 = 0;
      unsigned int v44 = objc_msgSend(v42, sel_removeItemAtURL_error_, v43, &v60);

      if (v44)
      {
        id v45 = (id)v60;
      }
      else
      {
        id v46 = (id)v60;
        uint64_t v47 = (void *)sub_1A916A990();

        swift_willThrow();
      }
      v38(v40, v11);
      return 0;
    }
    v38(v40, v11);
    return 1;
  }
  return result;
}

id sub_1A90F6F50()
{
  uint64_t v1 = v0;
  v55[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_1A90F7F9C(0, (unint64_t *)&qword_1EB6899A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v44 = (char *)v40 - v3;
  uint64_t v4 = sub_1A916A9D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A916AAD0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v52 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v54 = (char *)v40 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v40 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v40 - v17;
  uint64_t v53 = (void (**)(char *, uint64_t, uint64_t))objc_msgSend(self, sel_defaultManager);
  sub_1A916AA00();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F276A8], v4);
  sub_1A90A6814();
  sub_1A916AAB0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  id v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v15, v8);
  uint64_t v20 = (void *)sub_1A916AA40();
  id v42 = v19;
  uint64_t v43 = v9 + 8;
  v19(v18, v8);
  v55[0] = 0;
  id v21 = v53;
  id v22 = objc_msgSend(v53, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v20, 0, 0, v55);

  id v23 = v55[0];
  if (v22)
  {
    uint64_t v24 = sub_1A916B190();

    v55[0] = (id)MEMORY[0x1E4FBC860];
    uint64_t v25 = v8;
    uint64_t v51 = *(void *)(v24 + 16);
    if (v51)
    {
      unint64_t v26 = 0;
      uint64_t v47 = v9;
      uint64_t v48 = v9 + 48;
      uint64_t v53 = (void (**)(char *, uint64_t, uint64_t))(v9 + 32);
      uint64_t v49 = v9 + 56;
      uint64_t v50 = v9 + 16;
      v40[1] = (v9 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v41 = v8;
      uint64_t v27 = (uint64_t)v44;
      while (1)
      {
        if (v26 >= *(void *)(v24 + 16)) {
          __break(1u);
        }
        unint64_t v28 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
        uint64_t v29 = *(void *)(v9 + 72);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16))(v27, v24 + v28 + v29 * v26, v25);
        id v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
        v46(v27, 0, 1, v25);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v27, 1, v25) == 1) {
          break;
        }
        uint64_t v30 = *v53;
        uint64_t v31 = v1;
        uint64_t v32 = (uint64_t)v54;
        (*v53)(v54, v27, v25);
        char v33 = sub_1A90F6860(v32);
        if (v31)
        {
          v42(v54, v25);
          swift_bridgeObjectRelease();
          id result = (id)swift_release();
          __break(1u);
          return result;
        }
        uint64_t v1 = 0;
        if (v33)
        {
          v30(v52, (uint64_t)v54, v25);
          uint64_t v34 = (char *)v55[0];
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v45 = 0;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1A90B2840(0, *((void *)v34 + 2) + 1, 1);
            uint64_t v34 = (char *)v55[0];
          }
          unint64_t v37 = *((void *)v34 + 2);
          unint64_t v36 = *((void *)v34 + 3);
          if (v37 >= v36 >> 1)
          {
            sub_1A90B2840(v36 > 1, v37 + 1, 1);
            uint64_t v34 = (char *)v55[0];
          }
          *((void *)v34 + 2) = v37 + 1;
          uint64_t v25 = v41;
          v30(&v34[v28 + v37 * v29], (uint64_t)v52, v41);
          v55[0] = v34;
          uint64_t v27 = (uint64_t)v44;
          uint64_t v1 = v45;
        }
        else
        {
          v42(v54, v25);
        }
        ++v26;
        uint64_t v9 = v47;
        if (v51 == v26)
        {
          v46(v27, 1, 1, v25);
          break;
        }
      }
    }
    else
    {
      uint64_t v27 = (uint64_t)v44;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v44, 1, 1, v8);
    }
    swift_bridgeObjectRelease();
    sub_1A90F7F2C(v27, (unint64_t *)&qword_1EB6899A0, MEMORY[0x1E4F276F0]);
    return v55[0];
  }
  else
  {
    unint64_t v38 = v23;
    sub_1A916A990();

    return (id)swift_willThrow();
  }
}

void sub_1A90F7578()
{
  uint64_t v0 = sub_1A916AD00();
  uint64_t v47 = *(void *)(v0 - 8);
  uint64_t v48 = v0;
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1A916AD10();
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A90F7F9C(0, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v40 - v10;
  uint64_t v12 = sub_1A916AC90();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v51 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  unsigned int v44 = (char *)v40 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v49 = (char *)v40 - v18;
  id v50 = self;
  id v19 = objc_msgSend(v50, sel_standardUserDefaults);
  uint64_t v20 = (void *)sub_1A916AF60();
  id v21 = objc_msgSend(v19, sel_objectForKey_, v20);

  if (v21)
  {
    sub_1A916B5F0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v52, 0, sizeof(v52));
  }
  sub_1A909374C((uint64_t)v52, (uint64_t)v53);
  if (!v54)
  {
    sub_1A909B5DC((uint64_t)v53);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_10;
  }
  int v22 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, v22 ^ 1u, 1, v12);
  id v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v23(v11, 1, v12) == 1)
  {
LABEL_10:
    sub_1A90F7F2C((uint64_t)v11, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928]);
    sub_1A90F6F50();
    swift_bridgeObjectRelease();
    id v32 = objc_msgSend(v50, sel_standardUserDefaults);
    char v33 = v51;
    sub_1A916AC70();
    uint64_t v34 = (void *)sub_1A916AC10();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v33, v12);
    uint64_t v35 = (void *)sub_1A916AF60();
    objc_msgSend(v32, sel_setObject_forKey_, v34, v35);

    return;
  }
  v40[1] = "to convert to JSON object, %@";
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v42 = v13 + 32;
  v41(v49, v11, v12);
  sub_1A916ACF0();
  uint64_t v24 = *MEMORY[0x1E4F27BF0];
  uint64_t v43 = v23;
  uint64_t v25 = v47;
  uint64_t v26 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 104))(v2, v24, v48);
  uint64_t v27 = v51;
  sub_1A916AC70();
  sub_1A916ACE0();
  unint64_t v28 = *(void (**)(char *, uint64_t))(v13 + 8);
  v28(v27, v12);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v2, v26);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v5, v46);
  if (v43(v8, 1, v12) == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v29 = v44;
    v41(v44, v8, v12);
    uint64_t v30 = v49;
    char v31 = sub_1A916AC30();
    v28(v29, v12);
    if (v31)
    {
      sub_1A90F6F50();
      swift_bridgeObjectRelease();
      id v36 = objc_msgSend(v50, sel_standardUserDefaults);
      unint64_t v37 = v51;
      sub_1A916AC70();
      unint64_t v38 = (void *)sub_1A916AC10();
      v28(v37, v12);
      unint64_t v39 = (void *)sub_1A916AF60();
      objc_msgSend(v36, sel_setObject_forKey_, v38, v39);
    }
    v28(v30, v12);
  }
}

void *sub_1A90F7C0C()
{
  uint64_t v1 = sub_1A90F6F50();
  if (v0)
  {
    if (qword_1EB68ACE8 != -1) {
      swift_once();
    }
    id v2 = (id)qword_1EB689AA0;
    sub_1A916B3B0();
    sub_1A90F7F9C(0, (unint64_t *)&qword_1EB68ACD8, (uint64_t (*)(uint64_t))sub_1A90A557C, MEMORY[0x1E4FBBE00]);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1A916EF60;
    swift_getErrorValue();
    uint64_t v4 = sub_1A916BA60();
    uint64_t v6 = v5;
    *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v3 + 64) = sub_1A90A67C0();
    *(void *)(v3 + 32) = v4;
    *(void *)(v3 + 40) = v6;
    sub_1A916AD30();

    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
    if (qword_1EB68ACE8 != -1) {
      swift_once();
    }
    id v7 = (id)qword_1EB689AA0;
    sub_1A916B3D0();
    sub_1A90F7F9C(0, (unint64_t *)&qword_1EB68ACD8, (uint64_t (*)(uint64_t))sub_1A90A557C, MEMORY[0x1E4FBBE00]);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1A916EF60;
    uint64_t v9 = v1[2];
    uint64_t v10 = MEMORY[0x1E4FBB5C8];
    *(void *)(v8 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v8 + 64) = v10;
    *(void *)(v8 + 32) = v9;
    sub_1A916AD30();

    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t method lookup function for TransparencyLogging(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TransparencyLogging);
}

unint64_t sub_1A90F7E7C()
{
  unint64_t result = qword_1E97B16C0;
  if (!qword_1E97B16C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B16C0);
  }
  return result;
}

void sub_1A90F7ED0()
{
  if (!qword_1EB68A928)
  {
    unint64_t v0 = sub_1A916B540();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB68A928);
    }
  }
}

uint64_t sub_1A90F7F2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1A90F7F9C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1A90F7F9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1A90F8000()
{
  unint64_t result = qword_1E97B10F8;
  if (!qword_1E97B10F8)
  {
    type metadata accessor for FileAttributeKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B10F8);
  }
  return result;
}

id AccessQueue.__allocating_init(queue:)(void *a1)
{
  uint64_t v3 = sub_1A916AE10();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = (char *)objc_allocWithZone(v1);
  *(void *)&v10[OBJC_IVAR___AAAccessQueue_queue] = a1;
  uint64_t v11 = v10;
  id v12 = a1;
  sub_1A916ADD0();
  uint64_t v13 = &v11[OBJC_IVAR___AAAccessQueue__qos];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  sub_1A90A4F94(0, &qword_1EB689598, MEMORY[0x1E4FBCB80], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Atomic);
  uint64_t v14 = (char *)swift_allocObject();
  type metadata accessor for UnfairLock();
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = (_DWORD *)swift_slowAlloc();
  *(void *)(v15 + 16) = v16;
  *uint64_t v16 = 0;
  *(_DWORD *)(v15 + 24) = 0x10000;
  *((void *)v14 + 2) = v15;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v14[*(void *)(*(void *)v14 + 96)], v6, v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  *(void *)uint64_t v13 = v14;
  swift_endAccess();

  v20.receiver = v11;
  v20.super_class = v1;
  id v17 = objc_msgSendSuper2(&v20, sel_init);

  return v17;
}

uint64_t sub_1A90F82A4()
{
  uint64_t v0 = sub_1A916ADB0();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = sub_1A916AE10();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A916ADF0();
  sub_1A90F844C((uint64_t)v3);
  sub_1A916ADF0();
  sub_1A916ADA0();
  aBlock[4] = nullsub_1;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908CD10;
  aBlock[3] = &block_descriptor_5;
  _Block_copy(aBlock);
  sub_1A916AE60();
  swift_allocObject();
  sub_1A916AE50();
  sub_1A916B470();
  return swift_release();
}

id static AccessQueue.main.getter()
{
  return sub_1A90ACA30(&qword_1EB688398, (void **)&qword_1EB687E08);
}

uint64_t sub_1A90F844C(uint64_t a1)
{
  uint64_t v3 = sub_1A916AE10();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = (void **)(v1 + OBJC_IVAR___AAAccessQueue__qos);
  swift_beginAccess();
  uint64_t v8 = *v7;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v9 = v8[2];
  swift_retain();
  os_unfair_lock_lock_with_options();
  uint64_t v10 = (char *)v8 + *(void *)(*v8 + 96);
  swift_beginAccess();
  (*(void (**)(char *, unsigned char *, uint64_t))(v4 + 24))(v10, v6, v3);
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  v11((uint64_t)v6, v3);
  swift_release();
  return v11(a1, v3);
}

id AccessQueue.init(queue:)(void *a1)
{
  id v2 = sub_1A90F90B4(a1);

  return v2;
}

uint64_t sub_1A90F8660(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v16 = a1;
  uint64_t v5 = sub_1A916ADB0();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1A916AE10();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void **)(v3 + OBJC_IVAR___AAAccessQueue__qos);
  swift_beginAccess();
  uint64_t v11 = *v10;
  uint64_t v12 = v11[2];
  swift_retain();
  os_unfair_lock_lock_with_options();
  uint64_t v13 = (char *)v11 + *(void *)(*v11 + 96);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v13, v6);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  swift_release();
  sub_1A916ADA0();
  aBlock[4] = v16;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908CD10;
  aBlock[3] = &block_descriptor_4;
  _Block_copy(aBlock);
  sub_1A916AE60();
  swift_allocObject();
  swift_retain();
  sub_1A916AE50();
  swift_release();
  sub_1A916B470();
  return swift_release();
}

BOOL AccessQueue.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1A909F130(a1, (uint64_t)v7);
  if (v8)
  {
    if (swift_dynamicCast())
    {
      uint64_t v3 = *(void *)&v6[OBJC_IVAR___AAAccessQueue_queue];
      uint64_t v4 = *(void *)(v1 + OBJC_IVAR___AAAccessQueue_queue);

      return v3 == v4;
    }
  }
  else
  {
    sub_1A909B5DC((uint64_t)v7);
  }
  return 0;
}

id AccessQueue.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void AccessQueue.init()()
{
}

id AccessQueue.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id _s12AppAnalytics11AccessQueueC6globalyAC8Dispatch0F3QoSV0G6SClassOSgFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_1A916AE10();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v39 - v7;
  sub_1A90A4F94(0, &qword_1EB6883A0, MEMORY[0x1E4FBCB58], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v39 - v10;
  uint64_t v12 = sub_1A916ADC0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v39 - v17;
  sub_1A90F9320(a1, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1A90F93B4((uint64_t)v11);
    sub_1A90A601C();
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v16, *MEMORY[0x1E4FBCB48], v12);
    uint64_t v19 = (void *)sub_1A916B490();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    objc_super v20 = (objc_class *)type metadata accessor for AccessQueue();
    id v21 = (char *)objc_allocWithZone(v20);
    *(void *)&v21[OBJC_IVAR___AAAccessQueue_queue] = v19;
    int v22 = v21;
    id v23 = v19;
    sub_1A916ADD0();
    uint64_t v24 = &v22[OBJC_IVAR___AAAccessQueue__qos];
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    sub_1A90A4F94(0, &qword_1EB689598, MEMORY[0x1E4FBCB80], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Atomic);
    uint64_t v25 = (char *)swift_allocObject();
    type metadata accessor for UnfairLock();
    uint64_t v26 = v8;
    uint64_t v27 = v6;
    uint64_t v28 = swift_allocObject();
    uint64_t v29 = (_DWORD *)swift_slowAlloc();
    *(void *)(v28 + 16) = v29;
    *uint64_t v29 = 0;
    *(_DWORD *)(v28 + 24) = 0x10000;
    *((void *)v25 + 2) = v28;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v25[*(void *)(*(void *)v25 + 96)], v27, v2);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v26, v2);
    *(void *)uint64_t v24 = v25;
    swift_endAccess();

    v43.receiver = v22;
    v43.super_class = v20;
    id v30 = objc_msgSendSuper2(&v43, sel_init);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
    sub_1A90A601C();
    char v31 = (void *)sub_1A916B490();
    Class v41 = (Class)type metadata accessor for AccessQueue();
    id v32 = (char *)objc_allocWithZone(v41);
    *(void *)&v32[OBJC_IVAR___AAAccessQueue_queue] = v31;
    char v33 = v32;
    id v40 = v31;
    sub_1A916ADD0();
    unint64_t v39 = &v33[OBJC_IVAR___AAAccessQueue__qos];
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    sub_1A90A4F94(0, &qword_1EB689598, MEMORY[0x1E4FBCB80], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Atomic);
    uint64_t v34 = v2;
    uint64_t v35 = (char *)swift_allocObject();
    type metadata accessor for UnfairLock();
    uint64_t v36 = swift_allocObject();
    unint64_t v37 = (_DWORD *)swift_slowAlloc();
    *(void *)(v36 + 16) = v37;
    *unint64_t v37 = 0;
    *(_DWORD *)(v36 + 24) = 0x10000;
    *((void *)v35 + 2) = v36;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v35[*(void *)(*(void *)v35 + 96)], v6, v34);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v34);
    *(void *)unint64_t v39 = v35;
    swift_endAccess();

    v42.receiver = v33;
    v42.super_class = v41;
    id v30 = objc_msgSendSuper2(&v42, sel_init);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  }
  return v30;
}

id sub_1A90F90B4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = sub_1A916AE10();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v19 - v10;
  *(void *)&v2[OBJC_IVAR___AAAccessQueue_queue] = a1;
  uint64_t v12 = v2;
  id v13 = a1;
  sub_1A916ADD0();
  uint64_t v14 = &v12[OBJC_IVAR___AAAccessQueue__qos];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  sub_1A90A4F94(0, &qword_1EB689598, MEMORY[0x1E4FBCB80], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Atomic);
  uint64_t v15 = (char *)swift_allocObject();
  type metadata accessor for UnfairLock();
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = (_DWORD *)swift_slowAlloc();
  *(void *)(v16 + 16) = v17;
  *uint64_t v17 = 0;
  *(_DWORD *)(v16 + 24) = 0x10000;
  *((void *)v15 + 2) = v16;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v15[*(void *)(*(void *)v15 + 96)], v8, v5);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  *(void *)uint64_t v14 = v15;
  swift_endAccess();

  v20.receiver = v12;
  v20.super_class = ObjectType;
  return objc_msgSendSuper2(&v20, sel_init);
}

uint64_t method lookup function for AccessQueue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AccessQueue);
}

uint64_t dispatch thunk of AccessQueue.__allocating_init(queue:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1A90F9320(uint64_t a1, uint64_t a2)
{
  sub_1A90A4F94(0, &qword_1EB6883A0, MEMORY[0x1E4FBCB58], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A90F93B4(uint64_t a1)
{
  sub_1A90A4F94(0, &qword_1EB6883A0, MEMORY[0x1E4FBCB58], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SessionManagerConfiguration.init(options:flushProcessor:timestampConfigurationProvider:privacyValidationProvider:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v12 = type metadata accessor for DiagnosticsConsentProvider(0);
  uint64_t v13 = v12 - 8;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a1;
  sub_1A90A0DC8(a3, (uint64_t)v21);
  sub_1A916ACB0();
  uint64_t v17 = &v15[*(int *)(v13 + 28)];
  *(void *)uint64_t v17 = sub_1A90A80E4;
  *((void *)v17 + 1) = 0;
  __swift_destroy_boxed_opaque_existential_0(a3);
  *a6 = v16;
  a6[1] = a2;
  sub_1A908EC8C(v21, (uint64_t)(a6 + 2));
  a6[7] = a4;
  a6[8] = a5;
  uint64_t v18 = type metadata accessor for SessionManagerConfiguration();
  uint64_t result = sub_1A9099290((uint64_t)v15, (uint64_t)a6 + *(int *)(v18 + 32));
  *(_WORD *)((char *)a6 + *(int *)(v18 + 36)) = 0;
  return result;
}

uint64_t SessionManagerConfiguration.init(options:flushProcessor:timestampConfigurationProvider:privacyValidationProvider:diagnosticsConsentProvider:timeDurationGranularity:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, void *a8@<X8>)
{
  char v12 = *a7;
  char v13 = a7[1];
  *a8 = *a1;
  a8[1] = a2;
  sub_1A908EC8C(a3, (uint64_t)(a8 + 2));
  a8[7] = a4;
  a8[8] = a5;
  uint64_t v14 = type metadata accessor for SessionManagerConfiguration();
  uint64_t result = sub_1A9099290(a6, (uint64_t)a8 + *(int *)(v14 + 32));
  uint64_t v16 = (char *)a8 + *(int *)(v14 + 36);
  *uint64_t v16 = v12;
  v16[1] = v13;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SessionManagerConfiguration(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *(void *)a1 = *a2;
    a1 = v20 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    long long v8 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v8;
    uint64_t v9 = v8;
    uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
    swift_retain();
    v10(a1 + 16, (uint64_t)(a2 + 2), v9);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    uint64_t v11 = *(int *)(a3 + 32);
    uint64_t v12 = a1 + v11;
    uint64_t v13 = (uint64_t)a2 + v11;
    uint64_t v14 = sub_1A916ACC0();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_unknownObjectRetain();
    v15(v12, v13, v14);
    uint64_t v16 = *(int *)(type metadata accessor for DiagnosticsConsentProvider(0) + 20);
    uint64_t v17 = (void *)(v12 + v16);
    uint64_t v18 = (void *)(v13 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    *(_WORD *)(a1 + *(int *)(a3 + 36)) = *(_WORD *)((char *)a2 + *(int *)(a3 + 36));
  }
  swift_retain();
  return a1;
}

uint64_t initializeWithCopy for SessionManagerConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a2 + 16;
  long long v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_retain();
  v10(a1 + 16, v7, v9);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1A916ACC0();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_unknownObjectRetain();
  v15(v12, v13, v14);
  uint64_t v16 = *(int *)(type metadata accessor for DiagnosticsConsentProvider(0) + 20);
  uint64_t v17 = (void *)(v12 + v16);
  uint64_t v18 = (void *)(v13 + v16);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  *(_WORD *)(a1 + *(int *)(a3 + 36)) = *(_WORD *)(a2 + *(int *)(a3 + 36));
  swift_retain();
  return a1;
}

void *assignWithCopy for SessionManagerConfiguration(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  uint64_t v6 = a2[8];
  a1[7] = a2[7];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[8] = v6;
  uint64_t v7 = *(int *)(a3 + 32);
  long long v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A916ACC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(type metadata accessor for DiagnosticsConsentProvider(0) + 20);
  uint64_t v12 = &v8[v11];
  uint64_t v13 = &v9[v11];
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = v14;
  swift_retain();
  swift_release();
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  return a1;
}

uint64_t initializeWithTake for SessionManagerConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v11 = sub_1A916ACC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = type metadata accessor for DiagnosticsConsentProvider(0);
  *(_OWORD *)(v9 + *(int *)(v12 + 20)) = *(_OWORD *)(v10 + *(int *)(v12 + 20));
  *(_WORD *)(a1 + *(int *)(a3 + 36)) = *(_WORD *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t assignWithTake for SessionManagerConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_unknownObjectRelease();
  *(void *)(a1 + 64) = v9;
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1A916ACC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = type metadata accessor for DiagnosticsConsentProvider(0);
  *(_OWORD *)(v11 + *(int *)(v14 + 20)) = *(_OWORD *)(v12 + *(int *)(v14 + 20));
  swift_release();
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (unsigned char *)(a1 + v15);
  uint64_t v17 = (unsigned char *)(a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionManagerConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A90F9B70);
}

uint64_t sub_1A90F9B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for DiagnosticsConsentProvider(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SessionManagerConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A90F9C34);
}

uint64_t sub_1A90F9C34(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for DiagnosticsConsentProvider(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A90F9CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
}

uint64_t sub_1A90F9D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
}

uint64_t sub_1A90F9D54()
{
  return sub_1A90A33F0();
}

void Flushable.flush(callbackQueue:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    v6[4] = a2;
    v6[5] = a3;
    v6[0] = MEMORY[0x1E4F143A8];
    v6[1] = 1107296256;
    v6[2] = sub_1A908CD10;
    v6[3] = &block_descriptor_5;
    uint64_t v5 = _Block_copy(v6);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v5 = 0;
  }
  objc_msgSend(v3, sel_flushWithCallbackQueue_completion_, a1, v5);
  _Block_release(v5);
}

void *initializeBufferWithCopyOfBuffer for DataProvider(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for DataProvider()
{
  return swift_release();
}

void *assignWithCopy for DataProvider(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for DataProvider(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DataProvider(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DataProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DataProvider()
{
  return &type metadata for DataProvider;
}

uint64_t sub_1A90F9F68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(uint64_t, uint64_t)@<X5>, uint64_t a7@<X8>)
{
  int v11 = *a3;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 24))(a4, a5);
  if ((result & 1) == 0 || !v11) {
    return a6(a1, a2);
  }
  *(void *)(a7 + 32) = 0;
  *(_OWORD *)a7 = 0u;
  *(_OWORD *)(a7 + 16) = 0u;
  return result;
}

id sub_1A90FA004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t)@<X4>, uint64_t a5@<X8>)
{
  int v9 = *a3;
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  if (objc_msgSend(ObjCClassFromMetadata, sel_respondsToSelector_, sel_requiresDiagnosticsConsent))
  {
    id result = objc_msgSend(ObjCClassFromMetadata, sel_requiresDiagnosticsConsent);
    if ((result & v9) != 1)
    {
      id result = (id)a4(a1, a2);
      if (result)
      {
        id v12 = result;
LABEL_12:
        *(void *)(a5 + 24) = &type metadata for BridgedDataEvent;
        id result = (id)sub_1A90C566C();
        *(void *)(a5 + 32) = result;
        *(void *)a5 = v12;
        return result;
      }
    }
LABEL_11:
    *(void *)(a5 + 32) = 0;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    return result;
  }
  id result = (id)a4(a1, a2);
  if (!result) {
    goto LABEL_11;
  }
  id v12 = result;
  type metadata accessor for BridgedRawDataEvent();
  uint64_t v13 = swift_dynamicCastClass();
  if (!v13 || (*(unsigned char *)(v13 + OBJC_IVAR___AARawDataEvent_requiresDiagnosticsConsent) & v9) != 1) {
    goto LABEL_12;
  }
  *(void *)(a5 + 32) = 0;
  *(_OWORD *)a5 = 0u;
  *(_OWORD *)(a5 + 16) = 0u;

  return (id)swift_unknownObjectRelease();
}

uint64_t TimeDuration.milliseconds.getter()
{
  return *(void *)v0;
}

uint64_t TimeDuration.init(milliseconds:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void _s12AppAnalytics12TimeDurationV12timeIntervalACSd_tcfC_0(void *a1@<X8>, double a2@<D0>)
{
  double v2 = a2 * 1000.0;
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 < 9.22337204e18)
  {
    *a1 = (uint64_t)v2;
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t TimeDuration.init(_:)@<X0>(void *a1@<X8>)
{
  double v2 = (double)sub_1A916BB60() * 1000.0;
  uint64_t result = sub_1A916BB60();
  double v5 = v2 + (double)v4 * 1.0e-15;
  if ((~*(void *)&v5 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v5 < 9.22337204e18)
  {
    *a1 = (uint64_t)v5;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t TimeDuration.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A916BB10();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    uint64_t v5 = sub_1A916B9F0();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
    *a2 = v5;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t TimeDuration.encode(to:)(void *a1)
{
  sub_1A90FA604();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1A916B7A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A916BB30();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = sub_1A916BB40();
  sub_1A916B790();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    if (*(void *)(v11 + 16) && (unint64_t v13 = sub_1A90A28B4((uint64_t)v9), (v14 & 1) != 0))
    {
      sub_1A90A24B0(*(void *)(v11 + 56) + 32 * v13, (uint64_t)&v19);
    }
    else
    {
      long long v19 = 0u;
      long long v20 = 0u;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (*((void *)&v20 + 1))
    {
      if (swift_dynamicCast())
      {
        char v15 = v18;
        char v16 = BYTE1(v18);
      }
      else
      {
        char v16 = 0;
        char v15 = 0;
      }
    }
    else
    {
      sub_1A909B5DC((uint64_t)&v19);
      char v16 = 0;
      char v15 = 0;
    }
    char v23 = v15;
    char v24 = v16;
    uint64_t v18 = v10;
    sub_1A9104134(&v18, &v19);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
    sub_1A916BA00();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  }
  return result;
}

void sub_1A90FA604()
{
  if (!qword_1EB687AA0)
  {
    sub_1A916B7A0();
    unint64_t v0 = sub_1A916B540();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB687AA0);
    }
  }
}

uint64_t sub_1A90FA65C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A916BB10();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    uint64_t v5 = sub_1A916B9F0();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
    *a2 = v5;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1A90FA710(void *a1)
{
  return TimeDuration.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for TimeDuration()
{
  return &type metadata for TimeDuration;
}

uint64_t BridgedEventData.eventID.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AAEventData_eventID);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BridgedEventData.eventDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___AAEventData_eventDate;
  uint64_t v4 = sub_1A916AC90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BridgedEventData.eventPath.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AAEventData_eventPath);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BridgedEventData.sessionID.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AAEventData_sessionID);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BridgedEventData.appSessionID.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AAEventData_appSessionID);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static BridgedEventData.dataName.getter()
{
  return 0x746144746E657645;
}

void sub_1A90FA9C8()
{
}

id BridgedEventData.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void BridgedEventData.init()()
{
}

id BridgedEventData.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BridgedEventData();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BridgedEventData()
{
  uint64_t result = qword_1EB687B10;
  if (!qword_1EB687B10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A90FAC58()
{
  return type metadata accessor for BridgedEventData();
}

uint64_t sub_1A90FAC60()
{
  uint64_t result = sub_1A916AC90();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for BridgedEventData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BridgedEventData);
}

uint64_t dispatch thunk of BridgedEventData.toDict()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

void sub_1A90FAD54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_1A916A980();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

uint64_t BridgedTracker.name.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AATracker_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BridgedTracker.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AATracker_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A90FAF0C()
{
  return swift_retain();
}

id BridgedTracker.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void BridgedTracker.init()()
{
}

id BridgedTracker.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BridgedTracker();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BridgedTracker()
{
  return self;
}

id BridgedTracker.time(eventType:)()
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();

  return objc_msgSend(v0, sel_timeEventType_submitAndRestartWithSession_, ObjCClassFromMetadata, 1);
}

uint64_t BridgedTracker.time(eventType:startTime:)(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a1;
  uint64_t v4 = sub_1A916AC90();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  double v7 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = *(void *)(v2 + OBJC_IVAR___AATracker_eventMirrorStore);
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR___AATracker_tracker);
  uint64_t v10 = *(void *)(v9 + 80);
  uint64_t v15 = *(void *)(v9 + 88);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4, v7);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  id v12 = (char *)swift_allocObject();
  uint64_t v13 = v16;
  *((void *)v12 + 2) = v9;
  *((void *)v12 + 3) = v13;
  *((void *)v12 + 4) = v8 | 0x4000000000000000;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v12[v11], (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v12[v11 + v6] = 1;
  swift_retain_n();
  swift_retain();
  sub_1A908CAA8(v10, (uint64_t)sub_1A9102570, (uint64_t)v12);
  swift_release();
  return swift_release();
}

uint64_t BridgedTracker.time(eventType:submitAndRestartWithSession:)(uint64_t a1, int a2)
{
  int v20 = a2;
  uint64_t v19 = a1;
  uint64_t v3 = sub_1A916AC90();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v18 - v8;
  uint64_t v10 = *(void *)(v2 + OBJC_IVAR___AATracker_eventMirrorStore);
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR___AATracker_tracker);
  swift_retain();
  sub_1A916AC80();
  uint64_t v12 = *(void *)(v11 + 88);
  v18[0] = *(void *)(v11 + 80);
  v18[1] = v12;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v14 = v13 + v5;
  uint64_t v15 = (char *)swift_allocObject();
  uint64_t v16 = v19;
  *((void *)v15 + 2) = v11;
  *((void *)v15 + 3) = v16;
  *((void *)v15 + 4) = v10 | 0x4000000000000000;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v15[v13], v6, v3);
  v15[v14] = v20;
  swift_retain();
  swift_retain();
  sub_1A908CAA8(v18[0], (uint64_t)sub_1A9102570, (uint64_t)v15);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t BridgedTracker.time(eventType:submitAndRestartWithSession:startTime:)(uint64_t a1, int a2, uint64_t a3)
{
  int v18 = a2;
  uint64_t v17 = a1;
  uint64_t v5 = sub_1A916AC90();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  double v8 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = *(void *)(v3 + OBJC_IVAR___AATracker_eventMirrorStore);
  uint64_t v10 = *(void *)(v3 + OBJC_IVAR___AATracker_tracker);
  uint64_t v11 = *(void *)(v10 + 80);
  v16[1] = *(void *)(v10 + 88);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v5, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v13 = (char *)swift_allocObject();
  uint64_t v14 = v17;
  *((void *)v13 + 2) = v10;
  *((void *)v13 + 3) = v14;
  *((void *)v13 + 4) = v9 | 0x4000000000000000;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v13[v12], (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v13[v12 + v7] = v18;
  swift_retain_n();
  swift_retain();
  sub_1A908CAA8(v11, (uint64_t)sub_1A9102570, (uint64_t)v13);
  swift_release();
  return swift_release();
}

id BridgedTracker.time(rawEvent:)(uint64_t a1)
{
  return objc_msgSend(v1, sel_timeRawEvent_submitAndRestartWithSession_, a1, 1);
}

void BridgedTracker.time(rawEvent:startTime:)(uint64_t a1)
{
  id v3 = (id)sub_1A916AC10();
  objc_msgSend(v1, sel_timeRawEvent_submitAndRestartWithSession_startTime_, a1, 1, v3);
}

uint64_t BridgedTracker.time(rawEvent:submitAndRestartWithSession:)(void *a1, int a2)
{
  int v22 = a2;
  uint64_t v4 = sub_1A916AC90();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR___AATracker_tracker);
  id v12 = a1;
  sub_1A916AC80();
  uint64_t v13 = *(void *)(v11 + 88);
  uint64_t v20 = *(void *)(v11 + 80);
  uint64_t v21 = v13;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = v14 + v6;
  uint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = v11;
  *((void *)v16 + 3) = a1;
  *((void *)v16 + 4) = 0x8000000000000000;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v16[v14], v7, v4);
  v16[v15] = v22;
  id v17 = v12;
  swift_retain();
  sub_1A908CAA8(v20, (uint64_t)sub_1A9102570, (uint64_t)v16);

  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

uint64_t BridgedTracker.time(rawEvent:submitAndRestartWithSession:startTime:)(void *a1, int a2, uint64_t a3)
{
  int v17 = a2;
  uint64_t v6 = sub_1A916AC90();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  double v9 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = *(void *)(v3 + OBJC_IVAR___AATracker_tracker);
  uint64_t v11 = *(void *)(v10 + 80);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, double))(v7 + 16))(&v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], a3, v6, v9);
  unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = v10;
  *((void *)v13 + 3) = a1;
  *((void *)v13 + 4) = 0x8000000000000000;
  (*(void (**)(char *, unsigned char *, uint64_t))(v7 + 32))(&v13[v12], &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], v6);
  v13[v12 + v8] = v17;
  id v14 = a1;
  swift_retain();
  sub_1A908CAA8(v11, (uint64_t)sub_1A9102570, (uint64_t)v13);

  return swift_release();
}

id BridgedTracker.submit(eventType:)()
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();

  return objc_msgSend(v0, sel_submitEventType_onlyIfTimed_, ObjCClassFromMetadata, 0);
}

uint64_t BridgedTracker.submit(eventType:onlyIfTimed:)(uint64_t a1, int a2)
{
  int v23 = a2;
  uint64_t v22 = a1;
  uint64_t v3 = sub_1A916AC90();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  double v9 = (char *)&v18 - v8;
  uint64_t v19 = *(void *)(v2 + OBJC_IVAR___AATracker_eventMirrorStore) | 0x4000000000000000;
  uint64_t v10 = *(void *)(v2 + OBJC_IVAR___AATracker_tracker);
  memset(v25, 0, sizeof(v25));
  swift_retain();
  sub_1A916AC80();
  uint64_t v11 = *(void *)(v10 + 88);
  uint64_t v20 = *(void *)(v10 + 80);
  uint64_t v21 = v11;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  sub_1A909F130((uint64_t)v25, (uint64_t)v24);
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v13 = (v5 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = v22;
  *(void *)(v14 + 16) = v10;
  *(void *)(v14 + 24) = v15;
  *(void *)(v14 + 32) = v19;
  *(unsigned char *)(v14 + 40) = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v14 + v12, v6, v3);
  sub_1A909374C((uint64_t)v24, v14 + v13);
  uint64_t v16 = (void *)(v14 + ((v13 + 39) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v16 = 0;
  v16[1] = 0;
  swift_retain();
  swift_retain();
  sub_1A908CAA8(v20, (uint64_t)sub_1A9102588, v14);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  return sub_1A9103584((uint64_t)v25, (uint64_t (*)(void))sub_1A90F7ED0);
}

void BridgedTracker.submit(eventType:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  void v8[4] = a2;
  v8[5] = a3;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  long long v8[2] = sub_1A90E015C;
  _OWORD v8[3] = &block_descriptor_6;
  uint64_t v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_submitEventType_onlyIfTimed_completion_, ObjCClassFromMetadata, 0, v7);
  _Block_release(v7);
}

uint64_t BridgedTracker.submit(eventType:onlyIfTimed:completion:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  int v31 = a2;
  uint64_t v30 = a1;
  uint64_t v25 = sub_1A916AC90();
  uint64_t v7 = *(void *)(v25 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v25);
  double v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v12 = (char *)&v24 - v11;
  uint64_t v26 = *(void *)(v4 + OBJC_IVAR___AATracker_eventMirrorStore) | 0x4000000000000000;
  uint64_t v13 = *(void *)(v4 + OBJC_IVAR___AATracker_tracker);
  memset(v33, 0, sizeof(v33));
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a3;
  *(void *)(v14 + 24) = a4;
  swift_retain();
  swift_retain();
  uint64_t v29 = v12;
  sub_1A916AC80();
  uint64_t v15 = *(void *)(v13 + 88);
  uint64_t v27 = *(void *)(v13 + 80);
  uint64_t v28 = v15;
  uint64_t v16 = v12;
  uint64_t v17 = v25;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v16, v25);
  sub_1A909F130((uint64_t)v33, (uint64_t)v32);
  unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v19 = (v8 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v30;
  *(void *)(v20 + 16) = v13;
  *(void *)(v20 + 24) = v21;
  *(void *)(v20 + 32) = v26;
  *(unsigned char *)(v20 + 40) = v31;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v18, v9, v17);
  sub_1A909374C((uint64_t)v32, v20 + v19);
  uint64_t v22 = (void *)(v20 + ((v19 + 39) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v22 = sub_1A9103A48;
  v22[1] = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A908CAA8(v27, (uint64_t)sub_1A9102588, v20);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v17);
  return sub_1A9103584((uint64_t)v33, (uint64_t (*)(void))sub_1A90F7ED0);
}

id BridgedTracker.submit(rawEvent:)(uint64_t a1)
{
  return objc_msgSend(v1, sel_submitRawEvent_onlyIfTimed_, a1, 0);
}

uint64_t BridgedTracker.submit(rawEvent:onlyIfTimed:)(void *a1, int a2)
{
  int v22 = a2;
  uint64_t v4 = sub_1A916AC90();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR___AATracker_tracker);
  memset(v24, 0, sizeof(v24));
  id v19 = a1;
  sub_1A916AC80();
  uint64_t v12 = *(void *)(v11 + 88);
  uint64_t v20 = *(void *)(v11 + 80);
  uint64_t v21 = v12;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  sub_1A909F130((uint64_t)v24, (uint64_t)v23);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v14 = (v6 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v11;
  *(void *)(v15 + 24) = a1;
  *(void *)(v15 + 32) = 0x8000000000000000;
  *(unsigned char *)(v15 + 40) = v22;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v15 + v13, v7, v4);
  sub_1A909374C((uint64_t)v23, v15 + v14);
  uint64_t v16 = (void *)(v15 + ((v14 + 39) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v16 = 0;
  v16[1] = 0;
  id v17 = v19;
  swift_retain();
  sub_1A908CAA8(v20, (uint64_t)sub_1A9102588, v15);

  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return sub_1A9103584((uint64_t)v24, (uint64_t (*)(void))sub_1A90F7ED0);
}

uint64_t BridgedTracker.submit(rawEvent:completion:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v26 = a2;
  int v23 = a1;
  uint64_t v6 = sub_1A916AC90();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t v13 = *(void *)(v3 + OBJC_IVAR___AATracker_tracker);
  memset(v28, 0, sizeof(v28));
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v26;
  *(void *)(v14 + 24) = a3;
  id v24 = a1;
  swift_retain();
  sub_1A916AC80();
  uint64_t v15 = *(void *)(v13 + 88);
  uint64_t v25 = *(void *)(v13 + 80);
  uint64_t v26 = v15;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
  sub_1A909F130((uint64_t)v28, (uint64_t)v27);
  unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v17 = (v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  id v19 = v23;
  *(void *)(v18 + 16) = v13;
  *(void *)(v18 + 24) = v19;
  *(void *)(v18 + 32) = 0x8000000000000000;
  *(unsigned char *)(v18 + 40) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v16, v9, v6);
  sub_1A909374C((uint64_t)v27, v18 + v17);
  uint64_t v20 = (void *)(v18 + ((v17 + 39) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v20 = sub_1A9103A48;
  v20[1] = v14;
  id v21 = v24;
  swift_retain();
  swift_retain();
  sub_1A908CAA8(v25, (uint64_t)sub_1A9102588, v18);

  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  return sub_1A9103584((uint64_t)v28, (uint64_t (*)(void))sub_1A90F7ED0);
}

void sub_1A90FCBC4(uint64_t a1, void (*a2)(void, id))
{
  sub_1A9103694(0, &qword_1EB687078, (uint64_t (*)(void, ValueMetadata *, _UNKNOWN **))type metadata accessor for ProcessEvent);
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v28 - v6);
  sub_1A9103694(0, (unint64_t *)&unk_1EB686890, (uint64_t (*)(void, ValueMetadata *, _UNKNOWN **))type metadata accessor for EventSubmitResult);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (id *)((char *)&v28 - v9);
  sub_1A91036F0(a1, (uint64_t)&v28 - v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v11 = *v10;
    id v12 = *v10;
    a2(0, v11);
  }
  else
  {
    sub_1A90F0D5C((uint64_t)v10, (uint64_t)v7);
    uint64_t v14 = *v7;
    uint64_t v13 = v7[1];
    uint64_t v16 = v7[3];
    uint64_t v15 = v7[4];
    unint64_t v17 = (void *)v7[2];
    uint64_t v18 = (uint64_t *)((char *)v7 + *(int *)(v5 + 48));
    uint64_t v29 = (void (*)(id, void))a2;
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    id v21 = (objc_class *)type metadata accessor for BridgedProcessEvent();
    int v22 = (char *)objc_allocWithZone(v21);
    int v23 = &v22[OBJC_IVAR___AAProcessEvent_name];
    *(void *)int v23 = v14;
    *((void *)v23 + 1) = v13;
    id v24 = &v22[OBJC_IVAR___AAProcessEvent_version];
    *(void *)id v24 = v16;
    *((void *)v24 + 1) = v15;
    *(void *)&v22[OBJC_IVAR___AAProcessEvent_json] = v17;
    uint64_t v25 = &v22[OBJC_IVAR___AAProcessEvent_groupName];
    *(void *)uint64_t v25 = v19;
    *((void *)v25 + 1) = v20;
    v30.receiver = v22;
    v30.super_class = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v26 = v17;
    swift_bridgeObjectRetain();
    id v27 = objc_msgSendSuper2(&v30, sel_init);
    v29(v27, 0);

    sub_1A9103770((uint64_t)v7);
  }
}

uint64_t BridgedTracker.submit(rawEvent:onlyIfTimed:completion:)(void *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a3;
  int v29 = a2;
  uint64_t v25 = a1;
  uint64_t v7 = sub_1A916AC90();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = *(void *)(v4 + OBJC_IVAR___AATracker_tracker);
  memset(v31, 0, sizeof(v31));
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v28;
  *(void *)(v15 + 24) = a4;
  id v26 = a1;
  swift_retain();
  sub_1A916AC80();
  uint64_t v16 = *(void *)(v14 + 88);
  uint64_t v27 = *(void *)(v14 + 80);
  uint64_t v28 = v16;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  sub_1A909F130((uint64_t)v31, (uint64_t)v30);
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v18 = (v9 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v25;
  *(void *)(v19 + 16) = v14;
  *(void *)(v19 + 24) = v20;
  *(void *)(v19 + 32) = 0x8000000000000000;
  *(unsigned char *)(v19 + 40) = v29;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v19 + v17, v10, v7);
  sub_1A909374C((uint64_t)v30, v19 + v18);
  id v21 = (void *)(v19 + ((v18 + 39) & 0xFFFFFFFFFFFFFFF8));
  *id v21 = sub_1A9103A48;
  v21[1] = v15;
  id v22 = v26;
  swift_retain();
  swift_retain();
  sub_1A908CAA8(v27, (uint64_t)sub_1A9102588, v19);

  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  return sub_1A9103584((uint64_t)v31, (uint64_t (*)(void))sub_1A90F7ED0);
}

id BridgedTracker.delayedSubmit(eventType:onlyIfTimed:completion:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = a3;
  int v23 = a2;
  uint64_t v6 = sub_1A916AC90();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = &v22[-v11];
  sub_1A916AC80();
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 16))(v9, v12, v6);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  *(void *)(v15 + 24) = a1;
  *(unsigned char *)(v15 + 32) = v23;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v7 + 32))(v15 + v14, v9, v6);
  uint64_t v16 = (void *)(v15 + ((v8 + v14 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v16 = v24;
  v16[1] = a4;
  unint64_t v17 = (objc_class *)type metadata accessor for DelayedToken();
  unint64_t v18 = objc_allocWithZone(v17);
  v18[OBJC_IVAR___AADelayedToken_sealed] = 0;
  uint64_t v19 = (uint64_t (**)())&v18[OBJC_IVAR___AADelayedToken_block];
  *uint64_t v19 = sub_1A91026F8;
  v19[1] = (uint64_t (*)())v15;
  v25.receiver = v18;
  v25.super_class = v17;
  swift_retain();
  swift_retain();
  id v20 = objc_msgSendSuper2(&v25, sel_init);
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v12, v6);
  swift_release();
  return v20;
}

void sub_1A90FD410(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_1A916AC90();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = &v26[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t v16 = MEMORY[0x1AD0EEDF0](a1 + 16);
  if (v16)
  {
    unint64_t v17 = (void *)v16;
    uint64_t v32 = *(void *)(v16 + OBJC_IVAR___AATracker_eventMirrorStore);
    uint64_t v29 = a2;
    uint64_t v30 = v32 | 0x4000000000000000;
    uint64_t v18 = *(void *)(v16 + OBJC_IVAR___AATracker_tracker);
    memset(v35, 0, sizeof(v35));
    uint64_t v19 = swift_allocObject();
    int v27 = a3;
    uint64_t v20 = v19;
    *(void *)(v19 + 16) = a5;
    *(void *)(v19 + 24) = a6;
    uint64_t v33 = *(void *)(v18 + 88);
    uint64_t v31 = *(void *)(v18 + 80);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(&v26[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)], a4, v12);
    sub_1A909F130((uint64_t)v35, (uint64_t)v34);
    unint64_t v21 = (*(unsigned __int8 *)(v13 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    unint64_t v22 = (v14 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v28 = a6;
    uint64_t v23 = swift_allocObject();
    uint64_t v24 = v29;
    *(void *)(v23 + 16) = v18;
    *(void *)(v23 + 24) = v24;
    *(void *)(v23 + 32) = v30;
    *(unsigned char *)(v23 + 40) = v27 & 1;
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v13 + 32))(v23 + v21, v15, v12);
    sub_1A909374C((uint64_t)v34, v23 + v22);
    objc_super v25 = (void *)(v23 + ((v22 + 39) & 0xFFFFFFFFFFFFFFF8));
    *objc_super v25 = sub_1A9103A48;
    v25[1] = v20;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1A908CAA8(v31, (uint64_t)sub_1A9102588, v23);
    swift_release();
    swift_release();
    swift_release();
    sub_1A9103584((uint64_t)v35, (uint64_t (*)(void))sub_1A90F7ED0);
  }
}

id BridgedTracker.delayedSubmit(eventType:)()
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5[4] = j_nullsub_1;
  v5[5] = 0;
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 1107296256;
  id v5[2] = sub_1A90E015C;
  void v5[3] = &block_descriptor_53;
  uint64_t v2 = _Block_copy(v5);
  id v3 = objc_msgSend(v0, sel_delayedSubmitEventType_onlyIfTimed_completion_, ObjCClassFromMetadata, 0, v2);
  _Block_release(v2);
  return v3;
}

id BridgedTracker.delayedSubmit(eventType:onlyIfTimed:)(uint64_t a1, char a2)
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  void v8[4] = j_nullsub_1;
  v8[5] = 0;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  long long v8[2] = sub_1A90E015C;
  _OWORD v8[3] = &block_descriptor_56;
  uint64_t v5 = _Block_copy(v8);
  id v6 = objc_msgSend(v2, sel_delayedSubmitEventType_onlyIfTimed_completion_, ObjCClassFromMetadata, a2 & 1, v5);
  _Block_release(v5);
  return v6;
}

id BridgedTracker.delayedSubmit(eventType:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10[4] = a2;
  v10[5] = a3;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  void v10[2] = sub_1A90E015C;
  v10[3] = &block_descriptor_59;
  uint64_t v7 = _Block_copy(v10);
  swift_retain();
  swift_release();
  id v8 = objc_msgSend(v3, sel_delayedSubmitEventType_onlyIfTimed_completion_, ObjCClassFromMetadata, 0, v7);
  _Block_release(v7);
  return v8;
}

id BridgedTracker.delayedSubmit(rawEvent:onlyIfTimed:completion:)(void *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = a3;
  int v24 = a2;
  uint64_t v6 = sub_1A916AC90();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = &v23[-v11];
  sub_1A916AC80();
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 16))(v9, v12, v6);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  *(void *)(v15 + 24) = a1;
  *(unsigned char *)(v15 + 32) = v24;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v7 + 32))(v15 + v14, v9, v6);
  uint64_t v16 = (void *)(v15 + ((v8 + v14 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v16 = v25;
  v16[1] = a4;
  unint64_t v17 = (objc_class *)type metadata accessor for DelayedToken();
  uint64_t v18 = objc_allocWithZone(v17);
  v18[OBJC_IVAR___AADelayedToken_sealed] = 0;
  uint64_t v19 = (uint64_t (**)())&v18[OBJC_IVAR___AADelayedToken_block];
  *uint64_t v19 = sub_1A9102804;
  v19[1] = (uint64_t (*)())v15;
  v26.receiver = v18;
  v26.super_class = v17;
  swift_retain();
  id v20 = a1;
  swift_retain();
  id v21 = objc_msgSendSuper2(&v26, sel_init);
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v12, v6);
  swift_release();
  return v21;
}

void sub_1A90FDF20(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_1A916AC90();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v16 = (char *)MEMORY[0x1AD0EEDF0](a1 + 16);
  if (v16)
  {
    int v27 = a3;
    uint64_t v17 = *(void *)&v16[OBJC_IVAR___AATracker_tracker];
    memset(v32, 0, sizeof(v32));
    id v30 = v16;
    uint64_t v18 = a2;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a5;
    *(void *)(v19 + 24) = a6;
    uint64_t v20 = *(void *)(v17 + 88);
    uint64_t v28 = *(void *)(v17 + 80);
    uint64_t v29 = v20;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v12);
    sub_1A909F130((uint64_t)v32, (uint64_t)v31);
    unint64_t v21 = (*(unsigned __int8 *)(v13 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    unint64_t v22 = (v14 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    v26[1] = a6;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v17;
    *(void *)(v23 + 24) = v18;
    *(void *)(v23 + 32) = 0x8000000000000000;
    *(unsigned char *)(v23 + 40) = v27 & 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v23 + v21, v15, v12);
    sub_1A909374C((uint64_t)v31, v23 + v22);
    int v24 = (void (**)(uint64_t))(v23 + ((v22 + 39) & 0xFFFFFFFFFFFFFFF8));
    *int v24 = sub_1A91037E8;
    v24[1] = (void (*)(uint64_t))v19;
    id v25 = v18;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1A908CAA8(v28, (uint64_t)sub_1A9102588, v23);

    swift_release();
    swift_release();
    sub_1A9103584((uint64_t)v32, (uint64_t (*)(void))sub_1A90F7ED0);
  }
}

id BridgedTracker.delayedSubmit(rawEvent:)(uint64_t a1)
{
  v6[4] = j_nullsub_1;
  v6[5] = 0;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  v6[2] = sub_1A90E015C;
  v6[3] = &block_descriptor_66;
  id v3 = _Block_copy(v6);
  id v4 = objc_msgSend(v1, sel_delayedSubmitRawEvent_onlyIfTimed_completion_, a1, 0, v3);
  _Block_release(v3);
  return v4;
}

id BridgedTracker.delayedSubmit(rawEvent:onlyIfTimed:)(uint64_t a1, char a2)
{
  void v8[4] = nullsub_1;
  v8[5] = 0;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  long long v8[2] = sub_1A90E015C;
  _OWORD v8[3] = &block_descriptor_69;
  uint64_t v5 = _Block_copy(v8);
  id v6 = objc_msgSend(v2, sel_delayedSubmitRawEvent_onlyIfTimed_completion_, a1, a2 & 1, v5);
  _Block_release(v5);
  return v6;
}

id BridgedTracker.delayedSubmit(rawEvent:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v8[4] = a2;
  v8[5] = a3;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  long long v8[2] = sub_1A90E015C;
  _OWORD v8[3] = &block_descriptor_72;
  uint64_t v5 = _Block_copy(v8);
  swift_retain();
  swift_release();
  id v6 = objc_msgSend(v3, sel_delayedSubmitRawEvent_onlyIfTimed_completion_, a1, 0, v5);
  _Block_release(v5);
  return v6;
}

uint64_t BridgedTracker.explicitSubmit(eventType:onlyIfTimed:submitTime:completion:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = a5;
  uint64_t v22 = a3;
  int v28 = a2;
  uint64_t v27 = a1;
  uint64_t v8 = sub_1A916AC90();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void *)(v5 + OBJC_IVAR___AATracker_eventMirrorStore) | 0x4000000000000000;
  uint64_t v12 = *(void *)(v5 + OBJC_IVAR___AATracker_tracker);
  memset(v30, 0, sizeof(v30));
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a4;
  *(void *)(v13 + 24) = a5;
  uint64_t v14 = *(void *)(v12 + 88);
  uint64_t v25 = *(void *)(v12 + 80);
  uint64_t v26 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v22, v8);
  sub_1A909F130((uint64_t)v30, (uint64_t)v29);
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v16 = (v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = v27;
  *(void *)(v17 + 16) = v12;
  *(void *)(v17 + 24) = v18;
  *(void *)(v17 + 32) = v23;
  *(unsigned char *)(v17 + 40) = v28;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17 + v15, v11, v8);
  sub_1A909374C((uint64_t)v29, v17 + v16);
  uint64_t v19 = (void *)(v17 + ((v16 + 39) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v19 = sub_1A9103A48;
  v19[1] = v13;
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A908CAA8(v25, (uint64_t)sub_1A9102588, v17);
  swift_release();
  swift_release();
  swift_release();
  return sub_1A9103584((uint64_t)v30, (uint64_t (*)(void))sub_1A90F7ED0);
}

uint64_t BridgedTracker.explicitSubmit(eventType:onlyIfTimed:submitTime:)(uint64_t a1, int a2, uint64_t a3)
{
  int v19 = a2;
  uint64_t v18 = a1;
  uint64_t v5 = sub_1A916AC90();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v3 + OBJC_IVAR___AATracker_eventMirrorStore);
  uint64_t v10 = *(void *)(v3 + OBJC_IVAR___AATracker_tracker);
  memset(v22, 0, sizeof(v22));
  uint64_t v20 = *(void *)(v10 + 88);
  uint64_t v17 = *(void *)(v10 + 80);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, v5);
  sub_1A909F130((uint64_t)v22, (uint64_t)v21);
  unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v12 = (v7 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = v18;
  *(void *)(v13 + 16) = v10;
  *(void *)(v13 + 24) = v14;
  *(void *)(v13 + 32) = v9 | 0x4000000000000000;
  *(unsigned char *)(v13 + 40) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13 + v11, v8, v5);
  sub_1A909374C((uint64_t)v21, v13 + v12);
  unint64_t v15 = (void *)(v13 + ((v12 + 39) & 0xFFFFFFFFFFFFFFF8));
  *unint64_t v15 = 0;
  v15[1] = 0;
  swift_retain_n();
  swift_retain();
  sub_1A908CAA8(v17, (uint64_t)sub_1A9102588, v13);
  swift_release();
  swift_release();
  return sub_1A9103584((uint64_t)v22, (uint64_t (*)(void))sub_1A90F7ED0);
}

uint64_t sub_1A90FEDBC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, char *))
{
  uint64_t v9 = sub_1A916AC90();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
  sub_1A916AC60();
  id v14 = a1;
  a6(ObjCClassMetadata, a4, v12);

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t BridgedTracker.explicitSubmit(eventType:submitTime:)(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a1;
  uint64_t v4 = sub_1A916AC90();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v2 + OBJC_IVAR___AATracker_eventMirrorStore);
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR___AATracker_tracker);
  memset(v22, 0, sizeof(v22));
  uint64_t v10 = *(void *)(v9 + 88);
  uint64_t v19 = *(void *)(v9 + 80);
  uint64_t v20 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  sub_1A909F130((uint64_t)v22, (uint64_t)v21);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v12 = (v6 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = v18;
  *(void *)(v13 + 16) = v9;
  *(void *)(v13 + 24) = v14;
  *(void *)(v13 + 32) = v8 | 0x4000000000000000;
  *(unsigned char *)(v13 + 40) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v13 + v11, v7, v4);
  sub_1A909374C((uint64_t)v21, v13 + v12);
  unint64_t v15 = (void *)(v13 + ((v12 + 39) & 0xFFFFFFFFFFFFFFF8));
  *unint64_t v15 = 0;
  v15[1] = 0;
  swift_retain_n();
  swift_retain();
  sub_1A908CAA8(v19, (uint64_t)sub_1A9102588, v13);
  swift_release();
  swift_release();
  return sub_1A9103584((uint64_t)v22, (uint64_t (*)(void))sub_1A90F7ED0);
}

uint64_t sub_1A90FF0E0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, char *))
{
  uint64_t v7 = sub_1A916AC90();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
  sub_1A916AC60();
  id v12 = a1;
  a5(ObjCClassMetadata, v10);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void BridgedTracker.explicitSubmit(eventType:submitTime:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v9 = (void *)sub_1A916AC10();
  void v11[4] = a3;
  v11[5] = a4;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  long long v11[2] = sub_1A90E015C;
  v11[3] = &block_descriptor_90;
  uint64_t v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_explicitSubmitEvent_onlyIfTimed_submitTime_completion_, ObjCClassFromMetadata, 0, v9, v10);
  _Block_release(v10);
}

uint64_t BridgedTracker.explicitSubmit(rawEvent:onlyIfTimed:submitTime:completion:)(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v23[1] = a5;
  uint64_t v24 = a1;
  int v25 = a2;
  uint64_t v9 = sub_1A916AC90();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v5 + OBJC_IVAR___AATracker_tracker);
  memset(v29, 0, sizeof(v29));
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a4;
  *(void *)(v14 + 24) = a5;
  uint64_t v15 = *(void *)(v13 + 88);
  uint64_t v26 = *(void *)(v13 + 80);
  uint64_t v27 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  sub_1A909F130((uint64_t)v29, (uint64_t)v28);
  unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v17 = (v11 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v24;
  *(void *)(v18 + 16) = v13;
  *(void *)(v18 + 24) = v19;
  *(void *)(v18 + 32) = 0x8000000000000000;
  *(unsigned char *)(v18 + 40) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v16, v12, v9);
  sub_1A909374C((uint64_t)v28, v18 + v17);
  uint64_t v20 = (void *)(v18 + ((v17 + 39) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v20 = sub_1A9103A48;
  v20[1] = v14;
  id v21 = v19;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A908CAA8(v26, (uint64_t)sub_1A9102588, v18);

  swift_release();
  swift_release();
  return sub_1A9103584((uint64_t)v29, (uint64_t (*)(void))sub_1A90F7ED0);
}

uint64_t BridgedTracker.explicitSubmit(rawEvent:onlyIfTimed:submitTime:)(void *a1, char a2, uint64_t a3)
{
  uint64_t v7 = sub_1A916AC90();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v3 + OBJC_IVAR___AATracker_tracker);
  memset(v21, 0, sizeof(v21));
  uint64_t v12 = *(void *)(v11 + 88);
  v19[0] = *(void *)(v11 + 80);
  v19[1] = v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  sub_1A909F130((uint64_t)v21, (uint64_t)v20);
  unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v14 = (v9 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v11;
  *(void *)(v15 + 24) = a1;
  *(void *)(v15 + 32) = 0x8000000000000000;
  *(unsigned char *)(v15 + 40) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v15 + v13, v10, v7);
  sub_1A909374C((uint64_t)v20, v15 + v14);
  unint64_t v16 = (void *)(v15 + ((v14 + 39) & 0xFFFFFFFFFFFFFFF8));
  *unint64_t v16 = 0;
  v16[1] = 0;
  id v17 = a1;
  swift_retain();
  sub_1A908CAA8(v19[0], (uint64_t)sub_1A9102588, v15);

  swift_release();
  return sub_1A9103584((uint64_t)v21, (uint64_t (*)(void))sub_1A90F7ED0);
}

uint64_t BridgedTracker.explicitRawSubmit(rawEvent:submitTime:)(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_1A916AC90();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR___AATracker_tracker);
  memset(v19, 0, sizeof(v19));
  uint64_t v10 = *(void *)(v9 + 80);
  v17[1] = *(void *)(v9 + 88);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  sub_1A909F130((uint64_t)v19, (uint64_t)v18);
  unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v12 = (v7 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v9;
  *(void *)(v13 + 24) = a1;
  *(void *)(v13 + 32) = 0x8000000000000000;
  *(unsigned char *)(v13 + 40) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13 + v11, v8, v5);
  sub_1A909374C((uint64_t)v18, v13 + v12);
  unint64_t v14 = (void *)(v13 + ((v12 + 39) & 0xFFFFFFFFFFFFFFF8));
  *unint64_t v14 = 0;
  v14[1] = 0;
  id v15 = a1;
  swift_retain();
  sub_1A908CAA8(v10, (uint64_t)sub_1A9102588, v13);

  swift_release();
  return sub_1A9103584((uint64_t)v19, (uint64_t (*)(void))sub_1A90F7ED0);
}

void BridgedTracker.explicitRawSubmit(rawEvent:submitTime:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = (void *)sub_1A916AC10();
  void v11[4] = a3;
  v11[5] = a4;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  long long v11[2] = sub_1A90E015C;
  v11[3] = &block_descriptor_108;
  uint64_t v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_explicitSubmitRawEvent_onlyIfTimed_submitTime_completion_, a1, 0, v9, v10);
  _Block_release(v10);
}

uint64_t BridgedTracker.register(dataType:block:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_dataName);
  uint64_t v8 = sub_1A916AF90();
  uint64_t v10 = v9;

  unint64_t v11 = (void *)swift_allocObject();
  long long v11[2] = a1;
  v11[3] = a2;
  void v11[4] = a3;
  uint64_t v12 = *(void *)(v3 + OBJC_IVAR___AATracker_tracker);
  uint64_t v13 = *(void *)(v12 + 80);
  unint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = v12;
  v14[3] = v8;
  v14[4] = v10;
  id v14[5] = sub_1A9102918;
  void v14[6] = v11;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A908CAA8(v13, (uint64_t)sub_1A9102A0C, (uint64_t)v14);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

id sub_1A91002B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)sub_1A916AF60();
  id v5 = (id)(*(uint64_t (**)(uint64_t, void *))(a3 + 16))(a3, v4);

  return v5;
}

uint64_t BridgedTracker.push(data:traits:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_getObjectType();
  uint64_t v8 = sub_1A910872C();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  char v14 = v13;
  uint64_t v15 = *(void *)(v5 + OBJC_IVAR___AATracker_tracker);
  if (a2) {
    unint64_t v16 = sub_1A90BB20C();
  }
  else {
    unint64_t v16 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v17 = *(void *)(v15 + 80);
  char v18 = v14 & 1;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v15;
  *(void *)(v19 + 24) = v8;
  *(void *)(v19 + 32) = v10;
  *(void *)(v19 + 40) = v12;
  *(unsigned char *)(v19 + 48) = v18;
  *(void *)(v19 + 56) = v16;
  *(void *)(v19 + 64) = a3;
  *(void *)(v19 + 72) = a4;
  *(void *)(v19 + 80) = a5;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A908CAA8(v17, (uint64_t)sub_1A9102D94, v19);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t BridgedTracker.pop(dataType:)(uint64_t a1)
{
  return sub_1A9100718(a1, (uint64_t)&unk_1EFF9F0B0, (uint64_t)sub_1A9102DE8);
}

Swift::Void __swiftcall BridgedTracker.pop(dataName:)(Swift::String dataName)
{
  object = dataName._object;
  uint64_t countAndFlagsBits = dataName._countAndFlagsBits;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___AATracker_tracker);
  uint64_t v5 = *(void *)(v4 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v4;
  v6[3] = countAndFlagsBits;
  v6[4] = object;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A908CAA8(v5, (uint64_t)sub_1A9102DE8, (uint64_t)v6);

  swift_release();
}

uint64_t BridgedTracker.clearStack(dataType:)(uint64_t a1)
{
  return sub_1A9100718(a1, (uint64_t)&unk_1EFF9F100, (uint64_t)sub_1A9102DE8);
}

uint64_t sub_1A9100718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_dataName);
  uint64_t v6 = sub_1A916AF90();
  uint64_t v8 = v7;

  uint64_t v9 = *(void *)(v3 + OBJC_IVAR___AATracker_tracker);
  uint64_t v10 = *(void *)(v9 + 80);
  uint64_t v11 = (void *)swift_allocObject();
  long long v11[2] = v9;
  v11[3] = v6;
  void v11[4] = v8;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A908CAA8(v10, a3, (uint64_t)v11);
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t BridgedTracker.clearStack(of:includeParentTrackers:)(uint64_t a1, char a2)
{
  id v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_dataName);
  uint64_t v5 = sub_1A916AF90();
  uint64_t v7 = v6;

  uint64_t v8 = *(void *)(v2 + OBJC_IVAR___AATracker_tracker);
  uint64_t v9 = *(void *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v8;
  *(void *)(v10 + 24) = v5;
  *(void *)(v10 + 32) = v7;
  *(unsigned char *)(v10 + 40) = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A908CAA8(v9, (uint64_t)sub_1A9102E40, v10);
  swift_bridgeObjectRelease();

  return swift_release();
}

id BridgedTracker.chain(name:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = Tracker.chain(name:identifier:)(a1, a2, 0, 0);
  uint64_t v7 = *(void *)(v3 + OBJC_IVAR___AATracker_eventMirrorStore);
  uint64_t v8 = (objc_class *)type metadata accessor for BridgedTracker();
  uint64_t v9 = (char *)objc_allocWithZone(v8);
  uint64_t v10 = (uint64_t *)&v9[OBJC_IVAR___AATracker_name];
  uint64_t *v10 = a1;
  v10[1] = a2;
  *(void *)&v9[OBJC_IVAR___AATracker_tracker] = v6;
  *(void *)&v9[OBJC_IVAR___AATracker_eventMirrorStore] = v7;
  uint64_t v11 = &v9[OBJC_IVAR___AATracker_identifier];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  v13.receiver = v9;
  v13.super_class = v8;
  swift_retain();
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v13, sel_init);
}

id BridgedTracker.chain(name:identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = Tracker.chain(name:identifier:)(a1, a2, a3, a4);
  uint64_t v11 = *(void *)(v5 + OBJC_IVAR___AATracker_eventMirrorStore);
  uint64_t v12 = (objc_class *)type metadata accessor for BridgedTracker();
  objc_super v13 = (char *)objc_allocWithZone(v12);
  char v14 = (uint64_t *)&v13[OBJC_IVAR___AATracker_name];
  *char v14 = a1;
  v14[1] = a2;
  *(void *)&v13[OBJC_IVAR___AATracker_tracker] = v10;
  *(void *)&v13[OBJC_IVAR___AATracker_eventMirrorStore] = v11;
  uint64_t v15 = (uint64_t *)&v13[OBJC_IVAR___AATracker_identifier];
  *uint64_t v15 = a3;
  v15[1] = a4;
  v17.receiver = v13;
  v17.super_class = v12;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v17, sel_init);
}

uint64_t BridgedTracker.path.getter()
{
  return Tracker.path.getter();
}

id sub_1A9100CCC(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  uint64_t v5 = (void *)sub_1A916B180();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t BridgedTracker.debugPath.getter()
{
  return Tracker.debugPath.getter();
}

id BridgedTracker.onSessionChange(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  uint64_t v5 = (void *)swift_allocObject();
  id v5[2] = v4;
  void v5[3] = a1;
  v5[4] = a2;
  swift_retain();
  swift_retain();
  uint64_t v6 = Tracker.onSessionChange(block:)((uint64_t)sub_1A9102EC4, (uint64_t)v5);
  swift_release();
  swift_release();
  swift_unknownObjectWeakAssign();
  uint64_t v7 = (objc_class *)type metadata accessor for BridgedSessionObserver();
  uint64_t v8 = (char *)objc_allocWithZone(v7);
  *(void *)&v8[OBJC_IVAR___AASessionObserver_sessionObserver] = v6;
  v10.receiver = v8;
  v10.super_class = v7;
  return objc_msgSendSuper2(&v10, sel_init);
}

void sub_1A9100E80(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(id, uint64_t))
{
  uint64_t Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v8 = *(void *)&Strong[OBJC_IVAR___AATracker_eventMirrorStore];
  swift_retain();
  swift_retain();

  uint64_t v9 = (objc_class *)type metadata accessor for BridgedAccessTracker();
  objc_super v10 = (char *)objc_allocWithZone(v9);
  *(void *)&v10[OBJC_IVAR___AAAccessTracker_accessTracker] = a1;
  *(void *)&v10[OBJC_IVAR___AAAccessTracker_eventMirrorStore] = v8;
  v12.receiver = v10;
  v12.super_class = v9;
  id v11 = objc_msgSendSuper2(&v12, sel_init);
  a4(v11, a2);
}

uint64_t BridgedTracker.removeSessionObservers(forObject:)(uint64_t a1)
{
  uint64_t result = MEMORY[0x1AD0EEDF0](*(void *)(v1 + OBJC_IVAR___AATracker_tracker) + 64);
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void *)(result + 48);
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = a1;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    sub_1A908CAA8(v5, (uint64_t)sub_1A9102F10, v6);
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t BridgedTracker.transaction(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)&v2[OBJC_IVAR___AATracker_tracker];
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v2;
  v6[3] = a1;
  v6[4] = a2;
  uint64_t v7 = *(void *)(v5 + 80);
  uint64_t v8 = (void *)swift_allocObject();
  long long v8[2] = v5;
  _OWORD v8[3] = sub_1A9102F1C;
  void v8[4] = v6;
  uint64_t v9 = v2;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A908CAA8(v7, (uint64_t)sub_1A9102F58, (uint64_t)v8);
  swift_release();

  return swift_release();
}

uint64_t BridgedTracker.dynamicTransaction(identifier:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)&v4[OBJC_IVAR___AATracker_tracker];
  objc_super v10 = (void *)swift_allocObject();
  void v10[2] = v4;
  v10[3] = a3;
  v10[4] = a4;
  uint64_t v11 = *(void *)(v9 + 80);
  objc_super v12 = (void *)swift_allocObject();
  long long v12[2] = v9;
  uint64_t v12[3] = a1;
  v12[4] = a2;
  v12[5] = sub_1A9103944;
  v12[6] = v10;
  objc_super v13 = v4;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A908CAA8(v11, (uint64_t)sub_1A9102F6C, (uint64_t)v12);
  swift_release();

  return swift_release();
}

void sub_1A9101454(uint64_t a1, uint64_t a2, void (*a3)(id, uint64_t))
{
  uint64_t v5 = *(void *)(a2 + OBJC_IVAR___AATracker_eventMirrorStore);
  uint64_t v6 = (objc_class *)type metadata accessor for BridgedAccessTracker();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR___AAAccessTracker_accessTracker] = a1;
  *(void *)&v7[OBJC_IVAR___AAAccessTracker_eventMirrorStore] = v5;
  v10.receiver = v7;
  v10.super_class = v6;
  swift_retain();
  swift_retain();
  id v8 = objc_msgSendSuper2(&v10, sel_init);
  a3(v8, v9);
}

uint64_t BridgedTracker.whenSession(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)&v2[OBJC_IVAR___AATracker_tracker];
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = v2;
  uint64_t v7 = *(void *)(v5 + 80);
  id v8 = (void *)swift_allocObject();
  long long v8[2] = v5;
  _OWORD v8[3] = sub_1A9102F88;
  void v8[4] = v6;
  swift_retain();
  uint64_t v9 = v2;
  swift_retain();
  swift_retain();
  sub_1A908CAA8(v7, (uint64_t)sub_1A9102FC4, (uint64_t)v8);
  swift_release();

  return swift_release();
}

uint64_t BridgedTracker.ifSession(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)&v2[OBJC_IVAR___AATracker_tracker];
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = v2;
  uint64_t v7 = *(void *)(v5 + 80);
  id v8 = (void *)swift_allocObject();
  long long v8[2] = v5;
  _OWORD v8[3] = sub_1A9103948;
  void v8[4] = v6;
  swift_retain();
  uint64_t v9 = v2;
  swift_retain();
  swift_retain();
  sub_1A908CAA8(v7, (uint64_t)sub_1A9102FF0, (uint64_t)v8);
  swift_release();

  return swift_release();
}

void sub_1A9101998(uint64_t a1, void (*a2)(id, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + OBJC_IVAR___AATracker_eventMirrorStore);
  uint64_t v7 = (objc_class *)type metadata accessor for BridgedAccessTracker();
  id v8 = (char *)objc_allocWithZone(v7);
  *(void *)&v8[OBJC_IVAR___AAAccessTracker_accessTracker] = a1;
  *(void *)&v8[OBJC_IVAR___AAAccessTracker_eventMirrorStore] = v6;
  v11.receiver = v8;
  v11.super_class = v7;
  swift_retain();
  swift_retain();
  id v9 = objc_msgSendSuper2(&v11, sel_init);
  a2(v9, v10);
}

Swift::Void __swiftcall BridgedTracker.enterGroup(groupName:)(Swift::String groupName)
{
  object = groupName._object;
  uint64_t countAndFlagsBits = groupName._countAndFlagsBits;
  uint64_t v3 = sub_1A916AC90();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v17 - v8;
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR___AATracker_tracker);
  sub_1A916AC80();
  uint64_t v11 = *(void *)(v10 + 80);
  uint64_t v17 = *(void *)(v10 + 88);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v13 = (v5 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v14 = (char *)swift_allocObject();
  uint64_t v15 = countAndFlagsBits;
  *((void *)v14 + 2) = v10;
  *((void *)v14 + 3) = v15;
  *((void *)v14 + 4) = object;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v14[v12], v6, v3);
  unint64_t v16 = &v14[v13];
  *(void *)unint64_t v16 = 0;
  v16[8] = 1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A908CAA8(v11, (uint64_t)sub_1A9103000, (uint64_t)v14);
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t BridgedTracker.enterGroup(groupName:contentType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = a1;
  uint64_t v22 = a3;
  uint64_t v5 = sub_1A916AC90();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v20 - v10;
  uint64_t v12 = *(void *)(v3 + OBJC_IVAR___AATracker_tracker);
  sub_1A916AC80();
  uint64_t v13 = *(void *)(v12 + 80);
  v20[1] = *(void *)(v12 + 88);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v15 = (v7 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (char *)swift_allocObject();
  uint64_t v17 = v21;
  *((void *)v16 + 2) = v12;
  *((void *)v16 + 3) = v17;
  *((void *)v16 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v16[v14], v8, v5);
  char v18 = &v16[v15];
  *(void *)char v18 = v22;
  v18[8] = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A908CAA8(v13, (uint64_t)sub_1A9103000, (uint64_t)v16);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
}

Swift::Void __swiftcall BridgedTracker.enterGroup()()
{
  uint64_t v24 = sub_1A916AC90();
  uint64_t v1 = *(void *)(v24 - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  MEMORY[0x1F4188790](v24);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = sub_1A916ACC0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v0 + OBJC_IVAR___AATracker_tracker);
  sub_1A916ACB0();
  uint64_t v12 = sub_1A916ACA0();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1A916AC80();
  uint64_t v15 = *(void *)(v11 + 88);
  uint64_t v22 = *(void *)(v11 + 80);
  uint64_t v23 = v15;
  uint64_t v16 = v24;
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v24);
  unint64_t v17 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v18 = (v2 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = v11;
  *((void *)v19 + 3) = v12;
  *((void *)v19 + 4) = v14;
  (*(void (**)(char *, char *, uint64_t))(v1 + 32))(&v19[v17], v3, v16);
  uint64_t v20 = &v19[v18];
  *(void *)uint64_t v20 = 0;
  v20[8] = 1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A908CAA8(v22, (uint64_t)sub_1A9103000, (uint64_t)v19);
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v16);
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall BridgedTracker.leaveGroup()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AATracker_tracker);
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = (void *)swift_allocObject();
  v3[3] = 0;
  void v3[4] = 0;
  v3[2] = v1;
  swift_retain();
  sub_1A908CAA8(v2, (uint64_t)sub_1A91031A4, (uint64_t)v3);

  swift_release();
}

Swift::Void __swiftcall BridgedTracker.suspend()()
{
}

Swift::Void __swiftcall BridgedTracker.resume()()
{
}

uint64_t sub_1A9102464(void (*a1)(void))
{
  uint64_t result = MEMORY[0x1AD0EEDF0](*(void *)(v1 + OBJC_IVAR___AATracker_tracker) + 64);
  if (result)
  {
    a1(*(void *)(result + 56));
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1A91024E4(char *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = MEMORY[0x1AD0EEDF0](*(void *)&a1[OBJC_IVAR___AATracker_tracker] + 64);
  if (result)
  {
    uint64_t v6 = *(void *)(result + 56);
    uint64_t v7 = a1;
    a3(v6);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1A910258C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A91025D4()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A910260C()
{
  uint64_t v1 = sub_1A916AC90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 33) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1A91026F8()
{
  return sub_1A910281C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A90FD410);
}

uint64_t sub_1A9102710()
{
  uint64_t v1 = sub_1A916AC90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 33) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1A9102804()
{
  return sub_1A910281C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A90FDF20);
}

uint64_t sub_1A910281C(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(sub_1A916AC90() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v7 = v1 + v3;
  uint64_t v8 = (uint64_t *)(v1 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];

  return a1(v4, v5, v6, v7, v9, v10);
}

uint64_t sub_1A91028E0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

id sub_1A9102918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1A90FA004(a1, a2, a3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 24), a4);
}

uint64_t sub_1A9102924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a3) {
    uint64_t v8 = a2;
  }
  else {
    uint64_t v8 = 0xD000000000000010;
  }
  if (a3) {
    uint64_t v9 = a3;
  }
  else {
    uint64_t v9 = 0x80000001A9176CD0;
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = 0x8000000000000000;
  sub_1A90C42F8(a4, a5, v8, v9, isUniquelyReferenced_nonNull_native);
  *(void *)(a1 + 128) = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1A9102A0C()
{
  return sub_1A9103334(sub_1A9102924);
}

uint64_t sub_1A9102A24(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1A916AE70();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (uint64_t *)((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *(void **)(v4[10] + OBJC_IVAR___AAAccessQueue_queue);
  void *v12 = v13;
  (*(void (**)(void *, void, uint64_t, double))(v9 + 104))(v12, *MEMORY[0x1E4FBCBF0], v8, v10);
  id v14 = v13;
  LOBYTE(v13) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v9 + 8))(v12, v8);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  if (a2) {
    uint64_t v16 = a1;
  }
  else {
    uint64_t v16 = 0xD000000000000010;
  }
  if (a2) {
    uint64_t v17 = a2;
  }
  else {
    uint64_t v17 = 0x80000001A9176CD0;
  }
  swift_beginAccess();
  uint64_t v18 = v4[15];
  if (!*(void *)(v18 + 16))
  {
    uint64_t v34 = 0;
    long long v32 = 0u;
    long long v33 = 0u;
    swift_bridgeObjectRetain();
    if (*((void *)&v33 + 1)) {
      goto LABEL_15;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t result = sub_1A9103584((uint64_t)&v32, (uint64_t (*)(void))sub_1A91035E4);
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v19 = sub_1A90A1D98(v16, v17);
  if (v20)
  {
    sub_1A90A0DC8(*(void *)(v18 + 56) + 40 * v19, (uint64_t)&v32);
  }
  else
  {
    uint64_t v34 = 0;
    long long v32 = 0u;
    long long v33 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v33 + 1)) {
    goto LABEL_12;
  }
LABEL_15:
  sub_1A910363C();
  sub_1A90F0D00();
  uint64_t v22 = v21;
  if (swift_dynamicCast())
  {
    uint64_t v23 = v31;
    if (*(void *)(v29 + 16))
    {
      uint64_t v28 = v16;
      uint64_t v24 = a1;
      char v25 = a3;
      uint64_t v26 = v30;
      swift_bridgeObjectRelease();
      uint64_t v34 = &off_1EFF9E8F0;
      *(void *)&long long v32 = MEMORY[0x1E4FBC860];
      *((void *)&v32 + 1) = v26;
      a3 = v25;
      a1 = v24;
      *(void *)&long long v33 = v23;
      *((void *)&v33 + 1) = v22;
      swift_beginAccess();
      sub_1A908D668((uint64_t)&v32, v28, v17);
      uint64_t result = swift_endAccess();
      goto LABEL_21;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t result = swift_bridgeObjectRelease();
LABEL_21:
  if (a3)
  {
    if (v4[17]) {
      return sub_1A9102A24(a1, a2, 1);
    }
  }
  return result;
}

uint64_t sub_1A9102D3C()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 88, 7);
}

uint64_t sub_1A9102D94()
{
  return sub_1A90EF5A8(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80));
}

uint64_t sub_1A9102DCC()
{
  return objectdestroy_119Tm(MEMORY[0x1E4FBC898], 40);
}

uint64_t sub_1A9102DEC()
{
  return objectdestroy_119Tm(MEMORY[0x1E4FBC898], 40);
}

uint64_t sub_1A9102E08()
{
  return objectdestroy_119Tm(MEMORY[0x1E4FBC898], 40);
}

uint64_t sub_1A9102E24()
{
  return objectdestroy_119Tm(MEMORY[0x1E4FBC898], 41);
}

uint64_t sub_1A9102E40()
{
  return sub_1A9102A24(*(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_1A9102E70()
{
  swift_unknownObjectUnownedDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A9102EA8()
{
  return objectdestroy_119Tm(MEMORY[0x1E4FBC8D0], 40);
}

void sub_1A9102EC4(uint64_t a1, uint64_t a2)
{
  sub_1A9100E80(a1, a2, *(void *)(v2 + 16), *(void (**)(id, uint64_t))(v2 + 24));
}

uint64_t sub_1A9102ED0()
{
  swift_release();
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A9102F10()
{
  return sub_1A90D41B8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1A9102F1C(uint64_t a1)
{
  sub_1A9101454(a1, *(void *)(v1 + 16), *(void (**)(id, uint64_t))(v1 + 24));
}

uint64_t sub_1A9102F3C()
{
  return objectdestroy_119Tm(MEMORY[0x1E4FBC8D0], 40);
}

uint64_t sub_1A9102F58()
{
  return sub_1A9111724(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1A9102F6C()
{
  return sub_1A9103334((uint64_t (*)(void, void, void, void, void))sub_1A911179C);
}

void sub_1A9102F88(uint64_t a1)
{
  sub_1A9101998(a1, *(void (**)(id, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1A9102FA8()
{
  return objectdestroy_119Tm(MEMORY[0x1E4FBC8D0], 40);
}

uint64_t sub_1A9102FC4()
{
  return sub_1A91118BC(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1A9102FD4()
{
  return objectdestroy_119Tm(MEMORY[0x1E4FBC8D0], 40);
}

uint64_t sub_1A9102FF0()
{
  return sub_1A9111DE4(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t objectdestroy_166Tm()
{
  uint64_t v1 = sub_1A916AC90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v6, v5);
}

void sub_1A91030EC()
{
  uint64_t v1 = *(void *)(sub_1A916AC90() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = (uint64_t)v0 + v2;
  uint64_t v7 = (char *)v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(void *)v7;
  char v9 = v7[8];

  sub_1A9112330(v3, v4, v5, v6, v8, v9);
}

uint64_t sub_1A9103188()
{
  return objectdestroy_119Tm(MEMORY[0x1E4FBC898], 40);
}

uint64_t sub_1A91031A4()
{
  return sub_1A9112838(v0[2], v0[3], v0[4]);
}

uint64_t method lookup function for BridgedTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BridgedTracker);
}

uint64_t dispatch thunk of BridgedTracker.swiftTracker.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t sub_1A91031FC()
{
  return objectdestroy_119Tm(MEMORY[0x1E4FBC898], 40);
}

uint64_t sub_1A9103218()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A9103250()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1A9103268()
{
  return objectdestroy_119Tm(MEMORY[0x1E4FBC8D0], 40);
}

uint64_t objectdestroy_154Tm()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A91032C8()
{
  return objectdestroy_119Tm(MEMORY[0x1E4FBC8D0], 40);
}

uint64_t objectdestroy_113Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A9103334(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t objectdestroy_142Tm()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A9103390()
{
  return objectdestroy_119Tm(MEMORY[0x1E4FBC8D0], 40);
}

uint64_t sub_1A91033AC()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1A91033C4()
{
  return objectdestroy_119Tm(MEMORY[0x1E4FBC898], 40);
}

uint64_t sub_1A91033E0()
{
  return sub_1A90EFF44(*(void *)(v0 + 24), *(void **)(v0 + 32));
}

id sub_1A910340C(uint64_t a1, uint64_t a2)
{
  return sub_1A91002B8(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1A9103418()
{
  uint64_t v1 = *(void *)(sub_1A916AC90() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1A90E3300(*(char **)(v0 + 24), *(void *)(v0 + 32), v0 + v2, *(unsigned __int8 *)(v0 + v2 + *(void *)(v1 + 64)));
}

id sub_1A91034A4(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  unint64_t v2 = *(void *)(a1 + 24);
  type metadata accessor for BridgedEventMirrorStore();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = MEMORY[0x1E4FBC868];
  uint64_t v5 = (objc_class *)type metadata accessor for BridgedTracker();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  uint64_t v7 = 0x6E6564646968;
  if (v2) {
    uint64_t v7 = v3;
  }
  unint64_t v8 = 0xE600000000000000;
  if (v2) {
    unint64_t v8 = v2;
  }
  char v9 = (uint64_t *)&v6[OBJC_IVAR___AATracker_name];
  *char v9 = v7;
  v9[1] = v8;
  *(void *)&v6[OBJC_IVAR___AATracker_tracker] = a1;
  *(void *)&v6[OBJC_IVAR___AATracker_eventMirrorStore] = v4;
  double v10 = &v6[OBJC_IVAR___AATracker_identifier];
  *(void *)double v10 = 0;
  *((void *)v10 + 1) = 0;
  v12.receiver = v6;
  v12.super_class = v5;
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t sub_1A9103584(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1A91035E4()
{
  if (!qword_1EB6897B0)
  {
    sub_1A910363C();
    unint64_t v0 = sub_1A916B540();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB6897B0);
    }
  }
}

unint64_t sub_1A910363C()
{
  unint64_t result = qword_1EB6897A8;
  if (!qword_1EB6897A8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB6897A8);
  }
  return result;
}

void sub_1A9103694(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, ValueMetadata *, _UNKNOWN **))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for BridgedEvent, &off_1EFF9D000);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1A91036F0(uint64_t a1, uint64_t a2)
{
  sub_1A9103694(0, (unint64_t *)&unk_1EB686890, (uint64_t (*)(void, ValueMetadata *, _UNKNOWN **))type metadata accessor for EventSubmitResult);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9103770(uint64_t a1)
{
  sub_1A9103694(0, &qword_1EB687078, (uint64_t (*)(void, ValueMetadata *, _UNKNOWN **))type metadata accessor for ProcessEvent);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1A91037E8(uint64_t a1)
{
  sub_1A90FCBC4(a1, *(void (**)(void, id))(v1 + 16));
}

uint64_t sub_1A910380C()
{
  uint64_t v1 = *(void *)(sub_1A916AC90() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  char v5 = *(unsigned char *)(v0 + 40);
  uint64_t v6 = *(char **)(v4 + 80);
  long long v8[2] = v4;
  long long v9 = *(_OWORD *)(v0 + 24);
  char v10 = v5;
  uint64_t v11 = v0 + v2;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = v0 + v3;
  long long v15 = *(_OWORD *)(v0 + ((v3 + 39) & 0xFFFFFFFFFFFFFFF8));
  return sub_1A9096610(v6, (void (*)(uint64_t))sub_1A9103908, (uint64_t)v8, v4 + OBJC_IVAR____TtC12AppAnalytics7Tracker_diagnosticsConsentProvider);
}

void sub_1A9103908()
{
  sub_1A90E3958(*(void *)(v0 + 16), *(char **)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void (**)(uint64_t *))(v0 + 80), *(void *)(v0 + 88));
}

uint64_t assignWithCopy for SessionGroup(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SessionGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionGroup(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SessionGroup(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_1A9103BB4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_1A9103BCC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEE00706D61747365;
  uint64_t v3 = 0x6D69547472617473;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x73656D6954646E65;
    }
    else {
      uint64_t v5 = 0x6E6F697461727564;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEC000000706D6174;
    }
    else {
      unint64_t v6 = 0xE800000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x6D69547472617473;
  unint64_t v6 = 0xEE00706D61747365;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x73656D6954646E65;
    }
    else {
      uint64_t v3 = 0x6E6F697461727564;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xEC000000706D6174;
    }
    else {
      unint64_t v2 = 0xE800000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1A916B9E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1A9103D08(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x7265746E756F63;
  }
  else {
    uint64_t v2 = 0x6E61656C6F6F62;
  }
  if (a2) {
    uint64_t v3 = 0x7265746E756F63;
  }
  else {
    uint64_t v3 = 0x6E61656C6F6F62;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1A916B9E0();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1A9103D88(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x73646E6F636573;
  }
  else {
    uint64_t v3 = 0x636573696C6C696DLL;
  }
  if (v2) {
    unint64_t v4 = 0xEC00000073646E6FLL;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x73646E6F636573;
  }
  else {
    uint64_t v5 = 0x636573696C6C696DLL;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xEC00000073646E6FLL;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1A916B9E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1A9103E38(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701736302;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1701736302;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 1853321060;
      break;
    case 2:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v5 = 28789;
      break;
    case 3:
      uint64_t v5 = 0x6F626C6F6F686373;
      unint64_t v3 = 0xEA00000000006B6FLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 1853321060) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE200000000000000;
      uint64_t v2 = 28789;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEA00000000006B6FLL;
      if (v5 == 0x6F626C6F6F686373) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1A916B9E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1A9103F90(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x65736963657270;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x65736963657270;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7954788;
      break;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1920298856;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6574756E696DLL;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x72657474696ALL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE300000000000000;
      if (v5 == 7954788) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1920298856) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x6574756E696DLL;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x72657474696ALL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1A916B9E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

void static TimeDurationGranularity.milliseconds.getter(_WORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_1A9104134(uint64_t *a1@<X0>, void *a2@<X8>)
{
  char v4 = *v2;
  int v5 = v2[1];
  double v6 = (double)*a1;
  sub_1A9104F50();
  if (v5 && (v4 & 1) != 0)
  {
    double v8 = 1000.0;
    double v7 = v6 / 1000.0;
    if (v5 == 1) {
      goto LABEL_13;
    }
    if (v5 != 2) {
      goto LABEL_17;
    }
    double v7 = ceil(v7);
    double v6 = v7 * 1000.0;
    if ((~COERCE__INT64(v7 * 1000.0) & 0x7FF0000000000000) == 0) {
      goto LABEL_23;
    }
    if (v6 <= -9.22337204e18)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    if (v6 < 9.22337204e18)
    {
LABEL_20:
      *a2 = (uint64_t)v6;
      return;
    }
    __break(1u);
  }
  if ((~*(void *)&v6 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  double v8 = 9.22337204e18;
  if (v6 < 9.22337204e18) {
    goto LABEL_20;
  }
  __break(1u);
LABEL_13:
  double v7 = floor(v7);
  double v6 = v7 * v8;
  if ((~COERCE__INT64(v7 * v8) & 0x7FF0000000000000) == 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  double v8 = 9.22337204e18;
  if (v6 < 9.22337204e18) {
    goto LABEL_20;
  }
  __break(1u);
LABEL_17:
  double v6 = round(v7) * v8;
  if ((~*(void *)&v6 & 0x7FF0000000000000) == 0)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v6 < 9.22337204e18) {
    goto LABEL_20;
  }
LABEL_29:
  __break(1u);
}

void static TimeDurationGranularity.secondsDown.getter(_WORD *a1@<X8>)
{
  *a1 = 257;
}

void static TimeDurationGranularity.secondsUp.getter(_WORD *a1@<X8>)
{
  *a1 = 513;
}

void static TimeDurationGranularity.seconds.getter(_WORD *a1@<X8>)
{
  *a1 = 769;
}

uint64_t getEnumTagSinglePayload for TimeDurationGranularity(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TimeDurationGranularity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)__n128 result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9104448);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeDurationGranularity()
{
  return &type metadata for TimeDurationGranularity;
}

uint64_t getEnumTagSinglePayload for TimeDurationGranularity.RoundingRule(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TimeDurationGranularity.RoundingRule(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A91045DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeDurationGranularity.RoundingRule()
{
  return &type metadata for TimeDurationGranularity.RoundingRule;
}

unsigned char *storeEnumTagSinglePayload for TimeDurationGranularity.Unit(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A91046E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeDurationGranularity.Unit()
{
  return &type metadata for TimeDurationGranularity.Unit;
}

uint64_t sub_1A9104718()
{
  return sub_1A9104AD0(&qword_1E97B1700, &qword_1E97B1708);
}

uint64_t sub_1A9104748(char *a1, char *a2)
{
  return sub_1A9103D88(*a1, *a2);
}

uint64_t sub_1A9104754()
{
  return sub_1A916BAD0();
}

uint64_t sub_1A91047E0()
{
  sub_1A916B030();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9104858()
{
  return sub_1A916BAD0();
}

uint64_t sub_1A91048E0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1A916B870();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1A9104940(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x636573696C6C696DLL;
  if (*v1) {
    uint64_t v2 = 0x73646E6F636573;
  }
  unint64_t v3 = 0xEC00000073646E6FLL;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A9104988()
{
  return sub_1A916B160();
}

uint64_t sub_1A91049E8()
{
  return sub_1A916B120();
}

void sub_1A9104A38(void *a1@<X8>)
{
  *a1 = &unk_1EFF9C980;
}

unint64_t sub_1A9104A4C()
{
  unint64_t result = qword_1E97B1710;
  if (!qword_1E97B1710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1710);
  }
  return result;
}

uint64_t sub_1A9104AA0()
{
  return sub_1A9104AD0(&qword_1E97B1718, &qword_1E97B1720);
}

uint64_t sub_1A9104AD0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A9104B20(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1A9104B20(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1A916B230();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1A9104B68(unsigned __int8 *a1, char *a2)
{
  return sub_1A9103E38(*a1, *a2);
}

uint64_t sub_1A9104B74()
{
  return sub_1A916BAD0();
}

uint64_t sub_1A9104C34()
{
  sub_1A916B030();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9104CDC()
{
  return sub_1A916BAD0();
}

uint64_t sub_1A9104D98@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A9104EB0();
  *a1 = result;
  return result;
}

void sub_1A9104DC8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1701736302;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 1853321060;
      goto LABEL_3;
    case 2:
      *a1 = 28789;
      a1[1] = 0xE200000000000000;
      break;
    case 3:
      *a1 = 0x6F626C6F6F686373;
      a1[1] = 0xEA00000000006B6FLL;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE400000000000000;
      break;
  }
}

void sub_1A9104E48(void *a1@<X8>)
{
  *a1 = &unk_1EFF9C9A8;
}

unint64_t sub_1A9104E5C()
{
  unint64_t result = qword_1E97B1728;
  if (!qword_1E97B1728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1728);
  }
  return result;
}

uint64_t sub_1A9104EB0()
{
  unint64_t v0 = sub_1A916B870();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_1A9104EFC()
{
  unint64_t result = qword_1E97B1730;
  if (!qword_1E97B1730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1730);
  }
  return result;
}

void sub_1A9104F50()
{
  if (!qword_1EB687A00)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB687A00);
    }
  }
}

uint64_t BridgedTimedData.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9105048(&OBJC_IVAR___AATimedData_startDate, a1);
}

uint64_t BridgedTimedData.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9105048(&OBJC_IVAR___AATimedData_endDate, a1);
}

uint64_t sub_1A9105048@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  uint64_t v5 = sub_1A916AC90();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

double BridgedTimedData.duration.getter()
{
  return *(double *)(v0 + OBJC_IVAR___AATimedData_duration);
}

uint64_t static BridgedTimedData.dataName.getter()
{
  return 0x74614464656D6954;
}

void sub_1A9105134()
{
}

id BridgedTimedData.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void BridgedTimedData.init()()
{
}

id BridgedTimedData.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BridgedTimedData();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BridgedTimedData()
{
  uint64_t result = qword_1EB687B20;
  if (!qword_1EB687B20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A91053B0()
{
  return type metadata accessor for BridgedTimedData();
}

uint64_t sub_1A91053B8()
{
  uint64_t result = sub_1A916AC90();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for BridgedTimedData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BridgedTimedData);
}

uint64_t dispatch thunk of BridgedTimedData.toDict()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

id sub_1A91054A4()
{
  uint64_t v1 = sub_1A916AC90();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0[4];
  unint64_t v6 = v0[5];
  if (v6 >= 3) {
    uint64_t v7 = 3;
  }
  else {
    uint64_t v7 = v0[5];
  }
  if (v6 >= 3) {
    uint64_t v8 = v0[4];
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v25 = v8;
  uint64_t v26 = v5;
  if (v6 >= 3) {
    unint64_t v9 = v6;
  }
  else {
    unint64_t v9 = 0;
  }
  uint64_t v23 = v7;
  unint64_t v24 = v9;
  uint64_t v10 = v0[1];
  uint64_t v22 = *v0;
  uint64_t v11 = type metadata accessor for Session();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v12(v4, (char *)v0 + *(int *)(v11 + 28), v1);
  uint64_t v13 = *(uint64_t *)((char *)v0 + *(int *)(v11 + 32));
  uint64_t v14 = (objc_class *)type metadata accessor for BridgedSession();
  long long v15 = (char *)objc_allocWithZone(v14);
  uint64_t v16 = &v15[OBJC_IVAR___AASession_identifier];
  *(void *)uint64_t v16 = v22;
  *((void *)v16 + 1) = v10;
  *(void *)&v15[OBJC_IVAR___AASession_kind] = v23;
  uint64_t v17 = &v15[OBJC_IVAR___AASession_name];
  unint64_t v18 = v24;
  *(void *)uint64_t v17 = v25;
  *((void *)v17 + 1) = v18;
  v12(&v15[OBJC_IVAR___AASession_startDate], v4, v1);
  *(void *)&v15[OBJC_IVAR___AASession_sessionData] = v13;
  sub_1A908ED3C(v26, v6);
  v27.receiver = v15;
  v27.super_class = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v19 = objc_msgSendSuper2(&v27, sel_init);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v19;
}

uint64_t Session.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Session.appSessionID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Session.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  unint64_t v3 = *(void *)(v1 + 40);
  *a1 = v2;
  a1[1] = v3;
  return sub_1A908ED3C(v2, v3);
}

uint64_t Session.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Session() + 28);
  uint64_t v4 = sub_1A916AC90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t Session.sessionData.getter()
{
  type metadata accessor for Session();

  return swift_bridgeObjectRetain();
}

uint64_t _s12AppAnalytics7SessionV4KindO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  if (!v3)
  {
    if (!v5)
    {
      unint64_t v3 = 0;
      char v6 = 1;
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  if (v3 == 1)
  {
    if (v5 == 1)
    {
      unint64_t v3 = 1;
      char v6 = 1;
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  if (v3 != 2)
  {
    if (v5 >= 3)
    {
      if (v2 == v4 && v3 == v5) {
        char v6 = 1;
      }
      else {
        char v6 = sub_1A916B9E0();
      }
      goto LABEL_12;
    }
LABEL_11:
    char v6 = 0;
LABEL_12:
    sub_1A908ED3C(v4, v5);
    sub_1A908ED3C(v2, v3);
    goto LABEL_13;
  }
  if (v5 != 2) {
    goto LABEL_11;
  }
  char v6 = 1;
  unint64_t v3 = 2;
LABEL_13:
  sub_1A90D7D84(v2, v3);
  sub_1A90D7D84(v4, v5);
  return v6 & 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for Session(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    unint64_t v9 = a2 + 4;
    unint64_t v10 = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10 >= 3)
    {
      a1[4] = *v9;
      a1[5] = v10;
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)a1 + 2) = *(_OWORD *)v9;
    }
    uint64_t v12 = *(int *)(a3 + 28);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1A916AC90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 32)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 32));
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *initializeWithCopy for Session(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2 + 4;
  unint64_t v9 = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 >= 3)
  {
    a1[4] = *v8;
    a1[5] = v9;
    swift_bridgeObjectRetain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *(_OWORD *)v8;
  }
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1A916AC90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  *(void *)((char *)a1 + *(int *)(a3 + 32)) = *(void *)((char *)a2 + *(int *)(a3 + 32));
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Session(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v6 = a2[5];
  if (a1[5] >= 3uLL)
  {
    if (v6 >= 3)
    {
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1A9105C1C((uint64_t)(a1 + 4));
    goto LABEL_6;
  }
  if (v6 < 3)
  {
LABEL_6:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    goto LABEL_8;
  }
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
LABEL_8:
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  unint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A916AC90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 32)) = *(void *)((char *)a2 + *(int *)(a3 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A9105C1C(uint64_t a1)
{
  return a1;
}

_OWORD *initializeWithTake for Session(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  unint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A916AC90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 32)) = *(void *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

void *assignWithTake for Session(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2 + 4;
  if (a1[5] >= 3uLL)
  {
    unint64_t v9 = a2[5];
    if (v9 >= 3)
    {
      a1[4] = *v8;
      a1[5] = v9;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1A9105C1C((uint64_t)(a1 + 4));
  }
  *((_OWORD *)a1 + 2) = *(_OWORD *)v8;
LABEL_6:
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1A916AC90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  *(void *)((char *)a1 + *(int *)(a3 + 32)) = *(void *)((char *)a2 + *(int *)(a3 + 32));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A9105E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1A916AC90();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1A9105EB8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1A916AC90();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A9105F64(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for Session.Kind(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Session.Kind(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Session.Kind(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Session.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_1A9106164(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1A91061C4()
{
  if (!qword_1E97B1738)
  {
    sub_1A908E870(255, &qword_1EB689388);
    unint64_t v0 = sub_1A916B540();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E97B1738);
    }
  }
}

uint64_t SnapshotEntry.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SnapshotEntry.dataEntry.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9106268(v1 + 16, a1);
}

uint64_t sub_1A9106268(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t destroy for SnapshotEntry(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + 32);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SnapshotEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = a2 + 32;
  long long v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(a1 + 32, v6, v8);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SnapshotEntry(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for SnapshotEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for SnapshotEntry(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SnapshotEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SnapshotEntry()
{
  return &type metadata for SnapshotEntry;
}

id BridgedRawEvent.__allocating_init(name:properties:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return BridgedRawEvent.init(name:properties:)(a1, a2, a3);
}

id BridgedRawEvent.init(name:properties:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = &v3[OBJC_IVAR___AARawEvent_name];
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  *(void *)&v3[OBJC_IVAR___AARawEvent_properties] = a3;
  uint64_t v9 = qword_1EB687088;
  uint64_t v10 = v3;
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v11 = (void *)qword_1EB687080;
  *(void *)&v10[OBJC_IVAR___AARawEvent_sessionGroup] = qword_1EB687080;
  v10[OBJC_IVAR___AARawEvent_requiresDiagnosticsConsent] = 0;
  *(void *)&v10[OBJC_IVAR___AARawEvent_timestampGranularity] = 0;
  *(void *)&v10[OBJC_IVAR___AARawEvent_timeDurationGranularity] = 0;
  id v12 = v11;

  v14.receiver = v10;
  v14.super_class = ObjectType;
  return objc_msgSendSuper2(&v14, sel_init);
}

id BridgedRawEvent.__allocating_init(name:sessionGroup:timestampGranularity:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = objc_allocWithZone(v5);
  id v12 = &v11[OBJC_IVAR___AARawEvent_name];
  void *v12 = a1;
  v12[1] = a2;
  *(void *)&v11[OBJC_IVAR___AARawEvent_properties] = a5;
  *(void *)&v11[OBJC_IVAR___AARawEvent_sessionGroup] = a3;
  v11[OBJC_IVAR___AARawEvent_requiresDiagnosticsConsent] = 0;
  *(void *)&v11[OBJC_IVAR___AARawEvent_timestampGranularity] = a4;
  *(void *)&v11[OBJC_IVAR___AARawEvent_timeDurationGranularity] = 0;
  v14.receiver = v11;
  v14.super_class = v5;
  return objc_msgSendSuper2(&v14, sel_init);
}

id BridgedRawEvent.init(name:sessionGroup:timestampGranularity:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v12 = &v5[OBJC_IVAR___AARawEvent_name];
  void *v12 = a1;
  v12[1] = a2;
  *(void *)&v5[OBJC_IVAR___AARawEvent_properties] = a5;
  *(void *)&v5[OBJC_IVAR___AARawEvent_sessionGroup] = a3;
  v5[OBJC_IVAR___AARawEvent_requiresDiagnosticsConsent] = 0;
  *(void *)&v5[OBJC_IVAR___AARawEvent_timestampGranularity] = a4;
  *(void *)&v5[OBJC_IVAR___AARawEvent_timeDurationGranularity] = 0;
  v14.receiver = v5;
  v14.super_class = ObjectType;
  return objc_msgSendSuper2(&v14, sel_init);
}

id BridgedRawEvent.__allocating_init(name:sessionGroup:requiresDiagnosticsConsent:timestampGranularity:timeDurationGranularity:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = objc_allocWithZone(v7);
  uint64_t v16 = &v15[OBJC_IVAR___AARawEvent_name];
  *uint64_t v16 = a1;
  v16[1] = a2;
  *(void *)&v15[OBJC_IVAR___AARawEvent_properties] = a7;
  v15[OBJC_IVAR___AARawEvent_requiresDiagnosticsConsent] = a4;
  *(void *)&v15[OBJC_IVAR___AARawEvent_sessionGroup] = a3;
  *(void *)&v15[OBJC_IVAR___AARawEvent_timestampGranularity] = a5;
  *(void *)&v15[OBJC_IVAR___AARawEvent_timeDurationGranularity] = a6;
  v18.receiver = v15;
  v18.super_class = v7;
  return objc_msgSendSuper2(&v18, sel_init);
}

id BridgedRawEvent.init(name:sessionGroup:requiresDiagnosticsConsent:timestampGranularity:timeDurationGranularity:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v16 = &v7[OBJC_IVAR___AARawEvent_name];
  *uint64_t v16 = a1;
  v16[1] = a2;
  *(void *)&v7[OBJC_IVAR___AARawEvent_properties] = a7;
  v7[OBJC_IVAR___AARawEvent_requiresDiagnosticsConsent] = a4;
  *(void *)&v7[OBJC_IVAR___AARawEvent_sessionGroup] = a3;
  *(void *)&v7[OBJC_IVAR___AARawEvent_timestampGranularity] = a5;
  *(void *)&v7[OBJC_IVAR___AARawEvent_timeDurationGranularity] = a6;
  v18.receiver = v7;
  v18.super_class = ObjectType;
  return objc_msgSendSuper2(&v18, sel_init);
}

void sub_1A9106C94()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AARawEvent_properties);
  uint64_t v20 = v1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(v1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  id v7 = (void *)MEMORY[0x1E4FBC860];
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v8 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (unint64_t i = v8 | (v6 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v6 << 6))
  {
    uint64_t v13 = (uint64_t *)(*(void *)(v1 + 48) + 16 * i);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    id v16 = *(id *)(*(void *)(v1 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v7 = sub_1A909B364(0, v7[2] + 1, 1, v7);
    }
    unint64_t v18 = v7[2];
    unint64_t v17 = v7[3];
    if (v18 >= v17 >> 1) {
      id v7 = sub_1A909B364((void *)(v17 > 1), v18 + 1, 1, v7);
    }
    _OWORD v7[2] = v18 + 1;
    id v19 = &v7[7 * v18];
    v19[4] = v15;
    v19[5] = v14;
    v19[6] = v16;
    *(_OWORD *)(v19 + 7) = v21;
    v19[9] = &type metadata for BridgedRawEventMirrorProperty;
    v19[10] = &off_1EFF9D9C8;

    if (v4) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v10 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v10 >= v5) {
      goto LABEL_25;
    }
    unint64_t v11 = *(void *)(v20 + 8 * v10);
    ++v6;
    if (!v11)
    {
      int64_t v6 = v10 + 1;
      if (v10 + 1 >= v5) {
        goto LABEL_25;
      }
      unint64_t v11 = *(void *)(v20 + 8 * v6);
      if (!v11)
      {
        int64_t v6 = v10 + 2;
        if (v10 + 2 >= v5) {
          goto LABEL_25;
        }
        unint64_t v11 = *(void *)(v20 + 8 * v6);
        if (!v11) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v4 = (v11 - 1) & v11;
  }
  int64_t v12 = v10 + 3;
  if (v12 >= v5)
  {
LABEL_25:
    swift_release();
    return;
  }
  unint64_t v11 = *(void *)(v20 + 8 * v12);
  if (v11)
  {
    int64_t v6 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v6 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v6 >= v5) {
      goto LABEL_25;
    }
    unint64_t v11 = *(void *)(v20 + 8 * v6);
    ++v12;
    if (v11) {
      goto LABEL_18;
    }
  }
LABEL_27:
  __break(1u);
}

id BridgedRawEvent.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void BridgedRawEvent.init()()
{
}

id BridgedRawEvent.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BridgedRawEvent()
{
  return self;
}

uint64_t method lookup function for BridgedRawEvent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BridgedRawEvent);
}

uint64_t dispatch thunk of BridgedRawEvent.__allocating_init(name:properties:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of BridgedRawEvent.__allocating_init(name:sessionGroup:timestampGranularity:properties:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of BridgedRawEvent.__allocating_init(name:sessionGroup:requiresDiagnosticsConsent:timestampGranularity:timeDurationGranularity:properties:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

id sub_1A9107064(unsigned __int8 *a1)
{
  return sub_1A909E9D8(*a1, 0, 0.0);
}

uint64_t DataEventType.toDict(timestampGranularity:)(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  v4[0] = *a1;
  uint64_t v5 = 0;
  __int16 v6 = 0;
  return (*(uint64_t (**)(unsigned char *))(a3 + 48))(v4);
}

id sub_1A91070CC(unsigned __int8 *a1, double a2)
{
  return sub_1A909E9D8(*a1, 0, a2);
}

uint64_t DataEventType.toDict(timestampConfiguration:)(unsigned char *a1, double a2, uint64_t a3, uint64_t a4)
{
  v5[0] = *a1;
  double v6 = a2;
  __int16 v7 = 0;
  return (*(uint64_t (**)(unsigned char *))(a4 + 48))(v5);
}

id sub_1A9107130(int a1, __int16 a2, double a3)
{
  int v33 = a1;
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1A916A7D0();
  uint64_t v34 = *(void *)(v5 - 8);
  uint64_t v35 = v5;
  MEMORY[0x1F4188790](v5);
  __int16 v7 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A90A2578(0, (unint64_t *)&qword_1EB687AA0, MEMORY[0x1E4FBBC50]);
  MEMORY[0x1F4188790](v8 - 8);
  int64_t v10 = &v32[-v9];
  uint64_t v11 = sub_1A916B7A0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v32[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A916A820();
  swift_allocObject();
  id v15 = (id)sub_1A916A810();
  sub_1A916B790();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    __break(1u);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32))(v14, v10, v11);
  id v40 = &type metadata for TimeDurationGranularity;
  v39[0] = a2 & 0xFF01;
  id v16 = (void (*)(id *, void))sub_1A916A800();
  sub_1A90A25CC((uint64_t)v39, (uint64_t)v14);
  v16(v38, 0);
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = v33;
  *(double *)(v17 + 24) = a3;
  *(unsigned char *)(v17 + 32) = a2 & 1;
  *(unsigned char *)(v17 + 33) = HIBYTE(a2);
  *__int16 v7 = sub_1A90A3FB8;
  v7[1] = v17;
  (*(void (**)(void *, void, uint64_t))(v34 + 104))(v7, *MEMORY[0x1E4F26D08], v35);
  sub_1A916A7E0();
  type metadata accessor for SummaryEventData();
  sub_1A909EF14(&qword_1EB687720, (void (*)(uint64_t))type metadata accessor for SummaryEventData);
  uint64_t v18 = v36;
  uint64_t v19 = sub_1A916A7F0();
  if (!v18)
  {
    uint64_t v22 = v19;
    unint64_t v23 = v20;
    unint64_t v24 = self;
    uint64_t v25 = (void *)sub_1A916AB60();
    v38[0] = 0;
    id v15 = objc_msgSend(v24, sel_JSONObjectWithData_options_error_, v25, 0, v38);

    id v26 = v38[0];
    if (v15)
    {
      sub_1A916B5F0();
      swift_unknownObjectRelease();
      sub_1A90A24B0((uint64_t)v39, (uint64_t)v38);
      sub_1A90A250C();
      if (swift_dynamicCast())
      {
        id v15 = v37;
        objc_super v27 = (void *)sub_1A916AEB0();
        unsigned __int8 v28 = objc_msgSend(v24, sel_isValidJSONObject_, v27);

        if (v28)
        {
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
          sub_1A90A2FD4(v22, v23);
          swift_release();
          return v15;
        }
        sub_1A90C3D34();
        swift_allocError();
        *uint64_t v31 = v15;
      }
      else
      {
        sub_1A90C3D34();
        swift_allocError();
        *uint64_t v30 = 0;
      }
      swift_willThrow();
      sub_1A90A2FD4(v22, v23);
      swift_release();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
      return v15;
    }
    uint64_t v29 = v26;
    sub_1A916A990();

    swift_willThrow();
    sub_1A90A2FD4(v22, v23);
  }
  swift_release();
  return v15;
}

void *sub_1A910766C(int a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  unsigned int v38 = a2;
  int v39 = a1;
  uint64_t v49 = *MEMORY[0x1E4F143B8];
  uint64_t v40 = sub_1A916A7D0();
  uint64_t v10 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v12 = (void *)((char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A90A2578(0, (unint64_t *)&qword_1EB687AA0, MEMORY[0x1E4FBBC50]);
  MEMORY[0x1F4188790](v13 - 8);
  id v15 = (char *)&v38 - v14;
  uint64_t v16 = sub_1A916B7A0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  uint64_t v45 = a5;
  sub_1A916A820();
  swift_allocObject();
  sub_1A916A810();
  sub_1A916B790();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1) {
    __break(1u);
  }
  char v20 = v38;
  unsigned int v21 = v38 >> 8;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  uint64_t v48 = &type metadata for TimeDurationGranularity;
  v47[0] = v20 & 1;
  v47[1] = v21;
  uint64_t v22 = (void (*)(id *, void))sub_1A916A800();
  sub_1A90A25CC((uint64_t)v47, (uint64_t)v19);
  v22(v46, 0);
  uint64_t v23 = swift_allocObject();
  *(unsigned char *)(v23 + 16) = v39;
  *(double *)(v23 + 24) = a6;
  *(unsigned char *)(v23 + 32) = v20 & 1;
  *(unsigned char *)(v23 + 33) = v21;
  void *v12 = sub_1A90A3FB8;
  v12[1] = v23;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4F26D08], v40);
  sub_1A916A7E0();
  sub_1A9109408();
  uint64_t v24 = v41;
  uint64_t v25 = sub_1A916A7F0();
  if (!v24)
  {
    uint64_t v28 = v25;
    unint64_t v29 = v26;
    uint64_t v30 = self;
    uint64_t v31 = (void *)sub_1A916AB60();
    v46[0] = 0;
    uint64_t v12 = objc_msgSend(v30, sel_JSONObjectWithData_options_error_, v31, 0, v46);

    id v32 = v46[0];
    if (v12)
    {
      sub_1A916B5F0();
      swift_unknownObjectRelease();
      sub_1A90A24B0((uint64_t)v47, (uint64_t)v46);
      sub_1A90A250C();
      if (swift_dynamicCast())
      {
        uint64_t v12 = v42;
        int v33 = (void *)sub_1A916AEB0();
        unsigned __int8 v34 = objc_msgSend(v30, sel_isValidJSONObject_, v33);

        if (v34)
        {
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
          sub_1A90A2FD4(v28, v29);
          swift_release();
          return v12;
        }
        sub_1A90C3D34();
        swift_allocError();
        *unint64_t v37 = v12;
      }
      else
      {
        sub_1A90C3D34();
        swift_allocError();
        *uint64_t v36 = 0;
      }
      swift_willThrow();
      sub_1A90A2FD4(v28, v29);
      swift_release();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
      return v12;
    }
    uint64_t v35 = v32;
    sub_1A916A990();

    swift_willThrow();
    sub_1A90A2FD4(v28, v29);
  }
  swift_release();
  return v12;
}

id sub_1A9107B84(int a1, __int16 a2, double a3)
{
  int v33 = a1;
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1A916A7D0();
  uint64_t v34 = *(void *)(v5 - 8);
  uint64_t v35 = v5;
  MEMORY[0x1F4188790](v5);
  __int16 v7 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A90A2578(0, (unint64_t *)&qword_1EB687AA0, MEMORY[0x1E4FBBC50]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v32[-v9];
  uint64_t v11 = sub_1A916B7A0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v32[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A916A820();
  swift_allocObject();
  id v15 = (id)sub_1A916A810();
  sub_1A916B790();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    __break(1u);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32))(v14, v10, v11);
  uint64_t v40 = &type metadata for TimeDurationGranularity;
  v39[0] = a2 & 0xFF01;
  uint64_t v16 = (void (*)(id *, void))sub_1A916A800();
  sub_1A90A25CC((uint64_t)v39, (uint64_t)v14);
  v16(v38, 0);
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = v33;
  *(double *)(v17 + 24) = a3;
  *(unsigned char *)(v17 + 32) = a2 & 1;
  *(unsigned char *)(v17 + 33) = HIBYTE(a2);
  *__int16 v7 = sub_1A90A3FB8;
  v7[1] = v17;
  (*(void (**)(void *, void, uint64_t))(v34 + 104))(v7, *MEMORY[0x1E4F26D08], v35);
  sub_1A916A7E0();
  type metadata accessor for SummaryEventMetaData();
  sub_1A909EF14(&qword_1E97B1778, (void (*)(uint64_t))type metadata accessor for SummaryEventMetaData);
  uint64_t v18 = v36;
  uint64_t v19 = sub_1A916A7F0();
  if (!v18)
  {
    uint64_t v22 = v19;
    unint64_t v23 = v20;
    uint64_t v24 = self;
    uint64_t v25 = (void *)sub_1A916AB60();
    v38[0] = 0;
    id v15 = objc_msgSend(v24, sel_JSONObjectWithData_options_error_, v25, 0, v38);

    id v26 = v38[0];
    if (v15)
    {
      sub_1A916B5F0();
      swift_unknownObjectRelease();
      sub_1A90A24B0((uint64_t)v39, (uint64_t)v38);
      sub_1A90A250C();
      if (swift_dynamicCast())
      {
        id v15 = v37;
        objc_super v27 = (void *)sub_1A916AEB0();
        unsigned __int8 v28 = objc_msgSend(v24, sel_isValidJSONObject_, v27);

        if (v28)
        {
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
          sub_1A90A2FD4(v22, v23);
          swift_release();
          return v15;
        }
        sub_1A90C3D34();
        swift_allocError();
        *uint64_t v31 = v15;
      }
      else
      {
        sub_1A90C3D34();
        swift_allocError();
        *uint64_t v30 = 0;
      }
      swift_willThrow();
      sub_1A90A2FD4(v22, v23);
      swift_release();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
      return v15;
    }
    unint64_t v29 = v26;
    sub_1A916A990();

    swift_willThrow();
    sub_1A90A2FD4(v22, v23);
  }
  swift_release();
  return v15;
}

id sub_1A91080C0(int a1, __int16 a2, double a3)
{
  int v33 = a1;
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1A916A7D0();
  uint64_t v34 = *(void *)(v5 - 8);
  uint64_t v35 = v5;
  MEMORY[0x1F4188790](v5);
  __int16 v7 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A90A2578(0, (unint64_t *)&qword_1EB687AA0, MEMORY[0x1E4FBBC50]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v32[-v9];
  uint64_t v11 = sub_1A916B7A0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v32[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A916A820();
  swift_allocObject();
  id v15 = (id)sub_1A916A810();
  sub_1A916B790();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    __break(1u);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32))(v14, v10, v11);
  uint64_t v40 = &type metadata for TimeDurationGranularity;
  v39[0] = a2 & 0xFF01;
  uint64_t v16 = (void (*)(id *, void))sub_1A916A800();
  sub_1A90A25CC((uint64_t)v39, (uint64_t)v14);
  v16(v38, 0);
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = v33;
  *(double *)(v17 + 24) = a3;
  *(unsigned char *)(v17 + 32) = a2 & 1;
  *(unsigned char *)(v17 + 33) = HIBYTE(a2);
  *__int16 v7 = sub_1A90A3FB8;
  v7[1] = v17;
  (*(void (**)(void *, void, uint64_t))(v34 + 104))(v7, *MEMORY[0x1E4F26D08], v35);
  sub_1A916A7E0();
  type metadata accessor for TimedData();
  sub_1A909EF14(&qword_1EB688BE8, (void (*)(uint64_t))type metadata accessor for TimedData);
  uint64_t v18 = v36;
  uint64_t v19 = sub_1A916A7F0();
  if (!v18)
  {
    uint64_t v22 = v19;
    unint64_t v23 = v20;
    uint64_t v24 = self;
    uint64_t v25 = (void *)sub_1A916AB60();
    v38[0] = 0;
    id v15 = objc_msgSend(v24, sel_JSONObjectWithData_options_error_, v25, 0, v38);

    id v26 = v38[0];
    if (v15)
    {
      sub_1A916B5F0();
      swift_unknownObjectRelease();
      sub_1A90A24B0((uint64_t)v39, (uint64_t)v38);
      sub_1A90A250C();
      if (swift_dynamicCast())
      {
        id v15 = v37;
        objc_super v27 = (void *)sub_1A916AEB0();
        unsigned __int8 v28 = objc_msgSend(v24, sel_isValidJSONObject_, v27);

        if (v28)
        {
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
          sub_1A90A2FD4(v22, v23);
          swift_release();
          return v15;
        }
        sub_1A90C3D34();
        swift_allocError();
        *uint64_t v31 = v15;
      }
      else
      {
        sub_1A90C3D34();
        swift_allocError();
        *uint64_t v30 = 0;
      }
      swift_willThrow();
      sub_1A90A2FD4(v22, v23);
      swift_release();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
      return v15;
    }
    unint64_t v29 = v26;
    sub_1A916A990();

    swift_willThrow();
    sub_1A90A2FD4(v22, v23);
  }
  swift_release();
  return v15;
}

uint64_t sub_1A91085FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_1A908EC8C((long long *)a1, (uint64_t)v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1A90C42B4((uint64_t)v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A9109314(a1, &qword_1EB6887E8, &qword_1EB6897A0);
    sub_1A914CB68(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_1A9109314((uint64_t)v9, &qword_1EB6887E8, &qword_1EB6897A0);
  }
}

uint64_t sub_1A91086FC(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  return DataEventType.toDict(timestampGranularity:)(a1, a2, a3);
}

uint64_t sub_1A9108714(unsigned char *a1, uint64_t a2, uint64_t a3, double a4)
{
  return DataEventType.toDict(timestampConfiguration:)(a1, a4, a2, a3);
}

uint64_t sub_1A910872C()
{
  return swift_unknownObjectRetain();
}

id *sub_1A910877C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return DataEventType.toDict(dataEventFormatter:)(a1, a2, a3);
}

uint64_t sub_1A91087A8()
{
  return MEMORY[0x1F4186498](v0, 34, 7);
}

uint64_t sub_1A91087B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6, a1, a5);
  uint64_t result = type metadata accessor for PushEvent();
  uint64_t v11 = (void *)(a6 + *(int *)(result + 36));
  void *v11 = a2;
  v11[1] = a3;
  *(unsigned char *)(a6 + *(int *)(result + 40)) = a4;
  return result;
}

uint64_t sub_1A9108854()
{
  type metadata accessor for BridgedRawDataEvent();
  uint64_t v0 = swift_dynamicCastClass();
  if (v0)
  {
    uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AARawDataEvent_name);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    id v3 = objc_msgSend(ObjCClassFromMetadata, sel_dataName);
    uint64_t v1 = sub_1A916AF90();

    if (objc_msgSend(ObjCClassFromMetadata, sel_respondsToSelector_, sel_requiresDiagnosticsConsent)) {
      objc_msgSend(ObjCClassFromMetadata, sel_requiresDiagnosticsConsent);
    }
  }
  return v1;
}

uint64_t sub_1A910893C(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    a1 = sub_1A90A33F0();
  }
  swift_bridgeObjectRetain();
  return a1;
}

id sub_1A9108998(unsigned __int8 *a1)
{
  return sub_1A9107130(*a1, 0, 0.0);
}

id sub_1A91089BC(unsigned __int8 *a1, double a2)
{
  return sub_1A9107130(*a1, 0, a2);
}

uint64_t sub_1A91089DC(double *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A909A784(a1, a2, a3, (uint64_t (*)(void, void, double))sub_1A9107130);
}

void *sub_1A9108A08(unsigned __int8 *a1)
{
  return sub_1A910766C(*a1, 0, *v1, v1[1], v1[2], 0.0);
}

void *sub_1A9108A34(unsigned __int8 *a1, double a2)
{
  return sub_1A910766C(*a1, 0, *v2, v2[1], v2[2], a2);
}

void *sub_1A9108A5C(double *a1)
{
  return sub_1A910766C(*(unsigned __int8 *)a1, *((unsigned __int8 *)a1 + 16) | (*((unsigned __int8 *)a1 + 17) << 8), *v1, v1[1], v1[2], a1[1]);
}

id sub_1A9108A90(unsigned __int8 *a1)
{
  return sub_1A91080C0(*a1, 0, 0.0);
}

id sub_1A9108AB4(unsigned __int8 *a1, double a2)
{
  return sub_1A91080C0(*a1, 0, a2);
}

uint64_t sub_1A9108AD4(double *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A909A784(a1, a2, a3, (uint64_t (*)(void, void, double))sub_1A91080C0);
}

void *sub_1A9108B00()
{
  return sub_1A9163CB0((int)&v2, *v0);
}

id sub_1A9108B28(unsigned __int8 *a1)
{
  return sub_1A9107B84(*a1, 0, 0.0);
}

id sub_1A9108B4C(unsigned __int8 *a1, double a2)
{
  return sub_1A9107B84(*a1, 0, a2);
}

uint64_t sub_1A9108B6C(double *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A909A784(a1, a2, a3, (uint64_t (*)(void, void, double))sub_1A9107B84);
}

uint64_t dispatch thunk of static DataEventType.requiresDiagnosticsConsent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of DataEventType.toDict(timestampGranularity:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of DataEventType.toDict(timestampConfiguration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of DataEventType.toDict(dataEventFormatter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t *sub_1A9108C24(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 17 > 0x18)
  {
    uint64_t v9 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v10 = *(void *)v11;
    *(void *)(v10 + 8) = *(void *)(v11 + 8);
    *(unsigned char *)(v10 + 16) = *(unsigned char *)(v11 + 16);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1A9108D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
  return a1;
}

uint64_t sub_1A9108DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
  *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
  return a1;
}

uint64_t sub_1A9108E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
  return a1;
}

uint64_t sub_1A9108EE4(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 17;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1A910904CLL);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v15 = 0;
        }
        if (((v6 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
          int v16 = *a1;
        }
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1A9109060(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 17;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
    if (v8 >= a2)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 3:
          goto LABEL_46;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_33;
        default:
LABEL_33:
          if (a2)
          {
LABEL_34:
            if (v7 < 0x7FFFFFFF)
            {
              unsigned int v21 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                *unsigned int v21 = a2 ^ 0x80000000;
                v21[1] = 0;
              }
              else
              {
                v21[1] = a2 - 1;
              }
            }
            else
            {
              unint64_t v20 = *(void (**)(void))(v6 + 56);
              v20();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    if (v8 >= a2) {
      goto LABEL_17;
    }
  }
  unsigned int v16 = ~v8 + a2;
  unsigned int v17 = (~(_BYTE)v8 + a2);
  if (v10 < 4) {
    int v18 = (v16 >> v11) + 1;
  }
  else {
    int v18 = 1;
  }
  if (v10 >= 4) {
    unsigned int v19 = v16;
  }
  else {
    unsigned int v19 = v17;
  }
  bzero(a1, v10);
  if (v10 == 1) {
    *a1 = v19;
  }
  else {
    *(_DWORD *)a1 = v19;
  }
  switch(v15)
  {
    case 1:
      a1[v10] = v18;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v18;
      break;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x1A9109274);
    case 4:
      *(_DWORD *)&a1[v10] = v18;
      break;
    default:
      return;
  }
}

void sub_1A910929C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1A908E870(255, a3);
    unint64_t v4 = sub_1A916B540();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1A91092F4()
{
  return MEMORY[0x1F4186498](v0, 34, 7);
}

uint64_t sub_1A9109304()
{
  return MEMORY[0x1F4186498](v0, 34, 7);
}

uint64_t sub_1A9109314(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_1A910929C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1A9109370(uint64_t a1)
{
  sub_1A90A2578(0, &qword_1EB689398, (void (*)(uint64_t))type metadata accessor for Tracker.Timer);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A91093E8()
{
  return MEMORY[0x1F4186498](v0, 34, 7);
}

uint64_t sub_1A91093F8()
{
  return MEMORY[0x1F4186498](v0, 34, 7);
}

unint64_t sub_1A9109408()
{
  unint64_t result = qword_1E97B1770;
  if (!qword_1E97B1770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1770);
  }
  return result;
}

uint64_t sub_1A910945C()
{
  return MEMORY[0x1F4186498](v0, 34, 7);
}

uint64_t Endpoint.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___AAEndpoint_url;
  uint64_t v4 = sub_1A916AAD0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t Endpoint.name.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AAEndpoint_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Endpoint.sharedContainerIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AAEndpoint_sharedContainerIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

id Endpoint.__allocating_init(url:name:sharedContainerIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v11 = (char *)objc_allocWithZone(v5);
  unsigned int v12 = &v11[OBJC_IVAR___AAEndpoint_url];
  uint64_t v13 = sub_1A916AAD0();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
  int v15 = &v11[OBJC_IVAR___AAEndpoint_name];
  *(void *)int v15 = a2;
  *((void *)v15 + 1) = a3;
  unsigned int v16 = &v11[OBJC_IVAR___AAEndpoint_sharedContainerIdentifier];
  *(void *)unsigned int v16 = a4;
  *((void *)v16 + 1) = a5;
  v19.receiver = v11;
  v19.super_class = v5;
  id v17 = objc_msgSendSuper2(&v19, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
  return v17;
}

id Endpoint.init(url:name:sharedContainerIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  unsigned int v12 = &v5[OBJC_IVAR___AAEndpoint_url];
  uint64_t v13 = sub_1A916AAD0();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
  int v15 = &v5[OBJC_IVAR___AAEndpoint_name];
  *(void *)int v15 = a2;
  *((void *)v15 + 1) = a3;
  unsigned int v16 = &v5[OBJC_IVAR___AAEndpoint_sharedContainerIdentifier];
  *(void *)unsigned int v16 = a4;
  *((void *)v16 + 1) = a5;
  v19.receiver = v5;
  v19.super_class = ObjectType;
  id v17 = objc_msgSendSuper2(&v19, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
  return v17;
}

id Endpoint.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void Endpoint.init()()
{
}

id Endpoint.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A9109B88()
{
  return type metadata accessor for Endpoint();
}

uint64_t type metadata accessor for Endpoint()
{
  uint64_t result = qword_1EB686310;
  if (!qword_1EB686310) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A9109BDC()
{
  uint64_t result = sub_1A916AAD0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for Endpoint(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Endpoint);
}

uint64_t dispatch thunk of Endpoint.__allocating_init(url:name:sharedContainerIdentifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1A9109CAC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void *ResourceType.toData()(uint64_t a1, uint64_t a2)
{
  v19[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = (*(uint64_t (**)(void))(a2 + 32))();
  if (!v2)
  {
    uint64_t v5 = v4;
    uint64_t v6 = self;
    uint64_t v3 = (void *)MEMORY[0x1E4FBB1A0];
    unsigned int v7 = (void *)sub_1A916AEB0();
    unsigned int v8 = objc_msgSend(v6, sel_isValidJSONObject_, v7);

    if (v8)
    {
      uint64_t v9 = (void *)sub_1A916AEB0();
      swift_bridgeObjectRelease();
      v19[0] = 0;
      id v10 = objc_msgSend(v6, sel_dataWithJSONObject_options_error_, v9, 0, v19);

      id v11 = v19[0];
      if (v10)
      {
        uint64_t v3 = (void *)sub_1A916AB80();

        return v3;
      }
      uint64_t v3 = v11;
      sub_1A916A990();
    }
    else
    {
      if (qword_1EB68ACE8 != -1) {
        swift_once();
      }
      id v12 = (id)qword_1EB689AA0;
      sub_1A916B3C0();
      sub_1A90CA164();
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1A916EF60;
      uint64_t v14 = sub_1A916AEE0();
      uint64_t v16 = v15;
      *(void *)(v13 + 56) = v3;
      *(void *)(v13 + 64) = sub_1A90A67C0();
      *(void *)(v13 + 32) = v14;
      *(void *)(v13 + 40) = v16;
      sub_1A916AD30();

      swift_bridgeObjectRelease();
      sub_1A90F7E7C();
      swift_allocError();
      *(void *)uint64_t v17 = v5;
      *(unsigned char *)(v17 + 8) = 0;
    }
    swift_willThrow();
  }
  return v3;
}

uint64_t dispatch thunk of static ResourceType.version.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ResourceType.version.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ResourceType.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ResourceType.toJSONObject()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t initializeBufferWithCopyOfBuffer for ResourceError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ResourceError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ResourceError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UploadEndpoint.Wrapper(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UploadEndpoint.Wrapper(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A910A0F0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1A910A0F8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ResourceError()
{
  return &type metadata for ResourceError;
}

uint64_t UploadBatchQueueKey.hash(into:)()
{
  if (*(unsigned char *)(v0 + 32))
  {
    sub_1A916BAC0();
    sub_1A916B030();
  }
  else
  {
    sub_1A916BAC0();
  }

  return sub_1A916B030();
}

uint64_t UploadBatchQueueKey.hashValue.getter()
{
  char v1 = *(unsigned char *)(v0 + 32);
  sub_1A916BAB0();
  sub_1A916BAC0();
  if (v1) {
    sub_1A916B030();
  }
  sub_1A916B030();
  return sub_1A916BAD0();
}

uint64_t sub_1A910A250()
{
  char v1 = *(unsigned char *)(v0 + 32);
  sub_1A916BAB0();
  sub_1A916BAC0();
  if (v1) {
    sub_1A916B030();
  }
  sub_1A916B030();
  return sub_1A916BAD0();
}

uint64_t sub_1A910A2F0()
{
  if (*(unsigned char *)(v0 + 32))
  {
    sub_1A916BAC0();
    sub_1A916B030();
  }
  else
  {
    sub_1A916BAC0();
  }

  return sub_1A916B030();
}

uint64_t sub_1A910A384()
{
  char v1 = *(unsigned char *)(v0 + 32);
  sub_1A916BAB0();
  sub_1A916BAC0();
  if (v1) {
    sub_1A916B030();
  }
  sub_1A916B030();
  return sub_1A916BAD0();
}

uint64_t _s12AppAnalytics19UploadBatchQueueKeyO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  char v6 = *(unsigned char *)(a1 + 32);
  uint64_t v7 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v11 = *(unsigned char *)(a2 + 32);
  if (v6)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      if (v2 != v7 || v3 != v8)
      {
        uint64_t v13 = *(void *)(a2 + 24);
        char v14 = sub_1A916B9E0();
        uint64_t v9 = v13;
        if ((v14 & 1) == 0)
        {
          uint64_t v16 = v4;
          char v25 = 0;
          goto LABEL_24;
        }
      }
      if (v4 != v10 || v5 != v9)
      {
        uint64_t v16 = v4;
        uint64_t v17 = v10;
        uint64_t v18 = v9;
        char v19 = sub_1A916B9E0();
        uint64_t v9 = v18;
        uint64_t v10 = v17;
        char v25 = v19;
LABEL_24:
        char v11 = 1;
        char v6 = 1;
        goto LABEL_25;
      }
      uint64_t v16 = v4;
      char v11 = 1;
      char v6 = 1;
      goto LABEL_22;
    }
    goto LABEL_14;
  }
  if (*(unsigned char *)(a2 + 32))
  {
LABEL_14:
    uint64_t v16 = *(void *)(a1 + 16);
    char v25 = 0;
    goto LABEL_25;
  }
  uint64_t v16 = *(void *)(a1 + 16);
  if (v2 == v7 && v3 == v8)
  {
    char v11 = 0;
    char v6 = 0;
LABEL_22:
    char v25 = 1;
    goto LABEL_25;
  }
  uint64_t v21 = *(void *)(a2 + 24);
  char v22 = sub_1A916B9E0();
  uint64_t v9 = v21;
  char v25 = v22;
  char v11 = 0;
  char v6 = 0;
LABEL_25:
  uint64_t v23 = v9;
  sub_1A90C13F8(v7, v8, v10, v9, v11);
  sub_1A90C13F8(v2, v3, v16, v5, v6);
  sub_1A90C14CC(v2, v3, v16, v5, v6);
  sub_1A90C14CC(v7, v8, v10, v23, v11);
  return v25 & 1;
}

unint64_t sub_1A910A5EC()
{
  unint64_t result = qword_1EB688A40[0];
  if (!qword_1EB688A40[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB688A40);
  }
  return result;
}

uint64_t destroy for UploadBatchQueueKey(uint64_t a1)
{
  return sub_1A90C14CC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for UploadBatchQueueKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1A90C13F8(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for UploadBatchQueueKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1A90C13F8(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  sub_1A90C14CC(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for UploadBatchQueueKey(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 32);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 32) = v3;
  sub_1A90C14CC(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for UploadBatchQueueKey(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UploadBatchQueueKey(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A910A808(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1A910A810(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for UploadBatchQueueKey()
{
  return &type metadata for UploadBatchQueueKey;
}

BOOL AccessTracker.isDiagnosticSubmissionAllowed.getter()
{
  sub_1A9095B68(&v2);
  return (v2 & 1) == 0 && v2 != 2;
}

uint64_t sub_1A910A860(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 1;
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 1;
  }
  if (v2 >= v3) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = a2;
  }
  if (v2 >= v3) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = a1;
  }
  uint64_t v42 = v4;
  uint64_t v43 = v4 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v4 + 56);
  int64_t v39 = (unint64_t)(63 - v6) >> 6;
  uint64_t v45 = v5 + 56;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v44 = v5;
  while (1)
  {
    while (1)
    {
      int64_t v11 = v10;
      if (!v8) {
        break;
      }
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      if (*(void *)(v5 + 16)) {
        goto LABEL_31;
      }
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    if (v14 >= v39) {
      goto LABEL_53;
    }
    unint64_t v15 = *(void *)(v43 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v11 + 2;
      if (v11 + 2 >= v39) {
        goto LABEL_53;
      }
      unint64_t v15 = *(void *)(v43 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v11 + 3;
        if (v11 + 3 >= v39) {
          goto LABEL_53;
        }
        unint64_t v15 = *(void *)(v43 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_30:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
    if (*(void *)(v5 + 16))
    {
LABEL_31:
      unint64_t v40 = v8;
      int64_t v41 = v10;
      uint64_t v17 = (uint64_t *)(*(void *)(v42 + 48) + 48 * v13);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      uint64_t v21 = v17[2];
      uint64_t v20 = v17[3];
      uint64_t v23 = v17[4];
      uint64_t v22 = v17[5];
      sub_1A916BAB0();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v24 = v18;
      sub_1A916B030();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v47 = v21;
      sub_1A916B030();
      uint64_t v48 = v20;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v46 = v23;
      sub_1A916B030();
      swift_bridgeObjectRelease();
      uint64_t v25 = sub_1A916BAD0();
      uint64_t v26 = -1 << *(unsigned char *)(v5 + 32);
      unint64_t v27 = v25 & ~v26;
      if ((*(void *)(v45 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27))
      {
        uint64_t v28 = ~v26;
        uint64_t v29 = *(void *)(v44 + 48);
        while (1)
        {
          uint64_t v30 = (void *)(v29 + 48 * v27);
          uint64_t v31 = v30[2];
          uint64_t v32 = v30[3];
          uint64_t v33 = v30[4];
          uint64_t v34 = v30[5];
          BOOL v35 = *v30 == v24 && v30[1] == v19;
          if (v35 || (sub_1A916B9E0() & 1) != 0)
          {
            BOOL v36 = v31 == v47 && v32 == v48;
            if (v36 || (sub_1A916B9E0() & 1) != 0)
            {
              BOOL v37 = v33 == v46 && v34 == v22;
              if (v37 || (sub_1A916B9E0() & 1) != 0) {
                break;
              }
            }
          }
          unint64_t v27 = (v27 + 1) & v28;
          if (((*(void *)(v45 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
            goto LABEL_13;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v38 = 0;
        goto LABEL_50;
      }
LABEL_13:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v5 = v44;
      unint64_t v8 = v40;
      int64_t v10 = v41;
    }
  }
  int64_t v16 = v11 + 4;
  if (v11 + 4 >= v39)
  {
LABEL_53:
    uint64_t v38 = 1;
LABEL_50:
    swift_bridgeObjectRelease();
    sub_1A90A309C();
    return v38;
  }
  unint64_t v15 = *(void *)(v43 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v11 + 4;
    goto LABEL_30;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v39) {
      goto LABEL_53;
    }
    unint64_t v15 = *(void *)(v43 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_30;
    }
  }
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_1A910AC38(void *a1, unint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v19 = a5;
  uint64_t v20 = a6;
  int v22 = a3;
  uint64_t v10 = sub_1A916AC90();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  double v13 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = *(void *)(v6 + 80);
  uint64_t v21 = *(void *)(v6 + 88);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v10, v13);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  int64_t v16 = (char *)swift_allocObject();
  uint64_t v17 = v20;
  *((void *)v16 + 2) = v19;
  *((void *)v16 + 3) = v17;
  *((void *)v16 + 4) = v6;
  *((void *)v16 + 5) = a1;
  *((void *)v16 + 6) = a2;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v16[v15], (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v16[v15 + v12] = v22;
  swift_retain();
  sub_1A90F0DEC(a1, a2);
  sub_1A908CAA8(v14, (uint64_t)sub_1A9116E7C, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_1A910ADD4(void *a1, unint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v34 = a6;
  uint64_t v35 = a7;
  uint64_t v30 = a5;
  int v33 = a3;
  uint64_t v36 = a9;
  uint64_t v14 = sub_1A916AC90();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  v17.n128_f64[0] = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(a2 >> 62)) {
    sub_1A910C2DC((uint64_t)a1, v9, a8, v36);
  }
  uint64_t v19 = *(void *)(v9 + 88);
  uint64_t v31 = *(void *)(v9 + 80);
  uint64_t v32 = v19;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16);
  uint64_t v29 = v14;
  v20((char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v14, v17);
  sub_1A90937D8(v30, (uint64_t)v37, (uint64_t)&qword_1EB68A928, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1A909B78C);
  unint64_t v21 = (*(unsigned __int8 *)(v15 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v22 = (v16 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v36;
  *(void *)(v23 + 16) = a8;
  *(void *)(v23 + 24) = v24;
  *(void *)(v23 + 32) = v9;
  *(void *)(v23 + 40) = a1;
  *(void *)(v23 + 48) = a2;
  *(unsigned char *)(v23 + 56) = v33 & 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v23 + v21, v18, v29);
  sub_1A909374C((uint64_t)v37, v23 + v22);
  uint64_t v25 = (uint64_t *)(v23 + ((v22 + 39) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v27 = v34;
  uint64_t v26 = v35;
  *uint64_t v25 = v34;
  v25[1] = v26;
  swift_retain();
  sub_1A90F0DEC(a1, a2);
  sub_1A90A0418(v27);
  sub_1A908CAA8(v31, (uint64_t)sub_1A9116C44, v23);
  return swift_release();
}

uint64_t sub_1A910B020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = *(void *)(v6 + 80);
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a5;
  v14[3] = a6;
  v14[4] = v6;
  id v14[5] = a1;
  void v14[6] = a2;
  v14[7] = a3;
  v14[8] = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1A908CAA8(v13, (uint64_t)sub_1A9116B24, (uint64_t)v14);

  return swift_release();
}

uint64_t sub_1A910B0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(v4 + 80);
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a3;
  v10[3] = a4;
  v10[4] = v4;
  v10[5] = a1;
  void v10[6] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A908CAA8(v9, (uint64_t)sub_1A9116978, (uint64_t)v10);

  return swift_release();
}

uint64_t sub_1A910B1AC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a4;
  *(void *)(v12 + 24) = a5;
  *(void *)(v12 + 32) = v5;
  *(void *)(v12 + 40) = a1;
  *(void *)(v12 + 48) = a2;
  *(unsigned char *)(v12 + 56) = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A908CAA8(v11, (uint64_t)sub_1A911693C, v12);

  return swift_release();
}

uint64_t Tracker.debugPath.getter()
{
  uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  swift_retain();
  while (1)
  {
    uint64_t v1 = swift_retain();
    char v2 = sub_1A91105F8(v1, &v6);
    swift_release();
    uint64_t v3 = *(void *)(v0 + 136);
    swift_retain();
    swift_release();
    if (!v3) {
      break;
    }
    uint64_t v0 = v3;
    if ((v2 & 1) == 0)
    {
      swift_release();
      break;
    }
  }
  uint64_t v4 = v6;

  return sub_1A90938C0((uint64_t)v4);
}

uint64_t Tracker.removeSessionObservers(forObject:)(uint64_t a1)
{
  uint64_t result = MEMORY[0x1AD0EEDF0](v1 + 64);
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void *)(result + 48);
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = a1;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    sub_1A908CAA8(v5, (uint64_t)sub_1A9102F10, v6);
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t Tracker.transaction(block:)(uint64_t a1, uint64_t a2)
{
  return sub_1A9112060(a1, a2, (uint64_t)&unk_1EFFA0058, (uint64_t)sub_1A9102F58);
}

uint64_t Tracker.dynamicTransaction(identifier:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(v4 + 80);
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = v4;
  v10[3] = a1;
  v10[4] = a2;
  v10[5] = a3;
  void v10[6] = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A908CAA8(v9, (uint64_t)sub_1A9114838, (uint64_t)v10);

  return swift_release();
}

uint64_t Tracker.whenSession(block:)(uint64_t a1, uint64_t a2)
{
  return sub_1A9112060(a1, a2, (uint64_t)&unk_1EFFA00A8, (uint64_t)sub_1A9102FC4);
}

uint64_t Tracker.ifSession(block:)(uint64_t a1, uint64_t a2)
{
  return sub_1A9112060(a1, a2, (uint64_t)&unk_1EFFA00D0, (uint64_t)sub_1A9102FF0);
}

Swift::Void __swiftcall Tracker.enterGroup(groupName:)(Swift::String groupName)
{
  uint64_t v2 = v1;
  object = groupName._object;
  uint64_t countAndFlagsBits = groupName._countAndFlagsBits;
  uint64_t v4 = sub_1A916AC90();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v18 - v9;
  sub_1A916AC80();
  uint64_t v12 = v1 + 80;
  uint64_t v11 = *(void *)(v1 + 80);
  uint64_t v18 = *(void *)(v12 + 8);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v14 = (v6 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = (char *)swift_allocObject();
  uint64_t v16 = countAndFlagsBits;
  *((void *)v15 + 2) = v2;
  *((void *)v15 + 3) = v16;
  *((void *)v15 + 4) = object;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v15[v13], v7, v4);
  __n128 v17 = &v15[v14];
  *(void *)__n128 v17 = 0;
  v17[8] = 1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A908CAA8(v11, (uint64_t)sub_1A911487C, (uint64_t)v15);
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

uint64_t Tracker.enterGroup(groupName:contentType:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5 = v4;
  int v25 = a4;
  uint64_t v23 = a1;
  uint64_t v24 = a3;
  uint64_t v7 = sub_1A916AC90();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)&v22 - v12;
  sub_1A916AC80();
  uint64_t v15 = v4 + 80;
  uint64_t v14 = *(void *)(v4 + 80);
  uint64_t v22 = *(void *)(v15 + 8);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v17 = (v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = (char *)swift_allocObject();
  uint64_t v19 = v23;
  *((void *)v18 + 2) = v5;
  *((void *)v18 + 3) = v19;
  *((void *)v18 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v18[v16], v10, v7);
  uint64_t v20 = &v18[v17];
  *(void *)uint64_t v20 = v24;
  v20[8] = v25 & 1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A908CAA8(v14, (uint64_t)sub_1A911487C, (uint64_t)v18);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

Swift::Void __swiftcall Tracker.leaveGroup(groupName:)(Swift::String_optional groupName)
{
  object = groupName.value._object;
  uint64_t countAndFlagsBits = groupName.value._countAndFlagsBits;
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v5 = (void *)swift_allocObject();
  id v5[2] = v1;
  void v5[3] = countAndFlagsBits;
  v5[4] = object;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A908CAA8(v4, (uint64_t)sub_1A9114938, (uint64_t)v5);

  swift_release();
}

Swift::Void __swiftcall Tracker.suspend()()
{
}

Swift::Void __swiftcall Tracker.resume()()
{
}

uint64_t sub_1A910B97C(void (*a1)(void))
{
  uint64_t result = MEMORY[0x1AD0EEDF0](v1 + 64);
  if (result)
  {
    a1(*(void *)(result + 56));
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t Tracker.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Tracker.parentTracker.getter()
{
  return swift_retain();
}

uint64_t sub_1A910BA10()
{
  sub_1A9114A44();

  return swift_retain();
}

uint64_t sub_1A910BA38(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v42 = a6;
  uint64_t v41 = a5;
  uint64_t v43 = (void *)a3;
  unint64_t v44 = a4;
  uint64_t v40 = sub_1A916AC90();
  uint64_t v39 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A90934F0(0, &qword_1EB689398, type metadata accessor for Tracker.Timer, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = type metadata accessor for SessionObserverChange();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1A916AE70();
  uint64_t v17 = *(void *)(v16 - 8);
  double v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (uint64_t *)((char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v21 = *(void **)(*(void *)(a2 + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v20 = v21;
  (*(void (**)(void *, void, uint64_t, double))(v17 + 104))(v20, *MEMORY[0x1E4FBCBF0], v16, v18);
  id v22 = v21;
  LOBYTE(v21) = sub_1A916AE90();
  (*(void (**)(void *, uint64_t))(v17 + 8))(v20, v16);
  if ((v21 & 1) == 0)
  {
    __break(1u);
    JUMPOUT(0x1A910BFBCLL);
  }
  sub_1A9098C68(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for SessionObserverChange);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      swift_release();
      sub_1A916AC80();
      memset(v45, 0, sizeof(v45));
      int v33 = *(char **)(a2 + 80);
      v46[2] = v41;
      uint64_t restarted = v42;
      uint64_t v35 = v43;
      unint64_t v34 = v44;
      uint64_t v48 = (_UNKNOWN **)a2;
      uint64_t v49 = (uint64_t)v43;
      unint64_t v50 = v44;
      char v51 = 1;
      id v52 = v9;
      uint64_t v53 = 0;
      uint64_t v54 = 0;
      uint64_t v55 = v45;
      uint64_t v56 = 0;
      uint64_t v57 = 0;
      sub_1A9096610(v33, (void (*)(uint64_t))sub_1A909A938, (uint64_t)v46, (uint64_t)v45);
      sub_1A908A198((uint64_t)v45, (unint64_t *)&qword_1EB68A928, MEMORY[0x1E4FBC840] + 8);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v40);
      uint64_t v36 = sub_1A9091A20((uint64_t)v35, v34);
      uint64_t v38 = v37;
      uint64_t restarted = type metadata accessor for Tracker.RestartTimer();
      uint64_t v48 = &off_1EFFA07C8;
      v46[0] = v35;
      v46[1] = v34;
      swift_beginAccess();
      sub_1A90F0DEC(v35, v34);
      sub_1A91085FC((uint64_t)v46, v36, v38);
      uint64_t result = swift_endAccess();
      break;
    case 2:
      uint64_t result = sub_1A9098AF0((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for SessionObserverChange);
      break;
    case 3:
      return result;
    default:
      swift_release();
      uint64_t v25 = (uint64_t)v43;
      unint64_t v24 = v44;
      uint64_t v26 = v41;
      uint64_t v27 = sub_1A9091A20((uint64_t)v43, v44);
      uint64_t v29 = v28;
      swift_beginAccess();
      sub_1A914CCBC(v27, v29, (uint64_t)v12);
      sub_1A9093480((uint64_t)v12, &qword_1EB689398, type metadata accessor for Tracker.Timer);
      swift_endAccess();
      swift_bridgeObjectRelease();
      uint64_t v30 = sub_1A9091A20(v25, v24);
      uint64_t v32 = v31;
      swift_beginAccess();
      sub_1A914CB68(v30, v32, (uint64_t)v46);
      sub_1A908EEF4((uint64_t)v46, &qword_1EB6887E8, &qword_1EB6897A0, (uint64_t)&protocol descriptor for RestartTimerType);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_1A916AC80();
      sub_1A908A498(v25, v24, (uint64_t)v9, 1, v26);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v9, v40);
      break;
  }
  return result;
}

uint64_t sub_1A910BFCC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12 = *(char **)(v11 + 80);
  _OWORD v14[2] = a10;
  v14[3] = a11;
  id v14[5] = a1;
  void v14[6] = a2;
  char v15 = a3;
  uint64_t v16 = a4;
  uint64_t v17 = a5;
  uint64_t v18 = a6;
  uint64_t v19 = a7;
  uint64_t v20 = a8;
  uint64_t v21 = a9;
  return sub_1A9096610(v12, (void (*)(uint64_t))sub_1A909A938, (uint64_t)v14, (uint64_t)v12);
}

uint64_t sub_1A910C054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A910BA38(a1, a2, *(void *)v3, *(void *)(v3 + 8), *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t Tracker.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A90A43B4(v0 + 64);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_1A9098AF0(v0 + OBJC_IVAR____TtC12AppAnalytics7Tracker_diagnosticsConsentProvider, type metadata accessor for DiagnosticsConsentProvider);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC12AppAnalytics7Tracker_summaryEventManager);
  swift_release();
  uint64_t v1 = *(void *)(v0 + 136);
  *(void *)(v0 + 136) = 0;
  if (v1)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native()) {
        break;
      }
      uint64_t v2 = *(void *)(v1 + 136);
      swift_retain();
      swift_release();
      uint64_t v1 = v2;
    }
    while (v2);
  }
  swift_release();
  return v0;
}

uint64_t Tracker.__deallocating_deinit()
{
  Tracker.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t Tracker.onWillSubmit<A>(_:block:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)(v3 + 168);
  swift_beginAccess();
  uint64_t v8 = *(void **)(v3 + 168);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v3 + 168) = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v8 = sub_1A90C3304(0, v8[2] + 1, 1, v8);
    *uint64_t v7 = v8;
  }
  unint64_t v11 = v8[2];
  unint64_t v10 = v8[3];
  if (v11 >= v10 >> 1)
  {
    uint64_t v8 = sub_1A90C3304((void *)(v10 > 1), v11 + 1, 1, v8);
    *uint64_t v7 = v8;
  }
  long long v8[2] = v11 + 1;
  uint64_t v12 = &v8[3 * v11];
  v12[4] = a1;
  v12[5] = a2;
  v12[6] = a3;
  swift_endAccess();
  return swift_retain();
}

uint64_t sub_1A910C2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  if (objc_msgSend(self, sel_isMainThread))
  {
    return sub_1A910C4C8(a1, v4, a2, a3, a4);
  }
  else
  {
    sub_1A90A601C();
    unint64_t v11 = sub_1A916B440();
    uint64_t v12 = (void *)swift_allocObject();
    long long v12[2] = a3;
    uint64_t v12[3] = a4;
    v12[4] = a1;
    v12[5] = v5;
    v12[6] = a2;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_1A9116D84;
    *(void *)(v13 + 24) = v12;
    v16[4] = sub_1A90CB324;
    v16[5] = v13;
    v16[0] = MEMORY[0x1E4F143A8];
    v16[1] = 1107296256;
    void v16[2] = sub_1A910C5B0;
    v16[3] = &block_descriptor_7;
    uint64_t v14 = _Block_copy(v16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v11, v14);

    _Block_release(v14);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1A910C4C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = swift_beginAccess();
  uint64_t v11 = *(void *)(a2 + 168);
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = v11 + 48;
    do
    {
      if (*(void *)(v13 - 16) == a1)
      {
        uint64_t v14 = *(void (**)(uint64_t))(v13 - 8);
        swift_retain();
        v14(a3);
        swift_release();
      }
      v13 += 24;
      --v12;
    }
    while (v12);
    uint64_t result = swift_bridgeObjectRelease();
  }
  if (*(void *)(a2 + 136)) {
    return sub_1A910C2DC(a1, a3, a4, a5);
  }
  return result;
}

uint64_t sub_1A910C5B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t Tracker.time<A>(_:submitAndRestartWithSession:)(void *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1A916AC90();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = *(void *)(v4 + 96);
  swift_retain();
  sub_1A916AC80();
  sub_1A910AC38(a1, v13, a2, (uint64_t)v12, a3, a4);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t Tracker.explicitTime<A>(_:startTime:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v9 = *(void *)(v4 + 96);
  swift_retain();
  sub_1A910AC38(a1, v9, 0, a2, a3, a4);

  return swift_release();
}

uint64_t Tracker.submit<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = a2;
  v7[3] = a3;
  void v7[4] = a1;
  uint64_t v8 = *(void *)(v3 + 80);
  unint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = v3;
  v9[3] = sub_1A9114A70;
  v9[4] = v7;
  swift_retain();
  swift_retain();
  sub_1A908CAA8(v8, (uint64_t)sub_1A9103A40, (uint64_t)v9);
  swift_release();

  return swift_release();
}

uint64_t AccessTracker.submit<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = (void *)(result + OBJC_IVAR____TtC12AppAnalytics7Tracker_summaryEventManager);
    uint64_t v9 = v8[3];
    uint64_t v10 = v8[4];
    __swift_project_boxed_opaque_existential_1(v8, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, v3, a2, a3, v9, v10);
    return swift_release();
  }
  return result;
}

uint64_t Tracker.submit<A>(_:onlyIfTimed:completion:)(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v19 = a5;
  uint64_t v12 = sub_1A916AC90();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v16 = *(void *)(v6 + 96);
  memset(v20, 0, sizeof(v20));
  swift_retain();
  sub_1A916AC80();
  sub_1A910ADD4(a1, v16, a2, (uint64_t)v15, (uint64_t)v20, a3, a4, v19, a6);
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return sub_1A908A198((uint64_t)v20, (unint64_t *)&qword_1EB68A928, MEMORY[0x1E4FBC840] + 8);
}

uint64_t Tracker.explicitSubmit<A>(_:submitTime:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v13 = *(void *)(v6 + 96);
  memset(v15, 0, sizeof(v15));
  swift_retain();
  sub_1A910ADD4(a1, v13, 0, a2, (uint64_t)v15, a3, a4, a5, a6);
  swift_release();
  return sub_1A908A198((uint64_t)v15, (unint64_t *)&qword_1EB68A928, MEMORY[0x1E4FBC840] + 8);
}

id Tracker.delayedSubmit<A>(_:onlyIfTimed:completion:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v26 = a1;
  uint64_t v27 = a6;
  uint64_t v25 = a5;
  int v28 = a2;
  uint64_t v8 = sub_1A916AC90();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v25 - v13;
  sub_1A916AC80();
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
  unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = v27;
  *(void *)(v17 + 16) = v25;
  *(void *)(v17 + 24) = v18;
  *(void *)(v17 + 32) = v15;
  *(void *)(v17 + 40) = a3;
  uint64_t v19 = v26;
  *(void *)(v17 + 48) = a4;
  *(void *)(v17 + 56) = v19;
  *(unsigned char *)(v17 + 64) = v28;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, v11, v8);
  uint64_t v20 = (objc_class *)type metadata accessor for DelayedToken();
  uint64_t v21 = objc_allocWithZone(v20);
  v21[OBJC_IVAR___AADelayedToken_sealed] = 0;
  id v22 = (uint64_t (**)())&v21[OBJC_IVAR___AADelayedToken_block];
  *id v22 = sub_1A9114BCC;
  v22[1] = (uint64_t (*)())v17;
  swift_retain();
  sub_1A90A0418(a3);
  v29.receiver = v21;
  v29.super_class = v20;
  id v23 = objc_msgSendSuper2(&v29, sel_init);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  swift_release();
  return v23;
}

uint64_t sub_1A910CD4C(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, void *a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v23 = a6;
  uint64_t v14 = type metadata accessor for EventSubmitResult();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (uint64_t *)((char *)&v22 - v16);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    unint64_t v19 = *(void *)(result + 96);
    memset(v24, 0, sizeof(v24));
    swift_retain();
    sub_1A910ADD4(a4, v19, a5 & 1, v23, (uint64_t)v24, (uint64_t)a2, a3, a7, a8);
    swift_release();
    swift_release();
    return sub_1A908A198((uint64_t)v24, (unint64_t *)&qword_1EB68A928, MEMORY[0x1E4FBC840] + 8);
  }
  else if (a2)
  {
    sub_1A90F0788();
    uint64_t v20 = swift_allocError();
    *uint64_t v21 = xmmword_1A9170030;
    *uint64_t v17 = v20;
    swift_storeEnumTagMultiPayload();
    a2(v17);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v15 + 8))(v17, v14);
  }
  return result;
}

id sub_1A910CF34(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = v9;
  id v82 = a1;
  uint64_t v83 = a8;
  uint64_t v76 = a4;
  uint64_t v77 = a7;
  unint64_t v80 = a2;
  uint64_t v81 = a6;
  unint64_t v71 = a5;
  uint64_t v75 = a3;
  uint64_t v78 = a9;
  uint64_t v11 = type metadata accessor for EventSubmitResult();
  uint64_t v73 = *(void *)(v11 - 8);
  uint64_t v74 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v72 = (char *)&v66 - v12;
  sub_1A90934F0(0, &qword_1EB687A98, (uint64_t (*)(uint64_t))type metadata accessor for TimedData, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v79 = (char *)&v66 - v14;
  uint64_t v15 = sub_1A916ACC0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for EventData();
  uint64_t v20 = (int *)(v19 - 8);
  uint64_t v70 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v70 + 64);
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  id v69 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  unint64_t v24 = (uint64_t *)((char *)&v66 - v23);
  sub_1A916ACB0();
  uint64_t v25 = sub_1A916ACA0();
  uint64_t v27 = v26;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  sub_1A916AC80();
  uint64_t v84 = 47;
  unint64_t v85 = 0xE100000000000000;
  uint64_t v86 = Tracker.path.getter();
  sub_1A909B78C(0, (unint64_t *)&qword_1EB688C10, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1A909384C();
  sub_1A916AF40();
  uint64_t v28 = v78;
  swift_bridgeObjectRelease();
  sub_1A916B050();
  swift_bridgeObjectRelease();
  uint64_t v29 = v84;
  unint64_t v30 = v85;
  *unint64_t v24 = v25;
  v24[1] = v27;
  uint64_t v31 = (uint64_t *)((char *)v24 + v20[8]);
  *uint64_t v31 = v29;
  v31[1] = v30;
  uint64_t v32 = (uint64_t *)((char *)v24 + v20[9]);
  *uint64_t v32 = 0x6F69737365536F6ELL;
  v32[1] = 0xE90000000000006ELL;
  *(_OWORD *)((char *)v24 + v20[10]) = xmmword_1A9170060;
  unint64_t v34 = v79;
  unint64_t v33 = v80;
  unint64_t v35 = (unint64_t)v82;
  uint64_t v36 = v83;
  uint64_t v37 = v10;
  sub_1A9091378((uint64_t)v82, v80, (uint64_t)v24, v83, v28, v79);
  type metadata accessor for Sequence(0);
  uint64_t v38 = swift_allocBox();
  sub_1A9094018(v35, v33, (uint64_t)v24, (uint64_t)v34, v75, v76, v36, v28, v39);
  uint64_t v40 = v21;
  uint64_t v41 = (uint64_t)v69;
  uint64_t v76 = v38;
  uint64_t v43 = v70;
  uint64_t v42 = v71;
  unint64_t v68 = sub_1A9093D08(v83, v28);
  unint64_t v67 = v44;
  uint64_t v73 = v45;
  LODWORD(v72) = v46;
  uint64_t v47 = swift_allocObject();
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FBA8A8]), sel_init);
  uint64_t v74 = (uint64_t)result;
  uint64_t v75 = v47;
  *(void *)(v47 + 16) = result;
  if (result)
  {
    type metadata accessor for AccessTracker();
    uint64_t v49 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    uint64_t v66 = v49;
    *(void *)(v49 + 24) = 0;
    *(void *)(v49 + 32) = 0;
    uint64_t v50 = swift_allocObject();
    swift_weakInit();
    sub_1A9098C68((uint64_t)v24, v41, (uint64_t (*)(void))type metadata accessor for EventData);
    sub_1A90937D8(v42, (uint64_t)&v84, (uint64_t)&qword_1EB68A928, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1A909B78C);
    unint64_t v51 = (*(unsigned __int8 *)(v43 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    unint64_t v52 = (v40 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v53 = (v52 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v71 = (v53 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v54 = (v53 + 39) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v55 = (void *)swift_allocObject();
    uint64_t v56 = v78;
    id v55[2] = v83;
    v55[3] = v56;
    uint64_t v57 = v81;
    v55[4] = v50;
    void v55[5] = v57;
    id v58 = v82;
    v55[6] = v77;
    v55[7] = v58;
    uint64_t v59 = (uint64_t)v55 + v51;
    unint64_t v60 = v80;
    v55[8] = v80;
    sub_1A909540C(v41, v59, (uint64_t (*)(void))type metadata accessor for EventData);
    *(void *)((char *)v55 + v52) = v76;
    long long v61 = (void *)((char *)v55 + v53);
    unint64_t v62 = v67;
    *long long v61 = v68;
    v61[1] = v62;
    uint64_t v63 = (char *)v55 + v71;
    *(void *)uint64_t v63 = v73;
    v63[8] = v72 & 1;
    sub_1A909374C((uint64_t)&v84, (uint64_t)v55 + v54);
    *(void *)((char *)v55 + ((v54 + 39) & 0xFFFFFFFFFFFFFFF8)) = v75;
    type metadata accessor for SessionObserver();
    uint64_t v64 = (void *)swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    v64[3] = v66;
    v64[4] = sub_1A9116510;
    v64[5] = v55;
    uint64_t v65 = MEMORY[0x1AD0EEDF0](v37 + 64);
    sub_1A90A0418(v81);
    sub_1A90F0DEC(v82, v60);
    swift_retain();
    swift_retain();
    if (v65)
    {
      sub_1A90D3EF0();
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();
    }
    sub_1A9093480((uint64_t)v79, &qword_1EB687A98, (uint64_t (*)(uint64_t))type metadata accessor for TimedData);
    sub_1A9098AF0((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for EventData);
    swift_release();
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1A910D85C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, char *a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v165 = a8;
  unint64_t v177 = a7;
  long long v172 = a6;
  uint64_t v173 = a5;
  uint64_t v183 = a2;
  uint64_t v176 = type metadata accessor for EventSubmitResult();
  uint64_t v175 = *(void *)(v176 - 8);
  MEMORY[0x1F4188790](v176);
  uint64_t v174 = (uint64_t *)((char *)&v139 - v19);
  uint64_t v178 = a16;
  uint64_t v179 = (void *)a17;
  uint64_t v160 = type metadata accessor for ProcessEvent();
  uint64_t v159 = *(void *)(v160 - 8);
  MEMORY[0x1F4188790](v160);
  uint64_t v162 = (uint64_t *)((char *)&v139 - v20);
  uint64_t v164 = type metadata accessor for Sequence(0);
  MEMORY[0x1F4188790](v164);
  uint64_t v163 = (uint64_t)&v139 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = type metadata accessor for TimedData();
  MEMORY[0x1F4188790](v168);
  uint64_t v181 = (uint64_t)&v139 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = sub_1A916AC90();
  uint64_t v167 = *(void *)(v169 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v169);
  uint64_t v166 = (char *)&v139 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v170 = (char *)&v139 - v26;
  MEMORY[0x1F4188790](v25);
  uint64_t v171 = (char *)&v139 - v27;
  uint64_t v28 = type metadata accessor for EventData();
  MEMORY[0x1F4188790](v28);
  long long v180 = (uint64_t *)((char *)&v139 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = type metadata accessor for SessionObserverChange();
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (uint64_t *)((char *)&v139 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v33 = sub_1A916AE70();
  uint64_t v34 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v36 = (uint64_t *)((char *)&v139 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = a3 + 16;
  uint64_t v38 = swift_projectBox();
  swift_beginAccess();
  uint64_t v161 = v37;
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v158 = (uint64_t *)v38;
    uint64_t v157 = a4;
    unint64_t v182 = Strong;
    uint64_t v40 = *(void **)(*(void *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *uint64_t v36 = v40;
    unsigned int v41 = *MEMORY[0x1E4FBCBF0];
    uint64_t v42 = *(void (**)(void *, void, unint64_t))(v34 + 104);
    v42(v36, *MEMORY[0x1E4FBCBF0], v33);
    id v43 = v40;
    LOBYTE(v40) = sub_1A916AE90();
    unint64_t v156 = *(void (**)(void *, unint64_t))(v34 + 8);
    v156(v36, v33);
    if (v40)
    {
      id v154 = v42;
      unsigned int v153 = v41;
      unint64_t v155 = v33;
      uint64_t v152 = a10;
      uint64_t v150 = a14;
      int v151 = a13 & 1;
      sub_1A9098C68(v183, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for SessionObserverChange);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          swift_release();
          goto LABEL_9;
        case 2u:
          swift_release();
          sub_1A9098AF0((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for SessionObserverChange);
          return;
        case 3u:
LABEL_9:
          swift_release();
          return;
        default:
          uint64_t v141 = a12;
          uint64_t v183 = *v32;
          if (MEMORY[0x1AD0EEDF0](v182 + 64))
          {
            sub_1A909F5B8(v172, v177, v178, (uint64_t)v179, (uint64_t)&v184);
            uint64_t v187 = v184;
            long long v149 = v185;
            long long v188 = v185;
            char v189 = v186;
            uint64_t v44 = sub_1A909DB08(&v187);
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v44 = 0;
          }
          uint64_t v49 = v165;
          uint64_t v50 = *(void *)(v165 + 8);
          uint64_t v148 = *(void *)v165;
          swift_bridgeObjectRetain();
          sub_1A916AC80();
          unint64_t v51 = (uint64_t *)(v49 + *(int *)(v28 + 24));
          uint64_t v52 = *v51;
          uint64_t v53 = v51[1];
          uint64_t v144 = v44;
          id v143 = (void **)(a15 + 16);
          uint64_t v140 = a11;
          uint64_t v145 = v34 + 104;
          uint64_t v165 = v52;
          *(void *)&long long v149 = v50;
          if (v44)
          {
            uint64_t v54 = *(void *)(v44 + 24);
            uint64_t v147 = *(void *)(v44 + 16);
            uint64_t v55 = OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier;
            uint64_t v56 = (uint64_t *)(v44 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier);
            uint64_t v57 = *(void *)(v44 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier + 8);
            if (v57)
            {
              uint64_t v146 = *v56;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v58 = v53;
              goto LABEL_18;
            }
            uint64_t v142 = v54;
            swift_bridgeObjectRetain();
            uint64_t v59 = v183;
          }
          else
          {
            uint64_t v59 = v183;
            uint64_t v60 = *(void *)(v183 + 24);
            uint64_t v147 = *(void *)(v183 + 16);
            uint64_t v142 = v60;
            swift_bridgeObjectRetain();
            uint64_t v55 = OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier;
          }
          uint64_t v57 = *(void *)(v59 + v55 + 8);
          uint64_t v146 = *(void *)(v59 + v55);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v58 = v53;
          uint64_t v54 = v142;
LABEL_18:
          long long v61 = v180;
          uint64_t v62 = v149;
          *long long v180 = v148;
          v61[1] = v62;
          uint64_t v63 = (char *)v61 + *(int *)(v28 + 20);
          uint64_t v64 = v167;
          unint64_t v33 = v169;
          (*(void (**)(char *, char *, uint64_t))(v167 + 32))(v63, v171, v169);
          uint64_t v65 = (void *)((char *)v61 + *(int *)(v28 + 24));
          *uint64_t v65 = v165;
          v65[1] = v58;
          uint64_t v66 = (void *)((char *)v61 + *(int *)(v28 + 28));
          *uint64_t v66 = v147;
          v66[1] = v54;
          unint64_t v67 = (void *)((char *)v61 + *(int *)(v28 + 32));
          *unint64_t v67 = v146;
          v67[1] = v57;
          uint64_t v28 = *(void *)(v64 + 16);
          unint64_t v68 = v170;
          ((void (*)(char *, uint64_t, unint64_t))v28)(v170, v183 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_startDate, v33);
          id v69 = v166;
          uint64_t v171 = v63;
          ((void (*)(char *, char *, unint64_t))v28)(v166, v63, v33);
          uint64_t v70 = v181;
          ((void (*)(uint64_t, char *, unint64_t))v28)(v181, v68, v33);
          uint64_t v71 = v168;
          uint64_t v72 = v70 + *(int *)(v168 + 20);
          uint64_t v165 = v28;
          ((void (*)(uint64_t, char *, unint64_t))v28)(v72, v69, v33);
          sub_1A916ABF0();
          double v74 = v73;
          uint64_t v75 = *(void (**)(char *, unint64_t))(v64 + 8);
          v75(v69, v33);
          v75(v68, v33);
          double v76 = v74 * 1000.0;
          if ((~COERCE__INT64(v74 * 1000.0) & 0x7FF0000000000000) == 0) {
            goto LABEL_50;
          }
          if (v76 <= -9.22337204e18) {
            goto LABEL_51;
          }
          uint64_t v167 = v64 + 16;
          if (v76 >= 9.22337204e18) {
            goto LABEL_52;
          }
          uint64_t v77 = v181;
          *(void *)(v181 + *(int *)(v71 + 24)) = (uint64_t)v76;
          uint64_t v78 = (uint64_t)v158;
          uint64_t v79 = swift_beginAccess();
          uint64_t v80 = *(int *)(v164 + 28);
          uint64_t v81 = *(void *)(v78 + v80);
          MEMORY[0x1F4188790](v79);
          long long v137 = v180;
          uint64_t v138 = v77;
          swift_bridgeObjectRetain();
          uint64_t v82 = sub_1A90DE640((void (*)(uint64_t))sub_1A90F0CA0, (uint64_t)v136, v81);
          swift_bridgeObjectRelease();
          *(void *)(v78 + v80) = v82;
          swift_endAccess();
          swift_bridgeObjectRelease();
          uint64_t v28 = (uint64_t)v172;
          unint64_t v33 = v177;
          if (sub_1A909F1BC((uint64_t)v172, v177, v178, (uint64_t)v179))
          {
            sub_1A9095B68((char *)&v184);
            if v184 == 2 || (uint64_t v78 = (uint64_t)v158, (v184))
            {
              if (qword_1EB688798 != -1) {
                goto LABEL_54;
              }
              goto LABEL_27;
            }
          }
          swift_beginAccess();
          uint64_t v83 = v78;
          uint64_t v84 = v163;
          sub_1A9098C68(v83, v163, type metadata accessor for Sequence);
          unint64_t v33 = v182;
          uint64_t v85 = *(void *)(v182 + 192);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v85 + 8))(&v184, ObjectType, v85);
          uint64_t v87 = v184;
          uint64_t v88 = *(char **)(v33 + 80);
          uint64_t v89 = *(void **)&v88[OBJC_IVAR___AAAccessQueue_queue];
          *uint64_t v36 = v89;
          unint64_t v90 = v155;
          v154(v36, v153, v155);
          id v91 = v89;
          uint64_t v28 = sub_1A916AE90();
          uint64_t v92 = ((uint64_t (*)(void *, unint64_t))v156)(v36, v90);
          if ((v28 & 1) == 0) {
            goto LABEL_53;
          }
          MEMORY[0x1F4188790](v92);
          long long v137 = (void *)v87;
          uint64_t v138 = v84;
          uint64_t v101 = (void *)sub_1A9095E10(v88, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1A909A9A8, (uint64_t)v136);
          swift_bridgeObjectRelease();
          sub_1A9098AF0(v84, type metadata accessor for Sequence);
          if (v101)
          {
            id v102 = v158;
            swift_beginAccess();
            uint64_t v104 = *v102;
            uint64_t v103 = v102[1];
            uint64_t v105 = v140;
            uint64_t v106 = (uint64_t)v170;
            ((void (*)(char *, char *, uint64_t))v165)(v170, v171, v169);
            sub_1A90937D8(v150, (uint64_t)&v184, (uint64_t)&qword_1EB68A928, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1A909B78C);
            long long v137 = v179;
            v136[1] = v178;
            uint64_t v107 = v162;
            ProcessEvent.init(name:json:nonJitteredEventTimestamp:groupName:groupContentType:userInfo:)(v104, v103, (uint64_t)v101, v106, v152, v105, v141, v151, v162, (uint64_t)&v184);
            swift_beginAccess();
            uint64_t v108 = swift_weakLoadStrong();
            unint64_t v109 = v157;
            if (v108)
            {
              uint64_t v110 = MEMORY[0x1AD0EEDF0](v108 + 64);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v111 = v101;
              swift_release();
              if (v110)
              {
                sub_1A9091044((uint64_t)v107, v178, (uint64_t)v179);
                swift_unknownObjectRelease();
              }
            }
            else
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v129 = v101;
            }
            if (v109)
            {
              uint64_t v130 = v159;
              uint64_t v131 = v174;
              uint64_t v132 = v160;
              (*(void (**)(uint64_t *, void *, uint64_t))(v159 + 16))(v174, v107, v160);
              uint64_t v133 = v176;
              swift_storeEnumTagMultiPayload();
              v109(v131);

              swift_release();
              swift_release();
              swift_release();
              (*(void (**)(uint64_t *, uint64_t))(v175 + 8))(v131, v133);
              (*(void (**)(void *, uint64_t))(v130 + 8))(v107, v132);
            }
            else
            {

              swift_release();
              swift_release();
              swift_release();
              (*(void (**)(void *, uint64_t))(v159 + 8))(v107, v160);
            }
            sub_1A9098AF0(v181, (uint64_t (*)(void))type metadata accessor for TimedData);
            sub_1A9098AF0((uint64_t)v180, (uint64_t (*)(void))type metadata accessor for EventData);
            unint64_t v134 = v143;
            swift_beginAccess();
            os_log_type_t v135 = *v134;
            *unint64_t v134 = 0;

            return;
          }
          uint64_t v120 = v157;
          if (qword_1EB68ACE8 != -1) {
            swift_once();
          }
          id v121 = (id)qword_1EB689AA0;
          sub_1A916B3A0();
          sub_1A916AD30();

          if (v120)
          {
            unint64_t v122 = v158;
            swift_beginAccess();
            uint64_t v124 = *v122;
            uint64_t v123 = v122[1];
            sub_1A90F0864();
            uint64_t v125 = swift_allocError();
            uint64_t *v126 = v124;
            v126[1] = v123;
            uint64_t v127 = v174;
            uint64_t *v174 = v125;
            uint64_t v128 = v176;
            swift_storeEnumTagMultiPayload();
            swift_bridgeObjectRetain();
            v120(v127);
            swift_release();
            swift_release();
            swift_release();
            (*(void (**)(uint64_t *, uint64_t))(v175 + 8))(v127, v128);
            goto LABEL_37;
          }
          break;
      }
    }
    else
    {
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      swift_once();
LABEL_27:
      uint64_t v93 = sub_1A916AD50();
      __swift_project_value_buffer(v93, (uint64_t)qword_1EB68D9C0);
      sub_1A90F0DEC((id)v28, v33);
      sub_1A90F0DEC((id)v28, v33);
      uint64_t v94 = sub_1A916AD40();
      os_log_type_t v95 = sub_1A916B3D0();
      if (os_log_type_enabled(v94, v95))
      {
        uint64_t v96 = (uint8_t *)swift_slowAlloc();
        uint64_t v97 = (void *)v28;
        uint64_t v98 = swift_slowAlloc();
        uint64_t v184 = v98;
        *(_DWORD *)uint64_t v96 = 136446210;
        uint64_t v99 = sub_1A9091A20((uint64_t)v97, v177);
        uint64_t v187 = sub_1A90DCF6C(v99, v100, &v184);
        unint64_t v33 = v177;
        sub_1A916B5A0();
        swift_bridgeObjectRelease();
        sub_1A909F588(v97, v33);
        sub_1A909F588(v97, v33);
        _os_log_impl(&dword_1A9088000, v94, v95, "Discarding D&U-only event %{public}s", v96, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AD0EECA0](v98, -1, -1);
        MEMORY[0x1AD0EECA0](v96, -1, -1);
      }
      else
      {
        sub_1A909F588((void *)v28, v33);
        sub_1A909F588((void *)v28, v33);
      }

      uint64_t v112 = v157;
      if (v157)
      {
        uint64_t v113 = sub_1A9091A20((uint64_t)v172, v33);
        uint64_t v115 = v114;
        sub_1A90F092C();
        uint64_t v116 = swift_allocError();
        *uint64_t v117 = v113;
        v117[1] = v115;
        uint64_t v118 = v174;
        uint64_t *v174 = v116;
        uint64_t v119 = v176;
        swift_storeEnumTagMultiPayload();
        v112(v118);
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(uint64_t *, uint64_t))(v175 + 8))(v118, v119);
LABEL_37:
        sub_1A9098AF0(v181, (uint64_t (*)(void))type metadata accessor for TimedData);
        sub_1A9098AF0((uint64_t)v180, (uint64_t (*)(void))type metadata accessor for EventData);
        return;
      }
    }
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_37;
  }
  if (a4)
  {
    sub_1A90F0788();
    uint64_t v45 = swift_allocError();
    *int v46 = xmmword_1A9170030;
    uint64_t v47 = v174;
    uint64_t *v174 = v45;
    uint64_t v48 = v176;
    swift_storeEnumTagMultiPayload();
    a4(v47);
    (*(void (**)(uint64_t *, uint64_t))(v175 + 8))(v47, v48);
  }
}

uint64_t Tracker.register<A>(_:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a1;
  v10[3] = a5;
  v10[4] = a2;
  v10[5] = a3;
  swift_retain();
  sub_1A910B020(0, 0, (uint64_t)sub_1A9114C8C, (uint64_t)v10, a4, a5);

  return swift_release();
}

{
  void *v10;
  void *v11;
  uint64_t vars8;

  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a4;
  v10[3] = a5;
  v10[4] = a2;
  v10[5] = a3;
  uint64_t v11 = (void *)swift_allocObject();
  long long v11[2] = a1;
  v11[3] = a5;
  void v11[4] = sub_1A9114C98;
  v11[5] = v10;
  swift_retain();
  sub_1A910B020(0, 0, (uint64_t)sub_1A9117164, (uint64_t)v11, a4, a5);

  return swift_release();
}

uint64_t sub_1A910F094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, uint64_t, double)@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12 = sub_1A916B540();
  double v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v19 - v14;
  a3(a1, a2, v13);
  uint64_t v16 = *(void *)(a4 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a4);
  if (result == 1)
  {
    *(void *)(a6 + 32) = 0;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
  }
  else
  {
    *(void *)(a6 + 24) = a4;
    *(void *)(a6 + 32) = a5;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a6);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v16 + 32))(boxed_opaque_existential_1, v15, a4);
  }
  return result;
}

uint64_t sub_1A910F1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10 = sub_1A9108938(a2, a3, a6, a7);
  uint64_t v12 = v11;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = 0x8000000000000000;
  sub_1A90C42F8(a4, a5, v10, v12, isUniquelyReferenced_nonNull_native);
  *(void *)(a1 + 128) = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t Tracker.pop<A>(type:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A910B0F4(0, 0, a2, a3);
}

uint64_t sub_1A910F2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1A916B540();
  uint64_t v28 = *(void *)(v9 - 8);
  uint64_t v29 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v28 - v10;
  uint64_t v12 = sub_1A916AE70();
  uint64_t v13 = *(void *)(v12 - 8);
  double v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (uint64_t *)((char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *(void **)(*(void *)(v4 + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t, double))(v13 + 104))(v16, *MEMORY[0x1E4FBCBF0], v12, v14);
  id v18 = v17;
  LOBYTE(v17) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v13 + 8))(v16, v12);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v20 = sub_1A9108938(a1, a2, a3, a4);
  uint64_t v22 = v21;
  swift_beginAccess();
  uint64_t v23 = *(void *)(v4 + 120);
  if (!*(void *)(v23 + 16))
  {
    uint64_t v32 = 0;
    long long v30 = 0u;
    long long v31 = 0u;
LABEL_11:
    swift_bridgeObjectRelease();
    return sub_1A908EEF4((uint64_t)&v30, (unint64_t *)&qword_1EB6897B0, (unint64_t *)&qword_1EB6897A8, (uint64_t)&protocol descriptor for DataEventStackType);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v24 = sub_1A90A1D98(v20, v22);
  if (v25)
  {
    sub_1A90A0DC8(*(void *)(v23 + 56) + 40 * v24, (uint64_t)&v30);
  }
  else
  {
    uint64_t v32 = 0;
    long long v30 = 0u;
    long long v31 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v31 + 1)) {
    goto LABEL_11;
  }
  sub_1A908E870(0, (unint64_t *)&qword_1EB6897A8);
  uint64_t v26 = type metadata accessor for DataEventStack();
  if ((swift_dynamicCast() & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v27 = sub_1A90F475C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v27)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  sub_1A90F4A04(v26, (uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v29);
  *((void *)&v31 + 1) = v26;
  uint64_t v32 = &off_1EFF9E8F0;
  long long v30 = v33;
  *(void *)&long long v31 = v34;
  swift_beginAccess();
  sub_1A908D668((uint64_t)&v30, v20, v22);
  return swift_endAccess();
}

uint64_t Tracker.clearStack<A>(of:includeParentTrackers:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_1A910B1AC(0, 0, a2, a3, a4);
}

uint64_t sub_1A910F67C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = sub_1A916AE70();
  uint64_t v13 = *(void *)(v12 - 8);
  double v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (uint64_t *)((char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *(void **)(v6[10] + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t, double))(v13 + 104))(v16, *MEMORY[0x1E4FBCBF0], v12, v14);
  id v18 = v17;
  LOBYTE(v17) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v13 + 8))(v16, v12);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  int v29 = a3;
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v20 = sub_1A9108938(a1, a2, a4, a5);
  uint64_t v22 = v21;
  swift_beginAccess();
  uint64_t v23 = v6[15];
  if (!*(void *)(v23 + 16))
  {
    uint64_t v34 = 0;
    long long v32 = 0u;
    long long v33 = 0u;
LABEL_11:
    swift_bridgeObjectRelease();
    sub_1A908EEF4((uint64_t)&v32, (unint64_t *)&qword_1EB6897B0, (unint64_t *)&qword_1EB6897A8, (uint64_t)&protocol descriptor for DataEventStackType);
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v24 = sub_1A90A1D98(v20, v22);
  if (v25)
  {
    sub_1A90A0DC8(*(void *)(v23 + 56) + 40 * v24, (uint64_t)&v32);
  }
  else
  {
    uint64_t v34 = 0;
    long long v32 = 0u;
    long long v33 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v33 + 1)) {
    goto LABEL_11;
  }
  sub_1A908E870(0, (unint64_t *)&qword_1EB6897A8);
  uint64_t v26 = type metadata accessor for DataEventStack();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v27 = sub_1A90F475C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v27)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_1A908EE40();
  *((void *)&v33 + 1) = v26;
  uint64_t v34 = &off_1EFF9E8F0;
  long long v32 = v35;
  *(void *)&long long v33 = v36;
  swift_beginAccess();
  sub_1A908D668((uint64_t)&v32, v20, v22);
  swift_endAccess();
LABEL_14:
  uint64_t result = v30;
  if (v29)
  {
    if (v6[17]) {
      return sub_1A910F67C(v30, v31, 1, a4, a5);
    }
  }
  return result;
}

uint64_t Tracker.copy<A>(type:from:traits:popIfMissing:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a5;
  *(void *)(v13 + 24) = a6;
  *(void *)(v13 + 32) = a1;
  *(unsigned char *)(v13 + 40) = a4;
  *(void *)(v13 + 48) = a3;
  uint64_t v14 = *(void *)(v6 + 80);
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = v6;
  v15[3] = a2;
  v15[4] = sub_1A9114CDC;
  v15[5] = v13;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A908CAA8(v14, (uint64_t)sub_1A9114D38, (uint64_t)v15);
  swift_release();

  return swift_release();
}

uint64_t sub_1A910FAEC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v20 = a5;
  uint64_t v10 = sub_1A916B540();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v19 - v12;
  uint64_t v14 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  AccessTracker.peek<A>(_:)(a6, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, a6) == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if (a4) {
      return AccessTracker.pop<A>(type:)(result, a6, a7);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v13, a6);
    AccessTracker.push<A>(data:traits:file:line:)((uint64_t)v17, v20, 0xD00000000000004DLL, 0x80000001A91779E0, 919, a6, a7);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, a6);
  }
  return result;
}

uint64_t AccessTracker.pop<A>(type:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1A916AE70();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = *(void **)(*(void *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *uint64_t v8 = v10;
    (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBF0], v5);
    id v11 = v10;
    LOBYTE(v10) = sub_1A916AE90();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v6 + 8))(v8, v5);
    if (v10)
    {
      sub_1A910F2AC(0, 0, a2, a3);
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t AccessTracker.peek<A>(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1A916AE70();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = *(void **)(*(void *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *uint64_t v7 = v9;
    (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
    id v10 = v9;
    LOBYTE(v9) = sub_1A916AE90();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v7, v4);
    if (v9)
    {
      uint64_t v12 = sub_1A916BBB0();
      sub_1A909562C(v12, v13, 0, 0, 1, (uint64_t)v17);
      swift_bridgeObjectRelease();
      swift_release();
      sub_1A908EFCC(0, &qword_1EB6887D8, qword_1EB6892F8, (uint64_t)&protocol descriptor for DataEventType, MEMORY[0x1E4FBB718]);
      int v14 = swift_dynamicCast();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, v14 ^ 1u, 1, a1);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56);
    return v15(a2, 1, 1, a1);
  }
  return result;
}

void Tracker.actionSequence.getter(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC12AppAnalytics7Tracker_actionsLock);
  os_unfair_lock_lock_with_options();
  uint64_t v4 = *(void *)(v1 + 160);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_1A90A6268(v5);
  *a1 = v4;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
}

uint64_t Tracker.chain(name:identifier:dynamicDataIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = (void *)v6;
  uint64_t v31 = a3;
  uint64_t v32 = a5;
  uint64_t v30 = a1;
  uint64_t v11 = type metadata accessor for DiagnosticsConsentProvider(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v14 = *(void **)(v6 + 80);
  uint64_t v15 = *(void **)(v6 + 88);
  int v29 = *(unsigned __int8 *)(v6 + 176);
  uint64_t v16 = *(void *)(v6 + 96);
  uint64_t v17 = *(void *)(v6 + OBJC_IVAR____TtC12AppAnalytics7Tracker_actionsLock);
  id v28 = v14;
  id v27 = v15;
  swift_retain();
  os_unfair_lock_lock_with_options();
  uint64_t v18 = *(void *)(v6 + 160);
  swift_beginAccess();
  uint64_t v19 = v7[19];
  v33[0] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A90A6268(v19);
  uint64_t v20 = v33[0];
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 16));
  uint64_t v34 = v20;
  uint64_t v21 = v7[23];
  uint64_t v22 = v7[24];
  sub_1A9098C68((uint64_t)v7 + OBJC_IVAR____TtC12AppAnalytics7Tracker_diagnosticsConsentProvider, (uint64_t)v13, type metadata accessor for DiagnosticsConsentProvider);
  sub_1A90A0DC8((uint64_t)v7 + OBJC_IVAR____TtC12AppAnalytics7Tracker_summaryEventManager, (uint64_t)v33);
  type metadata accessor for Tracker(0);
  uint64_t v23 = swift_allocObject();
  uint64_t ObjectType = swift_getObjectType();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1A909D008(v30, a2, v28, v27, v29, v16, (uint64_t)v7, &v34, v31, a4, v32, a6, v21, (uint64_t)v13, (uint64_t)v33, v23, ObjectType, v22);
}

uint64_t sub_1A9110344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = (void *)v6;
  uint64_t v28 = a6;
  uint64_t v31 = a3;
  uint64_t v32 = a5;
  uint64_t v30 = a1;
  uint64_t v10 = type metadata accessor for DiagnosticsConsentProvider(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void **)(v6 + 80);
  int v14 = *(void **)(v6 + 88);
  int v29 = *(unsigned __int8 *)(v6 + 176);
  uint64_t v15 = *(void *)(v6 + 96);
  uint64_t v16 = *(void *)(v6 + OBJC_IVAR____TtC12AppAnalytics7Tracker_actionsLock);
  swift_bridgeObjectRetain();
  id v27 = v13;
  id v26 = v14;
  swift_retain();
  os_unfair_lock_lock_with_options();
  uint64_t v17 = *(void *)(v6 + 160);
  swift_beginAccess();
  uint64_t v18 = v7[19];
  v33[0] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A90A6268(v18);
  uint64_t v19 = v33[0];
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 16));
  uint64_t v34 = v19;
  uint64_t v20 = v7[23];
  uint64_t v21 = v7[24];
  sub_1A9098C68((uint64_t)v7 + OBJC_IVAR____TtC12AppAnalytics7Tracker_diagnosticsConsentProvider, (uint64_t)v12, type metadata accessor for DiagnosticsConsentProvider);
  sub_1A90A0DC8((uint64_t)v7 + OBJC_IVAR____TtC12AppAnalytics7Tracker_summaryEventManager, (uint64_t)v33);
  type metadata accessor for Tracker(0);
  uint64_t v22 = swift_allocObject();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v24 = v28;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return sub_1A909D008(v30, a2, v27, v26, v29, v15, (uint64_t)v7, &v34, v31, a4, v32, v24, v20, (uint64_t)v12, (uint64_t)v33, v22, ObjectType, v21);
}

uint64_t Tracker.hiddenChain(_:)(uint64_t a1, uint64_t a2)
{
  return sub_1A9110344(0, 0, a1, a2, 0, 0);
}

uint64_t Tracker.hiddenChain(_:dynamicDataIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A9110344(0, 0, a1, a2, a3, a4);
}

Swift::Void __swiftcall Tracker.clearDynamicDataIdentifier()()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_retain();
  sub_1A908CAA8(v1, (uint64_t)sub_1A9114D44, v0);

  swift_release();
}

uint64_t sub_1A91105F8(uint64_t a1, void **a2)
{
  sub_1A908EFCC(0, (unint64_t *)&qword_1EB68ACD8, (unint64_t *)&qword_1EB68A920, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = MEMORY[0x1E4FBB808];
  *(_OWORD *)(v4 + 16) = xmmword_1A916EF60;
  uint64_t v6 = MEMORY[0x1E4FBB868];
  *(void *)(v4 + 56) = v5;
  *(void *)(v4 + 64) = v6;
  *(void *)(v4 + 32) = a1;
  sub_1A916AFB0();
  if (*(void *)(a1 + 40))
  {
    sub_1A916B680();
    sub_1A916B780();
    sub_1A916B050();
    sub_1A916B050();
    swift_bridgeObjectRelease();
    sub_1A916B050();
    sub_1A916B050();
  }
  else
  {
    sub_1A916B780();
    sub_1A916B050();
    sub_1A916B050();
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = *a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v7 = sub_1A9093AE4(0, v7[2] + 1, 1, v7);
    *a2 = v7;
  }
  unint64_t v10 = v7[2];
  unint64_t v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    uint64_t v7 = sub_1A9093AE4((void *)(v9 > 1), v10 + 1, 1, v7);
    *a2 = v7;
  }
  _OWORD v7[2] = v10 + 1;
  uint64_t v11 = &v7[2 * v10];
  void v11[4] = 0;
  v11[5] = 0xE000000000000000;
  return 1;
}

id Tracker.bridgedTracker.getter()
{
  uint64_t v2 = v0[2];
  unint64_t v1 = v0[3];
  type metadata accessor for BridgedEventMirrorStore();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = MEMORY[0x1E4FBC868];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = (objc_class *)type metadata accessor for BridgedTracker();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  uint64_t v8 = 0x6E6564646968;
  if (v1) {
    uint64_t v8 = v2;
  }
  unint64_t v9 = 0xE600000000000000;
  if (v1) {
    unint64_t v9 = v1;
  }
  unint64_t v10 = (uint64_t *)&v7[OBJC_IVAR___AATracker_name];
  uint64_t *v10 = v8;
  v10[1] = v9;
  *(void *)&v7[OBJC_IVAR___AATracker_tracker] = v0;
  *(void *)&v7[OBJC_IVAR___AATracker_eventMirrorStore] = v3;
  uint64_t v11 = &v7[OBJC_IVAR___AATracker_identifier];
  *(void *)uint64_t v11 = v5;
  *((void *)v11 + 1) = v4;
  v13.receiver = v7;
  v13.super_class = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v13, sel_init);
}

uint64_t Tracker.snapshot(policy:)()
{
  return sub_1A916B450();
}

uint64_t sub_1A91109F8@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v78 = a2;
  uint64_t v4 = sub_1A916AE70();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v9 = *a1;
  uint64_t v79 = v2;
  unint64_t v10 = *(void **)(*(void *)(v2 + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v8 = v10;
  (*(void (**)(void *, void, uint64_t, double))(v5 + 104))(v8, *MEMORY[0x1E4FBCBF0], v4, v6);
  id v11 = v10;
  LOBYTE(v10) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v8, v4);
  if ((v10 & 1) == 0) {
    goto LABEL_77;
  }
  if (v9)
  {
    *(void *)&long long v96 = MEMORY[0x1E4FBC860];
    uint64_t v13 = v79;
    swift_retain();
    while (1)
    {
      int v14 = (void *)swift_retain();
      char v15 = sub_1A9111208(v14, &v96);
      swift_release();
      uint64_t v16 = *(void *)(v13 + 136);
      swift_retain();
      swift_release();
      if (!v16) {
        break;
      }
      uint64_t v13 = v16;
      if ((v15 & 1) == 0)
      {
        swift_release();
        break;
      }
    }
    uint64_t v17 = v96;
    uint64_t v18 = *(void *)(v79 + 96);
    sub_1A90934F0(0, &qword_1E97B1808, (uint64_t (*)(uint64_t))sub_1A90C5828, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Snapshot);
    uint64_t v19 = v78;
    *(void *)(v78 + 24) = v20;
    *(void *)(v19 + 32) = &off_1EFFA1098;
    *(unsigned char *)uint64_t v19 = 1;
    *(void *)(v19 + 8) = v17;
    *(void *)(v19 + 16) = v18;
    return swift_retain();
  }
  uint64_t v108 = MEMORY[0x1E4FBC870];
  uint64_t v87 = &v97;
  uint64_t v21 = (long long *)v107;
  uint64_t v22 = swift_retain();
  uint64_t v82 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v23 = v22;
  uint64_t v85 = (long long *)v107;
LABEL_9:
  uint64_t v24 = v23;
  swift_beginAccess();
  uint64_t v25 = *(void *)(v24 + 120);
  uint64_t v26 = *(void *)(v25 + 64);
  uint64_t v84 = v25 + 64;
  uint64_t v27 = 1 << *(unsigned char *)(v25 + 32);
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  else {
    uint64_t v28 = -1;
  }
  unint64_t v29 = v28 & v26;
  int64_t v86 = (unint64_t)(v27 + 63) >> 6;
  int64_t v80 = v86 - 1;
  uint64_t v81 = v24;
  swift_retain();
  uint64_t v88 = v25;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v89 = 0;
  uint64_t v30 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v29)
    {
      unint64_t v31 = __clz(__rbit64(v29));
      v29 &= v29 - 1;
      unint64_t v32 = v31 | (v89 << 6);
LABEL_17:
      uint64_t v33 = *(void *)(v88 + 56);
      uint64_t v34 = (void *)(*(void *)(v88 + 48) + 16 * v32);
      uint64_t v35 = v34[1];
      *(void *)&long long v96 = *v34;
      *((void *)&v96 + 1) = v35;
      sub_1A90A0DC8(v33 + 40 * v32, (uint64_t)v87);
      swift_bridgeObjectRetain();
      goto LABEL_36;
    }
    int64_t v36 = v89 + 1;
    if (__OFADD__(v89, 1))
    {
      __break(1u);
      goto LABEL_76;
    }
    if (v36 < v86)
    {
      unint64_t v37 = *(void *)(v84 + 8 * v36);
      if (v37) {
        goto LABEL_21;
      }
      int64_t v38 = v89 + 2;
      ++v89;
      if (v36 + 1 < v86)
      {
        unint64_t v37 = *(void *)(v84 + 8 * v38);
        if (v37) {
          goto LABEL_24;
        }
        int64_t v89 = v36 + 1;
        if (v36 + 2 < v86)
        {
          unint64_t v37 = *(void *)(v84 + 8 * (v36 + 2));
          if (v37)
          {
            v36 += 2;
            goto LABEL_21;
          }
          int64_t v38 = v36 + 3;
          int64_t v89 = v36 + 2;
          if (v36 + 3 < v86) {
            break;
          }
        }
      }
    }
LABEL_35:
    unint64_t v29 = 0;
    *(void *)&long long v99 = 0;
    long long v97 = 0u;
    long long v98 = 0u;
    long long v96 = 0u;
LABEL_36:
    sub_1A90A1678((uint64_t)&v96, (uint64_t)&v105, &qword_1EB6897F0, (unint64_t *)&qword_1EB6897E8, (unint64_t *)&qword_1EB6897A8);
    uint64_t v39 = v106;
    if (!v106)
    {
      swift_release();
      if (*(void *)(v81 + 24))
      {
        uint64_t v65 = *(void *)(v81 + 16);
        unint64_t v66 = *(void *)(v81 + 24);
      }
      else
      {
        unint64_t v66 = 0xE600000000000000;
        uint64_t v65 = 0x6E6564646968;
      }
      uint64_t v67 = v81;
      swift_beginAccess();
      uint64_t v68 = *(void *)(v67 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v82 = sub_1A90C3594(0, v82[2] + 1, 1, v82);
      }
      unint64_t v70 = v82[2];
      unint64_t v69 = v82[3];
      if (v70 >= v69 >> 1) {
        uint64_t v82 = sub_1A90C3594((void *)(v69 > 1), v70 + 1, 1, v82);
      }
      uint64_t v71 = v82;
      v82[2] = v70 + 1;
      uint64_t v72 = &v71[4 * v70];
      v72[4] = v65;
      v72[5] = v66;
      v72[6] = v30;
      v72[7] = v68;
      uint64_t v73 = v81;
      swift_release();
      uint64_t v74 = *(void *)(v73 + 136);
      swift_retain();
      swift_release();
      uint64_t v23 = v74;
      uint64_t v21 = v85;
      if (!v74)
      {
        uint64_t v75 = *(void *)(v79 + 96);
        sub_1A91168B8();
        uint64_t v76 = v78;
        *(void *)(v78 + 24) = v77;
        *(void *)(v76 + 32) = &off_1EFFA1098;
        *(unsigned char *)uint64_t v76 = 0;
        *(void *)(v76 + 8) = v82;
        *(void *)(v76 + 16) = v75;
        swift_retain();
        return swift_bridgeObjectRelease();
      }
      goto LABEL_9;
    }
    uint64_t v40 = v105;
    sub_1A908EC8C(v21, (uint64_t)v102);
    uint64_t v41 = v103;
    uint64_t v42 = v104;
    __swift_project_boxed_opaque_existential_1(v102, v103);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v42 + 24))(&v90, v41, v42);
    if (!*((void *)&v90 + 1))
    {
      swift_bridgeObjectRelease();
      sub_1A908A198((uint64_t)&v90, &qword_1EB689380, (uint64_t)&type metadata for AnyDataEventEntry);
      goto LABEL_14;
    }
    long long v98 = v92;
    long long v99 = v93;
    long long v100 = v94;
    long long v101 = v95;
    long long v96 = v90;
    long long v97 = v91;
    uint64_t v43 = v108;
    if (*(void *)(v108 + 16))
    {
      sub_1A916BAB0();
      swift_bridgeObjectRetain();
      sub_1A916B030();
      uint64_t v44 = sub_1A916BAD0();
      uint64_t v45 = -1 << *(unsigned char *)(v43 + 32);
      unint64_t v46 = v44 & ~v45;
      uint64_t v47 = v43 + 56;
      if ((*(void *)(v43 + 56 + ((v46 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v46))
      {
        uint64_t v48 = *(void *)(v43 + 48);
        uint64_t v49 = (void *)(v48 + 16 * v46);
        BOOL v50 = *v49 == v40 && v49[1] == v39;
        if (v50 || (sub_1A916B9E0() & 1) != 0)
        {
LABEL_51:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A90A0EAC((uint64_t)&v96);
          uint64_t v21 = v85;
          goto LABEL_14;
        }
        uint64_t v83 = ~v45;
        unint64_t v51 = (v46 + 1) & ~v45;
        if ((*(void *)(v47 + ((v51 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v51))
        {
          uint64_t v52 = (void *)(v48 + 16 * v51);
          BOOL v53 = *v52 == v40 && v52[1] == v39;
          if (v53 || (sub_1A916B9E0() & 1) != 0) {
            goto LABEL_51;
          }
          for (unint64_t i = v51 + 1; ; unint64_t i = v55 + 1)
          {
            unint64_t v55 = i & v83;
            if (((*(void *)(v47 + (((i & v83) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v83)) & 1) == 0) {
              break;
            }
            uint64_t v56 = (void *)(v48 + 16 * v55);
            BOOL v57 = *v56 == v40 && v56[1] == v39;
            if (v57 || (sub_1A916B9E0() & 1) != 0) {
              goto LABEL_51;
            }
          }
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v21 = v85;
    }
    sub_1A9106268((uint64_t)&v96, (uint64_t)&v90);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v30 = sub_1A90C344C(0, v30[2] + 1, 1, v30);
    }
    unint64_t v59 = v30[2];
    unint64_t v58 = v30[3];
    if (v59 >= v58 >> 1) {
      uint64_t v30 = sub_1A90C344C((void *)(v58 > 1), v59 + 1, 1, v30);
    }
    _OWORD v30[2] = v59 + 1;
    uint64_t v60 = &v30[12 * v59];
    long long v61 = v91;
    v60[2] = v90;
    v60[3] = v61;
    long long v62 = v92;
    long long v63 = v93;
    long long v64 = v95;
    v60[6] = v94;
    v60[7] = v64;
    v60[4] = v62;
    v60[5] = v63;
    sub_1A90B6A94((uint64_t *)&v90, v40, v39);
    sub_1A90A0EAC((uint64_t)&v96);
    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v102);
  }
  unint64_t v37 = *(void *)(v84 + 8 * v38);
  if (v37)
  {
LABEL_24:
    int64_t v36 = v38;
LABEL_21:
    unint64_t v29 = (v37 - 1) & v37;
    unint64_t v32 = __clz(__rbit64(v37)) + (v36 << 6);
    int64_t v89 = v36;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v36 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v36 >= v86)
    {
      int64_t v89 = v80;
      goto LABEL_35;
    }
    unint64_t v37 = *(void *)(v84 + 8 * v36);
    ++v38;
    if (v37) {
      goto LABEL_21;
    }
  }
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
  return result;
}

uint64_t sub_1A9111208(void *a1, void *a2)
{
  swift_beginAccess();
  uint64_t v42 = a1;
  uint64_t v5 = a1[15];
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v44 = v5 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  int64_t v45 = (unint64_t)(v7 + 63) >> 6;
  unint64_t v10 = (long long *)&v56;
  uint64_t v46 = a1[15];
  swift_bridgeObjectRetain();
  int64_t v48 = 0;
  uint64_t v47 = (void *)MEMORY[0x1E4FBC868];
  id v11 = &qword_1EB6897F0;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v48 << 6);
      goto LABEL_8;
    }
    int64_t v17 = v48 + 1;
    if (__OFADD__(v48, 1)) {
      goto LABEL_48;
    }
    if (v17 >= v45) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v44 + 8 * v17);
    if (v18) {
      goto LABEL_12;
    }
    int64_t v19 = v48 + 2;
    ++v48;
    if (v17 + 1 >= v45) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v44 + 8 * v19);
    if (v18) {
      goto LABEL_15;
    }
    int64_t v48 = v17 + 1;
    if (v17 + 2 >= v45) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v44 + 8 * (v17 + 2));
    if (v18)
    {
      v17 += 2;
LABEL_12:
      unint64_t v9 = (v18 - 1) & v18;
      unint64_t v13 = __clz(__rbit64(v18)) + (v17 << 6);
      int64_t v48 = v17;
LABEL_8:
      uint64_t v14 = *(void *)(v46 + 56);
      char v15 = (void *)(*(void *)(v46 + 48) + 16 * v13);
      uint64_t v16 = v15[1];
      *(void *)&long long v50 = *v15;
      *((void *)&v50 + 1) = v16;
      sub_1A90A0DC8(v14 + 40 * v13, (uint64_t)&v51);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    }
    int64_t v19 = v17 + 3;
    int64_t v48 = v17 + 2;
    if (v17 + 3 >= v45) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v44 + 8 * v19);
    if (v18)
    {
LABEL_15:
      int64_t v17 = v19;
      goto LABEL_12;
    }
    while (1)
    {
      int64_t v17 = v19 + 1;
      if (__OFADD__(v19, 1))
      {
        __break(1u);
        goto LABEL_52;
      }
      if (v17 >= v45) {
        break;
      }
      unint64_t v18 = *(void *)(v44 + 8 * v17);
      ++v19;
      if (v18) {
        goto LABEL_12;
      }
    }
    int64_t v48 = v45 - 1;
LABEL_26:
    unint64_t v9 = 0;
    uint64_t v53 = 0;
    long long v51 = 0u;
    long long v52 = 0u;
    long long v50 = 0u;
LABEL_27:
    sub_1A90A1678((uint64_t)&v50, (uint64_t)&v54, v11, (unint64_t *)&qword_1EB6897E8, (unint64_t *)&qword_1EB6897A8);
    uint64_t v20 = v55;
    if (!v55)
    {
      swift_release();
      if (v42[3])
      {
        id v11 = (unint64_t *)v42[2];
        uint64_t v3 = v42[3];
      }
      else
      {
        uint64_t v3 = 0xE600000000000000;
        id v11 = (unint64_t *)0x6E6564646968;
      }
      swift_beginAccess();
      a1 = (void *)v42[13];
      uint64_t v2 = (void *)*a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a2 = v2;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_44;
      }
      goto LABEL_50;
    }
    uint64_t v21 = v54;
    sub_1A908EC8C(v10, (uint64_t)&v50);
    a1 = (void *)*((void *)&v51 + 1);
    uint64_t v3 = v52;
    uint64_t v2 = __swift_project_boxed_opaque_existential_1(&v50, *((uint64_t *)&v51 + 1));
    if ((*(uint64_t (**)(void *, uint64_t))(v3 + 8))(a1, v3))
    {
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    uint64_t v22 = v11;
    id v11 = (unint64_t *)v10;
    a1 = (void *)*((void *)&v51 + 1);
    uint64_t v23 = v52;
    __swift_project_boxed_opaque_existential_1(&v50, *((uint64_t *)&v51 + 1));
    uint64_t v24 = (*(uint64_t (**)(void *, uint64_t))(v23 + 16))(a1, v23);
    uint64_t v2 = v47;
    uint64_t v3 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v49 = v47;
    unint64_t v26 = sub_1A90A1D98(v21, v20);
    uint64_t v27 = v47[2];
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      break;
    }
    a1 = v25;
    if (v47[3] < v29)
    {
      sub_1A90BF114(v29, v3);
      uint64_t v2 = v49;
      unint64_t v30 = sub_1A90A1D98(v21, v20);
      if ((a1 & 1) == (v31 & 1))
      {
        unint64_t v26 = v30;
        goto LABEL_35;
      }
LABEL_52:
      sub_1A916BA50();
      __break(1u);
      JUMPOUT(0x1A9111714);
    }
    if ((v3 & 1) == 0)
    {
      uint64_t v2 = &v49;
      sub_1A90C07B4();
    }
LABEL_35:
    unint64_t v32 = v49;
    uint64_t v47 = v49;
    if (a1)
    {
      a1 = (void *)v49[7];
      uint64_t v2 = (void *)(8 * v26);
      swift_bridgeObjectRelease();
      a1[v26] = v24;
    }
    else
    {
      v49[(v26 >> 6) + 8] |= 1 << v26;
      uint64_t v33 = (uint64_t *)(v32[6] + 16 * v26);
      *uint64_t v33 = v21;
      v33[1] = v20;
      *(void *)(v32[7] + 8 * v26) = v24;
      uint64_t v34 = v32[2];
      BOOL v35 = __OFADD__(v34, 1);
      uint64_t v36 = v34 + 1;
      if (v35) {
        goto LABEL_49;
      }
      _OWORD v32[2] = v36;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v10 = (long long *)v11;
    id v11 = v22;
LABEL_5:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v50);
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  uint64_t v2 = sub_1A90C36D8(0, v2[2] + 1, 1, v2);
  *a2 = v2;
LABEL_44:
  unint64_t v39 = v2[2];
  unint64_t v38 = v2[3];
  if (v39 >= v38 >> 1)
  {
    uint64_t v2 = sub_1A90C36D8((void *)(v38 > 1), v39 + 1, 1, v2);
    *a2 = v2;
  }
  v2[2] = v39 + 1;
  uint64_t v40 = &v2[4 * v39];
  v40[4] = v11;
  void v40[5] = v3;
  v40[6] = v47;
  v40[7] = a1;
  return 1;
}

uint64_t sub_1A9111724(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v6 = a1 + OBJC_IVAR____TtC12AppAnalytics7Tracker_diagnosticsConsentProvider;
  uint64_t v7 = *(char **)(a1 + 80);
  swift_retain();
  swift_retain();
  return sub_1A91600D8(v7, v6, a1, a2, a3);
}

uint64_t sub_1A911179C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v10 = a1 + OBJC_IVAR____TtC12AppAnalytics7Tracker_diagnosticsConsentProvider;
  id v11 = *(char **)(a1 + 80);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1A91600F0(v11, v10, a1, a2, a3, a4, a5);
}

uint64_t sub_1A9111834(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t v8 = a1 + OBJC_IVAR____TtC12AppAnalytics7Tracker_diagnosticsConsentProvider;
  unint64_t v9 = *(char **)(a1 + 80);
  swift_retain();
  swift_retain();
  swift_retain();
  return sub_1A91608A4(v9, v8, a1, a2, a3, a4);
}

uint64_t sub_1A91118BC(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A916AE70();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = MEMORY[0x1F4188790](v9);
  unint64_t v13 = (void *)((char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = MEMORY[0x1AD0EEDF0](a1 + 64, v11);
  if (v14)
  {
    uint64_t v15 = v14;
    v30[0] = a3;
    uint64_t v16 = a2;
    int64_t v17 = *(void **)(*(void *)(v14 + 48) + OBJC_IVAR___AAAccessQueue_queue);
    *unint64_t v13 = v17;
    (*(void (**)(void *, void, uint64_t))(v10 + 104))(v13, *MEMORY[0x1E4FBCBF0], v9);
    id v18 = v17;
    LOBYTE(v17) = sub_1A916AE90();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v10 + 8))(v13, v9);
    if ((v17 & 1) == 0)
    {
      __break(1u);
      goto LABEL_14;
    }
    uint64_t v20 = v15 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
    swift_beginAccess();
    sub_1A9098C68(v20, (uint64_t)v8, type metadata accessor for SessionManager.SessionState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload)
    {
      swift_release();
      swift_unknownObjectRelease();
      uint64_t v27 = a1 + OBJC_IVAR____TtC12AppAnalytics7Tracker_diagnosticsConsentProvider;
      BOOL v28 = *(char **)(a1 + 80);
      swift_retain();
      uint64_t v29 = v30[0];
      swift_retain();
      return sub_1A91600D8(v28, v27, a1, v16, v29);
    }
    a2 = v16;
    if (EnumCaseMultiPayload == 1) {
      sub_1A9098AF0((uint64_t)v8, type metadata accessor for SessionManager.SessionState);
    }
    swift_unknownObjectRelease();
    a3 = v30[0];
  }
  uint64_t v22 = swift_allocObject();
  type metadata accessor for Tracker.Token();
  *(void *)(v22 + 16) = swift_allocObject();
  type metadata accessor for AccessTracker();
  uint64_t v23 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  *(void *)(v23 + 24) = 0;
  *(void *)(v23 + 32) = 0;
  uint64_t v24 = (void *)swift_allocObject();
  _OWORD v24[2] = a1;
  v24[3] = a2;
  v24[4] = a3;
  v24[5] = v22;
  type metadata accessor for SessionObserver();
  uint64_t v25 = (void *)swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v25[3] = v23;
  v25[4] = sub_1A9116F9C;
  void v25[5] = v24;
  uint64_t result = swift_beginAccess();
  if (!*(void *)(v22 + 16))
  {
LABEL_14:
    __break(1u);
    return result;
  }
  swift_unknownObjectWeakAssign();
  uint64_t v26 = MEMORY[0x1AD0EEDF0](a1 + 64);
  swift_retain();
  swift_retain();
  if (!v26) {
    return swift_release();
  }
  swift_retain();
  sub_1A90D3EF0();
  swift_release();
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_1A9111C78(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for SessionObserverChange();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = &v18[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A9098C68(a2, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SessionObserverChange);
  if (swift_getEnumCaseMultiPayload()) {
    return sub_1A9098AF0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SessionObserverChange);
  }
  sub_1A9098AF0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SessionObserverChange);
  uint64_t v16 = a3 + OBJC_IVAR____TtC12AppAnalytics7Tracker_diagnosticsConsentProvider;
  int64_t v17 = *(char **)(a3 + 80);
  swift_retain();
  swift_retain();
  sub_1A9161848(v17, v16, a4, a5, a1);
  swift_beginAccess();
  *(void *)(a6 + 16) = 0;
  return swift_release();
}

uint64_t sub_1A9111DE4(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A916AE70();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (uint64_t *)((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x1AD0EEDF0](a1 + 64, v11);
  if (result)
  {
    uint64_t v15 = result;
    uint64_t v16 = *(void **)(*(void *)(result + 48) + OBJC_IVAR___AAAccessQueue_queue);
    *uint64_t v13 = v16;
    (*(void (**)(void *, void, uint64_t))(v10 + 104))(v13, *MEMORY[0x1E4FBCBF0], v9);
    id v17 = v16;
    LOBYTE(v16) = sub_1A916AE90();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v10 + 8))(v13, v9);
    if (v16)
    {
      uint64_t v18 = v15 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
      swift_beginAccess();
      sub_1A9098C68(v18, (uint64_t)v8, type metadata accessor for SessionManager.SessionState);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1) {
          sub_1A9098AF0((uint64_t)v8, type metadata accessor for SessionManager.SessionState);
        }
        return swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
        swift_unknownObjectRelease();
        uint64_t v20 = a1 + OBJC_IVAR____TtC12AppAnalytics7Tracker_diagnosticsConsentProvider;
        uint64_t v21 = *(char **)(a1 + 80);
        swift_retain();
        swift_retain();
        return sub_1A91600D8(v21, v20, a1, a2, a3);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t Tracker.checkForActiveSession(completion:)(uint64_t a1, uint64_t a2)
{
  return sub_1A9112060(a1, a2, (uint64_t)&unk_1EFFA02D8, (uint64_t)sub_1A9114DAC);
}

uint64_t sub_1A9112060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(v4 + 80);
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = v4;
  v9[3] = a1;
  v9[4] = a2;
  swift_retain();
  swift_retain();
  sub_1A908CAA8(v8, a4, (uint64_t)v9);

  return swift_release();
}

uint64_t sub_1A91120FC(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A916AE70();
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = MEMORY[0x1F4188790](v7);
  double v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = MEMORY[0x1AD0EEDF0](a1 + 64, v9);
  if (!v12)
  {
    uint64_t v19 = 0;
    return a2(v19);
  }
  uint64_t v13 = v12;
  uint64_t v14 = *(void **)(*(void *)(v12 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  void *v11 = v14;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v11, *MEMORY[0x1E4FBCBF0], v7);
  id v15 = v14;
  LOBYTE(v14) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v11, v7);
  if (v14)
  {
    uint64_t v17 = v13 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
    swift_beginAccess();
    sub_1A9098C68(v17, (uint64_t)v6, type metadata accessor for SessionManager.SessionState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1) {
        sub_1A9098AF0((uint64_t)v6, type metadata accessor for SessionManager.SessionState);
      }
      uint64_t v19 = 0;
    }
    else
    {
      swift_release();
      uint64_t v19 = 1;
    }
    swift_unknownObjectRelease();
    return a2(v19);
  }
  __break(1u);
  return result;
}

void sub_1A9112330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
}

void sub_1A911236C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v58 = a5;
  uint64_t v57 = a4;
  uint64_t v55 = a3;
  uint64_t v61 = a1;
  uint64_t v7 = sub_1A916AC90();
  uint64_t v59 = *(void *)(v7 - 8);
  uint64_t v60 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v56 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v9 = (void *)sub_1A916AE70();
  uint64_t v10 = *(v9 - 1);
  double v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (uint64_t *)((char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = *(void **)(*(void *)(v5 + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *uint64_t v13 = v14;
  unsigned int v15 = *MEMORY[0x1E4FBCBF0];
  uint64_t v16 = v10 + 104;
  uint64_t v17 = *(void (**)(void *, void, void *, double))(v10 + 104);
  v17(v13, *MEMORY[0x1E4FBCBF0], v9, v11);
  id v18 = v14;
  LOBYTE(v14) = sub_1A916AE90();
  uint64_t v21 = *(void (**)(void *, void *))(v10 + 8);
  uint64_t v19 = v10 + 8;
  uint64_t v20 = v21;
  uint64_t v53 = v13;
  v21(v13, v9);
  if (v14)
  {
    uint64_t v47 = v20;
    int64_t v48 = (void (*)(void *, void, void *))v17;
    unsigned int v49 = v15;
    uint64_t v50 = v16;
    uint64_t v51 = v19;
    long long v52 = v9;
    uint64_t v22 = (void *)(v5 + 144);
    swift_beginAccess();
    uint64_t v54 = v5;
    uint64_t v64 = *(void *)(v5 + 144);
    swift_bridgeObjectRetain();
    unint64_t v23 = swift_bridgeObjectRetain();
    unint64_t v24 = sub_1A9116700(v23, v61, a2);
    char v26 = v25;
    uint64_t v27 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v27);
    double v9 = 0;
    *(&v46 - 2) = (uint64_t)&v64;
    if ((v26 & 1) == 0)
    {
      unint64_t v65 = v24;
      sub_1A911685C(&v65, v62);
      double v9 = (void *)v62[0];
    }
    swift_bridgeObjectRelease();
    if (!v9)
    {
      uint64_t v32 = v59;
      uint64_t v31 = v60;
      uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
      uint64_t v34 = v56;
      v33(v56, v55, v60);
      BOOL v35 = (objc_class *)type metadata accessor for Group();
      uint64_t v36 = (char *)objc_allocWithZone(v35);
      *(void *)&v36[OBJC_IVAR___AAGroup_count] = 1;
      unint64_t v37 = &v36[OBJC_IVAR___AAGroup_name];
      *(void *)unint64_t v37 = v61;
      *((void *)v37 + 1) = a2;
      v33(&v36[OBJC_IVAR___AAGroup_startDate], (uint64_t)v34, v31);
      unint64_t v38 = &v36[OBJC_IVAR___AAGroup_contentType];
      *(void *)unint64_t v38 = v57;
      v38[8] = v58 & 1;
      v63.receiver = v36;
      v63.super_class = v35;
      swift_bridgeObjectRetain();
      id v39 = objc_msgSendSuper2(&v63, sel_init);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
      swift_beginAccess();
      double v9 = v39;
      MEMORY[0x1AD0ED9C0]();
      if (*(void *)((*v22 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_9;
      }
      goto LABEL_15;
    }
    uint64_t v28 = *(void *)((char *)v9 + OBJC_IVAR___AAGroup_count);
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (!v29)
    {
      *(void *)((char *)v9 + OBJC_IVAR___AAGroup_count) = v30;
LABEL_12:

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_15:
  sub_1A916B1D0();
LABEL_9:
  sub_1A916B200();
  sub_1A916B1B0();
  swift_endAccess();
  uint64_t v40 = MEMORY[0x1AD0EEDF0](v54 + 64);
  if (!v40) {
    goto LABEL_12;
  }
  uint64_t v41 = *(void **)(*(void *)(v40 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  uint64_t v43 = v52;
  uint64_t v42 = v53;
  *uint64_t v53 = v41;
  v48(v42, v49, v43);
  id v44 = v41;
  char v45 = sub_1A916AE90();
  v47(v42, v43);
  if (v45)
  {
    sub_1A90AF858((uint64_t)v9);
    swift_unknownObjectRelease();
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t sub_1A9112838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A9112864(a2, a3);
}

uint64_t sub_1A9112864(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1A916AE70();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x1F4188790](v5);
  double v9 = (uint64_t *)((char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)(*(void *)(v2 + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *double v9 = v10;
  (*(void (**)(void *, void, uint64_t, double))(v6 + 104))(v9, *MEMORY[0x1E4FBCBF0], v5, v7);
  id v11 = v10;
  LOBYTE(v10) = sub_1A916AE90();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v6 + 8))(v9, v5);
  if (v10)
  {
    swift_retain();
    uint64_t v13 = v2;
    while (1)
    {
      uint64_t v14 = (void *)swift_retain();
      char v15 = sub_1A91129E0(v14, a1, a2, v2);
      swift_release();
      uint64_t v16 = *(void *)(v13 + 136);
      swift_retain();
      uint64_t result = swift_release();
      if (!v16) {
        break;
      }
      uint64_t v13 = v16;
      if ((v15 & 1) == 0) {
        return swift_release();
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1A91129E0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1A916AE70();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = &v36[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a3) {
    goto LABEL_12;
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v12 = swift_bridgeObjectRetain();
  unint64_t v13 = sub_1A9116700(v12, a2, a3);
  char v15 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15) {
    return 1;
  }
  swift_beginAccess();
  uint64_t v16 = *(void *)(a4 + 144);
  if ((v16 & 0xC000000000000001) == 0)
  {
    if ((v13 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v13 < *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      a1 = *(id *)(v16 + 8 * v13 + 32);
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
  a1 = (void *)MEMORY[0x1AD0EDEF0](v13, v16);
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v17 = *(void *)((char *)a1 + OBJC_IVAR___AAGroup_count);
  BOOL v18 = __OFSUB__(v17, 1);
  uint64_t v19 = v17 - 1;
  if (v18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  *(void *)((char *)a1 + OBJC_IVAR___AAGroup_count) = v19;
  if (v19
    || (swift_beginAccess(),
        uint64_t v20 = (void *)sub_1A9112DB4(v13),
        swift_endAccess(),
        v20,
        (uint64_t v21 = MEMORY[0x1AD0EEDF0](a4 + 64)) == 0))
  {
LABEL_21:

    return 0;
  }
  a4 = v21;
  uint64_t v22 = *(void **)(*(void *)(v21 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  void *v11 = v22;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCBF0], v8);
  id v23 = v22;
  LOBYTE(v22) = sub_1A916AE90();
  unint64_t v24 = *(void (**)(void *, uint64_t))(v9 + 8);
  v9 += 8;
  v24(v11, v8);
  if (v22)
  {
LABEL_20:
    sub_1A90AFA04((uint64_t)a1);

    swift_unknownObjectRelease();
    return 0;
  }
  __break(1u);
LABEL_12:
  char v25 = a1 + 18;
  swift_beginAccess();
  unint64_t v26 = a1[18];
  if (v26 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1A916B7E0();
    swift_bridgeObjectRelease();
    if (v34) {
      goto LABEL_14;
    }
    goto LABEL_24;
  }
  if (!*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_24:
    swift_endAccess();
    return 1;
  }
LABEL_14:
  uint64_t v27 = sub_1A9114700();
  if (v27) {
    goto LABEL_18;
  }
  if (*v25 >> 62) {
    goto LABEL_32;
  }
  uint64_t v28 = *(void *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  unint64_t result = v28 - 1;
  if (!__OFSUB__(v28, 1))
  {
    do
    {
      uint64_t v27 = sub_1A9112DB4(result);
LABEL_18:
      a1 = (void *)v27;
      swift_endAccess();
      uint64_t v30 = MEMORY[0x1AD0EEDF0](a4 + 64);
      if (!v30) {
        goto LABEL_21;
      }
      a4 = v30;
      uint64_t v31 = *(void **)(*(void *)(v30 + 48) + OBJC_IVAR___AAAccessQueue_queue);
      void *v11 = v31;
      (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCBF0], v8);
      id v32 = v31;
      LOBYTE(v31) = sub_1A916AE90();
      uint64_t v33 = *(void (**)(void *, uint64_t))(v9 + 8);
      v9 += 8;
      v33(v11, v8);
      if (v31) {
        goto LABEL_20;
      }
LABEL_31:
      __break(1u);
LABEL_32:
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_1A916B7E0();
      swift_bridgeObjectRelease();
      unint64_t result = v35 - 1;
    }
    while (!__OFSUB__(v35, 1));
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9112DB4(unint64_t a1)
{
  uint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    uint64_t v3 = sub_1A91698E4(v3);
    *unint64_t v1 = v3;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      uint64_t v9 = v5 + 8 * a1;
      uint64_t v10 = *(void *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(void *)(v5 + 16) = v7;
      sub_1A916B1B0();
      return v10;
    }
  }
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

uint64_t Tracker.push(action:identifier:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 16);
  sub_1A909B78C(0, &qword_1EB686600, (uint64_t)&type metadata for Action, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A916EF60;
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v6;
  *(unsigned char *)(inited + 48) = v7;
  sub_1A90CE08C(v5, v6, v7);
  v9.value._uint64_t countAndFlagsBits = a2;
  v9.value._object = a3;
  Tracker.push(actions:identifier:)((Swift::OpaquePointer)inited, v9);
  swift_setDeallocating();
  return swift_arrayDestroy();
}

Swift::Void __swiftcall Tracker.push(actions:identifier:)(Swift::OpaquePointer actions, Swift::String_optional identifier)
{
  object = identifier.value._object;
  uint64_t countAndFlagsBits = identifier.value._countAndFlagsBits;
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC12AppAnalytics7Tracker_actionsLock);
  os_unfair_lock_lock_with_options();
  swift_beginAccess();
  uint64_t v6 = *(void *)(v2 + 152);
  unint64_t v7 = *((void *)actions._rawValue + 2);
  unint64_t v8 = *(void *)(v6 + 16);
  unint64_t v9 = v8 - v7;
  if (v8 < v7) {
    unint64_t v9 = 0;
  }
  uint64_t v35 = (uint64_t)object;
  if (!object)
  {
    rawValue = actions._rawValue;
    swift_bridgeObjectRetain();
    goto LABEL_19;
  }
  unint64_t v33 = *((void *)actions._rawValue + 2);
  unint64_t v32 = v9;
  uint64_t v10 = v8 - v9;
  if (v8 == v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = MEMORY[0x1E4FBC860];
LABEL_16:
    rawValue = actions._rawValue;
    char v22 = sub_1A9113420(v11, (uint64_t)actions._rawValue);
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0) {
      goto LABEL_19;
    }
    if (v8 == v32)
    {
      if (!v33)
      {
LABEL_20:
        swift_unknownObjectRelease();
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
        return;
      }
LABEL_19:
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1A911493C((uint64_t)rawValue, countAndFlagsBits, v35);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      sub_1A90A6268(v23);
      swift_endAccess();
      goto LABEL_20;
    }
    if (v8 > v32)
    {
      uint64_t v24 = 0;
      if (v33 >= v8) {
        unint64_t v25 = v8;
      }
      else {
        unint64_t v25 = v33;
      }
      unint64_t v26 = (void *)(40 * v8 - 40 * v25 + v6 + 64);
      do
      {
        if (*v26)
        {
          if (*(v26 - 1) == countAndFlagsBits && *v26 == v35)
          {
            BOOL v29 = __OFADD__(v24++, 1);
            if (v29) {
              goto LABEL_39;
            }
          }
          else
          {
            char v28 = sub_1A916B9E0();
            BOOL v29 = __OFADD__(v24, v28 & 1);
            v24 += v28 & 1;
            if (v29) {
              goto LABEL_39;
            }
          }
        }
        v26 += 5;
        --v25;
      }
      while (v25);
      if (v24 == v33) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v31 = actions._rawValue;
    uint64_t v36 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1A90B2A10(0, v10 & ~(v10 >> 63), 0);
    if ((v10 & 0x8000000000000000) == 0)
    {
      uint64_t v30 = v5;
      uint64_t v11 = v36;
      uint64_t v13 = -v10;
      char v14 = (unsigned __int8 *)(40 * v8 - 40 * v10 + v6 + 48);
      while (__CFADD__(v8, v13))
      {
        uint64_t v15 = *((void *)v14 - 2);
        uint64_t v16 = *((void *)v14 - 1);
        unsigned __int8 v17 = *v14;
        sub_1A90CE08C(v15, v16, *v14);
        unint64_t v19 = *(void *)(v36 + 16);
        unint64_t v18 = *(void *)(v36 + 24);
        if (v19 >= v18 >> 1) {
          sub_1A90B2A10(v18 > 1, v19 + 1, 1);
        }
        *(void *)(v36 + 16) = v19 + 1;
        unint64_t v20 = v36 + 24 * v19;
        *(void *)(v20 + 32) = v15;
        *(void *)(v20 + 40) = v16;
        *(unsigned char *)(v20 + 48) = v17;
        v14 += 40;
        if (__CFADD__(v13++, 1))
        {
          uint64_t v5 = v30;
          actions._rawValue = v31;
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1A9113274(uint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) == 0) {
    return a2;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A91132A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a2 + 48);
    uint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v5 = *v4;
      uint64_t v6 = *v3;
      if (*(v4 - 2) == *(v3 - 2) && *(v4 - 1) == *(v3 - 1))
      {
        if (v5 != v6) {
          return 0;
        }
      }
      else
      {
        char v8 = sub_1A916B9E0();
        uint64_t result = 0;
        if ((v8 & 1) == 0 || v5 != v6) {
          return result;
        }
      }
      v3 += 3;
      v4 += 3;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1A9113354(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = a1 + 32;
    uint64_t v4 = a2 + 32;
    do
    {
      sub_1A9116650(v3, (uint64_t)v9);
      sub_1A9116650(v4, (uint64_t)v8);
      if (v9[0] == v8[0] && v9[1] == v8[1])
      {
        sub_1A91166AC((uint64_t)v8);
        sub_1A91166AC((uint64_t)v9);
      }
      else
      {
        char v6 = sub_1A916B9E0();
        sub_1A91166AC((uint64_t)v8);
        sub_1A91166AC((uint64_t)v9);
        if ((v6 & 1) == 0) {
          return 0;
        }
      }
      v3 += 48;
      v4 += 48;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1A9113420(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a2 + 48);
    uint64_t v4 = (unsigned __int8 *)(a1 + 48);
    while (1)
    {
      uint64_t v7 = *((void *)v4 - 2);
      uint64_t v6 = *((void *)v4 - 1);
      uint64_t v9 = *((void *)v3 - 2);
      uint64_t v8 = *((void *)v3 - 1);
      int v11 = *v3;
      v3 += 24;
      int v10 = v11;
      int v12 = *v4;
      v4 += 24;
      switch(v12)
      {
        case 1:
          if (v10 != 1) {
            return 0;
          }
          goto LABEL_17;
        case 2:
          if (v10 != 2) {
            return 0;
          }
          goto LABEL_17;
        case 3:
          if (v7 | v6)
          {
            if (v7 ^ 1 | v6)
            {
              if (v10 != 3) {
                return 0;
              }
              if (v9 != 2 || v8 != 0) {
                return 0;
              }
            }
            else
            {
              if (v10 != 3) {
                return 0;
              }
              if (v9 != 1 || v8 != 0) {
                return 0;
              }
            }
          }
          else if (v10 != 3 || (v8 | v9) != 0)
          {
            return 0;
          }
LABEL_10:
          if (!--v2) {
            return 1;
          }
          break;
        default:
          if (v10) {
            return 0;
          }
LABEL_17:
          BOOL v13 = v7 == v9 && v6 == v8;
          if (!v13
            && (sub_1A916B9E0() & 1) == 0
            && (v7 != 42 || v6 != 0xE100000000000000)
            && (sub_1A916B9E0() & 1) == 0
            && (v9 != 42 || v8 != 0xE100000000000000)
            && (sub_1A916B9E0() & 1) == 0)
          {
            return 0;
          }
          goto LABEL_10;
      }
    }
  }
  return 1;
}

uint64_t sub_1A91135C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1A90C344C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[12 * v8 + 4];
  if (a1 + 32 < v9 + 96 * v2 && v9 < a1 + 32 + 96 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1A916B830();
  __break(1u);
  return result;
}

Swift::Void __swiftcall Tracker.popActions()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC12AppAnalytics7Tracker_actionsLock);
  os_unfair_lock_lock_with_options();
  swift_beginAccess();
  *(void *)(v0 + 152) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
}

uint64_t Tracker.description.getter()
{
  sub_1A916B680();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "Tracker(name: ");
  swift_bridgeObjectRetain();
  sub_1A916B050();
  swift_bridgeObjectRelease();
  sub_1A916B050();
  Tracker.path.getter();
  sub_1A909B78C(0, (unint64_t *)&qword_1EB688C10, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1A909384C();
  sub_1A916AF40();
  swift_bridgeObjectRelease();
  sub_1A916B050();
  swift_bridgeObjectRelease();
  sub_1A916B050();
  return v1[0];
}

uint64_t sub_1A91138EC()
{
  return Tracker.description.getter();
}

uint64_t AccessTracker.deinit()
{
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AccessTracker.explicitTime<A>(_:startTime:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A916AE70();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (uint64_t *)((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = result;
    BOOL v12 = *(void **)(*(void *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *unint64_t v9 = v12;
    (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBF0], v6);
    id v13 = v12;
    LOBYTE(v12) = sub_1A916AE90();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v9, v6);
    if (v12)
    {
      unint64_t v14 = *(void *)(v11 + 96);
      swift_retain();
      sub_1A908A498(a1, v14, a2, 0, a3);
      swift_release();
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t AccessTracker.explicitSubmit<A>(_:submitTime:completion:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v20 = a2;
  uint64_t v11 = type metadata accessor for EventSubmitResult();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (uint64_t *)((char *)&v19 - v13);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v16 = *(void *)(result + 96);
    memset(v21, 0, sizeof(v21));
    swift_retain();
    sub_1A909FCCC(a1, v16, 0, v20, (uint64_t)v21, (void (*)(void))a3, a4, a5, a6);
    swift_release();
    swift_release();
    return sub_1A908A198((uint64_t)v21, (unint64_t *)&qword_1EB68A928, MEMORY[0x1E4FBC840] + 8);
  }
  else if (a3)
  {
    sub_1A90F0788();
    uint64_t v17 = swift_allocError();
    *unint64_t v18 = xmmword_1A9170030;
    *unint64_t v14 = v17;
    swift_storeEnumTagMultiPayload();
    a3(v14);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  }
  return result;
}

uint64_t AccessTracker.explicitSubmit<A>(_:submitTime:userInfo:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v12 = type metadata accessor for EventSubmitResult();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (uint64_t *)((char *)&v20 - v14);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v17 = *(void *)(result + 96);
    swift_retain();
    sub_1A909FCCC(a1, v17, 0, v20, v21, (void (*)(void))a4, a5, a6, a7);
    swift_release();
    return swift_release();
  }
  else if (a4)
  {
    sub_1A90F0788();
    uint64_t v18 = swift_allocError();
    *uint64_t v19 = xmmword_1A9170030;
    *uint64_t v15 = v18;
    swift_storeEnumTagMultiPayload();
    a4(v15);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  }
  return result;
}

uint64_t AccessTracker.clearStack<A>(of:includeParentTrackers:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1A916AE70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  int v10 = (uint64_t *)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v12 = *(void **)(*(void *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    void *v10 = v12;
    (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBF0], v7);
    id v13 = v12;
    LOBYTE(v12) = sub_1A916AE90();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
    if (v12)
    {
      sub_1A910F67C(0, 0, a2 & 1, a3, a4);
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

Swift::Void __swiftcall AccessTracker.clearDynamicDataIdentifier()()
{
  uint64_t v0 = sub_1A916AE70();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (uint64_t *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = Strong;
    uint64_t v6 = *(void **)(*(void *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *uint64_t v3 = v6;
    (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCBF0], v0);
    id v7 = v6;
    LOBYTE(v6) = sub_1A916AE90();
    (*(void (**)(void *, uint64_t))(v1 + 8))(v3, v0);
    if (v6)
    {
      *(void *)(v5 + 48) = 0;
      *(void *)(v5 + 56) = 0;
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1A91140D0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_1A916AE70();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = *(void **)(*(void *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    void *v5 = v8;
    (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
    id v9 = v8;
    LOBYTE(v8) = sub_1A916AE90();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
    if (v8)
    {
      uint64_t v10 = *(void *)(v7 + 192);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      swift_unknownObjectRetain();
      v12(ObjectType, v10);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    *a1 = 0;
  }
  return result;
}

uint64_t DiagnosticsDisallowedError.eventName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

Swift::Void __swiftcall AccessTracker.enterGroup(groupName:)(Swift::String groupName)
{
  object = groupName._object;
  uint64_t countAndFlagsBits = groupName._countAndFlagsBits;
  uint64_t v3 = sub_1A916AC90();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (swift_weakLoadStrong())
  {
    sub_1A916AC80();
    sub_1A911236C(countAndFlagsBits, (uint64_t)object, (uint64_t)v6, 0, 1);
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t AccessTracker.enterGroup(groupName:contentType:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = sub_1A916AC90();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A916AC80();
    sub_1A911236C(a1, a2, (uint64_t)v11, a3, a4 & 1);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

Swift::Void __swiftcall AccessTracker.leaveGroup()()
{
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    uint64_t v2 = *(void *)(Strong + 80);
    uint64_t v3 = (void *)swift_allocObject();
    v3[3] = 0;
    void v3[4] = 0;
    v3[2] = v1;
    swift_retain();
    sub_1A908CAA8(v2, (uint64_t)sub_1A9114938, (uint64_t)v3);
    swift_release();
    swift_release();
  }
}

Swift::Void __swiftcall AccessTracker.leaveGroup(groupName:)(Swift::String_optional groupName)
{
  object = groupName.value._object;
  uint64_t countAndFlagsBits = groupName.value._countAndFlagsBits;
  uint64_t v3 = sub_1A916AE70();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = *(void **)(*(void *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *uint64_t v6 = v8;
    (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBF0], v3);
    id v9 = v8;
    LOBYTE(v8) = sub_1A916AE90();
    (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v3);
    if (v8)
    {
      sub_1A9112864(countAndFlagsBits, (uint64_t)object);
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

unint64_t sub_1A91146A4(unint64_t result, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0) {
    return MEMORY[0x1AD0EDEF0]();
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
  {
    return (unint64_t)*(id *)(a2 + 8 * result + 32);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A9114700()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v0 = v1;
  if (!result || v1 < 0 || (v1 & 0x4000000000000000) != 0)
  {
    uint64_t result = sub_1A91698E4(v1);
    uint64_t v1 = result;
    *uint64_t v0 = result;
  }
  uint64_t v3 = v1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    uint64_t v5 = v4 - 1;
    uint64_t v6 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20);
    *(void *)(v3 + 16) = v5;
    sub_1A916B1B0();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A9114770()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A91147A8()
{
  return objectdestroy_2Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1A91147C0()
{
  return objectdestroy_2Tm(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1A91147D8()
{
  return objectdestroy_8Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1A91147F0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A9114838()
{
  return sub_1A911179C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void (**)(uint64_t))(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1A9114848()
{
  return objectdestroy_8Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1A9114860()
{
  return objectdestroy_8Tm(MEMORY[0x1E4FBC8D0]);
}

void sub_1A9114884()
{
  uint64_t v1 = *(void *)(sub_1A916AC90() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1A911236C(*(void *)(v0 + 24), *(void *)(v0 + 32), v0 + v2, *(void *)(v0 + v3), *(unsigned __int8 *)(v0 + v3 + 8));
}

uint64_t sub_1A9114920()
{
  return objectdestroy_8Tm(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1A911493C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1A90B29F0(0, v3, 0);
    uint64_t v4 = v16;
    uint64_t v7 = (unsigned __int8 *)(a1 + 48);
    do
    {
      uint64_t v8 = *((void *)v7 - 2);
      uint64_t v9 = *((void *)v7 - 1);
      unsigned __int8 v10 = *v7;
      sub_1A90CE08C(v8, v9, *v7);
      unint64_t v12 = *(void *)(v16 + 16);
      unint64_t v11 = *(void *)(v16 + 24);
      swift_bridgeObjectRetain();
      if (v12 >= v11 >> 1) {
        sub_1A90B29F0(v11 > 1, v12 + 1, 1);
      }
      v7 += 24;
      *(void *)(v16 + 16) = v12 + 1;
      uint64_t v13 = v16 + 40 * v12;
      *(void *)(v13 + 32) = v8;
      *(void *)(v13 + 40) = v9;
      *(unsigned char *)(v13 + 48) = v10;
      *(void *)(v13 + 56) = a2;
      *(void *)(v13 + 64) = a3;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_1A9114A44()
{
  uint64_t result = v0;
  for (uint64_t i = *(void *)(v0 + 136); i; uint64_t i = *(void *)(i + 136))
    uint64_t result = i;
  return result;
}

uint64_t sub_1A9114A60()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1A9114A70()
{
  return AccessTracker.submit<A>(_:)(v0[4], v0[2], v0[3]);
}

uint64_t sub_1A9114AA0()
{
  return objectdestroy_8Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1A9114AB8()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A9114AF0()
{
  uint64_t v1 = sub_1A916AC90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  swift_release();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  uint64_t v5 = v3 | 7;
  uint64_t v6 = (v3 + 65) & ~v3;
  uint64_t v7 = v6 + v4;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v6, v1);

  return MEMORY[0x1F4186498](v0, v7, v5);
}

uint64_t sub_1A9114BCC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(sub_1A916AC90() - 8);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void (**)(uint64_t *))(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v7 = *(void **)(v0 + 56);
  char v8 = *(unsigned char *)(v0 + 64);
  uint64_t v9 = v0 + ((*(unsigned __int8 *)(v3 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1A910CD4C(v4, v5, v6, v7, v8, v9, v1, v2);
}

uint64_t sub_1A9114C54()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A9114C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1A90F9F68(a1, a2, a3, *(void *)(v4 + 16), *(void *)(v4 + 24), *(uint64_t (**)(uint64_t, uint64_t))(v4 + 32), a4);
}

uint64_t sub_1A9114C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A910F094(a1, a2, *(void (**)(uint64_t, uint64_t, double))(v3 + 32), *(void *)(v3 + 16), *(void *)(v3 + 24), a3);
}

uint64_t sub_1A9114CA4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A9114CDC(uint64_t a1, uint64_t a2)
{
  return sub_1A910FAEC(a1, a2, *(void *)(v2 + 32), *(unsigned char *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1A9114CF0()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A9114D38()
{
  return sub_1A9111834(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t, uint64_t))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1A9114D44()
{
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9114D50@<X0>(uint64_t a1@<X8>)
{
  char v3 = *(unsigned char *)(v1 + 24);
  return sub_1A91109F8(&v3, a1);
}

uint64_t sub_1A9114D94()
{
  return objectdestroy_8Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1A9114DAC()
{
  return sub_1A91120FC(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1A9114DB8()
{
  return objectdestroy_8Tm(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1A9114DD0()
{
  return sub_1A9112864(*(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1A9114DFC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_1A9114E90(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    char v8 = *(char **)a2;
    *(void *)char v3 = *(void *)a2;
    char v3 = &v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      uint64_t v14 = *(void *)a2;
      id v15 = *(id *)a2;
      *(void *)char v3 = v14;
      v3[v5] = 1;
    }
    else
    {
      (*(void (**)(char *))(v4 + 16))(a1);
      v3[v5] = 0;
    }
  }
  return v3;
}

void sub_1A9115018(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {

  }
  else {
    (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
}

void *sub_1A9115118(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    uint64_t v10 = *(void *)a2;
    id v11 = *(id *)a2;
    *a1 = v10;
    char v12 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v12 = 0;
  }
  *((unsigned char *)a1 + v4) = v12;
  return a1;
}

unsigned __int8 *sub_1A9115260(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {

    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      uint64_t v18 = *(void **)a2;
      id v19 = v18;
      *(void *)a1 = v18;
      char v20 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v20 = 0;
    }
    a1[v7] = v20;
  }
  return a1;
}

void *sub_1A9115480(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *a1 = *(void *)a2;
    char v10 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1A91155B8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {

    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(void *)a1 = *(void *)a2;
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_1A91157D0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_1A9115904(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1A9115ACCLL);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1A9115AF4(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

uint64_t type metadata accessor for SubmitResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A9115BC4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1A9115BD8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1A9115BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1A9115C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t sub_1A9115C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1A9115C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_1A9115C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_1A9115C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t sub_1A9115C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_1A9115C78(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t sub_1A9115C8C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t sub_1A9115CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1A9115CB4()
{
  return type metadata accessor for Tracker(0);
}

uint64_t method lookup function for Tracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Tracker);
}

uint64_t dispatch thunk of Tracker.rootTracker.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t method lookup function for AccessTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AccessTracker);
}

ValueMetadata *type metadata accessor for DiagnosticsDisallowedError()
{
  return &type metadata for DiagnosticsDisallowedError;
}

uint64_t type metadata accessor for Tracker.Token()
{
  return self;
}

uint64_t destroy for TrackerWillSubmitObserver()
{
  return swift_release();
}

void *_s12AppAnalytics25TrackerWillSubmitObserverVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  uint64_t v4 = a2[2];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = v4;
  swift_retain();
  return a1;
}

void *assignWithCopy for TrackerWillSubmitObserver(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TrackerWillSubmitObserver(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TrackerWillSubmitObserver()
{
  return &type metadata for TrackerWillSubmitObserver;
}

uint64_t sub_1A9115E24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A916AC90();
  int v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_1A9115E90(uint64_t a1)
{
  uint64_t v2 = sub_1A916AC90();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1A9115EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A916AC90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A9115F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A916AC90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A9115FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A916AC90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A9116020(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A916AC90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A9116084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A9116098);
}

uint64_t sub_1A9116098(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A916AC90();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1A9116104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A9116118);
}

uint64_t sub_1A9116118(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A916AC90();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t getEnumTagSinglePayload for TrackerName(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TrackerName(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrackerName()
{
  return &type metadata for TrackerName;
}

uint64_t sub_1A911623C()
{
  uint64_t v0 = (NSString *)sub_1A916AF60();
  Class v1 = NSClassFromString(v0);

  if (v1)
  {
    char v2 = 1;
  }
  else
  {
    id v3 = objc_msgSend(self, sel_processInfo);
    id v4 = objc_msgSend(v3, sel_environment);

    uint64_t v5 = sub_1A916AED0();
    if (*(void *)(v5 + 16))
    {
      sub_1A90A1D98(0xD000000000000010, 0x80000001A9177980);
      char v2 = v6;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      char v2 = 0;
    }
  }
  return v2 & 1;
}

uint64_t sub_1A9116338()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A9116370()
{
  uint64_t v1 = type metadata accessor for EventData();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 72) & ~v2;
  unint64_t v4 = (((((*(void *)(*(void *)(v1 - 8) + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  sub_1A909F588(*(void **)(v0 + 56), *(void *)(v0 + 64));
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 20);
  uint64_t v6 = sub_1A916AC90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v4 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + v4);
  }
  swift_release();

  return MEMORY[0x1F4186498](v0, ((v4 + 39) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

void sub_1A9116510(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for EventData() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_1A910D85C(a1, a2, *(void *)(v2 + 32), *(void (**)(uint64_t *))(v2 + 40), *(void *)(v2 + 48), *(char **)(v2 + 56), *(void *)(v2 + 64), v2 + v8, *(void *)(v2 + v9), *(void *)(v2 + v10), *(void *)(v2 + v10 + 8), *(void *)(v2 + ((v10 + 23) & 0xFFFFFFFFFFFFFFF8)), *(unsigned char *)(v2 + ((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), v2 + ((v10 + 39) & 0xFFFFFFFFFFFFFFF8), *(void *)(v2 + ((((v10 + 39) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)), v5, v6);
}

uint64_t sub_1A9116620()
{
  return objectdestroy_2Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1A9116638()
{
  return objectdestroy_2Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1A9116650(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1A91166AC(uint64_t a1)
{
  return a1;
}

unint64_t sub_1A9116700(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_20;
  }
  unint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    do
    {
      while (__OFSUB__(v6--, 1))
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        unint64_t v6 = sub_1A916B7E0();
        swift_bridgeObjectRelease();
        if (!v6) {
          return v6;
        }
      }
      if ((a1 & 0xC000000000000001) != 0)
      {
        unint64_t v8 = (char *)MEMORY[0x1AD0EDEF0](v6, a1);
        goto LABEL_9;
      }
      if ((v6 & 0x8000000000000000) != 0) {
        goto LABEL_18;
      }
      if (v6 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_19;
      }
      unint64_t v8 = (char *)*(id *)(a1 + 32 + 8 * v6);
LABEL_9:
      unint64_t v9 = v8;
      if (*(void *)&v8[OBJC_IVAR___AAGroup_name] == a2 && *(void *)&v8[OBJC_IVAR___AAGroup_name + 8] == a3)
      {

        return v6;
      }
      char v11 = sub_1A916B9E0();
    }
    while ((v11 & 1) == 0 && v6);
  }
  return v6;
}

unint64_t sub_1A911685C@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_1A91146A4(*a1, **(void **)(v2 + 16));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t type metadata accessor for Tracker.RestartTimer()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1A91168B8()
{
  if (!qword_1E97B1810)
  {
    sub_1A909B78C(255, &qword_1E97B12D0, (uint64_t)&type metadata for AnyDataEventEntry, MEMORY[0x1E4FBB320]);
    unint64_t v0 = type metadata accessor for Snapshot();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E97B1810);
    }
  }
}

uint64_t sub_1A9116934()
{
  return objectdestroy_133Tm(57);
}

uint64_t sub_1A911693C()
{
  return sub_1A910F67C(*(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1A9116970()
{
  return objectdestroy_133Tm(56);
}

uint64_t sub_1A9116978()
{
  return sub_1A910F2AC(v0[5], v0[6], v0[2], v0[3]);
}

uint64_t sub_1A91169A8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(type metadata accessor for PushEvent() - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1A9116ADC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1A9116B24()
{
  return sub_1A910F1C8(v0[4], v0[5], v0[6], v0[7], v0[8], v0[2], v0[3]);
}

uint64_t sub_1A9116B38()
{
  uint64_t v1 = sub_1A916AC90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 57) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 39) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  sub_1A909F588(*(void **)(v0 + 40), *(void *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(void *)(v0 + v5 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + v5);
  }
  if (*(void *)(v0 + v6)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, v6 + 16, v3 | 7);
}

uint64_t sub_1A9116C44()
{
  uint64_t v1 = *(void *)(sub_1A916AC90() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 32);
  char v5 = *(unsigned char *)(v0 + 56);
  unint64_t v6 = *(char **)(v4 + 80);
  v8[1] = *(_OWORD *)(v0 + 16);
  uint64_t v9 = v4;
  long long v10 = *(_OWORD *)(v0 + 40);
  char v11 = v5;
  uint64_t v12 = v0 + v2;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = v0 + v3;
  long long v16 = *(_OWORD *)(v0 + ((v3 + 39) & 0xFFFFFFFFFFFFFFF8));
  return sub_1A9096610(v6, (void (*)(uint64_t))sub_1A909A938, (uint64_t)v8, v4 + OBJC_IVAR____TtC12AppAnalytics7Tracker_diagnosticsConsentProvider);
}

uint64_t sub_1A9116D44()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1A9116D84()
{
  return sub_1A910C4C8(v0[4], v0[5], v0[6], v0[2], v0[3]);
}

uint64_t sub_1A9116D94()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A9116DA4()
{
  uint64_t v1 = sub_1A916AC90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  swift_release();
  sub_1A909F588(*(void **)(v0 + 40), *(void *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1A9116E7C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(sub_1A916AC90() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return sub_1A908A498(v0[5], v0[6], (uint64_t)v0 + v3, *((unsigned __int8 *)v0 + v3 + *(void *)(v2 + 64)), v1);
}

uint64_t sub_1A9116F1C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A9116F54()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1A9116F9C(uint64_t a1, uint64_t a2)
{
  return sub_1A9111C78(a1, a2, *(void *)(v2 + 16), *(void (**)(uint64_t))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

void *sub_1A9116FA8(void *a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  sub_1A90F0DEC(*(id *)a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

void sub_1A9116FE8(uint64_t a1)
{
}

uint64_t sub_1A9116FF4(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  sub_1A90F0DEC(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  unint64_t v6 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  sub_1A909F588(v5, v6);
  return a1;
}

uint64_t sub_1A911703C(uint64_t a1, _OWORD *a2)
{
  id v3 = *(void **)a1;
  unint64_t v4 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  sub_1A909F588(v3, v4);
  return a1;
}

uint64_t sub_1A9117078(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3FFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 16382);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 50) >> 12) | (4
                                                           * ((*(void *)(a1 + 8) >> 50) & 0xC00 | ((*(void *)(a1 + 8) & 7) << 7) | (*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7))) ^ 0x3FFF;
  if (v3 >= 0x3FFD) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_1A91170F0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFD)
  {
    *(void *)unint64_t result = a2 - 16382;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3FFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      unint64_t v3 = (-a2 >> 2) & 0xFFF | ((-a2 & 0x3FFF) << 12);
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(void *)(result + 8) = ((v3 >> 7) | (v3 << 50)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t dispatch thunk of LoggingEventProcessorFormatterType.format<A>(processEvent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

ValueMetadata *type metadata accessor for DefaultLoggingEventProcessorFormatter()
{
  return &type metadata for DefaultLoggingEventProcessorFormatter;
}

uint64_t destroy for JSONLoggingEventProcessorFormatter(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0(a1 + 8);
}

uint64_t initializeWithCopy for JSONLoggingEventProcessorFormatter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a1 + 8, a2 + 8);
  return a1;
}

void *assignWithCopy for JSONLoggingEventProcessorFormatter(void *a1, void *a2)
{
  *a1 = *a2;
  __swift_assign_boxed_opaque_existential_1(a1 + 1, a2 + 1);
  return a1;
}

uint64_t assignWithTake for JSONLoggingEventProcessorFormatter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  __swift_destroy_boxed_opaque_existential_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONLoggingEventProcessorFormatter(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONLoggingEventProcessorFormatter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONLoggingEventProcessorFormatter()
{
  return &type metadata for JSONLoggingEventProcessorFormatter;
}

uint64_t sub_1A9117344(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_1A916AFD0();
  MEMORY[0x1F4188790](v7 - 8);
  sub_1A909F130(a1[2] + OBJC_IVAR___AAJSON_value, (uint64_t)&v27);
  if (v28)
  {
    sub_1A90A1A68(&v27, &v29);
  }
  else
  {
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
    unint64_t v30 = sub_1A90B27E0();
    *(void *)&long long v29 = v8;
    sub_1A909B5DC((uint64_t)&v27);
  }
  uint64_t v9 = self;
  __swift_project_boxed_opaque_existential_1(&v29, v30);
  uint64_t v10 = sub_1A916B9D0();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v29);
  uint64_t v11 = *v3;
  *(void *)&long long v29 = 0;
  id v12 = objc_msgSend(v9, sel_dataWithJSONObject_options_error_, v10, v11, &v29);
  swift_unknownObjectRelease();
  id v13 = (id)v29;
  if (v12)
  {
    uint64_t v14 = sub_1A916AB80();
    unint64_t v16 = v15;

    sub_1A916AFC0();
    sub_1A916AFA0();
    if (v17)
    {
      uint64_t v18 = a1[1];
      *(void *)&long long v29 = *a1;
      *((void *)&v29 + 1) = v18;
      swift_bridgeObjectRetain();
      sub_1A916B050();
      sub_1A916B050();
      swift_bridgeObjectRelease();
      sub_1A90A2FD4(v14, v16);
      return v29;
    }
    else
    {
      uint64_t v24 = v3[4];
      uint64_t v25 = v3[5];
      __swift_project_boxed_opaque_existential_1(v3 + 1, v24);
      uint64_t v19 = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8))(a1, a2, a3, v24, v25);
      sub_1A90A2FD4(v14, v16);
    }
  }
  else
  {
    char v20 = v13;
    uint64_t v21 = (void *)sub_1A916A990();

    swift_willThrow();
    uint64_t v22 = v3[4];
    uint64_t v23 = v3[5];
    __swift_project_boxed_opaque_existential_1(v3 + 1, v22);
    uint64_t v19 = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8))(a1, a2, a3, v22, v23);
  }
  return v19;
}

uint64_t sub_1A9117618(void *a1)
{
  sub_1A909F130(a1[2] + OBJC_IVAR___AAJSON_value, (uint64_t)&v5);
  if (v6)
  {
    sub_1A90A1A68(&v5, v7);
    *(void *)&long long v5 = 0;
    *((void *)&v5 + 1) = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_1A916B050();
    swift_bridgeObjectRelease();
    sub_1A916B050();
    sub_1A916B780();
    uint64_t v2 = v5;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  }
  else
  {
    sub_1A909B5DC((uint64_t)&v5);
    uint64_t v3 = a1[1];
    *(void *)&v7[0] = *a1;
    *((void *)&v7[0] + 1) = v3;
    swift_bridgeObjectRetain();
    sub_1A916B050();
    return *(void *)&v7[0];
  }
  return v2;
}

uint64_t UploadBatchEventConfig.maxEventsPerSessionBatch.getter()
{
  return *(void *)(v0 + OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch);
}

uint64_t UploadBatchEventConfig.maxByteSizePerSessionBatch.getter()
{
  return *(void *)(v0 + OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch);
}

uint64_t UploadBatchEventConfig.transparencyLoggingEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled);
}

uint64_t UploadBatchEventConfig.debuggingEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled);
}

uint64_t UploadBatchEventConfig.maxUploadTries.getter()
{
  return *(void *)(v0 + OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries);
}

uint64_t UploadBatchEventConfig.directory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___AAUploadBatchEventConfig_directory;
  uint64_t v4 = sub_1A916AAD0();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

id UploadBatchEventConfig.__allocating_init(batchSize:batchDebugging:)(uint64_t a1, char a2)
{
  id v5 = objc_allocWithZone(v2);
  return UploadBatchEventConfig.init(batchSize:batchDebugging:)(a1, a2);
}

id UploadBatchEventConfig.init(batchSize:batchDebugging:)(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = sub_1A916AAD0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v3[OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch] = a1;
  *(void *)&v3[OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch] = 500000;
  v3[OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled] = 0;
  v3[OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled] = a2;
  *(void *)&v3[OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries] = 5;
  uint64_t v11 = v3;
  id v12 = NSSearchPathForDirectoriesInDomains(NSApplicationSupportDirectory, 1uLL, 1);
  uint64_t v13 = sub_1A916B190();

  if (*(void *)(v13 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1A916AA10();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, char *, uint64_t))(v8 + 32))(&v11[OBJC_IVAR___AAUploadBatchEventConfig_directory], v10, v7);

    v15.receiver = v11;
    v15.super_class = ObjectType;
    return objc_msgSendSuper2(&v15, sel_init);
  }
  else
  {
    id result = (id)swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

id UploadBatchEventConfig.with(maxByteSizePerSessionBatch:)(uint64_t a1)
{
  uint64_t v17 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_1A916AAD0();
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch);
  HIDWORD(v16) = *(unsigned __int8 *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled);
  char v9 = *(unsigned char *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled);
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries);
  uint64_t v11 = v1 + OBJC_IVAR___AAUploadBatchEventConfig_directory;
  id v12 = *(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16);
  v12(v7, v11, v3, v5);
  uint64_t v13 = objc_allocWithZone(ObjectType);
  *(void *)&v13[OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch] = v8;
  *(void *)&v13[OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch] = v17;
  v13[OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled] = BYTE4(v16);
  v13[OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled] = v9;
  *(void *)&v13[OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries] = v10;
  ((void (*)(unsigned char *, char *, uint64_t))v12)(&v13[OBJC_IVAR___AAUploadBatchEventConfig_directory], v7, v3);
  v18.receiver = v13;
  v18.super_class = ObjectType;
  id v14 = objc_msgSendSuper2(&v18, sel_init);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v14;
}

id UploadBatchEventConfig.with(transparencyLoggingEnabled:)(int a1)
{
  int v18 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_1A916AAD0();
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch);
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch);
  int v17 = *(unsigned __int8 *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled);
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries);
  uint64_t v11 = v1 + OBJC_IVAR___AAUploadBatchEventConfig_directory;
  id v12 = *(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16);
  v12(v7, v11, v3, v5);
  uint64_t v13 = objc_allocWithZone(ObjectType);
  *(void *)&v13[OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch] = v8;
  *(void *)&v13[OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch] = v9;
  v13[OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled] = v18;
  v13[OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled] = v17;
  *(void *)&v13[OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries] = v10;
  ((void (*)(unsigned char *, char *, uint64_t))v12)(&v13[OBJC_IVAR___AAUploadBatchEventConfig_directory], v7, v3);
  v19.receiver = v13;
  v19.super_class = ObjectType;
  id v14 = objc_msgSendSuper2(&v19, sel_init);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v14;
}

id UploadBatchEventConfig.with(directory:)(uint64_t a1)
{
  uint64_t v19 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_1A916AAD0();
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch);
  uint64_t v17 = *(void *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch);
  uint64_t v18 = v8;
  char v9 = *(unsigned char *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled);
  char v10 = *(unsigned char *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled);
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries);
  id v12 = *(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16);
  v12(v7, v19, v3, v5);
  uint64_t v13 = objc_allocWithZone(ObjectType);
  *(void *)&v13[OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch] = v18;
  *(void *)&v13[OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch] = v17;
  v13[OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled] = v9;
  v13[OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled] = v10;
  *(void *)&v13[OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries] = v11;
  ((void (*)(unsigned char *, char *, uint64_t))v12)(&v13[OBJC_IVAR___AAUploadBatchEventConfig_directory], v7, v3);
  v20.receiver = v13;
  v20.super_class = ObjectType;
  id v14 = objc_msgSendSuper2(&v20, sel_init);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v14;
}

id UploadBatchEventConfig.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void UploadBatchEventConfig.init()()
{
}

id UploadBatchEventConfig.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A91183BC()
{
  return type metadata accessor for UploadBatchEventConfig();
}

uint64_t method lookup function for UploadBatchEventConfig(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UploadBatchEventConfig);
}

uint64_t dispatch thunk of UploadBatchEventConfig.__allocating_init(batchSize:batchDebugging:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1A91183F0()
{
  uint64_t result = sub_1A916B540();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1A91184B4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    double v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_1A911850C()
{
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = sub_1A916B540();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t sub_1A91185B8()
{
  sub_1A911850C();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t type metadata accessor for Lazy()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *type metadata accessor for LazyOptions()
{
  return &type metadata for LazyOptions;
}

uint64_t sub_1A9118638@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1A91187DC(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

unint64_t sub_1A911867C()
{
  unint64_t result = qword_1E97B1840;
  if (!qword_1E97B1840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1840);
  }
  return result;
}

unint64_t sub_1A91186D4()
{
  unint64_t result = qword_1E97B1848;
  if (!qword_1E97B1848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1848);
  }
  return result;
}

unint64_t sub_1A911872C()
{
  unint64_t result = qword_1E97B1850;
  if (!qword_1E97B1850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1850);
  }
  return result;
}

unint64_t sub_1A9118784()
{
  unint64_t result = qword_1E97B1858;
  if (!qword_1E97B1858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B1858);
  }
  return result;
}

uint64_t sub_1A91187DC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

id BridgedRawEventProperty.__allocating_init(dataName:requirement:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  uint64_t v8 = &v7[OBJC_IVAR___AARawEventProperty_dataName];
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  *(void *)&v7[OBJC_IVAR___AARawEventProperty_requirement] = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, sel_init);
}

id BridgedRawEventProperty.init(dataName:requirement:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = &v3[OBJC_IVAR___AARawEventProperty_dataName];
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  *(void *)&v3[OBJC_IVAR___AARawEventProperty_requirement] = a3;
  v10.receiver = v3;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_init);
}

id BridgedRawEventProperty.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void BridgedRawEventProperty.init()()
{
}

id BridgedRawEventProperty.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BridgedRawEventProperty()
{
  return self;
}

uint64_t method lookup function for BridgedRawEventProperty(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BridgedRawEventProperty);
}

uint64_t dispatch thunk of BridgedRawEventProperty.__allocating_init(dataName:requirement:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

id sub_1A9118A9C()
{
  uint64_t v0 = (objc_class *)type metadata accessor for BridgedSessionGroup();
  id v1 = (char *)objc_allocWithZone(v0);
  objc_super v2 = &v1[OBJC_IVAR___AASessionGroup_groupName];
  *(void *)objc_super v2 = 0x746C7561666564;
  *((void *)v2 + 1) = 0xE700000000000000;
  v4.receiver = v1;
  v4.super_class = v0;
  id result = objc_msgSendSuper2(&v4, sel_init);
  qword_1EB687080 = (uint64_t)result;
  return result;
}

id BridgedSessionGroup.__allocating_init(groupName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  uint64_t v6 = &v5[OBJC_IVAR___AASessionGroup_groupName];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

id static BridgedSessionGroup.default.getter()
{
  if (qword_1EB687088 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB687080;

  return v0;
}

uint64_t BridgedSessionGroup.groupName.getter()
{
  id v1 = (uint64_t *)(v0 + OBJC_IVAR___AASessionGroup_groupName);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

id BridgedSessionGroup.init(groupName:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = &v2[OBJC_IVAR___AASessionGroup_groupName];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  v8.receiver = v2;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

id BridgedSessionGroup.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void BridgedSessionGroup.init()()
{
}

id BridgedSessionGroup.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BridgedSessionGroup()
{
  return self;
}

uint64_t method lookup function for BridgedSessionGroup(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BridgedSessionGroup);
}

uint64_t dispatch thunk of BridgedSessionGroup.__allocating_init(groupName:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1A9118F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1A9118F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(a12 + 16))(a1, a2, a3, a4, a5, a6, a7 & 1) & 1;
}

uint64_t sub_1A9118FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t sub_1A9118FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1A9119024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_1A911904C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1A9119074(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_1A911909C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 64))();
}

uint64_t sub_1A91190C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t sub_1A91190D8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t sub_1A9119100()
{
  uint64_t result = sub_1A912EF74(0xAuLL, 0xE100000000000000);
  qword_1EB6893A0 = result;
  *(void *)algn_1EB6893A8 = v1;
  return result;
}

uint64_t sub_1A911912C()
{
  sub_1A91208C8(v0, (uint64_t)&v9);
  switch(v13 >> 5)
  {
    case 1:
      v13 &= 0x1Fu;
      sub_1A916B680();
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD000000000000027;
      sub_1A916B990();
      goto LABEL_14;
    case 2:
      v13 &= 0x1Fu;
      sub_1A916B680();
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD000000000000026;
      sub_1A916B050();
      goto LABEL_15;
    case 3:
      v13 &= 0x1Fu;
      sub_1A916B680();
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD000000000000018;
      sub_1A916AEE0();
LABEL_14:
      sub_1A916B050();
      swift_bridgeObjectRelease();
LABEL_15:
      sub_1A916B050();
      return v8;
    case 4:
      uint64_t result = 0xD000000000000012;
      if (v13 != 128 || (v11 | v12 | v9 | v10) != 0)
      {
        unint64_t v5 = v11 | v12 | v10;
        if (v13 == 128 && v9 == 1 && !v5)
        {
          return 0xD000000000000017;
        }
        else
        {
          BOOL v7 = v9 == 2 && v5 == 0;
          if (v13 == 128 && v7) {
            return 0x736F6C43656C6966;
          }
          else {
            return 0x656C69466F6ELL;
          }
        }
      }
      return result;
    default:
      v13 &= 0x1Fu;
      uint64_t v1 = v11;
      unint64_t v2 = v12;
      sub_1A90D1784(v11, v12);
      sub_1A916B680();
      swift_bridgeObjectRelease();
      unint64_t v8 = 0x7461427974706D65;
      sub_1A916B050();
      sub_1A916B050();
      sub_1A90D0410(v1, v2);
      sub_1A90D17DC();
      sub_1A909384C();
      sub_1A916AF40();
      swift_bridgeObjectRelease();
      sub_1A916B050();
      swift_bridgeObjectRelease();
      sub_1A916B050();
      sub_1A916B050();
      swift_bridgeObjectRelease();
      sub_1A90A2FD4(v1, v2);
      return v8;
  }
}

uint64_t sub_1A9119518()
{
  sub_1A91208C8(v0, (uint64_t)v2);
  return sub_1A911912C();
}

uint64_t sub_1A9119550()
{
  uint64_t v1 = sub_1A916AAD0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  objc_super v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A90A6CFC(0, (unint64_t *)&qword_1EB68ACC8, (uint64_t (*)(uint64_t))type metadata accessor for Session, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  BOOL v7 = (char *)&v18 - v6;
  uint64_t v8 = type metadata accessor for Session();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_currentSession;
  swift_beginAccess();
  sub_1A9120310(v12, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1A908FF14((uint64_t)v7, (unint64_t *)&qword_1EB68ACC8, (uint64_t (*)(uint64_t))type metadata accessor for Session);
    uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_pathProvider + 24);
    uint64_t v14 = *(void *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_pathProvider + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_pathProvider), v13);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  }
  else
  {
    sub_1A91203A4((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Session);
    uint64_t v16 = *(void *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_pathProvider + 24);
    uint64_t v17 = *(void *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_pathProvider + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_pathProvider), v16);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
    swift_bridgeObjectRetain();
    sub_1A916AA50();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return sub_1A912040C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Session);
  }
}

uint64_t sub_1A9119864@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (*(unsigned char *)(a1 + OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled) == 1)
  {
    uint64_t v4 = a2[3];
    uint64_t v5 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v4);
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
    sub_1A911E430();
    BOOL v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    uint64_t v8 = v6;
    uint64_t v9 = a3;
    uint64_t v10 = 0;
  }
  else
  {
    sub_1A911E430();
    BOOL v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v8 = v11;
    uint64_t v9 = a3;
    uint64_t v10 = 1;
  }

  return v7(v9, v10, 1, v8);
}

void sub_1A9119958(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1A916AAD0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  BOOL v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A90A6CFC(0, (unint64_t *)&qword_1EB68ACC8, (uint64_t (*)(uint64_t))type metadata accessor for Session, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_lock;
  os_unfair_lock_lock_with_options();
  sub_1A912046C(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Session);
  uint64_t v12 = type metadata accessor for Session();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 0, 1, v12);
  uint64_t v13 = v2 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_currentSession;
  swift_beginAccess();
  sub_1A91204D4((uint64_t)v10, v13);
  swift_endAccess();
  uint64_t v14 = *(void *)(v2 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 24);
  uint64_t v15 = *(void *)(v2 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager), v14);
  sub_1A9119550();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 120))(v7, v14, v15);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(v2 + v11) + 16));
}

uint64_t sub_1A9119BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *, uint64_t), int a7, uint64_t a8, char a9, uint64_t *a10)
{
  uint64_t v113 = a8;
  uint64_t v114 = a4;
  LODWORD(v119) = a7;
  uint64_t v118 = a6;
  uint64_t v115 = a5;
  uint64_t v116 = a1;
  uint64_t v132 = *MEMORY[0x1E4F143B8];
  sub_1A90A6CFC(0, &qword_1EB689868, (uint64_t (*)(uint64_t))type metadata accessor for Batch, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v108 = (uint64_t *)((char *)&v101 - v15);
  uint64_t v16 = type metadata accessor for Batch();
  uint64_t v106 = *(void *)(v16 - 8);
  uint64_t v107 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v105 = (void (*)(char *, uint64_t))((char *)&v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_1A916AE40();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  unint64_t v109 = (char *)&v101 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v101 - v22;
  uint64_t v117 = *a10;
  unint64_t v112 = a10[1];
  uint64_t v120 = OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_lock;
  os_unfair_lock_lock_with_options();
  sub_1A916AE30();
  uint64_t v110 = a2;
  uint64_t v111 = a3;
  uint64_t v24 = sub_1A911A9E4(a2, a3);
  uint64_t v122 = v10;
  uint64_t v25 = (void *)(v10 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager);
  uint64_t v26 = *(void *)(v10 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 24);
  uint64_t v27 = *(void *)(v10 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 32);
  uint64_t v28 = (uint64_t)__swift_project_boxed_opaque_existential_1((void *)(v10 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager), v26);
  uint64_t v29 = v121;
  (*(void (**)(id *__return_ptr, uint64_t, uint64_t, uint64_t))(v27 + 32))(&v130, v24, v26, v27);
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v18);
    swift_release();
LABEL_16:
    uint64_t v55 = v122;
    uint64_t v56 = v120;
    goto LABEL_17;
  }
  uint64_t v30 = v117;
  uint64_t v28 = (uint64_t)v118;
  char v31 = v119;
  uint64_t v101 = 0;
  uint64_t v102 = v19;
  uint64_t v121 = v24;
  uint64_t v103 = v23;
  uint64_t v104 = v18;
  if (v131 != 1)
  {
    sub_1A91201D0();
    swift_allocError();
    *(void *)uint64_t v47 = 2;
    *(void *)(v47 + 8) = 0;
    *(void *)(v47 + 16) = 0;
    *(void *)(v47 + 24) = 0;
    *(unsigned char *)(v47 + 32) = 0x80;
    swift_willThrow();
    swift_release();
    (*(void (**)(char *, uint64_t))(v102 + 8))(v103, v104);
    goto LABEL_16;
  }
  if (v130)
  {
    uint64_t v32 = v116;
    goto LABEL_6;
  }
  sub_1A90A0DC8((uint64_t)v25, (uint64_t)&v126);
  uint64_t v49 = v128;
  uint64_t v48 = v129;
  uint64_t v50 = __swift_project_boxed_opaque_existential_1(&v126, v128);
  uint64_t v51 = *(void *)(v122 + 16);
  if (v31) {
    uint64_t v28 = *(void *)(v122 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_contentType);
  }
  uint64_t v124 = v30;
  unint64_t v125 = v112;
  uint64_t v52 = v113;
  uint64_t v53 = v28;
  uint64_t v28 = (uint64_t)v50;
  uint64_t v54 = v101;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(v48 + 56))(v121, v113, v51, v53, v114, v115, &v124, v49, v48);
  if (v54)
  {
    (*(void (**)(char *, uint64_t))(v102 + 8))(v103, v104);
LABEL_15:
    swift_release();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v126);
    goto LABEL_16;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v126);
  sub_1A90A0DC8((uint64_t)v25, (uint64_t)&v126);
  uint64_t v75 = v128;
  uint64_t v74 = v129;
  *(void *)&long long v119 = __swift_project_boxed_opaque_existential_1(&v126, v128);
  uint64_t v76 = *(void *)(v52 + *(int *)(type metadata accessor for Session() + 32));
  sub_1A90A6CFC(0, &qword_1EB6894C0, (uint64_t (*)(uint64_t))sub_1A90B2774, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A916E200;
  *(void *)(inited + 32) = 1701869940;
  *(void *)(inited + 40) = 0xE400000000000000;
  uint64_t v78 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = 0x6E6F6973736573;
  *(void *)(inited + 56) = 0xE700000000000000;
  *(void *)(inited + 72) = v78;
  *(void *)(inited + 80) = 1635017060;
  *(void *)(inited + 88) = 0xE400000000000000;
  sub_1A90A250C();
  *(void *)(inited + 120) = v79;
  *(void *)(inited + 96) = v76;
  swift_bridgeObjectRetain();
  sub_1A90B2180(inited);
  int64_t v80 = self;
  uint64_t v81 = (void *)sub_1A916AEB0();
  swift_bridgeObjectRelease();
  v123[0] = 0;
  uint64_t v28 = (uint64_t)objc_msgSend(v80, sel_dataWithJSONObject_options_error_, v81, 0, v123);

  id v82 = v123[0];
  if (!v28)
  {
    long long v91 = v82;
    sub_1A916A990();

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v102 + 8))(v103, v104);
    goto LABEL_15;
  }
  uint64_t v83 = sub_1A916AB80();
  unint64_t v85 = v84;

  uint64_t v124 = v83;
  unint64_t v125 = v85;
  if (qword_1EB688DD0 != -1) {
    swift_once();
  }
  sub_1A916ABA0();
  uint64_t v87 = v124;
  unint64_t v86 = v125;
  uint64_t v88 = v121;
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v74 + 8))(v124, v125, v121, v75, v74);
  sub_1A90A2FD4(v87, v86);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v126);
  uint64_t v96 = v25[3];
  uint64_t v97 = v25[4];
  __swift_project_boxed_opaque_existential_1(v25, v96);
  uint64_t v126 = 1;
  char v127 = 1;
  (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v97 + 40))(v88, &v126, v96, v97);
  if (qword_1EB68ACE8 != -1) {
    swift_once();
  }
  id v98 = (id)qword_1EB689AA0;
  sub_1A916B3A0();
  sub_1A90CA164();
  uint64_t v99 = swift_allocObject();
  *(_OWORD *)(v99 + 16) = xmmword_1A916EF60;
  *(void *)(v99 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v99 + 64) = sub_1A90A67C0();
  uint64_t v100 = v111;
  *(void *)(v99 + 32) = v110;
  *(void *)(v99 + 40) = v100;
  swift_bridgeObjectRetain();
  sub_1A916AD30();

  swift_bridgeObjectRelease();
  uint64_t v32 = v116;
LABEL_6:
  sub_1A90A0DC8((uint64_t)v25, (uint64_t)&v126);
  uint64_t v33 = v128;
  uint64_t v34 = v129;
  __swift_project_boxed_opaque_existential_1(&v126, v128);
  sub_1A90A6CFC(0, &qword_1EB6894C0, (uint64_t (*)(uint64_t))sub_1A90B2774, MEMORY[0x1E4FBBE00]);
  uint64_t v35 = swift_initStackObject();
  long long v119 = xmmword_1A916E200;
  *(_OWORD *)(v35 + 16) = xmmword_1A916E200;
  *(void *)(v35 + 32) = 1701869940;
  *(void *)(v35 + 40) = 0xE400000000000000;
  uint64_t v36 = MEMORY[0x1E4FBB1A0];
  *(void *)(v35 + 48) = 0x746E657665;
  *(void *)(v35 + 56) = 0xE500000000000000;
  *(void *)(v35 + 72) = v36;
  *(void *)(v35 + 80) = 1635017060;
  *(void *)(v35 + 88) = 0xE400000000000000;
  sub_1A90A250C();
  *(void *)(v35 + 120) = v37;
  *(void *)(v35 + 96) = v32;
  swift_bridgeObjectRetain();
  sub_1A90B2180(v35);
  unint64_t v38 = self;
  id v39 = (void *)sub_1A916AEB0();
  swift_bridgeObjectRelease();
  id v130 = 0;
  id v40 = objc_msgSend(v38, sel_dataWithJSONObject_options_error_, v39, 0, &v130);

  id v41 = v130;
  if (!v40)
  {
    int v58 = v41;
    uint64_t v59 = (void *)sub_1A916A990();

    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v126);
    uint64_t v126 = (uint64_t)v59;
    id v60 = v59;
    sub_1A908E870(0, (unint64_t *)&qword_1EB689860);
    int v61 = swift_dynamicCast();
    uint64_t v28 = v121;
    uint64_t v55 = v122;
    uint64_t v56 = v120;
    if (v61 && (v124 & 1) == 0)
    {

      uint64_t v89 = *(void *)(v28 + 16);
      uint64_t v90 = *(void *)(v28 + 24);
      swift_bridgeObjectRetain();
      sub_1A911AD84(v89, v90);
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v103, v104);

      uint64_t v28 = 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v102 + 8))(v103, v104);
      swift_release();
    }
    goto LABEL_17;
  }
  uint64_t v42 = sub_1A916AB80();
  unint64_t v44 = v43;

  uint64_t v124 = v42;
  unint64_t v125 = v44;
  if (qword_1EB688DD0 != -1) {
    swift_once();
  }
  sub_1A916ABA0();
  uint64_t v46 = v124;
  unint64_t v45 = v125;
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8))(v124, v125, v121, v33, v34);
  sub_1A90A2FD4(v46, v45);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v126);
  long long v62 = v109;
  sub_1A916AE30();
  unint64_t v63 = sub_1A916AE20();
  uint64_t v64 = *(void (**)(char *, uint64_t))(v102 + 8);
  v64(v62, v104);
  unint64_t v65 = sub_1A916AE20();
  if (v63 < v65)
  {
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v118 = v64;
  double v11 = (double)(v63 - v65) / 1000000.0;
  uint64_t v34 = MEMORY[0x1E4FBB1A0];
  if (qword_1EB68ACE8 != -1) {
LABEL_43:
  }
    swift_once();
  id v66 = (id)qword_1EB689AA0;
  sub_1A916B3A0();
  sub_1A90CA164();
  uint64_t v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = v119;
  *(void *)(v67 + 56) = v34;
  *(void *)(v67 + 64) = sub_1A90A67C0();
  uint64_t v68 = MEMORY[0x1E4FBB3D0];
  uint64_t v69 = v110;
  uint64_t v70 = v111;
  *(void *)(v67 + 32) = v110;
  *(void *)(v67 + 40) = v70;
  uint64_t v71 = MEMORY[0x1E4FBB460];
  *(void *)(v67 + 96) = v68;
  *(void *)(v67 + 104) = v71;
  *(double *)(v67 + 72) = v11;
  swift_bridgeObjectRetain();
  sub_1A916AD30();

  uint64_t v72 = v70;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v55 = v122;
  swift_retain();
  sub_1A911F2FC(v69, v70, (char *)0x2E74736575716572, 0xEC0000006E6F736ALL, v55, (void (*)(char *, uint64_t))v55, v69, v70);
  swift_release();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(*(void *)(v55 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_transparencyLogging)
                + OBJC_IVAR___AATransparencyLogging_isEnabled) == 1)
  {
    uint64_t v73 = v108;
    sub_1A911AF98(v69, v72, v108);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v106 + 48))(v73, 1, v107) == 1)
    {
      sub_1A908FF14((uint64_t)v73, &qword_1EB689868, (uint64_t (*)(uint64_t))type metadata accessor for Batch);
    }
    else
    {
      long long v92 = v105;
      sub_1A91203A4((uint64_t)v73, (uint64_t)v105, (uint64_t (*)(void))type metadata accessor for Batch);
      sub_1A90F5AE0(v92);
      sub_1A912040C((uint64_t)v92, (uint64_t (*)(void))type metadata accessor for Batch);
    }
  }
  if ((a9 & 1) != 0
    && ((uint64_t v93 = *(void *)(v55 + 24),
         *(void *)(v121 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_eventCount) >= *(void *)(v93 + OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch))
     || *(void *)(v121 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_byteSize) >= *(void *)(v93 + OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch)))
  {
    uint64_t v94 = *(void *)(v121 + 16);
    uint64_t v95 = *(void *)(v121 + 24);
    swift_bridgeObjectRetain();
    sub_1A911AD84(v94, v95);
    swift_bridgeObjectRelease();
    swift_release();
    v118(v103, v104);
    uint64_t v28 = 1;
  }
  else
  {
    swift_release();
    v118(v103, v104);
    uint64_t v28 = 0;
  }
  uint64_t v56 = v120;
LABEL_17:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(v55 + v56) + 16));
  return v28;
}

uint64_t sub_1A911A9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1A916AAD0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v30 - v11;
  uint64_t v13 = v2 + 40;
  swift_beginAccess();
  uint64_t v14 = *(void *)(v2 + 40);
  if (!*(void *)(v14 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_1A90A1D98(a1, a2);
  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_endAccess();
    sub_1A9119550();
    type metadata accessor for UploadDropboxFile();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_eventCount) = -1;
    *(void *)(v17 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_byteSize) = 0;
    uint64_t v18 = v17 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_state;
    *(void *)uint64_t v18 = 0;
    *(_WORD *)(v18 + 8) = 256;
    *(void *)(v17 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_fileHandle) = 0;
    v30[1] = v13;
    uint64_t v19 = OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_lock;
    type metadata accessor for UnfairLock();
    uint64_t v20 = swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v21 = (_DWORD *)swift_slowAlloc();
    *(void *)(v20 + 16) = v21;
    *uint64_t v21 = 0;
    *(_DWORD *)(v20 + 24) = 0x10000;
    *(void *)(v17 + v19) = v20;
    uint64_t v22 = (void *)(v17 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_userAgent);
    *uint64_t v22 = 0;
    v22[1] = 0;
    uint64_t v23 = v17 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_contentType;
    *(void *)uint64_t v23 = 0;
    *(unsigned char *)(v23 + 8) = 1;
    uint64_t v24 = (void *)(v17 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_groupName);
    *uint64_t v24 = 0;
    v24[1] = 0;
    uint64_t v25 = v17 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_sessionStartDate;
    uint64_t v26 = sub_1A916AC90();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
    uint64_t v27 = (void *)(v17 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_sessionID);
    *uint64_t v27 = 0;
    v27[1] = 0;
    *(_OWORD *)(v17 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_timestampConfiguration) = xmmword_1A9170040;
    *(void *)(v17 + 16) = a1;
    *(void *)(v17 + 24) = a2;
    swift_bridgeObjectRetain();
    sub_1A916AA50();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v17 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_url, v10, v6);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v31 = *(void *)(v3 + 40);
    *(void *)(v3 + 40) = 0x8000000000000000;
    sub_1A90C3E50(v17, a1, a2, isUniquelyReferenced_nonNull_native);
    *(void *)(v3 + 40) = v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    return v17;
  }
  uint64_t v17 = *(void *)(*(void *)(v14 + 56) + 8 * v15);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1A911AD84(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1A911A9E4(a1, a2);
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 24);
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager), v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v5, v6, v7);
  swift_release();
  swift_beginAccess();
  sub_1A914C858(a1, a2);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1A911AF98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  char v127 = a3;
  uint64_t v122 = sub_1A916AD10();
  uint64_t v121 = *(void *)(v122 - 8);
  MEMORY[0x1F4188790](v122);
  uint64_t v123 = (char *)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A916AC90();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v124 = v7;
  uint64_t v125 = v8;
  MEMORY[0x1F4188790](v7);
  *(void *)&long long v126 = (char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A90A6CFC(0, (unint64_t *)&qword_1EB68ACF0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  char v16 = (char *)&v110 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v110 - v17;
  uint64_t v19 = sub_1A916AFD0();
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v130 = a2;
  uint64_t v131 = a1;
  uint64_t v20 = sub_1A911A9E4(a1, a2);
  uint64_t v21 = v3;
  uint64_t v22 = *(void *)(v3 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 24);
  uint64_t v23 = *(void *)(v3 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 32);
  uint64_t v128 = (void *)(v3 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager), v22);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  uint64_t v129 = v20;
  uint64_t v33 = v24(v20, v22, v23);
  unint64_t v35 = v34;
  uint64_t v118 = v21;
  uint64_t v116 = v13;
  long long v119 = v18;
  uint64_t v117 = v16;
  sub_1A916AFC0();
  uint64_t v36 = sub_1A916AFA0();
  if (v37)
  {
    uint64_t v38 = v36;
    unint64_t v39 = v37;
    uint64_t v120 = v33;
    uint64_t v134 = 10;
    unint64_t v135 = 0xE100000000000000;
    MEMORY[0x1F4188790](v36);
    *(&v110 - 2) = (uint64_t)&v134;
    swift_bridgeObjectRetain_n();
    uint64_t v40 = sub_1A911ECFC(0x7FFFFFFFFFFFFFFFLL, 1, sub_1A9120224, (uint64_t)(&v110 - 4), v38, v39);
    swift_bridgeObjectRelease();
    uint64_t v41 = *(void *)(v40 + 16);
    uint64_t v43 = v130;
    uint64_t v42 = v131;
    if (v41)
    {
      unint64_t v115 = v35;
      swift_bridgeObjectRelease();
      uint64_t v137 = 0;
      BOOL v136 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v44 = (unint64_t *)(v40 + 56);
      do
      {
        unint64_t v46 = *(v44 - 1);
        unint64_t v45 = *v44;
        unint64_t v48 = *(v44 - 3);
        unint64_t v47 = *(v44 - 2);
        uint64_t v49 = swift_bridgeObjectRetain();
        uint64_t v50 = (void *)MEMORY[0x1AD0EE490](v49);
        sub_1A911DB24(v48, v47, v46, v45, &v136, &v137);
        swift_bridgeObjectRelease();
        v44 += 4;
        --v41;
      }
      while (v41);
      swift_bridgeObjectRelease();
      uint64_t v43 = v130;
      uint64_t v114 = v137;
      if (v137)
      {
        uint64_t v51 = v128;
        if (v136[2])
        {
          uint64_t v52 = v128[3];
          uint64_t v53 = v128[4];
          __swift_project_boxed_opaque_existential_1(v128, v52);
          uint64_t v54 = v118;
          uint64_t v55 = *(void *)(v118 + 16);
          uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 64);
          swift_bridgeObjectRetain();
          uint64_t v57 = v129;
          uint64_t v113 = v56(v129, v55, v52, v53);
          uint64_t v112 = v58;
          uint64_t v59 = v51[3];
          uint64_t v60 = v51[4];
          __swift_project_boxed_opaque_existential_1(v51, v59);
          uint64_t v118 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 72))(v57, *(void *)(v54 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_contentType), v59, v60);
          uint64_t v61 = v51[3];
          uint64_t v62 = v51[4];
          __swift_project_boxed_opaque_existential_1(v51, v61);
          uint64_t v111 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 80))(v57, v61, v62);
          uint64_t v110 = v63;
          uint64_t v64 = v51[3];
          uint64_t v65 = v51[4];
          __swift_project_boxed_opaque_existential_1(v51, v64);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 88))(v57, v64, v65);
          uint64_t v66 = v51[3];
          uint64_t v67 = v51[4];
          __swift_project_boxed_opaque_existential_1(v51, v66);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v67 + 104))(&v134, v57, v66, v67);
          uint64_t v68 = v134;
          uint64_t v69 = v51[3];
          uint64_t v70 = v51[4];
          __swift_project_boxed_opaque_existential_1(v51, v69);
          uint64_t v71 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 96))(v57, v69, v70);
          if (v72)
          {
            uint64_t v73 = v71;
            unint64_t v74 = v72;
            uint64_t v75 = v127;
            uint64_t v76 = v130;
            uint64_t v77 = v131;
            uint64_t v78 = v120;
            uint64_t v79 = (uint64_t)v117;
            uint64_t v80 = (uint64_t)v116;
          }
          else
          {
            uint64_t v75 = v127;
            uint64_t v76 = v130;
            uint64_t v77 = v131;
            uint64_t v78 = v120;
            uint64_t v79 = (uint64_t)v117;
            uint64_t v80 = (uint64_t)v116;
            if (*(void *)(v114 + 16)
              && (v97 = sub_1A90A1D98(0x496E6F6973736573, 0xE900000000000044), uint64_t v78 = v120, (v98 & 1) != 0)
              && (sub_1A90A24B0(*(void *)(v114 + 56) + 32 * v97, (uint64_t)&v134), swift_dynamicCast()))
            {
              uint64_t v73 = v132;
              unint64_t v74 = v133;
            }
            else
            {
              unint64_t v74 = 0xE90000000000006ELL;
              uint64_t v73 = 0x6F69737365536F6ELL;
            }
          }
          if (v68 == 5)
          {
            swift_release();
            sub_1A90A2FD4(v78, v115);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v125 + 56))(v79, 1, 1, v124);
          }
          else
          {
            sub_1A916AC70();
            uint64_t v99 = v123;
            switch((unint64_t)v123)
            {
              case 1uLL:
                sub_1A916ACF0();
                uint64_t v102 = v80;
                uint64_t v103 = v126;
                sub_1A916ACD0();
                uint64_t v78 = v120;
                (*(void (**)(char *, uint64_t))(v121 + 8))(v99, v122);
                goto LABEL_33;
              case 2uLL:
              case 3uLL:
                uint64_t v102 = v80;
                uint64_t v103 = v126;
                sub_1A916ABE0();
                uint64_t v78 = v120;
                sub_1A916ABD0();
                goto LABEL_33;
              case 4uLL:
                uint64_t v102 = v80;
                uint64_t v103 = v126;
                sub_1A916AC00();
                uint64_t v78 = v120;
LABEL_33:
                uint64_t v100 = v124;
                break;
              default:
                uint64_t v100 = v124;
                uint64_t v101 = v80;
                uint64_t v102 = v80;
                uint64_t v103 = v126;
                (*(void (**)(uint64_t, void, uint64_t))(v125 + 16))(v101, v126, v124);
                break;
            }
            swift_release();
            sub_1A90A2FD4(v78, v115);
            uint64_t v104 = v125;
            (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v103, v100);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v104 + 56))(v102, 0, 1, v100);
            sub_1A90B5010(v102, v79);
            uint64_t v77 = v131;
          }
          uint64_t v105 = v136;
          uint64_t v106 = v112;
          v75[4] = v113;
          v75[5] = v106;
          uint64_t v107 = v111;
          v75[6] = v118;
          v75[7] = v107;
          v75[8] = v110;
          uint64_t v108 = (int *)type metadata accessor for Batch();
          sub_1A90B5010((uint64_t)v119, (uint64_t)v75 + v108[10]);
          unint64_t v109 = (void *)((char *)v75 + v108[11]);
          *unint64_t v109 = v73;
          v109[1] = v74;
          *uint64_t v75 = v114;
          v75[1] = v105;
          void v75[2] = v77;
          v75[3] = v76;
          *((unsigned char *)v75 + v108[12]) = 0;
          sub_1A90B5010(v79, (uint64_t)v75 + v108[13]);
          (*(void (**)(void *, void, uint64_t, int *))(*((void *)v108 - 1) + 56))(v75, 0, 1, v108);
          swift_bridgeObjectRetain();
          return swift_bridgeObjectRelease();
        }
        sub_1A91201D0();
        uint64_t v83 = (void *)swift_allocError();
        uint64_t v42 = v131;
        *(void *)uint64_t v96 = v131;
        *(void *)(v96 + 8) = v43;
        *(void *)(v96 + 16) = 0;
        *(void *)(v96 + 24) = 0;
        *(unsigned char *)(v96 + 32) = 64;
        swift_bridgeObjectRetain();
        swift_willThrow();
        sub_1A90A2FD4(v120, v115);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v94 = v136[2];
        sub_1A91201D0();
        uint64_t v83 = (void *)swift_allocError();
        *(void *)uint64_t v95 = v94;
        *(void *)(v95 + 8) = 0;
        *(void *)(v95 + 16) = 0;
        *(void *)(v95 + 24) = 0;
        *(unsigned char *)(v95 + 32) = 32;
        swift_willThrow();
        sub_1A90A2FD4(v120, v115);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v42 = v131;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v85 = v35;
      sub_1A90D1784(v120, v35);
      unint64_t v86 = sub_1A9147004(0xD00000000000003CLL, 0x80000001A91781F0, 512);
      unint64_t v88 = v87;
      BOOL v91 = v87 >> 60 != 15
         && (uint64_t v89 = (uint64_t)v86, v90 = sub_1A912EE1C((uint64_t)v86, v87), sub_1A90B07D4(v89, v88), (v90 & 0x100) == 0)
         && v90 == 1;
      sub_1A91201D0();
      uint64_t v83 = (void *)swift_allocError();
      *(void *)uint64_t v92 = v38;
      *(void *)(v92 + 8) = v39;
      uint64_t v93 = v120;
      *(void *)(v92 + 16) = v120;
      *(void *)(v92 + 24) = v85;
      *(unsigned char *)(v92 + 32) = v91;
      swift_willThrow();
      sub_1A90A2FD4(v93, v85);
    }
  }
  else
  {
    sub_1A91201D0();
    uint64_t v83 = (void *)swift_allocError();
    *(_OWORD *)uint64_t v84 = 0u;
    *(_OWORD *)(v84 + 16) = 0u;
    *(unsigned char *)(v84 + 32) = 0x80;
    swift_willThrow();
    sub_1A90A2FD4(v33, v35);
    uint64_t v43 = v130;
    uint64_t v42 = v131;
  }
  if (qword_1EB68ACE8 != -1) {
    swift_once();
  }
  id v25 = (id)qword_1EB689AA0;
  sub_1A916B3C0();
  sub_1A90CA164();
  uint64_t v26 = swift_allocObject();
  long long v126 = xmmword_1A916E200;
  *(_OWORD *)(v26 + 16) = xmmword_1A916E200;
  uint64_t v27 = MEMORY[0x1E4FBB1A0];
  *(void *)(v26 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v28 = sub_1A90A67C0();
  *(void *)(v26 + 64) = v28;
  *(void *)(v26 + 32) = v42;
  *(void *)(v26 + 40) = v43;
  uint64_t v134 = 0;
  unint64_t v135 = 0xE000000000000000;
  uint64_t v132 = (uint64_t)v83;
  sub_1A908E870(0, (unint64_t *)&qword_1EB689860);
  swift_bridgeObjectRetain();
  sub_1A916B780();
  uint64_t v29 = v134;
  unint64_t v30 = v135;
  *(void *)(v26 + 96) = v27;
  *(void *)(v26 + 104) = v28;
  *(void *)(v26 + 72) = v29;
  *(void *)(v26 + 80) = v30;
  sub_1A916AD30();

  swift_bridgeObjectRelease();
  uint64_t v31 = v128[3];
  uint64_t v32 = v128[4];
  __swift_project_boxed_opaque_existential_1(v128, v31);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v129, v31, v32);

  swift_release();
  uint64_t v81 = type metadata accessor for Batch();
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v127, 1, 1, v81);
}

uint64_t sub_1A911BE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1A911A9E4(a2, a3);
  uint64_t v7 = v3 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager;
  uint64_t v8 = *(void *)(v3 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 24);
  uint64_t v9 = *(void *)(v3 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager), v8);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v9 + 32))(&v34, v6, v8, v9);
  if (v4) {
    return swift_release();
  }
  if (v35 != 1)
  {
    sub_1A91201D0();
    swift_allocError();
    uint64_t v25 = 2;
LABEL_10:
    *(void *)uint64_t v24 = v25;
    *(void *)(v24 + 8) = 0;
    *(void *)(v24 + 16) = 0;
    *(void *)(v24 + 24) = 0;
    *(unsigned char *)(v24 + 32) = 0x80;
    swift_willThrow();
    return swift_release();
  }
  if (!v34)
  {
    sub_1A91201D0();
    swift_allocError();
    uint64_t v25 = 3;
    goto LABEL_10;
  }
  sub_1A90A0DC8(v7, (uint64_t)v31);
  uint64_t v10 = v32;
  uint64_t v11 = v33;
  __swift_project_boxed_opaque_existential_1(v31, v32);
  sub_1A90A6CFC(0, &qword_1EB6894C0, (uint64_t (*)(uint64_t))sub_1A90B2774, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A916E200;
  *(void *)(inited + 32) = 1701869940;
  *(void *)(inited + 40) = 0xE400000000000000;
  uint64_t v13 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = 0x746E657665;
  *(void *)(inited + 56) = 0xE500000000000000;
  *(void *)(inited + 72) = v13;
  *(void *)(inited + 80) = 1635017060;
  *(void *)(inited + 88) = 0xE400000000000000;
  sub_1A90A250C();
  *(void *)(inited + 120) = v14;
  *(void *)(inited + 96) = a1;
  swift_bridgeObjectRetain();
  sub_1A90B2180(inited);
  uint64_t v15 = self;
  char v16 = (void *)sub_1A916AEB0();
  swift_bridgeObjectRelease();
  id v28 = 0;
  id v17 = objc_msgSend(v15, sel_dataWithJSONObject_options_error_, v16, 0, &v28);

  id v18 = v28;
  if (v17)
  {
    uint64_t v19 = sub_1A916AB80();
    unint64_t v21 = v20;

    uint64_t v29 = v19;
    unint64_t v30 = v21;
    if (qword_1EB688DD0 != -1) {
      swift_once();
    }
    sub_1A916ABA0();
    uint64_t v22 = v29;
    unint64_t v23 = v30;
    (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(v29, v30, v6, v10, v11);
    swift_release();
    sub_1A90A2FD4(v22, v23);
  }
  else
  {
    uint64_t v27 = v18;
    sub_1A916A990();

    swift_willThrow();
    swift_release();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
}

void sub_1A911C1B8(uint64_t a1)
{
  void (*v18)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  id v48[3];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;

  uint64_t v3 = v2;
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  uint64_t v38 = OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_lock;
  os_unfair_lock_lock_with_options();
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v41 = v4 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  unint64_t v39 = v1;
  uint64_t v43 = *(void *)(v1 + 40);
  unint64_t v44 = (void *)(v1 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager);
  uint64_t v42 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        if (v8)
        {
          unint64_t v10 = __clz(__rbit64(v8));
          v8 &= v8 - 1;
          unint64_t v11 = v10 | (v9 << 6);
        }
        else
        {
          if (__OFADD__(v9++, 1))
          {
            __break(1u);
            goto LABEL_39;
          }
          if (v9 >= v42) {
            goto LABEL_35;
          }
          unint64_t v13 = *(void *)(v41 + 8 * v9);
          if (!v13)
          {
            int64_t v14 = v9 + 1;
            if (v9 + 1 >= v42) {
              goto LABEL_35;
            }
            unint64_t v13 = *(void *)(v41 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 2;
              if (v9 + 2 >= v42) {
                goto LABEL_35;
              }
              unint64_t v13 = *(void *)(v41 + 8 * v14);
              if (!v13)
              {
                int64_t v14 = v9 + 3;
                if (v9 + 3 >= v42) {
                  goto LABEL_35;
                }
                unint64_t v13 = *(void *)(v41 + 8 * v14);
                if (!v13)
                {
                  int64_t v14 = v9 + 4;
                  if (v9 + 4 >= v42)
                  {
LABEL_35:
                    swift_release();
                    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(v39 + v38) + 16));
                    return;
                  }
                  unint64_t v13 = *(void *)(v41 + 8 * v14);
                  if (!v13)
                  {
                    while (1)
                    {
                      int64_t v9 = v14 + 1;
                      if (__OFADD__(v14, 1)) {
                        break;
                      }
                      if (v9 >= v42) {
                        goto LABEL_35;
                      }
                      unint64_t v13 = *(void *)(v41 + 8 * v9);
                      ++v14;
                      if (v13) {
                        goto LABEL_19;
                      }
                    }
LABEL_39:
                    __break(1u);
                  }
                }
              }
            }
            int64_t v9 = v14;
          }
LABEL_19:
          unint64_t v8 = (v13 - 1) & v13;
          unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
        }
        uint64_t v15 = *(void *)(*(void *)(v43 + 56) + 8 * v11);
        uint64_t v16 = v44[3];
        uint64_t v17 = v44[4];
        __swift_project_boxed_opaque_existential_1(v44, v16);
        id v18 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v17 + 32);
        uint64_t v19 = swift_retain();
        v18(&v51, v19, v16, v17);
        if (v3)
        {
          swift_release();
          swift_release();
          goto LABEL_37;
        }
        if (v52 == 1 && v51) {
          break;
        }
        swift_release();
      }
      sub_1A90A0DC8((uint64_t)v44, (uint64_t)v48);
      unint64_t v20 = v49;
      unint64_t v21 = v50;
      __swift_project_boxed_opaque_existential_1(v48, v49);
      sub_1A90A6CFC(0, &qword_1EB6894C0, (uint64_t (*)(uint64_t))sub_1A90B2774, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1A916E200;
      *(void *)(inited + 32) = 1701869940;
      *(void *)(inited + 40) = 0xE400000000000000;
      *(void *)(inited + 48) = 0x6E6F6973736573;
      *(void *)(inited + 56) = 0xE700000000000000;
      *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
      *(void *)(inited + 80) = 1635017060;
      *(void *)(inited + 88) = 0xE400000000000000;
      sub_1A90A250C();
      *(void *)(inited + 120) = v23;
      *(void *)(inited + 96) = a1;
      swift_bridgeObjectRetain();
      sub_1A90B2180(inited);
      uint64_t v24 = self;
      uint64_t v25 = (void *)sub_1A916AEB0();
      swift_bridgeObjectRelease();
      unint64_t v45 = 0;
      uint64_t v26 = objc_msgSend(v24, sel_dataWithJSONObject_options_error_, v25, 0, &v45);

      uint64_t v27 = v45;
      if (!v26) {
        break;
      }
      id v28 = sub_1A916AB80();
      unint64_t v30 = v29;

      unint64_t v46 = v28;
      unint64_t v47 = v30;
      if (qword_1EB688DD0 != -1) {
        swift_once();
      }
      sub_1A916ABA0();
      uint64_t v32 = v46;
      uint64_t v31 = v47;
      (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8))(v46, v47, v15, v20, v21);
      swift_release();
      sub_1A90A2FD4(v32, v31);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v48);
    }
    uint64_t v33 = v27;
    uint64_t v34 = (void *)sub_1A916A990();

    swift_willThrow();
    uint64_t v3 = 0;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v48);
    v48[0] = v34;
    char v35 = v34;
    sub_1A908E870(0, (unint64_t *)&qword_1EB689860);
    if (!swift_dynamicCast() || (v46 & 1) != 0) {
      break;
    }

    unint64_t v37 = *(void *)(v15 + 16);
    uint64_t v36 = *(void *)(v15 + 24);
    swift_bridgeObjectRetain();
    sub_1A911AD84(v37, v36);
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_release();
  swift_release();

LABEL_37:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(v39 + v38) + 16));
}

void sub_1A911C760()
{
  sub_1A90A6CFC(0, &qword_1EB689868, (uint64_t (*)(uint64_t))type metadata accessor for Batch, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v49 = (void *)((char *)v43 - v2);
  uint64_t v3 = type metadata accessor for Batch();
  uint64_t v47 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v46 = (uint64_t)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v43 - v6;
  uint64_t v8 = sub_1A916AAD0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_lock;
  os_unfair_lock_lock_with_options();
  uint64_t v12 = (void *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager);
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 24);
  uint64_t v14 = *(void *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager), v13);
  uint64_t v54 = v0;
  sub_1A9119550();
  uint64_t v15 = v57;
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 128))(v11, v13, v14);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
LABEL_3:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(v54 + v50) + 16));
    return;
  }
  uint64_t v17 = v16;
  uint64_t v53 = v12;
  uint64_t v57 = 0;
  unint64_t v45 = v7;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v18 = *(void *)(v17 + 16);
  v43[1] = v17;
  if (v18)
  {
    uint64_t v52 = v54 + 40;
    swift_beginAccess();
    unint64_t v44 = (unsigned int (**)(void *, uint64_t, uint64_t))(v47 + 48);
    uint64_t v19 = (uint64_t *)(v17 + 40);
    unint64_t v51 = MEMORY[0x1E4FBC860];
    unint64_t v20 = v53;
    while (1)
    {
      uint64_t v21 = *(v19 - 1);
      uint64_t v22 = *v19;
      uint64_t v23 = *(void *)(*(void *)v52 + 16);
      swift_bridgeObjectRetain();
      if (v23)
      {
        swift_bridgeObjectRetain();
        sub_1A90A1D98(v21, v22);
        char v25 = v24;
        swift_bridgeObjectRelease();
      }
      else
      {
        char v25 = 0;
      }
      uint64_t v26 = sub_1A911A9E4(v21, v22);
      uint64_t v27 = v20;
      uint64_t v28 = v20[3];
      uint64_t v29 = v27[4];
      __swift_project_boxed_opaque_existential_1(v27, v28);
      uint64_t v30 = v57;
      uint64_t v31 = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v29 + 32))(&v55, v26, v28, v29);
      uint64_t v57 = v30;
      if (v30) {
        break;
      }
      if (v56 == 1)
      {
        unint64_t v20 = v53;
        if (!((v55 == 0) | v25 & 1))
        {
          uint64_t v32 = (void *)MEMORY[0x1AD0EE490](v31);
          uint64_t v33 = v21;
          uint64_t v34 = v49;
          sub_1A911AF98(v33, v22, v49);
          if ((*v44)(v34, 1, v48) == 1)
          {
            sub_1A908FF14((uint64_t)v34, &qword_1EB689868, (uint64_t (*)(uint64_t))type metadata accessor for Batch);
          }
          else
          {
            uint64_t v35 = (uint64_t)v45;
            sub_1A91203A4((uint64_t)v34, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for Batch);
            uint64_t v36 = v46;
            sub_1A912046C(v35, v46, (uint64_t (*)(void))type metadata accessor for Batch);
            if (swift_isUniquelyReferenced_nonNull_native()) {
              unint64_t v37 = v51;
            }
            else {
              unint64_t v37 = sub_1A90C2EC8(0, *(void *)(v51 + 16) + 1, 1, v51);
            }
            unint64_t v39 = *(void *)(v37 + 16);
            unint64_t v38 = *(void *)(v37 + 24);
            uint64_t v40 = v47;
            if (v39 >= v38 >> 1)
            {
              uint64_t v42 = sub_1A90C2EC8(v38 > 1, v39 + 1, 1, v37);
              uint64_t v40 = v47;
              unint64_t v37 = v42;
            }
            *(void *)(v37 + 16) = v39 + 1;
            unint64_t v41 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
            unint64_t v51 = v37;
            sub_1A91203A4(v36, v37 + v41 + *(void *)(v40 + 72) * v39, (uint64_t (*)(void))type metadata accessor for Batch);
            sub_1A912040C((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for Batch);
          }
        }
      }
      else
      {
        unint64_t v20 = v53;
      }
      v19 += 2;
      swift_bridgeObjectRelease();
      swift_release();
      if (!--v18) {
        goto LABEL_24;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  unint64_t v51 = MEMORY[0x1E4FBC860];
LABEL_24:
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(v54 + v50) + 16));
}

void *sub_1A911CCFC()
{
  uint64_t v33 = sub_1A916AAD0();
  uint64_t v2 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v4 = (void *)((char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_lock;
  os_unfair_lock_lock_with_options();
  uint64_t v6 = (void *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager);
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 24);
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager), v7);
  uint64_t v32 = v0;
  sub_1A9119550();
  uint64_t v9 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 128))(v4, v7, v8);
  if (v1)
  {
    (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v33);
    goto LABEL_3;
  }
  uint64_t v10 = v9;
  uint64_t v38 = 0;
  uint64_t v31 = v6;
  uint64_t v29 = v5;
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v33);
  uint64_t v11 = *(void *)(v10 + 16);
  v28[1] = v10;
  if (!v11)
  {
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
LABEL_22:
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(v32 + v29) + 16));
    return v4;
  }
  uint64_t v30 = v32 + 40;
  swift_beginAccess();
  uint64_t v12 = (uint64_t *)(v10 + 40);
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v33 = (uint64_t)v4;
    uint64_t v13 = *(v12 - 1);
    uint64_t v14 = *v12;
    uint64_t v15 = *(void *)(*(void *)v30 + 16);
    swift_bridgeObjectRetain();
    if (v15)
    {
      swift_bridgeObjectRetain();
      sub_1A90A1D98(v13, v14);
      char v17 = v16;
      swift_bridgeObjectRelease();
    }
    else
    {
      char v17 = 0;
    }
    uint64_t v18 = v13;
    uint64_t v19 = sub_1A911A9E4(v13, v14);
    uint64_t v20 = v31[3];
    uint64_t v4 = (void *)v31[4];
    __swift_project_boxed_opaque_existential_1(v31, v20);
    uint64_t v21 = v38;
    ((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, void *))v4[4])(&v36, v19, v20, v4);
    uint64_t v38 = v21;
    if (v21) {
      break;
    }
    if (v37 != 1) {
      goto LABEL_16;
    }
    if (v36 && (v17 & 1) == 0)
    {
      uint64_t v22 = v31[3];
      uint64_t v23 = v31[4];
      __swift_project_boxed_opaque_existential_1(v31, v22);
      uint64_t v34 = 1;
      char v35 = 0;
      (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v23 + 40))(v19, &v34, v22, v23);
LABEL_16:
      uint64_t v4 = (void *)v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_1A9093AE4(0, v4[2] + 1, 1, v4);
      }
      unint64_t v25 = v4[2];
      unint64_t v24 = v4[3];
      if (v25 >= v24 >> 1) {
        uint64_t v4 = sub_1A9093AE4((void *)(v24 > 1), v25 + 1, 1, v4);
      }
      v4[2] = v25 + 1;
      uint64_t v26 = &v4[2 * v25];
      v26[4] = v18;
      v26[5] = v14;
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
    uint64_t v4 = (void *)v33;
LABEL_7:
    v12 += 2;
    swift_release();
    if (!--v11) {
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v5 = v29;
LABEL_3:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(v32 + v5) + 16));
  return v4;
}

void sub_1A911D0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v7 = v6;
  uint64_t v8 = v5;
  uint64_t v14 = OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_lock;
  os_unfair_lock_lock_with_options();
  switch(a5)
  {
    case 1u:
      if (!a4) {
        goto LABEL_5;
      }
      goto LABEL_3;
    case 3u:
      uint64_t v62 = v14;
      if (qword_1EB68ACE8 != -1) {
        swift_once();
      }
      id v19 = (id)qword_1EB689AA0;
      sub_1A916B3C0();
      sub_1A90CA164();
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1A916E200;
      uint64_t v21 = MEMORY[0x1E4FBB1A0];
      *(void *)(v20 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v22 = sub_1A90A67C0();
      *(void *)(v20 + 64) = v22;
      *(void *)(v20 + 32) = a1;
      *(void *)(v20 + 40) = a2;
      swift_bridgeObjectRetain();
      unint64_t v23 = ContentType.description.getter(a3);
      *(void *)(v20 + 96) = v21;
      *(void *)(v20 + 104) = v22;
      *(void *)(v20 + 72) = v23;
      *(void *)(v20 + 80) = v24;
      sub_1A916AD30();

      swift_bridgeObjectRelease();
      uint64_t v25 = *(void *)(v8 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 24);
      uint64_t v26 = *(void *)(v8 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 32);
      __swift_project_boxed_opaque_existential_1((void *)(v8 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager), v25);
      uint64_t v27 = sub_1A911A9E4(a1, a2);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v27, v25, v26);
      uint64_t v7 = v6;
      goto LABEL_10;
    case 4u:
      if (a3 | a4)
      {
        if (qword_1EB68ACE8 == -1) {
          goto LABEL_28;
        }
      }
      else if (qword_1EB68ACE8 == -1)
      {
        goto LABEL_28;
      }
      swift_once();
LABEL_28:
      uint64_t v40 = (void *)qword_1EB689AA0;
      sub_1A90CA164();
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = xmmword_1A916EF60;
      *(void *)(v41 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v41 + 64) = sub_1A90A67C0();
      *(void *)(v41 + 32) = a1;
      *(void *)(v41 + 40) = a2;
      swift_bridgeObjectRetain();
      id v42 = v40;
      sub_1A916B3D0();
      sub_1A916AD30();

      swift_bridgeObjectRelease();
      goto LABEL_35;
    default:
LABEL_3:
      swift_bridgeObjectRetain();
      sub_1A90CE08C(a3, a4, a5);
      sub_1A911FD6C(a1, a2, 0x65736E6F70736572, 0xED00006E6F736A2ELL, v8, a3, a4);
      swift_bridgeObjectRelease_n();
      if (!a5)
      {
        if (qword_1EB68ACE8 != -1) {
          swift_once();
        }
        uint64_t v29 = (void *)qword_1EB689AA0;
        sub_1A90CA164();
        uint64_t v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = xmmword_1A916EF60;
        *(void *)(v30 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v30 + 64) = sub_1A90A67C0();
        *(void *)(v30 + 32) = a1;
        *(void *)(v30 + 40) = a2;
        swift_bridgeObjectRetain();
        id v31 = v29;
        sub_1A916B3D0();
        sub_1A916AD30();

        goto LABEL_21;
      }
      if (a5 != 1)
      {
        if (qword_1EB68ACE8 != -1) {
          swift_once();
        }
        id v32 = (id)qword_1EB689AA0;
        sub_1A916B3C0();
        sub_1A90CA164();
        uint64_t v33 = swift_allocObject();
        *(_OWORD *)(v33 + 16) = xmmword_1A916EF60;
        *(void *)(v33 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v33 + 64) = sub_1A90A67C0();
        *(void *)(v33 + 32) = a1;
        *(void *)(v33 + 40) = a2;
        swift_bridgeObjectRetain();
        sub_1A916AD30();

LABEL_21:
        swift_bridgeObjectRelease();
        uint64_t v34 = *(void *)(v8 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 32);
        __swift_project_boxed_opaque_existential_1((void *)(v8 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager), *(void *)(v8 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 24));
        sub_1A911A9E4(a1, a2);
        (*(void (**)(void))(v34 + 48))();
        swift_release();
        goto LABEL_35;
      }
LABEL_5:
      uint64_t v62 = v14;
      uint64_t v15 = sub_1A911A9E4(a1, a2);
      char v16 = (void *)(v8 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager);
      uint64_t v17 = *(void *)(v8 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 24);
      uint64_t v18 = *(void *)(v8 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 32);
      __swift_project_boxed_opaque_existential_1((void *)(v8 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager), v17);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v18 + 32))(&v60, v15, v17, v18);
      if (v6)
      {
        swift_release();
LABEL_11:
        uint64_t v28 = *(void *)(v8 + v62);
        goto LABEL_36;
      }
      uint64_t v35 = v60;
      uint64_t v14 = v62;
      if (v61 == 1)
      {
        if (!v60)
        {
          if (qword_1EB68ACE8 != -1) {
            swift_once();
          }
          id v55 = (id)qword_1EB689AA0;
          sub_1A916B3B0();
          sub_1A90CA164();
          uint64_t v56 = swift_allocObject();
          *(_OWORD *)(v56 + 16) = xmmword_1A916EF60;
          *(void *)(v56 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v56 + 64) = sub_1A90A67C0();
          *(void *)(v56 + 32) = a1;
          *(void *)(v56 + 40) = a2;
          swift_bridgeObjectRetain();
          sub_1A916AD30();

          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_35;
        }
        if (qword_1EB68ACE8 != -1) {
          swift_once();
        }
        id v36 = (id)qword_1EB689AA0;
        sub_1A916B3B0();
        sub_1A90CA164();
        uint64_t v37 = swift_allocObject();
        *(_OWORD *)(v37 + 16) = xmmword_1A916EF60;
        *(void *)(v37 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v37 + 64) = sub_1A90A67C0();
        *(void *)(v37 + 32) = a1;
        *(void *)(v37 + 40) = a2;
        swift_bridgeObjectRetain();
        sub_1A916AD30();

        swift_bridgeObjectRelease();
        uint64_t v38 = v16[3];
        uint64_t v39 = v16[4];
        __swift_project_boxed_opaque_existential_1(v16, v38);
        uint64_t v58 = 2;
      }
      else
      {
        if (v60 >= *(void *)(*(void *)(v8 + 24) + OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries))
        {
          if (qword_1EB68ACE8 != -1) {
            swift_once();
          }
          id v57 = (id)qword_1EB689AA0;
          sub_1A916B3C0();
          sub_1A90CA164();
          uint64_t v48 = swift_allocObject();
          *(_OWORD *)(v48 + 16) = xmmword_1A916E200;
          uint64_t v58 = v35;
          uint64_t v49 = sub_1A916B990();
          uint64_t v51 = v50;
          *(void *)(v48 + 56) = MEMORY[0x1E4FBB1A0];
          unint64_t v52 = sub_1A90A67C0();
          *(void *)(v48 + 32) = v49;
          *(void *)(v48 + 40) = v51;
          *(void *)(v48 + 96) = MEMORY[0x1E4FBB1A0];
          *(void *)(v48 + 104) = v52;
          *(void *)(v48 + 64) = v52;
          *(void *)(v48 + 72) = a1;
          *(void *)(v48 + 80) = a2;
          swift_bridgeObjectRetain();
          sub_1A916AD30();

          swift_bridgeObjectRelease();
          uint64_t v53 = v16[3];
          uint64_t v54 = v16[4];
          __swift_project_boxed_opaque_existential_1(v16, v53);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v15, v53, v54);
LABEL_10:
          swift_release();
          if (v7) {
            goto LABEL_11;
          }
          goto LABEL_34;
        }
        if (qword_1EB68ACE8 != -1) {
          swift_once();
        }
        uint64_t v43 = (void *)qword_1EB689AA0;
        sub_1A90CA164();
        uint64_t v44 = swift_allocObject();
        *(_OWORD *)(v44 + 16) = xmmword_1A916E200;
        uint64_t v45 = v35 + 1;
        uint64_t v46 = MEMORY[0x1E4FBB5C8];
        *(void *)(v44 + 56) = MEMORY[0x1E4FBB550];
        *(void *)(v44 + 64) = v46;
        *(void *)(v44 + 32) = v45;
        *(void *)(v44 + 96) = MEMORY[0x1E4FBB1A0];
        *(void *)(v44 + 104) = sub_1A90A67C0();
        *(void *)(v44 + 72) = a1;
        *(void *)(v44 + 80) = a2;
        swift_bridgeObjectRetain();
        id v47 = v43;
        sub_1A916B3D0();
        sub_1A916AD30();

        swift_bridgeObjectRelease();
        uint64_t v38 = v16[3];
        uint64_t v39 = v16[4];
        __swift_project_boxed_opaque_existential_1(v16, v38);
        uint64_t v58 = v45;
      }
      char v59 = 0;
      (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v39 + 40))(v15, &v58, v38, v39);
      swift_release();
LABEL_34:
      uint64_t v14 = v62;
LABEL_35:
      uint64_t v28 = *(void *)(v8 + v14);
LABEL_36:
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v28 + 16));
      return;
  }
}

uint64_t sub_1A911DB24(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, void **a5, void *a6)
{
  v43[4] = *(id *)MEMORY[0x1E4F143B8];
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1A912F4C8(a1, a2, a3, a4);
  unint64_t v14 = v13;
  uint64_t v15 = self;
  char v16 = (void *)sub_1A916AB60();
  v43[0] = 0;
  id v17 = objc_msgSend(v15, sel_JSONObjectWithData_options_error_, v16, 0, v43);

  if (!v17)
  {
    id v31 = v43[0];
    id v32 = (void *)sub_1A916A990();

    swift_willThrow();
    goto LABEL_18;
  }
  id v18 = v43[0];
  sub_1A916B5F0();
  swift_unknownObjectRelease();
  sub_1A90A250C();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_18:
    sub_1A91201D0();
    swift_allocError();
    *(void *)uint64_t v33 = 1;
    char v34 = 0x80;
LABEL_20:
    *(void *)(v33 + 8) = 0;
    *(void *)(v33 + 16) = 0;
    *(void *)(v33 + 24) = 0;
    *(unsigned char *)(v33 + 32) = v34;
    swift_willThrow();
    return sub_1A90A2FD4(v12, v14);
  }
  if (!*(void *)(v42 + 16)
    || (unint64_t v19 = sub_1A90A1D98(1701869940, 0xE400000000000000), (v20 & 1) == 0)
    || (sub_1A90A24B0(*(void *)(v42 + 56) + 32 * v19, (uint64_t)v43), (swift_dynamicCast() & 1) == 0)
    || (v41 = a5, unint64_t v21 = sub_1A916B870(), swift_bridgeObjectRelease(), v21 > 1)
    || !*(void *)(v42 + 16)
    || (unint64_t v22 = sub_1A90A1D98(1635017060, 0xE400000000000000), (v23 & 1) == 0)
    || (sub_1A90A24B0(*(void *)(v42 + 56) + 32 * v22, (uint64_t)v43), (swift_dynamicCast() & 1) == 0))
  {
    sub_1A91201D0();
    swift_allocError();
    *(void *)uint64_t v33 = v42;
    char v34 = 96;
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = MEMORY[0x1E4FBB1A0];
  uint64_t v25 = (void *)sub_1A916AEB0();
  unsigned int v26 = objc_msgSend(v15, sel_isValidJSONObject_, v25);

  if (v21)
  {
    if (v26)
    {
      uint64_t v27 = *v41;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v41 = v27;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v27 = sub_1A90C3814(0, v27[2] + 1, 1, v27);
        *uint64_t v41 = v27;
      }
      unint64_t v30 = v27[2];
      unint64_t v29 = v27[3];
      if (v30 >= v29 >> 1)
      {
        uint64_t v27 = sub_1A90C3814((void *)(v29 > 1), v30 + 1, 1, v27);
        *uint64_t v41 = v27;
      }
      _OWORD v27[2] = v30 + 1;
      v27[v30 + 4] = v42;
      return sub_1A90A2FD4(v12, v14);
    }
    if (qword_1EB68ACE8 == -1) {
      goto LABEL_27;
    }
    goto LABEL_29;
  }
  if (!v26)
  {
    if (qword_1EB68ACE8 == -1)
    {
LABEL_27:
      id v36 = (id)qword_1EB689AA0;
      sub_1A916B3C0();
      sub_1A90CA164();
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_1A916EF60;
      uint64_t v38 = sub_1A916AEE0();
      uint64_t v40 = v39;
      swift_bridgeObjectRelease();
      *(void *)(v37 + 56) = v24;
      *(void *)(v37 + 64) = sub_1A90A67C0();
      *(void *)(v37 + 32) = v38;
      *(void *)(v37 + 40) = v40;
      sub_1A916AD30();
      sub_1A90A2FD4(v12, v14);

      return swift_bridgeObjectRelease();
    }
LABEL_29:
    swift_once();
    goto LABEL_27;
  }
  sub_1A90A2FD4(v12, v14);
  *a6 = v42;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A911E098()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_1A908FF14(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_currentSession, (unint64_t *)&qword_1EB68ACC8, (uint64_t (*)(uint64_t))type metadata accessor for Session);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_pathProvider);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager);
  swift_release();

  return v0;
}

uint64_t sub_1A911E13C()
{
  sub_1A911E098();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t sub_1A911E194()
{
  return type metadata accessor for UploadDropbox(0);
}

uint64_t type metadata accessor for UploadDropbox(uint64_t a1)
{
  return sub_1A9098ED8(a1, (uint64_t *)&unk_1EB689C08);
}

void sub_1A911E1BC()
{
  sub_1A90A6CFC(319, (unint64_t *)&qword_1EB68ACC8, (uint64_t (*)(uint64_t))type metadata accessor for Session, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t *sub_1A911E2C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    sub_1A911E430();
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v11 = sub_1A916AAD0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
  }
  return a1;
}

void sub_1A911E430()
{
  if (!qword_1EB689990)
  {
    unint64_t v0 = sub_1A916AAD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB689990);
    }
  }
}

uint64_t sub_1A911E480(uint64_t a1)
{
  sub_1A911E430();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = sub_1A916AAD0();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *sub_1A911E530(void *a1, const void *a2, uint64_t a3)
{
  sub_1A911E430();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_1A916AAD0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  return a1;
}

void *sub_1A911E65C(void *a1, void *a2, uint64_t a3)
{
  sub_1A911E430();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 1, v6);
  int v11 = v9(a2, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v14 = sub_1A916AAD0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 24))(a1, a2, v14);
      return a1;
    }
    sub_1A912040C((uint64_t)a1, (uint64_t (*)(void))sub_1A911E430);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v12 = sub_1A916AAD0();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return a1;
}

void *sub_1A911E810(void *a1, const void *a2, uint64_t a3)
{
  sub_1A911E430();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_1A916AAD0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  return a1;
}

void *sub_1A911E93C(void *a1, void *a2, uint64_t a3)
{
  sub_1A911E430();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 1, v6);
  int v11 = v9(a2, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v14 = sub_1A916AAD0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 40))(a1, a2, v14);
      return a1;
    }
    sub_1A912040C((uint64_t)a1, (uint64_t (*)(void))sub_1A911E430);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v12 = sub_1A916AAD0();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return a1;
}

uint64_t sub_1A911EAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A911EB04);
}

uint64_t sub_1A911EB04(uint64_t a1, uint64_t a2)
{
  sub_1A911E430();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1A911EB70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A911EB84);
}

uint64_t sub_1A911EB84(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  sub_1A911E430();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_1A911EC04(uint64_t a1)
{
  sub_1A911E430();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 1, v2);
}

uint64_t sub_1A911EC6C(uint64_t a1, uint64_t a2)
{
  sub_1A911E430();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 1, v4);
}

uint64_t type metadata accessor for UploadDropbox.Debugging(uint64_t a1)
{
  return sub_1A9098ED8(a1, (uint64_t *)&unk_1EB689B88);
}

uint64_t sub_1A911ECFC(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_1A911F1A0(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    unint64_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_1A916B0E0();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_1A916B040();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_1A916B040();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_1A916B100();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v13 = sub_1A90C2C50(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    unint64_t v13 = sub_1A90C2C50((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  _OWORD v13[2] = v27 + 1;
  uint64_t v28 = &v13[4 * v27];
  _DWORD v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_1A916B040();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_1A916B100();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v13 = sub_1A90C2C50(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      unint64_t v13 = sub_1A90C2C50((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    _OWORD v13[2] = v39 + 1;
    uint64_t v40 = &v13[4 * v39];
    v40[4] = v31;
    void v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_1A916B7B0();
  __break(1u);
LABEL_42:
  uint64_t result = sub_1A916B7B0();
  __break(1u);
  return result;
}

uint64_t sub_1A911F1A0(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_1A916B100();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_1A90C2C50(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_1A90C2C50((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    _OWORD v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_1A916B7B0();
  __break(1u);
  return result;
}

uint64_t sub_1A911F2FC(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, void (*a6)(char *, uint64_t), uint64_t a7, uint64_t a8)
{
  uint64_t v64 = a6;
  uint64_t v65 = a8;
  uint64_t v62 = a4;
  uint64_t v63 = (char *)a7;
  char v61 = a3;
  uint64_t v69 = *MEMORY[0x1E4F143B8];
  sub_1A90A6CFC(0, &qword_1EB689868, (uint64_t (*)(uint64_t))type metadata accessor for Batch, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char **)((char *)&v61 - v9);
  uint64_t v11 = sub_1A916AAD0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (char *)&v61 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v61 - v19;
  uint64_t v21 = type metadata accessor for UploadDropbox.Debugging(0);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A90D8864((uint64_t)v23);
  sub_1A911E430();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v23, 1, v24);
  if (result != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v23, v11);
    sub_1A916AA50();
    sub_1A916AA60();
    uint64_t v28 = *(void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v27 = v12 + 8;
    unint64_t v26 = v28;
    v28(v14, v11);
    sub_1A911AF98((uint64_t)v63, v65, v10);
    uint64_t v29 = type metadata accessor for Batch();
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v10, 1, v29) == 1)
    {
      sub_1A908FF14((uint64_t)v10, &qword_1EB689868, (uint64_t (*)(uint64_t))type metadata accessor for Batch);
LABEL_15:
      v26(v17, v11);
      return ((uint64_t (*)(char *, uint64_t))v26)(v20, v11);
    }
    uint64_t v63 = v20;
    uint64_t v64 = v26;
    uint64_t v65 = v11;
    unint64_t v30 = Batch.toJSONObject()();
    char v61 = v17;
    uint64_t v62 = v27;
    uint64_t v31 = self;
    uint64_t v32 = MEMORY[0x1E4FBB1A0];
    uint64_t v33 = (void *)sub_1A916AEB0();
    unsigned __int8 v34 = objc_msgSend(v31, sel_isValidJSONObject_, v33);

    if (v34)
    {
      uint64_t v35 = (void *)sub_1A916AEB0();
      swift_bridgeObjectRelease();
      id v67 = 0;
      id v36 = objc_msgSend(v31, sel_dataWithJSONObject_options_error_, v35, 0, &v67);

      id v37 = v67;
      if (v36)
      {
        uint64_t v38 = sub_1A916AB80();
        unint64_t v40 = v39;

        sub_1A912040C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Batch);
        unint64_t v17 = v61;
        sub_1A916AB90();
        sub_1A90A2FD4(v38, v40);
LABEL_14:
        unint64_t v26 = v64;
        uint64_t v11 = v65;
        uint64_t v20 = v63;
        goto LABEL_15;
      }
      uint64_t v50 = v37;
      uint64_t v46 = (void *)sub_1A916A990();

      swift_willThrow();
      uint64_t v49 = v61;
      p_cache = _TtC12AppAnalytics13CrashDetector.cache;
    }
    else
    {
      if (qword_1EB68ACE8 != -1) {
        swift_once();
      }
      id v41 = (id)qword_1EB689AA0;
      sub_1A916B3C0();
      sub_1A90CA164();
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_1A916EF60;
      uint64_t v43 = sub_1A916AEE0();
      uint64_t v45 = v44;
      *(void *)(v42 + 56) = v32;
      *(void *)(v42 + 64) = sub_1A90A67C0();
      *(void *)(v42 + 32) = v43;
      *(void *)(v42 + 40) = v45;
      sub_1A916AD30();

      swift_bridgeObjectRelease();
      sub_1A90F7E7C();
      uint64_t v46 = (void *)swift_allocError();
      *(void *)uint64_t v47 = v30;
      *(unsigned char *)(v47 + 8) = 0;
      swift_willThrow();
      p_cache = (void **)(_TtC12AppAnalytics13CrashDetector + 16);
      uint64_t v49 = v61;
    }
    sub_1A912040C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Batch);
    uint64_t v51 = MEMORY[0x1E4FBB1A0];
    if (qword_1EB68ACE8 != -1) {
      swift_once();
    }
    id v52 = p_cache[340];
    sub_1A916B3B0();
    sub_1A90CA164();
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_1A916E200;
    uint64_t v54 = sub_1A916AA90();
    id v55 = v49;
    uint64_t v57 = v56;
    *(void *)(v53 + 56) = v51;
    unint64_t v58 = sub_1A90A67C0();
    *(void *)(v53 + 64) = v58;
    *(void *)(v53 + 32) = v54;
    *(void *)(v53 + 40) = v57;
    unint64_t v17 = v55;
    id v67 = 0;
    unint64_t v68 = 0xE000000000000000;
    uint64_t v66 = v46;
    sub_1A908E870(0, (unint64_t *)&qword_1EB689860);
    sub_1A916B780();
    id v59 = v67;
    unint64_t v60 = v68;
    *(void *)(v53 + 96) = v51;
    *(void *)(v53 + 104) = v58;
    *(void *)(v53 + 72) = v59;
    *(void *)(v53 + 80) = v60;
    sub_1A916AD30();

    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  return result;
}

void *sub_1A911FA38(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  v39[3] = a8;
  v39[4] = a10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v39);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(boxed_opaque_existential_1, a3, a8);
  v38[3] = a9;
  id v38[4] = a11;
  uint64_t v20 = __swift_allocate_boxed_opaque_existential_1(v38);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a9 - 8) + 32))(v20, a4, a9);
  a7[5] = MEMORY[0x1E4FBC868];
  uint64_t v21 = (char *)a7 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_currentSession;
  uint64_t v22 = type metadata accessor for Session();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  uint64_t v23 = OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_lock;
  type metadata accessor for UnfairLock();
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = (_DWORD *)swift_slowAlloc();
  *(void *)(v24 + 16) = v25;
  *uint64_t v25 = 0;
  *(void *)((char *)a7 + v23) = v24;
  *(_DWORD *)(v24 + 24) = 0x10000;
  a7[2] = a1;
  a7[3] = a2;
  sub_1A90A0DC8((uint64_t)v39, (uint64_t)a7 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_pathProvider);
  sub_1A90A0DC8((uint64_t)v38, (uint64_t)a7 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager);
  *(void *)((char *)a7 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_contentType) = a5;
  *(void *)((char *)a7 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_transparencyLogging) = a6;
  sub_1A90A0DC8((uint64_t)v39, (uint64_t)v37);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = a2;
  sub_1A908EC8C(v37, v26 + 24);
  sub_1A90A6CFC(0, &qword_1EB68A7F8, type metadata accessor for UploadDropbox.Debugging, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Lazy);
  uint64_t v27 = (void *)swift_allocObject();
  uint64_t v28 = (char *)v27 + *(void *)(*v27 + 96);
  uint64_t v29 = type metadata accessor for UploadDropbox.Debugging(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
  uint64_t v30 = *(void *)(*v27 + 104);
  uint64_t v31 = swift_allocObject();
  id v32 = a2;
  id v33 = a1;
  id v34 = a6;
  uint64_t v35 = (_DWORD *)swift_slowAlloc();
  *(void *)(v31 + 16) = v35;
  *uint64_t v35 = 0;
  *(_DWORD *)(v31 + 24) = 0x10000;
  *(void *)((char *)v27 + v30) = v31;
  _OWORD v27[2] = sub_1A9120304;
  v27[3] = v26;
  *(void *)((char *)v27 + *(void *)(*v27 + 112)) = 1;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
  a7[4] = v27;
  return a7;
}

uint64_t sub_1A911FD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v28 = a6;
  uint64_t v29 = a7;
  v27[1] = a4;
  uint64_t v7 = sub_1A916AAD0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v27 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v27 - v15;
  uint64_t v17 = type metadata accessor for UploadDropbox.Debugging(0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A90D8864((uint64_t)v19);
  sub_1A911E430();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v19, 1, v20);
  if (result != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v19, v7);
    v27[0] = v16;
    sub_1A916AA50();
    sub_1A916AA60();
    uint64_t v22 = *(void (**)(char *, uint64_t))(v8 + 8);
    v22(v10, v7);
    sub_1A916A820();
    swift_allocObject();
    sub_1A916A810();
    uint64_t v30 = v28;
    uint64_t v31 = v29;
    sub_1A912017C();
    uint64_t v23 = sub_1A916A7F0();
    unint64_t v25 = v24;
    swift_release();
    sub_1A916AB90();
    sub_1A90A2FD4(v23, v25);
    uint64_t v26 = v27[0];
    v22(v13, v7);
    return ((uint64_t (*)(uint64_t, uint64_t))v22)(v26, v7);
  }
  return result;
}

unint64_t sub_1A912017C()
{
  unint64_t result = qword_1E97B1878;
  if (!qword_1E97B1878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E97B1878);
  }
  return result;
}

unint64_t sub_1A91201D0()
{
  unint64_t result = qword_1EB6865F0;
  if (!qword_1EB6865F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6865F0);
  }
  return result;
}

uint64_t sub_1A9120224(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_1A916B9E0() & 1;
  }
}

uint64_t sub_1A912027C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A91202B4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A91202C4()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1A9120304@<X0>(uint64_t a1@<X8>)
{
  return sub_1A9119864(*(void *)(v1 + 16), (void *)(v1 + 24), a1);
}

uint64_t sub_1A9120310(uint64_t a1, uint64_t a2)
{
  sub_1A90A6CFC(0, (unint64_t *)&qword_1EB68ACC8, (uint64_t (*)(uint64_t))type metadata accessor for Session, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A91203A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A912040C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A912046C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A91204D4(uint64_t a1, uint64_t a2)
{
  sub_1A90A6CFC(0, (unint64_t *)&qword_1EB68ACC8, (uint64_t (*)(uint64_t))type metadata accessor for Session, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1A9120568(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unsigned __int8 a5)
{
  int v6 = a5 >> 5;
  if (v6 == 3 || v6 == 2)
  {
    swift_bridgeObjectRetain();
  }
  else if (!(a5 >> 5))
  {
    swift_bridgeObjectRetain();
    sub_1A90D1784(a3, a4);
  }
}

void destroy for UploadDropbox.Errors(uint64_t a1)
{
}

void sub_1A91205F0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unsigned __int8 a5)
{
  int v6 = a5 >> 5;
  if (v6 == 3 || v6 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else if (!(a5 >> 5))
  {
    swift_bridgeObjectRelease();
    sub_1A90A2FD4(a3, a4);
  }
}

uint64_t initializeWithCopy for UploadDropbox.Errors(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1A9120568(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for UploadDropbox.Errors(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1A9120568(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  unint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1A91205F0(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for UploadDropbox.Errors(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1A91205F0(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for UploadDropbox.Errors(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x1FC && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 508);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 32) >> 5) | (8
                                              * ((*(void *)(a1 + 24) >> 60) & 3 | (4
                                                                                   * ((*(unsigned __int8 *)(a1 + 32) >> 1) & 0xF))))) ^ 0x1FF;
  if (v3 >= 0x1FB) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for UploadDropbox.Errors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1FB)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 508;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x1FC) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x1FC) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = ((-a2 >> 3) & 3) << 60;
      *(unsigned char *)(result + 32) = ((((-a2 >> 3) & 0x3F) - (a2 << 6)) >> 1) & 0xFE;
    }
  }
  return result;
}

uint64_t sub_1A912084C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 32);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 5;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1A912086C(uint64_t result)
{
  *(unsigned char *)(result + 32) &= 0x1Fu;
  return result;
}

uint64_t sub_1A912087C(uint64_t result, unsigned int a2)
{
  if (a2 < 4)
  {
    char v2 = *(unsigned char *)(result + 32) & 1 | (32 * a2);
    *(void *)(result + 24) &= 0xCFFFFFFFFFFFFFFFLL;
    *(unsigned char *)(result + 32) = v2;
  }
  else
  {
    *(void *)unint64_t result = a2 - 4;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for UploadDropbox.Errors()
{
  return &type metadata for UploadDropbox.Errors;
}

uint64_t sub_1A91208C8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(unsigned char *)(a2 + 32) = *((unsigned char *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

BOOL sub_1A91208E0()
{
  if (swift_dynamicCastMetatype())
  {
    type metadata accessor for BridgedTimedData();
    if (swift_dynamicCastMetatype()) {
      return 1;
    }
  }
  type metadata accessor for EventData();
  if (swift_dynamicCastMetatype() && (type metadata accessor for BridgedEventData(), swift_dynamicCastMetatype())) {
    return 1;
  }
  else {
    return swift_dynamicCastMetatype() != 0;
  }
}

uint64_t sub_1A91209A8()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR___AAEventProperty_dataKey);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A91209EC()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR___AAEventProperty_requirement);
  if (v1 == 1) {
    return 1;
  }
  if (!v1) {
    return 0;
  }
  uint64_t result = sub_1A916BA20();
  __break(1u);
  return result;
}

uint64_t sub_1A9120A58()
{
  return *(void *)(*v0 + OBJC_IVAR___AAEventProperty_dataType);
}

BOOL sub_1A9120A70()
{
  return sub_1A91208E0();
}

ValueMetadata *type metadata accessor for BridgedEventMirrorProperty()
{
  return &type metadata for BridgedEventMirrorProperty;
}

uint64_t dispatch thunk of Uploadable.payload()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1A9120AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(a9 + 8))(a1, a2, a3, a4, a5, a6 & 1);
}

uint64_t sub_1A9120AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1A9120B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1A9120B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t sub_1A9120B68(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1A9120B90(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1A9120BB8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1A916ADB0();
  uint64_t v22 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1A916AE10();
  uint64_t v11 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void **)(v4 + 96);
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = v4;
  v15[3] = a2;
  v15[4] = a3;
  v15[5] = a1;
  aBlock[4] = sub_1A9122FB0;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A908CD10;
  aBlock[3] = &block_descriptor_8;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = v14;
  swift_retain();
  sub_1A90A0418(a2);
  id v18 = a1;
  sub_1A916ADE0();
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1A9122FBC();
  sub_1A90A61A0(0, (unint64_t *)&unk_1EB689800, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1A9123014();
  sub_1A916B610();
  MEMORY[0x1AD0EDCB0](0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v21);
  return swift_release();
}

void sub_1A9120E7C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(char *, uint64_t), char a6, uint64_t *a7)
{
  uint64_t v57 = a5;
  uint64_t v8 = v7;
  uint64_t v53 = a1;
  int v55 = a6 & 1;
  uint64_t v61 = sub_1A916ACC0();
  uint64_t v50 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a7;
  unint64_t v51 = a7[1];
  uint64_t v52 = v15;
  uint64_t v56 = a2;
  uint64_t v17 = *a2;
  uint64_t v16 = a2[1];
  uint64_t v54 = a3;
  if (a4) {
    uint64_t v18 = a3;
  }
  else {
    uint64_t v18 = 0;
  }
  v65[0] = v17;
  v65[1] = v16;
  v65[2] = v18;
  v65[3] = a4;
  BOOL v66 = a4 != 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_unfair_lock_lock_with_options();
  uint64_t v19 = (void **)(v8 + 10);
  swift_beginAccess();
  uint64_t v20 = v8[10];
  uint64_t v21 = *(void *)(v20 + 16);
  uint64_t v59 = v18;
  uint64_t v60 = v17;
  uint64_t v62 = v16;
  if (v21)
  {
    sub_1A90C13F8(v17, v16, v18, a4, a4 != 0);
    unint64_t v22 = sub_1A90BD8BC((uint64_t)v65);
    if (v23)
    {
      unint64_t v24 = (uint64_t *)(*(void *)(v20 + 56) + 16 * v22);
      uint64_t v61 = *v24;
      uint64_t v25 = v18;
      uint64_t v26 = v24[1];
      swift_endAccess();
      swift_bridgeObjectRetain();
      sub_1A90C14CC(v17, v16, v25, a4, a4 != 0);
      goto LABEL_9;
    }
    sub_1A90C14CC(v17, v16, v18, a4, a4 != 0);
  }
  uint64_t v27 = v16;
  HIDWORD(v48) = a4 != 0;
  swift_endAccess();
  sub_1A916ACB0();
  uint64_t v28 = sub_1A916ACA0();
  uint64_t v49 = v8;
  uint64_t v29 = v28;
  uint64_t v30 = v18;
  uint64_t v26 = v31;
  (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v61);
  swift_beginAccess();
  char v32 = BYTE4(v48);
  sub_1A90C13F8(v17, v27, v30, a4, SBYTE4(v48));
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  id v67 = *v19;
  *uint64_t v19 = (void *)0x8000000000000000;
  uint64_t v61 = v29;
  uint64_t v34 = v29;
  uint64_t v8 = v49;
  sub_1A90C3FC0(v34, v26, (uint64_t)v65, isUniquelyReferenced_nonNull_native);
  *uint64_t v19 = v67;
  swift_bridgeObjectRelease();
  sub_1A90C14CC(v17, v27, v30, a4, v32);
  swift_endAccess();
LABEL_9:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8[11] + 16));
  __swift_project_boxed_opaque_existential_1(v8 + 4, v8[7]);
  uint64_t v63 = v52;
  unint64_t v64 = v51;
  uint64_t v35 = v58;
  char v36 = sub_1A9119BB8(v53, v61, v26, v54, a4, v57, v55, (uint64_t)v56, a4 == 0, &v63);
  if (v35)
  {
    swift_bridgeObjectRelease();
    sub_1A90C14CC(v60, v62, v59, a4, a4 != 0);
    if (qword_1EB68ACE8 != -1) {
      swift_once();
    }
    id v37 = (id)qword_1EB689AA0;
    sub_1A916B3B0();
    sub_1A90CA164();
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1A916EF60;
    uint64_t v63 = 0;
    unint64_t v64 = 0xE000000000000000;
    id v67 = v35;
    sub_1A908E870(0, (unint64_t *)&qword_1EB689860);
    sub_1A916B780();
    uint64_t v39 = v63;
    unint64_t v40 = v64;
    *(void *)(v38 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v38 + 64) = sub_1A90A67C0();
    *(void *)(v38 + 32) = v39;
    *(void *)(v38 + 40) = v40;
    sub_1A916AD30();

    swift_bridgeObjectRelease();
  }
  else
  {
    char v41 = v36;
    swift_bridgeObjectRelease();
    uint64_t v42 = v62;
    if (v41)
    {
      os_unfair_lock_lock_with_options();
      swift_beginAccess();
      sub_1A914C928((uint64_t)v65);
      swift_endAccess();
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8[11] + 16));
      swift_bridgeObjectRelease();
      uint64_t v45 = v59;
      uint64_t v44 = v60;
      uint64_t v46 = v42;
      uint64_t v47 = a4;
      char v43 = a4 != 0;
    }
    else
    {
      char v43 = a4 != 0;
      uint64_t v45 = v59;
      uint64_t v44 = v60;
      uint64_t v46 = v62;
      uint64_t v47 = a4;
    }
    sub_1A90C14CC(v44, v46, v45, v47, v43);
  }
}

void sub_1A91213A8(uint64_t a1)
{
  sub_1A90C1438(a1, (uint64_t)v7);
  os_unfair_lock_lock_with_options();
  swift_beginAccess();
  uint64_t v2 = sub_1A914C928((uint64_t)v7);
  uint64_t v4 = v3;
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1[11] + 16));
  if (v4)
  {
    uint64_t v5 = *__swift_project_boxed_opaque_existential_1(v1 + 4, v1[7]);
    uint64_t v6 = OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_lock;
    os_unfair_lock_lock_with_options();
    sub_1A911AD84(v2, v4);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(v5 + v6) + 16));
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A9121488(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = *(void *)(result + 16);
  if (v21)
  {
    uint64_t v18 = a3 + 32;
    uint64_t v3 = result + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1A90A0DC8(v3, (uint64_t)v23);
      if (qword_1EB68ACE8 != -1) {
        swift_once();
      }
      uint64_t v4 = (void *)qword_1EB689AA0;
      sub_1A90CA164();
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_1A916E200;
      uint64_t v6 = *(void *)(a2 + 16);
      uint64_t v7 = *(void *)(a2 + 24);
      *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v8 = sub_1A90A67C0();
      *(void *)(v5 + 64) = v8;
      uint64_t v20 = v6;
      *(void *)(v5 + 32) = v6;
      *(void *)(v5 + 40) = v7;
      uint64_t v9 = v24;
      uint64_t v10 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 16);
      id v12 = v4;
      swift_bridgeObjectRetain();
      uint64_t v13 = v11(v9, v10);
      *(void *)(v5 + 96) = MEMORY[0x1E4FBB1A0];
      *(void *)(v5 + 104) = v8;
      *(void *)(v5 + 72) = v13;
      *(void *)(v5 + 80) = v14;
      sub_1A916B3D0();
      sub_1A916AD30();

      swift_bridgeObjectRelease();
      sub_1A90A0DC8(v18, (uint64_t)v22);
      __swift_project_boxed_opaque_existential_1(v22, v22[3]);
      uint64_t v16 = v24;
      uint64_t v15 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)(v15 + 8) + 8))(v16);
      sub_1A911BE3C(v17, v20, v7);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
      v3 += 40;
      --v21;
    }
    while (v21);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1A91217CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v134 = a4;
  uint64_t v135 = a3;
  uint64_t v165 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1A90A61A0(0, (unint64_t *)&unk_1EB687F70, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v118 - v8;
  sub_1A90A61A0(0, &qword_1EB689868, (uint64_t (*)(uint64_t))type metadata accessor for Batch, v6);
  MEMORY[0x1F4188790](v10 - 8);
  id v12 = (uint64_t *)((char *)&v118 - v11);
  uint64_t v13 = type metadata accessor for Batch();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v118 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v17 + 16))(ObjectType, v17);
  dispatch_group_t v136 = dispatch_group_create();
  __swift_project_boxed_opaque_existential_1(a1 + 4, a1[7]);
  uint64_t v19 = sub_1A911CCFC();
  long long v149 = a1;
  uint64_t v146 = a1 + 4;
  uint64_t v150 = v16;
  uint64_t v151 = v13;
  uint64_t v144 = v19[2];
  if (v144)
  {
    uint64_t v145 = v19;
    uint64_t v129 = v9;
    uint64_t v130 = a2;
    if (qword_1EB68ACE8 != -1) {
      swift_once();
    }
    uint64_t v26 = (void *)qword_1EB689AA0;
    sub_1A90CA164();
    uint64_t v147 = v27;
    uint64_t v28 = swift_allocObject();
    long long v138 = xmmword_1A916E200;
    *(_OWORD *)(v28 + 16) = xmmword_1A916E200;
    uint64_t v29 = v145;
    uint64_t v30 = v145[2];
    uint64_t v31 = MEMORY[0x1E4FBB5C8];
    *(void *)(v28 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v28 + 64) = v31;
    *(void *)(v28 + 32) = v30;
    id v32 = v26;
    uint64_t v33 = swift_bridgeObjectRetain();
    uint64_t v34 = MEMORY[0x1E4FBB1A0];
    a2 = MEMORY[0x1AD0ED9F0](v33, MEMORY[0x1E4FBB1A0]);
    uint64_t v36 = v35;
    swift_bridgeObjectRelease();
    *(void *)(v28 + 96) = v34;
    unint64_t v148 = sub_1A90A67C0();
    *(void *)(v28 + 104) = v148;
    *(void *)(v28 + 72) = a2;
    *(void *)(v28 + 80) = v36;
    sub_1A916B3D0();
    sub_1A916AD30();

    swift_bridgeObjectRelease();
    unint64_t v37 = 0;
    uint64_t v38 = (uint64_t)v149;
    uint64_t v137 = v149 + 10;
    id v143 = (unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48);
    uint64_t v39 = v29 + 5;
    long long v140 = xmmword_1A916EF60;
    uint64_t v133 = MEMORY[0x1E4FBC840] + 8;
    uint64_t v128 = MEMORY[0x1E4FBC848] + 8;
    uint64_t v122 = "notificationReceiptEvents";
    uint64_t v121 = "appHeartbeatEvents";
    unint64_t v120 = (unint64_t)"s not representable";
    uint64_t v139 = v12;
    unint64_t v40 = v146;
    while (1)
    {
      if (v37 >= v29[2])
      {
        __break(1u);
        swift_once();
        id v20 = (id)qword_1EB689AA0;
        sub_1A916B3B0();
        sub_1A90CA164();
        uint64_t v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_1A916EF60;
        uint64_t v160 = 0;
        unint64_t v161 = 0xE000000000000000;
        id v158 = 0;
        sub_1A908E870(0, (unint64_t *)&qword_1EB689860);
        sub_1A916B780();
        uint64_t v22 = v160;
        unint64_t v23 = v161;
        *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v21 + 64) = sub_1A90A67C0();
        *(void *)(v21 + 32) = v22;
        *(void *)(v21 + 40) = v23;
        sub_1A916AD30();

        swift_bridgeObjectRelease();
        if (a2)
        {
          uint64_t v24 = swift_allocObject();
          uint64_t v25 = v135;
          *(void *)(v24 + 16) = a2;
          *(void *)(v24 + 24) = v25;
          swift_retain_n();
          sub_1A90F8660((uint64_t)sub_1A9123AA8, v24);

          swift_release();
          goto LABEL_49;
        }

        return;
      }
      uint64_t v42 = *(v39 - 1);
      uint64_t v41 = *v39;
      uint64_t v152 = v39;
      a2 = v38;
      uint64_t v43 = *__swift_project_boxed_opaque_existential_1(v40, *(void *)(v38 + 56));
      uint64_t v44 = OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_lock;
      swift_bridgeObjectRetain();
      os_unfair_lock_lock_with_options();
      sub_1A911AF98(v42, v41, v12);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(v43 + v44) + 16));
      if ((*v143)(v12, 1, v151) == 1)
      {
        sub_1A912358C((uint64_t)v12, &qword_1EB689868, (uint64_t (*)(uint64_t))type metadata accessor for Batch);
        uint64_t v45 = (void *)qword_1EB689AA0;
        uint64_t v46 = swift_allocObject();
        *(_OWORD *)(v46 + 16) = v140;
        unint64_t v47 = v148;
        *(void *)(v46 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v46 + 64) = v47;
        *(void *)(v46 + 32) = v42;
        *(void *)(v46 + 40) = v41;
        id v48 = v45;
        sub_1A916B3D0();
        sub_1A916AD30();

        swift_bridgeObjectRelease();
        unint64_t v40 = v146;
        uint64_t v38 = a2;
      }
      else
      {
        uint64_t v142 = v41;
        uint64_t v49 = v42;
        uint64_t v50 = (uint64_t)v150;
        sub_1A91230D4((uint64_t)v12, (uint64_t)v150);
        uint64_t v51 = *(void *)(v50 + 64);
        unint64_t v141 = v37;
        if (v51) {
          uint64_t v52 = *(void *)(v50 + 56);
        }
        else {
          uint64_t v52 = 0;
        }
        uint64_t v53 = (uint64_t *)(v50 + *(int *)(v151 + 44));
        uint64_t v55 = v53[1];
        uint64_t v160 = *v53;
        uint64_t v54 = v160;
        unint64_t v161 = v55;
        uint64_t v162 = v52;
        uint64_t v163 = v51;
        BOOL v164 = v51 != 0;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        os_unfair_lock_lock_with_options();
        swift_beginAccess();
        sub_1A914C928((uint64_t)&v160);
        swift_endAccess();
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v149[11] + 16));
        swift_bridgeObjectRelease();
        sub_1A90C14CC(v54, v55, v52, v51, v51 != 0);
        unint64_t v56 = Batch.toJSONObject()();
        uint64_t v57 = self;
        uint64_t v58 = MEMORY[0x1E4FBB1A0];
        uint64_t v59 = (void *)sub_1A916AEB0();
        unsigned __int8 v60 = objc_msgSend(v57, sel_isValidJSONObject_, v59);

        a2 = v49;
        if (v60)
        {
          uint64_t v61 = (void *)sub_1A916AEB0();
          swift_bridgeObjectRelease();
          id v158 = 0;
          id v62 = objc_msgSend(v57, sel_dataWithJSONObject_options_error_, v61, 0, &v158);

          id v63 = v158;
          uint64_t v64 = v142;
          if (v62)
          {
            uint64_t v65 = sub_1A916AB80();
            unint64_t v67 = v66;

            unint64_t v68 = v150;
            if (*(unsigned char *)(v149[9] + OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled)) {
              sub_1A91236B4(v65, v67, a2, v64);
            }
            uint64_t v69 = sub_1A90F284C(v65, v67);
            unint64_t v131 = v87;
            uint64_t v132 = v69;
            uint64_t v126 = v65;
            unint64_t v88 = (void *)qword_1EB689AA0;
            uint64_t v89 = swift_allocObject();
            *(_OWORD *)(v89 + 16) = v138;
            unint64_t v90 = v148;
            *(void *)(v89 + 56) = v58;
            *(void *)(v89 + 64) = v90;
            *(void *)(v89 + 32) = a2;
            *(void *)(v89 + 40) = v64;
            BOOL v91 = (void *)v68[6];
            unint64_t v127 = v67;
            unint64_t v92 = 0xEF73746E65764579;
            unint64_t v93 = 0x7274656D656C6574;
            uint64_t v125 = v91;
            switch((unint64_t)v91)
            {
              case 0uLL:
                unint64_t v92 = 0xEA00000000007374;
                unint64_t v93 = 0x6E65764572657375;
                break;
              case 1uLL:
                break;
              case 2uLL:
                unint64_t v93 = 0x656D69746C616572;
                goto LABEL_29;
              case 3uLL:
                unint64_t v93 = 0xD000000000000013;
                uint64_t v94 = &v151;
                goto LABEL_33;
              case 4uLL:
                unint64_t v93 = 0x6B63616264656566;
LABEL_29:
                unint64_t v92 = 0xEE0073746E657645;
                break;
              case 5uLL:
                unint64_t v93 = 0xD000000000000019;
                uint64_t v94 = (uint64_t *)&v150;
LABEL_33:
                unint64_t v92 = *(v94 - 32) | 0x8000000000000000;
                break;
              case 6uLL:
                unint64_t v92 = 0xEC00000073746E65;
                unint64_t v93 = 0x76457374726F7073;
                break;
              case 7uLL:
                unint64_t v93 = 0x746C616548707061;
                unint64_t v92 = 0xEF73746E65764568;
                break;
              case 8uLL:
                unint64_t v92 = v120 | 0x8000000000000000;
                unint64_t v93 = 0xD000000000000012;
                break;
              default:
                id v158 = v91;
                swift_bridgeObjectRetain();
                id v117 = v88;
                sub_1A916BA20();
                __break(1u);
                JUMPOUT(0x1A91228E8);
            }
            unint64_t v95 = v148;
            *(void *)(v89 + 96) = v58;
            *(void *)(v89 + 104) = v95;
            *(void *)(v89 + 72) = v93;
            *(void *)(v89 + 80) = v92;
            swift_bridgeObjectRetain();
            id v96 = v88;
            sub_1A916B3D0();
            sub_1A916AD30();

            swift_bridgeObjectRelease();
            dispatch_group_enter(v136);
            unint64_t v97 = (void *)v68[5];
            uint64_t v123 = v68[4];
            uint64_t v98 = sub_1A916B280();
            uint64_t v99 = *(void *)(v98 - 8);
            uint64_t v100 = (uint64_t)v129;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v99 + 56))(v129, 1, 1, v98);
            uint64_t v101 = (void *)swift_allocObject();
            v101[2] = 0;
            uint64_t v124 = v101 + 2;
            uint64_t v102 = v149;
            v101[3] = 0;
            v101[4] = v102;
            v101[5] = a2;
            v101[6] = v64;
            uint64_t v103 = v132;
            unint64_t v104 = v131;
            v101[7] = v132;
            v101[8] = v104;
            v101[9] = v123;
            v101[10] = v97;
            v101[11] = v125;
            v101[12] = a2;
            dispatch_group_t v105 = v136;
            v101[13] = v64;
            v101[14] = v105;
            uint64_t v119 = v99;
            uint64_t v106 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v99 + 48);
            uint64_t v123 = v98;
            LODWORD(v98) = v106(v100, 1, v98);
            swift_bridgeObjectRetain();
            sub_1A90D1784(v103, v104);
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            sub_1A90D1784(v103, v104);
            uint64_t v125 = v97;
            swift_bridgeObjectRetain();
            uint64_t v107 = v105;
            if (v98 == 1)
            {
              sub_1A912358C(v100, (unint64_t *)&unk_1EB687F70, MEMORY[0x1E4FBCFE8]);
            }
            else
            {
              sub_1A916B270();
              (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v100, v123);
            }
            unint64_t v37 = v141;
            a2 = (uint64_t)v149;
            if (*v124)
            {
              swift_getObjectType();
              swift_unknownObjectRetain();
              uint64_t v108 = sub_1A916B240();
              uint64_t v110 = v109;
              swift_unknownObjectRelease();
            }
            else
            {
              uint64_t v108 = 0;
              uint64_t v110 = 0;
            }
            id v12 = v139;
            uint64_t v111 = swift_allocObject();
            *(void *)(v111 + 16) = &unk_1E97B1888;
            *(void *)(v111 + 24) = v101;
            if (v110 | v108)
            {
              uint64_t v153 = 0;
              uint64_t v154 = 0;
              uint64_t v155 = v108;
              uint64_t v156 = v110;
            }
            unint64_t v40 = v146;
            uint64_t v38 = a2;
            unint64_t v85 = v152;
            swift_task_create();
            swift_release();
            sub_1A90A2FD4(v126, v127);
            swift_bridgeObjectRelease();
            uint64_t v112 = v132;
            unint64_t v113 = v131;
            sub_1A90A2FD4(v132, v131);
            swift_bridgeObjectRelease();
            sub_1A90A2FD4(v112, v113);
            sub_1A912330C((uint64_t)v150);
            goto LABEL_22;
          }
          unint64_t v86 = v63;
          uint64_t v76 = (void *)sub_1A916A990();

          swift_willThrow();
          uint64_t v78 = (uint64_t)v150;
        }
        else
        {
          uint64_t v70 = v58;
          id v71 = (id)qword_1EB689AA0;
          sub_1A916B3C0();
          uint64_t v72 = swift_allocObject();
          *(_OWORD *)(v72 + 16) = v140;
          uint64_t v73 = sub_1A916AEE0();
          unint64_t v74 = v148;
          *(void *)(v72 + 56) = v70;
          *(void *)(v72 + 64) = v74;
          *(void *)(v72 + 32) = v73;
          *(void *)(v72 + 40) = v75;
          sub_1A916AD30();

          swift_bridgeObjectRelease();
          sub_1A90F7E7C();
          uint64_t v76 = (void *)swift_allocError();
          *(void *)uint64_t v77 = v56;
          *(unsigned char *)(v77 + 8) = 0;
          swift_willThrow();
          uint64_t v78 = (uint64_t)v150;
          uint64_t v64 = v142;
        }
        sub_1A912330C(v78);
        uint64_t v79 = MEMORY[0x1E4FBB1A0];
        id v80 = (id)qword_1EB689AA0;
        sub_1A916B3B0();
        uint64_t v81 = swift_allocObject();
        *(_OWORD *)(v81 + 16) = v138;
        unint64_t v82 = v148;
        *(void *)(v81 + 56) = v79;
        *(void *)(v81 + 64) = v82;
        *(void *)(v81 + 32) = a2;
        *(void *)(v81 + 40) = v64;
        id v158 = 0;
        unint64_t v159 = 0xE000000000000000;
        uint64_t v157 = v76;
        sub_1A908E870(0, (unint64_t *)&qword_1EB689860);
        sub_1A916B780();
        id v83 = v158;
        unint64_t v84 = v159;
        *(void *)(v81 + 96) = v79;
        *(void *)(v81 + 104) = v82;
        *(void *)(v81 + 72) = v83;
        *(void *)(v81 + 80) = v84;
        sub_1A916AD30();

        swift_bridgeObjectRelease();
        id v12 = v139;
        unint64_t v40 = v146;
        unint64_t v37 = v141;
        uint64_t v38 = (uint64_t)v149;
      }
      unint64_t v85 = v152;
LABEL_22:
      ++v37;
      uint64_t v39 = v85 + 2;
      uint64_t v29 = v145;
      if (v144 == v37)
      {
        swift_bridgeObjectRelease();
        uint64_t v114 = v135;
        a2 = v130;
        goto LABEL_47;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v114 = v135;
LABEL_47:
  dispatch_group_t v115 = v136;
  sub_1A916B3F0();
  if (a2)
  {
    uint64_t v116 = swift_allocObject();
    *(void *)(v116 + 16) = a2;
    *(void *)(v116 + 24) = v114;
    swift_retain_n();
    sub_1A90F8660((uint64_t)sub_1A90CB324, v116);
    swift_release();

LABEL_49:
    sub_1A909E0EC(a2);
  }
  else
  {
  }
}

uint64_t sub_1A912290C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a7;
  v8[9] = a8;
  void v8[6] = a5;
  v8[7] = a6;
  v8[5] = a4;
  return MEMORY[0x1F4188298](sub_1A9122934, 0, 0);
}

uint64_t sub_1A9122934()
{
  uint64_t v1 = *(void *)(v0[5] + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v1 + 8) + **(int **)(v1 + 8));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[10] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1A9122A3C;
  uint64_t v4 = v0[6];
  return v6(v4, ObjectType, v1);
}

uint64_t sub_1A9122A3C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 88) = a1;
  *(void *)(v4 + 96) = a2;
  *(unsigned char *)(v4 + 104) = a3;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A9122B40, 0, 0);
}

uint64_t sub_1A9122B40()
{
  if (qword_1EB68ACE8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v15 = *(void *)(v0 + 40);
  uint64_t v5 = (void *)qword_1EB689AA0;
  char v6 = *(unsigned char *)(v0 + 104);
  sub_1A90CA164();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1A916E200;
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v9 = sub_1A90A67C0();
  *(void *)(v7 + 64) = v9;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v3;
  id v10 = v5;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1A90CDAD8(v2, v1, v6);
  *(void *)(v7 + 96) = v8;
  *(void *)(v7 + 104) = v9;
  *(void *)(v7 + 72) = v11;
  *(void *)(v7 + 80) = v12;
  sub_1A916B3D0();
  sub_1A916AD30();
  swift_bridgeObjectRelease();

  __swift_project_boxed_opaque_existential_1((void *)(v15 + 32), *(void *)(v15 + 56));
  sub_1A911D0A8(v4, v3, v2, v1, v6);
  sub_1A90CE0B4(*(void *)(v0 + 88), *(void *)(v0 + 96), *(unsigned char *)(v0 + 104));
  dispatch_group_leave(*(dispatch_group_t *)(v0 + 72));
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_1A9122EA4()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);

  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186488](v0, 104, 7);
}

uint64_t type metadata accessor for UploadManager()
{
  return self;
}

uint64_t sub_1A9122F28()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1A9122F60()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1A9122FB0()
{
  sub_1A91217CC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

unint64_t sub_1A9122FBC()
{
  unint64_t result = qword_1EB68A8D0;
  if (!qword_1EB68A8D0)
  {
    sub_1A916ADB0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB68A8D0);
  }
  return result;
}

unint64_t sub_1A9123014()
{
  unint64_t result = qword_1EB689810;
  if (!qword_1EB689810)
  {
    sub_1A90A61A0(255, (unint64_t *)&unk_1EB689800, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB689810);
  }
  return result;
}

uint64_t sub_1A912309C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1A91230D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Batch();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9123138(uint64_t a1, int *a2)
{
  char v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1A9123214;
  return v6(a1);
}

uint64_t sub_1A9123214()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A912330C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Batch();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A9123368()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1A90A2FD4(*(void *)(v0 + 56), *(void *)(v0 + 64));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 120, 7);
}

uint64_t sub_1A91233D0()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 104);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_1A9123498;
  *(_OWORD *)(v4 + 64) = v5;
  *(void *)(v4 + 48) = v0 + 40;
  *(void *)(v4 + 56) = v3;
  *(void *)(v4 + 40) = v2;
  return MEMORY[0x1F4188298](sub_1A9122934, 0, 0);
}

uint64_t sub_1A9123498()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A912358C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1A90A61A0(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1A91235FC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1A9123498;
  char v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E97B1890 + dword_1E97B1890);
  return v6(a1, v4);
}

void sub_1A91236B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1A916AFD0();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = self;
  uint64_t v8 = (void *)sub_1A916AB60();
  id v33 = 0;
  id v9 = objc_msgSend(v7, sel_JSONObjectWithData_options_error_, v8, 0, &v33);

  id v10 = v33;
  if (v9)
  {
    sub_1A916B5F0();
    swift_unknownObjectRelease();
    __swift_project_boxed_opaque_existential_1(&v34, v36);
    uint64_t v11 = sub_1A916B9D0();
    id v33 = 0;
    id v12 = objc_msgSend(v7, sel_dataWithJSONObject_options_error_, v11, 3, &v33);
    swift_unknownObjectRelease();
    id v13 = v33;
    if (v12)
    {
      uint64_t v14 = sub_1A916AB80();
      unint64_t v16 = v15;

      sub_1A916AFC0();
      uint64_t v17 = sub_1A916AFA0();
      if (v18)
      {
        uint64_t v19 = v17;
        uint64_t v20 = v18;
        if (qword_1EB68ACE8 != -1) {
          swift_once();
        }
        uint64_t v21 = (void *)qword_1EB689AA0;
        sub_1A90CA164();
        uint64_t v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_1A916E200;
        uint64_t v23 = MEMORY[0x1E4FBB1A0];
        *(void *)(v22 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v24 = sub_1A90A67C0();
        *(void *)(v22 + 32) = a3;
        *(void *)(v22 + 40) = a4;
        *(void *)(v22 + 96) = v23;
        *(void *)(v22 + 104) = v24;
        *(void *)(v22 + 64) = v24;
        *(void *)(v22 + 72) = v19;
        *(void *)(v22 + 80) = v20;
        id v25 = v21;
        swift_bridgeObjectRetain();
        sub_1A916B3D0();
        sub_1A916AD30();

        swift_bridgeObjectRelease();
        sub_1A90A2FD4(v14, v16);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v34);
      }
      else
      {
        __break(1u);
      }
      return;
    }
    uint64_t v28 = v13;
    uint64_t v27 = (void *)sub_1A916A990();

    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v34);
  }
  else
  {
    uint64_t v26 = v10;
    uint64_t v27 = (void *)sub_1A916A990();

    swift_willThrow();
  }
  if (qword_1EB68ACE8 != -1) {
    swift_once();
  }
  id v29 = (id)qword_1EB689AA0;
  sub_1A916B3C0();
  sub_1A90CA164();
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1A916EF60;
  uint64_t v34 = 0;
  unint64_t v35 = 0xE000000000000000;
  id v33 = v27;
  sub_1A908E870(0, (unint64_t *)&qword_1EB689860);
  sub_1A916B780();
  uint64_t v31 = v34;
  unint64_t v32 = v35;
  *(void *)(v30 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v30 + 64) = sub_1A90A67C0();
  *(void *)(v30 + 32) = v31;
  *(void *)(v30 + 40) = v32;
  sub_1A916AD30();

  swift_bridgeObjectRelease();
}

AppAnalytics::TimestampGranularity_optional __swiftcall TimestampGranularity.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1A916B870();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t TimestampGranularity.rawValue.getter()
{
  uint64_t result = 0x65736963657270;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7954788;
      break;
    case 2:
      uint64_t result = 1920298856;
      break;
    case 3:
      uint64_t result = 0x6574756E696DLL;
      break;
    case 4:
      uint64_t result = 0x72657474696ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A9123B9C(unsigned __int8 *a1, char *a2)
{
  return sub_1A9103F90(*a1, *a2);
}

unint64_t sub_1A9123BAC()
{
  unint64_t result = qword_1E97B18A0;
  if (!qword_1E97B18A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B18A0);
  }
  return result;
}

uint64_t sub_1A9123C00()
{
  return sub_1A916BAD0();
}

uint64_t sub_1A9123CE0()
{
  sub_1A916B030();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A9123DA8()
{
  return sub_1A916BAD0();
}

AppAnalytics::TimestampGranularity_optional sub_1A9123E84(Swift::String *a1)
{
  return TimestampGranularity.init(rawValue:)(*a1);
}

void sub_1A9123E90(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x65736963657270;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE300000000000000;
      uint64_t v3 = 7954788;
      goto LABEL_3;
    case 2:
      *a1 = 1920298856;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 0x6574756E696DLL;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0x72657474696ALL;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1A9123F34()
{
  return sub_1A916B160();
}

uint64_t sub_1A9123F94()
{
  return sub_1A916B120();
}

unsigned char *storeEnumTagSinglePayload for TimestampGranularity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A91240B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

unint64_t sub_1A91240D8()
{
  unint64_t result = qword_1E97B18A8;
  if (!qword_1E97B18A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E97B18A8);
  }
  return result;
}

BOOL sub_1A912412C(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1A912413C()
{
  return sub_1A916BAC0();
}

uint64_t sub_1A9124164(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A916B9E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A916B9E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A9124248()
{
  return sub_1A916BAD0();
}

uint64_t sub_1A9124290(char a1)
{
  if (a1) {
    return 1635017060;
  }
  else {
    return 0x617461646174656DLL;
  }
}

uint64_t sub_1A91242C0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 40);
  uint64_t v15 = *(void *)(a2 + 16);
  long long v11 = *(_OWORD *)(a2 + 24);
  long long v16 = v11;
  uint64_t v12 = v3;
  uint64_t v17 = v3;
  type metadata accessor for RequestData.EventData.Event.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_1A916B980();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v8 = v13;
  sub_1A916BB50();
  uint64_t v15 = *v8;
  char v18 = 0;
  sub_1A90CE2D8();
  sub_1A912AEB4();
  uint64_t v9 = v14;
  sub_1A916B960();
  if (!v9)
  {
    LOBYTE(v15) = 1;
    sub_1A916B960();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1A91244A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unint64_t *a3@<X8>)
{
  *a3 = sub_1A90B22E4((uint64_t)&unk_1EFF9C9D0);
  uint64_t v6 = type metadata accessor for RequestData.EventData.Event();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))((char *)a3 + *(int *)(v6 + 52), a1, a2);
}

uint64_t sub_1A912454C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x73746E657665 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1A916B9E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1A91245CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v16 = a2;
  uint64_t v14 = a5;
  uint64_t v15 = a6;
  uint64_t v13 = a4;
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  uint64_t v20 = a5;
  uint64_t v21 = a6;
  type metadata accessor for RequestData.EventData.CodingKeys();
  swift_getWitnessTable();
  uint64_t v8 = sub_1A916B980();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  long long v11 = (char *)&v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A916BB50();
  uint64_t v22 = v16;
  uint64_t v18 = a3;
  uint64_t v19 = v13;
  uint64_t v20 = v14;
  uint64_t v21 = v15;
  type metadata accessor for RequestData.EventData.Event();
  sub_1A916B230();
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1A916B960();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1A91247C0(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v13 = *(void *)(a2 + 16);
  uint64_t v14 = v4;
  type metadata accessor for RequestData.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_1A916B980();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v9 = v15;
  sub_1A916BB50();
  LOBYTE(v17) = 0;
  type metadata accessor for HeartbeatEventService.Metadata();
  sub_1A908B1A4(&qword_1EB686C18, (void (*)(uint64_t))type metadata accessor for HeartbeatEventService.Metadata);
  uint64_t v10 = v16;
  sub_1A916B960();
  if (!v10)
  {
    uint64_t v22 = *(void *)(v9 + *(int *)(a2 + 36));
    char v21 = 1;
    uint64_t v17 = v13;
    uint64_t v18 = v13;
    uint64_t v19 = v14;
    uint64_t v20 = v14;
    type metadata accessor for RequestData.EventData();
    swift_getWitnessTable();
    sub_1A916B960();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

BOOL sub_1A91249F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A912412C(*a1, *a2);
}

uint64_t sub_1A9124A0C()
{
  return sub_1A9124248();
}

uint64_t sub_1A9124A20()
{
  return sub_1A912413C();
}

uint64_t sub_1A9124A34()
{
  return sub_1A916BAD0();
}

uint64_t sub_1A9124A80()
{
  return sub_1A9124290(*v0);
}

uint64_t sub_1A9124A94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A9124164(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A9124AC8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A90CC6F8();
  *a1 = result;
  return result;
}

uint64_t sub_1A9124AFC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1A9124B50(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1A9124BA4(void *a1, uint64_t a2)
{
  return sub_1A91242C0(a1, a2);
}

uint64_t sub_1A9124BBC()
{
  return 0x73746E657665;
}

uint64_t sub_1A9124BD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A912454C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A9124C08@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A90AFFF8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1A9124C40(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1A9124C94(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1A9124CE8(void *a1, uint64_t *a2)
{
  return sub_1A91245CC(a1, *v2, a2[2], a2[3], a2[4], a2[5]);
}

BOOL sub_1A9124D10(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A912412C(*a1, *a2);
}

uint64_t sub_1A9124D24()
{
  return sub_1A9124248();
}

uint64_t sub_1A9124D34()
{
  return sub_1A912413C();
}

uint64_t sub_1A9124D44()
{
  return sub_1A916BAD0();
}

uint64_t sub_1A9124D8C()
{
  return sub_1A9124290(*v0);
}

uint64_t sub_1A9124D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A9124164(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A9124DCC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1A9124E20(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1A9124E74(void *a1, uint64_t a2)
{
  return sub_1A91247C0(a1, a2);
}

id sub_1A9124E8C()
{
  id result = sub_1A9124EAC();
  qword_1EB686BD0 = (uint64_t)result;
  return result;
}

id sub_1A9124EAC()
{
  uint64_t v0 = self;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)sub_1A916AF60();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_backgroundSessionConfigurationWithIdentifier_, v1);

  if (qword_1EB687F80 != -1) {
    swift_once();
  }
  if (qword_1EB687F60)
  {
    char v3 = (void *)sub_1A916AF60();
    objc_msgSend(v2, sel_set_sourceApplicationBundleIdentifier_, v3);
  }
  objc_msgSend(v2, sel_setHTTPMaximumConnectionsPerHost_, 1);
  objc_msgSend(v2, sel_setAllowsCellularAccess_, 1);
  objc_msgSend(v2, sel_setWaitsForConnectivity_, 1);
  objc_msgSend(v2, sel_setDiscretionary_, 0);
  id v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for HeartbeatEventServiceURLSessionDelegate()), sel_init);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28F08]), sel_init);
  id v6 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, v2, v4, v5);

  return v6;
}

uint64_t sub_1A9125074()
{
  uint64_t v0 = sub_1A916A7D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  char v3 = (uint64_t *)((char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A916A820();
  swift_allocObject();
  uint64_t v4 = sub_1A916A810();
  *char v3 = sub_1A912517C;
  v3[1] = 0;
  (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F26D08], v0);
  uint64_t result = sub_1A916A7E0();
  qword_1EB686BE8 = v4;
  return result;
}

uint64_t sub_1A912517C(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1A916AD10();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = sub_1A916AC90();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1A916ACF0();
  sub_1A916ACD0();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1A916BB30();
  uint64_t result = sub_1A916AC50();
  double v13 = v12 * 1000.0;
  if ((~*(void *)&v13 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v13 < 9.22337204e18)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v16);
    sub_1A916BA00();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t static HeartbeatEventService.URLSessionIdentifier.getter()
{
  swift_beginAccess();
  uint64_t v0 = qword_1E97B18B0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static HeartbeatEventService.URLSessionIdentifier.setter(uint64_t a1, void *a2)
{
  qword_1E97B18B0 = a1;
  off_1E97B18B8 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static HeartbeatEventService.URLSessionIdentifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t HeartbeatEventService.Metadata.init(flushDate:identifier:version:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = sub_1A916AC90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a6, a1, v12);
  uint64_t result = type metadata accessor for HeartbeatEventService.Metadata();
  uint64_t v14 = (void *)(a6 + *(int *)(result + 20));
  *uint64_t v14 = a2;
  v14[1] = a3;
  uint64_t v15 = (void *)(a6 + *(int *)(result + 24));
  *uint64_t v15 = a4;
  v15[1] = a5;
  return result;
}

uint64_t type metadata accessor for HeartbeatEventService.Metadata()
{
  uint64_t result = qword_1EB686878;
  if (!qword_1EB686878) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A91255B4()
{
  uint64_t v1 = 0x696669746E656469;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E6F6973726576;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7461446873756C66;
  }
}

uint64_t sub_1A9125618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A9128858(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A9125640(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1A912564C(uint64_t a1)
{
  unint64_t v2 = sub_1A9125908();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A9125688(uint64_t a1)
{
  unint64_t v2 = sub_1A9125908();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t HeartbeatEventService.Metadata.encode(to:)(void *a1)
{
  sub_1A91258AC();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A9125908();
  sub_1A916BB50();
  v9[15] = 0;
  sub_1A916AC90();
  sub_1A908B1A4(qword_1EB689120, MEMORY[0x1E4F27928]);
  sub_1A916B960();
  if (!v1)
  {
    type metadata accessor for HeartbeatEventService.Metadata();
    v9[14] = 1;
    sub_1A916B930();
    v9[13] = 2;
    sub_1A916B930();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1A91258AC()
{
  if (!qword_1EB686C30)
  {
    sub_1A9125908();
    unint64_t v0 = sub_1A916B980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB686C30);
    }
  }
}

unint64_t sub_1A9125908()
{
  unint64_t result = qword_1EB686BF8;
  if (!qword_1EB686BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB686BF8);
  }
  return result;
}

uint64_t sub_1A912595C(void *a1)
{
  return HeartbeatEventService.Metadata.encode(to:)(a1);
}

uint64_t static HeartbeatEventService.sendHeartbeat<A>(client:debugFolderName:heartbeatValue:log:metadata:url:version:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v58 = a3;
  uint64_t v56 = a8;
  uint64_t v57 = a2;
  uint64_t v47 = a7;
  uint64_t v49 = a6;
  uint64_t v50 = a4;
  uint64_t v55 = a1;
  uint64_t v53 = a5;
  uint64_t v54 = a9;
  uint64_t v59 = a10;
  uint64_t v11 = *(void *)(a10 - 8);
  uint64_t v51 = *(void *)(v11 + 64);
  uint64_t v52 = a11;
  MEMORY[0x1F4188790](a1);
  double v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v13;
  uint64_t v14 = type metadata accessor for HeartbeatEventService.Metadata();
  uint64_t v46 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v46 + 64);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v44 = (uint64_t)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1A916AAD0();
  uint64_t v42 = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x1F4188790](v16);
  uint64_t v43 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A9129DA0(0, (unint64_t *)&unk_1EB687F70, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v19 - 8);
  char v21 = (char *)&v41 - v20;
  uint64_t v48 = (uint64_t)&v41 - v20;
  uint64_t v22 = sub_1A916B280();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v47, v16);
  sub_1A91273D8(v49, (uint64_t)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v41 = v11;
  uint64_t v23 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v50, v59);
  unint64_t v24 = (*(unsigned __int8 *)(v17 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v25 = (v18 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (*(unsigned __int8 *)(v46 + 80) + v26 + 8) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  unint64_t v28 = (v15 + *(unsigned __int8 *)(v11 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v29 = (v51 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = (char *)swift_allocObject();
  *((void *)v30 + 2) = 0;
  *((void *)v30 + 3) = 0;
  uint64_t v31 = v52;
  *((void *)v30 + 4) = v23;
  *((void *)v30 + 5) = v31;
  unint64_t v32 = v53;
  *((void *)v30 + 6) = v53;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v30[v24], v43, v42);
  id v33 = &v30[v25];
  uint64_t v34 = v55;
  uint64_t v35 = v54;
  *(void *)id v33 = v56;
  *((void *)v33 + 1) = v35;
  *(void *)&v30[v26] = v34;
  sub_1A91276A4(v44, (uint64_t)&v30[v27]);
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v30[v28], v45, v59);
  uint64_t v36 = &v30[v29];
  uint64_t v37 = v58;
  *(void *)uint64_t v36 = v57;
  *((void *)v36 + 1) = v37;
  swift_bridgeObjectRetain();
  id v38 = v32;
  swift_bridgeObjectRetain();
  id v39 = v34;
  sub_1A9127D68(v48, (uint64_t)&unk_1E97B18C8, (uint64_t)v30);
  return swift_release();
}

uint64_t sub_1A9125D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 200) = v18;
  *(void *)(v8 + 208) = v19;
  *(void *)(v8 + 184) = v16;
  *(void *)(v8 + 192) = v17;
  *(_OWORD *)(v8 + 168) = v15;
  *(void *)(v8 + 152) = a7;
  *(void *)(v8 + 160) = a8;
  *(void *)(v8 + 136) = a5;
  *(void *)(v8 + 144) = a6;
  *(void *)(v8 + 128) = a4;
  sub_1A9129DA0(0, (unint64_t *)&qword_1EB6899A0, MEMORY[0x1E4F276F0]);
  *(void *)(v8 + 216) = swift_task_alloc();
  uint64_t v9 = sub_1A916A9D0();
  *(void *)(v8 + 224) = v9;
  *(void *)(v8 + 232) = *(void *)(v9 - 8);
  *(void *)(v8 + 240) = swift_task_alloc();
  *(void *)(v8 + 248) = *(void *)(v18 - 8);
  *(void *)(v8 + 256) = swift_task_alloc();
  *(void *)(v8 + 264) = type metadata accessor for HeartbeatEventService.Metadata();
  *(void *)(v8 + 272) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for RequestData();
  *(void *)(v8 + 280) = v10;
  *(void *)(v8 + 288) = *(void *)(v10 - 8);
  *(void *)(v8 + 296) = swift_task_alloc();
  uint64_t v11 = sub_1A916AAD0();
  *(void *)(v8 + 304) = v11;
  *(void *)(v8 + 312) = *(void *)(v11 - 8);
  *(void *)(v8 + 320) = swift_task_alloc();
  *(void *)(v8 + 328) = swift_task_alloc();
  *(void *)(v8 + 336) = swift_task_alloc();
  *(void *)(v8 + 344) = swift_task_alloc();
  uint64_t v12 = sub_1A916A790();
  *(void *)(v8 + 352) = v12;
  *(void *)(v8 + 360) = *(void *)(v12 - 8);
  *(void *)(v8 + 368) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A9126084, 0, 0);
}

uint64_t sub_1A9126084()
{
  uint64_t v1 = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, 1uLL, 1);
  unint64_t v2 = (void *)sub_1A916B190();

  if (v2[2])
  {
    uint64_t v3 = *(void *)(v0 + 344);
    uint64_t v4 = *(void *)(v0 + 304);
    uint64_t v5 = *(void *)(v0 + 312);
    uint64_t v27 = *(void *)(v0 + 296);
    uint64_t v28 = *(void *)(v0 + 264);
    uint64_t v23 = *(void *)(v0 + 272);
    uint64_t v24 = *(void *)(v0 + 248);
    uint64_t v7 = *(void *)(v0 + 200);
    uint64_t v6 = *(void *)(v0 + 208);
    uint64_t v25 = *(void *)(v0 + 176);
    uint64_t v26 = *(void *)(v0 + 256);
    uint64_t v22 = *(void *)(v0 + 168);
    uint64_t v8 = *(void *)(v0 + 136);
    *(void *)(v0 + 376) = v2[4];
    *(void *)(v0 + 384) = v2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v8, v4);
    sub_1A916A750();
    sub_1A916A710();
    sub_1A916B050();
    sub_1A916A780();
    swift_bridgeObjectRelease();
    sub_1A90CF398();
    sub_1A916A780();
    swift_bridgeObjectRelease();
    sub_1A916A780();
    sub_1A91273D8(v22, v23);
    *(void *)(v0 + 16) = v7;
    *(void *)(v0 + 24) = v7;
    *(void *)(v0 + 32) = v6;
    *(void *)(v0 + 40) = v6;
    type metadata accessor for RequestData.EventData.Event();
    sub_1A916B9A0();
    swift_allocObject();
    uint64_t v9 = sub_1A916B1C0();
    uint64_t v11 = v10;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v26, v25, v7);
    sub_1A91244A4(v26, v7, v11);
    sub_1A916B230();
    sub_1A91276A4(v23, v27);
    *(void *)(v27 + *(int *)(type metadata accessor for RequestData() + 36)) = v9;
    *(_DWORD *)(v0 + 456) = *(_DWORD *)(v28 + 20);
    swift_bridgeObjectRetain();
    sub_1A916A780();
    swift_bridgeObjectRelease();
    if (qword_1EB686BF0 != -1) {
      swift_once();
    }
    swift_getWitnessTable();
    uint64_t v12 = sub_1A916A7F0();
    *(void *)(v0 + 392) = v12;
    *(void *)(v0 + 400) = v13;
    uint64_t v14 = sub_1A90F284C(v12, v13);
    *(void *)(v0 + 408) = 0;
    *(void *)(v0 + 416) = v14;
    *(void *)(v0 + 424) = v15;
    uint64_t v18 = v14;
    uint64_t v19 = v15;
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 432) = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_1A9126708;
    uint64_t v21 = *(void *)(v0 + 128);
    v20[11] = v19;
    v20[12] = v21;
    v20[10] = v18;
    return MEMORY[0x1F4188298](sub_1A9127970, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1A916B3B0();
    sub_1A916AD30();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
}

uint64_t sub_1A9126708(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 440) = a1;
  *(void *)(v3 + 448) = a2;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A9126834, 0, 0);
}

uint64_t sub_1A9126834()
{
  uint64_t v1 = v0;
  uint64_t v105 = *(void *)(v0 + 408);
  uint64_t v94 = *(void *)(v0 + 344);
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v3 = *(void *)(v0 + 312);
  uint64_t v5 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 240);
  uint64_t v6 = *(void *)(v0 + 216);
  uint64_t v7 = *(void *)(v0 + 224);
  unint64_t v90 = (void *)(*(void *)(v1 + 296) + *(int *)(v1 + 456));
  sub_1A916A780();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void (**)(uint64_t))(v5 + 104);
  unsigned int v85 = *MEMORY[0x1E4F276A8];
  v8(v4);
  unint64_t v84 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v84(v6, 1, 1, v2);
  swift_bridgeObjectRetain();
  sub_1A916AAA0();
  uint64_t v9 = v90[1];
  *(void *)(v0 + 48) = *v90;
  *(void *)(v0 + 56) = v9;
  unsigned int v87 = *MEMORY[0x1E4F276B8];
  BOOL v91 = v8;
  v8(v4);
  sub_1A90A6814();
  swift_bridgeObjectRetain();
  sub_1A916AAC0();
  uint64_t v10 = v4;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v11(v10, v7);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v12(v94, v2);
  sub_1A916AB90();
  unint64_t v13 = *(void *)(v0 + 424);
  if (v105)
  {
    uint64_t v14 = *(void *)(v0 + 392);
    unint64_t v15 = *(void *)(v0 + 400);
    uint64_t v16 = *(void *)(v1 + 336);
    uint64_t v17 = *(void *)(v1 + 304);
    sub_1A90A2FD4(*(void *)(v1 + 416), v13);
    sub_1A90A2FD4(v14, v15);
    swift_bridgeObjectRelease();
    v12(v16, v17);
    uint64_t v19 = *(void *)(v1 + 360);
    uint64_t v18 = *(void *)(v1 + 368);
    uint64_t v20 = *(void *)(v1 + 352);
    (*(void (**)(void, void))(*(void *)(v1 + 288) + 8))(*(void *)(v1 + 296), *(void *)(v1 + 280));
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = *(uint64_t (**)(void))(v1 + 8);
  }
  else
  {
    uint64_t v101 = v11;
    uint64_t v106 = v12;
    unint64_t v22 = *(void *)(v0 + 424);
    sub_1A90CA164();
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1A916E200;
    uint64_t v24 = (void *)v23;
    uint64_t v25 = 0;
    switch(v22 >> 62)
    {
      case 1uLL:
        int v26 = *(_DWORD *)(v0 + 416);
        int v27 = *(_DWORD *)(v0 + 420);
        BOOL v28 = __OFSUB__(v27, v26);
        LODWORD(v25) = v27 - v26;
        if (v28)
        {
          __break(1u);
LABEL_20:
          __break(1u);
        }
        uint64_t v25 = (int)v25;
LABEL_8:
        uint64_t v31 = MEMORY[0x1E4FBB5C8];
        *(void *)(v23 + 56) = MEMORY[0x1E4FBB550];
        *(void *)(v23 + 64) = v31;
        *(void *)(v23 + 32) = v25;
        sub_1A908B1A4(&qword_1EB686930, MEMORY[0x1E4F276F0]);
        uint64_t v32 = sub_1A916B990();
        uint64_t v34 = v33;
        v24[12] = MEMORY[0x1E4FBB1A0];
        unint64_t v83 = sub_1A90A67C0();
        v24[13] = v83;
        v24[9] = v32;
        v24[10] = v34;
        sub_1A916B3D0();
        sub_1A916AD30();
        swift_bridgeObjectRelease();
        if (qword_1EB686BD8 != -1) {
          swift_once();
        }
        uint64_t v35 = *(void *)(v0 + 192);
        uint64_t v36 = (void *)qword_1EB686BD0;
        uint64_t v37 = (void *)sub_1A916A720();
        id v38 = (void *)sub_1A916AA40();
        id v39 = objc_msgSend(v36, sel_uploadTaskWithRequest_fromFile_, v37, v38);

        objc_msgSend(v39, sel_resume);
        if (v35)
        {
          uint64_t v40 = *(void *)(v1 + 344);
          uint64_t v41 = *(void *)(v1 + 304);
          uint64_t v42 = *(void *)(v1 + 240);
          uint64_t v43 = *(void *)(v1 + 216);
          uint64_t v44 = *(void *)(v1 + 224);
          uint64_t v45 = *(void *)(v1 + 184);
          uint64_t v82 = *(void *)(v1 + 192);
          ((void (*)(uint64_t, void, uint64_t))v91)(v42, v85, v44);
          v84(v43, 1, 1, v41);
          sub_1A916AAA0();
          *(void *)(v1 + 64) = v45;
          *(void *)(v1 + 72) = v82;
          ((void (*)(uint64_t, void, uint64_t))v91)(v42, v85, v44);
          sub_1A916AAC0();
          v101(v42, v44);
          uint64_t v46 = v106;
          v106(v40, v41);
          id v47 = objc_msgSend(self, sel_defaultManager);
          uint64_t v48 = (void *)sub_1A916AA40();
          *(void *)(v1 + 120) = 0;
          LOBYTE(v45) = objc_msgSend(v47, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v48, 1, 0, v1 + 120);

          uint64_t v49 = *(void **)(v1 + 120);
          if (v45)
          {
            uint64_t v50 = *(void *)(v1 + 240);
            uint64_t v51 = *(void *)(v1 + 224);
            uint64_t v52 = (void *)(*(void *)(v1 + 296) + *(int *)(v1 + 456));
            uint64_t v53 = v52[1];
            *(void *)(v1 + 80) = *v52;
            *(void *)(v1 + 88) = v53;
            ((void (*)(uint64_t, void, uint64_t))v91)(v50, v87, v51);
            id v54 = v49;
            swift_bridgeObjectRetain();
            uint64_t v55 = MEMORY[0x1E4FBB1A0];
            sub_1A916AAC0();
            v101(v50, v51);
            swift_bridgeObjectRelease();
            sub_1A916AB90();
            uint64_t v73 = *(void *)(v1 + 416);
            unint64_t v72 = *(void *)(v1 + 424);
            uint64_t v86 = *(void *)(v1 + 392);
            unint64_t v89 = *(void *)(v1 + 400);
            uint64_t v74 = *(void *)(v1 + 360);
            uint64_t v110 = *(void *)(v1 + 368);
            uint64_t v104 = *(void *)(v1 + 352);
            uint64_t v96 = *(void *)(v1 + 336);
            uint64_t v75 = *(void *)(v1 + 320);
            uint64_t v93 = *(void *)(v1 + 328);
            uint64_t v76 = *(void *)(v1 + 304);
            uint64_t v100 = *(void *)(v1 + 296);
            uint64_t v77 = *(void *)(v1 + 288);
            uint64_t v98 = *(void *)(v1 + 280);
            uint64_t v78 = swift_allocObject();
            *(_OWORD *)(v78 + 16) = xmmword_1A916EF60;
            uint64_t v79 = sub_1A916B990();
            *(void *)(v78 + 56) = v55;
            *(void *)(v78 + 64) = v83;
            *(void *)(v78 + 32) = v79;
            *(void *)(v78 + 40) = v80;
            sub_1A916B3D0();
            sub_1A916AD30();
            sub_1A90A2FD4(v73, v72);
            sub_1A90A2FD4(v86, v89);
            swift_bridgeObjectRelease();
            v106(v75, v76);
            v106(v93, v76);
            v106(v96, v76);
            (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v100, v98);
            (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v110, v104);
          }
          else
          {
            id v64 = v49;
            uint64_t v65 = (void *)sub_1A916A990();

            swift_willThrow();
            uint64_t v88 = *(void *)(v1 + 416);
            unint64_t v92 = *(void *)(v1 + 424);
            uint64_t v95 = *(void *)(v1 + 392);
            unint64_t v97 = *(void *)(v1 + 400);
            uint64_t v66 = *(void *)(v1 + 360);
            uint64_t v109 = *(void *)(v1 + 352);
            uint64_t v111 = *(void *)(v1 + 368);
            uint64_t v67 = *(void *)(v1 + 304);
            uint64_t v107 = *(void *)(v1 + 296);
            uint64_t v68 = *(void *)(v1 + 288);
            uint64_t v99 = *(void *)(v1 + 336);
            uint64_t v103 = *(void *)(v1 + 280);
            v46(*(void *)(v1 + 328), v67);
            sub_1A916B3B0();
            uint64_t v69 = swift_allocObject();
            *(_OWORD *)(v69 + 16) = xmmword_1A916EF60;
            *(void *)(v1 + 96) = 0;
            *(void *)(v1 + 104) = 0xE000000000000000;
            *(void *)(v1 + 112) = v65;
            sub_1A908E870(0, (unint64_t *)&qword_1EB689860);
            sub_1A916B780();
            uint64_t v70 = *(void *)(v1 + 96);
            uint64_t v71 = *(void *)(v1 + 104);
            *(void *)(v69 + 56) = MEMORY[0x1E4FBB1A0];
            *(void *)(v69 + 64) = v83;
            *(void *)(v69 + 32) = v70;
            *(void *)(v69 + 40) = v71;
            sub_1A916AD30();
            sub_1A90A2FD4(v88, v92);
            sub_1A90A2FD4(v95, v97);
            swift_bridgeObjectRelease();

            v46(v99, v67);
            (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v107, v103);
            (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v111, v109);
          }
        }
        else
        {
          uint64_t v57 = *(void *)(v1 + 392);
          unint64_t v56 = *(void *)(v1 + 400);
          uint64_t v58 = *(void *)(v1 + 360);
          uint64_t v108 = *(void *)(v1 + 368);
          uint64_t v102 = *(void *)(v1 + 352);
          uint64_t v59 = *(void *)(v1 + 336);
          uint64_t v61 = *(void *)(v1 + 296);
          uint64_t v60 = *(void *)(v1 + 304);
          uint64_t v63 = *(void *)(v1 + 280);
          uint64_t v62 = *(void *)(v1 + 288);
          sub_1A90A2FD4(*(void *)(v1 + 416), *(void *)(v1 + 424));
          sub_1A90A2FD4(v57, v56);
          swift_bridgeObjectRelease();
          v106(v59, v60);
          (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v63);
          (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v108, v102);
        }
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v21 = *(uint64_t (**)(void))(v1 + 8);
        break;
      case 2uLL:
        uint64_t v29 = *(void *)(*(void *)(v0 + 416) + 16);
        uint64_t v30 = *(void *)(*(void *)(v0 + 416) + 24);
        BOOL v28 = __OFSUB__(v30, v29);
        uint64_t v25 = v30 - v29;
        if (!v28) {
          goto LABEL_8;
        }
        goto LABEL_20;
      case 3uLL:
        goto LABEL_8;
      default:
        uint64_t v25 = BYTE6(v22);
        goto LABEL_8;
    }
  }
  return v21();
}

uint64_t sub_1A91273D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HeartbeatEventService.Metadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A912743C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v17 = v1;
  uint64_t v2 = sub_1A916AAD0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 56) & ~v4;
  unint64_t v6 = (((*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(type metadata accessor for HeartbeatEventService.Metadata() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v6 + v8 + 8) & ~v8;
  uint64_t v10 = *(void *)(v1 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = (v9 + *(void *)(v7 + 64) + v11) & ~v11;
  unint64_t v15 = ((*(void *)(v10 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v16 = v4 | v8 | v11 | 7;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v2);
  swift_bridgeObjectRelease();

  uint64_t v12 = sub_1A916AC90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v0 + v9, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v14, v17);
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, v15, v16);
}

uint64_t sub_1A91276A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HeartbeatEventService.Metadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A9127708(uint64_t a1)
{
  uint64_t v2 = *(void *)(sub_1A916AAD0() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  type metadata accessor for HeartbeatEventService.Metadata();
  uint64_t v6 = v1[3];
  uint64_t v14 = v1[2];
  uint64_t v7 = v1[6];
  uint64_t v8 = (char *)v1 + v4;
  uint64_t v9 = *(void *)((char *)v1 + v4);
  uint64_t v10 = *((void *)v8 + 1);
  uint64_t v11 = *(void *)((char *)v1 + v5);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v15 + 16) = v12;
  void *v12 = v15;
  v12[1] = sub_1A9123498;
  return sub_1A9125D5C(a1, v14, v6, v7, (uint64_t)v1 + v3, v9, v10, v11);
}

uint64_t sub_1A912794C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return MEMORY[0x1F4188298](sub_1A9127970, 0, 0);
}

uint64_t sub_1A9127970()
{
  type metadata accessor for MescalSigner();
  v0[13] = swift_initStackObject();
  unint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E97B1558 + dword_1E97B1558);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[14] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A9127A30;
  uint64_t v3 = v0[10];
  uint64_t v2 = v0[11];
  return v5(v3, v2);
}

uint64_t sub_1A9127A30(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 120) = v2;
  swift_task_dealloc();
  if (v2)
  {
    return MEMORY[0x1F4188298](sub_1A9127B9C, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v7(a1, a2);
  }
}

uint64_t sub_1A9127B9C()
{
  uint64_t v1 = (void *)v0[15];
  swift_unknownObjectRelease();
  sub_1A916B3B0();
  sub_1A90CA164();
  uint64_t v2 = swift_allocObject();
  v0[4] = 0;
  *(_OWORD *)(v2 + 16) = xmmword_1A916EF60;
  v0[5] = 0xE000000000000000;
  v0[8] = v1;
  sub_1A908E870(0, (unint64_t *)&qword_1EB689860);
  sub_1A916B780();
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 64) = sub_1A90A67C0();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v4;
  sub_1A916AD30();
  swift_bridgeObjectRelease();
  sub_1A916B680();
  v0[6] = 0;
  v0[7] = 0xE000000000000000;
  sub_1A916B050();
  v0[9] = v1;
  sub_1A916B780();

  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v7(v5, v6);
}

uint64_t sub_1A9127D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1A916B280();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1A916B270();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_1A9129E74(a1, (unint64_t *)&unk_1EB687F70, MEMORY[0x1E4FBCFE8]);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A916B240();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

ValueMetadata *type metadata accessor for HeartbeatEventService()
{
  return &type metadata for HeartbeatEventService;
}

uint64_t *initializeBufferWithCopyOfBuffer for HeartbeatEventService.Metadata(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A916AC90();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    unint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *unint64_t v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for HeartbeatEventService.Metadata(uint64_t a1)
{
  uint64_t v2 = sub_1A916AC90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HeartbeatEventService.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A916AC90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  unint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HeartbeatEventService.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A916AC90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for HeartbeatEventService.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A916AC90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for HeartbeatEventService.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A916AC90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  unint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *unint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HeartbeatEventService.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A9128334);
}

uint64_t sub_1A9128334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A916AC90();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for HeartbeatEventService.Metadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A912840C);
}

uint64_t sub_1A912840C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1A916AC90();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1A91284CC()
{
  uint64_t result = sub_1A916AC90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for HeartbeatEventServiceURLSessionDelegate()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for HeartbeatEventService.Metadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A9128718);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}