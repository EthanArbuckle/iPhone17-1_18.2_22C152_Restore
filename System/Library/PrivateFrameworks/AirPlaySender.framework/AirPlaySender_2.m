uint64_t endpointdelegate_setVolumeSliderInternal(const void *a1, int a2, int a3, float a4)
{
  uint64_t DerivedStorage;
  BOOL v9;
  char v10;
  uint64_t v11;
  char v13;
  char v14;
  uint64_t v15;
  __CFDictionary *Mutable;
  __CFDictionary *v17;
  uint64_t v18;
  uint64_t v19;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2) {
    v9 = *(unsigned char *)(DerivedStorage + 50) == 0;
  }
  else {
    v9 = 1;
  }
  v10 = !v9;
  if (*(unsigned char *)(DerivedStorage + 48))
  {
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    return 0;
  }
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
  {
    APSVolumeConvertSliderValueToDB();
    LogPrintF();
  }
  if (!APSGetFBOPropertyInt64()) {
    return 0;
  }
  v11 = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
  {
    APSVolumeConvertSliderValueToDB();
    APSVolumeConvertSliderValueToDB();
    LogPrintF();
  }
  if (*(unsigned char *)(v11 + 51) && (*(_DWORD *)(v11 + 508) - 5) < 0xFFFFFFFE)
  {
    if (a3)
    {
      if (*(unsigned char *)(v11 + 520))
      {
        v13 = 0;
        *(unsigned char *)(v11 + 520) = 0;
        goto LABEL_27;
      }
    }
  }
  else if (a3)
  {
    if (*(unsigned char *)(v11 + 520) || (v14 = *(unsigned char *)(v11 + 521)) != 0)
    {
      v13 = 0;
      *(_WORD *)(v11 + 520) = 0;
      goto LABEL_27;
    }
  }
  v13 = 1;
  if (vabds_f32(a4, *(float *)(v11 + 516)) < 0.00000011921) {
    return 0;
  }
LABEL_27:
  *(float *)(v11 + 516) = a4;
  if (v10)
  {
LABEL_36:
    endpointdelegate_sendCurrentVolumeToReceiver(a1);
    return 0;
  }
  v15 = CMBaseObjectGetDerivedStorage();
  Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 2, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!Mutable)
  {
    APSLogErrorAt();
    v19 = 4294960568;
LABEL_46:
    APSLogErrorAt();
    APSLogErrorAt();
    return v19;
  }
  v17 = Mutable;
  CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F20E38], *(const void **)(v15 + 456));
  FigCFDictionarySetFloat();
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  CMNotificationCenterGetDefaultLocalCenter();
  FigDispatchAsyncPostNotification();
  CFRelease(v17);
  if ((v13 & 1) == 0)
  {
    v18 = endpoint_postMuteDidChangeNotification();
    if (v18)
    {
      v19 = v18;
      goto LABEL_46;
    }
  }
  if (a2) {
    goto LABEL_36;
  }
  return 0;
}

uint64_t endpointdelegate_setIsMuted(const void *a1, int a2, int a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v7 = DerivedStorage;
  int v8 = *(_DWORD *)(DerivedStorage + 508);
  BOOL v9 = (v8 - 1) < 2;
  BOOL v10 = v8 == 2;
  BOOL v11 = (v8 - 3) < 2;
  BOOL v12 = v8 == 4;
  if (a3) {
    BOOL v13 = v9;
  }
  else {
    BOOL v13 = v10;
  }
  if (a3) {
    BOOL v14 = v11;
  }
  else {
    BOOL v14 = v12;
  }
  v15 = (unsigned char *)(DerivedStorage + 520);
  v16 = (unsigned char *)(DerivedStorage + 521);
  if (a3) {
    v17 = (unsigned char *)(DerivedStorage + 520);
  }
  else {
    v17 = (unsigned char *)(DerivedStorage + 521);
  }
  if (*(unsigned char *)(DerivedStorage + 520)) {
    int v18 = 1;
  }
  else {
    int v18 = *v16 != 0;
  }
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  if (*v17 == a2) {
    return 0;
  }
  unsigned char *v17 = a2;
  if (!v13)
  {
    if (v14)
    {
      if (*v15)
      {
        int v21 = 1;
      }
      else
      {
        int v21 = *v16;
        if (*v16) {
          int v21 = *(_DWORD *)(v7 + 508) == 4;
        }
      }
      if (v21 != v18)
      {
        uint64_t v24 = CMBaseObjectGetDerivedStorage();
        APSVolumeConvertDBToSliderValue();
        if (a2 == 1)
        {
          APSVolumeConvertDBToSliderValue();
          float v26 = v25;
          int v27 = *(_DWORD *)(v24 + 516);
        }
        else
        {
          float v26 = *(float *)(v24 + 524);
          APSVolumeConvertDBToSliderValue();
        }
        *(_DWORD *)(v24 + 524) = v27;
        if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
          LogPrintF();
        }
        uint64_t v29 = endpointdelegate_setVolumeSliderInternal(a1, 1, 0, v26);
        if (v29)
        {
          uint64_t v19 = v29;
          APSLogErrorAt();
          APSLogErrorAt();
          return v19;
        }
      }
    }
    v20 = 0;
    goto LABEL_49;
  }
  if (a3)
  {
    v20 = 0;
LABEL_27:
    if (a2 == 1) {
      v23 = @"mute";
    }
    else {
      v23 = @"unmute";
    }
    if (gLogCategory_APEndpoint <= 40 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    uint64_t v28 = apEndpoint_sendCommandInternal(a1, v23, v20);
    if (v28)
    {
      uint64_t v19 = v28;
      goto LABEL_60;
    }
    if (!a3) {
      goto LABEL_52;
    }
    *(unsigned char *)(v7 + 532) = a2;
LABEL_49:
    uint64_t v19 = 0;
    if (!a3 || !*(unsigned char *)(v7 + 51)) {
      goto LABEL_55;
    }
    if (*(unsigned char *)(v7 + 50))
    {
LABEL_52:
      uint64_t v19 = 0;
      if (!v20) {
        return v19;
      }
      goto LABEL_56;
    }
    uint64_t v19 = endpoint_postMuteDidChangeNotification();
    if (!v19)
    {
LABEL_55:
      if (!v20) {
        return v19;
      }
LABEL_56:
      CFRelease(v20);
      return v19;
    }
LABEL_60:
    APSLogErrorAt();
    if (!v20) {
      return v19;
    }
    goto LABEL_56;
  }
  Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    v20 = Mutable;
    CFDictionarySetValue(Mutable, @"muteIsProgrammatic", (const void *)*MEMORY[0x1E4F1CFD0]);
    goto LABEL_27;
  }
  APSLogErrorAt();
  return 0;
}

uint64_t endpoint_setAuthorizationString(uint64_t a1, const void *a2)
{
  BOOL v14 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  endpoint_copyAuthorizationType(a1, &v14);
  if (a2)
  {
    v5 = *(const void **)(DerivedStorage + 472);
    *(void *)(DerivedStorage + 472) = a2;
    CFRetain(a2);
    if (!v5) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  BOOL v10 = v14;
  if (FigCFEqual())
  {
    uint64_t v11 = 0;
    if (!v10) {
      return v11;
    }
    goto LABEL_18;
  }
  v5 = *(const void **)(DerivedStorage + 472);
  *(void *)(DerivedStorage + 472) = 0;
  if (v5) {
LABEL_3:
  }
    CFRelease(v5);
LABEL_4:
  uint64_t v6 = *(void *)(DerivedStorage + 224);
  if (!v6)
  {
    uint64_t v11 = 0;
    goto LABEL_17;
  }
  uint64_t CMBaseObject = APSenderSessionGetCMBaseObject(v6);
  uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  BOOL v12 = *(uint64_t (**)(uint64_t, __CFString *, const void *))(v9 + 56);
  if (v12)
  {
    uint64_t v11 = v12(CMBaseObject, @"AuthorizationString", a2);
    if (!v11) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v11 = 4294954514;
  }
  APSLogErrorAt();
LABEL_17:
  BOOL v10 = v14;
  if (v14) {
LABEL_18:
  }
    CFRelease(v10);
  return v11;
}

uint64_t endpointdelegate_sendCurrentVolumeToReceiver(const void *a1)
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  uint64_t v3 = result;
  if (*(unsigned char *)(result + 128))
  {
    if (gLogCategory_APEndpoint <= 50)
    {
      if (gLogCategory_APEndpoint != -1) {
        return LogPrintF();
      }
      uint64_t result = _LogCategory_Initialize();
      if (result) {
        return LogPrintF();
      }
    }
  }
  else
  {
    CMBaseObjectGetDerivedStorage();
    APSVolumeConvertSliderValueToDB();
    int valuePtr = v4;
    if (*(void *)(v3 + 312))
    {
      CFNumberRef v5 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], kCFNumberFloatType, &valuePtr);
      CFSetApplyFunction(*(CFSetRef *)(v3 + 312), (CFSetApplierFunction)endpoint_setVolumePropertyOnPlaybackSessions, v5);
      if (v5) {
        CFRelease(v5);
      }
    }
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    CFRetain(a1);
    return APSDispatchAsyncFHelper();
  }
  return result;
}

uint64_t endpoint_postMuteDidChangeNotification()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 1, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    v2 = Mutable;
    CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F20E38], *(const void **)(DerivedStorage + 456));
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
    CFRelease(v2);
    return 0;
  }
  else
  {
    APSLogErrorAt();
    return 4294960568;
  }
}

uint64_t endpoint_setVolumePropertyOnPlaybackSessions(uint64_t a1, uint64_t a2)
{
  uint64_t CMBaseObject = FigEndpointPlaybackSessionGetCMBaseObject();
  uint64_t VTable = CMBaseObjectGetVTable();
  uint64_t v7 = *(void *)(VTable + 8);
  uint64_t result = VTable + 8;
  uint64_t v6 = v7;
  if (v7) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t))(v8 + 56);
  if (v9)
  {
    return v9(CMBaseObject, @"VolumeDB", a2);
  }
  return result;
}

void endpointdelegate_sendSetVolumeMessageIfNeeded(uint64_t a1)
{
  v1 = *(const void **)a1;
  float v2 = *(float *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a1 + 12);
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if ((v2 < -30.0 || v2 > 0.0) && APSVolumeDBValuesAreNoticeablyDifferent()) {
    float v2 = -20.0;
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  CMBaseObjectGetDerivedStorage();
  APSVolumeConvertSliderValueToDB();
  float v6 = v5;
  int v7 = *(unsigned __int8 *)(DerivedStorage + 532);
  uint64_t v8 = *(const void **)(DerivedStorage + 224);
  if (v8) {
    CFTypeRef v9 = CFRetain(v8);
  }
  else {
    CFTypeRef v9 = 0;
  }
  if (!APSGetFBOPropertyInt64() && APSSettingsGetIntWithDefault())
  {
    if (!APSVolumeDBValuesAreNoticeablyDifferent()) {
      float v2 = -144.0;
    }
    if (!APSVolumeDBValuesAreNoticeablyDifferent()) {
      float v6 = -144.0;
    }
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  if (!v9)
  {
    if (gLogCategory_APEndpoint > 50 || gLogCategory_APEndpoint == -1 && !_LogCategory_Initialize()) {
      goto LABEL_41;
    }
LABEL_56:
    LogPrintF();
    goto LABEL_41;
  }
  if (vabds_f32(v2, v6) >= 0.00000011921)
  {
    if (gLogCategory_APEndpoint > 50 || gLogCategory_APEndpoint == -1 && !_LogCategory_Initialize()) {
      goto LABEL_41;
    }
    goto LABEL_56;
  }
  if (!APSVolumeDBValuesAreNoticeablyDifferent() && !v7 && !v3)
  {
    if (gLogCategory_APEndpoint > 30 || gLogCategory_APEndpoint == -1 && !_LogCategory_Initialize()) {
      goto LABEL_41;
    }
    goto LABEL_56;
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  *(float *)(DerivedStorage + 528) = v2;
  *(unsigned char *)(DerivedStorage + 532) = 0;
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v10) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0;
  }
  BOOL v12 = *(unsigned int (**)(CFTypeRef))(v11 + 16);
  if (v12 && v12(v9))
  {
    if (!APSVolumeDBValuesAreNoticeablyDifferent() && (*(unsigned char *)(DerivedStorage + 536) & 0x20) != 0)
    {
      if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      endpoint_sendSetVolumeMessage(-30.0, (uint64_t)v1, (uint64_t)v9);
    }
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    endpoint_sendSetVolumeMessage(v2, (uint64_t)v1, (uint64_t)v9);
  }
  else
  {
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    APSSetFBOPropertyDouble();
  }
LABEL_41:
  if (v1) {
    CFRelease(v1);
  }
  if (v9)
  {
    CFRelease(v9);
  }
}

void endpoint_sendSetVolumeMessage(float a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *MEMORY[0x1E4F1CF80];
  Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  if (Mutable)
  {
    int v7 = Mutable;
    CFStringAppendFormat(Mutable, 0, @"volume: %f\r\n", a1);
    if (FigCreateBlockBufferWithCFString())
    {
LABEL_35:
      APSLogErrorAt();
      goto LABEL_31;
    }
    CMBaseObjectGetDerivedStorage();
    CFTypeRef cf = 0;
    if (!a3)
    {
LABEL_31:
      CFRelease(v7);
      return;
    }
    uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v8) {
      uint64_t v9 = v8;
    }
    else {
      uint64_t v9 = 0;
    }
    uint64_t v10 = *(unsigned int (**)(uint64_t))(v9 + 16);
    if (!v10 || !v10(a3))
    {
      int v14 = 0;
      goto LABEL_28;
    }
    uint64_t CMBaseObject = APSenderSessionGetCMBaseObject(a3);
    uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v12) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    v15 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v13 + 48);
    if (v15)
    {
      int v16 = v15(CMBaseObject, @"TransportControlStream", v5, &cf);
      if (v16)
      {
        int v14 = v16;
      }
      else
      {
        if (gLogCategory_APEndpoint <= 30 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
          LogPrintF();
        }
        CFTypeRef v17 = cf;
        uint64_t v18 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v18) {
          uint64_t v19 = v18;
        }
        else {
          uint64_t v19 = 0;
        }
        v20 = *(uint64_t (**)(CFTypeRef, uint64_t, void, void))(v19 + 56);
        if (v20)
        {
          int v14 = v20(v17, 1937141612, 0, 0);
          if (!v14) {
            goto LABEL_28;
          }
        }
        else
        {
          int v14 = -12782;
        }
      }
    }
    else
    {
      int v14 = -12782;
    }
    APSLogErrorAt();
LABEL_28:
    if (cf) {
      CFRelease(cf);
    }
    if (!v14) {
      goto LABEL_31;
    }
    goto LABEL_35;
  }
  APSLogErrorAt();
}

uint64_t apEndpoint_sendCommandInternal(const void *a1, const void *a2, const void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpoint <= 40 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  uint64_t v7 = *(void *)(DerivedStorage + 224);
  if (v7
    && ((uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 16)) == 0 ? (v9 = 0) : (v9 = v8),
        (uint64_t v10 = *(unsigned int (**)(uint64_t))(v9 + 16)) != 0 && v10(v7)))
  {
    if (*(unsigned char *)(DerivedStorage + 128)) {
      uint64_t v11 = 4294950573;
    }
    else {
      uint64_t v11 = 0;
    }
  }
  else
  {
    uint64_t v11 = 4294950570;
  }
  CFRetain(a1);
  CFRetain(*(CFTypeRef *)(DerivedStorage + 40));
  CFRetain(a2);
  if (a3) {
    CFRetain(a3);
  }
  uint64_t v12 = *(const void **)(DerivedStorage + 224);
  if (v12) {
    CFRetain(v12);
  }
  APSDispatchAsyncFHelper();
  return v11;
}

void apEndpoint_sendCommand(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef v52 = 0;
  if (*(_DWORD *)(a1 + 56))
  {
    APSLogErrorAt();
    unsigned int updated = *(_DWORD *)(a1 + 56);
    goto LABEL_96;
  }
  if (!FigCFEqual())
  {
    if (FigCFEqual())
    {
      if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      if (*(unsigned char *)(DerivedStorage + 280) || APSGetFBOPropertyInt64() && *(unsigned char *)(DerivedStorage + 250))
      {
        unsigned int updated = endpoint_setSecondDisplayMode(*(void **)a1, *(void *)(a1 + 32));
        if (!updated) {
          goto LABEL_96;
        }
        goto LABEL_93;
      }
      if (gLogCategory_APEndpoint <= 30 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      goto LABEL_95;
    }
    if (!FigCFEqual())
    {
      if (FigCFEqual())
      {
        unsigned int updated = endpoint_sendChangeRelativeVolumeMessage(*(void *)a1, *(void *)(a1 + 16));
        if (!updated) {
          goto LABEL_96;
        }
        goto LABEL_93;
      }
      if (!FigCFEqual())
      {
        if (FigCFEqual())
        {
          unsigned int updated = endpoint_sendSetMRInfo(*(void *)a1, *(void *)(a1 + 16), *(const __CFDictionary **)(a1 + 32), &v52);
          if (!updated) {
            goto LABEL_96;
          }
        }
        else
        {
          if (!FigCFEqual())
          {
            unsigned int updated = endpoint_sendControlCommand(*(void *)(a1 + 16), *(const void **)(a1 + 24));
            goto LABEL_96;
          }
          unsigned int updated = endpoint_sendUpdateBadgingFormatInfo(*(void *)a1, *(void *)(a1 + 16));
          if (!updated) {
            goto LABEL_96;
          }
        }
LABEL_93:
        APSLogErrorAt();
        goto LABEL_96;
      }
      APDemoEndpointUIEventChannelInit(*(void *)a1);
LABEL_95:
      unsigned int updated = 0;
      goto LABEL_96;
    }
    uint64_t v20 = *(void *)(a1 + 16);
    cf[0] = 0;
    CFArrayRef theArray = 0;
    CFDictionaryRef theDict = 0;
    uint64_t CMBaseObject = APSenderSessionGetCMBaseObject(v20);
    uint64_t v22 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v22) {
      uint64_t v23 = v22;
    }
    else {
      uint64_t v23 = 0;
    }
    float v25 = *(uint64_t (**)(uint64_t, __CFString *, void, CFTypeRef *))(v23 + 48);
    if (v25)
    {
      CFAllocatorRef v26 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
      unsigned int v27 = v25(CMBaseObject, @"TransportControlStream", *MEMORY[0x1E4F1CF80], cf);
      if (v27)
      {
        unsigned int updated = v27;
      }
      else
      {
        CFTypeRef v28 = cf[0];
        uint64_t v29 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v29) {
          uint64_t v30 = v29;
        }
        else {
          uint64_t v30 = 0;
        }
        v39 = *(uint64_t (**)(CFTypeRef, uint64_t, void, CFDictionaryRef *))(v30 + 56);
        if (v39)
        {
          unsigned int v40 = v39(v28, 1819240307, 0, &theDict);
          if (v40)
          {
            unsigned int updated = v40;
          }
          else
          {
            unsigned int CFDataWithBlockBufferNoCopy = FigCreateCFDataWithBlockBufferNoCopy();
            if (!CFDataWithBlockBufferNoCopy)
            {
              Mutable = CFDictionaryCreateMutable(v26, 1, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
              if (Mutable)
              {
                v43 = Mutable;
                CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F21150], theArray);
                unsigned int updated = 0;
                CFTypeRef v52 = v43;
              }
              else
              {
                APSLogErrorAt();
                unsigned int updated = -16721;
              }
LABEL_86:
              if (cf[0]) {
                CFRelease(cf[0]);
              }
              if (theDict) {
                CFRelease(theDict);
              }
              if (theArray) {
                CFRelease(theArray);
              }
              if (updated) {
                goto LABEL_93;
              }
              goto LABEL_96;
            }
            unsigned int updated = CFDataWithBlockBufferNoCopy;
          }
        }
        else
        {
          unsigned int updated = -12782;
        }
      }
    }
    else
    {
      unsigned int updated = -12782;
    }
    APSLogErrorAt();
    goto LABEL_86;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3)
  {
    APSLogErrorAt();
    unsigned int updated = -16720;
    goto LABEL_96;
  }
  uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  float v6 = *(unsigned int (**)(uint64_t, uint64_t))(v5 + 16);
  if (!v6 || !v6(v3, 47))
  {
    if (gLogCategory_APEndpoint <= 90 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    unsigned int updated = -16726;
    goto LABEL_96;
  }
  uint64_t v7 = *(void *)(a1 + 16);
  CFDictionaryRef v8 = *(const __CFDictionary **)(a1 + 32);
  CMBaseObjectGetDerivedStorage();
  cf[0] = 0;
  CFArrayRef theArray = 0;
  CFDictionaryRef theDict = 0;
  CFMutableDictionaryRef v9 = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!v9)
  {
    APSLogErrorAt();
LABEL_120:
    int v18 = 0;
    int v38 = -16721;
    goto LABEL_68;
  }
  CFMutableDictionaryRef v10 = v9;
  uint64_t v50 = *MEMORY[0x1E4F1CF80];
  CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, v8);
  if (!MutableCopy)
  {
    APSLogErrorAt();
    CFRelease(v10);
    goto LABEL_120;
  }
  uint64_t v12 = MutableCopy;
  uint64_t v13 = (const void *)*MEMORY[0x1E4F204E8];
  CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue(v8, (const void *)*MEMORY[0x1E4F204E8]);
  v15 = (const void *)*MEMORY[0x1E4F204F0];
  CFArrayRef v16 = (const __CFArray *)CFDictionaryGetValue(v8, (const void *)*MEMORY[0x1E4F204F0]);
  CFDictionaryRemoveValue(v12, v13);
  CFDictionaryRemoveValue(v12, v15);
  int v17 = APSenderSessionAirPlayPerformPairingPeersListManagement(v7, Value, v16, &theArray);
  if (v17)
  {
    int v38 = v17;
    APSLogErrorAt();
    int v18 = 0;
    goto LABEL_66;
  }
  if (theArray && CFArrayGetCount(theArray) > 0)
  {
    int v18 = 0;
  }
  else
  {
    uint64_t v19 = (const void *)*MEMORY[0x1E4F20508];
    if (CFDictionaryGetInt64())
    {
      if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      int v18 = -16726;
    }
    else
    {
      int v18 = 0;
    }
    CFDictionarySetValue(v12, v19, (const void *)*MEMORY[0x1E4F1CFC8]);
  }
  CFDictionarySetValue(v10, @"ConfigurationDictionary", v12);
  uint64_t v31 = APSenderSessionGetCMBaseObject(v7);
  uint64_t v32 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v32) {
    uint64_t v33 = v32;
  }
  else {
    uint64_t v33 = 0;
  }
  v34 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v33 + 48);
  if (!v34)
  {
    int v38 = -12782;
LABEL_65:
    APSLogErrorAt();
    goto LABEL_66;
  }
  int v35 = v34(v31, @"TransportControlStream", v50, cf);
  if (v35)
  {
    int v38 = v35;
    goto LABEL_65;
  }
  int v36 = APTransportStreamSendPlistMessageCreatingPlistReply();
  if (v36)
  {
    int v38 = v36;
    goto LABEL_65;
  }
  if (theDict)
  {
    if (theArray)
    {
      v37 = CFDictionaryCreateMutableCopy(0, 0, theDict);
      CFDictionarySetValue(v37, (const void *)*MEMORY[0x1E4F204F8], theArray);
      int v38 = 0;
      CFTypeRef v52 = v37;
    }
    else
    {
      int v38 = 0;
      CFTypeRef v52 = theDict;
      CFDictionaryRef theDict = 0;
    }
  }
  else
  {
    APSLogErrorAt();
    int v38 = -16729;
  }
LABEL_66:
  CFRelease(v10);
  CFRelease(v12);
  if (theArray) {
    CFRelease(theArray);
  }
LABEL_68:
  if (theDict) {
    CFRelease(theDict);
  }
  if (cf[0]) {
    CFRelease(cf[0]);
  }
  if (v18) {
    unsigned int updated = v18;
  }
  else {
    unsigned int updated = v38;
  }
  if (updated) {
    goto LABEL_93;
  }
LABEL_96:
  v44 = *(const void **)(a1 + 40);
  CFTypeRef v45 = v52;
  if (v44)
  {
    cf[0] = *(CFTypeRef *)a1;
    cf[1] = v52;
    v46 = *(const void **)(a1 + 48);
    cf[2] = v44;
    cf[3] = v46;
    cf[4] = (CFTypeRef)updated;
    CFRetain(cf[0]);
    if (v52) {
      CFRetain(v52);
    }
    APSDispatchAsyncFHelper();
    CFTypeRef v45 = v52;
  }
  if (v45) {
    CFRelease(v45);
  }
  CFRelease(*(CFTypeRef *)a1);
  CFRelease(*(CFTypeRef *)(a1 + 24));
  v47 = *(const void **)(a1 + 8);
  if (v47) {
    CFRelease(v47);
  }
  v48 = *(const void **)(a1 + 32);
  if (v48) {
    CFRelease(v48);
  }
  v49 = *(const void **)(a1 + 16);
  if (v49) {
    CFRelease(v49);
  }
}

uint64_t endpoint_setSecondDisplayMode(void *a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
  {
    APSLogErrorAt();
    return 4294950576;
  }
  uint64_t v5 = DerivedStorage;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  if (!FigCFEqual() || *(unsigned char *)(v5 + 248))
  {
    MEMORY[0x1D25EB390](*(void *)(v5 + 120));
    CFArrayRef v6 = 0;
    goto LABEL_5;
  }
  CFArrayRef v6 = (const __CFArray *)FigCFDictionaryCopyArrayOfValues();
  MEMORY[0x1D25EB390](*(void *)(v5 + 120));
  if (!v6 || CFArrayGetCount(v6) <= 0)
  {
LABEL_5:
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
    uint64_t v8 = 4294949690;
    if (!v6) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t Int64 = CFDictionaryGetInt64();
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  if (Int64 == 1)
  {
    int v12 = CFDictionaryGetInt64();
    BOOL v13 = v12 && !*(unsigned char *)(v5 + 250) && APSGetFBOPropertyInt64() != 0;
    int v14 = *(NSObject **)(v5 + 616);
    if (v14)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(v5 + 616));
      dispatch_release(v14);
      *(void *)(v5 + 616) = 0;
    }
    if (v13) {
      *(void *)(v5 + 616) = APEndpointCreateAndStartProcessDemiseListener(a1, v12, *(dispatch_queue_t *)(v5 + 576), (void (__cdecl *)(void *))endpoint_handleClientProcessDeath);
    }
  }
  else
  {
    if (Int64)
    {
      if (gLogCategory_APEndpoint <= 90 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      CFMutableDictionaryRef Mutable = 0;
      uint64_t v8 = 4294950576;
      goto LABEL_6;
    }
    uint64_t v11 = *(NSObject **)(v5 + 616);
    if (v11)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(v5 + 616));
      dispatch_release(v11);
      *(void *)(v5 + 616) = 0;
    }
  }
  CFAllocatorRef v15 = CFGetAllocator(a1);
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v15, 1, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  CFDictionarySetInt64();
  CFIndex Count = CFArrayGetCount(v6);
  if (Count < 1)
  {
    uint64_t v8 = 0;
  }
  else
  {
    CFIndex v17 = Count;
    for (CFIndex i = 0; i != v17; ++i)
    {
      ValueAtIndex = CFArrayGetValueAtIndex(v6, i);
      uint64_t v20 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v20) {
        uint64_t v21 = v20;
      }
      else {
        uint64_t v21 = 0;
      }
      uint64_t v22 = *(void (**)(const void *, __CFString *, CFMutableDictionaryRef))(v21 + 40);
      if (v22) {
        v22(ValueAtIndex, @"SetMode", Mutable);
      }
    }
    uint64_t v8 = 0;
  }
LABEL_6:
  CFRelease(v6);
LABEL_7:
  if (Mutable) {
    CFRelease(Mutable);
  }
  return v8;
}

uint64_t endpoint_sendChangeRelativeVolumeMessage(uint64_t a1, uint64_t a2)
{
  CMBaseObjectGetDerivedStorage();
  if (!FigCFDictionaryGetBooleanIfPresent())
  {
    APSLogErrorAt();
    return 4294950576;
  }
  if (a2)
  {
    uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v3) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    uint64_t v5 = *(unsigned int (**)(uint64_t))(v4 + 16);
    if (v5 && v5(a2))
    {
      if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      if (Mutable)
      {
        uint64_t v8 = Mutable;
        SInt32 = (const void *)FigCFNumberCreateSInt32();
        if (SInt32)
        {
          CFMutableDictionaryRef v10 = SInt32;
          CFDictionarySetValue(v8, @"value", SInt32);
          uint64_t v6 = endpoint_sendControlCommand(a2, @"changeRelativeVolume");
          CFRelease(v8);
          CFRelease(v10);
          return v6;
        }
        APSLogErrorAt();
        CFRelease(v8);
      }
      else
      {
        APSLogErrorAt();
      }
      return 4294950575;
    }
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    return 4294949690;
  }
  else
  {
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    return 0;
  }
}

uint64_t endpoint_sendSetMRInfo(uint64_t a1, uint64_t a2, const __CFDictionary *a3, void *a4)
{
  unsigned int v9 = 0;
  CMBaseObjectGetDerivedStorage();
  if (a3)
  {
    if (CFDictionaryContainsKey(a3, (const void *)*MEMORY[0x1E4F21258]))
    {
      uint64_t v7 = APSGetFBOPropertyInt64();
      if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      if (v7)
      {
        uint64_t result = endpoint_sendControlCommand(a2, @"setMRInfo");
        unsigned int v10 = result;
        if (result)
        {
          APSLogErrorAt();
          return v10;
        }
        return result;
      }
    }
    else
    {
      APSLogErrorAt();
      unsigned int v9 = -16720;
    }
  }
  uint64_t result = v9;
  if (a4 && !v9)
  {
    uint64_t result = 0;
    *a4 = 0;
  }
  return result;
}

uint64_t endpoint_sendUpdateBadgingFormatInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(CMBaseObjectGetDerivedStorage() + 40);
  uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 16);
  if (v6) {
    int v7 = v6(v3, 88);
  }
  else {
    int v7 = 0;
  }
  if (!FigCFDictionaryGetNumberValue())
  {
    uint64_t v8 = 4294950576;
    goto LABEL_17;
  }
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  if (!v7)
  {
    uint64_t v8 = 4294960561;
    goto LABEL_17;
  }
  uint64_t v8 = endpoint_sendControlCommand(a2, @"updateBadgingFormatInfo");
  if (v8) {
LABEL_17:
  }
    APSLogErrorAt();
  return v8;
}

uint64_t endpoint_sendControlCommand(uint64_t a1, const void *a2)
{
  CFTypeRef cf = 0;
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294950575;
  }
  uint64_t v5 = Mutable;
  CFDictionarySetValue(Mutable, @"type", a2);
  FigCFDictionarySetValue();
  uint64_t CMBaseObject = APSenderSessionGetCMBaseObject(a1);
  uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  unsigned int v9 = *(uint64_t (**)(uint64_t, __CFString *, void, CFTypeRef *))(v8 + 48);
  if (v9)
  {
    uint64_t v10 = v9(CMBaseObject, @"TransportControlStream", *MEMORY[0x1E4F1CF80], &cf);
    if (v10)
    {
      uint64_t v11 = v10;
    }
    else
    {
      uint64_t v11 = APTransportStreamSendPlistMessageCreatingPlistReply();
      if (!v11) {
        goto LABEL_11;
      }
    }
  }
  else
  {
    uint64_t v11 = 4294954514;
  }
  APSLogErrorAt();
LABEL_11:
  CFRelease(v5);
  if (cf) {
    CFRelease(cf);
  }
  return v11;
}

void endpoint_handleClientProcessDeath(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  uint64_t v3 = *(NSObject **)(DerivedStorage + 616);
  if (v3)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(DerivedStorage + 616));
    dispatch_release(v3);
    *(void *)(DerivedStorage + 616) = 0;
  }
  CFMutableDictionaryRef SecondDisplayModeCommandParams = APEndpointCreateSecondDisplayModeCommandParams();
  if (SecondDisplayModeCommandParams)
  {
    CFMutableDictionaryRef v5 = SecondDisplayModeCommandParams;
    endpoint_setSecondDisplayMode(a1, SecondDisplayModeCommandParams);
    CFRelease(v5);
  }
  else
  {
    APSLogErrorAt();
  }
}

uint64_t endpoint_DumpHierarchy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  uint64_t v10 = "RC";
  if (!*(unsigned char *)(DerivedStorage + 48)) {
    uint64_t v10 = "AP";
  }
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, const char *, ...))(a5 + 16))(a5, a3, "Endpoint:[%{ptr}] (%s) %''@ Parent:[%{ptr}]\n", a1, v10, *(void *)(DerivedStorage + 448), a2);
  if (v11)
  {
    uint64_t v18 = v11;
    goto LABEL_18;
  }
  uint64_t v12 = *(void *)(DerivedStorage + 224);
  uint64_t v13 = a3 + 1;
  APSHierarchyReporterProtocolGetProtocolID();
  Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
  if (!ProtocolVTable || (uint64_t v15 = *(void *)(ProtocolVTable + 16)) == 0)
  {
    uint64_t v18 = 4294954508;
LABEL_13:
    uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t, const char *, ...))(a5 + 16))(a5, v13, "[Error] Object:[%{ptr}]%?s%?''@ cannot be dumped (error %#m) Parent:[%{ptr}]\n", v12, 0, " ", 0, 0, v18, a1);
    goto LABEL_14;
  }
  CFArrayRef v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t))(v15 + 8);
  if (!v16)
  {
    uint64_t v18 = 4294954514;
    goto LABEL_13;
  }
  uint64_t v17 = v16(v12, a1, v13, 0, a5);
  uint64_t v18 = v17;
  if (v17 == -12782 || v17 == -12788) {
    goto LABEL_13;
  }
LABEL_14:
  if (v18) {
LABEL_18:
  }
    APSLogErrorAt();
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  return v18;
}

uint64_t endpoint_Activate(const void *a1, uint64_t a2, const __CFDictionary *a3, uint64_t a4, uint64_t a5)
{
  *(void *)&long long v120 = a4;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  v128 = 0;
  long long v123 = 0u;
  long long v124 = 0u;
  long long v125 = 0u;
  long long v126 = 0u;
  long long v127 = 0u;
  uint64_t v10 = (const void *)CFStringCreateF();
  uint64_t v11 = *(void *)(DerivedStorage + 40);
  CFTypeRef v129 = 0;
  v130[0] = 0;
  CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(v11);
  uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v14) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  CFArrayRef v16 = *(void (**)(uint64_t, __CFString *, const __CFAllocator *, CFTypeRef *))(v15 + 48);
  if (!v16 || (v16(CMBaseObject, @"TransportDevice", v12, v130), !v130[0]))
  {
    int v20 = 0;
    goto LABEL_12;
  }
  int v17 = APSEventRecorderCreate();
  if (v17)
  {
    int v20 = v17;
  }
  else
  {
    uint64_t EventRecorder = APTransportDeviceGetEventRecorder();
    if (!EventRecorder || (int v19 = MEMORY[0x1D25E8260](v129, EventRecorder)) == 0)
    {
      APSEventRecorderAddSignPostForEvent();
      int v20 = 0;
      CFTypeRef v129 = 0;
      goto LABEL_10;
    }
    int v20 = v19;
  }
  APSLogErrorAt();
LABEL_10:
  if (v130[0]) {
    CFRelease(v130[0]);
  }
LABEL_12:
  *((void *)&v120 + 1) = a5;
  if (v20)
  {
    APSLogErrorAt();
    CFTypeRef v36 = 0;
    v119 = 0;
    CFTypeRef cf = 0;
    goto LABEL_244;
  }
  CFAllocatorRef allocator = v12;
  APSEventRecorderRecordEventWithFlags();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  uint64_t v21 = *(void *)(DerivedStorage + 144);
  if (a3)
  {
    CFArrayRef Value = CFDictionaryGetValue(a3, @"ParentContextID");
    if (!Value) {
      CFArrayRef Value = CFDictionaryGetValue(a3, (const void *)*MEMORY[0x1E4F20350]);
    }
    if (!*(_DWORD *)(DerivedStorage + 152))
    {
      uint64_t v23 = *(const void **)(DerivedStorage + 160);
      *(void *)(DerivedStorage + 160) = Value;
      if (Value) {
        CFRetain(Value);
      }
      if (!v23) {
        goto LABEL_25;
      }
LABEL_24:
      CFRelease(v23);
LABEL_25:
      if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
LABEL_30:
      uint64_t v117 = v21;
      uint64_t v24 = a2;
      if (a3) {
        float v25 = CFDictionaryGetValue(a3, @"Container");
      }
      else {
        float v25 = 0;
      }
      uint64_t UpTimeNanoseconds = FigGetUpTimeNanoseconds();
      if (FigCFEqual())
      {
        if (UpTimeNanoseconds <= *(void *)(DerivedStorage + 568))
        {
          uint64_t v27 = *(void *)(DerivedStorage + 552);
LABEL_41:
          *(void *)(DerivedStorage + 552) = v27 + 1;
          *(void *)(DerivedStorage + 568) = UpTimeNanoseconds + 1000000000 * *(void *)(DerivedStorage + 88);
          if (a2 == 16 || !*(unsigned char *)(DerivedStorage + 48))
          {
            if (*(unsigned char *)(DerivedStorage + 128))
            {
              APSLogErrorAt();
              CFTypeRef v36 = 0;
              v119 = 0;
              CFTypeRef cf = 0;
              int v20 = -16723;
              goto LABEL_244;
            }
            if (a3)
            {
              CFTypeID v29 = CFGetTypeID(a3);
              if (v29 != CFDictionaryGetTypeID()) {
                goto LABEL_307;
              }
            }
            uint64_t v30 = *(void *)(DerivedStorage + 144);
            if (!v30 || v30 == a2)
            {
              if (*(void *)(DerivedStorage + 224))
              {
                APSLogErrorAt();
                CFTypeRef v36 = 0;
                v119 = 0;
                CFTypeRef cf = 0;
                int v20 = -16727;
                goto LABEL_244;
              }
              if (*(void *)(DerivedStorage + 40))
              {
                if (!a3)
                {
                  CFTypeRef v36 = 0;
                  *(void *)v115 = 0;
                  *(void *)v116 = 0;
                  int v34 = 0;
                  v119 = 0;
                  CFTypeRef cf = 0;
                  double v37 = 0.0;
LABEL_107:
                  if (endpoint_shouldOnlyBeActivatedAsPartOfCluster()
                    && !*(unsigned char *)(DerivedStorage + 250))
                  {
                    APSLogErrorAt();
                    int v20 = -72277;
                    goto LABEL_244;
                  }
                  if (*(unsigned char *)(DerivedStorage + 48)) {
                    goto LABEL_114;
                  }
                  uint64_t v50 = (uint64_t)cf;
                  if (!cf) {
                    uint64_t v50 = APSCreateNewUUIDString();
                  }
                  CFTypeRef cf = (CFTypeRef)v50;
                  int v51 = endpoint_ensureSharedContextCreated((uint64_t)a1, a2, a3, v34);
                  if (v51)
                  {
                    int v20 = v51;
                    goto LABEL_244;
                  }
                  int MetadataSourceAndCommandSinkIfNeeded = endpoint_createMetadataSourceAndCommandSinkIfNeeded((uint64_t)a1, v117, a2);
                  if (MetadataSourceAndCommandSinkIfNeeded)
                  {
                    int v20 = MetadataSourceAndCommandSinkIfNeeded;
                  }
                  else
                  {
LABEL_114:
                    CFGetAllocator(a1);
                    int v53 = APSConnectionInterfaceManagerCreate();
                    if (!v53)
                    {
                      if (v36)
                      {
                        if (gLogCategory_APEndpoint <= 50
                          && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
                        {
                          LogPrintF();
                        }
LABEL_223:
                        CMNotificationCenterGetDefaultLocalCenter();
                        int v92 = FigNotificationCenterAddWeakListener();
                        if (v92)
                        {
                          int v20 = v92;
                        }
                        else
                        {
                          CMNotificationCenterGetDefaultLocalCenter();
                          int v93 = FigNotificationCenterAddWeakListener();
                          if (!v93)
                          {
                            uint64_t v94 = CMBaseObjectGetDerivedStorage();
                            if (!*(unsigned char *)(v94 + 48))
                            {
                              uint64_t v95 = v94;
                              if (*(void *)(v94 + 32))
                              {
                                CMNotificationCenterGetDefaultLocalCenter();
                                FigNotificationCenterAddWeakListener();
                                CMNotificationCenterGetDefaultLocalCenter();
                                FigNotificationCenterAddWeakListener();
                                if (*(_DWORD *)(v95 + 104) == 7)
                                {
                                  CMNotificationCenterGetDefaultLocalCenter();
                                  FigNotificationCenterAddWeakListener();
                                }
                              }
                            }
                            if (endpoint_isInLocalClusterOfAppleTV())
                            {
                              CMNotificationCenterGetDefaultLocalCenter();
                              FigNotificationCenterAddWeakListener();
                            }
                            *(void *)(DerivedStorage + 224) = CFRetain(v36);
                            *(void *)(DerivedStorage + 232) = CFRetain(v128);
                            ++*(void *)(DerivedStorage + 136);
                            *(void *)(DerivedStorage + 144) = a2;
                            *(_DWORD *)(DerivedStorage + 152) = 1;
                            *(void *)(DerivedStorage + 288) = 0;
                            if (a3 && CFDictionaryGetInt64())
                            {
                              if (gLogCategory_APEndpoint <= 50
                                && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
                              {
                                LogPrintF();
                              }
                            }
                            else
                            {
                              CMBaseObjectGetDerivedStorage();
                              APSGetFBOPropertyInt64();
                              APSRTCReportingAgentCreate();
                              *(void *)(DerivedStorage + 296) = CFDictionaryCreateMutable(allocator, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
                              APSGetCPULoadAverage();
                              CFDictionarySetInt64();
                              CFDictionarySetDouble();
                              CFDictionarySetInt64();
                              v96 = (const void **)MEMORY[0x1E4F1CFD0];
                              if (!*(unsigned char *)(DerivedStorage + 248)) {
                                v96 = (const void **)MEMORY[0x1E4F1CFC8];
                              }
                              CFDictionarySetValue(*(CFMutableDictionaryRef *)(DerivedStorage + 296), @"isPerAppDisplay", *v96);
                            }
                            endpoint_postIsInUseDidChangeNotification((uint64_t)a1, *(unsigned __int8 *)(DerivedStorage + 488));
                            if ((a2 & 4) == 0
                              || *(void *)(DerivedStorage + 312)
                              || (CFMutableSetRef Mutable = CFSetCreateMutable(allocator, 0, MEMORY[0x1E4F1D548]),
                                  (*(void *)(DerivedStorage + 312) = Mutable) != 0))
                            {
                              int v20 = 0;
                            }
                            else
                            {
                              APSLogErrorAt();
                              int v20 = -16721;
                            }
                            goto LABEL_244;
                          }
                          int v20 = v93;
                        }
                        APSLogErrorAt();
LABEL_304:
                        APSLogErrorAt();
                        goto LABEL_244;
                      }
                      int v54 = *(unsigned __int8 *)(DerivedStorage + 268);
                      int v55 = *(unsigned __int8 *)(DerivedStorage + 250);
                      int v113 = *(_DWORD *)(DerivedStorage + 252);
                      CFTypeRef v114 = *(CFTypeRef *)(DerivedStorage + 216);
                      uint64_t v56 = CMBaseObjectGetDerivedStorage();
                      CFTypeRef v129 = 0;
                      v130[0] = 0;
                      CMBaseObjectGetDerivedStorage();
                      if (endpoint_shouldUseLegacySenderSession_checkSessionOverrideOnce != -1) {
                        dispatch_once_f(&endpoint_shouldUseLegacySenderSession_checkSessionOverrideOnce, &endpoint_shouldUseLegacySenderSession_sessionOverride, (dispatch_function_t)endpoint_getSessionProtocolOverrideString);
                      }
                      if ((__CFString *)endpoint_shouldUseLegacySenderSession_sessionOverride == @"legacy")
                      {
LABEL_124:
                        a2 = v24;
                        if (gLogCategory_APEndpoint > 50
                          || gLogCategory_APEndpoint == -1 && !_LogCategory_Initialize())
                        {
                          goto LABEL_143;
                        }
                        goto LABEL_139;
                      }
                      if (!endpoint_shouldUseLegacySenderSession_sessionOverride) {
                        goto LABEL_322;
                      }
                      if (CFEqual((CFTypeRef)endpoint_shouldUseLegacySenderSession_sessionOverride, @"legacy")) {
                        goto LABEL_124;
                      }
                      if ((__CFString *)endpoint_shouldUseLegacySenderSession_sessionOverride == @"airplay"
                        || endpoint_shouldUseLegacySenderSession_sessionOverride
                        && CFEqual((CFTypeRef)endpoint_shouldUseLegacySenderSession_sessionOverride, @"airplay"))
                      {
                        if (gLogCategory_APEndpoint <= 50
                          && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
                        {
                          LogPrintF();
                        }
                      }
                      else
                      {
LABEL_322:
                        if (APSGetFBOPropertyInt64())
                        {
                          a2 = v24;
                          if (gLogCategory_APEndpoint > 40
                            || gLogCategory_APEndpoint == -1 && !_LogCategory_Initialize())
                          {
                            goto LABEL_143;
                          }
LABEL_139:
                          LogPrintF();
LABEL_143:
                          int v57 = APSenderSessionLegacyAudioCreate((uint64_t)allocator, *(const void **)(v56 + 448), *(const void **)(v56 + 40), v114, &v129);
                          if (v57)
                          {
                            int v20 = v57;
                            goto LABEL_208;
                          }
                          if (gLogCategory_APEndpoint <= 50
                            && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
                          {
                            LogPrintF();
                          }
                          goto LABEL_186;
                        }
                      }
                      if (v55) {
                        BOOL v58 = v24 == 16;
                      }
                      else {
                        BOOL v58 = 1;
                      }
                      if (v58) {
                        v59 = 0;
                      }
                      else {
                        v59 = cf;
                      }
                      uint64_t v60 = CMBaseObjectGetDerivedStorage();
                      if (v54)
                      {
                        if (FigCFEqual()) {
                          int v61 = 9;
                        }
                        else {
                          int v61 = 7;
                        }
                      }
                      else
                      {
                        if ((v115[0] & 1) == 0)
                        {
                          uint64_t v68 = v60;
                          int v62 = v113;
                          if (v24 == 16)
                          {
                            if (*(unsigned char *)(v60 + 49)) {
                              int v61 = 6;
                            }
                            else {
                              int v61 = 1;
                            }
                          }
                          else if (FigCFEqual())
                          {
                            int v61 = 4;
                          }
                          else
                          {
                            if (*(unsigned char *)(v68 + 249))
                            {
                              a2 = v24;
                              if (endpoint_isInLocalClusterOfAppleTV())
                              {
                                int v61 = 3;
                              }
                              else if (endpoint_isInLocalStereoPairPersistentConnection())
                              {
                                int v61 = 11;
                              }
                              else
                              {
                                int v61 = 2;
                              }
                              goto LABEL_163;
                            }
                            int v61 = 0;
                          }
                          a2 = v24;
LABEL_163:
                          if (v62 == 2)
                          {
                            int v121 = v61;
                            uint64_t v63 = APEndpointDescriptionGetCMBaseObject(*(void *)(v56 + 40));
                            uint64_t v64 = *(void *)(CMBaseObjectGetVTable() + 8);
                            if (v64) {
                              uint64_t v65 = v64;
                            }
                            else {
                              uint64_t v65 = 0;
                            }
                            v69 = *(uint64_t (**)(uint64_t, __CFString *, const __CFAllocator *, CFTypeRef *))(v65 + 48);
                            if (!v69)
                            {
                              int v20 = -12782;
                              goto LABEL_208;
                            }
                            int v70 = v69(v63, @"ClusterUUID", allocator, v130);
                            if (v70)
                            {
                              int v20 = v70;
                              goto LABEL_208;
                            }
                            CFTypeRef v66 = v130[0];
                            char v67 = v116[0];
                            int v61 = v121;
                          }
                          else
                          {
                            CFTypeRef v66 = 0;
                            char v67 = v116[0];
                          }
                          int v71 = APSenderSessionAirPlayCreate((int)allocator, *(const void **)(v56 + 448), *(const void **)(v56 + 40), v128, v61, v62, *(NSObject **)(v56 + 16), v24 != 16, v37, v116[4], v67, v114, v59, v66, v115[4], 0, &v129);
                          if (v71)
                          {
                            int v20 = v71;
                            goto LABEL_208;
                          }
                          if (gLogCategory_APEndpoint <= 50
                            && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
                          {
                            LogPrintF();
                          }
                          CFTypeRef v72 = v129;
                          uint64_t v73 = *(void *)(CMBaseObjectGetVTable() + 16);
                          if (v73) {
                            uint64_t v74 = v73;
                          }
                          else {
                            uint64_t v74 = 0;
                          }
                          v75 = *(void (**)(CFTypeRef, const void *, const void *, uint64_t (*)(), uint64_t (*)(uint64_t, int, uint64_t, const void *, void *)))(v74 + 96);
                          if (v75) {
                            v75(v72, a1, a1, endpoint_handleEventMessage, endpoint_handleEventMessageCreatingReply);
                          }
LABEL_186:
                          uint64_t v76 = *(void *)(v56 + 472);
                          if (!v76) {
                            goto LABEL_192;
                          }
                          uint64_t v77 = APSenderSessionGetCMBaseObject(v129);
                          uint64_t v78 = *(void *)(CMBaseObjectGetVTable() + 8);
                          if (v78) {
                            uint64_t v79 = v78;
                          }
                          else {
                            uint64_t v79 = 0;
                          }
                          v80 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t))(v79 + 56);
                          if (v80)
                          {
                            int v81 = v80(v77, @"AuthorizationString", v76);
                            if (v81)
                            {
                              int v20 = v81;
                              goto LABEL_208;
                            }
LABEL_192:
                            if (APSSettingsGetInt64())
                            {
                              if (gLogCategory_APEndpoint <= 50
                                && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
                              {
                                LogPrintF();
                              }
                              uint64_t v82 = APSenderSessionGetCMBaseObject(v129);
                              uint64_t v83 = *(void *)(CMBaseObjectGetVTable() + 8);
                              if (v83) {
                                uint64_t v84 = v83;
                              }
                              else {
                                uint64_t v84 = 0;
                              }
                              v85 = *(uint64_t (**)(uint64_t, __CFString *, void))(v84 + 56);
                              if (!v85)
                              {
                                int v20 = -12782;
                                goto LABEL_208;
                              }
                              int v86 = v85(v82, @"PublishEncryptionKeyDiagnosticMode", *MEMORY[0x1E4F1CFD0]);
                              if (v86)
                              {
                                int v20 = v86;
                                goto LABEL_208;
                              }
                            }
                            else if (gLogCategory_APEndpoint <= 50 {
                                   && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
                            }
                            {
                              LogPrintF();
                            }
                            int v20 = 0;
                            CFTypeRef v36 = v129;
                            goto LABEL_219;
                          }
                          int v20 = -12782;
LABEL_208:
                          APSLogErrorAt();
                          if (!v129)
                          {
                            CFTypeRef v36 = 0;
                            goto LABEL_220;
                          }
                          uint64_t v87 = APSenderSessionGetCMBaseObject(v129);
                          if (v87)
                          {
                            uint64_t v88 = v87;
                            uint64_t v89 = *(void *)(CMBaseObjectGetVTable() + 8);
                            uint64_t v90 = v89 ? v89 : 0;
                            v91 = *(void (**)(uint64_t))(v90 + 24);
                            if (v91) {
                              v91(v88);
                            }
                          }
                          CFRelease(v129);
                          CFTypeRef v36 = 0;
LABEL_219:
                          CFTypeRef v129 = 0;
LABEL_220:
                          if (v130[0]) {
                            CFRelease(v130[0]);
                          }
                          if (v20) {
                            goto LABEL_304;
                          }
                          goto LABEL_223;
                        }
                        int v61 = 8;
                      }
                      a2 = v24;
                      int v62 = v113;
                      goto LABEL_163;
                    }
                    int v20 = v53;
                  }
                  APSLogErrorAt();
                  goto LABEL_244;
                }
                int ActivationOptions = endpoint_readActivationOptions(a3, DerivedStorage + 136);
                if (ActivationOptions)
                {
                  int v20 = ActivationOptions;
                  CFTypeRef v36 = 0;
                  v119 = 0;
                  CFTypeRef cf = 0;
                  goto LABEL_244;
                }
                uint64_t v32 = (unsigned char *)(DerivedStorage + 268);
                FigCFDictionaryGetBooleanIfPresent();
                FigCFDictionaryGetBooleanIfPresent();
                FigCFDictionaryGetBooleanIfPresent();
                if (!*(unsigned char *)(DerivedStorage + 250))
                {
LABEL_55:
                  int v34 = FigCFEqual();
                  uint64_t Int64 = CFDictionaryGetInt64();
                  if (!IsAppleInternalBuild() || Int64)
                  {
                    if (!Int64) {
                      goto LABEL_75;
                    }
                  }
                  else if (APSSettingsGetIntWithDefault() != 1)
                  {
                    goto LABEL_75;
                  }
                  if (gLogCategory_APEndpoint <= 50
                    && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
                  {
                    LogPrintF();
                  }
                  LOBYTE(Int64) = 1;
LABEL_75:
                  if (!*v32) {
                    *(unsigned char *)(DerivedStorage + 268) = FigCFEqual();
                  }
                  BOOL v38 = CFDictionaryGetInt64() != 0;
                  uint64_t v39 = CFDictionaryGetInt64();
                  BOOL v40 = 0;
                  unsigned int v41 = *(_DWORD *)(DerivedStorage + 104);
                  if (v41 <= 0xD && ((1 << v41) & 0x2090) != 0) {
                    BOOL v40 = !*(unsigned char *)(DerivedStorage + 48)
                  }
                       && !(*v32 | v34)
                       && *(unsigned char *)(DerivedStorage + 251) == 0;
                  v116[0] = v39 != 0;
                  *(unsigned char *)(DerivedStorage + 269) = v40;
                  if (*(unsigned char *)(DerivedStorage + 249)) {
                    v42 = CFDictionaryGetValue(a3, @"GroupID");
                  }
                  else {
                    v42 = 0;
                  }
                  double v37 = 0.0;
                  v119 = v42;
                  v115[0] = v38;
                  if (*(unsigned char *)(DerivedStorage + 48))
                  {
                    CFTypeRef cf = 0;
                  }
                  else
                  {
                    v43 = CFDictionaryGetValue(a3, (const void *)*MEMORY[0x1E4F20328]);
                    if (v43) {
                      CFTypeRef cf = CFRetain(v43);
                    }
                    else {
                      CFTypeRef cf = 0;
                    }
                    if (!*(unsigned char *)(DerivedStorage + 48) && CFDictionaryGetInt64())
                    {
                      CFDictionaryGetDouble();
                      double v37 = v49;
                      v115[4] = 1;
LABEL_93:
                      uint64_t v44 = CMBaseObjectGetDerivedStorage();
                      CFTypeRef v45 = CFDictionaryGetValue(a3, @"SenderSession");
                      v116[4] = Int64;
                      if (v45
                        && ((v46 = v45, CFTypeID v47 = CFGetTypeID(v45), v47 != CFDictionaryGetTypeID())
                         || (v46 = CFDictionaryGetValue((CFDictionaryRef)v46, *(const void **)(v44 + 456))) != 0)
                        && (CFTypeID v48 = CFGetTypeID(v46), v48 == APSenderSessionGetTypeID()))
                      {
                        a2 = v24;
                        if (gLogCategory_APEndpoint <= 50
                          && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
                        {
                          LogPrintF();
                        }
                        CFTypeRef v36 = CFRetain(v46);
                      }
                      else
                      {
                        CFTypeRef v36 = 0;
                        a2 = v24;
                      }
                      goto LABEL_107;
                    }
                  }
                  v115[4] = 0;
                  goto LABEL_93;
                }
                FigCFDictionaryGetBooleanIfPresent();
                if (CFDictionaryContainsKey(a3, @"PerceivedClusterType"))
                {
                  int v33 = CFDictionaryGetInt64();
                  *(_DWORD *)(DerivedStorage + 252) = v33;
                  if (v33) {
                    goto LABEL_55;
                  }
                }
                else if (*(_DWORD *)(DerivedStorage + 252))
                {
                  goto LABEL_55;
                }
LABEL_307:
                APSLogErrorAt();
                CFTypeRef v36 = 0;
                v119 = 0;
                CFTypeRef cf = 0;
                int v20 = -16720;
                goto LABEL_244;
              }
            }
          }
          APSLogErrorAt();
          CFTypeRef v36 = 0;
          v119 = 0;
          CFTypeRef cf = 0;
          int v20 = -16726;
          goto LABEL_244;
        }
      }
      else
      {
        CFTypeRef v28 = *(const void **)(DerivedStorage + 544);
        *(void *)(DerivedStorage + 544) = v25;
        if (v25) {
          CFRetain(v25);
        }
        if (v28) {
          CFRelease(v28);
        }
      }
      uint64_t v27 = 0;
      *(void *)(DerivedStorage + 560) = UpTimeNanoseconds + 1000000000 * *(void *)(DerivedStorage + 80);
      goto LABEL_41;
    }
  }
  else if (!*(_DWORD *)(DerivedStorage + 152))
  {
    uint64_t v23 = *(const void **)(DerivedStorage + 160);
    *(void *)(DerivedStorage + 160) = 0;
    if (!v23) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (FigCFEqual()) {
    goto LABEL_30;
  }
  if (gLogCategory_APEndpoint <= 90 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  CFTypeRef v36 = 0;
  v119 = 0;
  CFTypeRef cf = 0;
  int v20 = -16726;
LABEL_244:
  if (a1) {
    CFRetain(a1);
  }
  v98 = *(const void **)(DerivedStorage + 448);
  if (v98) {
    CFRetain(v98);
  }
  LODWORD(v127) = v20;
  if (a3) {
    CFTypeRef v99 = CFRetain(a3);
  }
  else {
    CFTypeRef v99 = 0;
  }
  *(void *)&long long v125 = v99;
  v100 = *(const void **)(DerivedStorage + 224);
  if (v100) {
    CFRetain(v100);
  }
  v101 = *(const void **)(DerivedStorage + 240);
  if (v101) {
    CFRetain(v101);
  }
  uint64_t v102 = *(void *)(DerivedStorage + 40);
  CFAllocatorRef v103 = CFGetAllocator(a1);
  uint64_t v104 = APEndpointDescriptionGetCMBaseObject(v102);
  uint64_t v105 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v105) {
    uint64_t v106 = v105;
  }
  else {
    uint64_t v106 = 0;
  }
  v107 = *(void (**)(uint64_t, __CFString *, CFAllocatorRef, long long *))(v106 + 48);
  if (v107) {
    v107(v104, @"TransportDevice", v103, &v123);
  }
  *((void *)&v123 + 1) = APEndpointDescriptionCopyDebugString(*(void *)(DerivedStorage + 40));
  CFTypeRef v108 = *(CFTypeRef *)(DerivedStorage + 184);
  if (v108) {
    CFTypeRef v108 = CFRetain(v108);
  }
  *(void *)&long long v124 = v108;
  CFTypeRef v109 = *(CFTypeRef *)(DerivedStorage + 192);
  if (v109) {
    CFTypeRef v109 = CFRetain(v109);
  }
  *((void *)&v124 + 1) = v109;
  if (v119) {
    CFTypeRef v110 = CFRetain(v119);
  }
  else {
    CFTypeRef v110 = 0;
  }
  *((void *)&v125 + 1) = v110;
  long long v126 = v120;
  CFTypeRef v111 = *(CFTypeRef *)(DerivedStorage + 288);
  if (v111) {
    CFTypeRef v111 = CFRetain(v111);
  }
  *((void *)&v127 + 1) = v111;
  if (*(void *)(DerivedStorage + 24) && (void)v123) {
    APBrowserControllerRegisterEndpointActivating();
  }
  APSDispatchAsyncFHelper();
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  if (v36) {
    CFRelease(v36);
  }
  if (v128) {
    CFRelease(v128);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v10) {
    CFRelease(v10);
  }
  return 0;
}

uint64_t endpoint_Deactivate(void *a1, const __CFDictionary *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  if (a2)
  {
    CFArrayRef Value = CFDictionaryGetValue(a2, (const void *)*MEMORY[0x1E4F20538]);
    if (!*(unsigned char *)(DerivedStorage + 48) && CFDictionaryGetInt64()) {
      CFDictionaryGetDouble();
    }
  }
  else
  {
    CFArrayRef Value = 0;
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  if (*(unsigned char *)(DerivedStorage + 128))
  {
    APSLogErrorAt();
    uint64_t v6 = 4294950573;
  }
  else if (*(unsigned char *)(DerivedStorage + 249) && !FigCFEqual())
  {
    if (gLogCategory_APEndpoint <= 90 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    uint64_t v6 = 4294950570;
  }
  else
  {
    uint64_t v6 = *(void *)(DerivedStorage + 224);
    if (v6)
    {
      uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v7) {
        uint64_t v8 = v7;
      }
      else {
        uint64_t v8 = 0;
      }
      unsigned int v9 = *(void (**)(uint64_t))(v8 + 72);
      if (v9) {
        v9(v6);
      }
      uint64_t v6 = 0;
    }
  }
  CFRetain(a1);
  uint64_t v10 = *(const void **)(DerivedStorage + 448);
  if (v10) {
    CFRetain(v10);
  }
  if (Value) {
    CFRetain(Value);
  }
  uint64_t v11 = *(const void **)(DerivedStorage + 224);
  if (v11) {
    CFTypeRef v12 = CFRetain(v11);
  }
  else {
    CFTypeRef v12 = 0;
  }
  uint64_t v13 = *(const void **)(DerivedStorage + 168);
  if (v13) {
    CFRetain(v13);
  }
  uint64_t v14 = *(const void **)(DerivedStorage + 192);
  if (v14) {
    CFRetain(v14);
  }
  CFSetRef v15 = *(const __CFSet **)(DerivedStorage + 312);
  CFAllocatorRef v16 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  if (v15) {
    CFSetRef Copy = CFSetCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v15);
  }
  else {
    CFSetRef Copy = 0;
  }
  CFDictionaryRef v18 = *(const __CFDictionary **)(DerivedStorage + 336);
  if (v18) {
    CFDictionaryRef v19 = CFDictionaryCreateCopy(v16, v18);
  }
  else {
    CFDictionaryRef v19 = 0;
  }
  FigCFDictionaryCreateMutableCopy();
  int v20 = *(const void **)(DerivedStorage + 304);
  if (v20) {
    CFRetain(v20);
  }
  *(unsigned char *)(DerivedStorage + 488) = 0;
  uint64_t v21 = *(void *)(DerivedStorage + 272);
  if (v21)
  {
    if (gLogCategory_APEndpoint <= 50)
    {
      if (gLogCategory_APEndpoint != -1
        || (v22 = _LogCategory_Initialize(), uint64_t v21 = *(void *)(DerivedStorage + 272), v22))
      {
        LogPrintF();
        uint64_t v21 = *(void *)(DerivedStorage + 272);
      }
    }
    uint64_t v23 = *(void *)(DerivedStorage + 40);
    uint64_t v24 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v24) {
      uint64_t v25 = v24;
    }
    else {
      uint64_t v25 = 0;
    }
    CFAllocatorRef v26 = *(void (**)(uint64_t, uint64_t))(v25 + 24);
    if (v26) {
      v26(v23, v21);
    }
    uint64_t v27 = *(const void **)(DerivedStorage + 272);
    if (v27)
    {
      CFRelease(v27);
      *(void *)(DerivedStorage + 272) = 0;
    }
  }
  endpoint_initializeVolumeDelegateStorage();
  *(_DWORD *)(DerivedStorage + 492) = *(_DWORD *)(DerivedStorage + 156);
  endpoint_resetActivationState(DerivedStorage + 136);
  endpoint_removeAPEndpointManagerNotificationsListenerIfNeeded();
  endpoint_removeHDMILatencyNotificationListenerIfNeeded();
  endpoint_stopListeningToSenderSessionAndStreamsNotifications((uint64_t)a1, (uint64_t)v12);
  if (v19) {
    CFDictionaryApplyFunction(v19, (CFDictionaryApplierFunction)endpoint_unsubscribeRCS, a1);
  }
  if (Copy) {
    CFSetApplyFunction(Copy, (CFSetApplierFunction)endpoint_unsubscribePlaybackSession, a1);
  }
  endpoint_updateCurrentVolumeControlType();
  endpoint_updateIsVolumeAndMuteControlSupported();
  endpoint_updateVideoPlaybackIsActive(a1);
  endpoint_deregisterWithBrowserController(a1);
  APSDispatchAsyncFHelper();
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  return v6;
}

uint64_t endpoint_Dissociate(void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(_OWORD *)CFDictionaryRef theDict = 0u;
  long long v34 = 0u;
  long long v32 = 0u;
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  int v3 = *(unsigned __int8 *)(DerivedStorage + 128);
  *(unsigned char *)(DerivedStorage + 128) = 1;
  if (v3)
  {
    endpoint_resetActivationState(DerivedStorage + 136);
  }
  else
  {
    CFRetain(a1);
    uint64_t v4 = *(const void **)(DerivedStorage + 448);
    if (v4) {
      CFRetain(v4);
    }
    CFTypeRef v5 = *(CFTypeRef *)(DerivedStorage + 224);
    if (v5) {
      CFTypeRef v5 = CFRetain(v5);
    }
    uint64_t v31 = (uint64_t)v5;
    uint64_t v6 = *(const void **)(DerivedStorage + 168);
    if (v6) {
      CFRetain(v6);
    }
    CFTypeRef v7 = *(CFTypeRef *)(DerivedStorage + 192);
    if (v7) {
      CFTypeRef v7 = CFRetain(v7);
    }
    *((void *)&v32 + 1) = v7;
    CFSetRef v8 = *(const __CFSet **)(DerivedStorage + 312);
    unsigned int v9 = (CFAllocatorRef *)MEMORY[0x1E4F1CF80];
    if (v8) {
      theDict[0] = CFSetCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v8);
    }
    CFDictionaryRef v10 = *(const __CFDictionary **)(DerivedStorage + 336);
    if (v10) {
      theDict[1] = CFDictionaryCreateCopy(*v9, v10);
    }
    uint64_t v11 = *(void *)(DerivedStorage + 40);
    CFAllocatorRef v12 = CFGetAllocator(a1);
    uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(v11);
    uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v14) {
      uint64_t v15 = v14;
    }
    else {
      uint64_t v15 = 0;
    }
    CFAllocatorRef v16 = *(void (**)(uint64_t, __CFString *, CFAllocatorRef, long long *))(v15 + 48);
    if (v16) {
      v16(CMBaseObject, @"TransportDevice", v12, &v32);
    }
    CFTypeRef v17 = *(CFTypeRef *)(DerivedStorage + 296);
    if (v17) {
      CFTypeRef v17 = CFRetain(v17);
    }
    *(void *)&long long v34 = v17;
    CFTypeRef v18 = *(CFTypeRef *)(DerivedStorage + 304);
    if (v18) {
      CFTypeRef v18 = CFRetain(v18);
    }
    *((void *)&v34 + 1) = v18;
    endpoint_resetActivationState(DerivedStorage + 136);
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
    endpoint_removeAPEndpointManagerNotificationsListenerIfNeeded();
    endpoint_removeHDMILatencyNotificationListenerIfNeeded();
    endpoint_stopListeningToSenderSessionAndStreamsNotifications((uint64_t)a1, v31);
    CFDictionaryRef v19 = *(const void **)(CMBaseObjectGetDerivedStorage() + 40);
    if (v19)
    {
      CFTypeRef v20 = CFRetain(v19);
      if (v20)
      {
        uint64_t v21 = v20;
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterRemoveWeakListener();
        CFRelease(v21);
      }
    }
    if (theDict[1]) {
      CFDictionaryApplyFunction(theDict[1], (CFDictionaryApplierFunction)endpoint_unsubscribeRCS, a1);
    }
    if (theDict[0]) {
      CFSetApplyFunction(theDict[0], (CFSetApplierFunction)endpoint_unsubscribePlaybackSession, a1);
    }
    if (v31)
    {
      uint64_t v22 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v22) {
        uint64_t v23 = v22;
      }
      else {
        uint64_t v23 = 0;
      }
      uint64_t v24 = *(void (**)(uint64_t, void, void, void, void))(v23 + 96);
      if (v24) {
        v24(v31, 0, 0, 0, 0);
      }
      uint64_t v25 = APSenderSessionGetCMBaseObject(v31);
      if (v25)
      {
        uint64_t v26 = v25;
        uint64_t v27 = *(void *)(CMBaseObjectGetVTable() + 8);
        uint64_t v28 = v27 ? v27 : 0;
        CFTypeID v29 = *(void (**)(uint64_t))(v28 + 24);
        if (v29) {
          v29(v26);
        }
      }
      if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
    }
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
    endpoint_clearEndpointState();
    APSDispatchAsyncFHelper();
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  return 0;
}

uint64_t endpoint_SetDelegate(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    uint64_t v6 = endpoint_SetDelegateRouting(a1, 0);
    if (v6)
    {
      uint64_t v5 = v6;
    }
    else
    {
      uint64_t v5 = endpoint_SetDelegateRemoteControl(a1, 0);
      if (!v5) {
        return v5;
      }
    }
LABEL_10:
    APSLogErrorAt();
    return v5;
  }
  long long v3 = *(_OWORD *)(a2 + 16);
  v10[0] = *(_OWORD *)a2;
  v10[1] = v3;
  uint64_t v11 = *(void *)(a2 + 32);
  v8[1] = 0;
  v8[0] = *(void *)&v10[0];
  long long v9 = *(_OWORD *)(a2 + 48);
  uint64_t v4 = endpoint_SetDelegateRouting(a1, (uint64_t)v10);
  if (v4)
  {
    uint64_t v5 = v4;
    goto LABEL_10;
  }
  uint64_t v5 = endpoint_SetDelegateRemoteControl(a1, (uint64_t)v8);
  if (v5) {
    goto LABEL_10;
  }
  return v5;
}

uint64_t endpoint_SetDelegateRouting(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  if (*(unsigned char *)(DerivedStorage + 128))
  {
    APSLogErrorAt();
    a2 = 4294950573;
  }
  else
  {
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    uint64_t v4 = *(const void **)(DerivedStorage + 424);
    if (v4)
    {
      CFRelease(v4);
      *(void *)(DerivedStorage + 424) = 0;
    }
    uint64_t v5 = (_OWORD *)(DerivedStorage + 352);
    if (a2)
    {
      long long v6 = *(_OWORD *)a2;
      long long v7 = *(_OWORD *)(a2 + 16);
      *(void *)(DerivedStorage + 384) = *(void *)(a2 + 32);
      _OWORD *v5 = v6;
      *(_OWORD *)(DerivedStorage + 368) = v7;
      a2 = 0;
      *(void *)(DerivedStorage + 424) = FigCFWeakReferenceHolderCreateWithReferencedObject();
    }
    else
    {
      *(void *)(DerivedStorage + 384) = 0;
      _OWORD *v5 = 0u;
      *(_OWORD *)(DerivedStorage + 368) = 0u;
    }
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  return a2;
}

uint64_t endpoint_SetDelegateRemoteControl(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  if (*(unsigned char *)(DerivedStorage + 128))
  {
    APSLogErrorAt();
    a2 = 4294950573;
  }
  else
  {
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    uint64_t v4 = *(const void **)(DerivedStorage + 432);
    if (v4)
    {
      CFRelease(v4);
      *(void *)(DerivedStorage + 432) = 0;
    }
    uint64_t v5 = (_OWORD *)(DerivedStorage + 392);
    if (a2)
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      _OWORD *v5 = *(_OWORD *)a2;
      *(_OWORD *)(DerivedStorage + 408) = v6;
      a2 = 0;
      *(void *)(DerivedStorage + 432) = FigCFWeakReferenceHolderCreateWithReferencedObject();
    }
    else
    {
      _OWORD *v5 = 0u;
      *(_OWORD *)(DerivedStorage + 408) = 0u;
    }
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  return a2;
}

uint64_t endpoint_CreatePlaybackSession(uint64_t a1, void **a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  uint64_t v4 = CMBaseObjectGetDerivedStorage();
  value = 0;
  if (!*(void *)(v4 + 224))
  {
    APSLogErrorAt();
    uint64_t v27 = 4294949691;
    goto LABEL_47;
  }
  uint64_t v5 = v4;
  CFSetRef v6 = *(const __CFSet **)(v4 + 312);
  if (!v6)
  {
    APSLogErrorAt();
    uint64_t v27 = 4294949690;
    goto LABEL_47;
  }
  int Count = CFSetGetCount(v6);
  CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFStringRef v9 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, @"%@-%d", *(void *)(v5 + 448), (Count + 1));
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v8, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!Mutable)
  {
    APSLogErrorAt();
    uint64_t v27 = 4294950575;
    if (!v9) {
      goto LABEL_47;
    }
    goto LABEL_46;
  }
  uint64_t v11 = Mutable;
  CMBaseObjectGetDerivedStorage();
  APSVolumeConvertSliderValueToDB();
  FigCFDictionarySetFloat();
  APSEventRecorderGetEventTime();
  CFDictionarySetDouble();
  CFAllocatorRef v12 = *(const void **)(v5 + 216);
  if (v12) {
    CFDictionarySetValue(v11, @"NetworkClock", v12);
  }
  if (!APSGetFBOPropertyInt64())
  {
    if (APSGetFBOPropertyInt64())
    {
      CFTypeRef v17 = *(const void **)(v5 + 192);
      if (v17) {
        CFDictionarySetValue(v11, @"MetadataSource", v17);
      }
      uint64_t v18 = APEndpointPlaybackSessionAirPlayCreate((uint64_t)v9, *(const void **)(v5 + 224), *(const void **)(v5 + 40), v11, &value);
      if (v18)
      {
        uint64_t v27 = v18;
        goto LABEL_59;
      }
      if (gLogCategory_APEndpoint > 50 || gLogCategory_APEndpoint == -1 && !_LogCategory_Initialize()) {
        goto LABEL_38;
      }
    }
    else
    {
      uint64_t v23 = APEndpointPlaybackSessionMCCreate((uint64_t)v9, *(const void **)(v5 + 224), *(const void **)(v5 + 40), *(const void **)(v5 + 232), v11, &value);
      if (v23)
      {
        uint64_t v27 = v23;
        goto LABEL_59;
      }
      if (gLogCategory_APEndpoint > 50 || gLogCategory_APEndpoint == -1 && !_LogCategory_Initialize()) {
        goto LABEL_38;
      }
    }
    goto LABEL_28;
  }
  uint64_t v13 = *(const void **)(v5 + 192);
  if (v13) {
    CFDictionarySetValue(v11, @"MetadataSource", v13);
  }
  endpoint_getBooleanFromExternalPlaybackCapabilitiesIfPresent();
  uint64_t v14 = *(void *)(v5 + 40);
  uint64_t v15 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v15) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = 0;
  }
  CFDictionaryRef v19 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 16);
  if (v19) {
    BOOL v20 = v19(v14, 35) != 0;
  }
  else {
    BOOL v20 = 0;
  }
  if (v20) {
    uint64_t v21 = (const void **)MEMORY[0x1E4F1CFD0];
  }
  else {
    uint64_t v21 = (const void **)MEMORY[0x1E4F1CFC8];
  }
  CFDictionarySetValue(v11, @"SupportsTLS_PSK", *v21);
  uint64_t v22 = APEndpointPlaybackSessionRemoteControlCreate((uint64_t)v9, *(const void **)(v5 + 224), *(const void **)(v5 + 456), v11, &value);
  if (v22)
  {
    uint64_t v27 = v22;
    goto LABEL_59;
  }
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
LABEL_28:
  }
    LogPrintF();
LABEL_38:
  CFSetSetValue(*(CFMutableSetRef *)(v5 + 312), value);
  CMNotificationCenterGetDefaultLocalCenter();
  uint64_t v24 = FigNotificationCenterAddWeakListener();
  if (v24)
  {
    uint64_t v27 = v24;
  }
  else
  {
    CMNotificationCenterGetDefaultLocalCenter();
    uint64_t v25 = FigNotificationCenterAddWeakListener();
    if (v25)
    {
      uint64_t v27 = v25;
    }
    else
    {
      CMNotificationCenterGetDefaultLocalCenter();
      uint64_t v26 = FigNotificationCenterAddWeakListener();
      if (v26)
      {
        uint64_t v27 = v26;
      }
      else
      {
        CMNotificationCenterGetDefaultLocalCenter();
        uint64_t v27 = FigNotificationCenterAddWeakListener();
        if (!v27)
        {
          *a2 = value;
          value = 0;
          goto LABEL_43;
        }
      }
    }
  }
LABEL_59:
  APSLogErrorAt();
LABEL_43:
  CFRelease(v11);
  if (value) {
    CFRelease(value);
  }
  if (v9) {
LABEL_46:
  }
    CFRelease(v9);
LABEL_47:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  return v27;
}

uint64_t endpoint_UpdateFeatures(const void *a1, uint64_t a2, const void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  if (*(_DWORD *)(DerivedStorage + 152))
  {
    if (a1) {
      CFRetain(a1);
    }
    if (a3) {
      CFRetain(a3);
    }
    APSDispatchAsyncFHelper();
    uint64_t v6 = 0;
  }
  else
  {
    APSLogErrorAt();
    uint64_t v6 = 4294949690;
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  return v6;
}

uint64_t endpoint_readActivationOptions(CFDictionaryRef theDict, uint64_t a2)
{
  if (*(void *)(a2 + 104)) {
    goto LABEL_2;
  }
  CFAllocatorRef v8 = (const void *)*MEMORY[0x1E4F20340];
  if (!CFDictionaryContainsKey(theDict, (const void *)*MEMORY[0x1E4F20340])) {
    goto LABEL_2;
  }
  CFArrayRef Value = CFDictionaryGetValue(theDict, v8);
  if (!Value)
  {
    CFAllocatorRef v12 = *(const void **)(a2 + 104);
    *(void *)(a2 + 104) = 0;
    if (!v12) {
      goto LABEL_2;
    }
LABEL_16:
    CFRelease(v12);
    goto LABEL_2;
  }
  CFDictionaryRef v10 = Value;
  CFTypeID v11 = CFGetTypeID(Value);
  if (v11 != CFStringGetTypeID())
  {
    APSLogErrorAt();
    return 4294950576;
  }
  CFAllocatorRef v12 = *(const void **)(a2 + 104);
  *(void *)(a2 + 104) = v10;
  CFRetain(v10);
  if (v12) {
    goto LABEL_16;
  }
LABEL_2:
  if (CFDictionaryContainsKey(theDict, (const void *)*MEMORY[0x1E4F20300])) {
    *(_DWORD *)(a2 + 40) = CFDictionaryGetInt64();
  }
  uint64_t v4 = (const void *)*MEMORY[0x1E4F20350];
  if (CFDictionaryContainsKey(theDict, (const void *)*MEMORY[0x1E4F20350]))
  {
    uint64_t v5 = *(const void **)(a2 + 64);
    uint64_t v6 = CFDictionaryGetValue(theDict, v4);
    *(void *)(a2 + 64) = v6;
    if (v6) {
      CFRetain(v6);
    }
    if (v5) {
      CFRelease(v5);
    }
  }
  FigCFDictionaryGetBooleanIfPresent();
  return 0;
}

uint64_t endpoint_shouldOnlyBeActivatedAsPartOfCluster()
{
  if (*(unsigned char *)(CMBaseObjectGetDerivedStorage() + 48)) {
    return 0;
  }
  uint64_t result = APSIsEndpointClusteringEnabled();
  if (result) {
    return APSIsFBOPropertyNonNull() != 0;
  }
  return result;
}

uint64_t endpoint_ensureSharedContextCreated(uint64_t a1, char a2, const __CFDictionary *a3, int a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    CFStringRef v9 = Mutable;
    if (*(unsigned char *)(CMBaseObjectGetDerivedStorage() + 48))
    {
      CFDictionaryRef v10 = (const void **)MEMORY[0x1E4F4A150];
    }
    else
    {
      uint64_t Int64 = APSSettingsGetInt64();
      if (FigCFEqual()) {
        BOOL v12 = APSSettingsGetInt64() == 0;
      }
      else {
        BOOL v12 = FigCFEqual() == 0;
      }
      int v13 = !v12;
      int v20 = v13;
      if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      uint64_t v14 = APSGetFBOPropertyInt64();
      if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      int v15 = v20 ^ 1;
      if (!v14) {
        int v15 = 1;
      }
      if (Int64) {
        int v15 = 1;
      }
      if (v15) {
        CFDictionaryRef v10 = (const void **)MEMORY[0x1E4F4A148];
      }
      else {
        CFDictionaryRef v10 = (const void **)MEMORY[0x1E4F4A158];
      }
    }
    CFDictionarySetValue(v9, @"PreferredNetworkClockType", *v10);
    uint64_t v16 = (const void *)*MEMORY[0x1E4F1CFD0];
    CFDictionarySetValue(v9, @"AllowP2PForNTP", (const void *)*MEMORY[0x1E4F1CFD0]);
    if (a4) {
      CFTypeRef v17 = v16;
    }
    else {
      CFTypeRef v17 = (const void *)*MEMORY[0x1E4F1CFC8];
    }
    CFDictionarySetValue(v9, @"IgnoreClientPIDForMediaRemote", v17);
    uint64_t SharedContext = APEndpointCopyFromActivationOptionsOrCreateSharedContext(a3, a2, (uint64_t)v9, DerivedStorage + 216, (void *)(DerivedStorage + 208), 0);
    if (SharedContext) {
      APSLogErrorAt();
    }
    CFRelease(v9);
  }
  else
  {
    APSLogErrorAt();
    return 4294950575;
  }
  return SharedContext;
}

uint64_t endpoint_createMetadataSourceAndCommandSinkIfNeeded(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v6 = 0;
  if (!a2 && a3)
  {
    uint64_t v7 = DerivedStorage;
    uint64_t v8 = CMBaseObjectGetDerivedStorage();
    CFTypeRef cf = 0;
    if (APSMultiPrimariesEnabled())
    {
      uint64_t v9 = *(void *)(v8 + 200);
      if (!v9)
      {
        if (gLogCategory_APEndpoint <= 90 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
          LogPrintF();
        }
        uint64_t v6 = 4294949690;
        goto LABEL_37;
      }
      uint64_t v10 = *MEMORY[0x1E4F1CF80];
      uint64_t v11 = APMediaRemoteCommandSinkCreateWithRoutingContextUUID(*MEMORY[0x1E4F1CF80], v9, &cf);
      if (v11)
      {
        uint64_t v6 = v11;
LABEL_29:
        APSLogErrorAt();
LABEL_37:
        if (cf) {
          CFRelease(cf);
        }
LABEL_44:
        APSLogErrorAt();
        return v6;
      }
    }
    else
    {
      uint64_t v10 = *MEMORY[0x1E4F1CF80];
      uint64_t v12 = APMediaRemoteCommandSinkCreateWithNowPlayingAppPID(*MEMORY[0x1E4F1CF80], *(unsigned int *)(v8 + 176), &cf);
      if (v12)
      {
        uint64_t v6 = v12;
        goto LABEL_29;
      }
    }
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    *(void *)(v7 + 184) = cf;
    if (a3)
    {
      return 0;
    }
    else
    {
      uint64_t v13 = CMBaseObjectGetDerivedStorage();
      CFTypeRef cf = 0;
      if (APSMultiPrimariesEnabled())
      {
        uint64_t v14 = *(void *)(v13 + 200);
        if (!v14)
        {
          if (gLogCategory_APEndpoint <= 90
            && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          uint64_t v6 = 4294949690;
          goto LABEL_42;
        }
        uint64_t v15 = APMetadataSourceCreateWithRoutingContextUUID(v10, v14, &cf);
        if (v15)
        {
          uint64_t v6 = v15;
LABEL_34:
          APSLogErrorAt();
LABEL_42:
          if (cf) {
            CFRelease(cf);
          }
          goto LABEL_44;
        }
      }
      else
      {
        uint64_t v16 = APMetadataSourceCreateWithNowPlayingAppPID(v10, *(unsigned int *)(v13 + 176), &cf);
        if (v16)
        {
          uint64_t v6 = v16;
          goto LABEL_34;
        }
      }
      if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      uint64_t v6 = 0;
      *(void *)(v7 + 192) = cf;
    }
  }
  return v6;
}

void endpoint_postIsInUseDidChangeNotification(uint64_t a1, int a2)
{
  int v3 = *(_DWORD *)(CMBaseObjectGetDerivedStorage() + 152);
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    uint64_t v5 = Mutable;
    uint64_t v6 = (const void *)*MEMORY[0x1E4F1CFD0];
    uint64_t v7 = (const void *)*MEMORY[0x1E4F1CFC8];
    if (v3) {
      uint64_t v8 = (const void *)*MEMORY[0x1E4F1CFD0];
    }
    else {
      uint64_t v8 = (const void *)*MEMORY[0x1E4F1CFC8];
    }
    CFDictionarySetValue(Mutable, @"IsInUse", v8);
    if (a2) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = v7;
    }
    CFDictionarySetValue(v5, @"WasAutoconnected", v9);
    if (gLogCategory_APEndpoint <= 30 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
    CFRelease(v5);
  }
  else
  {
    APSLogErrorAt();
  }
}

void endpoint_activateInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFMutableDictionaryRef v134 = 0;
  unint64_t v135 = 0;
  int v3 = *(unsigned __int8 *)(a1 + 32);
  if (*(unsigned char *)(DerivedStorage + 128))
  {
    APSLogErrorAt();
    int v123 = 0;
    uint64_t v55 = 0;
    uint64_t v33 = 0;
    unsigned int v7 = -16723;
    goto LABEL_160;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (*(void *)(a1 + 96))
  {
    if (CFDictionaryGetInt64()) {
      BOOL v5 = 1;
    }
    else {
      BOOL v5 = CFDictionaryGetInt64() != 0;
    }
    int v123 = v5;
  }
  else
  {
    int v123 = 0;
  }
  int v6 = *(_DWORD *)(a1 + 128);
  if (v6 == -16727)
  {
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
    if (*(void *)(a1 + 48) == *(void *)(DerivedStorage + 136) && *(_DWORD *)(DerivedStorage + 152) == 2)
    {
      unint64_t v135 = *(void *)(DerivedStorage + 144);
      unsigned int v7 = -16727;
    }
    else
    {
      unsigned int v7 = -17604;
    }
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
    goto LABEL_159;
  }
  if (v6)
  {
    APSLogErrorAt();
    uint64_t v55 = 0;
    uint64_t v33 = 0;
    unsigned int v7 = *(_DWORD *)(a1 + 128);
    goto LABEL_160;
  }
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  uint64_t v8 = *(const void **)(a1 + 80);
  if (v8)
  {
    uint64_t v9 = *(void *)(a1 + 40);
    uint64_t v10 = CMBaseObjectGetDerivedStorage();
    if (!*(void *)(v10 + 584))
    {
      if (!v9)
      {
        APSLogErrorAt();
        unsigned int v7 = -6762;
        goto LABEL_158;
      }
      uint64_t v11 = v10;
      uint64_t v12 = (uint64_t *)(v10 + 584);
      unsigned int v13 = APMediaRemoteCommandReceiverCreate(*MEMORY[0x1E4F1CF80], v8, (int **)(v10 + 584));
      if (v13)
      {
        unsigned int v7 = v13;
      }
      else
      {
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterAddWeakListener();
        LOBYTE(cf[0]) = APEndpointDescriptionIsSourceVersionOlderThan(*(void *)(v11 + 40), 0x36193Eu);
        if (IsAppleInternalBuild()) {
          APSSettingsGetBooleanIfPresent();
        }
        if (gLogCategory_APEndpoint <= 30 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
          LogPrintF();
        }
        if (!LOBYTE(cf[0])) {
          goto LABEL_33;
        }
        unsigned int v14 = APMediaRemoteCommandReceiverAddClient();
        if (v14)
        {
          unsigned int v7 = v14;
        }
        else
        {
          APMediaRemoteCommandReceiverGetID(*v12);
          unsigned int v15 = APSSetFBOPropertyInt64();
          if (v15)
          {
            unsigned int v7 = v15;
          }
          else
          {
            unsigned int v16 = APSSetFBOPropertyInt64();
            if (!v16)
            {
LABEL_33:
              if (gLogCategory_APEndpoint <= 40
                && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              goto LABEL_37;
            }
            unsigned int v7 = v16;
          }
        }
      }
      APSLogErrorAt();
      goto LABEL_158;
    }
  }
LABEL_37:
  if (!*(unsigned char *)(DerivedStorage + 48))
  {
    uint64_t v34 = *(void *)(a1 + 104);
    uint64_t CMBaseObject = APSenderSessionGetCMBaseObject(*(void *)(a1 + 40));
    uint64_t v36 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v36) {
      uint64_t v37 = v36;
    }
    else {
      uint64_t v37 = 0;
    }
    unsigned int v41 = *(void (**)(uint64_t, __CFString *, uint64_t))(v37 + 56);
    if (v41) {
      v41(CMBaseObject, @"GroupID", v34);
    }
    uint64_t v42 = *(void *)(a1 + 40);
    if ((*(void *)(a1 + 16) & 0xFLL) != 0) {
      v43 = (void *)MEMORY[0x1E4F1CFD0];
    }
    else {
      v43 = (void *)MEMORY[0x1E4F1CFC8];
    }
    uint64_t v44 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v44) {
      uint64_t v45 = v44;
    }
    else {
      uint64_t v45 = 0;
    }
    uint64_t v56 = *(void (**)(uint64_t, __CFString *, void))(v45 + 56);
    if (v56) {
      v56(v42, @"IsMediaSession", *v43);
    }
  }
  if (!v3)
  {
    uint64_t v38 = *(void *)(a1 + 40);
    uint64_t v39 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v39) {
      uint64_t v40 = v39;
    }
    else {
      uint64_t v40 = 0;
    }
    v46 = *(uint64_t (**)(uint64_t))(v40 + 32);
    if (v46)
    {
      unsigned int v47 = v46(v38);
      if (!v47)
      {
LABEL_118:
        CFTypeID v48 = *(const void **)(a1 + 88);
        if (v48)
        {
          double v49 = *(void **)a1;
          uint64_t v50 = *(const void **)(a1 + 40);
          uint64_t v51 = CMBaseObjectGetDerivedStorage();
          int v52 = APSGetFBOPropertyInt64();
          if (!*(void *)(v51 + 600))
          {
            if (v52)
            {
              unsigned int v53 = APMetadataSenderCreate(*MEMORY[0x1E4F1CF80], v50, v52, *(NSObject **)(v51 + 576), v48, (uint64_t)v49, (uint64_t)endpoint_isAudioTimelineEstablished, (uint64_t)endpoint_getCurrentRTPTime, (uint64_t *)(v51 + 600));
              if (v53)
              {
                unsigned int v7 = v53;
                APSLogErrorAt();
                goto LABEL_158;
              }
              APMetadataSourceStart((uint64_t)v48);
              if (gLogCategory_APEndpoint <= 50
                && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
            }
          }
        }
        MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
        if (!*(unsigned char *)(DerivedStorage + 250) && endpoint_shouldOnlyBeActivatedAsPartOfCluster())
        {
          unsigned int v7 = -72277;
LABEL_157:
          MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
          goto LABEL_158;
        }
        if (v3)
        {
          if (*(void *)(a1 + 48) != *(void *)(DerivedStorage + 136) || *(_DWORD *)(DerivedStorage + 152) != 1)
          {
            unsigned int v7 = -17604;
            goto LABEL_157;
          }
          unsigned int v7 = *(_DWORD *)(DerivedStorage + 156);
          if (!v7)
          {
            int shouldUseInactivityTimer = endpoint_shouldUseInactivityTimer();
            *(unsigned char *)(DerivedStorage + 270) = shouldUseInactivityTimer;
            if (gLogCategory_APEndpoint <= 50)
            {
              if (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()) {
                LogPrintF();
              }
              int shouldUseInactivityTimer = *(unsigned __int8 *)(DerivedStorage + 270);
            }
            if (shouldUseInactivityTimer) {
              endpoint_startInactivityTimer(*(void **)a1);
            }
            if (v4 == 16) {
              goto LABEL_317;
            }
            LOBYTE(cf[0]) = 0;
            *(_DWORD *)(DerivedStorage + 536) = endpointdelegate_getInitialVolumeDBAndIsMuted(*(void *)a1, (float *)(DerivedStorage + 540), (float *)(DerivedStorage + 528), (BOOL *)cf);
            APSVolumeConvertDBToSliderValue();
            *(_DWORD *)(DerivedStorage + 516) = v113;
            char v114 = (char)cf[0];
            *(unsigned char *)(DerivedStorage + 520) = cf[0];
            *(unsigned char *)(DerivedStorage + 532) = v114;
            if (gLogCategory_APEndpoint <= 50
              && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
            {
              APSVolumeConvertDBToSliderValue();
              LogPrintF();
            }
            goto LABEL_148;
          }
        }
        else
        {
          unsigned int v7 = *(_DWORD *)(DerivedStorage + 156);
          if (!v7)
          {
            if (v4 == 16)
            {
LABEL_317:
              unint64_t v59 = 16;
              goto LABEL_324;
            }
LABEL_148:
            endpoint_updateScreenRelatedConfiguration(*(const void **)a1, *(const __CFDictionary **)(a1 + 96));
            *(unsigned char *)(DerivedStorage + 280) = endpoint_isMediaPresentationModeAvailable();
            unsigned int v58 = endpoint_setupStreams(*(const void **)a1, *(void *)(a1 + 16), *(void *)(a1 + 24), *(const __CFDictionary **)(a1 + 96), (uint64_t *)&v135);
            if (v58)
            {
              unsigned int v7 = v58;
              APSLogErrorAt();
              goto LABEL_157;
            }
            unint64_t v59 = v135;
            if (*(void *)(a1 + 16) && !v135)
            {
              if (gLogCategory_APEndpoint <= 90
                && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              unsigned int v7 = -16720;
              goto LABEL_157;
            }
            if ((v135 & 4) == 0 || !*(void *)(DerivedStorage + 328))
            {
LABEL_325:
              *(void *)(DerivedStorage + 144) = v59;
              uint64_t v115 = *(void *)(a1 + 24);
              unint64_t v116 = v59 & ~v115;
              unint64_t v117 = v115 & ~v59;
              if (v3)
              {
                APSEventRecorderRecordEvent();
                endpoint_postPerformanceReport();
                *(_DWORD *)(DerivedStorage + 152) = 2;
              }
              if (*(unsigned char *)(DerivedStorage + 269) && v116 & 0xFFFFFFFFFFFFFFDFLL | v117 & 0xFFFFFFFFFFFFFFDFLL) {
                endpoint_postInterruptingSessionStateDidChangeNotification(*(void *)a1, (v116 & 0xFFFFFFFFFFFFFFDFLL) != 0);
              }
              endpoint_updateCurrentVolumeControlType();
              endpoint_updateIsVolumeAndMuteControlSupported();
              endpoint_updateVideoPlaybackIsActive(*(const void **)a1);
              *(_DWORD *)(DerivedStorage + 492) = 0;
              MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
              uint64_t v33 = v117;
              if (v3)
              {
                uint64_t v55 = v116;
                if (*(void *)(DerivedStorage + 24) && *(void *)(a1 + 64)) {
                  APBrowserControllerRegisterEndpointActivated();
                }
                if (introspector_getCollectionOfActiveEndpoints_once != -1) {
                  dispatch_once(&introspector_getCollectionOfActiveEndpoints_once, &__block_literal_global_37);
                }
                if (introspector_getCollectionOfActiveEndpoints_coll)
                {
                  v118 = *(NSObject **)introspector_getCollectionOfActiveEndpoints_coll;
                  block[0] = MEMORY[0x1E4F143A8];
                  block[1] = 0x40000000;
                  block[2] = __endpoint_activateInternal_block_invoke;
                  block[3] = &__block_descriptor_tmp_371;
                  block[4] = introspector_getCollectionOfActiveEndpoints_coll;
                  block[5] = a1;
                  dispatch_sync(v118, block);
                }
                unsigned int v7 = 0;
                goto LABEL_160;
              }
              unsigned int v7 = 0;
              BOOL v54 = 0;
              uint64_t v55 = v116;
              goto LABEL_223;
            }
            if (gLogCategory_APEndpoint <= 50
              && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            unint64_t v59 = v135 & 0xFFFFFFFFFFFFFFFBLL;
LABEL_324:
            unint64_t v135 = v59;
            goto LABEL_325;
          }
        }
        if (gLogCategory_APEndpoint <= 90 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
          LogPrintF();
        }
        goto LABEL_157;
      }
      unsigned int v7 = v47;
    }
    else
    {
      unsigned int v7 = -12782;
    }
    APSLogErrorAt();
    BOOL v54 = 0;
    uint64_t v33 = 0;
    uint64_t v55 = 0;
    goto LABEL_221;
  }
  while (1)
  {
    uint64_t v17 = *(void *)(a1 + 40);
    uint64_t v18 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v18) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    int v20 = *(uint64_t (**)(uint64_t))(v19 + 24);
    if (!v20)
    {
      unsigned int v7 = -12782;
      goto LABEL_158;
    }
    int v21 = v20(v17);
    if (v21 <= 200400) {
      break;
    }
    if (v21 == 200503)
    {
      unsigned int v7 = -17609;
      goto LABEL_158;
    }
    if (v21 != 200470 && v21 != 200401) {
      goto LABEL_104;
    }
    if (v123)
    {
      APSLogErrorAt();
      uint64_t v33 = 0;
      int v123 = 1;
      unsigned int v7 = -17600;
      goto LABEL_355;
    }
    uint64_t v22 = *(const void **)a1;
    uint64_t v23 = *(void *)(a1 + 48);
    uint64_t v24 = CMBaseObjectGetDerivedStorage();
    MEMORY[0x1D25EB370](*(void *)(v24 + 120));
    if (*(void *)(v24 + 136) != v23 || *(_DWORD *)(v24 + 152) != 1)
    {
      if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      unsigned int v7 = -17604;
      goto LABEL_62;
    }
    if (!*(void *)(v24 + 360))
    {
      unsigned int v7 = 200401;
      if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      goto LABEL_62;
    }
    uint64_t v25 = *(void *)(v24 + 424);
    if (v25 && (uint64_t v25 = FigCFWeakReferenceHolderCopyReferencedObject(), *(void *)(v24 + 424)) && !v25)
    {
      if (gLogCategory_APEndpoint <= 90 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      unsigned int v7 = 0;
LABEL_62:
      MEMORY[0x1D25EB390](*(void *)(v24 + 120));
      if (v7) {
        goto LABEL_96;
      }
    }
    else
    {
      uint64_t v119 = v25;
      v139[0] = 0;
      uint64_t v26 = malloc_type_calloc(1uLL, 0x20uLL, 0x1020040B07198D1uLL);
      *(_OWORD *)uint64_t v26 = *(_OWORD *)(v24 + 136);
      v26[4] = *(_DWORD *)(v24 + 152);
      uint64_t v27 = *(NSObject **)(v24 + 256);
      if (v27)
      {
        if (gLogCategory_APEndpoint > 90) {
          goto LABEL_75;
        }
        if (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()) {
          LogPrintF();
        }
        uint64_t v27 = *(NSObject **)(v24 + 256);
        if (v27)
        {
LABEL_75:
          dispatch_release(v27);
          *(void *)(v24 + 256) = 0;
        }
      }
      uint64_t v28 = dispatch_semaphore_create(0);
      *(void *)(v24 + 256) = v28;
      *((void *)v26 + 3) = v28;
      dispatch_retain(v28);
      object = *(NSObject **)(v24 + 256);
      dispatch_retain(object);
      endpoint_copyAuthorizationType((uint64_t)v22, v139);
      CFTypeRef v29 = CFRetain(v22);
      uint64_t v30 = *(const void **)(v24 + 360);
      cf[0] = v29;
      cf[1] = v30;
      *((const void **)&v125 + 1) = v139[0];
      *(void *)&long long v126 = v23;
      *(void *)&long long v125 = v119;
      *((void *)&v126 + 1) = endpoint_authHandlingComplete;
      *(void *)&long long v127 = v26;
      *(_DWORD *)(v24 + 264) = 0;
      CFRetain(v22);
      if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      APSDispatchAsyncFHelper();
      MEMORY[0x1D25EB390](*(void *)(v24 + 120));
      if (object)
      {
        dispatch_time_t v31 = dispatch_time(0, 30000000000);
        if (dispatch_semaphore_wait(object, v31))
        {
          if (gLogCategory_APEndpoint <= 90
            && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          unsigned int v7 = -16728;
        }
        else
        {
          MEMORY[0x1D25EB370](*(void *)(v24 + 120));
          if (*(void *)(v24 + 136) == v23 && *(_DWORD *)(v24 + 152) == 1)
          {
            unsigned int v7 = *(_DWORD *)(v24 + 264);
            long long v32 = *(NSObject **)(v24 + 256);
            if (v32)
            {
              dispatch_release(v32);
              *(void *)(v24 + 256) = 0;
            }
          }
          else
          {
            unsigned int v7 = -17604;
          }
          MEMORY[0x1D25EB390](*(void *)(v24 + 120));
        }
        dispatch_release(object);
        if (v7)
        {
LABEL_96:
          APSLogErrorAt();
          int v123 = 0;
          uint64_t v33 = 0;
LABEL_355:
          uint64_t v55 = 0;
          goto LABEL_160;
        }
      }
    }
  }
  unsigned int v7 = -17608;
  if (v21 != -71164 && v21 != -71145)
  {
    if (!v21) {
      goto LABEL_118;
    }
LABEL_104:
    unsigned int v7 = v21;
  }
LABEL_158:
  APSLogErrorAt();
LABEL_159:
  uint64_t v55 = 0;
  uint64_t v33 = 0;
LABEL_160:
  BOOL v54 = v3 != 0;
  if (v3 && v7 != -16727)
  {
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
    uint64_t v60 = *(void *)(a1 + 40);
    uint64_t v61 = *(void *)(a1 + 136);
    uint64_t v62 = CMBaseObjectGetDerivedStorage();
    cf[0] = 0;
    v138[1] = 0;
    v139[0] = 0;
    CFTypeRef v137 = 0;
    v138[0] = 0;
    CFTypeRef v136 = 0;
    if (!*(void *)(v62 + 304)) {
      goto LABEL_210;
    }
    if (CFDictionaryContainsKey(*(CFDictionaryRef *)(v62 + 296), @"activationMs"))
    {
      if (gLogCategory_APEndpoint <= 90 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      goto LABEL_210;
    }
    if (v60)
    {
      uint64_t v63 = *MEMORY[0x1E4F1CF80];
      uint64_t v64 = APSenderSessionGetCMBaseObject(v60);
      uint64_t v65 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v65) {
        uint64_t v66 = v65;
      }
      else {
        uint64_t v66 = 0;
      }
      char v67 = *(void (**)(uint64_t, __CFString *, uint64_t, const void **))(v66 + 48);
      if (v67)
      {
        v67(v64, @"InitialRTCStats", v63, v139);
        if (v139[0])
        {
          if (CFDictionaryMergeDictionary())
          {
            APSLogErrorAt();
          }
          else
          {
            if (!v61) {
              goto LABEL_210;
            }
LABEL_176:
            uint64_t v68 = APSenderSessionGetCMBaseObject(v60);
            uint64_t v69 = *(void *)(CMBaseObjectGetVTable() + 8);
            if (v69) {
              uint64_t v70 = v69;
            }
            else {
              uint64_t v70 = 0;
            }
            int v71 = *(void (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v70 + 48);
            if (v71) {
              v71(v68, @"EventRecorder", v63, cf);
            }
            if (cf[0]) {
              MEMORY[0x1D25E8260](v61);
            }
            uint64_t v72 = APSenderSessionGetCMBaseObject(v60);
            uint64_t v73 = *(void *)(CMBaseObjectGetVTable() + 8);
            if (v73) {
              uint64_t v74 = v73;
            }
            else {
              uint64_t v74 = 0;
            }
            v75 = *(void (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v74 + 48);
            if (v75) {
              v75(v72, @"ActivationMsgsRoundTripTimeMs", v63, v138);
            }
            uint64_t v76 = APSenderSessionGetCMBaseObject(v60);
            uint64_t v77 = *(void *)(CMBaseObjectGetVTable() + 8);
            if (v77) {
              uint64_t v78 = v77;
            }
            else {
              uint64_t v78 = 0;
            }
            uint64_t v79 = *(void (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v78 + 48);
            if (v79) {
              v79(v76, @"ActivationMsgsProcessingTimeMs", v63, &v137);
            }
            uint64_t v80 = APSenderSessionGetCMBaseObject(v60);
            uint64_t v81 = *(void *)(CMBaseObjectGetVTable() + 8);
            if (v81) {
              uint64_t v82 = v81;
            }
            else {
              uint64_t v82 = 0;
            }
            uint64_t v83 = *(void (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v82 + 48);
            uint64_t v120 = DerivedStorage;
            dispatch_object_t objecta = (dispatch_object_t)v55;
            if (v83)
            {
              v83(v80, @"ActivationConnectionTimeMs", v63, &v136);
              if (v138[0])
              {
                if (v137 && v136)
                {
                  FigCFNumberGetUInt64();
                  FigCFNumberGetUInt64();
                  FigCFNumberGetUInt64();
                }
              }
            }
LABEL_201:
            if (v7)
            {
              APSEventRecorderGetTimeSinceEventInMilliSecond();
              CFDictionarySetInt64();
            }
            else
            {
              APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursive();
            }
            CFDictionarySetInt64();
            if (gLogCategory_APEndpoint <= 50
              && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            uint64_t DerivedStorage = v120;
            uint64_t v55 = (uint64_t)objecta;
            if (!APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursiveEx()) {
              CFDictionarySetInt64();
            }
          }
          goto LABEL_210;
        }
      }
      if (v61) {
        goto LABEL_176;
      }
    }
    else
    {
      if (v61)
      {
        uint64_t v120 = DerivedStorage;
        dispatch_object_t objecta = (dispatch_object_t)v55;
        goto LABEL_201;
      }
LABEL_210:
      if (v139[0]) {
        CFRelease(v139[0]);
      }
    }
    if (cf[0]) {
      CFRelease(cf[0]);
    }
    if (v138[0]) {
      CFRelease(v138[0]);
    }
    if (v137) {
      CFRelease(v137);
    }
    if (v136) {
      CFRelease(v136);
    }
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
    BOOL v54 = 1;
  }
LABEL_221:
  if (v7 != -16727 && v7)
  {
    long long v131 = 0u;
    long long v132 = 0u;
    long long v129 = 0u;
    *(_OWORD *)CFDictionaryRef theDict = 0u;
    long long v127 = 0u;
    long long v128 = 0u;
    long long v125 = 0u;
    long long v126 = 0u;
    *(_OWORD *)CFTypeRef cf = 0u;
    if (gLogCategory_APEndpoint <= 90 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
    if (*(void *)(a1 + 48) == *(void *)(DerivedStorage + 136) && *(_DWORD *)(DerivedStorage + 152) == 1)
    {
      cf[0] = CFRetain(*(CFTypeRef *)a1);
      CFTypeRef v85 = *(CFTypeRef *)(DerivedStorage + 448);
      if (v85) {
        CFTypeRef v85 = CFRetain(v85);
      }
      cf[1] = v85;
      LODWORD(v125) = *(_DWORD *)(DerivedStorage + 156);
      CFTypeRef v86 = CFRetain(@"FailedActivation");
      DWORD1(v128) = 0;
      long long v132 = 0uLL;
      CFTypeRef v87 = *(CFTypeRef *)(a1 + 40);
      uint64_t v88 = *(void *)(a1 + 48);
      *((void *)&v125 + 1) = v86;
      uint64_t v89 = *(void *)(a1 + 16);
      *(void *)&long long v127 = v88;
      *((void *)&v127 + 1) = v89;
      LOBYTE(v128) = *(unsigned char *)(DerivedStorage + 488);
      if (v87) {
        CFTypeRef v87 = CFRetain(v87);
      }
      *(void *)&long long v126 = v87;
      CFTypeRef v90 = *(CFTypeRef *)(DerivedStorage + 168);
      if (v90) {
        CFTypeRef v90 = CFRetain(v90);
      }
      *((void *)&v126 + 1) = v90;
      BYTE1(v128) = 0;
      CFTypeRef v91 = *(CFTypeRef *)(a1 + 88);
      if (v91) {
        CFTypeRef v91 = CFRetain(v91);
      }
      *((void *)&v129 + 1) = v91;
      *(void *)&long long v131 = FigCFDictionaryCreateMutableCopy();
      CFTypeRef v92 = *(CFTypeRef *)(DerivedStorage + 304);
      if (v92) {
        CFTypeRef v92 = CFRetain(v92);
      }
      *((void *)&v131 + 1) = v92;
      *(_DWORD *)(DerivedStorage + 492) = v7;
      endpoint_resetActivationState(DerivedStorage + 136);
      if (!*(unsigned char *)(DerivedStorage + 49) || !*(unsigned char *)(DerivedStorage + 48))
      {
        int v93 = *(const void **)(DerivedStorage + 472);
        if (v93)
        {
          CFRelease(v93);
          *(void *)(DerivedStorage + 472) = 0;
        }
      }
      endpoint_removeAPEndpointManagerNotificationsListenerIfNeeded();
      endpoint_removeHDMILatencyNotificationListenerIfNeeded();
      endpoint_stopListeningToSenderSessionAndStreamsNotifications(*(void *)a1, v126);
      if (theDict[1]) {
        CFDictionaryApplyFunction(theDict[1], (CFDictionaryApplierFunction)endpoint_unsubscribeRCS, *(void **)a1);
      }
      if (theDict[0]) {
        CFSetApplyFunction(theDict[0], (CFSetApplierFunction)endpoint_unsubscribePlaybackSession, *(void **)a1);
      }
      endpoint_deregisterWithBrowserController(*(const void **)a1);
      APSDispatchAsyncFHelper();
    }
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
    int v84 = 0;
    if (v7 != -17600 && v123 != 0) {
      unsigned int v7 = -17601;
    }
  }
  else
  {
LABEL_223:
    if (gLogCategory_APEndpoint <= 50)
    {
      if (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()) {
        LogPrintF();
      }
      if (gLogCategory_APEndpoint <= 30 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
    }
    if (v7)
    {
      int v84 = 0;
    }
    else
    {
      if (v33) {
        endpoint_postStreamsChangedNotification(*(const void **)a1, v33, *(void *)(a1 + 48), 0);
      }
      if (v54 && !*(unsigned char *)(DerivedStorage + 48) && !*(unsigned char *)(DerivedStorage + 250)) {
        APEndpointApplyInitialVolume(*(void *)a1);
      }
      unsigned int v7 = 0;
      int v84 = 1;
    }
  }
  uint64_t v95 = *(void *)(a1 + 112);
  if (v95)
  {
    if (v7 == -16727) {
      int v96 = 1;
    }
    else {
      int v96 = v84;
    }
    if (v96) {
      uint64_t v97 = v135;
    }
    else {
      uint64_t v97 = 0;
    }
    v98 = *(const void **)(a1 + 48);
    cf[0] = *(CFTypeRef *)a1;
    cf[1] = v98;
    *(void *)&long long v125 = v97;
    *((void *)&v125 + 1) = v7;
    uint64_t v99 = *(void *)(a1 + 120);
    *(void *)&long long v126 = v95;
    *((void *)&v126 + 1) = v99;
    CFRetain(cf[0]);
    APSDispatchAsyncFHelper();
  }
  if (v84)
  {
    CFAllocatorRef v100 = CFGetAllocator(*(CFTypeRef *)a1);
    APEndpointCreateEndpointActivationNotificationPayload(v100, v135, *(void *)(a1 + 48), &v134);
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
    if (v134)
    {
      CFRelease(v134);
      CFMutableDictionaryRef v134 = 0;
    }
    if (v55) {
      endpoint_postStreamsChangedNotification(*(const void **)a1, v55, *(void *)(a1 + 48), 1);
    }
    if (!*(unsigned char *)(DerivedStorage + 48) && !CFDictionaryGetInt64())
    {
      CFTypeRef v101 = CFRetain(*(CFTypeRef *)a1);
      uint64_t v102 = *(const void **)(a1 + 48);
      cf[0] = v101;
      cf[1] = v102;
      *(void *)&long long v125 = v135;
      APSDispatchAsyncFHelper();
    }
  }
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
  CFAllocatorRef v103 = *(const void **)(a1 + 8);
  if (v103) {
    CFRelease(v103);
  }
  uint64_t v104 = *(const void **)(a1 + 96);
  if (v104) {
    CFRelease(v104);
  }
  uint64_t v105 = *(const void **)(a1 + 40);
  if (v105) {
    CFRelease(v105);
  }
  uint64_t v106 = *(const void **)(a1 + 56);
  if (v106) {
    CFRelease(v106);
  }
  v107 = *(const void **)(a1 + 64);
  if (v107) {
    CFRelease(v107);
  }
  CFTypeRef v108 = *(const void **)(a1 + 72);
  if (v108) {
    CFRelease(v108);
  }
  CFTypeRef v109 = *(const void **)(a1 + 80);
  if (v109) {
    CFRelease(v109);
  }
  CFTypeRef v110 = *(const void **)(a1 + 88);
  if (v110) {
    CFRelease(v110);
  }
  CFTypeRef v111 = *(const void **)(a1 + 104);
  if (v111) {
    CFRelease(v111);
  }
  v112 = *(const void **)(a1 + 136);
  if (v112) {
    CFRelease(v112);
  }
  if (v134) {
    CFRelease(v134);
  }
}

uint64_t endpoint_handleEventMessage()
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpoint <= 40)
  {
    if (gLogCategory_APEndpoint != -1) {
      return LogPrintF();
    }
    uint64_t result = _LogCategory_Initialize();
    if (result) {
      return LogPrintF();
    }
  }
  return result;
}

uint64_t endpoint_handleEventMessageCreatingReply(uint64_t a1, int a2, uint64_t a3, const void *a4, void *a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  int v9 = *(unsigned __int8 *)(DerivedStorage + 128);
  uint64_t v10 = *(void *)(DerivedStorage + 224);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  if (v10) {
    BOOL v11 = v9 == 0;
  }
  else {
    BOOL v11 = 0;
  }
  if (!v11)
  {
    if (v9) {
      unsigned int v36 = -16723;
    }
    else {
      unsigned int v36 = 0;
    }
    if (v10) {
      uint64_t v20 = v36;
    }
    else {
      uint64_t v20 = 4294950570;
    }
    goto LABEL_73;
  }
  if (a2 == 1668116068)
  {
    CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    uint64_t CFDataWithBlockBufferNoCopy = FigCreateCFDataWithBlockBufferNoCopy();
    if (CFDataWithBlockBufferNoCopy)
    {
      uint64_t v20 = CFDataWithBlockBufferNoCopy;
LABEL_73:
      APSLogErrorAt();
      CFDictionaryRef v15 = 0;
      goto LABEL_79;
    }
    CFDictionaryRef v14 = (const __CFDictionary *)CFPropertyListCreateWithData(v12, 0, 0, 0, 0);
    CFDictionaryRef v15 = v14;
    if (!v14 || (CFTypeID v16 = CFGetTypeID(v14), v16 != CFDictionaryGetTypeID()))
    {
      APSLogErrorAt();
      uint64_t v20 = 4294950576;
      goto LABEL_79;
    }
    unsigned int restarted = 0;
    uint64_t v17 = CMBaseObjectGetDerivedStorage();
    CFArrayRef Value = CFDictionaryGetValue(v15, @"type");
    if (Value)
    {
      uint64_t v19 = Value;
      if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      if (CFEqual(v19, @"forceKeyFrame"))
      {
        MEMORY[0x1D25EB370](*(void *)(v17 + 120));
        CFDictionaryRef v21 = *(const __CFDictionary **)(v17 + 168);
        if (v21)
        {
          uint64_t v22 = CFDictionaryGetValue(v21, (const void *)*MEMORY[0x1E4F21488]);
          if (v22)
          {
            CFTypeRef v23 = CFRetain(v22);
            MEMORY[0x1D25EB390](*(void *)(v17 + 120));
            if (!v23) {
              goto LABEL_77;
            }
            unsigned int restarted = APEndpointStreamScreenRestartBitstream((uint64_t)v23);
            if (!restarted) {
              goto LABEL_40;
            }
            goto LABEL_94;
          }
        }
        goto LABEL_76;
      }
      if (CFEqual(v19, @"setScreenRecordingState"))
      {
        MEMORY[0x1D25EB370](*(void *)(v17 + 120));
        CFDictionaryRef v24 = *(const __CFDictionary **)(v17 + 168);
        if (v24)
        {
          uint64_t v25 = CFDictionaryGetValue(v24, (const void *)*MEMORY[0x1E4F21488]);
          if (v25)
          {
            CFTypeRef v23 = CFRetain(v25);
            MEMORY[0x1D25EB390](*(void *)(v17 + 120));
            if (!v23) {
              goto LABEL_77;
            }
            uint64_t Int64 = CFDictionaryGetInt64();
            unsigned int restarted = APEndpointStreamScreenSetRecordingState((uint64_t)v23, Int64 != 0);
            if (!restarted) {
              goto LABEL_40;
            }
            goto LABEL_94;
          }
        }
        goto LABEL_76;
      }
      if (CFEqual(v19, @"updateDisplayInfo"))
      {
        CFArrayRef v27 = (const __CFArray *)CFDictionaryGetValue(v15, @"displays");
        if (v27 && (CFArrayRef v28 = v27, v29 = CFGetTypeID(v27), v29 == CFArrayGetTypeID()))
        {
          if (CFArrayGetCount(v28) == 1)
          {
            MEMORY[0x1D25EB370](*(void *)(v17 + 120));
            CFDictionaryRef v30 = *(const __CFDictionary **)(v17 + 168);
            if (v30)
            {
              dispatch_time_t v31 = CFDictionaryGetValue(v30, (const void *)*MEMORY[0x1E4F21488]);
              if (v31)
              {
                CFTypeRef v23 = CFRetain(v31);
                MEMORY[0x1D25EB390](*(void *)(v17 + 120));
                if (!v23) {
                  goto LABEL_77;
                }
                CFDictionaryGetTypeID();
                uint64_t TypedValueAtIndex = CFArrayGetTypedValueAtIndex();
                unsigned int restarted = APEndpointStreamScreenUpdateDisplayInfo((uint64_t)v23, TypedValueAtIndex);
                if (!restarted) {
                  goto LABEL_40;
                }
LABEL_94:
                APSLogErrorAt();
LABEL_40:
                CFRelease(v23);
                goto LABEL_77;
              }
            }
LABEL_76:
            MEMORY[0x1D25EB390](*(void *)(v17 + 120));
            goto LABEL_77;
          }
          unsigned int restarted = -16720;
        }
        else
        {
          unsigned int restarted = -16720;
        }
LABEL_60:
        APSLogErrorAt();
        goto LABEL_77;
      }
      if (CFEqual(v19, @"sendMediaRemoteCommand"))
      {
        MEMORY[0x1D25EB370](*(void *)(v17 + 120));
        if (*(_DWORD *)(v17 + 152) == 2)
        {
          CFRetain(a4);
          CFRetain(v15);
          uint64_t v33 = *(const void **)(v17 + 448);
          if (v33) {
            CFRetain(v33);
          }
          APSDispatchAsyncFHelper();
          unsigned int restarted = 0;
        }
        else
        {
          unsigned int restarted = -16726;
        }
        MEMORY[0x1D25EB390](*(void *)(v17 + 120));
        if (!restarted) {
          goto LABEL_78;
        }
        goto LABEL_60;
      }
      if (CFEqual(v19, @"remoteConrolSessionCreate"))
      {
        unsigned int restarted = apEndpoint_handleCreateIncomingRCSCommand(a4, v15);
        if (restarted) {
          goto LABEL_60;
        }
LABEL_78:
        uint64_t v20 = 0;
        *a5 = 0;
        goto LABEL_79;
      }
      if (CFEqual(v19, @"remoteControlSessionInvalidate"))
      {
        unsigned int restarted = apEndpoint_handleInvalidateIncomingRCSCommand((uint64_t)a4, v15);
        if (restarted) {
          goto LABEL_60;
        }
        goto LABEL_78;
      }
      if (CFEqual(v19, @"updateInfo"))
      {
        uint64_t v34 = CFDictionaryGetValue(v15, @"value");
        if (!v34)
        {
          APSLogErrorAt();
          uint64_t v20 = 4294960591;
LABEL_98:
          APSLogErrorAt();
          goto LABEL_79;
        }
        uint64_t v35 = (uint64_t)v34;
        MEMORY[0x1D25EB370](*(void *)(v17 + 120));
        if (!*(_DWORD *)(v17 + 152)) {
          goto LABEL_76;
        }
        unsigned int restarted = APEndpointDescriptionSetEndpointInfo(*(void *)(v17 + 40), v35);
        if (!restarted)
        {
          uint64_t v37 = *(const void **)(v17 + 272);
          if (v37)
          {
            CFRelease(v37);
            *(void *)(v17 + 272) = 0;
          }
          goto LABEL_76;
        }
        MEMORY[0x1D25EB390](*(void *)(v17 + 120));
        goto LABEL_60;
      }
      if (CFEqual(v19, @"regroupTightSyncBuddy"))
      {
        if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
          LogPrintF();
        }
        notify_post("kAirPlayWHANotification_RegroupTightSyncBuddy");
      }
      else if (CFEqual(v19, @"FPSSecureStop"))
      {
        CFDictionaryGetValue(v15, @"FPSSecureStopPayload");
        FigAirPlaySecureStopRouterFinalizeRecordAndCommitToDisk();
      }
      else
      {
        if (CFEqual(v19, @"htSecondaryNonPersistentSessionStarted"))
        {
          unsigned int restarted = endpoint_handleHTSecondaryNonPersistentSessionStartedEvent();
          if (!restarted) {
            goto LABEL_78;
          }
          goto LABEL_60;
        }
        if (gLogCategory_APEndpoint <= 60 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
          LogPrintF();
        }
      }
    }
LABEL_77:
    uint64_t v20 = restarted;
    if (!restarted) {
      goto LABEL_78;
    }
    goto LABEL_98;
  }
  if (gLogCategory_APEndpoint <= 60 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  CFDictionaryRef v15 = 0;
  uint64_t v20 = 4294950678;
LABEL_79:
  if (v15) {
    CFRelease(v15);
  }
  return v20;
}

void endpoint_getSessionProtocolOverrideString(CFTypeRef *a1)
{
  float v2 = (const void *)APSSettingsCopyValue();
  *a1 = v2;
  if (v2 && !CFEqual(v2, @"legacy") && !CFEqual(*a1, @"airplay"))
  {
    if (gLogCategory_APEndpoint <= 60 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    if (*a1)
    {
      CFRelease(*a1);
      *a1 = 0;
    }
  }
}

BOOL endpoint_isInLocalClusterOfAppleTV()
{
  return *(_DWORD *)(CMBaseObjectGetDerivedStorage() + 104) == 4 && endpoint_isInLocalCluster();
}

BOOL endpoint_isInLocalStereoPairPersistentConnection()
{
  uint64_t v0 = *(void *)(CMBaseObjectGetDerivedStorage() + 64);
  if (v0) {
    BOOL v1 = v0 == *MEMORY[0x1E4F1CFD0];
  }
  else {
    BOOL v1 = APSSettingsIsFeatureEnabled() != 0;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(_DWORD *)(DerivedStorage + 104) == 7)
  {
    CFBooleanRef v3 = *(const __CFBoolean **)(DerivedStorage + 96);
    if (v3)
    {
      int Value = CFBooleanGetValue(v3);
    }
    else
    {
      APSCopyTightSyncInfo();
      int Value = 0;
    }
  }
  else
  {
    int Value = 0;
  }
  return Value && v1;
}

void endpoint_handleMediaRemoteCommand(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(void *)(DerivedStorage + 584))
  {
    APSLogErrorAt();
    unsigned int v13 = 0;
    BOOL v5 = 0;
    uint64_t v4 = 0;
    goto LABEL_34;
  }
  uint64_t v3 = DerivedStorage;
  uint64_t v4 = (unsigned char *)CFDictionaryCopyCString();
  BOOL v5 = (unsigned char *)CFDictionaryCopyCString();
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  if (v4 && *v4)
  {
    uint64_t v6 = (int)TextToInt32();
    CFDictionaryGetTypeID();
    Typedint Value = CFDictionaryGetTypedValue();
    APMediaRemoteCommandReceiverHandleMRCommand(*(void *)(v3 + 584), v6, TypedValue);
LABEL_15:
    unsigned int v13 = 0;
    goto LABEL_34;
  }
  if (!v5 || !*v5) {
    goto LABEL_15;
  }
  int v8 = TextToFourCharCode();
  if (v8 != 1685482595)
  {
    unsigned int v13 = 0;
    unint64_t v14 = 0;
LABEL_33:
    APMediaRemoteCommandReceiverHandleAPCommand(*(void *)(v3 + 584), v8, (uint64_t)v13, v14);
    goto LABEL_34;
  }
  CFTypeRef v9 = *(CFTypeRef *)a1;
  CFDictionaryRef v10 = *(const __CFDictionary **)(a1 + 16);
  int v29 = 0;
  uint64_t v11 = CMBaseObjectGetDerivedStorage();
  CFDictionaryGetValue(v10, @"volume");
  int Value = CFDictionaryGetValue(v10, @"isMuted");
  MEMORY[0x1D25EB370](*(void *)(v11 + 120));
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  CFGetDouble();
  float v16 = v15;
  int v17 = Value == (const void *)*MEMORY[0x1E4F1CFD0];
  APSVolumeConvertDBToSliderValue();
  float v19 = v18;
  APSVolumeConvertDBToSliderValue();
  BOOL v21 = v20 < v16;
  float v22 = v16;
  if (v21) {
    APSVolumeConvertDBToSliderValue();
  }
  if (v19 > v22 || (APSVolumeConvertDBToSliderValue(), BOOL v21 = v23 < v16, v24 = v16, v21)) {
    APSVolumeConvertDBToSliderValue();
  }
  endpointdelegate_setVolumeSliderInternal(v9, 0, 0, v24);
  if (*(unsigned char *)(v11 + 51)
    && *(unsigned __int8 *)(v11 + 520) != v17
    && (*(unsigned char *)(v11 + 520) = v17, (int v29 = endpoint_postMuteDidChangeNotification()) != 0))
  {
    APSLogErrorAt();
  }
  else
  {
    APSVolumeConvertSliderValueToDB();
    *(float *)(v11 + 528) = v25;
    *(unsigned char *)(v11 + 532) = v17;
    if (!*(unsigned char *)(v11 + 250))
    {
      float v26 = v25;
      unsigned int v13 = (char *)malloc_type_calloc(0x40uLL, 1uLL, 0x100004077774924uLL);
      unint64_t v14 = snprintf(v13, 0x3FuLL, "%lf", v26);
      goto LABEL_31;
    }
  }
  unsigned int v13 = 0;
  unint64_t v14 = 0;
LABEL_31:
  MEMORY[0x1D25EB390](*(void *)(v11 + 120));
  if (!v29)
  {
    if (!v13) {
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  APSLogErrorAt();
LABEL_34:
  free(v13);
  free(v5);
  free(v4);
  CFArrayRef v27 = *(const void **)(a1 + 16);
  if (v27) {
    CFRelease(v27);
  }
  CFArrayRef v28 = *(const void **)(a1 + 8);
  if (v28) {
    CFRelease(v28);
  }
  CFRelease(*(CFTypeRef *)a1);
}

uint64_t apEndpoint_handleCreateIncomingRCSCommand(const void *a1, const __CFDictionary *a2)
{
  value[3] = *(void **)MEMORY[0x1E4F143B8];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  value[0] = 0;
  if (!a1) {
    goto LABEL_12;
  }
  uint64_t v5 = DerivedStorage;
  FigEndpointExtendedGetClassID();
  if (!CMBaseObjectIsMemberOfClass() || !a2) {
    goto LABEL_12;
  }
  if (*(unsigned char *)(v5 + 48))
  {
    APSLogErrorAt();
    uint64_t CommChannel = 4294950570;
    goto LABEL_20;
  }
  uint64_t v6 = CFDictionaryGetValue(a2, @"clientTypeUUID");
  if (!v6 || (unsigned int v7 = v6, (v8 = CFDictionaryGetValue(a2, @"streamID")) == 0))
  {
LABEL_12:
    APSLogErrorAt();
    uint64_t CommChannel = 4294950576;
LABEL_20:
    if (gLogCategory_APEndpoint <= 90 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    return CommChannel;
  }
  CFTypeRef v9 = v8;
  CFDictionaryGetValue(a2, @"clientUUID");
  FigCFDictionaryGetInt64IfPresent();
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!Mutable)
  {
    APSLogErrorAt();
    uint64_t CommChannel = 4294960568;
    goto LABEL_20;
  }
  uint64_t v11 = Mutable;
  CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F204C0], v7);
  CFDictionarySetValue(v11, @"streamID", v9);
  CFDictionarySetInt64();
  CFDictionarySetInt64();
  FigCFDictionarySetValue();
  UUIDGet();
  CFDictionarySetUUIDString();
  uint64_t CommChannel = apEndpoint_CreateCommChannel(a1, v11, (CFTypeRef *)value);
  if (CommChannel)
  {
    APSLogErrorAt();
  }
  else
  {
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    MEMORY[0x1D25EB370](*(void *)(v5 + 120));
    unsigned int v13 = *(__CFDictionary **)(v5 + 344);
    if (!v13)
    {
      CFAllocatorRef v14 = CFGetAllocator(a1);
      unsigned int v13 = CFDictionaryCreateMutable(v14, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      *(void *)(v5 + 344) = v13;
    }
    CFDictionarySetValue(v13, v9, value[0]);
    MEMORY[0x1D25EB390](*(void *)(v5 + 120));
  }
  CFRelease(v11);
  if (value[0]) {
    CFRelease(value[0]);
  }
  if (CommChannel) {
    goto LABEL_20;
  }
  return CommChannel;
}

uint64_t apEndpoint_handleInvalidateIncomingRCSCommand(uint64_t a1, const __CFDictionary *a2)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  value = 0;
  long long v18 = 0u;
  long long v19 = 0u;
  *(_OWORD *)label = 0u;
  long long v17 = 0u;
  if (!a2)
  {
    APSLogErrorAt();
LABEL_24:
    uint64_t v10 = 4294950576;
    goto LABEL_10;
  }
  uint64_t v5 = DerivedStorage;
  if (*(unsigned char *)(DerivedStorage + 48))
  {
    APSLogErrorAt();
    a2 = 0;
    uint64_t v10 = 4294950570;
    goto LABEL_10;
  }
  uint64_t v6 = CFDictionaryGetValue(a2, @"streamID");
  if (!v6)
  {
    APSLogErrorAt();
    a2 = 0;
    goto LABEL_24;
  }
  unsigned int v7 = v6;
  MEMORY[0x1D25EB370](*(void *)(v5 + 120));
  CFDictionaryRef v8 = *(const __CFDictionary **)(v5 + 344);
  if (!v8 || !CFDictionaryGetValueIfPresent(v8, v7, (const void **)&value))
  {
    MEMORY[0x1D25EB390](*(void *)(v5 + 120));
LABEL_9:
    APSLogErrorAt();
    a2 = 0;
    uint64_t v10 = 4294950571;
    goto LABEL_10;
  }
  CFTypeRef v9 = CFDictionaryGetValue(*(CFDictionaryRef *)(v5 + 336), value);
  if (v9) {
    a2 = (const __CFDictionary *)CFRetain(v9);
  }
  else {
    a2 = 0;
  }
  CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(v5 + 344), v7);
  MEMORY[0x1D25EB390](*(void *)(v5 + 120));
  if (!a2) {
    goto LABEL_9;
  }
  SNPrintF();
  dispatch_queue_t v11 = dispatch_queue_create(label, 0);
  if (v11)
  {
    CFAllocatorRef v12 = v11;
    CFRetain(a2);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 0x40000000;
    block[2] = __apEndpoint_handleInvalidateIncomingRCSCommand_block_invoke;
    block[3] = &__block_descriptor_tmp_344_0;
    block[4] = a2;
    block[5] = a1;
    dispatch_async(v12, block);
    CFRelease(a2);
    dispatch_release(v12);
    return 0;
  }
  APSLogErrorAt();
  uint64_t v10 = 4294950575;
LABEL_10:
  if (gLogCategory_APEndpoint <= 90 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  if (a2) {
    CFRelease(a2);
  }
  return v10;
}

uint64_t endpoint_handleHTSecondaryNonPersistentSessionStartedEvent()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  if (!*(unsigned char *)(DerivedStorage + 251))
  {
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
    return 0;
  }
  int v1 = *(_DWORD *)(DerivedStorage + 252);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  if (v1 != 2) {
    return 0;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    CFMutableDictionaryRef v3 = Mutable;
    FigCFDictionarySetValueFromKeyInDict();
    FigCFDictionarySetValueFromKeyInDict();
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
    CFRelease(v3);
    return 0;
  }
  APSLogErrorAt();
  return 4294950575;
}

uint64_t apEndpoint_CreateCommChannel(const void *a1, const __CFDictionary *a2, CFTypeRef *a3)
{
  uint64_t FigEndpoint = FigEndpointExtendedGetFigEndpoint();
  CFTypeRef cf = 0;
  CFTypeRef v16 = 0;
  uint64_t v7 = endpoint_createCommChannelInternal(a1, a2, &cf, &v16);
  if (v7)
  {
    uint64_t v13 = v7;
    goto LABEL_10;
  }
  CFTypeRef v8 = cf;
  uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v9) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = 0;
  }
  dispatch_queue_t v11 = *(uint64_t (**)(CFTypeRef, void (*)(uint64_t, const void *, const void *, const void *), uint64_t))(v10 + 16);
  if (!v11)
  {
    uint64_t v13 = 4294954514;
LABEL_10:
    APSLogErrorAt();
    goto LABEL_11;
  }
  uint64_t v12 = v11(v8, endpoint_handleRemoteControlSessionEvent, FigEndpoint);
  if (v12)
  {
    uint64_t v13 = v12;
    goto LABEL_10;
  }
  uint64_t v13 = 0;
  if (a3)
  {
    *a3 = v16;
    CFTypeRef v16 = 0;
  }
LABEL_11:
  if (cf) {
    CFRelease(cf);
  }
  if (v16) {
    CFRelease(v16);
  }
  return v13;
}

uint64_t endpoint_createCommChannelInternal(const void *a1, const __CFDictionary *MutableCopy, CFTypeRef *a3, CFTypeRef *a4)
{
  unsigned int v41 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef v39 = 0;
  CFTypeRef cf = 0;
  if (gLogCategory_APEndpoint <= 30 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  if (!MutableCopy)
  {
    APSLogErrorAt();
    CFTypeRef v10 = 0;
    goto LABEL_97;
  }
  if (*(unsigned char *)(DerivedStorage + 128))
  {
    APSLogErrorAt();
    CFTypeRef v10 = 0;
    CFMutableDictionaryRef MutableCopy = 0;
    int v25 = -16723;
    goto LABEL_48;
  }
  uint64_t v9 = *(const void **)(DerivedStorage + 224);
  if (v9) {
    CFTypeRef v10 = CFRetain(v9);
  }
  else {
    CFTypeRef v10 = 0;
  }
  if (*(_DWORD *)(DerivedStorage + 152) == 2)
  {
    uint64_t Int64 = CFDictionaryGetInt64();
    int Value = CFDictionaryGetValue(MutableCopy, (const void *)*MEMORY[0x1E4F210F8]);
    if (!Value)
    {
      APSLogErrorAt();
      CFMutableDictionaryRef MutableCopy = 0;
      goto LABEL_97;
    }
    uint64_t v13 = Value;
    uint64_t v38 = a4;
    uint64_t v14 = CMBaseObjectGetDerivedStorage();
    double v15 = (const void *)*MEMORY[0x1E4F210E8];
    if (CFEqual(v13, (CFTypeRef)*MEMORY[0x1E4F210E8]))
    {
LABEL_13:
      uint64_t v16 = CFDictionaryGetInt64();
      uint64_t v17 = *MEMORY[0x1E4F1CF80];
      CFMutableDictionaryRef MutableCopy = (const __CFDictionary *)FigCFDictionaryCreateMutableCopy();
      if (!MutableCopy) {
        goto LABEL_104;
      }
      if (Int64 != 1 || !CFEqual(v13, v15)) {
        goto LABEL_22;
      }
      uint64_t v18 = APSGetFBOPropertyInt64();
      uint64_t v19 = 1;
      if (v18) {
        uint64_t v19 = 2;
      }
      if (!v16) {
        uint64_t v16 = v19;
      }
      if (v18 && v16 != 2)
      {
        if (gLogCategory_APEndpoint <= 90 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
          LogPrintF();
        }
      }
      else
      {
LABEL_22:
        uint64_t v20 = APSGetFBOPropertyInt64();
        if (v16 != 1 || v20)
        {
          if (v16 == 2 && APSGetFBOPropertyInt64())
          {
            if (IsAppleInternalBuild() && APSSettingsGetInt64())
            {
              if (gLogCategory_APEndpoint <= 50
                && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              BOOL v21 = (const void **)MEMORY[0x1E4F1CFC8];
            }
            else
            {
              BOOL v21 = (const void **)MEMORY[0x1E4F1CFD0];
            }
            CFDictionarySetValue(MutableCopy, @"wantsDedicatedSocket", *v21);
          }
          CFStringGetTypeID();
          Typedint Value = (const void *)CFDictionaryGetTypedValue();
          if (!TypedValue
            || (CFDictionaryRef v28 = *(const __CFDictionary **)(DerivedStorage + 336)) == 0
            || !CFDictionaryContainsKey(v28, TypedValue))
          {
            CFDictionarySetInt64();
            CFAllocatorRef v29 = CFGetAllocator(a1);
            unsigned int v41 = APEndpointRemoteControlSessionCreate(v29, v10, *(void *)(DerivedStorage + 456), MutableCopy, v16, &v39);
            if (v41) {
              goto LABEL_75;
            }
            if (*(void *)(DerivedStorage + 336)
              || (CFAllocatorRef v30 = CFGetAllocator(a1),
                  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v30, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]),
                  (*(void *)(DerivedStorage + 336) = Mutable) != 0))
            {
              uint64_t CMBaseObject = FigEndpointRemoteControlSessionGetCMBaseObject();
              uint64_t v33 = *(void *)(CMBaseObjectGetVTable() + 8);
              if (v33) {
                uint64_t v34 = v33;
              }
              else {
                uint64_t v34 = 0;
              }
              uint64_t v35 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v34 + 48);
              if (v35)
              {
                unsigned int v41 = v35(CMBaseObject, @"SessionID", v17, &cf);
                if (!v41)
                {
                  if (!TypedValue || FigCFEqual())
                  {
                    CMNotificationCenterGetDefaultLocalCenter();
                    FigNotificationCenterAddWeakListener();
                    CFDictionarySetValue(*(CFMutableDictionaryRef *)(DerivedStorage + 336), cf, v39);
                    if (*(unsigned char *)(DerivedStorage + 48))
                    {
                      uint64_t FigEndpoint = (const void *)FigEndpointExtendedGetFigEndpoint();
                      endpoint_handleIdleStateChanged_0(FigEndpoint, 1);
                    }
                    if (gLogCategory_APEndpoint <= 50
                      && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
                    {
                      LogPrintF();
                    }
                    if (a3)
                    {
                      *a3 = v39;
                      CFTypeRef v39 = 0;
                    }
                    if (v38)
                    {
                      *uint64_t v38 = cf;
                      CFTypeRef cf = 0;
                    }
                    goto LABEL_81;
                  }
                  if (gLogCategory_APEndpoint <= 50
                    && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
                  {
                    LogPrintF();
                  }
                  int v25 = -17606;
LABEL_48:
                  unsigned int v41 = v25;
                  goto LABEL_81;
                }
              }
              else
              {
                unsigned int v41 = -12782;
              }
LABEL_75:
              APSLogErrorAt();
              goto LABEL_81;
            }
LABEL_104:
            APSLogErrorAt();
            int v25 = -16721;
            goto LABEL_48;
          }
          if (gLogCategory_APEndpoint <= 90
            && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
LABEL_97:
          int v25 = -16720;
          goto LABEL_48;
        }
        APSLogErrorAt();
      }
LABEL_47:
      int v25 = -16726;
      goto LABEL_48;
    }
    if (CFEqual(v13, (CFTypeRef)*MEMORY[0x1E4F210E0]))
    {
      if (!*(unsigned char *)(v14 + 48))
      {
        uint64_t v22 = *(void *)(v14 + 40);
        uint64_t v23 = *(void *)(CMBaseObjectGetVTable() + 16);
        uint64_t v24 = v23 ? v23 : 0;
        float v26 = *(unsigned int (**)(uint64_t, uint64_t))(v24 + 16);
        if (v26)
        {
          if (v26(v22, 49)) {
            goto LABEL_13;
          }
        }
      }
    }
    else
    {
      if (CFEqual(v13, (CFTypeRef)*MEMORY[0x1E4F210D8]))
      {
        if (!*(unsigned char *)(v14 + 48)) {
          goto LABEL_33;
        }
      }
      else if (!CFEqual(v13, (CFTypeRef)*MEMORY[0x1E4F210F0]))
      {
        goto LABEL_33;
      }
      if (APSGetFBOPropertyInt64()) {
        goto LABEL_13;
      }
    }
LABEL_33:
    if (gLogCategory_APEndpoint <= 90 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    CFMutableDictionaryRef MutableCopy = 0;
    goto LABEL_47;
  }
  unsigned int v41 = -16726;
  if (gLogCategory_APEndpoint <= 90 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  CFMutableDictionaryRef MutableCopy = 0;
LABEL_81:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  if (cf) {
    CFRelease(cf);
  }
  if (v10) {
    CFRelease(v10);
  }
  if (v39) {
    CFRelease(v39);
  }
  if (MutableCopy) {
    CFRelease(MutableCopy);
  }
  return v41;
}

void endpoint_handleRemoteControlSessionEvent(uint64_t a1, const void *a2, const void *a3, const void *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  uint64_t CMBaseObject = FigEndpointRemoteControlSessionGetCMBaseObject();
  uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v9) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = 0;
  }
  dispatch_queue_t v11 = *(unsigned int (**)(uint64_t, __CFString *, void, CFTypeRef *))(v10 + 48);
  if (!v11 || v11(CMBaseObject, @"SessionID", 0, &cf))
  {
    APSLogErrorAt();
  }
  else
  {
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21138]))
    {
      APEndpointCallRCDelegateDidReceiveDataAsync(a4, *(void *)(DerivedStorage + 136), cf, a3, *(NSObject **)DerivedStorage, *(void *)(DerivedStorage + 408), *(void *)(DerivedStorage + 432));
    }
    else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21140]))
    {
      APEndpointCallRCDelegateDidCloseAsync(a4, *(void *)(DerivedStorage + 136), cf, *(NSObject **)DerivedStorage, *(void *)(DerivedStorage + 416), *(void *)(DerivedStorage + 432));
    }
    else if (gLogCategory_APEndpoint <= 90 {
           && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
    }
    {
      LogPrintF();
    }
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  }
  if (cf) {
    CFRelease(cf);
  }
}

void endpoint_handleRCSClosed(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  uint64_t CMBaseObject = FigEndpointRemoteControlSessionGetCMBaseObject();
  uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(unsigned int (**)(uint64_t, __CFString *, void, CFTypeRef *))(v6 + 48);
  if (!v7 || v7(CMBaseObject, @"SessionID", *MEMORY[0x1E4F1CF80], &cf))
  {
    APSLogErrorAt();
    if (gLogCategory_APEndpoint <= 90 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
  }
  else
  {
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
    CFTypeRef v8 = cf;
    uint64_t v9 = CMBaseObjectGetDerivedStorage();
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(v9 + 336), v8);
    if (*(unsigned char *)(v9 + 48)) {
      endpoint_handleIdleStateChanged_0(a2, 0);
    }
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  }
  if (cf) {
    CFRelease(cf);
  }
}

void endpoint_handleIdleStateChanged_0(const void *a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(_DWORD *)(DerivedStorage + 152) == 2)
  {
    uint64_t v5 = DerivedStorage;
    int v6 = *(unsigned __int8 *)(DerivedStorage + 271);
    int v7 = a2 || !endpoint_isIdle();
    if (v6 != v7)
    {
      if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      *(unsigned char *)(v5 + 271) = v7;
      CMBaseObjectGetDerivedStorage();
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      if (Mutable)
      {
        uint64_t v9 = Mutable;
        uint64_t v10 = (const void **)MEMORY[0x1E4F1CFC8];
        if (v7) {
          uint64_t v10 = (const void **)MEMORY[0x1E4F1CFD0];
        }
        CFDictionarySetValue(Mutable, @"IsEngaged", *v10);
        if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
          LogPrintF();
        }
        CMNotificationCenterGetDefaultLocalCenter();
        FigDispatchAsyncPostNotification();
        CFRelease(v9);
      }
      else
      {
        APSLogErrorAt();
      }
      if (*(unsigned char *)(v5 + 270))
      {
        CFRetain(a1);
        APSDispatchAsyncFHelper();
      }
      if (v7 && !*(unsigned char *)(v5 + 48) && (*(unsigned char *)(v5 + 536) & 0x10) != 0)
      {
        if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
          LogPrintF();
        }
        endpointdelegate_sendCurrentVolumeToReceiver(a1);
        *(_DWORD *)(v5 + 536) &= ~0x10u;
      }
    }
  }
}

BOOL endpoint_isIdle()
{
  if (*(unsigned char *)(CMBaseObjectGetDerivedStorage() + 48)) {
    return FigCFDictionaryGetCount() == 0;
  }
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2000000000;
  char v7 = 0;
  if (*(void *)(CMBaseObjectGetDerivedStorage() + 168))
  {
    CFDictionaryApplyBlock();
    int v1 = *((unsigned __int8 *)v5 + 24);
    _Block_object_dispose(&v4, 8);
    if (v1) {
      return 0;
    }
  }
  else
  {
    _Block_object_dispose(&v4, 8);
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2000000000;
  char v7 = 0;
  if (*(void *)(DerivedStorage + 312))
  {
    CFSetApplyBlock();
    BOOL v0 = *((unsigned char *)v5 + 24) == 0;
  }
  else
  {
    BOOL v0 = 1;
  }
  _Block_object_dispose(&v4, 8);
  return v0;
}

void endpoint_deferredIdleStateChanged(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  if (*(unsigned char *)(a1 + 8) && *(unsigned char *)(DerivedStorage + 270) && *(_DWORD *)(DerivedStorage + 152) == 2)
  {
    endpoint_startInactivityTimer(*(void **)a1);
  }
  else
  {
    CFMutableDictionaryRef v3 = *(NSObject **)(DerivedStorage + 608);
    if (v3)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(DerivedStorage + 608));
      dispatch_release(v3);
      *(void *)(DerivedStorage + 608) = 0;
    }
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  uint64_t v4 = *(const void **)a1;
  CFRelease(v4);
}

uint64_t __endpoint_isAnyMediaStreamPlaying_block_invoke(uint64_t a1)
{
  uint64_t result = FigCFEqual();
  if (!result)
  {
    uint64_t result = APSGetFBOPropertyInt64();
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) |= result != 0;
  }
  return result;
}

uint64_t __endpoint_isAnyPlaybackSessionPlaying_block_invoke(uint64_t a1)
{
  uint64_t result = APSGetFBOPropertyInt64();
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) |= result != 0;
  return result;
}

void endpoint_startInactivityTimer(void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v3 = DerivedStorage;
  if (*(unsigned char *)(DerivedStorage + 48)) {
    int IntWithDefault = 60;
  }
  else {
    int IntWithDefault = 480;
  }
  uint64_t v5 = *(NSObject **)(DerivedStorage + 608);
  if (v5)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(DerivedStorage + 608));
    dispatch_release(v5);
    *(void *)(v3 + 608) = 0;
  }
  if (IsAppleInternalBuild()) {
    int IntWithDefault = APSSettingsGetIntWithDefault();
  }
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  *(void *)(v3 + 608) = dispatch_source_create(MEMORY[0x1E4F14490], 0, 0, *(dispatch_queue_t *)(v3 + 576));
  CFRetain(a1);
  dispatch_set_context(*(dispatch_object_t *)(v3 + 608), a1);
  dispatch_source_set_event_handler_f(*(dispatch_source_t *)(v3 + 608), (dispatch_function_t)endpoint_inactivityTimerFired);
  dispatch_source_set_cancel_handler_f(*(dispatch_source_t *)(v3 + 608), (dispatch_function_t)endpoint_inactivityTimerCancelled);
  uint64_t v6 = *(NSObject **)(v3 + 608);
  dispatch_time_t v7 = dispatch_time(0, 1000000000 * IntWithDefault);
  dispatch_source_set_timer(v6, v7, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
  CFTypeRef v8 = *(NSObject **)(v3 + 608);
  dispatch_resume(v8);
}

void endpoint_inactivityTimerFired(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  uint64_t v3 = *(NSObject **)(DerivedStorage + 608);
  if (v3)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(DerivedStorage + 608));
    dispatch_release(v3);
    *(void *)(DerivedStorage + 608) = 0;
  }
  if (endpoint_isIdle() && *(_DWORD *)(DerivedStorage + 152) == 2)
  {
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    endpoint_updateStatus(a1, -72276, 1);
  }
  JUMPOUT(0x1D25EB390);
}

void endpoint_inactivityTimerCancelled(const void *a1)
{
  CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  CFRelease(a1);
}

void endpoint_updateStatus(const void *a1, int a2, int a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  if (*(unsigned char *)(DerivedStorage + 128)) {
    BOOL v7 = 1;
  }
  else {
    BOOL v7 = a2 == 0;
  }
  if (!v7)
  {
    CFTypeRef v8 = (void *)DerivedStorage;
    *(_DWORD *)(DerivedStorage + 156) = a2;
    CFAllocatorRef v9 = CFGetAllocator(a1);
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v9, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (Mutable)
    {
      CFMutableDictionaryRef v11 = Mutable;
      CFAllocatorRef v12 = CFGetAllocator(a1);
      CFMutableDictionaryRef v13 = CFDictionaryCreateMutable(v12, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      if (!v13)
      {
        APSLogErrorAt();
        goto LABEL_27;
      }
      CFMutableDictionaryRef v14 = v13;
      CFDictionarySetInt64();
      if (a2 == 200470 || a2 == 200401)
      {
        if (gLogCategory_APEndpoint <= 30 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
          LogPrintF();
        }
        CMNotificationCenterGetDefaultLocalCenter();
        FigDispatchAsyncPostNotification();
LABEL_26:
        CFRelease(v14);
LABEL_27:
        CFRelease(v11);
        return;
      }
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      double v15 = (const void **)MEMORY[0x1E4F20680];
      BOOL v16 = a3 == 0;
      if (a3) {
        double v15 = (const void **)MEMORY[0x1E4F20678];
      }
      uint64_t v17 = *v15;
      if (v16) {
        uint64_t v18 = (const void **)MEMORY[0x1E4F20588];
      }
      else {
        uint64_t v18 = (const void **)MEMORY[0x1E4F20580];
      }
      uint64_t v19 = *v18;
      CFDictionarySetValue(v11, (const void *)*MEMORY[0x1E4F206A0], v17);
      CFDictionarySetValue(v14, (const void *)*MEMORY[0x1E4F205A0], v19);
      if (v8[46])
      {
        if (v8[53] && (uint64_t v20 = FigCFWeakReferenceHolderCopyReferencedObject(), v8[53]) && !v20)
        {
          if (gLogCategory_APEndpoint > 90)
          {
LABEL_38:
            CMNotificationCenterGetDefaultLocalCenter();
            FigDispatchAsyncPostNotification();
            if (a2 == -16613)
            {
              uint64_t v21 = v8[5];
              CFAllocatorRef v22 = CFGetAllocator(a1);
              uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(v21);
              uint64_t v24 = *(void *)(CMBaseObjectGetVTable() + 8);
              uint64_t v25 = v24 ? v24 : 0;
              float v26 = *(void (**)(uint64_t, __CFString *, CFAllocatorRef, CFTypeRef *))(v25 + 48);
              if (v26)
              {
                v26(CMBaseObject, @"TransportDevice", v22, &cf);
                CFTypeRef v27 = cf;
                CFDictionaryRef v28 = (const void *)v8[3];
                if (v28 && cf)
                {
                  APBrowserControllerReconfirmEndpoint(v28, cf);
                  CFTypeRef v27 = cf;
                }
                if (v27) {
                  CFRelease(v27);
                }
              }
            }
            goto LABEL_26;
          }
          if (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()) {
            LogPrintF();
          }
        }
        else
        {
          CFRetain(a1);
          CFRetain(v14);
          if (gLogCategory_APEndpoint <= 50
            && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          APSDispatchAsyncFHelper();
        }
      }
      if (gLogCategory_APEndpoint <= 30 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      goto LABEL_38;
    }
    APSLogErrorAt();
  }
}

void endpoint_callDelegateHandleFailed(uint64_t a1)
{
  (*(void (**)(void, void, void, void))(a1 + 24))(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 32));
  CFRelease(*(CFTypeRef *)a1);
  CFRelease(*(CFTypeRef *)(a1 + 16));
  float v2 = *(const void **)(a1 + 32);
  if (v2)
  {
    CFRelease(v2);
  }
}

void __apEndpoint_handleInvalidateIncomingRCSCommand_block_invoke(uint64_t a1)
{
  uint64_t CMBaseObject = FigEndpointRemoteControlSessionGetCMBaseObject();
  if (!CMBaseObject
    || ((uint64_t v3 = CMBaseObject, (v4 = *(void *)(CMBaseObjectGetVTable() + 8)) == 0) ? (v5 = 0) : (v5 = v4),
        (uint64_t v6 = *(unsigned int (**)(uint64_t))(v5 + 24)) == 0 || v6(v3)))
  {
    if (gLogCategory_APEndpoint <= 90 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
  }
  BOOL v7 = *(const void **)(a1 + 32);
  CFRelease(v7);
}

uint64_t endpoint_handleSenderSessionStarted(uint64_t a1, const void *a2)
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  uint64_t v4 = result;
  if (gLogCategory_APEndpoint <= 50)
  {
    if (gLogCategory_APEndpoint != -1 || (uint64_t result = _LogCategory_Initialize(), result)) {
      uint64_t result = LogPrintF();
    }
  }
  if (!*(unsigned char *)(v4 + 128))
  {
    MEMORY[0x1D25EB370](*(void *)(v4 + 120));
    if (APSGetFBOPropertyInt64()) {
      endpointdelegate_sendCurrentVolumeToReceiver(a2);
    }
    MEMORY[0x1D25EB390](*(void *)(v4 + 120));
    CMBaseObjectGetDerivedStorage();
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 1, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (Mutable)
    {
      CFMutableDictionaryRef v6 = Mutable;
      CFDictionarySetInt64();
      if (gLogCategory_APEndpoint <= 30 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      CMNotificationCenterGetDefaultLocalCenter();
      FigDispatchAsyncPostNotification();
      CFRelease(v6);
    }
    else
    {
      APSLogErrorAt();
    }
    MEMORY[0x1D25EB370](*(void *)(v4 + 120));
    CMBaseObjectGetDerivedStorage();
    JUMPOUT(0x1D25EB390);
  }
  return result;
}

uint64_t endpoint_handleSenderSessionFailed(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4, const void *a5)
{
  if (gLogCategory_APEndpoint <= 90 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  CFRetain(a2);
  if (a5) {
    CFRetain(a5);
  }
  return APSDispatchAsyncFHelper();
}

void endpoint_deferredHandleSenderSessionFailed(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFDictionaryRef v3 = *(const __CFDictionary **)(a1 + 8);
  int Int64 = CFDictionaryGetInt64();
  CFDictionaryGetValue(v3, @"SessionState");
  int v5 = FigCFEqual();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  if (*(_DWORD *)(DerivedStorage + 152) == 2) {
    endpoint_updateStatus(*(const void **)a1, Int64, v5 == 0);
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  CFRelease(*(CFTypeRef *)a1);
  CFMutableDictionaryRef v6 = *(const void **)(a1 + 8);
  if (v6)
  {
    CFRelease(v6);
  }
}

uint64_t endpoint_handleSimulateEndpointFailed(uint64_t a1, const void *a2, const void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!CFEqual(a3, @"ReceiverSessionIsActive"))
  {
    if (CFEqual(a3, @"SystemRequestToStop"))
    {
      int v6 = -72278;
    }
    else if (CFEqual(a3, @"TightSyncBuddyRequestToStop"))
    {
      int v6 = -72274;
    }
    else if (CFEqual(a3, @"ReceiverSentPreventPlayback"))
    {
      int v6 = -17603;
    }
    else
    {
      int v6 = 0;
    }
    goto LABEL_13;
  }
  int v6 = -72272;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  if (!*(unsigned char *)(DerivedStorage + 251))
  {
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
LABEL_13:
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
    endpoint_updateStatus(a2, v6, *(_DWORD *)(DerivedStorage + 152) == 2);
    JUMPOUT(0x1D25EB390);
  }
  int v7 = *(_DWORD *)(DerivedStorage + 252);
  uint64_t result = MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  if (v7 != 2) {
    goto LABEL_13;
  }
  return result;
}

void endpoint_handleHDMILatencyChange(uint64_t a1, uint64_t a2)
{
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 1, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    CFMutableDictionaryRef v4 = Mutable;
    APSHDMIVideoLatencyMs();
    if (FigCFDictionarySetInt32()) {
      goto LABEL_13;
    }
    if (!a2 || (FigEndpointExtendedGetClassID(), !CMBaseObjectIsMemberOfClass())) {
      a2 = 0;
    }
    if (apEndpoint_SendCommand(a2, @"setSenderDisplayLatencyMs", v4)) {
LABEL_13:
    }
      APSLogErrorAt();
    CFRelease(v4);
  }
  else
  {
    APSLogErrorAt();
  }
}

uint64_t apEndpoint_SendCommand(uint64_t a1, const void *a2, const void *a3)
{
  uint64_t FigEndpoint = (const void *)FigEndpointExtendedGetFigEndpoint();
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  if (FigCFEqual())
  {
    uint64_t v7 = CMBaseObjectGetDerivedStorage();
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
    {
      APSVolumeConvertDBToSliderValue();
      LogPrintF();
    }
    if (!*(unsigned char *)(v7 + 48) && (*(unsigned char *)(v7 + 536) & 0xF) != 0)
    {
      APSVolumeConvertDBToSliderValue();
      endpointdelegate_setVolumeSliderInternal(FigEndpoint, 1, 1, v9);
    }
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = apEndpoint_sendCommandInternal(FigEndpoint, a2, a3);
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  return v8;
}

BOOL endpoint_shouldUseInactivityTimer()
{
  return CFDictionaryGetInt64() == 0;
}

uint64_t endpointdelegate_getInitialVolumeDBAndIsMuted(uint64_t a1, float *a2, float *a3, BOOL *a4)
{
  if (*(void *)(CMBaseObjectGetDerivedStorage() + 224))
  {
    APSGetFBOPropertyDouble();
    float v8 = v7;
    float v9 = v8;
    if (a3) {
      *a3 = v8;
    }
    BOOL v10 = APSGetFBOPropertyInt64() != 0;
  }
  else
  {
    BOOL v10 = 0;
    float v9 = -999.0;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (APSGetFBOPropertyInt64())
  {
    if (*(_DWORD *)(DerivedStorage + 252) == 2 && !*(unsigned char *)(DerivedStorage + 251))
    {
      int v12 = 3;
      goto LABEL_16;
    }
  }
  else
  {
    if (APSGetFBOPropertyInt64())
    {
      if (*(_DWORD *)(DerivedStorage + 252) == 2) {
        int v12 = 1;
      }
      else {
        int v12 = 3;
      }
      goto LABEL_16;
    }
    if (!APSGetFBOPropertyInt64())
    {
      if (APSGetFBOPropertyInt64())
      {
        int v12 = 35;
      }
      else if (APSGetFBOPropertyInt64())
      {
        int v12 = 1;
      }
      else
      {
        int v12 = 31;
      }
      goto LABEL_16;
    }
  }
  int v12 = 1;
LABEL_16:
  int v13 = (int)v9;
  float v14 = -20.0;
  if ((int)v9 == -999)
  {
    int v15 = 1;
  }
  else if (v13 >= -29)
  {
    int v15 = ~(v13 >> 29) & 4;
  }
  else
  {
    int v15 = 2;
    float v14 = -27.0;
  }
  if ((v15 & v12) != 0)
  {
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
  }
  else
  {
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    int v15 = 0;
    float v14 = v9;
  }
  uint64_t v16 = v15 | v12 & 0x30u;
  *a2 = v14;
  *a4 = v10;
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
  {
    APSVolumeConvertDBToSliderValue();
    LogPrintF();
  }
  return v16;
}

void endpoint_updateScreenRelatedConfiguration(const void *a1, const __CFDictionary *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  value = 0;
  uint64_t v5 = *MEMORY[0x1E4F1CF80];
  uint64_t CMBaseObject = APSenderSessionGetCMBaseObject(*(void *)(DerivedStorage + 224));
  uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  float v9 = *(void (**)(uint64_t, uint64_t, uint64_t, void **))(v8 + 48);
  if (v9) {
    v9(CMBaseObject, 0x1F26DEDC0, v5, &value);
  }
  uint64_t v10 = APSenderSessionGetCMBaseObject(*(void *)(DerivedStorage + 224));
  uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v11) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = 0;
  }
  int v13 = *(void (**)(uint64_t, uint64_t, uint64_t, CFTypeRef *))(v12 + 48);
  if (v13) {
    v13(v10, 0x1F26DEDE0, v5, &cf);
  }
  if (value)
  {
    if (cf)
    {
      CFAllocatorRef v14 = CFGetAllocator(a1);
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v14, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      CFDictionarySetValue(Mutable, @"encoderEncryptionData", value);
      CFDictionarySetValue(Mutable, @"protectionFlags", cf);
      *(void *)(DerivedStorage + 328) = Mutable;
      if (gLogCategory_APEndpoint <= 30 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
    }
  }
  if (*(void *)(DerivedStorage + 328))
  {
    if (gLogCategory_APEndpoint <= 50)
    {
      if (gLogCategory_APEndpoint == -1 && !_LogCategory_Initialize()) {
        goto LABEL_31;
      }
      goto LABEL_20;
    }
LABEL_40:
    *(unsigned char *)(DerivedStorage + 281) = 0;
    goto LABEL_41;
  }
  if (a2 && CFDictionaryContainsKey(a2, @"ScreenSource"))
  {
    if (gLogCategory_APEndpoint > 50) {
      goto LABEL_40;
    }
    if (gLogCategory_APEndpoint == -1 && !_LogCategory_Initialize()) {
      goto LABEL_31;
    }
LABEL_20:
    LogPrintF();
LABEL_31:
    BOOL v16 = 0;
    goto LABEL_32;
  }
  if (FigCFDictionaryGetValue() == *MEMORY[0x1E4F1CFD0])
  {
    if (gLogCategory_APEndpoint > 50) {
      goto LABEL_40;
    }
    if (gLogCategory_APEndpoint == -1 && !_LogCategory_Initialize()) {
      goto LABEL_31;
    }
    goto LABEL_20;
  }
  if (!APSSettingsIsFeatureEnabled() || !APSHasUDPMirroringSenderSupport()) {
    goto LABEL_31;
  }
  BOOL v16 = APSGetFBOPropertyInt64() != 0;
LABEL_32:
  int v17 = gLogCategory_APEndpoint;
  *(unsigned char *)(DerivedStorage + 281) = v16;
  if (v17 <= 30 && (v17 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
LABEL_41:
  if (value) {
    CFRelease(value);
  }
  if (cf) {
    CFRelease(cf);
  }
}

BOOL endpoint_isMediaPresentationModeAvailable()
{
  if (!*(void *)(CMBaseObjectGetDerivedStorage() + 480) && !APSGetFBOPropertyInt64()) {
    APSGetFBOPropertyInt64();
  }
  int IntWithDefault = APSSettingsGetIntWithDefault();
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  return IntWithDefault != 0;
}

uint64_t endpoint_setupStreams(const void *a1, char a2, uint64_t a3, const __CFDictionary *a4, uint64_t *a5)
{
  CFTypeRef v97 = 0;
  uint64_t v98 = 0;
  int v96 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v95 = 0;
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  if (!a3)
  {
    CFDictionaryRef v11 = *(const __CFDictionary **)(DerivedStorage + 168);
    if (v11)
    {
      CFDictionaryApplyFunction(v11, (CFDictionaryApplierFunction)endpoint_dissociateStreamsDictionaryEntry, 0);
      uint64_t v12 = *(const void **)(DerivedStorage + 168);
      if (v12)
      {
        CFRelease(v12);
        *(void *)(DerivedStorage + 168) = 0;
      }
    }
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    *(void *)(DerivedStorage + 168) = Mutable;
    if (!Mutable)
    {
      APSLogErrorAt();
      uint64_t v21 = 4294950575;
      goto LABEL_107;
    }
  }
  uint64_t SupportedFeatures = endpoint_getSupportedFeatures((uint64_t)a1, &v98);
  if (SupportedFeatures)
  {
    uint64_t v21 = SupportedFeatures;
    goto LABEL_20;
  }
  uint64_t v15 = *(void *)(DerivedStorage + 40);
  uint64_t v16 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v16) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = 0;
  }
  uint64_t v18 = *(uint64_t (**)(uint64_t, CFTypeRef *))(v17 + 8);
  if (!v18)
  {
    uint64_t v21 = 4294954514;
    goto LABEL_20;
  }
  uint64_t v19 = v18(v15, &v97);
  if (v19)
  {
    uint64_t v21 = v19;
    goto LABEL_20;
  }
  if (!*(void *)(DerivedStorage + 216))
  {
LABEL_141:
    APSLogErrorAt();
    uint64_t v21 = 4294949690;
    goto LABEL_107;
  }
  CFTypeRef v85 = a5;
  if ((a2 & 2) != 0)
  {
    int HasFeature = APSFeaturesHasFeature();
    BOOL v20 = HasFeature == 0;
    BOOL v86 = HasFeature != 0;
  }
  else
  {
    BOOL v86 = 0;
    BOOL v20 = 1;
  }
  BOOL v23 = (v98 & 8) == 0 || (a2 & 8) == 0;
  char v24 = a3;
  if ((a2 & 0x20) != 0) {
    unsigned int v25 = (v98 >> 5) & 1;
  }
  else {
    unsigned int v25 = 0;
  }
  uint64_t Int64 = CFDictionaryGetInt64();
  BOOL v84 = Int64 != 0;
  if (Int64) {
    int v27 = 1;
  }
  else {
    int v27 = v25;
  }
  int v90 = v27;
  BOOL v28 = !v20;
  if ((a3 & 2) != 0) {
    BOOL v28 = 0;
  }
  CFDictionaryRef v89 = a4;
  BOOL v88 = v23;
  if (v28 || ((v23 | (a3 >> 3)) & 1) == 0 || (a3 & 0x20) == 0 && v90)
  {
    CFAllocatorRef v29 = (void *)CMBaseObjectGetDerivedStorage();
    value[0] = 0;
    uint64_t v99 = 0;
    CFAllocatorRef v100 = 0;
    uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(v29[5]);
    uint64_t v31 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v31) {
      uint64_t v32 = v31;
    }
    else {
      uint64_t v32 = 0;
    }
    uint64_t v33 = *(uint64_t (**)(uint64_t, __CFString *, void, void **))(v32 + 48);
    if (v33)
    {
      CFAllocatorRef v34 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
      uint64_t v35 = v33(CMBaseObject, @"SupportedAudioFormats", *MEMORY[0x1E4F1CF80], value);
      if (v35)
      {
        uint64_t v21 = v35;
        char v39 = a3;
      }
      else
      {
        uint64_t v36 = APEndpointDescriptionGetCMBaseObject(v29[5]);
        uint64_t v37 = *(void *)(CMBaseObjectGetVTable() + 8);
        if (v37) {
          uint64_t v38 = v37;
        }
        else {
          uint64_t v38 = 0;
        }
        uint64_t v40 = *(uint64_t (**)(uint64_t, __CFString *, const __CFAllocator *, const void **))(v38 + 48);
        if (v40)
        {
          uint64_t v41 = v40(v36, @"IsConnectedOverUSB", v34, &v100);
          if (v41)
          {
            uint64_t v21 = v41;
            char v39 = a3;
          }
          else
          {
            uint64_t v42 = APSenderSessionGetCMBaseObject(v29[28]);
            uint64_t v43 = *(void *)(CMBaseObjectGetVTable() + 8);
            if (v43) {
              uint64_t v44 = v43;
            }
            else {
              uint64_t v44 = 0;
            }
            uint64_t v45 = *(uint64_t (**)(uint64_t, __CFString *, const __CFAllocator *, const void **))(v44 + 48);
            if (v45)
            {
              char v39 = a3;
              uint64_t v46 = v45(v42, @"ControlConnectionInterfaceLatencyHint", v34, &v99);
              if (!v46)
              {
                unsigned int v47 = CFDictionaryCreateMutable(v34, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
                CFTypeID v48 = v47;
                if (v47)
                {
                  CFDictionarySetValue(v47, @"SupportedAudioFormats", value[0]);
                  CFDictionarySetValue(v48, @"IsConnectedOverUSB", v100);
                  uint64_t v49 = APSGetFBOPropertyInt64();
                  uint64_t v83 = (const void *)*MEMORY[0x1E4F1CFD0];
                  uint64_t v82 = (const void *)*MEMORY[0x1E4F1CFC8];
                  if (v49) {
                    uint64_t v50 = (const void *)*MEMORY[0x1E4F1CFD0];
                  }
                  else {
                    uint64_t v50 = (const void *)*MEMORY[0x1E4F1CFC8];
                  }
                  CFDictionarySetValue(v48, @"IsCarPlay", v50);
                  CFDictionarySetValue(v48, @"ConnectionLatencyHint", v99);
                  uint64_t v81 = v29[5];
                  uint64_t v51 = *(void *)(CMBaseObjectGetVTable() + 16);
                  if (v51) {
                    uint64_t v52 = v51;
                  }
                  else {
                    uint64_t v52 = 0;
                  }
                  uint64_t v77 = *(unsigned int (**)(uint64_t, uint64_t))(v52 + 16);
                  uint64_t v78 = v83;
                  if (!v77 || !v77(v81, 11)) {
                    uint64_t v78 = v82;
                  }
                  CFDictionarySetValue(v48, @"SupportRedundancyAudio", v78);
                  uint64_t v79 = CFDictionaryCreateMutable(v34, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
                  unsigned int v53 = v79;
                  if (v79)
                  {
                    uint64_t v80 = (const void *)v29[27];
                    if (v80)
                    {
                      CFDictionarySetValue(v79, @"NetworkClock", v80);
                      CFDictionarySetValue(v53, @"AudioEngineOptions", v48);
                      a4 = v89;
                      uint64_t v21 = APEndpointCopyFromActivationOptionsOrCreateSharedContext(v89, a2, (uint64_t)v53, 0, 0, &v96);
                      if (v21) {
                        APSLogErrorAt();
                      }
LABEL_63:
                      if (value[0]) {
                        CFRelease(value[0]);
                      }
                      if (v100) {
                        CFRelease(v100);
                      }
                      if (v99) {
                        CFRelease(v99);
                      }
                      if (v48) {
                        CFRelease(v48);
                      }
                      if (v53) {
                        CFRelease(v53);
                      }
                      char v24 = v39;
                      BOOL v23 = v88;
                      if (v21) {
                        goto LABEL_20;
                      }
                      goto LABEL_74;
                    }
                    APSLogErrorAt();
                    uint64_t v21 = 4294949690;
LABEL_62:
                    a4 = v89;
                    goto LABEL_63;
                  }
                  APSLogErrorAt();
                }
                else
                {
                  APSLogErrorAt();
                  unsigned int v53 = 0;
                }
                uint64_t v21 = 4294950575;
                goto LABEL_62;
              }
              uint64_t v21 = v46;
            }
            else
            {
              char v39 = a3;
              uint64_t v21 = 4294954514;
            }
          }
        }
        else
        {
          char v39 = a3;
          uint64_t v21 = 4294954514;
        }
      }
    }
    else
    {
      char v39 = a3;
      uint64_t v21 = 4294954514;
    }
    APSLogErrorAt();
    CFTypeID v48 = 0;
    unsigned int v53 = 0;
    goto LABEL_62;
  }
LABEL_74:
  if (v86 && !v23)
  {
    BOOL v54 = *(unsigned char *)(DerivedStorage + 249) == 0;
    if (!v20) {
      goto LABEL_76;
    }
LABEL_85:
    if ((a3 & 2) != 0) {
      markStreamForRemoval(&v95, (void *)*MEMORY[0x1E4F21468], *(CFDictionaryRef *)(DerivedStorage + 168));
    }
    uint64_t v55 = 0;
    if (!v23) {
      goto LABEL_78;
    }
LABEL_88:
    if ((v24 & 8) != 0) {
      markStreamForRemoval(&v95, (void *)*MEMORY[0x1E4F21470], *(CFDictionaryRef *)(DerivedStorage + 168));
    }
    uint64_t v56 = v85;
    goto LABEL_91;
  }
  BOOL v54 = 0;
  if (v20) {
    goto LABEL_85;
  }
LABEL_76:
  if ((a3 & 2) == 0)
  {
    char v87 = v24;
    uint64_t v73 = (const void *)*MEMORY[0x1E4F21468];
    CFDictionaryRef v74 = (const __CFDictionary *)CFDictionaryGetValue(v96, (const void *)*MEMORY[0x1E4F21468]);
    if (!v74) {
      goto LABEL_141;
    }
    v75 = CFDictionaryGetValue(v74, @"AudioEngineVendor");
    CFDictionaryGetInt64();
    uint64_t v76 = endpoint_setupAudioStream(a1, v54, 0, 0, v75, v73);
    if (v76)
    {
      uint64_t v21 = v76;
      goto LABEL_20;
    }
    uint64_t v55 = 2;
    char v24 = v87;
    if (!v88) {
      goto LABEL_78;
    }
    goto LABEL_88;
  }
  uint64_t v55 = 2;
  if (v23) {
    goto LABEL_88;
  }
LABEL_78:
  uint64_t v56 = v85;
  if ((v24 & 8) == 0)
  {
    int v57 = (const void *)*MEMORY[0x1E4F21470];
    CFDictionaryRef v58 = (const __CFDictionary *)CFDictionaryGetValue(v96, (const void *)*MEMORY[0x1E4F21470]);
    if (!v58) {
      goto LABEL_141;
    }
    unint64_t v59 = CFDictionaryGetValue(v58, @"AudioEngineVendor");
    CFDictionaryGetInt64();
    uint64_t v60 = 0;
    if (v54) {
      uint64_t v60 = CFDictionaryGetValue(*(CFDictionaryRef *)(DerivedStorage + 168), (const void *)*MEMORY[0x1E4F21468]);
    }
    uint64_t v61 = endpoint_setupAudioStream(a1, v54, v60, 0, v59, v57);
    a4 = v89;
    if (v61)
    {
      uint64_t v21 = v61;
      goto LABEL_20;
    }
  }
  v55 |= 8uLL;
LABEL_91:
  if (v90)
  {
    if ((v24 & 0x20) != 0)
    {
LABEL_95:
      v55 |= 0x20uLL;
      goto LABEL_98;
    }
    uint64_t v62 = (const void *)*MEMORY[0x1E4F21478];
    CFDictionaryRef v63 = (const __CFDictionary *)CFDictionaryGetValue(v96, (const void *)*MEMORY[0x1E4F21478]);
    if (v63)
    {
      CFDictionaryRef v64 = v63;
      CFDictionaryGetInt64();
      uint64_t v65 = CFDictionaryGetValue(v64, @"AudioEngineVendor");
      uint64_t v66 = endpoint_setupAudioStream(a1, 0, 0, v84, v65, v62);
      if (!v66) {
        goto LABEL_95;
      }
      uint64_t v21 = v66;
LABEL_20:
      APSLogErrorAt();
      goto LABEL_107;
    }
    goto LABEL_141;
  }
  if ((v24 & 0x20) != 0) {
    markStreamForRemoval(&v95, (void *)*MEMORY[0x1E4F21478], *(CFDictionaryRef *)(DerivedStorage + 168));
  }
LABEL_98:
  if ((a2 & 1) == 0 || !APSFeaturesHasFeature())
  {
    if (a3) {
      markStreamForRemoval(&v95, (void *)*MEMORY[0x1E4F21488], *(CFDictionaryRef *)(DerivedStorage + 168));
    }
    goto LABEL_105;
  }
  if ((a3 & 1) == 0)
  {
    uint64_t v67 = endpoint_setupScreenStream(a1, a4);
    if (v67)
    {
      uint64_t v21 = v67;
      goto LABEL_20;
    }
  }
  v55 |= 1uLL;
LABEL_105:
  uint64_t v21 = 0;
  if (v56) {
    *uint64_t v56 = v55 | v98 & a2 & 4 | v98 & a2 & 0x10;
  }
LABEL_107:
  uint64_t v68 = v95;
  if (v95)
  {
    long long v93 = 0u;
    long long v94 = 0u;
    *(_OWORD *)value = 0u;
    long long v92 = 0u;
    if (!a1 || (v69 = CFRetain(a1), uint64_t v68 = v95, value[0] = (void *)v69, v95)) {
      uint64_t v68 = (__CFDictionary *)CFRetain(v68);
    }
    *(void *)&long long v92 = v68;
    CFTypeRef v70 = *(CFTypeRef *)(DerivedStorage + 296);
    if (v70) {
      CFTypeRef v70 = CFRetain(v70);
    }
    *((void *)&v93 + 1) = v70;
    CFTypeRef v71 = *(CFTypeRef *)(DerivedStorage + 304);
    if (v71) {
      CFTypeRef v71 = CFRetain(v71);
    }
    *(void *)&long long v94 = v71;
    APSDispatchAsyncFHelper();
  }
  if (v97) {
    CFRelease(v97);
  }
  if (v96) {
    CFRelease(v96);
  }
  if (v95) {
    CFRelease(v95);
  }
  return v21;
}

uint64_t endpoint_postPerformanceReport()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpoint <= 40)
  {
    if (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
    if (gLogCategory_APEndpoint <= 40)
    {
      if (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()) {
        LogPrintF();
      }
      if (gLogCategory_APEndpoint <= 40)
      {
        if (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()) {
          LogPrintF();
        }
        if (gLogCategory_APEndpoint <= 40)
        {
          if (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()) {
            LogPrintF();
          }
          if (gLogCategory_APEndpoint <= 40
            && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
        }
      }
    }
  }
  endpoint_logEventInterval(*(void *)(DerivedStorage + 288), 268369920, 268369921, (uint64_t)"Total AirPlay Contribution (Endpoint Activate Start To Endpoint Activate Complete)");
  endpoint_logEvent(*(void *)(DerivedStorage + 288), 268369920, (uint64_t)"EndpointActivate");
  endpoint_logEvent(*(void *)(DerivedStorage + 288), 150994945, (uint64_t)"ResolveDNSTime");
  if (gLogCategory_APEndpoint <= 40)
  {
    if (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
    if (gLogCategory_APEndpoint <= 40)
    {
      if (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()) {
        LogPrintF();
      }
      if (gLogCategory_APEndpoint <= 40 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
    }
  }
  endpoint_logEvent(*(void *)(DerivedStorage + 112), 268431360, (uint64_t)"PresenceBrowsing_Start");
  endpoint_logEvent(*(void *)(DerivedStorage + 112), 268431361, (uint64_t)"DetailedNonP2PBrowsing_Start");
  endpoint_logEvent(*(void *)(DerivedStorage + 112), 268431362, (uint64_t)"DetailedBrowsing_Start");
  endpoint_logTransportDiscoveryDurationIfEventPresent();
  endpoint_logTransportDiscoveryDurationIfEventPresent();
  endpoint_logTransportDiscoveryDurationIfEventPresent();
  endpoint_logTransportDiscoveryDurationIfEventPresent();
  endpoint_logTransportDiscoveryDurationIfEventPresent();
  endpoint_logTransportDiscoveryDurationIfEventPresent();
  endpoint_logTransportDiscoveryDurationIfEventPresent();
  endpoint_logTransportDiscoveryDurationIfEventPresent();
  endpoint_logTransportDiscoveryDurationIfEventPresent();
  endpoint_logTransportDiscoveryDurationIfEventPresent();
  endpoint_logTransportDiscoveryDurationIfEventPresent();
  endpoint_logTransportDiscoveryDurationIfEventPresent();
  endpoint_logTransportDiscoveryDurationIfEventPresent();
  endpoint_logTransportDiscoveryDurationIfEventPresent();
  endpoint_logTransportDiscoveryDurationIfEventPresent();
  endpoint_logTransportDiscoveryDurationIfEventPresent();
  if (gLogCategory_APEndpoint <= 40)
  {
    if (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
    if (gLogCategory_APEndpoint <= 40)
    {
      if (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()) {
        LogPrintF();
      }
      if (gLogCategory_APEndpoint <= 40 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
    }
  }
  endpoint_logEvent(*(void *)(DerivedStorage + 288), 150994944, (uint64_t)"QuerySRVTime");
  endpoint_logEvent(*(void *)(DerivedStorage + 288), 150994946, (uint64_t)"ControlStreamConnectingTime");
  endpoint_logEvent(*(void *)(DerivedStorage + 288), 150994948, (uint64_t)"ControlStreamConnectedTime");
  endpoint_logEvent(*(void *)(DerivedStorage + 288), 250609664, (uint64_t)"EndpointConnectionStartTime");
  endpoint_logEvent(*(void *)(DerivedStorage + 288), 250609666, (uint64_t)"EndpointGetInfoCompleteTime");
  endpoint_logEventInterval(*(void *)(DerivedStorage + 288), 250609665, 250609666, (uint64_t)"INFOTimeMs");
  CMBaseObjectGetDerivedStorage();
  APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursive();
  APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursive();
  APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursive();
  if (gLogCategory_APEndpoint <= 40 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  endpoint_logEventInterval(*(void *)(DerivedStorage + 288), 150994946, 150994948, (uint64_t)"ConnectTimeMs");
  endpoint_logEventInterval(*(void *)(DerivedStorage + 288), 250609677, 250609678, (uint64_t)"EndpointAUTHTimeMs");
  uint64_t result = endpoint_logEventInterval(*(void *)(DerivedStorage + 288), 250609675, 250609676, (uint64_t)"EndpointRECORDTimeMs");
  if (gLogCategory_APEndpoint <= 40)
  {
    if (gLogCategory_APEndpoint != -1 || (uint64_t result = _LogCategory_Initialize(), result))
    {
      return LogPrintF();
    }
  }
  return result;
}

void endpoint_postInterruptingSessionStateDidChangeNotification(uint64_t a1, int a2)
{
  CMBaseObjectGetDerivedStorage();
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    CFMutableDictionaryRef v4 = Mutable;
    uint64_t v5 = (const void **)MEMORY[0x1E4F1CFC8];
    if (a2) {
      uint64_t v5 = (const void **)MEMORY[0x1E4F1CFD0];
    }
    CFDictionarySetValue(Mutable, @"IsInterruptingSessionActive", *v5);
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
    CFRelease(v4);
  }
  else
  {
    APSLogErrorAt();
  }
}

uint64_t endpoint_updateCurrentVolumeControlType()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  char v1 = *(unsigned char *)(DerivedStorage + 144);
  if ((*(_DWORD *)(DerivedStorage + 500) | 4) != 4
    && endpoint_isVideoPlaybackSessionActive()
    && (v1 & 1) != 0)
  {
    int v2 = 0;
  }
  else
  {
    int v2 = APSVolumeControlTypeFromEx();
  }
  uint64_t result = *(unsigned int *)(DerivedStorage + 496);
  if (v2 != result)
  {
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
    {
      APSGetAPVolumeControlTypeName();
      APSGetAPVolumeControlTypeName();
      LogPrintF();
    }
    *(_DWORD *)(DerivedStorage + 496) = v2;
    endpoint_updateIsVolumeAndMuteControlSupported();
    CMNotificationCenterGetDefaultLocalCenter();
    return FigDispatchAsyncPostNotification();
  }
  return result;
}

uint64_t endpoint_updateIsVolumeAndMuteControlSupported()
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 152) == 2 && *(_DWORD *)(result + 496) != 0;
  if (*(unsigned __int8 *)(result + 504) != v2)
  {
    *(unsigned char *)(result + 504) = v2;
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    CMNotificationCenterGetDefaultLocalCenter();
    uint64_t result = FigDispatchAsyncPostNotification();
  }
  if (v2) {
    int v3 = (*(_DWORD *)(v1 + 496) - 3) < 0xFFFFFFFE;
  }
  else {
    int v3 = 0;
  }
  if (*(unsigned __int8 *)(v1 + 512) != v3)
  {
    *(unsigned char *)(v1 + 512) = v3;
    if (gLogCategory_APEndpoint <= 50)
    {
      if (gLogCategory_APEndpoint != -1 || (uint64_t result = _LogCategory_Initialize(), result)) {
        uint64_t result = LogPrintF();
      }
    }
    if (*(unsigned char *)(v1 + 51))
    {
      CMNotificationCenterGetDefaultLocalCenter();
      return FigDispatchAsyncPostNotification();
    }
  }
  return result;
}

void endpoint_updateVideoPlaybackIsActive(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int isVideoPlaybackSessionActive = endpoint_isVideoPlaybackSessionActive();
  if (*(unsigned __int8 *)(DerivedStorage + 491) != isVideoPlaybackSessionActive)
  {
    *(unsigned char *)(DerivedStorage + 491) = isVideoPlaybackSessionActive;
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    CFAllocatorRef v4 = CFGetAllocator(a1);
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v4, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (Mutable)
    {
      CFMutableDictionaryRef v6 = Mutable;
      FigCFDictionarySetInt64();
      CMNotificationCenterGetDefaultLocalCenter();
      FigDispatchAsyncPostNotification();
      CFRelease(v6);
    }
    else
    {
      APSLogErrorAt();
      FigSignalErrorAt();
    }
  }
}

void __endpoint_activateInternal_block_invoke(uint64_t a1)
{
}

uint64_t endpoint_removeAPEndpointManagerNotificationsListenerIfNeeded()
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  if (!*(unsigned char *)(result + 48))
  {
    uint64_t v1 = result;
    if (*(void *)(result + 32))
    {
      CMNotificationCenterGetDefaultLocalCenter();
      FigNotificationCenterRemoveWeakListener();
      CMNotificationCenterGetDefaultLocalCenter();
      uint64_t result = FigNotificationCenterRemoveWeakListener();
      if (*(_DWORD *)(v1 + 104) == 7)
      {
        CMNotificationCenterGetDefaultLocalCenter();
        return FigNotificationCenterRemoveWeakListener();
      }
    }
  }
  return result;
}

uint64_t endpoint_removeHDMILatencyNotificationListenerIfNeeded()
{
  uint64_t result = endpoint_isInLocalClusterOfAppleTV();
  if (result)
  {
    CMNotificationCenterGetDefaultLocalCenter();
    return FigNotificationCenterRemoveWeakListener();
  }
  return result;
}

uint64_t endpoint_stopListeningToSenderSessionAndStreamsNotifications(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
  }
  return FigCFDictionaryApplyBlock();
}

void endpoint_deregisterWithBrowserController(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  if (*(void *)(DerivedStorage + 24))
  {
    uint64_t v3 = *(void *)(DerivedStorage + 40);
    CFAllocatorRef v4 = CFGetAllocator(a1);
    uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(v3);
    uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v6) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 0;
    }
    uint64_t v8 = *(void (**)(uint64_t, __CFString *, CFAllocatorRef, CFTypeRef *))(v7 + 48);
    if (v8)
    {
      v8(CMBaseObject, @"TransportDevice", v4, &cf);
      if (cf)
      {
        APBrowserControllerDeregisterEndpoint();
        if (cf) {
          CFRelease(cf);
        }
      }
    }
  }
}

void endpoint_deactivateInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v3 = dispatch_semaphore_create(0);
  long long v42 = 0u;
  long long v43 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  if (*(_DWORD *)(a1 + 68))
  {
    APSLogErrorAt();
    unsigned int v17 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    if (*(void *)(a1 + 32))
    {
      if (introspector_getCollectionOfActiveEndpoints_once != -1) {
        dispatch_once(&introspector_getCollectionOfActiveEndpoints_once, &__block_literal_global_37);
      }
      if (introspector_getCollectionOfActiveEndpoints_coll)
      {
        CFAllocatorRef v4 = *(NSObject **)introspector_getCollectionOfActiveEndpoints_coll;
        block[0] = MEMORY[0x1E4F143A8];
        block[1] = 0x40000000;
        block[2] = __endpoint_deactivateInternal_block_invoke;
        block[3] = &__block_descriptor_tmp_507;
        block[4] = introspector_getCollectionOfActiveEndpoints_coll;
        block[5] = a1;
        dispatch_sync(v4, block);
      }
      if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      uint64_t v5 = *(NSObject **)(DerivedStorage + 608);
      if (v5)
      {
        dispatch_source_cancel(*(dispatch_source_t *)(DerivedStorage + 608));
        dispatch_release(v5);
        *(void *)(DerivedStorage + 608) = 0;
      }
      if (*(unsigned char *)(a1 + 72))
      {
        uint64_t v38 = 0;
        long long v37 = 0u;
        long long v36 = 0u;
        long long v35 = 0u;
        if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
          LogPrintF();
        }
        CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
        if (!Mutable)
        {
          APSLogErrorAt();
          unsigned int v17 = -16721;
          goto LABEL_43;
        }
        CFMutableDictionaryRef v7 = Mutable;
        CFDictionarySetDouble();
        CFDictionarySetInt64();
        CFDictionaryRef theDict = (CFDictionaryRef)CFRetain(*(CFTypeRef *)a1);
        *(void *)&long long v36 = CFRetain(@"fadeAudio");
        *((void *)&v36 + 1) = CFRetain(v7);
        CFTypeRef v8 = *(CFTypeRef *)(a1 + 32);
        if (v8) {
          CFTypeRef v8 = CFRetain(v8);
        }
        long long v37 = 0uLL;
        *((void *)&v35 + 1) = v8;
        LODWORD(v38) = 0;
        apEndpoint_sendCommand((uint64_t)&theDict);
        usleep(1000000 * *(double *)(a1 + 80));
        CFRelease(v7);
      }
      CFTypeRef v9 = *(CFTypeRef *)a1;
      if (*(void *)a1) {
        CFTypeRef v9 = CFRetain(v9);
      }
      *(void *)&long long v40 = v9;
      CFTypeRef v10 = *(CFTypeRef *)(a1 + 32);
      if (v10) {
        CFTypeRef v10 = CFRetain(v10);
      }
      *((void *)&v40 + 1) = v10;
      CFTypeRef v11 = *(CFTypeRef *)(a1 + 40);
      if (v11) {
        CFTypeRef v11 = CFRetain(v11);
      }
      *(void *)&long long v41 = v11;
      CFTypeRef v12 = *(CFTypeRef *)(a1 + 96);
      if (v12) {
        CFTypeRef v12 = CFRetain(v12);
      }
      *((void *)&v41 + 1) = v12;
      CFTypeRef v13 = *(CFTypeRef *)(a1 + 104);
      if (v13) {
        CFTypeRef v13 = CFRetain(v13);
      }
      *(void *)&long long v42 = v13;
      CFTypeRef v14 = *(CFTypeRef *)(a1 + 112);
      if (v14) {
        CFTypeRef v14 = CFRetain(v14);
      }
      *((void *)&v42 + 1) = v14;
      CFTypeRef v15 = *(CFTypeRef *)(a1 + 120);
      if (v15) {
        CFTypeRef v15 = CFRetain(v15);
      }
      *(void *)&long long v43 = v15;
      *((void *)&v43 + 1) = v3;
      dispatch_retain(v3);
      APSDispatchAsyncFHelper();
      dispatch_time_t v16 = dispatch_time(0, 4000000000);
      if (dispatch_semaphore_wait(v3, v16)
        && gLogCategory_APEndpoint <= 40
        && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      endpoint_stopMediaRemoteAndMetadataServices(*(void *)a1, *(void *)(a1 + 88));
    }
    else
    {
      APSLogErrorAt();
    }
    unsigned int v17 = 0;
  }
LABEL_43:
  if (*(void *)(a1 + 32))
  {
    if (*(void *)(a1 + 112))
    {
      APSGetCPULoadAverage();
      CFDictionarySetDouble();
      CFDictionarySetInt64();
      APSRTCReportingAgentSendEvent();
      if (gLogCategory_APEndpoint <= 30 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
    }
  }
  uint64_t v18 = *(void *)(a1 + 128);
  if (v18)
  {
    CFDictionaryRef theDict = *(CFDictionaryRef *)a1;
    long long v35 = *(_OWORD *)(a1 + 48);
    *((void *)&v36 + 1) = v18;
    *(void *)&long long v36 = v17;
    *(void *)&long long v37 = *(void *)(a1 + 136);
    CFRetain(theDict);
    APSDispatchAsyncFHelper();
  }
  if (!v17 && !FigCFEqual())
  {
    CFDictionaryRef theDict = 0;
    CFAllocatorRef v19 = CFGetAllocator(*(CFTypeRef *)a1);
    APEndpointCreateEndpointActivationNotificationPayload(v19, *(void *)(a1 + 56), *(void *)(a1 + 48), &theDict);
    CFAllocatorRef v20 = CFGetAllocator(*(CFTypeRef *)a1);
    CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy(v20, 0, theDict);
    CFAllocatorRef v22 = MutableCopy;
    BOOL v23 = (const void **)MEMORY[0x1E4F1CFD0];
    if (!*(unsigned char *)(a1 + 64)) {
      BOOL v23 = (const void **)MEMORY[0x1E4F1CFC8];
    }
    CFDictionarySetValue(MutableCopy, @"WasAutoconnected", *v23);
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
    if (theDict) {
      CFRelease(theDict);
    }
    if (v22) {
      CFRelease(v22);
    }
  }
  if (*(unsigned char *)(a1 + 65)) {
    endpoint_postInterruptingSessionStateDidChangeNotification(*(void *)a1, 0);
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  endpoint_postIsInUseDidChangeNotification(*(void *)a1, *(unsigned __int8 *)(a1 + 64));
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  char v24 = *(NSObject **)(DerivedStorage + 616);
  if (v24)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(DerivedStorage + 616));
    dispatch_release(v24);
    *(void *)(DerivedStorage + 616) = 0;
  }
  CFRelease(*(CFTypeRef *)a1);
  unsigned int v25 = *(const void **)(a1 + 8);
  if (v25) {
    CFRelease(v25);
  }
  float v26 = *(const void **)(a1 + 32);
  if (v26) {
    CFRelease(v26);
  }
  int v27 = *(const void **)(a1 + 40);
  if (v27) {
    CFRelease(v27);
  }
  BOOL v28 = *(const void **)(a1 + 24);
  if (v28) {
    CFRelease(v28);
  }
  CFAllocatorRef v29 = *(const void **)(a1 + 88);
  if (v29) {
    CFRelease(v29);
  }
  CFAllocatorRef v30 = *(const void **)(a1 + 96);
  if (v30) {
    CFRelease(v30);
  }
  uint64_t v31 = *(const void **)(a1 + 104);
  if (v31) {
    CFRelease(v31);
  }
  uint64_t v32 = *(const void **)(a1 + 112);
  if (v32) {
    CFRelease(v32);
  }
  uint64_t v33 = *(const void **)(a1 + 120);
  if (v33) {
    CFRelease(v33);
  }
  dispatch_release(v3);
}

void endpoint_postStreamsChangedNotification(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  CFAllocatorRef v8 = CFGetAllocator(a1);
  if (APEndpointCreateStreamsChangedNotificationPayload(v8, a2, a3, a4, (CFMutableDictionaryRef *)&cf))
  {
    APSLogErrorAt();
  }
  else
  {
    if (gLogCategory_APEndpoint <= 30 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
  }
  if (cf) {
    CFRelease(cf);
  }
}

void endpoint_createAudioHALDevices(uint64_t *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  if (a1[1] == *(void *)(DerivedStorage + 136) && *(_DWORD *)(DerivedStorage + 152) == 2)
  {
    if (!*(unsigned char *)(DerivedStorage + 249))
    {
      uint64_t v3 = a1[2];
      if ((v3 & 2) != 0)
      {
        endpoint_createAudioHALDevice(*a1, (const void *)*MEMORY[0x1E4F21468]);
        uint64_t v3 = a1[2];
      }
      if ((v3 & 0x20) != 0) {
        endpoint_createAudioHALDevice(*a1, (const void *)*MEMORY[0x1E4F21478]);
      }
    }
  }
  else if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  CFAllocatorRef v4 = (const void *)*a1;
  CFRelease(v4);
}

void endpoint_authHandlingComplete(const void *a1, const void *a2, int a3, void *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a4)
  {
    uint64_t v9 = DerivedStorage;
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    MEMORY[0x1D25EB370](*(void *)(v9 + 120));
    if (*(void *)a4 == *(void *)(v9 + 136) && *((_DWORD *)a4 + 4) == *(_DWORD *)(v9 + 152))
    {
      if (a2 && !a3) {
        endpoint_setAuthorizationString((uint64_t)a1, a2);
      }
      *(_DWORD *)(v9 + 264) = a3;
    }
    else
    {
      *(_DWORD *)(v9 + 264) = -17604;
      if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
    }
    MEMORY[0x1D25EB390](*(void *)(v9 + 120));
    dispatch_semaphore_signal(*((dispatch_semaphore_t *)a4 + 3));
    dispatch_release(*((dispatch_object_t *)a4 + 3));
  }
  else
  {
    APSLogErrorAt();
  }
  free(a4);
  CFRelease(a1);
}

void endpoint_callDelegateHandleAuthRequired(uint64_t a1)
{
  (*(void (**)(void, void, void, void, void, void, void))(a1 + 8))(*(void *)a1, 0, *(void *)(a1 + 32), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 40), *(void *)(a1 + 48));
  CFRelease(*(CFTypeRef *)a1);
  CFRelease(*(CFTypeRef *)(a1 + 24));
  int v2 = *(const void **)(a1 + 16);
  if (v2)
  {
    CFRelease(v2);
  }
}

BOOL endpoint_isAudioTimelineEstablished()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  CFDictionaryRef v1 = *(const __CFDictionary **)(DerivedStorage + 168);
  if (!v1) {
    goto LABEL_7;
  }
  if (!CFDictionaryGetValue(v1, (const void *)*MEMORY[0x1E4F21468]) || !APSGetFBOPropertyInt64())
  {
    if (CFDictionaryGetValue(*(CFDictionaryRef *)(DerivedStorage + 168), (const void *)*MEMORY[0x1E4F21470]))
    {
      BOOL v2 = APSGetFBOPropertyInt64() != 0;
      goto LABEL_8;
    }
LABEL_7:
    BOOL v2 = 0;
    goto LABEL_8;
  }
  BOOL v2 = 1;
LABEL_8:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  return v2;
}

uint64_t endpoint_getCurrentRTPTime@<X0>(CMTime *a1@<X8>)
{
  int v8 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v3 = MEMORY[0x1E4F1F9F8];
  *(_OWORD *)&a1->value = *MEMORY[0x1E4F1F9F8];
  a1->epoch = *(void *)(v3 + 16);
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  if (*(_DWORD *)(DerivedStorage + 152) == 2)
  {
    int Value = CFDictionaryGetValue(*(CFDictionaryRef *)(DerivedStorage + 168), (const void *)*MEMORY[0x1E4F21468]);
    endpoint_getCurrentRTPTimeFromStream((uint64_t)Value, &v8, a1);
    if (!a1->value)
    {
      uint64_t v5 = CFDictionaryGetValue(*(CFDictionaryRef *)(DerivedStorage + 168), (const void *)*MEMORY[0x1E4F21470]);
      endpoint_getCurrentRTPTimeFromStream((uint64_t)v5, &v8, &v7);
      *a1 = v7;
    }
  }
  return MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
}

void endpoint_getCurrentRTPTimeFromStream(uint64_t a1@<X0>, int *a2@<X1>, CMTime *a3@<X8>)
{
  uint64_t v5 = MEMORY[0x1E4F1F9F8];
  *(_OWORD *)&a3->value = *MEMORY[0x1E4F1F9F8];
  a3->epoch = *(void *)(v5 + 16);
  CFTypeRef cf = 0;
  CFDictionaryRef dictionaryRepresentation = 0;
  if (!a1) {
    goto LABEL_25;
  }
  uint64_t CMBaseObject = FigEndpointStreamGetCMBaseObject();
  uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = *(uint64_t (**)(uint64_t, __CFString *, void, CFTypeRef *))(v8 + 48);
  if (!v9)
  {
    int v16 = -12782;
LABEL_17:
    APSLogErrorAt();
    goto LABEL_18;
  }
  uint64_t v10 = *MEMORY[0x1E4F1CF80];
  int v11 = v9(CMBaseObject, @"HoseRegistrar", *MEMORY[0x1E4F1CF80], &cf);
  if (v11)
  {
    int v16 = v11;
    goto LABEL_17;
  }
  if (!cf)
  {
LABEL_25:
    int v16 = 0;
    goto LABEL_18;
  }
  CFTypeID v12 = CFGetTypeID(cf);
  if (v12 == FigEndpointStreamAudioEngineGetTypeID())
  {
    uint64_t v13 = FigEndpointStreamAudioEngineGetCMBaseObject();
    uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v14) {
      uint64_t v15 = v14;
    }
    else {
      uint64_t v15 = 0;
    }
    unsigned int v17 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t, CFDictionaryRef *))(v15 + 48);
    if (v17)
    {
      int v16 = v17(v13, @"currentRTPTime", v10, &dictionaryRepresentation);
      if (!v16)
      {
        CMTimeMakeFromDictionary(a3, dictionaryRepresentation);
        goto LABEL_18;
      }
    }
    else
    {
      int v16 = -12782;
    }
    goto LABEL_17;
  }
  APSLogErrorAt();
  int v16 = -17606;
LABEL_18:
  if (a2) {
    *a2 = v16;
  }
  if (dictionaryRepresentation) {
    CFRelease(dictionaryRepresentation);
  }
  if (cf) {
    CFRelease(cf);
  }
}

uint64_t endpoint_dissociateStreamsDictionaryEntry(uint64_t a1, uint64_t a2)
{
  uint64_t VTable = CMBaseObjectGetVTable();
  uint64_t v6 = *(void *)(VTable + 16);
  uint64_t result = VTable + 16;
  uint64_t v5 = v6;
  if (v6) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v7 + 32);
  if (v8)
  {
    return v8(a2);
  }
  return result;
}

uint64_t endpoint_setupAudioStream(const void *a1, int a2, const void *a3, int a4, const void *a5, const void *a6)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  value = 0;
  CFTypeRef cf = 0;
  if (!a6)
  {
    APSLogErrorAt();
    return 4294950576;
  }
  uint64_t v13 = DerivedStorage;
  CFTypeID v14 = CFGetTypeID(a6);
  if (v14 == CFStringGetTypeID())
  {
    int v15 = CFEqual(a6, (CFTypeRef)*MEMORY[0x1E4F21470]);
    int v16 = (CFAllocatorRef *)MEMORY[0x1E4F1CF80];
    if (v15)
    {
      uint64_t v17 = CMBaseObjectGetDerivedStorage();
      CFAllocatorRef v18 = *v16;
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(*v16, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      if (Mutable)
      {
        CFAllocatorRef v20 = Mutable;
        uint64_t v21 = *(const void **)(v17 + 288);
        if (v21) {
          CFDictionarySetValue(Mutable, @"EventRecorder", v21);
        }
        CFMutableDictionaryRef v22 = endpoint_copyClusterInfo();
        FigCFDictionarySetValue();
        if (v22) {
          CFRelease(v22);
        }
        CFAllocatorRef v23 = CFGetAllocator(a1);
        uint64_t v24 = APEndpointStreamBufferedAudioCreate(v23, *(CFTypeRef *)(v13 + 448), *(const void **)(v13 + 456), v20, *(const void **)(v13 + 224), a5, *(const void **)(v13 + 40), &cf);
        if (v24)
        {
          uint64_t v25 = v24;
          goto LABEL_62;
        }
LABEL_34:
        if (a2)
        {
          if (a3) {
            uint64_t v40 = APEndpointStreamInterruptingWrapperCreate((uint64_t)v18, cf, a3, *(const void **)(v13 + 200), &value);
          }
          else {
            uint64_t v40 = APEndpointStreamInterruptibleWrapperCreate((uint64_t)v18, cf, *(const void **)(v13 + 200), &value);
          }
          uint64_t v25 = v40;
          if (v40) {
            goto LABEL_62;
          }
        }
        else
        {
          if (cf) {
            long long v41 = (void *)CFRetain(cf);
          }
          else {
            long long v41 = 0;
          }
          value = v41;
        }
        uint64_t v42 = endpoint_addEndpointStreamNotificationListeners(a1);
        if (!v42)
        {
          CFDictionarySetValue(*(CFMutableDictionaryRef *)(v13 + 168), a6, value);
          if (gLogCategory_APEndpoint <= 50
            && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          uint64_t v25 = 0;
          goto LABEL_50;
        }
        uint64_t v25 = v42;
LABEL_62:
        APSLogErrorAt();
LABEL_50:
        CFRelease(v20);
        if (cf) {
          CFRelease(cf);
        }
        goto LABEL_52;
      }
    }
    else
    {
      int v45 = a2;
      uint64_t v26 = CMBaseObjectGetDerivedStorage();
      CFAllocatorRef v18 = *v16;
      CFMutableDictionaryRef v27 = CFDictionaryCreateMutable(*v16, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      if (v27)
      {
        CFAllocatorRef v20 = v27;
        uint64_t v44 = a5;
        int v28 = FigCFEqual();
        CFAllocatorRef v29 = (const void *)*MEMORY[0x1E4F1CFD0];
        CFAllocatorRef v30 = (const void *)*MEMORY[0x1E4F1CFC8];
        if (v28) {
          uint64_t v31 = (const void *)*MEMORY[0x1E4F1CFD0];
        }
        else {
          uint64_t v31 = (const void *)*MEMORY[0x1E4F1CFC8];
        }
        CFDictionarySetValue(v20, @"UsingScreen", v31);
        if (*(unsigned char *)(v26 + 489)) {
          uint64_t v32 = v29;
        }
        else {
          uint64_t v32 = v30;
        }
        CFDictionarySetValue(v20, @"StartSilentAudio", v32);
        if (a4) {
          uint64_t v33 = v29;
        }
        else {
          uint64_t v33 = v30;
        }
        CFDictionarySetValue(v20, @"ForceEnableLLStream", v33);
        CFAllocatorRef v34 = (unsigned char *)CMBaseObjectGetDerivedStorage();
        if (v34[281]) {
          APSScreenMediaPresentationUDPLatencyMs();
        }
        else {
          APSScreenMediaPresentationLatencyMs();
        }
        FigCFDictionarySetInt32();
        if (v34[280])
        {
          if (v34[248]) {
            long long v35 = v29;
          }
          else {
            long long v35 = v30;
          }
          CFDictionarySetValue(v20, @"IsMediaPresentation", v35);
        }
        long long v36 = *(const void **)(v26 + 288);
        if (v36) {
          CFDictionarySetValue(v20, @"EventRecorder", v36);
        }
        CFMutableDictionaryRef v37 = endpoint_copyClusterInfo();
        FigCFDictionarySetValue();
        a2 = v45;
        if (v37) {
          CFRelease(v37);
        }
        CFAllocatorRef v38 = CFGetAllocator(a1);
        uint64_t v39 = APEndpointStreamAudioCreate(v38, *(CFTypeRef *)(v13 + 448), *(const void **)(v13 + 456), a6, v20, *(const void **)(v13 + 224), v44, *(const void **)(v13 + 216), *(CFTypeRef *)(v13 + 40), (void **)&cf);
        if (v39)
        {
          uint64_t v25 = v39;
          goto LABEL_62;
        }
        goto LABEL_34;
      }
    }
    APSLogErrorAt();
    uint64_t v25 = 4294950575;
    APSLogErrorAt();
  }
  else
  {
    APSLogErrorAt();
    uint64_t v25 = 4294950576;
  }
LABEL_52:
  if (value) {
    CFRelease(value);
  }
  return v25;
}

void markStreamForRemoval(__CFDictionary **a1, void *key, CFDictionaryRef theDict)
{
  if (a1
    && key
    && theDict
    && (*a1
     || (CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]), (*a1 = Mutable) != 0)))
  {
    int Value = CFDictionaryGetValue(theDict, key);
    if (Value)
    {
      uint64_t v8 = Value;
      uint64_t v9 = *a1;
      CFDictionarySetValue(v9, key, v8);
    }
  }
  else
  {
    APSLogErrorAt();
  }
}

uint64_t endpoint_setupScreenStream(const void *a1, const __CFDictionary *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  value = 0;
  uint64_t v5 = (const void *)CFStringCreateF();
  CFAllocatorRef v6 = CFGetAllocator(a1);
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v6, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!Mutable)
  {
    APSLogErrorAt();
    uint64_t v20 = APSSignalErrorAt();
    goto LABEL_36;
  }
  if (a2)
  {
    uint64_t v8 = CFDictionaryGetValue(a2, (const void *)*MEMORY[0x1E4F20300]);
    if (v8) {
      CFDictionarySetValue(Mutable, @"clientPID", v8);
    }
    uint64_t v9 = CFDictionaryGetValue(a2, @"ScreenSource");
    if (v9) {
      CFDictionarySetValue(Mutable, @"ScreenSource", v9);
    }
    uint64_t v10 = CFDictionaryGetValue(a2, @"ScreenProcessor");
    if (v10) {
      CFDictionarySetValue(Mutable, @"ScreenProcessor", v10);
    }
    int v11 = CFDictionaryGetValue(a2, @"ScreenOverrides");
    if (v11) {
      CFDictionarySetValue(Mutable, @"ScreenOverrides", v11);
    }
    CFTypeID v12 = CFDictionaryGetValue(a2, (const void *)*MEMORY[0x1E4F20338]);
    if (v12 && *(unsigned char *)(DerivedStorage + 280)) {
      CFDictionarySetValue(Mutable, @"IsMediaPresentation", v12);
    }
  }
  uint64_t v13 = *(const void **)(DerivedStorage + 480);
  if (v13) {
    CFDictionarySetValue(Mutable, @"ScreenUsageMode", v13);
  }
  CFTypeID v14 = (const void *)*MEMORY[0x1E4F1CFD0];
  int v15 = (const void *)*MEMORY[0x1E4F1CFC8];
  if (*(unsigned char *)(DerivedStorage + 280)) {
    int v16 = (const void *)*MEMORY[0x1E4F1CFD0];
  }
  else {
    int v16 = (const void *)*MEMORY[0x1E4F1CFC8];
  }
  CFDictionarySetValue(Mutable, @"IsMediaPresentationModeAvailable", v16);
  if (*(unsigned char *)(DerivedStorage + 248)) {
    uint64_t v17 = v14;
  }
  else {
    uint64_t v17 = v15;
  }
  CFDictionarySetValue(Mutable, @"IsPerAppDisplay", v17);
  CFDictionarySetValue(Mutable, @"LogPrefix", v5);
  FigCFDictionarySetValue();
  if (*(unsigned char *)(DerivedStorage + 281))
  {
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    int v21 = CFGetAllocator(a1);
    uint64_t v22 = APEndpointStreamScreenUDPCreate(v21, Mutable, *(CFTypeRef *)(DerivedStorage + 448), *(const void **)(DerivedStorage + 224), *(const void **)(DerivedStorage + 40), 0, *(const void **)(DerivedStorage + 216), 0, (CFTypeRef *)&value);
    if (v22)
    {
      uint64_t v20 = v22;
      goto LABEL_46;
    }
  }
  else
  {
    CFAllocatorRef v18 = CFGetAllocator(a1);
    uint64_t v19 = APEndpointStreamScreenCreate(v18, Mutable, *(CFTypeRef *)(DerivedStorage + 448), *(void *)(DerivedStorage + 224), *(const void **)(DerivedStorage + 40), 0, *(const void **)(DerivedStorage + 216), (CFTypeRef *)&value);
    if (v19)
    {
      uint64_t v20 = v19;
LABEL_46:
      APSLogErrorAt();
      goto LABEL_36;
    }
  }
  CFAllocatorRef v23 = (const void *)*MEMORY[0x1E4F21488];
  uint64_t v24 = endpoint_addEndpointStreamNotificationListeners(a1);
  if (v24)
  {
    uint64_t v20 = v24;
    goto LABEL_46;
  }
  CFDictionarySetValue(*(CFMutableDictionaryRef *)(DerivedStorage + 168), v23, value);
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  uint64_t v20 = 0;
LABEL_36:
  if (v5) {
    CFRelease(v5);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  if (value) {
    CFRelease(value);
  }
  return v20;
}

void endpoint_suspendDissociateAndReleaseStreamsAndStopSenderSession(void *context)
{
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  CFDictionaryRef v2 = (const __CFDictionary *)*((void *)context + 2);
  if (v2) {
    CFDictionaryApplyFunction(v2, (CFDictionaryApplierFunction)endpoint_suspendAndDissociateStreamsDictionaryEntry, context);
  }
  CFDictionaryRef v3 = (const __CFDictionary *)*((void *)context + 4);
  if (v3) {
    CFDictionaryApplyFunction(v3, (CFDictionaryApplierFunction)endpoint_invalidateRCS, *(void **)context);
  }
  if (*((void *)context + 3)) {
    CFSetApplyBlock();
  }
  uint64_t v4 = *((void *)context + 1);
  if (v4)
  {
    uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v5) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = 0;
    }
    uint64_t v7 = *(void (**)(uint64_t, void, void, void, void))(v6 + 96);
    if (v7) {
      v7(v4, 0, 0, 0, 0);
    }
    uint64_t v8 = *((void *)context + 1);
    uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v9) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    int v11 = *(void (**)(uint64_t))(v10 + 80);
    if (v11) {
      v11(v8);
    }
    uint64_t v12 = *((void *)context + 1);
    uint64_t v13 = *((void *)context + 6);
    int v38 = 0;
    CFArrayRef v37 = 0;
    if (!v13) {
      goto LABEL_36;
    }
    CMBaseObjectGetDerivedStorage();
    if (APSGetFBOPropertyInt64())
    {
      uint64_t CMBaseObject = APSenderSessionGetCMBaseObject(v12);
      uint64_t v15 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v15) {
        uint64_t v16 = v15;
      }
      else {
        uint64_t v16 = 0;
      }
      uint64_t v17 = *(void (**)(uint64_t, __CFString *, void, CFArrayRef *))(v16 + 48);
      if (!v17 || (v17(CMBaseObject, @"ReceiverSuppliedRTCStats", *MEMORY[0x1E4F1CF80], &v37), !v37))
      {
LABEL_36:
        uint64_t v25 = APSenderSessionGetCMBaseObject(*((void *)context + 1));
        if (v25)
        {
          uint64_t v26 = v25;
          uint64_t v27 = *(void *)(CMBaseObjectGetVTable() + 8);
          uint64_t v28 = v27 ? v27 : 0;
          CFAllocatorRef v29 = *(void (**)(uint64_t))(v28 + 24);
          if (v29) {
            v29(v26);
          }
        }
        CFAllocatorRef v30 = (const void *)*((void *)context + 1);
        if (v30) {
          CFRelease(v30);
        }
        goto LABEL_44;
      }
      CFTypeID v18 = CFGetTypeID(v37);
      if (v18 == CFArrayGetTypeID())
      {
        CFIndex Count = CFArrayGetCount(v37);
        if (Count >= 1)
        {
          CFIndex v20 = Count;
          CFIndex v21 = 0;
          while (1)
          {
            CFDataRef ValueAtIndex = (const __CFData *)CFArrayGetValueAtIndex(v37, v21);
            CFDataGetBytePtr(ValueAtIndex);
            CFDataGetLength(ValueAtIndex);
            CFDictionaryGetTypeID();
            uint64_t v23 = CFCreateWithPlistBytes();
            if (!v23) {
              break;
            }
            uint64_t v24 = (const void *)v23;
            APSRTCReportingAgentSendOfflineEvent();
            CFRelease(v24);
            if (v20 == ++v21) {
              goto LABEL_34;
            }
          }
          APSLogErrorAt();
          int v38 = -16721;
        }
      }
    }
LABEL_34:
    if (v37) {
      CFRelease(v37);
    }
    goto LABEL_36;
  }
LABEL_44:
  uint64_t v31 = (const void *)*((void *)context + 2);
  if (v31) {
    CFRelease(v31);
  }
  uint64_t v32 = (const void *)*((void *)context + 3);
  if (v32) {
    CFRelease(v32);
  }
  uint64_t v33 = (const void *)*((void *)context + 4);
  if (v33) {
    CFRelease(v33);
  }
  CFAllocatorRef v34 = (const void *)*((void *)context + 5);
  if (v34) {
    CFRelease(v34);
  }
  long long v35 = (const void *)*((void *)context + 6);
  if (v35) {
    CFRelease(v35);
  }
  if (*(void *)context) {
    CFRelease(*(CFTypeRef *)context);
  }
  long long v36 = *((void *)context + 7);
  if (v36)
  {
    dispatch_semaphore_signal(v36);
    dispatch_release(*((dispatch_object_t *)context + 7));
  }
}

uint64_t endpoint_addEndpointStreamNotificationListeners(const void *a1)
{
  uint64_t v2 = *(void *)(CMBaseObjectGetDerivedStorage() + 40);
  uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 16);
  if (v5) {
    int v6 = v5(v2, 88);
  }
  else {
    int v6 = 0;
  }
  CMNotificationCenterGetDefaultLocalCenter();
  uint64_t v7 = FigNotificationCenterAddWeakListener();
  if (v7)
  {
    uint64_t v13 = v7;
    goto LABEL_23;
  }
  CMNotificationCenterGetDefaultLocalCenter();
  uint64_t v8 = FigNotificationCenterAddWeakListener();
  if (v8)
  {
    uint64_t v13 = v8;
    goto LABEL_23;
  }
  CMNotificationCenterGetDefaultLocalCenter();
  uint64_t v9 = FigNotificationCenterAddWeakListener();
  if (v9)
  {
    uint64_t v13 = v9;
    goto LABEL_23;
  }
  CMNotificationCenterGetDefaultLocalCenter();
  uint64_t v10 = FigNotificationCenterAddWeakListener();
  if (v10)
  {
    uint64_t v13 = v10;
    goto LABEL_23;
  }
  if (!v6 || !FigCFEqual()) {
    return 0;
  }
  CMNotificationCenterGetDefaultLocalCenter();
  uint64_t v11 = FigNotificationCenterAddWeakListener();
  if (v11)
  {
    uint64_t v13 = v11;
    goto LABEL_23;
  }
  CMNotificationCenterGetDefaultLocalCenter();
  uint64_t v12 = FigNotificationCenterAddWeakListener();
  uint64_t v13 = v12;
  if (v12)
  {
LABEL_23:
    APSLogErrorAt();
    return v13;
  }
  endpoint_handleStreamBadgingFormatInfoChanged(v12, a1);
  return v13;
}

CFMutableDictionaryRef endpoint_copyClusterInfo()
{
  CFTypeRef v9 = 0;
  CFTypeRef v7 = 0;
  CFTypeRef cf = 0;
  CFTypeRef v5 = 0;
  CFTypeRef v6 = 0;
  CFMutableDictionaryRef Mutable = *(CFMutableDictionaryRef *)(CMBaseObjectGetDerivedStorage() + 40);
  if (!Mutable) {
    goto LABEL_21;
  }
  uint64_t v1 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v1) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = 0;
  }
  uint64_t v3 = *(void (**)(CFMutableDictionaryRef, CFTypeRef *, CFTypeRef *, CFTypeRef *, void, CFTypeRef *, CFTypeRef *, void))(v2 + 48);
  if (!v3 || (v3(Mutable, &v9, &cf, &v7, 0, &v6, &v5, 0), !v9))
  {
    CFMutableDictionaryRef Mutable = 0;
    goto LABEL_11;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    FigCFDictionarySetValue();
    FigCFDictionarySetValue();
    FigCFDictionarySetValue();
    FigCFDictionarySetValue();
    FigCFDictionarySetValue();
  }
  else
  {
LABEL_21:
    APSLogErrorAt();
  }
  if (v9) {
    CFRelease(v9);
  }
LABEL_11:
  if (cf) {
    CFRelease(cf);
  }
  if (v7) {
    CFRelease(v7);
  }
  if (v6) {
    CFRelease(v6);
  }
  if (v5) {
    CFRelease(v5);
  }
  return Mutable;
}

void endpoint_handleStreamTimelineEstablished(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  CFRetain(a2);
  uint64_t v4 = *(NSObject **)(DerivedStorage + 576);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __endpoint_handleStreamTimelineEstablished_block_invoke;
  block[3] = &__block_descriptor_tmp_418;
  block[4] = DerivedStorage;
  block[5] = a2;
  dispatch_async(v4, block);
}

uint64_t endpoint_handleStreamFailed(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int Int64 = -71850;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a5)
  {
    int Int64 = CFDictionaryGetInt64();
    FigCFDictionaryGetBooleanIfPresent();
  }
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  endpoint_updateStatus(a2, Int64, 1);
  return MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
}

void endpoint_handleStreamIsPlayingDidChange(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  BOOL v4 = CFDictionaryGetInt64() != 0;
  endpoint_handleIdleStateChanged_0(a2, v4);
  JUMPOUT(0x1D25EB390);
}

void endpoint_handleStreamBadgingFormatInfoChanged(uint64_t a1, const void *a2)
{
  uint64_t v3 = *(void *)(CMBaseObjectGetDerivedStorage() + 40);
  uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  CFTypeRef v6 = *(void (**)(uint64_t, uint64_t))(v5 + 16);
  if (v6) {
    v6(v3, 89);
  }
  CFTypeRef v20 = 0;
  int v19 = 0;
  uint64_t CMBaseObject = FigEndpointStreamGetCMBaseObject();
  uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = *(uint64_t (**)(uint64_t, __CFString *, void, CFTypeRef *))(v9 + 48);
  if (!v10)
  {
    int v16 = -12782;
    goto LABEL_20;
  }
  CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  int v12 = v10(CMBaseObject, @"ActiveBadgingFormatInfo", *MEMORY[0x1E4F1CF80], &v20);
  if (v12)
  {
    int v16 = v12;
    goto LABEL_20;
  }
  if (!v20 || (int Enum = APSBadgingFormatInfoTypeGetEnum()) == 0)
  {
    int v19 = APSBadgingFormatInfoTypeResolve();
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v11, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (Mutable)
    {
      CFMutableDictionaryRef v15 = Mutable;
      int v16 = FigCFDictionarySetUInt32();
      if (v16)
      {
        APSLogErrorAt();
      }
      else
      {
        if (a2) {
          CFRetain(a2);
        }
        CFRetain(v15);
        global_queue = dispatch_get_global_queue(21, 0);
        block[0] = MEMORY[0x1E4F143A8];
        block[1] = 0x40000000;
        block[2] = __endpoint_updateBadgingFormatInfo_block_invoke;
        block[3] = &__block_descriptor_tmp_422;
        block[4] = a2;
        block[5] = v15;
        dispatch_async(global_queue, block);
      }
      CFRelease(v15);
      goto LABEL_21;
    }
    int v16 = -6728;
LABEL_20:
    APSLogErrorAt();
    goto LABEL_21;
  }
  int v16 = Enum;
  APSLogErrorAt();
  if (gLogCategory_APEndpoint <= 90 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
LABEL_21:
  if (v20) {
    CFRelease(v20);
  }
  if (v16)
  {
    APSLogErrorAt();
    if (gLogCategory_APEndpoint <= 90 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
  }
}

void __endpoint_handleStreamTimelineEstablished_block_invoke(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 600))
  {
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    APMetadataSenderSendInitialMetadata(*(void **)(*(void *)(a1 + 32) + 600));
  }
  uint64_t v2 = *(const void **)(a1 + 40);
  CFRelease(v2);
}

void __endpoint_updateBadgingFormatInfo_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!v2 || (FigEndpointExtendedGetClassID(), !CMBaseObjectIsMemberOfClass())) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 24);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  CFTypeRef v6 = *(void (**)(uint64_t, __CFString *, uint64_t, void, void))(v5 + 72);
  if (v6) {
    v6(v2, @"updateBadgingFormatInfo", v3, 0, 0);
  }
  CFTypeRef v7 = *(const void **)(a1 + 32);
  if (v7) {
    CFRelease(v7);
  }
  uint64_t v8 = *(const void **)(a1 + 40);
  if (v8)
  {
    CFRelease(v8);
  }
}

void endpoint_suspendAndDissociateStreamsDictionaryEntry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (gLogCategory_APEndpoint <= 30 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  CFTypeRef v7 = *(void (**)(uint64_t, void, void, void))(v6 + 8);
  if (v7) {
    v7(a2, 0, 0, 0);
  }
  uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = *(void (**)(uint64_t))(v9 + 32);
  if (v10) {
    v10(a2);
  }
  uint64_t v12 = *(void *)(a3 + 40);
  uint64_t v11 = *(void *)(a3 + 48);
  CFTypeRef v17 = 0;
  if (v11)
  {
    if (v12)
    {
      uint64_t CMBaseObject = FigEndpointStreamGetCMBaseObject();
      uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v14) {
        uint64_t v15 = v14;
      }
      else {
        uint64_t v15 = 0;
      }
      int v16 = *(void (**)(uint64_t, __CFString *, void, CFTypeRef *))(v15 + 48);
      if (v16)
      {
        v16(CMBaseObject, @"RTCStats", *MEMORY[0x1E4F1CF80], &v17);
        if (v17)
        {
          FigCFArrayApplyFunction();
          if (v17) {
            CFRelease(v17);
          }
        }
      }
    }
    else
    {
      APSLogErrorAt();
    }
  }
}

uint64_t endpoint_invalidateRCS()
{
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  uint64_t result = FigEndpointRemoteControlSessionGetCMBaseObject();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t VTable = CMBaseObjectGetVTable();
    uint64_t v4 = *(void *)(VTable + 8);
    uint64_t result = VTable + 8;
    uint64_t v3 = v4;
    uint64_t v5 = v4 ? v3 : 0;
    uint64_t v6 = *(uint64_t (**)(uint64_t))(v5 + 24);
    if (v6)
    {
      return v6(v1);
    }
  }
  return result;
}

void __endpoint_suspendDissociateAndReleaseStreamsAndStopSenderSession_block_invoke(uint64_t a1, uint64_t a2)
{
}

void endpoint_invalidatePlaybackSession(uint64_t a1, uint64_t a2, uint64_t a3, const __CFDictionary *a4)
{
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  uint64_t CMBaseObject = FigEndpointPlaybackSessionGetCMBaseObject();
  if (CMBaseObject)
  {
    uint64_t v7 = CMBaseObject;
    uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 8);
    uint64_t v9 = v8 ? v8 : 0;
    uint64_t v10 = *(void (**)(uint64_t))(v9 + 24);
    if (v10) {
      v10(v7);
    }
  }
  CMBaseObjectGetDerivedStorage();
  CFDictionaryRef theDict = 0;
  if (a3)
  {
    if (a4
      && (uint64_t v11 = *MEMORY[0x1E4F1CF80],
          (CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, a4)) != 0))
    {
      uint64_t v13 = MutableCopy;
      uint64_t v14 = FigEndpointPlaybackSessionGetCMBaseObject();
      uint64_t v15 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v15) {
        uint64_t v16 = v15;
      }
      else {
        uint64_t v16 = 0;
      }
      CFTypeRef v17 = *(void (**)(uint64_t, __CFString *, uint64_t, CFDictionaryRef *))(v16 + 48);
      if (v17)
      {
        v17(v14, @"RTCStats", v11, &theDict);
        if (theDict)
        {
          if (CFDictionaryContainsKey(theDict, @"activateToStartMs"))
          {
            if (CFDictionaryMergeDictionary())
            {
              APSLogErrorAt();
            }
            else
            {
              CFDictionarySetValue(v13, @"sessionType", @"Playback");
              APSRTCReportingAgentSendEvent();
              if (gLogCategory_APEndpoint <= 50
                && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
            }
          }
        }
      }
      CFRelease(v13);
      if (theDict) {
        CFRelease(theDict);
      }
    }
    else
    {
      APSLogErrorAt();
    }
  }
}

void endpoint_reportStreamMetricsArrayIterator(const __CFDictionary *a1, uint64_t a2)
{
  if (a2 && *(void *)a2 && a1 && *(void *)(a2 + 8))
  {
    CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, *(CFDictionaryRef *)a2);
    if (MutableCopy)
    {
      CFMutableDictionaryRef v4 = MutableCopy;
      if (CFDictionaryMergeDictionary() || !CFDictionaryGetValue(a1, @"sessionType"))
      {
        APSLogErrorAt();
      }
      else
      {
        if (FigCFEqual()) {
          APSRTCReportingAgentSendEvent();
        }
        if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
          LogPrintF();
        }
      }
      CFRelease(v4);
    }
    else
    {
      APSLogErrorAt();
    }
  }
}

uint64_t endpoint_logEventInterval(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    uint64_t result = APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursive();
    if (gLogCategory_APEndpoint <= 40)
    {
      if (gLogCategory_APEndpoint != -1) {
        return LogPrintF();
      }
      uint64_t result = _LogCategory_Initialize();
      if (result) {
        return LogPrintF();
      }
    }
  }
  else
  {
    return APSLogErrorAt();
  }
  return result;
}

void endpoint_logEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    APSEventRecorderGetEventTimeRecursive();
    StringWithEventRecorderTime = (const void *)APSEventRecorderCreateStringWithEventRecorderTime();
    if (gLogCategory_APEndpoint <= 40 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    if (StringWithEventRecorderTime)
    {
      CFRelease(StringWithEventRecorderTime);
    }
  }
  else
  {
    APSLogErrorAt();
  }
}

uint64_t endpoint_logTransportDiscoveryDurationIfEventPresent()
{
  uint64_t result = APSEventRecorderGetEventTimeRecursive();
  if (v1 != 0.0)
  {
    APBrowserGetStartEventForBrowserDeviceEvent();
    uint64_t result = APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursive();
    if (gLogCategory_APEndpoint <= 40)
    {
      if (gLogCategory_APEndpoint != -1) {
        return LogPrintF();
      }
      uint64_t result = _LogCategory_Initialize();
      if (result) {
        return LogPrintF();
      }
    }
  }
  return result;
}

uint64_t endpoint_isVideoPlaybackSessionActive()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(_DWORD *)(DerivedStorage + 152) != 2) {
    return 0;
  }
  uint64_t v1 = DerivedStorage;
  CFSetRef v2 = *(const __CFSet **)(DerivedStorage + 312);
  if (!v2) {
    return 0;
  }
  int64_t Count = CFSetGetCount(v2);
  if (Count < 1) {
    return 0;
  }
  int64_t v4 = Count;
  uint64_t v5 = (const void **)malloc_type_calloc(Count, 8uLL, 0xC0040B8AA526DuLL);
  CFSetGetValues(*(CFSetRef *)(v1 + 312), v5);
  uint64_t v6 = 0;
  while (1)
  {
    uint64_t v7 = APSGetFBOPropertyInt64();
    uint64_t v8 = APSGetFBOPropertyInt64();
    if (v7 && v8 == 0) {
      break;
    }
    if (v4 == ++v6)
    {
      uint64_t v10 = 0;
      goto LABEL_14;
    }
  }
  uint64_t v10 = 1;
LABEL_14:
  free(v5);
  return v10;
}

uint64_t __endpoint_stopListeningToSenderSessionAndStreamsNotifications_block_invoke()
{
  uint64_t v0 = *(void *)(CMBaseObjectGetDerivedStorage() + 40);
  uint64_t v1 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v1) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = 0;
  }
  uint64_t v3 = *(unsigned int (**)(uint64_t, uint64_t))(v2 + 16);
  if (v3) {
    BOOL v4 = v3(v0, 88) == 0;
  }
  else {
    BOOL v4 = 1;
  }
  CMNotificationCenterGetDefaultLocalCenter();
  FigNotificationCenterRemoveWeakListener();
  CMNotificationCenterGetDefaultLocalCenter();
  FigNotificationCenterRemoveWeakListener();
  CMNotificationCenterGetDefaultLocalCenter();
  FigNotificationCenterRemoveWeakListener();
  CMNotificationCenterGetDefaultLocalCenter();
  uint64_t result = FigNotificationCenterRemoveWeakListener();
  if (!v4)
  {
    uint64_t result = FigCFEqual();
    if (result)
    {
      CMNotificationCenterGetDefaultLocalCenter();
      FigNotificationCenterRemoveWeakListener();
      CMNotificationCenterGetDefaultLocalCenter();
      return FigNotificationCenterRemoveWeakListener();
    }
  }
  return result;
}

uint64_t endpoint_unsubscribeRCS()
{
  CMNotificationCenterGetDefaultLocalCenter();
  uint64_t result = FigNotificationCenterRemoveWeakListener();
  if (gLogCategory_APEndpoint <= 50)
  {
    if (gLogCategory_APEndpoint != -1) {
      return LogPrintF();
    }
    uint64_t result = _LogCategory_Initialize();
    if (result) {
      return LogPrintF();
    }
  }
  return result;
}

uint64_t endpoint_unsubscribePlaybackSession()
{
  CMNotificationCenterGetDefaultLocalCenter();
  FigNotificationCenterRemoveWeakListener();
  CMNotificationCenterGetDefaultLocalCenter();
  FigNotificationCenterRemoveWeakListener();
  CMNotificationCenterGetDefaultLocalCenter();
  FigNotificationCenterRemoveWeakListener();
  CMNotificationCenterGetDefaultLocalCenter();
  return FigNotificationCenterRemoveWeakListener();
}

void endpoint_handlePlaybackSessionActivationStateChanged(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  endpoint_updateCurrentVolumeControlType();
  endpoint_updateIsVolumeAndMuteControlSupported();
  endpoint_updateVideoPlaybackIsActive(a2);
  JUMPOUT(0x1D25EB390);
}

void endpoint_handlePlaybackSessionIsPlayingDidChange(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  BOOL v4 = CFDictionaryGetInt64() != 0;
  endpoint_handleIdleStateChanged_0(a2, v4);
  JUMPOUT(0x1D25EB390);
}

void endpoint_handlePlaybackSessionInvalidated(uint64_t a1, const void *a2, uint64_t a3, const void *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpoint <= 30 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  endpoint_unsubscribePlaybackSession(a4, a2);
  endpoint_invalidatePlaybackSession((uint64_t)a4, (uint64_t)a2, *(void *)(DerivedStorage + 304), *(const __CFDictionary **)(DerivedStorage + 296));
  uint64_t v7 = *(__CFSet **)(DerivedStorage + 312);
  if (v7) {
    CFSetRemoveValue(v7, a4);
  }
  endpoint_updateCurrentVolumeControlType();
  endpoint_updateIsVolumeAndMuteControlSupported();
  endpoint_updateVideoPlaybackIsActive(a2);
  JUMPOUT(0x1D25EB390);
}

uint64_t endpoint_handleMediaControlConnectedStateChanged(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpoint <= 30 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  if (a5)
  {
    int Int64 = CFDictionaryGetInt64();
    BOOL v9 = CFDictionaryGetInt64() != 0;
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
    endpoint_updateStatus(a2, Int64, 1);
    *(unsigned char *)(DerivedStorage + 320) = v9;
    return MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  }
  else
  {
    return APSLogErrorAt();
  }
}

void __endpoint_deactivateInternal_block_invoke(uint64_t a1)
{
}

void endpoint_stopMediaRemoteAndMetadataServices(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v4 = DerivedStorage;
  if (*(void *)(DerivedStorage + 584))
  {
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
    if (*(_DWORD *)(v4 + 592))
    {
      if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      APMediaRemoteCommandReceiverRemoveClient();
    }
    uint64_t v5 = *(const void **)(v4 + 584);
    *(_DWORD *)(v4 + 592) = 0;
    if (v5)
    {
      CFRelease(v5);
      *(void *)(v4 + 584) = 0;
    }
  }
  else
  {
    *(_DWORD *)(DerivedStorage + 592) = 0;
  }
  uint64_t v6 = *(void *)(v4 + 600);
  if (v6)
  {
    if (gLogCategory_APEndpoint <= 50)
    {
      if (gLogCategory_APEndpoint != -1 || (int v7 = _LogCategory_Initialize(), v6 = *(void *)(v4 + 600), v7))
      {
        LogPrintF();
        uint64_t v6 = *(void *)(v4 + 600);
      }
    }
    APMetadataSenderInvalidate(v6);
    uint64_t v8 = *(const void **)(v4 + 600);
    if (v8)
    {
      CFRelease(v8);
      *(void *)(v4 + 600) = 0;
    }
  }
  if (a2)
  {
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    APMetadataSourceStop(a2);
  }
}

uint64_t endpoint_createAudioHALDevice(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t result = (uint64_t)CFDictionaryGetValue(*(CFDictionaryRef *)(DerivedStorage + 168), a2);
  if (!result)
  {
    if (gLogCategory_APEndpoint > 90) {
      return result;
    }
    if (gLogCategory_APEndpoint == -1)
    {
      uint64_t result = _LogCategory_Initialize();
      if (!result) {
        return result;
      }
    }
    return LogPrintF();
  }
  uint64_t v6 = result;
  int v7 = (const void *)*MEMORY[0x1E4F21468];
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21468]))
  {
    uint64_t result = FigCFEqual();
    uint64_t v8 = kAPHALAudioDeviceCreationOptionDeviceType_Screen;
    if (!result) {
      uint64_t v8 = kAPHALAudioDeviceCreationOptionDeviceType_Audio;
    }
  }
  else
  {
    uint64_t result = CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21478]);
    if (!result)
    {
LABEL_14:
      if (gLogCategory_APEndpoint > 90) {
        return result;
      }
      if (gLogCategory_APEndpoint == -1)
      {
        uint64_t result = _LogCategory_Initialize();
        if (!result) {
          return result;
        }
      }
      return LogPrintF();
    }
    uint64_t v8 = kAPHALAudioDeviceCreationOptionDeviceType_LowLatencyAudio;
  }
  BOOL v9 = *v8;
  if (!*v8) {
    goto LABEL_14;
  }
  int v10 = CFEqual(a2, v7);
  if (v10) {
    BOOL v11 = APSGetFBOPropertyInt64() == 0;
  }
  else {
    BOOL v11 = 0;
  }
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  uint64_t v12 = *(const void **)(DerivedStorage + 448);
  uint64_t v13 = *(const void **)(DerivedStorage + 208);
  if (FigCFEqual()) {
    uint64_t v14 = 75;
  }
  else {
    uint64_t v14 = 0;
  }
  CMBaseObjectGetDerivedStorage();
  APSVolumeConvertSliderValueToDB();
  uint64_t result = APEndpointTriggerAudioHALDeviceCreation(a1, v6, v12, v9, v13, v14, v10, v11);
  if (result)
  {
    return APSLogErrorAt();
  }
  return result;
}

void endpoint_dissociateInternal(uint64_t a1)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  CFTypeRef v21 = 0;
  CFMutableDictionaryRef v22 = 0;
  if (introspector_getCollectionOfActiveEndpoints_once != -1) {
    dispatch_once(&introspector_getCollectionOfActiveEndpoints_once, &__block_literal_global_37);
  }
  if (introspector_getCollectionOfActiveEndpoints_coll)
  {
    uint64_t v3 = *(NSObject **)introspector_getCollectionOfActiveEndpoints_coll;
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 0x40000000;
    block[2] = __endpoint_dissociateInternal_block_invoke;
    block[3] = &__block_descriptor_tmp_542;
    block[4] = introspector_getCollectionOfActiveEndpoints_coll;
    block[5] = a1;
    dispatch_sync(v3, block);
  }
  MEMORY[0x1D25EB370](DerivedStorage[15]);
  uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(DerivedStorage[5]);
  uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  int v7 = *(void (**)(uint64_t, __CFString *, void, CFTypeRef *))(v6 + 48);
  if (v7) {
    v7(CMBaseObject, @"DeviceID", *MEMORY[0x1E4F1CF80], &v21);
  }
  MEMORY[0x1D25EB390](DerivedStorage[15]);
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()))
  {
    CFGetHardwareAddress();
    LogPrintF();
  }
  if (DerivedStorage[3] && *(void *)(a1 + 48)) {
    APBrowserControllerDeregisterEndpoint();
  }
  CFDictionaryRef v8 = *(const __CFDictionary **)(a1 + 24);
  if (v8) {
    CFDictionaryApplyFunction(v8, (CFDictionaryApplierFunction)endpoint_dissociateStreamsDictionaryEntry, 0);
  }
  CFDictionaryRef v9 = *(const __CFDictionary **)(a1 + 72);
  if (v9) {
    CFDictionaryApplyFunction(v9, (CFDictionaryApplierFunction)endpoint_invalidateRCS, *(void **)a1);
  }
  if (*(void *)(a1 + 64)) {
    CFSetApplyBlock();
  }
  endpoint_stopMediaRemoteAndMetadataServices(*(void *)a1, *(void *)(a1 + 56));
  MEMORY[0x1D25EB370](DerivedStorage[15]);
  endpoint_updateStatus(*(const void **)a1, -16723, 1);
  MEMORY[0x1D25EB390](DerivedStorage[15]);
  if (*DerivedStorage)
  {
    CFAllocatorRef v10 = CFGetAllocator(*(CFTypeRef *)a1);
    APEndpointCreateEndpointActivationNotificationPayload(v10, *(void *)(a1 + 40), *(void *)(a1 + 32), &v22);
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
    if (v22) {
      CFRelease(v22);
    }
  }
  if (v21) {
    CFRelease(v21);
  }
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
  BOOL v11 = *(const void **)(a1 + 8);
  if (v11) {
    CFRelease(v11);
  }
  uint64_t v12 = *(const void **)(a1 + 48);
  if (v12) {
    CFRelease(v12);
  }
  uint64_t v13 = *(const void **)(a1 + 24);
  if (v13) {
    CFRelease(v13);
  }
  uint64_t v14 = *(const void **)(a1 + 16);
  if (v14) {
    CFRelease(v14);
  }
  uint64_t v15 = *(const void **)(a1 + 56);
  if (v15) {
    CFRelease(v15);
  }
  uint64_t v16 = *(const void **)(a1 + 64);
  if (v16) {
    CFRelease(v16);
  }
  CFTypeRef v17 = *(const void **)(a1 + 72);
  if (v17) {
    CFRelease(v17);
  }
  CFTypeID v18 = *(const void **)(a1 + 80);
  if (v18) {
    CFRelease(v18);
  }
  int v19 = *(const void **)(a1 + 88);
  if (v19) {
    CFRelease(v19);
  }
}

void __endpoint_dissociateInternal_block_invoke(uint64_t a1)
{
}

void __endpoint_dissociateInternal_block_invoke_2(uint64_t a1, uint64_t a2)
{
}

void endpoint_updateFeaturesInternalWithContext(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  CFDictionaryRef v5 = *(const __CFDictionary **)(a1 + 16);
  long long v41 = *(_OWORD *)(a1 + 24);
  uint64_t v6 = CMBaseObjectGetDerivedStorage();
  long long v45 = 0u;
  long long v46 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v42 = 0u;
  uint64_t v7 = *(void *)(v6 + 144);
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  if (*(unsigned char *)(v6 + 48))
  {
    APSLogErrorAt();
    int v38 = 0;
    int v39 = -6705;
    goto LABEL_78;
  }
  if (*(_DWORD *)(v6 + 152) != 2)
  {
    APSLogErrorAt();
    int v38 = 0;
    int v39 = -6709;
    goto LABEL_78;
  }
  uint64_t v40 = DerivedStorage;
  uint64_t v8 = v7 | v4;
  if ((v7 | v4) == v7 && v8 == v4)
  {
    int v39 = 0;
    int v38 = 0;
    goto LABEL_118;
  }
  if (v8 != v7 && v8 != v4)
  {
    int v38 = 0;
    int v39 = -6705;
LABEL_118:
    uint64_t DerivedStorage = v40;
    goto LABEL_78;
  }
  if (!v5)
  {
    int v38 = 0;
    goto LABEL_33;
  }
  int Value = CFDictionaryGetValue(v5, @"ParentContextID");
  if (!Value) {
    int Value = CFDictionaryGetValue(v5, (const void *)*MEMORY[0x1E4F20350]);
  }
  if (!*(unsigned char *)(CMBaseObjectGetDerivedStorage() + 48) && APSGetFBOPropertyInt64())
  {
    uint64_t v12 = *(void *)(CMBaseObjectGetDerivedStorage() + 64);
    if (v12)
    {
      if (v12 != *MEMORY[0x1E4F1CFD0]) {
        goto LABEL_32;
      }
      goto LABEL_27;
    }
    if (endpoint_isInLocalCluster() && APSIsMemberOfPersistentGroup())
    {
LABEL_27:
      int v38 = CFDictionaryGetValue(v5, @"GroupID");
      if (Value) {
        goto LABEL_28;
      }
LABEL_33:
      if (gLogCategory_APEndpoint <= 30 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      uint64_t v13 = *(const void **)(v6 + 160);
      if (v13)
      {
        CFRelease(v13);
        *(void *)(v6 + 160) = 0;
      }
      if (!*(unsigned char *)(v6 + 128))
      {
        if (!v5) {
          goto LABEL_46;
        }
        goto LABEL_45;
      }
LABEL_113:
      APSLogErrorAt();
      int v39 = -16723;
      goto LABEL_118;
    }
  }
LABEL_32:
  int v38 = 0;
  if (!Value) {
    goto LABEL_33;
  }
LABEL_28:
  if (!*(void *)(v6 + 160))
  {
    *(void *)(v6 + 160) = Value;
    CFRetain(Value);
    if (gLogCategory_APEndpoint <= 30 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
  }
  if (!FigCFEqual())
  {
    uint64_t DerivedStorage = v40;
    if (gLogCategory_APEndpoint <= 90 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    int v39 = -16726;
    goto LABEL_78;
  }
  if (*(unsigned char *)(v6 + 128)) {
    goto LABEL_113;
  }
LABEL_45:
  CFTypeID v14 = CFGetTypeID(v5);
  if (v14 != CFDictionaryGetTypeID())
  {
    APSLogErrorAt();
    int v39 = -16720;
    goto LABEL_118;
  }
LABEL_46:
  if (!*(void *)(v6 + 224))
  {
    APSLogErrorAt();
    int v39 = -17605;
    goto LABEL_118;
  }
  if (!*(void *)(v6 + 40))
  {
    APSLogErrorAt();
    int v39 = -16726;
    goto LABEL_118;
  }
  if (v8 == v7)
  {
    if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    endpoint_partiallyResetActivationState(v6 + 136);
    BOOL v18 = endpoint_isInLocalStereoPairPersistentConnection();
    uint64_t DerivedStorage = v40;
    if (!v4 && v18)
    {
      endpoint_stopMediaRemoteAndMetadataServices((uint64_t)v3, *(void *)(v6 + 192));
      int v19 = *(const void **)(v6 + 192);
      if (v19)
      {
        CFRelease(v19);
        *(void *)(v6 + 192) = 0;
      }
      CFTypeRef v20 = *(const void **)(v6 + 184);
      if (v20)
      {
        CFRelease(v20);
        *(void *)(v6 + 184) = 0;
      }
    }
    goto LABEL_71;
  }
  if (v5)
  {
    int ActivationOptions = endpoint_readActivationOptions(v5, v6 + 136);
    uint64_t DerivedStorage = v40;
    if (ActivationOptions) {
      goto LABEL_116;
    }
    int v16 = FigCFEqual();
  }
  else
  {
    int v16 = 0;
    uint64_t DerivedStorage = v40;
  }
  if (endpoint_shouldOnlyBeActivatedAsPartOfCluster() && !*(unsigned char *)(v6 + 250))
  {
    APSLogErrorAt();
    int v39 = -72277;
    goto LABEL_78;
  }
  int ActivationOptions = endpoint_ensureSharedContextCreated((uint64_t)v3, v4, v5, v16);
  if (ActivationOptions)
  {
LABEL_116:
    int v39 = ActivationOptions;
    goto LABEL_78;
  }
  int MetadataSourceAndCommandSinkIfNeeded = endpoint_createMetadataSourceAndCommandSinkIfNeeded((uint64_t)v3, v7, v4);
  if (MetadataSourceAndCommandSinkIfNeeded)
  {
    int v39 = MetadataSourceAndCommandSinkIfNeeded;
    APSLogErrorAt();
    goto LABEL_78;
  }
LABEL_71:
  if ((v4 & 4) == (v7 & 4)) {
    goto LABEL_77;
  }
  CFSetRef v21 = *(const __CFSet **)(v6 + 312);
  if ((v4 & 4) == 0)
  {
    if (v21) {
      CFSetApplyFunction(v21, (CFSetApplierFunction)endpoint_unsubscribePlaybackSession, v3);
    }
    goto LABEL_77;
  }
  if (v21
    || (CFMutableSetRef Mutable = CFSetCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D548]),
        (*(void *)(v6 + 312) = Mutable) != 0))
  {
LABEL_77:
    int v39 = 0;
    goto LABEL_78;
  }
  APSLogErrorAt();
  int v39 = -16721;
LABEL_78:
  if (v3) {
    CFRetain(v3);
  }
  uint64_t v23 = *(const void **)(v6 + 448);
  if (v23) {
    CFRetain(v23);
  }
  LODWORD(v46) = v39;
  CFTypeRef v24 = *(CFTypeRef *)(v6 + 288);
  if (v24) {
    CFTypeRef v24 = CFRetain(v24);
  }
  *((void *)&v46 + 1) = v24;
  if (v5) {
    CFTypeRef v25 = CFRetain(v5);
  }
  else {
    CFTypeRef v25 = 0;
  }
  *(void *)&long long v44 = v25;
  uint64_t v26 = *(const void **)(v6 + 224);
  if (v26) {
    CFRetain(v26);
  }
  uint64_t v27 = *(const void **)(v6 + 240);
  if (v27) {
    CFRetain(v27);
  }
  uint64_t v28 = *(void *)(v6 + 40);
  CFAllocatorRef v29 = CFGetAllocator(v3);
  uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(v28);
  uint64_t v31 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v31) {
    uint64_t v32 = v31;
  }
  else {
    uint64_t v32 = 0;
  }
  uint64_t v33 = *(void (**)(uint64_t, __CFString *, CFAllocatorRef, long long *))(v32 + 48);
  if (v33) {
    v33(CMBaseObject, @"TransportDevice", v29, &v42);
  }
  *((void *)&v42 + 1) = APEndpointDescriptionCopyDebugString(*(void *)(v6 + 40));
  CFTypeRef v34 = *(CFTypeRef *)(v6 + 184);
  if (v34) {
    CFTypeRef v34 = CFRetain(v34);
  }
  *(void *)&long long v43 = v34;
  CFTypeRef v35 = *(CFTypeRef *)(v6 + 192);
  if (v35) {
    CFTypeRef v35 = CFRetain(v35);
  }
  *((void *)&v43 + 1) = v35;
  if (v38) {
    CFTypeRef v36 = CFRetain(v38);
  }
  else {
    CFTypeRef v36 = 0;
  }
  *((void *)&v44 + 1) = v36;
  long long v45 = v41;
  APSDispatchAsyncFHelper();
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
  CFArrayRef v37 = *(const void **)(a1 + 16);
  if (v37) {
    CFRelease(v37);
  }
}

uint64_t apEndpoint_BorrowScreen()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  if (gLogCategory_APEndpoint <= 40 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 128))
  {
    APSLogErrorAt();
    uint64_t Value = 4294950573;
    goto LABEL_16;
  }
  if (*(_DWORD *)(DerivedStorage + 152) != 2) {
    goto LABEL_15;
  }
  if (!*(unsigned char *)(DerivedStorage + 248)) {
    goto LABEL_15;
  }
  CFDictionaryRef v1 = *(const __CFDictionary **)(DerivedStorage + 168);
  if (!v1) {
    goto LABEL_15;
  }
  uint64_t Value = (uint64_t)CFDictionaryGetValue(v1, (const void *)*MEMORY[0x1E4F21488]);
  if (Value)
  {
    uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v3) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    CFDictionaryRef v5 = *(void (**)(uint64_t, void, void, void))(v4 + 16);
    if (v5) {
      v5(Value, 0, 0, 0);
    }
LABEL_15:
    uint64_t Value = 0;
  }
LABEL_16:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  return Value;
}

uint64_t apEndpoint_UnborrowScreen()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  if (gLogCategory_APEndpoint <= 40 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 128))
  {
    APSLogErrorAt();
    uint64_t Value = 4294950573;
    goto LABEL_16;
  }
  if (*(_DWORD *)(DerivedStorage + 152) != 2) {
    goto LABEL_15;
  }
  if (!*(unsigned char *)(DerivedStorage + 248)) {
    goto LABEL_15;
  }
  CFDictionaryRef v1 = *(const __CFDictionary **)(DerivedStorage + 168);
  if (!v1) {
    goto LABEL_15;
  }
  uint64_t Value = (uint64_t)CFDictionaryGetValue(v1, (const void *)*MEMORY[0x1E4F21488]);
  if (Value)
  {
    uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v3) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    CFDictionaryRef v5 = *(void (**)(uint64_t, void, void, void))(v4 + 8);
    if (v5) {
      v5(Value, 0, 0, 0);
    }
LABEL_15:
    uint64_t Value = 0;
  }
LABEL_16:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  return Value;
}

uint64_t apEndpoint_DuckAudio()
{
  unsigned int v7 = 0;
  uint64_t FigEndpoint = (const void *)FigEndpointExtendedGetFigEndpoint();
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    CFMutableDictionaryRef v3 = Mutable;
    CFStringGetTypeID();
    Typeduint64_t Value = (const void *)CFDictionaryGetTypedValue();
    if (CFEqual(TypedValue, (CFTypeRef)*MEMORY[0x1E4F20550]))
    {
      CFDictionaryRef v5 = @"duckAudio";
    }
    else
    {
      if (!CFEqual(TypedValue, (CFTypeRef)*MEMORY[0x1E4F20558]))
      {
        unsigned int v7 = -16720;
        goto LABEL_27;
      }
      CFDictionaryRef v5 = @"unduckAudio";
    }
    if (FigCFDictionaryGetDoubleIfPresent())
    {
      unsigned int v7 = CFDictionarySetDouble();
      if (v7) {
        goto LABEL_27;
      }
    }
    if (FigCFDictionaryGetDoubleIfPresent())
    {
      unsigned int v7 = CFDictionarySetDouble();
      if (v7) {
        goto LABEL_27;
      }
    }
    if (!endpoint_isInLocalCluster()) {
      goto LABEL_26;
    }
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
    unsigned int v7 = apEndpoint_sendCommandInternal(FigEndpoint, v5, v3);
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
    if (!v7)
    {
      if (gLogCategory_APEndpoint > 50) {
        goto LABEL_28;
      }
      if (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()) {
        goto LABEL_21;
      }
      goto LABEL_26;
    }
    if (gLogCategory_APEndpoint <= 90)
    {
      if (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize()) {
LABEL_21:
      }
        LogPrintF();
LABEL_26:
      if (v7) {
        goto LABEL_27;
      }
LABEL_28:
      CFRelease(v3);
      return v7;
    }
LABEL_27:
    APSLogErrorAt();
    goto LABEL_28;
  }
  APSLogErrorAt();
  return 4294950575;
}

uint64_t apEndpoint_CreateRemoteControlSession(const void *a1, const __CFDictionary *a2, CFTypeRef *a3)
{
  return endpoint_createCommChannelInternal(a1, a2, a3, 0);
}

uint64_t apEndpoint_SendData(const void *a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  if (!a2)
  {
    APSLogErrorAt();
    int v20 = -16720;
LABEL_19:
    int v19 = 1;
    goto LABEL_11;
  }
  CFDictionaryRef v11 = *(const __CFDictionary **)(DerivedStorage + 336);
  if (!v11)
  {
    APSLogErrorAt();
    int v20 = -16726;
    goto LABEL_19;
  }
  uint64_t Value = CFDictionaryGetValue(v11, a2);
  if (!Value)
  {
    APSLogErrorAt();
    int v20 = -16725;
    goto LABEL_19;
  }
  uint64_t v13 = Value;
  CFTypeID v14 = malloc_type_calloc(1uLL, 0x28uLL, 0x10E0040139F2759uLL);
  if (!v14)
  {
    APSLogErrorAt();
    int v20 = -16721;
    goto LABEL_19;
  }
  uint64_t v15 = v14;
  *CFTypeID v14 = CFRetain(a1);
  v15[1] = CFRetain(a2);
  v15[2] = a4;
  v15[3] = a5;
  uint64_t v16 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v16) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = 0;
  }
  BOOL v18 = *(void (**)(const void *, uint64_t, void (*)(int, uint64_t, uint64_t), void *))(v17 + 8);
  if (v18) {
    v18(v13, a3, apEndpoint_rcsSendMessageCompletion, v15);
  }
  int v19 = 0;
  int v20 = 0;
LABEL_11:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  if (a4 && v19) {
    APEndpointCallRCSendDataCompletionAsync(a1, a2, v20, *(dispatch_queue_t *)DerivedStorage, a4, a5);
  }
  return 0;
}

uint64_t apEndpoint_CloseCommChannel(uint64_t a1, const void *a2)
{
  FigEndpointExtendedGetFigEndpoint();
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  if (!a2) {
    goto LABEL_17;
  }
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  CFDictionaryRef v4 = *(const __CFDictionary **)(DerivedStorage + 336);
  if (!v4)
  {
LABEL_17:
    APSLogErrorAt();
    uint64_t v10 = 4294950576;
    goto LABEL_16;
  }
  uint64_t Value = CFDictionaryGetValue(v4, a2);
  if (!Value)
  {
    APSLogErrorAt();
    uint64_t v10 = 4294950571;
    goto LABEL_16;
  }
  uint64_t v6 = Value;
  uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  CFDictionaryRef v9 = *(uint64_t (**)(const void *))(v8 + 24);
  if (!v9)
  {
    uint64_t v10 = 4294954514;
LABEL_15:
    APSLogErrorAt();
    goto LABEL_16;
  }
  uint64_t v10 = v9(v6);
  if (v10) {
    goto LABEL_15;
  }
LABEL_16:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  return v10;
}

uint64_t apEndpoint_AcquireAndCopyResource(uint64_t a1, uint64_t a2, const __CFDictionary *a3, void *a4)
{
  FigEndpointExtendedGetFigEndpoint();
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  if (*(_DWORD *)(DerivedStorage + 152) == 2)
  {
    if (FigCFEqual())
    {
      uint64_t v7 = CMBaseObjectGetDerivedStorage();
      if (a3 && (uint64_t v8 = v7, (v9 = CFDictionaryGetValue(a3, (const void *)*MEMORY[0x1E4F202F8])) != 0))
      {
        uint64_t v10 = v9;
        if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
          LogPrintF();
        }
        CFDictionaryRef v12 = *(const __CFDictionary **)(v8 + 168);
        if (v12 && (Value = CFDictionaryGetValue(v12, v10)) != 0 && (CFTypeRef v14 = CFRetain(Value)) != 0)
        {
          uint64_t v11 = 0;
          *a4 = v14;
        }
        else
        {
          APSLogErrorAt();
          uint64_t v11 = 4294950571;
        }
      }
      else
      {
        APSLogErrorAt();
        uint64_t v11 = 4294950576;
      }
    }
    else
    {
      if (gLogCategory_APEndpoint <= 90 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      uint64_t v11 = 4294950570;
    }
  }
  else
  {
    uint64_t v11 = 4294949690;
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  return v11;
}

uint64_t apEndpoint_RelinquishResource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  FigEndpointExtendedGetFigEndpoint();
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpoint <= 50 && (gLogCategory_APEndpoint != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 120));
  if (*(_DWORD *)(DerivedStorage + 152) != 2)
  {
    uint64_t v5 = 4294949690;
LABEL_13:
    APSLogErrorAt();
    goto LABEL_9;
  }
  if (!a3)
  {
    uint64_t v5 = 4294950576;
    goto LABEL_13;
  }
  if (!FigCFEqual())
  {
    uint64_t v5 = 4294950570;
    goto LABEL_13;
  }
  uint64_t v5 = 0;
LABEL_9:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 120));
  return v5;
}

void apEndpoint_rcsSendMessageCompletion(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t DerivedStorage = (dispatch_queue_t *)CMBaseObjectGetDerivedStorage();
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6) {
    APEndpointCallRCSendDataCompletionAsync(*(CFTypeRef *)a3, *(CFTypeRef *)(a3 + 8), a1, *DerivedStorage, v6, *(void *)(a3 + 24));
  }
  if (*(void *)a3) {
    CFRelease(*(CFTypeRef *)a3);
  }
  uint64_t v7 = *(const void **)(a3 + 8);
  if (v7) {
    CFRelease(v7);
  }
  free((void *)a3);
}

uint64_t APEndpointStreamScreenCreate(const __CFAllocator *a1, const __CFDictionary *a2, CFTypeRef cf, unint64_t a4, const void *a5, const void *a6, const void *a7, CFTypeRef *a8)
{
  uint64_t v129 = *MEMORY[0x1E4F143B8];
  CFArrayRef theArray = 0;
  CFTypeRef v125 = 0;
  CFTypeRef v122 = 0;
  CFTypeRef v123 = 0;
  uint64_t v121 = 0x3FF0000000000000;
  int v120 = 0;
  if (!cf || (CFTypeID v16 = CFGetTypeID(cf), v16 != CFStringGetTypeID()))
  {
    uint64_t v34 = 4294950536;
LABEL_267:
    APSLogErrorAt();
    goto LABEL_34;
  }
  if (!a5 || (CFTypeID v17 = CFGetTypeID(a5), v17 != APEndpointDescriptionGetTypeID()))
  {
    uint64_t v34 = 4294950536;
    goto LABEL_267;
  }
  if (!a8)
  {
    uint64_t v34 = 4294950536;
    goto LABEL_267;
  }
  if (!a7)
  {
    uint64_t v34 = 4294950536;
    goto LABEL_267;
  }
  CFDictionaryRef theDict = a2;
  if (a2)
  {
    uint64_t Value = CFDictionaryGetValue(a2, @"TransportStream");
    if (Value)
    {
      unint64_t v19 = (unint64_t)Value;
      CFTypeID v20 = CFGetTypeID(Value);
      BOOL v21 = v20 == FigTransportStreamGetTypeID();
      a2 = theDict;
      if (v21) {
        unint64_t v22 = v19;
      }
      else {
        unint64_t v22 = 0;
      }
    }
    else
    {
      unint64_t v22 = 0;
    }
    FigCFDictionaryGetDoubleIfPresent();
    FigCFDictionaryGetInt32IfPresent();
    CFDictionaryGetValue(a2, @"LogPrefix");
  }
  else
  {
    unint64_t v22 = 0;
  }
  if (!(a4 | v22))
  {
    uint64_t v34 = 4294950536;
    goto LABEL_267;
  }
  if (a4 && v22)
  {
    uint64_t v34 = 4294950536;
    goto LABEL_267;
  }
  unint64_t v117 = a8;
  FigEndpointStreamGetClassID();
  uint64_t v23 = CMDerivedObjectCreate();
  if (v23)
  {
    uint64_t v34 = v23;
    goto LABEL_267;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  SNPrintF();
  *(void *)uint64_t DerivedStorage = dispatch_queue_create(label, 0);
  *(void *)(DerivedStorage + 16) = os_transaction_create();
  *(void *)(DerivedStorage + 480) = dispatch_queue_create("APEndpointStreamScreen.stats", 0);
  SNPrintF();
  *(void *)(DerivedStorage + 96) = dispatch_queue_create(label, 0);
  *(void *)(DerivedStorage + 264) = v121;
  *(_DWORD *)(DerivedStorage + 272) = v120;
  *(void *)(DerivedStorage + 8) = CFRetain(cf);
  *(void *)(DerivedStorage + 56) = CFRetain(a5);
  *(void *)(DerivedStorage + 40) = CFStringCreateF();
  uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(DerivedStorage + 56));
  uint64_t v26 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v26) {
    uint64_t v27 = v26;
  }
  else {
    uint64_t v27 = 0;
  }
  uint64_t v28 = *(uint64_t (**)(uint64_t, __CFString *, void, CFArrayRef *))(v27 + 48);
  if (v28)
  {
    CFAllocatorRef v29 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    uint64_t v30 = v28(CMBaseObject, @"DisplayDescriptionArray", *MEMORY[0x1E4F1CF80], &theArray);
    if (v30)
    {
      uint64_t v34 = v30;
    }
    else
    {
      if (!theArray || CFArrayGetCount(theArray) <= 0)
      {
        APSLogErrorAt();
        uint64_t v34 = 4294950536;
        goto LABEL_34;
      }
      CFDataRef ValueAtIndex = CFArrayGetValueAtIndex(theArray, 0);
      if (ValueAtIndex)
      {
        uint64_t v32 = (uint64_t)ValueAtIndex;
        if (!a6)
        {
          *(void *)(DerivedStorage + 72) = CFRetain(ValueAtIndex);
          int v33 = 110;
          goto LABEL_42;
        }
        *(void *)(DerivedStorage + 72) = CFRetain(a6);
        APEndpointDisplayDescriptionCopyProperty(v32, @"UUID", (uint64_t)v29, (uint64_t)&v123);
        if (v123)
        {
          APEndpointDisplayDescriptionCopyProperty(*(void *)(DerivedStorage + 72), @"UUID", (uint64_t)v29, (uint64_t)&v122);
          if (FigCFEqual()) {
            int v33 = 110;
          }
          else {
            int v33 = 111;
          }
LABEL_42:
          *(_DWORD *)(DerivedStorage + 88) = v33;
          if (a4) {
            CFTypeRef v37 = CFRetain((CFTypeRef)a4);
          }
          else {
            CFTypeRef v37 = 0;
          }
          *(void *)(DerivedStorage + 48) = v37;
          if (v22) {
            CFTypeRef v38 = CFRetain((CFTypeRef)v22);
          }
          else {
            CFTypeRef v38 = 0;
          }
          *(void *)(DerivedStorage + 128) = v38;
          int v39 = dispatch_source_create(MEMORY[0x1E4F14490], 0, 0, *(dispatch_queue_t *)DerivedStorage);
          *(void *)(DerivedStorage + 200) = v39;
          handler[0] = MEMORY[0x1E4F143A8];
          handler[1] = 0x40000000;
          handler[2] = __APEndpointStreamScreenCreate_block_invoke;
          handler[3] = &__block_descriptor_tmp_39;
          handler[4] = v125;
          dispatch_source_set_event_handler(v39, handler);
          dispatch_source_set_timer(*(dispatch_source_t *)(DerivedStorage + 200), 0xFFFFFFFFFFFFFFFFLL, 0, 0);
          dispatch_resume(*(dispatch_object_t *)(DerivedStorage + 200));
          *(void *)(DerivedStorage + 64) = CFRetain(a7);
          uint64_t v40 = CMBaseObjectGetDerivedStorage();
          if (theDict) {
            CFDictionaryGetValue(theDict, @"EventRecorder");
          }
          long long v41 = *(const void **)(v40 + 1128);
          if (v41)
          {
            CFRelease(v41);
            *(void *)(v40 + 1128) = 0;
          }
          uint64_t v42 = APSEventRecorderCreate();
          if (!v42)
          {
            APSEventRecorderAddSignPostForEvent();
            APSEventRecorderAddSignPostForEvent();
            *(void *)(DerivedStorage + 1136) = dispatch_queue_create("APEndpointStreamScreen.%{ptr}.RTC", 0);
            *(void *)(DerivedStorage + 1144) = CFArrayCreateMutable(a1, 0, MEMORY[0x1E4F1D510]);
            CFTypeRef v43 = v125;
            long long v44 = (unsigned char *)CMBaseObjectGetDerivedStorage();
            long long v45 = v44;
            unsigned __int8 v126 = 0;
            if (v44[24])
            {
              APSLogErrorAt();
              uint64_t v34 = 4294950534;
              goto LABEL_281;
            }
            CFTypeRef v35 = &unk_1EA629000;
            if (v44[25]) {
              goto LABEL_247;
            }
            LODWORD(cfa) = 0;
            v44[380] = APSGetFBOPropertyInt64() != 0;
            uint64_t v46 = *((void *)v45 + 6);
            if (v46) {
              LODWORD(v46) = APSGetFBOPropertyInt64();
            }
            *((_DWORD *)v45 + 293) = v46;
            v45[378] = APSGetFBOPropertyInt64() != 0;
            v45[388] = APSGetFBOPropertyInt64() != 0;
            v45[389] = APDemoManagerIsDemoSession(*((void *)v45 + 7), *((void *)v45 + 6));
            v45[390] = 0;
            if (v45[378]) {
              int v47 = APSCarPlayScreenLatencyMs();
            }
            else {
              int v47 = APSScreenLatencyMs();
            }
            *((_DWORD *)v45 + 291) = v47;
            int v48 = APSScreenMediaPresentationLatencyMs();
            if (v48 <= *((_DWORD *)v45 + 291)) {
              int v49 = *((_DWORD *)v45 + 291);
            }
            else {
              int v49 = v48;
            }
            *((_DWORD *)v45 + 292) = v49;
            if (gLogCategory_APEndpointStreamScreen <= 40
              && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            *((void *)v45 + 117) = MillisecondsToUpTicks();
            *((_DWORD *)v45 + 236) = 0;
            v45[948] = 0;
            v45[949] = APSGetFBOPropertyInt64() != 0;
            v45[951] = APSGetFBOPropertyInt64() != 0;
            v45[952] = 0;
            *((void *)v45 + 116) = *((void *)v45 + 5);
            *(_OWORD *)(v45 + 216) = xmmword_1D0B88B70;
            long long v50 = *MEMORY[0x1E4F1DB30];
            *(_OWORD *)(v45 + 232) = *MEMORY[0x1E4F1DB30];
            *(_OWORD *)(v45 + 248) = v50;
            uint64_t v51 = APEndpointDescriptionGetCMBaseObject(*((void *)v45 + 7));
            uint64_t v52 = *(void *)(CMBaseObjectGetVTable() + 8);
            if (v52) {
              uint64_t v53 = v52;
            }
            else {
              uint64_t v53 = 0;
            }
            BOOL v54 = (const void **)(v45 + 280);
            uint64_t v55 = *(uint64_t (**)(uint64_t, __CFString *, const __CFAllocator *, unsigned char *))(v53 + 48);
            if (v55) {
              int v56 = v55(v51, @"receiverHDRCapability", v29, v45 + 280);
            }
            else {
              int v56 = -12782;
            }
            LODWORD(cfa) = v56;
            v45[362] = 0;
            *((_WORD *)v45 + 180) = 0;
            v45[365] = 1;
            v45[366] = APSSettingsGetInt64() == 0;
            v45[320] = 0;
            v45[364] = 1;
            *(_DWORD *)(v45 + 367) = 256;
            *((_DWORD *)v45 + 93) = *((_DWORD *)v45 + 292);
            v45[363] = APSGetFBOPropertyInt64() != 0;
            *((void *)v45 + 44) = 0;
            v45[379] = 0;
            v45[950] = v45[378] == 0;
            *((_DWORD *)v45 + 96) = 0;
            *((_DWORD *)v45 + 290) = APSSettingsGetInt64();
            *((_OWORD *)v45 + 25) = xmmword_1D0B88B80;
            *((void *)v45 + 52) = 0x418312D000000000;
            *((_OWORD *)v45 + 27) = xmmword_1D0B88B90;
            *((_OWORD *)v45 + 28) = xmmword_1D0B88BA0;
            *((void *)v45 + 58) = 0;
            *((void *)v45 + 59) = 5 * UpTicksPerSecond();
            LODWORD(cfa) = 0;
            *((_DWORD *)v45 + 236) = FigGetCFPreferenceNumberWithDefault();
            if (gLogCategory_APEndpointStreamScreen <= 40
              && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            v45[948] = FigGetCFPreferenceNumberWithDefault();
            if (gLogCategory_APEndpointStreamScreen <= 40
              && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            v45[952] = FigGetCFPreferenceNumberWithDefault();
            if (gLogCategory_APEndpointStreamScreen <= 40
              && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            IsAppleInternalBuild();
            v45[953] = FigGetCFPreferenceNumberWithDefault();
            if (gLogCategory_APEndpointStreamScreen <= 40
              && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            v45[364] = FigGetCFPreferenceNumberWithDefault();
            if (gLogCategory_APEndpointStreamScreen <= 40
              && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            v45[365] = FigGetCFPreferenceNumberWithDefault();
            if (gLogCategory_APEndpointStreamScreen <= 40
              && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            v45[366] = FigGetCFPreferenceNumberWithDefault();
            if (gLogCategory_APEndpointStreamScreen <= 40
              && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            FigGetCFPreferenceDoubleWithDefault();
            *((double *)v45 + 54) = v57;
            if (v57 > 0.0
              && gLogCategory_APEndpointStreamScreen <= 40
              && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            int CFPreferenceNumberWithDefault = FigGetCFPreferenceNumberWithDefault();
            *((_DWORD *)v45 + 113) = CFPreferenceNumberWithDefault;
            if (CFPreferenceNumberWithDefault >= 1
              && gLogCategory_APEndpointStreamScreen <= 40
              && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            int v59 = FigGetCFPreferenceNumberWithDefault();
            *((_DWORD *)v45 + 112) = v59;
            if (gLogCategory_APEndpointStreamScreen <= 40)
            {
              if (gLogCategory_APEndpointStreamScreen != -1
                || (int v60 = _LogCategory_Initialize(), v59 = *((_DWORD *)v45 + 112), v60))
              {
                LogPrintF();
                int v59 = *((_DWORD *)v45 + 112);
              }
            }
            *((_DWORD *)v45 + 114) = v59;
            *((_DWORD *)v45 + 115) = v59;
            FigGetCFPreferenceDoubleWithDefault();
            *((void *)v45 + 51) = v61;
            if (gLogCategory_APEndpointStreamScreen <= 40
              && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            FigGetCFPreferenceDoubleWithDefault();
            *((void *)v45 + 52) = v62;
            if (gLogCategory_APEndpointStreamScreen <= 40
              && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            v45[368] = FigGetCFPreferenceNumberWithDefault();
            if (gLogCategory_APEndpointStreamScreen <= 40
              && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            int v63 = FigGetCFPreferenceNumberWithDefault();
            *((_DWORD *)v45 + 93) = v63;
            if (v63 >= 1
              && gLogCategory_APEndpointStreamScreen <= 40
              && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            if (v45[378])
            {
              int v64 = FigGetCFPreferenceNumberWithDefault();
              *((_DWORD *)v45 + 96) = v64;
              if (v64 >= 1
                && gLogCategory_APEndpointStreamScreen <= 40
                && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
            }
            uint64_t v65 = (const void *)APSSettingsCopyValue();
            uint64_t v66 = v65;
            if (cfa || !v65)
            {
              CFDictionaryRef v68 = theDict;
              if (!v65)
              {
LABEL_150:
                LODWORD(cfa) = 0;
                int v70 = FigGetCFPreferenceNumberWithDefault();
                if (v70 != *((_DWORD *)v45 + 293))
                {
                  *((_DWORD *)v45 + 293) = v70;
                  if (gLogCategory_APEndpointStreamScreen <= 40
                    && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
                  {
                    LogPrintF();
                  }
                  if (!v45[378]) {
                    *((_DWORD *)v45 + 291) = APSScreenLatencyMs();
                  }
                }
                if (IsAppleInternalBuild())
                {
                  CFTypeRef v71 = (const void *)APSSettingsCopyValue();
                  if (v71)
                  {
                    uint64_t v72 = v71;
                    CFTypeID v73 = CFGetTypeID(v71);
                    if (v73 == CFStringGetTypeID())
                    {
                      CFDictionaryRef v74 = (const void *)*((void *)v45 + 49);
                      *((void *)v45 + 49) = v72;
                      CFRetain(v72);
                      if (v74) {
                        CFRelease(v74);
                      }
                      if (gLogCategory_APEndpointStreamScreen <= 40
                        && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
                      {
                        LogPrintF();
                      }
                    }
                    CFRelease(v72);
                    CFDictionaryRef v68 = theDict;
                  }
                }
                CallbacksForUnsortedSampleBuffers = CMBufferQueueGetCallbacksForUnsortedSampleBuffers();
                uint64_t v76 = CMBufferQueueCreate(v29, 0, CallbacksForUnsortedSampleBuffers, (CMBufferQueueRef *)v45 + 13);
                if (v76)
                {
                  uint64_t v34 = v76;
                }
                else
                {
                  uint64_t v77 = CMBufferQueueInstallTriggerWithIntegerThreshold(*((CMBufferQueueRef *)v45 + 13), (CMBufferQueueTriggerCallback)screenstream_signalDataAvailable, v45, 11, 0, (CMBufferQueueTriggerToken *)v45 + 14);
                  if (!v77)
                  {
                    if (!v68) {
                      goto LABEL_215;
                    }
                    uint64_t v78 = CFDictionaryGetValue(v68, @"clientPID");
                    if (v78)
                    {
                      uint64_t v79 = v78;
                      CFTypeID v80 = CFGetTypeID(v78);
                      if (v80 != CFNumberGetTypeID()) {
                        goto LABEL_280;
                      }
                      uint64_t v81 = (const void *)*((void *)v45 + 24);
                      *((void *)v45 + 24) = v79;
                      CFRetain(v79);
                      if (v81) {
                        goto LABEL_175;
                      }
                    }
                    else
                    {
                      uint64_t v81 = (const void *)*((void *)v45 + 24);
                      *((void *)v45 + 24) = 0;
                      if (v81) {
LABEL_175:
                      }
                        CFRelease(v81);
                    }
                    uint64_t v82 = CFDictionaryGetValue(theDict, @"ScreenSource");
                    unint64_t v83 = (unint64_t)v82;
                    if (v82)
                    {
                      CFTypeID v84 = CFGetTypeID(v82);
                      if (v84 != FigVirtualDisplaySourceGetTypeID()) {
                        goto LABEL_280;
                      }
                      CFTypeRef v85 = (const void *)*((void *)v45 + 18);
                      *((void *)v45 + 18) = v83;
                      CFRetain((CFTypeRef)v83);
                      if (v85) {
                        goto LABEL_179;
                      }
                    }
                    else
                    {
                      CFTypeRef v85 = (const void *)*((void *)v45 + 18);
                      *((void *)v45 + 18) = 0;
                      if (v85) {
LABEL_179:
                      }
                        CFRelease(v85);
                    }
                    BOOL v86 = CFDictionaryGetValue(theDict, @"ScreenProcessor");
                    unint64_t v87 = (unint64_t)v86;
                    if (v86)
                    {
                      CFTypeID v88 = CFGetTypeID(v86);
                      if (v88 != FigVirtualDisplayProcessorGetTypeID()) {
                        goto LABEL_280;
                      }
                      CFDictionaryRef v89 = (const void *)*((void *)v45 + 19);
                      *((void *)v45 + 19) = v87;
                      CFRetain((CFTypeRef)v87);
                      if (!v89) {
                        goto LABEL_184;
                      }
                    }
                    else
                    {
                      CFDictionaryRef v89 = (const void *)*((void *)v45 + 19);
                      *((void *)v45 + 19) = 0;
                      if (!v89) {
                        goto LABEL_184;
                      }
                    }
                    CFRelease(v89);
LABEL_184:
                    int v90 = CFDictionaryGetValue(theDict, @"ScreenUsageMode");
                    if (!v90)
                    {
                      long long v93 = (const void *)*((void *)v45 + 21);
                      *((void *)v45 + 21) = 0;
                      goto LABEL_194;
                    }
                    CFTypeRef v91 = v90;
                    CFTypeID v92 = CFGetTypeID(v90);
                    if (v92 == CFStringGetTypeID())
                    {
                      long long v93 = (const void *)*((void *)v45 + 21);
                      *((void *)v45 + 21) = v91;
                      CFRetain(v91);
LABEL_194:
                      if (v93) {
                        CFRelease(v93);
                      }
                      if (v83 | v87) {
                        goto LABEL_201;
                      }
                      long long v94 = CFDictionaryGetValue(theDict, @"ProtectionOptions");
                      if (!v94)
                      {
                        CFTypeRef v97 = (const void *)*((void *)v45 + 39);
                        *((void *)v45 + 39) = 0;
                        if (!v97)
                        {
LABEL_201:
                          uint64_t v98 = CFDictionaryGetValue(theDict, @"ScreenOverrides");
                          if (v98
                            && (uint64_t v99 = v98, v100 = CFGetTypeID(v98), v100 == CFDictionaryGetTypeID())
                            && IsAppleInternalBuild())
                          {
                            CFTypeRef v101 = (const void *)*((void *)v45 + 22);
                            *((void *)v45 + 22) = v99;
                            CFRetain(v99);
                          }
                          else
                          {
                            CFTypeRef v101 = (const void *)*((void *)v45 + 22);
                            *((void *)v45 + 22) = 0;
                          }
                          if (v101) {
                            CFRelease(v101);
                          }
                          FigCFDictionaryGetBooleanIfPresent();
                          FigCFDictionaryGetBooleanIfPresent();
                          if (gLogCategory_APEndpointStreamScreen <= 50
                            && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
                          {
                            LogPrintF();
                          }
                          FigCFDictionaryGetBooleanIfPresent();
LABEL_215:
                          int v102 = v126;
                          uint64_t v103 = CMBaseObjectGetDerivedStorage();
                          CFTypeRef cfa = 0;
                          uint64_t inited = screenstream_initDisplayInfo(v103);
                          if (inited)
                          {
                            uint64_t v34 = inited;
                            APSLogErrorAt();
                            CFTypeRef v35 = (_DWORD *)&unk_1EA629000;
LABEL_276:
                            APSLogErrorAt();
                            goto LABEL_282;
                          }
                          int v105 = *(_DWORD *)(v103 + 384);
                          if (v105 < 1) {
                            uint64_t v106 = APVirtualDisplaySinkCreate(v43, *(const void **)(v103 + 104), &cfa);
                          }
                          else {
                            uint64_t v106 = APVirtualDisplayTestSinkCreate(v105, v43, *(const void **)(v103 + 104), &cfa);
                          }
                          uint64_t v34 = v106;
                          if (v106)
                          {
                            APSLogErrorAt();
                            CFTypeRef v35 = (_DWORD *)&unk_1EA629000;
                            goto LABEL_240;
                          }
                          if (!*(void *)(v103 + 144)) {
                            FigVirtualDisplaySourceScreenGetCurrent();
                          }
                          if (v102 && *(unsigned char *)(v103 + 367))
                          {
                            if (gLogCategory_APEndpointStreamScreen <= 50
                              && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
                            {
                              LogPrintF();
                            }
                            *(void *)(v103 + 352) = 1;
                          }
                          VirtualDisplayint ActivationOptions = screenstream_createVirtualDisplayActivationOptions();
                          CFTypeRef v108 = (const void *)FigVirtualDisplaySessionActivateWithSourceAndSink();
                          *(void *)(v103 + 160) = v108;
                          if (v108)
                          {
                            CFRetain(v108);
                            CMNotificationCenterGetDefaultLocalCenter();
                            CMNotificationCenterAddListener();
                            uint64_t v109 = *(void *)(v103 + 160);
                            uint64_t v110 = *(void *)(CMBaseObjectGetVTable() + 16);
                            if (v110) {
                              uint64_t v111 = v110;
                            }
                            else {
                              uint64_t v111 = 0;
                            }
                            v112 = *(uint64_t (**)(uint64_t))(v111 + 40);
                            if (v112)
                            {
                              uint64_t v34 = v112(v109);
                              if (!v34) {
                                goto LABEL_238;
                              }
                            }
                            else
                            {
                              uint64_t v34 = 4294954514;
                            }
                            APSLogErrorAt();
                          }
                          else
                          {
                            APSLogErrorAt();
                            uint64_t v34 = 4294950535;
                          }
LABEL_238:
                          CFTypeRef v35 = &unk_1EA629000;
                          if (VirtualDisplayActivationOptions) {
                            CFRelease(VirtualDisplayActivationOptions);
                          }
LABEL_240:
                          if (cfa) {
                            CFRelease(cfa);
                          }
                          if (!v34)
                          {
                            v45[25] = 1;
                            int v113 = v35[642];
                            if (v113 >= 51)
                            {
LABEL_251:
                              uint64_t v34 = 0;
                              *unint64_t v117 = v125;
                              CFTypeRef v125 = 0;
                              goto LABEL_252;
                            }
                            if (v113 != -1 || _LogCategory_Initialize()) {
                              LogPrintF();
                            }
LABEL_247:
                            int v114 = v35[642];
                            if (v114 <= 50 && (v114 != -1 || _LogCategory_Initialize())) {
                              LogPrintF();
                            }
                            goto LABEL_251;
                          }
                          goto LABEL_276;
                        }
LABEL_200:
                        CFRelease(v97);
                        goto LABEL_201;
                      }
                      uint64_t v95 = v94;
                      CFTypeID v96 = CFGetTypeID(v94);
                      if (v96 == CFDictionaryGetTypeID())
                      {
                        CFTypeRef v97 = (const void *)*((void *)v45 + 39);
                        *((void *)v45 + 39) = v95;
                        CFRetain(v95);
                        if (!v97) {
                          goto LABEL_201;
                        }
                        goto LABEL_200;
                      }
                    }
LABEL_280:
                    APSLogErrorAt();
                    uint64_t v34 = 4294950536;
                    goto LABEL_281;
                  }
                  uint64_t v34 = v77;
                }
                APSLogErrorAt();
LABEL_281:
                CFTypeRef v35 = &unk_1EA629000;
LABEL_282:
                int v116 = v35[642];
                if (v116 <= 90 && (v116 != -1 || _LogCategory_Initialize())) {
                  LogPrintF();
                }
                screenstream_cleanup();
                APSLogErrorAt();
                goto LABEL_35;
              }
            }
            else
            {
              CFTypeID v67 = CFGetTypeID(v65);
              BOOL v21 = v67 == CFStringGetTypeID();
              CFDictionaryRef v68 = theDict;
              if (v21)
              {
                CFTypeRef v69 = *v54;
                *BOOL v54 = v66;
                CFRetain(v66);
                if (v69) {
                  CFRelease(v69);
                }
                CFDictionaryRef v68 = theDict;
                if (gLogCategory_APEndpointStreamScreen <= 50
                  && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
                {
                  LogPrintF();
                }
              }
            }
            CFRelease(v66);
            goto LABEL_150;
          }
          uint64_t v34 = v42;
          APSLogErrorAt();
          goto LABEL_33;
        }
        uint64_t v34 = 4294950536;
      }
      else
      {
        uint64_t v34 = 4294950536;
      }
    }
  }
  else
  {
    uint64_t v34 = 4294954514;
  }
LABEL_33:
  APSLogErrorAt();
LABEL_34:
  CFTypeRef v35 = &unk_1EA629000;
LABEL_35:
  int v36 = v35[642];
  if (v36 <= 90 && (v36 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
LABEL_252:
  if (theArray) {
    CFRelease(theArray);
  }
  if (v122) {
    CFRelease(v122);
  }
  if (v123) {
    CFRelease(v123);
  }
  if (v125) {
    CFRelease(v125);
  }
  return v34;
}

uint64_t APEndpointDescriptionCopyProperty_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(a1);
  uint64_t VTable = CMBaseObjectGetVTable();
  uint64_t v11 = *(void *)(VTable + 8);
  uint64_t result = VTable + 8;
  uint64_t v10 = v11;
  if (v11) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = 0;
  }
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v13)
  {
    return v13(CMBaseObject, a2, a3, a4);
  }
  return result;
}

void __APEndpointStreamScreenCreate_block_invoke()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CMSampleBufferRef v32 = 0;
  memset(&sampleTimingArray, 0, sizeof(sampleTimingArray));
  CFTypeRef v29 = 0;
  CFTypeRef cf = 0;
  uint64_t v25 = 0;
  uint64_t v26 = &v25;
  uint64_t v27 = 0x2000000000;
  uint64_t v28 = 0;
  v23[0] = 0;
  v23[1] = v23;
  v23[2] = 0x2000000000;
  int v24 = 0;
  if (gLogCategory_APEndpointStreamScreen <= 30
    && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(void *)(DerivedStorage + 136))
  {
    CFAllocatorRef v1 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    uint64_t CMBaseObject = FigTransportStreamGetCMBaseObject();
    uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v3) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    uint64_t v5 = *(void (**)(uint64_t, void, const __CFAllocator *, CFTypeRef *))(v4 + 48);
    if (v5) {
      v5(CMBaseObject, *MEMORY[0x1E4F47790], v1, &cf);
    }
    if (*(unsigned char *)(DerivedStorage + 948) || *(_DWORD *)(DerivedStorage + 944))
    {
      uint64_t Shared = APSenderStatsCollectorGetShared();
      APSenderStatsCollectorCopySystemStats(Shared, (uint64_t)&v29);
    }
    uint64_t v7 = *(NSObject **)(DerivedStorage + 480);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 0x40000000;
    block[2] = __screenstream_statsTimerFired_block_invoke;
    block[3] = &unk_1E68968F0;
    block[4] = v23;
    block[5] = &v25;
    void block[6] = DerivedStorage;
    dispatch_sync(v7, block);
    CFDictionaryRef v8 = (const __CFDictionary *)cf;
    CFArrayRef v9 = (const __CFArray *)v26[3];
    if (v29) {
      CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy(v1, 0, (CFDictionaryRef)v29);
    }
    else {
      CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutable(v1, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    }
    uint64_t v11 = MutableCopy;
    if (v8)
    {
      uint64_t Value = CFDictionaryGetValue(v8, (const void *)*MEMORY[0x1E4F476F8]);
      if (Value) {
        CFDictionarySetValue(v11, @"txCapacityAvg", Value);
      }
      uint64_t v13 = CFDictionaryGetValue(v8, (const void *)*MEMORY[0x1E4F476E8]);
      if (v13) {
        CFDictionarySetValue(v11, @"lossAvg", v13);
      }
      CFTypeRef v14 = CFDictionaryGetValue(v8, (const void *)*MEMORY[0x1E4F476F0]);
      if (v14) {
        CFDictionarySetValue(v11, @"rttAvg", v14);
      }
    }
    if (v9)
    {
      CFIndex Count = CFArrayGetCount(v9);
      if (Count >= 1)
      {
        CFIndex v16 = 0;
        if (Count >= 7) {
          uint64_t v17 = 7;
        }
        else {
          uint64_t v17 = Count;
        }
        do
        {
          CFDataRef ValueAtIndex = CFArrayGetValueAtIndex(v9, v16);
          CFDictionarySetValue(v11, screenstream_createCombinedStats_fpsKeys[v16++], ValueAtIndex);
        }
        while (v17 != v16);
      }
    }
    FigCFDictionarySetInt32();
    if (CFDictionaryGetInt64() >= 1) {
      atomic_fetch_add((atomic_uint *volatile)(DerivedStorage + 1176), 1u);
    }
    *(_OWORD *)&sampleTimingArray.duration.value = *MEMORY[0x1E4F1FA48];
    CMTimeEpoch v19 = *(void *)(MEMORY[0x1E4F1FA48] + 16);
    *(_OWORD *)&sampleTimingArray.presentationTimeStamp.value = *MEMORY[0x1E4F1F9F8];
    CMTimeEpoch v20 = *(void *)(MEMORY[0x1E4F1F9F8] + 16);
    sampleTimingArray.duration.epoch = v19;
    sampleTimingArray.presentationTimeStamp.epoch = v20;
    *(_OWORD *)&sampleTimingArray.decodeTimeStamp.value = *(_OWORD *)&sampleTimingArray.presentationTimeStamp.value;
    sampleTimingArray.decodeTimeStamp.epoch = v20;
    if (CMSampleBufferCreate(v1, 0, 1u, 0, 0, 0, 0, 1, &sampleTimingArray, 0, 0, &v32))
    {
      APSLogErrorAt();
    }
    else
    {
      CMSetAttachment(v32, @"APStats", v11, 0);
      CMBufferQueueEnqueue(*(CMBufferQueueRef *)(DerivedStorage + 104), v32);
    }
  }
  else
  {
    APSLogErrorAt();
    uint64_t v11 = 0;
  }
  if (v32) {
    CFRelease(v32);
  }
  if (v11) {
    CFRelease(v11);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v29) {
    CFRelease(v29);
  }
  BOOL v21 = (const void *)v26[3];
  if (v21) {
    CFRelease(v21);
  }
  _Block_object_dispose(v23, 8);
  _Block_object_dispose(&v25, 8);
}

uint64_t APEndpointStreamScreenRestartBitstream(uint64_t a1)
{
  uint64_t v2 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t, __CFString *, void))(v3 + 40);
  if (!v4) {
    return 4294954514;
  }
  return v4(a1, @"ScreenRestartBitstream", 0);
}

uint64_t APEndpointStreamScreenSetRecordingState(uint64_t a1, int a2)
{
  if (a2) {
    uint64_t v3 = @"ScreenSetRecordingStateOn";
  }
  else {
    uint64_t v3 = @"ScreenSetRecordingStateOff";
  }
  uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *(uint64_t (**)(uint64_t, __CFString *, void))(v5 + 40);
  if (!v6) {
    return 4294954514;
  }
  return v6(a1, v3, 0);
}

uint64_t APEndpointStreamScreenUpdateDisplayInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t))(v5 + 40);
  if (!v6) {
    return 4294954514;
  }
  return v6(a1, @"UpdateDisplayInfo", a2);
}

void screenstream_Finalize()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamScreen <= 50
    && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  screenstream_cleanup();
  CFAllocatorRef v1 = *(const void **)(DerivedStorage + 8);
  if (v1)
  {
    CFRelease(v1);
    *(void *)(DerivedStorage + 8) = 0;
  }
  uint64_t v2 = *(const void **)(DerivedStorage + 1128);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(DerivedStorage + 1128) = 0;
  }
  uint64_t v3 = *(NSObject **)(DerivedStorage + 1136);
  if (v3)
  {
    dispatch_release(v3);
    *(void *)(DerivedStorage + 1136) = 0;
  }
  uint64_t v4 = *(const void **)(DerivedStorage + 1144);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(DerivedStorage + 1144) = 0;
  }
  uint64_t v5 = *(const void **)(DerivedStorage + 144);
  if (v5)
  {
    CFRelease(v5);
    *(void *)(DerivedStorage + 144) = 0;
  }
  uint64_t v6 = *(const void **)(DerivedStorage + 152);
  if (v6)
  {
    CFRelease(v6);
    *(void *)(DerivedStorage + 152) = 0;
  }
  uint64_t v7 = *(const void **)(DerivedStorage + 168);
  if (v7)
  {
    CFRelease(v7);
    *(void *)(DerivedStorage + 168) = 0;
  }
  CFDictionaryRef v8 = *(const void **)(DerivedStorage + 176);
  if (v8)
  {
    CFRelease(v8);
    *(void *)(DerivedStorage + 176) = 0;
  }
  CFArrayRef v9 = *(const void **)(DerivedStorage + 192);
  if (v9)
  {
    CFRelease(v9);
    *(void *)(DerivedStorage + 192) = 0;
  }
  uint64_t v10 = *(const void **)(DerivedStorage + 48);
  if (v10)
  {
    CFRelease(v10);
    *(void *)(DerivedStorage + 48) = 0;
  }
  uint64_t v11 = *(const void **)(DerivedStorage + 128);
  if (v11)
  {
    CFRelease(v11);
    *(void *)(DerivedStorage + 128) = 0;
  }
  uint64_t v12 = *(const void **)(DerivedStorage + 80);
  if (v12)
  {
    CFRelease(v12);
    *(void *)(DerivedStorage + 80) = 0;
  }
  uint64_t v13 = *(const void **)(DerivedStorage + 72);
  if (v13)
  {
    CFRelease(v13);
    *(void *)(DerivedStorage + 72) = 0;
  }
  CFTypeRef v14 = *(const void **)(DerivedStorage + 56);
  if (v14)
  {
    CFRelease(v14);
    *(void *)(DerivedStorage + 56) = 0;
  }
  uint64_t v15 = *(const void **)(DerivedStorage + 64);
  if (v15)
  {
    CFRelease(v15);
    *(void *)(DerivedStorage + 64) = 0;
  }
  CFIndex v16 = *(const void **)(DerivedStorage + 40);
  if (v16)
  {
    CFRelease(v16);
    *(void *)(DerivedStorage + 40) = 0;
  }
  uint64_t v17 = *(NSObject **)(DerivedStorage + 200);
  if (v17)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(DerivedStorage + 200));
    dispatch_release(v17);
    *(void *)(DerivedStorage + 200) = 0;
  }
  if (*(void *)DerivedStorage)
  {
    dispatch_release(*(dispatch_object_t *)DerivedStorage);
    *(void *)uint64_t DerivedStorage = 0;
  }
  BOOL v18 = *(NSObject **)(DerivedStorage + 96);
  if (v18)
  {
    dispatch_release(v18);
    *(void *)(DerivedStorage + 96) = 0;
  }
  CMTimeEpoch v19 = *(NSObject **)(DerivedStorage + 480);
  if (v19)
  {
    dispatch_release(v19);
    *(void *)(DerivedStorage + 480) = 0;
  }
  CMTimeEpoch v20 = *(const void **)(DerivedStorage + 32);
  if (v20)
  {
    CFRelease(v20);
    *(void *)(DerivedStorage + 32) = 0;
  }
  BOOL v21 = *(void **)(DerivedStorage + 16);
  if (v21)
  {
    os_release(v21);
    *(void *)(DerivedStorage + 16) = 0;
  }
}

__CFString *screenstream_CopyDebugDescription(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  uint64_t v4 = Mutable;
  uint64_t v5 = "yes";
  if (*(unsigned char *)(DerivedStorage + 25)) {
    uint64_t v6 = "yes";
  }
  else {
    uint64_t v6 = "no";
  }
  if (!*(unsigned char *)(DerivedStorage + 26)) {
    uint64_t v5 = "no";
  }
  CFStringAppendFormat(Mutable, 0, @"<APEndpointStreamScreen %p '%@', activated: %s resumed: %s >", a1, *(void *)(DerivedStorage + 8), v6, v5);
  return v4;
}

uint64_t screenstream_CopyProperty(uint64_t a1, const void *a2, uint64_t a3, __CFDictionary **a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamScreen <= 30
    && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21408]))
  {
    CFDictionaryRef v8 = (__CFString **)MEMORY[0x1E4F21488];
LABEL_10:
    CFArrayRef v9 = *v8;
LABEL_11:
    uint64_t Int64 = (uint64_t)CFRetain(v9);
LABEL_12:
    uint64_t v11 = Int64;
LABEL_13:
    uint64_t result = 0;
    *a4 = (__CFDictionary *)v11;
    return result;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F213B0]))
  {
    CFDictionaryRef v8 = (__CFString **)MEMORY[0x1E4F21458];
    if (*(_DWORD *)(DerivedStorage + 88) != 110) {
      CFDictionaryRef v8 = (__CFString **)MEMORY[0x1E4F21450];
    }
    goto LABEL_10;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21368]))
  {
    CFArrayRef v9 = *(__CFString **)(DerivedStorage + 80);
    goto LABEL_11;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34F68]))
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    CFTypeRef v14 = (double *)MEMORY[0x1E4F1DB30];
    if (*(void *)(DerivedStorage + 352) == 1)
    {
      long long v25 = *MEMORY[0x1E4F1DB30];
      int v24 = 0;
      APSScreenGetMediaPresentationParams();
      if (gLogCategory_APEndpointStreamScreen <= 50
        && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      FigCFDictionarySetCGSize();
      if (*(unsigned char *)(DerivedStorage + 369)) {
        CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34ED0], *(const void **)(DerivedStorage + 304));
      }
      goto LABEL_45;
    }
    if (*(unsigned char *)(DerivedStorage + 370) && *(int *)(DerivedStorage + 1172) <= 0)
    {
      FigCFDictionarySetCGSize();
      if (gLogCategory_APEndpointStreamScreen > 40
        || gLogCategory_APEndpointStreamScreen == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_45;
      }
    }
    else
    {
      FigCFDictionarySetCGSize();
      if (gLogCategory_APEndpointStreamScreen > 40
        || gLogCategory_APEndpointStreamScreen == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_45;
      }
    }
    LogPrintF();
LABEL_45:
    FigCFDictionarySetInt32();
    if (*(double *)(DerivedStorage + 248) != *v14 || *(double *)(DerivedStorage + 256) != v14[1]) {
      FigCFDictionarySetCGSize();
    }
    if (*(unsigned char *)(DerivedStorage + 378))
    {
      FigCFDictionarySetDouble();
      if (*(int *)(DerivedStorage + 272) >= 1) {
        FigCFDictionarySetInt32();
      }
    }
    uint64_t v15 = *(const void **)(DerivedStorage + 288);
    if (v15) {
      CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34EB0], v15);
    }
    CFIndex v16 = *(const void **)(DerivedStorage + 208);
    if (v16) {
      CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34EA8], v16);
    }
    uint64_t v17 = *(const void **)(DerivedStorage + 296);
    if (v17) {
      CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34EC8], v17);
    }
    BOOL v18 = (const void *)*MEMORY[0x1E4F1CFD0];
    CMTimeEpoch v19 = (const void *)*MEMORY[0x1E4F1CFC8];
    if (*(unsigned char *)(DerivedStorage + 361)) {
      CMTimeEpoch v20 = (const void *)*MEMORY[0x1E4F1CFD0];
    }
    else {
      CMTimeEpoch v20 = (const void *)*MEMORY[0x1E4F1CFC8];
    }
    CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34ED8], v20);
    if (*(unsigned char *)(DerivedStorage + 362)) {
      BOOL v21 = v18;
    }
    else {
      BOOL v21 = v19;
    }
    CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34EE8], v21);
    uint64_t result = 0;
    *a4 = Mutable;
    return result;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34F98]))
  {
    uint64_t Int64 = (uint64_t)screenstream_copyNetworkInfo(DerivedStorage);
    goto LABEL_12;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21370]) || CFEqual(a2, @"IsPlaying"))
  {
    CFDictionaryRef v8 = (__CFString **)MEMORY[0x1E4F1CFD0];
    if (!*(unsigned char *)(DerivedStorage + 26)) {
      CFDictionaryRef v8 = (__CFString **)MEMORY[0x1E4F1CFC8];
    }
    goto LABEL_10;
  }
  if (CFEqual(a2, @"EndpointStreamShowInfo"))
  {
    uint64_t Int64 = (uint64_t)screenstreamudp_copyShowInfo(DerivedStorage);
    goto LABEL_12;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21398]))
  {
    uint64_t Int64 = (uint64_t)screenstream_copyOutputLatency(DerivedStorage);
    goto LABEL_12;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21410]))
  {
    CFArrayRef v9 = *(__CFString **)(DerivedStorage + 336);
    if (v9) {
      goto LABEL_11;
    }
LABEL_68:
    uint64_t v11 = 0;
    goto LABEL_13;
  }
  if (CFEqual(a2, @"screenStreamType"))
  {
    CFArrayRef v9 = @"screenStreamTCP";
    goto LABEL_11;
  }
  if (CFEqual(a2, @"transportGlitchCount"))
  {
    atomic_load((unsigned int *)(DerivedStorage + 1176));
    uint64_t Int64 = CFNumberCreateInt64();
    goto LABEL_12;
  }
  if (CFEqual(a2, @"usageMode"))
  {
    CFArrayRef v9 = *(__CFString **)(DerivedStorage + 184);
    if (v9) {
      goto LABEL_11;
    }
    goto LABEL_68;
  }
  if (CFEqual(a2, @"RTCStats"))
  {
    unint64_t v22 = *(NSObject **)(DerivedStorage + 1136);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 0x40000000;
    block[2] = __screenstream_CopyProperty_block_invoke;
    block[3] = &__block_descriptor_tmp_82_1;
    block[4] = a4;
    block[5] = a3;
    void block[6] = DerivedStorage;
    dispatch_sync(v22, block);
    if (*a4)
    {
      return 0;
    }
    else
    {
      APSLogErrorAt();
      return 4294950535;
    }
  }
  else
  {
    if (gLogCategory_APEndpointStreamScreen <= 30
      && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return 4294954512;
  }
}

uint64_t screenstream_SetProperty(uint64_t a1, const void *a2, const void *a3)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamScreen <= 30
    && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34F80]))
  {
    if (a3)
    {
      CFTypeID v6 = CFGetTypeID(a3);
      if (v6 == CFArrayGetTypeID())
      {
        uint64_t v7 = DerivedStorage[60];
        block[0] = MEMORY[0x1E4F143A8];
        block[1] = 0x40000000;
        block[2] = __screenstream_SetProperty_block_invoke;
        block[3] = &__block_descriptor_tmp_94_0;
        block[4] = DerivedStorage;
        block[5] = a3;
        dispatch_sync(v7, block);
        return 0;
      }
    }
    goto LABEL_26;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34F78])) {
    return 0;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21410]))
  {
    CFDictionaryRef v8 = (const void *)DerivedStorage[42];
    DerivedStorage[42] = a3;
    if (!a3)
    {
LABEL_18:
      if (v8) {
        CFRelease(v8);
      }
      return 0;
    }
LABEL_17:
    CFRetain(a3);
    goto LABEL_18;
  }
  if (CFEqual(a2, @"ExtraStreamOptions"))
  {
    if (!a3 || (CFTypeID v9 = CFGetTypeID(a3), v9 != CFDictionaryGetTypeID()))
    {
LABEL_26:
      APSLogErrorAt();
      return 4294950536;
    }
    CFDictionaryRef v8 = (const void *)DerivedStorage[15];
    DerivedStorage[15] = a3;
    goto LABEL_17;
  }
  if (gLogCategory_APEndpointStreamScreen <= 30
    && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 4294954512;
}

void screenstream_cleanup()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  screenstream_stopStatsTimer();
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterRemoveListener();
  if (*(void *)(DerivedStorage + 160))
  {
    FigVirtualDisplaySessionDeactivate();
    CFAllocatorRef v1 = *(const void **)(DerivedStorage + 160);
    if (v1)
    {
      CFRelease(v1);
      *(void *)(DerivedStorage + 160) = 0;
    }
  }
  screenstream_teardownTransportStream();
  uint64_t v2 = *(void **)(DerivedStorage + 104);
  if (v2)
  {
    uint64_t v3 = *(opaqueCMBufferQueueTriggerToken **)(DerivedStorage + 112);
    if (!v3
      || (CMBufferQueueRemoveTrigger((CMBufferQueueRef)v2, v3),
          *(void *)(DerivedStorage + 112) = 0,
          (uint64_t v2 = *(void **)(DerivedStorage + 104)) != 0))
    {
      CFRelease(v2);
      *(void *)(DerivedStorage + 104) = 0;
    }
  }
  uint64_t v4 = *(const void **)(DerivedStorage + 208);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(DerivedStorage + 208) = 0;
  }
  uint64_t v5 = *(const void **)(DerivedStorage + 288);
  if (v5)
  {
    CFRelease(v5);
    *(void *)(DerivedStorage + 288) = 0;
  }
  CFTypeID v6 = *(const void **)(DerivedStorage + 296);
  if (v6)
  {
    CFRelease(v6);
    *(void *)(DerivedStorage + 296) = 0;
  }
  uint64_t v7 = *(const void **)(DerivedStorage + 304);
  if (v7)
  {
    CFRelease(v7);
    *(void *)(DerivedStorage + 304) = 0;
  }
  CFDictionaryRef v8 = *(const void **)(DerivedStorage + 312);
  if (v8)
  {
    CFRelease(v8);
    *(void *)(DerivedStorage + 312) = 0;
  }
  CFTypeID v9 = *(const void **)(DerivedStorage + 328);
  if (v9)
  {
    CFRelease(v9);
    *(void *)(DerivedStorage + 328) = 0;
  }
  uint64_t v10 = *(const void **)(DerivedStorage + 336);
  if (v10)
  {
    CFRelease(v10);
    *(void *)(DerivedStorage + 336) = 0;
  }
  uint64_t v11 = *(const void **)(DerivedStorage + 280);
  if (v11)
  {
    CFRelease(v11);
    *(void *)(DerivedStorage + 280) = 0;
  }
  uint64_t v12 = *(const void **)(DerivedStorage + 392);
  if (v12)
  {
    CFRelease(v12);
    *(void *)(DerivedStorage + 392) = 0;
  }
  long long v13 = *MEMORY[0x1E4F1DB30];
  *(_OWORD *)(DerivedStorage + 216) = *MEMORY[0x1E4F1DB30];
  *(_OWORD *)(DerivedStorage + 232) = v13;
  *(_OWORD *)(DerivedStorage + 248) = v13;
  CFTypeRef v14 = *(const void **)(DerivedStorage + 120);
  if (v14)
  {
    CFRelease(v14);
    *(void *)(DerivedStorage + 120) = 0;
  }
  uint64_t v15 = *(NSObject **)(DerivedStorage + 480);
  if (v15)
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 0x40000000;
    block[2] = __screenstream_cleanup_block_invoke;
    block[3] = &__block_descriptor_tmp_32;
    block[4] = DerivedStorage;
    dispatch_sync(v15, block);
  }
}

void screenstream_stopStatsTimer()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(void *)(DerivedStorage + 200))
  {
    uint64_t v1 = DerivedStorage;
    if (gLogCategory_APEndpointStreamScreen <= 30
      && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v2 = *(NSObject **)(v1 + 200);
    dispatch_source_set_timer(v2, 0xFFFFFFFFFFFFFFFFLL, 0, 0);
  }
}

void screenstream_virtualDisplaySourceTerminated(uint64_t a1, const void *a2)
{
  CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamScreen <= 50
    && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  screenstream_handleFatalError(a2, -16768, @"display source terminated");
}

void screenstream_teardownTransportStream()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(void *)(DerivedStorage + 136)) {
    return;
  }
  uint64_t v1 = DerivedStorage;
  if (gLogCategory_APEndpointStreamScreen <= 40
    && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v2 = *(void *)(v1 + 136);
  uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = *(void (**)(uint64_t, void, void))(v4 + 64);
  if (v5) {
    v5(v2, 0, 0);
  }
  CFTypeID v6 = (CFAllocatorRef *)MEMORY[0x1E4F1CF80];
  if (!*(void *)(v1 + 48))
  {
    CFDictionaryRef v8 = 0;
LABEL_28:
    CMTimeEpoch v19 = *(const void **)(v1 + 136);
    if (v19)
    {
      CFRelease(v19);
      *(void *)(v1 + 136) = 0;
    }
    CMTimeEpoch v20 = (CFTypeRef *)(v1 + 504);
    if (*(unsigned char *)(v1 + 953) && *(void *)(v1 + 1104))
    {
      *(void *)&long long block = MEMORY[0x1E4F143A8];
      *((void *)&block + 1) = 0x40000000;
      *(void *)&long long v31 = __sbpd_logHistograms_block_invoke;
      *((void *)&v31 + 1) = &__block_descriptor_tmp_51;
      uint64_t v32 = v1 + 504;
      CFDictionaryApplyBlock();
    }
    uint64_t v21 = CMBaseObjectGetDerivedStorage();
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(*v6, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    mach_absolute_time();
    UpTicksToMilliseconds();
    CFDictionarySetInt64();
    CFDictionarySetValue(Mutable, @"sessionType", @"Screen");
    if (*(void *)(v21 + 1104))
    {
      *(void *)&long long block = MEMORY[0x1E4F143A8];
      *((void *)&block + 1) = 0x40000000;
      *(void *)&long long v31 = __sbpd_reportHistograms_block_invoke;
      *((void *)&v31 + 1) = &__block_descriptor_tmp_63;
      uint64_t v32 = (uint64_t)Mutable;
      CFDictionaryApplyBlock();
    }
    if (gLogCategory_APEndpointStreamScreen <= 30
      && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v23 = *(NSObject **)(v21 + 1136);
    *(void *)&long long block = MEMORY[0x1E4F143A8];
    *((void *)&block + 1) = 0x40000000;
    *(void *)&long long v31 = __screenstream_collectRTCStats_block_invoke;
    *((void *)&v31 + 1) = &__block_descriptor_tmp_62_0;
    uint64_t v32 = v21;
    int v33 = Mutable;
    dispatch_sync(v23, &block);
    if (Mutable) {
      CFRelease(Mutable);
    }
    long long v24 = *(_OWORD *)(v1 + 944);
    long long block = *(_OWORD *)(v1 + 928);
    long long v31 = v24;
    long long v25 = *(const void **)(v1 + 912);
    if (v25)
    {
      CFRelease(v25);
      *(void *)(v1 + 912) = 0;
    }
    uint64_t v26 = *(const void **)(v1 + 960);
    if (v26)
    {
      CFRelease(v26);
      *(void *)(v1 + 960) = 0;
    }
    if (*v20)
    {
      CFRelease(*v20);
      CFTypeRef *v20 = 0;
    }
    uint64_t v27 = *(const void **)(v1 + 512);
    if (v27)
    {
      CFRelease(v27);
      *(void *)(v1 + 512) = 0;
    }
    uint64_t v28 = *(const void **)(v1 + 1104);
    if (v28) {
      CFRelease(v28);
    }
    bzero((void *)(v1 + 504), 0x270uLL);
    long long v29 = v31;
    *(_OWORD *)(v1 + 928) = block;
    *(_OWORD *)(v1 + 944) = v29;
    if (gLogCategory_APEndpointStreamScreen <= 40
      && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
    {
      atomic_load((unsigned int *)(v1 + 1176));
      LogPrintF();
    }
    if (v8) {
      CFRelease(v8);
    }
    return;
  }
  if (!*(unsigned char *)(v1 + 378))
  {
    CFDictionaryRef v8 = 0;
LABEL_17:
    uint64_t CMBaseObject = FigTransportStreamGetCMBaseObject();
    if (CMBaseObject)
    {
      uint64_t v10 = CMBaseObject;
      uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v12 = v11 ? v11 : 0;
      long long v13 = *(void (**)(uint64_t))(v12 + 24);
      if (v13) {
        v13(v10);
      }
    }
    uint64_t v14 = *(void *)(v1 + 48);
    uint64_t v15 = *(unsigned int *)(v1 + 88);
    uint64_t v16 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v16) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = 0;
    }
    BOOL v18 = *(void (**)(uint64_t, uint64_t, __CFDictionary *))(v17 + 48);
    if (v18) {
      v18(v14, v15, v8);
    }
    goto LABEL_28;
  }
  uint64_t v7 = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (v7)
  {
    CFDictionaryRef v8 = v7;
    CFDictionarySetValue(v7, @"uuid", *(const void **)(v1 + 296));
    goto LABEL_17;
  }
  APSLogErrorAt();
}

void __screenstream_cleanup_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(const void **)(*(void *)(a1 + 32) + 488);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(*(void *)(a1 + 32) + 488) = 0;
  }
}

void screenstream_handleFatalError(const void *a1, int a2, const void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamScreen <= 50
    && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFRetain(a1);
  if (a3) {
    CFRetain(a3);
  }
  uint64_t v7 = *(NSObject **)(DerivedStorage + 96);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __screenstream_handleFatalError_block_invoke;
  block[3] = &__block_descriptor_tmp_39_2;
  int v11 = a2;
  block[4] = a3;
  void block[5] = a1;
  dispatch_async(v7, block);
  CFRetain(a1);
  CFDictionaryRef v8 = *(NSObject **)DerivedStorage;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 0x40000000;
  v9[2] = __screenstream_handleFatalError_block_invoke_2;
  v9[3] = &__block_descriptor_tmp_40;
  v9[4] = a1;
  dispatch_async(v8, v9);
}

void __screenstream_handleFatalError_block_invoke(uint64_t a1)
{
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  FigCFDictionarySetInt32();
  uint64_t v3 = *(const void **)(a1 + 32);
  if (v3) {
    CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F212C8], v3);
  }
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterPostNotification();
  if (Mutable) {
    CFRelease(Mutable);
  }
  uint64_t v4 = *(const void **)(a1 + 32);
  if (v4) {
    CFRelease(v4);
  }
  uint64_t v5 = *(const void **)(a1 + 40);
  CFRelease(v5);
}

void __screenstream_handleFatalError_block_invoke_2(uint64_t a1)
{
  screenstream_dissociateInternal(*(const void **)(a1 + 32));
  uint64_t v2 = *(const void **)(a1 + 32);
  CFRelease(v2);
}

void screenstream_dissociateInternal(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamScreen <= 50
    && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(unsigned char *)(DerivedStorage + 24))
  {
    uint64_t v3 = CMBaseObjectGetDerivedStorage();
    if (*(unsigned char *)(v3 + 24))
    {
      APSLogErrorAt();
    }
    else
    {
      uint64_t v4 = v3;
      if (*(unsigned char *)(v3 + 25))
      {
        screenstream_cleanup(a1);
        *(_WORD *)(v4 + 25) = 0;
        if (gLogCategory_APEndpointStreamScreen <= 50
          && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
    }
    *(unsigned char *)(DerivedStorage + 24) = 1;
    CFRetain(a1);
    uint64_t v5 = *(NSObject **)(DerivedStorage + 96);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 0x40000000;
    block[2] = __screenstream_dissociateInternal_block_invoke;
    block[3] = &__block_descriptor_tmp_42_0;
    block[4] = a1;
    dispatch_async(v5, block);
  }
}

void __screenstream_dissociateInternal_block_invoke(uint64_t a1)
{
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterPostNotification();
  uint64_t v2 = *(const void **)(a1 + 32);
  CFRelease(v2);
}

uint64_t __sbpd_logHistograms_block_invoke()
{
  if (gLogCategory_APEndpointStreamScreen <= 50)
  {
    if (gLogCategory_APEndpointStreamScreen != -1) {
      return LogPrintF();
    }
    uint64_t result = _LogCategory_Initialize();
    if (result) {
      return LogPrintF();
    }
  }
  return result;
}

void __screenstream_collectRTCStats_block_invoke(uint64_t a1)
{
}

void __sbpd_reportHistograms_block_invoke(uint64_t a1, const void *a2)
{
  uint64_t v4 = (const void *)APSStatsHistogramCopyAsRTCString();
  if (v4)
  {
    uint64_t v5 = v4;
    CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 32), a2, v4);
    CFRelease(v5);
  }
}

CFMutableDictionaryRef screenstream_copyNetworkInfo(uint64_t a1)
{
  CFTypeRef cf = 0;
  uint64_t v2 = *MEMORY[0x1E4F1CF80];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!*(void *)(a1 + 136))
  {
    APSLogErrorAt();
    return Mutable;
  }
  uint64_t CMBaseObject = FigTransportStreamGetCMBaseObject();
  uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(void (**)(uint64_t, void, uint64_t, CFTypeRef *))(v6 + 48);
  if (v7) {
    v7(CMBaseObject, *MEMORY[0x1E4F47790], v2, &cf);
  }
  double v8 = *(double *)(a1 + 432);
  if (v8 <= 0.0)
  {
    if (*(unsigned char *)(a1 + 378) && *(unsigned char *)(a1 + 380))
    {
      if (*(double *)(a1 + 344) > 27648000.0) {
        double v9 = 25.0;
      }
      else {
        double v9 = 17.5;
      }
      if (gLogCategory_APEndpointStreamScreen <= 20
        && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      double v8 = v9 * 1000000.0;
    }
    else
    {
      if (FigCFDictionaryGetDoubleIfPresent())
      {
        *(void *)(a1 + 424) = 0;
        double v10 = 0.0 * *(double *)(a1 + 400);
      }
      else
      {
        double v10 = 0.0;
      }
      if (v10 <= *(double *)(a1 + 408)) {
        double v10 = *(double *)(a1 + 408);
      }
      if (v10 >= *(double *)(a1 + 416)) {
        double v8 = *(double *)(a1 + 416);
      }
      else {
        double v8 = v10;
      }
    }
  }
  FigCFDictionarySetInt32();
  *(double *)(a1 + 440) = v8;
  int v11 = *(_DWORD *)(a1 + 452);
  if (v11 >= 1) {
    goto LABEL_27;
  }
  if (!*(unsigned char *)(a1 + 378) || !*(unsigned char *)(a1 + 380))
  {
    int v14 = *(_DWORD *)(a1 + 456);
    int v15 = *(_DWORD *)(a1 + 448);
    if (v14 > v15)
    {
      *(_DWORD *)(a1 + 456) = v15;
      int v14 = v15;
    }
    if (v8 >= 500000.0)
    {
      if (v8 >= 1000000.0)
      {
        if (v8 >= 4000000.0) {
          int v16 = 60;
        }
        else {
          int v16 = 30;
        }
      }
      else
      {
        int v16 = 20;
      }
    }
    else
    {
      int v16 = 10;
    }
    if (v16 >= v15) {
      int v16 = v15;
    }
    BOOL v17 = v16 <= v14;
    if (v16 >= v14)
    {
      int v21 = *(_DWORD *)(a1 + 460);
      if (v17)
      {
        if (v21 != v14)
        {
          if (gLogCategory_APEndpointStreamScreen <= 20)
          {
            if (gLogCategory_APEndpointStreamScreen != -1
              || (v24 = _LogCategory_Initialize(), int v14 = *(_DWORD *)(a1 + 456), v24))
            {
              LogPrintF();
              int v14 = *(_DWORD *)(a1 + 456);
            }
          }
          *(_DWORD *)(a1 + 460) = v14;
        }
        goto LABEL_83;
      }
      if (v21 <= v14)
      {
        if (v14 >= 20) {
          int v22 = 30;
        }
        else {
          int v22 = 20;
        }
        if (v14 <= 29) {
          int v23 = v22;
        }
        else {
          int v23 = 60;
        }
        if (v23 >= v15) {
          int v20 = v15;
        }
        else {
          int v20 = v23;
        }
        if (gLogCategory_APEndpointStreamScreen > 20
          || gLogCategory_APEndpointStreamScreen == -1 && !_LogCategory_Initialize())
        {
          goto LABEL_80;
        }
LABEL_72:
        LogPrintF();
LABEL_80:
        *(_DWORD *)(a1 + 460) = v20;
        *(void *)(a1 + 464) = mach_absolute_time();
      }
    }
    else if (*(_DWORD *)(a1 + 460) >= v14)
    {
      if (v14 <= 30) {
        int v18 = 20;
      }
      else {
        int v18 = 30;
      }
      if (v14 >= 21) {
        int v19 = v18;
      }
      else {
        int v19 = 10;
      }
      if (v19 >= v15) {
        int v20 = v15;
      }
      else {
        int v20 = v19;
      }
      if (gLogCategory_APEndpointStreamScreen > 20
        || gLogCategory_APEndpointStreamScreen == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_80;
      }
      goto LABEL_72;
    }
LABEL_83:
    if (*(_DWORD *)(a1 + 460) != *(_DWORD *)(a1 + 456)
      && mach_absolute_time() - *(void *)(a1 + 464) >= *(void *)(a1 + 472))
    {
      if (gLogCategory_APEndpointStreamScreen <= 40
        && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(_DWORD *)(a1 + 456) = *(_DWORD *)(a1 + 460);
    }
    goto LABEL_28;
  }
  int v11 = *(_DWORD *)(a1 + 448);
LABEL_27:
  *(_DWORD *)(a1 + 456) = v11;
  *(_DWORD *)(a1 + 460) = v11;
LABEL_28:
  uint64_t v12 = *(NSObject **)(a1 + 480);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __screenstream_updateFPS_block_invoke;
  block[3] = &__block_descriptor_tmp_92;
  block[4] = a1;
  dispatch_sync(v12, block);
  FigCFDictionarySetInt32();
  FigCFDictionaryGetInt32IfPresent();
  FigCFDictionarySetInt32();
  FigCFDictionarySetInt32();
  FigCFDictionarySetInt32();
  FigCFDictionarySetInt32();
  FigCFDictionarySetDouble();
  if (cf) {
    CFRelease(cf);
  }
  return Mutable;
}

CFDictionaryRef screenstream_copyOutputLatency(uint64_t a1)
{
  CMTime v5 = *(CMTime *)*(void *)&MEMORY[0x1E4F1FA48];
  uint64_t v1 = 1164;
  if (*(void *)(a1 + 352) == 1) {
    uint64_t v1 = 1168;
  }
  CMTimeMake(&v5, *(int *)(a1 + v1), 1000);
  CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CMTime v4 = v5;
  return CMTimeCopyAsDictionary(&v4, v2);
}

uint64_t __screenstream_updateFPS_block_invoke(uint64_t result)
{
  *(_DWORD *)(*(void *)(result + 32) + 496) = *(_DWORD *)(*(void *)(result + 32) + 456);
  return result;
}

uint64_t screenstream_Suspend(const void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t DerivedStorage = (NSObject **)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamScreen <= 50
    && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFRetain(a1);
  if (a2) {
    CFRetain(a2);
  }
  double v9 = *DerivedStorage;
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __screenstream_Suspend_block_invoke;
  block[3] = &__block_descriptor_tmp_100_1;
  block[4] = a1;
  void block[5] = a2;
  void block[6] = a3;
  void block[7] = DerivedStorage;
  block[8] = a4;
  dispatch_async(v9, block);
  return 0;
}

uint64_t screenstream_Resume(const void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t DerivedStorage = (NSObject **)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamScreen <= 50
    && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFRetain(a1);
  if (a2) {
    CFRetain(a2);
  }
  double v9 = *DerivedStorage;
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __screenstream_Resume_block_invoke;
  block[3] = &__block_descriptor_tmp_105;
  block[4] = a1;
  void block[5] = a2;
  void block[6] = a3;
  void block[7] = DerivedStorage;
  block[8] = a4;
  dispatch_async(v9, block);
  return 0;
}

uint64_t screenstream_Dissociate(uint64_t a1)
{
  CFAllocatorRef v2 = *(NSObject **)CMBaseObjectGetDerivedStorage();
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __screenstream_Dissociate_block_invoke;
  block[3] = &__block_descriptor_tmp_188_0;
  block[4] = a1;
  dispatch_sync(v2, block);
  return 0;
}

uint64_t screenstream_Control(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = 0;
  int v16 = &v15;
  uint64_t v17 = 0x2000000000;
  int v18 = 0;
  uint64_t DerivedStorage = (NSObject **)CMBaseObjectGetDerivedStorage();
  if (FigCFEqual())
  {
    uint64_t v6 = *DerivedStorage;
    v14[0] = MEMORY[0x1E4F143A8];
    v14[1] = 0x40000000;
    v14[2] = __screenstream_Control_block_invoke;
    v14[3] = &unk_1E6896808;
    v14[4] = &v15;
    v14[5] = a1;
    v14[6] = a3;
    uint64_t v7 = v14;
LABEL_11:
    dispatch_sync(v6, v7);
    goto LABEL_12;
  }
  if (FigCFEqual())
  {
    uint64_t v6 = *DerivedStorage;
    v13[0] = MEMORY[0x1E4F143A8];
    v13[1] = 0x40000000;
    v13[2] = __screenstream_Control_block_invoke_2;
    v13[3] = &unk_1E6896830;
    v13[4] = &v15;
    v13[5] = a1;
    uint64_t v7 = v13;
    goto LABEL_11;
  }
  if (FigCFEqual())
  {
    uint64_t v6 = *DerivedStorage;
    v12[0] = MEMORY[0x1E4F143A8];
    v12[1] = 0x40000000;
    v12[2] = __screenstream_Control_block_invoke_3;
    v12[3] = &unk_1E6896858;
    v12[4] = &v15;
    v12[5] = a1;
    uint64_t v7 = v12;
    goto LABEL_11;
  }
  if (FigCFEqual())
  {
    uint64_t v6 = *DerivedStorage;
    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 0x40000000;
    v11[2] = __screenstream_Control_block_invoke_4;
    v11[3] = &unk_1E6896880;
    v11[4] = &v15;
    v11[5] = a1;
    uint64_t v7 = v11;
    goto LABEL_11;
  }
  if (FigCFEqual())
  {
    uint64_t v6 = *DerivedStorage;
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 0x40000000;
    block[2] = __screenstream_Control_block_invoke_5;
    block[3] = &unk_1E68968A8;
    block[4] = &v15;
    void block[5] = a1;
    void block[6] = a3;
    uint64_t v7 = block;
    goto LABEL_11;
  }
  if (gLogCategory_APEndpointStreamScreen <= 90
    && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  *((_DWORD *)v16 + 6) = -16760;
LABEL_12:
  uint64_t v8 = *((unsigned int *)v16 + 6);
  _Block_object_dispose(&v15, 8);
  return v8;
}

void screenStream_setResumedAndNotifiyObservers(const void *a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int v5 = *(unsigned __int8 *)(DerivedStorage + 26);
  *(unsigned char *)(DerivedStorage + 26) = a2;
  if (*(_DWORD *)(DerivedStorage + 88) != 111)
  {
    APSEventRecorderRecordEvent();
    if (!a2) {
      goto LABEL_17;
    }
    uint64_t v12 = LogCategoryCopyOSLogHandle();
    uint64_t v7 = (void *)v12;
    if (v12) {
      long long v13 = v12;
    }
    else {
      long long v13 = MEMORY[0x1E4F14500];
    }
    if (!os_signpost_enabled(v13)) {
      goto LABEL_15;
    }
    *(_WORD *)buf = 0;
    double v10 = "AP_SIGNPOST_SCREEN_DISPLAYING";
    int v11 = v13;
    os_signpost_id_t v9 = 722862680;
    goto LABEL_14;
  }
  APSEventRecorderRecordEvent();
  if (!a2) {
    goto LABEL_17;
  }
  uint64_t v6 = LogCategoryCopyOSLogHandle();
  uint64_t v7 = (void *)v6;
  if (v6) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = MEMORY[0x1E4F14500];
  }
  if (os_signpost_enabled(v8))
  {
    *(_WORD *)buf = 0;
    os_signpost_id_t v9 = 722862684;
    double v10 = "AP_SIGNPOST_ALTERNATESCREEN_DISPLAYING";
    int v11 = v8;
LABEL_14:
    _os_signpost_emit_with_name_impl(&dword_1D0945000, v11, OS_SIGNPOST_EVENT, v9, v10, (const char *)&unk_1D0B9874E, buf, 2u);
  }
LABEL_15:
  if (v7) {
    os_release(v7);
  }
LABEL_17:
  CFRetain(a1);
  int v14 = *(NSObject **)(DerivedStorage + 96);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __screenStream_setResumedAndNotifiyObservers_block_invoke;
  block[3] = &__block_descriptor_tmp_102_0;
  char v16 = a2;
  BOOL v17 = v5 != a2;
  block[4] = a1;
  void block[5] = DerivedStorage;
  dispatch_async(v14, block);
}

void __screenStream_setResumedAndNotifiyObservers_block_invoke(uint64_t a1)
{
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterPostNotification();
  if (*(unsigned char *)(a1 + 49))
  {
    APEndpointStreamUpdateNowPlayingTransaction(*(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 48), &gLogCategory_APEndpointStreamScreen, (const void **)(*(void *)(a1 + 40) + 32));
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    uint64_t v3 = Mutable;
    CMTime v4 = (const void **)MEMORY[0x1E4F1CFD0];
    if (!*(unsigned char *)(a1 + 48)) {
      CMTime v4 = (const void **)MEMORY[0x1E4F1CFC8];
    }
    CFDictionarySetValue(Mutable, @"IsPlaying", *v4);
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterPostNotification();
    CFRelease(v3);
  }
  int v5 = *(const void **)(a1 + 32);
  CFRelease(v5);
}

void __screenstream_ensureTransportStream_block_invoke(uint64_t a1, const void *a2, const void *a3)
{
}

CMBlockBufferRef screenstream_dequeueAndProcessSampleBuffer(const void *a1, int a2, _DWORD *a3)
{
  CMBlockBufferRef v141 = 0;
  CFMutableDictionaryRef v134 = a1;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 1124)) {
    return v141;
  }
  uint64_t v6 = DerivedStorage;
  if (!a2)
  {
    uint64_t v7 = (opaqueCMSampleBuffer *)CMBufferQueueDequeueAndRetain(*(CMBufferQueueRef *)(DerivedStorage + 104));
    if (!v7) {
      return v141;
    }
    uint64_t v8 = v7;
    os_signpost_id_t v9 = (const void **)(v6 + 504);
    if (CMSampleBufferGetDataBuffer(v7))
    {
      CMBlockBufferRef v144 = 0;
      CMBlockBufferRef v145 = 0;
      DataBuffer = CMSampleBufferGetDataBuffer(v8);
      CGSize v11 = *(CGSize *)(MEMORY[0x1E4F1DB28] + 16);
      *(_OWORD *)v139 = *MEMORY[0x1E4F1DB28];
      block.origin = (CGPoint)*MEMORY[0x1E4F1DB28];
      CGSize v135 = v11;
      block.CGSize size = v11;
      unsigned int valuePtr = 0;
      int AttachmentCGRect = sbufGetAttachmentCGRect(v8, (const __CFString *)*MEMORY[0x1E4F21A58], &block);
      if (AttachmentCGRect)
      {
        int v18 = AttachmentCGRect;
        APSLogErrorAt();
        goto LABEL_219;
      }
      CFTypeRef v137 = a3;
      if (CGRectEqualToRect(block, *(CGRect *)(v6 + 536)))
      {
        int v13 = 0;
      }
      else
      {
        if (gLogCategory_APEndpointStreamScreen <= 40
          && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
        {
          CGRect v133 = block;
          LogPrintF();
        }
        CGSize size = block.size;
        *(CGPoint *)(v6 + 536) = block.origin;
        *(CGSize *)(v6 + 552) = size;
        int v13 = 1;
      }
      block.origin = *(CGPoint *)v139;
      block.CGSize size = v135;
      int v23 = sbufGetAttachmentCGRect(v8, (const __CFString *)*MEMORY[0x1E4F21A10], &block);
      if (v23)
      {
        int v18 = v23;
        goto LABEL_255;
      }
      if (!CGRectEqualToRect(block, *(CGRect *)(v6 + 568)))
      {
        if (gLogCategory_APEndpointStreamScreen <= 40
          && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
        {
          CGRect v133 = block;
          LogPrintF();
        }
        CGSize v24 = block.size;
        *(CGPoint *)(v6 + 568) = block.origin;
        *(CGSize *)(v6 + 584) = v24;
        int v13 = 1;
      }
      CFNumberRef v25 = (const __CFNumber *)CMGetAttachment(v8, (CFStringRef)*MEMORY[0x1E4F21A70], 0);
      if (v25 && (CFNumberRef v26 = v25, v27 = CFGetTypeID(v25), v27 == CFNumberGetTypeID())) {
        CFNumberGetValue(v26, kCFNumberSInt32Type, &valuePtr);
      }
      else {
        APSLogErrorAt();
      }
      *(void *)&CGFloat v28 = valuePtr;
      if (valuePtr != *(_DWORD *)(v6 + 600))
      {
        if (gLogCategory_APEndpointStreamScreen <= 40)
        {
          if (gLogCategory_APEndpointStreamScreen != -1
            || (v29 = _LogCategory_Initialize(), *(void *)&CGFloat v28 = valuePtr, v29))
          {
            v133.origin.x = v28;
            LogPrintF();
            LODWORD(v28) = valuePtr;
          }
        }
        *(_DWORD *)(v6 + 600) = LODWORD(v28);
        int v13 = 1;
      }
      FormatDescription = CMSampleBufferGetFormatDescription(v8);
      *(void *)&double v31 = CMFormatDescriptionGetMediaSubType(FormatDescription);
      if (!FormatDescription) {
        goto LABEL_113;
      }
      CGFloat v32 = v31;
      if (LODWORD(v31) != 1635148593 || *(unsigned char *)(v6 + 952))
      {
        if (*(unsigned char *)(v6 + 951))
        {
          if (CMFormatDescriptionEqual(FormatDescription, *(CMFormatDescriptionRef *)(v6 + 512))) {
            goto LABEL_113;
          }
          unint64_t Dimensions = (unint64_t)CMVideoFormatDescriptionGetDimensions(FormatDescription);
          unint64_t v34 = HIDWORD(Dimensions);
          if (gLogCategory_APEndpointStreamScreen <= 40
            && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
          {
            *(void *)&v133.origin.y = Dimensions;
            *(void *)&v133.size.width = HIDWORD(Dimensions);
            v133.origin.x = v32;
            LogPrintF();
          }
          long long v44 = *(const void **)(v6 + 512);
          *(void *)(v6 + 512) = FormatDescription;
          CFRetain(FormatDescription);
          if (v44) {
            CFRelease(v44);
          }
          *(double *)(v6 + 520) = (double)(int)Dimensions;
          goto LABEL_111;
        }
        if (gLogCategory_APEndpointStreamScreen <= 90
          && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
        {
          v133.origin.x = v32;
          LogPrintF();
        }
        goto LABEL_113;
      }
      CFDictionaryRef Extension = (const __CFDictionary *)CMFormatDescriptionGetExtension(FormatDescription, (CFStringRef)*MEMORY[0x1E4F1EE20]);
      if (!Extension) {
        goto LABEL_103;
      }
      CFDictionaryRef v36 = Extension;
      CFTypeID v37 = CFGetTypeID(Extension);
      if (v37 == CFDictionaryGetTypeID())
      {
        CFDataRef Value = (const __CFData *)CFDictionaryGetValue(v36, @"avcC");
      }
      else
      {
        CFTypeID v39 = CFGetTypeID(v36);
        if (v39 != CFArrayGetTypeID()) {
          goto LABEL_103;
        }
        CFDataRef Value = (const __CFData *)CFArrayGetValueAtIndex(v36, 0);
      }
      CFDataRef v40 = Value;
      if (Value)
      {
        CFTypeID v41 = CFGetTypeID(Value);
        if (v41 == CFDataGetTypeID())
        {
          if (!FigCFEqual())
          {
            if (gLogCategory_APEndpointStreamScreen <= 40
              && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
            {
              *(void *)&v133.origin.x = CFDataGetLength(v40);
              LogPrintF();
            }
            uint64_t v55 = *v9;
            *os_signpost_id_t v9 = v40;
            CFRetain(v40);
            if (v55)
            {
              CFRelease(v55);
              LODWORD(v55) = 0;
            }
            goto LABEL_104;
          }
        }
        else if (gLogCategory_APEndpointStreamScreen <= 90 {
               && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
        }
        {
          *(void *)&v133.origin.x = v40;
          LogPrintF();
        }
      }
LABEL_103:
      LODWORD(v55) = 1;
LABEL_104:
      unint64_t v56 = (unint64_t)CMVideoFormatDescriptionGetDimensions(FormatDescription);
      unint64_t v34 = HIDWORD(v56);
      if (*(double *)(v6 + 520) != (double)(int)v56 || *(double *)(v6 + 528) != (double)SHIDWORD(v56))
      {
        if (gLogCategory_APEndpointStreamScreen <= 40
          && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
        {
          *(void *)&v133.origin.x = v56;
          *(void *)&v133.origin.y = HIDWORD(v56);
          LogPrintF();
        }
        *(double *)(v6 + 520) = (double)(int)v56;
LABEL_111:
        *(double *)(v6 + 528) = (double)(int)v34;
LABEL_112:
        int v13 = 1;
        goto LABEL_113;
      }
      if (!v55) {
        goto LABEL_112;
      }
LABEL_113:
      CFArrayRef SampleAttachmentsArray = CMSampleBufferGetSampleAttachmentsArray(v8, 0);
      if (SampleAttachmentsArray)
      {
        CFArrayRef v58 = SampleAttachmentsArray;
        CFIndex Count = CFArrayGetCount(SampleAttachmentsArray);
        LOBYTE(v146) = 0;
        CFIndex v60 = Count - 1;
        if (Count >= 1)
        {
          CFIndex v61 = 0;
          do
          {
            CFArrayGetValueAtIndex(v58, v61);
            if (FigCFDictionaryGetBooleanIfPresent()) {
              break;
            }
            BOOL v78 = v60 == v61++;
          }
          while (!v78);
          int v62 = (_BYTE)v146 == 0;
LABEL_122:
          *(unsigned char *)(v6 + 1101) = v62;
          if (gLogCategory_APEndpointStreamScreen > 20) {
            goto LABEL_129;
          }
          if (gLogCategory_APEndpointStreamScreen == -1)
          {
            if (!_LogCategory_Initialize()) {
              goto LABEL_129;
            }
            int v62 = *(unsigned __int8 *)(v6 + 1101);
          }
          if (v62) {
            int v63 = "Full";
          }
          else {
            int v63 = "Not";
          }
          *(void *)&v133.origin.x = v63;
          LogPrintF();
LABEL_129:
          CFTypeRef v64 = CMGetAttachment(v8, @"APClearScreen", 0);
          CFTypeRef v65 = (CFTypeRef)*MEMORY[0x1E4F1CFD0];
          int v66 = v64 == (CFTypeRef)*MEMORY[0x1E4F1CFD0];
          if (*(unsigned __int8 *)(v6 + 604) != v66)
          {
            *(unsigned char *)(v6 + 604) = v66;
            int v13 = 1;
          }
          *(unsigned char *)(v6 + 1100) = CMGetAttachment(v8, @"APInterestingFrame", 0) == v65;
          CFTypeRef v67 = CMGetAttachment(v8, @"APSubmitSurfaceTimestamp", 0);
          CFTypeRef v68 = CMGetAttachment(v8, @"APTimestamps", 0);
          *(_DWORD *)(v6 + 1096) = 0;
          *(void *)(v6 + 976) = 0;
          if (v67)
          {
            CFTypeID v69 = CFGetTypeID(v67);
            if (v69 == CFNumberGetTypeID()) {
              CFNumberGetValue((CFNumberRef)v67, kCFNumberSInt64Type, (void *)(v6 + 976));
            }
          }
          if (!v68) {
            goto LABEL_158;
          }
          CFTypeID v70 = CFGetTypeID(v68);
          if (v70 != CFArrayGetTypeID()) {
            goto LABEL_158;
          }
          int v71 = CFArrayGetCount((CFArrayRef)v68);
          if (v71 < 1)
          {
            uint64_t v81 = mach_absolute_time();
            LODWORD(v73) = 0;
          }
          else
          {
            CFIndex v72 = 0;
            if (v71 >= 14) {
              uint64_t v73 = 14;
            }
            else {
              uint64_t v73 = v71;
            }
            do
            {
              CFArrayGetValueAtIndex((CFArrayRef)v68, v72);
              *(void *)(v6 + 984 + 8 * v72++) = CFGetInt64();
            }
            while (v73 != v72);
            CFDictionaryRef v74 = (uint64_t *)(v6 + 984);
            uint64_t v75 = v73 - 1;
            do
            {
              uint64_t v77 = *v74++;
              uint64_t v76 = v77;
              if (v77) {
                BOOL v78 = 1;
              }
              else {
                BOOL v78 = v75 == 0;
              }
              --v75;
            }
            while (!v78);
            uint64_t v79 = (uint64_t *)(v6 + 984);
            uint64_t v80 = v73;
            do
            {
              if (*v79) {
                uint64_t v76 = *v79;
              }
              *v79++ = v76;
              --v80;
            }
            while (v80);
            uint64_t v81 = mach_absolute_time();
            if (v73 > 0xD) {
              goto LABEL_155;
            }
          }
          *(void *)(v6 + 8 * v73 + 984) = v81;
          LODWORD(v73) = v73 + 1;
LABEL_155:
          if ((int)v73 <= 13)
          {
            *(void *)(v6 + 8 * v73 + 984) = v81;
            LODWORD(v73) = v73 + 1;
          }
          *(_DWORD *)(v6 + 1096) = v73;
LABEL_158:
          CMSampleBufferGetOutputPresentationTimeStamp((CMTime *)theBuffer, v8);
          *(void *)(v6 + 968) = CMClockConvertHostTimeToSystemUnits((CMTime *)theBuffer);
          if (!v13 || (int v82 = sbpd_createConfigBBuf(v6 + 504, &v145)) == 0)
          {
            int v83 = *(_DWORD *)(v6 + 920) + CMBlockBufferGetDataLength(DataBuffer);
            CFTypeID v84 = (char *)malloc_type_calloc(1uLL, 0x80uLL, 0x10E98248uLL);
            *(_DWORD *)CFTypeID v84 = v83;
            v84[4] = 0;
            uint64_t v85 = *(void *)(v6 + 968);
            uint64_t v86 = *(void *)(v6 + 936);
            uint64_t v87 = *(void *)(v6 + 960);
            uint64_t v88 = *(void *)(CMBaseObjectGetVTable() + 16);
            if (v88) {
              uint64_t v89 = v88;
            }
            else {
              uint64_t v89 = 0;
            }
            CMBlockBufferRef v146 = 0;
            uint64_t v147 = 0;
            uint64_t v148 = 0;
            int v90 = *(uint64_t (**)(uint64_t, uint64_t, CMBlockBufferRef *))(v89 + 16);
            if (v90)
            {
              uint64_t v91 = v90(v87, v86 + v85, &v146);
              if (!v91)
              {
                CFTypeID v92 = (CMBlockBufferRef *)(v6 + 608);
                long long v93 = &v146;
LABEL_172:
                v140 = DataBuffer;
                v92[2] = v93[2];
                *(_OWORD *)CFTypeID v92 = *(_OWORD *)v93;
                CMBlockBufferRef v94 = v146;
                *((void *)&v95 + 1) = v148;
                *(void *)&long long v95 = v147;
                *((void *)v84 + 1) = v95 >> 32;
                *((void *)v84 + 5) = v94;
                *((void *)v84 + 2) = *(void *)(v6 + 976);
                *((_DWORD *)v84 + 6) = 0;
                sbpd_convertTimestampToNetworkTime(v6 + 504, *(void *)(v6 + 984), &v146);
                *((void *)&v95 + 1) = v148;
                *(void *)&long long v95 = v147;
                uint64_t v96 = v95 >> 32;
                *((void *)v84 + 4) = v96;
                if (*(unsigned char *)(v6 + 1100)) {
                  char v97 = 0x80;
                }
                else {
                  char v97 = 0;
                }
                v84[5] = (*(unsigned char *)(v6 + 1100) != 0) << 7;
                if (*(unsigned char *)(v6 + 1101)) {
                  v84[5] = v97 | 0x10;
                }
                CFTypeRef v136 = v8;
                *((void *)v84 + 11) = v96;
                if (*(_DWORD *)(v6 + 1096))
                {
                  uint64_t v98 = v84 + 96;
                  uint64_t v99 = v6 + 992;
                  unint64_t v100 = 1;
                  do
                  {
                    if (v100 >= *(unsigned int *)(v6 + 1096)) {
                      break;
                    }
                    unint64_t v101 = UpTicksToMilliseconds();
                    if (v101 >= 0x10000)
                    {
                      if (gLogCategory_APEndpointStreamScreen <= 60
                        && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
                      {
                        *(void *)&v133.origin.x = v100;
                        *(void *)&v133.origin.y = v101;
                        LogPrintF();
                      }
                      LOWORD(v101) = -1;
                    }
                    *v98++ = v101;
                    ++v100;
                    v99 += 8;
                  }
                  while (v98 < (_WORD *)v84 + 64);
                }
                CFAllocatorRef v102 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
                CFAllocatorRef v103 = (const __CFAllocator *)*MEMORY[0x1E4F1CF90];
                OSStatus v104 = CMBlockBufferCreateWithMemoryBlock((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v84, 0x80uLL, (CFAllocatorRef)*MEMORY[0x1E4F1CF90], 0, 0, 0x80uLL, 0, &v144);
                if (!v104)
                {
                  int v105 = v144;
                  CMBlockBufferRef v146 = 0;
                  dataPointerOut = 0;
                  CMBlockBufferRef blockBufferOut = 0;
                  size_t lengthAtOffsetOut = 0;
                  CMBlockBufferRef targetBBuf = 0;
                  size_t totalLengthOut = 0;
                  if (!*(void *)(v6 + 912))
                  {
                    uint64_t v8 = v136;
                    a3 = v137;
                    v107 = v140;
                    goto LABEL_213;
                  }
                  OSStatus DataPointer = CMBlockBufferGetDataPointer(v144, 0, (size_t *)&blockBufferOut, 0, (char **)&v146);
                  v107 = v140;
                  if (DataPointer)
                  {
                    int v18 = DataPointer;
                  }
                  else
                  {
                    OSStatus v108 = CMBlockBufferGetDataPointer(v140, 0, &lengthAtOffsetOut, &totalLengthOut, &dataPointerOut);
                    if (!v108)
                    {
                      size_t v109 = lengthAtOffsetOut;
                      if (lengthAtOffsetOut != totalLengthOut)
                      {
                        APSLogErrorAt();
                        int v18 = -16760;
                        goto LABEL_208;
                      }
                      size_t v110 = *(void *)(v6 + 920);
                      if (v110)
                      {
                        uint64_t v111 = malloc_type_calloc(1uLL, v110, 0xF91907C4uLL);
                        size_t v109 = lengthAtOffsetOut;
                        uint64_t v112 = *(void *)(v6 + 920);
                      }
                      else
                      {
                        uint64_t v112 = 0;
                        uint64_t v111 = 0;
                      }
                      uint64_t v113 = *(void *)(v6 + 912);
                      CMBlockBufferRef v114 = v146;
                      int v116 = dataPointerOut;
                      CMBlockBufferRef v115 = blockBufferOut;
                      uint64_t v117 = *(void *)(CMBaseObjectGetVTable() + 16);
                      if (v117) {
                        uint64_t v118 = v117;
                      }
                      else {
                        uint64_t v118 = 0;
                      }
                      uint64_t v119 = *(uint64_t (**)(uint64_t, CMBlockBufferRef, CMBlockBufferRef, char *, size_t, char *, size_t, void *, uint64_t, void, void, void, void, const void *))(v118 + 16);
                      if (v119)
                      {
                        int v120 = v119(v113, v114, v115, v116, v109, v116, v109, v111, v112, *(void *)&v133.origin.x, *(void *)&v133.origin.y, *(void *)&v133.size.width, *(void *)&v133.size.height, v134);
                        if (!v120)
                        {
                          v107 = v140;
                          if (v111)
                          {
                            int v18 = CMBlockBufferCreateWithMemoryBlock(v102, v111, *(void *)(v6 + 920), v103, 0, 0, *(void *)(v6 + 920), 0, &targetBBuf);
                            if (!v18)
                            {
                              OSStatus appended = CMBlockBufferAppendBufferReference(v140, targetBBuf, 0, 0, 0);
                              uint64_t v8 = v136;
                              if (appended)
                              {
                                OSStatus v122 = appended;
                                APSLogErrorAt();
                                int v18 = v122;
                              }
                              goto LABEL_209;
                            }
                            APSLogErrorAt();
                            uint64_t v8 = v136;
                            goto LABEL_206;
                          }
                          int v18 = 0;
LABEL_208:
                          uint64_t v8 = v136;
                          goto LABEL_209;
                        }
                        int v18 = v120;
                      }
                      else
                      {
                        int v18 = -12782;
                      }
                      APSLogErrorAt();
                      uint64_t v8 = v136;
                      v107 = v140;
                      if (!v111)
                      {
LABEL_209:
                        if (targetBBuf) {
                          CFRelease(targetBBuf);
                        }
                        a3 = v137;
                        if (v18) {
                          goto LABEL_253;
                        }
                        int v105 = v144;
LABEL_213:
                        CMBlockBufferRef v123 = v145;
                        if (v145)
                        {
                          OSStatus v124 = CMBlockBufferAppendBufferReference(v145, v105, 0, 0, 0);
                          int v105 = v123;
                          if (v124)
                          {
                            int v18 = v124;
LABEL_253:
                            APSLogErrorAt();
                            goto LABEL_219;
                          }
                        }
                        else
                        {
                          CMBlockBufferRef v144 = 0;
                          CMBlockBufferRef v145 = v105;
                        }
                        int v18 = CMBlockBufferAppendBufferReference(v105, v107, 0, 0, 0);
                        if (!v18)
                        {
                          ++*(_DWORD *)(v6 + 1120);
                          CMBlockBufferGetDataLength(v105);
                          kdebug_trace();
                          CMBlockBufferRef v141 = v105;
                          CMBlockBufferRef v145 = 0;
                          goto LABEL_219;
                        }
                        goto LABEL_253;
                      }
LABEL_206:
                      free(v111);
                      goto LABEL_209;
                    }
                    int v18 = v108;
                  }
                  APSLogErrorAt();
                  goto LABEL_208;
                }
                int v18 = v104;
                APSLogErrorAt();
                free(v84);
                APSLogErrorAt();
                uint64_t v8 = v136;
LABEL_256:
                a3 = v137;
LABEL_219:
                if (v144) {
                  CFRelease(v144);
                }
                CMBlockBufferRef v54 = v145;
                if (!v145) {
                  goto LABEL_223;
                }
                goto LABEL_222;
              }
            }
            else
            {
              uint64_t v91 = 4294954514;
            }
            if (gLogCategory_APEndpointStreamScreen <= 90
              && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
            {
              *(void *)&v133.origin.x = v91;
              LogPrintF();
            }
            long long v93 = (CMBlockBufferRef *)(v6 + 608);
            CFTypeID v92 = &v146;
            goto LABEL_172;
          }
          int v18 = v82;
LABEL_255:
          APSLogErrorAt();
          goto LABEL_256;
        }
      }
      else
      {
        LOBYTE(v146) = 0;
      }
      int v62 = 1;
      goto LABEL_122;
    }
    CFTypeRef v14 = CMGetAttachment(v8, @"APStats", 0);
    if (!v14)
    {
      *(unsigned char *)(v6 + 604) = CMGetAttachment(v8, @"APClearScreen", 0) == (CFTypeRef)*MEMORY[0x1E4F1CFD0];
      *(void *)(v6 + 968) = mach_absolute_time();
      int v18 = sbpd_createConfigBBuf(v6 + 504, &v141);
LABEL_223:
      if (!v18)
      {
        size_t DataLength = CMBlockBufferGetDataLength(v141);
        mach_absolute_time();
        uint64_t v126 = UpTicksToNanoseconds();
        int v127 = 0;
        unint64_t v128 = 0;
        int v129 = *(_DWORD *)(v6 + 904);
        *(void *)(v6 + 1112) += DataLength;
        uint64_t v130 = v6 + 16 * (v129 & 0xF);
        *(void *)(v130 + 648) = v126;
        *(void *)(v130 + 656) = DataLength;
        do
        {
          if ((unint64_t)(v126 - *(void *)(v6 + 16 * (((_BYTE)v129 + (_BYTE)v127) & 0xF) + 648)) > 0x773593F) {
            break;
          }
          v128 += *(void *)(v6 + 16 * (((_BYTE)v129 + (_BYTE)v127--) & 0xF) + 656);
        }
        while (v127 != -16);
        if (v128 >> 3 >= 0xC35) {
          *(void *)(v6 + 640) = v126;
        }
        *(_DWORD *)(v6 + 904) = v129 + 1;
        *a3 = 0;
LABEL_230:
        CFRelease(v8);
        return v141;
      }
      APSLogErrorAt();
      goto LABEL_241;
    }
    uint64_t v15 = v14;
    CMBlockBufferRef v146 = 0;
    theBuffer[0] = 0;
    CMBlockBufferRef blockBufferOut = 0;
    mach_absolute_time();
    uint64_t v16 = UpTicksToNanoseconds();
    CFTypeID v17 = CFGetTypeID(v15);
    v138 = a3;
    if (v17 == CFDictionaryGetTypeID())
    {
      if (!*(unsigned char *)(v6 + 949))
      {
        int v19 = v8;
        int v20 = 0;
        CFDataRef v21 = 0;
        goto LABEL_65;
      }
      FigCFDictionarySetDouble();
      FigCFDictionarySetInt32();
      FigCFDictionarySetInt32();
      if (gLogCategory_APEndpointStreamScreen <= 30
        && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFDataRef Data = CFPropertyListCreateData((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v15, kCFPropertyListBinaryFormat_v1_0, 0, 0);
      if (Data)
      {
        CFDataRef v21 = Data;
        BlockBufferWithCFDataNoCFSetRef Copy = FigCreateBlockBufferWithCFDataNoCopy();
        if (BlockBufferWithCFDataNoCopy)
        {
          int v18 = BlockBufferWithCFDataNoCopy;
          APSLogErrorAt();
LABEL_95:
          CFRelease(v21);
          goto LABEL_96;
        }
        int v19 = v8;
        int v20 = CMBlockBufferGetDataLength(theBuffer[0]);
        CFDictionaryGetInt64();
        sbpd_addHistogramValue(v6 + 504, @"Source Frames");
        sbpd_addHistogramValue(v6 + 504, @"Sent Frames");
        CFDictionaryGetInt64();
        sbpd_addHistogramValue(v6 + 504, @"Dropped Overflow Frames");
        sbpd_addHistogramValue(v6 + 504, @"Used Bandwidth");
        CFDictionaryGetDouble();
        sbpd_addHistogramValue(v6 + 504, @"Available Bandwidth");
LABEL_65:
        if (*(void *)(v6 + 640) < (unint64_t)(*(void *)(v6 + 632) + 125000000) && *(unsigned char *)(v6 + 950))
        {
          if (gLogCategory_APEndpointStreamScreen <= 30
            && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          CFAllocatorRef v45 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
          *(void *)&block.origin.x = MEMORY[0x1E4F143A8];
          *(void *)&block.origin.y = 0x40000000;
          *(void *)&block.size.width = __getRandomDataBlob_block_invoke;
          *(void *)&block.size.height = &__block_descriptor_tmp_185_1;
          uint64_t v155 = 25000;
          if (getRandomDataBlob_once != -1) {
            dispatch_once(&getRandomDataBlob_once, &block);
          }
          OSStatus v46 = CMBlockBufferCreateWithMemoryBlock(v45, (void *)getRandomDataBlob_blob, 0x61A8uLL, (CFAllocatorRef)*MEMORY[0x1E4F1CFA0], 0, 0, 0x61A8uLL, 0, &blockBufferOut);
          if (v46)
          {
            int v18 = v46;
            APSLogErrorAt();
            uint64_t v8 = v19;
            goto LABEL_94;
          }
          v20 += CMBlockBufferGetDataLength(blockBufferOut);
        }
        int v47 = (float *)malloc_type_calloc(1uLL, 0x80uLL, 0x7643909FuLL);
        int v48 = v47;
        *(_DWORD *)int v47 = v20;
        if (*(unsigned char *)(v6 + 949)) {
          char v49 = 5;
        }
        else {
          char v49 = 2;
        }
        *((unsigned char *)v47 + 4) = v49;
        *((unsigned char *)v47 + 5) = *(_DWORD *)(v6 + 944);
        if (theBuffer[0]) {
          float v50 = (float)CMBlockBufferGetDataLength(theBuffer[0]);
        }
        else {
          float v50 = 0.0;
        }
        uint64_t v8 = v19;
        v48[31] = v50;
        OSStatus v51 = CMBlockBufferCreateWithMemoryBlock((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v48, 0x80uLL, (CFAllocatorRef)*MEMORY[0x1E4F1CF90], 0, 0, 0x80uLL, 0, &v146);
        if (v51)
        {
          int v18 = v51;
          APSLogErrorAt();
          free(v48);
        }
        else
        {
          if (theBuffer[0] && (OSStatus v52 = CMBlockBufferAppendBufferReference(v146, theBuffer[0], 0, 0, 0)) != 0)
          {
            int v18 = v52;
          }
          else
          {
            if (!blockBufferOut || (OSStatus v53 = CMBlockBufferAppendBufferReference(v146, blockBufferOut, 0, 0, 0)) == 0)
            {
              int v18 = 0;
              *(void *)(v6 + 632) = v16;
              *(void *)(v6 + 1112) = 0;
              *(_DWORD *)(v6 + 1120) = 0;
              CMBlockBufferRef v141 = v146;
              CMBlockBufferRef v146 = 0;
              goto LABEL_94;
            }
            int v18 = v53;
          }
          APSLogErrorAt();
        }
LABEL_94:
        if (!v21) {
          goto LABEL_96;
        }
        goto LABEL_95;
      }
    }
    APSLogErrorAt();
    int v18 = -16760;
LABEL_96:
    if (theBuffer[0]) {
      CFRelease(theBuffer[0]);
    }
    a3 = v138;
    if (blockBufferOut) {
      CFRelease(blockBufferOut);
    }
    CMBlockBufferRef v54 = v146;
    if (!v146) {
      goto LABEL_223;
    }
LABEL_222:
    CFRelease(v54);
    goto LABEL_223;
  }
  int v132 = APSSignalErrorAt();
  if (!v132) {
    return v141;
  }
  int v18 = v132;
  uint64_t v8 = 0;
LABEL_241:
  *(unsigned char *)(v6 + 1124) = 1;
  if (gLogCategory_APEndpointStreamScreen <= 90
    && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  screenstream_handleFatalError(v134, v18, @"sbuf processing failed");
  if (v8) {
    goto LABEL_230;
  }
  return v141;
}

uint64_t sbpd_createConfigBBuf(uint64_t a1, CMBlockBufferRef *a2)
{
  CMBlockBufferRef blockBufferOut = 0;
  CFDataRef v4 = *(const __CFData **)a1;
  int v5 = (CFAllocatorRef *)MEMORY[0x1E4F1CF80];
  if (v4)
  {
    size_t Length = CFDataGetLength(v4);
    BlockBufferWithCFDataNoCFSetRef Copy = FigCreateBlockBufferWithCFDataNoCopy();
    if (BlockBufferWithCFDataNoCopy)
    {
      uint64_t v8 = BlockBufferWithCFDataNoCopy;
      goto LABEL_32;
    }
  }
  else if (*(void *)(a1 + 8))
  {
    uint64_t v9 = APSVideoFormatDescriptionCopyAsBlockBuffer();
    if (v9)
    {
      uint64_t v8 = v9;
      goto LABEL_32;
    }
    size_t Length = CMBlockBufferGetDataLength(0);
  }
  else
  {
    size_t Length = 0;
  }
  double v10 = (float *)malloc_type_calloc(1uLL, 0x80uLL, 0xA70D252EuLL);
  CGSize v11 = v10;
  *(_DWORD *)double v10 = Length;
  *((unsigned char *)v10 + 4) = 1;
  *((unsigned char *)v10 + 5) = *(_DWORD *)(a1 + 96);
  *((unsigned char *)v10 + 6) = 18;
  if (*(unsigned char *)(a1 + 444)) {
    char v12 = 19;
  }
  else {
    char v12 = 18;
  }
  *((unsigned char *)v10 + 6) = v12;
  if (*(void *)(a1 + 408))
  {
    v12 |= 4u;
    *((unsigned char *)v10 + 6) = v12;
  }
  if (*(unsigned char *)(a1 + 100))
  {
    v12 |= 0x40u;
    *((unsigned char *)v10 + 6) = v12;
  }
  if (*(void *)(a1 + 8)) {
    *((unsigned char *)v10 + 6) = v12 | 8;
  }
  *((unsigned char *)v10 + 7) = 1;
  sbpd_convertTimestampToNetworkTime(a1, *(void *)(a1 + 432) + *(void *)(a1 + 464), v28);
  *((void *)&v13 + 1) = v29;
  *(void *)&long long v13 = v28[1];
  *((void *)v11 + 1) = v13 >> 32;
  float v14 = *(double *)(a1 + 16);
  v11[4] = v14;
  float v15 = *(double *)(a1 + 24);
  v11[5] = v15;
  float v16 = *(double *)(a1 + 32);
  v11[8] = v16;
  float v17 = *(double *)(a1 + 40);
  v11[9] = v17;
  float v18 = *(double *)(a1 + 48);
  v11[10] = v18;
  float v19 = *(double *)(a1 + 56);
  v11[11] = v19;
  float v20 = *(double *)(a1 + 64);
  v11[12] = v20;
  float v21 = *(double *)(a1 + 72);
  v11[13] = v21;
  float v22 = *(double *)(a1 + 80);
  v11[14] = v22;
  float v23 = *(double *)(a1 + 88);
  v11[15] = v23;
  uint64_t v24 = CMBlockBufferCreateWithMemoryBlock(*v5, v11, 0x80uLL, (CFAllocatorRef)*MEMORY[0x1E4F1CF90], 0, 0, 0x80uLL, 0, &blockBufferOut);
  if (v24)
  {
    uint64_t v8 = v24;
    APSLogErrorAt();
    free(v11);
  }
  else
  {
    if (*(unsigned char *)(a1 + 100)
      && gLogCategory_APEndpointStreamScreen <= 40
      && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (!Length || (uint64_t appended = CMBlockBufferAppendBufferReference(blockBufferOut, 0, 0, 0, 0), !appended))
    {
      uint64_t v8 = 0;
      *a2 = blockBufferOut;
      CMBlockBufferRef blockBufferOut = 0;
      goto LABEL_26;
    }
    uint64_t v8 = appended;
  }
LABEL_32:
  APSLogErrorAt();
LABEL_26:
  if (blockBufferOut) {
    CFRelease(blockBufferOut);
  }
  return v8;
}

uint64_t sbufGetAttachmentCGRect(const void *a1, const __CFString *a2, CGRect *a3)
{
  CFDictionaryRef v4 = (const __CFDictionary *)CMGetAttachment(a1, a2, 0);
  if (v4)
  {
    CFDictionaryRef v5 = v4;
    CFTypeID v6 = CFGetTypeID(v4);
    if (v6 == CFDictionaryGetTypeID() && CGRectMakeWithDictionaryRepresentation(v5, a3)) {
      return 0;
    }
  }
  APSLogErrorAt();
  return 4294950536;
}

uint64_t sbpd_convertTimestampToNetworkTime@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  if (a2)
  {
    uint64_t v5 = *(void *)(result + 456);
    uint64_t VTable = CMBaseObjectGetVTable();
    uint64_t v8 = *(void *)(VTable + 16);
    uint64_t result = VTable + 16;
    uint64_t v7 = v8;
    uint64_t v9 = v8 ? v7 : 0;
    double v10 = *(uint64_t (**)(uint64_t, uint64_t, void *))(v9 + 16);
    if (v10)
    {
      return v10(v5, a2, a3);
    }
  }
  return result;
}

CFDictionaryRef sbpd_addHistogramValue(uint64_t a1, const void *a2)
{
  CFDictionaryRef result = *(const __CFDictionary **)(a1 + 600);
  if (result)
  {
    CFDictionaryGetValue(result, a2);
    return (const __CFDictionary *)APSStatsHistogramAddValue();
  }
  return result;
}

uint64_t __getRandomDataBlob_block_invoke(uint64_t a1)
{
  getRandomDataBlob_blob = (uint64_t)malloc_type_calloc(1uLL, *(void *)(a1 + 32), 0xC254D98FuLL);
  return RandomBytes();
}

uint64_t screenstream_handleCommandSetRecordingState(uint64_t a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamScreen <= 50
    && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 24))
  {
    uint64_t v9 = 4294950534;
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)(DerivedStorage + 160);
  if (!v4) {
    return 0;
  }
  if (a2) {
    uint64_t v5 = (void *)MEMORY[0x1E4F1CFD0];
  }
  else {
    uint64_t v5 = (void *)MEMORY[0x1E4F1CFC8];
  }
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, void, void))(v7 + 56);
  if (!v8)
  {
    uint64_t v9 = 4294954514;
LABEL_17:
    APSLogErrorAt();
    return v9;
  }
  uint64_t v9 = v8(v4, *MEMORY[0x1E4F34E90], *v5);
  if (v9) {
    goto LABEL_17;
  }
  return v9;
}

__CFDictionary *screenstream_createVirtualDisplayActivationOptions()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int v39 = 0;
  uint64_t v1 = CMBaseObjectGetDerivedStorage();
  uint64_t v2 = v1;
  uint64_t v3 = *(const void **)(v1 + 168);
  cf[0] = 0;
  CFTypeRef v38 = 0;
  uint64_t v4 = (CFAllocatorRef *)MEMORY[0x1E4F1CF80];
  if (v3) {
    goto LABEL_55;
  }
  if (!*(unsigned char *)(v1 + 378))
  {
    if (*(unsigned char *)(v1 + 390))
    {
      uint64_t v5 = (const void **)MEMORY[0x1E4F34FF0];
LABEL_8:
      uint64_t v3 = *v5;
      goto LABEL_47;
    }
    if (*(unsigned char *)(v1 + 367))
    {
      if (*(unsigned char *)(v1 + 369))
      {
        uint64_t v6 = (const void **)MEMORY[0x1E4F34FD8];
        if (*(void *)(v1 + 352) == 1) {
          uint64_t v6 = (const void **)MEMORY[0x1E4F34FD0];
        }
      }
      else
      {
        if (!*(unsigned char *)(v1 + 370)) {
          goto LABEL_17;
        }
        uint64_t v6 = (const void **)MEMORY[0x1E4F34FD8];
      }
      uint64_t v3 = *v6;
      if (*v6) {
        goto LABEL_47;
      }
    }
LABEL_17:
    if ((*(unsigned char *)(v1 + 370) || *(unsigned char *)(v1 + 320) && APSHas4K60444SenderSupport())
      && *(int *)(v2 + 1172) <= 0)
    {
      uint64_t v3 = (const void *)*MEMORY[0x1E4F34FD8];
      if (*MEMORY[0x1E4F34FD8]) {
        goto LABEL_47;
      }
    }
    if (!*(unsigned char *)(v2 + 363)) {
      goto LABEL_46;
    }
    uint64_t v7 = *(void *)(v2 + 48);
    if (!v7) {
      goto LABEL_46;
    }
    uint64_t CMBaseObject = APSenderSessionGetCMBaseObject(v7);
    uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v9) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    CGSize v11 = *(uint64_t (**)(uint64_t, __CFString *, CFAllocatorRef, CFTypeRef *))(v10 + 48);
    if (v11)
    {
      CFAllocatorRef v12 = *v4;
      int v39 = v11(CMBaseObject, @"TransportControlStream", *v4, cf);
      if (!v39)
      {
        unsigned int v13 = APSGetFBOPropertyInt64();
        if (!v39)
        {
          uint64_t v3 = 0;
          if (v13 > 0x10 || ((1 << v13) & 0x10102) == 0) {
            goto LABEL_47;
          }
          uint64_t v14 = FigTransportStreamGetCMBaseObject();
          uint64_t v15 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v15) {
            uint64_t v16 = v15;
          }
          else {
            uint64_t v16 = 0;
          }
          float v17 = *(uint64_t (**)(uint64_t, void, CFAllocatorRef, CFTypeRef *))(v16 + 48);
          if (v17)
          {
            int v39 = v17(v14, *MEMORY[0x1E4F47748], v12, &v38);
            if (!v39)
            {
              if (APSIsDirectLinkInterface())
              {
                if (gLogCategory_APEndpointStreamScreen <= 50
                  && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
                {
                  LogPrintF();
                }
                uint64_t v5 = (const void **)MEMORY[0x1E4F35008];
                goto LABEL_8;
              }
LABEL_46:
              uint64_t v3 = 0;
              goto LABEL_47;
            }
          }
          else
          {
            int v39 = -12782;
          }
        }
      }
    }
    else
    {
      int v39 = -12782;
    }
    APSLogErrorAt();
    goto LABEL_46;
  }
  if (!*(unsigned char *)(v1 + 379) || !FVDUtilsHEVCEncoderSupports4K60()) {
    goto LABEL_46;
  }
  uint64_t v3 = (const void *)*MEMORY[0x1E4F34FE8];
  *(unsigned char *)(v2 + 951) = 1;
LABEL_47:
  if (cf[0]) {
    CFRelease(cf[0]);
  }
  if (v38) {
    CFRelease(v38);
  }
  if (!v3)
  {
    float v18 = (const void **)MEMORY[0x1E4F34FE0];
    if (!*(unsigned char *)(v2 + 378)) {
      float v18 = (const void **)MEMORY[0x1E4F34FC8];
    }
    uint64_t v3 = *v18;
  }
LABEL_55:
  if (gLogCategory_APEndpointStreamScreen <= 50
    && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  *(void *)(v2 + 184) = v3;
  CFAllocatorRef v19 = *v4;
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(*v4, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  *(_OWORD *)CFTypeRef cf = *MEMORY[0x1E4F1DB30];
  LODWORD(v38) = 0;
  CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34E78], v3);
  float v21 = (const void *)*MEMORY[0x1E4F1CFC8];
  float v22 = (const void *)*MEMORY[0x1E4F1CFD0];
  if (*(unsigned char *)(DerivedStorage + 26)) {
    float v23 = (const void *)*MEMORY[0x1E4F1CFC8];
  }
  else {
    float v23 = (const void *)*MEMORY[0x1E4F1CFD0];
  }
  CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34E70], v23);
  CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34DE8], *(const void **)(DerivedStorage + 40));
  CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34E68], v22);
  uint64_t v24 = (const void *)*MEMORY[0x1E4F34DC8];
  CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34DC8], @"AirPlay");
  if (APSIsAPValeriaScreenSender() && CFEqual(v3, (CFTypeRef)*MEMORY[0x1E4F35008])) {
    CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34E60], v22);
  }
  FigCFDictionarySetInt32();
  FigCFDictionarySetInt32();
  if (*(unsigned char *)(DerivedStorage + 378))
  {
    FigCFDictionarySetInt32();
    if (*(unsigned char *)(DerivedStorage + 380)) {
      FigCFDictionarySetInt32();
    }
    CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34E50], v21);
    CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34DA0], @"CarPlayScreen");
    CFNumberRef v25 = 0;
  }
  else
  {
    CGFloat v28 = (const void *)*MEMORY[0x1E4F34DA0];
    if (*(unsigned char *)(DerivedStorage + 390))
    {
      CFDictionarySetValue(Mutable, v28, @"StevenoteAP");
      CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34E30], v22);
      CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34E38], v22);
      CFNumberRef v25 = CFDictionaryCreateMutable(v19, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      CFDictionarySetValue(v25, (const void *)*MEMORY[0x1E4F34D70], @"nero");
      if (*(void *)(DerivedStorage + 312) && APSSettingsGetIntWithDefault()) {
        CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34E28], *(const void **)(DerivedStorage + 312));
      }
    }
    else
    {
      CFDictionarySetValue(Mutable, v28, @"AirPlayScreen");
      if (CFEqual(v3, (CFTypeRef)*MEMORY[0x1E4F34FD8])
        && *(unsigned char *)(DerivedStorage + 320)
        && APSHas4K60444SenderSupport()
        && *(int *)(DerivedStorage + 1172) <= 0)
      {
        FigCFDictionarySetInt32();
      }
      if (*(void *)(DerivedStorage + 352) == 1)
      {
        APSScreenGetMediaPresentationParams();
        if (gLogCategory_APEndpointStreamScreen <= 50
          && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        if (*(unsigned char *)(DerivedStorage + 369)) {
          CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34F50], *(const void **)(DerivedStorage + 304));
        }
        FigCFDictionarySetInt32();
        FigCFDictionarySetInt32();
        if (*(unsigned char *)(DerivedStorage + 368)) {
          FigCFDictionarySetInt32();
        }
        FigCFDictionarySetInt32();
        if (*(int *)(DerivedStorage + 372) >= 1) {
          FigCFDictionarySetInt32();
        }
      }
      CFDictionaryRef v36 = *(const void **)(DerivedStorage + 312);
      if (v36) {
        CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34E28], v36);
      }
      CFNumberRef v25 = 0;
    }
  }
  CFNumberRef v26 = *(const void **)(DerivedStorage + 152);
  if (v26) {
    CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34DB0], v26);
  }
  CFTypeID v27 = *(const void **)(DerivedStorage + 192);
  if (v27)
  {
    if (gLogCategory_APEndpointStreamScreen <= 50)
    {
      if (gLogCategory_APEndpointStreamScreen != -1
        || (v29 = _LogCategory_Initialize(), CFTypeID v27 = *(const void **)(DerivedStorage + 192), v29))
      {
        LogPrintF();
        CFTypeID v27 = *(const void **)(DerivedStorage + 192);
      }
    }
    CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34DA8], v27);
    FigCFDictionarySetInt();
    CFDictionarySetValue(Mutable, v24, @"PerAppAirPlayDisplay");
  }
  if (*(unsigned char *)(DerivedStorage + 378))
  {
    FigCFDictionarySetInt();
    uint64_t v30 = @"CarPlayAlternate";
    double v31 = @"CarPlay";
    BOOL v32 = *(_DWORD *)(DerivedStorage + 88) == 110;
  }
  else
  {
    if (!*(unsigned char *)(DerivedStorage + 388)) {
      goto LABEL_98;
    }
    FigCFDictionarySetInt();
    uint64_t v30 = @"Stevenote";
    double v31 = @"AirPlayDemo";
    BOOL v32 = *(unsigned char *)(DerivedStorage + 390) == 0;
  }
  if (v32) {
    int v33 = v31;
  }
  else {
    int v33 = v30;
  }
  CFDictionarySetValue(Mutable, v24, v33);
LABEL_98:
  FigCFDictionarySetInt32();
  *(void *)(DerivedStorage + 936) = MillisecondsToUpTicks();
  if (v25)
  {
    CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34DD0], v25);
    CFRelease(v25);
  }
  if (*(void *)(DerivedStorage + 176))
  {
    if (gLogCategory_APEndpointStreamScreen <= 50
      && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFDictionaryApplyBlock();
  }
  unint64_t v34 = *(const void **)(DerivedStorage + 392);
  if (v34)
  {
    if (CFEqual(v34, @"tvout"))
    {
      FigCFDictionarySetInt();
LABEL_110:
      FigCFDictionarySetInt();
      return Mutable;
    }
    if (CFEqual(v34, @"mirroringonly") || CFEqual(v34, @"seconddisplay")) {
      goto LABEL_110;
    }
    if (CFEqual(v34, @"continuity"))
    {
      FigCFDictionarySetInt();
      CFDictionarySetValue(Mutable, v24, @"Continuity");
      return Mutable;
    }
    if (CFEqual(v34, @"airplay")) {
      goto LABEL_110;
    }
    if (gLogCategory_APEndpointStreamScreen <= 40
      && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  return Mutable;
}

void __screenstream_createVirtualDisplayActivationOptions_block_invoke(uint64_t a1, const void *a2, const void *a3)
{
}

uint64_t screenstream_initDisplayInfo(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  CFDictionaryRef v53 = 0;
  CFDictionaryRef v54 = 0;
  CFTypeRef v51 = 0;
  CFDictionaryRef v52 = 0;
  CFTypeRef v49 = 0;
  CFTypeRef v50 = 0;
  CFTypeRef v47 = 0;
  CFTypeRef v48 = 0;
  CFTypeRef v46 = 0;
  CFTypeRef cf = 0;
  value = 0;
  uint64_t v3 = (void *)(a1 + 288);
  uint64_t v4 = *(const void **)(a1 + 288);
  if (v4)
  {
    CFRelease(v4);
    *uint64_t v3 = 0;
  }
  uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(a1 + 56));
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, __CFString *, void, void *))(v7 + 48);
  if (!v8)
  {
    uint64_t v14 = 4294954514;
LABEL_16:
    APSLogErrorAt();
    goto LABEL_95;
  }
  CFAllocatorRef v9 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  uint64_t v10 = v8(CMBaseObject, @"Name", *MEMORY[0x1E4F1CF80], v3);
  if (v10)
  {
    uint64_t v14 = v10;
    goto LABEL_16;
  }
  CGSize v11 = *(const void **)(a1 + 208);
  if (v11)
  {
    CFRelease(v11);
    *(void *)(a1 + 208) = 0;
  }
  uint64_t v12 = APEndpointDisplayDescriptionCopyProperty(v2, @"EDID", (uint64_t)v9, a1 + 208);
  if (v12)
  {
    uint64_t v14 = v12;
    goto LABEL_16;
  }
  uint64_t v13 = APEndpointDisplayDescriptionCopyProperty(v2, @"PixelSize", (uint64_t)v9, (uint64_t)&v54);
  if (v13)
  {
    uint64_t v14 = v13;
    goto LABEL_16;
  }
  CGSizeMakeWithDictionaryRepresentation(v54, (CGSize *)(a1 + 216));
  if (gLogCategory_APEndpointStreamScreen <= 40
    && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  double v15 = *(double *)(a1 + 216);
  uint64_t v16 = (_OWORD *)MEMORY[0x1E4F1DB30];
  if (*(unsigned char *)(a1 + 378))
  {
    if (v15 <= 0.0 || *(double *)(a1 + 224) <= 0.0)
    {
      uint64_t v14 = 4294950536;
      goto LABEL_16;
    }
    double v18 = *(double *)(a1 + 248);
    double v17 = *(double *)(a1 + 256);
    if ((v18 != *MEMORY[0x1E4F1DB30] || v17 != *(double *)(MEMORY[0x1E4F1DB30] + 8)) && (v18 <= 0.0 || v17 <= 0.0))
    {
      uint64_t v14 = 4294950536;
      goto LABEL_16;
    }
  }
  else
  {
    double v19 = *(double *)(a1 + 224);
    if (v15 >= v19) {
      double v20 = *(double *)(a1 + 224);
    }
    else {
      double v20 = *(double *)(a1 + 216);
    }
    double v21 = 720.0;
    if (v20 >= 720.0)
    {
      double v21 = *(double *)(a1 + 224);
    }
    else if (v20 <= 0.0)
    {
      double v15 = 1280.0;
    }
    else
    {
      double v15 = v15 * (720.0 / v20);
      double v21 = v19 * (720.0 / v20);
    }
    *(double *)(a1 + 216) = v15;
    *(double *)(a1 + 224) = v21;
    if (gLogCategory_APEndpointStreamScreen <= 40
      && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  *(_OWORD *)(a1 + 232) = *v16;
  if (*(unsigned char *)(a1 + 364))
  {
    uint64_t v22 = APEndpointDisplayDescriptionCopyProperty(v2, @"PixelSizeMax", (uint64_t)v9, (uint64_t)&v53);
    if (v22)
    {
      uint64_t v14 = v22;
      goto LABEL_16;
    }
    CGSizeMakeWithDictionaryRepresentation(v53, (CGSize *)(a1 + 232));
  }
  if (gLogCategory_APEndpointStreamScreen <= 40
    && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  int8x16_t v23 = vbslq_s8((int8x16_t)vcgtq_f64(*(float64x2_t *)(a1 + 232), *(float64x2_t *)(a1 + 216)), *(int8x16_t *)(a1 + 232), *(int8x16_t *)(a1 + 216));
  *(int8x16_t *)(a1 + 232) = v23;
  if (*(double *)v23.i64 > 1920.0 || *(double *)&v23.i64[1] > 1080.0)
  {
    if (FVDUtilsHEVCEncoderSupports4K60() && APSHasHDRSenderSupport())
    {
      *(unsigned char *)(a1 + 370) = 1;
      if (!*(unsigned char *)(a1 + 378))
      {
        APSGetMaxSizePreservingAspectRatio();
        *(void *)(a1 + 232) = v24;
        *(void *)(a1 + 240) = v25;
      }
    }
    else
    {
      *(_OWORD *)(a1 + 232) = *(_OWORD *)(a1 + 216);
    }
  }
  if (gLogCategory_APEndpointStreamScreen <= 40
    && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v26 = APEndpointDisplayDescriptionCopyProperty(v2, @"PhysicalSize", (uint64_t)v9, (uint64_t)&v52);
  if (v26)
  {
    uint64_t v14 = v26;
    goto LABEL_16;
  }
  CGSizeMakeWithDictionaryRepresentation(v52, (CGSize *)(a1 + 248));
  CFTypeID v27 = (void *)(a1 + 296);
  CGFloat v28 = *(const void **)(a1 + 296);
  if (v28)
  {
    CFRelease(v28);
    *CFTypeID v27 = 0;
  }
  uint64_t v29 = APEndpointDisplayDescriptionCopyProperty(v2, @"UUID", (uint64_t)v9, a1 + 296);
  if (v29)
  {
    uint64_t v14 = v29;
    goto LABEL_16;
  }
  uint64_t v30 = *(const void **)(a1 + 304);
  if (v30)
  {
    CFRelease(v30);
    *(void *)(a1 + 304) = 0;
  }
  if (*(unsigned char *)(a1 + 365))
  {
    uint64_t v31 = APEndpointDisplayDescriptionCopyProperty(v2, @"HDRInfo", (uint64_t)v9, a1 + 304);
    if (v31)
    {
      uint64_t v14 = v31;
      goto LABEL_16;
    }
  }
  screenstream_setIsHDR(a1);
  if (APSHasHDRSenderSupport()) {
    BOOL v32 = *(unsigned char *)(a1 + 360) != 0;
  }
  else {
    BOOL v32 = 0;
  }
  *(unsigned char *)(a1 + 369) = v32;
  APEndpointDisplayDescriptionCopyProperty(v2, @"receiverSupports444", (uint64_t)v9, (uint64_t)&v48);
  CFTypeRef v33 = (CFTypeRef)*MEMORY[0x1E4F1CFD0];
  char CFPreferenceNumberWithDefault = FigGetCFPreferenceNumberWithDefault();
  BOOL v35 = 0;
  *(unsigned char *)(a1 + 320) = CFPreferenceNumberWithDefault;
  int v36 = *(unsigned __int8 *)(a1 + 389);
  if (*(unsigned char *)(a1 + 389) && CFPreferenceNumberWithDefault)
  {
    if (FVDUtilsHEVCEncoderSupports4K60()) {
      BOOL v35 = 1;
    }
    else {
      BOOL v35 = FVDUtilsH264EncoderSupports444() != 0;
    }
    int v36 = *(unsigned __int8 *)(a1 + 389);
  }
  *(unsigned char *)(a1 + 390) = v35;
  if (v36
    && gLogCategory_APEndpointStreamScreen <= 40
    && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v37 = *(void *)(a1 + 296);
  uint64_t v38 = *MEMORY[0x1E4F21488];
  uint64_t UpTimeNanoseconds = FigGetUpTimeNanoseconds();
  *(void *)(a1 + 80) = CFStringCreateWithFormat(v9, 0, @"%@-%@-%llx", v37, v38, UpTimeNanoseconds);
  APEndpointDisplayDescriptionCopyProperty(v2, @"MaxFPS", (uint64_t)v9, (uint64_t)&v51);
  if (v51)
  {
    int v40 = CFGetInt64();
    if (v40 >= 1 && *(_DWORD *)(a1 + 448) > v40) {
      *(_DWORD *)(a1 + 448) = v40;
    }
  }
  APEndpointDisplayDescriptionCopyProperty(v2, @"IsOverscanned", (uint64_t)v9, (uint64_t)&v50);
  *(unsigned char *)(a1 + 361) = v50 == v33;
  APEndpointDisplayDescriptionCopyProperty(v2, @"SupportsRotation", (uint64_t)v9, (uint64_t)&v49);
  *(unsigned char *)(a1 + 362) = v49 == v33;
  *(double *)(a1 + 344) = *(double *)(a1 + 216) * *(double *)(a1 + 224) * (double)*(int *)(a1 + 448);
  if (*(unsigned char *)(a1 + 378))
  {
    APEndpointDisplayDescriptionCopyProperty(v2, @"ViewAreas", (uint64_t)v9, a1 + 328);
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v9, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    *(void *)(a1 + 336) = Mutable;
    uint64_t v42 = *(const void **)(a1 + 296);
    if (v42) {
      CFDictionarySetValue(Mutable, @"uuid", v42);
    }
    APEndpointDisplayDescriptionCopyProperty(v2, @"InitialViewArea", (uint64_t)v9, (uint64_t)&value);
    if (value) {
      CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 336), @"viewArea", value);
    }
    APEndpointDisplayDescriptionCopyProperty(v2, @"AdjacentViewAreas", (uint64_t)v9, (uint64_t)&cf);
    if (cf) {
      CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 336), @"adjacentViewAreas", cf);
    }
  }
  APEndpointDescriptionCopyProperty_0(*(void *)(a1 + 56), @"IsThirdPartyTVFamily", (uint64_t)v9, (uint64_t)&v46);
  *(unsigned char *)(a1 + 376) = v46 == v33;
  APEndpointDisplayDescriptionCopyProperty(v2, @"receiverSupportsHDRMirroring", (uint64_t)v9, (uint64_t)&v47);
  *(unsigned char *)(a1 + 377) = v47 == v33;
  if (gLogCategory_APEndpointStreamScreen <= 50
    && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*v27)
  {
    uint64_t v14 = 0;
  }
  else
  {
    APSLogErrorAt();
    if (gLogCategory_APEndpointStreamScreen <= 90
      && (gLogCategory_APEndpointStreamScreen != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v14 = 4294950536;
  }
LABEL_95:
  if (value) {
    CFRelease(value);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v54) {
    CFRelease(v54);
  }
  if (v53) {
    CFRelease(v53);
  }
  if (v52) {
    CFRelease(v52);
  }
  if (v51) {
    CFRelease(v51);
  }
  if (v50) {
    CFRelease(v50);
  }
  if (v49) {
    CFRelease(v49);
  }
  if (v46) {
    CFRelease(v46);
  }
  if (v47) {
    CFRelease(v47);
  }
  if (v48) {
    CFRelease(v48);
  }
  return v14;
}

void screenstream_setIsHDR(uint64_t a1)
{
  CFDictionaryRef v2 = *(const __CFDictionary **)(a1 + 304);
  if (!v2) {
    goto LABEL_13;
  }
  uint64_t v3 = (const void *)*MEMORY[0x1E4F34D90];
  CFDataRef Value = CFDictionaryGetValue(v2, (const void *)*MEMORY[0x1E4F34D90]);
  if (!Value) {
    goto LABEL_13;
  }
  uint64_t v5 = Value;
  uint64_t v6 = (const void *)*MEMORY[0x1E4F34D80];
  if (!CFEqual(Value, (CFTypeRef)*MEMORY[0x1E4F34D80]))
  {
    if (CFEqual(v5, (CFTypeRef)*MEMORY[0x1E4F34D78]))
    {
      if (!*(unsigned char *)(a1 + 366))
      {
        CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
        CFDictionarySetValue(Mutable, v3, v6);
        CFAllocatorRef v9 = *(const void **)(a1 + 304);
        *(void *)(a1 + 304) = Mutable;
        if (Mutable) {
          CFRetain(Mutable);
        }
        if (v9) {
          CFRelease(v9);
        }
        CFRelease(Mutable);
      }
      goto LABEL_4;
    }
LABEL_13:
    char v7 = 0;
    goto LABEL_5;
  }
LABEL_4:
  char v7 = 1;
LABEL_5:
  *(unsigned char *)(a1 + 360) = v7;
}

CFTypeRef __screenstream_statsTimerFired_block_invoke(void *a1)
{
  uint64_t v1 = a1[6];
  *(_DWORD *)(*(void *)(a1[4] + 8) + 24) = *(_DWORD *)(v1 + 496);
  *(void *)(*(void *)(a1[5] + 8) + 24) = *(void *)(v1 + 488);
  CFTypeRef result = *(CFTypeRef *)(*(void *)(a1[5] + 8) + 24);
  if (result) {
    return CFRetain(result);
  }
  return result;
}

uint64_t screenstream_signalDataAvailable(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 136);
  if (!v1
    || ((v2 = *(void *)(CMBaseObjectGetVTable() + 16)) == 0 ? (uint64_t v3 = 0) : (uint64_t v3 = v2),
        (v4 = *(uint64_t (**)(uint64_t))(v3 + 72)) == 0 || (uint64_t result = v4(v1), result)))
  {
    return APSLogErrorAt();
  }
  return result;
}

uint64_t SidePlayManagerStart()
{
  uint64_t v1 = 0;
  return SPGetEndpointManager(&v1);
}

uint64_t SPGetEndpointManager(void *a1)
{
  if (SPGetEndpointManager_sCreateOnce != -1)
  {
    dispatch_once(&SPGetEndpointManager_sCreateOnce, &__block_literal_global_38);
    if (!a1) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (a1) {
LABEL_3:
  }
    *a1 = SPGetEndpointManager_sEndpointManager;
LABEL_4:
  if (gLogCategory_SPEndpointManagerFactory <= 50
    && (gLogCategory_SPEndpointManagerFactory != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return SPGetEndpointManager_sCreationResult;
}

void __SPGetEndpointManager_block_invoke()
{
  uint64_t IsFeatureEnabled = APSSettingsIsFeatureEnabled();
  if (!IsFeatureEnabled)
  {
    uint64_t IsFeatureEnabled = APSSettingsGetIntWithDefault();
    if (!IsFeatureEnabled)
    {
      int v1 = -72390;
LABEL_16:
      if (gLogCategory_SPEndpointManagerFactory <= 90
        && (gLogCategory_SPEndpointManagerFactory != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      goto LABEL_37;
    }
  }
  if (gLogCategory_SPEndpointManagerFactory <= 50)
  {
    if (gLogCategory_SPEndpointManagerFactory != -1
      || (uint64_t IsFeatureEnabled = _LogCategory_Initialize(), IsFeatureEnabled))
    {
      uint64_t IsFeatureEnabled = LogPrintF();
    }
  }
  if (MEMORY[0x1D25E8620](IsFeatureEnabled) && !FigServer_IsAirplayd())
  {
    if (gLogCategory_SPEndpointManagerFactory <= 50
      && (gLogCategory_SPEndpointManagerFactory != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    int v1 = FigEndpointManagerRemoteCopySidePlayManager();
    if (v1) {
      goto LABEL_43;
    }
  }
  else
  {
    if (gLogCategory_SPEndpointManagerFactory <= 50
      && (gLogCategory_SPEndpointManagerFactory != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFTypeRef cf = 0;
    int v1 = SPEndpointManagerCreate(&cf);
    if (v1)
    {
      APSLogErrorAt();
    }
    else
    {
      if (!APSIsExplicitEndpointManagerInitializationEnabledInMX()
        && CMSessionMgrRegisterEndpointManager()
        && gLogCategory_SPEndpointManagerFactory <= 90
        && (gLogCategory_SPEndpointManagerFactory != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      SPGetEndpointManager_sEndpointManager = (uint64_t)cf;
      CFTypeRef cf = 0;
    }
    if (gLogCategory_SPEndpointManagerFactory <= 50
      && (gLogCategory_SPEndpointManagerFactory != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (cf) {
      CFRelease(cf);
    }
    if (v1)
    {
LABEL_43:
      APSLogErrorAt();
      goto LABEL_16;
    }
  }
LABEL_37:
  SPGetEndpointManager_sCreationResult = v1;
}

uint64_t APEndpointPlaybackSessionRemoteControlCreate(uint64_t a1, const void *a2, const void *a3, const __CFDictionary *a4, void *a5)
{
  if (!a2 || !a3 || !a5)
  {
    APSLogErrorAt();
    return 4294950556;
  }
  FigEndpointPlaybackSessionGetClassID();
  uint64_t v10 = CMDerivedObjectCreate();
  if (v10)
  {
    uint64_t v21 = v10;
    goto LABEL_24;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a1) {
    uint64_t v12 = (__CFString *)a1;
  }
  else {
    uint64_t v12 = @"unnamed APEndpointPlaybackSessionRemoteControl";
  }
  *(void *)(DerivedStorage + 8) = v12;
  CFRetain(v12);
  *(void *)(DerivedStorage + 40) = CFRetain(a2);
  *(void *)(DerivedStorage + 24) = CFRetain(a3);
  *(unsigned char *)(DerivedStorage + 96) = 0;
  *(_WORD *)(DerivedStorage + 80) = 0;
  uint64_t v13 = FigSimpleMutexCreate();
  *(void *)(DerivedStorage + 72) = v13;
  if (!v13) {
    goto LABEL_23;
  }
  uint64_t v14 = FigSimpleMutexCreate();
  *(void *)(DerivedStorage + 192) = v14;
  if (!v14) {
    goto LABEL_23;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  *(void *)(DerivedStorage + 184) = Mutable;
  if (!Mutable
    || (dispatch_queue_t v16 = dispatch_queue_create("APEndpointPlaybackSessionRemoteControl.event", 0),
        (*(void *)(DerivedStorage + 144) = v16) == 0)
    || (dispatch_queue_t v17 = dispatch_queue_create("APEndpointPlaybackSessionRemoteControl.metadata", 0),
        (*(void *)(DerivedStorage + 112) = v17) == 0)
    || (dispatch_queue_t v18 = dispatch_queue_create("APEndpointPlaybackSessionRemoteControl.notification", 0),
        (*(void *)(DerivedStorage + 64) = v18) == 0))
  {
LABEL_23:
    APSLogErrorAt();
    return 4294950555;
  }
  if (CFDictionaryContainsKey(a4, @"MetadataSource"))
  {
    CFDataRef Value = CFDictionaryGetValue(a4, @"MetadataSource");
    *(void *)(DerivedStorage + 56) = CFRetain(Value);
  }
  *(unsigned char *)(DerivedStorage + 200) = CFDictionaryGetInt64() != 0;
  if (CFDictionaryContainsKey(a4, @"NetworkClock"))
  {
    double v20 = CFDictionaryGetValue(a4, @"NetworkClock");
    *(void *)(DerivedStorage + 48) = CFRetain(v20);
  }
  uint64_t v21 = APEndpointPlaybackSessionStatsCreate(@"RC", a1, (uint64_t)a4, (void *)(DerivedStorage + 136));
  if (v21)
  {
LABEL_24:
    APSLogErrorAt();
    return v21;
  }
  *a5 = 0;
  return v21;
}

uint64_t session_Invalidate()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  if (*(unsigned char *)(DerivedStorage + 96))
  {
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  }
  else
  {
    *(unsigned char *)(DerivedStorage + 96) = 1;
    session_unsubscribeMetadataEvents();
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
    APEndpointPlaybackSessionStatsUpdateAtInvalidate(*(void *)(DerivedStorage + 136));
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 192));
    CFDictionaryRef Copy = CFDictionaryCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], *(CFDictionaryRef *)(DerivedStorage + 184));
    CFDictionaryRemoveAllValues(*(CFMutableDictionaryRef *)(DerivedStorage + 184));
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 192));
    dispatch_sync_f(*(dispatch_queue_t *)(DerivedStorage + 144), Copy, (dispatch_function_t)session_cleanupPendingRequests);
    uint64_t v2 = *(void *)DerivedStorage;
    if (*(void *)DerivedStorage)
    {
      uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
      uint64_t v4 = v3 ? v3 : 0;
      uint64_t v5 = *(void (**)(uint64_t))(v4 + 24);
      if (v5) {
        v5(v2);
      }
    }
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
    uint64_t v6 = *(void **)(DerivedStorage + 16);
    if (v6)
    {

      *(void *)(DerivedStorage + 16) = 0;
    }
  }
  return 0;
}

void session_Finalize()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointPlaybackSessionRemoteControl <= 50
    && (gLogCategory_APEndpointPlaybackSessionRemoteControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFTypeRef v1 = *(CFTypeRef *)DerivedStorage;
  if (*(void *)DerivedStorage)
  {
    uint64_t v2 = *(void *)(CMBaseObjectGetVTable() + 16);
    uint64_t v3 = v2 ? v2 : 0;
    uint64_t v4 = *(void (**)(CFTypeRef, void, void))(v3 + 16);
    if (v4) {
      v4(v1, 0, 0);
    }
  }
  *(void *)(DerivedStorage + 152) = 0;
  *(void *)(DerivedStorage + 160) = 0;
  APEndpointPlaybackSessionStatsDestroy((uint64_t *)(DerivedStorage + 136));
  uint64_t v5 = *(const void **)(DerivedStorage + 8);
  if (v5)
  {
    CFRelease(v5);
    *(void *)(DerivedStorage + 8) = 0;
  }
  uint64_t v6 = *(const void **)(DerivedStorage + 24);
  if (v6)
  {
    CFRelease(v6);
    *(void *)(DerivedStorage + 24) = 0;
  }
  char v7 = *(const void **)(DerivedStorage + 32);
  if (v7)
  {
    CFRelease(v7);
    *(void *)(DerivedStorage + 32) = 0;
  }
  uint64_t v8 = *(const void **)(DerivedStorage + 40);
  if (v8)
  {
    CFRelease(v8);
    *(void *)(DerivedStorage + 40) = 0;
  }
  CFAllocatorRef v9 = *(const void **)(DerivedStorage + 48);
  if (v9)
  {
    CFRelease(v9);
    *(void *)(DerivedStorage + 48) = 0;
  }
  FigSimpleMutexDestroy();
  uint64_t v10 = *(const void **)(DerivedStorage + 168);
  if (v10)
  {
    CFRelease(v10);
    *(void *)(DerivedStorage + 168) = 0;
  }
  CGSize v11 = *(NSObject **)(DerivedStorage + 144);
  if (v11)
  {
    dispatch_release(v11);
    *(void *)(DerivedStorage + 144) = 0;
  }
  if (*(void *)DerivedStorage)
  {
    CFRelease(*(CFTypeRef *)DerivedStorage);
    *(void *)uint64_t DerivedStorage = 0;
  }
  uint64_t v12 = *(const void **)(DerivedStorage + 184);
  if (v12)
  {
    CFRelease(v12);
    *(void *)(DerivedStorage + 184) = 0;
  }
  FigSimpleMutexDestroy();
  uint64_t v13 = *(NSObject **)(DerivedStorage + 112);
  if (v13)
  {
    dispatch_release(v13);
    *(void *)(DerivedStorage + 112) = 0;
  }
  uint64_t v14 = *(const void **)(DerivedStorage + 56);
  if (v14)
  {
    CFRelease(v14);
    *(void *)(DerivedStorage + 56) = 0;
  }
  double v15 = *(const void **)(DerivedStorage + 120);
  if (v15)
  {
    CFRelease(v15);
    *(void *)(DerivedStorage + 120) = 0;
  }
  dispatch_queue_t v16 = *(const void **)(DerivedStorage + 88);
  if (v16)
  {
    CFRelease(v16);
    *(void *)(DerivedStorage + 88) = 0;
  }
  dispatch_queue_t v17 = *(NSObject **)(DerivedStorage + 64);
  if (v17)
  {
    dispatch_release(v17);
    *(void *)(DerivedStorage + 64) = 0;
  }
  uint64_t v18 = *(void *)(DerivedStorage + 208);
  if (v18)
  {
    APLocalPlaybackServerDestroy(v18);
    *(void *)(DerivedStorage + 208) = 0;
  }
}

uint64_t session_CopyProperty(uint64_t a1, const void *a2, uint64_t a3, CFDictionaryRef *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  if (CFEqual(a2, @"RTCStats"))
  {
    APEndpointPlaybackSessionCopyRTCStats(*(void *)(DerivedStorage + 136), a4);
    if (*a4)
    {
      uint64_t v7 = 0;
    }
    else
    {
      APSLogErrorAt();
      uint64_t v7 = 4294950555;
    }
  }
  else if (*(unsigned char *)(DerivedStorage + 96))
  {
    APSLogErrorAt();
    uint64_t v7 = 4294954511;
  }
  else
  {
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20B58]))
    {
      uint64_t v8 = (CFTypeRef *)MEMORY[0x1E4F1CFC8];
    }
    else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20B78]) {
           || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20B70])
    }
           || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20B60])
           || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20B68])
           || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20B50]))
    {
      uint64_t v8 = (CFTypeRef *)MEMORY[0x1E4F1CFD0];
    }
    else
    {
      if (CFEqual(a2, @"Activated"))
      {
        uint64_t v8 = (CFTypeRef *)MEMORY[0x1E4F1CFD0];
        int v10 = *(unsigned __int8 *)(DerivedStorage + 80);
      }
      else
      {
        if (!CFEqual(a2, @"IsPlaying"))
        {
          uint64_t v7 = 4294954509;
          goto LABEL_14;
        }
        uint64_t v8 = (CFTypeRef *)MEMORY[0x1E4F1CFD0];
        int v10 = *(unsigned __int8 *)(DerivedStorage + 81);
      }
      if (!v10) {
        uint64_t v8 = (CFTypeRef *)MEMORY[0x1E4F1CFC8];
      }
    }
    uint64_t v7 = 0;
    *a4 = (CFDictionaryRef)CFRetain(*v8);
  }
LABEL_14:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  return v7;
}

uint64_t session_SetProperty(uint64_t a1, const void *a2, const __CFBoolean *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  if (*(unsigned char *)(DerivedStorage + 96))
  {
    APSLogErrorAt();
    uint64_t v13 = 4294954511;
    goto LABEL_15;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20B38]))
  {
    int v7 = FigCFEqual();
    uint64_t v8 = kAPEndpointPlaybackSessionAudioMode_MoviePlayback;
    if (!v7) {
      uint64_t v8 = kAPEndpointPlaybackSessionAudioMode_Default;
    }
    CFAllocatorRef v9 = *v8;
    int v10 = *(const void **)(DerivedStorage + 32);
    *(void *)(DerivedStorage + 32) = *v8;
    if (v9) {
      CFRetain(v9);
    }
    if (v10) {
      CFRelease(v10);
    }
    session_setProxiedPropertyInternal(a1, @"audioMode", 0, v9);
  }
  else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20B48]))
  {
    int Value = CFBooleanGetValue(a3);
    APEndpointPlaybackSessionSetIsParticipatingInCoordinatedPlayback(*(void *)(DerivedStorage + 136), Value);
  }
  else
  {
    if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20B80]))
    {
      uint64_t v13 = 4294954509;
      goto LABEL_15;
    }
    memset(&v16, 0, sizeof(v16));
    CMTimeMakeFromDictionary(&v16, a3);
    uint64_t v12 = *(void **)(DerivedStorage + 136);
    CMTime v15 = v16;
    APEndpointPlaybackSessionSetVideoSyncTime(v12, (uint64_t)&v15);
  }
  uint64_t v13 = 0;
LABEL_15:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  return v13;
}

void session_unsubscribeMetadataEvents()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(void *)(DerivedStorage + 56))
  {
    uint64_t v1 = DerivedStorage;
    if (*(void *)(DerivedStorage + 104))
    {
      if (gLogCategory_APEndpointPlaybackSessionRemoteControl <= 30
        && (gLogCategory_APEndpointPlaybackSessionRemoteControl != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      APMetadataSourceRemoveEventCallback(*(void *)(v1 + 56), *(void *)(v1 + 104));
      *(void *)(v1 + 104) = 0;
    }
  }
}

void session_cleanupPendingRequests(const void *a1)
{
  if (a1)
  {
    CFDictionaryRef v2 = CFDictionaryCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, 0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    CFDictionaryApplyBlock();
    if (v2) {
      CFRelease(v2);
    }
    CFRelease(a1);
  }
}

void __session_cleanupPendingRequests_block_invoke(uint64_t a1, int a2, CFDictionaryRef theDict)
{
  if (theDict)
  {
    CFDataRef Value = (const __CFData *)CFDictionaryGetValue(theDict, @"CompletionContext");
    if (Value)
    {
      CFDataRef v6 = Value;
      int v7 = CFDictionaryGetValue(theDict, @"type");
      if (v7)
      {
        uint64_t v8 = v7;
        uint64_t v9 = *(unsigned int *)(a1 + 40);
        CFDictionaryRef v10 = *(const __CFDictionary **)(a1 + 32);
        session_handleRemoteControlSessionResponse(v9, v8, v10, v6);
      }
    }
  }
}

void session_handleRemoteControlSessionResponse(uint64_t a1, CFTypeRef cf1, const __CFDictionary *a3, const __CFData *a4)
{
  if (!cf1) {
    return;
  }
  CFDictionaryRef Value = a3;
  if (!a3 || !a4) {
    return;
  }
  if (CFEqual(cf1, @"playbackInfo"))
  {
    CFDictionaryRef Value = (const __CFDictionary *)CFDictionaryGetValue(Value, @"info");
    BytePtr = CFDataGetBytePtr(a4);
    if (!BytePtr) {
      return;
    }
    goto LABEL_9;
  }
  if (CFEqual(cf1, @"seek"))
  {
    BytePtr = CFDataGetBytePtr(a4);
LABEL_9:
    uint64_t v9 = *(void (**)(const __CFDictionary *, uint64_t, uint64_t))BytePtr;
    if (*(void *)BytePtr)
    {
      uint64_t v10 = *((void *)BytePtr + 1);
      v9(Value, a1, v10);
    }
    return;
  }
  if (CFEqual(cf1, @"property"))
  {
    CGSize v11 = CFDataGetBytePtr(a4);
    if (*(void *)v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = CFDictionaryGetValue(Value, @"key");
      uint64_t v14 = CFDictionaryGetValue(Value, @"value");
      CMTime v16 = *(void (**)(const void *, const void *, uint64_t, uint64_t))v12;
      uint64_t v15 = *((void *)v12 + 1);
      v16(v13, v14, a1, v15);
    }
  }
  else if (CFEqual(cf1, @"streamingKey"))
  {
    dispatch_queue_t v17 = CFDataGetBytePtr(a4);
    if (*(void *)v17)
    {
      uint64_t v18 = v17;
      CFMutableDictionaryRef MutableCopy = (__CFDictionary *)FigCFDictionaryCreateMutableCopy();
      if (CFDictionaryContainsKey(Value, @"key"))
      {
        double v20 = CFDictionaryGetValue(Value, @"key");
        uint64_t v21 = v20;
        if (v20 && (CFTypeID v22 = CFGetTypeID(v20), v22 == CFStringGetTypeID())) {
          int8x16_t v23 = (const void *)[objc_alloc(MEMORY[0x1E4F1C9B8]) initWithBase64EncodedString:v21 options:0];
        }
        else {
          int8x16_t v23 = 0;
        }
        CFDictionaryRemoveValue(MutableCopy, @"key");
        if (v23) {
          uint64_t v25 = v23;
        }
        else {
          uint64_t v25 = v21;
        }
        CFDictionarySetValue(MutableCopy, (const void *)*MEMORY[0x1E4F20A98], v25);
      }
      else
      {
        int8x16_t v23 = 0;
      }
      if (CFDictionaryContainsKey(Value, @"error"))
      {
        uint64_t v26 = CFDictionaryGetValue(Value, @"error");
        CFDictionaryRemoveValue(MutableCopy, @"error");
        CFDictionarySetValue(MutableCopy, (const void *)*MEMORY[0x1E4F20948], v26);
      }
      (*(void (**)(uint64_t, __CFDictionary *, void))v18)(a1, MutableCopy, *((void *)v18 + 1));
      if (v23) {
        CFRelease(v23);
      }
      if (MutableCopy)
      {
        CFRelease(MutableCopy);
      }
    }
  }
  else if (CFEqual(cf1, @"authorizeItem"))
  {
    uint64_t v24 = CFDataGetBytePtr(a4);
    session_authorizeItemCompletion(a1, Value, (uint64_t)v24);
  }
}

uint64_t session_authorizeItemCompletion(uint64_t result, CFDictionaryRef theDict, uint64_t a3)
{
  if (*(void *)a3)
  {
    uint64_t v5 = result;
    CFDictionaryGetValue(theDict, @"item");
    CFDictionaryRef Value = CFDictionaryGetValue(theDict, @"PIC-Data");
    int v7 = CFDictionaryGetValue(theDict, @"playerGUID");
    uint64_t v9 = *(uint64_t (**)(const void *, const void *, uint64_t, uint64_t))a3;
    uint64_t v8 = *(void *)(a3 + 8);
    return v9(Value, v7, v5, v8);
  }
  return result;
}

void session_setProxiedPropertyInternal(uint64_t a1, const void *a2, uint64_t a3, const void *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  if (*(unsigned char *)(DerivedStorage + 96) || (uint64_t v8 = (uint64_t *)DerivedStorage, !*(void *)DerivedStorage))
  {
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
  }
  else
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    CFDictionarySetValue(Mutable, @"type", @"setProperty");
    CFDictionarySetValue(Mutable, @"property", a2);
    CFDictionarySetValue(Mutable, @"value", a4);
    if (a3)
    {
      APEndpointPlaybackSessionSetV2Item(a3, Mutable);
      FigCFDictionarySetValueFromKeyInDict();
      FigCFDictionarySetValueFromKeyInDict();
    }
    session_createDataFromDictionary((uint64_t)Mutable, &cf);
    uint64_t v10 = *v8;
    CFTypeRef v11 = cf;
    uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v12) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    uint64_t v14 = *(void (**)(uint64_t, CFTypeRef, void, void))(v13 + 8);
    if (v14) {
      v14(v10, v11, 0, 0);
    }
  }
  if (cf) {
    CFRelease(cf);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
}

void session_createDataFromDictionary(uint64_t a1, void *a2)
{
  if (FigCreateCFDataFromCFPropertyList())
  {
    APSLogErrorAt();
    FigSignalErrorAt();
  }
  else if (a2)
  {
    *a2 = 0;
  }
}

uint64_t session_AuthorizeItem(uint64_t a1, const void *a2, const void *a3, void (*a4)(void, void, void, void), uint64_t a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v23 = 0;
  CFTypeRef cf = 0;
  CFTypeID v22 = 0;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  if (*(unsigned char *)(DerivedStorage + 96))
  {
    APSLogErrorAt();
    uint64_t v14 = 0;
    CFMutableDictionaryRef Mutable = 0;
    uint64_t v20 = 4294954511;
    goto LABEL_15;
  }
  uint64_t v11 = session_ensureRemoteControlSessionCreated(a1);
  if (v11)
  {
    uint64_t v20 = v11;
    APSLogErrorAt();
    uint64_t v14 = 0;
    CFMutableDictionaryRef Mutable = 0;
    goto LABEL_15;
  }
  if (!*(void *)DerivedStorage)
  {
    APSLogErrorAt();
    uint64_t v14 = 0;
    CFMutableDictionaryRef Mutable = 0;
    uint64_t v20 = 4294950553;
    goto LABEL_15;
  }
  CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  CFDictionarySetValue(Mutable, @"type", @"authorizeItem");
  CFDictionarySetValue(Mutable, @"kind", @"request");
  if (!a3)
  {
    uint64_t v14 = 0;
    if (!a2) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v14 = CFDictionaryCreateMutable(v12, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  CFDictionarySetValue(v14, @"uuid", a3);
  CFDictionarySetValue(Mutable, @"item", v14);
  if (a2) {
LABEL_6:
  }
    CFDictionarySetValue(Mutable, @"PIC-Request", a2);
LABEL_7:
  CFTypeID v22 = a4;
  uint64_t v23 = a5;
  session_addPendingRequest(a1, Mutable, (const UInt8 *)&v22);
  session_createDataFromDictionary((uint64_t)Mutable, &cf);
  uint64_t v15 = *(void *)DerivedStorage;
  CFTypeRef v16 = cf;
  uint64_t v17 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v17) {
    uint64_t v18 = v17;
  }
  else {
    uint64_t v18 = 0;
  }
  double v19 = *(void (**)(uint64_t, CFTypeRef, void, void))(v18 + 8);
  if (v19) {
    v19(v15, v16, 0, 0);
  }
  uint64_t v20 = 0;
LABEL_15:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  if (a4 && v20) {
    a4(0, 0, v20, a5);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  if (v14) {
    CFRelease(v14);
  }
  return 0;
}

uint64_t session_Play(uint64_t a1, const __CFDictionary *a2, void (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  if (*(unsigned char *)(DerivedStorage + 96))
  {
    APSLogErrorAt();
    uint64_t inserted = FigSignalErrorAt();
  }
  else
  {
    if (!*(void *)(DerivedStorage + 16))
    {
      SNPrintF();
      *(void *)(DerivedStorage + 16) = os_transaction_create();
    }
    APEndpointPlaybackSessionStatsUpdateAtPlay(*(void *)(DerivedStorage + 136), a2);
    uint64_t v9 = CMBaseObjectGetDerivedStorage();
    if (*(void *)(v9 + 56))
    {
      uint64_t v10 = v9;
      if (gLogCategory_APEndpointPlaybackSessionRemoteControl <= 30
        && (gLogCategory_APEndpointPlaybackSessionRemoteControl != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(void *)(v10 + 104) = APMetadataSourceAddEventCallback(*(void *)(v10 + 56), a1, (uint64_t)session_handleMetadataEvent);
      *(unsigned char *)(v10 + 129) = 0;
    }
    uint64_t inserted = session_insertPlayQueueItemInternal(a1, a2, 0, (uint64_t)a3, a4);
    *(unsigned char *)(DerivedStorage + 80) = 1;
    session_updateIsPlayingAndPostNotification(a1, 1);
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  if (a3 && inserted) {
    a3(inserted, a4);
  }
  return inserted;
}

uint64_t session_InsertPlayQueueItem(uint64_t a1, const __CFDictionary *a2, const __CFDictionary *a3, void (*a4)(uint64_t, uint64_t), uint64_t a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  if (*(unsigned char *)(DerivedStorage + 96) || !a2)
  {
    APSLogErrorAt();
    uint64_t inserted = FigSignalErrorAt();
  }
  else
  {
    uint64_t inserted = session_insertPlayQueueItemInternal(a1, a2, a3, (uint64_t)a4, a5);
  }
  uint64_t v12 = inserted;
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  if (a4 && v12) {
    a4(v12, a5);
  }
  return v12;
}

uint64_t session_RemovePlayQueueItem(uint64_t a1, const __CFDictionary *a2, void (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  CFDictionaryRef Value = CFDictionaryGetValue(a2, (const void *)*MEMORY[0x1E4F20A88]);
  if (gLogCategory_APEndpointPlaybackSessionRemoteControl <= 50
    && (gLogCategory_APEndpointPlaybackSessionRemoteControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  if (*(unsigned char *)(DerivedStorage + 96))
  {
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
    uint64_t v18 = 4294954511;
LABEL_26:
    int v17 = 1;
    goto LABEL_16;
  }
  if (!*(void *)DerivedStorage)
  {
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
    uint64_t v18 = 4294950553;
    goto LABEL_26;
  }
  uint64_t v9 = *(void *)(DerivedStorage + 208);
  if (v9 && Value) {
    APLocalPlaybackServerUnRegisterUUID(v9, Value);
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  CFDictionarySetValue(Mutable, @"type", @"removePlayQueueItem");
  FigCFDictionarySetValueFromKeyInDict();
  CFDictionarySetValue(Mutable, @"item", a2);
  session_createDataFromDictionary((uint64_t)Mutable, &cf);
  uint64_t v11 = malloc_type_calloc(0x10uLL, 1uLL, 0x6D9709DEuLL);
  *uint64_t v11 = a3;
  v11[1] = a4;
  uint64_t v12 = *(void *)DerivedStorage;
  CFTypeRef v13 = cf;
  uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v14) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  CFTypeRef v16 = *(void (**)(uint64_t, CFTypeRef, void (*)(uint64_t, int, void *), void *))(v15 + 8);
  if (v16) {
    v16(v12, v13, session_standardCompletion, v11);
  }
  int v17 = 0;
  uint64_t v18 = 0;
LABEL_16:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  if (a3 && v17) {
    a3(v18, a4);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  return 0;
}

uint64_t session_Stop(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  if (*(unsigned char *)(DerivedStorage + 96))
  {
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
    uint64_t v15 = 4294954511;
LABEL_23:
    int v14 = 1;
    goto LABEL_13;
  }
  if (!*(void *)DerivedStorage)
  {
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
    uint64_t v15 = 4294950553;
    goto LABEL_23;
  }
  if (gLogCategory_APEndpointPlaybackSessionRemoteControl <= 50
    && (gLogCategory_APEndpointPlaybackSessionRemoteControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  session_unsubscribeMetadataEvents();
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  CFDictionarySetValue(Mutable, @"type", @"stop");
  session_createDataFromDictionary((uint64_t)Mutable, &cf);
  uint64_t v8 = malloc_type_calloc(0x10uLL, 1uLL, 0x6C45891BuLL);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = *(void *)DerivedStorage;
  CFTypeRef v10 = cf;
  uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v11) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = 0;
  }
  CFTypeRef v13 = *(void (**)(uint64_t, CFTypeRef, void (*)(uint64_t, int, void *), void *))(v12 + 8);
  if (v13) {
    v13(v9, v10, session_standardCompletion, v8);
  }
  int v14 = 0;
  uint64_t v15 = 0;
LABEL_13:
  *(unsigned char *)(DerivedStorage + 80) = 0;
  session_updateIsPlayingAndPostNotification(a1, 0);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  if (a2 && v14) {
    a2(v15, a3);
  }
  CMNotificationCenterGetDefaultLocalCenter();
  FigDispatchAsyncPostNotification();
  if (cf) {
    CFRelease(cf);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  return 0;
}

uint64_t session_GetPlaybackInfo(uint64_t a1, void (*a2)(void, void, void), uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v17 = 0;
  CFTypeRef cf = 0;
  CFTypeRef v16 = 0;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  if (*(unsigned char *)(DerivedStorage + 96))
  {
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
    uint64_t v14 = 4294954511;
LABEL_19:
    int v13 = 1;
    goto LABEL_9;
  }
  if (!*(void *)DerivedStorage)
  {
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
    uint64_t v14 = 4294950553;
    goto LABEL_19;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  CFDictionarySetValue(Mutable, @"type", @"playbackInfo");
  CFDictionarySetValue(Mutable, @"kind", @"request");
  CFTypeRef v16 = a2;
  uint64_t v17 = a3;
  session_addPendingRequest(a1, Mutable, (const UInt8 *)&v16);
  session_createDataFromDictionary((uint64_t)Mutable, &cf);
  uint64_t v8 = *(void *)DerivedStorage;
  CFTypeRef v9 = cf;
  uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v10) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0;
  }
  uint64_t v12 = *(void (**)(uint64_t, CFTypeRef, void, void))(v11 + 8);
  if (v12) {
    v12(v8, v9, 0, 0);
  }
  int v13 = 0;
  uint64_t v14 = 0;
LABEL_9:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  if (a2 && v13) {
    a2(0, v14, a3);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  return 0;
}

uint64_t session_SeekToTime(uint64_t a1, uint64_t a2, const __CFDictionary *a3, void (*a4)(void, void, void), uint64_t a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v22 = 0;
  CFTypeRef cf = 0;
  uint64_t v21 = 0;
  CFAllocatorRef v10 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  if (*(unsigned char *)(DerivedStorage + 96))
  {
    APSLogErrorAt();
    CFMutableDictionaryRef MutableCopy = 0;
    uint64_t v19 = 4294954511;
LABEL_21:
    int v18 = 1;
    goto LABEL_9;
  }
  if (!*(void *)DerivedStorage)
  {
    APSLogErrorAt();
    CFMutableDictionaryRef MutableCopy = 0;
    uint64_t v19 = 4294950553;
    goto LABEL_21;
  }
  CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy(v10, 0, a3);
  CFDictionarySetValue(MutableCopy, @"type", @"seek");
  CFDictionarySetValue(MutableCopy, @"kind", @"request");
  FigCFDictionarySetCMTime();
  CFDictionaryRemoveValue(MutableCopy, (const void *)*MEMORY[0x1E4F20A88]);
  FigCFDictionarySetValueFromKeyInDict();
  FigCFDictionarySetValueFromKeyInDict();
  FigCFDictionarySetValue();
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  session_addPendingRequest(a1, MutableCopy, (const UInt8 *)&v21);
  session_createDataFromDictionary((uint64_t)MutableCopy, &cf);
  uint64_t v13 = *(void *)DerivedStorage;
  CFTypeRef v14 = cf;
  uint64_t v15 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v15) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = 0;
  }
  uint64_t v17 = *(void (**)(uint64_t, CFTypeRef, void, void))(v16 + 8);
  if (v17) {
    v17(v13, v14, 0, 0);
  }
  int v18 = 0;
  uint64_t v19 = 0;
LABEL_9:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  if (a4 && v18) {
    a4(0, v19, a5);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (MutableCopy) {
    CFRelease(MutableCopy);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  return 0;
}

uint64_t session_SeekToDate(uint64_t a1, const void *a2, uint64_t a3, void (*a4)(void, void, void), uint64_t a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v20 = 0;
  CFTypeRef cf = 0;
  uint64_t v19 = 0;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  if (*(unsigned char *)(DerivedStorage + 96))
  {
    APSLogErrorAt();
    CFMutableDictionaryRef MutableCopy = 0;
    uint64_t v17 = 4294954511;
LABEL_19:
    int v16 = 1;
    goto LABEL_9;
  }
  if (!*(void *)DerivedStorage)
  {
    APSLogErrorAt();
    CFMutableDictionaryRef MutableCopy = 0;
    uint64_t v17 = 4294950553;
    goto LABEL_19;
  }
  CFMutableDictionaryRef MutableCopy = (__CFDictionary *)FigCFDictionaryCreateMutableCopy();
  CFDictionarySetValue(MutableCopy, @"type", @"seek");
  FigCFDictionarySetValue();
  FigCFDictionarySetValueFromKeyInDict();
  CFDictionarySetValue(MutableCopy, @"date", a2);
  uint64_t v19 = a4;
  uint64_t v20 = a5;
  session_addPendingRequest(a1, MutableCopy, (const UInt8 *)&v19);
  session_createDataFromDictionary((uint64_t)MutableCopy, &cf);
  uint64_t v11 = *(void *)DerivedStorage;
  CFTypeRef v12 = cf;
  uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v13) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  uint64_t v15 = *(void (**)(uint64_t, CFTypeRef, void, void))(v14 + 8);
  if (v15) {
    v15(v11, v12, 0, 0);
  }
  int v16 = 0;
  uint64_t v17 = 0;
LABEL_9:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  if (a4 && v16) {
    a4(0, v17, a5);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (MutableCopy) {
    CFRelease(MutableCopy);
  }
  return 0;
}

uint64_t session_SetRate(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), uint64_t a4, float a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  v37[0] = 0;
  CMTime v36 = *(CMTime *)*(void *)&MEMORY[0x1E4F1F9F8];
  long long v30 = *MEMORY[0x1E4F4A160];
  *(_OWORD *)&v35.value = *MEMORY[0x1E4F4A160];
  CMTimeEpoch v11 = *(void *)(MEMORY[0x1E4F4A160] + 16);
  v35.epoch = v11;
  CMTime v34 = v36;
  CMTime v33 = v36;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  if (*(unsigned char *)(DerivedStorage + 96))
  {
    APSLogErrorAt();
    uint64_t v13 = 0;
    uint64_t v15 = 0;
    uint64_t v28 = 4294954511;
LABEL_49:
    int v27 = 1;
    goto LABEL_35;
  }
  if (!*(void *)DerivedStorage)
  {
    APSLogErrorAt();
    uint64_t v13 = 0;
    uint64_t v15 = 0;
LABEL_48:
    uint64_t v28 = 4294950553;
    goto LABEL_49;
  }
  if (gLogCategory_APEndpointPlaybackSessionRemoteControl <= 50
    && (gLogCategory_APEndpointPlaybackSessionRemoteControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a2) {
    CFMutableDictionaryRef MutableCopy = (__CFDictionary *)FigCFDictionaryCreateMutableCopy();
  }
  else {
    CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  }
  uint64_t v13 = MutableCopy;
  CFDictionarySetValue(MutableCopy, @"type", @"setRate");
  FigCFDictionarySetFloat32();
  uint64_t v14 = (const void *)*MEMORY[0x1E4F20960];
  if (FigCFDictionaryGetCMTimeIfPresent())
  {
    uint64_t v15 = *(const void **)(DerivedStorage + 48);
    if (v15)
    {
      if (v36.flags)
      {
        CMTime hostTime = v36;
        uint64_t v16 = CMClockConvertHostTimeToSystemUnits(&hostTime);
        uint64_t v17 = *(void *)(CMBaseObjectGetVTable() + 16);
        uint64_t v18 = v17 ? v17 : 0;
        uint64_t v19 = *(unsigned int (**)(const void *, uint64_t, CMTime *))(v18 + 16);
        if (!v19 || v19(v15, v16, &v35))
        {
          if (gLogCategory_APEndpointPlaybackSessionRemoteControl <= 90
            && (gLogCategory_APEndpointPlaybackSessionRemoteControl != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          *(_OWORD *)&v35.value = v30;
          v35.epoch = v11;
        }
      }
      CMTime hostTime = v35;
      uint64_t v15 = (const void *)APSNetworkTimeCopyAsDictionary();
      FigCFDictionarySetValue();
      CFDictionaryRemoveValue(v13, v14);
      HostTimeClock = CMClockGetHostTimeClock();
      CMClockGetTime(&v34, HostTimeClock);
      CMTime hostTime = v36;
      CMTime rhs = v34;
      CMTimeSubtract(&v33, &hostTime, &rhs);
      CMTime hostTime = v33;
      FigCFDictionarySetCMTime();
      goto LABEL_25;
    }
    APSLogErrorAt();
    goto LABEL_48;
  }
  uint64_t v15 = 0;
LABEL_25:
  if (gLogCategory_APEndpointPlaybackSessionRemoteControl <= 30
    && (gLogCategory_APEndpointPlaybackSessionRemoteControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  session_createDataFromDictionary((uint64_t)v13, v37);
  uint64_t v21 = malloc_type_calloc(0x10uLL, 1uLL, 0x13C6FD8FuLL);
  *uint64_t v21 = a3;
  v21[1] = a4;
  session_updateIsPlayingAndPostNotification(a1, a5 != 0.0);
  uint64_t v22 = *(void *)DerivedStorage;
  CFTypeRef v23 = v37[0];
  uint64_t v24 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v24) {
    uint64_t v25 = v24;
  }
  else {
    uint64_t v25 = 0;
  }
  uint64_t v26 = *(void (**)(uint64_t, CFTypeRef, void (*)(uint64_t, int, void *), void *))(v25 + 8);
  if (v26) {
    v26(v22, v23, session_standardCompletion, v21);
  }
  int v27 = 0;
  uint64_t v28 = 0;
LABEL_35:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  if (a3 && v27) {
    a3(v28, a4);
  }
  if (v37[0]) {
    CFRelease(v37[0]);
  }
  if (v13) {
    CFRelease(v13);
  }
  if (v15) {
    CFRelease(v15);
  }
  return 0;
}

uint64_t session_GetProxiedProperty(uint64_t a1, const void *a2, uint64_t a3, void (*a4)(void, void, void, void), uint64_t a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v21 = 0;
  CFTypeRef cf = 0;
  uint64_t v20 = 0;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  if (*(unsigned char *)(DerivedStorage + 96))
  {
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
    uint64_t v18 = 4294954511;
LABEL_21:
    int v17 = 1;
    goto LABEL_11;
  }
  if (!*(void *)DerivedStorage)
  {
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
    uint64_t v18 = 4294950553;
    goto LABEL_21;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  CFDictionarySetValue(Mutable, @"type", @"property");
  CFDictionarySetValue(Mutable, @"kind", @"request");
  CFDictionarySetValue(Mutable, @"property", a2);
  if (a3)
  {
    APEndpointPlaybackSessionSetV2Item(a3, Mutable);
    FigCFDictionarySetValueFromKeyInDict();
    FigCFDictionarySetValueFromKeyInDict();
  }
  uint64_t v20 = a4;
  uint64_t v21 = a5;
  session_addPendingRequest(a1, Mutable, (const UInt8 *)&v20);
  session_createDataFromDictionary((uint64_t)Mutable, &cf);
  uint64_t v12 = *(void *)DerivedStorage;
  CFTypeRef v13 = cf;
  uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v14) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  uint64_t v16 = *(void (**)(uint64_t, CFTypeRef, void, void))(v15 + 8);
  if (v16) {
    v16(v12, v13, 0, 0);
  }
  int v17 = 0;
  uint64_t v18 = 0;
LABEL_11:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  if (a4 && v17) {
    a4(a2, 0, v18, a5);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  return 0;
}

uint64_t session_SetProxiedProperty(uint64_t a1, const void *a2, uint64_t a3, const void *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  if (*(unsigned char *)(DerivedStorage + 96))
  {
    APSLogErrorAt();
    uint64_t v9 = 4294954511;
  }
  else if (*(void *)DerivedStorage)
  {
    session_setProxiedPropertyInternal(a1, a2, a3, a4);
    uint64_t v9 = 0;
  }
  else
  {
    APSLogErrorAt();
    uint64_t v9 = 4294950553;
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  return v9;
}

uint64_t session_PerformRemoteAction(uint64_t a1, uint64_t a2, const void *a3, void (*a4)(uint64_t, void, uint64_t), uint64_t a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  if (*(unsigned char *)(DerivedStorage + 96))
  {
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
    DeepCFDictionaryRef Copy = 0;
    uint64_t v21 = 4294954511;
LABEL_28:
    int v20 = 1;
    goto LABEL_15;
  }
  if (!*(void *)DerivedStorage)
  {
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
    DeepCFDictionaryRef Copy = 0;
    uint64_t v21 = 4294950553;
    goto LABEL_28;
  }
  CFAllocatorRef v10 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (FigCFEqual())
  {
    CFDictionarySetValue(Mutable, @"type", @"streamingKey");
    CFDictionarySetValue(Mutable, @"kind", @"request");
    FigCFDictionarySetValueFromKeyInDict();
    DeepCFDictionaryRef Copy = CFPropertyListCreateDeepCopy(v10, a3, 2uLL);
    if (DeepCopy)
    {
      CFDictionarySetValue(Mutable, @"params", DeepCopy);
      v23[0] = a4;
      v23[1] = a5;
      session_addPendingRequest(a1, Mutable, (const UInt8 *)v23);
      CFTypeRef v13 = 0;
      uint64_t v14 = 0;
      goto LABEL_9;
    }
  }
  else
  {
    if (!FigCFEqual())
    {
      FigSignalErrorAt();
      int v20 = 0;
      uint64_t v21 = 0;
      DeepCFDictionaryRef Copy = 0;
      goto LABEL_15;
    }
    CFTypeRef v13 = malloc_type_calloc(0x10uLL, 1uLL, 0x9F90CABBuLL);
    *CFTypeRef v13 = a4;
    v13[1] = a5;
    CFDictionarySetValue(Mutable, @"type", @"unhandledURL");
    CFDictionarySetValue(Mutable, @"kind", @"response");
    FigCFDictionarySetValueFromKeyInDict();
    DeepCFDictionaryRef Copy = CFPropertyListCreateDeepCopy(v10, a3, 2uLL);
    if (DeepCopy)
    {
      CFDictionarySetValue(Mutable, @"response", DeepCopy);
      uint64_t v14 = session_performActionUnhandledURLResponseCompletion;
LABEL_9:
      session_createDataFromDictionary((uint64_t)Mutable, &cf);
      uint64_t v15 = *(void *)DerivedStorage;
      CFTypeRef v16 = cf;
      uint64_t v17 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v17) {
        uint64_t v18 = v17;
      }
      else {
        uint64_t v18 = 0;
      }
      uint64_t v19 = *(void (**)(uint64_t, CFTypeRef, void (*)(uint64_t, CFDictionaryRef, void *), void *))(v18 + 8);
      if (v19) {
        v19(v15, v16, v14, v13);
      }
      goto LABEL_14;
    }
  }
  APSLogErrorAt();
  FigSignalErrorAt();
LABEL_14:
  int v20 = 0;
  uint64_t v21 = 0;
LABEL_15:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  if (a4 && v20) {
    a4(v21, 0, a5);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  if (DeepCopy) {
    CFRelease(DeepCopy);
  }
  return 0;
}

uint64_t session_SetEventHandler(const void *a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v9 = malloc_type_calloc(0x20uLL, 1uLL, 0x69A9401EuLL);
  *uint64_t v9 = a1;
  v9[1] = a2;
  v9[2] = a3;
  v9[3] = a4;
  if (a1)
  {
    CFRetain(a1);
    a4 = (const void *)v9[3];
  }
  if (a4) {
    CFRetain(a4);
  }
  dispatch_sync_f(*(dispatch_queue_t *)(DerivedStorage + 144), v9, (dispatch_function_t)session_setEventHandlerInternal);
  return 0;
}

uint64_t session_ensureRemoteControlSessionCreated(uint64_t a1)
{
  uint64_t DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (*DerivedStorage) {
    return 0;
  }
  uint64_t v3 = DerivedStorage;
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294950555;
  }
  CFDictionaryRef v5 = Mutable;
  CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F210F8], (const void *)*MEMORY[0x1E4F210E0]);
  FigCFDictionarySetInt32();
  uint64_t v6 = APEndpointRemoteControlSessionCreate((const __CFAllocator *)*MEMORY[0x1E4F1CF80], (const void *)v3[5], v3[3], v5, 1, v3);
  if (v6)
  {
    uint64_t v11 = v6;
    goto LABEL_11;
  }
  uint64_t v7 = *v3;
  uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  CFAllocatorRef v10 = *(uint64_t (**)(uint64_t, void (*)(uint64_t, uint64_t, const __CFData *, const void *), uint64_t))(v9 + 16);
  if (!v10)
  {
    uint64_t v11 = 4294954514;
LABEL_11:
    APSLogErrorAt();
    goto LABEL_12;
  }
  uint64_t v11 = v10(v7, session_handleRemoteControlSessionEvent, a1);
  if (v11) {
    goto LABEL_11;
  }
LABEL_12:
  CFRelease(v5);
  return v11;
}

void session_addPendingRequest(uint64_t a1, __CFDictionary *a2, const UInt8 *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFDictionarySetValue(a2, @"kind", @"request");
  ++*(void *)(DerivedStorage + 176);
  CFAllocatorRef v6 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  Uuint64_t Int64 = (const void *)FigCFNumberCreateUInt64();
  if (UInt64)
  {
    uint64_t v8 = UInt64;
    CFDictionarySetValue(a2, @"messageID", UInt64);
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v6, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (Mutable)
    {
      CFMutableDictionaryRef v10 = Mutable;
      FigCFDictionarySetValueFromKeyInDict();
      CFDataRef v11 = CFDataCreate(v6, a3, 16);
      if (v11)
      {
        CFDataRef v12 = v11;
        FigCFDictionarySetValue();
        MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 192));
        CFDictionarySetValue(*(CFMutableDictionaryRef *)(DerivedStorage + 184), v8, v10);
        MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 192));
        CFRelease(v10);
        CFDataRef v13 = v12;
      }
      else
      {
        APSLogErrorAt();
        FigSignalErrorAt();
        CFDataRef v13 = v10;
      }
      CFRelease(v13);
    }
    else
    {
      APSLogErrorAt();
      FigSignalErrorAt();
    }
    CFRelease(v8);
  }
  else
  {
    APSLogErrorAt();
    FigSignalErrorAt();
  }
}

void session_handleRemoteControlSessionEvent(uint64_t a1, uint64_t a2, const __CFData *a3, const void *a4)
{
  CFTypeRef cf = 0;
  if (a4)
  {
    uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
    if (FigCFEqual())
    {
      if (gLogCategory_APEndpointPlaybackSessionRemoteControl <= 50
        && (gLogCategory_APEndpointPlaybackSessionRemoteControl != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    else if (FigCFEqual())
    {
      if (a3)
      {
        if (!session_createDictionaryFromData(a3, &cf))
        {
          uint64_t v7 = malloc_type_calloc(0x10uLL, 1uLL, 0x22B29402uLL);
          CFTypeRef v8 = cf;
          *uint64_t v7 = a4;
          v7[1] = v8;
          CFRetain(a4);
          uint64_t v9 = (const void *)v7[1];
          if (v9) {
            CFRetain(v9);
          }
          dispatch_async_f(*(dispatch_queue_t *)(DerivedStorage + 144), v7, (dispatch_function_t)session_handleRemoteControlSessionEventInternal);
          goto LABEL_13;
        }
        APSLogErrorAt();
      }
      else
      {
        APSLogErrorAt();
      }
      FigSignalErrorAt();
    }
LABEL_13:
    if (cf) {
      CFRelease(cf);
    }
  }
}

CFIndex session_createDictionaryFromData(CFDataRef data, void *a2)
{
  CFErrorRef error = 0;
  CFPropertyListRef v3 = CFPropertyListCreateWithData((CFAllocatorRef)*MEMORY[0x1E4F1CF80], data, 1uLL, 0, &error);
  if (error)
  {
    CFIndex Code = CFErrorGetCode(error);
    if (v3) {
      goto LABEL_3;
    }
LABEL_6:
    APSLogErrorAt();
    CFIndex Code = FigSignalErrorAt();
    goto LABEL_8;
  }
  CFIndex Code = 0;
  if (!v3) {
    goto LABEL_6;
  }
LABEL_3:
  if (a2) {
    *a2 = v3;
  }
  else {
    CFRelease(v3);
  }
LABEL_8:
  if (error) {
    CFRelease(error);
  }
  return Code;
}

void session_handleRemoteControlSessionEventInternal(uint64_t *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(void *)(DerivedStorage + 152)) {
    goto LABEL_38;
  }
  uint64_t v3 = DerivedStorage;
  CFDictionaryRef v4 = (const __CFDictionary *)a1[1];
  if (!v4 || (CFDictionaryGetValue(v4, @"kind"), v5 = FigCFEqual(), CFDictionaryRef v4 = (const __CFDictionary *)a1[1], !v5))
  {
    CFDictionaryRef Value = CFDictionaryGetValue(v4, @"name");
    CFDictionaryGetValue((CFDictionaryRef)a1[1], @"type");
    int v10 = FigCFEqual();
    CFDictionaryRef v11 = (const __CFDictionary *)a1[1];
    if (v10)
    {
      CFDictionaryRef v12 = (const __CFDictionary *)CFDictionaryGetValue(v11, @"item");
      if (v12) {
        CFDataRef v13 = CFDictionaryGetValue(v12, @"uuid");
      }
      else {
        CFDataRef v13 = 0;
      }
      CFDictionarySetValue((CFMutableDictionaryRef)a1[1], (const void *)*MEMORY[0x1E4F20858], Value);
      CFDictionaryRemoveValue((CFMutableDictionaryRef)a1[1], @"kind");
      CFDictionaryRemoveValue((CFMutableDictionaryRef)a1[1], @"name");
      if (v13) {
        CFDictionarySetValue((CFMutableDictionaryRef)a1[1], (const void *)*MEMORY[0x1E4F20A88], v13);
      }
      if (Value)
      {
        if (CFEqual(Value, (CFTypeRef)*MEMORY[0x1E4F20C60])) {
          BOOL v24 = 1;
        }
        else {
          BOOL v24 = CFEqual(Value, (CFTypeRef)*MEMORY[0x1E4F20C50]) != 0;
        }
        MEMORY[0x1D25EB370](*(void *)(v3 + 72));
        session_updateIsPlayingAndPostNotification(*a1, v24);
        MEMORY[0x1D25EB390](*(void *)(v3 + 72));
      }
      if (FigCFEqual()) {
        APEndpointPlaybackSessionStatsUpdateAtStartUpComplete(*(void *)(v3 + 136));
      }
      goto LABEL_35;
    }
    CFDictionaryGetValue(v11, @"type");
    int v14 = FigCFEqual();
    CFDictionaryRef v15 = (const __CFDictionary *)a1[1];
    if (!v14)
    {
      CFDictionaryGetValue(v15, @"type");
      if (FigCFEqual())
      {
        CFDictionaryRemoveValue((CFMutableDictionaryRef)a1[1], @"type");
        CFDictionarySetValue((CFMutableDictionaryRef)a1[1], (const void *)*MEMORY[0x1E4F20860], (const void *)*MEMORY[0x1E4F208D8]);
      }
      goto LABEL_35;
    }
    CFDictionaryRef v16 = (const __CFDictionary *)CFDictionaryGetValue(v15, @"item");
    if (v16
      || (CFDictionaryRef v16 = (const __CFDictionary *)CFDictionaryGetValue((CFDictionaryRef)a1[1], @"itemCurrent")) != 0)
    {
      uint64_t v17 = CFDictionaryGetValue(v16, @"uuid");
      CFDictionarySetValue((CFMutableDictionaryRef)a1[1], @"type", Value);
      if (!v17)
      {
LABEL_34:
        CFDictionaryRemoveValue((CFMutableDictionaryRef)a1[1], @"kind");
        CFDictionaryRemoveValue((CFMutableDictionaryRef)a1[1], @"name");
LABEL_35:
        CFDictionaryGetValue((CFDictionaryRef)a1[1], (const void *)*MEMORY[0x1E4F20840]);
        if (FigCFDictionaryGetInt32IfPresent()) {
          APEndpointPlaybackSessionStatsSetLastError(*(void **)(v3 + 136));
        }
        (*(void (**)(uint64_t, uint64_t, void, void))(v3 + 152))(*a1, a1[1], *(void *)(v3 + 160), *(void *)(v3 + 168));
        goto LABEL_38;
      }
      uint64_t v18 = (__CFDictionary *)a1[1];
      uint64_t v19 = (__CFString *)*MEMORY[0x1E4F20A88];
      int v20 = v17;
    }
    else
    {
      uint64_t v18 = (__CFDictionary *)a1[1];
      uint64_t v19 = @"type";
      int v20 = Value;
    }
    CFDictionarySetValue(v18, v19, v20);
    goto LABEL_34;
  }
  CFAllocatorRef v6 = CFDictionaryGetValue(v4, @"messageID");
  uint64_t v7 = CFDictionaryGetValue((CFDictionaryRef)a1[1], @"type");
  CFTypeRef v8 = CFDictionaryGetValue((CFDictionaryRef)a1[1], @"error");
  if (v6 && v7)
  {
    if (v8) {
      FigCFDictionaryGetInt32IfPresent();
    }
    MEMORY[0x1D25EB370](*(void *)(v3 + 192));
    CFDictionaryRef v21 = (const __CFDictionary *)CFDictionaryGetValue(*(CFDictionaryRef *)(v3 + 184), v6);
    if (v21)
    {
      CFDictionaryRef v22 = v21;
      CFRetain(v21);
      CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(v3 + 184), v6);
      MEMORY[0x1D25EB390](*(void *)(v3 + 192));
      CFDataRef v23 = (const __CFData *)CFDictionaryGetValue(v22, @"CompletionContext");
      session_handleRemoteControlSessionResponse(0, v7, (const __CFDictionary *)a1[1], v23);
      CFRelease(v22);
      goto LABEL_38;
    }
    CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(v3 + 184), v6);
    MEMORY[0x1D25EB390](*(void *)(v3 + 192));
    APSLogErrorAt();
  }
  else
  {
    APSLogErrorAt();
  }
  FigSignalErrorAt();
LABEL_38:
  if (*a1) {
    CFRelease((CFTypeRef)*a1);
  }
  uint64_t v25 = (const void *)a1[1];
  if (v25) {
    CFRelease(v25);
  }
  free(a1);
}

void session_updateIsPlayingAndPostNotification(uint64_t a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(unsigned char *)(DerivedStorage + 96))
  {
    uint64_t v5 = DerivedStorage;
    if (*(unsigned __int8 *)(DerivedStorage + 81) != a2)
    {
      APEndpointPlaybackSessionUpdateNowPlayingTransaction(a1, a2, &gLogCategory_APEndpointPlaybackSessionRemoteControl, (const void **)(DerivedStorage + 88));
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      uint64_t v7 = Mutable;
      CFTypeRef v8 = (const void **)MEMORY[0x1E4F1CFC8];
      if (a2) {
        CFTypeRef v8 = (const void **)MEMORY[0x1E4F1CFD0];
      }
      CFDictionarySetValue(Mutable, @"Playing", *v8);
      *(unsigned char *)(v5 + 81) = a2;
      CMNotificationCenterGetDefaultLocalCenter();
      FigDispatchAsyncPostNotification();
      CFRelease(v7);
    }
  }
}

uint64_t session_insertPlayQueueItemInternal(uint64_t a1, const __CFDictionary *a2, const __CFDictionary *a3, uint64_t a4, uint64_t a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef v69 = 0;
  CFTypeRef v70 = 0;
  value = 0;
  CFTypeRef v68 = 0;
  if (*(unsigned char *)(DerivedStorage + 96) || !a2)
  {
    APSLogErrorAt();
    uint64_t v61 = FigSignalErrorAt();
    CFMutableDictionaryRef MutableCopy = 0;
    CFStringRef v19 = 0;
    CFStringRef v22 = 0;
    if (!v61) {
      goto LABEL_113;
    }
LABEL_112:
    APEndpointPlaybackSessionStatsSetLastError(*(void **)(DerivedStorage + 136));
    goto LABEL_113;
  }
  uint64_t v11 = session_ensureRemoteControlSessionCreated(a1);
  if (v11)
  {
    uint64_t v61 = v11;
    APSLogErrorAt();
    CFStringRef v22 = 0;
    CFStringRef v19 = 0;
    CFMutableDictionaryRef MutableCopy = 0;
    goto LABEL_112;
  }
  uint64_t v65 = a4;
  uint64_t v66 = a5;
  CFDictionaryRef v12 = (const void **)MEMORY[0x1E4F209E8];
  if (gLogCategory_APEndpointPlaybackSessionRemoteControl <= 50
    && (gLogCategory_APEndpointPlaybackSessionRemoteControl != -1 || _LogCategory_Initialize()))
  {
    CFDataRef v13 = (const void *)*MEMORY[0x1E4F20A88];
    CFDictionaryGetValue(a2, (const void *)*MEMORY[0x1E4F20A88]);
    CFDictionaryContainsKey(a2, *v12);
    if (a3) {
      CFDictionaryGetValue(a3, v13);
    }
    LogPrintF();
  }
  CFAllocatorRef v14 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFMutableDictionaryRef MutableCopy = (__CFDictionary *)FigCFDictionaryCreateMutableCopy();
  CFDictionaryRef v16 = (const void *)*MEMORY[0x1E4F20A50];
  CFDictionaryGetValue(a2, (const void *)*MEMORY[0x1E4F20A50]);
  FigCFDictionarySetValue();
  CFDictionaryRemoveValue(MutableCopy, v16);
  CFDictionaryRemoveValue(MutableCopy, (const void *)*MEMORY[0x1E4F20A18]);
  CFDictionaryRemoveValue(MutableCopy, (const void *)*MEMORY[0x1E4F209C0]);
  uint64_t v17 = *v12;
  if (!CFDictionaryContainsKey(MutableCopy, *v12))
  {
    CFStringRef v30 = 0;
    CFStringRef v19 = 0;
    CFStringRef v22 = 0;
    goto LABEL_78;
  }
  CFStringRef v18 = (const __CFString *)CFDictionaryGetValue(MutableCopy, v17);
  CFStringRef v19 = v18;
  if (v18) {
    CFRetain(v18);
  }
  int v20 = (const void *)*MEMORY[0x1E4F209D0];
  CFStringRef v21 = (const __CFString *)CFDictionaryGetValue(MutableCopy, (const void *)*MEMORY[0x1E4F209D0]);
  CFStringRef v22 = v21;
  if (v21) {
    CFRetain(v21);
  }
  CFDictionaryRemoveValue(MutableCopy, v17);
  CFDictionaryRemoveValue(MutableCopy, v20);
  int v74 = 0;
  uint64_t v23 = CMBaseObjectGetDerivedStorage();
  memset(buffer, 0, sizeof(buffer));
  theCFDataRef Data = 0;
  if (*(void *)(v23 + 208))
  {
    int v74 = 0;
    goto LABEL_61;
  }
  if (!*(unsigned char *)(v23 + 200)) {
    goto LABEL_60;
  }
  CFTypeRef v64 = (void *)(v23 + 208);
  CFStringRef v24 = v19;
  CFStringRef v25 = v22;
  CFDictionaryRef v26 = a3;
  uint64_t CMBaseObject = APSenderSessionGetCMBaseObject(*(void *)(v23 + 40));
  uint64_t v28 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v28) {
    uint64_t v29 = v28;
  }
  else {
    uint64_t v29 = 0;
  }
  uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, const __CFAllocator *, CFDataRef *))(v29 + 48);
  if (!v31)
  {
    int v74 = -12782;
LABEL_29:
    APSLogErrorAt();
    a3 = v26;
    CFStringRef v22 = v25;
    CFStringRef v19 = v24;
    goto LABEL_61;
  }
  int v74 = v31(CMBaseObject, 0x1F26DEDA0, v14, &theData);
  if (v74) {
    goto LABEL_29;
  }
  v76.location = 0;
  v76.length = 28;
  CFDataGetBytes(theData, v76, buffer);
  char v63 = APSGetFBOPropertyInt64() != 0;
  if (v74) {
    goto LABEL_29;
  }
  uint64_t v32 = CMBaseObjectGetDerivedStorage();
  cf[0] = 0;
  a3 = v26;
  CFStringRef v22 = v25;
  CFStringRef v19 = v24;
  if (!*(unsigned char *)(v32 + 200)) {
    goto LABEL_60;
  }
  uint64_t v33 = APSenderSessionGetCMBaseObject(*(void *)(v32 + 40));
  uint64_t v34 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v34) {
    uint64_t v35 = v34;
  }
  else {
    uint64_t v35 = 0;
  }
  CMTime v36 = *(uint64_t (**)(uint64_t, __CFString *, const __CFAllocator *, CFTypeRef *))(v35 + 48);
  if (v36)
  {
    LODWORD(v75) = v36(v33, @"KeyHolder", v14, cf);
    if (!v75)
    {
      if (cf[0])
      {
        BOOL v37 = APSGetFBOPropertyInt64() != 0;
        if (v75) {
          APSLogErrorAt();
        }
        goto LABEL_38;
      }
LABEL_60:
      APSLogErrorAt();
      int v74 = -16743;
      goto LABEL_61;
    }
  }
  else
  {
    LODWORD(v75) = -12782;
  }
  APSLogErrorAt();
  BOOL v37 = 0;
LABEL_38:
  if (cf[0]) {
    CFRelease(cf[0]);
  }
  if (!v37) {
    goto LABEL_60;
  }
  uint64_t v38 = CMBaseObjectGetDerivedStorage();
  cf[0] = 0;
  uint64_t v75 = 0;
  uint64_t v39 = APSenderSessionGetCMBaseObject(*(void *)(v38 + 40));
  uint64_t v40 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v40) {
    uint64_t v41 = v40;
  }
  else {
    uint64_t v41 = 0;
  }
  uint64_t v42 = *(unsigned int (**)(uint64_t, __CFString *, const __CFAllocator *, CFTypeRef *))(v41 + 48);
  if (!v42 || v42(v39, @"KeyHolder", v14, cf)) {
    goto LABEL_53;
  }
  CFTypeRef v43 = cf[0];
  if (!cf[0]) {
    goto LABEL_56;
  }
  uint64_t v44 = *(void *)(CMBaseObjectGetVTable() + 16);
  uint64_t v45 = v44 ? v44 : 0;
  CFTypeRef v46 = *(unsigned int (**)(CFTypeRef, const char *, uint64_t, void, void, uint64_t, const void **))(v45 + 48);
  if (!v46 || v46(v43, "Pair-TLS-PSK", 12, 0, 0, 16, &v75)) {
LABEL_53:
  }
    APSLogErrorAt();
  if (cf[0]) {
    CFRelease(cf[0]);
  }
LABEL_56:
  CFTypeRef v47 = v75;
  if (!v75) {
    goto LABEL_60;
  }
  *(_OWORD *)CFTypeRef cf = *(_OWORD *)buffer;
  *(_OWORD *)((char *)&cf[1] + 4) = *(_OWORD *)&buffer[12];
  int v74 = APLocalPlaybackServerMake(cf, v63, v75, v64);
  if (v74) {
    APSLogErrorAt();
  }
  CFRelease(v47);
LABEL_61:
  if (theData) {
    CFRelease(theData);
  }
  if (v74)
  {
    if (gLogCategory_APEndpointPlaybackSessionRemoteControl <= 30
      && (gLogCategory_APEndpointPlaybackSessionRemoteControl != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFStringRef v30 = 0;
    goto LABEL_78;
  }
  uint64_t v48 = *(void *)(DerivedStorage + 208);
  CFStringRef v49 = (const __CFString *)CFDictionaryGetValue(MutableCopy, (const void *)*MEMORY[0x1E4F20A88]);
  if (!APLocalPlaybackServerRegisterPathWithUUIDCreatingHostAndURL(v48, v49, v19, v22, &v69, (CFStringRef *)&v68))
  {
    CFStringRef v30 = CFStringCreateWithFormat(v14, 0, @"https://%@%@", v69, v68);
    if (gLogCategory_APEndpointPlaybackSessionRemoteControl <= 30
      && (gLogCategory_APEndpointPlaybackSessionRemoteControl != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (CFDictionaryGetValueIfPresent(MutableCopy, @"Content-Location", (const void **)&value)) {
      CFTypeRef v50 = @"Offline-HLS-Content-Location";
    }
    else {
      CFTypeRef v50 = @"Content-Location";
    }
    CFDictionarySetValue(MutableCopy, v50, v30);
    CFDictionarySetValue(MutableCopy, @"IsTLSEnabled", (const void *)*MEMORY[0x1E4F1CFD0]);
LABEL_78:
    CFTypeRef v51 = *(const void **)(DerivedStorage + 32);
    if (v51) {
      CFDictionarySetValue(MutableCopy, @"audioMode", v51);
    }
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v14, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    CFDictionarySetValue(Mutable, @"type", @"insertPlayQueueItem");
    FigCFDictionarySetValueFromKeyInDict();
    CFDictionarySetValue(Mutable, @"item", MutableCopy);
    if (a3) {
      CFDictionarySetValue(Mutable, @"itemAfter", a3);
    }
    *(unsigned char *)(DerivedStorage + 128) = 1;
    CFDictionaryRef v53 = *(const __CFDictionary **)(DerivedStorage + 120);
    if (v53)
    {
      CFRetain(*(CFTypeRef *)(DerivedStorage + 120));
      CFDictionaryRef v54 = CFDictionaryCreateMutable(v14, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      session_findDiffVideoV2Metadata(0, v53, v54);
      CFDictionarySetValue(Mutable, @"metadata", v54);
      if (v54) {
        CFRelease(v54);
      }
    }
    session_createDataFromDictionary((uint64_t)Mutable, &v70);
    uint64_t v55 = malloc_type_calloc(0x10uLL, 1uLL, 0x10A45AD8uLL);
    *uint64_t v55 = v65;
    v55[1] = v66;
    uint64_t v56 = *(void *)DerivedStorage;
    CFTypeRef v57 = v70;
    uint64_t v58 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v58) {
      uint64_t v59 = v58;
    }
    else {
      uint64_t v59 = 0;
    }
    CFIndex v60 = *(void (**)(uint64_t, CFTypeRef, void (*)(uint64_t, int, void *), void *))(v59 + 8);
    if (v60) {
      v60(v56, v57, session_standardCompletion, v55);
    }
    if (v53) {
      CFRelease(v53);
    }
    uint64_t v61 = 0;
    if (MutableCopy) {
      goto LABEL_93;
    }
    goto LABEL_94;
  }
  APSLogErrorAt();
  uint64_t v61 = FigSignalErrorAt();
  if (v61) {
    goto LABEL_112;
  }
LABEL_113:
  CFMutableDictionaryRef Mutable = 0;
  CFStringRef v30 = 0;
  if (MutableCopy) {
LABEL_93:
  }
    CFRelease(MutableCopy);
LABEL_94:
  if (v70) {
    CFRelease(v70);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  if (v69) {
    CFRelease(v69);
  }
  if (v68) {
    CFRelease(v68);
  }
  if (v30) {
    CFRelease(v30);
  }
  if (v19) {
    CFRelease(v19);
  }
  if (v22) {
    CFRelease(v22);
  }
  return v61;
}

void session_handleMetadataEvent(uint64_t a1, const void *a2, int a3, const void *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a4)
  {
    if (a3 == 1952807028)
    {
      uint64_t v8 = DerivedStorage;
      CFRetain(a2);
      CFRetain(a4);
      uint64_t v9 = *(NSObject **)(v8 + 112);
      v10[0] = MEMORY[0x1E4F143A8];
      v10[1] = 3221225472;
      _OWORD v10[2] = __session_handleMetadataEvent_block_invoke;
      v10[3] = &__block_descriptor_48_e5_v8__0l;
      v10[4] = a2;
      v10[5] = a4;
      dispatch_async(v9, v10);
    }
  }
  else
  {
    APSLogErrorAt();
  }
}

void __session_handleMetadataEvent_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  CFDictionaryRef v3 = *(const __CFDictionary **)(a1 + 40);
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  if (*(unsigned char *)(DerivedStorage + 96))
  {
LABEL_31:
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
    goto LABEL_32;
  }
  if (!*(unsigned char *)(DerivedStorage + 129))
  {
    *(unsigned char *)(DerivedStorage + 129) = 1;
    CFDictionaryGetInt64();
    mach_absolute_time();
    UpTicksToSecondsF();
    double v6 = v5;
    if (IsAppleInternalBuild()) {
      APSSettingsGetDouble();
    }
    else {
      double v7 = 0.1;
    }
    if (v6 > v7)
    {
      if (gLogCategory_APEndpointPlaybackSessionRemoteControl <= 50
        && (gLogCategory_APEndpointPlaybackSessionRemoteControl != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      goto LABEL_31;
    }
  }
  CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  session_compareAndStoreIfDifferent(@"album", 0, v3, Mutable, @"Album", 0);
  session_compareAndStoreIfDifferent(@"artist", 0, v3, Mutable, @"Artist", 0);
  session_compareAndStoreIfDifferent(@"title", 0, v3, Mutable, @"Title", 0);
  session_compareAndStoreIfDifferent(@"totalTracks", 0, v3, Mutable, @"TotalTrackCount", 0);
  session_compareAndStoreIfDifferent(@"trackNumber", 0, v3, Mutable, @"TrackNumber", 0);
  if (FigCFDictionaryGetCount() < 1)
  {
    CFDictionaryRef v12 = 0;
    CFDataRef v13 = 0;
  }
  else
  {
    CFDictionaryRef v10 = *(const __CFDictionary **)(DerivedStorage + 120);
    if (v10) {
      CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy(v8, 0, v10);
    }
    else {
      CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutable(v8, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    }
    CFDictionaryRef v12 = MutableCopy;
    CFDictionaryMergeDictionary();
    if (*(unsigned char *)(DerivedStorage + 128))
    {
      CFDataRef v13 = CFDictionaryCreateMutable(v8, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      session_findDiffVideoV2Metadata(*(CFDictionaryRef *)(DerivedStorage + 120), v12, v13);
    }
    else
    {
      CFDataRef v13 = 0;
    }
    CFAllocatorRef v14 = *(const void **)(DerivedStorage + 120);
    *(void *)(DerivedStorage + 120) = v12;
    if (v12) {
      CFRetain(v12);
    }
    if (v14) {
      CFRelease(v14);
    }
  }
  if (FigCFDictionaryGetCount() >= 1) {
    session_setProxiedPropertyInternal(v2, @"metadata", 0, v13);
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  if (Mutable) {
    CFRelease(Mutable);
  }
  if (v12) {
    CFRelease(v12);
  }
  if (v13) {
    CFRelease(v13);
  }
LABEL_32:
  CFRelease(*(CFTypeRef *)(a1 + 32));
  CFRelease(*(CFTypeRef *)(a1 + 40));
}

void session_findDiffVideoV2Metadata(CFDictionaryRef theDict, const __CFDictionary *a2, __CFDictionary *a3)
{
  session_compareAndStoreIfDifferent(@"Album", theDict, a2, a3, @"Album", &stru_1F26D66A0);
  session_compareAndStoreIfDifferent(@"Artist", theDict, a2, a3, @"Artist", &stru_1F26D66A0);
  session_compareAndStoreIfDifferent(@"Title", theDict, a2, a3, @"Title", &stru_1F26D66A0);
  session_compareAndStoreIfDifferent(@"TotalTrackCount", theDict, a2, a3, @"TotalTrackCount", &stru_1F26D66A0);
  session_compareAndStoreIfDifferent(@"TrackNumber", theDict, a2, a3, @"TrackNumber", &stru_1F26D66A0);
}

void session_compareAndStoreIfDifferent(void *key, CFDictionaryRef theDict, const __CFDictionary *a3, __CFDictionary *a4, const void *a5, const void *a6)
{
  if (theDict)
  {
    CFDictionaryRef Value = CFDictionaryGetValue(theDict, key);
    if (a3) {
      goto LABEL_3;
    }
LABEL_6:
    int v14 = FigCFEqual();
    CFDataRef v13 = 0;
    if (v14) {
      goto LABEL_7;
    }
LABEL_12:
    CFDictionaryRef v12 = a6;
    if (!a6) {
      return;
    }
    goto LABEL_13;
  }
  CFDictionaryRef Value = 0;
  if (!a3) {
    goto LABEL_6;
  }
LABEL_3:
  CFDictionaryRef v12 = CFDictionaryGetValue(a3, key);
  if (FigCFEqual())
  {
    CFDataRef v13 = v12;
LABEL_7:
    if (!a6) {
      return;
    }
    if (Value) {
      return;
    }
    CFDictionaryRef v12 = a6;
    if (v13) {
      return;
    }
    goto LABEL_13;
  }
  if (!v12) {
    goto LABEL_12;
  }
LABEL_13:
  CFDictionarySetValue(a4, a5, v12);
}

void session_standardCompletion(uint64_t a1, int a2, void *a3)
{
  if (*a3) {
    ((void (*)(uint64_t, void))*a3)(a1, a3[1]);
  }
  free(a3);
}

void session_performActionUnhandledURLResponseCompletion(uint64_t a1, CFDictionaryRef theDict, void *a3)
{
  CFTypeRef cf = 0;
  CFDictionaryRef v4 = (void (*)(uint64_t, CFDictionaryRef, void))*a3;
  if (!*a3) {
    goto LABEL_9;
  }
  if (!theDict) {
    goto LABEL_6;
  }
  CFDataRef Value = (const __CFData *)CFDictionaryGetValue(theDict, @"data");
  if (Value)
  {
    if (!session_createDictionaryFromData(Value, &cf))
    {
      CFDictionaryRef v4 = (void (*)(uint64_t, CFDictionaryRef, void))*a3;
      CFDictionaryRef theDict = (CFDictionaryRef)cf;
LABEL_6:
      v4(a1, theDict, a3[1]);
      goto LABEL_7;
    }
    APSLogErrorAt();
  }
  else
  {
    APSLogErrorAt();
  }
  FigSignalErrorAt();
LABEL_7:
  if (cf) {
    CFRelease(cf);
  }
LABEL_9:
  free(a3);
}

void session_setEventHandlerInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(_OWORD *)(DerivedStorage + 152) = *(_OWORD *)(a1 + 8);
  CFDictionaryRef v3 = *(const void **)(a1 + 24);
  if (v3)
  {
    CFDictionaryRef v4 = *(const void **)(DerivedStorage + 168);
    *(void *)(DerivedStorage + 168) = v3;
    CFRetain(v3);
    if (v4) {
      CFRelease(v4);
    }
  }
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
  double v5 = *(const void **)(a1 + 24);
  if (v5) {
    CFRelease(v5);
  }
  free((void *)a1);
}

void *sub_1D0ACD6A4(void *result)
{
  *uint64_t result = ++qword_1EA640550;
  return result;
}

uint64_t sub_1D0ACD6C8(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F26D6318 + (*((unsigned __int8 *)off_1F26D61C0 + a1 - 12) ^ 3u) - 12) ^ a1;
}

uint64_t sub_1D0ACD6F4(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F26D6128
         + (*((unsigned char *)off_1F26D6138 + a2 - 12) ^ a1)
         - 4) ^ a2;
}

uint64_t sub_1D0ACD720(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F26D6358 + (*((unsigned __int8 *)off_1F26D61F0 + a1) ^ 0xABu) - 8) ^ a1;
}

uint64_t sub_1D0ACD750(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F26D62C8
         + (*((unsigned char *)off_1F26D61E0 + a2) ^ a1)
         - 12) ^ a2;
}

uint64_t sub_1D0ACD77C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F26D6318
         + (*((unsigned __int8 *)off_1F26D61C0 + a1 - 12) ^ 0x1Du)
         - 12) ^ a1;
}

uint64_t sub_1D0ACD7AC(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F26D6358 + (*((unsigned __int8 *)off_1F26D61F0 + a1) ^ 0xB8u) - 8) ^ a1;
}

uint64_t sub_1D0ACD7DC(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F26D6128
         + (*((unsigned __int8 *)off_1F26D6138 + a1 - 12) ^ 0x10u)
         - 4) ^ a1;
}

uint64_t NROcmM()
{
  return 16777984;
}

uint64_t sub_1D0ACD818(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F26D63E0
         + (*((unsigned char *)off_1F26D63E8 + a2 - 8) ^ a1)
         - 4) ^ a2;
}

uint64_t sub_1D0ACD844(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F26D6128
         + (*((unsigned __int8 *)off_1F26D6138 + a1 - 12) ^ 0xD3u)
         - 4) ^ a1;
}

uint64_t sub_1D0ACD874(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F26D6440
         + (*((unsigned char *)off_1F26D6408 + a2 - 8) ^ a1)
         - 8) ^ a2;
}

uint64_t sub_1D0ACD8A0(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F26D62C8 + (*((unsigned __int8 *)off_1F26D61E0 + a1) ^ 0x89u) - 12) ^ a1;
}

uint64_t sub_1D0ACD8D0(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F26D63E0 + (*((unsigned __int8 *)off_1F26D63E8 + a1 - 8) ^ 0x3Eu)
                                            - 4) ^ a1;
}

uint64_t sub_1D0ACD8FC(unsigned int a1)
{
  return byte_1D0B97D70[byte_1D0B92E80[a1] ^ 0xE6] ^ a1;
}

uint64_t sub_1D0ACD928(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F26D63E0 + (*((unsigned __int8 *)off_1F26D63E8 + a1 - 8) ^ 0xE9u)
                                            - 4) ^ a1;
}

uint64_t sub_1D0ACD958(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F26D6358 + (*((unsigned __int8 *)off_1F26D61F0 + a1) ^ 0x1Eu) - 8) ^ a1;
}

uint64_t sub_1D0ACD988(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F26D6318
         + (*((unsigned char *)off_1F26D61C0 + a2 - 12) ^ a1)
         - 12) ^ a2;
}

uint64_t sub_1D0ACD9B4(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F26D63E0 + (*((unsigned __int8 *)off_1F26D63E8 + a1 - 8) ^ 0xF0u)
                                            - 4) ^ a1;
}

uint64_t sub_1D0ACD9E0(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F26D6358 + (*((unsigned char *)off_1F26D61F0 + a2) ^ a1)
                                            - 8) ^ a2;
}

uint64_t sub_1D0ACDA0C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F26D6440 + (*((unsigned __int8 *)off_1F26D6408 + a1 - 8) ^ 0x66u)
                                            - 8) ^ a1;
}

uint64_t sub_1D0ACDA3C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F26D6358 + (*((unsigned __int8 *)off_1F26D61F0 + a1) ^ 0xDu) - 8) ^ a1;
}

uint64_t sub_1D0ACDA6C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F26D62C8 + (*((unsigned __int8 *)off_1F26D61E0 + a1) ^ 0x9Cu) - 12) ^ a1;
}

uint64_t sub_1D0ACDA9C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F26D6440 + (*((unsigned __int8 *)off_1F26D6408 + a1 - 8) ^ 0x2Eu)
                                            - 8) ^ a1;
}

uint64_t sub_1D0ACDACC(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F26D6440 + (*((unsigned __int8 *)off_1F26D6408 + a1 - 8) ^ 0x79u)
                                            - 8) ^ a1;
}

uint64_t sub_1D0ACDAFC(uint64_t result)
{
  unint64_t v1 = 839339309 * ((((2 * result) | 0x371762288C93D502) - result + 0x64744EEBB9B6157FLL) ^ 0xF084E263FAA8F2E0);
  unint64_t v2 = *(void *)(result + 32) - v1;
  unint64_t v3 = *(void *)(result + 16) + v1;
  BOOL v4 = v3 > v2;
  BOOL v5 = v3 == v2;
  int v6 = v4;
  if (((*(_DWORD *)(result + 28)
       + 839339309 * ((((2 * result) | 0x8C93D502) - result - 1179249281) ^ 0xFAA8F2E0)) & 1) != 0)
    BOOL v5 = v6;
  BOOL v7 = !v5;
  uint64_t v8 = 12;
  if (!v7) {
    uint64_t v8 = 8;
  }
  *(_DWORD *)(result + 24) = (*(_DWORD *)(result + v8)
                            + 839339309 * ((((2 * result) | 0x8C93D502) - result - 1179249281) ^ 0xFAA8F2E0)) ^ (*(_DWORD *)result - 839339309 * ((((2 * result) | 0x8C93D502) - result - 1179249281) ^ 0xFAA8F2E0));
  return result;
}

void sub_1D0ACDBA0(uint64_t a1)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 8) ^ (1543459711 * ((-2 - ((a1 | 0xAE03BA1B) + (~a1 | 0x51FC45E4))) ^ 0x1D7E4620));
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v29 = v3 - 0xE8AF10975501C4ELL;
  uint64_t v22 = v3 - 0xE8AF10975501C32;
  uint64_t v26 = v3 - 0xE8AF10975501C36;
  uint64_t v33 = v3 - 0xE8AF10975501C4ALL;
  unint64_t v35 = ((unint64_t)v41 ^ 0xA7FE6F9E7FDFF6EFLL)
      + 0x7FA9F3EDDA262F78
      + ((2 * (void)v41) & 0x4FFCDF3CFFBFEDD0);
  uint64_t v40 = v3 + 0x927AD099280FBC2;
  uint64_t v19 = v3 - 0xE8AF10975501C2ELL;
  v6[1] = v2;
  v6[3] = v2 + 0x592515193B69AF09;
  uint64_t v18 = v3 - 0xE8AF10975501C5ALL;
  uint64_t v17 = v3 - 0xE8AF10975501C59;
  uint64_t v16 = v3 - 0xE8AF10975501C58;
  uint64_t v15 = v3 - 0xE8AF10975501C57;
  uint64_t v14 = v3 - 0xE8AF10975501C52;
  uint64_t v13 = v3 - 0xE8AF10975501C56;
  uint64_t v12 = v3 - 0xE8AF10975501C55;
  uint64_t v11 = v3 - 0xE8AF10975501C54;
  uint64_t v10 = v3 - 0xE8AF10975501C53;
  uint64_t v23 = (char *)&v6[0xFD79B86AD2E440F2] + 3;
  v6[2] = v3 - 0xE8AF10932BE6A12;
  v6[4] = v3 - 0xE8AF109B7E1CF11;
  unsigned int v36 = (v1 + 455118721) & 0xE4DF71F0;
  int32x4_t v32 = vdupq_n_s32(0x674DF377u);
  int v7 = v1 - 2036094044;
  int v25 = ((v1 - 2036094044) & 0x795C562F) - 39;
  unsigned int v37 = (v1 + 633811857) & 0xDA38CFEF;
  int32x4_t v31 = vdupq_n_s32(0x674DF373u);
  int v28 = v1 ^ 0x4D;
  int v30 = 454 * (v1 ^ 0x4D);
  unsigned int v20 = (v1 + 571542355) & 0xDDEEF6DF ^ 0x2B9;
  int v8 = v1 + 1801143720;
  unsigned int v9 = (v1 + 571542355) & 0xDDEEF6DF;
  uint64_t v34 = &v42;
  uint64_t v24 = 0x14323CA968DDFA7DLL;
  int v39 = v1;
  uint64_t v38 = v3 - 0xE8AF10975501C92;
  int32x4_t v27 = vdupq_n_s32(0xE74DF372);
  uint64_t v4 = (uint64_t)*(&off_1F26D60E0 + v1 - 45);
  uint64_t v21 = *(void *)(v4 + 8 * v1);
  uint64_t v5 = *(_DWORD *)(v3 - 0xE8AF10975501C4ELL) & 0x3F;
  *(unsigned char *)(v3 - 0xE8AF10975501C92 + (v5 ^ 0x36)) = 120;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D0ACE00C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v38 = v31 ^ (v32 - 470);
  *uint64_t v33 = v33[623];
  *(_DWORD *)(v37 - 104) = v34 ^ 1;
  int v39 = (v38 - 244916245) ^ v34;
  *(_DWORD *)(v37 - 112) = v34 + v38 + 1426725272;
  *(_DWORD *)(v37 - 108) = (v38 - 244916110) ^ v34;
  *(_DWORD *)(v37 - 128) = v39;
  *(_DWORD *)(v37 - 136) = v39 ^ 0xAD;
  *(void *)(v37 - 144) = a31;
  *(void *)(v37 - 120) = (v36 + 1387119673) - v34;
  uint64_t v40 = (*(uint64_t (**)(uint64_t))(v35 + 8 * (v38 + 726209180)))(v37 - 144);
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * *(int *)(v37 - 132)))(v40);
}

uint64_t sub_1D0ACE0BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  *(unsigned char *)(v9 + v8) = 0;
  BOOL v11 = v6 < v5;
  unint64_t v12 = v8 + 1;
  if (v11 == v12 > a5) {
    LOBYTE(v11) = v12 + v5 < v6;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((126 * (((v7 + 1) ^ v11) & 1)) ^ v7)))();
}

uint64_t sub_1D0ACE110(uint64_t a1, double a2)
{
  *(double *)(v6 + (v2 ^ v7) + a1) = a2;
  BOOL v9 = v5 == a1;
  uint64_t v10 = a1 + 8;
  int v11 = !v9;
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * ((v11 * v3) ^ v4)))(v10);
}

uint64_t sub_1D0ACE13C@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  HIDWORD(a32) = HIDWORD(a26) + 14 * (a6 ^ 0x401) - 1937913595;
  int v71 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 8 * v65);
  CFIndex v72 = &a65 + a40;
  uint64_t v82 = a40 + 320;
  uint64_t v73 = *(unsigned int *)(v66 - 0x17B29E1307D11808);
  int v74 = *(_DWORD *)(v66 - 0x17B29E1307D11804);
  int v75 = *(_DWORD *)(v66 - 0x17B29E1307D11800);
  int v76 = *(unsigned __int8 *)(v66 - 0x17B29E1307D117F4) ^ 0xA;
  if (v76 == 2)
  {
    BOOL v81 = a2 < a29 + a40 && (unint64_t)v72 < a2 + 64;
    return (*(uint64_t (**)(uint64_t))(v67 + 8 * (int)((a27 * v81) ^ (a3 + 933))))(v73);
  }
  else if (v76 == 1)
  {
    BOOL v78 = a2 < a29 + a40 && (unint64_t)v72 < a2 + 64;
    return (*(uint64_t (**)(uint64_t))(v67 + 8 * (int)((((a3 ^ 6) + 1825) * v78) ^ (a3 + 798))))(v73);
  }
  else
  {
    *(_DWORD *)(v66 - 0x17B29E1307D1180CLL) = 2 * (*(_DWORD *)(v66 - 0x17B29E1307D1180CLL) ^ v69)
                                            + v69
                                            - (v68 & (4 * (*(_DWORD *)(v66 - 0x17B29E1307D1180CLL) ^ v69)));
    *(_DWORD *)(v66 - 0x17B29E1307D11808) = (*(_DWORD *)(v66 - 0x17B29E1307D11808) ^ v69)
                                            + (v73 ^ v69)
                                            + v69
                                            - (v68 & (2 * ((*(_DWORD *)(v66 - 0x17B29E1307D11808) ^ v69) + (v73 ^ v69))));
    *(_DWORD *)(v66 - 0x17B29E1307D11804) = (*(_DWORD *)(v66 - 0x17B29E1307D11804) ^ v69)
                                            + (v74 ^ v69)
                                            + v69
                                            - (v68 & (2 * ((*(_DWORD *)(v66 - 0x17B29E1307D11804) ^ v69) + (v74 ^ v69))));
    *(_DWORD *)(v66 - 0x17B29E1307D11800) = (*(_DWORD *)(v66 - 0x17B29E1307D11800) ^ v69)
                                            + (v75 ^ v69)
                                            + v69
                                            - (v68 & (2 * ((*(_DWORD *)(v66 - 0x17B29E1307D11800) ^ v69) + (v75 ^ v69))));
    return v71(v73, a1, a2, a3, a4, v82 - 320, a5, v71, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
             a18,
             a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32);
  }
}

uint64_t sub_1D0ACE2C4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((v1 - 320) ^ ((v0 > v3 + 623) | (16 * (v0 > v3 + 623))))))();
}

uint64_t sub_1D0ACE2E8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((62 * (((v2 == v1) ^ ((v3 ^ 0x3B) + 1)) & 1)) ^ (v3 + 229))))();
}

uint64_t sub_1D0ACE324()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v0 ^ 9u) < ((v1 - 731) ^ 0x25Fu)) * ((v1 - 533) ^ 0x379)) ^ v1)))();
}

uint64_t sub_1D0ACE360(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return sub_1D0ACE13C(a41, a3, a4, 2359679803, a7, v65 + 990, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64,
           a65);
}

uint64_t sub_1D0ACE374@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  *(_DWORD *)(v5 + 4 * a2) = a2
                           + ((v2 + a1 + v3) ^ ((v2 + a1 + v3) >> 30)) * (((v6 + 3) | v4) ^ (v8 + 468));
  return (*(uint64_t (**)(void))(v7 + 8 * (((8 * (a2 < 0x26F)) | (16 * (a2 < 0x26F))) ^ v6)))();
}

uint64_t sub_1D0ACE384(uint64_t a1)
{
  int v8 = (void *)(v7 - 128);
  uint64_t v9 = *(void *)(a1 + 16) + 56 * **(unsigned __int8 **)(a1 + 16) + 24;
  int v10 = v7 - 128;
  int v11 = 846572393 * ((~(v7 - 128) & 0xB77F9F7D | (v7 - 128) & 0x48806082) ^ 0x811CCB34);
  *(_DWORD *)(v7 - 104) = v11 ^ 0x1E0D8D12;
  *(_DWORD *)(v7 - 124) = v11 + v1 + 703;
  v8[1] = &STACK[0xE8AF10975501B5E];
  void v8[2] = v9;
  *(_WORD *)(v7 - 128) = 16640 - -21655 * ((~(v7 - 128) & 0x9F7D | (v7 - 128) & 0x6082) ^ 0xCB34);
  (*(void (**)(uint64_t))(v3 + 8 * (v1 ^ 0x4C6)))(v7 - 128);
  unsigned int v12 = 1503905621 * (((v10 | 0xCDDABD29) + (~v10 | 0x322542D6)) ^ 0x90A2D3FC);
  *(void *)(v7 - 120) = v6;
  *(void *)(v7 - 112) = &STACK[0xE8AF10975501B5E];
  *(_DWORD *)(v7 - 128) = v1 + 419 - v12;
  *(_DWORD *)(v7 - 104) = v12 ^ 0x6BF46C16;
  (*(void (**)(uint64_t))(v3 + 8 * (v1 + 824)))(v7 - 128);
  unsigned int v13 = 1503905621 * ((((2 * v10) | 0xF4DFE14C) - v10 + 93327194) ^ 0xA7179E72);
  *(void *)(v7 - 120) = v4;
  *(void *)(v7 - 112) = &STACK[0xE8AF10975501B5E];
  *(_DWORD *)(v7 - 128) = v1 + 419 - v13;
  *(_DWORD *)(v7 - 104) = v13 ^ (v5 - 253202126);
  (*(void (**)(uint64_t))(v3 + 8 * (v1 ^ 0x4C8)))(v7 - 128);
  *(void *)(v7 - 112) = &STACK[0xE8AF10975501B5E];
  *int v8 = v2;
  *(_DWORD *)(v7 - 120) = (v1 - 668) ^ (1543459711 * ((v7 - 128) ^ 0x4C8203C4));
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (v1 + 821)))(v7 - 128);
}

uint64_t sub_1D0ACE588@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = v2 + 127 - v1;
  long long v6 = *(_OWORD *)(v5 - 31);
  uint64_t v7 = a1 + 127 - v1;
  *(_OWORD *)(v7 - 15) = *(_OWORD *)(v5 - 15);
  *(_OWORD *)(v7 - 31) = v6;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 == 96) * ((v4 - 636) ^ 0x5B)) ^ v4)))();
}

uint64_t sub_1D0ACE5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  LOBYTE(STACK[0xCA8]) = v35 + 19;
  int v40 = 1332649919 * ((v39 - 136) ^ 0x3D7384F2);
  *(void *)(v39 - 112) = v38;
  *(_DWORD *)(v39 - 136) = v40 + 2140997255;
  *(_DWORD *)(v39 - 120) = v40 + v37 + 12;
  *(void *)(v39 - 128) = a35;
  uint64_t v41 = v35;
  (*(void (**)(uint64_t))(v36 + 8 * (v37 + 369)))(v39 - 136);
  *(_DWORD *)(v39 - 120) = v37
                         + 1449114341
                         * ((1919918679 - ((v39 - 136) | 0x726FA257) + ((v39 - 136) | 0x8D905DA8)) ^ 0x42CEA443)
                         + 231;
  *(void *)(v39 - 136) = v38;
  *(void *)(v39 - 128) = (v41 << ((v37 - 15) ^ 0x80u)) + a34;
  uint64_t v42 = (*(uint64_t (**)(uint64_t))(a29 + 8 * (v37 + 367)))(v39 - 136);
  return (*(uint64_t (**)(uint64_t))(a29 + 8 * (((18 * (v37 ^ 0x49F) - 210) * (v41 == 71614453)) ^ v37)))(v42);
}

uint64_t sub_1D0ACE6FC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X5>, uint64_t a4@<X7>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,unint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,int a48,uint64_t a49,uint64_t a50,char a51)
{
  uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 8 * (a5 + 68));
  CFTypeRef v57 = &a51 + a50;
  uint64_t v67 = a50 + 320;
  uint64_t v58 = *(unsigned int *)(a45 - 0x17B29E1307D11808);
  int v59 = *(_DWORD *)(a45 - 0x17B29E1307D11804);
  uint64_t v60 = *(unsigned int *)(a45 - 0x17B29E1307D11800);
  int v61 = *(unsigned __int8 *)(a45 - 0x17B29E1307D117F4) ^ 0xA;
  if (v61 == 2)
  {
    BOOL v66 = a35 >= a38 + a50 || (unint64_t)v57 >= a35 + 64;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v52
                                                       + 8
                                                       * (int)((((((a1 + 231) | 0x212) + 143) ^ a48) * v66) ^ (a1 + 1045))))(v60, v58);
  }
  else if (v61 == 1)
  {
    BOOL v63 = a35 < a38 + a50 && (unint64_t)v57 < a35 + 64;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v52
                                                       + 8
                                                       * (int)(((((a1 + 287) | 0x1B) ^ 0xA2 ^ a47) * v63) ^ (a1 + 1077))))(v60, v58);
  }
  else
  {
    *(_DWORD *)(a45 - 0x17B29E1307D1180CLL) = 2 * (*(_DWORD *)(a45 - 0x17B29E1307D1180CLL) ^ v51)
                                            + v51
                                            - (v53 & (4 * (*(_DWORD *)(a45 - 0x17B29E1307D1180CLL) ^ v51)));
    *(_DWORD *)(a45 - 0x17B29E1307D11808) = (*(_DWORD *)(a45 - 0x17B29E1307D11808) ^ v51)
                                            + (v58 ^ v51)
                                            + v51
                                            - (v53 & (2 * ((*(_DWORD *)(a45 - 0x17B29E1307D11808) ^ v51) + (v58 ^ v51))));
    *(_DWORD *)(a45 - 0x17B29E1307D11804) = (*(_DWORD *)(a45 - 0x17B29E1307D11804) ^ v51)
                                            + (v59 ^ v51)
                                            + v51
                                            - (v53 & (2 * ((*(_DWORD *)(a45 - 0x17B29E1307D11804) ^ v51) + (v59 ^ v51))));
    *(_DWORD *)(a45 - 0x17B29E1307D11800) = (*(_DWORD *)(a45 - 0x17B29E1307D11800) ^ v51)
                                            + (v60 ^ v51)
                                            + v51
                                            - (v53 & (2 * ((*(_DWORD *)(a45 - 0x17B29E1307D11800) ^ v51) + (v60 ^ v51))));
    return v56(v60, v58, a1, a2, v67 - 320, a3, a35, a4, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16,
             a17,
             a18,
             a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             v54,
             a4);
  }
}

uint64_t sub_1D0ACE708@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2020 * ((v1 ^ 0xCE ^ (a1 + 1227) ^ 0x56Eu) > 7)) ^ (a1 + 744))))();
}

uint64_t sub_1D0ACE748@<X0>(int a1@<W8>)
{
  int v8 = a1 - 878;
  int v9 = 1543459711 * ((((v7 - 168) | 0xAD5267A9) + (~(v7 - 168) | 0x52AD9856)) ^ 0xE1D0646C);
  *(_DWORD *)(v7 - 152) = (v8 - 43) ^ v9;
  *(void *)(v7 - 168) = v2;
  *(void *)(v7 - 160) = v1;
  *(void *)(v7 - 128) = v4;
  *(void *)(v7 - 120) = v5;
  *(_DWORD *)(v7 - 108) = 1874037621 - v9;
  *(void *)(v7 - 144) = v3;
  *(void *)(v7 - 136) = 0;
  (*(void (**)(uint64_t))(v6 + 8 * (v8 ^ 0x761)))(v7 - 168);
  return (*(_DWORD *)(v7 - 112) - 343018756);
}

uint64_t sub_1D0ACE7CC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v10 = a6 - 0xE8AF1097550211FLL - v6 + a4 - (unint64_t)(((v7 - 283) ^ (v9 - 1147)) + v8) > 0xF;
  return (*(uint64_t (**)(void))(a1 + 8 * ((v10 | (2 * v10)) + v7)))();
}

uint64_t sub_1D0ACE824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t),uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  return a26(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_1D0ACE834(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  CFTypeRef v47 = (long long *)(a41 + (v42 + a6));
  long long v48 = *v47;
  long long v49 = v47[1];
  CFTypeRef v50 = (_OWORD *)(v41 + (v44 + a4));
  *CFTypeRef v50 = v48;
  v50[1] = v49;
  return (*(uint64_t (**)(void))(v46
                              + 8
                              * (int)((((v43 & 0x1FFFFFFE0) == 32) * ((v45 + 927432692) & 0xC8B87CBE ^ 0xAC)) ^ v45)))();
}

uint64_t sub_1D0ACE894@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((((v2 & 0x18) == ((a1 - 729186891) & 0x2B7681BC) - 436)
                                * (((a1 - 196691599) & 0xBB947DF) + 661)) ^ a1)))();
}

uint64_t sub_1D0ACE8F4@<X0>(int a1@<W3>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  *(_DWORD *)(v45 - 256) = a1 ^ 0x755;
  uint64_t v46 = *(unsigned __int8 *)(v45 - 240) ^ 0x98;
  CFTypeRef v47 = (char *)*(&off_1F26D60E0 + (a1 ^ 0x248u)) - 4;
  uint64_t v48 = *(unsigned __int8 *)(v45 - 239);
  uint64_t v49 = (uint64_t)*(&off_1F26D60E0 + (a1 ^ 0x224u));
  CFTypeRef v50 = (char *)*(&off_1F26D60E0 + (a1 ^ 0x226u)) - 4;
  int v51 = (char *)*(&off_1F26D60E0 + (a1 & 0x667C192)) - 12;
  int v52 = v51[*(unsigned __int8 *)(v45 - 233) ^ 0x26];
  HIDWORD(v54) = v52 ^ 1;
  LODWORD(v54) = (v52 ^ 0xC) << 24;
  unsigned __int8 v53 = v54 >> 26;
  int v55 = v47[*(unsigned __int8 *)(v45 - 232) ^ 0x60] - 66;
  *(_DWORD *)(v45 - 248) = v55;
  uint64_t v538 = v44;
  unsigned __int8 v535 = (*(unsigned char *)(v45 - 231) ^ 0xCF) + *(unsigned char *)(v49 + (*(unsigned __int8 *)(v45 - 231) ^ 0xB5)) + 49;
  HIDWORD(v54) = v50[*(unsigned __int8 *)(v45 - 230) ^ 0x21];
  LODWORD(v54) = (HIDWORD(v54) ^ 0xD6) << 24;
  unsigned __int8 v56 = (v54 >> 25) ^ 0x75;
  int v57 = v51[*(unsigned __int8 *)(v45 - 229) ^ 0x66];
  HIDWORD(v54) = v57 ^ 1;
  LODWORD(v54) = (v57 ^ 0xC) << 24;
  int v58 = ((v55 ^ 0xA5) << 24) | ((v535 ^ 0xD7) << 16) | (v56 << 8) | (v54 >> 26);
  uint64_t v59 = (uint64_t)*(&off_1F26D60E0 + a1 - 558);
  int v60 = v58 + ~(2 * (v58 & 0x5757E43B ^ (v54 >> 26) & 2)) + 1465377850;
  LOBYTE(v57) = *(unsigned char *)(v59 + (v53 ^ 0xC5)) + 76;
  v534[0] = (-112 * v57) ^ v57;
  unsigned int v61 = (v60 ^ 0x49A4E55) - 2 * (((v60 ^ 0x49A4E55) + 393250368) & 0x738E1EA1 ^ v60 & 0x20) + 184460481;
  if ((v60 ^ 0x49A4E40u) >= 0xE88F79C0)
  {
    char v62 = 65;
  }
  else
  {
    unsigned int v61 = v60 ^ 0xF71450D4;
    char v62 = -127;
  }
  char v529 = v62;
  BOOL v63 = v61 == -208789887;
  unsigned __int8 v64 = (v48 ^ 0xB6) + *(unsigned char *)(v49 + (v48 ^ 0xCC)) + 49;
  int v65 = (a1 ^ 0x19 ^ v64) << (v64 & 0x10) << (v64 & 0x10 ^ 0x10);
  HIDWORD(v67) = v50[*(unsigned __int8 *)(v45 - 238) ^ 0x82];
  LODWORD(v67) = (HIDWORD(v67) ^ 0xD6) << 24;
  unsigned __int8 v66 = v67 >> 25;
  int v68 = v51[*(unsigned __int8 *)(v45 - 237) ^ 0xE8];
  HIDWORD(v67) = v68 ^ 1;
  LODWORD(v67) = (v68 ^ 0xC) << 24;
  char v69 = v67 >> 26;
  HIDWORD(v67) = v50[*(unsigned __int8 *)(v45 - 234) ^ 0x2FLL];
  LODWORD(v67) = (HIDWORD(v67) ^ 0xD6) << 24;
  int v70 = v67 >> 25;
  char v71 = v47[v46];
  char v72 = v47[*(unsigned __int8 *)(v45 - 236) ^ 0x21];
  char v73 = v47[*(unsigned __int8 *)(v45 - 228) ^ 0x6DLL];
  uint64_t v74 = *(unsigned __int8 *)(v45 - 235);
  char v75 = *(unsigned char *)(v49 + (v74 ^ 0xB9));
  unsigned int v76 = v65 + 2005115904 - ((2 * v65) & 0x106019A) + 205;
  unsigned int v77 = v76 ^ 0x7783A400 | ((v66 ^ 0x1D) << 8);
  HIDWORD(v67) = v50[*(unsigned __int8 *)(v45 - 226) ^ 0xECLL];
  LODWORD(v67) = (HIDWORD(v67) ^ 0xD6) << 24;
  int v78 = v67 >> 25;
  LOBYTE(v65) = (*(unsigned char *)(v45 - 227) ^ 0xDF) + *(unsigned char *)(v49 + (*(unsigned __int8 *)(v45 - 227) ^ 0xA5));
  int v79 = v51[*(unsigned __int8 *)(v45 - 225) ^ 0x48];
  HIDWORD(v67) = v79 ^ 1;
  LODWORD(v67) = (v79 ^ 0xC) << 24;
  uint64_t v80 = (uint64_t)*(&off_1F26D60E0 + a1 - 609);
  int v81 = *(_DWORD *)(v80 + 4 * ((v73 - 66) ^ 0x53u));
  uint64_t v82 = (char *)*(&off_1F26D60E0 + a1 - 583) - 12;
  char v83 = (v74 ^ 0xC3) + v75;
  CFTypeID v84 = (char *)*(&off_1F26D60E0 + (a1 & 0x212F403)) - 4;
  unsigned int v85 = *(_DWORD *)&v82[4 * ((v65 + 49) ^ 0xDD)] ^ v81 ^ ((v78 ^ 0x44)
                                                                         - ((2 * v78) & 0x114)
                                                                         - 1900336246) ^ *(_DWORD *)&v84[4 * (v78 ^ 0xC6)];
  int v86 = *(unsigned __int8 *)(v59 + ((v67 >> 26) ^ 0xB9)) + 76;
  int v87 = (v77 >> 7) & 0x114;
  int v88 = BYTE1(v77);
  unsigned int v89 = v88 ^ 0xE3;
  int v90 = (v88 ^ 0x61) - v87;
  unsigned int v91 = HIWORD(v76) ^ 0x7784;
  LOBYTE(v76) = *(unsigned char *)(v59 + (v76 ^ v69 ^ 0x62)) + 76;
  int v92 = (v90 - 1900336246) ^ *(_DWORD *)(v80 + 4 * ((v71 - 66) ^ 0x92u)) ^ *(_DWORD *)&v82[4 * v91] ^ *(_DWORD *)&v84[4 * v89] ^ 0x274BB929 ^ ((-112 * v76) ^ v76);
  uint64_t v93 = (uint64_t)*(&off_1F26D60E0 + a1 - 617);
  CMBlockBufferRef v94 = (char *)*(&off_1F26D60E0 + (a1 & 0x16AD4DCF)) - 4;
  int v95 = ((BYTE2(v85) ^ 0x7E) - 1634151244 - ((2 * (BYTE2(v85) ^ 0x7E) + 20361094) & 0x132B9E2)) ^ *(_DWORD *)(v93 + 4 * (BYTE2(v85) ^ 0x85u)) ^ (*(_DWORD *)&v94[4 * (BYTE1(v85) ^ 0x64)] + 2072656291);
  int v96 = (((-112 * v86) ^ v86) - ((2 * ((-112 * v86) ^ v86)) & 0x50) + 2109006632) ^ v85;
  LODWORD(a42) = v96;
  unsigned int v97 = ((((-112 * v86) ^ v86) - ((2 * ((-112 * v86) ^ v86)) & 0x50) + 40) ^ v85) ^ 2;
  uint64_t v98 = (uint64_t)*(&off_1F26D60E0 + (a1 & 0x147CB18F));
  LOBYTE(v86) = *(unsigned char *)(v98 + (HIBYTE(v85) ^ 0xE0));
  LOBYTE(v86) = 107 * v86 - ((86 * v86 + 88) & 0x74) + 102;
  LODWORD(v501) = v92;
  uint64_t v99 = (char *)*(&off_1F26D60E0 + (a1 ^ 0x25Fu)) - 8;
  unsigned int v100 = *(_DWORD *)&v99[4 * v97] ^ BYTE2(v85) ^ 0x7E ^ v92 ^ (v95 - ((2 * v95) & 0x8F31974A) + 1201195941) ^ ((2 * (v86 ^ 0x3A) * (v86 ^ 0x3A) - ((4 * (v86 ^ 0x3A) * (v86 ^ 0x3A)) & 0x77) + 58) ^ v86);
  LOWORD(v95) = (v70 ^ 0xDF) - ((2 * (v70 ^ 0xFFDF)) & 0x120) + 14992;
  unsigned int v101 = *(_DWORD *)(v80 + 4 * ((v72 - 66) ^ 0xADu)) ^ *(_DWORD *)&v82[4
                                                                                        * ((v83 + 49) ^ 0x48)] ^ ((v95 & 0x1FF ^ 0x16DE92B4) - 1900336246 + ((2 * (v95 & 0x1FF ^ 0x16DE92B4)) & 0x314 ^ 0xF2CBFBFF) + 1) ^ *(_DWORD *)&v84[4 * (v95 & 0xE8 ^ ((v70 ^ 0xFFFFFFDF) & 0x17 | 0x68))] ^ v534[0];
  unsigned int v102 = (v101 ^ 0xCCEF235D) + 1;
  unsigned int v103 = ((v101 ^ 0xA89C6BAE) + 1685276916) ^ v101;
  unsigned int v104 = v103 ^ 0x9F33C8D7 ^ ((v101 ^ 0xCCEF235D) - ((2 * v102) & 0xA7B9D714) + 1406987147);
  int v105 = (v103 ^ 0x3310DCA2)
       + 1685276915
       + (v101 ^ 0x996FD78 ^ ((((v103 ^ 0x3310DCA2) + v104 + 1) ^ v102)
                            - ((2 * (((v103 ^ 0x3310DCA2) + v104 + 1) ^ v102)) & 0x750C43B4)
                            + 981869018));
  int v526 = v105;
  int v106 = *(_DWORD *)&v82[4 * (v535 ^ 0x5D)] ^ *(_DWORD *)(v80 + 4 * (*(_DWORD *)(v45 - 248) ^ 0xB2u));
  unsigned __int8 v107 = v60 ^ 0xD4;
  if (v63) {
    unsigned __int8 v107 = v529;
  }
  int v108 = *(_DWORD *)&v84[4 * (BYTE1(v60) ^ 0xCC)];
  char v109 = *((unsigned char *)*(&off_1F26D60E0 + a1 - 558) + (v107 ^ 0xF7)) + 76;
  unsigned int v530 = v105 ^ 0xD8F41941 ^ v100;
  LODWORD(v500) = v106 ^ ((v108 ^ 0x8EBB2B8A)
                        + (BYTE1(v60) | 0x16DE9200)
                        - 2 * ((v108 ^ 0x69A028A) & (BYTE1(v60) | 0x16DE9200))) ^ ((-112 * v109) ^ v109);
  HIDWORD(v499) = v530 ^ 0x285F7DA;
  int v110 = v530 ^ 0x285F7DA ^ v500;
  unsigned int v111 = (v96 ^ 0x9A88B52C) - 2 * ((v96 ^ 0x9A88B52C) & 0x32257413 ^ v96 & 3) - 1306168304;
  LODWORD(v499) = v110 ^ 0x956ECD39;
  unsigned int v112 = v110 ^ 0x956ECD39 ^ v111;
  int v113 = BYTE2(v112) ^ 0x2C;
  unsigned int v114 = (*(_DWORD *)&v94[4 * (BYTE1(v112) ^ 0xF3)] + 2072656291) ^ *(_DWORD *)(v93 + 4 * (BYTE2(v112) ^ 0xD7u)) ^ (v113 - 1634151243 + ((2 * v113 + 3974) & 0x19E2 ^ 0xFECD5FFF));
  char v115 = *(unsigned char *)(v98 + (HIBYTE(v112) ^ 0x7DLL));
  unsigned __int8 v116 = 107 * v115 - ((88 - 42 * v115) & 0xB6) - 121;
  HIDWORD(v498) = v112;
  unsigned int v117 = v116 ^ 0x12 ^ (2 * (v116 ^ 0x5B) * (v116 ^ 0x5B)
                                       - ((4 * (v116 ^ 0x5B) * (v116 ^ 0x5B)) & 0xB4)
                                       + 91) ^ *(_DWORD *)&v99[4
                                                             * (v530 ^ 0xDA ^ v500 ^ 0x39 ^ v111 ^ 0x47)] ^ v113 ^ (v114 - ((2 * v114) & 0x8F31974A) + 1201195941);
  unsigned int v118 = v117 ^ v105 ^ 0xD8F41941;
  unsigned int v119 = (v118 ^ 0xC411F2FB) - ((2 * (v118 ^ 0xC411F2FB)) & 0x644AE820) - 1306168304;
  unsigned int v120 = v119 ^ v111;
  int v121 = *(_DWORD *)&v94[4
                       * (((unsigned __int16)(((v118 ^ 0xF2FB)
                                                              - ((2 * (v118 ^ 0xF2FB)) & 0xE820)
                                                              + 29712) ^ v111) >> 8) ^ 0xF0)];
  unsigned int v122 = v121 - ((2 * v121 - 149654714) & 0xA4CCAEAE) + 1307611386;
  int v123 = (((2 * (v122 & 0x78A1C70B ^ 0x28A14209)) | 0x607A8114) - (v122 & 0x78A1C70B ^ 0x28A14209) - 809320586) ^ 0x3A3E41C2;
  HIDWORD(v500) = v100;
  int v124 = v100 ^ 0x1A168BC1 ^ v117;
  unsigned int v125 = v122 & 0x875E38F4 ^ 0x82461054;
  unsigned int v126 = (((2 * v123) & 0x1742166C) - v123 + 1952380105) ^ 0xD4BAA7DC;
  if (v534[0]) {
    unsigned int v122 = v126;
  }
  int v127 = ((v120 ^ 0x9448C221) >> 16) ^ 0x42;
  unsigned int v128 = (v122 ^ 0xD2665757 | v125) ^ *(_DWORD *)(v93 + 4 * (((v120 ^ 0x9448C221) >> 16) ^ 0xB9u)) ^ (v127 - 1634151244 - ((2 * v127 + 20361094) & 0x132B9E2));
  char v129 = 107 * *(unsigned char *)(v98 + (HIBYTE(v120) ^ 0x93));
  char v130 = v129 - 2 * ((v129 + 44) & 0x2A ^ v129 & 2) + 84;
  unsigned int v516 = v120;
  LODWORD(v498) = v124;
  unsigned int v131 = ((2 * (v130 ^ 0x28) * (v130 ^ 0x28) - ((4 * (v130 ^ 0x28) * (v130 ^ 0x28)) & 0x50) + 40) ^ v130) ^ *(_DWORD *)&v99[4 * (v120 ^ 0xF)] ^ v124 ^ v127 ^ (v128 - ((2 * v128) & 0x8F31974A) + 1201195941);
  int v132 = (2 * (v120 & 0x20)) ^ 0x40 | v120 & 0x20;
  unsigned int v133 = v110 ^ 0xA07E16F7 ^ v119;
  unsigned int v134 = v131;
  unsigned int v518 = v131;
  int v520 = v131 ^ v118;
  unsigned int v135 = v131 ^ v118 ^ 0xA0A03907;
  HIDWORD(v497) = v133;
  unsigned int v136 = v135 ^ (v133 - ((2 * v133) & 0xE8B95B2A) - 195252843);
  BOOL v63 = ((v136 ^ 0xECCBB0E0) & (v132 - 32)) == 0;
  int v137 = v132 | 0x2DE39799;
  int v138 = 769890265 - v132;
  if (v63) {
    int v138 = v137;
  }
  unsigned int v139 = ((v136 ^ 0xECCBB0F1) - 769890233 + v138) ^ (v120 ^ 0x9448C221) & 0xFFFFFFDF;
  int v140 = ((v139 ^ 0xBE36D886) >> 16);
  int v141 = (v140 ^ 0x42) - 1935976509 + (v140 ^ 0x42) - 2 * (((v140 ^ 0x42) - 1935976509) & (v140 ^ 0x42));
  int v142 = (*(_DWORD *)&v94[4 * (BYTE1(v139) ^ 0xEA)] + 2072656291) ^ *(_DWORD *)(v93 + 4 * (v140 ^ 0xB9u)) ^ (v141 - ((2 * v141) & 0x132F9E2) + 301825265);
  unsigned int v508 = v139;
  unsigned int v143 = v134 ^ *(_DWORD *)&v99[4 * (v139 ^ 0xA8)] ^ (v142 - ((2 * v142) & 0x8F31974A) + 1201195941);
  unsigned __int8 v144 = 107 * *(unsigned char *)(v98 + (HIBYTE(v139) ^ 0xB9))
       - 2
       * ((107 * *(unsigned char *)(v98 + (HIBYTE(v139) ^ 0xB9)) + 44) & 0x4B ^ (107
                                                                         * *(unsigned char *)(v98 + (HIBYTE(v139) ^ 0xB9))) & 2)
       - 11;
  int v523 = v143 ^ v144 ^ 0x12 ^ (2 * (v144 ^ 0x49) * (v144 ^ 0x49)
                                              - ((4 * (v144 ^ 0x49) * (v144 ^ 0x49)) & 0x90)
                                              - 55);
  HIDWORD(v496) = ((v523 ^ 0xA38372C2) - ((2 * (v523 ^ 0xA38372C2)) & 0xE8B95B2A) - 195252843) ^ v135;
  LODWORD(v497) = v135 ^ (v133 - ((2 * v133) & 0xE8B95B2A) - 195252843);
  unsigned int v145 = HIDWORD(v496) ^ 0xEF36D886 ^ v136;
  unsigned int v146 = v145 ^ v139 ^ 0xBE36D886;
  int v147 = *(_DWORD *)(v93 + 4 * (BYTE2(v146) ^ 0xCu));
  unsigned int v148 = v147 & 0xBFFFFFFF ^ (((BYTE2(v146) ^ 0xF7) - 1935976509) ^ BYTE2(v146) ^ 0xF7 | v147 & 0x40000000) ^ 0x11FD7CF1 ^ (*(_DWORD *)&v94[4 * (((BYTE1(v146) ^ 0xAA) - ((2 * ((v146 >> 8) ^ 0x1BB5AA)) & 0x1F0) + 248) ^ 0xCA)] + 2072656291);
  char v149 = *(unsigned char *)(v98 + (HIBYTE(v146) ^ 0x1CLL));
  char v150 = 107 * v149 - ((86 * v149 + 88) & 0x72) - 27;
  unsigned int v151 = ((2 * (v150 ^ 0x39) * (v150 ^ 0x39) - ((4 * (v150 ^ 0x39) * (v150 ^ 0x39)) & 0x70) - 71) ^ v150) ^ *(_DWORD *)&v99[4 * (BYTE4(v496) ^ 0x86 ^ v136 ^ v139 ^ 0x86 ^ 0x78)] ^ v523 ^ 0xA38372C2 ^ (v148 - ((2 * v148) & 0x8F31974A) + 1201195941);
  unsigned int v522 = v151 ^ ((HIDWORD(v496) ^ 0xEF36D886) - ((2 * (HIDWORD(v496) ^ 0xEF36D886)) & 0x35B779C8) - 1696875292);
  unsigned int v513 = v145;
  HIDWORD(v504) = v145 ^ 0x4CB5AA56 ^ v522 ^ 0xA848C02A;
  int v152 = ((HIDWORD(v504) ^ v146 ^ 0x2F8372D0) >> (v143 & 0x10 ^ 0x10) >> (v143 & 0x10));
  int v153 = *(_DWORD *)(v93 + 4 * (v152 ^ 0xB9u));
  v152 ^= 0x42u;
  unsigned int v154 = (*(_DWORD *)&v94[4 * (((unsigned __int16)(WORD2(v504) ^ v146) >> 8) ^ 0x40)] + 2072656291) ^ v153 ^ (v152 - 1634151243 + ((2 * v152 + 3974) & 0x19E2 ^ 0xFECD5FFF));
  char v155 = *(unsigned char *)(v98 + (((HIDWORD(v504) ^ v146) >> 24) ^ 0x28));
  char v156 = 107 * v155 - ((86 * v155 + 88) & 0x56) - 41;
  HIDWORD(v495) = HIDWORD(v504) ^ v146 ^ 0x295FB042;
  LODWORD(v496) = v151;
  unsigned int v157 = (((~(4 * (v156 ^ 0x2B) * (v156 ^ 0x2B)) | 0xAB) + 2 * (v156 ^ 0x2B) * (v156 ^ 0x2B) - 84) ^ v156) ^ *(_DWORD *)&v99[4 * ((BYTE4(v504) ^ v146) ^ 0xFE)] ^ v151 ^ v152 ^ (v154 - ((2 * v154) & 0x8F31974A) + 1201195941);
  unsigned int v158 = v157 ^ v145 ^ 0x978372D0;
  int v159 = v158 ^ HIDWORD(v495);
  unsigned int v160 = v158 ^ HIDWORD(v495) ^ 0x94B5A97F;
  int v161 = BYTE2(v160) ^ 0xA8;
  unsigned int v162 = (*(_DWORD *)&v94[4 * (BYTE1(v160) ^ 0x2B)] + 2072656291) ^ *(_DWORD *)(v93 + 4 * (BYTE2(v160) ^ 0x53u)) ^ (v161 - 1634151243 + ((2 * v161 + 3974) & 0x19E2 ^ 0xFECD5FFF));
  char v163 = *(unsigned char *)(v98 + (((v158 ^ HIDWORD(v495)) >> 24) ^ 0x61));
  LOBYTE(v139) = 107 * v163 - ((88 - 42 * v163) & 0x83) + 109;
  unsigned int v164 = v139 ^ 0x12 ^ (((4 * (v139 ^ 0x41) * (v139 ^ 0x41)) & 0x80)
                                                        + 2 * (v139 ^ 0x41) * (v139 ^ 0x41)
                                                        + 65) ^ *(_DWORD *)&v99[4
                                                                              * ((v158 ^ BYTE4(v495)) ^ 0x6C)] ^ v161 ^ (v162 - ((2 * v162) & 0x8F31974A) + 1201195941);
  unsigned int v165 = ((v157 ^ v145 ^ 0xFDFFFFFF) + 1362548871) ^ ((v157 ^ v145 ^ 0xACC92779) + 1);
  unsigned int v166 = v157 ^ v145 ^ 0x2775CC86 ^ (v165 - ((2 * v165) & 0xE8862800) + 1950553088);
  unsigned int v167 = (v522 ^ 0xA848C02A) - ((2 * (v522 ^ 0xA848C02A)) & 0xE7D217D0) - 202830872;
  unsigned int v168 = v164 - ((2 * v164) & 0xE7D217D0) - 202830872;
  int v510 = v168 ^ v167;
  unsigned int v506 = v168 ^ v167 ^ ((v157 ^ v145 ^ 0x5336D886) - 1204365177 + ((2 * v158) & 0x706DB10C ^ 0xFF96EFF3));
  unsigned int v169 = v506 ^ 0x90ED6669 ^ v158 ^ HIDWORD(v495);
  int v170 = BYTE2(v169) ^ 0x9E;
  unsigned int v171 = v506 ^ 0x69 ^ (v158 ^ BYTE4(v495)) ^ 0xAE;
  unsigned int v172 = (*(_DWORD *)&v94[4 * (BYTE1(v169) ^ 0xF0)] + 2072656291) ^ *(_DWORD *)(v93 + 4 * (BYTE2(v169) ^ 0x65u)) ^ (v170 - 1634151243 + ((2 * v170 + 3974) & 0x19E2 ^ 0xFECD5FFF));
  HIDWORD(v494) = v169;
  uint64_t v173 = v98;
  char v174 = *(unsigned char *)(v98 + (HIBYTE(v169) ^ 0xA0));
  LOBYTE(v169) = 107 * v174 - 2 * ((107 * v174 + 44) & 0x22 ^ (107 * v174) & 2) + 76;
  unsigned int v175 = ((2 * (v169 ^ 0x20) * (v169 ^ 0x20) - ((4 * (v169 ^ 0x20) * (v169 ^ 0x20)) & 0x40) + 32) ^ v169) ^ *(_DWORD *)&v99[4 * v171] ^ v170 ^ (v172 - ((2 * v172) & 0x8F31974A) + 1201195941);
  unsigned int v176 = v157 ^ 0xEB046D81 ^ v167;
  LODWORD(v495) = v157 ^ 0xEB046D81;
  v528[0] = v168 ^ v157 ^ 0xEB046D81;
  int v177 = v175 ^ v176;
  int v536 = v175 ^ v176;
  unsigned int v178 = v175 ^ v176 ^ 0x89F454DD ^ v160;
  unsigned int v533 = v175 ^ v176 ^ 0x89F454DD;
  int v179 = ((v178 ^ 0x68289566) >> 16);
  int v180 = v179 ^ 0x42;
  unsigned int v181 = (*(_DWORD *)&v94[4 * (BYTE1(v178) ^ 0xA7)] + 2072656291) ^ *(_DWORD *)(v93 + 4 * (v179 ^ 0xB9u)) ^ (v180 - 1634151243 + ((2 * v180 + 3974) & 0x19E2 ^ 0xFECD5FFF));
  unsigned int v532 = v178;
  LOBYTE(v169) = 107 * *(unsigned char *)(v173 + (HIBYTE(v178) ^ 0x6FLL));
  LOBYTE(v169) = v169 + ~(2 * ((v169 + 44) & 0x57 ^ v169 & 1)) - 125;
  *(void *)(v45 - 248) = a2;
  v182 = *(unsigned __int8 **)(v45 - 248);
  LODWORD(v494) = v528[0] ^ 0x12 ^ v175;
  HIDWORD(v493) = v533 ^ v506 ^ 0x90ED6669;
  int v525 = ((2 * (v169 ^ 0x56) * (v169 ^ 0x56) - ((4 * (v169 ^ 0x56) * (v169 ^ 0x56)) & 0xAC) + 86) ^ v169) ^ *(_DWORD *)&v99[4 * (v178 ^ 0x48)] ^ v494 ^ v180 ^ (v181 - ((2 * v181) & 0x8F31974A) + 1201195941);
  unsigned int v183 = v525 ^ v175 ^ v176 ^ HIDWORD(v493) ^ 0x9FA367C5;
  unsigned int v184 = v183 ^ v178 ^ 0x68289566;
  HIDWORD(v492) = v166 + 1362548870;
  int v185 = BYTE2(v184) ^ 0x96;
  unsigned int v186 = (*(_DWORD *)&v94[4 * (((unsigned __int16)(v184 ^ 0x5563) >> 8) ^ 0x26)] + 2072656291) ^ *(_DWORD *)(v93 + 4 * (BYTE2(v184) ^ 0x6Du)) ^ (v185 - 1634151243 + ((2 * v185 + 3974) & 0x19E2 ^ 0xFECD5FFF));
  LODWORD(v493) = v184;
  LOBYTE(v175) = *(unsigned char *)(v173 + (HIBYTE(v184) ^ 0xDALL));
  LOBYTE(v175) = 107 * v175 - ((86 * v175 + 88) & 0x4E) + 83;
  LOBYTE(v175) = (((2 * v175) ^ 0x4E) * (v175 ^ 0x27)) ^ v175;
  unsigned int v527 = ((((v175 ^ 0xCA) + (v175 ^ 0x27) + 1) ^ 0xFC) + (v175 ^ 0x27)) ^ *(_DWORD *)&v99[4 * (v184 ^ 0xF4)] ^ v185 ^ (v186 - ((2 * v186) & 0x8F31974A) + 1201195941);
  HIDWORD(v491) = v518 ^ 0xDF26B822;
  LODWORD(v492) = v118 ^ 0xC89FE9A1;
  LODWORD(v504) = -1511292512
                - ((v176 ^ 0xD1305B3F)
                 + (v118 ^ 0xC89FE9A1))
                - ((1281335304 - 2 * ((v176 ^ 0xD1305B3F) + (v118 ^ 0xC89FE9A1))) & 0x7F776338);
  int v187 = (v178 ^ 0xF611B51D) + (v504 ^ 0xBFBBB19C) - (v518 ^ 0xDF26B822);
  HIDWORD(v503) = v187 - ((2 * v187) & 0x62FA2510) + 830280328;
  LODWORD(v491) = v525 ^ 0x1441DE2E;
  HIDWORD(v489) = v523 ^ 0xCDA1119F;
  LODWORD(v490) = v508 ^ 0xA08A177;
  HIDWORD(v490) = v183 ^ 0xFE8AF68E;
  unsigned int v188 = (v526 ^ 0xF77128B0)
       + (v508 ^ 0xA08A177)
       + (v523 ^ 0xCDA1119F)
       + (v506 ^ 0x15213B6A)
       + (HIDWORD(v503) ^ 0x317D1288)
       - (v525 ^ 0x1441DE2E)
       - 1259669714
       + (v183 ^ 0xFE8AF68E)
       + 1365418918;
  LODWORD(v503) = v188 - ((2 * v188) & 0xC4D37934) - 496386918;
  unsigned int v524 = (v513 ^ 0x9B3F3A56) - 421563057 + (~(2 * (v513 ^ 0x9B3F3A56)) | 0x32411561);
  LODWORD(v488) = v525 ^ v177 ^ 0x775B5338;
  HIDWORD(v488) = v516 ^ 0x43262AD5;
  HIDWORD(v487) = v510 ^ 0x4FD35DCF;
  HIDWORD(v502) = (v503 ^ 0xE269BC9A)
                + (v513 ^ 0x9B3F3A56)
                - ((2 * ((v503 ^ 0xE269BC9A) + (v513 ^ 0x9B3F3A56))) & 0xCDBEEA9E)
                - 421563057;
  int v189 = (v516 ^ 0x43262AD5)
       + (v522 ^ 0x199C6D8E)
       - (v510 ^ 0x4FD35DCF)
       - v488
       - 1113406941
       + (HIDWORD(v502) ^ 0xE6DF754F);
  LODWORD(v502) = v189 - ((2 * v189) & 0x5803F308) - 1409156732;
  int v190 = (a42 ^ 0x999A146C) + (v530 ^ 0xB081F5BE) - (v159 ^ 0xE171B4E2) + 810508149 + (v502 ^ 0xAC01F984);
  unsigned int v531 = (v159 ^ 0xE171B4E2) - ((2 * (v159 ^ 0xE171B4E2)) & 0x760785D0);
  HIDWORD(v501) = v190 - ((2 * v190) & 0x760785D0) + 990102248;
  unsigned int v191 = (HIDWORD(v501) ^ 0x3B03C2E8) - ((2 * (HIDWORD(v501) ^ 0x3B03C2E8) - 871316904) & 0xBAE667A8) - 1015311104;
  LODWORD(v487) = v520 ^ 0xE70FBD2;
  int v192 = (v191 ^ 0x5D7333D4) + (v520 ^ 0xE70FBD2) - (v146 ^ 0x48A846C3);
  int v521 = v192 - ((2 * v192) & 0x57BD1354);
  int v519 = (v146 ^ 0x48A846C3) - ((2 * (v146 ^ 0x48A846C3)) & 0x57BD1354);
  v193 = (char *)*(&off_1F26D60E0 + (a1 ^ 0x25Bu)) - 12;
  unsigned int v194 = ((*(unsigned __int8 *)(v538 - 0x42BE3E787A9E244) ^ 0xBA)
        + 1911284046
        + ((2 * (*(unsigned __int8 *)(v538 - 0x42BE3E787A9E244) ^ 0xBA) + 244) & 0xA6 ^ 0xF7F7BBFF)) ^ *(_DWORD *)&v193[4 * (*(unsigned __int8 *)(v538 - 0x42BE3E787A9E244) ^ 0x4ALL)];
  unsigned int v517 = v194 - ((2 * v194) & 0x97485C52);
  v195 = (char *)*(&off_1F26D60E0 + a1 - 470) - 8;
  int v196 = v195[*(unsigned __int8 *)(v538 - 0x42BE3E787A9E242) ^ 0x58];
  HIDWORD(v197) = v196 ^ 0x11;
  LODWORD(v197) = (v196 ^ 0xFFFFFFBF) << 24;
  LOBYTE(v173) = v197 >> 29;
  uint64_t v198 = (uint64_t)*(&off_1F26D60E0 + (a1 ^ 0x25Au));
  int v199 = (*(unsigned __int8 *)(v538 - 0x42BE3E787A9E23FLL)
        - ((2 * *(unsigned __int8 *)(v538 - 0x42BE3E787A9E23FLL)) & 0x166)
        + 1510625459) ^ *(_DWORD *)(v198 + 4 * (*(unsigned __int8 *)(v538 - 0x42BE3E787A9E23FLL) ^ 0x84));
  unsigned int v200 = ((*(unsigned __int8 *)(v538 - 0x42BE3E787A9E238) ^ 0xF7)
        + 1911284046
        + ((2 * (*(unsigned __int8 *)(v538 - 0x42BE3E787A9E238) ^ 0xF7) + 244) & 0xA6 ^ 0xF7F7BBFF)) ^ *(_DWORD *)(v198 + 4 * (*(unsigned __int8 *)(v538 - 0x42BE3E787A9E237) ^ 0x38)) ^ *(_DWORD *)&v193[4 * (*(unsigned __int8 *)(v538 - 0x42BE3E787A9E238) ^ 7)] ^ (*(unsigned __int8 *)(v538 - 0x42BE3E787A9E237) - ((2 * *(unsigned __int8 *)(v538 - 0x42BE3E787A9E237)) & 0x166) + 1510625459);
  int v201 = v195[*(unsigned __int8 *)(v538 - 0x42BE3E787A9E236) ^ 0x71];
  HIDWORD(v197) = v201 ^ 0x11;
  LODWORD(v197) = (v201 ^ 0xFFFFFFBF) << 24;
  LOBYTE(v201) = v197 >> 29;
  int v202 = v195[*(unsigned __int8 *)(v538 - 0x42BE3E787A9E23ELL) ^ 0xBDLL];
  HIDWORD(v197) = v202 ^ 0x11;
  LODWORD(v197) = (v202 ^ 0xFFFFFFBF) << 24;
  LOBYTE(v202) = v197 >> 29;
  int v203 = (*(unsigned __int8 *)(v538 - 0x42BE3E787A9E23BLL)
        - ((2 * *(unsigned __int8 *)(v538 - 0x42BE3E787A9E23BLL)) & 0x166)
        + 1510625459) ^ *(_DWORD *)(v198 + 4 * (*(unsigned __int8 *)(v538 - 0x42BE3E787A9E23BLL) ^ 0x64));
  uint64_t v204 = (uint64_t)*(&off_1F26D60E0 + a1 - 631);
  v485 = v195;
  int v205 = v195[*(unsigned __int8 *)(v538 - 0x42BE3E787A9E23ALL) ^ 0xF3];
  unsigned int v206 = *(_DWORD *)(v204 + 4 * (*(unsigned __int8 *)(v538 - 0x42BE3E787A9E23DLL) ^ 0x6CLL)) ^ *(_DWORD *)&v193[4 * (*(unsigned __int8 *)(v538 - 0x42BE3E787A9E23CLL) ^ 0x36)] ^ ((*(unsigned __int8 *)(v538 - 0x42BE3E787A9E23CLL) ^ 0xC6) + 1911284046 + ((2 * (*(unsigned __int8 *)(v538 - 0x42BE3E787A9E23CLL) ^ 0xC6) + 244) & 0xA6 ^ 0xF7F7BBFF)) ^ 0x8908343 ^ (v203 - ((2 * v203) & 0x97485C52) - 878432727);
  HIDWORD(v197) = v205 ^ 0x11;
  LODWORD(v197) = (v205 ^ 0xFFFFFFBF) << 24;
  int v514 = (v206 + ((v197 >> 29) ^ 0x80) - 2 * (v206 & ((v197 >> 29) ^ 0x80))) ^ 0x11F34FFE;
  uint64_t v484 = v198;
  int v511 = *(_DWORD *)(v204 + 4 * (*(unsigned __int8 *)(v538 - 0x42BE3E787A9E245) ^ 0x7DLL)) ^ (v517 - 878432727) ^ v173 ^ 0x80 ^ *(_DWORD *)(v198 + 4 * (*(unsigned __int8 *)(v538 - 0x42BE3E787A9E243) ^ 0xDALL)) ^ (*(unsigned __int8 *)(v538 - 0x42BE3E787A9E243) - ((2 * *(unsigned __int8 *)(v538 - 0x42BE3E787A9E243)) & 0x166) + 1510625459) ^ 0x3FF0020C;
  v486 = v193;
  uint64_t v483 = v204;
  unsigned int v207 = *(_DWORD *)(v204 + 4 * (*(unsigned __int8 *)(v538 - 0x42BE3E787A9E241) ^ 0x3FLL)) ^ *(_DWORD *)&v193[4 * (*(unsigned __int8 *)(v538 - 0x42BE3E787A9E240) ^ 0xBBLL)] ^ ((*(unsigned __int8 *)(v538 - 0x42BE3E787A9E240) ^ 0x4B) + 1911284046 + ((2 * (*(unsigned __int8 *)(v538 - 0x42BE3E787A9E240) ^ 0x4B) + 244) & 0xA6 ^ 0xF7F7BBFF)) ^ (v199 - ((2 * v199) & 0x97485C52) - 878432727) ^ v202 ^ 0x55A64547;
  unsigned int v509 = (v200 - ((2 * v200) & 0x97485C52) - 878432727) ^ *(_DWORD *)(v204
                                                                    + 4
                                                                    * (*(unsigned __int8 *)(v538 - 0x42BE3E787A9E239) ^ 0x11)) ^ v201 ^ 0xE4FC967E;
  LODWORD(v195) = (HIDWORD(v503) ^ 0x317D1288) - (v525 ^ 0x1441DE2E) + 672510991;
  unsigned int v208 = (v195 ^ HIDWORD(v504)) & 0xE4A32FDE;
  LODWORD(v482) = v195 ^ 0xE254C3A4;
  HIDWORD(v481) = v528[0] ^ 0x22875218;
  LODWORD(v481) = v528[0] ^ 0x6CA7B067;
  HIDWORD(v480) = v191 ^ 0xD0AF526C;
  LODWORD(v480) = v191 ^ 0xC4E24C51;
  HIDWORD(v479) = v191 ^ v533;
  HIDWORD(v478) = v527 ^ v536;
  LODWORD(v479) = v527 ^ v525;
  LODWORD(v478) = v527 ^ v525 ^ HIDWORD(v493) ^ 0x9FA367C5;
  HIDWORD(v476) = (v528[0] ^ 0x30E5085C) + 1;
  LODWORD(v477) = v208 ^ 0x80220D09;
  LODWORD(v476) = (v191 ^ 0x34DBE7A7) + 1;
  LODWORD(v195) = *(_DWORD *)(v45 - 256);
  HIDWORD(v475) = v195 ^ 0x510;
  LODWORD(v475) = v195 ^ 0x551;
  HIDWORD(v474) = (v524 + 1) ^ HIDWORD(v502);
  HIDWORD(v477) = v521 + 736004522;
  LODWORD(v474) = (v521 + 736004522) ^ (v519 + 736004522);
  HIDWORD(v473) = v502 ^ ((v522 ^ 0x199C6D8E) - ((2 * (v522 ^ 0x199C6D8E)) & 0x5803F308) - 1409156732);
  HIDWORD(v482) = v208;
  LODWORD(v473) = v208 ^ 0xE2025222;
  HIDWORD(v472) = v504 ^ ((v176 ^ 0xD1305B3F) - ((2 * (v176 ^ 0xD1305B3F)) & 0x7F776338) - 1078218340);
  LODWORD(v472) = HIDWORD(v501) ^ (v531 + 990102248);
  HIDWORD(v471) = v503 ^ ((v506 ^ 0x15213B6A) - ((2 * (v506 ^ 0x15213B6A)) & 0xC4D37934) - 496386918);
  LODWORD(v471) = v532 ^ HIDWORD(v503);
  HIDWORD(v470) = v195 & 0x3A45ABC;
  LODWORD(v470) = v195 ^ 0x5A8;
  HIDWORD(v469) = v195 ^ 0x5BB;
  LODWORD(v469) = v195 ^ 0x577;
  HIDWORD(a5) = v195 ^ 0x57F;
  LODWORD(v505) = 0;
  int v209 = (int)v195;
  HIDWORD(v505) = v195 - 750;
  uint64_t v539 = (v195 - 750) ^ 0x23Fu;
  LODWORD(v198) = ((v182[5] ^ 0xA4) + 1911284046 + ((2 * (v182[5] ^ 0xA4) + 244) & 0xA6 ^ 0xF7F7BBFF)) ^ *(_DWORD *)&v193[4 * (v182[5] ^ 0x54)];
  uint64_t v210 = v182[6];
  LODWORD(v195) = v210 ^ 0xB8;
  int v211 = *(_DWORD *)(v484 + 4 * (v210 ^ 0x35));
  HIDWORD(v197) = ((v182[13] ^ 0x88) + 1911284046 + ((2 * (v182[13] ^ 0x88) + 244) & 0xA6 ^ 0xF7F7BBFF)) ^ *(_DWORD *)&v193[4 * (v182[13] ^ 0x78)];
  LODWORD(v197) = HIDWORD(v197);
  LODWORD(v197) = (v197 >> 2) ^ __ROR4__((v182[14] + 1510625459 - ((2 * v182[14]) & 0x166)) ^ *(_DWORD *)(v484+ 4* (v182[14] ^ 0x20)), 2) ^ 0x50AF8AA9;
  HIDWORD(v197) = v197;
  int v212 = v197 >> 30;
  LODWORD(v210) = v485[v182[7] ^ 0xBCLL];
  HIDWORD(v197) = v210 ^ 0x11;
  LODWORD(v197) = (v210 ^ 0xFFFFFFBF) << 24;
  int v213 = *(_DWORD *)(v204 + 4 * (v182[12] ^ 0x64));
  int v214 = v211 ^ *(_DWORD *)(v204 + 4 * (v182[v539] ^ 0x70)) ^ (v195 + 1510625459 - ((2 * v195) & 0x166)) ^ (v197 >> 29) ^ (v198 - 878432727 - ((2 * v198) & 0x97485C52));
  LODWORD(v198) = v212 - 878432727 - ((2 * v212) & 0x97485C52);
  unsigned int v215 = ((v182[1] ^ 0x4B) + 1911284046 + ((2 * (v182[1] ^ 0x4B) + 244) & 0xA6 ^ 0xF7F7BBFF)) ^ *(_DWORD *)&v193[4 * (v182[1] ^ 0xBBLL)];
  int v216 = v485[v182[15] ^ 0xB4];
  HIDWORD(v197) = v216 ^ 0x11;
  LODWORD(v197) = (v216 ^ 0xFFFFFFBF) << 24;
  LOBYTE(v216) = v197 >> 29;
  LODWORD(v210) = v485[v182[11] ^ 0xBCLL];
  HIDWORD(v197) = v210 ^ 0x11;
  LODWORD(v197) = (v210 ^ 0xFFFFFFBF) << 24;
  uint64_t v217 = v182[10];
  LODWORD(v210) = (v197 >> 29) - 878432727 - ((2 * (v197 >> 29)) & 0x52);
  int v218 = v485[v182[3] ^ 0x8FLL];
  HIDWORD(v197) = v218 ^ 0x11;
  LODWORD(v197) = (v218 ^ 0xFFFFFFBF) << 24;
  unsigned int v219 = (v215 - 878432727 - ((2 * v215) & 0x97485C52)) ^ *(_DWORD *)(v204 + 4 * (*v182 ^ 0x63)) ^ *(_DWORD *)(v484 + 4 * (v182[2] ^ 0x17)) ^ (v197 >> 29) ^ 0x80 ^ (v182[2] + 1510625459 - ((2 * v182[2]) & 0x166));
  LODWORD(v217) = *(_DWORD *)(v484 + 4 * (v217 ^ 0x84)) ^ *(_DWORD *)(v204 + 4 * (v182[8] ^ 0xADLL)) ^ (v217 + 1510625459 - ((2 * v217) & 0x166)) ^ *(_DWORD *)&v193[4 * (v182[9] ^ 0xA1)] ^ ((v182[9] ^ 0x51) + 1911284046 + ((2 * (v182[9] ^ 0x51) + 244) & 0xA6 ^ 0xF7F7BBFF)) ^ v210;
  unsigned int v220 = v207 ^ v526 ^ 0xF77128B0 ^ (v214 - ((2 * v214) & 0xB2F001C) + 93814798);
  unsigned int v221 = v509 ^ a42 ^ ((v198 ^ v213 ^ v216)
                     - ((2 * (v198 ^ v213 ^ v216)) & 0x211A2766)
                     + 277681075);
  unsigned int v222 = v514 ^ v500 ^ (v217 - 630030459 + (~(2 * v217) | 0x4B1B00F7));
  unsigned int v223 = v511 ^ v501 ^ (v219 - ((2 * v219) & 0x8D04B7F6) + 1182948347);
  v224 = (char *)*(&off_1F26D60E0 + v209 - 1190) - 8;
  LODWORD(v198) = *(_DWORD *)&v224[4 * (HIBYTE(v223) ^ 0x99)] ^ 0x42D02727;
  LODWORD(v217) = ((unsigned __int16)(v514 ^ v500 ^ (v217 + 32645 + (~(2 * v217) | 0xF7))) >> 8);
  uint64_t v225 = (uint64_t)*(&off_1F26D60E0 + v475);
  v226 = (char *)*(&off_1F26D60E0 + HIDWORD(v475)) - 8;
  int v227 = *(_DWORD *)&v226[4 * (v221 ^ 0x57)];
  uint64_t v228 = (uint64_t)*(&off_1F26D60E0 + v209 - 1267);
  int v229 = v198 ^ *(_DWORD *)(v228 + 4 * (BYTE2(v220) ^ 0xC1u)) ^ (692122414
                                                                 - (v198 & 0x200C44C)
                                                                 + ((v198 >> 1) & 0x53B76667));
  unsigned int v230 = v227 - ((2 * v227 + 1930426644) & 0xFF4159CA) - 1188517521;
  LODWORD(v217) = v229 ^ (v230 >> 1) ^ (v230 >> 4) ^ (*(_DWORD *)(v225 + 4 * (v217 ^ 0xD))
                                                    + (v217 ^ 0x7D)
                                                    + 877750223) ^ 0x382A5CBC;
  int v231 = v217 - ((2 * v217) & 0xFF4159CA);
  int v233 = (BYTE1(v221) ^ 0xAB) + 877750223 + *(_DWORD *)(v225 + 4 * (BYTE1(v221) ^ 0xDBu));
  LODWORD(v217) = *(_DWORD *)&v226[4 * (v223 ^ 1)];
  unsigned int v234 = v217 - ((2 * v217 + 319813908) & 0x16C60B0E) - 991231471;
  unsigned int v235 = ((v234 >> 3) ^ 0x116C60B0) + (v234 ^ 0x8B630587) - 2 * (((v234 >> 3) ^ 0x116C60B0) & (v234 ^ 0xB630587));
  int v236 = (v235 >> 1) - 1956444793 - (v235 & 0x16C60B0E);
  if ((v220 & 4) != 0) {
    int v238 = 4;
  }
  else {
    int v238 = -4;
  }
  int v239 = *(_DWORD *)&v226[4 * ((v238 + (v220 ^ 0xDE)) ^ 0x89)];
  unsigned int v240 = v239 - ((2 * v239 + 1930426644) & 0xCE1A5DCE) - 1600836751;
  unsigned int v237 = *(_DWORD *)&v224[4 * (HIBYTE(v222) ^ 0xDC)] ^ 0x42D02727;
  int v241 = *(_DWORD *)(v228 + 4 * (BYTE2(v221) ^ 0xA9u)) ^ v237 ^ ((BYTE1(v223) ^ 0x35)
                                                                 + 877750223
                                                                 + *(_DWORD *)(v225 + 4 * (BYTE1(v223) ^ 0x45u))) ^ (692122414 - (v237 & 0x200C44C) + ((v237 >> 1) & 0x53B76667)) ^ (v240 >> 1) ^ (v240 >> 4) ^ 0x35F6459D;
  unsigned int v242 = (v241 - ((2 * v241) & 0xCE1A5DCE) + 1728917223) ^ v240;
  unsigned int v243 = *(_DWORD *)&v224[4 * (HIBYTE(v221) ^ 0x70)] ^ 0x42D02727;
  int v244 = *(_DWORD *)&v226[4 * (v222 ^ 0xB)];
  unsigned int v245 = v244 - ((2 * v244 + 1930426644) & 0x8E674E5A) + 12297143;
  unsigned int v246 = v230 ^ HIDWORD(v500) ^ (v231 + 2141236453);
  unsigned int v232 = *(_DWORD *)&v224[4 * (HIBYTE(v220) ^ 0x2B)] ^ 0x42D02727;
  int v247 = *(_DWORD *)(v228 + 4 * (BYTE2(v222) ^ 0xE6u)) ^ HIDWORD(v499) ^ v232 ^ (692122414
                                                                                 - (v232 & 0x200C44C)
                                                                                 + ((v232 >> 1) & 0x53B76667)) ^ v234 ^ v233 ^ v236;
  unsigned int v248 = *(_DWORD *)(v228 + 4 * (BYTE2(v223) ^ 0xFAu)) ^ HIDWORD(v498) ^ ((BYTE1(v220) ^ 0xE)
                                                                          + 877750223
                                                                          + *(_DWORD *)(v225
                                                                                      + 4 * (BYTE1(v220) ^ 0x7Eu))) ^ v243 ^ v245 ^ (692122414 - (v243 & 0x200C44C) + ((v243 >> 1) & 0x53B76667)) ^ (((v245 >> 4) ^ (v245 >> 1) ^ 0x6FEAE9E4) - ((2 * ((v245 >> 4) ^ (v245 >> 1) ^ 0x6FEAE9E4)) & 0x8E674E5A) - 952916179);
  unsigned int v249 = (v242 - 1306168304 - ((2 * v242) & 0x644AE820)) ^ v499;
  unsigned int v250 = *(_DWORD *)&v224[4 * (HIBYTE(v246) ^ 0x34)] ^ 0x42D02727;
  int v515 = *(_DWORD *)(v225 + 4 * (BYTE1(v249) ^ 0xC3u)) + (BYTE1(v249) ^ 0xB3) + 877750223;
  int v251 = *(_DWORD *)&v226[4
                        * ((*(unsigned char *)(v228 + 4 * (BYTE2(v223) ^ 0xFAu)) ^ BYTE4(v498) ^ ((BYTE1(v220) ^ 0xE) - 49 + *(unsigned char *)(v225 + 4 * (BYTE1(v220) ^ 0x7Eu))) ^ v243 ^ v245 ^ (46 - (v243 & 0x4C) + ((v243 >> 1) & 0x67)) ^ (((v245 >> 4) ^ (v245 >> 1) ^ 0xE4) - ((2 * ((v245 >> 4) ^ (v245 >> 1) ^ 0xE4)) & 0x5A) + 45)) ^ 0x44)];
  unsigned int v252 = v251 - ((2 * v251 + 1930426644) & 0x9342A31C) + 53038616;
  int v253 = *(_DWORD *)&v224[4 * ((v247 ^ 0x61ADE6E7u) >> 24)];
  int v254 = *(_DWORD *)&v226[4 * ((v230 ^ BYTE4(v500) ^ (v231 - 27)) ^ 0x47)];
  unsigned int v255 = v254 - ((2 * v254 + 51378452) & 0x5C001BA) + 1013448039;
  unsigned int v256 = v253 ^ (692122414 - ((v253 ^ 0x42D02727) & 0x200C44C) + (((v253 ^ 0x42D02727u) >> 1) & 0x53B76667)) ^ *(_DWORD *)(v228 + 4 * (BYTE2(v249) ^ 0xA0u)) ^ (v255 >> 1) ^ (v255 >> 4) ^ (*(_DWORD *)(v225 + 4 * (((unsigned __int16)(v248 ^ 0xB3C9) >> 8) ^ 0x70u)) + ((unsigned __int16)(v248 ^ 0xB3C9) >> 8) + 877750223) ^ 0x438E2744;
  unsigned int v257 = *(_DWORD *)&v224[4 * (HIBYTE(v249) ^ 0x88)] ^ 0x42D02727;
  int v258 = *(_DWORD *)&v226[4 * (v247 ^ 0x6A)];
  unsigned int v259 = v258 - ((2 * v258 + 1930426644) & 0xDA4A98C4) + 648890604;
  int v260 = *(_DWORD *)(v228 + 4 * ((v248 ^ 0xDCA0B3C9) >> 16)) ^ v257 ^ ((BYTE1(v246) ^ 0xED)
                                                                                        + 877750223
                                                                                        + *(_DWORD *)(v225 + 4 * (BYTE1(v246) ^ 0x9Du))) ^ (692122414 - (v257 & 0x200C44C) + ((v257 >> 1) & 0x53B76667)) ^ (v259 >> 1) ^ (v259 >> 4) ^ 0x7840F2F7;
  unsigned int v261 = *(_DWORD *)&v224[4 * (HIBYTE(v248) ^ 0x88)] ^ 0x42D02727;
  int v262 = *(_DWORD *)&v226[4 * (v249 ^ 0x44)];
  int v263 = *(_DWORD *)(v228 + 4 * (BYTE2(v246) ^ 0xB6u)) ^ v261 ^ (((unsigned __int16)(v247 ^ 0xE6E7) >> 8)
                                                                 + 877750223
                                                                 + *(_DWORD *)(v225
                                                                             + 4
                                                                             * (((unsigned __int16)(v247 ^ 0xE6E7) >> 8) ^ 0x70u))) ^ (692122414 - (v261 & 0x200C44C) + ((v261 >> 1) & 0x53B76667));
  unsigned int v264 = v262 - ((2 * v262 + 856684820) & 0x26F3245C) - 855535944;
  int v265 = v263 ^ (v264 >> 1) ^ (v264 >> 4) ^ 0x408B5035;
  unsigned int v266 = v255 ^ v492 ^ (v256 - ((2 * v256) & 0x5C001BA) + 48234717);
  unsigned int v267 = *(_DWORD *)(v228 + 4 * (BYTE2(v247) ^ 0x32u)) ^ v498 ^ v250 ^ v252 ^ (692122414
                                                                               - (v250 & 0x200C44C)
                                                                               + ((v250 >> 1) & 0x53B76667)) ^ (((v252 >> 4) ^ (v252 >> 1) ^ 0x684ABDDF) - ((2 * ((v252 >> 4) ^ (v252 >> 1) ^ 0x684ABDDF)) & 0x9342A31C) - 912174706) ^ v515;
  unsigned int v268 = v259 ^ HIDWORD(v497) ^ (v260 - ((2 * v260) & 0xDA4A98C4) - 316322718);
  unsigned int v269 = v264 ^ HIDWORD(v488) ^ (v265 - ((2 * v265) & 0x26F3245C) - 1820749266);
  int v270 = ((unsigned __int16)((v258 - ((2 * v258 - 1772) & 0x98C4) + 18668) ^ WORD2(v497) ^ (v260 - ((2 * v260) & 0x98C4) + 19554)) >> 8);
  int v271 = *(_DWORD *)&v226[4 * (v269 ^ 0xD9)];
  unsigned int v272 = v271 - ((2 * v271 + 1930426644) & 0xF61DAFCE) + 882300017;
  unsigned int v273 = *(_DWORD *)&v224[4 * (HIBYTE(v267) ^ 0x29)] ^ 0x42D02727;
  unsigned int v274 = HIDWORD(v491) ^ v273 ^ (v273 >> 1) & 0x53B76667 ^ *(_DWORD *)(v228 + 4 * (BYTE2(v266) ^ 8u)) ^ (*(_DWORD *)(v225 + 4 * (v270 ^ 0xDAu)) + (v270 ^ 0xAA) + 877750223) ^ v272 ^ 0xC2F212EC ^ (((v272 >> 4) ^ (v272 >> 1) ^ 0x7237868D) - 2 * (((v272 >> 4) ^ (v272 >> 1) ^ 0x7237868D) & 0x7B0ED7F7 ^ ((v272 >> 4) ^ (v272 >> 1)) & 0x10) - 82913305);
  int v275 = *(_DWORD *)&v226[4 * (v267 ^ 0xAB)];
  unsigned int v276 = *(_DWORD *)&v224[4 * (HIBYTE(v266) ^ 0x6A)] ^ 0x42D02727;
  unsigned int v277 = v275 - ((2 * v275 + 856684820) & 0x2323E26C) - 887493184;
  unsigned int v278 = *(_DWORD *)(v228 + 4 * (BYTE2(v268) ^ 0xF8u)) ^ v487 ^ v276 ^ v277 ^ (*(_DWORD *)(v225
                                                                                           + 4 * (BYTE1(v269) ^ 0xEAu))
                                                                               + (BYTE1(v269) ^ 0x9A)
                                                                               + 877750223) ^ (692122414
                                                                                             - (v276 & 0x200C44C)
                                                                                             + ((v276 >> 1) & 0x53B76667)) ^ (((v277 >> 4) ^ (v277 >> 1) ^ 0x41D1E788) - ((2 * ((v277 >> 4) ^ (v277 >> 1) ^ 0x41D1E788)) & 0x2323E26C) - 1852706506);
  unsigned int v279 = *(_DWORD *)&v224[4 * (HIBYTE(v268) ^ 0x29)] ^ 0x42D02727;
  int v280 = *(_DWORD *)&v226[4 * (v266 ^ 0x56)];
  unsigned int v281 = v280 - ((2 * v280 + 856684820) & 0x325FADC4) + 1387778924;
  unsigned int v282 = *(_DWORD *)&v224[4 * (HIBYTE(v269) ^ 0x25)] ^ 0x42D02727;
  int v283 = (v282 >> 1) & 0x53B76667 ^ ((BYTE1(v266) ^ 0xAB) + 877750223 + *(_DWORD *)(v225 + 4 * (BYTE1(v266) ^ 0xDBu)));
  int v284 = *(_DWORD *)&v226[4 * (v268 ^ 0xAB)];
  unsigned int v285 = v284 - 2 * ((v284 + 965213322) & 0x693979BF ^ v284 & 1) + 583104072;
  int v286 = *(_DWORD *)(v228 + 4 * (BYTE2(v267) ^ 0xF8u)) ^ v282 ^ (v283 + 692122414 - ((2 * v283) & 0x5281E65C)) ^ (v285 >> 1) ^ (v285 >> 4) ^ 0x7A0F2B44;
  unsigned int v287 = *(_DWORD *)(v228 + 4 * (BYTE2(v269) ^ 0xA0u)) ^ v497 ^ v279 ^ ((BYTE1(v267) ^ 0xAA)
                                                                        + 877750223
                                                                        + *(_DWORD *)(v225 + 4 * (BYTE1(v267) ^ 0xDAu))) ^ (692122414 - (v279 & 0x200C44C) + ((v279 >> 1) & 0x53B76667)) ^ v281 ^ (((v281 >> 4) ^ (v281 >> 1) ^ 0xD05161F) - ((2 * ((v281 >> 4) ^ (v281 >> 1) ^ 0xD05161F)) & 0x325FADC4) + 422565602);
  unsigned int v288 = v285 ^ v490 ^ (v286 - ((2 * v286) & 0xD272F37C) - 382109250);
  unsigned int v289 = *(_DWORD *)&v224[4 * (HIBYTE(v274) ^ 0x4B)] ^ 0x42D02727;
  int v290 = *(_DWORD *)&v226[4 * ((v285 ^ v490 ^ (v286 - ((2 * v286) & 0x7C) - 66)) ^ 0xDC)];
  unsigned int v291 = v290 - ((2 * v290 + 51378452) & 0xDD618A8) + 1081280734;
  unsigned int v292 = *(_DWORD *)(v228 + 4 * (BYTE2(v278) ^ 0x89u)) ^ HIDWORD(v489) ^ v289 ^ (692122414
                                                                                 - (v289 & 0x200C44C)
                                                                                 + ((v289 >> 1) & 0x53B76667)) ^ (*(_DWORD *)(v225 + 4 * (BYTE1(v287) ^ 0x6Au)) + (BYTE1(v287) ^ 0x1A) + 877750223) ^ v291 ^ (((v291 >> 4) ^ (v291 >> 1) ^ 0x31B36EF) - ((2 * ((v291 >> 4) ^ (v291 >> 1) ^ 0x31B36EF)) & 0xDD618A8) + 116067412);
  unsigned int v293 = *(_DWORD *)&v224[4 * (HIBYTE(v278) ^ 0x21)] ^ 0x42D02727;
  unsigned int v294 = ((v288 >> 7) & 0x30 ^ 0x10) + (BYTE1(v288) ^ 0xB03AF713);
  int v295 = *(_DWORD *)(v225 + 4 * (BYTE1(v288) ^ 0x7Bu));
  int v296 = (v294 ^ (v295 - 2078904137)) + 2 * (v294 & (v295 + 68579511));
  unsigned int v297 = *(_DWORD *)&v226[4 * (v274 ^ 0x74)] + 965213322;
  unsigned int v298 = *(_DWORD *)&v224[4 * (HIBYTE(v287) ^ 0xA0)] ^ 0x42D02727;
  int v299 = *(_DWORD *)&v226[4 * (v278 ^ 0x9C)];
  unsigned int v300 = v299 - ((2 * v299 + 1930426644) & 0xDBCC42A0) + 661528026;
  int v301 = HIDWORD(v474) ^ v298 ^ ((BYTE1(v274) ^ 0x3F) + 877750223 + *(_DWORD *)(v225 + 4 * (BYTE1(v274) ^ 0x4Fu))) ^ *(_DWORD *)(v228 + 4 * (BYTE2(v288) ^ 0xF0u)) ^ (692122414 - (v298 & 0x200C44C) + ((v298 >> 1) & 0x53B76667)) ^ (v300 >> 1) ^ (v300 >> 4) ^ 0x782D72BD;
  unsigned int v302 = *(_DWORD *)&v224[4 * (HIBYTE(v288) ^ 0x46)] ^ 0x42D02727;
  int v303 = *(_DWORD *)&v226[4 * (v287 ^ 0x5A)];
  unsigned int v304 = v303 - ((2 * v303 + 1930426644) & 0xD4EBD4CA) - 1543641361;
  int v305 = v474 ^ *(_DWORD *)(v228 + 4 * (BYTE2(v274) ^ 0x34u)) ^ ((BYTE1(v278) ^ 0xAD)
                                                                 + 877750223
                                                                 + *(_DWORD *)(v225 + 4 * (BYTE1(v278) ^ 0xDDu))) ^ v302 ^ (692122414 - (v302 & 0x200C44C) + ((v302 >> 1) & 0x53B76667)) ^ (v304 >> 1) ^ (v304 >> 4);
  int v306 = ((v305 ^ 0x339DAB94) + 1786112613 - 2 * ((v305 ^ 0x339DAB94) & 0x6A75EA67 ^ v305 & 2)) ^ v304;
  unsigned int v307 = *(_DWORD *)(v228 + 4 * (BYTE2(v287) ^ 0x33u)) ^ HIDWORD(v496) ^ v293 ^ (692122414
                                                                                 - (v293 & 0x200C44C)
                                                                                 + ((v293 >> 1) & 0x53B76667)) ^ (((v297 >> 4) ^ (v297 >> 1)) + v297 - 2 * (((v297 >> 4) ^ (v297 >> 1)) & v297)) ^ v296;
  unsigned int v308 = v300 ^ HIDWORD(v502) ^ (v301 - ((2 * v301) & 0xDBCC42A0) - 303685296);
  unsigned int v309 = *(_DWORD *)&v224[4 * (HIBYTE(v292) ^ 0xB3)] ^ 0x42D02727;
  unsigned int v310 = (v306 + 736004522 - ((2 * v306) & 0x57BD1354)) ^ HIDWORD(v477);
  int v311 = *(_DWORD *)&v226[4 * (((v306 - 86 - ((2 * v306) & 0x54)) ^ (v521 - 86)) ^ 0xB8)];
  int v312 = *(_DWORD *)(v228 + 4 * (BYTE2(v307) ^ 0xB0u)) ^ v309 ^ (692122414
                                                                 - (v309 & 0x200C44C)
                                                                 + ((v309 >> 1) & 0x53B76667));
  unsigned int v313 = v311 - ((2 * v311 + 1930426644) & 0xCD5F00F2) - 1606976253;
  int v314 = v312 ^ (v313 >> 1) ^ (v313 >> 4) ^ (*(_DWORD *)(v225
                                                       + 4
                                                       * (((unsigned __int16)(v308 ^ 0x97EF) >> 8) ^ 0x70u))
                                           + ((unsigned __int16)(v308 ^ 0x97EF) >> 8)
                                           + 877750223) ^ 0x353D383B;
  unsigned int v315 = v314 - ((2 * v314) & 0xCD5F00F2);
  unsigned int v316 = *(_DWORD *)&v224[4 * (HIBYTE(v307) ^ 0x54)] ^ 0x42D02727;
  int v317 = *(_DWORD *)(v225 + 4 * (BYTE1(v310) ^ 0xEEu));
  int v318 = *(_DWORD *)&v226[4 * (v292 ^ 0x26)];
  unsigned int v319 = v318 - ((2 * v318 + 319813908) & 0x1B286C5C) + 1193030328;
  int v320 = HIDWORD(v473) ^ v316 ^ (692122414 - (v316 & 0x200C44C) + ((v316 >> 1) & 0x53B76667)) ^ *(_DWORD *)(v228 + 4 * (BYTE2(v308) ^ 0x9Bu)) ^ v319 ^ ((((BYTE1(v310) ^ 0x9E) - 1338312936) ^ (v317 - 2078904137)) + 2 * (((BYTE1(v310) ^ 0x9E) - 1338312936) & (v317 + 68579511))) ^ (((v319 >> 4) ^ (v319 >> 1) ^ 0x6135875) - ((2 * ((v319 >> 4) ^ (v319 >> 1) ^ 0x6135875)) & 0x1B286C5C) + 227817006);
  unsigned int v321 = *(_DWORD *)&v224[4 * ((v308 ^ 0x940497EF) >> 24)] ^ 0x42D02727;
  int v322 = *(_DWORD *)&v226[4 * (v307 ^ 0x8A)];
  unsigned int v323 = v322 - ((2 * v322 + 1930426644) & 0x4EEC09F8) - 520224378;
  int v324 = (((v323 >> 4) ^ (v323 >> 1) ^ 0x59CC6231)
        - ((2 * ((v323 >> 4) ^ (v323 >> 1) ^ 0x59CC6231)) & 0x4EEC09F8)
        - 1485437700) ^ v323;
  int v325 = *(_DWORD *)&v224[4 * (HIBYTE(v310) ^ 0xA1)];
  unsigned int v326 = v321 ^ ((BYTE1(v292) ^ 0xBB) + 877750223 + *(_DWORD *)(v225 + 4 * (BYTE1(v292) ^ 0xCBu))) ^ (692122414 - (v321 & 0x200C44C) + ((v321 >> 1) & 0x53B76667)) ^ *(_DWORD *)(v228 + 4 * (BYTE2(v310) ^ 0xD3u)) ^ (v324 + 1932180705 - ((2 * v324) & 0xE65579C2));
  int v327 = *(_DWORD *)&v226[4 * (v308 ^ 0x62)];
  int v328 = v313 ^ v496 ^ (v315 + 1722777721);
  unsigned int v329 = v327 - 2 * ((v327 + 428342410) & 0x10D9669B ^ v327 & 1) + 1247896356;
  int v330 = v320 - 1409156732 - ((2 * v320) & 0x5803F308);
  unsigned int v331 = v325 ^ 0x42D02727 ^ *(_DWORD *)(v228 + 4 * (BYTE2(v292) ^ 0x59u)) ^ ((BYTE1(v307) ^ 0x68)
                                                                              + 877750223
                                                                              + *(_DWORD *)(v225
                                                                                          + 4 * (BYTE1(v307) ^ 0x18u))) ^ v329 ^ (692122414 - ((v325 ^ 0x42D02727) & 0x200C44C) + (((v325 ^ 0x42D02727u) >> 1) & 0x53B76667)) ^ (~(2 * (((v329 >> 4) ^ (v329 >> 1) ^ 0x9612524) & 0x10D9669B ^ ((v329 >> 4) ^ (v329 >> 1)) & 1)) + ((v329 >> 4) ^ (v329 >> 1) ^ 0x9612524) + 282683035);
  int v332 = (((2 * ((v482 ^ v326) & 0x71E62F6)) | 0xF6774B32) - ((v482 ^ v326) & 0x71E62F6) - 2067506585) ^ (v482 ^ v326) & 0xE3BD4D28;
  unsigned int v333 = (v332 & 0x167F4CC4 ^ 0x6440805) + (v332 & 0xE980A33B) - 1;
  unsigned int v334 = v331 - ((2 * v331) & 0xDB98524);
  int v335 = ((v473 ^ v333) + v477) ^ ((v333 ^ 0x62205F2A) + 1);
  unsigned int v336 = (v333 ^ 0xF88D2F61 ^ (v335 - ((2 * v335) & 0xCAA51F68) + 1699909556))
       + (((v326 ^ HIDWORD(v504)) & 0x1B5CD021 | HIDWORD(v482)) ^ 0x82320D29);
  unsigned int v337 = *(_DWORD *)&v224[4 * ((v328 ^ 0xEABC14C9) >> 24)] ^ 0x42D02727;
  unsigned int v338 = v336 - ((2 * v336) & 0x413BCE7C) - 1600264386;
  unsigned int v339 = v330 ^ v502;
  unsigned int v340 = (v334 + 115131026) ^ HIDWORD(v495);
  int v341 = *(_DWORD *)&v226[4 * (((v334 - 110) ^ BYTE4(v495)) ^ 0x2D)];
  int v342 = *(_DWORD *)(v228 + 4 * (((v330 ^ v502) >> 16) ^ 0x2Cu)) ^ v337 ^ (692122414 - (v337 & 0x200C44C) + ((v337 >> 1) & 0x53B76667));
  unsigned int v343 = v341 - ((2 * v341 + 856684820) & 0x3F3C6042) + 1495674027;
  int v344 = v342 ^ (v343 >> 1) ^ (v343 >> 4) ^ 0xE36FB12 ^ (*(_DWORD *)(v225 + 4 * (BYTE1(v338) ^ 0x82u))
                                                       + (BYTE1(v338) ^ 0xF2)
                                                       + 877750223);
  int v345 = (v344 - ((2 * v344) & 0x3F3C6042) + 530460705) ^ v343;
  unsigned int v346 = *(_DWORD *)&v224[4 * (HIBYTE(v339) ^ 0x20)] ^ 0x42D02727;
  int v347 = *(_DWORD *)&v226[4 * (v328 ^ 0x44)];
  unsigned int v348 = v347 - ((2 * v347 + 856684820) & 0x355D8F08) + 1412875278;
  int v349 = *(_DWORD *)(v228 + 4 * (BYTE2(v340) ^ 0xCEu));
  HIDWORD(v350) = v349 ^ 0x940F32E;
  LODWORD(v350) = v349 ^ 0x20000000;
  int v351 = HIDWORD(v472) ^ v346 ^ (692122414 - (v346 & 0x200C44C) + ((v346 >> 1) & 0x53B76667)) ^ v348 ^ (((v348 >> 4) ^ (v348 >> 1) ^ 0xCFD8FBA) + 447661957 + ~((2 * ((v348 >> 4) ^ (v348 >> 1) ^ 0xCFD8FBA)) & 0x355D8F08)) ^ *(_DWORD *)(v228 + 4 * (BYTE2(v338) ^ 0xDDu)) ^ (*(_DWORD *)(v225 + 4 * (BYTE1(v340) ^ 2u)) + (BYTE1(v340) ^ 0x72) + 877750223);
  int v352 = *(_DWORD *)&v226[4 * (v339 ^ 0xF)];
  unsigned int v353 = v352 - ((2 * v352 + 1930426644) & 0xBE5FDE04) - 1732777076;
  unsigned int v354 = *(_DWORD *)&v224[4 * (HIBYTE(v340) ^ 0xF2)] ^ 0x42D02727;
  int v355 = *(_DWORD *)&v226[4 * (v338 ^ 0x91)];
  unsigned int v356 = v355 - ((2 * v355 + 51378452) & 0x66B055E) + 1019051833;
  int v357 = v472 ^ *(_DWORD *)(v228 + 4 * (BYTE2(v328) ^ 0x23u)) ^ v354 ^ (692122414
                                                                        - (v354 & 0x200C44C)
                                                                        + ((v354 >> 1) & 0x53B76667)) ^ (*(_DWORD *)(v225 + 4 * (BYTE1(v339) ^ 0x77u)) + (BYTE1(v339) ^ 7) + 877750223) ^ v356 ^ (((v356 >> 4) ^ (v356 >> 1) ^ 0x1A9997D) - ((2 * ((v356 >> 4) ^ (v356 >> 1) ^ 0x1A9997D)) & 0x66B055E) + 53838511);
  unsigned int v358 = *(_DWORD *)&v224[4 * (HIBYTE(v338) ^ 0x97)] ^ 0x42D02727;
  unsigned int v359 = v358 ^ HIDWORD(v492) ^ (((unsigned __int16)(v328 ^ 0x14C9) >> 8)
                               + 877750223
                               + *(_DWORD *)(v225
                                           + 4 * (((unsigned __int16)(v328 ^ 0x14C9) >> 8) ^ 0x70u))) ^ (v358 >> 1) & 0x53B76667 ^ (((v350 >> 28) ^ 0xBEF43C6F) << 28) ^ (((v350 >> 28) ^ 0xBEF43C6F) >> 4);
  unsigned int v360 = (v345 - 202830872 - ((2 * v345) & 0xE7D217D0)) ^ v495;
  unsigned int v361 = v359 ^ v353 ^ (((v353 >> 4) ^ (v353 >> 1) ^ 0x2A650971)
                      - ((2 * ((v353 >> 4) ^ (v353 >> 1) ^ 0x2A650971)) & 0xBE5FDE04)
                      + 1596976898);
  unsigned int v362 = *(_DWORD *)&v224[4 * (HIBYTE(v360) ^ 6)] ^ 0x42D02727;
  unsigned int v363 = (v357 + 990102248 - ((2 * v357) & 0x760785D0)) ^ HIDWORD(v501);
  int v364 = *(_DWORD *)&v226[4 * (v363 ^ 0x8D)];
  int v365 = v364 - ((2 * v364 + 1930426644) & 0x627D0360);
  unsigned int v366 = (v351 - 1078218340 - ((2 * v351) & 0x7F776338)) ^ v504;
  unsigned int v367 = *(_DWORD *)(v228 + 4 * (BYTE2(v366) ^ 0x90u)) ^ v362 ^ (692122414
                                                                 - (v362 & 0x200C44C)
                                                                 + ((v362 >> 1) & 0x53B76667)) ^ ((v365 + 1791393338) >> 4) ^ ((v365 + 1791393338) >> 1) ^ (*(_DWORD *)(v225 + 4 * (BYTE1(v361) ^ 0x41u)) + (BYTE1(v361) ^ 0x31) + 877750223) ^ 0xF03E4901;
  int v368 = (v367 - ((2 * v367) & 0x627D0360) + 826180016) ^ (v365 + 1791393338);
  unsigned int v369 = *(_DWORD *)&v224[4 * (HIBYTE(v366) ^ 0xB4)] ^ 0x42D02727;
  int v370 = *(_DWORD *)&v226[4 * (v360 ^ 0x12)];
  unsigned int v371 = v370 + 660166093 + ~((2 * v370 + 1930426644) & 0xDBA2B284);
  int v372 = *(_DWORD *)(v228 + 4 * (BYTE2(v361) ^ 0x21u)) ^ v369 ^ (692122414
                                                                 - (v369 & 0x200C44C)
                                                                 + ((v369 >> 1) & 0x53B76667)) ^ (v371 >> 1) ^ (v371 >> 4) ^ (*(_DWORD *)(v225 + 4 * (BYTE1(v363) ^ 6u)) + (BYTE1(v363) ^ 0x76) + 877750223) ^ 0x7835B935;
  unsigned int v373 = v371 ^ HIDWORD(v487) ^ (v372 - ((2 * v372) & 0xDBA2B284) - 305047230);
  unsigned int v374 = *(_DWORD *)&v224[4 * (HIBYTE(v361) ^ 0xFC)] ^ 0x42D02727;
  int v375 = *(_DWORD *)&v226[4 * (((v351 - 100 - ((2 * v351) & 0x38)) ^ v504) ^ 0xAB)];
  unsigned int v376 = v375 - ((2 * v375 + 1930426644) & 0x796DA6E6) - 163655683;
  int v377 = HIDWORD(v471) ^ v374 ^ (692122414 - (v374 & 0x200C44C) + ((v374 >> 1) & 0x53B76667)) ^ v376 ^ *(_DWORD *)(v228 + 4 * (BYTE2(v363) ^ 0xE0u)) ^ (((v376 >> 4) ^ (v376 >> 1) ^ 0x5590048E) - ((2 * ((v376 >> 4) ^ (v376 >> 1) ^ 0x5590048E)) & 0x796DA6E6) - 1128869005) ^ (*(_DWORD *)(v225 + 4 * (BYTE1(v360) ^ 0xCEu)) + (BYTE1(v360) ^ 0xBE) + 877750223);
  unsigned int v378 = *(_DWORD *)&v224[4 * (HIBYTE(v363) ^ 0x75)] ^ 0x42D02727;
  int v379 = *(_DWORD *)&v226[4 * (v361 ^ 0xEB)];
  unsigned int v380 = v379 - ((2 * v379 + 1930426644) & 0xD689B21A) + 617403799;
  unsigned int v381 = *(_DWORD *)(v228 + 4 * (BYTE2(v360) ^ 0x96u)) ^ HIDWORD(v494) ^ v378 ^ (*(_DWORD *)(v225
                                                                                             + 4
                                                                                             * (BYTE1(v366) ^ 0x4Du))
                                                                                 + (BYTE1(v366) ^ 0x3D)
                                                                                 + 877750223) ^ v380 ^ (692122414 - (v378 & 0x200C44C) + ((v378 >> 1) & 0x53B76667)) ^ (((v380 >> 4) ^ (v380 >> 1) ^ 0x7B162116) - ((2 * ((v380 >> 4) ^ (v380 >> 1) ^ 0x7B162116)) & 0xD689B21A) - 347809523);
  int v382 = ((HIDWORD(v481) ^ v368) + (v368 ^ 0x12625A44) + 1) ^ HIDWORD(v476);
  unsigned int v383 = (v481 ^ (v382 - ((2 * v382) & 0x477A8F88) - 1547876412)) + (v368 ^ 0x12625A44);
  unsigned int v384 = v377 - 496386918 - ((2 * v377) & 0xC4D37934);
  unsigned int v385 = *(_DWORD *)&v224[4 * (HIBYTE(v383) ^ 0x1E)] ^ 0x42D02727;
  int v386 = *(_DWORD *)&v226[4 * (v381 ^ 0xAD)];
  unsigned int v387 = v384 ^ v503;
  unsigned int v388 = v386 - ((2 * v386 + 319813908) & 0x124FE822) + 1118826651;
  int v389 = *(_DWORD *)(v228 + 4 * (BYTE2(v373) ^ 0x73u)) ^ v385 ^ (692122414
                                                                 - (v385 & 0x200C44C)
                                                                 + ((v385 >> 1) & 0x53B76667)) ^ (v388 >> 1) ^ (v388 >> 4) ^ (*(_DWORD *)(v225 + 4 * (((unsigned __int16)(v384 ^ v503) >> 8) ^ 0x2Du)) + (((unsigned __int16)(v384 ^ v503) >> 8) ^ 0x5D) + 877750223) ^ 0x4018549;
  int v390 = v389 - ((2 * v389) & 0x124FE822);
  unsigned int v391 = *(_DWORD *)&v224[4 * (HIBYTE(v373) ^ 0xF0)] ^ 0x42D02727;
  int v392 = *(_DWORD *)&v226[4 * (v383 ^ 0x1A)];
  unsigned int v393 = v392 - 2 * ((v392 + 965213322) & 0x680769BF ^ v392 & 1) + 563045960;
  int v394 = *(_DWORD *)(v228 + 4 * (BYTE2(v387) ^ 0x81u)) ^ v391 ^ (692122414
                                                                 - (v391 & 0x200C44C)
                                                                 + ((v391 >> 1) & 0x53B76667)) ^ (v393 >> 1) ^ (v393 >> 4) ^ (*(_DWORD *)(v225 + 4 * (((unsigned __int16)(v381 ^ 0xB020) >> 8) ^ 0x70u)) + ((unsigned __int16)(v381 ^ 0xB020) >> 8) + 877750223) ^ 0x7A83C244;
  unsigned int v395 = (v394 - ((2 * v394) & 0xD00ED37C) - 402167362) ^ v393;
  unsigned int v396 = *(_DWORD *)&v224[4 * (HIBYTE(v387) ^ 0xB6)] ^ 0x42D02727;
  int v397 = *(_DWORD *)&v226[4 * (v373 ^ 0x49)];
  unsigned int v398 = v397 - ((2 * v397 + 1930426644) & 0xEBEBFDB8) + 796785510;
  unsigned int v399 = *(_DWORD *)&v224[4 * ((v381 ^ 0x558DB020) >> 24)] ^ 0x42D02727;
  unsigned int v400 = v399 ^ (692122414 - (v399 & 0x200C44C) + ((v399 >> 1) & 0x53B76667)) ^ (*(_DWORD *)(v225
                                                                                           + 4 * (BYTE1(v373) ^ 0x4Bu))
                                                                               + (BYTE1(v373) ^ 0xB03AF723)
                                                                               - 2078904137
                                                                               + (~(v373 >> 7) & 0x30)) ^ *(_DWORD *)(v228 + 4 * (BYTE2(v383) ^ 4u));
  int v401 = *(_DWORD *)&v226[4 * (v387 ^ 0xEC)];
  unsigned int v402 = *(_DWORD *)(v228 + 4 * (BYTE2(v381) ^ 0x12u)) ^ HIDWORD(v493) ^ v396 ^ (692122414
                                                                                 - (v396 & 0x200C44C)
                                                                                 + ((v396 >> 1) & 0x53B76667)) ^ (((((v398 >> 4) ^ (v398 >> 1) ^ 0x75A5A083) - ((2 * ((v398 >> 4) ^ (v398 >> 1) ^ 0x75A5A083)) & 0x6BEBFDB8) + 1979055836) ^ v398) & 0x4D878F3D | ((v398 >> 4) ^ (v398 >> 1) ^ 0x75A5A083) & 0x327870C2 ^ v398 & 0xB27870C2) ^ (*(_DWORD *)(v225 + 4 * (BYTE1(v383) ^ 0x4Eu)) + (BYTE1(v383) ^ 0x3E) + 877750223);
  unsigned int v403 = v401 - ((2 * v401 + 1930426644) & 0x610474DC) - 368429320;
  int v404 = v471 ^ (v403 >> 4) ^ (v403 >> 1) ^ 0xA5588B8C ^ (v400 + 830280328 - ((2 * v400) & 0x62FA2510));
  int v405 = (v404 - 1333642641 + ~((2 * v404) & 0x610474DC)) ^ v403;
  int v406 = HIDWORD(v480) ^ (v395 + 264655881 - ((2 * v395) & 0x1F8CA812));
  int v407 = (v480 ^ ((((v395 ^ 0xEBB2E1C2) + v406 + 1) ^ v476)
                + 264655881
                - ((2 * (((v395 ^ 0xEBB2E1C2) + v406 + 1) ^ v476)) & 0x1F8CA812)))
       + (v395 ^ 0xEBB2E1C2);
  unsigned int v408 = HIDWORD(v479) ^ (v407 - ((2 * v407) & 0xA75931E0) + 1403820272);
  int v409 = v388 ^ v494 ^ (v390 + 153613329) ^ 0x1A9E1FD7 ^ -(v388 ^ v494 ^ (v390 + 153613329) ^ 0x1A9E1FD7) ^ ((v388 ^ v494 ^ (v390 + 153613329) ^ 0x7F64160) - 493379255);
  int v410 = v409 - 2 * ((v409 + 580362568) & 0x29513657 ^ v409 & 4) - 1947674725;
  unsigned int v411 = (v408 ^ 0x4FA99F91) >> (v307 & 8) >> (v307 & 8 ^ 8);
  unsigned int v412 = *(_DWORD *)&v224[4 * ((v410 ^ 0xFD5136DE) >> 24)] ^ 0x42D02727;
  unsigned int v413 = (v405 + 830280328 - ((2 * v405) & 0x62FA2510)) ^ HIDWORD(v503);
  int v414 = *(_DWORD *)&v226[4 * (((v405 - 120 - ((2 * v405) & 0x10)) ^ BYTE4(v503)) ^ 0x56)];
  unsigned int v415 = v414 - 2 * ((v414 + 965213322) & 0x775FF81F ^ v414 & 1) + 820507816;
  int v416 = *(_DWORD *)(v228 + 4 * (BYTE2(v408) ^ 0x36u)) ^ v412 ^ (692122414
                                                                 - (v412 & 0x200C44C)
                                                                 + ((v412 >> 1) & 0x53B76667)) ^ (v415 >> 1) ^ (v415 >> 4) ^ (*(_DWORD *)(v225 + 4 * (BYTE1(v402) ^ 0x8Cu)) + (BYTE1(v402) ^ 0xFC) + 877750223) ^ 0x74DA038E;
  unsigned int v417 = v415 ^ v491 ^ (v416 - ((2 * v416) & 0xEEBFF03C) - 144705506);
  unsigned int v418 = *(_DWORD *)&v224[4 * (HIBYTE(v408) ^ 0x1B)] ^ 0x42D02727;
  int v419 = *(_DWORD *)&v226[4 * (v410 ^ 0xDE)];
  unsigned int v420 = v419 - 2 * ((v419 + 428342410) & 0x19FB15EB ^ v419 & 1) - 746384780;
  unsigned int v421 = *(_DWORD *)&v224[4 * (HIBYTE(v402) ^ 0x19)] ^ 0x42D02727;
  int v422 = *(_DWORD *)&v226[4 * (v408 ^ 0x1C)];
  unsigned int v423 = v422 - ((2 * v422 + 1930426644) & 0x55D3736E) + 1685173825;
  unsigned int v424 = *(_DWORD *)(v228 + 4 * (BYTE2(v413) ^ 0xF7u)) ^ HIDWORD(v490) ^ v421 ^ (692122414
                                                                                 - (v421 & 0x200C44C)
                                                                                 + ((v421 >> 1) & 0x53B76667)) ^ v423 ^ (*(_DWORD *)(v225 + 4 * (BYTE1(v410) ^ 0x46u)) + (BYTE1(v410) ^ 0x36) + 877750223) ^ (((v423 >> 4) ^ (v423 >> 1) ^ 0x17DA4740) + 719960503 - 2 * (((v423 >> 4) ^ (v423 >> 1) ^ 0x17DA4740) & 0x2AE9B9BF ^ ((v423 >> 4) ^ (v423 >> 1)) & 8));
  int v425 = *(_DWORD *)&v224[4 * (HIBYTE(v413) ^ 0x6C)];
  int v426 = *(_DWORD *)&v226[4 * (v402 ^ 0x74)];
  int v427 = *(_DWORD *)(v225 + 4 * (v411 ^ 0x70u)) + v411 + 877750223;
  int v428 = *(_DWORD *)(v228 + 4 * ~HIWORD(v402)) ^ v488 ^ v418 ^ v420;
  int v429 = ((v420 >> 4) ^ (v420 >> 1) ^ 0x45623BAB)
       - 2 * (((v420 >> 4) ^ (v420 >> 1) ^ 0x45623BAB) & 0x19FB15EE ^ ((v420 >> 4) ^ (v420 >> 1)) & 4)
       - 1711598102;
  unsigned int v430 = v426 - ((2 * v426 + 856684820) & 0x25BF9EB6) + 1281870821;
  unsigned int v431 = v428 ^ (692122414 - (v418 & 0x200C44C) + ((v418 >> 1) & 0x53B76667)) ^ (*(_DWORD *)(v225
                                                                                           + 4 * (BYTE1(v413) ^ 0x22u))
                                                                               + (BYTE1(v413) ^ 0x52)
                                                                               + 877750223) ^ v429;
  unsigned int v432 = *(_DWORD *)(v228
                   + 4 * ((BYTE2(v410) ^ 0x51 ^ -(BYTE2(v410) ^ 0x51) ^ ((BYTE2(v410) ^ 0xFFFFFF31) + 160)) + 159)) ^ v425 ^ 0x42D02727 ^ (692122414 - ((v425 ^ 0x42D02727) & 0x200C44C) + (((v425 ^ 0x42D02727u) >> 1) & 0x53B76667)) ^ (v430 >> 1) ^ (v430 >> 4) ^ 0x8421B58 ^ v427;
  unsigned int v433 = v430 ^ v493 ^ (v432 - ((2 * v432) & 0x25BF9EB6) + 316657499);
  int v434 = *(_DWORD *)(v45 - 256);
  uint64_t v435 = (uint64_t)*(&off_1F26D60E0 + v434 - 1216);
  int v436 = *(_DWORD *)(v435 + 4 * (HIBYTE(v417) ^ 0xE));
  HIDWORD(v350) = v436 ^ 0xB;
  LODWORD(v350) = v436 ^ 0xD156C2C0;
  int v437 = v350 >> 5;
  v438 = (char *)*(&off_1F26D60E0 + v434 - 1239) - 8;
  int v439 = *(_DWORD *)&v438[4 * (BYTE1(v424) ^ 0xA0)];
  HIDWORD(v350) = v439 ^ 0x483D4;
  LODWORD(v350) = v439 ^ 0xC5100000;
  unsigned int v440 = v350 >> 20;
  uint64_t v441 = (uint64_t)*(&off_1F26D60E0 + v470);
  int v442 = *(_DWORD *)(v441 + 4 * (v433 ^ 0x22u));
  HIDWORD(v350) = v442 ^ 0xA5E;
  LODWORD(v350) = v442 ^ 0xE1B7C000;
  HIDWORD(v512) = *(_DWORD *)(v435 + 4 * (HIBYTE(v431) ^ 0x7E));
  LODWORD(v512) = *(_DWORD *)(v435 + 4 * (HIBYTE(v424) ^ 0x33));
  int v443 = *(_DWORD *)(v435 + 4 * (HIBYTE(v433) ^ 0xCD));
  int v444 = BYTE2(v431) ^ 0xCC;
  uint64_t v445 = (uint64_t)*(&off_1F26D60E0 + HIDWORD(v470));
  int v446 = *(_DWORD *)(v445 + 4 * (BYTE2(v431) ^ 0x52u));
  int v447 = BYTE2(v424);
  HIDWORD(v507) = *(_DWORD *)(v445 + 4 * (BYTE2(v424) ^ 0x61u));
  int v448 = BYTE2(v433);
  LODWORD(v507) = *(_DWORD *)(v445 + 4 * (BYTE2(v433) ^ 0xEBu));
  LODWORD(v445) = *(_DWORD *)(v445 + 4 * (BYTE2(v417) ^ 0x7Eu));
  int v449 = *(_DWORD *)&v438[4 * (BYTE1(v433) ^ 0x56)];
  int v450 = *(_DWORD *)&v438[4 * (BYTE1(v417) ^ 0xC9)];
  LODWORD(v438) = *(_DWORD *)&v438[4 * (BYTE1(v431) ^ 0x9C)];
  int v451 = *(_DWORD *)(v441 + 4 * (v417 ^ 0xD6u));
  LODWORD(v435) = *(_DWORD *)(v441 + 4 * (v431 ^ 0x46u));
  int v452 = *(_DWORD *)(v441 + 4 * (v424 ^ 0xACu));
  unsigned int v453 = v437 ^ v479 ^ v446 ^ v440 ^ (v350 >> 12) ^ (v440 >> 3) & 0xED2CCE5 ^ (4 * (v350 >> 12)) ^ (v444
                                                                                                  + 1241672196
                                                                                                  - ((2 * v444 + 1353178) & 0x10262E));
  uint64_t v454 = (v437 ^ v479 ^ v446 ^ v440 ^ (v350 >> 12) ^ (v440 >> 3) & 0xE5 ^ (4 * (v350 >> 12)) ^ (v444 + 4 - ((2 * v444 - 38) & 0x2E)) ^ v444);
  uint64_t v455 = (uint64_t)*(&off_1F26D60E0 + HIDWORD(v469));
  *(unsigned char *)(*(void *)(v45 - 248) + 3) = (107 - 29 * *(unsigned char *)(v455 + (v454 ^ 8))) ^ 0xFD;
  HIDWORD(v350) = v443 ^ 0xB;
  LODWORD(v350) = v443 ^ 0xD156C2C0;
  LODWORD(v454) = v350 >> 5;
  HIDWORD(v350) = v438 ^ 0x483D4;
  LODWORD(v350) = v438 ^ 0xC5100000;
  LODWORD(v438) = v350 >> 20;
  HIDWORD(v350) = v452 ^ 0xA5E;
  LODWORD(v350) = v452 ^ 0xE1B7C000;
  uint64_t v456 = v478 ^ v493 ^ BYTE2(v417) ^ 0xE0 ^ ((BYTE2(v417) ^ 0xE0) + 13259501) ^ v445 ^ v438 ^ (v454 + 1228412695 - ((2 * v454) & 0x92702E2E)) ^ (v350 >> 12) ^ (v438 >> 3) & 0xED2CCE5 ^ (4 * (v350 >> 12));
  v457 = (char *)*(&off_1F26D60E0 + v469) - 4;
  *(unsigned char *)(*(void *)(v45 - 248) + 12) = (v457[BYTE3(v456) ^ 0x15] - 125) ^ 0x5E;
  v458 = (char *)*(&off_1F26D60E0 + HIDWORD(a5)) - 4;
  *(unsigned char *)(*(void *)(v45 - 248) + 1) = v458[BYTE2(v453) ^ 0xF5] ^ 3;
  LODWORD(v438) = ((v456 >> 8) ^ 0x60) + ((v456 >> 8) ^ 0x21) + 1;
  LOBYTE(v442) = (_BYTE)v438 - ((2 * (_BYTE)v438) & 0xA2);
  int v459 = *(_DWORD *)(v45 - 256);
  uint64_t v460 = (uint64_t)*(&off_1F26D60E0 + v459 - 1185);
  *(unsigned char *)(*(void *)(v45 - 248) + 14) = *(unsigned char *)(v460 + (BYTE1(v456) ^ 0xF8)) ^ (v442 + 81) ^ 0xEF;
  HIDWORD(v350) = v512 ^ 0xB;
  LODWORD(v350) = v512 ^ 0xD156C2C0;
  int v461 = v350 >> 5;
  HIDWORD(v350) = v450 ^ 0x483D4;
  LODWORD(v350) = v450 ^ 0xC5100000;
  LODWORD(v454) = v350 >> 20;
  HIDWORD(v350) = v435 ^ 0xA5E;
  LODWORD(v350) = v435 ^ 0xE1B7C000;
  LODWORD(v435) = v507 ^ v478 ^ v454 ^ (v350 >> 12) ^ (v454 >> 3) & 0xED2CCE5 ^ v461 ^ (4 * (v350 >> 12)) ^ ((v448 ^ 0x75) + 1241672196 + ((2 * (v448 ^ 0x75) + 474) & 0x22E ^ 0xFFEFDBFF) + 1);
  *(unsigned char *)(*(void *)(v45 - 248) + 8) = (v457[BYTE3(v435) ^ 0xF4] - 125) ^ 0xB1;
  *(unsigned char *)(*(void *)(v45 - 248) + 9) = v458[BYTE2(v435) ^ 0xB2] ^ 0xF8;
  HIDWORD(v350) = HIDWORD(v512) ^ 0xB;
  LODWORD(v350) = HIDWORD(v512) ^ 0xD156C2C0;
  int v462 = (v350 >> 5) + 1228412695 - ((2 * (v350 >> 5)) & 0x92702E2E);
  HIDWORD(v350) = v449 ^ 0x483D4;
  LODWORD(v350) = v449 ^ 0xC5100000;
  LODWORD(v454) = v350 >> 20;
  HIDWORD(v350) = v451 ^ 0xA5E;
  LODWORD(v350) = v451 ^ 0xE1B7C000;
  unsigned int v463 = HIDWORD(v478) ^ v454 ^ HIDWORD(v507) ^ v462 ^ (v350 >> 12) ^ (v454 >> 3) & 0xED2CCE5 ^ (4 * (v350 >> 12)) ^ (13259756 - v447);
  *(unsigned char *)(*(void *)(v45 - 248) + 11) = (107
                                             - 29 * *(unsigned char *)(v455 + ((v435 ^ v448 ^ 0x75) ^ 0x1BLL))) ^ 8;
  *(unsigned char *)(*(void *)(v45 - 248) + 5) = v458[((v463 ^ v447 ^ 0x8EEBC546) >> 16) ^ 0x65] ^ 0xBF;
  v464 = *(unsigned char **)(v45 - 248);
  v464[15] = (107 - 29 * *(unsigned char *)(v455 + (v456 ^ 0xACLL))) ^ 0x99;
  unsigned char *v464 = (v457[HIBYTE(v453) ^ 0x89] - 125) ^ 0x87;
  int v465 = ((v453 >> 8) ^ 0x85) + ((v453 >> 8) ^ 0xC4) + 1;
  v464[2] = (v465 + (~(2 * v465) | 0x5D) + 82) ^ 0x56 ^ *(unsigned char *)(v460 + (BYTE1(v453) ^ 0x1DLL));
  uint64_t v466 = *(unsigned __int8 *)(v460 + (((unsigned __int16)(v463 ^ v447 ^ 0xC546) >> 8) ^ 0x82));
  unsigned int v467 = (((v463 ^ v447 ^ 0x8EEBC546) >> 8) ^ 0x1A) + (((v463 ^ v447 ^ 0x8EEBC546) >> 8) ^ 0x5B) + 1;
  v464[6] = (v467 - ((2 * v467) & 0xA2) + 81) ^ 0xB7 ^ v466;
  v464[7] = (107 - 29 * *(unsigned char *)(v455 + ((v463 ^ v447) ^ 0x2FLL))) ^ 0x4C;
  v464[10] = ((BYTE1(v435) ^ 0x25)
            + (BYTE1(v435) ^ 0x64)
            + 1
            - ((2 * ((BYTE1(v435) ^ 0x25) + (BYTE1(v435) ^ 0x64) + 1)) & 0xA2)
            + 81) ^ 0x93 ^ *(unsigned char *)(v460 + (BYTE1(v435) ^ 0xBDLL));
  v464[v539] = (v457[HIBYTE(v463) ^ 0x6DLL] - 125) ^ 0xC7;
  v464[13] = v458[BYTE2(v456) ^ 0xC4] ^ 0x58;
  LODWORD(v489) = v526 ^ 0xF77128B0;
  return (*(uint64_t (**)(void, uint64_t, uint64_t, void, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t))(a44 + 8 * (((HIDWORD(a42) > 0x10) | (4 * (HIDWORD(a42) > 0x10))) ^ (v459 - 712))))((v435 >> 8) ^ 0x64, v466, 196, v435 ^ v448 ^ 0x75, (2 * v467) & 0xA2, v456, 0, 4294967267, a3, a4, a5, v469, v470, v471, v472, v473, v474, v475, v476,
           v477,
           v478,
           v479,
           v480,
           v481,
           v482,
           v483,
           v484,
           v485,
           v486,
           v487,
           v488,
           v489,
           v490,
           v491,
           v492,
           v493,
           v494,
           v495,
           v496,
           v497,
           v498,
           v499,
           v500,
           v501,
           v502,
           v503,
           v504,
           a42,
           v505,
           a44,
           v507,
           v512,
           3,
           8,
           9,
           12,
           1,
           0,
           2,
           11,
           14,
           15);
}

uint64_t sub_1D0AD342C@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v12 = v3 + 1;
  *(unsigned char *)(a2 + (v6 ^ (v7 + 231)) + v12) = *(unsigned char *)(v11 + v4 + v9)
                                                         + (v10 | ~(2 * *(unsigned char *)(v11 + v4 + v9)))
                                                         - 7;
  return (*(uint64_t (**)(void))(a3 + 8 * ((((v8 + v12 + 1) < 0x40) * a1) ^ v5)))();
}

uint64_t sub_1D0AD3434(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4
                                                              + 8
                                                              * ((43
                                                                * (a4 + 1698521223 + ((a4 - 134) | 9u) - 1698521462 > 0xF)) ^ (a4 + 1230))))(a1, a2, v5 - 160);
}

uint64_t sub_1D0AD3488(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  uint64_t v13 = (v9 + v10 + v8 + v6 - a3);
  *(void *)(v5 - 7 + v13) = *(void *)(v11 - 7 + v13);
  return (*(uint64_t (**)(void))(v12 + 8 * (((a3 - (v7 & 0xFFFFFFF8) == -8) * (a5 - 154)) ^ a5)))();
}

uint64_t sub_1D0AD34E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,unsigned int a35)
{
  unsigned int v37 = ((a4 + 656) ^ 0x395845DD ^ a34 & 0x4C614E6F) + v35;
  BOOL v39 = v37 > 0xACB26B38 && v37 <= a35;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * (int)((a4 + 1302) ^ (2 * v39))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_1D0AD354C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8 * ((1743 * (v20 + ((v18 - 1911247872) & 0x71EB53FF) == 880)) ^ (v18 + 105))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

void sub_1D0AD3568()
{
  *(_DWORD *)(v1 + 8) = v0;
}

uint64_t sub_1D0AD35AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((16 * (a2 + 1 != v7 + 40)) | (32 * (a2 + 1 != v7 + 40))) ^ a6)))();
}

uint64_t sub_1D0AD3660@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W5>, int a6@<W8>)
{
  *(unsigned char *)(v10 + (a6 ^ 0x20u) + v6 + a1) = *(unsigned char *)(v13 + (v11 + a5));
  unsigned int v14 = v11 + 1 + a2;
  int v15 = (v7 < v9) ^ (v14 < a3 + 242);
  BOOL v16 = v14 < v7;
  if (v15) {
    BOOL v16 = v7 < v9;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((v16 * a4) ^ v8)))();
}

uint64_t sub_1D0AD3678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,unint64_t *a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,unint64_t a56,unint64_t *a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v72 = *(unsigned __int8 *)(STACK[0x208] + 13);
  if (*(unsigned char *)(STACK[0x208] + 13))
  {
    if (v72 == 2)
    {
      a21 = a16;
      uint64_t v73 = a19;
    }
    else if (v72 == 1)
    {
      a21 = a14;
      uint64_t v73 = a15;
    }
    else
    {
      a21 = a18;
      uint64_t v73 = a17;
    }
  }
  else
  {
    a21 = a25;
    uint64_t v73 = a24;
  }
  a33 = v73;
  unint64_t v74 = STACK[0x208] + 14;
  a20 = &STACK[0x10B17FC23B8BCC54];
  a56 = v74;
  a57 = &STACK[0x10B17FC23B8BCCAC];
  uint64_t v75 = a72;
  (*(void (**)(uint64_t, unint64_t *, uint64_t))(a72 + 12240))(a28, &STACK[0xD88], 144);
  unsigned int v76 = *(uint64_t (**)(uint64_t, unint64_t *, uint64_t))(v75 + 12240);
  a36 = &STACK[0xE18];
  uint64_t v77 = v76(a27, &STACK[0xE18], 16);
  a35 = 0;
  a39 = 0;
  a65 = &STACK[0x7AFA2E4D31C595AA];
  LODWORD(STACK[0x210]) = 2107899875;
  LODWORD(STACK[0x214]) = 19245624;
  LODWORD(STACK[0x224]) = 932381550;
  return (*(uint64_t (**)(uint64_t))(v75
                                            + 8
                                            * ((42 * ((((&a9 == (uint64_t *)-880) ^ 0xC535089C) & 1) == 0)) ^ 0x18B)))(v77);
}

uint64_t sub_1D0AD37C4@<X0>(char a1@<W2>, char a2@<W3>, int a3@<W4>, char a4@<W8>, int8x16_t a5@<Q0>, int8x8_t a6@<D1>)
{
  int v16 = a3 - 8;
  uint64_t v17 = (v14 + v16 + 8);
  v19.val[0].i64[0] = ((_BYTE)v14 + (_BYTE)v16 + 8) & 0xF;
  v19.val[0].i64[1] = (v13 + (_BYTE)v16 + 8) & 0xF;
  v19.val[1].i64[0] = (a4 + (_BYTE)v16 + 8) & 0xF;
  v19.val[1].i64[1] = (v11 + (_BYTE)v16 + 8) & 0xF;
  v19.val[2].i64[0] = (v9 + (_BYTE)v16 + 8) & 0xF;
  v19.val[2].i64[1] = (v12 + (_BYTE)v16 + a2 + 8) & 0xF;
  v19.val[3].i64[0] = (a1 + (_BYTE)v16 + 8) & 0xF;
  v19.val[3].i64[1] = (*(_DWORD *)(v15 - 256) + (_BYTE)v16 + 8) & 0xF;
  *(int8x8_t *)(*(void *)(v15 - 248) + v17) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v8 + (v17 & 0xF) - 7), *(int8x8_t *)(*(void *)(v15 - 240) + v17)), veor_s8(*(int8x8_t *)((v17 & 0xF) + v6 - 5), *(int8x8_t *)((v17 & 0xF) + v7 - 6))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v19, a5), a6)));
  return (*(uint64_t (**)(void))(STACK[0x268] + 8 * ((1728 * (*(_DWORD *)(v15 - 252) == v16)) ^ v10)))();
}

uint64_t sub_1D0AD37CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,__int16 a55,unsigned __int8 a56,unsigned __int8 a57)
{
  int v61 = (v58 + 557) | 0x180;
  unsigned int v62 = a57 ^ 0x1F;
  uint64_t v63 = *(unsigned __int8 *)(v57 - 12);
  uint64_t v64 = *(unsigned __int8 *)(v57 - 8);
  uint64_t v65 = *(unsigned __int8 *)(v57 - 4);
  uint64_t v66 = *(unsigned __int8 *)(v57 - 3);
  uint64_t v67 = *(unsigned __int8 *)(v57 - 7);
  uint64_t v68 = *(unsigned __int8 *)(v57 - 11);
  uint64_t v69 = *(unsigned __int8 *)(v57 - 15);
  uint64_t v94 = (((v58 + 45) | 0x80) ^ 0xAEu) % v62;
  uint64_t v70 = *(unsigned __int8 *)(v57 - 14);
  uint64_t v71 = *(unsigned __int8 *)(v57 - 6);
  uint64_t v72 = *(unsigned __int8 *)(v57 - 10);
  uint64_t v73 = *(unsigned __int8 *)(v57 - 2);
  uint64_t v74 = *(unsigned __int8 *)(v57 - 13);
  uint64_t v75 = *(unsigned __int8 *)(v57 - 9);
  uint64_t v76 = *(unsigned __int8 *)(v57 - 5);
  uint64_t v77 = *(unsigned __int8 *)(v57 - 1);
  unsigned __int8 v78 = *(unsigned char *)(v60 + ((v59 + 127) ^ (v59 + (v61 ^ 0x796) - 1084))) ^ *(unsigned char *)(*(a26 - 15)
                                                                                  + *(unsigned __int8 *)(v57 - 16));
  *(unsigned char *)(v57 - 16) = v78;
  unsigned __int8 v79 = *(unsigned char *)(v60 + ((v59 + 127) ^ (v59 + 3))) ^ *(unsigned char *)(*(a26 - 11) + v63);
  *(unsigned char *)(v57 - 12) = v79;
  LOBYTE(v63) = *(unsigned char *)(v60 + ((v59 + 127) ^ (v59 - 9))) ^ *(unsigned char *)(*(a26 - 7) + v64);
  *(unsigned char *)(v57 - 8) = v63;
  unsigned __int8 v80 = *(unsigned char *)(v60 + (int)((v59 + 127) & 0xFFFFFFF0 ^ (v59 + 3))) ^ *(unsigned char *)(*(a26 - 3) + v65);
  *(unsigned char *)(v57 - 4) = v80;
  LOBYTE(v64) = *(unsigned char *)(v60 + (int)((v59 + 127) & 0xFFFFFFF0 ^ (v59 + 4))) ^ *(unsigned char *)(*(a26 - 2) + v67);
  *(unsigned char *)(v57 - 3) = v64;
  LOBYTE(v67) = *(unsigned char *)(v60 + (int)((v59 + 127) & 0xFFFFFFF0 ^ v59)) ^ *(unsigned char *)(*(a26 - 6) + v68);
  *(unsigned char *)(v57 - 7) = v67;
  LOBYTE(v68) = *(unsigned char *)(v60 + ((v59 + 127) ^ (v59 + 4))) ^ *(unsigned char *)(*(a26 - 10) + v69);
  *(unsigned char *)(v57 - 11) = v68;
  LOBYTE(v69) = *(unsigned char *)(v60 + ((v59 + 127) ^ v59)) ^ *(unsigned char *)(*(a26 - 14) + v66);
  *(unsigned char *)(v57 - 15) = v69;
  LOBYTE(v71) = *(unsigned char *)(v60 + ((v59 + 127) ^ (v59 + 1))) ^ *(unsigned char *)(*(a26 - 13) + v71);
  *(unsigned char *)(v57 - 14) = v71;
  LOBYTE(v65) = *(unsigned char *)(v60 + (int)((v59 + 127) & 0xFFFFFFF0 ^ (v59 + 1))) ^ *(unsigned char *)(*(a26 - 5) + v70);
  *(unsigned char *)(v57 - 6) = v65;
  LOBYTE(v73) = *(unsigned char *)(v60 + ((v59 + 127) ^ (v59 + 5))) ^ *(unsigned char *)(*(a26 - 9) + v73);
  *(unsigned char *)(v57 - 10) = v73;
  LOBYTE(v72) = *(unsigned char *)(v60 + (int)((v59 + 127) & 0xFFFFFFF0 ^ (v59 + 5))) ^ *(unsigned char *)(*(a26 - 1) + v72);
  *(unsigned char *)(v57 - 2) = v72;
  LOBYTE(v75) = *(unsigned char *)(v60 + ((v59 + 127) ^ (v59 + 2))) ^ *(unsigned char *)(*(a26 - 12) + v75);
  *(unsigned char *)(v57 - 13) = v75;
  LOBYTE(v76) = *(unsigned char *)(v60 + ((v59 + 127) ^ (v59 + 6))) ^ *(unsigned char *)(*(a26 - 8) + v76);
  *(unsigned char *)(v57 - 9) = v76;
  unsigned __int8 v81 = *(unsigned char *)(v60 + (int)((v59 + 127) & 0xFFFFFFF0 ^ (v59 + 2))) ^ *(unsigned char *)(*(a26 - 4) + v77);
  *(unsigned char *)(v57 - 5) = v81;
  LOBYTE(v74) = *(unsigned char *)(v60 + (int)((v59 + 127) & 0xFFFFFFF0 ^ (v59 + 6))) ^ *(unsigned char *)(*a26 + v74);
  *(unsigned char *)(v57 - 1) = v74;
  uint64_t v82 = (void *)(a31 + ((unint64_t)(8 % (a56 ^ 0x1Fu)) << 7));
  int v83 = *(_DWORD *)(v82[148] + 4 * v69) ^ *(_DWORD *)(v82[147] + 4 * v78);
  CFTypeID v84 = v82 + 147;
  uint64_t v85 = v83 ^ (*(_DWORD *)(v82[149] + 4 * v71) ^ *(_DWORD *)(v82[150]
                                                                                            + 4 * v75));
  *(_DWORD *)(v57 - 16) = v85;
  int v86 = &v82[4 * (a57 != 30) + 147];
  uint64_t v87 = v86[1];
  unint64_t v88 = *(_DWORD *)(v87 + 4 * v68) ^ *(_DWORD *)(*v86 + 4 * v79) ^ (*(_DWORD *)(v86[2] + 4 * v73) ^ *(_DWORD *)(v86[3] + 4 * v76));
  *(_DWORD *)(v57 - 12) = v88;
  unsigned int v89 = &v84[4 * (2 % v62)];
  unint64_t v90 = *(_DWORD *)(v89[1] + 4 * v67) ^ *(_DWORD *)(*v89 + 4 * v63) ^ (*(_DWORD *)(v89[2] + 4 * v65) ^ *(_DWORD *)(v89[3] + 4 * v81));
  *(_DWORD *)(v57 - 8) = v90;
  unsigned int v91 = &v84[4 * v94];
  unint64_t v92 = *(_DWORD *)(v91[1] + 4 * v64) ^ *(_DWORD *)(*v91 + 4 * v80) ^ (*(_DWORD *)(v91[2] + 4 * v72) ^ *(_DWORD *)(v91[3] + 4 * v74));
  *(_DWORD *)(v57 - 4) = v92;
  return (*(uint64_t (**)(uint64_t, uint64_t, void *, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t))(a34 + 8 * v61))(1964422500, a34, a26, v92 >> 24, v90 >> 24, v88 >> 24, v87, v85, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1D0AD37D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,int a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  int v63 = 1449114341 * ((1856211865 - ((v61 - 136) | 0x6EA38B99) + ((v61 - 136) | 0x915C7466)) ^ 0x5E028D8D);
  *(void *)(v61 - 136) = &a58;
  *(void *)(v61 - 128) = &a42;
  *(void *)(v61 - 120) = v60;
  *(_DWORD *)(v61 - 112) = (v58 ^ 0x69BBCBF3) + ((2 * v58) & 0xBFBFFFDC ^ 0x2C886818) + 1941282110 + v63;
  *(_DWORD *)(v61 - 108) = (v59 - 887) ^ v63;
  (*(void (**)(uint64_t))(v62 + 8 * (v59 + 514)))(v61 - 136);
  unint64_t v64 = ((unint64_t)&a40 ^ 0xFFFBF6BDFF7FF6E7)
      + 0x7FE42FDBBFCE3C00
      + ((2 * (void)&a40) & 0xFFF7ED7BFEFFEDC0);
  *(unsigned char *)(v60 + 259) = ((v64 + 25) ^ 0xBA) * (v64 + 42);
  *(unsigned char *)(v60 + 258) = ((v64 + ((v59 + 70) & 0xFC ^ 0x6A)) ^ 0xBA) * (v64 + 43);
  return (*(uint64_t (**)(void))(a29 + 8 * v59))();
}

uint64_t sub_1D0AD394C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, unsigned __int8 a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,void *a39,void *a40,void *a41,void *a42,void *a43,void *a44,void *a45,void *a46,void *a47,void *a48,void *a49,void *a50,void *a51,void *a52,void *a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t (*a60)(void))
{
  char v64 = *(unsigned char *)(*a53 + (*(unsigned __int8 *)(v63 - 16) ^ 0xF8));
  *(unsigned char *)(v63 - 16) = v64 - ((2 * v64) & 0xF0) - 8;
  char v65 = *(unsigned char *)(*a52 + (*(unsigned __int8 *)(v63 - 12) ^ 0xF8));
  *(unsigned char *)(v63 - 12) = v65 - ((2 * v65) & 0xF0) - 8;
  *(unsigned char *)(v63 - 8) = *(unsigned char *)(*a51 + a4) + (~(2 * *(unsigned char *)(*a51 + a4)) | 0xF) - 7;
  *(unsigned char *)(v63 - 4) = *(unsigned char *)(*a50 + v60) + (~(2 * *(unsigned char *)(*a50 + v60)) | 0xF) - 7;
  char v66 = *(unsigned char *)(*a49 + (v61 ^ 0xF8));
  *(unsigned char *)(v63 - 3) = v66 - ((2 * v66) & 0xF0) - 8;
  char v67 = *(unsigned char *)(*a48 + (*(unsigned __int8 *)(v63 - 11) ^ 0xF8));
  *(unsigned char *)(v63 - 7) = v67 + (~(2 * v67) | 0xF) - 7;
  char v68 = *(unsigned char *)(*a47 + (*(unsigned __int8 *)(v63 - 15) ^ 0xF8));
  *(unsigned char *)(v63 - 11) = v68 - ((2 * v68) & 0xF0) - 8;
  char v69 = *(unsigned char *)(*a46 + (v62 ^ 0xF8));
  *(unsigned char *)(v63 - 15) = v69 - ((2 * v69) & 0xF0) - 8;
  uint64_t v70 = *(unsigned __int8 *)(v63 - 14);
  char v71 = *(unsigned char *)(*a45 + (a7 ^ 0xF8));
  *(unsigned char *)(v63 - 14) = v71 - ((2 * v71) & 0xF0) - 8;
  *(unsigned char *)(v63 - 6) = *(unsigned char *)(*a44 + (v70 ^ 0xF8)) - ((2 * *(unsigned char *)(*a44 + (v70 ^ 0xF8))) & 0xF0) - 8;
  uint64_t v72 = *(unsigned __int8 *)(v63 - 10);
  char v73 = *(unsigned char *)(*a43 + (*(unsigned __int8 *)(v63 - 2) ^ 0xF8));
  *(unsigned char *)(v63 - 10) = v73 - ((2 * v73) & 0xF0) - 8;
  *(unsigned char *)(v63 - 2) = *(unsigned char *)(*a42 + (v72 ^ 0xF8)) - ((2 * *(unsigned char *)(*a42 + (v72 ^ 0xF8))) & 0xF0) - 8;
  uint64_t v74 = *(unsigned __int8 *)(v63 - 13);
  char v75 = *(unsigned char *)(*a41 + (*(unsigned __int8 *)(v63 - 9) ^ 0xF8));
  *(unsigned char *)(v63 - 13) = v75 - ((2 * v75) & 0xF0) - 8;
  char v76 = *(unsigned char *)(*a40 + (*(unsigned __int8 *)(v63 - 5) ^ 0xF8));
  *(unsigned char *)(v63 - 9) = v76 + (~(2 * v76) | 0xF) - 7;
  char v77 = *(unsigned char *)(*a39 + (*(unsigned __int8 *)(v63 - 1) ^ 0xF8));
  *(unsigned char *)(v63 - 5) = v77 - ((2 * v77) & 0xF0) - 8;
  *(unsigned char *)(v63 - 1) = *(unsigned char *)(*a38 + (v74 ^ 0xF8)) - ((2 * *(unsigned char *)(*a38 + (v74 ^ 0xF8))) & 0xF0) - 8;
  return a60();
}

uint64_t sub_1D0AD3BC4(uint64_t a1, uint64_t a2, int a3)
{
  *(unsigned char *)(v4 + a1) = -31;
  return (*(uint64_t (**)(void))(v5 + 8 * ((94 * (a1 + ((a3 + 752923213) & 0xD31F4DA7) - 386 == v3)) ^ (a3 + 134))))();
}

uint64_t sub_1D0AD3C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  unint64_t v62 = a6 + ((v61 - 1376) ^ (v58 + 1378)) + v56;
  char v64 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v59 + 8 * (v61 - 1376));
  char v65 = &a55 + v55;
  char v77 = (_DWORD *)(a5 - 0x17B29E1307D1180CLL);
  int v66 = *(_DWORD *)(a5 - 0x17B29E1307D1180CLL);
  unsigned __int8 v78 = (_DWORD *)(a5 - 0x17B29E1307D11808);
  int v67 = *(_DWORD *)(a5 - 0x17B29E1307D11808);
  char v68 = (_DWORD *)(a5 - 0x17B29E1307D11804);
  uint64_t v69 = *(unsigned int *)(a5 - 0x17B29E1307D11804);
  int v70 = *(_DWORD *)(a5 - 0x17B29E1307D11800);
  int v71 = *(unsigned __int8 *)(a5 - 0x17B29E1307D117F4) ^ 0xA;
  if (v71 == 2)
  {
    BOOL v76 = v62 < a19 + v55 && (unint64_t)v65 < v62 + 64;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8 * (int)((((v76 ^ BYTE4(a15)) & 1) * a15) ^ (v61 - 194))))(a1, a2, a3, v62, v69, a6, v65, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a5 - 0x17B29E1307D117FCLL, a19,
             a20,
             a21,
             a22,
             a23);
  }
  else if (v71 == 1)
  {
    BOOL v73 = v62 >= a19 + v55 || (unint64_t)v65 >= v62 + 64;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8 * ((v73 * (HIDWORD(a17) + 49)) ^ (v61 - 934))))(a1, a2, a3, v62, v69, a6, v65, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23);
  }
  else
  {
    *char v77 = (*v77 ^ v57) + (v66 ^ v57) + v57 - (v60 & (2 * ((*v77 ^ v57) + (v66 ^ v57))));
    *unsigned __int8 v78 = (*v78 ^ v57) + (v67 ^ v57) + v57 - (v60 & (2 * ((*v78 ^ v57) + (v67 ^ v57))));
    *char v68 = (*v68 ^ v57) + (v69 ^ v57) + v57 - (v60 & (2 * ((*v68 ^ v57) + (v69 ^ v57))));
    *(_DWORD *)(a5 - 0x17B29E1307D11800) = (*(_DWORD *)(a5 - 0x17B29E1307D11800) ^ v57)
                                           + (v70 ^ v57)
                                           + v57
                                           - (v60 & (2 * ((*(_DWORD *)(a5 - 0x17B29E1307D11800) ^ v57) + (v70 ^ v57))));
    return v64(a1, a2, a3, v62);
  }
}

uint64_t sub_1D0AD3C2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unsigned char *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X7>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t (*a25)(void))
{
  *a3 = *(unsigned char *)(STACK[0xA78] + v35);
  a3[4] = *(unsigned char *)(STACK[0xAB8] + a6);
  a3[8] = *(unsigned char *)(STACK[0xAF8] + v31);
  a3[12] = *(unsigned char *)(STACK[0xB38] + v29);
  a3[1] = *(unsigned char *)(STACK[0xAC8] + v28);
  a3[5] = *(unsigned char *)(STACK[0xB08] + v27);
  a3[9] = *(unsigned char *)(STACK[0xB48] + a2);
  a3[13] = *(unsigned char *)(STACK[0xA88] + v34);
  a3[2] = *(unsigned char *)(STACK[0xB18] + v33);
  a3[10] = *(unsigned char *)(STACK[0xA98] + v26);
  a3[6] = *(unsigned char *)(STACK[0xB58] + a4);
  a3[14] = *(unsigned char *)(STACK[0xAD8] + v32);
  a3[15] = *(unsigned char *)(STACK[0xB28] + a1);
  a3[11] = *(unsigned char *)(STACK[0xAE8] + v30);
  a3[7] = *(unsigned char *)(STACK[0xAA8] + a5);
  a3[3] = *(unsigned char *)(STACK[0xB68] + v25);
  return a25();
}

uint64_t sub_1D0AD3CFC@<X0>(uint64_t a1@<X2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33
                                                                                + 8
                                                                                * ((((v32 - 113020989) < 0x38)
                                                                                  * ((a2 + 239) ^ 0x60)) ^ (a2 + 1189))))(-113020988, a32, a1, 248, 1065);
}

uint64_t sub_1D0AD3D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * (((v5 ^ (v5 - 391) ^ 0x3DB ^ (47 * (v5 ^ (v5 - 7))))
                                                                         * (v3 > 0x580020C)) ^ (v6 + v5 + 463))))(a1, a2, a3, 3568759623);
}

uint64_t sub_1D0AD3DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  return (*(uint64_t (**)(uint64_t))(v57
                                            + 8
                                            * ((226 * (a37 - a56 - 112 < ((((v56 - 1147) | 0x404u) - 641) ^ 0x293uLL))) ^ v56)))(66);
}

uint64_t sub_1D0AD3E00(char a1, char a2, char a3, char a4, int a5)
{
  uint64_t v12 = v6 + 2;
  char v13 = (unsigned char *)(v9 - 2);
  *char v13 = (v5 ^ (a3 + v12) ^ 0x3C) * (v8 + v12);
  *(v13 - 1) = ((a2 + v12) ^ a4) * (a1 + v12);
  return (*(uint64_t (**)(void))(v10 + 8 * (((v7 == v12) * a5) ^ v11)))();
}

uint64_t sub_1D0AD3E0C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8
                                                     * (a3 ^ (31
                                                            * ((unint64_t)(v5 - v3 + 56) > 0x1F)))))(a1, a1);
}

uint64_t sub_1D0AD3E50()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 1144362534) & 0x443595DF) + 876) * (v0 == v1)) ^ v2)))();
}

void sub_1D0AD3E8C()
{
  int v2 = ((v0 & 0xF0) >> 4) ^ 5 | v0 ^ 0x57;
  *(_DWORD *)(v1 + 36) = -42084 * (v2 & 1 | ((v2 & 4) != 0) | (((v2 | ((v2 & 0xFC) >> 2)) & 2) != 0))
                       + 343018756;
}

uint64_t sub_1D0AD3F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,unint64_t a26,uint64_t a27,_DWORD *a28)
{
  *a28 = v30 + 1;
  unsigned int v32 = ((v28 ^ (v28 >> 11)) << 7) & 0x9D2C5680 ^ v28 ^ (v28 >> 11);
  *(_DWORD *)(*a25 + a26) ^= a15 & (v32 << 15) ^ v32 ^ ((a15 & (v32 << 15) ^ v32) >> 18);
  return (*(uint64_t (**)(void))(v29 + 8 * ((v31 - 726206757) ^ (59 * (a26 > 0x1FB)))))();
}

uint64_t sub_1D0AD3F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, unsigned int a20,uint64_t a21,int a22)
{
  unsigned int v22 = ((a22 - 233) ^ 0xFAF7D7F8) + a11;
  BOOL v23 = v22 < 0x294D6758;
  BOOL v24 = v22 > a20;
  if (a20 < 0x294D6758 != v23) {
    BOOL v25 = v23;
  }
  else {
    BOOL v25 = v24;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a7
                                                                                                  + 8 * ((221 * ((((a22 - 1165) ^ v25) & 1) == 0)) ^ (a22 - 68))))(a1, a2, a3, a4, a5, a6, 1414);
}

uint64_t sub_1D0AD3F8C(uint64_t a1)
{
  unint64_t v4 = v1 + a1;
  if (v4 <= 0x38) {
    unint64_t v4 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v4 - v1 + ((307 * (v2 ^ 0x113u)) ^ 0x6BC93A4) < 8) * ((4 * v2) ^ 0x46D)) ^ v2)))();
}

uint64_t sub_1D0AD3FEC()
{
  *(void *)(v2 + v1 + v5 - 0x10B17FC23B8BBE13) = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v2 - (v0 & 0xFFFFFFF8) == -8) * (104 * (v3 ^ 0x2A9) - 191)) ^ v3)))();
}

uint64_t sub_1D0AD404C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = a1 - 1;
  *(unsigned char *)(v4 + v5) = ((((v2 - 122) | 0x81) ^ 0xC8) + v1) * ((v1 + 52) ^ 0xBA);
  return (*(uint64_t (**)(void))(v3 + 8 * ((23 * (v5 == 0)) ^ v2)))();
}

uint64_t sub_1D0AD4098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v41 = v38 - v35 - 420;
  uint64_t v42 = (*(uint64_t (**)(uint64_t, void))(v37 + 8 * (v38 ^ 0x47D)))(a12, 0);
  int v43 = STACK[0x528];
  LODWORD(STACK[0x518]) = STACK[0x520];
  LODWORD(STACK[0x514]) = v43;
  LODWORD(STACK[0x51C]) = (*(uint64_t (**)(uint64_t))(v37 + 8 * (v38 ^ 0x44C)))(v42);
  LODWORD(STACK[0x510]) = (*(uint64_t (**)(void))(v37 + 8 * (v38 + 948)))();
  v36[1] = LODWORD(STACK[0x510]) + ((1664525 * (*v36 ^ (*v36 >> 30))) ^ v36[1]);
  *(_DWORD *)(v40 - 120) = v41 - 1492425252 - v39;
  *(_DWORD *)(v40 - 144) = ((v41 - 1492425252) ^ 2) - v39;
  *(_DWORD *)(v40 - 112) = -(int)v39;
  *(_DWORD *)(v40 - 108) = (v41 - 1492425120) ^ v39;
  *(_DWORD *)(v40 - 104) = v39 + v41 + 1299011414;
  *(void *)(v40 - 136) = v39 + 827694954;
  *(void *)(v40 - 128) = v39 + 827694952;
  uint64_t v44 = (*(uint64_t (**)(uint64_t))(a35 + 8 * (int)(v41 ^ 0xD4B6F54D)))(v40 - 144);
  return (*(uint64_t (**)(uint64_t))(a35 + 8 * *(int *)(v40 - 116)))(v44);
}

uint64_t sub_1D0AD420C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v66 = STACK[0x200];
  BOOL v67 = LODWORD(STACK[0x200]) == a26;
  int v68 = 1449114341
      * ((((v65 - 168) ^ 0x47C266E0) + 1474988501 - 2 * (((v65 - 168) ^ 0x47C266E0) & 0x57EA89D5)) ^ 0xDF7616DE);
  *(void *)(v65 - 168) = a30;
  *(void *)(v65 - 160) = v62;
  *(void *)(v65 - 152) = a62;
  *(_DWORD *)(v65 - 144) = (v66 ^ 0x5FFDFD2F) + ((2 * v66) & 0xBFFBFA5E) - 208166915 + v68;
  *(_DWORD *)(v65 - 140) = (v63 - 483) ^ v68;
  uint64_t v69 = (*(uint64_t (**)(uint64_t))(v64 + 8 * (v63 + 918)))(v65 - 168);
  return (*(uint64_t (**)(uint64_t))(v64 + 8 * (((((v63 - 642) | 0x340) + 855) * v67) ^ v63)))(v69);
}

uint64_t sub_1D0AD4304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((56 * (((a24 - 1058) ^ 0x49D9BCB1u) > 0x49D9BC98)) ^ (a24 + 354))))();
}

uint64_t sub_1D0AD4350()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((365 * ((v0 & 0x18) == ((2 * ((((v2 ^ 0x641) - 1158) | 0x502) ^ 0x4E3u)) ^ 0x332))) ^ v2 ^ 0x641)))();
}

uint64_t sub_1D0AD43A0(uint64_t result)
{
  int v1 = *(_DWORD *)result + 961505453 * ((((2 * result) | 0x7046420C) - result + 1205657338) ^ 0x1AD8EFA0);
  uint64_t v2 = *(void *)(result + 8);
  *(unsigned char *)(v2 - 0x40073C64F1EF87F2) = HIBYTE(v1) ^ 0x32;
  *(unsigned char *)(v2 - 0x40073C64F1EF87F1) = BYTE2(v1) ^ 0x51;
  *(unsigned char *)(v2 - 0x40073C64F1EF87F0) = BYTE1(v1) ^ 0xAC;
  *(unsigned char *)(v2 - 0x40073C64F1EF87EFLL) = v1 ^ 0xEC;
  return result;
}

uint64_t sub_1D0AD4450(uint64_t a1)
{
  int v10 = *(unsigned __int8 *)(a1 + (v2 + v6));
  int v11 = (v10 ^ v7) + ((v10 << (((v3 + v4) & v5) + 38)) & ((v3 - 1129) ^ v8)) - 2;
  unsigned int v12 = v10 - 97;
  char v13 = v10 - 7;
  if (v12 < 0x1A) {
    LOBYTE(v11) = v13;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((((v11 - 90) > 5u) * v9) ^ v3)))();
}

uint64_t sub_1D0AD4458@<X0>(int a1@<W8>, int8x16_t a2@<Q0>, int8x16_t a3@<Q1>, int8x16_t a4@<Q2>, int8x16_t a5@<Q3>, int32x4_t a6@<Q4>, int8x16_t a7@<Q5>)
{
  a7.i64[0] = *(void *)(v11 + 4);
  a7.i32[2] = *(_DWORD *)(v11 + 12);
  int8x16_t v13 = vextq_s8(a2, a7, 0xCuLL);
  int8x16_t v14 = a7;
  v14.i32[3] = *(_DWORD *)(v11 + 16);
  int32x4_t v15 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v14, a3), vandq_s8(v13, a4)), 1uLL), *(int8x16_t *)(v11 - 908));
  v13.i32[0] = *(_DWORD *)(v7 + 4 * (*(_DWORD *)(v11 + 4) & 1));
  v13.i32[1] = *(_DWORD *)(v7 + 4 * (*(_DWORD *)(v11 + 8) & v9));
  v13.i32[2] = *(_DWORD *)(v7 + 4 * (*(_DWORD *)(v11 + 12) & 1));
  v13.i32[3] = *(_DWORD *)(v7 + 4 * (v14.i8[12] & 1));
  *(int8x16_t *)uint64_t v11 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v15, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v15, v15), a5)), a6), v13);
  return (*(uint64_t (**)(void))(v12 + 8 * (((v8 == 4) * v10) ^ a1)))();
}

uint64_t sub_1D0AD44A0@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3)
{
  int v7 = v4 - 31;
  BOOL v8 = v3 < a1;
  *(unsigned char *)(a3 - 0x10B17FC23B8BBE14) = *v5 ^ 0xF8;
  if (v8 == a1 > 0x134D4B40) {
    BOOL v8 = v3 > 0x134D4B40;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((1163 * v8) ^ v7)))();
}

uint64_t sub_1D0AD4528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  *(void *)(a1 + 4) = 0x9F0A0AC2B0A49760;
  *(_DWORD *)a1 = 1999501169;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3
                                                                                         + 8
                                                                                         * ((21
                                                                                           * (((4 << ((a3 ^ 0x8C) - 75)) - 1346644686) < 0xAFBBD53A)) ^ ((a3 ^ 0x68C) + 1185))))(a1, a2, 2344054867, 1950912495, 797, -3045234819);
}

uint64_t sub_1D0AD4618()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((v1 - 763) | 0x27) + 661) ^ ((v1 - 1067) | 0x412)) * (v2 == v0)) ^ v1)))();
}

uint64_t sub_1D0AD4654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  int v33 = (v31 - 793) | 0xC9;
  BOOL v35 = (((v31 ^ 0x7F4) - 704) & (a31 + 15)) == 0 && a31 != 1764851809;
  LODWORD(STACK[0x264]) = v33;
  uint64_t v36 = *(uint64_t (**)(void))(v32 + 8 * ((v35 * (v33 - 645)) ^ v31));
  LODWORD(STACK[0x260]) = -42899;
  return v36();
}

uint64_t sub_1D0AD46B0@<X0>(uint64_t a1@<X0>, int a2@<W1>, unsigned int a3@<W2>, int a4@<W3>, int a5@<W8>)
{
  *(unsigned char *)(v10 + ((v5 - v8) ^ a4) + a5) ^= *(unsigned char *)(a1 + ((v5 - v8) ^ a4) + a5);
  return (*(uint64_t (**)(void))(v9 + 8 * (((a5 + 1 < ((v5 - v8 + a2) & a3) + v6) * (v5 - v8 - v7 + 103)) ^ (v5 + 335))))();
}

void sub_1D0AD4710()
{
  *(unsigned char *)(v1 + 1) = 45;
  *uint64_t v0 = 0;
  JUMPOUT(0x1D0AD47B8);
}

uint64_t sub_1D0AD4800()
{
  uint64_t v2 = (*(uint64_t (**)(void))(v0 + 8 * (v1 ^ 0x6A7u)))();
  uint64_t v3 = (*(uint64_t (**)(void))(v0 + 8 * (v1 ^ 0x6BBu)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v0
                                                                                + 8 * (((v2 == v3) * (v1 + 801)) ^ v1)))(v3, v4, v5, v6, v7);
}

uint64_t sub_1D0AD4858()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((38 * (v2 <= ((v3 + v1 + 382) ^ 0x29F382E8u))) ^ (v3 + v1 + 344))))();
}

uint64_t sub_1D0AD48A4(uint64_t result)
{
  int v1 = *(_DWORD *)result ^ (846572393 * ((-2 - ((result | 0x235B6B7C) + (~result | 0xDCA49483))) ^ 0xEAC7C0CA));
  uint64_t v2 = *(void *)(result + 8);
  *(unsigned char *)(v2 - 0x36C2CAC0BDEC969) = HIBYTE(v1) ^ 0xA7;
  *(unsigned char *)(v2 - 0x36C2CAC0BDEC968) = BYTE2(v1) ^ 0xC;
  *(unsigned char *)(v2 - 0x36C2CAC0BDEC967) = BYTE1(v1) ^ 0xDF;
  *(unsigned char *)(v2 - 0x36C2CAC0BDEC966) = v1 ^ 0x9B;
  return result;
}

uint64_t sub_1D0AD4960(uint64_t a1, uint64_t a2, char a3, char a4, int a5)
{
  uint64_t v9 = v7 + 2;
  uint64_t v10 = (unsigned char *)(a2 - 2);
  *uint64_t v10 = ((v5 + v9 - 49) ^ a4) * (v5 + v9 - 32);
  *(v10 - 1) = ((a3 + v9) ^ a4) * (v5 + v9 - 31);
  return (*(uint64_t (**)(void))(v8 + 8 * (((a1 == v9) * a5) ^ v6)))();
}

uint64_t sub_1D0AD496C@<X0>(char a1@<W8>)
{
  *int v3 = -1;
  return (*(unsigned __int8 *)(v4 + 7) ^ 0x567E8D26)
       - 1108115490
       + ((*(unsigned __int8 *)(v4 + 7) << (((a1 & 0xC7) - v2 + 32) ^ (v1 + 1))) & 0x4Cu)
       - 343018756;
}

uint64_t sub_1D0AD49C0@<X0>(int a1@<W8>, __n128 a2@<Q0>)
{
  *(__n128 *)(v2 + v3) = a2;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v3 != 48) * a1) ^ v4)))();
}

void cp2g1b9ro()
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (uint64_t)*(&off_1F26D60E0
                + (*((unsigned char *)off_1F26D62C8
                                    + (*((unsigned __int8 *)off_1F26D61E0
                                       + (99 * ((dword_1EA629A98 - dword_1EA634B18) ^ 0x56))) ^ 0x9Cu)
                                    - 12) ^ (99 * ((dword_1EA629A98 - dword_1EA634B18) ^ 0x56)))
                - 64);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (unsigned __int8 *)off_1F26D61F0;
  uint64_t v3 = (char *)off_1F26D6358 - 8;
  int v4 = *(&off_1F26D60E0
       + (*((unsigned char *)off_1F26D6358
                           + (*((unsigned __int8 *)off_1F26D61F0
                              + (99 * ((dword_1EA629A98 - v1) ^ 0x56))) ^ 0xB8u)
                           - 8) ^ (99 * ((dword_1EA629A98 - v1) ^ 0x56)))
       - 192);
  uint64_t v5 = v1 - (void)&v7 + *v4;
  *(void *)(v0 - 4) = 170569571 * v5 + 0x653207D96BFD6456;
  *int v4 = 170569571 * (v5 ^ 0x653207D96BFD6456);
  v8[1] = 291625862 - 1334103649 * (v8 ^ 0x68A8C8AE);
  LOBYTE(v4) = 99 * ((*(_DWORD *)v4 - *(_DWORD *)(v0 - 4)) ^ 0x56);
  uint64_t v6 = (uint64_t)*(&off_1F26D60E0
                + ((99 * (dword_1EA634B18 ^ 0x56 ^ dword_1EA629A98)) ^ byte_1D0B8BE60[byte_1D0B98170[(99 * (dword_1EA634B18 ^ 0x56 ^ dword_1EA629A98))] ^ 0x89])
                - 109);
  (*(void (**)(_DWORD *))(v6
                                   + 8
                                   * ((v4 ^ v3[v2[v4] ^ 0xAB])
                                    + 1391)))(v8);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1D0AD4BD0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((((v2 + 1085834304) & 0xBF477BF6) - 780) * (v1 != v0)) ^ v2)))();
}

uint64_t sub_1D0AD4C0C(char a1, char a2, char a3, int a4, int a5, uint64_t a6, int8x16_t a7, int8x8_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v75 = a5 - 8;
  uint64_t v76 = (a4 + v75);
  v78.val[0].i64[0] = ((_BYTE)a4 + (_BYTE)v75) & 0xF;
  v78.val[0].i64[1] = (v73 + (_BYTE)v75) & 0xF;
  v78.val[1].i64[0] = (a1 + (_BYTE)v75 + a3) & 0xF;
  v78.val[1].i64[1] = (v72 + (_BYTE)v75) & 0xF;
  v78.val[2].i64[0] = (*(_DWORD *)(v74 - 248) + (_BYTE)v75) & 0xF;
  v78.val[2].i64[1] = (v71 + (_BYTE)v75) & 0xF;
  v78.val[3].i64[0] = (v70 + (_BYTE)v75) & 0xF;
  v78.val[3].i64[1] = (a2 + (_BYTE)v75) & 0xF;
  *(int8x8_t *)(a66 + v76) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v66 + (v76 & 0xF) - 7), *(int8x8_t *)(a6 + v76)), veor_s8(*(int8x8_t *)(v68 + (v76 & 0xF) - 7), *(int8x8_t *)((v76 & 0xF) + v67 - 6))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v78, a7), a8)));
  return (*(uint64_t (**)(void))(a52 + 8 * ((71 * (a10 == v75)) ^ v69)))();
}

uint64_t sub_1D0AD4C14()
{
  void *v2 = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v0) ^ v1)))();
}

uint64_t sub_1D0AD4C3C()
{
  BOOL v3 = (v1 ^ 0x137) - v0 + ((v1 - 372256080) & 0x16302DEBu) - 2604 < 8;
  return (*(uint64_t (**)(void))(v2 + 8 * (((4 * v3) | (32 * v3)) ^ v1)))();
}

uint64_t sub_1D0AD4C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  if ((v8 + 1347559818) > 0x40) {
    int v10 = v8 + 1347559818;
  }
  else {
    int v10 = 64;
  }
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (int)(((((v5 + 2087299641) & 0x839653B2) - 251)
                                     * ((a5 - v6 - v7 + v10 + 805) < 0xF)) ^ v5)))();
}

uint64_t sub_1D0AD4D0C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v1 ^ 0x297) + ((v1 + 64) | 0x40A) - 1879) * (v2 != v0)) | v1)))();
}

uint64_t sub_1D0AD4D48@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_OWORD *)(v6 + a2 + 24) = *(_OWORD *)(v5 + a2 + 24);
  return (*(uint64_t (**)(void))(v7 + 8 * (((a2 + 16 == ((18 * (v3 ^ v2)) ^ a1)) * v4) ^ v3)))();
}

uint64_t sub_1D0AD4D88(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8
                                   * ((251 * ((v4 & 8) == ((a4 + v5 + 1357 + 2437120) & 0xA8BD9FBD ^ 0x3B4))) ^ v5)))();
}

void sub_1D0AD4DD0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1449114341 * ((a1 - 2002704184 - 2 * (a1 & 0x88A128C8)) ^ 0x47FFD123);
  unint64_t v2 = ((unint64_t)(*(_DWORD *)(*(void *)a1 - 0x10B17FC23B8BBE1CLL) + 381) >> 3) & 0x3F;
  *(unsigned char *)(*(void *)a1 - 0x10B17FC23B8BBE14 + v2) = 0x80;
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1D0AD4EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_OWORD *)(a4 + v7) = *v5;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 == 0) * v6) ^ v4)))();
}

uint64_t sub_1D0AD4F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v20 = *(_DWORD *)(a4 - 0x17B29E1307D11810) & 0x3F;
  *(unsigned char *)(a4 - 0x17B29E1307D11854 + (v20 ^ 0x36)) = 120;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8 * ((((v20 ^ 0x36) > 0x37) * (((a8 + 754) | 0x40) ^ 0x83)) ^ a8)))(a1, a2, a4 - 0x17B29E1307D11854, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
}

uint64_t sub_1D0AD4F28@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50)
{
  return (*(uint64_t (**)(void, char *, void))(v52
                                                           + 8
                                                           * (((*(unsigned char *)(v50 + 5) == 1)
                                                             * ((((((a1 - 257022520) & 0xF51D5EB) - 148) | 0x61) ^ 0x4EE)
                                                              + 5 * ((a1 - 257022520) & 0xF51D5EB ^ 0x91))) ^ (a1 - 257022520) & 0xF51D5EB)))(v51[4], &a50, *v51);
}

uint64_t sub_1D0AD4F9C@<X0>(int a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, int a5@<W8>)
{
  *(unsigned char *)(a3 + (a5 + a1)) = *(unsigned char *)(a2 + a4 - 129836294);
  return (*(uint64_t (**)(void))(v6 + 8 * ((27 * (a1 + a5 + 1 < ((v5 - 629) ^ 8u))) ^ (v5 - 23))))();
}

uint64_t sub_1D0AD4FF0(unsigned int a1)
{
  BOOL v9 = v4 < a1;
  unsigned int v10 = v7 + v3 + 1208;
  int v11 = v9 ^ (v10 < ((v8 - 831) ^ v2) + v7);
  BOOL v12 = v4 > v10;
  if (!v11) {
    BOOL v9 = v12;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((!v9 * ((222 * ((v8 - 831) ^ v5)) ^ v1)) ^ (v8 - 831))))();
}

uint64_t sub_1D0AD5050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7
                                                              + 8
                                                              * ((((a5 + 634) ^ 0x28E ^ (2 * (a5 + 535)) ^ 0x484)
                                                                * (v5 == 63)) ^ (a5 + 535))))(248, 122, v6);
}

uint64_t sub_1D0AD5098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a72
                                                     + 8
                                                     * ((103 * ((a35 & 0x1115F1FBu) + 1561306145 > 0x5D0FA473)) ^ 0x1B1)))(a59, 699729230);
}

uint64_t sub_1D0AD5114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29)
{
  unsigned int v34 = 1991164784 - v30;
  BOOL v36 = a29 - 540320127 >= (v29 + a6) && v34 >= a29 + 1394966590 + v31 + ((v32 + 1396917457) & 0xACBCBB3E);
  return (*(uint64_t (**)(void))(v33 + 8 * ((491 * v36) ^ v32)))();
}

uint64_t sub_1D0AD518C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v6 + 143) ^ 0x51B) * (v5 != a5)) ^ v6)))();
}

uint64_t sub_1D0AD51B8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((507 * (((v0 == v1) ^ (v2 + v2 - 39)) & 1)) ^ v2)))();
}

uint64_t sub_1D0AD51EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  return a27(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_1D0AD51FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40)
{
  BOOL v43 = v40 - 118311622 < (a40 + 503676433);
  if (a40 + 503676433 < (v41 + 789893166) != v40 - 118311622 < ((22 * (v41 ^ 0xF7)) ^ 0x2F14D036u)) {
    BOOL v43 = a40 + 503676433 < (v41 + 789893166);
  }
  return (*(uint64_t (**)(uint64_t))(v42 + 8 * ((392 * v43) ^ v41)))(3746708873);
}

uint64_t sub_1D0AD5290@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((a1 == v1 + ((v2 - 475) | 0x23) - 179) * ((v2 - 1572015856) & 0x5DB30DD7 ^ 0x1E5)) ^ v2)))();
}

uint64_t sub_1D0AD52EC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((796 * (*(_DWORD *)(v2 + 16) - v0 == (v1 ^ 0x558) + 250415429)) ^ v1)))();
}

void zxcm2Qme0x(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D0AD539C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W4>, uint64_t a4@<X8>)
{
  *(void *)(a1 + a4 + a2 - 1) = v7;
  return (*(uint64_t (**)(void))(v6
                              + 8 * ((85 * ((v5 ^ 0x154 ^ a3 ^ 0x135) == (v4 & 0xFFFFFFFFFFFFFFF8))) ^ v5 ^ 0x154)))();
}

uint64_t sub_1D0AD53F0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(a6 + v7) = v9;
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v6 & 0xFFFFFFFFFFFFFFF8) == 8) * ((a1 - 366) ^ 0x241)) ^ a1)))();
}

uint64_t sub_1D0AD5434()
{
  BOOL v3 = v0 == ((v1 - 783) | 0x20) - 689;
  return (*(uint64_t (**)(void))(v2 + 8 * ((4 * v3) | (8 * v3) | v1)))();
}

uint64_t sub_1D0AD5460@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3)
{
  BOOL v7 = v3 < v4 - 260 + ((v4 - 260) ^ (a1 - 1184));
  *(unsigned char *)(a3 - 0x10B17FC23B8BBE14) = *v5 ^ 0xF8;
  if (v7 == a1 > 0xC1E8B944) {
    BOOL v7 = v3 > 0xC1E8B944;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((932 * v7) ^ (v4 - 780))))();
}

uint64_t sub_1D0AD54F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned char *a16, unsigned char *a17, unsigned char *a18, unsigned char *a19, unsigned int *a20,unsigned char *a21,unsigned char *a22,unsigned char *a23,unsigned char *a24,uint64_t a25,uint64_t a26,uint64_t a27,unsigned __int8 *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,unsigned int *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,int a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v69 = *a28 ^ 0xA;
  if (v69 == 1)
  {
    unsigned int v75 = *a37;
    int v71 = a5 + 1410;
    *a24 = ((8 * *(unsigned char *)a37) ^ 0xB0) + ((a5 - 126) ^ (16 * *(unsigned char *)a37) ^ 0x4F) - 7;
    *a23 = ((v75 >> 5) ^ 0xAB) + ((2 * (((v75 >> 5) ^ 0xAB | 0x78) ^ (v75 >> 5))) ^ 0x59) - 7;
    *a22 = ((v75 >> 13) ^ 0x10) - 2 * (((v75 >> 13) ^ 0x10) & 0x7E ^ (v75 >> 13) & 6) - 8;
    *a21 = ((v75 >> 21) ^ 0x73) + (~(2 * ((v75 >> 21) ^ 0x73)) | 0xF) - 7;
    unsigned int v76 = *a20;
    HIDWORD(v77) = *a20 ^ 0xD;
    LODWORD(v77) = v75 ^ 0x40000000;
    *a19 = (v77 >> 29) + (~(2 * (v77 >> 29)) | 0xF) - 7;
    *a18 = ((v76 >> 5) ^ 0x37) + ((2 * (((v76 >> 5) ^ 0x37 | 0x78) ^ (v76 >> 5))) ^ 0x61) - 7;
    *a17 = ((v76 >> 13) ^ 0x34) - ((2 * ((v76 >> 13) ^ 0x34)) & 0xF0) - 8;
    unsigned int v74 = ((v76 >> 21) ^ 0xFFFFFFE1) - 2 * (((v76 >> 21) ^ 0xFFFFFFE1) & 0x7A ^ (v76 >> 21) & 2) - 8;
  }
  else
  {
    int v70 = a5;
    if (v69 != 2) {
      goto LABEL_6;
    }
    int v71 = a15 & 0x94A4BFD9;
    unsigned int v74 = *a20;
    *a24 = ((*a20 >> 21) ^ 0xE1) + ((2 * ((*a20 >> 21) ^ 0xE1)) & 0xF0 ^ ((a15 & 0xD9) + 47)) - 7;
    *a23 = ((v74 >> 13) ^ 0x34) + ((2 * (((v74 >> 13) ^ 0x34 | 0x78) ^ (v74 >> 13))) ^ 0x67) - 7;
    *a22 = ((v74 >> 5) ^ 0x37) + (~(2 * ((v74 >> 5) ^ 0x37)) | 0xF) - 7;
    unsigned int v72 = *a37;
    HIDWORD(v73) = v74 ^ 0xD;
    LODWORD(v73) = *a37 ^ 0x40000000;
    *a21 = (v73 >> 29) - ((2 * (v73 >> 29)) & 0xF0) - 8;
    *a19 = ((v72 >> 21) ^ 0x73) - ((2 * ((v72 >> 21) ^ 0x73)) & 0xF0) - 8;
    *a18 = ((v72 >> 13) ^ 0x10) - 2 * (((v72 >> 13) ^ 0x10) & 0xF9 ^ ((v72 & 0x2000) != 0)) - 8;
    *a17 = ((v72 >> 5) ^ 0xAB) - ((2 * ((v72 >> 5) ^ 0xAB)) & 0xF0) - 8;
    LOBYTE(v74) = ((16 * v72) ^ 0x9F) + ((8 * v72) ^ 0xB0) - 7;
  }
  int v70 = v71 ^ 0x59E;
  *a16 = v74;
LABEL_6:
  int v78 = v70 - 10;
  unsigned __int8 v79 = &a66 + a30 - 0x14323CA968DDFA6DLL;
  unint64_t v92 = a29 + a30;
  unsigned __int8 v80 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, unsigned char *, unsigned char *, unsigned char *, unsigned int *, unsigned char *, unsigned char *, unsigned char *, unsigned char *, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned int *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 8 * v78);
  unsigned __int8 v81 = (_DWORD *)(a61 - 0x17B29E1307D1180CLL);
  uint64_t v82 = *(unsigned int *)(a61 - 0x17B29E1307D1180CLL);
  uint64_t v83 = *(unsigned int *)(a61 - 0x17B29E1307D11808);
  uint64_t v84 = *(unsigned int *)(a61 - 0x17B29E1307D11804);
  int v85 = *(_DWORD *)(a61 - 0x17B29E1307D11800);
  int v86 = *(unsigned __int8 *)(a61 - 0x17B29E1307D117F4) ^ 0xA;
  if (v86 == 2)
  {
    BOOL v91 = a6 < v92 && (unint64_t)v79 < a6 + 64;
    return (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v67
                                                                          + 8
                                                                          * (int)(((((a5 + 178) | 0xC0)
                                                                                  + HIDWORD(a48)
                                                                                  - 773)
                                                                                 * v91) ^ (a5 + 1211))))(v81, v84, v82, v83);
  }
  else if (v86 == 1)
  {
    BOOL v88 = a6 >= v92 || (unint64_t)v79 >= a6 + 64;
    return (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v67
                                                                          + 8
                                                                          * (((a50 - 958) * v88) ^ ((int)a5 + 286))))(v81, v84, v82, v83);
  }
  else
  {
    *unsigned __int8 v81 = (*v81 ^ v68) + (v82 ^ v68) + v68 - (v66 & (2 * ((*v81 ^ v68) + (v82 ^ v68))));
    *(_DWORD *)(a61 - 0x17B29E1307D11808) = (*(_DWORD *)(a61 - 0x17B29E1307D11808) ^ v68)
                                            + (v83 ^ v68)
                                            + v68
                                            - (v66 & (2 * ((*(_DWORD *)(a61 - 0x17B29E1307D11808) ^ v68) + (v83 ^ v68))));
    *(_DWORD *)(a61 - 0x17B29E1307D11804) = (*(_DWORD *)(a61 - 0x17B29E1307D11804) ^ v68)
                                            + (v84 ^ v68)
                                            + v68
                                            - (v66 & (2 * ((*(_DWORD *)(a61 - 0x17B29E1307D11804) ^ v68) + (v84 ^ v68))));
    *(_DWORD *)(a61 - 0x17B29E1307D11800) = (*(_DWORD *)(a61 - 0x17B29E1307D11800) ^ v68)
                                            + (v85 ^ v68)
                                            + v68
                                            - (v66 & (2 * ((*(_DWORD *)(a61 - 0x17B29E1307D11800) ^ v68) + (v85 ^ v68))));
    return v80(v81, v84, v82, v83, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48);
  }
}

uint64_t sub_1D0AD57B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * ((21
                                                                         * (v3 < (((v5 ^ (v5 - 313)) + 318) ^ 0x57FFD1Au))) ^ (v6 + v5 + 463))))(a1, a2, a3, 3568759623);
}

uint64_t sub_1D0AD5800@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + v2 + v1) = *(unsigned char *)(v5 + v2 + v1) ^ 0xF8;
  return (*(uint64_t (**)(void))(v6 + 8 * ((26 * (v2 + 1 == v3)) ^ (v4 - 420))))();
}

uint64_t sub_1D0AD583C(char a1, int a2, char a3, char a4, char a5, int8x16_t a6, int8x8_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v61 = a2 - 8;
  uint64_t v62 = (v60 + v61);
  v64.val[0].i64[0] = ((_BYTE)v60 + (_BYTE)v61) & 0xF;
  v64.val[0].i64[1] = (v59 + (_BYTE)v61) & 0xF;
  v64.val[1].i64[0] = (v56 + (_BYTE)v61) & 0xF;
  v64.val[1].i64[1] = (v58 + (_BYTE)v61) & 0xF;
  v64.val[2].i64[0] = (v57 + (_BYTE)v61) & 0xF;
  v64.val[2].i64[1] = (a5 + (_BYTE)v61) & 0xF;
  v64.val[3].i64[0] = (a3 + (_BYTE)v61) & 0xF;
  v64.val[3].i64[1] = (a1 + (_BYTE)v61 + a4) & 0xF;
  *(int8x8_t *)(a9 + v62) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v53 + (v62 & 0xF) - 7), *(int8x8_t *)(a9 + v62)), veor_s8(*(int8x8_t *)(v54 + (v62 & 0xF) - 7), *(int8x8_t *)(v55 + (v62 & 0xF) - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v64, a6), a7)));
  return (*(uint64_t (**)(void))(a52 + 8 * ((62 * (v52 != v61)) ^ a10)))();
}

uint64_t sub_1D0AD5844@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  int v5 = *(_DWORD *)(v2 + 36) + v3;
  char v6 = *(unsigned char *)(v2 + 17);
  char v7 = *(unsigned char *)(v2 + 32);
  uint64_t v8 = *(_DWORD **)(v2 + 24);
  uint64_t v9 = *(void **)(v2 + 8);
  *(unsigned char *)(result + 4) = (*(unsigned char *)(v2 + 16) + v3) ^ 0x95;
  *(unsigned char *)(result + 5) = v3 + v7 + ((a2 - 101) | 0x4E) - 110;
  *(unsigned char *)(result + 6) = v3 + v6 - 96;
  *(unsigned char *)(result + 7) = v5 ^ 0x6A;
  *(_DWORD *)(result + 8) = 0;
  *uint64_t v9 = result;
  *uint64_t v8 = v4;
  return result;
}

uint64_t sub_1D0AD58C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39)
{
  unsigned int v43 = v41 + ((14 * (a39 ^ 0x533)) ^ (a39 - 1749101411) & 0x6841277F ^ 0x612623);
  if (v43 <= 0x40) {
    unsigned int v43 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 8 * ((-v39 - 6365698 - v40 + v43 < 0xF) | a39)))(1214268201, 3080698495, -904285136);
}

uint64_t sub_1D0AD5968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((904 * (a6 + 1 == v8 + 64)) ^ v6)))();
}

uint64_t sub_1D0AD5A48(uint64_t a1, char a2, char a3, char a4, int a5)
{
  uint64_t v12 = v6 + 2;
  int8x16_t v13 = (unsigned char *)(a1 - 2);
  *int8x16_t v13 = ((a3 + v12) ^ a4) * (v9 + v12);
  *(v13 - 1) = ((a2 + v12) ^ a4) * (v7 + v12 + v5);
  return (*(uint64_t (**)(void))(v11 + 8 * (((v8 == v12) * a5) ^ v10)))();
}

uint64_t sub_1D0AD5A54()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((222 * (v0 >= ((653 * (v1 ^ 0x37B)) ^ 0x53Au))) ^ v1)))();
}

uint64_t sub_1D0AD5A98()
{
  int v8 = v0 - 753;
  int v9 = *(unsigned __int8 *)(v2 + (v1 + v5));
  int v10 = (v9 ^ v6) + ((v9 << (((v8 - 15) ^ v4) - 30)) & v7) + 112;
  unsigned int v11 = v9 - 97;
  char v12 = v9 + 39;
  if (v11 >= 0x1A) {
    char v12 = v10;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (v8 | (8 * ((v12 + 120) > 5u)))))();
}

uint64_t sub_1D0AD5AB0(uint64_t a1, char a2, char a3, char a4, uint64_t a5, uint64_t a6, char a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v49 = v47 + 4;
  unsigned int v50 = v49 - 134042340;
  int v51 = *(_DWORD *)(a44 + 4 * ((v49 - 134042340) >> ((v45 ^ 0xF8) * a2 - 76)));
  *(unsigned char *)(a45 + v50) = (a3 ^ HIBYTE(v51)) - ((2 * (a3 ^ HIBYTE(v51))) & 0xF0) - 8;
  *(unsigned char *)(a45 + v50 + 1) = (a4 ^ BYTE2(v51)) - ((2 * (a4 ^ BYTE2(v51))) & 0xF0) - 8;
  *(unsigned char *)(a45 + v50 + 2) = (BYTE1(v51) ^ 0x19) - ((2 * (BYTE1(v51) ^ 0x19)) & 0xF0) - 8;
  *(unsigned char *)(a45 + v50 + 3) = v51 ^ a7;
  BOOL v52 = v49 + a8 < v46;
  if (v46 < 0xFFAAEA60 != (v49 + a8) < 0xFFAAEA60) {
    BOOL v52 = v46 < 0xFFAAEA60;
  }
  return (*(uint64_t (**)(void))(v48 + 8 * ((645 * v52) ^ v45)))();
}

uint64_t sub_1D0AD5AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, int a12, int a13, uint64_t a14, int a15, int a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22)
{
  unsigned int v26 = 1503905621 * ((~&a15 & 0x44525C09 | &a15 & 0xBBADA3F6) ^ 0x192A32DD);
  a22 = ((a12 ^ 0x3FC7C38F) - 541114368 + (v25 & 0x7F8F871E)) ^ v26;
  a17 = (85 * ((~&a15 & 9 | &a15 & 0xF6) ^ 0xDD)) ^ 0x52;
  a16 = a13 - v26 + 694;
  a20 = a11;
  a21 = v22;
  a18 = v24 + 36;
  a19 = v24;
  uint64_t v27 = (*(uint64_t (**)(int *))(v23 + 8 * (a13 + 1411)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * ((30 * (((a13 - 1) ^ (a15 == 131 * a10 + 343018101)) & 1)) ^ a13)))(v27);
}

uint64_t sub_1D0AD5BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40
                                                                                + 8
                                                                                * (((v39 == ((v38 - 897) ^ 0x1E))
                                                                                  * ((v38 + 361) ^ 0x512)) | v38)))(a38, 248, a3, a4, 1499);
}

uint64_t sub_1D0AD5BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int8x16_t v13 = (_DWORD *)(v8 + 4 * (v7 + v12));
  int v14 = *(v13 - 8) ^ *(v13 - 3);
  unsigned int v15 = v14 + v11 - ((2 * v14) & 0xCE9BE6E4);
  int v16 = *(v13 - 16) ^ *(v13 - 14);
  HIDWORD(v17) = v16 ^ 0x674DF372 ^ v15;
  LODWORD(v17) = v16 ^ ~v15;
  *int8x16_t v13 = (v17 >> 31) + v11 - ((2 * (v17 >> 31)) & 0xCE9BE6E4);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v7 + 1 != v10 + 80) | (2 * (v7 + 1 != v10 + 80))) ^ a7)))();
}

uint64_t sub_1D0AD5C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8 * ((53 * (a10 - v11 + (((v10 - 1090) | 0x100u) ^ 0xEF4E803DC47440F3) > 0xF)) ^ ((v10 - 1090) | 0x100))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1D0AD5D08()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((22 * (v0 == ((v1 - 1113) ^ 0x7D ^ ((v1 - 1124) | 6)))) ^ (v1 - 79))))();
}

uint64_t sub_1D0AD5D44(uint64_t result)
{
  unint64_t v1 = 1332649919
     * ((-2 - ((~result | 0x65DABDB016F764E7) + (result | 0x9A25424FE9089B18))) ^ 0xDF274D0B2B84E015);
  unint64_t v2 = *(void *)(result + 16) - v1;
  unint64_t v3 = *(void *)(result + 8) - v1;
  BOOL v4 = v3 >= v2;
  BOOL v5 = (uint64_t)v3 < (uint64_t)v2;
  int v6 = !v4;
  if (((*(_DWORD *)(result + 32) + v1) & 1) == 0) {
    BOOL v5 = v6;
  }
  if (v5) {
    uint64_t v7 = (_DWORD *)(result + 24);
  }
  else {
    uint64_t v7 = (_DWORD *)result;
  }
  *(_DWORD *)(result + 28) = *(_DWORD *)(result + 36) ^ v1 ^ (*v7 + v1);
  return result;
}

void sub_1D0AD5DE4(uint64_t a1)
{
  int v1 = 1543459711
     * (((a1 ^ 0x747A70AB | 0xDC01F2B5) - (a1 ^ 0x747A70AB) + ((a1 ^ 0x747A70AB) & 0x23FE0D4A)) ^ 0xE4F981DA);
  int v2 = *(_DWORD *)a1 ^ v1;
  uint64_t v3 = *(void *)(a1 + 8);
  int v4 = *(_DWORD *)(a1 + 16) ^ v1;
  int v5 = *(_DWORD *)(v3 - 0x10B17FC23B8BBE1CLL);
  *(_DWORD *)(v3 - 0x10B17FC23B8BBE1CLL) = v5 + 8 * v4 - 306256384;
  unsigned int v6 = v5 + 8 * v4 - 1892710265;
  if ((v5 - 1586453881) < 0x89D770A != v6 < 0x89D770A) {
    BOOL v7 = (v5 - 1586453881) < 0x89D770A;
  }
  else {
    BOOL v7 = v6 < v5 - 1586453881;
  }
  *(_DWORD *)(v3 - 0x10B17FC23B8BBE18) += ((v4 - 38282048) >> 29) + v7;
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1D0AD5F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,int a24,int a25)
{
  *int v29 = v29[623];
  *(void *)(v30 - 136) = (v25 + 1) + v28;
  *(void *)(v30 - 144) = v28 + 3;
  *(_DWORD *)(v30 - 128) = v26 - v28 + 911837186;
  *(_DWORD *)(v30 - 120) = -(int)v28;
  *(_DWORD *)(v30 - 152) = v26 - v28 + 911837202;
  *(_DWORD *)(v30 - 116) = a25 ^ v28;
  *(_DWORD *)(v30 - 112) = v28 + 572802862 + v26;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v27 + 8 * a22))(v30 - 152);
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * *(int *)(v30 - 124)))(v31);
}

uint64_t sub_1D0AD5F60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = v2 ^ 0x7FB;
  __int16 v5 = *(unsigned __int8 *)(v3 - 0x7AFA2E4D31C59232);
  uint64_t v6 = *(void *)(a1 + 24);
  BOOL v7 = (void *)(v3 - 0x7AFA2E4D31C59222);
  *BOOL v7 = v6;
  v7[1] = v6 + ((unint64_t)((unsigned __int16)((v4 - 1007) * v5) % 0x90u) << 8);
  return (*(uint64_t (**)(void))(a2 + 8 * (v4 ^ 0x7FB)))();
}

uint64_t sub_1D0AD6024(char a1, char a2)
{
  char v6 = a1 + a2 + v3;
  *(unsigned char *)(v2 + v4 - 404 + (v3 ^ 0xED)) = ((v6 - 122) ^ 0xBA) * (v6 - 105);
  *(unsigned char *)(v2 + v4 - 2) = ((v6 - 121) ^ 0xBA) * (v6 - 104);
  return (*(uint64_t (**)(void))(v5 + 8 * (int)((557 * ((v2 & 0xFFFFFFFE) == 2)) ^ v3)))();
}

uint64_t sub_1D0AD60AC@<X0>(uint64_t a1@<X3>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(a3 + 8 * ((106 * (a2 + 1 != a1 + 24)) ^ v4)))(v3);
}

uint64_t sub_1D0AD6164@<X0>(int a1@<W2>, uint64_t a2@<X4>, int a3@<W5>, __n128 *a4@<X8>, __n128 a5@<Q0>)
{
  char v6 = a4 + 2;
  v6[-1] = a5;
  *char v6 = a5;
  return (*(uint64_t (**)(void))(v5 + 8 * (((a2 == 32) * a3) ^ (a1 + 849))))();
}

uint64_t sub_1D0AD6170@<X0>(uint64_t a1@<X8>)
{
  BOOL v8 = v3 < v2;
  *(unsigned char *)(a1 + (v5 - 1430380004)) = *(unsigned char *)(v6 + (v5 - 1430380004));
  if (v8 == v5 + 1319619075 < v2) {
    BOOL v8 = v5 + 1319619075 < v3;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((!v8 * v4) ^ v1)))();
}

uint64_t sub_1D0AD61D0@<X0>(uint64_t a1@<X3>, int a2@<W4>, int a3@<W5>, unsigned int a4@<W7>, unsigned int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  *(unsigned char *)(v38 + ((((v39 - 82) | a4) ^ v43) & (v41 + 1 + a1))) = *(unsigned char *)(a38 + (v40 + a3));
  return (*(uint64_t (**)(void))(v42 + 8 * ((1484 * (v40 + 1 + a2 < a5)) ^ v39)))();
}

uint64_t sub_1D0AD61DC@<X0>(int a1@<W8>)
{
  int v2 = a1 ^ 0x793;
  BOOL v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * ((a1 ^ 0x793) + 813)))(264, 4288951842) == 0;
  return (*(uint64_t (**)(void))(v1 + 8 * (int)((v3 * ((v2 + 1235657819) & 0xB6595BFC ^ 0x335)) ^ v2)))();
}

uint64_t sub_1D0AD6244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8 * ((53 * (a11 + a12 - ((a18 + v18 + (unint64_t)((v20 - 1148003270) & 0x446D213F) - 1015) << (((2 * ((v20 + 58) & 0x3F)) ^ 0x14u) - 36)) > 0xF)) ^ (v20 - 1148003270) & 0x446D213F)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1D0AD62B8()
{
  int v3 = v0 - 137;
  LODWORD(STACK[0x260]) = (v3 + LODWORD(STACK[0x260]) - ((2 * LODWORD(STACK[0x260])) & 0xF037A6BA) + 2015089038) ^ LODWORD(STACK[0x214]);
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 + v3 - 43 == 2087790019) * (15 * (v3 ^ 0x1D3) + 608)) ^ v3)))();
}

uint64_t sub_1D0AD62F8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  unint64_t v17 = (void *)(v14 + 32 * a8);
  void *v17 = v8 + ((*v13 * (a4 - 81) % v12) << v15);
  *v10 += 1024;
  v17[1] = v8 + ((*v13 * (a4 - 80) % v12) << 10);
  *v10 += 1024;
  v17[2] = v8 + ((*v13 * (a4 - 79) % v12) << 10);
  *v10 += 1024;
  v17[3] = v8 + ((*v13 * (a4 - 78) % v12) << 10);
  *v10 += 1024;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v9 + 8 * (((a8 + 1 == v11) * v16) ^ a7)))(a1, a2, a3, (a4 + 4));
}

uint64_t sub_1D0AD63E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)STACK[0x200] = v72 + 1;
  int v79 = (v73 + 196 - ((v71 >> 10) & 0x38421A) + (v71 >> 11) + 1486626469) ^ v71;
  unsigned int v80 = (((v79 << 7) ^ 0x4E108680) - ((2 * ((v79 << 7) ^ 0x4E108680)) & 0x98DBA00) + 80141628) & 0x9D2C5680 ^ v79;
  unsigned int v81 = (((((v80 << 15) ^ 0x3A868000) - ((2 * ((v80 << 15) ^ 0x3A868000)) & 0x86B10000) + 1129881220) & 0xEFC60000 ^ 0x66033F7)
       - 1) ^ v80;
  int v82 = v81 ^ (v81 >> 18) ^ 0x4199402;
  uint64_t v83 = (unsigned char *)(a71 + (v78 - 136970664));
  unsigned int v84 = 1513389751
      * ((*(_DWORD *)(*(void *)STACK[0x220] + (*(_DWORD *)STACK[0x228] & 0x420F0DB8)) ^ v83) & 0x7FFFFFFF);
  unint64_t v85 = 1513389751 * (v84 ^ HIWORD(v84));
  char v86 = *(unsigned char *)(*(void *)(v74 + 8 * ((v73 + 196) ^ 0x26A)) + (v85 >> 24));
  uint64_t v87 = (v85 >> 24) + 2;
  char v88 = *(unsigned char *)(*(void *)(v74 + 8 * ((v73 + 196) ^ 0x2F0)) + v87 - 8);
  LOBYTE(v85) = *(unsigned char *)(*(void *)(v74 + 8 * (v73 - 379)) + v87 - 8) ^ v85;
  *uint64_t v83 = v86 ^ ((v82 ^ v77) - (((v82 ^ v77) << ((v73 + 1) & 0xFE ^ 0xA5)) & 0x7E) + v73 - 100 - 1) ^ v88 ^ v85 ^ (3 * BYTE3(v85)) ^ 0x3F;
  return (*(uint64_t (**)(void))(v75
                              + 8
                              * ((442
                                * (v78
                                 - (((v86 ^ ((v82 ^ v77)
                                                            - (((v82 ^ v77) << ((v73 + 1) & 0xFE ^ 0xA5)) & 0x7E)
                                                            + v73
                                                            - 100
                                                            - 1) ^ v88 ^ v85 ^ (3 * BYTE3(v85))) ^ 0x3F) != 0) == v76)) ^ (v73 + 196))))();
}

uint64_t sub_1D0AD65F4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
  uint64_t v51 = (v48 + v50);
  uint64_t v52 = a6 + v51;
  long long v53 = *(_OWORD *)(v52 - 31);
  uint64_t v54 = &a47 + v51;
  *(_OWORD *)(v54 - 15) = *(_OWORD *)(v52 - 15);
  *(_OWORD *)(v54 - 31) = v53;
  return (*(uint64_t (**)(void))(v49 + 8 * ((344 * ((((a2 - 681) | 0x59) ^ 0x379) == (v47 & 0xFFFFFFE0))) ^ (a2 - 280))))();
}

uint64_t sub_1D0AD6660(uint64_t a1, uint64_t a2, int a3, unsigned int *a4)
{
  LODWORD(STACK[0x4F8]) = 397976029;
  LODWORD(STACK[0x4FC]) = -1901063934;
  uint64_t v8 = ((v7 - 144) ^ 0x6B0F5377BCE11861) * v6;
  *(void *)(v7 - 112) = *a4 + v8;
  *(void *)(v7 - 128) = -v8;
  int v9 = v4 - 1930891739 - v8;
  *(_DWORD *)(v7 - 136) = v9;
  *(_DWORD *)(v7 - 132) = v9 + 47;
  *(_DWORD *)(v7 - 144) = ((v4 - 1930891739) ^ 0x6F) + v8;
  *(_DWORD *)(v7 - 140) = v8 + v4 + 223534140;
  *(_DWORD *)(v7 - 116) = -(int)v8;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v4 ^ (a3 + 843))))(v7 - 144);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * *(int *)(v7 - 120)))(v10);
}

uint64_t sub_1D0AD6728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v33 = (HIDWORD(a32) + 77) | 0x4C4;
  HIDWORD(a28) = HIDWORD(a16);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8 * ((13 * (HIDWORD(a16) - 404988339 + ((2 * *(_DWORD *)(a17 - 0x17B29E1307D11810)) & 0x6A ^ 0x68) + (*(_DWORD *)(a17 - 0x17B29E1307D11810) & ((v33 ^ 0x681) - 775) ^ (451 * (v33 ^ 0x5C5u) - 135332803)) < 0xFFFFFFC0)) ^ v33)))(a1, *(&off_1F26D60E0 + HIDWORD(a32) - 44), a3, HIDWORD(a32), a5, a6, a17, -1935287493, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           *(void *)(v32 + 8 * (HIDWORD(a32) - 154)),
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a17);
}

uint64_t sub_1D0AD6750()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((v0 == 0) | (32 * (v0 == 0)) | 0x50Eu)))();
}

void sub_1D0AD6778()
{
}

uint64_t sub_1D0AD6800()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 != ((v1 - 725) ^ 0x270)) * ((v1 - 917) ^ 0x1B3)) ^ v1)))();
}

void sub_1D0AD6834(uint64_t a1)
{
  int v1 = 1334103649 * (((a1 | 0x400D215D) - a1 + (a1 & 0xBFF2DEA2)) ^ 0x28A5E9F3);
  int v2 = *(_DWORD *)a1 - v1;
  uint64_t v3 = *(void *)(a1 + 16);
  int v4 = *(_DWORD *)(a1 + 24) ^ v1;
  int v5 = *(_DWORD *)(v3 - 0x10B17FC23B8BBE1CLL);
  *(_DWORD *)(v3 - 0x10B17FC23B8BBE1CLL) = v5 + 8 * v4 - 1855914824;
  unsigned int v6 = v5 + 8 * v4 - 505944805;
  BOOL v7 = v6 < v5 + 1349970019;
  if ((v5 + 1349970019) < 0xB7A3BCE6 != v6 < 0xB7A3BCE6) {
    BOOL v7 = (v5 + 1349970019) < 0xB7A3BCE6;
  }
  *(_DWORD *)(v3 - 0x10B17FC23B8BBE18) += ((v4 - 1842602089) >> 29) + v7;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1D0AD6984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v33 = (HIDWORD(a32) + 77) | 0x4C4;
  HIDWORD(a28) = HIDWORD(a16);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8 * ((13 * (HIDWORD(a16) - 404988339 + ((2 * *(_DWORD *)(a18 - 0x17B29E1307D11810)) & 0x6A ^ 0x68) + (*(_DWORD *)(a18 - 0x17B29E1307D11810) & ((v33 ^ 0x681) - 775) ^ (451 * (v33 ^ 0x5C5u) - 135332803)) < 0xFFFFFFC0)) ^ v33)))(a1, (char *)*(&off_1F26D60E0 + HIDWORD(a32) - 97) - 8, a3, HIDWORD(a32), a5, a6, a18, -1935287493, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           *(void *)(v32 + 8 * (HIDWORD(a32) - 134)),
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a18);
}

uint64_t sub_1D0AD6994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, int a12, unsigned int a13)
{
  int v16 = v13 + 2;
  int v17 = v13;
  a11 = ((*(unsigned char *)(v15 - 0x55C89A4359EC5AE8) ^ 0xA0)
       + ((*(unsigned __int8 *)(v15 - 0x55C89A4359EC5AE8) << (29 * ((v13 + 2) ^ 0xDE) + 107)) & 0x7E ^ 0x3E)
       + 78) ^ (127 * (((&a11 | 0x2F) - &a11 + (&a11 & 0xD0)) ^ 0xEB));
  a13 = v13
      + 2
      - 1543459711
      * (((&a11 | 0x2552692F) - &a11 + (&a11 & 0xDAAD96D0)) ^ 0x69D06AEB)
      - 193;
  uint64_t v18 = (*(uint64_t (**)(char *))(v14 + 8 * (v13 + 335)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((483 * (a12 == (v17 ^ 0x147209CA))) ^ v16)))(v18);
}

uint64_t sub_1D0AD6A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54)
{
  v54[376] = a48;
  *(_DWORD *)(v59 - 112) = (v57 + 1089) ^ (846572393
                                         * ((((2 * (v59 - 144)) | 0x31E8F3D2) - (v59 - 144) - 418675177) ^ 0x2E972DA0));
  v54[374] = v55 + (a54 - 19245624);
  v54[375] = &STACK[0x4005A18C73DCAFA4];
  v54[377] = &STACK[0xFEC6AE0F7D99E60];
  (*(void (**)(uint64_t))(v56 + 8 * (v57 ^ 0x65C)))(v59 - 144);
  return (*(uint64_t (**)(uint64_t))(v56
                                            + 8
                                            * (((*(_DWORD *)(v59 - 108) == v58 + (v57 ^ 7) - 66) * (v57 ^ 0x4A6)) ^ v57)))(a16);
}

uint64_t sub_1D0AD6B74@<X0>(int a1@<W1>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  uint64_t v7 = ((v189 - 878959038)
      - 0xA4E77AAA1EA4C45
      - ((((a1 - 139004645) & 0xDCFFFB7F) - 411798481) & (2 * (v189 - 878959038)))) ^ v5;
  unint64_t v8 = v7 & 0x200000 | v7 & 0xFFFFFFFFFFDFFFFFLL ^ (v190 << 32);
  unint64_t v9 = ((v3 ^ 0x973CA7A9FE3A10D9)
      + 0x2BF9ED9F0352A945
      - 2 * ((v3 ^ 0x973CA7A9FE3A10D9) & 0x2BF9ED9F0352A965 ^ v3 & 0x20)) ^ v4;
  uint64_t v10 = v8 ^ 0x61764447BFE55C68;
  unint64_t v11 = ((v3 ^ 0x973CA7A9FE3A10D9) + a2 - ((2 * (v3 ^ 0x973CA7A9FE3A10D9)) & 0x66F4F23638B0001ELL)) ^ a3;
  uint64_t v12 = v8 ^ 0x61764447BFE55C68 ^ v6;
  unint64_t v13 = (v12 ^ 0x45646A746D3EA3B8) & (v8 ^ 0x9E89BBB8401AA397);
  unint64_t v14 = (v12 ^ 0xBA9B958B92C15C47) & (a3 ^ 0x7553BE51C303B3EELL);
  unint64_t v15 = (v12 ^ 0x45646A746D3EA3B8)
      + ((v11 ^ 0xC629C74ADF5BB3E1) & (a3 ^ 0x8AAC41AE3CFC4C11))
      - 2 * ((v12 ^ 0x45646A746D3EA3B8) & (v11 ^ 0xC629C74ADF5BB3E1) & (a3 ^ 0x8AAC41AE3CFC4C11));
  unint64_t v16 = (2 * v15) & 0x85D0AF47D665C3CELL;
  unint64_t v17 = v15 + 0x42E857A3EB32E1E7;
  unint64_t v18 = v17 - v16;
  uint64_t v19 = -131072;
  if ((v11 & 0x20000) != 0) {
    uint64_t v19 = 0x20000;
  }
  unint64_t v20 = ((v19 + (v11 ^ 0xC629C74ADF5BB3E1)) ^ 0xFFFFFFFFFFFDFFFFLL) & (v9 ^ 0x68040451F630332FLL);
  unint64_t v21 = v9 ^ 0xF87CC172352BFAA8 ^ (v13 - ((2 * v13) & 0x20F18A478637930ELL) - 0x6F873ADC3CE43679);
  uint64_t v22 = v10 & (v9 ^ 0x68040451F630332FLL);
  unint64_t v23 = v10 & (v9 ^ 0x97FBFBAE09CFCCD0);
  unint64_t v24 = v10 - 2 * v22 + v21;
  unint64_t v25 = a3 ^ 0xC4CC5C65E896D439;
  unint64_t v26 = (v23 - ((2 * v23) & 0x46176A452B931DE2) - 0x5CF44ADD6A36710FLL) ^ v11;
  unint64_t v27 = v26 ^ 0x652272684A923D10 ^ v21;
  *((void *)&v28 + 1) = v18 ^ 0x23EB32E1E7;
  *(void *)&long long v28 = v18 ^ 0x42E8578000000000;
  unint64_t v29 = v24 ^ v14;
  uint64_t v30 = (v27 >> 19) ^ (v27 << 36) ^ ((v27 >> 28) | (v27 << 45)) ^ 0x363BDE87E475190BLL;
  unint64_t v31 = v20 ^ __ROR8__((v28 >> 39) ^ __ROR8__(v25, 39) ^ 0x931850F7278B6BB7, 25);
  *((void *)&v28 + 1) = v29 ^ 0x7C8808CCB5;
  *(void *)&long long v28 = v29 ^ 0x8ABEF80000000000;
  uint64_t v32 = v28 >> 39;
  *((void *)&v28 + 1) = v31 ^ 0x393;
  *(void *)&long long v28 = v31 ^ 0xC5B5DBC98C287800;
  uint64_t v33 = (v31 << 47) ^ 0x3DC9800000000000;
  unint64_t v34 = v29 ^ __ROR8__(v29, 61) ^ v32;
  uint64_t v35 = v31 ^ (v31 >> 17) ^ (v28 >> 10);
  unint64_t v36 = v35 & 0xB0AE54BF430EA536 ^ 0x80A41013410CA506;
  unint64_t v37 = v36 + (v33 & 0xB0AE000000000000);
  unint64_t v38 = (v35 ^ 0xA4000000000000) & v33 & 0xB0AE000000000000;
  uint64_t v39 = v33 & 0x4F51800000000000 ^ 0x4511A90020C01881 ^ v35 & 0x4F51AB40BCF15AC9;
  uint64_t v40 = v18 ^ (v17 << 63) ^ (v18 << 58) ^ v34 ^ 0x6BFE6F021A6DF53ALL ^ (((v18 >> 6) ^ (v18 >> 1) ^ 0x6B53553B8F686710)
                                                                      - ((2
                                                                        * ((v18 >> 6) ^ (v18 >> 1) ^ 0x6B53553B8F686710)) & 0x696EA935A446B846)
                                                                      - 0x4B48AB652DDCA3DDLL);
  uint64_t v41 = ((v37 - 2 * v38) | v39) - 2 * (((v37 - 2 * v38) | v39) & 0x780EF8A23DF6A6FFLL ^ v36 & 2) - 0x7F1075DC2095903;
  unint64_t v42 = v26 ^ (v26 >> 41) ^ (v26 >> 7) ^ (v26 << 23) ^ (v26 << 57);
  unint64_t v43 = v42 ^ v27 ^ (v30 - ((2 * v30) & 0xC671B7EAFE1A8898) + 0x6338DBF57F0D444CLL);
  unint64_t v44 = v43 ^ 0xFD3842BAFBEA488CLL ^ (((v40 ^ 0x402796C11663D0A4) & (v34 ^ 0x20B6C46737B156E6))
                                    - ((2 * ((v40 ^ 0x402796C11663D0A4) & (v34 ^ 0x20B6C46737B156E6))) & 0x921456E4C54C2D0ALL)
                                    + 0x490A2B7262A61685);
  unint64_t v45 = (v41 ^ 0xF80EF8A23DF6A6FDLL)
      + (v42 ^ 0xD8320DCAD5814BB3)
      - 2 * ((v41 ^ 0x780EF8A23DF6A6FDLL) & (v42 ^ 0x58320DCAD5814BB3));
  uint64_t v46 = v45 - ((2 * v45) & 0x450C0C0AFF2A1DE4) - 0x5D79F9FA806AF10ELL;
  unint64_t v47 = v44 ^ v34 ^ 0x6BFE6F021A6DF53ALL ^ (((v41 ^ 0xF80EF8A23DF6A6FDLL) & (v40 ^ 0xBFD8693EE99C2F5BLL))
                                          - ((2 * ((v41 ^ 0xF80EF8A23DF6A6FDLL) & (v40 ^ 0xBFD8693EE99C2F5BLL))) & 0x696EA935A446B846)
                                          - 0x4B48AB652DDCA3DDLL);
  unint64_t v48 = v46 ^ (((v43 ^ 0x4BCD963766B3A1F6) & (v34 ^ 0xDF493B98C84EA919))
             - ((2 * ((v43 ^ 0x4BCD963766B3A1F6) & (v34 ^ 0xDF493B98C84EA919))) & 0x450C0C0AFF2A1DE4)
             - 0x5D79F9FA806AF10ELL);
  unint64_t v49 = (v46 ^ 0x5D79F9FA806AF10DLL) & (v43 ^ 0xB43269C8994C5E09);
  unint64_t v50 = (v46 ^ 0xA28606057F950EF2) & (v41 ^ 0x7F1075DC2095902) ^ v40;
  unint64_t v51 = (v49 - ((2 * v49) & 0xF01DF1447BED4DFALL) - 0x7F1075DC2095903) ^ v41;
  uint64_t v52 = v50 ^ 0x4BC503AB4F798AE2 ^ (v51 - ((2 * v51) & 0x17C52AD4B234B48CLL) + 0xBE2956A591A5A46);
  *((void *)&v28 + 1) = v47 ^ 0x7C156E755AED6;
  *(void *)&long long v28 = v47 ^ 0x5740000000000000;
  unint64_t v53 = v52
      - ((2 * v52) & 0x51F4B37BA91A16CLL)
      + 0x28FA59BDD48D0B6
      - ((2 * (v52 - ((2 * v52) & 0x51F4B37BA91A16CLL) + 0x28FA59BDD48D0B6)) & 0xB5C5A02A0E081AA8)
      + 0x5AE2D01507040D54;
  uint64_t v54 = (v28 >> 51) ^ (v47 >> 61 << 13) ^ 0x38F7A7B610A57E89;
  *((void *)&v28 + 1) = v48 ^ v44 ^ 0x565E3;
  *(void *)&long long v28 = v48 ^ v44 ^ 0xAC7C0FF401200000;
  uint64_t v55 = v48 ^ 0x3169B46633DB5599 ^ (((v48 >> 7) ^ 0x1347079F10300EALL)
                                    - ((2 * ((v48 >> 7) ^ 0x1347079F10300EALL)) & 0x2A3113D64B641B8)
                                    - 0x54AE77614DA4DF24);
  uint64_t v56 = (((v53 >> 10) ^ (v53 >> 17) ^ 0x1695C56D4B4281)
       - 2
       * (((v53 >> 10) ^ (v53 >> 17) ^ 0x1695C56D4B4281) & 0x22D01507040D76 ^ ((v53 >> 10) ^ (v53 >> 17)) & 0x22)
       + 0x5AE2D01507040D54) ^ v53;
  uint64_t v57 = (8 * v47) ^ (v47 >> 39) ^ (v47 << 25) ^ __ROR8__(v54, 13);
  uint64_t v58 = v48 ^ v44 ^ __ROR8__(v48 ^ v44, 28) ^ (v28 >> 19);
  uint64_t v59 = (v55 | (v48 << 23) ^ 0x7C40C03AA2800000) ^ ((v48 >> 41) | (v48 << 57)) ^ v55 & ((v48 << 23) ^ 0x7C40C03AA2800000);
  unint64_t v60 = ((v53 << 47) ^ 0x6AA000000000000) & 0xB6E5800000000000 ^ (v53 << 54) ^ (v56 & 0x491A16EB04F199E1 ^ ((v53 << 47) ^ 0x6AA000000000000) & 0x491A000000000000 | v56 & 0xB6E5E914FB0E661ELL);
  unint64_t v61 = (v59 ^ 0x4BD2A6D3063FC53BLL ^ ((((v58 ^ 0xBE2A51CEC6E59AA3) + (v58 ^ 0xCBD5AE3139577942 ^ v59) + 1) ^ ((v59 ^ 0x75FFFFFFFFB2E3E1) + 1))
                                     - ((2
                                       * (((v58 ^ 0xBE2A51CEC6E59AA3) + (v58 ^ 0xCBD5AE3139577942 ^ v59) + 1) ^ ((v59 ^ 0x75FFFFFFFFB2E3E1) + 1))) & 0x83A54DA60CE5B24ALL)
                                     - 0x3E2D592CF98D26DBLL))
      + (v58 ^ 0xBE2A51CEC6E59AA3);
  unint64_t v62 = v61 - ((2 * v61) & 0xB3165AF34F51E080) - 0x2674D28658570FC0;
  unint64_t v63 = (((v50 << 63) ^ (v50 << 58)) & 0xFC00000000000000 | (v50 >> 6)) ^ v50 ^ v57 ^ (((v50 >> 1) ^ 0x17B170AF5F9E084FLL)
                                                                                       - ((2
                                                                                         * ((v50 >> 1) ^ 0x17B170AF5F9E084FLL)) & 0xD5183D324F9DA89ALL)
                                                                                       - 0x1573E166D8312BB3);
  unint64_t v64 = v63 ^ 0xC5537442E20E3491;
  uint64_t v65 = v62 ^ (v63 ^ 0x5EEA121549BD488ALL) & (v57 ^ 0x1C4699A8544C83E4);
  unint64_t v66 = (v63 ^ 0xC5537442E20E3491) & 0x460072CBC8B5D697 ^ 0x42005283C0309201 ^ (v60 ^ 0x130072CBC8B5D697) & (v63 ^ 0xA115EDEAB642B775);
  uint64_t v67 = v66 - ((2 * v66) & 0x4C30522FD16611B2) - 0x59E7D6E8174CF727;
  unint64_t v68 = v67 ^ 0xA0186B1C6887185CLL;
  unint64_t v69 = v60 ^ 0xDABFE9F01946E12ELL ^ (((v60 ^ v59 ^ 0x20FFFFFFFFB2E3E1) & (v62 ^ 0xD98B2D79A7A8F040))
                                    - ((2 * ((v60 ^ v59 ^ 0x20FFFFFFFFB2E3E1) & (v62 ^ 0xD98B2D79A7A8F040))) & 0x1F7FD3E0328DC25CLL)
                                    - 0x7040160FE6B91ED2);
  unint64_t v70 = (v65 ^ 0x866CB99A30D017E3 ^ v67) + (v67 ^ 0xA0186B1C6887185CLL) + 1;
  unint64_t v71 = (v60 ^ 0xAAFFFFFFFFFFFFFFLL) & (v59 ^ 0x8A000000004D1C1ELL) ^ v64;
  unint64_t v72 = v60 ^ v59 ^ (v62 ^ 0x2674D28658570FBFLL) & (v57 ^ 0xE3B96657ABB37C1BLL);
  unint64_t v73 = (((v70 ^ ((v65 ^ 0x2674D28658570FBFLL) + 1))
        - ((2 * (v70 ^ ((v65 ^ 0x2674D28658570FBFLL) + 1))) & 0xD99E7C697BF707D4)
        + 0x6CCF3E34BDFB83EALL) ^ v65 ^ 0xB544134D1A5373AALL)
      + v68;
  unint64_t v74 = ((v72 ^ 0xDF000000004D1C1ELL)
       - 2 * ((v72 ^ 0xDF000000004D1C1ELL) & 0x6CCF3E34BDFB83EBLL ^ v72 & 1)
       + 0x6CCF3E34BDFB83EALL) ^ v65 ^ 0xB544134D1A5373AALL;
  unint64_t v75 = (v73 - ((2 * v73) & 0xE4F41554D03A4E9ELL) + 0x727A0AAA681D274FLL) ^ v57;
  unint64_t v76 = (v69 - ((2 * v69) & 0x8609379E3899D22CLL) - 0x3CFB6430E3B316EALL) ^ v71;
  LOBYTE(v64) = *(unsigned char *)(((v75 >> 61) ^ 4) + v198 + 52);
  unint64_t v77 = (((v76 ^ 0x58BDFD98B7FF950DLL) << 54) ^ 0xCD80000000000000)
      - ((2 * (((v76 ^ 0x58BDFD98B7FF950DLL) << 54) ^ 0xCD80000000000000)) & 0x1200000000000000)
      + 0x91F75E93B3CC0FCLL;
  *((void *)&v28 + 1) = v75 ^ 0x453DED89E8;
  *(void *)&long long v28 = v75 ^ 0xA3BB948000000000;
  uint64_t v78 = (v74 >> 19) ^ (v74 << 36) ^ ((v74 >> 28) | (v74 << 45)) ^ 0x2A792D6678673724;
  uint64_t v79 = v75 ^ ((v64 - 68) ^ (16 * v64)) ^ (8 * v75) ^ (v28 >> 39);
  unint64_t v80 = ((v76 ^ 0x2BCD51F0E7CF5E3BLL) + (v76 ^ 0xDD2DDBE6230C6138 ^ v77) + 1) ^ ((v77 ^ 0xF6E08A16C4C33F03) + 1);
  uint64_t v81 = ((v80 - ((2 * v80) & 0x123EEBD2767981F8) + 0x91F75E93B3CC0FCLL) ^ v77) + (v76 ^ 0x2BCD51F0E7CF5E3BLL);
  unint64_t v82 = v72 ^ (v72 << 23) ^ (v72 >> 7) ^ ((v72 >> 41) | (v72 << 57));
  uint64_t v83 = v74 ^ v82 ^ (v78 - ((2 * v78) & 0x6B480230F910EE08) + 0x35A401187C887704);
  unint64_t v84 = ((v76 ^ 0x58BDFD98B7FF950DLL) >> 10) ^ (v76 >> 17) ^ ((v76 ^ 0x58BDFD98B7FF950DLL) << 47) ^ v81;
  unint64_t v85 = (v71 >> 1) ^ (v71 << 58) ^ (v71 >> 6) ^ (((unint64_t)~v71 << 63) | 0x2314BFB73E927408) ^ 0xB38E7934F0F5BFBBLL ^ v79;
  uint64_t v86 = (v85 - ((2 * v85) & 0x411713D0875F0546) - 0x5F747617BC507D5DLL) ^ v71;
  unint64_t v87 = (v84 ^ v82 ^ 0xFA347A27A89CDAEBLL) & (v83 ^ 0x3BEC8C548CACABCFLL);
  uint64_t v88 = (unsigned __int16)v84 & 0x8000;
  unint64_t v89 = (v79 ^ 0xBE6732ECD281C6BBLL) & (v83 ^ 0xC41373AB73535430);
  uint64_t v90 = (v86 ^ 0x42670553A55446A7) & (v79 ^ 0x4198CD132D7E3944);
  unint64_t v91 = (v86 ^ 0xBD98FAAC5AABB958) & (v84 ^ 0x6587C9CDB2EC7FD5) ^ ((v79 ^ 0xBE6732ECD281C6BBLL)
                                                                     + 0x425764BB5877DA26
                                                                     + ((2 * v79) & 0x84AEC976B0EFB44ALL ^ 0xFB71BEAF5FFC7BBDLL));
  unint64_t v92 = v84 & 0xFFFFFFFFFFFF7FFFLL;
  uint64_t v93 = (v90 - ((2 * v90) & 0x6F5B8F1AF35C760CLL) - 0x485238728651C4FALL) ^ v83;
  unint64_t v94 = v86 ^ (v84 ^ 0x9A7836324D13802ALL) & (v82 ^ 0x604C4C15E58F5AC1);
  unint64_t v95 = v91 ^ v93;
  unint64_t v96 = v84 ^ v82 ^ v89;
  LODWORD(v74) = (((v91 ^ v93) >> 61) ^ 4) + 186;
  uint64_t v97 = v93 ^ v96;
  unint64_t v98 = v93 ^ v96 ^ 0x5CB85D857632514;
  unsigned int v99 = (((v74 ^ 0xFFFFFFB2) + (v74 ^ 0x69) + 1) ^ 0xFFFFFFF8) + (v74 ^ 0x69);
  uint64_t v100 = 0xAB56D65ACDA84078 - (v88 | 0x55AB6B2D66D4203CLL);
  if ((v87 & v88) == 0) {
    uint64_t v100 = v88 | 0x55AB6B2D66D4203CLL;
  }
  unint64_t v101 = v87 - 0x55AB6B2D66D4203CLL + v100;
  uint64_t v102 = v191 + 532;
  unsigned int v103 = *(unsigned __int8 *)(v191 + 532 + v99);
  uint64_t v104 = ((v92 ^ 0x6587C9CDB2EC7FD5 ^ v101)
        - ((2 * (v92 ^ 0x6587C9CDB2EC7FD5 ^ v101)) & 0x268F3A1FCD7989C4)
        + 0x13479D0FE6BCC4E2) ^ v94;
  uint64_t v105 = (v98 << 45) ^ (v98 << 36) ^ (v98 >> 19) ^ (v98 >> 28) ^ 0x720E374746F943BDLL;
  uint64_t v106 = v97 ^ 0x16090B691A669156 ^ (v105 - ((2 * v105) & 0x10EAC51A9DDFA202) + 0x875628D4EEFD101);
  unint64_t v107 = v104 ^ ((v104 ^ 0x5120985C43E88245) << 47) ^ ((v104 ^ 0x5120985C43E88245) << 54) ^ ((v104 ^ 0x5120985C43E88245uLL) >> 10) ^ ((v104 ^ 0x5120985C43E88245uLL) >> 17);
  unint64_t v108 = v96 ^ (v96 << 23) ^ (v96 >> 7) ^ ((v96 >> 41) | (v96 << 57));
  *((void *)&v109 + 1) = v94 ^ 0xDDDDDDDD;
  *(void *)&long long v109 = v94 ^ 0x91BD1B60C5EBC280;
  uint64_t v110 = v95 ^ ((v103 >> 5) | (8 * v103)) ^ 0x63u ^ (8 * v95) ^ (v95 << 25) ^ (v95 >> 39);
  unint64_t v111 = v107 ^ v108;
  uint64_t v112 = v106 ^ v108;
  uint64_t v113 = v106 ^ v108 ^ 0x56169BEE52314C8ALL;
  uint64_t v114 = v107 ^ 0x7454F00FC53958D6 ^ v106;
  uint64_t v115 = (((unint64_t)~v94 << 63) | 0x48DE8DB062F5E14ELL) ^ (v94 >> 1) ^ (v109 >> 6);
  unint64_t v116 = v94 ^ 0xB44FEB6B89C3B195 ^ (v115 - ((2 * v115) & 0x4BE5E0169850E610) + 0x25F2F00B4C287308);
  unint64_t v117 = v110 ^ v116;
  if ((v110 ^ v116) == 0x5DA11037CE0E9416) {
    uint64_t v114 = v113;
  }
  unint64_t v118 = v113 ^ (((v110 ^ 0xA25EEFC831F16BE9) & v116)
               - ((2 * ((v110 ^ 0xA25EEFC831F16BE9) & v116)) & 0xE8455A672B89B888)
               + 0x7422AD3395C4DC44);
  unint64_t v119 = (v112 ^ 0xDDCBC922380A6F31) & (v110 ^ 0x5DA11037CE0E9416) ^ v111;
  unint64_t v120 = (v107 ^ 0xFF89A2C3AF027B6DLL) & (v108 ^ 0x223436DDC7F590CELL);
  unint64_t v121 = v120 & 0x100;
  unint64_t v122 = v110 ^ (((v107 ^ 0x765D3C50FD8492) & (v117 ^ 0xA25EEFC831F16BE9))
               - ((2 * ((v107 ^ 0x765D3C50FD8492) & (v117 ^ 0xA25EEFC831F16BE9))) & 0xA966DF54D8CB28D4)
               + 0x54B36FAA6C65946ALL) ^ v118 ^ 0x9127F9DA26B007CLL;
  unint64_t v123 = (v114 ^ 0x7422AD3395C4DC44) & (v111 ^ 0xDDBD941E68F7EBA3);
  unint64_t v124 = v120 & 0xFFFFFFFFFFFFFEFFLL;
  unint64_t v125 = v119 ^ v118;
  unint64_t v126 = v119 ^ v118 ^ 0x22426BE19708145CLL;
  uint64_t v127 = 0xB2273B7EF6D8E442 - (v121 | 0x59139DBF7B6C7221);
  if ((v121 & v117) == 0) {
    uint64_t v127 = v121 | 0x59139DBF7B6C7221;
  }
  uint64_t v128 = ((v117 ^ 0x5DA11037CE0E9416) - 0x59139DBF7B6C7221 + v127) ^ v124;
  unint64_t v129 = v125 ^ 0xFC392ABC37C5BAE5 ^ (((v126 >> 19) ^ 0x1278468636ELL)
                                      - 2 * (((v126 >> 19) ^ 0x1278468636ELL) & 0x21EBBBB7AB7 ^ (v126 >> 19) & 0x11)
                                      - 0x28B89DE14444855ALL);
  unint64_t v130 = v122
       + 0x6005BE354A5BB0B2
       - ((2 * v122) & 0xC00B7C6A94B76164)
       - ((2 * (v122 + 0x6005BE354A5BB0B2 - ((2 * v122) & 0xC00B7C6A94B76164))) & 0x35F7F4F8BA351024);
  unint64_t v131 = (v123 - ((2 * v123) & 0xA74DDE85018EBD8CLL) - 0x2C5910BD7F38A13ALL) ^ v107;
  unint64_t v132 = ((v131 ^ 0xD3D0B27ED03ADA54)
        - 2 * ((v131 ^ 0xD3D0B27ED03ADA54) & 0x753989CD2C78692ALL ^ v131 & 0x28)
        - 0xAC67632D38796FELL) ^ v128;
  uint64_t v133 = (v125 >> 28) ^ 0x2B7E48A28;
  unint64_t v134 = v129 + v133;
  uint64_t v135 = __ROR8__(__ROR8__(v128, 58) ^ 0x676D31D60A8EAE13, 6);
  unint64_t v136 = v129 & v133;
  unint64_t v137 = v135 - ((2 * v135) & 0xF4013537349F5456) - 0x5FF656465B055D5;
  unint64_t v138 = v134 - 2 * v136;
  unint64_t v139 = (v137 ^ 0xDA59D557169A6FD7)
       - ((2 * (v137 ^ 0xDA59D557169A6FD7)) & 0x6CB7A2D03D570A8CLL)
       - 0x49A42E97E1547ABALL;
  unint64_t v140 = (v130 - 0x65040583A2E577EELL) ^ ((v130 - 0x65040583A2E577EELL) >> 39) ^ ((v130 + 0x1AFBFA7C5D1A8812) >> 61) ^ (8 * (v130 - 0x65040583A2E577EELL));
  unint64_t v141 = __ROR8__(__ROR8__(v140, 62) & 0x8ADA6B218D2914E2 ^ __ROR8__((((v130 - 0x65040583A2E577EELL) << 25) ^ 0xF8BA351024000000) & 0xA2B69AC862000000, 62) ^ 0x7B3F4AA975B4A75ALL, 2) ^ 0x9EEBDA227D272CE6 | (((v130 - 0x65040583A2E577EELL) << 25) ^ 0xF8BA351024000000) & 0x5D4965379C000000 ^ 0x4D00211694B13A46 ^ v140 & 0x5D4965379CB5BAC7;
  unint64_t v142 = v141 - ((2 * v141) & 0xEEB5BF0463936E46) - 0x8A5207DCE3648DDLL;
  *((void *)&v144 + 1) = v132 ^ 0xC0;
  *(void *)&long long v144 = v132 ^ 0x64D29CCFFF8D400;
  uint64_t v143 = v144 >> 10;
  *((void *)&v144 + 1) = v119 ^ 0x14E10FE570DLL;
  *(void *)&long long v144 = v119 ^ 0xFF7DC0000000000;
  uint64_t v145 = v144 >> 41;
  *((void *)&v144 + 1) = (v141 - ((2 * v141) & 0x63936E46) + 835303203) ^ 0x11C9B723u;
  *(void *)&long long v144 = v142 ^ 0xF75ADF8220000000;
  unint64_t v146 = v132 ^ __ROR8__(v132, 17) ^ v143;
  unint64_t v147 = (((v137 >> 1) ^ 0x6D2CEAAB8B4D37EBLL)
        - ((2 * ((v137 >> 1) ^ 0x6D2CEAAB8B4D37EBLL)) & 0xB1AA6CEB2B168440)
        + 0x58D53675958B4220) ^ v137 ^ ((v139 << 58) ^ 0x1800000000000000) & 0xB000000000000000 ^ (((v139 << 58) ^ 0x1800000000000000) & 0x4C00000000000000 | ((v137 ^ 0xDA59D557169A6FD7) << 63)) ^ (((v139 >> 6) ^ 0x2D96F45A07AAE15) - ((2 * ((v139 >> 6) ^ 0x2D96F45A07AAE15)) & 0x6B5BF0463936E46) - 0x8A5207DCE3648DDLL) ^ v142;
  uint64_t v148 = __ROR8__((v144 >> 29) ^ 0xD254F78C6D6AE92ALL, 35) ^ 0x7252A2DAA5B5610ELL;
  *((void *)&v144 + 1) = v119 ^ 0xD;
  *(void *)&long long v144 = v119 ^ 0xFF7DD4E10FE5700;
  uint64_t v149 = (((v144 >> 7) ^ v145) - ((2 * ((v144 >> 7) ^ v145)) & 0xEF10952FFD1AFF42) + 0x77884A97FE8D7FA1) ^ v119;
  unint64_t v150 = v146 ^ v149;
  unint64_t v151 = (v126 << 36) ^ (v126 << 45) ^ v149 ^ v138;
  unint64_t v152 = ((v148 & (v147 ^ 0x828CE32283112DF7))
        - ((2 * (v148 & (v147 ^ 0x828CE32283112DF7))) & 0x8452BCCA3EC5522)
        + 0x42295E651F62A91) ^ v151;
  uint64_t v153 = v152 ^ 0x11B3A3CFBF85023DLL;
  unint64_t v154 = (v142 ^ 0xF75ADF8231C9B723) & (v151 ^ 0xEA6EC9D6118CD753) ^ v146 ^ v149;
  uint64_t v155 = ((v152 ^ 0x11B3A3CFBF85023DLL)
        - 2 * ((v152 ^ 0x11B3A3CFBF85023DLL) & 0x238351C0F1B7749FLL ^ v152 & 2)
        + 0x238351C0F1B7749DLL) ^ v154;
  *((void *)&v144 + 1) = v155 ^ 0x1177F6F;
  *(void *)&long long v144 = v155 ^ 0x3139C516F0000000;
  uint64_t v156 = v155 ^ ((v155 ^ 0x37D1ECF374DAF70DLL) << 45) ^ (v144 >> 28);
  unint64_t v157 = v156 ^ ((v155 ^ 0x37D1ECF374DAF70DuLL) >> 19);
  char v158 = *(unsigned char *)(v192 + ((v155 ^ (v144 >> 28) ^ ((v155 ^ 0x37D1ECF374DAF70DuLL) >> 19)) ^ 0x6BLL));
  char v159 = ((2 * (76 - (v158 & 1))) & 0x1A) + ((76 - (v158 & 1)) ^ 0xD);
  char v160 = v159 - ((2 * v159) & 0x9C) - 50;
  *((void *)&v144 + 1) = v146 ^ 0xC2D2AEA6B1EAB3CLL;
  *(void *)&long long v144 = v146 ^ 0x6000000000000000;
  unint64_t v161 = (v144 >> 60) ^ 0x55C9D7FB7C48D3C4;
  uint64_t v162 = (v147 ^ 0x7D731CDD7CEED208) & (v146 ^ 0x6C2D2AEA6B1EAB3CLL);
  unint64_t v163 = (v150 ^ 0xEBAD42CC7A927C6FLL) & (v151 ^ 0x15913629EE7328ACLL) ^ (v161 >> 4);
  unint64_t v164 = v147 ^ (v150 ^ 0x1452BD33856D8390) & (v146 ^ 0x93D2D51594E154C3);
  unint64_t v165 = v164 ^ 0xC66C847D5A62470ELL;
  if (v158) {
    char v166 = v160;
  }
  else {
    char v166 = -105;
  }
  unint64_t v167 = (v162 - ((2 * v162) & 0xEEB5BF0463936E46) - 0x8A5207DCE3648DDLL) ^ v142 ^ v153;
  uint64_t v168 = (v163 ^ 0x6CBD367E933BC4DBLL) + 0x44E0675FD9736AF9;
  uint64_t v169 = v165 ^ (v168 - ((2 * (v163 ^ 0x6CBD367E933BC4DBLL)) & 0x9C0CEBFB2E6D5F2));
  unint64_t v170 = (v165 ^ (v168 - 2 * ((v163 ^ 0x6CBD367E933BC4DBLL) & 0x44E0675FD9736AFDLL ^ v163 & 4))) & 0xDB83DC4790523DB0 | v169 & 0x247C23B86FADC24FLL;
  uint64_t v171 = v170 - 2 * (v170 & 0x2DB416D86135FA5DLL ^ v169 & 0xD) + 0x2DB416D86135FA50;
  *((void *)&v172 + 1) = v154 ^ 0xBD33856D8390;
  *(void *)&long long v172 = v154 ^ 0x1452000000000000;
  uint64_t v173 = (v172 >> 48) - ((2 * (v172 >> 48)) & 0x800EB801F5BDBACALL) + 0x40075C00FADEDD65;
  unint64_t v174 = (((v173 ^ 0x23D9CA16B4AFA02) + (v173 ^ 0x40075C00FADEDD65) + 1) ^ 0xFFFFFFFFFFFFFFF0)
       + (v173 ^ 0x40075C00FADEDD65);
  uint64_t v175 = __ROR8__(v174, 16);
  uint64_t v176 = v167 ^ (v167 >> 61) ^ (v167 >> 39) ^ (8 * v167);
  *((void *)&v172 + 1) = v175 ^ 0xFF2075463CLL;
  *(void *)&long long v172 = v175 ^ 0x9FAC8C0000000000;
  unint64_t v177 = v176 ^ (v167 << 25);
  unint64_t v178 = v171 ^ (v161 << 60) ^ (v171 << 47) ^ (((v171 ^ (v161 << 60)) >> 17) ^ ((v171 ^ (v161 << 60)) >> 10) | (v171 << 54));
  uint64_t v179 = v175 ^ __ROR8__(v174, 23) ^ (v172 >> 41);
  unint64_t v180 = v164 ^ (v164 >> 1) ^ (v164 << 58) ^ (v164 << 63) ^ (v164 >> 6);
  unsigned __int8 v181 = v166 ^ ((v158 & 0xFE) - ((2 * v158) & 0x9C) - 50);
  v196[32] = (BYTE4(v157) ^ 0xCB) + ((2 * (BYTE4(v157) ^ 0xCB)) & 0x80) - 64;
  v196[41] = (BYTE1(v157) ^ 0xCF) + ((2 * (BYTE1(v157) ^ 0xCF)) & 0x80) - 64;
  v196[45] = (BYTE3(v157) ^ 0xF4) + ((2 * (BYTE3(v157) ^ 0xF4)) & 0x80) - 64;
  v193[18] = BYTE2(v157) ^ 0x2B;
  v196[2] = ((v181 >> 5) | (8 * v181)) + (~(16 * v181) | 0x7F) - 63;
  unsigned int v182 = *(unsigned __int8 *)(v194 + (((BYTE5(v157) ^ 0x85) - 11) ^ 0x5BLL));
  v196[9] = (BYTE6(v156) ^ 0x35) + (~(2 * BYTE6(v156)) | 0x7F) - 63;
  v196[38] = HIBYTE(v156) + (~(2 * HIBYTE(v156)) | 0x7F) + 65;
  v196[12] = (BYTE1(v176) ^ 0xCF) + ((2 * (BYTE1(v176) ^ 0xCF)) & 0x80) - 64;
  v196[50] = v176 ^ 0x28;
  v193[16] = (((v182 ^ 0xFFFFFFBC ^ (v182 >> 3) & 4) & 0x80) != 0) | (2 * (v182 ^ 0xBC ^ (v182 >> 3) & 4));
  LOBYTE(v176) = *(unsigned char *)(v192 + (BYTE2(v176) ^ 0x8ALL));
  v196[48] = (BYTE3(v177) ^ 6) + ((2 * BYTE3(v177)) & 0x80) - 64;
  v193[12] = ~BYTE6(v177);
  v193[19] = HIBYTE(v177) ^ 0xE2;
  v196[11] = (((v176 ^ 0x59) >> 5) | (8 * (v176 ^ 0x59))) + ((16 * (v176 ^ 0x59)) & 0x80) - 64;
  v193[6] = BYTE5(v177) ^ 0xD;
  v193[4] = BYTE4(v177) ^ 0x35;
  char v183 = *(unsigned char *)(v198 + (((v180 ^ 0xF9) + 52) ^ 1));
  *int v196 = ((v180 ^ 0x2C621F300C534F9) >> (v177 & 0x10) >> (v177 & 0x10 ^ 0x10))
        + ((2 * ((v180 ^ 0x2C621F300C534F9) >> (v177 & 0x10) >> (v177 & 0x10 ^ 0x10))) & 0x80)
        - 64;
  v196[37] = (BYTE1(v180) ^ 0x34) + (~(2 * BYTE1(v180)) | 0x7F) - 63;
  v196[40] = (v183 + 60) ^ (16 * v183) ^ 0x53;
  unsigned int v184 = *(unsigned __int8 *)(v102
                            + ((((v164 ^ (v164 >> 1) ^ (v164 >> 6)) >> 24)
                                               - 70) ^ 0x4DLL));
  v196[6] = (BYTE5(v180) ^ 0x21) + ((2 * BYTE5(v180)) & 0x80) - 64;
  v196[24] = (BYTE4(v180) ^ 0xF3) + ((2 * (BYTE4(v180) ^ 0xF3)) & 0x80) - 64;
  v196[46] = (BYTE6(v180) ^ 0xC6) + ((2 * (BYTE6(v180) ^ 0xC6)) & 0x80) - 64;
  v196[31] = (HIBYTE(v180) ^ 2) + ((2 * HIBYTE(v180)) & 0x80) - 64;
  v196[44] = (((((v184 >> 1) | ((_BYTE)v184 << 7)) ^ 0x36) >> 4) | (16
                                                                                   * (((v184 >> 1) | ((_BYTE)v184 << 7)) ^ 0x36)))
           + ((32 * (((v184 >> 1) | ((_BYTE)v184 << 7)) ^ 0x36)) & 0x80)
           - 64;
  LODWORD(v177) = *(unsigned __int8 *)(v102 + (((v178 ^ 0xB4) - 70) ^ 0x4DLL));
  v196[39] = (BYTE1(v178) ^ 0x87) + ((2 * BYTE1(v178)) & 0x80) - 64;
  v196[34] = (((((v177 >> 1) | ((_BYTE)v177 << 7)) ^ 0x36) >> 4) | (16
                                                                                                 * (((v177 >> 1) | ((_BYTE)v177 << 7)) ^ 0x36)))
           + (~(32 * (((v177 >> 1) | ((_BYTE)v177 << 7)) ^ 0x36)) | 0x7F)
           - 63;
  v196[20] = (BYTE2(v178) ^ 0x41) + ((2 * (BYTE2(v178) ^ 0x41)) & 0x80) - 64;
  LODWORD(v176) = *(unsigned __int8 *)(v102 + (((BYTE3(v178) ^ 0xDC) - 70) ^ 0x4DLL));
  LODWORD(v176) = (v176 << (-(char)v195 & 7) << (-(char)v195 & 7 ^ 7)) ^ (v176 >> 1) ^ 0x36;
  v196[43] = ((v178 & 0xFF00000000 ^ 0xCF00000000) >> 32) ^ 8;
  char v185 = (v176 >> 4) | (16 * v176);
  uint64_t result = (32 * v176) & 0x80;
  v196[23] = v185 + result - 64;
  unsigned int v187 = *(unsigned __int8 *)(v102 + (((BYTE5(v178) ^ 0x6D) - 70) ^ 0x4DLL));
  v196[19] = (BYTE2(v179) ^ 0x35) + ((2 * BYTE2(v179)) & 0x80) - 64;
  v196[16] = v179 ^ 0x70;
  v196[36] = (BYTE1(v179) ^ 0xAC) + ((2 * BYTE1(v179)) & 0x80) - 64;
  v196[26] = ((v178 & 0xFFFFFFFFFFFFFF4FLL ^ 0x44976D07DC4187B4) >> (v180 & 0x38 ^ 0x38) >> (v180 & 0x38))
           + ((2 * ((v178 & 0xFFFFFFFFFFFFFF4FLL ^ 0x44976D07DC4187B4) >> (v180 & 0x38 ^ 0x38) >> (v180 & 0x38))) & 0x80)
           - 64;
  v196[47] = (BYTE6(v178) ^ 0x97) + (~(2 * BYTE6(v178)) | 0x7F) - 63;
  v196[29] = (((((v187 >> 1) | ((_BYTE)v187 << 7)) ^ 0x36) >> 4) | (16
                                                                                   * (((v187 >> 1) | ((_BYTE)v187 << 7)) ^ 0x36)))
           + ((32 * (((v187 >> 1) | ((_BYTE)v187 << 7)) ^ 0x36)) & 0x80)
           - 64;
  int v188 = *(unsigned __int8 *)(v194 + (((BYTE3(v179) ^ 0xDE) - 11) ^ 0x5BLL));
  v196[8] = (BYTE4(v179) ^ 0xE6) - 2 * ((BYTE4(v179) ^ 0xE6) & 0xC1 ^ BYTE4(v179) & 1) - 64;
  v196[30] = (HIBYTE(v179) ^ 0xE6) + ((2 * (HIBYTE(v179) ^ 0xE6)) & 0x80) - 64;
  v196[18] = (BYTE5(v179) ^ 0xD5) + ((2 * (BYTE5(v179) ^ 0xD5)) & 0x80) - 64;
  LOBYTE(v180) = v188 ^ 0xB8 ^ ((~v188 & 0x25uLL) >> (v179 & 3) >> (v179 & 3 ^ 3));
  v196[22] = (BYTE6(v179) ^ 0x93) + ((2 * BYTE6(v179)) & 0x80) - 64;
  v196[1] = (((v180 & 0x80) != 0) | (2 * v180)) + ((4 * v180) & 0x80) - 64;
  **unint64_t v197 = v195 - 2110783478;
  return result;
}

uint64_t sub_1D0AD8CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,_DWORD *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,_DWORD *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,unsigned int a54)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t))(v54 + 8 * (int)(((*a32 - 279851350 + ((2 * (*a37 & 0x3F)) ^ 0x6C) + (*a37 & 0x3F ^ 0xFF9EDDC9) < ((HIDWORD(a36) + 228) ^ 0xFFFFFF27)) * (HIDWORD(a38) - 983)) ^ (a54 + 1026))))(a1, a2, a3, a4, a54, a52, 3390682160, 2239575733, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1D0AD8D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18
                                                                                                  + 8 * (((a14 != 1667145854) * (((v17 ^ 0x11A) + 437) ^ 0x1A6)) ^ (v17 + 780))))(a17, a2, a3, a4, a5, a6, a11);
}

uint64_t sub_1D0AD8DF0(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, uint64_t a13, uint64_t a14)
{
  unsigned int v27 = v18 - 16;
  uint64_t v28 = v27 & 0xF;
  uint64_t v29 = v14;
  v30.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v30.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v23, a5).u64[0];
  int8x16_t v31 = vrev64q_s8(vmulq_s8(v30, a6));
  *(int8x16_t *)(a14 + v27) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v15 + v28 - 15), *(int8x16_t *)(a13 + v27)), *(int8x16_t *)(v17 + v28 - 15)), *(int8x16_t *)(v16 + v28 + ((a12 + 715) ^ v20) - 15)), vextq_s8(v31, v31, 8uLL));
  return (*(uint64_t (**)(void))(v22 + 8 * (((v19 == 16) * v21) ^ a12)))();
}

uint64_t sub_1D0AD8E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8 * ((1716 * ((unint64_t)(a11 - ((a15 + 1) << (((v16 ^ 0x39) - 6) ^ 0x7Du))) < 0x10)) ^ v16)))(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_1D0AD8E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,_DWORD *a40)
{
  *a40 = v42 + (*a40 ^ v42) + (v40 ^ v42) - (((v41 - 1059) ^ (v43 + 33)) & (2 * ((*a40 ^ v42) + (v40 ^ v42))));
  JUMPOUT(0x1D0AFA604);
}

uint64_t sub_1D0AD8E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, uint64_t a18)
{
  int v23 = a5 + 125;
  int v20 = 1477295531 * ((((v19 - 144) | 0x70FC94F0) - (v19 - 144) + ((v19 - 144) & 0x8F036B08)) ^ 0x47F7A1A3);
  *(void *)(v19 - 128) = a18;
  *(_DWORD *)(v19 - 140) = v20 + 358377246;
  *(_DWORD *)(v19 - 136) = 209736385 - v20 + a5 + 125;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (a5 ^ 0x614)))(v19 - 144);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * ((13
                                              * (a17
                                               - 404988339
                                               + ((2 * *(_DWORD *)(a18 - 0x17B29E1307D11810)) & 0x6A ^ 0x68)
                                               + (*(_DWORD *)(a18 - 0x17B29E1307D11810) & ((((v23 + 77) | 0x4C4) ^ 0x681)
                                                                                           - 775) ^ (451 * (((v23 + 77) | 0x4C4) ^ 0x5C5u) - 135332803)) < 0xFFFFFFC0)) ^ ((v23 + 77) | 0x4C4))))(v21);
}

uint64_t sub_1D0AD8F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned char *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char v71 = *(unsigned char *)(a7 + 16);
  unint64_t v70 = (unsigned char *)(a7 + 16);
  *(unsigned char *)(v68 - 0x26DA2E863FF41880) = *(unsigned char *)(v68 - 0x26DA2E863FF41890) ^ v71;
  *(unsigned char *)(v68 - 0x26DA2E863FF4187FLL) = *(unsigned char *)(v68 - 0x26DA2E863FF4188FLL) ^ v70[1];
  *(unsigned char *)(v68 - 0x26DA2E863FF4187ELL) = *(unsigned char *)(v68 - 0x26DA2E863FF4188ELL) ^ v70[2];
  *(unsigned char *)(v68 - 0x26DA2E863FF4187DLL) = *(unsigned char *)(v68 - 0x26DA2E863FF4188DLL) ^ v70[3];
  *(unsigned char *)(v68 - 0x26DA2E863FF4187CLL) = *(unsigned char *)(v68 - 0x26DA2E863FF4188CLL) ^ v70[4];
  *(unsigned char *)(v68 - 0x26DA2E863FF4187BLL) = *(unsigned char *)(v68 - 0x26DA2E863FF4188BLL) ^ v70[5];
  *(unsigned char *)(v68 - 0x26DA2E863FF4187ALL) = *(unsigned char *)(v68 - 0x26DA2E863FF4188ALL) ^ v70[6];
  *(unsigned char *)(v68 - 0x26DA2E863FF41879) = *(unsigned char *)(v68 - 0x26DA2E863FF41889) ^ v70[7];
  *(unsigned char *)(v68 - 0x26DA2E863FF41878) = *(unsigned char *)(v68 - 0x26DA2E863FF41888) ^ v70[8];
  *(unsigned char *)(v68 - 0x26DA2E863FF41877) = *(unsigned char *)(v68 - 0x26DA2E863FF41887) ^ v70[9];
  *(unsigned char *)(v68 - 0x26DA2E863FF41876) = *(unsigned char *)(v68 - 0x26DA2E863FF41886) ^ v70[10];
  *(unsigned char *)(v68 - 0x26DA2E863FF41875) = *(unsigned char *)(v68 - 0x26DA2E863FF41885) ^ v70[11];
  *(unsigned char *)(v68 - 0x26DA2E863FF41874) = *(unsigned char *)(v68 - 0x26DA2E863FF41884) ^ v70[12];
  *(unsigned char *)(v68 - 0x26DA2E863FF41873) = *(unsigned char *)(v68 - 0x26DA2E863FF41883) ^ v70[13];
  *(unsigned char *)(v68 - 0x26DA2E863FF41872) = *(unsigned char *)(v68 - 0x26DA2E863FF41882) ^ v70[14];
  int v112 = 157 * (v67 ^ 0x38);
  *(unsigned char *)(v68 - 0x26DA2E863FF41871) = *(unsigned char *)(v68 - 0x26DA2E863FF41881) ^ v70[15];
  BOOL v104 = a67 != 30;
  uint64_t v103 = 2 % (a67 ^ 0x1Fu);
  uint64_t v113 = (unsigned char *)(v68 - 0x26DA2E863FF41880);
  uint64_t v114 = (unsigned char *)(v68 - 0x26DA2E863FF4187CLL);
  uint64_t v72 = *(unsigned __int8 *)(v68 - 0x26DA2E863FF4187CLL);
  uint64_t v115 = (unsigned char *)(v68 - 0x26DA2E863FF41878);
  unint64_t v116 = (unsigned char *)(v68 - 0x26DA2E863FF41874);
  uint64_t v73 = *(unsigned __int8 *)(v68 - 0x26DA2E863FF41878);
  uint64_t v74 = *(unsigned __int8 *)(v68 - 0x26DA2E863FF41874);
  unint64_t v117 = (unsigned char *)(v68 - 0x26DA2E863FF4187FLL);
  unint64_t v118 = (unsigned char *)(v68 - 0x26DA2E863FF4187BLL);
  uint64_t v75 = *(unsigned __int8 *)(v68 - 0x26DA2E863FF4187FLL);
  uint64_t v76 = *(unsigned __int8 *)(v68 - 0x26DA2E863FF4187BLL);
  unint64_t v124 = (unsigned char *)(v68 - 0x26DA2E863FF41877);
  unint64_t v125 = (unsigned char *)(v68 - 0x26DA2E863FF41873);
  uint64_t v77 = *(unsigned __int8 *)(v68 - 0x26DA2E863FF41877);
  uint64_t v78 = *(unsigned __int8 *)(v68 - 0x26DA2E863FF41873);
  uint64_t v102 = 3 % (a67 ^ 0x1Fu);
  unint64_t v119 = (unsigned char *)(v68 - 0x26DA2E863FF4187ELL);
  unint64_t v120 = (unsigned char *)(v68 - 0x26DA2E863FF41876);
  uint64_t v79 = *(unsigned __int8 *)(v68 - 0x26DA2E863FF4187ELL);
  uint64_t v80 = *(unsigned __int8 *)(v68 - 0x26DA2E863FF41876);
  unint64_t v121 = (unsigned char *)(v68 - 0x26DA2E863FF4187ALL);
  unint64_t v122 = (unsigned char *)(v68 - 0x26DA2E863FF41875);
  uint64_t v81 = *(unsigned __int8 *)(v68 - 0x26DA2E863FF4187ALL);
  unint64_t v126 = (unsigned char *)(v68 - 0x26DA2E863FF41872);
  uint64_t v127 = (unsigned char *)(v68 - 0x26DA2E863FF41871);
  uint64_t v82 = *(unsigned __int8 *)(v68 - 0x26DA2E863FF41872);
  uint64_t v110 = *(unsigned __int8 *)(v68 - 0x26DA2E863FF41871);
  uint64_t v83 = *(unsigned __int8 *)(v68 - 0x26DA2E863FF41875);
  unint64_t v123 = (unsigned char *)(v68 - 0x26DA2E863FF41879);
  uint64_t v84 = *(unsigned __int8 *)(v68 - 0x26DA2E863FF41879);
  uint64_t v105 = (unsigned char *)(v68 - 0x26DA2E863FF4187DLL);
  uint64_t v108 = *(unsigned __int8 *)(v68 - 0x26DA2E863FF4187DLL);
  uint64_t v85 = *(unsigned __int8 *)(*(a10 - 3) + *(unsigned __int8 *)(v68 - 0x26DA2E863FF41880));
  *uint64_t v113 = v85;
  uint64_t v86 = *(unsigned __int8 *)(a10[1] + v72);
  *uint64_t v114 = v86;
  uint64_t v87 = *(unsigned __int8 *)(a10[5] + v73);
  *uint64_t v115 = v87;
  uint64_t v111 = *(unsigned __int8 *)(a10[9] + v74);
  *unint64_t v116 = v111;
  uint64_t v88 = *(unsigned __int8 *)(a10[2] + v76);
  *unint64_t v117 = v88;
  uint64_t v89 = *(unsigned __int8 *)(a10[6] + v77);
  unsigned char *v118 = v89;
  uint64_t v90 = *(unsigned __int8 *)(a10[10] + v78);
  *unint64_t v124 = v90;
  uint64_t v109 = *(unsigned __int8 *)(*(a10 - 2) + v75);
  *unint64_t v125 = v109;
  uint64_t v91 = *(unsigned __int8 *)(a10[7] + v80);
  unsigned char *v119 = v91;
  uint64_t v92 = *(unsigned __int8 *)(*(a10 - 1) + v79);
  *unint64_t v120 = v92;
  uint64_t v93 = *(unsigned __int8 *)(a10[11] + v82);
  *unint64_t v121 = v93;
  uint64_t v106 = *(unsigned __int8 *)(a10[3] + v81);
  *unint64_t v126 = v106;
  uint64_t v94 = *(unsigned __int8 *)(a10[8] + v83);
  *uint64_t v127 = v94;
  uint64_t v95 = *(unsigned __int8 *)(a10[4] + v84);
  *unint64_t v122 = v95;
  uint64_t v96 = *(unsigned __int8 *)(*a10 + v108);
  *unint64_t v123 = v96;
  uint64_t v97 = *(unsigned __int8 *)(a10[12] + v110);
  *uint64_t v105 = v97;
  unint64_t v98 = (void *)(a17 + ((unint64_t)((((5 * (v112 ^ 0x32A)) ^ 0xC6700B71) + 965735850) % (a66 ^ 0x1Fu)) << 7));
  unsigned int v99 = v98 + 147;
  LODWORD(v88) = *(_DWORD *)(v98[148] + 4 * v88) ^ *(_DWORD *)(v98[147] + 4 * v85) ^ *(_DWORD *)(v98[149] + 4 * v91) ^ *(_DWORD *)(v98[150] + 4 * v97);
  *uint64_t v105 = BYTE3(v88);
  unsigned char *v119 = BYTE2(v88);
  *unint64_t v117 = BYTE1(v88);
  *uint64_t v113 = v88;
  LODWORD(v89) = *(_DWORD *)(v99[4 * v104 + 1] + 4 * v89) ^ *(_DWORD *)(v99[4 * v104] + 4 * v86) ^ *(_DWORD *)(v99[4 * v104 + 2] + 4 * v93) ^ *(_DWORD *)(v99[4 * v104 + 3] + 4 * v96);
  unsigned int v107 = BYTE3(v89);
  *unint64_t v123 = BYTE3(v89);
  unsigned int v100 = WORD1(v89);
  *unint64_t v121 = BYTE2(v89);
  LODWORD(v93) = v89 >> 8;
  unsigned char *v118 = BYTE1(v89);
  *uint64_t v114 = v89;
  LODWORD(v96) = *(_DWORD *)(v99[4 * v103 + 1] + 4 * v90) ^ *(_DWORD *)(v99[4 * v103] + 4 * v87) ^ *(_DWORD *)(v99[4 * v103 + 2] + 4 * v92) ^ *(_DWORD *)(v99[4 * v103 + 3] + 4 * v95);
  *unint64_t v122 = BYTE3(v96);
  *unint64_t v120 = BYTE2(v96);
  *unint64_t v124 = BYTE1(v96);
  *uint64_t v115 = v96;
  LODWORD(v85) = *(_DWORD *)(v99[4 * v102 + 1] + 4 * v109) ^ *(_DWORD *)(v99[4 * v102] + 4 * v111) ^ *(_DWORD *)(v99[4 * v102 + 2] + 4 * v106) ^ *(_DWORD *)(v99[4 * v102 + 3] + 4 * v94);
  *uint64_t v127 = BYTE3(v85);
  *unint64_t v126 = BYTE2(v85);
  *unint64_t v125 = BYTE1(v85);
  *unint64_t v116 = v85;
  LOBYTE(v94) = *a23 ^ v88;
  *uint64_t v113 = v94;
  *unint64_t v117 = a23[1] ^ BYTE1(v88);
  unsigned char *v119 = a23[2] ^ BYTE2(v88);
  *uint64_t v105 = a23[3] ^ BYTE3(v88);
  LOBYTE(v89) = a23[4] ^ v89;
  *uint64_t v114 = v89;
  unsigned char *v118 = a23[5] ^ v93;
  *unint64_t v121 = a23[6] ^ v100;
  *unint64_t v123 = a23[7] ^ v107;
  *uint64_t v115 = a23[8] ^ v96;
  *unint64_t v124 = a23[9] ^ BYTE1(v96);
  *unint64_t v120 = a23[10] ^ BYTE2(v96);
  *unint64_t v122 = a23[11] ^ BYTE3(v96);
  *unint64_t v116 = a23[12] ^ v85;
  *unint64_t v125 = a23[13] ^ BYTE1(v85);
  *unint64_t v126 = a23[14] ^ BYTE2(v85);
  *uint64_t v127 = a23[15] ^ BYTE3(v85);
  return (*(uint64_t (**)(void, void))(v69 + 8 * v112))(v89, v94);
}

uint64_t sub_1D0AD97EC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((v0 == 18) | ((v0 == 18) << 6)) ^ v2)))();
}

uint64_t sub_1D0AD97F4@<X0>(char a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  *(void *)(a18 + v19 - 0x17B29E1307D11853) = v21;
  return (*(uint64_t (**)(void))(v20 + 8 * ((((a1 & 0x38) == 8) * ((v18 - 63) ^ 0x591)) ^ v18)))();
}

uint64_t sub_1D0AD9848@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, int32x4_t *a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int8x16_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  int8x16x4_t v94 = vld4q_s8(v56);
  int v59 = 13 * (a46 ^ 0x3C9);
  uint8x16_t v60 = (uint8x16_t)veorq_s8(v94.val[0], v57);
  uint16x8_t v61 = vmovl_u8(*(uint8x8_t *)v60.i8);
  int8x16_t v62 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v61.i8);
  int8x16_t v63 = (int8x16_t)vmovl_high_u16(v61);
  uint16x8_t v64 = vmovl_high_u8(v60);
  int8x16_t v65 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v64.i8);
  int8x16_t v66 = (int8x16_t)vmovl_high_u16(v64);
  uint8x16_t v67 = (uint8x16_t)veorq_s8(v94.val[1], v57);
  uint16x8_t v68 = vmovl_high_u8(v67);
  uint16x8_t v69 = vmovl_u8(*(uint8x8_t *)v67.i8);
  uint8x16_t v70 = (uint8x16_t)veorq_s8(v94.val[2], v57);
  _Q21 = (int8x16_t)vmovl_high_u8(v70);
  _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v70.i8);
  int8x16_t v73 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
  __asm { SHLL2           V20.4S, V20.8H, #0x10 }
  int8x16_t v78 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
  __asm { SHLL2           V21.4S, V21.8H, #0x10 }
  v94.val[0] = veorq_s8(v94.val[3], v57);
  v94.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v94.val[0]);
  v94.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v94.val[1]);
  v94.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v94.val[0].i8);
  v94.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v94.val[0]);
  v94.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v94.val[0].i8), 0x18uLL), v73), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v69.i8, 8uLL), v62));
  v94.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v94.val[3], 0x18uLL), _Q20), vorrq_s8((int8x16_t)vshll_high_n_u16(v69, 8uLL), v63));
  v94.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v94.val[1].i8), 0x18uLL), v78), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v68.i8, 8uLL), v65));
  v94.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v94.val[2], 0x18uLL), _Q21), vorrq_s8((int8x16_t)vshll_high_n_u16(v68, 8uLL), v66));
  int32x4_t v79 = (int32x4_t)veorq_s8(vandq_s8(v94.val[0], a36), (int8x16_t)(*(_OWORD *)&v62 & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  int32x4_t v80 = (int32x4_t)veorq_s8(vandq_s8(v94.val[3], a36), (int8x16_t)(*(_OWORD *)&v63 & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  int32x4_t v81 = (int32x4_t)veorq_s8(vandq_s8(v94.val[1], a36), (int8x16_t)(*(_OWORD *)&v65 & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  int32x4_t v82 = (int32x4_t)veorq_s8(vandq_s8(v94.val[2], a36), (int8x16_t)(*(_OWORD *)&v66 & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  a5[2] = vaddq_s32(vsubq_s32((int32x4_t)v94.val[1], vaddq_s32(v81, v81)), v58);
  a5[3] = vaddq_s32(vsubq_s32((int32x4_t)v94.val[2], vaddq_s32(v82, v82)), v58);
  *a5 = vaddq_s32(vsubq_s32((int32x4_t)v94.val[0], vaddq_s32(v79, v79)), v58);
  a5[1] = vaddq_s32(vsubq_s32((int32x4_t)v94.val[3], vaddq_s32(v80, v80)), v58);
  uint64_t v83 = v46;
  int v86 = a4 ^ v52;
  int v87 = (v83 ^ v52) & (a4 ^ v53) | (a2 ^ v52) & (a4 ^ v52);
  unint64_t v88 = ((5 * (v59 ^ 0xAu)) ^ (unint64_t)(v54 - 172)) + 1879981661;
  int v89 = (a3 ^ v52)
      + v50
      + v87
      + *(_DWORD *)(*(void *)(v55 + 8 * (v59 + 82)) - 4 + 4 * v88)
      + (a5->i32[(*(unsigned char *)(*(void *)(v55 + 8 * (int)(v59 & 0xFC6A5368)) + v88) - 27)] ^ v47);
  uint64_t v90 = *(void *)(v55 + 8 * (v59 - 27)) - 12;
  unsigned int v91 = (v89 + v52 - (v49 & (2 * v89))) ^ v52;
  int v92 = ((v91 << (*(unsigned char *)(v90 + v88) - 2)) | (v91 >> (2 - *(unsigned char *)(v90 + v88)))) + v86;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v51
                                                                      + 8
                                                                      * ((367 * (v48 == 1879981646)) ^ (v59 + 624))))(a1, a4, v83, v92 + v52 - (v49 & (2 * v92)));
}

uint64_t sub_1D0AD9988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,unsigned __int8 a47)
{
  HIDWORD(a27) = v47;
  int v50 = a47 ^ 0xA;
  if (v50 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * ((v49 - 338) ^ (8 * (a46 != (v49 ^ 0x56D) + 286216787)))))(a1, a2, a3, a4, a5, a6, 4091793368, 764837118, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
  }
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27);
  if (v50 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * (((a46 == 286216983) * ((v49 - 1350) ^ 0xC4)) ^ (v49 - 1350))))(a1, a2, a3, a4, a5, a6, 4091793368, 764837118, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
  }
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27);
  uint64_t v52 = (v49 - 1396) | 0x2C0u;
  unint64_t v53 = ((unint64_t)&a30 ^ 0xFEDCE67FBEE5FF5ELL)
      + ((2 * (void)&a30) & 0xFDB9CCFF7DCBFEB0)
      + (v52 ^ 0x31BFBFA1FDBFA30FLL)
      - 115;
  HIBYTE(a45) = ((((v49 - 116) | 0xC0) + 38 + v53) ^ 0xBA) * (v53 + 44);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * (int)(v52 ^ 0xC)))(a1, a2, a3, a4, a5, a6, 4091793368, 764837118, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_1D0AD9B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int8x16_t *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int8x16_t a55)
{
  v58.i64[0] = 0xF0F0F0F0F0F0F0F0;
  v58.i64[1] = 0xF0F0F0F0F0F0F0F0;
  v59.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v59.i64[1] = 0xF8F8F8F8F8F8F8F8;
  a55 = vaddq_s8(vsubq_s8(a22[8], vandq_s8(vaddq_s8(a22[8], a22[8]), v58)), v59);
  HIDWORD(a13) = 515325893;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, int8x16_t *, uint64_t, int8x16_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int8x16_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8 * ((((v56 + 1100) ^ 0x56B) + 27) ^ 0x63 | (v56 + 1100))))(515325893, a2, a3, a4, a5, a6, a7, a8, a9, a10, v57, &STACK[0x690], a13, a22 + 7, a15, &a55, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_1D0AD9BB4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, int a18, int a19, int a20,int a21,int *a22,int *a23,unsigned int a24,int a25)
{
  uint64_t v31 = *(void *)(v25 + 8);
  unsigned int v32 = 1477295531 * (((&a20 | 0xB5685356) - (&a20 & 0xB5685356)) ^ 0x82636605);
  LODWORD(a23) = a2 + v32 + 10;
  a22 = v29;
  a20 = (v30 - 436) ^ v32;
  uint64_t v44 = 8 * (v30 + 540);
  (*(void (**)(int *))(v27 + v44))(&a20);
  int v33 = *v28;
  int v34 = ((*v28 << ((v30 - 41) ^ 5)) + 832984826) & 0x64A359D8;
  unsigned int v35 = 961505453 * (((&a20 | 0x7B38EBE2) - (&a20 & 0x7B38EBE2)) ^ 0xD9C32544);
  a22 = (_DWORD *)((char *)v26 + 0x2F55BCA2B663CA16);
  a20 = v33 - v35 - 886777751 - v34;
  a21 = (v30 - 2110089123) ^ v35;
  (*(void (**)(int *))(v27 + 8 * (v30 + 761)))(&a20);
  int v36 = *(v26 - 0x42C5FF08EE2EF86);
  unsigned int v37 = 961505453 * ((1153326306 - (&a20 | 0x44BE5CE2) + (&a20 | 0xBB41A31D)) ^ 0x19BA6DBB);
  a22 = (_DWORD *)((char *)v26 + 0x2F55BCA2B663CA1ALL);
  a20 = v36 - v37 - 886777751 - ((2 * v36 + 832984826) & 0x64A359D8);
  a21 = (v30 - 2110089123) ^ v37;
  (*(void (**)(int *))(v27 + 8 * (v30 ^ 0x50B)))(&a20);
  unsigned int v38 = 1449114341 * (&a20 ^ 0xCF5EF9EB);
  a20 = v30 - v38 - 415;
  a22 = &a16;
  a23 = v29;
  a24 = v38 + 1997355281;
  a25 = v38 ^ 0xD6687D8;
  (*(void (**)(int *))(v27 + 8 * (v30 ^ 0x6DE)))(&a20);
  *(v26 - 0x42C5FF08EE2EF8BLL) += a16;
  *(v26 - 0x42C5FF08EE2EF8ALL) += a17;
  *(v26 - 0x42C5FF08EE2EF89) += a18;
  *(v26 - 0x42C5FF08EE2EF88) += a19;
  a20 = v30
      + 2097344609
      + 1334103649
      * ((((&a20 | 0xA0EF3358) ^ 0xFFFFFFFE) - (~&a20 | 0x5F10CCA7)) ^ 0x37B80409);
  a22 = v26 + 0x142EB863408454C1;
  a23 = v29;
  (*(void (**)(int *))(v27 + 8 * (v30 ^ 0x508)))(&a20);
  unsigned int v39 = 1477295531 * ((&a20 & 0x216D408A | ~(&a20 | 0x216D408A)) ^ 0xE9998A26);
  a22 = v26 - 0x42C5FF08EE2EF8BLL;
  a20 = (v30 - 436) ^ v39;
  LODWORD(a23) = v39 + 1280986336;
  (*(void (**)(int *))(v27 + 8 * (v30 ^ 0x664)))(&a20);
  *(unsigned char *)(v31 - 0x691D25B51BD3A291) = *((unsigned char *)v26 - 0x10B17FC23B8BBE2CLL)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE2CLL)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A290) = *((unsigned char *)v26 - 0x10B17FC23B8BBE2BLL)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE2BLL)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A28FLL) = *((unsigned char *)v26 - 0x10B17FC23B8BBE2ALL)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE2ALL)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A28ELL) = *((unsigned char *)v26 - 0x10B17FC23B8BBE29)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE29)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A28DLL) = *((unsigned char *)v26 - 0x10B17FC23B8BBE28)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE28)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A28CLL) = *((unsigned char *)v26 - 0x10B17FC23B8BBE27)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE27)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A28BLL) = *((unsigned char *)v26 - 0x10B17FC23B8BBE26)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE26)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A28ALL) = *((unsigned char *)v26 - 0x10B17FC23B8BBE25)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE25)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A289) = *((unsigned char *)v26 - 0x10B17FC23B8BBE24)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE24)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A288) = *((unsigned char *)v26 - 0x10B17FC23B8BBE23)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE23)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A287) = *((unsigned char *)v26 - 0x10B17FC23B8BBE22)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE22)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A286) = *((unsigned char *)v26 - 0x10B17FC23B8BBE21)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE21)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A285) = *((unsigned char *)v26 - 0x10B17FC23B8BBE20)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE20)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A284) = *((unsigned char *)v26 - 0x10B17FC23B8BBE1FLL)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE1FLL)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A283) = *((unsigned char *)v26 - 0x10B17FC23B8BBE1ELL)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE1ELL)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A282) = *((unsigned char *)v26 - 0x10B17FC23B8BBE1DLL)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE1DLL)) | 0xF)
                                         - 7;
  unsigned int v40 = 1477295531
      * ((-1373494553 - (&a20 | 0xAE2222E7) + (&a20 | 0x51DDDD18)) ^ 0x66D6E84B);
  LODWORD(a23) = v40 + 1280986336;
  a20 = (v30 - 436) ^ v40;
  a22 = v26 - 0x42C5FF08EE2EF8BLL;
  (*(void (**)(int *))(v27 + v44))(&a20);
  a20 = v30
      + 2097344609
      + 1334103649 * ((1448615256 - (&a20 | 0x56581D58) + (&a20 | 0xA9A7E2A7)) ^ 0xC10F2A09);
  a22 = v26 + 0x142EB863408454C1;
  a23 = v29;
  (*(void (**)(int *))(v27 + 8 * (v30 + 760)))(&a20);
  unsigned int v41 = 1477295531 * ((&a20 + 517197333 - 2 * (&a20 & 0x1ED3CE15)) ^ 0x29D8FB46);
  LODWORD(a23) = v41 + 1280986336;
  a20 = (v30 - 436) ^ v41;
  a22 = v26 - 0x42C5FF08EE2EF8BLL;
  uint64_t v42 = (*(uint64_t (**)(int *))(v27 + v44))(&a20);
  *(unsigned char *)(v31 - 0x691D25B51BD3A28DLL) = *((unsigned char *)v26 - 0x10B17FC23B8BBE2CLL)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE2CLL)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A28CLL) = *((unsigned char *)v26 - 0x10B17FC23B8BBE2BLL)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE2BLL)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A28BLL) = *((unsigned char *)v26 - 0x10B17FC23B8BBE2ALL)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE2ALL)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A28ALL) = *((unsigned char *)v26 - 0x10B17FC23B8BBE29)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE29)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A289) = *((unsigned char *)v26 - 0x10B17FC23B8BBE28)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE28)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A288) = *((unsigned char *)v26 - 0x10B17FC23B8BBE27)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE27)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A287) = *((unsigned char *)v26 - 0x10B17FC23B8BBE26)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE26)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A286) = *((unsigned char *)v26 - 0x10B17FC23B8BBE25)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE25)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A285) = *((unsigned char *)v26 - 0x10B17FC23B8BBE24)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE24)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A284) = *((unsigned char *)v26 - 0x10B17FC23B8BBE23)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE23)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A283) = *((unsigned char *)v26 - 0x10B17FC23B8BBE22)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE22)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A282) = *((unsigned char *)v26 - 0x10B17FC23B8BBE21)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE21)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A281) = *((unsigned char *)v26 - 0x10B17FC23B8BBE20)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE20)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A280) = *((unsigned char *)v26 - 0x10B17FC23B8BBE1FLL)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE1FLL)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A27FLL) = *((unsigned char *)v26 - 0x10B17FC23B8BBE1ELL)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE1ELL)) | 0xF)
                                         - 7;
  *(unsigned char *)(v31 - 0x691D25B51BD3A27ELL) = *((unsigned char *)v26 - 0x10B17FC23B8BBE1DLL)
                                         + (~(2 * *((unsigned char *)v26 - 0x10B17FC23B8BBE1DLL)) | 0xF)
                                         - 7;
  *(_OWORD *)(v26 - 0x42C5FF08EE2EF8BLL) = 0u;
  *uint64_t v28 = 1730991235;
  *(v26 - 0x42C5FF08EE2EF86) = 1730991235;
  *(_OWORD *)(v26 - 0x42C5FF08EE2EF85) = 0u;
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * ((4 * (((v30 - 809) | 0x300) ^ 0x386) - 479) ^ ((v30 - 809) | 0x300))))(v42);
}

uint64_t sub_1D0ADA77C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39)
{
  return (*(uint64_t (**)(void))(v41 + 8 * ((1900 * (a39 == (((v39 - 573) | 7) ^ (v40 + 5)))) ^ v39)))();
}

uint64_t sub_1D0ADA7B8@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + ((v4 - 544) ^ v1) + v2) = *(unsigned char *)(v5 + ((v4 - 544) ^ v1) + v2);
  return (*(uint64_t (**)(void))(v6 + 8 * ((1852 * (v2 + 1 == v3)) ^ (v4 - 264))))();
}

void Mib5yocT()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (unint64_t *)*(&off_1F26D60E0
                           + (*((unsigned char *)off_1F26D6440
                                               + (*((unsigned __int8 *)off_1F26D6408
                                                  + (99 * ((dword_1EA629A98 - dword_1EA63FB50) ^ 0x56))
                                                  - 8) ^ 0x79u)
                                               - 8) ^ (99 * ((dword_1EA629A98 - dword_1EA63FB50) ^ 0x56)))
                           - 34);
  unint64_t v1 = (unint64_t *)*(&off_1F26D60E0
                           + ((99 * ((dword_1EA629A98 + *v0) ^ 0x56)) ^ byte_1D0B97D70[byte_1D0B92E80[(99 * ((dword_1EA629A98 + *v0) ^ 0x56))] ^ 0xE6])
                           - 7);
  unint64_t v2 = 170569571 * ((unint64_t)&v4[*v1 ^ *v0] ^ 0x653207D96BFD6456);
  *uint64_t v0 = v2;
  unint64_t *v1 = v2;
  v5[1] = 291625862
        - 1334103649
        * (((v5 | 0xAD7F6D24) - v5 + (v5 & 0x528092D8)) ^ 0xC5D7A58A);
  LOBYTE(v1) = 99 * ((*(_DWORD *)v1 - *(_DWORD *)v0) ^ 0x56);
  uint64_t v3 = (uint64_t)*(&off_1F26D60E0
                + ((99 * ((dword_1EA629A98 + dword_1EA63FB50) ^ 0x56)) ^ byte_1D0B8BD60[byte_1D0B98070[(99 * ((dword_1EA629A98 + dword_1EA63FB50) ^ 0x56))] ^ 0x79])
                - 122);
  (*(void (**)(_DWORD *))(v3
                                   + 8
                                   * ((*((unsigned char *)off_1F26D6128
                                                                      + (*((unsigned __int8 *)off_1F26D6138
                                                                         + v1
                                                                         - 12) ^ 0xD3u)
                                                                      - 4) ^ v1)
                                    + 1462)))(v5);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1D0ADAA20(uint64_t a1)
{
  int v6 = (*(uint64_t (**)(uint64_t, void))(v4 + 12616))(a1, 0);
  int v7 = ((2 * v6) & 0x7DBFEDD4) + (v6 ^ 0x3EDFF6EA);
  if (v7 == 1054865146)
  {
    v3 += 3;
    goto LABEL_7;
  }
  if (v7 == 1054865142)
  {
LABEL_7:
    (*(void (**)(uint64_t))(v4 + 11992))(a1);
    int v8 = v3;
    return v8 ^ v2;
  }
  if (v7 != 1054865130)
  {
    v3 += 2;
    goto LABEL_7;
  }
  void *v1 = a1;
  int v8 = 1870250814;
  return v8 ^ v2;
}

uint64_t sub_1D0ADAAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v41 = (v38 - 765285848);
  unsigned int v42 = *(_DWORD *)(a2 + v41);
  *(unsigned char *)(a37 + (v38 - 765285847)) = ((v42 >> ((v37 + 94) ^ 0x31)) ^ 0x53)
                                                    - ((2 * ((v42 >> ((v37 + 94) ^ 0x31)) ^ 0x53)) & 0xF0)
                                                    - 8;
  *(unsigned char *)(a37 + v41) = (HIBYTE(v42) ^ 0x4F) - ((2 * (HIBYTE(v42) ^ 0x4F)) & 0xF0) - 8;
  *(unsigned char *)(a37 + (v38 - 765285846)) = (BYTE1(v42) ^ 0x19) - ((2 * (BYTE1(v42) ^ 0x19)) & 0xF0) - 8;
  *(unsigned char *)(a37 + (v38 - 765285845)) = v42 ^ 0x92;
  LODWORD(v41) = *v39 - 2101006167;
  BOOL v43 = v41 < a5;
  BOOL v44 = v38 + 1714892268 < v41;
  if (v38 + 1714892268 < a5 != v43) {
    BOOL v44 = v43;
  }
  return (*(uint64_t (**)(void))(v40 + 8 * ((985 * v44) ^ v37)))();
}

uint64_t sub_1D0ADABDC()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((((283 * (v1 ^ (v1 - 2))) ^ 0x210) * (v2 >= 0x29F37E6F)) | (v3 + v1 + 344))))();
}

uint64_t sub_1D0ADAC30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v11 = (unsigned __int8 *)(a3 + v4 + v10);
  int v12 = *v11 ^ 0xF8;
  LODWORD(v11) = ((*(unsigned __int8 *)(a3 + ((v3 + 1214) ^ (unint64_t)(v10 - 1384)) + v4) ^ 0xF8) << 16) | ((v11[3] ^ 0xF8) << 24) | v12 | ((v11[1] ^ 0xF8) << 8);
  *(_DWORD *)(v6 + ((v4 + v10) & 0xFFFFFFFFFFFFFFFCLL)) = v11
                                                        + v9
                                                        - 2 * (v11 & (v8 + 1) ^ v12 & 1);
  return (*(uint64_t (**)(void))(v7 + 8 * ((((unint64_t)(v4 + 4 + v10) < 0x40) * v5) ^ v3)))();
}

uint64_t sub_1D0ADACC4@<X0>(uint64_t a1@<X3>, unsigned int a2@<W4>, uint64_t a3@<X8>)
{
  *(_OWORD *)(a1 + (((v4 ^ a2) + 4294967013) & (a3 + 16))) = *v5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((1193 * (v3 == 16)) ^ v4)))();
}

void sub_1D0ADACD0()
{
}

uint64_t sub_1D0ADACE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t),uint64_t a27,int a28,int a29)
{
  int v32 = 1449114341 * ((((v31 - 144) | 0x633DC390) - (v31 - 144) + ((v31 - 144) & 0x9CC23C68)) ^ 0xAC633A7B);
  *(void *)(v31 - 144) = a7;
  *(_DWORD *)(v31 - 136) = (a29 + 261625055) ^ v32;
  *(_DWORD *)(v31 - 132) = (v29 + 616) ^ v32;
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v30 + 8 * (v29 ^ 0x68F)))(v31 - 144);
  return a26(v33);
}

uint64_t sub_1D0ADAD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  *(void *)a1 = 10496;
  memset((void *)(a1 + 8), 248, 32);
  *(void *)(a1 + 40) = 4177066232;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  memset((void *)(a1 + 64), 248, 32);
  unint64_t v12 = ((unint64_t)&a10 ^ 0xE7DFDAFBFFCFD7FFLL)
      + 0x59ACFF0E4FFFFEDELL
      + ((2 * (void)&a10) & 0xCFBFB5F7FF9FAFF0);
  *(void *)(a1 + 96) = 4177066232;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(_WORD *)(a1 + 128) = 0;
  *(unsigned char *)(a1 + 131) = 0;
  *(unsigned char *)(a1 + 259) = ((v12 + 35) ^ 0xBA) * (v12 + ((v11 - 79) ^ 0xD9));
  *(unsigned char *)(a1 + 258) = ((v12 + 36) ^ 0xBA) * (v12 + 53);
  return (*(uint64_t (**)(void))(v10 + 8 * v11))();
}

uint64_t sub_1D0ADAE54(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v7 - a6) ^ (a5 - 17) ^ (v7 + 308)) * (v6 == a2)) ^ v7)))();
}

uint64_t sub_1D0ADAE84@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((27 * (v2 >= (((a1 - 281) | 0x50) ^ 0x166u))) ^ a1)))();
}

uint64_t sub_1D0ADAECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  return (*(uint64_t (**)(void))(v16 + 8 * ((1973 * (v15 + 1309382589 != 7 * (a15 ^ 0x31C) - 844588651)) ^ a15)))();
}

uint64_t sub_1D0ADAF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,_DWORD **a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  uint64_t v43 = (a12 + 319873648) | 2u;
  BOOL v44 = *a25;
  if (((v43 - 175) & (unint64_t)*a25) != ((a12 + 1427947903) & 0xBDF422EC) - 684
    || (uint64_t v45 = (uint64_t)*(&off_1F26D60E0 + (int)(a12 ^ 0xECEF1EC5)),
        uint64_t v47 = *(void *)(v45 - 4),
        uint64_t v46 = (void *)(v45 - 4),
        v47))
  {
    *a10 = 342976707;
    JUMPOUT(0x1D0AD8C9CLL);
  }
  void *v46 = v44;
  *(_DWORD *)*(&off_1F26D60E0 + (int)(v43 ^ 0xEF)) = 255;
  *v44 |= ~v44[*v44 & (v43 - 116)] << 16;
  v44[4] |= ~v44[v44[4] & 0x3ELL] << 16;
  v44[8] |= ~v44[v44[8] & 0x3ELL] << 16;
  v44[12] |= ~v44[v44[12] & 0x3ELL] << 16;
  v44[16] |= ~v44[v44[16] & 0x3ELL] << 16;
  v44[20] |= ~v44[v44[20] & 0x3ELL] << 16;
  v44[24] |= ~v44[v44[24] & 0x3ELL] << 16;
  v44[28] |= ~v44[v44[28] & 0x3ELL] << 16;
  v44[32] |= ~v44[v44[32] & 0x3ELL] << 16;
  v44[36] |= ~v44[v44[36] & 0x3ELL] << 16;
  v44[40] |= ~v44[v44[40] & 0x3ELL] << 16;
  int v48 = v43 + 642;
  v44[44] |= ~v44[v44[44] & 0x3ELL] << 16;
  v44[48] |= ~v44[v44[48] & 0x3ELL] << 16;
  v44[52] |= ~v44[v44[52] & 0x3ELL] << 16;
  v44[56] |= ~v44[v44[56] & 0x3ELL] << 16;
  v44[60] |= ~v44[v44[60] & 0x3ELL] << 16;
  uint64_t v49 = (*(uint64_t (**)(char *, void, uint64_t))(v41 + 8 * (int)(v43 ^ 0x6F6)))(&a41, 0, 1024);
  STACK[0x508] = (unint64_t)&a41;
  return (*(uint64_t (**)(uint64_t))(v41
                                            + 8
                                            * (int)(((((v48 + 280276941) | 0xC4024046) ^ (v42 - 219)) + v48 - 642) ^ v48)))(v49);
}

void sub_1D0ADB260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,char a22,uint64_t a23,uint64_t a24)
{
  unsigned int v32 = (v25 + 1362552716) & 0xAEC9174B;
  *(_DWORD *)a1 = 1498173510;
  *(unsigned char *)(a1 + 4) = a22 ^ 0x1D;
  *(_WORD *)(a1 + 5) = 1025;
  *(unsigned char *)(a1 + 7) = 0;
  *(_DWORD *)(a1 + 8) = 335544320;
  *(unsigned char *)(v29 - 136) = (-83 * ((2 * ((v29 + 120) & 0x18) - (v29 + 120) - 29) ^ 0x45)) ^ 0xA1;
  *(unsigned char *)(v29 - 128) = (19 * (a22 ^ 0x1D) + 125) ^ (-83 * ((2 * ((v29 + 120) & 0x18) - (v29 + 120) - 29) ^ 0x45));
  *(void *)(v29 - 120) = a24;
  *(void *)(v29 - 112) = a1 + 12;
  *(_DWORD *)(v29 - 132) = v32
                         - 961505453 * ((2 * ((v29 - 136) & 0x4D452618) - (v29 - 136) + 851106275) ^ 0x90411745)
                         + 279;
  (*(void (**)(uint64_t))(v30 + 8 * (int)(v32 ^ 0x70D)))(v29 - 136);
  *(unsigned char *)(a24 + 1) = 45;
  *uint64_t v28 = a1;
  *uint64_t v27 = v26;
  *unint64_t v24 = 0;
  JUMPOUT(0x1D0ADB3E0);
}

#error "1D0AE1230: call analysis failed (funcsize=5626)"

uint64_t sub_1D0AE1234()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * (((((v1 - 710) | 0x4C) + ((v1 - 168) | 0x19) + 1171) * (v2 == v0)) ^ v1)))(248, 122);
}

uint64_t sub_1D0AE1294(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((19 * (a3 + v4 + ((v3 - 2001149711) & 0x77471BFEu) - 1610570367 - 1320 > 7)) ^ v3)))();
}

void sub_1D0AE1320()
{
  *(_DWORD *)(v1 - 248) = v0 + 3;
  JUMPOUT(0x1D0AE1408);
}

uint64_t sub_1D0AE1488()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 - 723)
                                * (((v1 << (21 * (v0 ^ 0xE0) - 88)) & 0xC07FFD76 ^ 0xC0073166)
                                 + (v1 ^ 0x127C664C)
                                 - 1076603085 == 538203630)) ^ v0)))();
}

uint64_t sub_1D0AE1504@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X4>, int a5@<W6>, int a6@<W7>, uint64_t a7@<X8>)
{
  HIDWORD(v17) = a3 ^ v13;
  LODWORD(v17) = a3 ^ 0x48000000;
  int v18 = (v17 >> 27)
      + (v7 ^ v15)
      + (((a2 ^ v9) + v15 - (v12 & (2 * (a2 ^ v9)))) ^ v8)
      + (*(_DWORD *)(a7 + 4 * (v16 + a4 + (a6 + 586)) - 4548) ^ v10);
  HIDWORD(v17) = v9 ^ 2;
  LODWORD(v17) = v9 ^ a5;
  return (*(uint64_t (**)(uint64_t, void, void))(v14 + 8 * ((1992 * (a4 + 1 == v11 + 40)) ^ a6)))(a1, (v17 >> 2) + v15 - (v12 & (2 * (v17 >> 2))), v18 - ((2 * v18 - 575416510) & v12) - 1104345845);
}

uint64_t sub_1D0AE15C8()
{
  *(unsigned char *)(v6 + ((v0 + 444) ^ v3) + v1 + 24) = *(unsigned char *)(v4 + ((v0 + 444) ^ v3) + v1);
  return (*(uint64_t (**)(void))(v5 + 8 * ((254 * (v1 + 1 == v2 + 64)) ^ v0)))();
}

uint64_t sub_1D0AE1608(double a1, int8x16_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int32x4_t a19, int8x16_t a20,int8x16_t a21)
{
  int8x16_t v24 = (int8x16_t)vld1q_dup_f32((const float *)v21);
  v25.i64[0] = 0x8000000080000000;
  v25.i64[1] = 0x8000000080000000;
  a2.i64[0] = *(void *)(v21 + 4);
  a2.i32[2] = *(_DWORD *)(v21 + 12);
  int8x16_t v26 = vextq_s8(v24, a2, 0xCuLL);
  int8x16_t v27 = a2;
  v27.i32[3] = *(_DWORD *)(v21 + 16);
  int32x4_t v28 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v27, a21), vandq_s8(v26, v25)), 1uLL), *(int8x16_t *)(v21 + 1588));
  v26.i32[0] = *(_DWORD *)(v23 + 4 * (*(_DWORD *)(v21 + 4) & 1));
  v26.i32[1] = *(_DWORD *)(v23 + 4 * (*(_DWORD *)(v21 + 8) & 1));
  v26.i32[2] = *(_DWORD *)(v23 + 4 * (*(_DWORD *)(v21 + 12) & 1));
  v26.i32[3] = *(_DWORD *)(v23 + 4 * (v27.i8[12] & 1));
  *(int8x16_t *)uint64_t v21 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v28, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v28, v28), a20)), a19), v26);
  return (*(uint64_t (**)(void))(v22 + 6528))();
}

void sub_1D0AE1614(uint64_t a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, int a6, int8x16_t a7, int8x16_t a8, double a9, double a10, int8x16_t a11, int8x16_t a12, int8x16_t a13, int8x16_t a14)
{
  uint64_t v29 = v14 + 4;
  uint64_t v30 = (v15 - 475);
  a8.i32[0] = *(_DWORD *)(v18 + 4 * (v29 + (v30 ^ a1)));
  a8.i32[1] = v16->i32[2];
  a8.i32[2] = v16->i32[3];
  int8x16_t v31 = vextq_s8(a7, a8, 0xCuLL);
  int8x16_t v32 = a8;
  v32.i32[3] = v16[1].i32[0];
  int8x16_t v33 = veorq_s8(v31, a11);
  int8x16_t v34 = vandq_s8(v33, a12);
  int32x4_t v35 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)vornq_s8(a14, v34), (int32x4_t)vorrq_s8(v34, a13)), veorq_s8(vandq_s8(v33, v20), v21));
  int32x4_t v36 = (int32x4_t)veorq_s8(vandq_s8(v32, v24), v25);
  int32x4_t v37 = (int32x4_t)vorrq_s8(veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v35, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v35, v35), v22)), v23), v28), veorq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)vaddq_s32(v36, v36), v26), v36), v27), (int8x16_t)vdupq_n_s32(a2)));
  v38.i32[0] = *(_DWORD *)(v17 + 4 * (*(_DWORD *)(v18 + 4 * (v29 + (v30 ^ a1))) & 1));
  v38.i32[1] = *(_DWORD *)(v17 + 4 * (v16->i32[2] & 1));
  v38.i32[2] = *(_DWORD *)(v17 + 4 * (v16->i32[3] & 1));
  v38.i32[3] = *(_DWORD *)(v17 + 4 * (v32.i8[12] & 1));
  int8x16_t *v16 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)((char *)v16 - 908), v38), (int8x16_t)vdupq_n_s32(a5)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v37, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v37, v37), (int8x16_t)vdupq_n_s32(a3))), vdupq_n_s32(a4)), 1uLL));
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1D0AE1F58(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6)
{
  *(_OWORD *)(a4 + (v7 + a2)) = *a6;
  return (*(uint64_t (**)(void))(v9 + 8 * (((((v8 + 1) & 0x1FFFFFFF0) == 16) * (v6 ^ 0x177)) ^ v6)))();
}

uint64_t sub_1D0AE1FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27
                                                                                         + 8
                                                                                         * ((1513
                                                                                           * (v26
                                                                                            + ((131 * (v25 ^ 0xB5)) ^ 0xB3BFFE83) < 0x38)) ^ (v25 + 215))))(a1, -1279262965, 183, a4, 47, a25);
}

uint64_t sub_1D0AE2034()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 - 75) * (v1 == v2)) ^ v0)))();
}

uint64_t sub_1D0AE2058@<X0>(uint64_t a1@<X8>)
{
  int v7 = (unsigned __int8 *)(v6 + v2 + v5);
  int v8 = *v7 ^ 0xF8;
  LODWORD(v7) = v8 | ((v7[1] ^ 0xF8) << 8) | ((v7[2] ^ 0xF8) << (v1 + 111)) | ((v7[3] ^ 0xF8) << 24);
  *(_DWORD *)(a1 + ((v2 + v5) & 0xFFFFFFFFFFFFFFFCLL)) = v7 + v3 - 2 * (v7 & 0x674DF373 ^ v8 & 1);
  return (*(uint64_t (**)(void))(v4 + 8 * ((110 * ((unint64_t)(v2 + 4 + v5) > 0x3F)) ^ v1)))();
}

uint64_t sub_1D0AE20F0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(void *)(v3 + a1) = 0xE1E1E1E1E1E1E1E1;
  BOOL v5 = (((a2 + 819) | 0x10u) ^ 0x45CLL) + a1 == (v2 & 0xFFFFFFF8);
  return (*(uint64_t (**)(void))(v4 + 8 * ((4 * v5) | (8 * v5) | a2)))();
}

uint64_t sub_1D0AE2130()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((*(unsigned char *)(v2 + 6) == 1) * ((v0 + 1007) ^ 0x536)) ^ v0)))();
}

uint64_t sub_1D0AE2164(int a1, int a2, int a3, int a4)
{
  int v12 = (v4 | (v5 << 16)) + 2142066845;
  int v13 = (v6 - 203) ^ 0x2A0;
  int v14 = (((v11 - 120) & 0x31E4A422 | ~((v11 - 120) | 0x31E4A422)) ^ 0xF9106E8E) * v9;
  *(void *)(v11 - 104) = v8;
  *(_DWORD *)(v11 - 116) = v14 + a2 + a1 - 2 * ((a1 + a4) & v7 ^ a1 & 3) + v13;
  *(_DWORD *)(v11 - 112) = a3 - v14 + v6 - 203;
  uint64_t v17 = v8;
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v10 + 8 * ((v6 - 203) ^ 0x66A)))(v11 - 120);
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * ((23
                                              * (v12
                                               + (((v13 - 715) | 0x341) ^ 0x98534561)
                                               + ((2 * *(_DWORD *)(v17 - 0x17B29E1307D11810)) & 0x76 ^ 0x64)
                                               + ((3 * (v13 ^ 0x23E)) ^ 0xE7FF1D46 ^ *(_DWORD *)(v17
                                                                                               - 0x17B29E1307D11810) & 0x3F) < 0xFFFFFFC0)) ^ v13)))(v15);
}

uint64_t sub_1D0AE21F0@<X0>(uint64_t a1@<X8>)
{
  int v5 = (char *)(v1 + 4 * v2);
  int8x8x4_t v7 = vld4_s8(v5);
  v8.val[0] = v7.val[3];
  v8.val[1] = v7.val[2];
  v8.val[2] = v7.val[1];
  v8.val[3] = v7.val[0];
  vst4_s8(v5, v8);
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((44 * (((59 * ((v4 - 36) ^ 0x44Cu)) ^ 0x281) + v2 != (v3 & 0x1FFFFFFF8))) ^ (v4 - 36))))();
}

uint64_t sub_1D0AE2268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,char a35)
{
  *(void *)(&a35 + v37 - 399510284) = 0xF8F8F8F8F8F8F8F8;
  return (*(uint64_t (**)(void))(v38
                              + 8
                              * ((11
                                * (((v36 + 106) ^ ((((v36 - 11) - 172) & v35) == 8)) & 1)) ^ (v36 - 11))))();
}

uint64_t sub_1D0AE22CC()
{
  int v5 = *(unsigned __int8 *)(v2 + 1);
  *int v4 = v0 + 2;
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v1 + 267) | 0x50) ^ 0x169) * (v5 == 72)) ^ v1)))();
}

uint64_t sub_1D0AE2310@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,unsigned int a23)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((1408 * (v23 + 1 == a1 + 4)) ^ a23)))();
}

uint64_t sub_1D0AE23F0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + v10) = *(void *)(a7 + (a1 + v8));
  return (*(uint64_t (**)(void))(v13 + 8 * (((v11 == 0) * v9) ^ v12)))((a1 + 8));
}

uint64_t sub_1D0AE2424@<X0>(int a1@<W3>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  int v7 = 291 * (v4 ^ 0x3AA);
  *(unsigned char *)(a3 + (v3 + v6)) = *(unsigned char *)(a2 + (v3 + v6));
  int v8 = ((21 * (v7 ^ 0x32C)) ^ 0xFFFFFA56) + v3 != a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v8 << 6) | (v8 << 7)) ^ v7)))();
}

uint64_t sub_1D0AE2480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8 * ((221 * ((((a9 + 51) ^ (*(unsigned __int8 *)(*(void *)(v38 + 64) + 1) == (a9 - 78))) & 1) == 0)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1D0AE24C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  unsigned int v50 = *(_DWORD *)(&a35 + ((v48 - 1358945110) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a11 + (v48 - 1358945109)) = ((v50 >> (v47 + 76)) ^ 0x53)
                                                     - ((2 * ((v50 >> (v47 + 76)) ^ 0x53)) & 0xF0)
                                                     - 8;
  *(unsigned char *)(a11 + (v48 - 1358945110)) = (HIBYTE(v50) ^ 0x4F) - ((2 * (HIBYTE(v50) ^ 0x4F)) & 0xF0) - 8;
  *(unsigned char *)(a11 + (v48 - 1358945108)) = (BYTE1(v50) ^ 0x19) - ((2 * (BYTE1(v50) ^ 0x19)) & 0xF0) - 8;
  *(unsigned char *)(a11 + (v48 - 1358945107)) = v50 ^ 0x92;
  BOOL v51 = v48 + 579827427 < (a47 + 1652555550);
  if ((v48 + 579827427) < 0x738F5235 != (a47 + 1652555550) < 0x738F5235) {
    BOOL v51 = (a47 + 1652555550) < 0x738F5235;
  }
  return (*(uint64_t (**)(void))(v49 + 8 * ((1216 * v51) ^ v47)))();
}

uint64_t sub_1D0AE25C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t))(v9 + 8 * ((665 * (v7 + 1 == v10 + 20)) ^ a7)))(v8);
}

uint64_t sub_1D0AE26A4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  *(_DWORD *)(v36 + 4 * (v35 - 1762572493)) = *(_DWORD *)(a34 + 4 * (v39 - 621667568))
                                                            + v39
                                                            - 621667568
                                                            + ((1664525
                                                              * (*(_DWORD *)(v36 + 4
                                                                                 * (v35 - 1762572494)) ^ (*(_DWORD *)(v36 + 4 * (v35 - 1762572494)) >> 30))) ^ *(_DWORD *)(v36 + 4 * (v35 - 1762572493)));
  int v41 = (v34 - 128990309) ^ v38;
  *(_DWORD *)(v40 - 112) = v38 + v34 + 1426724353;
  *(_DWORD *)(v40 - 108) = v41 ^ 0x7E;
  *(_DWORD *)(v40 - 104) = v38 | 1;
  *(_DWORD *)(v40 - 136) = v41 ^ 0x71;
  *(_DWORD *)(v40 - 128) = v41;
  *(void *)(v40 - 144) = a32;
  *(void *)(v40 - 120) = (v35 - 1058749021) - v38;
  uint64_t v42 = (*(uint64_t (**)(uint64_t))(v37 + 8 * ((v34 - 919) ^ (a4 + 861))))(v40 - 144);
  return (*(uint64_t (**)(uint64_t))(v37 + 8 * *(int *)(v40 - 132)))(v42);
}

uint64_t sub_1D0AE26C4(uint64_t result)
{
  unsigned int v1 = (*(unsigned char *)(result + 8) - 65 * (((result | 0xAD) - (result & 0xAD)) ^ 0x5F)) - 118;
  BOOL v2 = v1 > 8;
  int v3 = (1 << v1) & 0x105;
  if (v2 || v3 == 0) {
    int v5 = 342975859;
  }
  else {
    int v5 = 343018756;
  }
  *(_DWORD *)uint64_t result = v5;
  return result;
}

uint64_t sub_1D0AE2734@<X0>(int a1@<W8>, __n128 a2@<Q0>, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (a1 + 217);
  v7.n128_u64[0] = 0xF8F8F8F8F8F8F8F8;
  v7.n128_u64[1] = 0xF8F8F8F8F8F8F8F8;
  BOOL v8 = a4 - v4 + (v6 ^ 0xEF4E803DC474403ELL) < 0x10;
  return (*(uint64_t (**)(__n128, __n128))(v5 + 8 * (int)(v8 | (4 * v8) | v6)))(a2, v7);
}

uint64_t sub_1D0AE2860(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  int v1 = 846572393 * ((a1 + 1224902210 - 2 * (a1 & 0x49028642)) ^ 0x7F61D20B);
  int v2 = *(_DWORD *)(a1 + 16) - v1;
  uint64_t v3 = *(void *)a1;
  int v4 = 1255387933 * (*(_DWORD *)(a1 + 20) - v1) + 746794249;
  int v5 = 1332649919 * ((&v7 + 1800570260 - 2 * ((unint64_t)&v7 & 0x6B528594)) ^ 0x56210166);
  v2 += 656339381;
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v2 + v5 + 1150;
  unsigned int v7 = v5 + (v4 ^ 0xFF9F3E7F) + ((2 * v4) & 0xFF3E7CFE) + 2147338232;
  uint64_t v10 = v3;
  return (*((uint64_t (**)(unsigned int *))*(&off_1F26D60E0 + v2) + v2 + 1507))(&v7);
}

void sub_1D0AE29A8(uint64_t a1)
{
  if (*(void *)(a1 + 16)) {
    BOOL v2 = *(void *)(a1 + 8) == 0x7CADFE0965419187;
  }
  else {
    BOOL v2 = 1;
  }
  int v4 = v2 || *(void *)(a1 + 32) == 0x7AFA2E4D31C5923ALL;
  int v1 = *(_DWORD *)a1 - 839339309 * ((a1 & 0x8DBCAA5A | ~(a1 | 0x8DBCAA5A)) ^ 0xCEA24DC4);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1D0AE2A94()
{
  uint64_t v7 = (v3 + v5 + 177) % v0;
  unsigned int v8 = *(unsigned __int8 *)(v1 + (v3 + v5 + 170) % v0);
  int v9 = ((v8 >> 7) | (2 * v8)) ^ *(unsigned __int8 *)(v1 + v7);
  unsigned int v10 = *(unsigned __int8 *)(v1 + (v3 + v5 + 140) % v0);
  unsigned int v11 = *(unsigned __int8 *)(v1 + (v3 + v5) % v0);
  *(unsigned char *)(v1 + v7) = v9 ^ ((v10 >> 2) | ((_BYTE)v10 << 6)) ^ ((v11 >> 3) | (32 * v11));
  BOOL v12 = v3 + 1 != ((v4 - 953) ^ (v2 + 394));
  return (*(uint64_t (**)(void))(v6 + 8 * (((4 * v12) | (8 * v12)) ^ v4)))();
}

uint64_t sub_1D0AE2B2C(uint64_t a1)
{
  int v6 = (v4 - 278) | 0x117;
  uint64_t v7 = *(void **)v1;
  unsigned int v11 = &STACK[0x497FEE934D13E37E];
  __int16 v12 = 32548 - 32699 * ((2 * ((unsigned __int16)&v11 & 0xB8D0) - (unsigned __int16)&v11 + 18216) ^ 0x91A5);
  unsigned int v13 = (v6 + 600) ^ (1663139771
                    * ((2 * (&v11 & 0x675DB8D0) - &v11 + 413288232) ^ 0x604B91A5));
  uint64_t result = (*(uint64_t (**)(unint64_t **))(v3 + 8 * (v6 ^ 0x704)))(&v11);
  v2[130] = v10 % 0xAu - ((2 * (v10 % 0xAu)) & 0x18) + 76;
  *(_DWORD *)(a1 + 3) = 16843609;
  *(unsigned char *)(a1 + 2) = 76;
  *(_WORD *)a1 = 20550;
  *(unsigned char *)(a1 + 7) = 0;
  *(_DWORD *)(a1 + 8) = 0x4000000;
  *(_WORD *)(a1 + 12) = 2;
  *(unsigned char *)(a1 + 14) = v2[130] & 3;
  *(unsigned char *)(a1 + 15) = -69;
  v2[1] = 42;
  v2[131] = 0;
  *uint64_t v7 = a1;
  int v9 = *(unsigned char **)(v1 + 24);
  **(_DWORD **)(v1 + 40) = 16;
  *int v9 = 1;
  *(_DWORD *)(v1 + 56) = 343018756;
  return result;
}

uint64_t sub_1D0AE2CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v16 = (((a8 - 391) | 3) - 1044) & (a7 + v13);
  *(unsigned char *)(v15 + (a7 + v13)) = *(unsigned char *)(v11 + v16) ^ *(unsigned char *)(v8 + (a7 + v13)) ^ *(unsigned char *)(v16 + v9 + 2) ^ *(unsigned char *)(v16 + v10 + 1) ^ (-113 * ((((a8 + 121) | 3) - 20) & (a7 + v13)));
  return (*(uint64_t (**)(void))(v14 + 8 * (((2 * (a7 - 1 == v12)) | (4 * (a7 - 1 == v12))) ^ (a8 - 772))))();
}

uint64_t sub_1D0AE2D10(uint64_t a1)
{
  int v1 = 1543459711
     * (((a1 ^ 0xAE4A7A93 | 0x39F030C0) - (a1 ^ 0xAE4A7A93) + ((a1 ^ 0xAE4A7A93) & 0xC60FCF3F)) ^ 0xDB384997);
  return (*((uint64_t (**)(void))*(&off_1F26D60E0 + ((*(_DWORD *)(a1 + 8) + v1) ^ 0x42E))
          + ((246 * (((*(unsigned char *)a1 ^ v1) - 14) < 4u)) ^ (*(_DWORD *)(a1 + 8) + v1))))();
}

uint64_t sub_1D0AE2DA0@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, int a5@<W8>)
{
  uint64_t v9 = (v5 ^ a4) + v6;
  *(unsigned char *)(v9 + a2 + a3 - 1) = v7;
  return (*(uint64_t (**)(void))(v8 + 8 * ((((unint64_t)(v9 + a2) < 0x40) * a1) ^ a5)))();
}

uint64_t sub_1D0AE2DAC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((v2 + 726208790) ^ (344 * (v0 > v3 + 623)))))();
}

uint64_t sub_1D0AE2DF0@<X0>(uint64_t a1@<X8>, uint64_t a2, int a3, int a4)
{
  unsigned int v6 = a4 + 211909934 + 76 * (v4 ^ 0x101);
  BOOL v7 = v5 + 1245730504 < v6;
  if ((v5 + 1245730504) < 0x7895EA04 != v6 < 0x7895EA04) {
    BOOL v7 = v6 < 0x7895EA04;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((v7 * (((v4 ^ 0x101) + 450) ^ 0x415)) ^ v4)))();
}

void sub_1D0AE2E84(uint64_t a1)
{
  int v1 = 1503905621 * (((a1 | 0x1AC82D91) - (a1 & 0x1AC82D91)) ^ 0x47B04345);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1D0AE2F6C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((505 * (v0 >= (STACK[0x210] & 0xD51CB2F9) - 1102717856)) ^ (v1 - 186))))();
}

uint64_t sub_1D0AE2FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  return (*(uint64_t (**)(void))(v11
                                           + 8
                                           * ((11 * (v10 < ((((2 * (a10 ^ 0x502)) ^ 0x88E) + 836) ^ a10 ^ 0x558u))) | a10 ^ 0x502)))(0);
}

uint64_t sub_1D0AE3034()
{
  uint64_t v6 = *(void *)((v4 ^ 0xA6E2B243DFA1ACBLL) - 0xA6E2B243DFA1AB3);
  unsigned int v7 = 1332649919 * (&v9 ^ 0x3D7384F2);
  int v12 = v7 ^ 0x28F;
  unsigned int v9 = (v3 ^ 0x6F7CFECF) - v7 + ((2 * v3) & 0xDEF9FD9E) - 1208484869;
  uint64_t v15 = v1;
  uint64_t v13 = v0;
  uint64_t v10 = v2;
  uint64_t v11 = v6;
  (*(void (**)(unsigned int *))(v5 + 12136))(&v9);
  return (v14 - 343018756);
}

uint64_t sub_1D0AE3124@<X0>(uint64_t a1@<X8>)
{
  int v8 = (v1 - 566) | 0x210;
  int v9 = v1 + 1098962218;
  uint64_t v16 = a1;
  unsigned int v14 = (v1 + 1098962218) ^ (1477295531
                           * (((&v14 | 0xDC053DAB) - (&v14 & 0xDC053DAB)) ^ 0xEB0E08F8));
  uint64_t v10 = 8 * (v1 ^ 0x470);
  (*(void (**)(unsigned int *))(v5 + v10))(&v14);
  *(_DWORD *)(v6 - 0x7AFA2E4D31C5923ALL) = v15;
  *v7 += v8 ^ 0x255;
  unsigned int v14 = v9 ^ (1477295531 * ((&v14 & 0x82330690 | ~(&v14 | 0x82330690)) ^ 0x4AC7CC3C));
  uint64_t v16 = v4 + 8;
  uint64_t result = (*(uint64_t (**)(unsigned int *))(v5 + v10))(&v14);
  int v12 = v15;
  *v7 += 4;
  if (v12 == -1281591404) {
    int v13 = 343018756;
  }
  else {
    int v13 = v3 + 5;
  }
  *(_DWORD *)(v2 + 4) = v13;
  return result;
}

uint64_t sub_1D0AE3288()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((405
                                * (((((v1 ^ 0x2AC) + 1092565377) & 0xBEE0C6DF ^ 0xC5) & v0) == (((v1 ^ 0x2AC)
                                                                                               - 1020429453) & 0x3CD287B9 ^ 0x3A9))) ^ v1 ^ 0x2AC)))();
}

uint64_t sub_1D0AE32F8(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v3 + 8 * ((((v2 + 1) > 7) * (v4 - 1087)) ^ v4)))(a1, (a2 + 8));
}

uint64_t sub_1D0AE3304@<X0>(int a1@<W1>, int a2@<W8>)
{
  (*(void (**)(void))(v4 + 8 * (a2 ^ (a1 - 790))))(*v3);
  *uint64_t v3 = 0;
  _DWORD *v2 = 0;
  return (v5 - 343018756);
}

uint64_t sub_1D0AE336C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, int a12, char a13)
{
  int v17 = *(unsigned __int8 *)(v14 - 0x55C89A4359EC5AE9);
  a12 = 1332649919
      * (((&a11 | 0x8C1CB010) - &a11 + (&a11 & 0x73E34FEC)) ^ 0xB16F34E2)
      - 1480479259
      + v15;
  a13 = (v17 ^ 0x60)
      - -65 * (((&a11 | 0x10) - &a11 + (&a11 & 0xEC)) ^ 0xE2)
      + ((v17 << (v15 ^ 0x97)) ^ 0x3E)
      - 10;
  uint64_t v18 = (*(uint64_t (**)(int *))(v13 + 8 * (v15 + 1195)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * ((14 * (a11 == v16)) ^ v15)))(v18);
}

uint64_t sub_1D0AE34B4@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v6 = (char *)(v3 + 128);
  unsigned int v7 = v6 - 64;
  int8x16x4_t v9 = vld4q_s8(v7);
  v10.val[0] = v9.val[3];
  v10.val[1] = v9.val[2];
  int8x16x4_t v11 = vld4q_s8(v6);
  v10.val[2] = v9.val[1];
  v10.val[3] = v9.val[0];
  v9.val[0] = v11.val[3];
  v9.val[1] = v11.val[2];
  v9.val[2] = v11.val[1];
  v9.val[3] = v11.val[0];
  vst4q_s8(v7, v10);
  vst4q_s8(v6, v9);
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)(((2 * (a1 & ~((v2 + 363) ^ (v4 == 32)))) & 0xFFFFFFFB | (4
                                                                                             * (((v2 + 107) ^ ~(v4 == 32)) & 1))) ^ v5)))();
}

void sub_1D0AE34C0()
{
}

uint64_t sub_1D0AE352C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 ^ (v0 == v1)) & 1) == 0) * (v2 ^ 0x2F4)) ^ v2)))();
}

uint64_t sub_1D0AE356C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v0 < 0x20) ^ (v1 - 100) ^ 0xF9) & 1) * ((v1 - 771) ^ 3)) ^ (v1 - 868))))();
}

uint64_t sub_1D0AE35A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  unsigned int v50 = ((21 * (v47 ^ 0x26)) ^ 0x92EE582B) + v48;
  int v51 = *(_DWORD *)(&a35 + (v50 & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a11 + v50) = v51 ^ 0x92;
  *(unsigned char *)(a11 + (v48 - 1829872252)) = (BYTE2(v51) ^ 0x53) - ((2 * (BYTE2(v51) ^ 0x53)) & 0xF0) - 8;
  *(unsigned char *)(a11 + (v48 - 1829872253)) = (BYTE1(v51) ^ 0x19)
                                                     + ((2 * ((BYTE1(v51) ^ 0x19 | 0x78) ^ BYTE1(v51))) ^ 0x3D)
                                                     - 7;
  *(unsigned char *)(a11 + (v48 - 1829872251)) = (HIBYTE(v51) ^ 0x4F) - ((2 * (HIBYTE(v51) ^ 0x4F)) & 0xF0) - 8;
  BOOL v52 = v48 - 796721566 < (a47 + 746933701);
  if ((v48 - 796721566) < 0x3D94A0DC != (a47 + 746933701) < 0x3D94A0DC) {
    BOOL v52 = (a47 + 746933701) < 0x3D94A0DC;
  }
  return (*(uint64_t (**)(void))(v49 + 8 * ((167 * !v52) ^ v47)))();
}

uint64_t sub_1D0AE36C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,_DWORD *a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,unsigned char *a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
  *a43 = a1;
  *a44 = 142;
  *a52 = 1;
  *(unsigned char *)(a45 + 1) = 43;
  uint64_t v58 = bswap32(*(_DWORD *)(a46 + 8));
  unint64_t v59 = ((unint64_t)&a56 ^ 0xFED4EFDDEB79565FLL)
      + 0x6BBBF87ADCAFFFE6
      + ((2 * (void)&a56) & 0xFDA9DFBBD6F2ACB0);
  uint64_t v60 = v58 + a46 - 962;
  *(unsigned char *)(v60 + 973) = ((v59 - 69) ^ 0xBA) * (v59 - 52);
  *(unsigned char *)(v60 + (v56 ^ 0x23ELL)) = ((v59 - 68) ^ 0xBA) * (v59 - 51);
  return (*(uint64_t (**)(void))(v57 + 8 * (int)((1059 * (((v58 + 12) & 0x1FFFFFFFELL) == 2)) ^ v56 ^ 0x86)))();
}

uint64_t sub_1D0AE37C0(int a1, int a2, char a3, uint64_t a4, char a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v30 = 267 * (v27 ^ 0x56B);
  unsigned int v31 = v28 - 1027599427;
  uint64_t v32 = (a2 + 1343934260);
  unsigned int v33 = *(_DWORD *)(a25 - 0x17B29E1307D1180CLL + v32);
  *(unsigned char *)(a27 + v32) = ((v33 >> ((v30 - 96) ^ a3)) ^ a5) - ((2 * ((v33 >> ((v30 - 96) ^ a3)) ^ a5)) & 0xF0) - 8;
  *(unsigned char *)(a27 + (a2 + 1343934261)) = (a6 ^ BYTE2(v33)) - ((2 * (a6 ^ BYTE2(v33))) & 0xF0) - 8;
  *(unsigned char *)(a27 + (a2 + 1343934262)) = (BYTE1(v33) ^ 0x19) - ((2 * (BYTE1(v33) ^ 0x19)) & 0xF0) - 8;
  *(unsigned char *)(a27 + (a2 + 1343934263)) = v33 ^ 0x92;
  BOOL v34 = v31 > 0xD3CF66D8;
  if (v31 < v30 + a1 != (a1 + 534) > 0xD3CF66D8) {
    BOOL v34 = v31 < v30 + a1;
  }
  return (*(uint64_t (**)(void))(v29 + 8 * ((1926 * v34) ^ v30)))();
}

uint64_t sub_1D0AE38C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  *(_DWORD *)(v31 + 4 * (v34 - 801056558)) = 801056558
                                                           - v34
                                                           + ((1566083941
                                                             * (*(_DWORD *)(v31 + 4 * (v34 - 801056559)) ^ (*(_DWORD *)(v31 + 4 * (v34 - 801056559)) >> 30))) ^ *(_DWORD *)(v31 + 4 * (v34 - 801056558)));
  unint64_t v36 = 1543459711 * ((0x90D3CBF62BAC8A98 - ((v35 - 144) | 0x90D3CBF62BAC8A98) + a30) ^ 0xBC9E9CAF98D176A3);
  *(_DWORD *)(v35 - 104) = v36 ^ 1;
  int v37 = (v33 - 1086500683) ^ v36;
  *(_DWORD *)(v35 - 136) = v37 ^ 0x16;
  *(_DWORD *)(v35 - 128) = v37;
  *(void *)(v35 - 120) = (v34 + 1236333343) - v36;
  *(_DWORD *)(v35 - 112) = v36 + v33 + 1426725272;
  *(_DWORD *)(v35 - 108) = (v33 - 1086500800) ^ v36;
  *(void *)(v35 - 144) = v36 + 2037389900;
  uint64_t v38 = (*(uint64_t (**)(uint64_t))(v32 + 8 * (v33 ^ (v30 + 861))))(v35 - 144);
  return (*(uint64_t (**)(uint64_t))(v32 + 8 * *(int *)(v35 - 132)))(v38);
}

uint64_t sub_1D0AE39FC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v0 & 0x18) == ((v1 + 1046) ^ 0x51ALL)) * (v1 - 246)) ^ v1)))();
}

uint64_t sub_1D0AE3A30@<X0>(_OWORD *a1@<X8>)
{
  *a1 = 0u;
  a1[1] = 0u;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1123 * (3 * (v2 ^ 0x4BEu) - 1228 == (v1 & 0xFFFFFFE0))) ^ (v2 - 1036))))();
}

uint64_t sub_1D0AE3A7C(int a1, int a2)
{
  int v7 = a2 - 762;
  uint64_t v8 = (a1 + v3);
  long long v9 = *(_OWORD *)(v5 + v8 - 15);
  long long v10 = *(_OWORD *)(v5 + v8 - 31);
  uint64_t v11 = v2 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  LODWORD(v11) = 3 * (v7 ^ 0x352) - 1399 != (v4 & 0xFFFFFFE0);
  return (*(uint64_t (**)(void))(v6 + 8 * (int)((v11 | (4 * v11)) ^ (v7 + 522))))();
}

void sub_1D0AE3ADC()
{
  *(_DWORD *)(v0 - 248) = LODWORD(STACK[0x27C]) ^ 0x60D99E5B;
  *(_DWORD *)(v0 - 256) = LODWORD(STACK[0x280]) ^ 0x7A8A35BD;
  LODWORD(STACK[0x31C]) = LODWORD(STACK[0x270]) ^ 0xD0001D53;
  *(_DWORD *)(v0 - 252) = LODWORD(STACK[0x288]) ^ 0x15E829A2;
  JUMPOUT(0x1D0ADF1C8);
}

uint64_t sub_1D0AE3B30(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((279 * (a6 ^ 0x594)) ^ 0x31A) * (v6 == a3)) ^ a6)))();
}

uint64_t sub_1D0AE3B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v9 = v3[4];
  char v10 = v3[5];
  char v11 = v3[6] + 1;
  int v12 = 1334103649 * ((((v8 - 144) | 0xE9F5DF25) - ((v8 - 144) | 0x160A20DA) + 369762522) ^ 0x815D178B);
  *(_DWORD *)(v8 - 108) = v7 - v12 - ((2 * v7 - 686037512) & 0xCB231ED4) - 786464154;
  *(_DWORD *)(v8 - 144) = v12 + v6 + 551;
  *(unsigned char *)(v8 - 128) = v9 - 97 * ((((v8 + 112) | 0x25) - ((v8 + 112) | 0xDA) - 38) ^ 0x8B) - ((2 * v9) & 0x2A) - 107;
  *(void *)(a2 + 3000) = a3;
  *(unsigned char *)(v8 - 112) = (v10 ^ 0x6A)
                       - 97 * ((((v8 + 112) | 0x25) - ((v8 + 112) | 0xDA) - 38) ^ 0x8B)
                       + ((2 * v10) & 0xD4)
                       - 74;
  *(unsigned char *)(v8 - 127) = (v11 ^ 0x64)
                       - 97 * ((((v8 + 112) | 0x25) - ((v8 + 112) | 0xDA) - 38) ^ 0x8B)
                       + ((2 * v11) & 0xC8)
                       - 4;
  *(void *)(a2 + 3016) = a1;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v6 ^ 0x4E2)))(v8 - 144);
  *uint64_t v14 = -1;
  *(_DWORD *)(v4 + 24) = v7;
  return result;
}

uint64_t sub_1D0AE3CC4@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + v2 + v1) = *(unsigned char *)(v5 + v2 + v1) ^ 0xF8;
  return (*(uint64_t (**)(void))(v6 + 8 * (int)((1454 * ((v4 ^ 0x1FFLL) + v2 == v3)) ^ (v4 - 200))))();
}

uint64_t sub_1D0AE3D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t v73 = ((unint64_t)&STACK[0x230] ^ 0xEDFFF9F5DFE17EAELL)
      + 0x76FFEF7B7A7ED852
      + ((2 * (void)&STACK[0x230]) & 0xDBFFF3EBBFC2FD50);
  LOBYTE(STACK[0x2EF]) = ((v72 - 13) ^ v73 ^ 0x4B) * (v73 + 17);
  LOBYTE(STACK[0x2EE]) = ((v73 | 1) ^ 0xBA) * (v73 + 18);
  return (*(uint64_t (**)(void))(a72 + 8 * v72))();
}

void sub_1D0AE3D1C()
{
}

uint64_t sub_1D0AE3D9C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 - 311) * (v1 == 2140997239)) ^ v0)))();
}

uint64_t sub_1D0AE3DD8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v1 ^ 0x3CD) + (v1 ^ 0x141) - 471) * (v2 != v0)) ^ v1)))();
}

uint64_t sub_1D0AE3E10()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((((v1 + 498) ^ 0x34Eu) - v0 < 8) * ((v1 - 103492077) & 0x62B2D7F ^ 0x57D)) ^ v1)))();
}

uint64_t sub_1D0AE3E60()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((v3 + 726207857) ^ ((v2 < v0) | (2 * (v2 < v0))))))();
}

uint64_t sub_1D0AE3E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, int a3@<W4>, int a4@<W5>, unsigned int a5@<W6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  *(unsigned char *)(a2 + v8 + a6) = *(unsigned char *)(a7 + v8 + a6) - ((2 * *(unsigned char *)(a7 + v8 + a6)) & 0xF0) - 8;
  return (*(uint64_t (**)(void))(v10 + 8 * (((v8 + v9 + ((v7 + a4) | a5) == a1 + 16) * a3) ^ v7)))();
}

uint64_t sub_1D0AE3EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_DWORD *)(v17 - 168) = v15
                         + 1449114341 * (((v17 - 168) & 0x22A60FE5 | ~((v17 - 168) | 0x22A60FE5)) ^ 0x120709F1)
                         + 957;
  *(void *)(v17 - 152) = v13;
  *(void *)(v17 - 144) = a13;
  *(void *)(v17 - 160) = v14 + 12;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v15 ^ 0x793)))(v17 - 168);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (int)(((*(_DWORD *)(v17 - 136) == 343018756)
                                                   * (((v15 + 19922805) | 0xC4050818) ^ 0xC5350C04)) ^ v15)))(v18);
}

uint64_t sub_1D0AE3FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v8 = a4 - v7 + v4 >= ((3 * (((v5 - 549) | 0x30) ^ 0x10Du)) ^ 0xA7uLL);
  return (*(uint64_t (**)(void))(v6 + 8 * (((8 * v8) | (v8 << 6)) ^ v5)))();
}

uint64_t sub_1D0AE3FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49)
{
  unsigned int v52 = v49 - 153 + a49 + 693378946;
  BOOL v53 = v50 + 75310871 < v52;
  if (v52 < 0x3A6372E7 != (v50 + 75310871) < 0x3A6372E7) {
    BOOL v53 = v52 < 0x3A6372E7;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 8 * ((v53 * (((v49 - 958690026) & 0x392472FF) + 549)) ^ v49)))(979596007, 75310871, 26, 234, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_1D0AE4084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * (v12 | ((unint64_t)(a6 - a12 + 0xE8AF10975501C2ELL) < 0x20) | (16 * ((unint64_t)(a6 - a12 + 0xE8AF10975501C2ELL) < 0x20)))))();
}

uint64_t sub_1D0AE40D0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, int a11, int a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v28 = *(unsigned __int8 *)(a27 - 0x17B29E1307D117F4) ^ 0xA;
  if (v28 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27
  }
                                                                + 8
                                                                * ((26
                                                                  * (*(_DWORD *)(a27 - 0x17B29E1307D117F8) == ((5 * a10) ^ 0x110F567E))) ^ (a4 + 342))))(3553584318, 2951033036, 174);
  if (v28 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27
  }
                                                                + 8
                                                                * ((7
                                                                  * (*(_DWORD *)(a27 - 0x17B29E1307D117F8) != a12 + 286216321)) ^ (a4 + 1277))))(a1, a2, 3688754949);
  *(unsigned char *)(a27 - 0x17B29E1307D117F9) = ((a13 + 79) ^ 0xBA) * ((a4 ^ 0xD6) + a13);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 8 * ((a4 + 435) ^ 6)))(183, 56, 3688754949);
}

uint64_t sub_1D0AE425C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((v4 - v2 + v0 - 0x10B17FC23B8BC012 + (unint64_t)((v1 - 582) ^ 0xA6u) < 8) ^ v1)))();
}

uint64_t sub_1D0AE42A0()
{
  *(unsigned char *)(v3 + ((133 * (v4 ^ 0x4BF)) ^ 0xFFFFFFFFF0B47273) + v0) = *(unsigned char *)(v2
                                                                                 + ((133 * (v4 ^ 0x4BF)) ^ 0xFFFFFFFFF0B47273)
                                                                                 + v0)
                                                                      + (~(2
                                                                         * *(unsigned char *)(v2
                                                                                    + ((133 * (v4 ^ 0x4BF)) ^ 0xFFFFFFFFF0B47273)
                                                                                    + v0)) | 0xF)
                                                                      - 7;
  return (*(uint64_t (**)(void))(v5 + 8 * ((95 * (v0 - 1 != v1)) ^ v4)))();
}

uint64_t sub_1D0AE42FC(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((a1 + a2 + 9764873 < (((v2 + 441) | 0x135) ^ 0x535u))
                                     * ((v2 + 1724372392) & 0x99382DAF ^ 0x59E)) ^ v2)))();
}

uint64_t sub_1D0AE4398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16, int a17, unsigned int a18, uint64_t a19)
{
  unsigned int v23 = bswap32(*(_DWORD *)(v21 + 32));
  uint64_t v24 = (uint64_t)&v19[56 * *v19 + 0x608BDA5C9F385210];
  unsigned int v25 = v23 & 0xFFFFFFF0 ^ 0x79BFB9F3;
  int v26 = 2 * v23;
  unsigned int v27 = 1477295531 * ((&a13 & 0x286842F5 | ~(&a13 | 0x286842F5)) ^ 0xE09C8859);
  a15 = v21 + 56;
  a16 = v24;
  a19 = v21 + 16;
  a17 = v27 + v22 + 294;
  a18 = (v26 & 0xF37F73E0) + v27 + v25 + ((131 * ((v22 + 997620573) & 0xC48980AD ^ 0x89)) ^ 0xEF71C4E1);
  a13 = v21 + 56;
  uint64_t v28 = (*(uint64_t (**)(uint64_t *))(v20 + 8 * (v22 ^ 0x139)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((482 * (a14 == 343018756)) ^ v22)))(v28);
}

uint64_t sub_1D0AE44CC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((v0 != 0) | (4 * (v0 != 0))) ^ 0x1B9u)))();
}

uint64_t sub_1D0AE44FC(uint64_t a1, unsigned __int8 a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, unsigned __int8 a7, unsigned __int8 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t v87 = a1 - 1;
  unsigned int v88 = ((v87 + 359944755) << ((a70 ^ a71) - 20)) - ((v75 - 32) & 0xAF688E60) + 7283855;
  unsigned __int8 v89 = *(unsigned char *)(v84 + (int)(v88 ^ 0x57B4473F)) ^ *(unsigned char *)(*(void *)(a65 + v85 - 128) + (v77 ^ 0xF8));
  *(unsigned char *)(v86 - 16) = v89 ^ 0xF8;
  unsigned __int8 v90 = *(unsigned char *)(v84 + (int)(v88 ^ 0x57B4473B)) ^ *(unsigned char *)(*(void *)(a65 + v85 - 128 + 32) + (v82 ^ 0xF8));
  *(unsigned char *)(v86 - 12) = v90 ^ 0xF8;
  unsigned __int8 v91 = *(unsigned char *)(v84 + (int)(v88 ^ 0x57B44737)) ^ *(unsigned char *)(*(void *)(a65 + v85 - 128 + 64) + (v76 ^ 0xF8));
  *(unsigned char *)(v86 - 8) = v91 ^ 0xF8;
  unsigned __int8 v92 = *(unsigned char *)(v84 + (int)(v88 ^ 0x57B44733)) ^ *(unsigned char *)(*(void *)(a65 + v85 - 128 + 96) + (a3 ^ 0xF8));
  *(unsigned char *)(v86 - 4) = v92 ^ 0xF8;
  unsigned __int8 v93 = *(unsigned char *)(v84 + (int)(v88 ^ 0x57B44732)) ^ *(unsigned char *)(*(void *)(a65 + v85 - 128 + 104) + (v78 ^ 0xF8));
  *(unsigned char *)(v86 - 3) = v93 ^ 0xF8;
  unsigned __int8 v94 = *(unsigned char *)(v84 + (int)(v88 ^ 0x57B44736)) ^ *(unsigned char *)(*(void *)(a65 + v85 - 128 + 72) + (v81 ^ 0xF8));
  *(unsigned char *)(v86 - 7) = v94 ^ 0xF8;
  unsigned __int8 v95 = *(unsigned char *)(v84 + (int)(v88 ^ 0x57B4473A)) ^ *(unsigned char *)(*(void *)(a65 + v85 - 128 + 40) + (v74 ^ 0xF8));
  *(unsigned char *)(v86 - 11) = v95 ^ 0xF8;
  unsigned __int8 v96 = *(unsigned char *)(v84 + (int)(v88 ^ 0x57B4473E)) ^ *(unsigned char *)(*(void *)(a65 + v85 - 128 + 8) + (v79 ^ 0xF8));
  *(unsigned char *)(v86 - 15) = v96 ^ 0xF8;
  unsigned __int8 v97 = *(unsigned char *)(v84 + (int)(v88 ^ 0x57B4473D)) ^ *(unsigned char *)(*(void *)(a65 + v85 - 128 + 16) + (a7 ^ 0xF8));
  *(unsigned char *)(v86 - 14) = v97 ^ 0xF8;
  unsigned __int8 v98 = *(unsigned char *)(v84 + (int)(v88 ^ 0x57B44735)) ^ *(unsigned char *)(*(void *)(a65 + v85 - 128 + 80) + (a6 ^ 0xF8));
  *(unsigned char *)(v86 - 6) = v98 ^ 0xF8;
  unsigned __int8 v99 = *(unsigned char *)(v84 + (int)(v88 ^ 0x57B44739)) ^ *(unsigned char *)(*(void *)(a65 + v85 - 128 + 48) + (a2 ^ 0xF8));
  *(unsigned char *)(v86 - 10) = v99 ^ 0xF8;
  unsigned __int8 v100 = *(unsigned char *)(v84 + (int)(v88 ^ 0x57B44731)) ^ *(unsigned char *)(*(void *)(a65 + v85 - 128 + 112) + (v83 ^ 0xF8));
  *(unsigned char *)(v86 - 2) = v100 ^ 0xF8;
  unsigned __int8 v101 = *(unsigned char *)(v84 + (int)(v88 ^ 0x57B4473C)) ^ *(unsigned char *)(*(void *)(a65 + v85 - 128 + 24) + (a8 ^ 0xF8));
  *(unsigned char *)(v86 - 13) = v101 ^ 0xF8;
  unsigned __int8 v102 = *(unsigned char *)(v84 + (int)(v88 ^ 0x57B44738)) ^ *(unsigned char *)(*(void *)(a65 + v85 - 128 + 56) + (v72 ^ 0xF8));
  *(unsigned char *)(v86 - 9) = v102 ^ 0xF8;
  unsigned __int8 v103 = *(unsigned char *)(v84 + (int)(v88 ^ 0x57B44734)) ^ *(unsigned char *)(*(void *)(a65 + v85 - 128 + 88) + (v80 ^ 0xF8));
  *(unsigned char *)(v86 - 5) = v103 ^ 0xF8;
  unsigned __int8 v104 = *(unsigned char *)(v84 + (int)(v88 ^ 0x57B44730)) ^ *(unsigned char *)(*(void *)(a65 + v85 - 128 + 120) + (v73 ^ 0xF8));
  *(unsigned char *)(v86 - 1) = v104 ^ 0xF8;
  uint64_t v105 = (void *)(a64 + ((unint64_t)(((int)v87 + 8) % a69) << 7));
  unsigned int v106 = *(_DWORD *)(v105[148] + 4 * v96) ^ *(_DWORD *)(v105[147] + 4 * v89) ^ *(_DWORD *)(v105[149] + 4 * v97) ^ *(_DWORD *)(v105[150] + 4 * v101);
  *(unsigned char *)(v86 - 13) = HIBYTE(v106) - 16 * (v106 >> 27) - 8;
  *(unsigned char *)(v86 - 14) = BYTE2(v106) - 16 * (v106 >> 19) - 8;
  *(unsigned char *)(v86 - 15) = BYTE1(v106) - 16 * (v106 >> 11) - 8;
  *(unsigned char *)(v86 - 16) = v106 ^ 0xF8;
  uint64_t v107 = (uint64_t)&v105[4 * a68 + 147];
  LODWORD(v107) = *(_DWORD *)(*(void *)(v107 + 8) + 4 * v95) ^ *(_DWORD *)(*(void *)v107 + 4 * v90) ^ *(_DWORD *)(*(void *)(v107 + 16) + 4 * v99) ^ *(_DWORD *)(*(void *)(v107 + 24) + 4 * v102);
  *(unsigned char *)(v86 - 9) = BYTE3(v107) - 16 * (v107 >> 27) - 8;
  *(unsigned char *)(v86 - 10) = (~(v107 >> 15) | 0xF) + BYTE2(v107) - 7;
  *(unsigned char *)(v86 - 11) = BYTE1(v107) - 16 * (v107 >> 11) - 8;
  *(unsigned char *)(v86 - 12) = v107 ^ 0xF8;
  uint64_t v108 = (uint64_t)&v105[4 * a67 + 147];
  LODWORD(v108) = *(_DWORD *)(*(void *)(v108 + 8) + 4 * v94) ^ *(_DWORD *)(*(void *)v108 + 4 * v91) ^ *(_DWORD *)(*(void *)(v108 + 16) + 4 * v98) ^ *(_DWORD *)(*(void *)(v108 + 24) + 4 * v103);
  *(unsigned char *)(v86 - 5) = BYTE3(v108) - 16 * (v108 >> 27) - 8;
  *(unsigned char *)(v86 - 6) = BYTE2(v108) - 16 * (v108 >> 19) - 8;
  *(unsigned char *)(v86 - 7) = BYTE1(v108) - 16 * (v108 >> 11) - 8;
  *(unsigned char *)(v86 - 8) = v108 ^ 0xF8;
  uint64_t v109 = &v105[4 * a66 + 147];
  unsigned int v110 = *(_DWORD *)(v109[1] + 4 * v93) ^ *(_DWORD *)(*v109 + 4 * v92) ^ *(_DWORD *)(v109[2] + 4 * v100) ^ *(_DWORD *)(v109[3] + 4 * v104);
  *(unsigned char *)(v86 - 1) = (~(v110 >> 23) | 0xF) + HIBYTE(v110) - 7;
  *(unsigned char *)(v86 - 2) = BYTE2(v110) - 16 * (v110 >> 19) - 8;
  *(unsigned char *)(v86 - 3) = (~(v110 >> 7) | 0xF) + BYTE1(v110) - 7;
  *(unsigned char *)(v86 - 4) = v110 ^ 0xF8;
  return (*(uint64_t (**)(void))(a72 + 8 * ((153 * ((unint64_t)(v87 + 359944755) <= 0x1574522B)) ^ a70)))();
}

uint64_t sub_1D0AE4514()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(unsigned char *)(v0 - 0x6E2E237C8C7936A9) == 45) * (((v1 ^ 0x29C) + 129) ^ 0x2CB)) | v1)))();
}

void sub_1D0AE455C(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *int v22 = 0x80000000;
  (*(void (**)(uint64_t))(v23 + 8 * ((a1 - 56) ^ 0x55B)))(a22);
  JUMPOUT(0x1D0AE45A8);
}

void sub_1D0AE46C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v36 = (*(uint64_t (**)(uint64_t, void))(v35 + 8 * (v34 + 466)))(a21, 0);
  uint64_t v37 = *(void *)(a34 + 16);
  *(_DWORD *)(a34 + 4) = *(_DWORD *)(a34 + 24);
  *(_DWORD *)(a34 + 8) = v37;
  *(_DWORD *)(a34 + 12) = (*(uint64_t (**)(uint64_t))(v35 + 8 * (v34 + 449)))(v36);
  *(_DWORD *)a34 = (*(uint64_t (**)(void))(v35 + 8 * (v34 + 449)))();
  JUMPOUT(0x1D0AE480CLL);
}

void sub_1D0AE48EC()
{
}

uint64_t sub_1D0AE48F4()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((v0 | ((v0 < v2) << 16)) != 20543) * (((v1 - 1020393319) ^ 0xC32E09C5) - 601)) ^ v1)))();
}

uint64_t sub_1D0AE4950()
{
  return v0();
}

uint64_t sub_1D0AE499C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  LODWORD(STACK[0x254]) = 0;
  int v75 = LODWORD(STACK[0x254])++;
  *a72 = v75 + 1;
  uint64_t v76 = *(unsigned int *)STACK[0x200];
  unint64_t v77 = 1332649919
      * ((~((v74 - 152) | 0x8D460E0A1F79C4A3) + ((v74 - 152) & 0x8D460E0A1F79C4A3)) ^ 0xC844014EDDF5BFAELL);
  *(_DWORD *)(v74 - 112) = v77 + v72 + 572803321;
  *(_DWORD *)(v74 - 120) = -1332649919 * ((~((v74 - 152) | 0x1F79C4A3) + ((v74 - 152) & 0x1F79C4A3)) ^ 0xDDF5BFAE);
  *(_DWORD *)(v74 - 116) = v77 ^ (v72 + 1826182648) ^ 0x87;
  *(_DWORD *)(v74 - 152) = ((v72 + 1826182648) ^ 0xFD) - v77;
  *(_DWORD *)(v74 - 128) = v72 + 1826182648 - v77;
  uint64_t v78 = v74 - 152;
  *(void *)(v78 + 8) = v77 + 5119;
  *(void *)(v78 + 16) = v76 + v77;
  uint64_t v79 = (*(uint64_t (**)(uint64_t))(v73 + 8 * (v72 ^ 0x7AE)))(v74 - 152);
  return (*(uint64_t (**)(uint64_t))(v73 + 8 * *(int *)(v74 - 124)))(v79);
}

void sub_1D0AE4A8C()
{
}

uint64_t sub_1D0AE4A94@<X0>(int32x4_t *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int8x16_t a34)
{
  int8x16x4_t v67 = vld4q_s8(v39);
  uint8x16_t v42 = (uint8x16_t)veorq_s8(v67.val[0], v40);
  uint16x8_t v43 = vmovl_u8(*(uint8x8_t *)v42.i8);
  uint16x8_t v44 = vmovl_high_u8(v42);
  uint8x16_t v45 = (uint8x16_t)veorq_s8(v67.val[1], v40);
  _Q17 = vmovl_u8(*(uint8x8_t *)v45.i8);
  _Q16 = vmovl_high_u8(v45);
  __asm
  {
    SHLL2           V18.4S, V16.8H, #0x10
    SHLL2           V19.4S, V17.8H, #0x10
  }
  uint8x16_t v54 = (uint8x16_t)veorq_s8(v67.val[2], v40);
  uint16x8_t v55 = vmovl_high_u8(v54);
  uint16x8_t v56 = vmovl_u8(*(uint8x8_t *)v54.i8);
  v67.val[0] = veorq_s8(v67.val[3], v40);
  v67.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v67.val[0]);
  v67.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v67.val[1]);
  v67.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v67.val[1].i8);
  v67.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v67.val[0].i8);
  v67.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v67.val[0]);
  v67.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v67.val[0].i8);
  int32x4_t v57 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q17.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v56.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v43.i8), 0x18uLL)), v67.val[0]);
  int32x4_t v58 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q19, (int8x16_t)vshll_high_n_u16(v56, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v43), 0x18uLL)), v67.val[3]);
  int32x4_t v59 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q16.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v55.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v44.i8), 0x18uLL)), v67.val[1]);
  int32x4_t v60 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q18, (int8x16_t)vshll_high_n_u16(v55, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v44), 0x18uLL)), v67.val[2]);
  v67.val[0] = veorq_s8(vandq_s8((int8x16_t)v57, a34), (int8x16_t)(*(_OWORD *)v67.val & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
  v67.val[3] = veorq_s8(vandq_s8((int8x16_t)v58, a34), (int8x16_t)(*(_OWORD *)&v67.val[3] & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
  v67.val[1] = veorq_s8(vandq_s8((int8x16_t)v59, a34), (int8x16_t)(*(_OWORD *)&v67.val[1] & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
  v67.val[2] = veorq_s8(vandq_s8((int8x16_t)v60, a34), (int8x16_t)(*(_OWORD *)&v67.val[2] & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
  a1[2] = vaddq_s32(vsubq_s32(v59, vaddq_s32((int32x4_t)v67.val[1], (int32x4_t)v67.val[1])), v41);
  a1[3] = vaddq_s32(vsubq_s32(v60, vaddq_s32((int32x4_t)v67.val[2], (int32x4_t)v67.val[2])), v41);
  *a1 = vaddq_s32(vsubq_s32(v57, vaddq_s32((int32x4_t)v67.val[0], (int32x4_t)v67.val[0])), v41);
  a1[1] = vaddq_s32(vsubq_s32(v58, vaddq_s32((int32x4_t)v67.val[3], (int32x4_t)v67.val[3])), v41);
  uint64_t v61 = v36 + 16 + v38;
  int8x16_t v62 = &a1->i32[v61];
  int v63 = *(v62 - 8) ^ *(v62 - 3);
  unsigned int v64 = v63 + v35 - ((2 * v63) & 0xCE9BE6E4);
  LODWORD(v61) = *(v62 - 16) ^ *((_DWORD *)&a1[-115] + v61 + (v34 + 1) - 3);
  HIDWORD(v65) = v61 ^ v64 ^ 0x674DF372;
  LODWORD(v65) = v61 ^ ~v64;
  *int8x16_t v62 = v35 + (v65 >> 31) - ((2 * (v65 >> 31)) & 0xCE9BE6E4);
  return (*(uint64_t (**)(void))(v37 + 8 * ((1262 * (v36 + 17 == v36 + 80)) ^ (v34 - 46))))();
}

uint64_t *sub_1D0AE4C5C(uint64_t *result)
{
  uint64_t v1 = *result;
  *(void *)(v1 - 0x10B17FC23B8BBE2CLL) = 0xFBDC740BB9F3DCDCLL;
  *(void *)(v1 - 0x10B17FC23B8BBE24) = 0x5190721660F77F86;
  *(void *)(v1 - 0x10B17FC23B8BBE1CLL) = 0x672CD483672CD483;
  return result;
}

void sub_1D0AE4CD0()
{
}

uint64_t sub_1D0AE4D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33)
{
  return (*(uint64_t (**)(uint64_t))(v33
                                            + 8
                                            * (((&a14[56 * *a14 + 24] == 0) * ((a33 - 136) ^ 0x652)) ^ (a33 + 609))))(183);
}

void sub_1D0AE4D18()
{
}

uint64_t sub_1D0AE4D20()
{
  *uint64_t v3 = v3[623];
  return (*(uint64_t (**)(void))(v2 + 8 * ((504 * (((v0 - 847) ^ 0xFFFFFFDF) + v1 != 0)) ^ (v0 + 384))))();
}

uint64_t sub_1D0AE4D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  return (*(uint64_t (**)(void))(v41 + 8 * (((2 * ((v40 - 150103874) & 0x8F264FF ^ 0x132) - 330) * (a40 == a2)) ^ v40)))();
}

void sub_1D0AE4DA8(uint64_t a1)
{
  int v1 = 1580882533 * (a1 ^ 0x9998B3C0);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1D0AE4E68@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,__int16 a24,char a25)
{
  *(unsigned char *)(v26 + ((int)v27 - 1120299529) % v25) = (*(unsigned char *)(v26 + ((int)v27 - 1120299529) % v25)
                                                   - ((2 * *(unsigned char *)(v26 + ((int)v27 - 1120299529) % v25)) & 0x48)
                                                   + 36) ^ *(&a25 + v27 - 1120299529);
  return (*(uint64_t (**)(void))(v28 + 8 * (int)((13 * ((a2 ^ 0x571) + v27 != a1 + 210)) | a2)))();
}

void sub_1D0AE4EE4()
{
}

uint64_t sub_1D0AE4EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8 * ((13 * (v4 + 1 == v5 + 32)) ^ v7)))(a1, a4);
}

uint64_t sub_1D0AE4FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,__int16 a57,char a58,char a59)
{
  unint64_t v61 = ((unint64_t)&a39 ^ 0x9747D7F2DFEB7F7ALL)
      + 0x7BFDBDBFFDB7E000
      + ((2 * (void)&a39) & 0x2E8FAFE5BFD6FEF0);
  a59 = ((v61 + ((3 * (v59 ^ 0x26)) ^ 0x84)) ^ 0xBA) * (v61 - 105);
  a58 = ((v61 - 121) ^ 0xBA) * (v61 - 104);
  int8x16_t v62 = *(uint64_t (**)(void, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 24 * (v59 ^ 0x326));
  return v62(v62, (v61 + 151), (v61 + 152), 343018756, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           0,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_1D0AE509C@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (((((v2 < 0x1F) ^ (a1 - 4)) & 1)
                                * (((a1 - 256680919) & 0xF4CA359) - 755)) ^ a1)))();
}

uint64_t sub_1D0AE50E8@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(v6 + 4 * a1) = a1 + (v1 ^ (v1 >> 30)) * v3;
  return (*(uint64_t (**)(void))(v5 + 8 * (((a1 < 0x26F) * v2) ^ v4)))();
}

void sub_1D0AE5114()
{
}

uint64_t sub_1D0AE520C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  char v11 = (_DWORD *)(v6 + 4 * (v5 + v7));
  int v12 = *(v11 - 8) ^ *(v11 - 3);
  unsigned int v13 = v12 + v10 - (((13 * (a5 ^ 0x66)) ^ 0xCE9BE57F) & (2 * v12));
  int v14 = *(v11 - 16) ^ *(v11 - 14);
  HIDWORD(v15) = v14 ^ 0x674DF372 ^ v13;
  LODWORD(v15) = v14 ^ ~v13;
  *char v11 = (v15 >> 31) + v10 - ((2 * (v15 >> 31)) & 0xCE9BE6E4);
  return (*(uint64_t (**)(void))(v9 + 8 * ((232 * (v5 + 1 == v8 + 80)) ^ (a5 + 850))))();
}

void sub_1D0AE52B4()
{
  *int v0 = -1;
  JUMPOUT(0x1D0AE52C4);
}

uint64_t sub_1D0AE530C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  unsigned int v17 = ((2 * (v13 - 1118710191)) & 0xDE7FCFFE) + ((v13 - 1118710191) ^ 0xEF3FE7FF);
  uint64_t v18 = *(void *)(v16 + 8 * (a1 ^ 0x1C5u));
  if (v17 == -281024488) {
    return (*(uint64_t (**)(uint64_t))(v14 + 8 * (((a13 == 45) * ((4 * v15) ^ 0x53E)) ^ (v15 - 350))))(v18);
  }
  if (v17 == -281024473) {
    JUMPOUT(0x1D0AD4558);
  }
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 - 276)))(v18);
}

void sub_1D0AE53F8()
{
}

uint64_t sub_1D0AE5400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = STACK[0x208];
  *(unsigned char *)(v5 - 0x6E2E237C8C79362ALL) = *(unsigned char *)(STACK[0x208] + 12);
  *(unsigned char *)(v5 - 0x6E2E237C8C793629) = *(unsigned char *)(v7 + 4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                       + 8
                                                                       * (((LODWORD(STACK[0x200]) == ((v4 - 150) ^ 0x58))
                                                                         * ((v3 + v4 - 150 - 91) ^ (v3 + 1027))) ^ (v4 - 150))))(a1, a2, a3, 342976665);
}

uint64_t sub_1D0AE5594(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((207 * (a4 != 3 * (v4 ^ 0x306) + 343018513)) ^ v4)))();
}

uint64_t sub_1D0AE55D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned char *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,char a30,uint64_t a31,unsigned char *a32,_DWORD *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v77 = v73 ^ 0x231;
  *(unsigned char *)(v76 - 160) = (-83 * ((((v76 + 88) | 0xFA) - (v76 + 88)) ^ 0x5C)) ^ (19 * (a30 ^ 0x55) + 125);
  *(unsigned char *)(v76 - 168) = (-83 * ((((v76 + 88) | 0xFA) - (v76 + 88)) ^ 0x5C)) ^ 0xA1;
  *(_DWORD *)(v76 - 164) = v77
                         - 961505453
                         * ((((v76 - 168) | 0x7AAFABFA) - (v76 - 168) + ((v76 - 168) & 0x85505400)) ^ 0xD854655C)
                         + 249;
  *(void *)(v76 - 152) = a63;
  *(void *)(v76 - 144) = a36 + 132;
  (*(void (**)(uint64_t))(a73 + 8 * (v77 ^ 0x723)))(v76 - 168);
  *a64 = v75;
  *a33 = v74;
  *a32 = 1;
  *a22 = 44;
  uint64_t v78 = bswap32(*(_DWORD *)(STACK[0x208] + 8));
  unint64_t v79 = ((unint64_t)&STACK[0x218] ^ 0x5DDFFFFFDDEBD31CLL)
      - 0x40302408C801000
      + ((2 * (void)&STACK[0x218]) & 0xBBBFFFFFBBD7A630);
  unint64_t v80 = v78 + STACK[0x208] - 298;
  *(unsigned char *)(v80 + ((v77 - 1609856559) & 0x5FF475FD)) = ((v79 - 28) ^ 0xBA) * (v79 - 11);
  *(unsigned char *)(v80 + 308) = ((v79 - 27) ^ 0xBA) * (v79 - 10);
  return (*(uint64_t (**)(void))(a73 + 8 * ((25 * (((v78 + 12) & 0x1FFFFFFFELL) == 2)) | v77)))();
}

void sub_1D0AE5778()
{
}

uint64_t sub_1D0AE5864(double a1, double a2, double a3, double a4, double a5, int8x16_t a6)
{
  int v9 = (v8 - 726207837) | 0x14A;
  int8x16_t v10 = (int8x16_t)vld1q_dup_f32((const float *)v6);
  v11.i64[0] = 0x8000000080000000;
  v11.i64[1] = 0x8000000080000000;
  a6.i64[0] = *(void *)(v6 + 4);
  a6.i32[2] = *(_DWORD *)(v6 + 12);
  int8x16_t v12 = vextq_s8(v10, a6, 0xCuLL);
  int8x16_t v13 = a6;
  v13.i32[3] = *(_DWORD *)(v6 + 4 * (v9 ^ 0x34u) - 1432);
  int32x4_t v14 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v13, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), vandq_s8(v12, v11)), 1uLL), *(int8x16_t *)(v6 + 1588));
  v12.i32[0] = *((_DWORD *)&STACK[0x4F8] + (*(_DWORD *)(v6 + 4) & 1));
  v12.i32[1] = *((_DWORD *)&STACK[0x4F8] + (*(_DWORD *)(v6 + 8) & 1));
  v12.i32[2] = *((_DWORD *)&STACK[0x4F8] + (*(_DWORD *)(v6 + 12) & 1));
  v12.i32[3] = *((_DWORD *)&STACK[0x4F8] + (v13.i8[12] & 1));
  *(int8x16_t *)uint64_t v6 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v14, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v14, v14), (int8x16_t)vdupq_n_s32(0x2F7143BAu))), vdupq_n_s32(0x17B8A1DDu)), v12);
  return (*(uint64_t (**)(void))(v7 + 8 * v9))();
}

uint64_t sub_1D0AE5870()
{
  *(unsigned char *)(v7 + v1 + v4 + 24) = *(unsigned char *)(v6 + v1 + v4 + 24);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v1 + 1 == ((48 * (v0 ^ v3)) ^ v2)) * v5) | v0)))();
}

uint64_t sub_1D0AE58B4(char a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(unsigned char *)(v7 + v9 + a6 + (v6 ^ v8) * v10 - 79) = a1;
  return (*(uint64_t (**)(void))(v11 + 8 * ((((unint64_t)(v7 + v9) > 0x3F) * a2) ^ v6)))();
}

uint64_t sub_1D0AE58EC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  int v21 = a1 ^ 0x34F;
  unsigned int *v20 = 0x80000000;
  (*(void (**)(uint64_t))(v19 + 8 * (a1 ^ 0x5FB)))(a17);
  unsigned int v22 = v20[1];
  unsigned int v23 = v20[((2 * v21) ^ 0x7DE) - 254];
  unsigned int v24 = v20[398];
  int v25 = *((_DWORD *)&a19 + (v23 & 1));
  unsigned int *v20 = v20[397] ^ ((v22 & 0x7FFFFFFE | *v20 & 0x80000000) >> 1) ^ *((_DWORD *)&a19 + (v22 & 1));
  v20[1] = v24 ^ ((v23 & 0x7FFFFFFE | v22 & 0x80000000) >> 1) ^ v25;
  return (*(uint64_t (**)(void))(v19 + 8 * (v21 - 60)))();
}

uint64_t sub_1D0AE5934@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((((a1 ^ (v3 == v2)) & 1) == 0) * ((41 * (a1 ^ 0x3E5)) ^ 0x562)) ^ a1)))();
}

uint64_t sub_1D0AE5974()
{
  BOOL v4 = (v0 ^ (27 * ((v2 + 242) ^ 0x281)) ^ 0x3FBEFCFF0357FA4ELL) + 2 * v0 - 0x3FBEFCFE4DD5617DLL != v1;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 | (4 * v4)) ^ (v2 + 242))))();
}

uint64_t sub_1D0AE59D8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                                           + 8 * (int)(((((a4 + 1506136789) & 0xA63A29DE) + 74) * (v4 > 0x1F)) ^ a4)))(0);
}

void sub_1D0AE5A18()
{
}

uint64_t sub_1D0AE5A20(__n128 a1)
{
  *uint64_t v3 = a1;
  v3[1] = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * v2) ^ v1)))();
}

void sub_1D0AE5A44()
{
}

uint64_t sub_1D0AE5A50(double a1, int8x16_t a2, int32x4_t a3, int8x16_t a4, uint64_t a5, uint64_t a6, uint64_t a7, const char *a8, uint64_t a9, uint64_t a10, int32x4_t *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  int8x16x4_t v48 = vld4q_s8(a8);
  uint8x16_t v24 = (uint8x16_t)veorq_s8(v48.val[0], a2);
  uint16x8_t v25 = vmovl_u8(*(uint8x8_t *)v24.i8);
  int8x16_t v26 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v25.i8);
  int8x16_t v27 = (int8x16_t)vmovl_high_u16(v25);
  uint16x8_t v28 = vmovl_high_u8(v24);
  int8x16_t v29 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v28.i8);
  int8x16_t v30 = (int8x16_t)vmovl_high_u16(v28);
  uint8x16_t v31 = (uint8x16_t)veorq_s8(v48.val[1], a2);
  uint16x8_t v32 = vmovl_high_u8(v31);
  uint16x8_t v33 = vmovl_u8(*(uint8x8_t *)v31.i8);
  uint8x16_t v34 = (uint8x16_t)veorq_s8(v48.val[2], a2);
  _Q25 = (int8x16_t)vmovl_high_u8(v34);
  _Q24 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v34.i8);
  int8x16_t v37 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q24.i8, 0x10uLL);
  __asm { SHLL2           V24.4S, V24.8H, #0x10 }
  int8x16_t v42 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q25.i8, 0x10uLL);
  __asm { SHLL2           V25.4S, V25.8H, #0x10 }
  v48.val[0] = veorq_s8(v48.val[3], a2);
  v48.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v48.val[0]);
  v48.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v48.val[1]);
  v48.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v48.val[0].i8);
  v48.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v48.val[0]);
  v48.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v48.val[0].i8), 0x18uLL), v37), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v33.i8, 8uLL), v26));
  v48.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v48.val[3], 0x18uLL), _Q24), vorrq_s8((int8x16_t)vshll_high_n_u16(v33, 8uLL), v27));
  v48.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v48.val[1].i8), 0x18uLL), v42), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v32.i8, 8uLL), v29));
  v48.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v48.val[2], 0x18uLL), _Q25), vorrq_s8((int8x16_t)vshll_high_n_u16(v32, 8uLL), v30));
  int32x4_t v43 = (int32x4_t)veorq_s8(vandq_s8(v48.val[0], a4), (int8x16_t)(*(_OWORD *)&v26 & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  int32x4_t v44 = (int32x4_t)veorq_s8(vandq_s8(v48.val[3], a4), (int8x16_t)(*(_OWORD *)&v27 & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  int32x4_t v45 = (int32x4_t)veorq_s8(vandq_s8(v48.val[1], a4), (int8x16_t)(*(_OWORD *)&v29 & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  int32x4_t v46 = (int32x4_t)veorq_s8(vandq_s8(v48.val[2], a4), (int8x16_t)(*(_OWORD *)&v30 & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  a11[2] = vaddq_s32(vsubq_s32((int32x4_t)v48.val[1], vaddq_s32(v45, v45)), a3);
  a11[3] = vaddq_s32(vsubq_s32((int32x4_t)v48.val[2], vaddq_s32(v46, v46)), a3);
  *a11 = vaddq_s32(vsubq_s32((int32x4_t)v48.val[0], vaddq_s32(v43, v43)), a3);
  a11[1] = vaddq_s32(vsubq_s32((int32x4_t)v48.val[3], vaddq_s32(v44, v44)), a3);
  return (*(uint64_t (**)(void))(v22 + 8 * (int)((105 * (v23 != 547612188)) ^ (((a22 + 397196727) & 0xE85347E9) - 120))))();
}

uint64_t sub_1D0AE5B98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((((v3 - 178) ^ 0x520) * (v2 == a1)) ^ v3)))();
}

uint64_t sub_1D0AE5BC0@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v5 = (char *)(v2 + 128);
  int v6 = v5 - 64;
  int8x16x4_t v8 = vld4q_s8(v6);
  v9.val[0] = v8.val[3];
  v9.val[1] = v8.val[2];
  int8x16x4_t v10 = vld4q_s8(v5);
  v9.val[2] = v8.val[1];
  v9.val[3] = v8.val[0];
  v8.val[0] = v10.val[3];
  v8.val[1] = v10.val[2];
  v8.val[2] = v10.val[1];
  v8.val[3] = v10.val[0];
  vst4q_s8(v6, v9);
  vst4q_s8(v5, v8);
  return (*(uint64_t (**)(void))(a2 + 8 * (((v3 != 32) * a1) ^ v4)))();
}

uint64_t sub_1D0AE5BCC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v2 + 481286486) & 0xE35027F7) + ((v2 - 838581930) & 0x31FBBFF7) - 447)
                                     * (v1 == v0)) ^ v2)))();
}

uint64_t sub_1D0AE5C20()
{
  return sub_1D0AE5C50((v0 - 1259282221) & 0x4B0F1BFB ^ 0x143, 435);
}

uint64_t sub_1D0AE5C50@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + v4) = *(void *)(v6 + v4);
  return (*(uint64_t (**)(void))(v7 + 8 * (((a1 + v4 == v3) * a2) ^ v5)))();
}

uint64_t sub_1D0AE5C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  uint64_t v61 = v57 ^ 0x231u;
  int v62 = v60 - 168;
  *(void *)(v60 - 168) = a20;
  *(_DWORD *)(v60 - 160) = (v57 - 483687977) ^ (1334103649
                                              * ((((v60 - 168) | 0x86A7AF9E) - ((v60 - 168) & 0x86A7AF9E)) ^ 0xEE0F6730));
  (*(void (**)(uint64_t))(v59 + 8 * (v57 ^ 0x44E)))(v60 - 168);
  int v63 = v57 + 687;
  unsigned int v64 = 1332649919 * (((v62 | 0xC8F54A0E) - v62 + (v62 & 0x370AB5F0)) ^ 0xF586CEFC);
  *(void *)(v60 - 160) = *(void *)(v58 + 8 * (v57 ^ 0x1F1)) - 4;
  *(_DWORD *)(v60 - 168) = v64 + 2140997303;
  *(void *)(v60 - 144) = a20;
  *(_DWORD *)(v60 - 152) = v57 + 687 + v64;
  uint64_t v65 = 8 * (v57 ^ 0x7F4);
  (*(void (**)(uint64_t))(v59 + v65))(v60 - 168);
  int v66 = 1332649919 * (((v62 | 0x7F92D08F) - (v62 & 0x7F92D08F)) ^ 0x42E1547D);
  *(_DWORD *)(v60 - 152) = v63 + v66;
  *(void *)(v60 - 160) = a21;
  *(void *)(v60 - 144) = a20;
  *(_DWORD *)(v60 - 168) = v66 + 2140997288;
  uint64_t v67 = (*(uint64_t (**)(uint64_t))(v59 + v65))(v60 - 168);
  *(_DWORD *)(a57 - 0x10B17FC23B8BBE2CLL) = *(_DWORD *)(a20 - 0x10B17FC23B8BBE2CLL);
  *(_DWORD *)(a57 - 0x10B17FC23B8BBE28) = *(_DWORD *)(a20 - 0x10B17FC23B8BBE28);
  *(_DWORD *)(a57 - 0x10B17FC23B8BBE24) = *(_DWORD *)(a20 - 0x10B17FC23B8BBE24);
  *(_DWORD *)(a57 - 0x10B17FC23B8BBE20) = *(_DWORD *)(a20 - 0x10B17FC23B8BBE20);
  *(_DWORD *)(a57 - 0x10B17FC23B8BBE1CLL) = *(_DWORD *)(a20 - 0x10B17FC23B8BBE1CLL);
  *(_DWORD *)(a57 - 0x10B17FC23B8BBE18) = *(_DWORD *)(a20 - 0x10B17FC23B8BBE18);
  return (*(uint64_t (**)(uint64_t))(v59
                                            + 8
                                            * (int)(((((v61 + 996421165) & 0xC49BCFBD) - 420)
                                                   * (a57 - a20 < (unint64_t)(v61 - 945))) ^ v61)))(v67);
}

uint64_t sub_1D0AE5F44@<X0>(uint64_t a1@<X3>, uint64_t a2@<X6>, char a3@<W8>)
{
  int8x16x4_t v8 = (unsigned __int8 *)(a1 + v4 + v7);
  int v9 = *v8 ^ 0xF8;
  LODWORD(v8) = (((7 * (v3 ^ a3)) ^ 0x51 ^ v8[2]) << 16) | ((v8[3] ^ 0xF8) << 24) | v9 | ((v8[1] ^ 0xF8) << 8);
  *(_DWORD *)(a2 + ((v4 + v7) & 0xFFFFFFFFFFFFFFFCLL)) = v8 + v6 - 2 * (v8 & 0x674DF373 ^ v9 & 1);
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((8 * ((unint64_t)(v4 + 4 + v7) < 0x40)) | (((unint64_t)(v4 + 4 + v7) < 0x40) << 7)) ^ v3)))();
}

uint64_t sub_1D0AE5FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a30 + 8 * (((a18 ^ 0x7B4) - 540) ^ 0x416 ^ a19)))(271067203, a16);
}

uint64_t sub_1D0AE6054(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(uint64_t))(v5
                                            + 8
                                            * (((v3 + v2 + ((a2 - 390) | 0x22u) - 259916145 < 8) * (a2 - 1186)) ^ a2)))(v4);
}

uint64_t sub_1D0AE6098()
{
  void *v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ v0)))();
}

uint64_t sub_1D0AE60BC@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + v2) = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v2 + 1 == v1) * (v3 - 1140)) | (v3 + 38))))();
}

uint64_t sub_1D0AE60EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(void))(a72 + 10240))();
}

uint64_t sub_1D0AE615C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,uint64_t a22,void *a23,void *a24,void *a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t (*a36)(void),uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,unsigned char *a46,unsigned char *a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,unsigned char *a54,unsigned char *a55,unsigned char *a56,unsigned char *a57,unsigned char *a58,unsigned char *a59,unsigned char *a60,unsigned char *a61,uint64_t a62,uint64_t a63)
{
  *a54 = *(unsigned char *)(*a26 + v74);
  *a55 = *(unsigned char *)(*a25 + a7);
  *a56 = *(unsigned char *)(*a24 + v83);
  *a69 = *(unsigned char *)(*a23 + v82);
  *a57 = *(unsigned char *)(*a21 + v72);
  *a58 = *(unsigned char *)(*a20 + v81);
  *a70 = *(unsigned char *)(*a19 + v71);
  *a59 = *(unsigned char *)(*a18 + a5);
  *a60 = *(unsigned char *)(*a17 + a6);
  *a61 = *(unsigned char *)(*a16 + v73);
  *a46 = *(unsigned char *)(*a15 + v79);
  *a71 = *(unsigned char *)(*a14 + v78);
  *a64 = *(unsigned char *)(*a13 + v80);
  *a65 = *(unsigned char *)(*a12 + v77);
  *a66 = *(unsigned char *)(*a11 + v76);
  *a47 = *(unsigned char *)(*a10 + v75);
  return a36();
}

uint64_t sub_1D0AE62A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x258] = 0xBA38A602233016DDLL;
  LODWORD(STACK[0x254]) = **(_DWORD **)(v71 + 8 * (v70 - 331));
  uint64_t v74 = *(unsigned int **)(v71 + 8 * (v70 ^ 0x1DFu));
  STACK[0x200] = (unint64_t)v74;
  uint64_t v75 = v73 - 152;
  *(void *)(v75 + 16) = *v74 - a70;
  *(_DWORD *)(v73 - 124) = -(int)a70;
  *(_DWORD *)(v73 - 144) = v70 + 140451873 - a70;
  *(_DWORD *)(v73 - 140) = ((v70 + 140451873) ^ 0x28) - a70;
  *(_DWORD *)(v73 - 152) = ((v70 + 140451873) ^ 0x7D) + a70;
  *(_DWORD *)(v73 - 148) = a70 + v70 - 502673953;
  *(void *)(v75 + 32) = a70;
  uint64_t v76 = (*(uint64_t (**)(uint64_t))(v72 + 8 * (v70 ^ 0x471u)))(v73 - 152);
  return (*(uint64_t (**)(uint64_t))(v72 + 8 * *(int *)(v73 - 128)))(v76);
}

uint64_t sub_1D0AE6378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28)
{
  *((_DWORD *)&STACK[0x510] + v28) ^= a28;
  return (*(uint64_t (**)(void))(v29 + 8 * ((15 * (v32 - 1 != ((v30 - v31) ^ 0xF07F55D8))) ^ (v30 + 411))))();
}

uint64_t sub_1D0AE63E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * ((45 * (a3 + 1 == v7 + 40)) ^ a6)))(v6);
}

uint64_t sub_1D0AE64B4(int a1, unsigned int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  *(unsigned char *)(a5 - 0x17B29E1307D11854 + (v9 + a1)) = *(unsigned char *)(a6 + (v10 + 798 + v12 + v11));
  unsigned int v15 = v11 + 1 + a3;
  int v16 = (v14 < a8) ^ (v15 < a2);
  BOOL v17 = v15 < v8;
  if (v16) {
    BOOL v17 = v14 < a8;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((143 * !v17) ^ (v10 - 135))))();
}

uint64_t sub_1D0AE652C@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  unsigned int v6 = v2 - 32;
  uint64_t v7 = v4 + v6;
  long long v8 = *(_OWORD *)(v7 - 31);
  uint64_t v9 = a2 + v6;
  *(_OWORD *)(v9 - 15) = *(_OWORD *)(v7 - 15);
  *(_OWORD *)(v9 - 31) = v8;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((a1 - 109) ^ (v3 == 32)) & 1 | (8
                                                                                  * (((a1 - 109) ^ (v3 == 32)) & 1))) ^ (a1 + 411))))();
}

uint64_t sub_1D0AE6538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v79 = *(void *)(v31 + 8 * v30);
  int v33 = LOBYTE(STACK[0x213]);
  BOOL v82 = v33 != 30;
  int v86 = (((v30 - 34) | 0x80) + 1016) | 2;
  HIDWORD(a26) = (((((v30 - 34) | 0x80) - 8) | 2) + 93) ^ LOBYTE(STACK[0x212]);
  uint64_t v81 = 2 % (v33 ^ 0x1Fu);
  unsigned __int8 v34 = *(unsigned char *)(v29 - 12);
  unsigned __int8 v35 = *(unsigned char *)(v29 - 8);
  unsigned __int8 v36 = *(unsigned char *)(v29 - 4);
  unsigned __int8 v37 = *(unsigned char *)(v29 - 3);
  unsigned __int8 v38 = *(unsigned char *)(v29 - 7);
  unsigned __int8 v39 = *(unsigned char *)(v29 - 11);
  unsigned __int8 v40 = *(unsigned char *)(v29 - 15);
  uint64_t v80 = 3 % (v33 ^ 0x1Fu);
  unsigned __int8 v41 = *(unsigned char *)(v29 - 14);
  unsigned __int8 v42 = *(unsigned char *)(v29 - 6);
  unsigned __int8 v43 = *(unsigned char *)(v29 - 2);
  unsigned __int8 v85 = *(unsigned char *)(v29 - 13);
  unsigned __int8 v83 = *(unsigned char *)(v29 - 10);
  unsigned __int8 v84 = *(unsigned char *)(v29 - 9);
  LOBYTE(v33) = *(unsigned char *)(v29 - 5);
  unsigned __int8 v44 = *(unsigned char *)(v29 - 1);
  uint64_t v45 = *(a12 - 14);
  int v46 = v32 + 127 - (((1416459102 << ((((((v30 - 34) | 0x80) - 8) | 2) + 29) ^ 0xDA)) + 1917949248) & 0x46CE2FE0);
  unsigned __int8 v47 = *(unsigned char *)(a28 + (int)(v46 ^ 0xA36717F2)) ^ *(unsigned char *)(*(a12 - 15) + (*(unsigned __int8 *)(v29 - 16) ^ 0xF8));
  *(unsigned char *)(v29 - 16) = v47 ^ 0xF8;
  uint64_t v48 = *(a12 - 10);
  unsigned __int8 v49 = *(unsigned char *)(a28 + (int)(v46 ^ 0xA36717F6)) ^ *(unsigned char *)(*(a12 - 11) + (v34 ^ 0xF8));
  *(unsigned char *)(v29 - 12) = v49 ^ 0xF8;
  uint64_t v50 = *(a12 - 6);
  unsigned __int8 v51 = *(unsigned char *)(a28 + (int)(v46 ^ 0xA36717FA)) ^ *(unsigned char *)(*(a12 - 7) + (v35 ^ 0xF8));
  *(unsigned char *)(v29 - 8) = v51 ^ 0xF8;
  uint64_t v52 = *(a12 - 2);
  unsigned __int8 v53 = *(unsigned char *)(a28 + (int)(v46 ^ 0xA36717FE)) ^ *(unsigned char *)(*(a12 - 3) + (v36 ^ 0xF8));
  *(unsigned char *)(v29 - 4) = v53 ^ 0xF8;
  unsigned __int8 v54 = *(unsigned char *)(a28 + (int)(v46 ^ 0xA36717FF)) ^ *(unsigned char *)(v52 + (v38 ^ 0xF8));
  *(unsigned char *)(v29 - 3) = v54 ^ 0xF8;
  unsigned __int8 v55 = *(unsigned char *)(a28 + (int)(v46 ^ 0xA36717FB)) ^ *(unsigned char *)(v50 + (v39 ^ 0xF8));
  *(unsigned char *)(v29 - 7) = v55 ^ 0xF8;
  unsigned __int8 v56 = *(unsigned char *)(a28 + (int)(v46 ^ 0xA36717F7)) ^ *(unsigned char *)(v48 + (v40 ^ 0xF8));
  *(unsigned char *)(v29 - 11) = v56 ^ 0xF8;
  unsigned __int8 v57 = *(unsigned char *)(a28 + (int)(v46 ^ 0xA36717F3)) ^ *(unsigned char *)(v45 + (v37 ^ 0xF8));
  *(unsigned char *)(v29 - 15) = v57 ^ 0xF8;
  uint64_t v58 = *(a12 - 12);
  LOBYTE(v48) = *(unsigned char *)(a28 + (int)(v46 ^ 0xA36717F0)) ^ *(unsigned char *)(*(a12 - 13) + (v42 ^ 0xF8));
  *(unsigned char *)(v29 - 14) = v48 ^ 0xF8;
  uint64_t v59 = *(a12 - 4);
  char v60 = *(unsigned char *)(*(a12 - 5) + (v41 ^ 0xF8));
  unsigned int v61 = v46 & 0xFFFFFFF0;
  unsigned __int8 v62 = *(unsigned char *)(a28 + (int)(v46 & 0xFFFFFFF0 ^ 0xA36717FA)) ^ v60;
  *(unsigned char *)(v29 - 6) = v62 ^ 0xF8;
  uint64_t v63 = *(a12 - 8);
  LOBYTE(v46) = *(unsigned char *)(a28 + (int)(v46 & 0xFFFFFFF0 ^ 0xA36717F6)) ^ *(unsigned char *)(*(a12 - 9) + (v43 ^ 0xF8));
  *(unsigned char *)(v29 - 10) = v46 ^ 0xF8;
  unsigned __int8 v64 = *(unsigned char *)(a28 + (int)(v61 ^ 0xA36717FE)) ^ *(unsigned char *)(*(a12 - 1) + (v83 ^ 0xF8));
  *(unsigned char *)(v29 - 2) = v64 ^ 0xF8;
  unsigned __int8 v65 = *(unsigned char *)(a28 + (int)(v61 ^ 0xA36717F3)) ^ *(unsigned char *)(v58 + (v84 ^ 0xF8));
  *(unsigned char *)(v29 - 13) = v65 ^ 0xF8;
  unsigned __int8 v66 = *(unsigned char *)(a28 + (int)(v61 ^ 0xA36717F7)) ^ *(unsigned char *)(v63 + (v33 ^ 0xF8));
  *(unsigned char *)(v29 - 9) = v66 ^ 0xF8;
  LOBYTE(v33) = *(unsigned char *)(a28 + (int)(v61 ^ 0xA36717FB)) ^ *(unsigned char *)(v59 + (v44 ^ 0xF8));
  *(unsigned char *)(v29 - 5) = v33 ^ 0xF8;
  unsigned __int8 v67 = *(unsigned char *)(a28 + (int)(v61 ^ 0xA36717FF)) ^ *(unsigned char *)(*a12 + (v85 ^ 0xF8));
  *(unsigned char *)(v29 - 1) = v67 ^ 0xF8;
  uint16x8_t v68 = &STACK[0x200] + 16 * (unint64_t)(8u % HIDWORD(a26));
  uint16x8_t v69 = v68 + 147;
  LODWORD(v68) = *(_DWORD *)(v68[148] + 4 * v57) ^ *(_DWORD *)(v68[147] + 4 * v47) ^ *(_DWORD *)(v68[149] + 4 * v48) ^ *(_DWORD *)(v68[150] + 4 * v65);
  uint64_t v70 = (v68 >> 24) - 16 * (v68 >> 27) - 8;
  *(unsigned char *)(v29 - 13) = BYTE3(v68) - 16 * (v68 >> 27) - 8;
  *(unsigned char *)(v29 - 14) = BYTE2(v68) - 16 * (v68 >> 19) - 8;
  *(unsigned char *)(v29 - 15) = BYTE1(v68) - 16 * (v68 >> 11) - 8;
  *(unsigned char *)(v29 - 16) = v68 ^ 0xF8;
  uint64_t v71 = &v69[4 * v82];
  unsigned int v72 = *(_DWORD *)(v71[1] + 4 * v56) ^ *(_DWORD *)(*v71 + 4 * v49) ^ *(_DWORD *)(v71[2] + 4
                                                                                             * v46) ^ *(_DWORD *)(v71[3] + 4 * v66);
  *(unsigned char *)(v29 - 9) = HIBYTE(v72) - 16 * (v72 >> 27) - 8;
  *(unsigned char *)(v29 - 10) = BYTE2(v72) - 16 * (v72 >> 19) - 8;
  uint64_t v73 = (~(v72 >> 7) | 0xF) + (v72 >> 8) - 7;
  *(unsigned char *)(v29 - 11) = (~(v72 >> 7) | 0xF) + BYTE1(v72) - 7;
  uint64_t v74 = v72 ^ 0xFFFFFFF8;
  *(unsigned char *)(v29 - 12) = v72 ^ 0xF8;
  uint64_t v75 = &v69[4 * v81];
  unint64_t v76 = v75[2];
  LODWORD(v52) = *(_DWORD *)(v75[1] + 4 * v55) ^ *(_DWORD *)(*v75 + 4 * v51) ^ *(_DWORD *)(v76 + 4 * v62) ^ *(_DWORD *)(v75[3] + 4 * v33);
  *(unsigned char *)(v29 - 5) = (~(v52 >> 23) | 0xF) + BYTE3(v52) - 7;
  *(unsigned char *)(v29 - 6) = BYTE2(v52) - 16 * (v52 >> 19) - 8;
  *(unsigned char *)(v29 - 7) = (~(v52 >> 7) | 0xF) + BYTE1(v52) - 7;
  *(unsigned char *)(v29 - 8) = v52 ^ 0xF8;
  uint64_t v77 = &v69[4 * v80];
  LODWORD(v77) = *(_DWORD *)(v77[1] + 4 * v54) ^ *(_DWORD *)(*v77 + 4 * v53) ^ *(_DWORD *)(v77[2] + 4 * v64) ^ *(_DWORD *)(v77[3] + 4 * v67);
  *(unsigned char *)(v29 - 1) = BYTE3(v77) - 16 * (v77 >> 27) - 8;
  *(unsigned char *)(v29 - 2) = BYTE2(v77) - 16 * (v77 >> 19) - 8;
  *(unsigned char *)(v29 - 3) = (~(v77 >> 7) | 0xF) + BYTE1(v77) - 7;
  *(unsigned char *)(v29 - 4) = v77 ^ 0xF8;
  return (*(uint64_t (**)(void, uint64_t, void *, uint64_t, unint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a29 + 8 * v86))(v77 ^ 0xFFFFFFF8, 15, a12, v73, v76, v74, v70, WORD1(v52) - 16 * (v52 >> 19) - 8, a9, a10, a11, a12, a13, a14, v79, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           v80,
           v81,
           a26);
}

uint64_t sub_1D0AE6548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * ((1728 * (a3 + 1 == v7 + 80)) ^ a6)))(v6);
}

uint64_t sub_1D0AE6604@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3)
{
  int v7 = v4 - 724;
  BOOL v8 = v3 < a1;
  *(unsigned char *)(a3 - 0x10B17FC23B8BBE14) = *v5;
  if (v8 == a1 > 0xCDA89E35) {
    BOOL v8 = v3 > 0xCDA89E35;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((757 * v8) ^ v7)))();
}

uint64_t sub_1D0AE6688@<X0>(int a1@<W0>, const char *a2@<X2>, int a3@<W8>)
{
  int8x16x4_t v46 = vld4q_s8(a2);
  int v17 = (v3 - 2049887026) & 0x7A2ECFEF;
  uint8x16_t v18 = (uint8x16_t)veorq_s8(v46.val[0], v14);
  uint16x8_t v19 = vmovl_u8(*(uint8x8_t *)v18.i8);
  int8x16_t v20 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v19.i8);
  int8x16_t v21 = (int8x16_t)vmovl_high_u16(v19);
  uint16x8_t v22 = vmovl_high_u8(v18);
  int8x16_t v23 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v22.i8);
  int8x16_t v24 = (int8x16_t)vmovl_high_u16(v22);
  uint8x16_t v25 = (uint8x16_t)veorq_s8(v46.val[1], v14);
  uint16x8_t v26 = vmovl_high_u8(v25);
  uint16x8_t v27 = vmovl_u8(*(uint8x8_t *)v25.i8);
  uint8x16_t v28 = (uint8x16_t)veorq_s8(v46.val[2], v14);
  _Q21 = (int8x16_t)vmovl_high_u8(v28);
  _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v28.i8);
  int8x16_t v31 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
  __asm { SHLL2           V20.4S, V20.8H, #0x10 }
  int8x16_t v36 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
  __asm { SHLL2           V21.4S, V21.8H, #0x10 }
  v46.val[0] = veorq_s8(v46.val[3], v14);
  v46.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v46.val[0]);
  v46.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v46.val[1]);
  v46.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v46.val[0].i8);
  v46.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v46.val[0]);
  v46.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v46.val[0].i8), 0x18uLL), v31), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v27.i8, 8uLL), v20));
  v46.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v46.val[3], 0x18uLL), _Q20), vorrq_s8((int8x16_t)vshll_high_n_u16(v27, 8uLL), v21));
  v46.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v46.val[1].i8), 0x18uLL), v36), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v26.i8, 8uLL), v23));
  v46.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v46.val[2], 0x18uLL), _Q21), vorrq_s8((int8x16_t)vshll_high_n_u16(v26, 8uLL), v24));
  int32x4_t v37 = (int32x4_t)veorq_s8(vandq_s8(v46.val[0], v16), (int8x16_t)(*(_OWORD *)&v20 & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  int32x4_t v38 = (int32x4_t)veorq_s8(vandq_s8(v46.val[3], v16), (int8x16_t)(*(_OWORD *)&v21 & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  int32x4_t v39 = (int32x4_t)veorq_s8(vandq_s8(v46.val[1], v16), (int8x16_t)(*(_OWORD *)&v23 & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  int32x4_t v40 = (int32x4_t)veorq_s8(vandq_s8(v46.val[2], v16), (int8x16_t)(*(_OWORD *)&v24 & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  v5[2] = vaddq_s32(vsubq_s32((int32x4_t)v46.val[1], vaddq_s32(v39, v39)), v15);
  v5[3] = vaddq_s32(vsubq_s32((int32x4_t)v46.val[2], vaddq_s32(v40, v40)), v15);
  int32x4_t *v5 = vaddq_s32(vsubq_s32((int32x4_t)v46.val[0], vaddq_s32(v37, v37)), v15);
  v5[1] = vaddq_s32(vsubq_s32((int32x4_t)v46.val[3], vaddq_s32(v38, v38)), v15);
  unsigned int v41 = (v6 ^ v12)
      + v9
      + ((v4 ^ v12) & (a1 ^ v12) | (((v17 - 298) | 0x2B) ^ (v12 + 923) ^ a3) & (a1 ^ 0xB0ACE695))
      + *((_DWORD *)*(&off_1F26D60E0 + (v17 ^ 0x5CE)) + v13 + 1039581845)
      + (v5->i32[(*((unsigned char *)*(&off_1F26D60E0 + (v17 ^ 0x526)) + v13 + 1039581846) - 27)] ^ v11);
  unsigned __int8 v42 = (char *)*(&off_1F26D60E0 + v17 - 1339) - 12;
  unsigned int v43 = (v41 + v12 - (v8 & (2 * v41))) ^ v12;
  int v44 = ((v43 << (v42[v13 + 1039581846] - 2)) | (v43 >> (2 - v42[v13 + 1039581846]))) + (a1 ^ v12);
  return (*(uint64_t (**)(void))(v7 + 8 * ((27 * (v10 == 1039581831)) ^ v17)))(v44 + v12 - (v8 & (2 * v44)));
}

void sub_1D0AE68D4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 40) ^ (846572393 * ((-1350598799 - (a1 | 0xAF7F7F71) + (a1 | 0x5080808E)) ^ 0x66E3D4C7));
  __asm { BRAA            X14, X17 }
}

void sub_1D0AE6A3C()
{
  if (v0 == 1380892026) {
    int v1 = 343018756;
  }
  else {
    int v1 = 342976732;
  }
  *(_DWORD *)(v2 + 8) = v1;
}

uint64_t sub_1D0AE6AA0@<X0>(int a1@<W8>)
{
  unsigned int v5 = a1 + ((v1 - 196) | 0x24) + 402709833;
  if (v5 <= 0x40) {
    unsigned int v5 = 64;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((42 * (-v2 - 402710534 - v3 + v5 > 0xE)) ^ v1)))();
}

void sub_1D0AE6B2C()
{
  unsigned char *v2 = -1;
  *(_DWORD *)(v1 + 48) = v0;
}

void sub_1D0AE6B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  (*(void (**)(uint64_t, uint64_t))(v14 + 8 * (v16 + v15 + 1369)))(a13, 2965982036);
  *uint64_t v13 = (*(uint64_t (**)(void))(v14 + 8 * (v15 ^ (v15 + 528))))();
  JUMPOUT(0x1D0AE6BE0);
}

void sub_1D0AE6C28(char a1@<W8>)
{
  char v3 = (v1 >> 4) ^ 0xC | v1 ^ 0xC1 | ((((v1 >> 4) ^ 0xC | v1 ^ 0xC1) & 0xFC) >> 2);
  _DWORD *v2 = -42084 * (((a1 + 95) ^ 0x43) & (v3 | ((v3 & 0xFE) >> 1)))
      + 343018756;
}

uint64_t sub_1D0AE6CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *a71 = v73 + 34;
  int v76 = 1332649919 * ((((v75 - 168) | 0x7E3BCFD3) + (~(v75 - 168) | 0x81C4302C)) ^ 0x43484B20);
  *(_DWORD *)(v75 - 168) = v76 + 2140997255;
  *(void *)(v75 - 160) = a71;
  *(_DWORD *)(v75 - 152) = v76 + v72 + 1039;
  *(void *)(v75 - 144) = v71;
  (*(void (**)(uint64_t))(v74 + 8 * (v72 ^ 0x694)))(v75 - 168);
  *(_DWORD *)(v75 - 152) = v72
                         + 1449114341
                         * ((((v75 - 168) ^ 0x1B82D0E5) - 1925301004 - 2 * (((v75 - 168) ^ 0x1B82D0E5) & 0x8D3E3CF4)) ^ 0x59E215FA)
                         + 1258;
  *(void *)(v75 - 168) = v71;
  *(void *)(v75 - 160) = a48 + (v73 << ((5 * (((v72 - 116) | 0x20) ^ 0x59)) ^ 0xFD)) - 253427168;
  uint64_t v77 = (*(uint64_t (**)(uint64_t))(v74 + 8 * (v72 ^ 0x692)))(v75 - 168);
  return (*(uint64_t (**)(uint64_t))(v74 + 8 * (v72 ^ (60 * (v73 == 1089581030)))))(v77);
}

void sub_1D0AE6E00()
{
}

uint64_t sub_1D0AE6E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t (*a14)(void), uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned char *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,unsigned char *a32,unsigned char *a33,unsigned char *a34,unsigned char *a35,unsigned char *a36,unsigned char *a37,unsigned char *a38,unsigned char *a39,unsigned char *a40,unsigned char *a41,unsigned char *a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,unsigned char *a48,unsigned char *a49,unsigned char *a50,unsigned char *a51)
{
  *a32 = *(unsigned char *)(STACK[0xAC8] + a2);
  *a33 = *(unsigned char *)(STACK[0xB08] + a1);
  *a34 = *(unsigned char *)(STACK[0xB48] + v56);
  *a35 = *(unsigned char *)(STACK[0xB88] + v52);
  *a36 = *(unsigned char *)(STACK[0xB18] + v55);
  *a37 = *(unsigned char *)(STACK[0xB58] + v60);
  *a48 = *(unsigned char *)(STACK[0xB98] + a6);
  *a49 = *(unsigned char *)(STACK[0xAD8] + a8);
  *a38 = *(unsigned char *)(STACK[0xB68] + v54);
  *a39 = *(unsigned char *)(STACK[0xAE8] + v61);
  *a40 = *(unsigned char *)(STACK[0xBA8] + v51);
  *a50 = *(unsigned char *)(STACK[0xB28] + v57);
  *a51 = *(unsigned char *)(STACK[0xB78] + v58);
  *a41 = *(unsigned char *)(STACK[0xB38] + a7);
  *a42 = *(unsigned char *)(STACK[0xAF8] + v59);
  *a22 = *(unsigned char *)(STACK[0xBB8] + v53);
  return a14();
}

uint64_t sub_1D0AE6FA0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 ^ 0x3FA) - 359) * (v0 == v1)) | v2)))();
}

uint64_t sub_1D0AE6FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((1613 * (v7 + 1 == v8 + 32)) ^ a7)))();
}

uint64_t sub_1D0AE70B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58)
{
  return (*(uint64_t (**)(uint64_t))(v59
                                            + 8
                                            * (((((23 * (v58 ^ 0xBB)) ^ ((a58 - 1459041617) < 0x7FFFFFEF)) & 1)
                                              * ((13 * (v58 ^ 0x195)) ^ 0xF9)) ^ v58 ^ 0x3B7)))(686407371);
}

uint64_t sub_1D0AE70F8@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X5>, int a5@<W7>, int a6@<W8>)
{
  int v10 = v6 + 1;
  *(unsigned char *)(a4 + (v10 - 2055391485)) = *(unsigned char *)(v7 + v9 + a3);
  return (*(uint64_t (**)(void))(v8 + 8 * ((1697 * (((a6 + a1) & a2 ^ (a5 + 141)) + v10 < 0x40)) ^ a6)))();
}

uint64_t sub_1D0AE7104()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((37 * ((v0 ^ v1 ^ 0x72 ^ 0x7DD ^ (5 * (v1 ^ 0x582u))) > 7)) ^ v1)))();
}

uint64_t sub_1D0AE7148()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v0 == v1) ^ v2) & 1) * (v2 ^ 0x11C)) ^ v2)))();
}

uint64_t sub_1D0AE717C(int a1)
{
  *(void *)(v5 + v3) = *(void *)(v2 + v3);
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 == 0) * v1) ^ a1)))();
}

uint64_t sub_1D0AE71AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 0xA6E2B243DFA1AB3);
  if (v2) {
    BOOL v5 = v4 == 0x6E2E237C8C7936AALL;
  }
  else {
    BOOL v5 = 1;
  }
  int v7 = v5 || v1 == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((964 * v7) ^ 0x1E2u)))();
}

uint64_t sub_1D0AE7210(int a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_DWORD *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39)
{
  *a26 = a39 + 1;
  *(void *)(v41 - 144) = *a2 + a16;
  *(void *)(v41 - 120) = a15;
  *(_DWORD *)(v41 - 108) = ((v39 - 366286289) | 0x85) ^ a16;
  *(_DWORD *)(v41 - 104) = a16 ^ 1;
  *(_DWORD *)(v41 - 112) = a16 + v39 + 1426724254;
  *(_DWORD *)(v41 - 128) = (v39 - 366286289) ^ a16;
  *(_DWORD *)(v41 - 136) = (v39 - 366286281) ^ a16;
  uint64_t v42 = (*(uint64_t (**)(uint64_t))(v40 + 8 * ((v39 - 1018) ^ (a1 + 861))))(v41 - 144);
  return (*(uint64_t (**)(uint64_t))(v40 + 8 * *(int *)(v41 - 132)))(v42);
}

uint64_t sub_1D0AE72BC@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  uint64_t v7 = v3 + (v4 ^ 0x155 ^ (v6 - 304));
  long long v8 = *(_OWORD *)(a1 + v7 - 15);
  long long v9 = *(_OWORD *)(a1 + v7 - 31);
  uint64_t v10 = a2 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * ((1586 * ((v2 & 0xFFFFFFE0) == 32)) ^ v4)))(v3);
}

void sub_1D0AE7314()
{
}

void sub_1D0AE731C()
{
}

uint64_t sub_1D0AE7334@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W7>, int a4@<W8>)
{
  long long v9 = (unsigned int *)(v6 + 4 * v5);
  unsigned int v10 = v4 & 0x80000000;
  uint64_t v11 = v5 + 1;
  int v12 = *(_DWORD *)(v6 + 4 * v11);
  unsigned int v13 = v9[397] ^ ((v12 & 0x7FFFFFFE | v10) >> 1);
  *long long v9 = (v13 + a2 - ((v13 << (a4 - 66)) & a1)) ^ *(_DWORD *)(v8 + 4 * (v12 & 1));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v11 == 227) * a3) ^ a4)))();
}

uint64_t sub_1D0AE7394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(v11 - 240) = a5 + 10;
  v18.val[1].i64[0] = ((_BYTE)a5 + 9) & 0xF;
  v18.val[1].i64[1] = ((_BYTE)a5 + 8) & 0xF;
  v18.val[2].i64[0] = ((_BYTE)a5 + 7) & 0xF;
  v18.val[2].i64[1] = ((_BYTE)a5 + 6) & 0xF;
  v18.val[3].i64[0] = ((_BYTE)a5 + 5) & 0xF;
  v18.val[3].i64[1] = ((_BYTE)a5 + 4) & 0xF;
  unint64_t v12 = STACK[0x268];
  v13.i64[0] = 0x2121212121212121;
  v13.i64[1] = 0x2121212121212121;
  uint64_t v14 = (a5 + v5);
  v18.val[0].i64[0] = ((_BYTE)a5 + (_BYTE)v5) & 0xF;
  v18.val[0].i64[1] = *(_DWORD *)(v11 - 240) & 0xF;
  v15.i64[0] = vqtbl4q_s8(v18, (int8x16_t)xmmword_1D0B98270).u64[0];
  v19.val[0].i64[1] = ((_BYTE)a5 + 2) & 0xF;
  v19.val[1].i64[1] = a5 & 0xF;
  v19.val[2].i64[1] = (a5 + 14) & 0xF;
  v19.val[3].i64[1] = ((_BYTE)a5 + 12) & 0xF;
  v19.val[0].i64[0] = ((_BYTE)a5 + 3) & 0xF;
  v19.val[1].i64[0] = ((_BYTE)a5 + 1) & 0xF;
  v19.val[2].i64[0] = ((_BYTE)a5 - 1) & 0xF;
  v19.val[3].i64[0] = (a5 + 13) & 0xF;
  v15.i64[1] = vqtbl4q_s8(v19, (int8x16_t)xmmword_1D0B98270).u64[0];
  int8x16_t v16 = vrev64q_s8(vmulq_s8(v15, v13));
  *(int8x16_t *)(*(void *)(v11 - 232) - 15 + v14) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v6 + (v14 & 0xF) - 15), *(int8x16_t *)(*(void *)(v11 - 232) - 15 + v14)), veorq_s8(*(int8x16_t *)(v7 + (v14 & 0xF) + 1 - 15), *(int8x16_t *)(v8 + (v14 & 0xF) + 1 - 15))), vextq_s8(v16, v16, 8uLL));
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (int)((95
                                     * (((v10 + 31738876) & 0xFE1BB3DC ^ 0x28C) != (((v10 + 31738876) & 0xFE1BB3DC ^ 0xFFFFFD6C) & v9))) ^ (v10 + 31738876) & 0xFE1BB3DC)))();
}

uint64_t sub_1D0AE7524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v16 = (v11 - 433) | 0x148;
  uint64_t v17 = (*(uint64_t (**)(uint64_t, void))(v13 + 8 * (v11 + 585)))(a11, 0);
  uint64_t v18 = 8 * (v11 ^ 0x5C8);
  (*(void (**)(uint64_t))(v13 + v18))(v17);
  v14[1] = (*(uint64_t (**)(void))(v13 + v18))() + ((1664525 * (*v14 ^ (*v14 >> 30))) ^ v14[1]);
  *(void *)(v15 - 136) = v12 + 2;
  int v19 = v16 + 705328652 - v12;
  *(_DWORD *)(v15 - 152) = v19 - 90;
  *(_DWORD *)(v15 - 116) = v12 ^ (v16 + 705328652) ^ 0x3C;
  *(_DWORD *)(v15 - 112) = v12 + v16 + 572802862;
  *(void *)(v15 - 144) = v12 + 623;
  *(_DWORD *)(v15 - 128) = v19;
  *(_DWORD *)(v15 - 120) = -(int)v12;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v16 + 667)))(v15 - 152);
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * *(int *)(v15 - 124)))(v20);
}

uint64_t sub_1D0AE7648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, _DWORD *a13, int a14, int a15, int a16, int a17, _DWORD *a18, int *a19, _DWORD *a20,unsigned int a21,int a22)
{
  unsigned int v26 = 961505453 * (((&a18 | 0xB5E3555C) - (&a18 & 0xB5E3555C)) ^ 0x17189BFA);
  a18 = a13;
  LODWORD(a19) = v26 ^ 0x1126A7D6;
  HIDWORD(a19) = v26 + v25 + 459;
  (*(void (**)(_DWORD **))(v22 + 8 * (v25 ^ 0x694)))(&a18);
  LODWORD(a18) = (v25 - 1488870906) ^ (961505453
                                     * (((&a18 | 0x55366059) - (&a18 & 0x55366059)) ^ 0xF7CDAEFF));
  a19 = a13;
  a20 = (_DWORD *)(v23 - 0xA4EF894B2631DDELL);
  (*(void (**)(_DWORD **))(v22 + 8 * (v25 ^ 0x6BE)))(&a18);
  unsigned int v27 = 1449114341 * ((((2 * &a18) | 0x648779C4) - &a18 - 843300066) ^ 0xFD1D4509);
  a21 = v27 + 1997355281;
  a22 = v27 ^ v24;
  LODWORD(a18) = v25 - v27 + 208;
  a19 = &a14;
  a20 = a13;
  uint64_t v28 = (*(uint64_t (**)(_DWORD **))(v22 + 8 * (v25 ^ 0x54D)))(&a18);
  *(_DWORD *)(v23 - 0x10B17FC23B8BBE2CLL) += a14;
  *(_DWORD *)(v23 - 0x10B17FC23B8BBE28) += a15;
  *(_DWORD *)(v23 - 0x10B17FC23B8BBE24) += a16;
  *(_DWORD *)(v23 - 0x10B17FC23B8BBE20) += a17;
  *(void *)(v23 - 0x10B17FC23B8BBE14) = 0;
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * v25))(v28);
}

uint64_t sub_1D0AE78B8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1881 * ((v0 + ((v1 + 111) | 0xB0) - 39) < 0xAu)) ^ v1)))();
}

uint64_t sub_1D0AE7904@<X0>(uint64_t a1@<X8>)
{
  uint64_t v6 = (char *)(v5 + 4);
  char v7 = *v6;
  *uint64_t v6 = v6[3];
  v6[3] = v7;
  char v8 = v6[1];
  v6[1] = v6[2];
  v6[2] = v8;
  return (*(uint64_t (**)(void))(a1 + 8 * (((v1 + v4 - 816 != v2) * v3) ^ v1)))();
}

uint64_t sub_1D0AE790C@<X0>(uint64_t a1@<X8>)
{
  char v7 = (unsigned __int8 *)(v6 + v1 + v5);
  int v8 = (((*v7 ^ 0xF8) << (((v2 + 70) | 0x48) ^ 0x56)) + ((v7[1] ^ 0xF8) << 16)) | ((v7[2] ^ 0xF8) << 8);
  *(_DWORD *)(a1 + ((v1 + v5) & 0xFFFFFFFFFFFFFFFCLL)) = (v8 | v7[3] ^ 0xF8)
                                                       + v3
                                                       - 2 * ((v8 | v7[3] ^ 0xF8) & 0x674DF377 ^ (v7[3] ^ 0xF8) & 5);
  return (*(uint64_t (**)(void))(v4 + 8 * ((1469 * ((unint64_t)(v1 + 4 + v5) < 0x40)) ^ v2)))();
}

void sub_1D0AE79B0()
{
}

uint64_t sub_1D0AE79BC@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  uint64_t v6 = (unsigned int *)(v5 + 4 * v3);
  uint64_t v7 = v3 + 1;
  *uint64_t v6 = *(_DWORD *)(a1 + 4 * (*(_DWORD *)(v5 + 4 * v7) & (a2 - 255))) ^ v6[397] ^ ((*(_DWORD *)(v5 + 4 * v7) & 0x7FFFFFFE | v2 & 0x80000000) >> 1);
  return (*(uint64_t (**)(void))(v4 + 8 * (((v7 != 227) | ((v7 != 227) << 6)) ^ a2)))();
}

void sub_1D0AE7A10()
{
}

uint64_t sub_1D0AE7A30@<X0>(int a1@<W0>, char a2@<W8>)
{
  *(unsigned char *)(v3 + (v2 - 1)) = ((a1 + 47) ^ 0x69) + a2;
  return (*(uint64_t (**)(void))(v6 + 8 * ((a1 + 47) | (32 * (v5 - 1 != v4)))))();
}

void sub_1D0AE7A4C()
{
}

uint64_t sub_1D0AE7AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v20 = **(unsigned int **)(v16 + 8 * (v15 ^ 0x314));
  uint64_t v21 = v19 - 152;
  unint64_t v22 = 839339309 * ((v17 - ((v19 - 152) | v17) + a15) ^ 0xDB5111B3F91ED523);
  *(void *)(v21 + 16) = -839339309 * ((v17 - ((v19 - 152) | v17) + a15) ^ 0xDB5111B3F91ED523);
  *(_DWORD *)(v19 - 124) = -839339309 * ((v17 - ((v19 - 152) | v17) + a15) ^ 0xF91ED523);
  *(void *)(v21 + 32) = v20 + v22;
  *(_DWORD *)(v19 - 144) = v15 + 517382680 - v22;
  *(_DWORD *)(v19 - 140) = ((v15 + 517382680) ^ 0x1A) - v22;
  *(_DWORD *)(v19 - 152) = ((v15 + 517382680) ^ 0x3A) + v22;
  *(_DWORD *)(v19 - 148) = v22 + v15 - 502674412;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v15 ^ 0x6BA)))(v19 - 152);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * *(int *)(v19 - 128)))(v23);
}

uint64_t sub_1D0AE7BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,int a55)
{
  return (*(uint64_t (**)(void))(v56
                              + 8
                              * (int)(((a55 == ((v57 - 65) | 0x44) + v55) * (((v57 + 551759796) & 0xDF1CD1FB) + 1007)) ^ v57)))();
}

uint64_t sub_1D0AE7BF4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((v2 - 279) | 0x50) + 386) ^ v2 ^ 0x2A) * (v0 == v1)) | v2)))();
}

uint64_t sub_1D0AE7C30(int a1, uint64_t a2, int a3, int a4, uint64_t a5)
{
  *(void *)(a5 + v7) = *(void *)(v6 + v7);
  return (*(uint64_t (**)(void))(v8 + 8 * (((a4 != a1) * v5) ^ a3)))((a1 + 8));
}

uint64_t sub_1D0AE7C60(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((7 * (a2 ^ 0xA0)) ^ (a2 + 48)) * (v2 == v3)) ^ a2)))();
}

uint64_t sub_1D0AE7C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  LOBYTE(STACK[0xC08]) = v38 + 57;
  unsigned int v40 = 1332649919 * ((v34 - 161161329 - 2 * (v34 & 0xF664DF8F)) ^ 0xCB175B7D);
  v37[399] = a23;
  v37[401] = v36;
  *(_DWORD *)(v39 - 128) = v40 + v35 + 497;
  *(_DWORD *)(v39 - 144) = v40 + 2140997255;
  (*(void (**)(uint64_t))(a2 + 8 * (v35 ^ 0x4AA)))(v39 - 144);
  v37[398] = v36;
  v37[399] = a33 + ((v35 - 645) ^ 0x2B5D33B9) + 16 * (int)v38;
  *(_DWORD *)(v39 - 128) = v35 + 1449114341 * (v34 ^ 0xCF5EF9EB) + 716;
  uint64_t v41 = (*(uint64_t (**)(uint64_t))(a34 + 8 * (v35 + 852)))(v39 - 144);
  return (*(uint64_t (**)(uint64_t))(a34 + 8 * (v35 ^ (105 * (v38 != 759835855)))))(v41);
}

uint64_t sub_1D0AE7DA0@<X0>(int a1@<W2>, unsigned int a2@<W4>, int a3@<W5>, uint64_t a4@<X8>)
{
  int v8 = v6 + v5;
  unsigned int v9 = ((96 * (a1 ^ 0x381)) ^ (v7 + 193)) + v8;
  if (v9 <= 0x40) {
    unsigned int v9 = a2;
  }
  BOOL v10 = ((a1 - 650) ^ (v4 + 255)) - v8 < a3 + v9;
  return (*(uint64_t (**)(void))(a4 + 8 * ((v10 | (32 * v10)) ^ a1)))();
}

uint64_t sub_1D0AE7DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8 * (int)(((((v12 == 24) ^ (v13 - 112)) & 1) * a5) ^ v13)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_1D0AE7E00()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 202) | 0x41E) + 34) * (v1 == v0)) ^ v2)))();
}

uint64_t sub_1D0AE7E30@<X0>(unsigned int a1@<W0>, int a2@<W8>)
{
  *(_DWORD *)(v5 + 4 * (a2 + v7 + v2)) = a2 + v7 + v2 + (a1 ^ (a1 >> 30)) * v8;
  return (*(uint64_t (**)(void))(v6 + 8 * (v4 ^ (4 * (v3 < 0x26F)))))();
}

uint64_t sub_1D0AE7E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, unsigned char *a17, uint64_t a18, uint64_t a19, unsigned char *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned char *a26,unsigned char *a27,unsigned char *a28,unsigned char *a29,int a30,uint64_t a31,unsigned char *a32,unsigned char *a33,uint64_t a34,unsigned char *a35)
{
  uint64_t v41 = (v40 - 458507105) & 0x1B543FFC;
  uint64_t v42 = v35 ^ v37;
  unint64_t v43 = v36 & 0xFFFFFFEFFFFFFFFFLL ^ (v36 & 0x1000000000 | 0x187F8476B7B3AD9) ^ ((a15 - 878959038) | (unint64_t)(a16 << 32));
  unint64_t v44 = ((v41 + 0x1045926F1685AD77) ^ v43) & (v35 ^ v37 ^ 0xDBE37269C67EEE92);
  *((void *)&v45 + 1) = v37 ^ a8 ^ 0x5B;
  *(void *)&long long v45 = v37 ^ a8 ^ 0x5255BFA36FF52D00;
  *(void *)&long long v45 = __ROR8__(v45 >> 7, 57);
  uint64_t v46 = v45 - ((2 * v45) & 0x1CB0EB8F5AA9CB6ELL) + 0xE5875C7AD54E5B7;
  uint64_t v47 = (v44 - ((2 * v44) & 0x1CB0EB8F5AA9CB6ELL) + 0xE5875C7AD54E5B7) ^ v46;
  *((void *)&v45 + 1) = v47 ^ 0x1F7504FC0F2;
  *(void *)&long long v45 = v47 ^ 0xB739260000000000;
  uint64_t v48 = v47 ^ __ROR8__(v47, 7) ^ (v45 >> 41);
  unint64_t v49 = a8 ^ 0x40037572E77681E9 ^ (((v46 ^ 0xF1A78A3852AB1A48) & (v42 ^ 0x241C8D963981116DLL))
                                   - ((2 * ((v46 ^ 0xF1A78A3852AB1A48) & (v42 ^ 0x241C8D963981116DLL))) & 0x5CE04B6D54DA3C2CLL)
                                   + 0x2E7025B6AA6D1E16);
  unint64_t v50 = (v46 ^ 0xE5875C7AD54E5B7) & (a8 ^ 0x918CAF3BB2E46000) ^ v43 ^ v38;
  unint64_t v51 = (v49 - ((2 * v49) & 0x6BA09DA4FE7B53F6) - 0x4A2FB12D80C25605) ^ v50;
  unint64_t v52 = v51 ^ 0xF55B76EFD5D72CC9;
  unint64_t v53 = v51 ^ (v51 >> 10) ^ ((v51 ^ 0xF55B76EFD5D72CC9) << 54) ^ (((v51 >> 17) ^ 0x22624A6DFF21)
                                                                  - ((2 * ((v51 >> 17) ^ 0x22624A6DFF21)) & 0xB89375B298BALL)
                                                                  + 0x5685C49BAD94C5DLL);
  unint64_t v54 = ((v52 << 47) ^ 0xB3EB800000000000) - ((2 * ((v52 << 47) ^ 0xB3EB800000000000)) & 0x3D5A000000000000);
  uint64_t v55 = v53 ^ 0x41BDF9B7726497D1;
  v54 -= 0x6152E2440A82635CLL;
  unint64_t v56 = ((v54 ^ 0x9492E2440A82635BLL ^ v53 ^ 0x41BDF9B7726497D1) + (v54 ^ 0x9EAD1DBBF57D9CA5)) ^ ((v53 ^ 0x4B8206488D9B682ELL) + 1);
  unint64_t v57 = v55 ^ 0xB0A664E44F8B93FLL ^ (v56 - ((2 * v56) & 0xFD94CC9C89F1727ELL) - 0x13599B1BB0746C1);
  uint64_t v58 = ((v57 - ((2 * v57) & 0x3D5A3B77EAFB3948) - 0x6152E2440A82635CLL) ^ v54)
      + 2 * (v57 & (v54 ^ 0x1EAD1DBBF57D9CA4));
  unint64_t v59 = (v43 ^ v38 ^ 0x408B383DAAEA8532) & (v43 ^ 0xEFBA6D90E97A50B8) ^ v42;
  *((void *)&v45 + 1) = v36 ^ 0x6B7B3AD9 ^ (a15 - 878959038) ^ v38 ^ 0x532;
  *(void *)&long long v45 = v43 ^ v38 ^ 0x408B383DAAEA8000;
  *(void *)&long long v45 = __ROR8__((v45 >> 15) ^ 0x812D3B9802DA7A13, 49);
  unint64_t v60 = (v59 ^ ((v59 ^ 0xDBE37269C67EEE92) + 1) ^ 0x241C8D963981116DLL ^ ((v59 ^ 0xCBA6E006D0FB41D5 ^ (v45 ^ 0x6233FE92C2F63F69) & (a8 ^ 0x6E7350C44D1B9FFFLL) ^ v43)
                                                                          + ((v45 ^ 0x6233FE92C2F63F69) & (a8 ^ 0x6E7350C44D1B9FFFLL) ^ v43 ^ 0x1045926F1685AF47)
                                                                          + 1))
      + ((v45 ^ 0x6233FE92C2F63F69) & (a8 ^ 0x6E7350C44D1B9FFFLL) ^ v43 ^ 0x1045926F1685AF47);
  *((void *)&v45 + 1) = v60 ^ 0x7C8808CCB5;
  *(void *)&long long v45 = v60 ^ 0x8ABEF80000000000;
  uint64_t v61 = v60 ^ 0x7822B01C1F182F02 ^ ((v45 >> 39) - ((2 * (v45 >> 39)) & 0xE53890C12E21C76ELL) - 0xD63B79F68EF1C49);
  int v62 = 25 * ((v60 >> 61) ^ 4) - ((50 * ((v60 >> 61) ^ 4)) & 0xD6);
  unsigned int v63 = (((v62 + 280600939) & 0x452CC4FF ^ 0xBAFBBBAE) - 0x2000) ^ 0xBAD31B24;
  LOBYTE(v43) = (((v62 + 107) ^ 0x9C) - 73) ^ (v62 + 107) ^ 0x9C ^ *(unsigned char *)(a24 + v63) ^ 0xF0;
  uint64_t v64 = (((v43 & 0x80) != 0) | (2 * v43));
  uint64_t v65 = (v64 + v61 - 2 * (v64 & v61)) ^ (8 * v60);
  uint64_t v66 = (v47 - ((2 * v47) & 0x5592CBC05BF7BF5ELL) - 0x55369A1FD2042051) ^ v59;
  unint64_t v67 = v48 ^ (v66 << 45) ^ __ROR8__(v66, 28) ^ v66 ^ 0x81ED578127BA9F34 ^ ((v66 ^ 0x81ED578127BA9F34) >> 19);
  unint64_t v68 = v58 - ((2 * v58) & 0xA88F6614705F4408) - 0x2BB84CF5C7D05DFCLL;
  unint64_t v69 = ((v65 ^ v67 ^ 0x2FEFE514E07C42C9) + (v67 ^ 0x85E7D90F5FC5D89ELL | v65 ^ 0x55F7C3E4404665A8) + 1) ^ v48 ^ v68;
  *((void *)&v45 + 1) = v69 ^ 0x32;
  *(void *)&long long v45 = v69 ^ 0x1C28DA4A07408800;
  uint64_t v70 = v69 ^ __ROR8__(v69, 41) ^ (v45 >> 7);
  uint64_t v71 = (v67 ^ 0x7A1826F0A03A2761) & (v48 ^ v68 ^ 0x79EF194D793F0288);
  *((void *)&v45 + 1) = ~v50;
  *(void *)&long long v45 = v50;
  uint64_t v72 = (v45 >> 1) ^ 0x69227CAFABDDDA38 ^ (((v50 << 58) ^ 0xC400000000000000)
                                           - 2 * (((v50 << 58) ^ 0xC400000000000000) & (v50 ^ 0x5000000000000000))
                                           + (v50 ^ 0x9E27931DBBB435ALL ^ (((v50 >> 6) ^ 0x34913E57D5EEED1)
                                                                         - ((2 * ((v50 >> 6) ^ 0x34913E57D5EEED1)) & 0x74D00DD1801EE56)
                                                                         - 0x24597F9173FF08D5)));
  unint64_t v73 = v65 ^ 0xECE5E5E33CBD94ABLL ^ (v72 - ((2 * v72) & 0x72244C0EF9F7E206) - 0x46EDD9F883040EFDLL);
  uint64_t v74 = (v48 ^ 0x525755B8BEEF5F73) & (v68 ^ 0x2BB84CF5C7D05DFBLL) ^ v73;
  uint64_t v75 = (v74 + (v68 ^ 0x2BB84CF5C7D05DFBLL ^ v74) + 1) ^ ((v68 ^ 0x2BB84CF5C7D05DFBLL) + 1);
  unint64_t v76 = (((v75 - ((2 * v75) & 0xA88F6614705F4408) - 0x2BB84CF5C7D05DFCLL) ^ v68) + v74) ^ v71;
  unint64_t v77 = ((v76 << 47) ^ 0x685B000000000000)
      - ((2 * ((v76 << 47) ^ 0x685B000000000000)) & 0xFF55000000000000)
      - 0x553A153C52148BLL;
  unint64_t v78 = ((v76 >> 17) | (v76 << 54)) ^ v76 ^ (((v76 >> 10) ^ 0xA3E966F75234)
                                           - ((2 * ((v76 >> 10) ^ 0xA3E966F75234)) & 0x6891E2D493A104)
                                           - 0x65CBB70E95B62F7ELL) ^ v77 & 0x636C000000000000 ^ ((v77 & 0x636C000000000000 ^ 0xFFBBB4EB655C6819)
                                                                                                 + (v77 ^ 0x9CC68EFE590E7C92));
  unint64_t v79 = v74 ^ 0x49C04A6272FA3BF3 ^ (((0x6F45779FA95FC03ALL - (v74 ^ 0x6F45779FA95FC03ALL)) ^ -v74)
                                    - ((2 * ((0x6F45779FA95FC03ALL - (v74 ^ 0x6F45779FA95FC03ALL)) ^ -v74)) & 0x938094C4E5F477E6)
                                    + 0x49C04A6272FA3BF3);
  unint64_t v80 = v79 + 0x31556655512EE281 + (~(2 * v79 - 0x217510C0AD407F8CLL) | 0x7BE02294B061BB73);
  *((void *)&v45 + 1) = v79;
  *(void *)&long long v45 = v80 ^ 0xC20FEEB5A7CF2246;
  uint64_t v81 = (((v45 >> 1) ^ (v80 << 58) ^ 0x1800000000000000)
       - 2 * (((v45 >> 1) ^ (v80 << 58)) & 0x420FEEB5A7CF225ELL ^ (v45 >> 1) & 0x18)
       - 0x3DF0114A5830DDBALL) ^ v80;
  uint64_t v82 = (v80 >> 6) ^ 0x3083FBAD69F3C89;
  uint64_t v83 = v81 & 0x67423A1DC358E9FBLL ^ v82 & 0x3423A1DC358E9FBLL;
  unint64_t v84 = v83 | v81 & 0x98BDC5E23CA71604 ^ v82 & 0xBDC5E23CA71604;
  unint64_t v85 = v67 ^ (v65 ^ 0xAA083C1BBFB99A57) & v72;
  unint64_t v86 = (((v68 ^ 0xD447B30A382FA204) & ~v73)
       - ((2 * ((v68 ^ 0xD447B30A382FA204) & ~v73)) & 0x72244C0EF9F7E206)
       - 0x46EDD9F883040EFDLL) ^ v65 ^ 0xECE5E5E33CBD94ABLL;
  uint64_t v87 = (v86 - ((2 * v86) & 0x694CA35801CDFCA0) + 0x34A651AC00E6FE50) ^ v85;
  *((void *)&v45 + 1) = v87 ^ 0xA478977E7;
  *(void *)&long long v45 = v87 ^ 0x19F9B60000000000;
  uint64_t v88 = v45 >> 39;
  *(void *)&long long v45 = __ROR8__(v87, 61);
  unint64_t v89 = ((v88 ^ v45 ^ 0xCFCDB0523C4BBF3ALL)
       - ((2 * (v88 ^ v45 ^ 0xCFCDB0523C4BBF3ALL)) & 0x8CBBED7E11AB73C2)
       - 0x39A20940F72A461FLL) ^ v87;
  unint64_t v90 = (v84 - 2 * (v84 & 0x7C2911EDBC489CE5 ^ v83 & 0x20) + 0x7C2911EDBC489CC5) ^ v89 ^ 0xA38D5158F31452C1;
  unint64_t v91 = v90 ^ (v78 ^ 0x29EC13D29A33116FLL) & (v70 ^ 0x392B7A0E1E4E9C5FLL);
  unint64_t v92 = 0xFFFFFFFC00000000;
  if ((v91 & 0x400000000) != 0) {
    unint64_t v92 = 0x400000000;
  }
  unint64_t v93 = v92 + (v91 ^ 0x7955EAEC4D48B80CLL);
  uint64_t v94 = ((v91 << 63) | 0x3000000000000000) ^ (v91 << 58) ^ (v93 >> 1);
  uint64_t v95 = v94 - 2 * (v94 & 0x15B76BBDE8F4E057 ^ (v93 >> 1) & 1) - 0x6A489442170B1FAALL;
  uint64_t v96 = (v91 >> 6) ^ 0x1E557ABB13522E0;
  unint64_t v97 = v95 ^ v91;
  unint64_t v98 = v97 ^ 0xECE28153A5BC585ALL;
  BOOL v99 = (v97 & v96 & 0x400000000000) == 0;
  uint64_t v100 = v96 & 0x400000000000 | 0x360485A3DBA6523DLL;
  if (!v99) {
    uint64_t v100 = 0x6C090B47B74CA47ALL - v100;
  }
  unint64_t v101 = (v98 - 0x360485A3DBA6523DLL + v100) ^ v96 & 0xFFFFBFFFFFFFFFFFLL;
  unint64_t v102 = (((v78 ^ 0xD613EC2D65CCEE90) & ~v90)
        - ((2 * ((v78 ^ 0xD613EC2D65CCEE90) & ~v90)) & 0xF85223DB7891398ALL)
        + 0x7C2911EDBC489CC5) ^ v89 ^ 0xA38D5158F31452C1;
  unint64_t v103 = v69 ^ 0x8610E6B286C0FD77;
  BOOL v99 = (~v69 & (unint64_t)((unsigned __int16)v85 & 0x8000)) == 0;
  uint64_t v104 = (unsigned __int16)v85 & 0x8000 | 0xFD35254F03F25CDLL;
  if (!v99) {
    uint64_t v104 = 0x1FA6A4A9E07E4B9ALL - v104;
  }
  unint64_t v105 = (v103 - 0xFD35254F03F25CDLL + v104) ^ v85 & 0xFFFFFFFFFFFF7FFFLL;
  unint64_t v106 = ((v105 >> 19) ^ (v105 >> 28) | (v105 << 45)) ^ (v105 << 36) ^ 0xF9A472E1E3620469;
  unint64_t v107 = v105 ^ 0x296161896261ECDELL ^ (v106 - ((2 * v106) & 0xFE0A911B86FD5CB8) - 0xFAB7723C8151A4);
  uint64_t v108 = (2 * (v70 & 0x2000000000000)) ^ 0x4000000000000 | v70 & 0x2000000000000;
  uint64_t v109 = v108 - 0x2000000000000;
  uint64_t v110 = v108 + 0x1904757876154A8ALL;
  uint64_t v111 = 0x1908757876154A8ALL - v108;
  if ((v107 & v109) == 0) {
    uint64_t v111 = v110;
  }
  unint64_t v112 = (v107 - 0x1906757876154A8ALL + v111) ^ v70 & 0xFFFDFFFFFFFFFFFFLL;
  uint64_t v113 = v112 ^ v84 & (v89 ^ 0x205BBF4AB0A331FBLL);
  uint64_t v114 = v113 ^ 0x4FB5C14D1A20ACF9 ^ (v102 - ((2 * v102) & 0x763779080BA43BCALL) - 0x44E4437BFA2DE21BLL);
  uint64_t v115 = v102 ^ 0x3278F838FE43D2BCLL;
  unint64_t v116 = v113 ^ 0x8232C68A1B9C81BALL;
  unint64_t v117 = (v115 + v114 + 1) ^ ((v113 ^ 0xC6D685F1E1B163A0) + 1);
  unint64_t v118 = ((v117 - ((2 * v117) & 0x763779080BA43BCALL) - 0x44E4437BFA2DE21BLL) ^ v116) + v115;
  unint64_t v119 = v118 - ((2 * v118) & 0xE8DFF33916518F3ALL) + 0x746FF99C8B28C79DLL;
  *((void *)&v120 + 1) = v119 ^ 0x146FF99C8B28C79DLL;
  *(void *)&long long v120 = v119 ^ 0x6000000000000000;
  uint64_t v121 = v119 ^ (v119 << 25) ^ (v120 >> 61);
  uint64_t v122 = v121 ^ 0x4D79A813B128C79DLL;
  v119 >>= 39;
  unint64_t v123 = ((v119 ^ 0xB28657EC4E3FE791 ^ v121) + (v121 ^ 0x4D79A813B128C79DLL) + 1) ^ ((v119 ^ 0xFFFFFFFFFF17200CLL) + 1);
  unint64_t v124 = (v119 ^ 0x9D5B171002A8EB92 ^ (v123 - ((2 * v123) & 0x3AB62E20048068C2) - 0x62A4E8EFFDBFCB9FLL)) + v122;
  unint64_t v125 = v124 - ((2 * v124) & 0x98FAE8207992A486);
  unint64_t v126 = (v112 ^ 0xC6D685F1E1B163A0) & (v89 ^ 0xDFA440B54F5CCE04);
  uint64_t v127 = v78 ^ 0x6A14817640E210;
  uint64_t v128 = v127 ^ v70;
  uint64_t v129 = v128 ^ 0x16EFFCC0F0626FEDLL;
  if (v127 == 0xD679F8AC138C0C80) {
    uint64_t v129 = 0x642819D025F00CDLL;
  }
  unint64_t v130 = (((v126 - ((2 * v126) & 0x5233ADB748DBD238) + 0x2919D6DBA46DE91CLL) ^ v128) & 0xF9BD7E62FDA0FF32 ^ 0xC0095460A9A07902)
       + (v126 & 0x642819D025F00CDLL ^ v129 & (v128 ^ 0xEF5282A20DC290DFLL));
  unint64_t v131 = (((v112 ^ 0x39297A0E1E4E9C5FLL) & (v128 ^ 0x10AD7D5DF23D6F20))
        - ((2 * ((v112 ^ 0x39297A0E1E4E9C5FLL) & (v128 ^ 0x10AD7D5DF23D6F20))) & 0xDD3DE9F6E230492CLL)
        - 0x11610B048EE7DB6ALL) ^ 0xEE9EF4FB71182496 ^ v91;
  unint64_t v132 = (v131 - ((2 * v131) & 0xACF3F15827181900) - 0x29860753EC73F380) ^ v127;
  *((void *)&v133 + 1) = v132 ^ 0x336;
  *(void *)&long long v133 = v132 ^ 0x7370AC685030C800;
  unint64_t v134 = v130 ^ (v130 >> 7) ^ (v130 << 23) ^ ((v130 >> 41) | (v130 << 57));
  uint64_t v135 = v132 ^ __ROR8__(v132, 17) ^ (v133 >> 10);
  unint64_t v136 = v125 + 0x4C7D74103CC95243;
  unint64_t v137 = v136 ^ (v101 - ((2 * v101) & 0x98FAE8207992A486) + 0x4C7D74103CC95243);
  unint64_t v138 = v137 ^ (v135 ^ 0xE9146A2FF9FB1CD1) & (v134 ^ 0x82F26A9BEAAD5CE7);
  unint64_t v139 = v138
       - 0x2C25E1CC9F407BC6
       - ((2 * v138) & 0xA7B43C66C17F0874)
       - 2
       * ((v138 - 0x2C25E1CC9F407BC6 - ((2 * v138) & 0xA7B43C66C17F0874)) & 0x32EF6ADC1797BC1FLL ^ (v138 - 0x2C25E1CC9F407BC6) & 2)
       + 0x32EF6ADC1797BC1DLL;
  *((void *)&v133 + 1) = (v138
                          + 1623163962
                          - ((2 * v138) & 0xC17F0874)
                          - 2
                          * ((v138 + 1623163962 - ((2 * v138) & 0xC17F0874)) & 0x1797BC1F ^ (v138 + 1623163962) & 2)
                          + 395820061) ^ 0xDDDDDDDD;
  *(void *)&long long v133 = v139 ^ 0x32EF6ADC1797BC00;
  uint64_t v140 = v133 >> 6;
  uint64_t v141 = (v139 ^ 0x32EF6ADC1797BC1DLL) << (v46 & 0x3F ^ 0x37) << (v46 & 0x3F ^ 8);
  unint64_t v142 = (v130 - ((2 * v130) & 0x763779080BA43BCALL) - 0x44E4437BFA2DE21BLL) ^ v116;
  unint64_t v143 = v142 ^ 0xD084B95730AC0352 ^ (((v142 << 45) ^ 0x70C1400000000000)
                                      - ((2 * ((v142 << 45) ^ 0x70C1400000000000)) & 0x7D00C00000000000)
                                      - 0x417F87F1DAF87AA8);
  unint64_t v144 = v134 ^ __ROR8__(v142, 28) ^ (v143 & 0x5A3733DA12558222 ^ ((v142 >> 19) ^ 0xDC0982B22B5) & 0x13DA12558222 | v143 & 0xA5C8CC25EDAA7DDDLL ^ ((v142 >> 19) ^ 0xDC0982B22B5) & 0xC25EDAA7DDDLL);
  unint64_t v145 = v144 ^ 0x39E775B3397622A6 ^ (((v136 ^ 0xB3828BEFC336ADBCLL) & v101)
                                      - ((2 * ((v136 ^ 0xB3828BEFC336ADBCLL) & v101)) & 0xC35AFF1C672ED7A0)
                                      - 0x1E528071CC689430);
  unint64_t v146 = (((v145 ^ v136 ^ 0xF1D5EF549B417799) + (v145 ^ v136 ^ 0x4C7D74103CC95243) + 1) ^ 0xFFFFFFFFFFFFFFFELL)
       + (v145 ^ v136 ^ 0x4C7D74103CC95243);
  uint64_t v147 = v146 + ((v135 ^ 0x16EB95D00604E32ELL) & ~v137) - 2 * (v146 & (v135 ^ 0x16EB95D00604E32ELL) & ~v137);
  unint64_t v148 = v147 - ((2 * v147) & 0xA69CB9B9DD826AF6) - 0x2CB1A323113ECA85;
  *((void *)&v133 + 1) = v148 ^ 0x5CEEC1357BLL;
  *(void *)&long long v133 = v148 ^ 0xD34E5C8000000000;
  uint64_t v149 = ((((v133 >> 39) ^ v148) & 0xDCFE457F646597 ^ 0x4C5C446E402513 | (v148 >> 61) ^ 6) ^ ((v133 >> 39) ^ v148 ^ 3) & ((v148 >> 61) ^ 6) | ((v133 >> 39) ^ v148) & 0xFF2301BA809B9A68) ^ (8 * v148);
  v135 ^= 0xF8A4B4AD3499BAD4;
  unint64_t v150 = v135 ^ v134;
  *((void *)&v133 + 1) = v135 ^ v130 ^ (v130 >> 7) ^ (v130 << 23) ^ (v130 >> 41) ^ 0x30051D;
  *(void *)&long long v133 = v135 ^ v134 ^ 0x6CBD4BE6D8000000;
  unint64_t v151 = __ROR8__((v133 >> 27) ^ __ROR8__((v136 ^ 0x4C7D74103CC95243) & (v144 ^ 0x27B5F5C2F51EB689), 27) ^ 0x9C9D75E45EFB29D6, 37);
  *((void *)&v133 + 1) = v151 ^ 0x52;
  *(void *)&long long v133 = v151 ^ 0x5230719D4780D600;
  uint64_t v152 = v139 ^ (v139 >> 1) ^ v140 ^ (v141 - ((2 * v141) & 0x777C6DFD42543252) + 0x3BBE36FEA12A1929);
  uint64_t v153 = (v151 >> 41) ^ 0x291838;
  uint64_t v154 = (v133 >> 7) ^ v151;
  unint64_t v155 = (v153 + ((v151 >> 41) ^ 0xADCF8E62B8563195 ^ v154) + 1) ^ ((v154 ^ 0xADCF8E62B87F29ADLL) + 1);
  unint64_t v156 = (((v144 ^ 0xD84A0A3D0AE14976) & (v150 ^ 0x9342B41927CFFAE2))
        - ((2 * ((v144 ^ 0xD84A0A3D0AE14976) & (v150 ^ 0x9342B41927CFFAE2))) & 0xDC9E42FA653AB3F4)
        - 0x11B0DE82CD62A606) ^ v135;
  unint64_t v157 = v138 ^ (v156 - ((2 * v156) & 0x8F8DA145EFA72DE8) - 0x38392F5D082C690CLL);
  uint64_t v158 = (v157 >> 10) ^ 0x20C3C174D485CCLL;
  unint64_t v159 = ((v157 >> 17) | (v157 << 54)) ^ v157;
  unint64_t v160 = (v158 + ((v157 >> 10) ^ 0x86D0786A5BD5E0D0 ^ v159) + 1) ^ ((v159 ^ 0x86F0BBAB2F01651CLL) + 1);
  uint64_t v161 = ((v159 ^ 0x6E5A075B90CE1F22 ^ (v160 - ((2 * v160) & 0x2EAA861E80610B82) + 0x1755430F403085C1)) + v158) ^ (v157 << 47);
  uint64_t v162 = ((v154 ^ 0x5BE09537A77FBC05 ^ (v155 - ((2 * v155) & 0x13A1C955C1FED4AELL) + 0x9D0E4AAE0FF6A57)) + v153) ^ (v151 << 23);
  unint64_t v163 = ((v161 ^ 0xA8A83F94D6FFFFFFLL ^ v162) + (v162 ^ 0xCEA3C06B29000000) + 1) ^ ((v161 ^ 0x660BFFFFFFFFFFFFLL) + 1);
  uint64_t v164 = v161 ^ 0x3240ADE24F86A50BLL;
  unint64_t v165 = ((v163 - ((2 * v163) & 0x57695BC49F0D4A16) - 0x544B521DB0795AF5) ^ v161 ^ 0x3240ADE24F86A50BLL)
       + (v162 ^ 0xCEA3C06B29000000);
  unint64_t v166 = v165 - ((2 * v165) & 0x82F5088CFC4D6C2CLL) - 0x3E857BB981D949EALL;
  uint64_t v167 = v152 ^ v149 ^ 0x72CED08157A2A299;
  unint64_t v168 = (v166 ^ 0xC17A84467E26B616) & (v161 ^ 0x660BFFFFFFFFFFFFLL) ^ v167;
  *((void *)&v133 + 1) = ~(((v165 - ((2 * v165) & 0xFC4D6C2C) + 2116466198) ^ 0x7E26B616) & ~v161 ^ v167);
  *(void *)&long long v133 = v168 ^ 0x465C24B9C8A39D56;
  uint64_t v169 = v133 >> 1;
  *(void *)&long long v133 = __ROR8__(v168, 6);
  uint64_t v170 = ((v169 ^ v133 ^ 0x5D197092E7228E75)
        - ((2 * (v169 ^ v133 ^ 0x5D197092E7228E75)) & 0x31A838864AE021AELL)
        + 0x18D41C43257010D7) ^ v168;
  uint64_t v171 = v170 ^ 0x5E8838FAEDD38D80;
  uint64_t v172 = (v170 ^ 0x5E8838FAEDD38D80) & 0x237723822E6B9C6FLL ^ v170 & 0x2A;
  unint64_t v173 = v145 ^ v151;
  unint64_t v174 = (((v173 << 45) ^ (v173 << 36)) & 0xFFFFFFF000000000 | (v173 >> 28)) ^ (v173 >> 19) ^ 0xA30554FB7FC282F5;
  unint64_t v175 = (v174 - ((2 * v174) & 0xEE8B3C085B4A0E34) + 0x77459E042DA5071ALL) ^ v173 ^ v162;
  unint64_t v176 = v175 ^ 0x2D028CC39CA9C151 ^ (((v167 ^ 0x2B98DFB21C5C6213) & (v149 ^ 0xB68F19800977444FLL))
                                      - ((2 * ((v167 ^ 0x2B98DFB21C5C6213) & (v149 ^ 0xB68F19800977444FLL))) & 0x43CB580FB401B0DCLL)
                                      + 0x21E5AC07DA00D86ELL);
  unint64_t v177 = (((v167 ^ 0xD467204DE3A39DECLL) & (v161 ^ 0x99F4000000000000))
        - ((2 * ((v167 ^ 0xD467204DE3A39DECLL) & (v161 ^ 0x99F4000000000000))) & 0x777C6DFD42543252)
        + 0x3BBE36FEA12A1929) ^ v149 ^ 0x72CED08157A2A299 ^ v176;
  uint64_t v178 = ((8 * v177) ^ 0x2DF1AA52DD8590)
       - ((2 * ((8 * v177) ^ 0x2DF1AA52DD8590)) & 0x26E5DF0BB5C059F0)
       - 0x6C8D107A251FD305;
  uint64_t v179 = v178 ^ 0x6C8D107A241FD304;
  unint64_t v180 = v178 & 0xFFFFFFFFFEFFFFF8;
  unint64_t v181 = (v180 ^ 0x9372EF85DBE02CF8) + v179;
  unint64_t v182 = 0x72CFADDAD757606ALL - v181;
  BOOL v99 = ((v181 + 1) & (v177 ^ 0x6005BE354A5BB0B2)) == 0;
  unint64_t v183 = v181 + 0x72CFADDAD757606CLL;
  if (!v99) {
    unint64_t v183 = v182;
  }
  uint64_t v184 = v180 ^ __ROR8__(v177, 39) ^ ((v177 ^ 0x6005BE354A5BB0B2) - 0x72CFADDAD757606BLL + v183) & ((v177 >> 61) ^ 3) ^ (((v177 ^ 0x6005BE354A5BB0B2) - 0x72CFADDAD757606BLL + v183) | (v177 >> 61) ^ 3);
  unint64_t v185 = v168 ^ 0xB4D1D5FC83816813 ^ (((v166 ^ 0x3E857BB981D949E9) & (v175 ^ 0xCE720C446A9193FLL))
                                      - ((2 * ((v166 ^ 0x3E857BB981D949E9) & (v175 ^ 0xCE720C446A9193FLL))) & 0x3E92149D3FBA1400)
                                      - 0x60B6F5B16022F600);
  uint64_t v186 = (v185 - ((2 * v185) & 0x57695BC49F0D4A16) - 0x544B521DB0795AF5) ^ v164;
  *((void *)&v187 + 1) = v186 ^ 0x1C2;
  *(void *)&long long v187 = v186 ^ 0xF374A001D380BC00;
  uint64_t v188 = v186 ^ __ROR8__(v186, 17) ^ (v187 >> 10);
  unint64_t v189 = v166 ^ (v149 ^ 0x4970E67FF688BBB0) & (v175 ^ 0xF318DF3BB956E6C0);
  uint64_t v190 = v189 ^ 0xFE4C674CD1211ELL ^ (v189 >> 7);
  if (!v63) {
    uint64_t v190 = v189 ^ 0xD82DFD60DD7F0BLL;
  }
  unint64_t v191 = ((v189 >> 41) | (v189 << 57)) ^ (v189 << 23) ^ ((v189 >> 7) ^ 0x1D99E65D3F3A1EALL | v189 ^ 0xECCF32E9F9D0F547) ^ (v190 ^ 0x171F14990D8A4CLL) & ((v189 >> 7) ^ 0x1D99E65D3F3A1EALL);
  uint64_t v192 = (v188 ^ v191 ^ 0x576931C12076339BLL)
       - 2 * ((v188 ^ v191 ^ 0x576931C12076339BLL) & 0x382EBC8696AE8A5FLL ^ (v188 ^ v191) & 4);
  unint64_t v193 = (((v176 ^ v189 ^ 0x37B958FA9AAF9DF6) + (v176 ^ v189 ^ 0xC17A84467E26B616) + 1) ^ 0xFFFFFFFFFFFFFFFELL)
       + (v176 ^ v189 ^ 0xC17A84467E26B616);
  unint64_t v194 = v193 - ((2 * v193) & 0x5B333938F20B2CE8) - 0x5266636386FA698CLL;
  uint64_t v195 = (v194 << 36) ^ (v194 << 45) ^ (v194 >> 19) ^ (v194 >> 28) ^ 0x2297F2F9EA0A46E7;
  uint64_t v196 = v194 ^ v191 ^ (v195 - ((2 * v195) & 0x5B333938F20B2CE8) - 0x5266636386FA698CLL);
  uint64_t v197 = v171 - 2 * v172;
  uint64_t v198 = (v184 ^ 0x619A71B41DFD87BLL) & v171;
  uint64_t v199 = v192 - 0x47D14379695175A5;
  unint64_t v200 = (v196 ^ 0x50317855C099866) & (v184 ^ 0xF9E658E4BE202784) ^ (v192 - 0x47D14379695175A5);
  uint64_t v201 = v198 ^ v196;
  unint64_t v202 = v200 ^ v198 ^ v196;
  *((void *)&v203 + 1) = v202 ^ 0x6C251;
  *(void *)&long long v203 = v202 ^ 0x44415D5079F00000;
  uint64_t v204 = v184 ^ 0x5A917B66904BBBC1;
  unint64_t v205 = v202 ^ __ROR8__(v202, 28) ^ (v203 >> 19);
  uint64_t v206 = v184 ^ 0x5A917B66904BBBC1 ^ (v197 - 0x5C88DC7DD19463BBLL);
  unint64_t v207 = (((v188 ^ 0xAD95D9BB83805402) & ~v206)
        - ((2 * ((v188 ^ 0xAD95D9BB83805402) & ~v206)) & 0x46EE47045CD7388ALL)
        - 0x5C88DC7DD19463BBLL) ^ v204;
  uint64_t v208 = v207 ^ 0x62030E578F798D5ALL;
  uint64_t v209 = (v201 ^ 0x50317855C099866) + 1;
  unint64_t v210 = ((v207 ^ 0x62030E578F798D5ALL)
        + (v201 ^ 0x9F71A1755FF4FE0ELL ^ (v207 - ((2 * v207) & 0xF0E3714F1909D664) - 0x78E4758737B14CELL))
        + 1) ^ v201;
  uint64_t v211 = ((v201 ^ 0x50317855C099866) - ((2 * v209) & 0x3C6B45135B72A4F0) + 0x1E35A289ADB95279) ^ 0x1B36B50CF1B0CA1ELL ^ v210;
  unint64_t v212 = (v210 ^ 0xFAFCE87AA3F66799)
       + v208
       + (v201 ^ v209 ^ 0x28D50DD2F728CABLL ^ (v211
                                             + (v210 ^ 0xFAFCE87AA3F66799)
                                             + 1
                                             - ((2 * (v211 + (v210 ^ 0xFAFCE87AA3F66799) + 1)) & 0xF0E3714F1909D664)
                                             - 0x78E4758737B14CELL));
  unint64_t v213 = v212 - ((2 * v212) & 0x10B87D07D1E09776);
  unint64_t v214 = (v213 - 0x77A3C17C170FB445) ^ (8 * (v213 - 0x77A3C17C170FB445)) ^ (((v213 - 0x77A3C17C170FB445) >> 39) ^ ((v213 + 0x85C3E83E8F04BBBLL) >> 61) | ((v213 - 0x77A3C17C170FB445) << 25));
  a29[13] = BYTE2(v205) ^ 0xE3;
  a17[5] = BYTE1(v205) ^ 0x17;
  unint64_t v215 = HIWORD(v205);
  a33[35] = BYTE6(v205) ^ 0xED;
  a29[17] = BYTE5(v205) ^ 0x78;
  *a20 = v214 ^ 0x1E;
  *a32 = v205 ^ 0xD1;
  a33[14] = (BYTE3(v205) ^ 0x3D) + ((2 * BYTE3(v205)) & 0x80) - 64;
  a33[17] = (BYTE1(v214) ^ 0xAE) + ((2 * BYTE1(v214)) & 0x80) - 64;
  a17[4] = BYTE4(v205) ^ 0x44;
  a17[6] = HIBYTE(v205) ^ 0xDB;
  LODWORD(v205) = ((v214 >> 12) & 0xF0 | (v214 >> 20) & 0xF) ^ 0x26;
  LODWORD(v205) = v205 - 1145627639 - 2 * (v205 & 0x3B ^ (v214 >> 20) & 8) + 42;
  LOBYTE(v211) = *(unsigned char *)(a18 + (v205 ^ 0xBBB71C19) + 538);
  *a26 = (BYTE4(v214) ^ 0xB) - 2 * ((BYTE4(v214) ^ 0xB) & 7) - 121;
  unint64_t v216 = v206 ^ (v199 ^ 0xB82EBC8696AE8A5BLL) & (v188 ^ 0x526A26447C7FABFDLL);
  unint64_t v217 = v188 ^ 0x340710A4DBCA78BDLL ^ (((v196 ^ 0xFAFCE87AA3F66799) & (v199 ^ 0x47D14379695175A4))
                                      - ((2 * ((v196 ^ 0xFAFCE87AA3F66799) & (v199 ^ 0x47D14379695175A4))) & 0x3325923EB094597ELL)
                                      - 0x666D36E0A7B5D341);
  unint64_t v218 = (v217 - ((2 * v217) & 0x829AA5F17D1C07A2) - 0x3EB2AD074171FC2FLL) ^ v216;
  *((void *)&v203 + 1) = v218 ^ 0xA7F93E382;
  *(void *)&long long v203 = v218 ^ 0x8E58E90000000000;
  a20[2] = BYTE3(v214) ^ 0xD8;
  a20[1] = 61 * (v211 ^ v205 ^ 9 ^ (((2 * (v205 ^ 9)) & 0x18) + (v205 ^ 5)) ^ 0xED);
  LOBYTE(v204) = *(unsigned char *)(a22 + (BYTE5(v214) ^ 0xD3));
  a33[21] = (HIBYTE(v214) ^ 0xCD) + ((2 * (HIBYTE(v214) ^ 0xCD)) & 0x80) - 64;
  a20[3] = BYTE6(v214) ^ 0x6C;
  unint64_t v219 = v200 ^ (v200 << 23) ^ ((v200 >> 7) ^ (v200 >> 41) | (v200 << 57));
  unint64_t v220 = __ROR8__(v216, 6) ^ (v216 >> 1) ^ (v216 ^ 0xC39D9869C05A48AELL | (v216 << 63)) ^ (v216 << 63) & ~v216;
  char v221 = v204 + ((2 * (BYTE5(v214) ^ 0x94)) & 0x64) - (BYTE5(v214) ^ 0x94);
  a29[1] = (v220 ^ 0xDAC0BA55472C4D75) >> (v214 & 8 ^ 8) >> (v214 & 8);
  *a27 = (v220 ^ 0x75) - 2 * ((v220 ^ 0x75) & 7) - 121;
  char v222 = ((2 * (v221 - 50)) & 0x6A ^ 0x68) + ((v221 - 50) ^ 0x89);
  *a35 = v222 - 2 * (v222 & 7) - 121;
  LODWORD(v205) = 25 * (HIBYTE(v220) ^ 0xDA) - ((50 * (HIBYTE(v220) ^ 0xDA)) & 0x2564) + 870593202;
  a33[5] = (BYTE2(v220) ^ 0x2C) + ((2 * BYTE2(v220)) & 0x80) - 64;
  unint64_t v223 = (v220 ^ 0xDAC0BA55472C4D75) >> (v215 & 0x28 ^ 0x28) >> (v215 & 0x28);
  char v224 = v223 + ((2 * v223) & 0x80);
  LODWORD(v215) = *(unsigned __int8 *)(a24 + ((25 * (BYTE3(v220) ^ 0x47)) ^ 0xE1)) ^ (25 * (BYTE3(v220) ^ 0x47)) ^ 0xFFFFFFF7 ^ (((25 * (BYTE3(v220) ^ 0x47)) ^ 0xFFFFFFF7) - 73);
  unint64_t v225 = __ROR8__(((v218 & 0x1FFFF) << 7) ^ 0x4CA57C3CC5F5644DLL ^ (v203 >> 40), 24) ^ (v218 << 54);
  *a28 = (BYTE4(v220) ^ 0x55) - 2 * ((BYTE4(v220) ^ 0x55) & 7) - 121;
  a33[25] = v224 - 64;
  a29[14] = BYTE6(v220) ^ 0xC0;
  unint64_t v226 = v225 ^ (v218 >> 10);
  unint64_t v227 = v226 ^ (v218 >> 17);
  a33[33] = ((((v215 ^ 0xFFFFFFF0) & 0x80) != 0) | (2 * (v215 ^ 0xF0)))
          + ((4 * (v215 ^ 0xF0)) & 0x80)
          - 64;
  LOBYTE(v205) = *(unsigned char *)(a24 + (v205 ^ 0x53)) ^ v205 ^ 0x45 ^ (((2 * (v205 ^ 0x45)) & 0x6E)
                                                                                   + (v205 ^ 0xF2)) ^ 0xF0;
  a33[28] = (((v205 & 0x80) != 0) | (2 * v205)) + ((4 * v205) & 0x80) - 64;
  LOBYTE(v205) = *(unsigned char *)(a24 + ((25 * (v227 ^ 0xF4)) ^ 0xE1)) ^ (25 * (v227 ^ 0xF4)) ^ 0xF7 ^ (((25 * (v227 ^ 0xF4)) ^ 0xF7) - 73) ^ 0xF0;
  a33[3] = (BYTE2(v227) ^ 0x66) - 2 * ((BYTE2(v227) ^ 0x66) & 0xC1 ^ BYTE2(v227) & 1) - 64;
  a29[3] = BYTE3(v227) ^ 0x93;
  a33[15] = (((v205 & 0x80) != 0) | (2 * v205)) + ((4 * v205) & 0x80) - 64;
  a29[5] = BYTE5(v227) ^ 0x9C;
  a33[4] = (BYTE4(v227) ^ 0x5A) - 2 * ((BYTE4(v227) ^ 0x5A) & 0x45 ^ BYTE4(v227) & 5) - 64;
  a29[7] = BYTE1(v227) ^ 0xE7;
  char v228 = *(unsigned char *)(a25 + ((101 * (BYTE6(v226) ^ 6)) ^ 0x76)) ^ 0xE2;
  a33[10] = v228 + ((2 * v228 - 98) & 0x80) + 15;
  LOBYTE(v227) = *(unsigned char *)(a25 + ((101 * (HIBYTE(v225) ^ 0xE4)) ^ 0x76));
  a29[20] = BYTE6(v219) ^ 0x60;
  a33[49] = (BYTE3(v219) ^ 0xCF) + ((2 * (BYTE3(v219) ^ 0xCF)) & 0x80) - 64;
  a33[7] = (BYTE4(v219) ^ 0xE5) + (~(2 * (BYTE4(v219) ^ 0xE5)) | 0x7F) - 63;
  a33[42] = v200 ^ (v200 >> 7) ^ (v200 >> 41) ^ 0x43;
  a33[13] = (BYTE2(v219) ^ 0x5C) - 2 * ((BYTE2(v219) ^ 0x5C) & 0xC1 ^ BYTE2(v219) & 1) - 64;
  a33[27] = (HIBYTE(v219) ^ 0xF2) + ((2 * (HIBYTE(v219) ^ 0xF2)) & 0x80) - 64;
  *a29 = (v227 ^ 0xE2) + 79;
  a29[15] = ((unsigned __int16)(v200 ^ (v200 >> 7) ^ (v200 >> 41)) >> 8) ^ 0xFD;
  a29[2] = (v219 ^ 0xF260FFE5CF5CFD83) >> ((-108 - v62) & 0x28) >> ((-108 - v62) & 0x28 ^ 0x28u);
  *(_DWORD *)(*(void *)a31 + 8) = a30 - 1308622635;
  return (*(uint64_t (**)(uint64_t))(v39 + 8 * (int)v41))(1830718328);
}

uint64_t sub_1D0AEA844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t (*a14)(uint64_t))
{
  return a14(a11);
}

uint64_t sub_1D0AEA858()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((126
                                * ((v1 ^ 0xCFFEF53D4F17FDFBLL) + ((2 * v1) & 0x30) + 0x30010AC3666A9A87 == (v2 ^ 0x366u ^ (unint64_t)(v0 + 580)))) ^ v2)))();
}

uint64_t sub_1D0AEA8C4@<X0>(uint64_t a1@<X0>, int a2@<W1>, unsigned int a3@<W8>)
{
  BOOL v13 = v9 > a3;
  *(unsigned char *)(v12 + (a2 - 2042714722)) = *(unsigned char *)(v6 + ((a2 - 2042714722) & 0xFLL)) ^ *(unsigned char *)(v3 + (a2 - 2042714722)) ^ *(unsigned char *)(((a2 - 2042714722) & 0xFLL) + v4 + 2) ^ *(unsigned char *)(((a2 - 2042714722) & 0xFLL) + v5 + 1) ^ (-113 * ((a2 - 98) & 0xF));
  int v14 = a2 + ((v8 + 774243807) & 0xD1D9FD77);
  unsigned int v15 = a2 + 481954627;
  uint64_t v16 = (v14 - 1058);
  int v17 = v13 ^ (v15 < v7);
  BOOL v18 = v15 < v10;
  if (!v17) {
    BOOL v13 = v18;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8 * ((457 * v13) ^ v8)))(a1, v16);
}

uint64_t sub_1D0AEA974@<X0>(int a1@<W8>)
{
  _DWORD *v1 = v1[623];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v3 - 1 == ((a1 - 1318184110) & 0x4E91E36F) - v4 + 986226687)
                                * (((((a1 - 1318184110) & 0x4E91E36F) - 201) | 0x18) ^ 0x5B)) ^ (a1 - 1318184110) & 0x4E91E36F)))();
}

void sub_1D0AEA9E0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 1332649919 * ((((2 * a1) | 0x40041268) - a1 - 537004340) ^ 0x1D718DC6);
  unint64_t v2 = ((unint64_t)(*(_DWORD *)(*(void *)a1 - 0x10B17FC23B8BBE1CLL) + 381) >> 3) & 0x3F;
  *(unsigned char *)(*(void *)a1 - 0x10B17FC23B8BBE14 + v2) = 0x80;
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1D0AEAAE4@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((456 * (v2 + 1 == a1 + 16)) ^ v3)))();
}

uint64_t sub_1D0AEABC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, const char *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int8x16_t a33)
{
  int8x16x4_t v63 = vld4q_s8(a7);
  uint8x16_t v39 = (uint8x16_t)veorq_s8(v63.val[0], v37);
  uint16x8_t v40 = vmovl_u8(*(uint8x8_t *)v39.i8);
  int8x16_t v41 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v40.i8);
  int8x16_t v42 = (int8x16_t)vmovl_high_u16(v40);
  uint16x8_t v43 = vmovl_high_u8(v39);
  int8x16_t v44 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v43.i8);
  int8x16_t v45 = (int8x16_t)vmovl_high_u16(v43);
  uint8x16_t v46 = (uint8x16_t)veorq_s8(v63.val[1], v37);
  uint16x8_t v47 = vmovl_high_u8(v46);
  uint16x8_t v48 = vmovl_u8(*(uint8x8_t *)v46.i8);
  uint8x16_t v49 = (uint8x16_t)veorq_s8(v63.val[2], v37);
  _Q21 = (int8x16_t)vmovl_high_u8(v49);
  _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v49.i8);
  int8x16_t v52 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
  __asm { SHLL2           V20.4S, V20.8H, #0x10 }
  int8x16_t v57 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
  __asm { SHLL2           V21.4S, V21.8H, #0x10 }
  v63.val[0] = veorq_s8(v63.val[3], v37);
  v63.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v63.val[0]);
  v63.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v63.val[1]);
  v63.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v63.val[0].i8);
  v63.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v63.val[0]);
  v63.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v63.val[0].i8), 0x18uLL), v52), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v48.i8, 8uLL), v41));
  v63.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v63.val[3], 0x18uLL), _Q20), vorrq_s8((int8x16_t)vshll_high_n_u16(v48, 8uLL), v42));
  v63.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v63.val[1].i8), 0x18uLL), v57), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v47.i8, 8uLL), v44));
  v63.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v63.val[2], 0x18uLL), _Q21), vorrq_s8((int8x16_t)vshll_high_n_u16(v47, 8uLL), v45));
  int32x4_t v58 = (int32x4_t)veorq_s8(vandq_s8(v63.val[0], a33), (int8x16_t)(*(_OWORD *)&v41 & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  int32x4_t v59 = (int32x4_t)veorq_s8(vandq_s8(v63.val[3], a33), (int8x16_t)(*(_OWORD *)&v42 & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  int32x4_t v60 = (int32x4_t)veorq_s8(vandq_s8(v63.val[1], a33), (int8x16_t)(*(_OWORD *)&v44 & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  int32x4_t v61 = (int32x4_t)veorq_s8(vandq_s8(v63.val[2], a33), (int8x16_t)(*(_OWORD *)&v45 & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  v34[2] = vaddq_s32(vsubq_s32((int32x4_t)v63.val[1], vaddq_s32(v60, v60)), v38);
  v34[3] = vaddq_s32(vsubq_s32((int32x4_t)v63.val[2], vaddq_s32(v61, v61)), v38);
  *int v34 = vaddq_s32(vsubq_s32((int32x4_t)v63.val[0], vaddq_s32(v58, v58)), v38);
  v34[1] = vaddq_s32(vsubq_s32((int32x4_t)v63.val[3], vaddq_s32(v59, v59)), v38);
  return (*(uint64_t (**)(void))(v36 + 8 * ((73 * (v35 == 1796577866)) ^ (v33 - 121057084) & 0x7372FF9)))();
}

uint64_t sub_1D0AEADEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, _DWORD *a13, _DWORD *a14, _DWORD *a15, _DWORD *a16, _DWORD *a17, uint64_t a18, uint64_t a19, int a20,int a21,int a22,int a23,_DWORD *a24,int *a25,_DWORD *a26,unsigned int a27,int a28)
{
  int v32 = v28;
  unsigned int v33 = 2 * &a24;
  unsigned int v34 = 961505453 * (((v33 | 0x76CA6E36) - &a24 - 996488987) ^ 0x999EF9BD);
  LODWORD(a25) = v34 ^ 0x1126A7D6;
  HIDWORD(a25) = v34 + v30 - 284;
  a24 = a17;
  (*(void (**)(_DWORD **))(v29 + 8 * (v30 ^ 0x58F)))(&a24);
  LODWORD(a24) = (v30 - 1488871649) ^ (961505453 * (((v33 | 0xC6D52E2A) - &a24 + 479553771) ^ 0x419159B3));
  a25 = a17;
  a26 = a16;
  (*(void (**)(_DWORD **))(v29 + 8 * (v30 + 603)))(&a24);
  unsigned int v35 = 1449114341 * (((&a24 | 0xCC00C810) - (&a24 & 0xCC00C810)) ^ 0x35E31FB);
  a27 = v35 + 1997355281;
  a28 = v35 ^ 0xD6687D8;
  a25 = &a20;
  a26 = a17;
  LODWORD(a24) = v30 - v35 - 535;
  uint64_t v36 = (*(uint64_t (**)(_DWORD **))(v29 + 8 * (v30 + 590)))(&a24);
  *v31 += a20;
  *a15 += a21;
  *a14 += a22;
  *a13 += a23;
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8 * (v30 ^ (1988 * ((v32 - 1842602217) < 0xFFFFFFC0)))))(v36);
}

uint64_t sub_1D0AEAFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 *a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned __int8 *a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v34 = 2 * a7;
  int v28 = &a19;
  unsigned int v29 = 1663139771 * (((v28 | 0x8F5A2C0) - v28 + (v28 & 0xF70A5D38)) ^ 0x701C744D);
  HIDWORD(a22) = v29 + v26 - 4;
  LODWORD(a19) = v29 + (a7 ^ 0xFF8FFBC2) + ((2 * a7) & 0xFF1FF784) + 2071723774;
  a20 = v27;
  a21 = a12;
  LOBYTE(a22) = (-69 * (((v28 | 0xC0) - (_BYTE)v28 + (v28 & 0x38)) ^ 0x4D)) ^ 0x91;
  a23 = v27 + 56;
  a24 = v27 + 0x428BD8738FDE5CE2;
  (*(void (**)(uint64_t *))(v24 + 8 * (v26 + 847)))(&a19);
  uint64_t v30 = (uint64_t)&a12[56 * *a12 + 0x62E66B39671084AELL];
  unsigned int v31 = 846572393
      * (((&a19 ^ 0x1C5C2076) - 85984854 - 2 * ((&a19 ^ 0x1C5C2076) & 0xFADFF9AA)) ^ 0xD0E08D95);
  a19 = v27 + 0x831B691D8B0FB5BLL;
  LODWORD(a24) = (v26 + 571) ^ v31;
  LODWORD(a20) = ((((v26 - 750) | 0x263) ^ 0xBDFFDDA2) & v34)
               - v31
               + ((((v26 + 21) | 0x8C) - 927) & a15 ^ 0xDEFFEFEB)
               + 1006509917;
  a22 = v27 + 0x43A8029596AF6974;
  a23 = v30;
  a21 = (unsigned __int8 *)(v27 + 0x5179C032546094B0);
  uint64_t v32 = (*(uint64_t (**)(uint64_t *))(v24 + 8 * (v26 ^ 0x4E6)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * ((((HIDWORD(a24) != v25) << 7) | ((HIDWORD(a24) != v25) << 8)) ^ v26)))(v32);
}

uint64_t sub_1D0AEB1F0()
{
  uint64_t v5 = (v1 - 144) ^ 0x6B0F5377BCE11861;
  LODWORD(STACK[0x500]) = 1217302581;
  LODWORD(STACK[0x504]) = -779738902;
  uint64_t v2 = *off_1F26D64B8;
  *(_DWORD *)(v1 - 116) = -839339309 * v5;
  *(void *)(v1 - 128) = -839339309 * v5;
  *(_DWORD *)(v1 - 136) = -53510644 - 839339309 * v5;
  *(_DWORD *)(v1 - 132) = -53510627 - 839339309 * v5;
  *(void *)(v1 - 112) = v2 + 839339309 * v5;
  *(_DWORD *)(v1 - 144) = 839339309 * v5 - 53510499;
  *(_DWORD *)(v1 - 140) = 839339309 * v5 - 502673533;
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v0 + 11944))(v1 - 144);
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * *(int *)(v1 - 120)))(v3);
}

uint64_t sub_1D0AEB4A8@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

uint64_t sub_1D0AEB4C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * (((a4 == 343018756) * (a9 + 81 + ((a9 - 419663095) & 0x19038F0F) - 416)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1D0AEB510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, _DWORD *a16, _DWORD *a17, _DWORD *a18, _DWORD *a19, uint64_t a20,uint64_t a21,int a22,int a23,int a24,int a25,uint64_t (*a26)(void),int a27,int a28)
{
  *a19 = (v30 ^ v32) + (a23 ^ v32) + v32 - (v31 & (2 * ((v30 ^ v32) + (a23 ^ v32))));
  *a18 = (v29 ^ v32) + (a28 ^ v32) + v32 - (v31 & (2 * ((v29 ^ v32) + (a28 ^ v32))));
  *a17 = (v33 ^ v32) + (a24 ^ v32) + v32 - (v31 & (2 * ((v33 ^ v32) + (a24 ^ v32))));
  *a16 = (v28 ^ v32) + (a25 ^ v32) + v32 - (v31 & (2 * ((v28 ^ v32) + (a25 ^ v32))));
  return a26();
}

void sub_1D0AEB540(int8x16_t *a1@<X2>, int8x16_t *a2@<X8>, int8x16_t a3@<Q0>, int8x16_t a4@<Q1>)
{
  *a1 = vaddq_s8(vaddq_s8(*a2, a4), vmvnq_s8(vandq_s8(vaddq_s8(*a2, *a2), a3)));
  JUMPOUT(0x1D0B013C0);
}

void sub_1D0AEB588()
{
  _DWORD *v1 = v0 + 21;
  JUMPOUT(0x1D0AD8C9CLL);
}

uint64_t sub_1D0AEB594(int8x8_t *a1, int a2, uint64_t a3, int8x8_t a4)
{
  *a1 = veor_s8(*v4, a4);
  return (*(uint64_t (**)(int8x8_t *))(v6 + 8 * (((a3 == 0) * a2) ^ v5)))(a1 + 1);
}

uint64_t sub_1D0AEB5C0(int a1, uint64_t a2, uint64_t a3)
{
  unsigned int v9 = (v6 - 38274156) & 0xC77D0D18;
  *(unsigned char *)(a3 + (int)(v3 - 832982605 + v9)) ^= *(unsigned char *)(a2 + (int)(v3 - 832982605 + v9)) ^ 0x22;
  return (*(uint64_t (**)(void))(v8 + 8 * (int)(((v3 + 1 < (v9 ^ v4) - 134 + a1) * v5) ^ (v7 + v9 - 1))))();
}

uint64_t sub_1D0AEB63C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((v1 - 1972401689) & 0xB05B6DF1 ^ 0xF4) * (LODWORD(STACK[0x200]) == 100)) ^ (v0 + v1 + 1038))))();
}

uint64_t sub_1D0AEB68C(uint64_t a1, unsigned int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8
                                   * (((((a2 < 0x1F) ^ (v2 + 15)) & 1) * (v2 - 758)) ^ (v2 - 239))))();
}

uint64_t sub_1D0AEB6C8(uint64_t result)
{
  if ((*(unsigned char *)(result + 4) - -69 * (result ^ 0x8D) - 110) >= 3u) {
    int v1 = 342975859;
  }
  else {
    int v1 = 343018756;
  }
  *(_DWORD *)uint64_t result = v1;
  return result;
}

uint64_t sub_1D0AEB704(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)a1 ^ (1543459711 * ((((2 * a1) | 0xC9E17AA8) - a1 + 453984940) ^ 0xA872BE90));
  uint64_t v2 = *(void *)(a1 + 8);
  unsigned int v5 = (1334103649 * (((&v4 | 0x64926D11) - (&v4 & 0x64926D11)) ^ 0xC3AA5BF)) ^ (v1 + 1038180572);
  uint64_t v4 = v2;
  return (*((uint64_t (**)(uint64_t *))*(&off_1F26D60E0 + (v1 & 0x40B41531)) + v1 + 1521869523))(&v4);
}

uint64_t sub_1D0AEB810@<X0>(char a1@<W8>)
{
  uint64_t v6 = v1 - 1;
  *(unsigned char *)(v4 + v6) = (((v3 + 27) | 0xC0) ^ a1 ^ (v2 - 122)) * (v2 - 105);
  return (*(uint64_t (**)(void))(v5 + 8 * ((1563 * (v6 == 0)) ^ v3)))();
}

uint64_t sub_1D0AEB85C@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  BOOL v12 = v10 < v7;
  *(unsigned char *)(a2 + (v5 + 1 + v8)) = *(unsigned char *)(v6 + (a4 + v11))
                                               + ((2 * *(unsigned char *)(v6 + (a4 + v11))) & 0xF0 ^ (((a1 - 62) | 1) + 58))
                                               - 7;
  unsigned int v13 = a4 + 1 + v9;
  int v14 = v12 ^ (v13 < v7);
  BOOL v15 = v13 < v10;
  if (!v14) {
    BOOL v12 = v15;
  }
  return (*(uint64_t (**)(void))(a5 + 8 * ((v12 * a3) ^ a1)))();
}

void sub_1D0AEB868(uint64_t a1)
{
  int v1 = 1332649919 * (((a1 | 0x520DF19C) - a1 + (a1 & 0xADF20E63)) ^ 0x6F7E756E);
  int v2 = *(_DWORD *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(_DWORD *)a1 - v1;
  int v5 = *(_DWORD *)(v3 - 0x10B17FC23B8BBE1CLL);
  *(_DWORD *)(v3 - 0x10B17FC23B8BBE1CLL) = v5 + 8 * v4 + 51891272;
  unsigned int v6 = v5 + 8 * v4 - 665144635;
  if ((v5 - 717035907) < 0x3C6FBB00 != v6 < 0x3C6FBB00) {
    BOOL v7 = (v5 - 717035907) < 0x3C6FBB00;
  }
  else {
    BOOL v7 = v6 < v5 - 717035907;
  }
  *(_DWORD *)(v3 - 0x10B17FC23B8BBE18) += ((v4 - 2140997239) >> 29) + v7;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D0AEB9DC(uint64_t result)
{
  *(_DWORD *)(result + 4) = 342975859;
  return result;
}

uint64_t sub_1D0AEB9EC(uint64_t a1)
{
  int v4 = *(unsigned __int8 **)(a1 + 16);
  int v11 = &STACK[0x10B17FC23B8BBD30];
  LODWORD(v12) = v1
               - 1663139771
               * (((&v11 ^ 0x6446D1A4 | 0x4E161F13)
                 - (&v11 ^ 0x6446D1A4)
                 + ((&v11 ^ 0x6446D1A4) & 0xB1E9E0EC)) ^ 0x52B9183A)
               - 1603588162;
  (*(void (**)(unint64_t **))(v3 + 8 * (v1 ^ 0x444)))(&v11);
  unsigned int v5 = 846572393 * (((&v11 | 0xCF47FFB3) - (&v11 & 0xCF47FFB3)) ^ 0xF924ABFA);
  HIDWORD(v13) = v5 + 2002220376;
  LODWORD(v13) = v1 - 656339955 + v5;
  int v11 = &STACK[0x10B17FC23B8BBD30];
  BOOL v12 = &v9[1];
  (*(void (**)(unint64_t **))(v3 + 8 * (v1 ^ 0x44A)))(&v11);
  unsigned int v6 = 846572393 * (((&v11 | 0x62A89791) + (~&v11 | 0x9D57686E)) ^ 0x54CBC3D9);
  HIDWORD(v13) = v6 + 2002220376;
  LODWORD(v13) = v1 - 656339955 + v6;
  int v11 = &STACK[0x10B17FC23B8BBD30];
  BOOL v12 = v9;
  (*(void (**)(unint64_t **))(v3 + 8 * (v1 ^ 0x44A)))(&v11);
  BOOL v7 = &v4[56 * *v4];
  v10[19] = v7[43] ^ 0xF8;
  v10[18] = v7[42] ^ 0xF8;
  v10[17] = v7[41] ^ 0xF8;
  v10[16] = v7[40] ^ 0xF8;
  v10[15] = v7[39] ^ 0xF8;
  v10[14] = v7[38] ^ 0xF8;
  v10[13] = v7[37] ^ 0xF8;
  v10[12] = v7[36] ^ 0xF8;
  v10[11] = v7[35] ^ 0xF8;
  v10[10] = v7[34] ^ 0xF8;
  v10[9] = v7[33] ^ 0xF8;
  v10[8] = v7[32] ^ 0xF8;
  v10[7] = v7[31] ^ 0xF8;
  void v10[6] = v7[30] ^ 0xF8;
  v10[5] = v7[29] ^ 0xF8;
  v10[4] = v7[28] ^ 0xF8;
  v10[3] = v7[27] ^ 0xF8;
  _OWORD v10[2] = v7[26] ^ 0xF8;
  v10[1] = v7[25] ^ 0xF8;
  v10[0] = v7[24] ^ 0xF8;
  int v14 = &STACK[0x10B17FC23B8BBD30];
  int v11 = (unint64_t *)v10;
  uint64_t v13 = v2;
  LODWORD(v12) = v1
               - 839339309 * ((&v11 - 1508852607 - 2 * (&v11 & 0xA610BC81)) ^ 0x1AF1A4E0)
               + 476;
  return (*(uint64_t (**)(unint64_t **))(v3 + 8 * (v1 ^ 0x448)))(&v11);
}

uint64_t sub_1D0AEBCF4@<X0>(int8x16_t *a1@<X0>, int8x16_t *a2@<X1>, int8x16_t *a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,unsigned char *a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  signed int v66 = (v65 + 35361759) & 0xFDE4684F;
  v67.i64[0] = 0x4444444444444444;
  v67.i64[1] = 0x4444444444444444;
  int8x16_t v68 = vmvnq_s8(vandq_s8(vaddq_s8(*a1, *a1), v67));
  v67.i64[0] = 0x2323232323232323;
  v67.i64[1] = 0x2323232323232323;
  *a3 = veorq_s8(vaddq_s8(vaddq_s8(*a1, v67), v68), *a2);
  LODWORD(a48) = (v66 + 804339698) & 0xD00EC376;
  uint64_t v125 = a64 - 0x7AFA2E4D31C59228;
  uint64_t v124 = a64 - 0x7AFA2E4D31C59227;
  uint64_t v127 = a64 - 0x7AFA2E4D31C5923ALL;
  uint64_t v123 = a64 - 0x7AFA2E4D31C58922;
  uint64_t v122 = a64 - 0x7AFA2E4D31C588E2;
  uint64_t v121 = a64 - 0x7AFA2E4D31C588A2;
  uint64_t v120 = a64 - 0x7AFA2E4D31C58862;
  uint64_t v119 = a64 - 0x7AFA2E4D31C588D2;
  uint64_t v118 = a64 - 0x7AFA2E4D31C58892;
  uint64_t v117 = a64 - 0x7AFA2E4D31C58852;
  uint64_t v116 = a64 - 0x7AFA2E4D31C58912;
  uint64_t v115 = a64 - 0x7AFA2E4D31C58882;
  uint64_t v114 = a64 - 0x7AFA2E4D31C58902;
  uint64_t v113 = a64 - 0x7AFA2E4D31C58842;
  uint64_t v112 = a64 - 0x7AFA2E4D31C588C2;
  uint64_t v111 = a64 - 0x7AFA2E4D31C58872;
  uint64_t v110 = a64 - 0x7AFA2E4D31C588B2;
  uint64_t v109 = a64 - 0x7AFA2E4D31C588F2;
  uint64_t v108 = a64 - 0x7AFA2E4D31C58832;
  unint64_t v107 = (void *)(a64 - 0x7AFA2E4D31C59222);
  STACK[0x200] = 0;
  uint64_t v126 = *(void *)(a65 + 8 * v66);
  unsigned int v69 = *(unsigned __int8 *)(a64 - 0x7AFA2E4D31C59227);
  BOOL v130 = v69 != 30;
  LODWORD(a39) = *(unsigned __int8 *)(a64 - 0x7AFA2E4D31C59228) ^ 0x1F;
  v69 ^= 0x1Fu;
  uint64_t v129 = 2 % v69;
  unint64_t v136 = (unsigned char *)(a32 - 0x51B785786A38B801);
  unint64_t v137 = (unsigned char *)(a32 - 0x51B785786A38B7FDLL);
  uint64_t v70 = *(unsigned __int8 *)(a32 - 0x51B785786A38B7FDLL);
  unint64_t v138 = (unsigned char *)(a32 - 0x51B785786A38B7F9);
  unint64_t v139 = (unsigned char *)(a32 - 0x51B785786A38B800);
  uint64_t v71 = *(unsigned __int8 *)(a32 - 0x51B785786A38B7F9);
  uint64_t v147 = (unsigned char *)(a32 - 0x51B785786A38B7F5);
  unint64_t v148 = (unsigned char *)(a32 - 0x51B785786A38B7F8);
  uint64_t v72 = *(unsigned __int8 *)(a32 - 0x51B785786A38B7F5);
  uint64_t v73 = *(unsigned __int8 *)(a32 - 0x51B785786A38B800);
  uint64_t v140 = (unsigned char *)(a32 - 0x51B785786A38B7FCLL);
  uint64_t v141 = (unsigned char *)(a32 - 0x51B785786A38B7F4);
  uint64_t v74 = *(unsigned __int8 *)(a32 - 0x51B785786A38B7FCLL);
  uint64_t v75 = *(unsigned __int8 *)(a32 - 0x51B785786A38B7F8);
  uint64_t v76 = *(unsigned __int8 *)(a32 - 0x51B785786A38B7F4);
  uint64_t v128 = 3 % v69;
  unint64_t v142 = (unsigned char *)(a32 - 0x51B785786A38B7FFLL);
  unint64_t v143 = (unsigned char *)(a32 - 0x51B785786A38B7F7);
  uint64_t v77 = *(unsigned __int8 *)(a32 - 0x51B785786A38B7FFLL);
  uint64_t v78 = *(unsigned __int8 *)(a32 - 0x51B785786A38B7F7);
  unint64_t v131 = (unsigned char *)(a32 - 0x51B785786A38B7FBLL);
  unint64_t v132 = (unsigned char *)(a32 - 0x51B785786A38B7FELL);
  uint64_t v79 = *(unsigned __int8 *)(a32 - 0x51B785786A38B7FBLL);
  uint64_t v149 = (unsigned char *)(a32 - 0x51B785786A38B7F3);
  uint64_t v80 = *(unsigned __int8 *)(a32 - 0x51B785786A38B7F3);
  unint64_t v144 = (unsigned char *)(a32 - 0x51B785786A38B7F2);
  unint64_t v145 = (unsigned char *)(a32 - 0x51B785786A38B7F6);
  uint64_t v81 = *(unsigned __int8 *)(a32 - 0x51B785786A38B7F2);
  uint64_t v82 = *(unsigned __int8 *)(a32 - 0x51B785786A38B7F6);
  unint64_t v146 = (unsigned char *)(a32 - 0x51B785786A38B7FALL);
  uint64_t v83 = *(unsigned __int8 *)(a32 - 0x51B785786A38B7FALL);
  uint64_t v84 = *(unsigned __int8 *)(a32 - 0x51B785786A38B7FELL);
  uint64_t v85 = *(unsigned __int8 *)(*v107 + *(unsigned __int8 *)(a32 - 0x51B785786A38B801));
  *unint64_t v136 = v85;
  uint64_t v86 = *(unsigned __int8 *)(v107[4] + v70);
  *unint64_t v137 = v86;
  uint64_t v87 = *(unsigned __int8 *)(v107[8] + v71);
  unsigned char *v138 = v87;
  uint64_t v135 = *(unsigned __int8 *)(v107[12] + v72);
  *uint64_t v147 = v135;
  uint64_t v88 = *(unsigned __int8 *)(v107[5] + v74);
  *unint64_t v139 = v88;
  uint64_t v89 = *(unsigned __int8 *)(v107[9] + v75);
  unsigned char *v140 = v89;
  uint64_t v90 = *(unsigned __int8 *)(v107[13] + v76);
  *unint64_t v148 = v90;
  uint64_t v134 = *(unsigned __int8 *)(v107[1] + v73);
  *uint64_t v141 = v134;
  uint64_t v91 = *(unsigned __int8 *)(v107[10] + v78);
  *unint64_t v142 = v91;
  uint64_t v92 = *(unsigned __int8 *)(v107[2] + v77);
  *unint64_t v143 = v92;
  uint64_t v93 = *(unsigned __int8 *)(v107[14] + v80);
  *unint64_t v131 = v93;
  uint64_t v133 = *(unsigned __int8 *)(v107[6] + v79);
  *uint64_t v149 = v133;
  uint64_t v94 = *(unsigned __int8 *)(v107[11] + v82);
  *unint64_t v144 = v94;
  uint64_t v95 = *(unsigned __int8 *)(v107[7] + v83);
  *unint64_t v145 = v95;
  uint64_t v96 = *(unsigned __int8 *)(v107[3] + v84);
  *unint64_t v146 = v96;
  uint64_t v97 = *(unsigned __int8 *)(v107[15] + v81);
  *unint64_t v132 = v97;
  unint64_t v98 = (void *)(v127 + ((unint64_t)(STACK[0x200] % a39) << 7));
  BOOL v99 = v98 + 147;
  LODWORD(v88) = *(_DWORD *)(v98[148] + 4 * v88) ^ *(_DWORD *)(v98[147] + 4 * v85) ^ *(_DWORD *)(v98[149] + 4 * v91) ^ *(_DWORD *)(v98[150] + 4 * v97);
  *unint64_t v132 = BYTE3(v88);
  *unint64_t v142 = BYTE2(v88);
  *unint64_t v139 = BYTE1(v88);
  *unint64_t v136 = v88;
  uint64_t v100 = &v98[4 * v130 + 147];
  LODWORD(v89) = *(_DWORD *)(v100[1] + 4 * v89) ^ *(_DWORD *)(*v100 + 4 * v86) ^ *(_DWORD *)(v100[2] + 4 * v93) ^ *(_DWORD *)(v100[3] + 4 * v96);
  *unint64_t v146 = BYTE3(v89);
  LODWORD(v98) = v89 >> (((a48 - 118) | 0x18) - 8);
  *unint64_t v131 = (_BYTE)v98;
  unsigned char *v140 = BYTE1(v89);
  *unint64_t v137 = v89;
  LODWORD(v95) = *(_DWORD *)(v99[4 * v129 + 1] + 4 * v90) ^ *(_DWORD *)(v99[4 * v129] + 4 * v87) ^ *(_DWORD *)(v99[4 * v129 + 2] + 4 * v92) ^ *(_DWORD *)(v99[4 * v129 + 3] + 4 * v95);
  LODWORD(a46) = BYTE3(v95);
  *unint64_t v145 = BYTE3(v95);
  *unint64_t v143 = BYTE2(v95);
  *unint64_t v148 = BYTE1(v95);
  unsigned char *v138 = v95;
  LODWORD(v86) = *(_DWORD *)(v99[4 * v128 + 1] + 4 * v134) ^ *(_DWORD *)(v99[4 * v128] + 4 * v135) ^ *(_DWORD *)(v99[4 * v128 + 2] + 4 * v133) ^ *(_DWORD *)(v99[4 * v128 + 3] + 4 * v94);
  *unint64_t v144 = BYTE3(v86);
  *uint64_t v149 = BYTE2(v86);
  *uint64_t v141 = BYTE1(v86);
  *uint64_t v147 = v86;
  *unint64_t v136 = *a43 ^ v88;
  LOBYTE(v94) = a43[1] ^ BYTE1(v88);
  *unint64_t v139 = v94;
  *unint64_t v142 = a43[2] ^ BYTE2(v88);
  *unint64_t v132 = a43[3] ^ BYTE3(v88);
  LOBYTE(v92) = a43[4] ^ v89;
  *unint64_t v137 = v92;
  uint64_t v101 = a43[5] ^ (v89 >> 8);
  unsigned char *v140 = a43[5] ^ BYTE1(v89);
  *unint64_t v131 = a43[6] ^ v98;
  *unint64_t v146 = a43[7] ^ BYTE3(v89);
  unsigned char *v138 = a43[8] ^ v95;
  *unint64_t v148 = a43[9] ^ BYTE1(v95);
  uint64_t v102 = a43[10] ^ WORD1(v95);
  *unint64_t v143 = a43[10] ^ BYTE2(v95);
  *unint64_t v145 = a43[11] ^ BYTE3(v95);
  uint64_t v103 = a43[12] ^ v86;
  *uint64_t v147 = a43[12] ^ v86;
  uint64_t v104 = a43[13] ^ (v86 >> 8);
  *uint64_t v141 = a43[13] ^ BYTE1(v86);
  uint64_t v105 = a43[14] ^ WORD1(v86);
  *uint64_t v149 = a43[14] ^ BYTE2(v86);
  *unint64_t v144 = a43[15] ^ BYTE3(v86);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, BOOL, uint64_t, uint64_t, unsigned char *, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a65 + 8 * (int)((228 * (STACK[0x200] == 8)) ^ a48)))(v101, v103, v104, v102, v94, v102, v92, v105, v107, v108, v109, v110, v111, v112, v113, v114, v115, v116, v117,
           v118,
           v119,
           a17,
           v120,
           v121,
           v122,
           v123,
           v124,
           v125,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           v126,
           a32,
           a33,
           a34,
           a35,
           v127,
           v128,
           v129,
           a39,
           v130,
           a32 - 0x51B785786A38B7FBLL,
           a32 - 0x51B785786A38B7FELL,
           a43,
           v133,
           v134,
           a46,
           BYTE3(v86),
           a48,
           a32 - 0x51B785786A38B801,
           a32 - 0x51B785786A38B7FDLL,
           a32 - 0x51B785786A38B7F9,
           a32 - 0x51B785786A38B800,
           a32 - 0x51B785786A38B7FCLL,
           a32 - 0x51B785786A38B7F4,
           a32 - 0x51B785786A38B7FFLL,
           a32 - 0x51B785786A38B7F7,
           a57,
           a58);
}

uint64_t sub_1D0AECF14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v6 = a1 - 1;
  *(unsigned char *)(v4 + v6) = (v3 ^ (v1 - 69) ^ 0x76) * (v1 - 52);
  return (*(uint64_t (**)(void))(v5 + 8 * (((v6 != 0) * v2) ^ v3)))();
}

uint64_t sub_1D0AECF50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t))(v6
                                            + 8
                                            * ((((((a5 - 717366454) & 0x2AC221EF) + 32) ^ (a5 - 721)) * (a4 == v5)) ^ a5)))(a4);
}

uint64_t sub_1D0AECF94@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v4 + a1 + 24) = 0;
  return (*(uint64_t (**)(void))(v2 + 8 * (((a1 == 48) * v1) ^ v3)))();
}

uint64_t sub_1D0AECFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, uint64_t a18, void *a19, _DWORD *a20)
{
  *int v25 = v21 + 1;
  unsigned int v26 = ((v20 ^ (v20 >> 11)) << 7) & 0x9D2C5680 ^ v20 ^ (v20 >> 11);
  uint64_t v27 = (unsigned char *)(a16 + (a17 - 1));
  unsigned int v28 = 1513389751 * ((*(_DWORD *)(*a19 + (*a20 & 0x5DE1B3FC)) ^ v27) & 0x7FFFFFFF);
  unint64_t v29 = 1513389751 * (v28 ^ HIWORD(v28));
  unint64_t v30 = v29 >> (((v22 ^ 0x91) - 19) ^ 0xF3u);
  char v31 = *(unsigned char *)(*(void *)(v23 + 8 * (v22 ^ 0x3FB)) + v30 - 4) ^ v26 ^ (((v26 << ((v22 ^ 0x91) + 17)) & 0xEFC60000 ^ v26) >> 18) ^ *(unsigned char *)(*(void *)(v23 + 8 * ((v22 ^ 0x191) - 652)) + v30) ^ *(unsigned char *)(*(void *)(v23 + 8 * (v22 ^ 0x3E0)) + v30 - 2) ^ v29 ^ (-67 * v30);
  *uint64_t v27 = v31;
  return (*(uint64_t (**)(void))(v24 + 8 * ((394 * (a17 != (v31 != 0))) ^ v22 ^ 0x191)))();
}

uint64_t sub_1D0AED100()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((*(void *)(v1 + 24) == 0) * (((v0 + 457) ^ 0x47B) - 488)) ^ v0)))();
}

uint64_t sub_1D0AED134()
{
  return (v0 - 445404065);
}

uint64_t sub_1D0AED17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v73 = v72 - 168;
  *(_DWORD *)(v72 - 160) = (1334103649 * ((v72 + 347743592 - 2 * ((v72 - 168) & 0x14BA2610)) ^ 0x7C12EEBE)) ^ 0xE32B83C7;
  *(void *)(v72 - 168) = a66;
  (*(void (**)(uint64_t))(v71 + 11760))(v72 - 168);
  unsigned int v74 = 1332649919 * ((v73 & 0x82C0CDE3 | ~(v73 | 0x82C0CDE3)) ^ 0x404CB6EE);
  *(_DWORD *)(v72 - 168) = v74 + 2140997303;
  *(void *)(v72 - 160) = *(void *)(v70 + 664) - 4;
  *(void *)(v72 - 144) = a66;
  *(_DWORD *)(v72 - 152) = v74 + 1183;
  (*(void (**)(uint64_t))(v71 + 12320))(v72 - 168);
  unsigned int v75 = 1332649919 * ((((2 * v73) | 0xD655631C) - v73 + 349523570) ^ 0xD659357C);
  *(void *)(v72 - 144) = a66;
  *(_DWORD *)(v72 - 168) = v75 + 2140997288;
  *(void *)(v72 - 160) = a67;
  *(_DWORD *)(v72 - 152) = v75 + 1183;
  (*(void (**)(uint64_t))(v71 + 12320))(v72 - 168);
  STACK[0x200] = a66 - 0x10B17FC23B8BBE28;
  *(_DWORD *)(a70 - 0x10B17FC23B8BBE2CLL) = *(_DWORD *)(a66 - 0x10B17FC23B8BBE2CLL);
  *(_DWORD *)(a70 - 0x10B17FC23B8BBE28) = *(_DWORD *)STACK[0x200];
  *(_DWORD *)(a70 - 0x10B17FC23B8BBE24) = *(_DWORD *)(a66 - 0x10B17FC23B8BBE24);
  *(_DWORD *)(a70 - 0x10B17FC23B8BBE20) = *(_DWORD *)(a66 - 0x10B17FC23B8BBE20);
  *(_DWORD *)(a70 - 0x10B17FC23B8BBE1CLL) = *(_DWORD *)(a66 - 0x10B17FC23B8BBE1CLL);
  *(_DWORD *)(a70 - 0x10B17FC23B8BBE18) = *(_DWORD *)(a66 - 0x10B17FC23B8BBE18);
  return (*(uint64_t (**)(uint64_t))(v71 + 8 * ((94 * ((unint64_t)(a70 - a66) < 0x10)) ^ 0x53C)))(208);
}

uint64_t sub_1D0AED444()
{
  *(void *)(v2 + v1 + v4 - 0x10B17FC23B8BBE13) = 0;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v2 - (v0 & 0xFFFFFFF8) == -8) * (v3 + 962)) ^ v3)))();
}

uint64_t sub_1D0AED498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54,int a55,int a56)
{
  return (*(uint64_t (**)(void))(v56 + 8 * ((442 * (a55 + a56 + a54 == ((v57 - 1235396223) ^ (17 * v57)))) ^ v57)))();
}

uint64_t sub_1D0AED4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  v35[398] = a14;
  *(_DWORD *)(v36 - 136) = (v34 - 483688192) ^ (1334103649
                                              * ((((v36 - 144) | 0x3FDCBAD1) + (~(v36 - 144) | 0xC023452E)) ^ 0x5774727E));
  (*(void (**)(uint64_t))(a2 + 8 * (v34 + 759)))(v36 - 144);
  int v37 = 1332649919 * ((v36 + 1418421659 - 2 * ((v36 - 144) & 0x548B662B)) ^ 0x69F8E2D9);
  v35[399] = (char *)*(&off_1F26D60E0 + v34 - 628) - 4;
  v35[401] = a14;
  *(_DWORD *)(v36 - 144) = v37 + 2140997303;
  *(_DWORD *)(v36 - 128) = v34 + 472 + v37;
  (*(void (**)(uint64_t))(a34 + 8 * (v34 ^ 0x4C3)))(v36 - 144);
  int v38 = 1332649919 * ((~((v36 - 144) | 0x20BBFF9) + ((v36 - 144) & 0x20BBFF9)) ^ 0xC087C4F4);
  v35[401] = a14;
  v35[399] = a20;
  *(_DWORD *)(v36 - 144) = v38 + 2140997259;
  *(_DWORD *)(v36 - 128) = v34 + 472 + v38;
  uint64_t v39 = (*(uint64_t (**)(uint64_t))(a34 + 8 * (v34 + 829)))(v36 - 144);
  v35[368] = v35[357];
  LODWORD(STACK[0xC78]) = STACK[0xC20];
  STACK[0xC7C] = STACK[0xC24];
  LODWORD(STACK[0xC84]) = STACK[0xC2C];
  return sub_1D0AED6A8(v39, a34);
}

uint64_t sub_1D0AED6A8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_OWORD *)(v4 + a2 + 24) = *(_OWORD *)(v3 + a2 + 24);
  return (*(uint64_t (**)(void))(a1 + 8 * (((a2 + 7 * (v2 ^ v5) == 734) * v6) ^ v2)))();
}

uint64_t sub_1D0AED6EC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((118 * (v2 + v0 + ((4 * v1) ^ 0xF08210F5) >= ((v1 - 565) | 0x121u) - 929)) ^ v1)))();
}

uint64_t sub_1D0AED740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, void))(v7
                                                    + 8
                                                    * (((((((a5 - 952) | 0x247) - 815) & v5) == 0)
                                                      * (((a5 - 888) | 0xA1) ^ 0x1E7)) ^ a5)))(a1, (v6 - a1));
}

uint64_t sub_1D0AED784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,unsigned char *a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  a45[128] = v57[12];
  a45[129] = v57[4];
  a45[131] = v57[13];
  uint64_t v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8 * ((v59 + 231) ^ 0x780)))(142, 2932825243);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v58
                                                             + 8
                                                             * (((((5 * ((v59 - 25) ^ 0xAA)) ^ (v60 == 0)) & 1)
                                                               * (69 * ((v59 + 231) ^ 0x19B) - 633)) ^ (v59 + 231))))(a44, &a57, a43);
}

uint64_t sub_1D0AED818@<X0>(int a1@<W3>, int a2@<W8>)
{
  void *v2 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * a1) ^ a2)))();
}

uint64_t sub_1D0AED83C(uint64_t a1)
{
  int v1 = 1449114341 * ((2 * (a1 & 0x598F067E) - a1 + 644938113) ^ 0xE92E006A);
  int v2 = *(_DWORD *)(a1 + 12) ^ v1;
  unsigned int v3 = (*(_DWORD *)(a1 + 8) ^ v1) - 801945181;
  unsigned int v4 = v3 + (*(_DWORD *)(*(void *)a1 - 0x17B29E1307D11810) ^ 0x4E621576);
  unsigned int v5 = v4 - ((2 * v4) & 0x9CC42AEC) + 1315050870;
  *(_DWORD *)(*(void *)a1 - 0x17B29E1307D11810) = v5;
  return (*((uint64_t (**)(void))*(&off_1F26D60E0 + (v2 ^ 0x33F)) + ((249 * ((v5 ^ 0x4E621576) < v3)) ^ v2)))();
}

uint64_t sub_1D0AED904@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v1 ^ (792 * a1))))();
}

void sub_1D0AED91C(uint64_t a1)
{
  BOOL v4 = *(void *)(a1 + 16) == 0x6E2E237C8C7936AALL || *(void *)(a1 + 48) == 0 || *(void *)(a1 + 32) == 0;
  int v1 = *(_DWORD *)(a1 + 24) ^ (1332649919 * (a1 ^ 0x3D7384F2));
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1D0AED9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, uint64_t a18, uint64_t a19, int a20)
{
  unsigned int v23 = 515566439 * ((((2 * &a18) | 0x23644F9A) - &a18 + 1850595379) ^ 0xFD66206A);
  a18 = v22;
  LODWORD(a19) = 849653939 - v23;
  HIDWORD(a19) = (v21 + 451) ^ v23;
  (*(void (**)(uint64_t *))(v20 + 8 * (v21 + 735)))(&a18);
  a18 = v22;
  a19 = a12;
  a20 = 1580882533 * (((&a18 | 0x99EA66D2) - (&a18 & 0x99EA66D2)) ^ 0x72D512)
      + 2088559408
      + v21;
  uint64_t v24 = (*(uint64_t (**)(uint64_t *))(v20 + 8 * (v21 ^ 0x6DC)))(&a18);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * ((((7 * (v21 ^ 0x3BF)) ^ 0x32F)
                                              * ((a17 - 2140997367) > 0xFFFFFFBF)) ^ v21)))(v24);
}

uint64_t sub_1D0AEDB14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((227 * (a6 + 1 != v8 + 80)) ^ v6)))();
}

uint64_t sub_1D0AEDBD4@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W4>, uint64_t a4@<X8>)
{
  *(unsigned char *)(v5 + v6 + a1 + a4 - 34) = a2;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((unint64_t)(v5 + v6) < 0x40) * a3) ^ v4)))();
}

uint64_t sub_1D0AEDC04(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,_DWORD *a30,_DWORD *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v52 = a3 + 321;
  int v50 = 1477295531 * ((v49 + 1269088764 - 2 * ((v49 - 136) & 0x4BA4C284)) ^ 0x7CAFF7D7);
  *(_DWORD *)(v49 - 132) = ((a3 + 321) ^ 0x4462BA74 ^ *a30) + v50;
  *(_DWORD *)(v49 - 128) = a3 - v50 + 209736534;
  *(void *)(v49 - 120) = a48;
  (*(void (**)(uint64_t))(v48 + 8 * (a3 + 1548)))(v49 - 136);
  return (*(uint64_t (**)(uint64_t))(v48
                                            + 8
                                            * ((1273
                                              * ((((v52 ^ 0x198) + 586) ^ 0x328 ^ (2 * *a31) & 0x6E)
                                               + (*a31 & 0x3F ^ 0xAFADDE41)
                                               + 1347559817 < 0xFFFFFFC0)) ^ v52)))(1061342770);
}

uint64_t sub_1D0AEDD64@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  BOOL v11 = v8 > 0x60DDB07C;
  *(unsigned char *)(a2 + (a1 - 1635265500)) = *(unsigned char *)(v4 + (((_BYTE)a1 + 36) & 0xF)) ^ *(unsigned char *)(v3 + (a1 - 1635265500)) ^ *(unsigned char *)(v6 + (((_BYTE)a1 + 36) & 0xF)) ^ *(unsigned char *)(((v7 - 1049) | 0x502u) + v5 + (((_BYTE)a1 + 36) & 0xF) - 1297) ^ (23 * ((a1 + 36) & 0xF));
  unsigned int v12 = a1 + 1034560424;
  uint64_t v13 = (a1 + 1);
  int v14 = v11 ^ (v12 < v2);
  BOOL v15 = v12 < v9;
  if (!v14) {
    BOOL v11 = v15;
  }
  return (*(uint64_t (**)(uint64_t))(v10 + 8 * ((99 * v11) ^ v7)))(v13);
}

uint64_t sub_1D0AEDE10@<X0>(int a1@<W8>)
{
  uint64_t v2 = (*(uint64_t (**)(void))(v1 + 8 * (a1 ^ 0x6BFu)))();
  return sub_1D0AEDE2C(v2);
}

uint64_t sub_1D0AEDE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v13 = (v12 - 9);
  unint64_t v14 = ((v13 - 0x6403357604809891) ^ (unint64_t)&a10)
      + ((2 * (void)&a10) & 0x37F99513F6FED6F0)
      + 0x6DCF3DF6F6ADFED7;
  *(unsigned char *)(v10 + 263) = ((v14 + (((v12 - 6) | 0x4A) ^ 0xF7)) ^ 0xBA) * (v14 - 67);
  *(unsigned char *)(v10 + 262) = ((v14 - 83) ^ 0xBA) * (v14 - 66);
  return (*(uint64_t (**)(void))(v11 + 8 * (int)(v13 ^ 0x19)))();
}

uint64_t sub_1D0AEDEEC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1985 * (((v0 == v1) ^ (v2 + 1)) & 1)) ^ v2)))();
}

void sub_1D0AEE08C()
{
}

uint64_t sub_1D0AEE094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 != 208) * ((a6 - 25) ^ v7)) ^ a6)))();
}

uint64_t sub_1D0AEE0BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29)
{
  BOOL v33 = (v29 - 1882205232) > 0x329F894 && v29 - 1882205232 < (v30 ^ 0xE2F55451) + a29;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * ((v33 * (v30 + 945)) ^ v30)))(a1, a2, a3, 2303802511);
}

uint64_t sub_1D0AEE124(_DWORD *a1)
{
  int *v1 = *a1 ^ 0x772DF765;
  unsigned int v5 = (*a1 ^ 0x772DF765) + ((v4 + ((v3 - 144) | 2) - 574) ^ 0xF44D8328) - ((2 * (*a1 ^ 0x772DF765)) & 0x169D32C8);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((497
                                * (((2 * v5) & 0xDED7BBFE ^ 0x169532C8) + (v5 ^ 0xE425449B) + 1994325909 == 1716182420)) ^ v3)))();
}

uint64_t sub_1D0AEE1D4(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((a2 - 607 + ((a2 - 782190994) & 0x2E9F45FE) - 992) * (v2 == v3)) ^ a2)))();
}

void sub_1D0AEE214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v21 = 1477295531 * ((2 * ((v20 - 144) & 0x7CDC2998) - (v20 - 144) - 2094803354) ^ 0xB428E335);
  *(void *)(v20 - 128) = a18;
  *(_DWORD *)(v20 - 140) = v21 + 358377246;
  *(_DWORD *)(v20 - 136) = 209736385 - v21 + v18;
  (*(void (**)(uint64_t))(v19 + 8 * (v18 + 1399)))(v20 - 144);
  JUMPOUT(0x1D0AF8C9CLL);
}

void sub_1D0AEE2E8()
{
}

uint64_t sub_1D0AEE308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  HIDWORD(a21) = v23;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * (((v23 == ((v22 + 1795163768) & 0x94FFFBEB ^ (v21 + 508))) * (((v22 + 1368) | 0x80) ^ 0x16E)) ^ v22)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, v25,
           v24,
           a21);
}

uint64_t sub_1D0AEE36C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((37 * (v1 ^ 0x5F2)) ^ 0x2AC) * (v2 != v0)) ^ v1)))();
}

uint64_t sub_1D0AEE3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  char v62 = *(unsigned char *)(v57 + 12);
  *(unsigned char *)(v61 - 140) = (v60 - 42) ^ (45 * ((v61 + 112) ^ 0x61)) ^ (((((v60 + 61) & 0x3F) - 117) ^ v58)
                                                                    + ((2 * (v58 ^ 0x27)) & 0x2A));
  *(unsigned char *)(v61 - 139) = 45 * ((v61 + 112) ^ 0x61) + (v62 ^ 0xBF) + 2 * (v62 & 0x3F) + 102;
  *(_DWORD *)(v61 - 144) = (v60 + 312884363) ^ (839339309 * ((v61 - 144) ^ 0xBCE11861));
  (*(void (**)(uint64_t))(v59 + 8 * (v60 ^ 0x69D)))(v61 - 144);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v59
                                                             + 8
                                                             * ((1214 * (*(_DWORD *)(v61 - 136) == 343018756)) ^ v60)))(a1, &a57, a3);
}

uint64_t sub_1D0AEE48C@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W8>)
{
  *(unsigned char *)(v4 + (a1 - 1716182421)) = *(unsigned char *)(v3 + (a1 - 1716182421));
  return (*(uint64_t (**)(void))(v5 + 8 * ((25 * ((((a2 - 855439623) | 0x3200100C) ^ (v6 - 27)) + a1 == a3)) ^ a2)))();
}

uint64_t sub_1D0AEE4E4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v21 = v16 - a1;
  int v22 = 839339309 * ((v20 - 168) ^ 0xBCE11861);
  *(void *)(v20 - 160) = a16;
  *(void *)(v20 - 152) = v21;
  *(void *)(v20 - 136) = v17;
  *(_DWORD *)(v20 - 168) = v22 + v18 + 198;
  *(_DWORD *)(v20 - 144) = v22 ^ 0x1892F8D0;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v18 ^ 0x472)))(v20 - 168);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * (int)(((*(_DWORD *)(v20 - 164) == 343018756)
                                                   * (((v18 + 1143275125) | 0x81100918) ^ 0xC5350D65)) ^ v18)))(v23);
}

uint64_t sub_1D0AEE5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29)
{
  return (*(uint64_t (**)(void))(v31
                              + 8
                              * (((a29 - v29 + (((v30 ^ 0x33E) - 1985326208) & 0x7655AEFF ^ 0x532581BEu) > 6)
                                * ((v30 ^ 0x4E) - 547)) ^ v30 ^ 0x33E)))();
}

uint64_t sub_1D0AEE634(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((a4 - 1273301285) & 0x4BE50DFF) - 1423)
                                * (LODWORD(STACK[0x31C]) != LODWORD(STACK[0x310]))) ^ a4)))();
}

void sub_1D0AEE67C()
{
}

void sub_1D0AEE688()
{
}

uint64_t sub_1D0AEE69C@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + v4) = 0;
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v6 ^ 0xBF) + v4 != v1) * v2) ^ v3)))();
}

uint64_t sub_1D0AEE6C8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((43
                                * ((unint64_t)(373697601 - v0) - 373697537 < (unint64_t)(((v1 - 758) | 0x1A0) + 416)
                                                                                                - 918)) ^ v1)))();
}

uint64_t sub_1D0AEE728@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(v1 - 0x587910004978A29CLL) = 0;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((*(unsigned char *)(v3 - 0x7AFA2E4D31C59229) == 30)
                                     * (((v2 + 1923980849) & 0x8D52653F) - 945)) ^ v2)))();
}

uint64_t sub_1D0AEE790(double a1, int8x16_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int8x16_t a17, int32x4_t a18, int8x16_t a19, int8x16_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int8x16_t a47,int8x16_t a48,int8x16_t a49,int8x16_t a50,int8x16_t a51,int8x16_t a52,int8x16_t a53,int8x16_t a54,int8x16_t a55,int32x4_t a56)
{
  int8x16_t v60 = (int8x16_t)vld1q_dup_f32((const float *)v57);
  v61.i64[0] = 0x8000000080000000;
  v61.i64[1] = 0x8000000080000000;
  v62.i64[0] = -1;
  v62.i64[1] = -1;
  v63.i64[0] = 0x100000001;
  v63.i64[1] = 0x100000001;
  a2.i64[0] = *(void *)(v57 + 4);
  a2.i32[2] = *(_DWORD *)(v57 + 12);
  int8x16_t v64 = vextq_s8(v60, a2, 0xCuLL);
  int8x16_t v65 = a2;
  v65.i32[3] = *(_DWORD *)(v57 + 16);
  int8x16_t v66 = (int8x16_t)vaddq_s32((int32x4_t)vandq_s8(v64, v61), a56);
  int8x16_t v67 = veorq_s8(v65, a55);
  int8x16_t v68 = vandq_s8(v67, a54);
  int8x16_t v69 = veorq_s8((int8x16_t)vaddq_s32((int32x4_t)vornq_s8(a52, v68), (int32x4_t)vorrq_s8(v68, a53)), veorq_s8(vandq_s8(v67, a51), v63));
  int32x4_t v70 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v69, a50), a49), (int32x4_t)veorq_s8(vandq_s8(v69, a48), a47)), v62), a20);
  v68.i32[0] = *(_DWORD *)(v56 + 4 * (*(unsigned int *)(v57 + 4) & (((v58 ^ 0x345u) + 31) ^ 0x301)));
  v68.i32[1] = *(_DWORD *)(v56 + 4 * (*(_DWORD *)(v57 + 8) & 1));
  v68.i32[2] = *(_DWORD *)(v56 + 4 * (*(_DWORD *)(v57 + 12) & 1));
  v68.i32[3] = *(_DWORD *)(v56 + 4 * (v65.i8[12] & 1));
  *(int8x16_t *)uint64_t v57 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v57 + 1588), v68), a17), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)v70, veorq_s8(v66, (int8x16_t)a56)), (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v70, v70), a19)), a18), 1uLL));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8 * (v58 ^ 0x345)))(-566630557, 3541248029, 3512851891, 161617499, 4133349796, 2765949946, 2998299265, 2424455681);
}

uint64_t sub_1D0AEE798()
{
  BOOL v1 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 12424))(200, 1616997413) == 0;
  return (*(uint64_t (**)(void))(v0 + 8 * ((45 * v1) ^ 0x157u)))();
}

uint64_t sub_1D0AEE7E0()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 + 1275)))(16, 962668376) == 0;
  return (*(uint64_t (**)(void))(v0 + 8 * (v2 ^ v1)))();
}

uint64_t sub_1D0AEE820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = (v7 + 1) & 0x1FFFFFFF0;
  *(_OWORD *)(a6 + (v8 - 2055391485)) = *v10;
  int v12 = ((v6 - 1201227888) & 0x4799469F ^ 0x285) == v11;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * (((32 * v12) | (v12 << 7)) ^ v6)))(a1, a2, a3, v11 + 904285136);
}

uint64_t sub_1D0AEE898@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((1342 * (a2 == ((a19 - 791) ^ 0x14720C20))) ^ a5)))();
}

void sub_1D0AEE8D4(uint64_t a1)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1D0AEE92C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  (*(void (**)(char *))(v44 + 8 * (v43 + 1235)))((char *)*(&off_1F26D60E0 + v43 - 266) - 8);
  (*(void (**)(char *, unint64_t *, uint64_t))(v44 + 8 * (v43 + 1235)))((char *)*(&off_1F26D60E0 + (v43 ^ 0x1A7)) - 8, &STACK[0xC58], 16);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 8 * ((230 * (a16 != -14)) ^ (v43 + 579))))(a16, v45, v46, v47, v48, v49, v50, v51, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           &STACK[0xBC8],
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_1D0AEEA80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((244 * (a8 ^ 0x558)) ^ (a8 - 788)) * (v9 == v10)) ^ a8)))();
}

void U4HBs()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = *(&off_1F26D60E0
       + (*((unsigned char *)off_1F26D6128
                           + (*((unsigned __int8 *)off_1F26D6138
                              + (99 * ((dword_1EA629A98 - dword_1EA634B08) ^ 0x56))
                              - 12) ^ 0x10u)
                           - 4) ^ (99 * ((dword_1EA629A98 - dword_1EA634B08) ^ 0x56)))
       - 5);
  unsigned __int8 v1 = 99 * ((dword_1EA629A98 + *v0) ^ 0x56);
  BOOL v2 = *(&off_1F26D60E0
       + (*((unsigned char *)off_1F26D6440 + (*((unsigned __int8 *)off_1F26D6408 + v1 - 8) ^ 0x2Eu) - 8) ^ v1)
       - 149);
  unint64_t v3 = (unint64_t)&v5[*v0 + *v2];
  *uint64_t v0 = 170569571 * (v3 - 0x653207D96BFD6456);
  void *v2 = 170569571 * (v3 ^ 0x653207D96BFD6456);
  v6[1] = 291625862
        - 1334103649
        * ((-1357713663 - (v6 ^ 0x9C4B1B06 | 0xAF12EF01) + (v6 ^ 0x9C4B1B06 | 0x50ED10FE)) ^ 0xA40EC356);
  LOBYTE(v2) = 99 * ((*(_DWORD *)v2 - *(_DWORD *)v0) ^ 0x56);
  uint64_t v4 = (uint64_t)*(&off_1F26D60E0
                + ((99 * (dword_1EA634B08 ^ 0x56 ^ dword_1EA629A98)) ^ byte_1D0B8BA60[byte_1D0B97E70[(99 * (dword_1EA634B08 ^ 0x56 ^ dword_1EA629A98))] ^ 0xF0])
                - 10);
  (*(void (**)(_DWORD *))(v4
                                   + 8
                                   * ((*((unsigned char *)off_1F26D6318
                                                                      + (*((unsigned __int8 *)off_1F26D61C0
                                                                         + v2
                                                                         - 12) ^ 3u)
                                                                      - 12) ^ v2)
                                    + 1348)))(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D0AEECEC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v1 ^ (16 * (v0 + 1 == v3 + 20)))))();
}

uint64_t sub_1D0AEEDC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * ((27
                                * ((v11 & (2 * (v8 + 585859357 + v9 - 28)) ^ v12)
                                 + ((v8 + 585859357 + v9 - 28) ^ a8)
                                 + a7 == ((3 * (((v10 + 658) | 0x9C) ^ 0x55E)) ^ 0x361C87E))) ^ v10)))();
}

uint64_t sub_1D0AEEE44@<X0>(int a1@<W8>)
{
  int v4 = 2 * (a1 ^ 1);
  unsigned int v5 = ((25 * (v4 ^ 0x3ED) - 1634655709) & 0x616EDF55 ^ 0x141AE657) + v2;
  BOOL v7 = v5 <= 0x81EEC56B || -2115058260 - v1 <= v5;
  return (*(uint64_t (**)(void))(v3 + 8 * ((2021 * v7) ^ v4)))();
}

uint64_t sub_1D0AEEED0()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((931 * (v1 < 0x77BBA928)) ^ (v2 - 726207371))))();
}

void sub_1D0AEEF18()
{
}

void sub_1D0AEEF40()
{
  STACK[0x218] = 0;
  JUMPOUT(0x1D0AEEF54);
}

void sub_1D0AEF00C(char a1@<W8>)
{
  *(unsigned char *)(v2 + v1) |= (a1 << (v3 - 94)) ^ 0x80;
  JUMPOUT(0x1D0AEF02CLL);
}

uint64_t sub_1D0AEF054@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = (((v6 ^ 0x111) - 5) & (2 * *(_DWORD *)(*(void *)(a1 + 16) - 0xE8AF10975501C4ELL)) ^ 0x6C)
     + ((2 * (v6 ^ 0x111)) ^ *(_DWORD *)(*(void *)(a1 + 16) - 0xE8AF10975501C4ELL) & 0x3F ^ 0x4B97E34Au);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(a6
                                                                               + 8
                                                                               * (((16
                                                                                  * ((a2 + 1215541584 + v7) > 0xFFFFFFBF)) | (32 * ((a2 + 1215541584 + v7) > 0xFFFFFFBF))) ^ v6)))(v7, 16 * ((a2 + 1215541584 + v7) > 0xFFFFFFBF), a3, a4, a5);
}

void sub_1D0AEF0F8()
{
}

uint64_t sub_1D0AEF2B0(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8
                                                     * (int)(((((a2 - 450630546) & 0x1ADC124F ^ 0xFFFFFFCA)
                                                             + (a2 ^ 0x102))
                                                            * ((v3 + v2 + 1180902017) < 8)) ^ a2)))(a1, a1);
}

uint64_t sub_1D0AEF31C@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + v3) = 0;
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v6 ^ 0x33A) + v3 == v1) * v4) ^ v2)))();
}

uint64_t sub_1D0AEF348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t (*a15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t), uint64_t a16, uint64_t a17)
{
  return a15(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_1D0AEF358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8 * (int)((((((v6 + 280276941) | 0xC4024046) ^ v8) + v6 - 642) * (v5 + 8 == a5)) ^ v6)))();
}

uint64_t sub_1D0AEF3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39)
{
  STACK[0xD70] = a15;
  STACK[0xD60] = v40 + (a39 - 19245624);
  STACK[0xD78] = a11;
  *(_DWORD *)(v42 - 112) = (v39 + 702) ^ (846572393
                                        * ((2 * ((v42 - 144) & 0x653DE880) - (v42 - 144) - 1698556039) ^ 0xACA14330));
  STACK[0xD68] = (unint64_t)&STACK[0x4005A18C73DCAF54];
  uint64_t v43 = (*(uint64_t (**)(uint64_t))(a2 + 8 * (int)(v39 + 1105)))(v42 - 144);
  return (*(uint64_t (**)(uint64_t))(a34
                                            + 8
                                            * ((25 * (*(_DWORD *)(v42 - 108) == (((v39 ^ 0x1DB) * v41) ^ 0x1472093F))) ^ v39)))(v43);
}

void sub_1D0AEF484()
{
  *(_DWORD *)(v0 + 8) = 342976733;
}

void sub_1D0AEF4BC()
{
  *(_DWORD *)(v2 - 248) = v1;
  *(void *)(v2 - 256) = v0 - 7;
  JUMPOUT(0x1D0AEF528);
}

uint64_t sub_1D0AEF604@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  int v17 = v11
      + v8
      - 443
      + (a6 ^ v14)
      + *(_DWORD *)(a4 + 4 * (v16 + v15))
      + (((v6 ^ a1) + v14 - (v10 & (2 * (v6 ^ a1)))) ^ a2)
      + (*(_DWORD *)(v7 + 4 * (*(unsigned char *)(a3 + v16 + v15) - 27)) ^ v13)
      - 704;
  unsigned int v18 = (v17 + v14 - (v10 & (2 * v17))) ^ v14;
  int v19 = ((v18 << (*(unsigned char *)(a5 + v16 + v15) - 2)) | (v18 >> (2 - *(unsigned char *)(a5 + v16 + v15)))) + (a1 ^ v14);
  return (*(uint64_t (**)(void, uint64_t))(v9 + 8 * ((387 * (v16 + 1 == v12 + 48)) ^ v8)))(v19 + v14 - (v10 & (2 * v19)), v6);
}

uint64_t sub_1D0AEF6D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = a1 - 1;
  *(unsigned char *)(v3 + v5) = ((v1 - 28) ^ 0xBA) * (v1 - 11);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((4 * ((v2 ^ (v5 == 0)) & 1)) & 0xF7 | (8
                                                                                        * ((v2 ^ (v5 == 0)) & 1))) ^ v2)))();
}

uint64_t sub_1D0AEF71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v12 = (unsigned int *)(v9 + 4 * v6);
  unsigned int v13 = v8 & 0x80000000;
  uint64_t v14 = v6 + 1;
  int v15 = *(_DWORD *)(v9 + 4 * v14);
  unsigned int v16 = v12[397] ^ ((v15 & ((v7 + 419) ^ v11) | v13) >> 1);
  *uint64_t v12 = (v16 + a6 - (a5 & (2 * v16))) ^ *((_DWORD *)&STACK[0x4F8] + (v15 & 1));
  return (*(uint64_t (**)(void))(v10 + 8 * ((1460 * (v14 == 227)) ^ v7)))();
}

uint64_t sub_1D0AEF784@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, unsigned int a7@<W6>, uint64_t a8@<X7>, unsigned __int8 a9@<W8>)
{
  *(unsigned char *)(v12 + a8 + v10) ^= *(unsigned char *)(a3 + a8 + v10);
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)(((((((v9 + a6) & a7) + (_BYTE)a4) & a9 ^ (((v9 + a6) & a7 ^ v13) + v10 < a1 + ((v9 + a6) & a7) + a4 + v11 + 16)) & 1)
                                     * a5) ^ (((v9 + a6) & a7) + 222))))();
}

uint64_t sub_1D0AEF7E4@<X0>(unint64_t a1@<X5>, int a2@<W6>, uint64_t a3@<X8>)
{
  BOOL v8 = v3 < v5;
  *(unsigned char *)(v4 + a3) = 0;
  unint64_t v9 = a3 + 1;
  if (v8 == v9 > a1) {
    BOOL v8 = v9 + v5 < v3;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((v8 * ((v6 + 271) ^ a2)) ^ v6)))();
}

uint64_t sub_1D0AEF830@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

void sub_1D0AEF838(uint64_t a1)
{
  int v1 = 1503905621 * ((a1 - 2 * (a1 & 0xE4DE87AC) - 455178324) ^ 0xB9A6E978);
  int v2 = *(_DWORD *)(a1 + 4) + v1;
  BOOL v4 = *(void *)(a1 + 16) == 0x6E4C05E1889C2C37 || (unsigned __int16)(*(_WORD *)a1 - v1) == 20543;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D0AEF914()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((11 * (((*(unsigned char *)(v1 + 4) == 3) ^ (v0 + 22 + v0 + 17)) & 1)) ^ (v0 + 17))))();
}

uint64_t sub_1D0AEF94C(uint64_t result)
{
  _DWORD *v1 = 36864;
  *(_DWORD *)(result + 8) = 343018756;
  return result;
}

uint64_t sub_1D0AEF968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  uint64_t v55 = (unsigned __int8 *)(a7 + v50 + v52);
  int v56 = *v55 ^ 0xF8;
  LODWORD(v55) = ((v55[2] ^ (a50 - 51)) << 16) | ((v55[3] ^ 0xF8) << 24) | v56 | ((v55[1] ^ 0xF8) << 8);
  *(_DWORD *)(v51 + ((v50 + v52) & 0xFFFFFFFFFFFFFFFCLL)) = v55
                                                          + v54
                                                          - 2 * (v55 & 0x674DF373 ^ v56 & 1);
  return (*(uint64_t (**)(void))(v53 + 8 * ((112 * ((unint64_t)(v50 + 4 + v52) > 0x3F)) ^ a50)))();
}

uint64_t sub_1D0AEFA08()
{
  return 4294925273;
}

uint64_t sub_1D0AEFA14@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + v5 + ((a1 + 450) ^ 0xFFFFFFFFBD6E4F49)) = v7;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 & 0x38) == 8) ^ a1)))();
}

uint64_t sub_1D0AEFA58(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, char a6, char a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  unsigned int v30 = v28 - 892428796;
  int v31 = v30 < a11 - 128 + a3;
  unsigned int v32 = *(_DWORD *)(a26 - 0x17B29E1307D1180CLL + ((a5 + 1455463226) & 0xFFFFFFFC));
  *(unsigned char *)(a28 + (a5 + 1455463226)) = v32 ^ 0x92;
  *(unsigned char *)(a28 + (a5 + 1455463227)) = (BYTE1(v32) ^ 0x19)
                                                    + (((((v32 >> 8) ^ 0x19 | 0x78) ^ (v32 >> 8)) << ((7 * ((a11 + 0x80) ^ 0xC)) ^ 0xB7)) ^ 0x3D)
                                                    - 7;
  *(unsigned char *)(a28 + (a5 + 1455463228)) = (a7 ^ BYTE2(v32)) - ((2 * (a7 ^ BYTE2(v32))) & 0xF0) - 8;
  *(unsigned char *)(a28 + (a5 + 1455463229)) = (a6 ^ HIBYTE(v32)) - ((2 * (a6 ^ HIBYTE(v32))) & 0xF0) - 8;
  if (v31 == (a3 + 534) > 0xDBDDF11F) {
    int v31 = v30 > 0xDBDDF11F;
  }
  return (*(uint64_t (**)(void))(v29 + 8 * ((a11 - 128) | (v31 << 7))))();
}

uint64_t sub_1D0AEFB70@<X0>(int a1@<W6>, int a2@<W7>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + (a1 - 289611452)) = *(unsigned char *)(v4 + ((a1 - 289611452) & 0xFLL)) ^ *(unsigned char *)(v3 + (a1 - 289611452)) ^ *(unsigned char *)(v6 + (((_BYTE)a1 + 68) & 0xF)) ^ *(unsigned char *)((((_BYTE)a1 + 68) & 0xF) + v5 + 1) ^ (((a1 + 68) & 0xF) * (a2 ^ 0x3E));
  return (*(uint64_t (**)(void))(v8 + 8 * ((1101 * (a1 - 1 == v7)) ^ (a2 - 956))))();
}

uint64_t sub_1D0AEFBE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  return (*(uint64_t (**)(void))(v19 + 8 * ((2017 * (v18 != 38282048)) ^ a18)))();
}

uint64_t sub_1D0AEFC18(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((a1 == v4) ^ (43 * (a4 ^ 0xD5))) & 1) * ((a4 ^ 0x5D5) + 51)) ^ a4)))();
}

uint64_t sub_1D0AEFC50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  BOOL v47 = v44 == 0x831B691D8B0FB23 || v42 + v41 == v41;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 8 * ((v47 * (((v43 - 129435858) & 0x7B707CF) - 686)) ^ v43)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_1D0AEFCEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, char a12, int a13)
{
  int v18 = *(unsigned __int8 *)(v14 - 0x55C89A4359EC5AEALL);
  a13 = 1663139771
      * (((&a11 | 0x2FCE4042) - &a11 + (&a11 & 0xD031BFBC)) ^ 0x572796CF)
      - 714275852
      + v15;
  a12 = -69 * (((&a11 | 0x42) - &a11 + (&a11 & 0xBC)) ^ 0xCF)
      + (v18 ^ 0x70)
      + ((v18 << v17) & 0xDE ^ 0x1E)
      - 1;
  uint64_t v19 = (*(uint64_t (**)(int *))(v13 + 8 * (v15 ^ 0x7C2)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * ((716 * (a11 == v16)) ^ v15)))(v19);
}

uint64_t sub_1D0AEFDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((1958 * (v6 + 1 == v7 + 64)) ^ a6)))();
}

uint64_t sub_1D0AEFE80@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + v2) = 0;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((414
                                * (v2 + 15 * (((v3 - 278) | 0x84) ^ 0x2EDu) - 637 != ((((v3 - 278) | 0x84) - 718) & v1))) ^ ((v3 - 278) | 0x84))))();
}

uint64_t sub_1D0AEFED4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 340514648) & 0x144BD7FF) - 752) * (v1 == v0)) ^ v2)))();
}

uint64_t sub_1D0AEFF10@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, int8x16_t *a4@<X3>, uint64_t a5@<X8>, int8x16_t a6@<Q0>, int8x16_t a7@<Q1>)
{
  *(int8x16_t *)(a2 + (a1 + 16 + v7)) = vaddq_s8(vaddq_s8(*a4, a7), vmvnq_s8(vandq_s8(vaddq_s8(*a4, *a4), a6)));
  return (*(uint64_t (**)(void))(a5 + 8 * (((v8 == 16) * a3) ^ v9)))();
}

uint64_t sub_1D0AEFF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, unsigned int a12)
{
  unsigned int v16 = 846572393 * (((&a9 | 0x7D0BA1F1) - (&a9 & 0x7D0BA1F1)) ^ 0x4B68F5B8);
  a11 = v14;
  a10 = (v13 + 387) ^ v16;
  a12 = v16 + 250416659;
  uint64_t v17 = (*(uint64_t (**)(int *))(v12 + 8 * (v13 ^ 0x577)))(&a9);
  return (*(uint64_t (**)(uint64_t))(v12
                                            + 8
                                            * (((a9 != v15 + 427 * (v13 ^ 0x349) - 854) * (((v13 - 587) | 0x448) - 1323)) ^ v13)))(v17);
}

uint64_t sub_1D0AEFFD4@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  *(unsigned char *)(v3 + v4 + a1 - 1) = v5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v3 + v4) < 0x38) * v2) ^ a2)))();
}

uint64_t sub_1D0AF0000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15)
{
  unsigned int v21 = 515566439 * ((((2 * &a13) | 0x79419D0E) - &a13 - 1017171591) ^ 0x5074C920);
  a13 = v19;
  LODWORD(a14) = 849653939 - v21;
  HIDWORD(a14) = (v18 + 585) ^ v21;
  (*(void (**)(uint64_t *))(v16 + 8 * (v18 + 869)))(&a13);
  a15 = v20
      + (((&a13 | 0x50F7FE9F) - &a13 + (&a13 & 0xAF080160)) ^ 0xC96F4D5F)
      * v17
      + v18
      + 14;
  a13 = v19;
  a14 = v15 + 0x3729F98066DF4DAALL;
  uint64_t v22 = (*(uint64_t (**)(uint64_t *))(v16 + 8 * (v18 + 826)))(&a13);
  *(void *)(v15 - 0x10B17FC23B8BBE14) = 0;
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * v18))(v22);
}

uint64_t sub_1D0AF0138@<X0>(unsigned char *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,__int16 a48,unsigned __int8 a49,char a50)
{
  a1[16] = *a1 ^ v50[16];
  a1[17] = a1[1] ^ v50[17];
  a1[18] = a1[2] ^ v50[18];
  a1[19] = a1[3] ^ v50[19];
  a1[20] = a1[4] ^ v50[20];
  a1[21] = a1[5] ^ v50[21];
  a1[22] = a1[6] ^ v50[22];
  a1[23] = a1[7] ^ v50[23];
  a1[24] = a1[8] ^ v50[24];
  a1[25] = a1[9] ^ v50[25];
  a1[26] = a1[10] ^ v50[26];
  a1[27] = a1[11] ^ v50[27];
  a1[28] = a1[12] ^ v50[28];
  a1[29] = a1[13] ^ v50[29];
  a1[30] = a1[14] ^ v50[30];
  a1[31] = a1[15] ^ v50[31];
  int v92 = (v51 - 762945656) & 0x2D79A16D;
  unsigned int v53 = (v92 ^ a50) ^ 0x3E;
  uint64_t v54 = v52[4];
  uint64_t v55 = v52[8];
  uint64_t v56 = v52[12];
  uint64_t v57 = v52[1];
  uint64_t v58 = v52[5];
  uint64_t v59 = v52[9];
  uint64_t v60 = v52[13];
  uint64_t v61 = v52[2];
  uint64_t v62 = v52[10];
  uint64_t v63 = v52[6];
  uint64_t v64 = v52[14];
  uint64_t v65 = v52[15];
  uint64_t v66 = v52[11];
  uint64_t v67 = v52[7];
  uint64_t v68 = v52[3];
  uint64_t v69 = *(unsigned __int8 *)(*(a14 - 15) + *v52);
  *uint64_t v52 = v69;
  uint64_t v70 = *(unsigned __int8 *)(*(a14 - 11) + v54);
  v52[4] = v70;
  uint64_t v71 = *(unsigned __int8 *)(*(a14 - 7) + v55);
  v52[8] = v71;
  uint64_t v72 = *(unsigned __int8 *)(*(a14 - 3) + v56);
  v52[12] = v72;
  uint64_t v73 = *(unsigned __int8 *)(*(a14 - 10) + v58);
  v52[1] = v73;
  uint64_t v74 = *(unsigned __int8 *)(*(a14 - 6) + v59);
  v52[5] = v74;
  uint64_t v75 = *(unsigned __int8 *)(*(a14 - 2) + v60);
  v52[9] = v75;
  uint64_t v76 = *(unsigned __int8 *)(*(a14 - 14) + v57);
  v52[13] = v76;
  uint64_t v77 = *(unsigned __int8 *)(*(a14 - 5) + v62);
  v52[2] = v77;
  uint64_t v78 = *(unsigned __int8 *)(*(a14 - 13) + v61);
  v52[10] = v78;
  uint64_t v79 = *(unsigned __int8 *)(*(a14 - 1) + v64);
  v52[6] = v79;
  uint64_t v80 = *(unsigned __int8 *)(*(a14 - 9) + v63);
  v52[14] = v80;
  uint64_t v81 = *(unsigned __int8 *)(*(a14 - 4) + v66);
  v52[15] = v81;
  uint64_t v82 = *(unsigned __int8 *)(*(a14 - 8) + v67);
  v52[11] = v82;
  uint64_t v83 = *(unsigned __int8 *)(*(a14 - 12) + v68);
  v52[7] = v83;
  uint64_t v84 = *(unsigned __int8 *)(*a14 + v65);
  v52[3] = v84;
  uint64_t v85 = (void *)(a21 + ((unint64_t)(0 % (a49 ^ 0x1Fu)) << 7));
  LODWORD(v68) = *(_DWORD *)(v85[148] + 4 * v73) ^ *(_DWORD *)(v85[147] + 4 * v69) ^ *(_DWORD *)(v85[149] + 4 * v77) ^ *(_DWORD *)(v85[150] + 4 * v84);
  unsigned int v86 = v68 >> ((v92 + 90) & 0xBF ^ 0x23);
  v52[3] = v86;
  v52[2] = BYTE2(v68);
  *(_WORD *)uint64_t v52 = v68;
  uint64_t v87 = &v85[4 * (a50 != 30) + 147];
  LODWORD(v79) = *(_DWORD *)(v87[1] + 4 * v74) ^ *(_DWORD *)(*v87 + 4 * v70) ^ *(_DWORD *)(v87[2] + 4 * v79) ^ *(_DWORD *)(v87[3] + 4 * v83);
  *((_DWORD *)v52 + 1) = v79;
  uint64_t v88 = &v85[4 * (2 % v53) + 147];
  LODWORD(v75) = *(_DWORD *)(v88[1] + 4 * v75) ^ *(_DWORD *)(*v88 + 4 * v71) ^ *(_DWORD *)(v88[2] + 4 * v78) ^ *(_DWORD *)(v88[3] + 4 * v82);
  *((_DWORD *)v52 + 2) = v75;
  uint64_t v89 = &v85[4 * (3 % v53) + 147];
  LODWORD(v71) = *(_DWORD *)(v89[1] + 4 * v76) ^ *(_DWORD *)(*v89 + 4 * v72) ^ *(_DWORD *)(v89[2] + 4 * v80) ^ *(_DWORD *)(v89[3] + 4 * v81);
  *((_DWORD *)v52 + 3) = v71;
  *(_WORD *)uint64_t v52 = *(_WORD *)a26 ^ v68;
  v52[2] = *(unsigned char *)(a26 + 2) ^ BYTE2(v68);
  v52[3] = *(unsigned char *)(a26 + 3) ^ v86;
  *((_WORD *)v52 + 2) = *(_WORD *)(a26 + 4) ^ v79;
  v52[6] = *(unsigned char *)(a26 + 6) ^ BYTE2(v79);
  v52[7] = *(unsigned char *)(a26 + 7) ^ BYTE3(v79);
  *((_WORD *)v52 + 4) = *(_WORD *)(a26 + 8) ^ v75;
  v52[10] = *(unsigned char *)(a26 + 10) ^ BYTE2(v75);
  unsigned int v90 = *(unsigned __int8 *)(a26 + 11) ^ BYTE3(v75);
  v52[11] = *(unsigned char *)(a26 + 11) ^ BYTE3(v75);
  *((_WORD *)v52 + 6) = *(_WORD *)(a26 + 12) ^ v71;
  v52[14] = *(unsigned char *)(a26 + 14) ^ BYTE2(v71);
  v52[15] = *(unsigned char *)(a26 + 15) ^ BYTE3(v71);
  return (*(uint64_t (**)(void))(a27 + 8 * (v92 ^ 0x10u)))(v90);
}

uint64_t sub_1D0AF024C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((21 * ((((v1 - 792) ^ (((107 * (v1 ^ 0x328) - 832) & v0) == 0)) & 1) == 0)) | v1)))();
}

uint64_t sub_1D0AF0298@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v3 - 2060017957)) = *(unsigned char *)(v5 + (v3 - 2060017957)) ^ 0xF8;
  unsigned int v7 = v3 - 435747016;
  BOOL v9 = v7 <= v1 || v7 >= v4;
  return (*(uint64_t (**)(void))(v6 + 8 * (((4 * v9) | (8 * v9)) ^ v2)))();
}

uint64_t sub_1D0AF02F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v51 = (v47 - 119) | 0x518;
  __int16 v52 = ((a46 - 21271) ^ 0x4FEE) + ((v51 ^ 0x9A60) & (2 * (a46 - 21271))) - 3842;
  memset(&a47, 248, 64);
  memset((void *)(a12 - 0xE8AF10975501C2ELL), 248, 64);
  int v53 = (unsigned __int16)(v52 - 16620)
      + 585859357
      - (((unsigned __int16)(v52 - 16620) << (v51 - 45 + 107 * (v51 ^ 0xBE) - 100)) & 0x10202)
      - 28;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 8 * ((98 * ((v48 & (2 * v53) ^ v49) + (v53 ^ a8) + a7 == 56741335)) ^ v51)))(a1, 619 * (v51 ^ 0x5BEu), a3, a4, a5, &a32, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           0,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_1D0AF0478()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((v0 + 108041135) & 0xF98F6DFD ^ ((v0 - 884) | 0x521) ^ 0xD3) * ((v1 & 8) == 0)) ^ v0)))();
}

void sub_1D0AF04C8()
{
}

uint64_t sub_1D0AF04E8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(unsigned __int8 *)(a1 - 0x6E2E237C8C7936A9) == (v2 + 99))
                                * (v1 - 141)) ^ v1)))();
}

uint64_t sub_1D0AF0524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 8 * (((a24 ^ 0x4AF) - 105) ^ 0x4F ^ (a24 + 382))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_1D0AF0584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19)
{
  unsigned int v25 = 515566439 * ((&a17 & 0x9FF2E3E6 | ~(&a17 | 0x9FF2E3E6)) ^ 0xCD91BBE);
  a17 = v21;
  LODWORD(a18) = 849653939 - v25;
  HIDWORD(a18) = (v20 + 635) ^ v25;
  (*(void (**)(uint64_t *))(v19 + 8 * (v20 ^ 0x469)))(&a17);
  a19 = v20
      + 1580882533 * ((&a17 + 581766272 - 2 * (&a17 & 0x22AD0C80)) ^ 0xBB35BF40)
      + 2088559592;
  a17 = v21;
  a18 = v23 + 0x3729F98066DF4DAALL;
  uint64_t v26 = (*(uint64_t (**)(uint64_t *))(v19 + 8 * (v20 + 876)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * ((1862
                                              * (v24
                                               - v22
                                               - 2140998704
                                               + (((v20 ^ 0x1DF) - 2072280017) & 0x7B8479F4)
                                               + (((v20 ^ 0x1DF) - 267) | 0x120u) < 0xFFFFFFC0)) ^ v20 ^ 0x1DF)))(v26);
}

uint64_t sub_1D0AF06D8@<X0>(char a1@<W0>, char a2@<W1>, int a3@<W2>, uint64_t a4@<X4>, int a5@<W5>, char a6@<W8>, int8x16_t a7@<Q0>, int8x8_t a8@<D1>)
{
  int v18 = a5 - 8;
  uint64_t v19 = (a3 + v18 + 8);
  v21.val[0].i64[0] = ((_BYTE)a3 + (_BYTE)v18 + 8) & 0xF;
  v21.val[0].i64[1] = (a6 + (_BYTE)v18 + 8) & 0xF;
  v21.val[1].i64[0] = (v15 + (_BYTE)v18 + 8) & 0xF;
  v21.val[1].i64[1] = (v11 + (_BYTE)v18 + v16 + 8) & 0xF;
  v21.val[2].i64[0] = (v14 + (_BYTE)v18 + 8) & 0xF;
  v21.val[2].i64[1] = (v13 + (_BYTE)v18 + 8) & 0xF;
  v21.val[3].i64[0] = (a2 + (_BYTE)v18 + 8) & 0xF;
  v21.val[3].i64[1] = (a1 + (_BYTE)v18 + 8) & 0xF;
  *(int8x8_t *)(a4 + v19) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v8 + (v19 & 0xF) - 7), *(int8x8_t *)(a4 + v19)), veor_s8(*(int8x8_t *)(v9 + (v19 & 0xF) + 1 - 7), *(int8x8_t *)(v10 + (v19 & 0xF) + 1 - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v21, a7), a8)));
  return (*(uint64_t (**)(void))(STACK[0x268] + 8 * ((1586 * (*(_DWORD *)(v17 - 240) == v18)) ^ v12)))();
}

uint64_t sub_1D0AF06E0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((((a6 - 1979511916) | 0x75000A0C) + (a6 ^ 0x14 ^ (v8 - 1215))) * (v6 != a1)) | a6)))();
}

uint64_t sub_1D0AF0728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  STACK[0x230] = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * ((676
                                                                         * (v4 == (v3 ^ 0xFF)
                                                                                        + 343018756
                                                                                        + 23 * (v3 ^ 0xFF)
                                                                                        - 336)) ^ v3)))(a1, a2, a3, v4);
}

uint64_t sub_1D0AF0788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38,int a39,int a40)
{
  a39 = 2107899875;
  a40 = 19245624;
  a38 = 932381550;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 8 * (((4 * (((&a9 == (uint64_t *)-352) ^ (a24 - 6)) & 1)) & 0xF7 | (8 * (((&a9 == (uint64_t *)-352) ^ (a24 - 6)) & 1))) ^ ((int)a24 - 6))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

void sub_1D0AF079C()
{
}

uint64_t sub_1D0AF09FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v15 = (a7 + v8);
  *(unsigned char *)(v14 + v15) ^= *(unsigned char *)(v9 + (v15 & 0xF)) ^ *(unsigned char *)(v10 + (v15 & 0xF) + 1) ^ *(unsigned char *)(v11 + (v15 & 0xF) + 1) ^ (v15 & 0xF | (32 * (v15 & 0xF)));
  return (*(uint64_t (**)(void))(v13 + 8 * ((11 * (a7 - 1 == v7)) ^ (v12 - 420))))();
}

uint64_t sub_1D0AF0A58(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((a1 - v4 < ((a4 + 195) ^ 0x5F3uLL)) * (a4 - 1281)) | a4)))();
}

uint64_t sub_1D0AF0A90@<X0>(int8x8_t *a1@<X8>)
{
  *a1 = veor_s8(*v3, (int8x8_t)0xF8F8F8F8F8F8F8F8);
  return (*(uint64_t (**)(int8x8_t *, void, unint64_t))(v4
                                                                         + 8
                                                                         * ((((v1 & 0xFFFFFFFFFFFFFFF8) == 8)
                                                                           * (v2 ^ 0x199)) ^ v2)))(a1 + 1, v2 ^ 0x199u, (v1 & 0xFFFFFFFFFFFFFFF8) - 16);
}

uint64_t sub_1D0AF0AE0(int a1)
{
  unsigned int v5 = v2 + v1 + 135331852;
  if (v5 <= 0x40) {
    int v6 = 64;
  }
  else {
    int v6 = v2 + v1 + 135331852;
  }
  BOOL v7 = __CFADD__(v5 - 1, a1 + v3 + 607 + v6 + 17);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v3 + 28) ^ v7) & 1 | (8 * (((v3 + 28) ^ v7) & 1))) ^ v3)))();
}

uint64_t sub_1D0AF0B40(int a1, uint64_t a2, uint64_t a3, int a4, unsigned int a5)
{
  BOOL v8 = v7 < a5;
  if (v8 == a1 + v5 < a5) {
    BOOL v8 = a1 + v5 < v7;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((a4 + 860) ^ ((8 * v8) | (16 * v8)))))();
}

uint64_t sub_1D0AF102C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((98 * (v5 < (a5 ^ 0xDDu))) ^ ((a5 ^ 0x250) + 303))))();
}

uint64_t sub_1D0AF10BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,unsigned int a23,uint64_t a24)
{
  if (v25 < a8 != (a16 - 547310984) < 0xE71DD73E) {
    BOOL v27 = (a16 - 547310984) < 0xE71DD73E;
  }
  else {
    BOOL v27 = a16 - 547310984 > a23;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24
                                                                                + 8
                                                                                * ((v27 * (v26 - 1444)) ^ (v26 - 232))))(a1, a2, a3, a4, a24);
}

void sub_1D0AF10CC()
{
}

uint64_t sub_1D0AF1690@<X0>(uint64_t a1@<X1>, int a2@<W6>, unsigned int a3@<W7>, uint64_t a4@<X8>)
{
  *(unsigned char *)(a1 + v6) = *(unsigned char *)(v5 + (v7 + v8))
                      - ((2 * *(unsigned char *)(v5 + (v7 + v8))) & 0xF0)
                      - 8;
  return (*(uint64_t (**)(void))(a4 + 8 * (((v6 + 1 == (v4 ^ a3 ^ v9)) * a2) ^ (v4 - 711))))();
}

uint64_t sub_1D0AF16E0()
{
  char v9 = v6[4];
  char v10 = v6[6] + 1;
  int v11 = 1334103649 * ((v7 - 136 - 2 * ((v7 - 136) & 0x70B8F32B) + 1891169067) ^ 0x18103B85);
  *(unsigned char *)(v7 - 104) = (v6[5] ^ 0x20) - 97 * ((v7 + 120 - 2 * ((v7 + 120) & 0x2B) + 43) ^ 0x85) + ((2 * v6[5]) & 0x40);
  *(unsigned char *)(v7 - 120) = v9
                       - 97 * ((v7 + 120 - 2 * ((v7 + 120) & 0x2B) + 43) ^ 0x85)
                       - ((v9 << ((v0 ^ 0x6C) + 34)) & 0x2A)
                       - 107;
  *(_DWORD *)(v7 - 100) = v2 - v11 - ((2 * v2 - 686037512) & 0xCB231ED4) - 786464154;
  *(void *)(v7 - 112) = v4;
  *(void *)(v7 - 128) = v5;
  *(unsigned char *)(v7 - 119) = (v10 ^ 0xEB)
                       - 97 * ((v7 + 120 - 2 * ((v7 + 120) & 0x2B) + 43) ^ 0x85)
                       + ((2 * v10) & 0xD6)
                       + 117;
  *(_DWORD *)(v7 - 136) = v11 + v0 + 667;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v8 + 8 * (v0 + 1298)))(v7 - 136);
  unsigned char *v1 = -1;
  *(_DWORD *)(v3 + 40) = v2;
  return result;
}

uint64_t sub_1D0AF182C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * (((*(unsigned __int8 *)(*(void *)(v16 + 64) + 1) == (((v15 + 44) & 0x6F) + 36)) * (v15 - 614)) ^ v15)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_1D0AF1878()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 - 1379101433) & 0x52336936 ^ 0x100) * ((v0 ^ 9u) > 7)) ^ v1)))();
}

void sub_1D0AF18C8()
{
}

uint64_t sub_1D0AF1934(uint64_t result)
{
  int v1 = *(unsigned __int8 *)(result + 4) ^ (101 * ((((2 * result) | 0x46) - result - 35) ^ 0xE3));
  if (v1 == 129 || v1 == 126) {
    int v3 = 343018756;
  }
  else {
    int v3 = 342975859;
  }
  *(_DWORD *)uint64_t result = v3;
  return result;
}

uint64_t sub_1D0AF1984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,unsigned int a51)
{
  uint64_t v56 = (unsigned __int8 *)(a7 + v51 + v53);
  int v57 = (((a51 - 802) ^ *v56) << 24) | ((v56[1] ^ 0xF8) << 16) | ((v56[2] ^ 0xF8) << 8);
  *(_DWORD *)(v52 + ((v51 + v53) & 0xFFFFFFFFFFFFFFFCLL)) = (v57 | v56[3] ^ 0xF8)
                                                          + v55
                                                          - 2
                                                          * ((v57 | v56[3] ^ 0xF8) & 0x674DF377 ^ (v56[3] ^ 0xF8) & 5);
  return (*(uint64_t (**)(void))(v54 + 8 * ((1993 * ((unint64_t)(v51 + 4 + v53) < 0x40)) ^ a51)))();
}

uint64_t sub_1D0AF1A28(uint64_t result)
{
  unint64_t v1 = 1543459711
     * (((result | 0x9CC54C17173290E0) - (result | 0x633AB3E8E8CD6F1FLL) + 0x633AB3E8E8CD6F1FLL) ^ 0x4F77E4B15BB09324);
  unint64_t v2 = *(void *)(result + 24) + v1;
  unint64_t v3 = *(void *)result - v1;
  BOOL v4 = v3 == v2;
  BOOL v5 = v3 > v2;
  int v6 = v4;
  if (((*(_DWORD *)(result + 40) ^ (1543459711
                                   * (((result | 0x173290E0)
                                     - (result | 0xE8CD6F1F)
                                     - 389189857) ^ 0x5BB09324))) & 1) == 0)
    BOOL v5 = v6;
  BOOL v4 = !v5;
  uint64_t v7 = 8;
  if (!v4) {
    uint64_t v7 = 16;
  }
  *(_DWORD *)(result + 12) = *(_DWORD *)(result + 36) ^ (1543459711
                                                       * (((result | 0x173290E0) - (result | 0xE8CD6F1F) - 389189857) ^ 0x5BB09324)) ^ *(_DWORD *)(result + v7) ^ (1543459711 * (((result | 0x173290E0) - (result | 0xE8CD6F1F) - 389189857) ^ 0x5BB09324));
  return result;
}

void sub_1D0AF1ACC()
{
}

uint64_t sub_1D0AF1AF4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((1289 * (v0 - 399510284 < (((v2 - 1152) | 0x210) ^ 0x301u))) ^ (v2 - 1168))))();
}

uint64_t sub_1D0AF1B38()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((((v1 + 982426120) ^ 0x3A8EA650) - 165) ^ (v1 + 982426120) & 0xC5715FAF)
                                     * (v0 == v2)) ^ v1)))();
}

uint64_t sub_1D0AF1B80@<X0>(uint64_t a1@<X8>)
{
  BOOL v5 = (char *)(v2 + 4 * v3);
  int8x8x4_t v7 = vld4_s8(v5);
  v8.val[0] = v7.val[3];
  v8.val[1] = v7.val[2];
  v8.val[2] = v7.val[1];
  v8.val[3] = v7.val[0];
  vst4_s8(v5, v8);
  return (*(uint64_t (**)(void))(a1 + 8 * (((v3 - (v1 & 0x1FFFFFFF8) == -8) * (v4 - 616)) ^ v4)))();
}

void sub_1D0AF1BD4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) ^ (1332649919 * ((-2 - ((a1 | 0x858DAAF) + (~a1 | 0xF7A72550))) ^ 0xCAD4A1A2));
  __asm { BRAA            X10, X17 }
}

void sub_1D0AF1C98()
{
}

uint64_t sub_1D0AF1CC4@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (((v2 < ((a1 - 580939797) & 0x22A06FEDu) - 618) * (((a1 - 590) | 0x409) ^ 0x462)) ^ a1)))();
}

uint64_t sub_1D0AF1D1C(uint64_t a1)
{
  if (*(void *)(a1 + 32)) {
    BOOL v2 = *(void *)(a1 + 16) == 0x4F5C534513D454FDLL;
  }
  else {
    BOOL v2 = 1;
  }
  int v4 = !v2 && *(void *)(a1 + 8) != 0x7AFA2E4D31C5923ALL;
  int v1 = *(_DWORD *)a1 - 1477295531 * ((2 * (a1 & 0x814D3C0) - a1 + 2011900991) ^ 0x40E0196C);
  return (*((uint64_t (**)(void))*(&off_1F26D60E0 + v1 - 1269) + ((v4 * (((v1 - 718) | 0x22) - 569)) ^ v1)))();
}

uint64_t sub_1D0AF1DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  uint64_t v44 = *(void *)(v41 + 32);
  *(int8x16_t *)(v43 - 224) = veorq_s8(*(int8x16_t *)(*(void *)(v41 + 16) - 0x5179C032546094A0), (int8x16_t)xmmword_1D0B98290);
  *(int8x16_t *)(v43 - 240) = veorq_s8(*(int8x16_t *)(v44 - 0x62E66B39671084A6), (int8x16_t)xmmword_1D0B982A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8 * (int)(((((3 * (a6 ^ 0x407) - 804) | 0x220) ^ 0x26B) * (v43 == 224)) ^ a6)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

void sub_1D0AF1E5C(uint64_t a1)
{
  if (*(void *)(a1 + 8)) {
    BOOL v2 = *(void *)a1 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  int v1 = *(_DWORD *)(a1 + 28) ^ (1449114341 * (a1 ^ 0xCF5EF9EB));
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1D0AF1F04@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t (*a40)(uint64_t),uint64_t a41,int a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v55 = 1449114341 * ((((v54 - 136) | 0x5EBA4540) - ((v54 - 136) & 0x5EBA4540)) ^ 0x91E4BCAB);
  *(void *)(v54 - 136) = a53;
  *(_DWORD *)(v54 - 128) = (a42 + 515728198) ^ v55;
  *(_DWORD *)(v54 - 124) = (a1 + 720) ^ v55;
  uint64_t v56 = (*(uint64_t (**)(uint64_t))(v53 + 8 * (a1 + 1515)))(v54 - 136);
  return a40(v56);
}

uint64_t sub_1D0AF1F84()
{
  char v3 = *(unsigned char *)(STACK[0x208] + 12);
  unsigned int v6 = LODWORD(STACK[0x200]) - ((2 * LODWORD(STACK[0x200])) & 0xFFFFFFAA) + 85;
  *(unsigned char *)(v2 - 164) = ((v6 ^ 0xA) + ((v6 << (((v0 + 97) ^ 0x43) & 0xEF)) & 0xBE ^ 0xAA) - 74) ^ (45
                                                                                                  * ((v2 + 88 - 2 * ((v2 + 88) & 0x6E) + 110) ^ 0xF));
  *(unsigned char *)(v2 - 163) = 45 * ((v2 + 88 - 2 * ((v2 + 88) & 0x6E) + 110) ^ 0xF) + 2 * v3 + (v3 ^ 0x7F) - 90;
  *(_DWORD *)(v2 - 168) = (v0 + 312884292) ^ (839339309
                                            * ((v2 - 168 - 2 * ((v2 - 168) & 0x35A73C6E) + 900152430) ^ 0x8946240F));
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0x6C6)))(v2 - 168);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * ((1037 * (*(_DWORD *)(v2 - 160) == 343018756)) ^ v0)))(v4);
}

uint64_t sub_1D0AF20A0()
{
  uint64_t v2 = v0 ^ 0xA6E2B243DFA1ACBLL;
  uint64_t v5 = *(void *)(v2 - 0xA6E2B243DFA1AB3);
  unsigned int v7 = 991
     - 1477295531 * ((((&v5 | 0xA5A16646) ^ 0xFFFFFFFE) - (~&v5 | 0x5A5E99B9)) ^ 0x6D55ACEA);
  (*(void (**)(uint64_t *))(v1 + 12712))(&v5);
  int v3 = v6;
  (*(void (**)(uint64_t))(v1 + 11992))(v2 - 0xA6E2B243DFA1ACBLL);
  return (v3 - 343018756);
}

uint64_t sub_1D0AF2190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,unsigned int a55,unsigned int a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61)
{
  if (a56 < a55 != a61 + 1256166272 < ((a5 + 6) ^ 0x80C5DF44)) {
    BOOL v62 = a61 + 1256166272 < ((a5 + 6) ^ 0x80C5DF44);
  }
  else {
    BOOL v62 = a61 + 1256166272 > a56;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 8 * ((120 * v62) ^ ((int)a5 + 986))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51);
}

uint64_t sub_1D0AF2254(uint64_t a1, int a2, char a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,int a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  unsigned int v48 = v46 - 1021298119;
  int v49 = *(_DWORD *)(a45 + ((a2 + 1750051641) & 0xFFFFFFFC));
  *(unsigned char *)(a46 + (a2 + 1750051641)) = v49 ^ a7;
  *(unsigned char *)(a46 + (a2 + 1750051642)) = (BYTE1(v49) ^ 0x19)
                                                    + ((2 * ((BYTE1(v49) ^ 0x19 | ((a32 ^ 0xB5) + 42)) ^ BYTE1(v49))) ^ 0x3D)
                                                    - 7;
  *(unsigned char *)(a46 + (a2 + 1750051643)) = (a4 ^ BYTE2(v49)) - ((2 * (a4 ^ BYTE2(v49))) & 0xF0) - 8;
  *(unsigned char *)(a46 + (a2 + 1750051644)) = (a3 ^ HIBYTE(v49)) - ((2 * (a3 ^ HIBYTE(v49))) & 0xF0) - 8;
  BOOL v50 = v48 > 0xD42F8D54;
  if (v48 < (a32 ^ 0xD42F8CAB)) {
    BOOL v50 = 1;
  }
  return (*(uint64_t (**)(void))(v47 + 8 * ((985 * v50) ^ a32)))();
}

uint64_t sub_1D0AF2368@<X0>(int a1@<W8>)
{
  _DWORD *v2 = v2[623];
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v1 - 1 != 17 * ((2 * (a1 ^ 0x14D)) ^ 0x27D) + v4) * (2 * (a1 ^ 0x14D) - 285)) ^ (2 * (a1 ^ 0x14D)))))();
}

uint64_t sub_1D0AF23C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                + 8
                                                                                * (((v6 + 1 == v8 + 48) * a5) ^ v5)))(a1, a2, a3, a4, v9);
}

uint64_t sub_1D0AF2498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((5 * (v7 ^ 0x524)) ^ 0x56) * (v6 != a6)) ^ v7)))();
}

uint64_t sub_1D0AF24CC()
{
  char v4 = *(unsigned char *)(v1 + 6);
  *(void *)(v3 - 168) = v1;
  *(unsigned char *)(v3 - 156) = -65 * ((2 * ((v3 + 88) & 0xB8) - (v3 + 88) + 67) ^ 0xB1) + (v4 ^ 0xE7) + ((2 * v4) & 0xCF) + 60;
  *(_DWORD *)(v3 - 152) = v0
                        - 1332649919 * ((2 * ((v3 - 168) & 0x47CF59B8) - (v3 - 168) - 1204771261) ^ 0x854322B1)
                        - 1486588082;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 801)))(v3 - 168);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((1780
                                              * (*(_DWORD *)(v3 - 160) == ((v0 - 690720815) & 0x292B8F57 ^ ((v0 - 1054538260) | 0x4100000) ^ 0xEB390219))) ^ v0)))(v5);
}

uint64_t sub_1D0AF25D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 6976))(a1, a2, a3, 343018756);
}

uint64_t sub_1D0AF263C()
{
  return sub_1D0AF2644();
}

uint64_t sub_1D0AF2644@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, int8x16_t a3@<Q0>, int8x16_t a4@<Q3>)
{
  int8x16_t v9 = *(int8x16_t *)(v5 + (v7 + v8 + v6));
  *(int8x16_t *)(a1 + v6) = vaddq_s8(vsubq_s8(v9, vandq_s8(vaddq_s8(v9, v9), a4)), a3);
  return (*(uint64_t (**)(void))(a2 + 8 * (((v6 != 48) * (v4 - 959)) ^ (v4 - 1153))))();
}

void sub_1D0AF2690()
{
}

uint64_t sub_1D0AF26B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  BOOL v12 = v9 - 317261839 < v11 + 1965456837 + ((v8 + 832599342) & 0xCE5F8DEF);
  if (v11 < a8 != (v9 - 317261839) < 0xF4D41CF7) {
    BOOL v12 = v11 < a8;
  }
  return (*(uint64_t (**)(uint64_t))(v10 + 8 * ((1696 * v12) ^ v8)))(3217350838);
}

uint64_t sub_1D0AF2738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * (((v9 + 3 * (v10 ^ 0x15Bu) < 0xFFFFFFC0) * ((145 * (v10 ^ 0x10F)) ^ 0x165)) ^ v10)))(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1D0AF2784@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t (*a25)(uint64_t),uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  int v44 = 1449114341 * ((((2 * (v43 - 136)) | 0x65BC19DA) - (v43 - 136) - 853413101) ^ 0xFD80F506);
  *(void *)(v43 - 136) = a42;
  *(_DWORD *)(v43 - 128) = (a33 + 515728198) ^ v44;
  *(_DWORD *)(v43 - 124) = (a1 + 765) ^ v44;
  uint64_t v45 = (*(uint64_t (**)(uint64_t))(v42 + 8 * (a1 + 1560)))(v43 - 136);
  return a25(v45);
}

uint64_t sub_1D0AF2808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + v5 - 1402996963) = (*(unsigned char *)(a1 + v5 - 1402996963)
                                    + (~(*(unsigned char *)(a1 + v5 - 1402996963) << ((v4 + 7) & 0xF3)) | 0xBB)
                                    + 35) ^ *(unsigned char *)(a2 + v5 - 1402996963);
  return (*(uint64_t (**)(void))(v6 + 8 * ((1460 * (v5 + 1 == v3 + 16)) ^ v4)))();
}

uint64_t sub_1D0AF286C@<X0>(int a1@<W8>)
{
  uint64_t v3 = v1;
  uint64_t v4 = v1 - 399510284;
  if ((unint64_t)(v4 + 1) > 0x38) {
    uint64_t v5 = v4 + 1;
  }
  else {
    uint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((unint64_t)(v5 - v3 + 399510284) < 8) ^ ((a1 ^ 0x96) - 6)) & 1 | (2 * ((((unint64_t)(v5 - v3 + 399510284) < 8) ^ ((a1 ^ 0x96) - 6)) & 1))) ^ a1)))();
}

uint64_t sub_1D0AF28D0(uint64_t a1)
{
  uint64_t v7 = a1 + 0xA6E2B243DFA1ACBLL;
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0x6E2E237C8C7936AALL;
  *(void *)(a1 + 32) = 0;
  uint64_t v13 = v2;
  uint64_t v11 = a1 + 0x7F12632806E98E1FLL;
  unsigned int v14 = (v5 + 958) ^ (1332649919 * (((&v11 | 0x9C984283) - (&v11 & 0x9C984283)) ^ 0xA1EBC671));
  (*(void (**)(uint64_t *))(v4 + 8 * (v5 ^ 0x44Cu)))(&v11);
  int v8 = v12;
  uint64_t v9 = ((v5 - v6 - 380) + 0xA6E2B235F049687) ^ v7;
  if (v12 != v3) {
    uint64_t v9 = 0;
  }
  uint64_t *v1 = v9;
  return (v8 - 343018756);
}

void sub_1D0AF29F0()
{
  unsigned int v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x1D0AF2A4CLL);
}

void sub_1D0AF2AEC()
{
}

void sub_1D0AF2AF4()
{
}

uint64_t sub_1D0AF306C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((23 * (v1 - 642899657 != ((((v0 + 424) | 0x60) + 260) ^ 0xDBF64780))) ^ v0)))();
}

void sub_1D0AF30BC()
{
}

uint64_t sub_1D0AF3138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v18 = v13 + v15 - 395;
  uint64_t v19 = v14 + (LODWORD(STACK[0x214]) - 19245624);
  *(_DWORD *)(v17 - 136) = (v15 + 763) ^ (846572393 * ((v17 - 168) ^ 0x36635449));
  *(void *)(v17 - 152) = v12;
  *(void *)(v17 - 144) = a12;
  *(void *)(v17 - 168) = v19;
  *(void *)(v17 - 160) = &STACK[0x4005A18C73DCB164];
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v15 ^ 0x792)))(v17 - 168);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (int)(((*(_DWORD *)(v17 - 132) == 343018756) * (v18 ^ 0xC5350DB6)) ^ v15)))(v20);
}

uint64_t sub_1D0AF3204(int a1, int a2)
{
  *(void *)(v6 + (a1 - v3)) = *(void *)(v5 + (a1 - v3));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v3 + v2 - 1001 == v7) * a2) ^ v4)))();
}

uint64_t sub_1D0AF3234@<X0>(uint64_t a1@<X8>)
{
  char v4 = *v2;
  char *v2 = v2[3];
  v2[3] = v4;
  char v5 = v2[1];
  v2[1] = v2[2];
  v2[2] = v5;
  return (*(uint64_t (**)(void))(a1 + 8 * ((577 * (((29 * (v3 ^ 0x1B9)) ^ 0xFFFFFE86) + v1 == 1280986332)) | v3)))();
}

uint64_t sub_1D0AF329C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W3>, int a4@<W8>)
{
  *(unsigned char *)(v5 + a1 + a2 - 1) = a3;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v5 + a1) < 0x38) * a4) ^ v4)))();
}

uint64_t sub_1D0AF32C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8 * ((1197 * (v8 + 1 == v9 + 48)) ^ a8)))(a1, a4);
}

void sub_1D0AF3394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  *int v34 = 0x80000000;
  (*(void (**)(uint64_t))(v35 + 8 * (v33 + 1347)))(a33);
  JUMPOUT(0x1D0AF33E4);
}

uint64_t sub_1D0AF3510()
{
  int v5 = *(unsigned __int8 *)(v2 + 2);
  *int v4 = v0 + 3;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v5 != 70) | (2 * (v5 != 70))) ^ (v1 - 1))))();
}

uint64_t sub_1D0AF3544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  *(unsigned char *)(v45 - 192) = *(unsigned char *)(v45 - 224);
  *(void *)(v45 - 191) = *(void *)(v45 - 223);
  *(_DWORD *)(v45 - 183) = *(_DWORD *)(v45 - 215);
  *(_WORD *)(v45 - 179) = *(_WORD *)(v45 - 211);
  *(unsigned char *)(v45 - 177) = *(unsigned char *)(v45 - 209);
  BOOL v47 = v43 == 0x831B691D8B0FB23 || v45 + 0x42BE3E787A9E185 == v41;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 8 * (int)((v47 * (((((v42 + 38273192) & 0xFDB7FFDF) - 129435858) & 0x7B707CF) - 686)) ^ (v42 + 38273192) & 0xFDB7FFDF)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_1D0AF35F8@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1521 * (((v2 - 751) ^ 0x2B0) == v1)) ^ (v2 - 1066))))();
}

uint64_t sub_1D0AF3630(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 + v5 - 375 - 1632) * (v4 == a4)) ^ v5)))();
}

void sub_1D0AF3658()
{
}

uint64_t sub_1D0AF3684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, const char *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int8x16_t a35)
{
  int8x16x4_t v59 = vld4q_s8(a7);
  uint8x16_t v39 = (uint8x16_t)veorq_s8(v59.val[0], v37);
  uint16x8_t v40 = vmovl_u8(*(uint8x8_t *)v39.i8);
  uint16x8_t v41 = vmovl_high_u8(v39);
  uint8x16_t v42 = (uint8x16_t)veorq_s8(v59.val[1], v37);
  _Q17 = vmovl_u8(*(uint8x8_t *)v42.i8);
  _Q16 = vmovl_high_u8(v42);
  __asm
  {
    SHLL2           V18.4S, V16.8H, #0x10
    SHLL2           V19.4S, V17.8H, #0x10
  }
  uint8x16_t v51 = (uint8x16_t)veorq_s8(v59.val[2], v37);
  uint16x8_t v52 = vmovl_high_u8(v51);
  uint16x8_t v53 = vmovl_u8(*(uint8x8_t *)v51.i8);
  v59.val[0] = veorq_s8(v59.val[3], v37);
  v59.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v59.val[0]);
  v59.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v59.val[1]);
  v59.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v59.val[1].i8);
  v59.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v59.val[0].i8);
  v59.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v59.val[0]);
  v59.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v59.val[0].i8);
  int32x4_t v54 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q17.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v53.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v40.i8), 0x18uLL)), v59.val[0]);
  int32x4_t v55 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q19, (int8x16_t)vshll_high_n_u16(v53, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v40), 0x18uLL)), v59.val[3]);
  int32x4_t v56 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q16.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v52.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v41.i8), 0x18uLL)), v59.val[1]);
  int32x4_t v57 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q18, (int8x16_t)vshll_high_n_u16(v52, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v41), 0x18uLL)), v59.val[2]);
  v59.val[0] = veorq_s8(vandq_s8((int8x16_t)v54, a35), (int8x16_t)(*(_OWORD *)v59.val & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
  v59.val[3] = veorq_s8(vandq_s8((int8x16_t)v55, a35), (int8x16_t)(*(_OWORD *)&v59.val[3] & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
  v59.val[1] = veorq_s8(vandq_s8((int8x16_t)v56, a35), (int8x16_t)(*(_OWORD *)&v59.val[1] & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
  v59.val[2] = veorq_s8(vandq_s8((int8x16_t)v57, a35), (int8x16_t)(*(_OWORD *)&v59.val[2] & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
  v36[2] = vaddq_s32(vsubq_s32(v56, vaddq_s32((int32x4_t)v59.val[1], (int32x4_t)v59.val[1])), v38);
  v36[3] = vaddq_s32(vsubq_s32(v57, vaddq_s32((int32x4_t)v59.val[2], (int32x4_t)v59.val[2])), v38);
  *uint64_t v36 = vaddq_s32(vsubq_s32(v54, vaddq_s32((int32x4_t)v59.val[0], (int32x4_t)v59.val[0])), v38);
  v36[1] = vaddq_s32(vsubq_s32(v55, vaddq_s32((int32x4_t)v59.val[3], (int32x4_t)v59.val[3])), v38);
  return sub_1D0AE520C(a1, a2, a3, a4, v35 - 761);
}

uint64_t sub_1D0AF37B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  v48[376] = a48;
  v48[377] = &STACK[0x578EC1BAFC81F639];
  v48[375] = v49 + 12;
  *(_DWORD *)(v53 - 144) = v51 + 1449114341 * ((v53 - 144) ^ 0xCF5EF9EB) + 1283;
  (*(void (**)(uint64_t))(v50 + 8 * (v51 + 1491)))(v53 - 144);
  return (*(uint64_t (**)(uint64_t))(v50 + 8 * (((*(_DWORD *)(v53 - 112) == v52) * (v51 + 583)) ^ v51)))(a16);
}

uint64_t sub_1D0AF3848()
{
  *uint64_t v3 = v0;
  unsigned int v4 = v0 - ((2 * v0) & 0x800B2C20) + (((v2 ^ 0x63C) - 419) ^ 0xC005949F);
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((121
                                * (((2 * v4) & 0x7339BAFE ^ 0x92820)
                                 + (v4 ^ 0x79994B6F)
                                 + (((v2 ^ 0x63C) - 165) ^ 0x5FEB7C63) == 428367213)) ^ v2 ^ 0x63C)))();
}

uint64_t sub_1D0AF38F4(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((252 * (a3 + a2 - 298835643 < ((9 * (v3 ^ 0x40A) - 307) | 0x521u) - 1313)) ^ v3 ^ 0x64B)))();
}

uint64_t sub_1D0AF3950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13, unint64_t *a14, uint64_t a15)
{
  *(_DWORD *)(v15 - 0xFEC6AE0F7D99CFCLL) = 932381550;
  a13 = (v16 - 201) ^ (1663139771
                     * ((2 * (&a11 & 0x14DFB8C0) - &a11 - 350206146) ^ 0x93C991B3));
  a14 = &STACK[0x587910004978A2A0];
  a15 = v19;
  a11 = v17;
  uint64_t v20 = (*(uint64_t (**)(uint64_t *))(v18 + 8 * (v16 + 1178)))(&a11);
  BOOL v21 = a12 == ((v16 - 227) | 0x406) + 343017598;
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * (((2 * v21) | (8 * v21)) ^ v16)))(v20);
}

void sub_1D0AF3A28()
{
}

uint64_t sub_1D0AF3A34@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + v3) = 0;
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v6 ^ 0x2B0) + v3 == v1) * v4) ^ v2)))();
}

uint64_t sub_1D0AF3A60()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((4 * (((v1 == v2) ^ (v0 - 4)) & 1)) & 0xF7 | (8
                                                                                               * (((v1 == v2) ^ (v0 - 4)) & 1))) ^ v0)))();
}

void sub_1D0AF3A90()
{
}

uint64_t sub_1D0AF3A98()
{
  int v5 = v1 + v0;
  int v6 = v5 + 6365698;
  if ((v5 + 6365698) <= 0x40) {
    int v6 = 64;
  }
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((206 * (v3 + v6 > ((v5 + 6365697) ^ 0xFFFFFAA1 ^ (v2 + 389554224) & 0xE8C7DFDF))) ^ v2)))();
}

void sub_1D0AF3B10()
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0x775)))(7);
  int v3 = (_DWORD **)*(&off_1F26D60E0 + (v0 ^ 0x15D));
  *(_DWORD **)((char *)v3 - 4) = (_DWORD *)v2;
  int v3 = (_DWORD **)((char *)v3 - 4);
  (*(void (**)(void))(v1 + 8 * (v0 ^ 0x73C)))();
  uint64_t v4 = (_DWORD *)(*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0x775)))(4);
  uint64_t v5 = (uint64_t)*(&off_1F26D60E0 + v0 - 221);
  *(void *)(v5 - 4) = v4;
  uint64_t v6 = v5;
  *uint64_t v4 = 269488144;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 1173)))(21);
  uint64_t v8 = (unsigned char **)*(&off_1F26D60E0 + v0 - 334);
  *(unsigned char **)((char *)v8 - 4) = (unsigned char *)v7;
  uint64_t v8 = (unsigned char **)((char *)v8 - 4);
  (*(void (**)(void))(v1 + 8 * (v0 + 1228)))();
  *(_DWORD *)(v7 + 8) = 0;
  **int v3 = 0;
  uint64_t v9 = *v3;
  uint64_t v10 = *v8;
  uint64_t v11 = *(unsigned char **)(v6 - 4);
  *(unsigned char *)*(&off_1F26D60E0 + (v0 ^ 0x115)) = 8;
  v10[13] = 1;
  v10[17] = 96;
  *(unsigned char *)*(&off_1F26D60E0 + (v0 ^ 0x11C)) = 1;
  uint64_t v12 = (uint64_t)*(&off_1F26D60E0 + (v0 ^ 0x167));
  *(unsigned char *)(v12 + 17) = -109;
  *(unsigned char *)(v12 + 20) = -47;
  *(unsigned char *)(v12 + 9) = -38;
  v11[1] = 73;
  *(unsigned char *)(v12 + 27) = -113;
  *(unsigned char *)(v12 + 13) = 115;
  *(unsigned char *)*(&off_1F26D60E0 + (v0 ^ 0x106)) = 109;
  *uint64_t v11 = 80;
  v9[4] = 39;
  *(_WORD *)(v12 + 5) = -26398;
  v10[1] = 80;
  v10[14] = -15;
  v10[3] = -72;
  v10[5] = 25;
  *(unsigned char *)(v12 + 2) = -41;
  *uint64_t v10 = -80;
  v11[2] = 102;
  *(unsigned char *)(v12 - 3) = -93;
  void v9[5] = 51;
  *(unsigned char *)*(&off_1F26D60E0 + v0 - 214) = -88;
  *(_WORD *)(v12 - 5) = 13651;
  *(unsigned char *)(v12 + 41) = -61;
  unsigned char v10[20] = 73;
  *(unsigned char *)*(&off_1F26D60E0 + (v0 ^ 0x128)) = 83;
  *(unsigned char *)(v12 + 7) = -10;
  *(unsigned char *)(v12 + 34) = 5;
  *(unsigned char *)(v12 + 19) = -5;
  v10[7] = -121;
  v11[3] = -34;
  _OWORD v10[2] = -52;
  unsigned char v9[6] = 68;
  v10[15] = -5;
  *(unsigned char *)(v12 - 1) = 28;
  *(unsigned char *)(v12 + 25) = -73;
  int v13 = *v8;
  *(unsigned char *)(v12 + 30) = 102;
  *(unsigned char *)(v12 + 1) = 48;
  *(unsigned char *)(v12 + 24) = -79;
  *(unsigned char *)(v12 + 37) = 50;
  *(unsigned char *)(v12 + 40) = -32;
  *(unsigned char *)(v12 + 33) = 105;
  *(unsigned char *)(v12 + 21) = 71;
  v13[19] = -116;
  *(unsigned char *)(v12 - 8) = -123;
  *(_WORD *)(v12 + 3) = -2865;
  *(unsigned char *)(v12 + 26) = 25;
  v13[4] = 66;
  *(unsigned char *)(v12 + 42) = -19;
  v13[18] = -39;
  *(unsigned char *)(v12 + 35) = -72;
  *(unsigned char *)(v12 + 10) = -119;
  *(unsigned char *)(v12 + 32) = -115;
  *(unsigned char *)(v12 + 18) = 47;
  *(unsigned char *)(v12 + 23) = 87;
  *(unsigned char *)(v12 + 12) = 49;
  void v13[6] = 13;
  v13[16] = 31;
  *(unsigned char *)(v12 + 16) = 31;
  *(unsigned char *)(v12 + 22) = 49;
  *(unsigned char *)(v12 + 11) = 87;
  v13[12] = 36;
  *(_WORD *)(v12 + 14) = -22199;
  *(unsigned char *)(v12 + 36) = 120;
  *(_WORD *)(v12 + 38) = -8086;
  *(unsigned char *)(v12 + 8) = -120;
  *(unsigned char *)(v12 + 31) = 100;
  *(_WORD *)(v12 + 28) = 24290;
  *(unsigned char *)uint64_t v12 = -113;
  *(_WORD *)(v12 - 7) = 27642;
  *(unsigned char *)(v12 - 2) = 49;
  JUMPOUT(0x1D0AF434CLL);
}

uint64_t sub_1D0AF4388@<X0>(int a1@<W8>)
{
  uint64_t v10 = v1 + 2;
  uint64_t v11 = (unsigned char *)(v2 - 2);
  *uint64_t v11 = (v3 + v10 + (v8 ^ 0x55)) * ((v5 + v10) ^ v6);
  *(v11 - 1) = ((v4 + v10) ^ v6) * (v3 + v10);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v10 == 140) * v7) ^ a1)))();
}

void sub_1D0AF4394()
{
}

uint64_t sub_1D0AF43F4@<X0>(char a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, int a11, char a12, uint64_t a13, int a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20,uint64_t a21,char a22)
{
  *v23 += a12;
  if (v30 == v28 + 1) {
    int v33 = v23;
  }
  else {
    int v33 = v23 + 1;
  }
  *v33 += v31;
  v23[2 % v22] += a10;
  v23[3 % v22] += 92;
  v23[4 % v22] += a15;
  v23[5 % v22] += v26;
  v23[6 % v22] += v24;
  v23[v27 % v22] += v25;
  v23[8 % v22] += a22;
  v23[9 % v22] += a20;
  v23[0xA % v22] += a1;
  v23[0 % v22] = (v23[0 % v22] - (((a2 + 1) ^ 0xCC) & (2 * v23[0 % v22])) + 36) ^ *v32;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * a2))(1120299529, 847290234, 847290234, 3590929698, -704037598);
}

uint64_t sub_1D0AF45AC(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((((v3 - 568) | 0x312) - 483) ^ 0xF4) * (v2 == a2)) ^ v3)))();
}

uint64_t sub_1D0AF45E0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(v3 - 0x351A91412706C5BLL) = 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((58 * (*(unsigned char *)(a2 - 0x7AFA2E4D31C59229) != 30)) ^ v4)))();
}

void sub_1D0AF4630()
{
}

uint64_t sub_1D0AF4640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,unsigned int a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51)
{
  if (a46 < 0xF2764352 != (a51 - 1135335516) < 0xF2764352) {
    BOOL v52 = (a51 - 1135335516) < 0xF2764352;
  }
  else {
    BOOL v52 = a51 - 1135335516 > a46;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 8 * (int)((v52 * (((a3 ^ 0xB) + 208) ^ 0xC9)) ^ (a3 + 304))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_1D0AF4648@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((LODWORD(STACK[0x200]) != 3) | (48 * (a1 ^ 0x24C)))))();
}

void sub_1D0AF4674()
{
}

uint64_t sub_1D0AF46EC@<X0>(int a1@<W4>, int a2@<W8>, int8x16_t a3@<Q0>, int8x16_t a4@<Q1>, int8x16_t a5@<Q4>, int8x16_t a6@<Q5>, int8x16_t a7@<Q6>, int32x4_t a8@<Q7>)
{
  a4.i64[0] = *(void *)(v9 + 4);
  a4.i32[2] = *(_DWORD *)(v9 + 12);
  int8x16_t v12 = vextq_s8(a3, a4, 0xCuLL);
  int8x16_t v13 = a4;
  v13.i32[3] = *(_DWORD *)(v9 + 16);
  int32x4_t v14 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v13, a5), vandq_s8(v12, a7)), 1uLL), *(int8x16_t *)(v9 - 908));
  v12.i32[0] = *(_DWORD *)(v11 + 4 * (*(_DWORD *)(v9 + 4) & (a2 - 517)));
  v12.i32[1] = *(_DWORD *)(v11 + 4 * (*(_DWORD *)(v9 + 8) & 1));
  v12.i32[2] = *(_DWORD *)(v11 + 4 * (*(_DWORD *)(v9 + 12) & 1));
  v12.i32[3] = *(_DWORD *)(v11 + 4 * (v13.i8[12] & 1));
  *(int8x16_t *)uint64_t v9 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v14, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v14, v14), a6)), a8), v12);
  return (*(uint64_t (**)(void))(v10 + 8 * (((v8 == 4) * a1) ^ a2)))();
}

uint64_t sub_1D0AF46F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  STACK[0xD78] = a12;
  STACK[0xD70] = a15;
  STACK[0xD68] = v34 + 12;
  *(_DWORD *)(v36 - 144) = v35 + 621 + 1449114341 * ((v36 - 144) ^ 0xCF5EF9EB) + 275;
  uint64_t v37 = (*(uint64_t (**)(uint64_t))(a2 + 8 * ((v35 + 621) ^ 0x22D)))(v36 - 144);
  return (*(uint64_t (**)(uint64_t))(a34
                                            + 8
                                            * (((*(_DWORD *)(v36 - 112) == ((57 * ((v35 + 621) ^ 0x426)) ^ 0x1472093F))
                                              * ((v35 - 1311946732) & 0x4E32B7EB ^ 0x15C)) ^ (v35 + 621))))(v37);
}

uint64_t sub_1D0AF47B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int *a12, _DWORD *a13, _DWORD *a14, _DWORD *a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,int a21,int a22,int a23,int a24,int a25,int *a26,int *a27,unsigned int a28,int a29)
{
  unsigned int v33 = 1477295531 * ((&a25 + 1893283138 - 2 * (&a25 & 0x70D93542)) ^ 0x47D20011);
  a26 = v32;
  a25 = (v31 + 128) ^ v33;
  LODWORD(a27) = v33 + 1280986348;
  (*(void (**)(int *))(v29 + 8 * (v31 + 1104)))(&a25);
  unsigned int v34 = 1449114341
      * (((&a25 | 0x9034E641) - &a25 + (&a25 & 0x6FCB19B8)) ^ 0x5F6A1FAA);
  a26 = &a21;
  a27 = v32;
  a28 = v34 + 1997355281;
  a29 = v34 ^ 0xD6687D8;
  a25 = v31 - v34 + 149;
  (*(void (**)(int *))(v29 + 8 * (v31 ^ 0x50A)))(&a25);
  *v30 += a21;
  *a15 += a22;
  *a14 += a23;
  *a13 += a24;
  a26 = a12;
  a27 = v32;
  a25 = 1334103649 * ((&a25 - 1956947643 - 2 * (&a25 & 0x8B5B5945)) ^ 0xE3F391EB)
      + 2097344667
      + v31
      + 506;
  uint64_t v35 = (*(uint64_t (**)(int *))(v29 + 8 * (v31 ^ 0x6DC)))(&a25);
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8
                                            * ((497
                                              * ((((a20 - 38282176) < 0xFFFFFFC0) ^ (v31 - 102)) & 1)) ^ v31)))(v35);
}

uint64_t sub_1D0AF49A4(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
  *(&a47 + (a1 + v48)) = *(unsigned char *)(a6 + (a1 + v48));
  return (*(uint64_t (**)(void))(v47 + 8 * ((43 * (((a1 == 56741336) ^ (a3 + 45)) & 1)) ^ (a3 - 25))))();
}

uint64_t sub_1D0AF4A04@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 == ((a1 + 1208) ^ (a1 + 1227))) * v1) ^ a1)))();
}

uint64_t sub_1D0AF4A2C@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8 * ((1699 * (v2 + 1 == v4 + 20)) ^ a1)))(v3, a2);
}

uint64_t sub_1D0AF4AFC(uint64_t a1)
{
  *(_DWORD *)(v2 + 8) = -1626731838;
  *(void *)uint64_t v2 = 0xB0A4976000000014;
  uint64_t v5 = v2 + 12;
  if (a1) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  int v7 = !v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3
                                                              + 8
                                                              * (int)((v7 * (((v1 - 181) ^ 0xFF031A4C) - 924)) ^ (v4 - 16572724))))(a1, 4281014726, 4292345421);
}

uint64_t sub_1D0AF4C00@<X0>(int a1@<W4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((a2 - 959) ^ (v2 == a1)) & 1) == 0) | (2 * ((((a2 - 959) ^ (v2 == a1)) & 1) == 0))) ^ a2)))();
}

void sub_1D0AF4C30()
{
  *(unsigned char *)(v1 - 0x7AFA2E4D31C59232) = v2[8];
  *uint64_t v3 = (v4 ^ 0x61E) + *v3 - 1351;
  *(unsigned char *)(v1 - 0x7AFA2E4D31C59231) = v2[9];
  ++*v3;
  *(unsigned char *)(v1 - 0x7AFA2E4D31C59230) = v2[10];
  ++*v3;
  *(unsigned char *)(v1 - 0x7AFA2E4D31C5922FLL) = v2[11];
  ++*v3;
  *(_DWORD *)(v0 + 32) = 343018756;
}

uint64_t sub_1D0AF4D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,unsigned int a26)
{
  v28[623] = *(_DWORD *)(a4 + 4 * (*v28 & 1)) ^ v28[396] ^ ((*v28 & 0x7FFFFFFE | ((v26 + 792) ^ 0x8000036F) & v28[623]) >> 1);
  return (*(uint64_t (**)(void))(v27 + 8 * ((216 * (a26 > 0x26F)) ^ v26)))();
}

uint64_t sub_1D0AF4D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14)
{
  STACK[0x218] = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8 * a13))(a14, 2965982036);
  unsigned int v17 = (*(uint64_t (**)(void))(v16 + 8 * (v15 + 1132)))();
  *int32x4_t v14 = v17;
  unsigned int v18 = v17 ^ 0x9E1F57C9 ^ ((v17 >> 30) - 1642113079 - ((v17 >> 29) & 2));
  v14[1] = ((v18 * ((v15 + 43) ^ 0x6C0788AA)) ^ 0x19F0EF7B) + ((403641034 * v18) & 0x33E1DEF6) - 435220346;
  return (*(uint64_t (**)(void))(v16 + 8 * ((v15 - 213) ^ 0x2A)))();
}

uint64_t sub_1D0AF4E64()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((999
                                * (((v1 - 100) ^ ((unint64_t)(2061806193 - v0)
                                                                 - 2061806129 < ((v1 + 1201942009) & 0xB85BD165 ^ 0x14CuLL))) & 1)) ^ v1)))();
}

uint64_t sub_1D0AF4EE4@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W6>, uint64_t a6@<X8>)
{
  HIDWORD(v17) = a3 ^ v12;
  LODWORD(v17) = a3 ^ 0x48000000;
  int v18 = (v17 >> 27)
      + (((a4 - 1069) | 0x401) ^ (v14 + 965) ^ v6)
      + ((v7 ^ v14 | a2 ^ v14) & (v16 ^ v14) | (v7 ^ v14) & (a2 ^ v14))
      + (*(_DWORD *)(a6 + 4 * (v8 + v15)) ^ v9);
  HIDWORD(v17) = v16 ^ 2;
  LODWORD(v17) = v16 ^ a5;
  return (*(uint64_t (**)(uint64_t, void, void))(v13 + 8 * ((7 * (v8 + 1 != v10 + 60)) ^ a4)))(a1, v14 + (v17 >> 2) - (v11 & (2 * (v17 >> 2))), v18 - ((2 * v18 + 506952120) & v11) - 563161530);
}

uint64_t sub_1D0AF4FB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  int v6 = a3 ^ 0x25B;
  int v7 = v3 + v4 + 64 < (v6 ^ 0x7C4u) - 1185;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8 * (((4 * v7) | (v7 << 6)) ^ v6)))(a1, a2);
}

void sub_1D0AF4FF8(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  int v2 = 1449114341 * ((-2 - ((~a1 | 0x4FE6400B) + (a1 | 0xB019BFF4))) ^ 0x80B8B9E0);
  int v3 = *(_DWORD *)a1 + v2;
  int v4 = *(_DWORD *)(a1 + 24) - v2;
  uint64_t v5 = (uint64_t)*(&off_1F26D60E0 + (v3 ^ 0x1AF));
  (*(void (**)(char *, unsigned char *, uint64_t))(v5 + 8 * (v3 ^ 0x474)))((char *)*(&off_1F26D60E0 + v3 - 307) - 12, v8, 35);
  uint64_t v9 = 0x3CE862DC77E27BB2;
  uint64_t v10 = 0x6C8F31CDC969AFBLL;
  int v11 = -1425738457;
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(v6 + 0 % (v4 ^ 0x770D3951u));
  LOBYTE(v6) = *(unsigned char *)(v6 + (v3 ^ 0x18Fu) % (v4 ^ 0x770D3951u));
  v8[35] = v7 - ((2 * v7) & 0x48) + 36;
  v8[36] = v6 - ((2 * v6) & 0x48) + 36;
  __asm { BRAA            X15, X17 }
}

void sub_1D0AF51AC()
{
}

uint64_t sub_1D0AF51B4@<X0>(int a1@<W3>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((25
                                * (a2
                                 - 0xE8AF1097550211FLL
                                 - v3
                                 + (v4 + v5)
                                 + (unint64_t)(((a1 + 783) | 0x62u) - 178)
                                 + 205 > 0xF)) ^ a1)))();
}

uint64_t sub_1D0AF520C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((155 * (a1 == 0)) ^ 0x27B)))();
}

uint64_t sub_1D0AF5258(uint64_t a1, int a2, unsigned int a3, uint64_t a4)
{
  int v11 = v4 + 261;
  *(unsigned char *)(v7 + v5) |= v11 + 16 * v6 - 88;
  return (*(uint64_t (**)(void))(v8 + 8 * ((124 * (v10 + v9 + ((v11 + a2) & a3) + 1435 - 1462 != a4)) ^ v11)))();
}

uint64_t sub_1D0AF52B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((a6 + 169 + a6 + 742 - 1110) * (v6 != a5)) ^ (a6 + 169))))();
}

uint64_t sub_1D0AF52E4@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v4 = (a1 + 251) | 0x6A;
  unsigned int v5 = v3;
  int8x16x4_t v8 = vld4q_s8(v5);
  int v6 = &v3[v4 + 3 - 1213];
  v9.val[0] = v8.val[3];
  v9.val[1] = v8.val[2];
  int8x16x4_t v10 = vld4q_s8(v6);
  v9.val[2] = v8.val[1];
  v9.val[3] = v8.val[0];
  v8.val[0] = v10.val[3];
  v8.val[1] = v10.val[2];
  v8.val[2] = v10.val[1];
  v8.val[3] = v10.val[0];
  vst4q_s8(v5, v9);
  vst4q_s8(v6, v8);
  return (*(uint64_t (**)(void))(a2 + 8 * ((1465 * ((v2 & 0x1FFFFFFE0) == 32)) ^ (v4 - 948))))();
}

uint64_t sub_1D0AF5364()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(unsigned __int8 *)(v2 + 5) == (((v0 | 0x81) + 115) & 0xFE))
                                * (((v0 - 1586800319) & 0x5E94A7B9) + 1016)) ^ v0)))();
}

void sub_1D0AF53B4()
{
  *(unsigned char *)(v1 - 176) = *(unsigned char *)(v1 - 160) ^ 0xA0;
  *(unsigned char *)(v1 - 175) = *(unsigned char *)(v1 - 159) ^ 0x96;
  *(unsigned char *)(v1 - 174) = *(unsigned char *)(v1 - 158) ^ 0x75;
  *(unsigned char *)(v1 - 173) = *(unsigned char *)(v1 - 157) ^ 0xFA;
  *(unsigned char *)(v1 - 172) = *(unsigned char *)(v1 - 156) ^ 0xFE;
  *(unsigned char *)(v1 - 171) = ((v0 - 9) | 0x11) ^ *(unsigned char *)(v1 - 155) ^ 0xA0;
  *(unsigned char *)(v1 - 170) = *(unsigned char *)(v1 - 154) ^ 0xEA;
  *(unsigned char *)(v1 - 169) = *(unsigned char *)(v1 - 153) ^ 0x7B;
  *(unsigned char *)(v1 - 168) = *(unsigned char *)(v1 - 152) ^ 0xE4;
  char v2 = *(unsigned char *)(v1 - 150) ^ 0x79;
  char v3 = *(unsigned char *)(v1 - 149) ^ 0xDF;
  char v4 = *(unsigned char *)(v1 - 148) ^ 0x6E;
  char v5 = *(unsigned char *)(v1 - 147) ^ 0x71;
  char v6 = *(unsigned char *)(v1 - 146) ^ 0xDD;
  char v7 = *(unsigned char *)(v1 - 145) ^ 0x17;
  *(unsigned char *)(v1 - 167) = *(unsigned char *)(v1 - 151) ^ 0x8A;
  *(unsigned char *)(v1 - 166) = v2;
  *(unsigned char *)(v1 - 165) = v3;
  *(unsigned char *)(v1 - 164) = v4;
  *(unsigned char *)(v1 - 163) = v5;
  *(unsigned char *)(v1 - 162) = v6;
  *(unsigned char *)(v1 - 161) = v7;
  JUMPOUT(0x1D0AF54D8);
}

uint64_t sub_1D0AF593C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  LOBYTE(STACK[0xC08]) = v37 + (v38 ^ 0xB1) + 57;
  int v40 = 1332649919 * ((v34 - (v36 | v34) + (v36 | 0x4F3F7CC7)) ^ 0x724CF835);
  *(_DWORD *)(v39 - 144) = v40 + 2140997255;
  *(_DWORD *)(v39 - 128) = v40 + v38 + 891;
  STACK[0xD78] = v35;
  STACK[0xD68] = a23;
  (*(void (**)(uint64_t))(a2 + 8 * (v38 + 1248)))(v39 - 144);
  STACK[0xD68] = a33 + (int)(((v38 + 977) ^ 0xE3CFC815) + 16 * v37);
  STACK[0xD60] = v35;
  *(_DWORD *)(v39 - 128) = v38 + 1449114341 * (((~v36 & 0xDFC60370) - (~v36 | 0xDFC60371)) ^ 0x1098FA9A) + 1110;
  uint64_t v41 = (*(uint64_t (**)(uint64_t))(a34 + 8 * (v38 ^ 0x726)))(v39 - 144);
  return (*(uint64_t (**)(uint64_t))(a34 + 8 * (v38 ^ (74 * (v37 == 1371734842)))))(v41);
}

uint64_t sub_1D0AF5A70(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  return sub_1D0AD62F8(a1, a2, a3, a4, a5, 61 * (a7 ^ 0x27Eu), a7, 0);
}

uint64_t sub_1D0AF5AA4@<X0>(int a1@<W5>, int a2@<W6>, uint64_t a3@<X8>)
{
  uint64_t v8 = (a1 - 1405048014);
  *(unsigned char *)(a3 + v8) ^= *(unsigned char *)(v3 + (v8 & 0xF)) ^ *(unsigned char *)(v5 + (v8 & 0xF)) ^ *(unsigned char *)(v6 + (v8 & 0xF)) ^ (5 * (v8 & 0xF));
  return (*(uint64_t (**)(void))(v7 + 8 * ((87 * (a1 - 1 == v4)) ^ (a2 - 768))))();
}

void sub_1D0AF5B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(unsigned char *)(v9 + (((((a6 - 58) | 0x21) - 259) | 0x208) ^ v8) + v6) = v7 - 114;
  JUMPOUT(0x1D0AF5274);
}

uint64_t sub_1D0AF5B30(int a1)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (a1 ^ (4 * (((v1 == 0x730A6707) ^ ((a1 ^ 0x1B) - 18)) & 1)))))(1635265500);
}

uint64_t sub_1D0AF5B84()
{
  void *v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ v0)))();
}

uint64_t sub_1D0AF5BA8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8 * (((((3 * (a1 ^ 0x3C0u) - 1107) & v2) == 0) * (119 * (a1 ^ 0x2BE) + 1129)) ^ a1)))();
}

uint64_t sub_1D0AF5BEC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((164 * (v0 > ((v1 - 323) ^ 0xF219322D ^ ((v1 - 323) | 0x10)))) ^ (v1 - 307))))();
}

uint64_t sub_1D0AF5C34()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((989
                                * (*(unsigned __int8 *)(*(void *)(v0 + 8) + 1) == ((v2 + 47) ^ 9))) ^ v2)))();
}

uint64_t sub_1D0AF5C70()
{
  return (*(uint64_t (**)(void))(v2 + 8
                                   * (((2 * (v0 >= (v1 ^ 0x1F1u) - 488)) | (4 * (v0 >= (v1 ^ 0x1F1u) - 488))) ^ v1)))();
}

uint64_t sub_1D0AF5CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3 + 8 * ((11 * (a1 + 1 == a2 + 32)) ^ v3)))();
}

uint64_t sub_1D0AF5D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v65 = *(unsigned __int8 *)(a6 - 0x17B29E1307D117F4) ^ 0xA;
  if (v65 == 1)
  {
    unsigned int v73 = *(_DWORD *)(a6 - 0x17B29E1307D11810);
    *(unsigned char *)(a6 - 0x17B29E1307D1181CLL) = ((8 * v73) ^ 0xB0) - (((8 * v73) ^ 0xFFFFFFB0) << (a4 + 75)) - 8;
    *(unsigned char *)(a6 - 0x17B29E1307D1181BLL) = ((v73 >> 5) ^ 0xAB) + (~(2 * ((v73 >> 5) ^ 0xAB)) | 0xF) - 7;
    *(unsigned char *)(a6 - 0x17B29E1307D1181ALL) = ((v73 >> 13) ^ 0x10)
                                          - 2 * (((v73 >> 13) ^ 0x10) & 0x7E ^ (v73 >> 13) & 6)
                                          - 8;
    *(unsigned char *)(a6 - 0x17B29E1307D11819) = ((v73 >> 21) ^ 0x73)
                                          - 2 * (((v73 >> 21) ^ 0x73) & 0x7C ^ (v73 >> 21) & 4)
                                          - 8;
    unsigned int v74 = *(_DWORD *)(a6 - 0x17B29E1307D11814);
    int v69 = a4 + 263;
    HIDWORD(v75) = v74 ^ 0xD;
    LODWORD(v75) = v73 ^ 0x40000000;
    *(unsigned char *)(a6 - 0x17B29E1307D11818) = (v75 >> 29) - ((2 * (v75 >> 29)) & 0xF0) - 8;
    *(unsigned char *)(a6 - 0x17B29E1307D11817) = ((v74 >> 5) ^ 0x37) - ((2 * ((v74 >> 5) ^ 0x37)) & 0xF0) - 8;
    unsigned int v72 = ((v74 >> 21) ^ 0xFFFFFFE1) + (~(2 * ((v74 >> 21) ^ 0xFFFFFFE1)) | 0xF) - 7;
    *(unsigned char *)(a6 - 0x17B29E1307D11816) = ((v74 >> 13) ^ 0x34) - ((2 * ((v74 >> 13) ^ 0x34)) & 0xF0) - 8;
    uint64_t v67 = a41;
    goto LABEL_5;
  }
  int v66 = a4;
  uint64_t v67 = a41;
  if (v65 == 2)
  {
    unsigned int v68 = *(_DWORD *)(a6 - 0x17B29E1307D11814);
    int v69 = a4 ^ 0x10B;
    *(unsigned char *)(a6 - 0x17B29E1307D1181CLL) = (a4 ^ 0xB ^ (v68 >> 21) ^ 0x5C)
                                          + (~(2 * (a4 ^ 0xB ^ (v68 >> 21) ^ 0x5C)) | 0xF)
                                          - 7;
    *(unsigned char *)(a6 - 0x17B29E1307D1181BLL) = ((v68 >> 13) ^ 0x34) - ((2 * ((v68 >> 13) ^ 0x34)) & 0xF0) - 8;
    *(unsigned char *)(a6 - 0x17B29E1307D1181ALL) = ((v68 >> 5) ^ 0x37) - ((2 * ((v68 >> 5) ^ 0x37)) & 0xF0) - 8;
    unsigned int v70 = *(_DWORD *)(a6 - 0x17B29E1307D11810);
    HIDWORD(v71) = v68 ^ 0xD;
    LODWORD(v71) = v70 ^ 0x40000000;
    *(unsigned char *)(a6 - 0x17B29E1307D11819) = (v71 >> 29) - ((2 * (v71 >> 29)) & 0xF0) - 8;
    *(unsigned char *)(a6 - 0x17B29E1307D11818) = ((v70 >> 21) ^ 0x73) - ((2 * ((v70 >> 21) ^ 0x73)) & 0xF0) - 8;
    *(unsigned char *)(a6 - 0x17B29E1307D11817) = ((v70 >> 13) ^ 0x10) + ((v70 >> 12) & 0xF0 ^ 0xDF) - 7;
    unsigned int v72 = -((8 * v70) ^ 0xFFFFFFB0) - 8;
    *(unsigned char *)(a6 - 0x17B29E1307D11816) = ((v70 >> 5) ^ 0xAB) - ((2 * ((v70 >> 5) ^ 0xAB)) & 0xF0) - 8;
LABEL_5:
    int v66 = (v69 - 299) | 0x24;
    *(unsigned char *)(a6 - 0x17B29E1307D11815) = v72;
  }
  return sub_1D0ACE13C(v67, a6 - 0x17B29E1307D11854, a4, 2359679803, a7, v66 ^ 0x4BAu, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64,
           a65);
}

uint64_t sub_1D0AF611C(uint64_t result)
{
  *(_DWORD *)(result + 24) = 342975856;
  return result;
}

uint64_t sub_1D0AF612C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_DWORD *a26,unsigned int *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,int a37)
{
  *a26 = a37 + 1;
  uint64_t v40 = *a27;
  uint64_t v41 = 1332649919
      * ((2 * ((v39 - 144) & 0x3706DD2462617998) - (v39 - 144) - 0x3706DD24626179A0) ^ 0x7204D260A0ED0292);
  *(void *)(v39 - 136) = v41 + 5119;
  *(void *)(v39 - 128) = v40 + v41;
  *(_DWORD *)(v39 - 108) = v41 ^ (v37 - 2046121666) ^ 0x6E;
  *(_DWORD *)(v39 - 104) = v41 + v37 + 1299011414;
  *(_DWORD *)(v39 - 144) = ((v37 - 2046121666) ^ 0x1A) - v41;
  *(_DWORD *)(v39 - 120) = v37 - 2046121666 - v41;
  *(_DWORD *)(v39 - 112) = -1332649919 * ((2 * ((v39 - 144) & 0x62617998) - (v39 - 144) - 1650555296) ^ 0xA0ED0292);
  uint64_t v42 = (*(uint64_t (**)(uint64_t))(v38 + 8 * (v37 ^ (a4 + 518))))(v39 - 144);
  return (*(uint64_t (**)(uint64_t))(v38 + 8 * *(int *)(v39 - 116)))(v42);
}

uint64_t sub_1D0AF6228()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((v2 + 726208790) ^ (344 * (v0 < v3)))))();
}

void sub_1D0AF6268(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D0AF62A8()
{
  _DWORD *v2 = v2[623];
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 + v1 - 172) * (v4 == 986062417)) | (v0 + v1 + 75))))();
}

uint64_t sub_1D0AF6370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v6
                                                                               + 8
                                                                               * (((((v5 - 68535387) & 0x415C39B) - 880)
                                                                                 * (v4 > 0xF)) ^ v5)))(a1, a2, a3, a4, 0);
}

uint64_t sub_1D0AF63AC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v4
                                                             + 8
                                                             * ((a3 + 1184) ^ (16
                                                                             * ((((a3 - 9) ^ ((v3 & 0x18) == (a3 + 264) - 273)) & 1) == 0)))))(a1, a2, (a3 - 9) | 0x18Eu);
}

uint64_t sub_1D0AF63EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v11 = v5 - 678;
  int v12 = v8 + v7 + 1347559817;
  if ((v12 + 1) > 0x40) {
    int v13 = v12 + 1;
  }
  else {
    int v13 = 64;
  }
  BOOL v14 = __CFADD__(v12, v6 + a5 + v9 + ((v11 + 390) | 0x101) + v13);
  return (*(uint64_t (**)(void))(v10 + 8 * ((388 * v14) ^ v11)))();
}

void sub_1D0AF6458()
{
}

void sub_1D0AF6490()
{
}

uint64_t sub_1D0AF649C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v32 = (15 * (v28 ^ (v28 + 9)) - 849) | 0x11;
  int v33 = v29 + v28 + 555;
  (*(void (**)(uint64_t))(v31 + 8 * (v29 + v28 + 1432)))(a28);
  uint64_t v34 = (*(uint64_t (**)(uint64_t, unint64_t *, uint64_t))(v31 + 12240))(a27, &STACK[0xE18], 16);
  return (*(uint64_t (**)(uint64_t))(v31 + 8 * (((v32 - 3) * (v30 == -16)) ^ v33)))(v34);
}

void sub_1D0AF6598()
{
}

uint64_t sub_1D0AF6618@<X0>(uint64_t a1@<X8>)
{
  int v5 = (char *)(v1 + 4 * v2);
  int8x8x4_t v7 = vld4_s8(v5);
  v8.val[0] = v7.val[3];
  v8.val[1] = v7.val[2];
  v8.val[2] = v7.val[1];
  v8.val[3] = v7.val[0];
  vst4_s8(v5, v8);
  return (*(uint64_t (**)(void))(a1 + 8
                                   * ((1712 * (((5 * (v4 ^ 0x371u)) ^ 0x462) + v2 == (v3 & 0x1FFFFFFF8))) ^ v4)))();
}

void sub_1D0AF6678()
{
}

uint64_t sub_1D0AF6684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v19 = (v16 - 44);
  unint64_t v20 = ((unint64_t)&a16 ^ 0xFBF6FE7B7EFF9F67)
      + 0x7DBBAFEFFF677FDCLL
      + ((v19 ^ 0xF7EDFCF6FDFF3C80) & (2 * (void)&a16));
  a16 = v17 - 1;
  *(unsigned char *)(a1 + a16) = ((v20 - 67) ^ 0xBA) * (v20 - 50);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8 * (int)((44 * (a16 != 0)) ^ v19)))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1D0AF6734(uint64_t a1)
{
  BOOL v3 = (*(uint64_t (**)(uint64_t, void))(v2 + 8 * (v1 + 194)))(a1, 0) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v3 * ((2 * (v1 ^ 0x522)) ^ (v1 - 1259))) ^ v1)))();
}

void sub_1D0AF677C(uint64_t a1)
{
  int v1 = 1663139771 * ((-2 - ((~a1 | 0xA7149875) + (a1 | 0x58EB678A))) ^ 0xDFFD4EF8);
  int v2 = *(_DWORD *)(a1 + 16) + v1;
  BOOL v4 = (*(unsigned char *)(a1 + 32) - v1) == 123 && *(void *)(a1 + 8) != 0x11353BDA57BC7E10;
  __asm { BRAA            X9, X17 }
}

void sub_1D0AF6864(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x17B29E1307D11814) = (*(_DWORD *)(a1 - 0x17B29E1307D11814) ^ 0x9C2686ED)
                                         - 1675196691
                                         - ((2 * (*(_DWORD *)(a1 - 0x17B29E1307D11814) ^ 0x9C2686ED) + 2) & 0x384D0DDA)
                                         + 1;
}

uint64_t sub_1D0AF68AC@<X0>(int a1@<W3>, int a2@<W8>)
{
  *(_DWORD *)(v3 + 4 * (v2 - 1762572493)) = 1762572493
                                                          - v2
                                                          + ((1566083941
                                                            * (*(_DWORD *)(v3 + 4 * (v2 - 1762572494)) ^ (*(_DWORD *)(v3 + 4 * (v2 - 1762572494)) >> 30))) ^ *(_DWORD *)(v3 + 4 * (v2 - 1762572493)));
  unint64_t v6 = 1543459711
     * ((((v5 - 144) | 0x517EADC68D12AAEFLL) - (v5 - 144) + ((v5 - 144) & 0xAE81523972ED5510)) ^ 0x82CC0560C190A92BLL);
  *(void *)(v5 - 120) = (v2 - 1670297903) - v6;
  int v7 = (a2 - 1722258340) ^ v6;
  *(void *)(v5 - 144) = v6 + 92274589;
  *(_DWORD *)(v5 - 128) = v7;
  *(_DWORD *)(v5 - 136) = v7 ^ 0x5D;
  *(_DWORD *)(v5 - 108) = v7 ^ 0x31;
  *(_DWORD *)(v5 - 104) = v6 | 1;
  *(_DWORD *)(v5 - 112) = v6 + a2 + 1426725272;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (a2 ^ (a1 + 861))))(v5 - 144);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * *(int *)(v5 - 132)))(v8);
}

uint64_t sub_1D0AF69E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))(v9 + 8 * ((((((a7 | 0x12C) ^ 0x326) & v8) == 0) * ((a7 | 0x12C) - 792)) ^ (a7 | 0x12C))))(a1, a2, a3, a4, a5, (a7 | 0x12C) ^ 0xADu, (v7 - a5), (a7 | 0x12Cu) + 633);
}

uint64_t sub_1D0AF6A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((1002 * (a2 + 1 == v6 + 80)) ^ a5)))();
}

uint64_t sub_1D0AF6AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,_DWORD *a32)
{
  unsigned int v33 = *a32 - ((2 * *a32 - 572433966) & 0xC5E23638) - 773732347;
  BOOL v34 = ((v33 << (((a5 - 76) | 0xD8) + 39)) & 0x7FF57CD4 ^ 0x45E03410) + (v33 ^ 0xDD0BA576) - 80904194 != 992493160;
  return (*(uint64_t (**)(void))(v32 + 8 * (((4 * v34) | (8 * v34)) ^ (a5 + 903))))();
}

uint64_t sub_1D0AF6BA0(uint64_t a1, int a2)
{
  if (a1) {
    BOOL v3 = a2 == 0;
  }
  else {
    BOOL v3 = 0;
  }
  int v4 = v3;
  return (*(uint64_t (**)(void))(v2 + 8 * ((41 * v4) ^ 0x19Bu)))();
}

uint64_t sub_1D0AF6C4C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, unsigned int a6@<W5>, int a7@<W8>)
{
  *(unsigned char *)(v9 + a5 + a7) ^= *(unsigned char *)(a1 + a5 + a7);
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((((((v7 ^ a3) * a4) ^ a6) + a7 < ((((v7 ^ a3) * a4 - 1295) | 8) ^ v10))
                                * ((((v7 ^ a3) * a4 - 1295) ^ a2) - 104)) ^ ((v7 ^ a3) * a4 - 170))))();
}

uint64_t sub_1D0AF6CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,int a35)
{
  *int v36 = v36[623];
  *(void *)(v40 - 144) = (v37 + 1) + a32;
  *(_DWORD *)(v40 - 104) = a32 | 1;
  *(void *)(v40 - 120) = a31;
  *(_DWORD *)(v40 - 136) = a35 ^ a32 ^ 0xA2;
  *(_DWORD *)(v40 - 128) = a35 ^ a32;
  *(_DWORD *)(v40 - 112) = a32 + v35 + 1426725272;
  *(_DWORD *)(v40 - 108) = a33 ^ a32;
  uint64_t v41 = (*(uint64_t (**)(uint64_t))(v38 + 8 * (v39 + v35 + 1323)))(v40 - 144);
  return (*(uint64_t (**)(uint64_t))(v38 + 8 * *(int *)(v40 - 132)))(v41);
}

uint64_t sub_1D0AF6D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, unsigned int a4@<W8>)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                        + 8
                                                                                        * ((((unsigned __int16)(v4 - 18153 + 2 * (v5 ^ 0x3CC)) > 0xFFBEu)
                                                                                          * (v5 - 265)) | v5)))(*(_DWORD *)(a1 + 24) ^ a4, 4149139237, 209736496, 32666352, a2, a3);
}

uint64_t sub_1D0AF6E10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14 = (a3 - 296);
  unint64_t v15 = ((unint64_t)&STACK[0x254] ^ 0xB1BB5FDB6F5A5EE9)
      + 0x4E44A02490A5A117
      + ((2 * (void)&STACK[0x254]) & 0x6376BFB6DEB4BDD0);
  unint64_t v19 = ((v15 % (v14 - 283)) ^ 0xBB87FFAB7DD6BFFFLL) + 2 * (v15 % (v14 - 283)) + 0x4478005482294011;
  HIDWORD(a7) = v10 ^ 0x7B5;
  LODWORD(STACK[0x250]) = v10 + 351383788;
  LODWORD(STACK[0x24C]) = v10 + 351383776;
  LODWORD(STACK[0x248]) = v10 + 351383871;
  LODWORD(STACK[0x244]) = v10 ^ 0x447;
  LODWORD(STACK[0x210]) = v10 + 719539642;
  unint64_t v16 = 1332649919
      * ((((v13 - 152) ^ 0x11336A7C4C864D48 | 0xD43078DB3E755CE0)
        - ((v13 - 152) ^ 0x11336A7C4C864D48)
        + (((v13 - 152) ^ 0x11336A7C4C864D48) & 0x2BCF8724C18AA318)) ^ 0x7FFEE21C4F80955ALL);
  STACK[0x230] = v16;
  STACK[0x238] = v16 + 4061736910u;
  LODWORD(STACK[0x20C]) = v10 ^ 0x5D;
  int32x4_t v35 = vdupq_n_s32(0x8A1610E6);
  int32x4_t v36 = vdupq_n_s32(0x4E1C2E41u);
  int32x4_t v33 = vdupq_n_s32(0x35E299A4u);
  int32x4_t v34 = vdupq_n_s32(0xCA1D665B);
  int32x4_t v31 = vdupq_n_s32(0xC009661A);
  int32x4_t v32 = vdupq_n_s32(0xA1610E6u);
  int32x4_t v43 = vdupq_n_s32(0x9A2165Bu);
  int32x4_t v41 = vdupq_n_s32(0xA4DD0BFA);
  int32x4_t v42 = vdupq_n_s32(0xF65DE9A4);
  int32x4_t v39 = vdupq_n_s32(0x90824201);
  int32x4_t v40 = vdupq_n_s32(0xB2B66A81);
  int32x4_t v37 = vdupq_n_s32(0x5491525u);
  int32x4_t v38 = vdupq_n_s32(0x4D49957Eu);
  int32x4_t v29 = vdupq_n_s32(0x5792545Du);
  int32x4_t v30 = vdupq_n_s32(0xAF24A8BA);
  int32x4_t v27 = vdupq_n_s32(0x840A200u);
  int32x4_t v28 = vdupq_n_s32(0x7FFFFFFEu);
  int32x4_t v25 = vdupq_n_s32(0x4F1A0958u);
  int32x4_t v26 = vdupq_n_s32(0x61CBED50u);
  int32x4_t v23 = vdupq_n_s32(0x32F76333u);
  int32x4_t v24 = vdupq_n_s32(0x5D86541Du);
  int32x4_t v21 = vdupq_n_s32(0xA25A28B9);
  int32x4_t v22 = vdupq_n_s32(0x44B45172u);
  int32x4_t v20 = vdupq_n_s32(0x721D0281u);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v12 + 8 * (int)((194 * (((v14 - 2115688275) & 0x7E1AD7B6 ^ (v14 + 88571757)) == 88572169)) ^ v14));
  STACK[0x228] = *(void *)(v11 + 8 * ((int)v14 - 227));
  STACK[0x220] = *(void *)(v11 + 8 * (int)(v14 ^ 0x1C5)) - 4;
  return v17(a1, a2, v9 - 0x6E4C05E1889C2C37, 88571461, 2179279021, 2115688374, 194, 453, a4, a5, &STACK[0x270], a7, v19, a9, v20.i64[0], v20.i64[1], v21.i64[0], v21.i64[1], v22.i64[0],
           v22.i64[1],
           v23.i64[0],
           v23.i64[1],
           v24.i64[0],
           v24.i64[1],
           v25.i64[0],
           v25.i64[1],
           v26.i64[0],
           v26.i64[1],
           v27.i64[0],
           v27.i64[1],
           v28.i64[0],
           v28.i64[1],
           v29.i64[0],
           v29.i64[1],
           v30.i64[0],
           v30.i64[1],
           v31.i64[0],
           v31.i64[1],
           v32.i64[0],
           v32.i64[1],
           v33.i64[0],
           v33.i64[1],
           v34.i64[0],
           v34.i64[1],
           v35.i64[0],
           v35.i64[1],
           v36.i64[0],
           v36.i64[1],
           v37.i64[0],
           v37.i64[1],
           v38.i64[0],
           v38.i64[1],
           v39.i64[0],
           v39.i64[1],
           v40.i64[0],
           v40.i64[1],
           v41.i64[0],
           v41.i64[1],
           v42.i64[0],
           v42.i64[1],
           v43.i64[0],
           v43.i64[1],
           vdupq_n_s32(0xDB22F404).u64[0]);
}

uint64_t sub_1D0AF71F4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((973 * (*(_DWORD *)(v2 - 252) == *(_DWORD *)(v2 - 256))) ^ v0)))();
}

uint64_t sub_1D0AF7228(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,_DWORD *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unsigned __int8 *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v39 = *a30 ^ 0xA;
  if (v39 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v38
  }
                                                       + 8
                                                       * (((*a25 != 286216983) * ((a3 + 418) ^ 0x21A)) ^ (a3 + 418))))(a38, a11);
  if (v39 == 1) {
    return (*(uint64_t (**)(uint64_t, _DWORD *))(v38 + 8 * ((105 * (*a25 == a3 + 286216950)) ^ (a3 + 393))))(a38, a25);
  }
  *(unsigned char *)(a38 + 91) = ((a10 - 84) ^ 0xBA) * (a3 + 18 + a10 - 118);
  return (*(uint64_t (**)(void))(v38 + 8 * ((a3 + 263) ^ 0x1F)))();
}

uint64_t sub_1D0AF735C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,_DWORD *a34)
{
  *a34 ^= a33;
  return (*(uint64_t (**)(void))(v35
                              + 8
                              * ((491 * (v36 + v37 + ((v34 + 551 - v36 - 1418876571) | 0x54925304) == 264741507)) ^ (v34 + 551))))();
}

uint64_t sub_1D0AF73D0(uint64_t a1)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 8) + 1663139771 * ((-2 - ((a1 | 0x4E71650B) + (~a1 | 0xB18E9AF4))) ^ 0xC9674C79);
  uint64_t v3 = *(void *)a1;
  unsigned int v4 = (1334103649 * ((-617097594 - (&v3 | 0xDB37D686) + (&v3 | 0x24C82979)) ^ 0x4C60E1D7)) ^ (v1 + 1119900074);
  return (*((uint64_t (**)(uint64_t *))*(&off_1F26D60E0 + v1 + 1603587588) + v1 + 1603589025))(&v3);
}

uint64_t sub_1D0AF74E4()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((*(unsigned char *)(v1 - 0x4005A18C73DCADE2) != 0x1F)
                                * (((((v2 - 455) | 0x469) ^ 0x69C) + 32) ^ 0x239)) ^ ((v2 - 455) | 0x469))))();
}

void sub_1D0AF7540()
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (uint64_t)*(&off_1F26D60E0
                + ((99 * ((dword_1EA629A98 + dword_1EA634B20) ^ 0x56)) ^ byte_1D0B8BC60[byte_1D0B97F70[(99 * ((dword_1EA629A98 + dword_1EA634B20) ^ 0x56))] ^ 0xAB])
                - 58);
  uint64_t v1 = *(void *)(v0 - 4);
  int v2 = (uint64_t *)*(&off_1F26D60E0
                  + (*((unsigned char *)off_1F26D63E0
                                      + (*((unsigned __int8 *)off_1F26D63E8
                                         + (99 * ((dword_1EA629A98 + v1) ^ 0x56))
                                         - 8) ^ 0x3Eu)
                                      - 4) ^ (99 * ((dword_1EA629A98 + v1) ^ 0x56)))
                  - 50);
  unint64_t v3 = (unint64_t)&v8[v1 + *v2];
  uint64_t v4 = 170569571 * v3 + 0x1D9A4764CCB09742;
  uint64_t v5 = 170569571 * (v3 ^ 0x653207D96BFD6456);
  *(void *)(v0 - 4) = v4;
  uint64_t *v2 = v5;
  LOBYTE(v5) = 99 * ((v5 - *(_DWORD *)(v0 - 4)) ^ 0x56);
  *(_DWORD *)*(&off_1F26D60E0
             + (*((unsigned char *)off_1F26D6318
                                 + (*((unsigned __int8 *)off_1F26D61C0 + v5 - 12) ^ 0x1Du)
                                 - 12) ^ v5)
             - 177) = 343018756;
  LOBYTE(v5) = 99 * ((*(_DWORD *)v2 - *(_DWORD *)(v0 - 4)) ^ 0x56);
  uint64_t v6 = (uint64_t)*(&off_1F26D60E0
                + ((99 * ((dword_1EA629A98 + dword_1EA634B20) ^ 0x56)) ^ byte_1D0B8BC60[byte_1D0B97F70[(99 * ((dword_1EA629A98 + dword_1EA634B20) ^ 0x56))] ^ 0x1E])
                - 51);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6
                                                   + 8
                                                   * ((*((unsigned char *)off_1F26D6440
                                                                                      + (*((unsigned __int8 *)off_1F26D6408
                                                                                         + v5
                                                                                         - 8) ^ 0x66u)
                                                                                      - 8) ^ v5)
                                                    + 1482)))(512, 1509315540);
  *(void *)*(&off_1F26D60E0
             + (*((unsigned char *)off_1F26D6358
                                               + (*((unsigned __int8 *)off_1F26D61F0
                                                  + (99 * ((*(_DWORD *)v2 + *(_DWORD *)(v0 - 4)) ^ 0x56))) ^ 0xDu)
                                               - 8) ^ (99 * ((*(_DWORD *)v2 + *(_DWORD *)(v0 - 4)) ^ 0x56)))
             + 83) = v7;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D0AF779C()
{
  int v11 = 1503905621 * ((v10 - 168) ^ 0x5D786ED4);
  *(_DWORD *)(v10 - 112) = (v1 + v3 + 1405) ^ v11;
  *(void *)(v10 - 104) = v2;
  *(void *)(v10 - 168) = v7;
  *(void *)(v10 - 120) = v4;
  *(void *)(v10 - 144) = v5;
  *(void *)(v10 - 136) = v6;
  *(_DWORD *)(v10 - 160) = v12 - ((2 * v12) & 0x6CC8683A) - v11 - 1234947043;
  *(void *)(v10 - 152) = v8;
  (*(void (**)(uint64_t))(v9 + 8 * (v3 ^ (v3 + 1514))))(v10 - 168);
  return (*(_DWORD *)(v10 - 128) - 343018756);
}

void sub_1D0AF7824()
{
}

uint64_t sub_1D0AF782C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v11 = (unsigned __int8 *)(a4 + v7 + v10);
  int v12 = ((*v11 ^ 0xF8) << 24) | ((v11[1] ^ 0xF8) << 16) | ((*(unsigned __int8 *)(a4
                                                                               + ((a1 + 949) ^ (unint64_t)(v10 + 681))
                                                                               + v7) ^ 0xF8) << 8);
  *(_DWORD *)(a7 + ((v7 + v10) & 0xFFFFFFFFFFFFFFFCLL)) = (v12 | v11[3] ^ 0xF8)
                                                        + v9
                                                        - 2 * ((v12 | v11[3] ^ 0xF8) & 0x674DF377 ^ (v11[3] ^ 0xF8) & 5);
  return (*(uint64_t (**)(void))(v8 + 8 * ((1009 * ((unint64_t)(v7 + 4 + v10) > 0x3F)) ^ a1)))();
}

uint64_t sub_1D0AF78CC@<X0>(int a1@<W8>)
{
  unsigned int v4 = (((*v2 ^ 0xB3D47851) & 0x8F9A1AD1) - ((2 * (*v2 ^ 0xB3D47851)) & 0xD101582) + 1185754063) ^ (*v2 ^ 0xB3D47851) & 0xF065E52F;
  unsigned int v5 = ((v4 & 0xD1EA8335 ^ 0x10C28021) + (v4 & 0x2E157CCA ^ 0x415308B) - 1) ^ 0x61AEE334 | (v2[623] ^ 0x730B752A) & 0x616FD2DA ^ 0x524C744 ^ (a1 - 73 - ((v2[623] ^ 0x730B752A) & (a1 ^ 0xE16FD337)) + ((2 * (v2[623] ^ 0x730B752A)) & 0xC0962134) + 354731424) & 0xE7FFFFFE;
  v2[623] = v2[396] ^ *(_DWORD *)(v1 + 4 * (*v2 & 1)) ^ ((v5 - ((2 * v5) & 0xD15896D6) + 1756121963) >> 1) ^ 0x17663368;
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((LODWORD(STACK[0x254]) < 0x270) | (16 * (LODWORD(STACK[0x254]) < 0x270))) ^ a1)))();
}

uint64_t sub_1D0AF7A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  (*(void (**)(uint64_t, uint64_t))(v18 + 8 * (v17 + 674)))(a12, 2965982036);
  uint64_t v21 = (*(uint64_t (**)(void))(v18 + 8 * (v17 + 673)))();
  _DWORD *v20 = v21;
  v20[1] = 1812433253 * (v21 ^ (v21 >> 30)) + 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8 * ((v17 + 105) ^ 0x3CD ^ (v17 + 182))))(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12, v19, v16, a15, a16);
}

uint64_t sub_1D0AF7AA8@<X0>(__n128 *a1@<X8>, __n128 a2@<Q0>)
{
  *a1 = a2;
  return (*(uint64_t (**)(void))(v4 + 8 * (v3 ^ (4 * (v2 != 0)))))();
}

uint64_t sub_1D0AF7AC8(uint64_t a1, uint64_t a2, const char *a3)
{
  int8x16x4_t v27 = vld4q_s8(a3);
  uint8x16_t v7 = (uint8x16_t)veorq_s8(v27.val[0], v5);
  uint16x8_t v8 = vmovl_u8(*(uint8x8_t *)v7.i8);
  uint16x8_t v9 = vmovl_high_u8(v7);
  uint8x16_t v10 = (uint8x16_t)veorq_s8(v27.val[1], v5);
  _Q17 = vmovl_u8(*(uint8x8_t *)v10.i8);
  _Q16 = vmovl_high_u8(v10);
  __asm
  {
    SHLL2           V18.4S, V16.8H, #0x10
    SHLL2           V19.4S, V17.8H, #0x10
  }
  uint8x16_t v19 = (uint8x16_t)veorq_s8(v27.val[2], v5);
  uint16x8_t v20 = vmovl_high_u8(v19);
  uint16x8_t v21 = vmovl_u8(*(uint8x8_t *)v19.i8);
  v27.val[0] = veorq_s8(v27.val[3], v5);
  v27.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v27.val[0]);
  v27.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v27.val[1]);
  v27.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v27.val[1].i8);
  v27.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v27.val[0].i8);
  v27.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v27.val[0]);
  v27.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v27.val[0].i8);
  int32x4_t v22 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q17.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v21.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v8.i8), 0x18uLL)), v27.val[0]);
  int32x4_t v23 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q19, (int8x16_t)vshll_high_n_u16(v21, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v8), 0x18uLL)), v27.val[3]);
  int32x4_t v24 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q16.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v20.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v9.i8), 0x18uLL)), v27.val[1]);
  int32x4_t v25 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q18, (int8x16_t)vshll_high_n_u16(v20, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v9), 0x18uLL)), v27.val[2]);
  v27.val[0] = veorq_s8(vandq_s8((int8x16_t)v22, v4), (int8x16_t)(*(_OWORD *)v27.val & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
  v27.val[3] = veorq_s8(vandq_s8((int8x16_t)v23, v4), (int8x16_t)(*(_OWORD *)&v27.val[3] & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
  v27.val[1] = veorq_s8(vandq_s8((int8x16_t)v24, v4), (int8x16_t)(*(_OWORD *)&v27.val[1] & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
  v27.val[2] = veorq_s8(vandq_s8((int8x16_t)v25, v4), (int8x16_t)(*(_OWORD *)&v27.val[2] & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
  v3[2] = vaddq_s32(vsubq_s32(v24, vaddq_s32((int32x4_t)v27.val[1], (int32x4_t)v27.val[1])), v6);
  v3[3] = vaddq_s32(vsubq_s32(v25, vaddq_s32((int32x4_t)v27.val[2], (int32x4_t)v27.val[2])), v6);
  *int v3 = vaddq_s32(vsubq_s32(v22, vaddq_s32((int32x4_t)v27.val[0], (int32x4_t)v27.val[0])), v6);
  v3[1] = vaddq_s32(vsubq_s32(v23, vaddq_s32((int32x4_t)v27.val[3], (int32x4_t)v27.val[3])), v6);
  return sub_1D0AF7BEC();
}

void sub_1D0AF7BEC()
{
}

uint64_t sub_1D0AF7C8C()
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 640)))(v1);
}

uint64_t sub_1D0AF7CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  LOBYTE(STACK[0xC58]) = v55 + ((v53 - 78) & 0x74) - 116;
  int v57 = 1332649919 * ((2 * ((v56 - 144) & 0xB843438) - (v56 - 144) - 193213497) ^ 0xC9084F35);
  *(_DWORD *)(v56 - 144) = v57 + 2140997255;
  *(_DWORD *)(v56 - 128) = v57 + v53 + 98;
  *(void *)(v51 + 3016) = v52;
  *(void *)(v51 + 3000) = a51;
  (*(void (**)(uint64_t))(v54 + 8 * (v53 + 455)))(v56 - 144);
  *(_DWORD *)(v56 - 128) = v53
                         + 1449114341
                         * ((283967426 - ((v56 - 144) | 0x10ECFFC2) + ((v56 - 144) | 0xEF13003D)) ^ 0x204DF9D6)
                         + 317;
  STACK[0xD30] = v52;
  STACK[0xD38] = a23 + ((v53 - 2112680638) & 0x7DECEEB2 ^ 0x333A1F32) + 16 * (int)v55;
  uint64_t v58 = (*(uint64_t (**)(uint64_t))(v54 + 8 * (v53 + 453)))(v56 - 144);
  return (*(uint64_t (**)(uint64_t))(v54 + 8 * (v53 ^ (95 * (v55 != 483155480)))))(v58);
}

uint64_t sub_1D0AF7E28()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 - 623) * (v1 == v2)) ^ v0)))();
}

void sub_1D0AF7E48()
{
  _DWORD *v1 = 0x80000000;
  (*(void (**)(unint64_t))(v2 + 8 * (v0 + 1414)))(STACK[0x218]);
  JUMPOUT(0x1D0AF7E8CLL);
}

void sub_1D0AF802C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v20 = 1477295531 * ((v19 - 1161710376 - 2 * ((v19 - 144) & 0xBAC1B568)) ^ 0x8DCA803B);
  *(void *)(v19 - 128) = a17;
  *(_DWORD *)(v19 - 140) = v20 + 358377245;
  *(_DWORD *)(v19 - 136) = v17 - v20 + 209736385;
  (*(void (**)(uint64_t))(v18 + 8 * (v17 ^ 0x69B)))(v19 - 144);
  JUMPOUT(0x1D0AF8CA8);
}

uint64_t sub_1D0AF8044@<X0>(int a1@<W8>)
{
  int v5 = *(_DWORD *)(v1 + 4 * (v3 - 526570650)) ^ 0x210BF791 ^ ((*(_DWORD *)(v1
                                                                                         + 4
                                                                                         * (v3 - 526570650)) >> 30)
                                                                            + 554432401
                                                                            - ((*(_DWORD *)(v1
                                                                                          + 4
                                                                                          * (v3 - 526570650)) >> 29) & 2));
  *(_DWORD *)(v1 + 4 * (v3 - 526570649)) = 526570649
                                                         - v3
                                                         + (*(_DWORD *)(v1 + 4 * (v3 - 526570649)) ^ 0x6C446782 ^ (1566083941 * v5 + 1816422274 - ((-1162799414 * v5) & 0xD888CF04)));
  unint64_t v6 = STACK[0x230];
  int v7 = -LODWORD(STACK[0x230]);
  int v8 = a1 - STACK[0x230] - 1621093605;
  *(_DWORD *)(v4 - 152) = a1 - STACK[0x230] - 1621093699;
  *(_DWORD *)(v4 - 128) = v8;
  uint64_t v9 = v4 - 152;
  unint64_t v10 = STACK[0x238];
  *(void *)(v9 + 8) = (v3 - 759801034) + v6;
  *(void *)(v9 + 16) = v10;
  *(_DWORD *)(v4 - 120) = v7;
  *(_DWORD *)(v4 - 116) = (a1 - 1621093741) ^ v6;
  *(_DWORD *)(v4 - 112) = v6 + a1 + 572803321;
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x7AE)))(v4 - 152);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v4 - 124)))(v11);
}

uint64_t sub_1D0AF8164@<X0>(unsigned int a1@<W8>)
{
  *(void *)(v4 + (v1 ^ v2)) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * ((v3 == 0) ^ a1)))();
}

uint64_t sub_1D0AF8210@<X0>(const char *a1@<X1>, uint64_t a2@<X7>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v61 = v37 ^ 0x498u;
  int v39 = (_DWORD *)(a2 - 0xE8AF10975501C4ALL);
  uint64_t v40 = a2 - 0xE8AF10975501C46;
  uint64_t v65 = a2 - 0xE8AF10975501C32;
  BOOL v62 = (_DWORD *)(a2 - 0xE8AF10975501C3ALL);
  HIDWORD(a15) = HIDWORD(a5) - 1118241946;
  v41.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v41.i64[1] = 0xF8F8F8F8F8F8F8F8;
  LODWORD(v68) = (a17 - 954602403) & 0x38E60FF5 ^ 0x6F;
  HIDWORD(v68) = (a17 - 954602403) & 0x38E60FF5;
  int v42 = (a17 + 691514962) & 0xD6C84DF9;
  LODWORD(v67) = (a17 + 691514962) & 0xD2084448;
  HIDWORD(v67) = v42;
  HIDWORD(v66) = v42 ^ 0x79;
  LODWORD(v66) = v42 ^ 0xEA;
  uint64_t v63 = a2 - 0xE8AF10975501C3ELL;
  uint64_t v64 = a2 - 0xE8AF10975501C42;
  uint64_t v43 = *(void *)(a3 + 8 * v37);
  uint64_t v44 = *(unsigned int *)(a2 - 0xE8AF10975501C46);
  HIDWORD(a20) = *(_DWORD *)(a2 - 0xE8AF10975501C46);
  unsigned int v45 = *(_DWORD *)(a2 - 0xE8AF10975501C42);
  unsigned int v46 = *(_DWORD *)(a2 - 0xE8AF10975501C3ELL);
  int v47 = *(unsigned __int8 *)(a2 - 0xE8AF10975501C32) ^ 0xA;
  if (v47 == 2)
  {
    HIDWORD(a17) = *v39;
    int8x16x4_t v70 = vld4q_s8(a1);
    HIDWORD(a9) = *v62;
    uint8x16_t v56 = (uint8x16_t)veorq_s8(v70.val[1], v41);
    _Q22 = vmovl_u8(*(uint8x8_t *)v56.i8);
    _Q21 = vmovl_high_u8(v56);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    return (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 8 * ((a17 - 954602403) & 0x38E60FE4 | 0x1Bu)))(v39, a1, -222443600, 222443616, 3880645490, v40, v44, 1199, a4, a5, v61, v38, a8, a9, v62, v63, v64, v40, v39,
             a15,
             v65,
             a17,
             __PAIR64__(v46, v45),
             v43,
             a20,
             v66,
             v67,
             v68,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37);
  }
  else
  {
    if (v47 != 1) {
      JUMPOUT(0x1D0AFAF6CLL);
    }
    HIDWORD(a17) = *v39;
    int8x16x4_t v69 = vld4q_s8(a1);
    uint8x16_t v48 = (uint8x16_t)veorq_s8(v69.val[2], v41);
    _Q26 = vmovl_high_u8(v48);
    _Q25 = vmovl_u8(*(uint8x8_t *)v48.i8);
    __asm
    {
      SHLL2           V25.4S, V25.8H, #0x10
      SHLL2           V26.4S, V26.8H, #0x10
    }
    return (*(uint64_t (**)(uint64_t, const char *, uint64_t, uint64_t, uint64_t, void, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 8 * SHIDWORD(v67)))(222443601, a1, -222443600, 222443616, 3880645490, *((unsigned int *)*(&off_1F26D60E0 + SHIDWORD(v66)) - 1), v44, &off_1F26D60E0, a4, a5, v61, v38, a8, a9, v62, v63, v64, v40, v39,
             a15,
             v65,
             a17,
             __PAIR64__(v46, v45),
             v43,
             a20,
             v66,
             v67,
             v68,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37);
  }
}

void sub_1D0AF8394()
{
}

uint64_t sub_1D0AF839C@<X0>(uint64_t a1@<X8>)
{
  BOOL v7 = v3 < v1;
  *(unsigned char *)(a1 + (v2 + v4 - 1373025549)) = *(unsigned char *)(v5 + (v2 + v4 - 1373025549)) ^ 0xF8;
  if (v7 == v4 - 1977642142 < v1) {
    BOOL v7 = v4 - 1977642142 < v3;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((1704 * v7) ^ v2)))();
}

void sub_1D0AF8404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,_DWORD *a30)
{
  *a30 = (*a30 ^ v32) + (a7 ^ v32) + ((v30 - 541) ^ (v32 + 114)) - (v31 & (2 * ((*a30 ^ v32) + (a7 ^ v32))));
  JUMPOUT(0x1D0AF8454);
}

uint64_t sub_1D0AF84F8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5)
{
  unint64_t v9 = v5 + v7;
  *(unsigned char *)(v9 + a1 + (v6 ^ 0x28Cu) - 34) = a2;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v9 < 0x40) * a5) ^ v6 ^ 0x3CD)))();
}

uint64_t sub_1D0AF89A4@<X0>(int a1@<W0>, unsigned int a2@<W1>, uint64_t a3@<X2>, int a4@<W8>)
{
  v8[*v8 * (unint64_t)a2 + 8 + v5] = *(unsigned char *)(a3 + v5);
  return (*(uint64_t (**)(void))(v10
                              + 8 * (((v4 + ((v4 + 86) ^ a1) + a4 + ((v4 - 48) | v7) + v9 > 0xF) * v6) ^ (v4 + 1316))))();
}

void sub_1D0AF8A00()
{
}

void sub_1D0AF8A74()
{
}

void sub_1D0AF8A80()
{
}

uint64_t sub_1D0AF8B44()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((100
                                * (((((v0 - 861) ^ 0x5B0u) - 390) ^ 0xFFFFFFFF8A5FA7A3)
                                 + (1973443462 - v1) < 8)) ^ (v0 - 861))))();
}

uint64_t sub_1D0AF8BA8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((3 * (v2 ^ 0x4B7) + 194) | 0xC3) ^ 0x18F) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1D0AF8BE4@<X0>(int a1@<W8>)
{
  int v4 = 52 * (a1 ^ 0x2EE);
  BOOL v6 = (v2 + 133905673) > 0xA436048 && (((v4 ^ 0x5CB) + 438) ^ 0xA43616Cu) - v1 > v2 + 133905673;
  return (*(uint64_t (**)(void))(v3 + 8 * (((8 * v6) | (16 * v6)) ^ v4)))();
}

void sub_1D0AF8C64()
{
}

uint64_t sub_1D0AF8D58@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W5>, uint64_t a6@<X8>)
{
  HIDWORD(v17) = a3 ^ v11;
  LODWORD(v17) = a3 ^ (19 * (v16 ^ 0x1DC) + 1207959001);
  int v18 = (v17 >> 27)
      + (a5 ^ v13)
      + ((v7 ^ v13) & (a4 ^ v14) | (a2 ^ v13) & (a4 ^ v13))
      + (*(_DWORD *)(a6 + 4 * (v6 + v15)) ^ v8);
  HIDWORD(v17) = a4 ^ 2;
  LODWORD(v17) = a4 ^ (v13 - 2);
  return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(v12 + 8 * ((998 * (v6 + 1 == v9 + 20)) ^ v16)))(a1, (v17 >> 2) + v13 - (v10 & (2 * (v17 >> 2))), v18 - ((2 * v18 - 1257966798) & v10) - 1445620989, a3);
}

void sub_1D0AF8E30()
{
}

uint64_t sub_1D0AF8E38@<X0>(int a1@<W1>, uint64_t a2@<X3>, uint64_t a3@<X7>, int a4@<W8>)
{
  *(unsigned char *)(a2 + (v4 + a1)) = *(unsigned char *)(a3 + v6 - 908205038);
  return (*(uint64_t (**)(void))(v5
                              + 8 * ((1409 * (a1 + v4 + 1 < ((73 * (a4 ^ 0x137)) ^ 0x1BFu))) ^ (73 * (a4 ^ 0x137)))))();
}

uint64_t sub_1D0AF8EA0()
{
  v15.val[1].i64[0] = ((_BYTE)v5 + 2) & 0xF;
  v15.val[1].i64[1] = ((_BYTE)v5 + 1) & 0xF;
  v15.val[2].i64[0] = v5 & 0xF;
  v15.val[2].i64[1] = ((_BYTE)v5 - 1) & 0xF;
  v15.val[3].i64[0] = ((_BYTE)v5 + 14) & 0xF;
  v15.val[3].i64[1] = ((_BYTE)v5 + 13) & 0xF;
  unint64_t v9 = STACK[0x268];
  v10.i64[0] = 0x8F8F8F8F8F8F8F8FLL;
  v10.i64[1] = 0x8F8F8F8F8F8F8F8FLL;
  uint64_t v11 = v5 + (((v7 + 127) | 0x100) ^ (v4 + 833));
  v15.val[0].i64[0] = ((_BYTE)v5 + ((v7 + 127) ^ (v4 + 65))) & 0xF;
  v15.val[0].i64[1] = ((_BYTE)v5 + 3) & 0xF;
  v12.i64[0] = vqtbl4q_s8(v15, (int8x16_t)xmmword_1D0B98270).u64[0];
  v16.val[0].i64[1] = ((_BYTE)v5 + 11) & 0xF;
  v16.val[1].i64[1] = ((_BYTE)v5 + 9) & 0xF;
  v16.val[2].i64[1] = ((_BYTE)v5 + 7) & 0xF;
  v16.val[3].i64[1] = ((_BYTE)v5 + 5) & 0xF;
  v16.val[0].i64[0] = ((_BYTE)v5 + 12) & 0xF;
  v16.val[1].i64[0] = ((_BYTE)v5 + 10) & 0xF;
  v16.val[2].i64[0] = ((_BYTE)v5 + 8) & 0xF;
  v16.val[3].i64[0] = (v5 + 6) & 0xF;
  v12.i64[1] = vqtbl4q_s8(v16, (int8x16_t)xmmword_1D0B98270).u64[0];
  int8x16_t v13 = vrev64q_s8(vmulq_s8(v12, v10));
  *(int8x16_t *)(*(void *)(v8 - 232) - 15 + v11) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v3 + (v11 & 0xF) - 15), *(int8x16_t *)(v0 - 15 + v11)), veorq_s8(*(int8x16_t *)((v11 & 0xF) + v1 - 13), *(int8x16_t *)((v11 & 0xF) + v2 - 14))), vextq_s8(v13, v13, 8uLL));
  return (*(uint64_t (**)(void))(v9 + 8 * ((746 * ((v6 & 0xFFFFFFF0) == 16)) ^ (v7 - 647))))();
}

uint64_t sub_1D0AF9000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unsigned __int8 *a29,uint64_t a30,uint64_t a31,uint64_t a32,_DWORD *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
  int v48 = *a29 ^ 0xA;
  if (v48 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47
  }
                                                                         + 8
                                                                         * (((*a33 == 286216983) * ((a5 + 615) ^ 0x285)) ^ (a5 + 1417))))(a1, 26, 79, 83);
  if (v48 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47
  }
                                                                         + 8
                                                                         * (((((a15 ^ (*a33 == 286216983)) & 1) == 0) | (2 * (((a15 ^ (*a33 == 286216983)) & 1) == 0))) ^ (a5 + 1158))))(a1, 2544915655, 79, 83);
  *(unsigned char *)(a6 + 91) = ((a47 - 103) ^ 0xBA) * (a47 - 86);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * (a5 + 637)))(a1, 2544915655, 79, 83);
}

uint64_t sub_1D0AF9138@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, char a4, uint64_t a5, unsigned int a6, uint64_t a7, char a8, int a9)
{
  a6 = v11
     - 1663139771 * (((&a4 | 0xA24291D1) - (&a4 | 0x5DBD6E2E) + 1572695598) ^ 0xDAAB475C)
     + 272;
  a7 = v12;
  a8 = (a1 ^ 0x98)
     - 69 * (((&a4 | 0xD1) - (&a4 | 0x2E) + 46) ^ 0x5C)
     + ((a1 << (3 * (v11 ^ 0x41) + ((v11 + 7) ^ 0x21))) & 0xF6 ^ 0xC6)
     + 125;
  a4 = -69 * (((&a4 | 0xD1) - (&a4 | 0x2E) + 46) ^ 0x5C) + 21;
  a5 = v10 + 0x11353BDA57BC7E1CLL;
  uint64_t v13 = (*(uint64_t (**)(char *))(v9 + 8 * (v11 + 995)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9 + 8 * ((842 * (a9 == 343018756)) ^ v11)))(v13);
}

uint64_t sub_1D0AF9234@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)((((37 * ((a18 + 583512772) & 0xDD384BC7 ^ 0x2C3)) ^ 0x92) * (a2 == 343018756)) ^ (a18 - 129))))();
}

uint64_t sub_1D0AF929C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  LODWORD(STACK[0x254]) = v11 + 1;
  uint64_t v14 = (*(uint64_t (**)(uint64_t, void))(v13 + 8 * (v12 ^ 0x7EE)))(a11, 0);
  int v15 = STACK[0x278];
  LODWORD(STACK[0x268]) = STACK[0x270];
  LODWORD(STACK[0x264]) = v15;
  LODWORD(STACK[0x26C]) = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v12 ^ 0x7DF)))(v14);
  uint64_t v16 = (*(uint64_t (**)(void))(v13 + 8 * (v12 + 1089)))();
  LODWORD(STACK[0x260]) = v16;
  int v17 = ((2 * STACK[0x218]) & 0x8DF7F7FE) + (STACK[0x218] ^ 0xC6FBFBFF);
  LODWORD(STACK[0x214]) = v17 - (((v17 << (v12 + 50)) + 1913128962) & 0xF037A6BA) - 1323313314;
  return sub_1D0AF9374(v16, v18, v19, v20, v21, v22);
}

uint64_t sub_1D0AF9374()
{
  uint64_t v6 = 4 * (v4 - 526570649);
  unsigned int v7 = *(_DWORD *)(v1 + 4 * (v4 - 526570650)) ^ 0xA0F47D26 ^ ((*(_DWORD *)(v1
                                                                                         + 4
                                                                                         * (v4 - 526570650)) >> 30)
                                                                            - 1594589914
                                                                            - 4
                                                                            * (*(_DWORD *)(v1
                                                                                         + 4
                                                                                         * (v4 - 526570650)) >> 31));
  unsigned int v8 = (*(_DWORD *)(v1 + v6) ^ 0xE1012E65 ^ (1664525 * v7 - 520016283 - ((3329050 * v7) & 0xC2025CCA)))
     + *((_DWORD *)&STACK[0x260] + (v2 - 666946018));
  *(_DWORD *)(v1 + v6) = v2 + (v8 ^ 0x594FF09B) + ((2 * v8) & 0xB29FE136) + 2129610115;
  unint64_t v9 = 1543459711 * ((v5 - 0x36B0477C0EDD6E1ALL - 2 * ((v5 - 152) & 0xC94FB883F122927ELL)) ^ 0x1AFD1025BDA091BALL);
  *(_DWORD *)(v5 - 112) = v9 ^ 1;
  int v10 = (v0 - 377693036) ^ v9;
  int v11 = (void *)(v5 - 152);
  v11[3] = (v4 + 1705881859) - v9;
  *int v11 = v9 + 2232452507u;
  *(_DWORD *)(v5 - 136) = v10;
  *(_DWORD *)(v5 - 144) = v10 ^ 0xFD;
  *(_DWORD *)(v5 - 120) = v9 + v0 + 700517179;
  *(_DWORD *)(v5 - 116) = (v0 - 377692906) ^ v9;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 + 1087)))(v5 - 152);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v5 - 140)))(v12);
}

void sub_1D0AF9508()
{
}

uint64_t sub_1D0AF9518()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((((v0 + 334135580) & 0xEC157FFE) - 754) * (v1 == 1842602089)) | v0)))();
}

uint64_t sub_1D0AF9570(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v18 = a1 ^ v16;
  uint64_t v19 = (a6 ^ 0x276u ^ (unint64_t)(v17 + 114)) + v10;
  unsigned int v20 = (v7 ^ v16)
      + v13
      + *(_DWORD *)(a4 + 4 * v19)
      + (((a7 ^ 0xB0ACE695 | v18) + v16 - (v12 & (2 * (a7 ^ 0xB0ACE695 | v18)))) ^ v8)
      + (*(_DWORD *)(v9 + 4 * (*(unsigned char *)(a3 + v19) - 27)) ^ v15);
  unsigned int v21 = (v20 + v16 - (v12 & (2 * v20))) ^ v16;
  unsigned int v22 = ((v21 << (*(unsigned char *)(a5 + v19) - 2)) | (v21 >> (2 - *(unsigned char *)(a5 + v19)))) + v18;
  return (*(uint64_t (**)(void))(v11 + 8 * ((19 * (v10 + 1 == v14 + 64)) | a6)))(v22 + v16 - (v12 & (2 * v22)));
}

uint64_t sub_1D0AF964C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                                           + 8
                                           * (((v5 < ((a5 + 202124822) & 0xF3F3CDF7 ^ 0x1C1))
                                             * (v7 + ((a5 - 385745811) | 0x1601180C) + 32)) ^ a5)))(0);
}

void sub_1D0AF96AC(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    BOOL v2 = *(void *)(a1 + 32) == 0;
  }
  else {
    BOOL v2 = 1;
  }
  char v3 = v2;
  int v1 = *(_DWORD *)(a1 + 4) + 1503905621 * ((((2 * a1) | 0x6D7B0760) - a1 - 918389680) ^ 0x6BC5ED64);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1D0AF9784()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((*(unsigned char *)(v1 + 5) == 1) * ((v0 - 440) ^ 0x195)) ^ v0)))();
}

uint64_t sub_1D0AF97BC()
{
  if (v2) {
    BOOL v5 = v3 == (((v0 ^ 0xFE) + v1) ^ (v0 - 1430729107));
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((254 * v6) ^ v0)))();
}

void sub_1D0AF9800(uint64_t a1)
{
  int v1 = 1663139771 * ((-2 - ((a1 | 0xF08AF2C8) + (~a1 | 0xF750D37))) ^ 0x779CDBBA);
  int v2 = *(_DWORD *)(a1 + 28) - v1;
  if (*(void *)(a1 + 8)) {
    BOOL v3 = *(void *)(a1 + 32) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  int v6 = !v3 && *(void *)(a1 + 40) != 0x428BD8738FDE5CBELL && *(_DWORD *)a1 - v1 != 2064382656;
  __asm { BRAA            X8, X17 }
}

void sub_1D0AF98DC(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 8) + 839339309 * ((((2 * a1) | 0x3D43021A) - a1 - 513900813) ^ 0xA240996C);
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)a1;
  v6[1] = &v5;
  v6[0] = v2;
  unsigned int v7 = v1 + 1449114341 * (((~v6 & 0xE619AF90) - (~v6 | 0xE619AF91)) ^ 0x2947567A) + 319;
  uint64_t v4 = (uint64_t)*(&off_1F26D60E0 + (v1 & 0x67753A25));
  (*(void (**)(void *))(v4 + 8 * (v1 + 455)))(v6);
  (*(void (**)(void))(v4 + 8 * (v1 ^ 0x1C1)))();
  (*(void (**)(void))(v4 + 8 * (v1 ^ 0x1C1)))();
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D0AF9B6C()
{
  return 4294925273;
}

uint64_t sub_1D0AF9B80(int a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((a1 - 1442999252) & 0x56026BCA) + 1334) ^ (3 * (a1 ^ 0x17D))) * ((v1 & 0x18) == 0)) ^ a1)))();
}

uint64_t sub_1D0AF9BCC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 + v2 - 48 - 1291) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1D0AF9C04@<X0>(unsigned __int8 a1@<W7>, unsigned __int8 a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  char v13 = *(unsigned char *)(STACK[0xB18] + (*(unsigned __int8 *)(v9 - 16) ^ 0xF8));
  *(unsigned char *)(v9 - 16) = v13 - ((2 * v13) & 0xF0) - 8;
  char v14 = *(unsigned char *)(STACK[0xB58] + (*(unsigned __int8 *)(v9 - 12) ^ 0xF8));
  *(unsigned char *)(v9 - 12) = v14 - ((2 * v14) & 0xF0) - 8;
  *(unsigned char *)(v9 - 8) = *(unsigned char *)(STACK[0xB98] + v12) - ((2 * *(unsigned char *)(STACK[0xB98] + v12)) & 0xF0) - 8;
  *(unsigned char *)(v9 - 4) = *(unsigned char *)(STACK[0xBD8] + a2) - ((2 * *(unsigned char *)(STACK[0xBD8] + a2)) & 0xF0) - 8;
  char v15 = *(unsigned char *)(STACK[0xBE8] + (v11 ^ 0xF8));
  *(unsigned char *)(v9 - 3) = v15 - ((2 * v15) & 0xF0) - 8;
  char v16 = *(unsigned char *)(STACK[0xBA8] + (*(unsigned __int8 *)(v9 - 11) ^ 0xF8));
  *(unsigned char *)(v9 - 7) = v16 - ((2 * v16) & 0xF0) - 8;
  char v17 = *(unsigned char *)(STACK[0xB68] + (*(unsigned __int8 *)(v9 - 15) ^ 0xF8));
  *(unsigned char *)(v9 - 11) = v17 - ((2 * v17) & 0xF0) - 8;
  char v18 = *(unsigned char *)(STACK[0xB28] + (v10 ^ 0xF8));
  *(unsigned char *)(v9 - 15) = v18 + (~(2 * v18) | 0xF) - 7;
  char v19 = *(unsigned char *)(STACK[0xB38] + (a1 ^ 0xF8));
  uint64_t v20 = *(unsigned __int8 *)(v9 - 14);
  *(unsigned char *)(v9 - 14) = v19 - ((2 * v19) & 0xF0) - 8;
  *(unsigned char *)(v9 - 6) = *(unsigned char *)(STACK[0xBB8] + (v20 ^ 0xF8))
                     - ((2 * *(unsigned char *)(STACK[0xBB8] + (v20 ^ 0xF8))) & 0xF0)
                     - 8;
  uint64_t v21 = *(unsigned __int8 *)(v9 - 10);
  LOBYTE(v20) = *(unsigned char *)(STACK[0xB78] + (*(unsigned __int8 *)(v9 - 2) ^ 0xF8));
  *(unsigned char *)(v9 - 10) = v20 - ((2 * v20) & 0xF0) - 8;
  *(unsigned char *)(v9 - 2) = *(unsigned char *)(STACK[0xBF8] + (v21 ^ 0xF8))
                     + (~(2 * *(unsigned char *)(STACK[0xBF8] + (v21 ^ 0xF8))) | 0xF)
                     - 7;
  uint64_t v22 = *(unsigned __int8 *)(v9 - 13);
  LOBYTE(v20) = *(unsigned char *)(STACK[0xB48] + (*(unsigned __int8 *)(v9 - 9) ^ 0xF8));
  *(unsigned char *)(v9 - 13) = v20 - ((2 * v20) & 0xF0) - 8;
  LOBYTE(v20) = *(unsigned char *)(STACK[0xB88] + (*(unsigned __int8 *)(v9 - 5) ^ 0xF8));
  *(unsigned char *)(v9 - 9) = v20 + (~(2 * v20) | 0xF) - 7;
  LOBYTE(v20) = *(unsigned char *)(STACK[0xBC8] + (*(unsigned __int8 *)(v9 - 1) ^ 0xF8));
  *(unsigned char *)(v9 - 5) = v20 - ((2 * v20) & 0xF0) - 8;
  *(unsigned char *)(v9 - 1) = *(unsigned char *)(STACK[0xC08] + (v22 ^ 0xF8))
                     + (~(2 * *(unsigned char *)(STACK[0xC08] + (v22 ^ 0xF8))) | 0xF)
                     - 7;
  return a9();
}

uint64_t sub_1D0AF9E40()
{
  void *v2 = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v0) ^ v1)))();
}

uint64_t sub_1D0AF9E68(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((a3 + (a3 ^ 0x4B0) - 414) * (v3 == v4)) ^ a3)))();
}

uint64_t sub_1D0AF9E9C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8 = (_DWORD *)(a1 - 0x578EC1BAFC81F4D1);
  *(_DWORD *)(a1 - 0x578EC1BAFC81F4D1) = 19245624;
  a3 = v5;
  LODWORD(a2) = (v7 + 1098961995) ^ (1477295531
                                   * ((&a2 - 391716457 - 2 * (&a2 & 0xE8A6E197)) ^ 0xDFADD4C4));
  (*(void (**)(uint64_t *))(v6 + 8 * (v7 ^ 0x551)))(&a2);
  *(_DWORD *)(v4 - 0x7AFA2E4D31C59236) = HIDWORD(a2);
  *v8 += 4;
  LODWORD(a2) = (v7 + 1098961995) ^ (1477295531
                                   * ((&a2 & 0xD1DE1906 | ~(&a2 | 0xD1DE1906)) ^ 0x192AD3AA));
  a3 = v5 + 4;
  (*(void (**)(uint64_t *))(v6 + 8 * (v7 + 689)))(&a2);
  int v9 = HIDWORD(a2);
  *v8 += 4;
  unsigned int v10 = 1334103649
      * (((&a2 | 0xE9E817F3) - &a2 + (&a2 & 0x1617E808)) ^ 0x8140DF5D);
  a2 = v4 - 0x25319409D7D9373FLL;
  HIDWORD(a3) = v10 ^ v9 ^ 0x5592F604 ^ ((v7 ^ 0x61E) - 509);
  a4 = v7 - v10 - 225;
  uint64_t v11 = (*(uint64_t (**)(uint64_t *))(v6 + 8 * (v7 ^ 0x51A)))(&a2);
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((1941 * (a3 == 343018756)) ^ v7)))(v11);
}

uint64_t sub_1D0AFA068(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((978 * (v4 + 1 == v5 + 60)) ^ a4)))();
}

uint64_t sub_1D0AFA138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v6
                                                                      + 8
                                                                      * (((((v3 - 650) | 0x4D3) ^ (v3 - 350236971) & 0x14E02FFF ^ 0x789)
                                                                        * (*(void *)(v5 + 16) == 0)) ^ v3)))(a1, a2, a3, (v4 + 68));
}

void sub_1D0AFA18C(uint64_t a1)
{
  (*(uint64_t (**)(void))(v1 + 12784))();
  (*(void (**)(uint64_t))(v1 + 11992))(a1);
  JUMPOUT(0x1D0AF9B70);
}

void sub_1D0AFA1C8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned char *a16, unsigned char *a17, unsigned char *a18, unsigned char *a19, unsigned int *a20,unsigned char *a21,unsigned char *a22,unsigned char *a23,unsigned char *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unsigned __int8 *a30,unsigned int *a31)
{
  int v31 = *a30 ^ 0xA;
  if (v31 == 1)
  {
    unsigned int v35 = *a31;
    unsigned int v36 = (*a31 >> 5) ^ 0xFFFFFFAB;
    *a24 = ((8 * *(unsigned char *)a31) ^ 0xB0) + ~(((8 * *a31) ^ 0xFFFFFFB0) << ((a3 ^ 0xD0) + 16)) - 7;
    *a23 = v36 - ((2 * v36) & 0xF0) - 8;
    *a22 = ((v35 >> 13) ^ 0x10) + ~(2 * (((v35 >> 13) ^ 0x10) & 0xFD ^ (v35 >> 13) & 5)) - 7;
    *a21 = ((v35 >> 21) ^ 0x73) + (~(2 * ((v35 >> 21) ^ 0x73)) | 0xF) - 7;
    unsigned int v37 = *a20;
    HIDWORD(v38) = *a20 ^ 0xD;
    LODWORD(v38) = v35 ^ 0x40000000;
    *a19 = (v38 >> 29) - ((2 * (v38 >> 29)) & 0xF0) - 8;
    *a18 = ((v37 >> 5) ^ 0x37) - ((2 * ((v37 >> 5) ^ 0x37)) & 0xF0) - 8;
    *a17 = ((v37 >> 13) ^ 0x34) - ((2 * ((v37 >> 13) ^ 0x34)) & 0xF0) - 8;
    unsigned int v34 = ((v37 >> 21) ^ 0xFFFFFFE1) - 16 * (((v37 >> 21) ^ 0xFFFFFFE1) >> 3) - 8;
  }
  else
  {
    if (v31 != 2) {
      goto LABEL_6;
    }
    unsigned int v34 = *a20;
    *a24 = ((*a20 >> 21) ^ 0xE1) + ~(2 * (((*a20 >> 21) ^ 0xE1) & 0x7A ^ ((7 * (a3 ^ 0x66)) ^ 0x73) & (*a20 >> 21))) - 7;
    *a23 = ((v34 >> 13) ^ 0x34) - ((2 * ((v34 >> 13) ^ 0x34)) & 0xF0) - 8;
    *a22 = ((v34 >> 5) ^ 0x37) + (~(2 * ((v34 >> 5) ^ 0x37)) | 0xF) - 7;
    unsigned int v32 = *a31;
    HIDWORD(v33) = v34 ^ 0xD;
    LODWORD(v33) = *a31 ^ 0x40000000;
    *a21 = (v33 >> 29) - ((2 * (v33 >> 29)) & 0xF0) - 8;
    *a19 = ((v32 >> 21) ^ 0x73) - ((2 * ((v32 >> 21) ^ 0x73)) & 0xF0) - 8;
    *a18 = ((v32 >> 13) ^ 0x10) - 2 * (((v32 >> 13) ^ 0x10) & 0x7A ^ (v32 >> 13) & 2) - 8;
    *a17 = ((v32 >> 5) ^ 0xAB) - ((2 * ((v32 >> 5) ^ 0xAB)) & 0xF0) - 8;
    LOBYTE(v34) = ((8 * v32) ^ 0xB0) + ((16 * v32) ^ 0x9F) - 7;
  }
  *a16 = v34;
LABEL_6:
  JUMPOUT(0x1D0AFA460);
}

void sub_1D0AFA6A8()
{
}

void sub_1D0AFA6E8()
{
}

void sub_1D0AFA910(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, _DWORD *a18)
{
  int v21 = ((v19 + 69 * (v18 ^ 0x1B6) - 1449) ^ a4) + (*a18 ^ v19);
  *a18 = v21 + v19 - (v20 & (2 * v21));
  JUMPOUT(0x1D0AFA960);
}

uint64_t sub_1D0AFAA10@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((1181 * (v2 + 1 == a1 + 64)) ^ v3)))();
}

void sub_1D0AFAF18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, _DWORD *a16)
{
  *a16 = (v19 ^ v18) + (a15 ^ v18) + v18 - ((v17 + v16 - 671) & (2 * ((v19 ^ v18) + (a15 ^ v18))));
  JUMPOUT(0x1D0AFAF68);
}

uint64_t sub_1D0AFAFE8()
{
  *(unsigned char *)(v5 + v1 + v3 + 24) = *(unsigned char *)(v4 + v1 + v3 + 24);
  return (*(uint64_t (**)(void))(v6 + 8 * (((v1 + 1 != v2 + 64) * (v0 - 316)) ^ v0)))();
}

void sub_1D0AFB028()
{
}

uint64_t sub_1D0AFB090@<X0>(uint64_t a1@<X1>, int a2@<W4>, uint64_t a3@<X8>)
{
  *(unsigned char *)(v4 + a1 + a3 - 1) = v5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v4 + a1) < 0x38) * a2) ^ v3)))();
}

uint64_t sub_1D0AFB0C4()
{
  int v5 = *(unsigned __int8 *)(v2 + 3);
  *uint64_t v4 = v0 + 4;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((v5 == 87) * (((v1 + 1544777194) & 0xA3EC9371) + 1155)) ^ (v1 + 386))))();
}

uint64_t sub_1D0AFB114(uint64_t a1, uint64_t a2, char a3, char a4, char a5, uint64_t a6, uint64_t a7, char a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8 * (((v10 != (((v9 + a3) & a4) + (v9 ^ a5) * a8 + 5)) * v8) ^ v9)))();
}

uint64_t sub_1D0AFB150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  int v32 = a31 - ((2 * LODWORD(STACK[0x25C])) & 0x3DD96742) - 1246022848;
  return (*(uint64_t (**)(void))(v31
                              + 8
                              * ((480
                                * ((v32 ^ (LODWORD(STACK[0x264]) - 1461530348) & 0x571D2E4F ^ 0xE1864E19)
                                 + 1778253636
                                 + ((2 * v32) & 0xFED5FFEE ^ 0x3CD16742) == 1768488763)) ^ LODWORD(STACK[0x264]))))();
}

uint64_t sub_1D0AFB228()
{
  *int v0 = v0[623];
  unint64_t v5 = 1543459711
     * ((~((v4 - 152) | 0xDFC020B62A8358BCLL) + ((v4 - 152) & 0xDFC020B62A8358BCLL)) ^ 0xF38D77EF99FEA487);
  int v6 = LODWORD(STACK[0x250]) ^ v5;
  int v7 = (void *)(v4 - 152);
  *int v7 = v5 + 3192250040u;
  *(_DWORD *)(v4 - 112) = v5 ^ 1;
  int v8 = LODWORD(STACK[0x24C]) ^ v5;
  *(_DWORD *)(v4 - 136) = v6;
  *(_DWORD *)(v4 - 144) = v8;
  int v9 = LODWORD(STACK[0x248]) ^ v5;
  *(_DWORD *)(v4 - 120) = v5 + 700517179 + v1;
  *(_DWORD *)(v4 - 116) = v9;
  v7[3] = (v2 - 1769663273) - v5;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v3 + 8 * SLODWORD(STACK[0x244])))(v4 - 152);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v4 - 140)))(v10);
}

void sub_1D0AFB30C()
{
}

uint64_t sub_1D0AFB318()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((225
                                * (v4 - v2 + v0 - 0x10B17FC23B8BC107 + (unint64_t)(151 * (v1 ^ 0x141u)) < (unint64_t)(v1 + 629) - 945)) ^ v1)))();
}

uint64_t sub_1D0AFB370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8 * ((38 * (v4 + 1 == v5 + 64)) ^ v7)))(a1, a4);
}

void sub_1D0AFB438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v15 = 1477295531 * ((~((v14 - 120) | 0x55D62FE1) + ((v14 - 120) & 0x55D62FE1)) ^ 0x9D22E54D);
  *(_DWORD *)(v14 - 116) = v15
                         - 145828059
                         + a10
                         - (((a10 + 32666352) & 0x155C671F ^ a10 & 3) << ((v13 ^ 0xD0) + 26))
                         + 743;
  *(_DWORD *)(v14 - 112) = 209736496 - v15 + v13 + 16;
  *(void *)(v14 - 104) = a13 + 0x927AD099280FBC2;
  JUMPOUT(0x1D0AFB500);
}

uint64_t sub_1D0AFB5E8(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((194 * ((((a5 - 529) ^ (a3 + a2 + ((a5 + 334) ^ 0x9FC004E2) < 8)) & 1) == 0)) ^ a5)))();
}

uint64_t sub_1D0AFB640(int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v12 = a1 + a2 + ((v9 - 1244) ^ (a3 + 203));
  unint64_t v13 = v12 + v11 + 1;
  uint64_t v14 = ((_BYTE)a1 + (_BYTE)a2 + ((v9 + 36) ^ (a3 - 53))) & 0xF;
  unint64_t v15 = v6 + v14 - v12;
  unint64_t v16 = v6 + v14 + 1;
  uint64_t v17 = v14 + 1 - v12;
  unint64_t v18 = v7 + v17;
  v14 += 2;
  unint64_t v19 = v7 + v14;
  unint64_t v20 = v8 + v17;
  unint64_t v21 = v8 + v14;
  BOOL v23 = v16 > v11 && v15 < v13;
  if (v19 > v11 && v18 < v13) {
    BOOL v23 = 1;
  }
  int v26 = v21 > v11 && v20 < v13 || v23;
  return (*(uint64_t (**)(void))(v10 + 8 * (((4 * v26) | (32 * v26)) ^ a6)))();
}

uint64_t sub_1D0AFB6C8@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  unint64_t v7 = v2 - 1;
  STACK[0x228] = v7;
  *(unsigned char *)(v6 + v7) = ((v3 + 56) ^ v4) * (v3 + 73);
  return (*(uint64_t (**)(void))(a1 + 8 * (((STACK[0x228] == 0) * v5) ^ a2)))();
}

uint64_t sub_1D0AFB6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * ((1896 * (v32 == ((a4 + 3 * (v31 ^ 0x39E) - 1324) ^ v31 ^ 0x2D8))) ^ v31)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_1D0AFB718()
{
  int v4 = (v0 ^ 0x5C6) + 644;
  if (v2) {
    BOOL v5 = v3 == 224;
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = v5;
  LODWORD(STACK[0x264]) = v4;
  unint64_t v7 = *(uint64_t (**)(void))(v1 + 8 * (int)((v6 * ((v4 ^ 0xFFFFF823) + 13 * (v0 ^ 0x5C6))) ^ v0));
  LODWORD(STACK[0x260]) = -42900;
  return v7();
}

uint64_t sub_1D0AFB768@<X0>(int a1@<W8>, uint64_t a2, __int16 a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,char a25,char a26,char a27,char a28,char a29,char a30,char a31,char a32,char a33,char a34,char a35,char a36,long long a37,long long a38,uint64_t a39,unint64_t *a40,char *a41,long long *a42,unint64_t *a43)
{
  uint64_t v47 = *(unsigned __int8 **)(v43 + 24);
  int v48 = v46 - 128;
  LODWORD(a41) = v44 - (((v46 - 128) & 0xD2A493DF | ~((v46 - 128) | 0xD2A493DF)) ^ 0x55B2BAAD) * a1 - 1603587764;
  a40 = &STACK[0x10B17FC23B8BBE38];
  (*(void (**)(uint64_t))(v45 + 8 * (v44 + 1354)))(v46 - 128);
  int v49 = 846572393 * ((v46 - 128) ^ 0x36635449);
  a41 = &a4;
  a40 = &STACK[0x10B17FC23B8BBE38];
  LODWORD(a42) = v44 - 656339557 + v49;
  HIDWORD(a42) = v49 + 2002220376;
  (*(void (**)(uint64_t))(v45 + 8 * (v44 + 1348)))(v46 - 128);
  unsigned int v50 = 846572393 * ((((v48 | 0x87B71D92) ^ 0xFFFFFFFE) - (~v48 | 0x7848E26D)) ^ 0x4E2BB624);
  a41 = &a5;
  LODWORD(a42) = v44 - 656339557 + v50;
  HIDWORD(a42) = v50 + 2002220376;
  a40 = &STACK[0x10B17FC23B8BBE38];
  (*(void (**)(uint64_t))(v45 + 8 * (v44 ^ 0x6C4)))(v46 - 128);
  uint64_t v51 = &v47[56 * *v47];
  a36 = v51[43] ^ 0xF8;
  a35 = v51[42] ^ 0xF8;
  a34 = v51[41] ^ 0xF8;
  a33 = v51[40] ^ 0xF8;
  a32 = v51[39] ^ 0xF8;
  a31 = v51[38] ^ 0xF8;
  a30 = v51[37] ^ 0xF8;
  a29 = v51[36] ^ 0xF8;
  a28 = v51[35] ^ 0xF8;
  a27 = v51[34] ^ 0xF8;
  a26 = v51[33] ^ 0xF8;
  a25 = v51[32] ^ 0xF8;
  a24 = v51[31] ^ 0xF8;
  a23 = v51[30] ^ 0xF8;
  a22 = v51[29] ^ 0xF8;
  a21 = v51[28] ^ 0xF8;
  a20 = v51[27] ^ 0xF8;
  a19 = v51[26] ^ 0xF8;
  a18 = v51[25] ^ 0xF8;
  a17 = v51[24] ^ 0xF8;
  a40 = (unint64_t *)&a17;
  a43 = &STACK[0x10B17FC23B8BBE38];
  LODWORD(a41) = v44 - 839339309 * ((588045026 - (v48 | 0x230CDAE2) + (v48 | 0xDCF3251D)) ^ 0x60123D7C) + 874;
  a42 = &a37;
  uint64_t v52 = (*(uint64_t (**)(uint64_t))(v45 + 8 * (v44 + 1350)))(v46 - 128);
  HIBYTE(a39) = BYTE3(a38);
  *(_DWORD *)((char *)&a39 + 3) = *(_DWORD *)((char *)&a37 + 15);
  *(_DWORD *)((char *)&a38 + 15) = *(_DWORD *)((char *)&a37 + 11);
  *(void *)((char *)&a38 + 7) = *(void *)((char *)&a37 + 3);
  BYTE6(a38) = BYTE2(a37);
  WORD2(a38) = a37;
  return (*(uint64_t (**)(uint64_t))(v45 + 8 * v44))(v52);
}

void sub_1D0AFBAA8()
{
}

void sub_1D0AFBAF0()
{
}

void sub_1D0AFBAFC()
{
}

uint64_t sub_1D0AFBB08()
{
  int v4 = v0 ^ 0x18B;
  *(unsigned char *)(v3 - 192) = *v2;
  *(unsigned char *)(v3 - 191) = v2[1];
  *(unsigned char *)(v3 - 190) = v2[2];
  *(unsigned char *)(v3 - 189) = v2[3];
  *(unsigned char *)(v3 - 188) = v2[4];
  *(unsigned char *)(v3 - 187) = v2[5];
  *(unsigned char *)(v3 - 186) = v2[6];
  *(unsigned char *)(v3 - 185) = v2[7];
  *(unsigned char *)(v3 - 184) = v2[8];
  *(unsigned char *)(v3 - 183) = v2[9];
  *(unsigned char *)(v3 - 182) = v2[10];
  *(unsigned char *)(v3 - 181) = v2[11];
  *(unsigned char *)(v3 - 180) = v2[12];
  int v5 = v0 ^ 0x44D;
  int v6 = v5 + 644;
  *(unsigned char *)(v3 - 179) = v2[13];
  int v7 = 13 * v5;
  if (v2) {
    BOOL v8 = v3 == 192;
  }
  else {
    BOOL v8 = 1;
  }
  int v9 = v8;
  *(unsigned char *)(v3 - 178) = v2[14];
  LODWORD(STACK[0x264]) = v6;
  unsigned int v10 = v9 * ((v6 ^ 0xFFFFF823) + v7);
  char v11 = v2[15];
  LODWORD(STACK[0x260]) = -42900;
  *(unsigned char *)(v3 - 177) = v11;
  return (*(uint64_t (**)(void))(v1 + 8 * (int)(v10 ^ v4)))();
}

void IPaI1oem5iL()
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  int v0 = (uint64_t *)*(&off_1F26D60E0
                  + (*((unsigned char *)off_1F26D6358
                                                    + (*((unsigned __int8 *)off_1F26D61F0
                                                       + (99
                                                                         * (dword_1EA634B10 ^ 0x56 ^ dword_1EA629A98))) ^ 0x1Eu)
                                                    - 8) ^ (99 * (dword_1EA634B10 ^ 0x56 ^ dword_1EA629A98)))
                  + 79);
  uint64_t v1 = (char *)off_1F26D63E8 - 8;
  uint64_t v2 = (char *)off_1F26D63E0 - 4;
  uint64_t v3 = (uint64_t *)*(&off_1F26D60E0
                  + (*((unsigned char *)off_1F26D63E0
                                      + (*((unsigned __int8 *)off_1F26D63E8
                                         + (99 * (*v0 ^ dword_1EA629A98 ^ 0x56))
                                         - 8) ^ 0xE9u)
                                      - 4) ^ (99 * (*v0 ^ dword_1EA629A98 ^ 0x56)))
                  - 78);
  uint64_t v4 = 170569571 * (((*v3 ^ *v0) - (void)&v6) ^ 0x653207D96BFD6456);
  *int v0 = v4;
  *uint64_t v3 = v4;
  v7[1] = 291625862
        - 1334103649 * ((1855394389 - (v7 | 0x6E971255) + (v7 | 0x9168EDAA)) ^ 0xF9C02504);
  LOBYTE(v3) = 99 * (*(_DWORD *)v0 ^ 0x56 ^ *(_DWORD *)v3);
  uint64_t v5 = (uint64_t)*(&off_1F26D60E0
                + ((99 * ((dword_1EA629A98 - dword_1EA634B10) ^ 0x56)) ^ byte_1D0B97D70[byte_1D0B92E80[(99 * ((dword_1EA629A98 - dword_1EA634B10) ^ 0x56))] ^ 0x1D])
                - 180);
  (*(void (**)(_DWORD *))(v5
                                   + 8
                                   * ((v3 ^ v2[v1[v3] ^ 0xF0])
                                    + 1533)))(v7);
  __asm { BRAA            X8, X17 }
}

void sub_1D0AFBDE0(_DWORD *a1)
{
  unsigned int v1 = *a1 - 846572393 * ((2 * (a1 & 0x71D830D) - a1 - 119374606) ^ 0xCE8128BB);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D0AFBEAC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v0 == 55) ^ (v1 - 63)) & 1) * ((3 * (v1 ^ 0x3B6)) ^ 0x4EE)) ^ v1)))();
}

uint64_t sub_1D0AFBF00@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(unsigned __int8 *)(v1 + 5) == (((a1 + 104) & 0x5A) - 23))
                                * (((a1 - 69) | 0x106) - 482)) ^ a1)))();
}

uint64_t sub_1D0AFBF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v44
                                                     + 8
                                                     * ((((((v43 - 887) | 6) + 1357) ^ (v43 - 36)) * (v41 == v42)) ^ v43)))(a1, a41);
}

uint64_t sub_1D0AFBF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,int a50,int a51)
{
  unsigned int v52 = a11 - ((2 * a49) & 0x43E9243A) + ((a51 + 1262050756) & 0xB4C6A5E8) + ((a51 - 539) | 0x509) - 2030667836;
  return (*(uint64_t (**)(void))(v51
                              + 8
                              * ((175
                                * (((2 * v52) & 0xBFFEB99E ^ 0x3E8201A) + (v52 ^ 0xFE0BCED2) - 205523663 != 1405047296)) ^ a51)))();
}

void sub_1D0AFC068()
{
}

uint64_t sub_1D0AFC120@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + v2) = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1641 * (v2 + (v3 + 293) - 812 == v1)) ^ (v3 + 69))))();
}

void sub_1D0AFC154()
{
}

uint64_t sub_1D0AFC210()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 + 483 + (v0 ^ 0x66F) - 1206) * (v2 == v1)) ^ v0)))();
}

uint64_t sub_1D0AFC240@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  *(__n128 *)(v2 + a1) = a2;
  return (*(uint64_t (**)(void))(v5 + 8 * (((a1 + 16 == (v3 ^ 0x55A)) * v4) ^ v6)))();
}

void sub_1D0AFC26C()
{
}

uint64_t sub_1D0AFC274@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,__int16 a23,char a24)
{
  uint64_t v28 = (unsigned __int16)(v27 - 909) % 0xD2u;
  int v29 = *(&a24 + (v27 + v25 + 142) % 0xD2u);
  HIDWORD(v31) = v29 ^ 4;
  LODWORD(v31) = (v29 ^ 0x20) << 24;
  int v30 = v31 >> 29;
  int v32 = *(&a24 + (v27 + v25 + 98) % 0xD2u);
  HIDWORD(v31) = v32 ^ 4;
  LODWORD(v31) = (v32 ^ 0x20) << 24;
  int v33 = v31 >> 27;
  HIDWORD(v31) = *(&a24 + (v27 + v25) % 0xD2u);
  LODWORD(v31) = (HIDWORD(v31) ^ 0x24) << 24;
  int v34 = ((v30 - ((v30 << (a1 ^ 0xBE)) & 0x48) + 36) ^ *(&a24 + v28)) + v33 - (v31 >> 25);
  *(&a24 + v28) = v34 - ((2 * v34) & 0x48) + 36;
  return (*(uint64_t (**)(void))(v24 + 8 * ((1453 * (v27 + 1 == v26 + 840)) ^ a1)))((v27 + v25) >> 1);
}

uint64_t sub_1D0AFC37C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = v1 + 127 - a1;
  int8x16_t v6 = vrev64q_s8(*(int8x16_t *)(v5 - 15));
  int8x16_t v7 = vextq_s8(v6, v6, 8uLL);
  int8x16_t v8 = vrev64q_s8(*(int8x16_t *)(v5 - 31));
  int8x16_t v9 = vextq_s8(v8, v8, 8uLL);
  uint64_t v10 = v3 + 127 - a1;
  v11.i64[0] = 0xF0F0F0F0F0F0F0F0;
  v11.i64[1] = 0xF0F0F0F0F0F0F0F0;
  v12.i64[0] = 0xF9F9F9F9F9F9F9F9;
  v12.i64[1] = 0xF9F9F9F9F9F9F9F9;
  int8x16_t v13 = vrev64q_s8(vaddq_s8(vaddq_s8(v7, v12), vmvnq_s8(vandq_s8(vaddq_s8(v7, v7), v11))));
  *(int8x16_t *)(v10 - 15) = vextq_s8(v13, v13, 8uLL);
  int8x16_t v14 = vrev64q_s8(vaddq_s8(vaddq_s8(v9, v12), vmvnq_s8(vandq_s8(vaddq_s8(v9, v9), v11))));
  *(int8x16_t *)(v10 - 31) = vextq_s8(v14, v14, 8uLL);
  return (*(uint64_t (**)(void))(v4 + 8 * (v2 ^ (4 * (a1 != 96)))))();
}

uint64_t sub_1D0AFC414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17
                                                                                                  + 8 * (((v16 ^ 0x11A) + 437) ^ 0x1A6 ^ (v16 + 780))))(a16, a2, a3, a4, a5, a6, a15);
}

uint64_t sub_1D0AFC468(uint64_t a1, int a2, int a3, int a4, int a5)
{
  unsigned int v8 = a3 - 32;
  uint64_t v9 = v5 + v8;
  long long v10 = *(_OWORD *)(v9 - 31);
  uint64_t v11 = v6 + v8;
  *(_OWORD *)(v11 - 15) = *(_OWORD *)(v9 - 15);
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7 + 8 * (((a4 == 32) * ((a2 + 1170) ^ a5)) ^ (a2 + 521))))();
}

uint64_t sub_1D0AFC474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  uint64_t v15 = (*(uint64_t (**)(void, uint64_t))(v12 + 8 * (((a12 + 376) | 0xA) + 1027)))(a11 - *(unsigned __int8 *)(v13 + 14), 2403785118);
  *int8x16_t v14 = v15;
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((((((a12 + 120) | 0xA) + 1) ^ (v15 == 0)) & 1)
                                * (((a12 + 376) | 0xA) ^ 0x22C)) ^ ((a12 + 376) | 0xA))))();
}

void sub_1D0AFC4E4()
{
  uint64_t v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x1D0AFC4FCLL);
}

uint64_t sub_1D0AFC5A0@<X0>(_WORD *a1@<X0>, __int16 a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((86
                                * ((unsigned __int16)(*a1 + a2) != (((v2 - 845063034) & 0x125EA1FF ^ 0x41FE) & 0x1FFFF))) ^ v2)))();
}

void OowSGu()
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = *(&off_1F26D60E0
       + ((99 * ((dword_1EA629A98 + dword_1EA634B28) ^ 0x56)) ^ byte_1D0B8BD60[byte_1D0B98070[(99 * ((dword_1EA629A98 + dword_1EA634B28) ^ 0x56))] ^ 0x2E])
       - 154);
  uint64_t v1 = (unsigned __int8 *)off_1F26D61E0;
  unsigned int v2 = (char *)off_1F26D62C8 - 12;
  uint64_t v3 = *(&off_1F26D60E0
       + (*((unsigned char *)off_1F26D62C8
                           + (*((unsigned __int8 *)off_1F26D61E0
                              + (99 * ((dword_1EA629A98 + *v0) ^ 0x56))) ^ 0x9Cu)
                           - 12) ^ (99 * ((dword_1EA629A98 + *v0) ^ 0x56)))
       - 121);
  uint64_t v4 = (*v3 ^ *v0) - (void)&v6;
  *uint64_t v0 = 170569571 * v4 - 0x653207D96BFD6456;
  *uint64_t v3 = 170569571 * (v4 ^ 0x653207D96BFD6456);
  v7[1] = 291625862 - 1334103649 * (((v7 | 0x7B868571) + (~v7 | 0x84797A8E)) ^ 0x132E4DDE);
  LOBYTE(v3) = 99 * ((*(_DWORD *)v3 - *(_DWORD *)v0) ^ 0x56);
  uint64_t v5 = (uint64_t)*(&off_1F26D60E0
                + ((99 * ((dword_1EA629A98 - dword_1EA634B28) ^ 0x56)) ^ byte_1D0B8BC60[byte_1D0B97F70[(99 * ((dword_1EA629A98 - dword_1EA634B28) ^ 0x56))] ^ 0x1E])
                - 51);
  (*(void (**)(_DWORD *))(v5
                                   + 8
                                   * ((v3 ^ v2[v1[v3] ^ 0x89])
                                    + 1434)))(v7);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1D0AFC828()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 - 662) ^ v1 ^ 0x767 ^ 0x1C5) * ((55 - v0) < 8)) ^ v1)))();
}

void sub_1D0AFC868(void *a1)
{
  if (a1[1]) {
    BOOL v1 = a1[3] == 0x578EC1BAFC81F4D1;
  }
  else {
    BOOL v1 = 1;
  }
  int v3 = v1 || a1[2] == 0x7AFA2E4D31C5923ALL;
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1D0AFC978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * ((496 * (v8 + 1 == v12 + 32)) ^ v9)))(a1, a2, a3, a4, a8, a8, a7, v10);
}

uint64_t sub_1D0AFCA68(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4
                                                              + 8
                                                              * ((28
                                                                * (((a4 - 1) ^ (((a4 - 182) | v5) - 5 < 0x10)) & 1)) ^ (a4 + 376))))(a1, a2, 3763273823);
}

uint64_t sub_1D0AFCAC0(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((120 * ((((a3 - a6) ^ (a5 + 171)) & v6) != 0)) ^ a3)))((a3 - 58) | 0x41F);
}

uint64_t sub_1D0AFCAFC@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (((((v2 == v3) ^ (a1 - 104)) & 1)
                                * ((a1 - 335683583) & 0x14021FFB ^ 0x50F)) ^ a1)))();
}

uint64_t sub_1D0AFCB44(uint64_t a1, uint64_t a2, int8x8_t a3, uint64_t a4, unsigned int a5, int a6)
{
  int v11 = v7 - 8;
  uint64_t v12 = v6 + v11 + ((v8 + 61) ^ a5);
  *(int8x8_t *)(a2 + v12) = veor_s8(*(int8x8_t *)(a1 + v12), a3);
  return (*(uint64_t (**)(void))(v10 + 8 * (((v9 + v11 != 8) * a6) ^ v8)))();
}

uint64_t sub_1D0AFCB4C@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (a1 ^ (1930 * ((v2 & 0x18) == 0)))))();
}

void sub_1D0AFCB8C(uint64_t a1)
{
  int v1 = *(_DWORD *)a1;
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = ((unint64_t)(*(_DWORD *)(v2 - 0x10B17FC23B8BBE1CLL) + 381) >> 3) & 0x3F;
  *(unsigned char *)(v2 - 0x10B17FC23B8BBE14 + v3) = 0x80;
  int v4 = v1 + 1580882533 * ((2 * ((a1 ^ 0xBE3334B4) & 0x10D77B48) - (a1 ^ 0xBE3334B4) + 1864926391) ^ 0x488303C3);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1D0AFCCB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  BOOL v9 = v6 - v8 - (unint64_t)(v5 + 737) + 949 < ((a5 + v5 - 105) ^ 0xAAB8CEEAuLL);
  return (*(uint64_t (**)(void))(v7 + 8 * (((2 * v9) | (32 * v9)) ^ v5)))();
}

uint64_t sub_1D0AFCD00()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((891 * (v0 + 1 == v3 + 60)) ^ v1)))();
}

uint64_t sub_1D0AFCDDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6 = v3 - 792;
  if (LODWORD(STACK[0x214]) + LODWORD(STACK[0x210]) + LODWORD(STACK[0x224]) == v5 - 1235395562) {
    uint64_t v7 = 343018756;
  }
  else {
    uint64_t v7 = v6;
  }
  return v4(a1, a2, a3, v7);
}

uint64_t sub_1D0AFCE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, uint64_t a13)
{
  a12 = v14 + 846572393 * (((&a12 | 0xCE1786BD) + (~&a12 | 0x31E87942)) ^ 0xF874D2F5) - 963;
  (*(void (**)(unsigned int *))(v13 + 8 * (v14 + 153)))(&a12);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13
                                                              + 8
                                                              * (((a13 == 0) * (((v14 - 1323) | 0x284) - 485)) ^ v14)))(a13, v15, v16);
}

uint64_t sub_1D0AFCEAC()
{
  uint64_t v4 = *(unsigned __int8 *)(v3 + 6) - 1;
  if (v4 <= 3) {
    __asm { BR              X16 ; sub_1D0AEB63C sub_1D0AF779C sub_1D0B02934 sub_1D0B0F800 }
  }
  unsigned char *v2 = -1;
  return (v1 - 343018746);
}

uint64_t sub_1D0AFCEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v39 = v37 - 136;
  *(void *)(v37 - 136) = v34 + 0x10B17FC23B8BC8E4;
  *(_DWORD *)(v37 - 128) = (v36 - 483688652) ^ (1334103649 * ((v37 - 136) ^ 0x68A8C8AE));
  (*(void (**)(uint64_t))(v38 + 8 * (v36 ^ 0x12D)))(v37 - 136);
  unsigned int v40 = 1332649919 * (((v39 | 0x4F40D89F) - v39 + (v39 & 0xB0BF2760)) ^ 0x72335C6D);
  *(_DWORD *)(v37 - 120) = v36 + 12 + v40;
  *(_DWORD *)(v37 - 136) = v40 + 2140997303;
  *(void *)(v37 - 128) = *(void *)(v35 + 8 * (int)(v36 & 0xE745F341)) - 4;
  *(void *)(v37 - 112) = v34 + 0x10B17FC23B8BC8E4;
  (*(void (**)(uint64_t))(a29 + 8 * (v36 + 369)))(v37 - 136);
  unsigned int v41 = 1332649919 * ((323988303 - (v39 | 0x134FAB4F) + (v39 | 0xECB054B0)) ^ 0xD1C3D042);
  *(void *)(v37 - 112) = v34 + 0x10B17FC23B8BC8E4;
  *(void *)(v37 - 128) = a34;
  *(_DWORD *)(v37 - 136) = v41 + 2140997288;
  *(_DWORD *)(v37 - 120) = v36 + 12 + v41;
  uint64_t v42 = (*(uint64_t (**)(uint64_t))(a29 + 8 * (v36 + 369)))(v37 - 136);
  STACK[0xD10] = STACK[0xCB8];
  LODWORD(STACK[0xD18]) = STACK[0xCC0];
  STACK[0xD1C] = STACK[0xCC4];
  LODWORD(STACK[0xD24]) = STACK[0xCCC];
  *(_OWORD *)&STACK[0xD28] = *(_OWORD *)&STACK[0xCD0];
  return (*(uint64_t (**)(uint64_t))(a29
                                            + 8
                                            * (int)((104 * (((((v36 + 2035843907) & 0x86A77BAD) + 271) ^ 0x483) == 64)) | (v36 + 2035843907) & 0x86A77BAD)))(v42);
}

uint64_t sub_1D0AFD124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  return (*(uint64_t (**)(void))(v57
                              + 8
                              * (((((v56 + 957) ^ 0x5BD) + 245) * ((unint64_t)(a37 - a56 - a34 + 449) < 0x10)) ^ v56)))();
}

uint64_t sub_1D0AFD178()
{
  uint64_t v4 = *(_DWORD **)(v0 + 56);
  **(void **)(v0 + 16) = 0;
  *uint64_t v4 = 0;
  return (*(uint64_t (**)(void))(v1 + 8 * (((*(unsigned char *)(v2 + 5) == 1) * ((183 * (v3 ^ 0x1F5)) ^ 0xF7)) ^ v3)))();
}

uint64_t sub_1D0AFD1C8@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)(v3 + a1 + 24) = *(_OWORD *)(v6 + a1 + 24);
  return (*(uint64_t (**)(void))(v1 + 8 * ((((v2 ^ v4) + a1 == 64) * v7) | v5)))();
}

uint64_t sub_1D0AFD1FC@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 7 + (v3 + v7 - v4)) = *(void *)(a1 - 7 + (v3 + v7 - v4));
  return (*(uint64_t (**)(void))(v6 + 8 * ((779 * (v4 + ((v5 + 596) | 0xC0) - 1001 == (v2 & 0xFFFFFFF8))) ^ v5)))();
}

void sub_1D0AFD24C()
{
}

uint64_t sub_1D0AFD2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, unint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v38 = 839339309 * ((((v37 - 144) | 0xC5A37750) - ((v37 - 144) & 0xC5A37750)) ^ 0x79426F31);
  STACK[0xD68] = a13;
  STACK[0xD70] = v35 - v34;
  *(_DWORD *)(v37 - 120) = v38 ^ 0x1892F8D0;
  *(_DWORD *)(v37 - 144) = v38 + v36 - 484;
  STACK[0xD80] = a15;
  uint64_t v39 = (*(uint64_t (**)(uint64_t))(a2 + 8 * (v36 + 452)))(v37 - 144);
  return (*(uint64_t (**)(uint64_t))(a34
                                            + 8
                                            * (((*(_DWORD *)(v37 - 140) == (((v36 - 629) | 8) ^ 0x14720CCC))
                                              * (((v36 - 1116531894) & 0x428CECBB) - 579)) ^ v36)))(v39);
}

uint64_t sub_1D0AFD74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unint64_t a49)
{
  *(void *)(v49 + 2992) = &STACK[0x10B17FC23B8BCA94];
  *(_DWORD *)(v52 - 136) = (v51 - 483688603) ^ (1334103649
                                              * ((2 * ((v52 - 144) & 0x10CEBEF0) - (v52 - 144) + 1865498895) ^ 0x79989A1));
  (*(void (**)(uint64_t))(v50 + 8 * (v51 ^ 0x1DC)))(v52 - 144);
  int v53 = v51 + 61;
  int v54 = 1332649919 * ((((2 * (v52 - 144)) | 0x9438286A) - (v52 - 144) - 1243354165) ^ 0x776F90C7);
  STACK[0xD38] = (unint64_t)*(&off_1F26D60E0 + v51 - 1039) - 4;
  *(_DWORD *)(v52 - 128) = v51 + 61 + v54;
  *(_DWORD *)(v52 - 144) = v54 + 2140997303;
  STACK[0xD48] = (unint64_t)&STACK[0x10B17FC23B8BCA94];
  uint64_t v55 = 8 * (v51 ^ 0x266);
  (*(void (**)(uint64_t))(v50 + v55))(v52 - 144);
  int v56 = 1332649919 * ((v52 - 144) ^ 0x3D7384F2);
  STACK[0xD38] = a49;
  STACK[0xD48] = (unint64_t)&STACK[0x10B17FC23B8BCA94];
  *(_DWORD *)(v52 - 144) = v56 + 2140997288;
  *(_DWORD *)(v52 - 128) = v53 + v56;
  uint64_t v57 = (*(uint64_t (**)(uint64_t))(v50 + v55))(v52 - 144);
  STACK[0xCC0] = STACK[0xC68];
  LODWORD(STACK[0xCC8]) = STACK[0xC70];
  STACK[0xCCC] = STACK[0xC74];
  LODWORD(STACK[0xCD4]) = STACK[0xC7C];
  return sub_1D0AFD938(v57);
}

uint64_t sub_1D0AFD938@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)(v5 + a1 + 24) = *(_OWORD *)(v6 + a1 + 24);
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v4 ^ v1 ^ v2) + a1 == 64) * v7) ^ v4)))();
}

uint64_t sub_1D0AFD970()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 - 284) ^ 0x5DA) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1D0AFD9A8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((((7 * (v1 ^ 0xF1)) ^ 0x1E6) * (v2 != v3)) ^ v1)))();
}

void sub_1D0AFD9E8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) ^ (846572393 * (((a1 | 0xD0317A82) - (a1 & 0xD0317A82)) ^ 0xE6522ECB));
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1D0AFDAC8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  unsigned int v3 = *(_DWORD *)(result + 12) ^ v2;
  unsigned int v4 = HIBYTE(v3) ^ 0xFFFFFFE6;
  int v5 = (HIWORD(v3) ^ 0xE) + (~(2 * (HIWORD(v3) ^ 0xE)) | 0xF) + 121;
  int v6 = (v3 >> 8) ^ 0x32;
  char v7 = (2 * v6) & 0xF0;
  LOBYTE(v6) = v6 + 120;
  *(unsigned char *)(a2 - 0x55C89A4359EC5AEFLL) = (((2 * (v3 & 0xF ^ 0xA)) | 0x70) - (v3 & 0xF ^ 0xA) + 72) ^ 0xAE;
  *(unsigned char *)(a2 - 0x55C89A4359EC5AEELL) = ((v3 & 0xF0) >> 4) ^ 0x13;
  *(unsigned char *)(a2 - 0x55C89A4359EC5AEDLL) = (((2 * (v6 & 0xF ^ 1)) | 0x70) - (v6 & 0xF ^ 1) + 72) ^ 0xAE;
  *(unsigned char *)(a2 - 0x55C89A4359EC5AECLL) = ((v6 - v7) >> 4) ^ 0x18;
  *(unsigned char *)(a2 - 0x55C89A4359EC5AEBLL) = (((2 * (v5 & 0xF ^ 1)) | 0x70) - (v5 & 0xF ^ 1) + 72) ^ 0xAE;
  *(unsigned char *)(a2 - 0x55C89A4359EC5AEALL) = (((BYTE2(v3) ^ 0xE) + (~(2 * (HIWORD(v3) ^ 0xE)) | 0xF) + 121) >> 4) ^ 0x18;
  *(unsigned char *)(a2 - 0x55C89A4359EC5AE9) = (((2 * ((v4 + 120) & 0xF ^ 1)) | 0x70) - ((v4 + 120) & 0xF ^ 1) + 72) ^ 0xAE;
  *(unsigned char *)(a2 - 0x55C89A4359EC5AE8) = ((v4 + 120 - ((2 * v4) & 0xF0)) >> 4) ^ 0x18;
  *(_DWORD *)(result + 8) = 343018756;
  return result;
}

uint64_t sub_1D0AFDC64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x228] = v73;
  return (*(uint64_t (**)(void))(a72 + 8 * ((399 * (v73 == ((631 * (v72 ^ 0xF1) - 445) ^ (19 * (v72 ^ 0xD8))))) ^ v72)))();
}

uint64_t sub_1D0AFDCBC@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)(v3 + a1 + 24) = *(_OWORD *)(v2 + a1 + 24);
  return (*(uint64_t (**)(void))(v5 + 8 * (((a1 + 16 == (v4 - 465) - 432) * v1) ^ v4)))();
}

uint64_t sub_1D0AFDCF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v76 = (v74 - 661) | 0x62;
  (*(void (**)(uint64_t))(a2 + 8 * (v74 + 682)))(v75);
  unint64_t v72 = ((unint64_t)&STACK[0x230] ^ 0xEDFFF9F5DFE17EAELL)
      + 0x76FFEF7B7A7ED852
      + ((2 * (void)&STACK[0x230]) & 0xDBFFF3EBBFC2FD50);
  LOBYTE(STACK[0x2EF]) = ((v76 - 13) ^ v72 ^ 0x4B) * (v72 + 17);
  LOBYTE(STACK[0x2EE]) = ((v72 | 1) ^ 0xBA) * (v72 + 18);
  return (*(uint64_t (**)(void))(a72 + 8 * v76))();
}

void sub_1D0AFDD18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int8x16_t *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int8x16_t *a50)
{
  v50.i64[0] = 0x4444444444444444;
  v50.i64[1] = 0x4444444444444444;
  v51.i64[0] = 0x2222222222222222;
  v51.i64[1] = 0x2222222222222222;
  *a15 = veorq_s8(vaddq_s8(vsubq_s8(*a15, vandq_s8(vaddq_s8(*a15, *a15), v50)), v51), *a50);
  JUMPOUT(0x1D0AD9228);
}

uint64_t sub_1D0AFDE70@<X0>(int a1@<W8>)
{
  unsigned int v5 = v1 + 135331852;
  if (v5 <= 0x40) {
    unsigned int v5 = 64;
  }
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((-v2 - 135332803 - v3 + v5 + 951 < ((a1 + 1654354385) & 0x9D648BEF ^ 0x148)) | a1)))();
}

uint64_t sub_1D0AFDF30()
{
  return sub_1D0AFDF44(86, 23);
}

uint64_t sub_1D0AFDF44@<X0>(unint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, int a4@<W8>)
{
  *(_DWORD *)(v7 + 4 * v4 + 908) = *(_DWORD *)(a3 + 4 * (*(_DWORD *)(v7 + 4 * v4 + 912) & 1)) ^ *(_DWORD *)(v7 + 4 * v4) ^ ((*(_DWORD *)(v7 + 4 * v4 + 912) & 0x7FFFFFFE | v5 & 0x80000000) >> 1);
  return (*(uint64_t (**)(void))(v6 + 8 * (((((a4 - 792) ^ a1) + v4 == 396) * a2) ^ (a4 - 737))))();
}

uint64_t sub_1D0AFDF9C(uint64_t result)
{
  int v1 = *(unsigned __int8 **)(result + 8);
  int v2 = (v1[3] << 24) | (v1[2] << 16) | (v1[1] << 8);
  *(_DWORD *)(result + 4) = (v2 | *v1) - 2 * ((v2 | *v1) & 0x339CC79E ^ *v1 & 0x12) - 1281570932;
  return result;
}

uint64_t sub_1D0AFDFF0()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((931 * (v1 > 0x77BBA92B)) ^ (v2 - 726207371))))();
}

void sub_1D0AFE044(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4)
     - 846572393 * (((a1 ^ 0xC1044548) & 0xD1264D4C | (a1 ^ 0x26D8B290) & 0x2ED9B2B3) ^ 0xD1BFA391);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1D0AFE13C@<X0>(uint64_t a1@<X8>)
{
  int v5 = 1449114341 * ((((v4 - 112) | 0xE338ED17) - ((v4 - 112) & 0xE338ED17)) ^ 0x2C6614FC);
  *(void *)(v4 - 112) = v1;
  *(_DWORD *)(v4 - 104) = (((v2 - 785969720) & 0x2ED8F4FF ^ 0xC3D84EE6) + v3) ^ v5;
  *(_DWORD *)(v4 - 100) = (v2 + 345) ^ v5;
  return (*(uint64_t (**)(uint64_t))(a1 + 8 * (v2 ^ 0x7FC)))(v4 - 112);
}

uint64_t sub_1D0AFE200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  *(unsigned char *)(v29 + ((int)a2 - 847290234) % v28) = (*(unsigned char *)(v29 + ((int)a2 - 847290234) % v28)
                                                 - ((*(unsigned char *)(v29 + ((int)a2 - 847290234) % v28) << ((v30 - 20) ^ 0x71)) & 0x86)
                                                 + 67) ^ *(&a28 + a2 - 847290234);
  return (*(uint64_t (**)(void))(v31 + 8 * ((1134 * (a2 + 1 == a3 + 35)) ^ v30)))();
}

uint64_t sub_1D0AFE284(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((((((a2 + 903345399) ^ 0x35D7F2E6) - 1337) & a5) == 1610570960)
                                     * ((a2 + 903345399) & 0xCA280AFD ^ 0x59D)) ^ a2)))();
}

uint64_t sub_1D0AFE2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, _DWORD *a13, int a14, int a15, int a16, int a17, _DWORD *a18, int *a19, _DWORD *a20,unsigned int a21,int a22)
{
  uint64_t v28 = *(void *)(v22 + 16);
  unsigned int v29 = ((&a18 & 0x86A338E9 | ~(&a18 | 0x86A338E9)) ^ 0xDBA709B0) * v26;
  a18 = a13;
  LODWORD(a19) = v29 ^ 0x1126A7D4;
  HIDWORD(a19) = v27 + 66 + v29;
  uint64_t v39 = 8 * (v27 ^ 0x46D);
  (*(void (**)(_DWORD **))(v23 + v39))(&a18);
  int v30 = *v25;
  unsigned int v31 = (2 * *v25 + 832984826) & 0xF9F5BFBC;
  unsigned int v32 = 1543459711 * (&a18 ^ 0x4C8203C4);
  a19 = (int *)(v24 + 0x47AC3EE38B968E67);
  LODWORD(a18) = v30 - v32 - 1781658789 - v31;
  HIDWORD(a18) = v27 + 266059972 + v32;
  (*(void (**)(_DWORD **))(v23 + 8 * (v27 + 1034)))(&a18);
  int v33 = *(_DWORD *)(v24 - 0x10B17FC23B8BBE18);
  unsigned int v34 = 1543459711
      * (((&a18 | 0xEE57A8CE) - &a18 + (&a18 & 0x11A85730)) ^ 0xA2D5AB0A);
  a19 = (int *)(v24 + 0x47AC3EE38B968E6BLL);
  LODWORD(a18) = v33 - v34 - 1781658789 - ((2 * v33 + 832984826) & 0xF9F5BFBC);
  HIDWORD(a18) = v27 + 266059972 + v34;
  (*(void (**)(_DWORD **))(v23 + 8 * (v27 + 1034)))(&a18);
  LODWORD(a18) = (v27 - 1488871299) ^ (961505453
                                     * (((&a18 | 0x7D71E40A) - (&a18 & 0x7D71E40A)) ^ 0xDF8A2AAC));
  a19 = a13;
  a20 = (_DWORD *)(v24 - 0xA4EF894B2631DDELL);
  (*(void (**)(_DWORD **))(v23 + 8 * (v27 + 953)))(&a18);
  unsigned int v35 = 1449114341
      * (((&a18 | 0x636E9FB8) - &a18 + (&a18 & 0x9C916040)) ^ 0xAC306653);
  LODWORD(a18) = v27 - v35 - 185;
  a21 = v35 + 1997355281;
  a22 = v35 ^ 0xD6687D8;
  a19 = &a14;
  a20 = a13;
  (*(void (**)(_DWORD **))(v23 + 8 * (v27 ^ 0x7B4)))(&a18);
  *(_DWORD *)(v24 - 0x10B17FC23B8BBE2CLL) += a14;
  *(_DWORD *)(v24 - 0x10B17FC23B8BBE28) += a15;
  *(_DWORD *)(v24 - 0x10B17FC23B8BBE24) += a16;
  *(_DWORD *)(v24 - 0x10B17FC23B8BBE20) += a17;
  unsigned int v36 = 961505453 * (((&a18 | 0x9DE29B73) + (~&a18 | 0x621D648C)) ^ 0x3F1955D4);
  a18 = (_DWORD *)(v24 - 0x10B17FC23B8BBE2CLL);
  LODWORD(a19) = v36 ^ 0x1126A7CA;
  HIDWORD(a19) = v27 + 66 + v36;
  uint64_t v37 = (*(uint64_t (**)(_DWORD **))(v23 + v39))(&a18);
  *(unsigned char *)(v28 - 0x2D98A81A628584D9) = *(unsigned char *)(v24 - 0x10B17FC23B8BBE2CLL)
                                         + (~(2 * *(unsigned char *)(v24 - 0x10B17FC23B8BBE2CLL)) | 0xF)
                                         - 7;
  *(unsigned char *)(v28 - 0x2D98A81A628584D8) = *(unsigned char *)(v24 - 0x10B17FC23B8BBE2BLL)
                                         + (~(2 * *(unsigned char *)(v24 - 0x10B17FC23B8BBE2BLL)) | 0xF)
                                         - 7;
  *(unsigned char *)(v28 - 0x2D98A81A628584D7) = *(unsigned char *)(v24 - 0x10B17FC23B8BBE2ALL)
                                         + (~(2 * *(unsigned char *)(v24 - 0x10B17FC23B8BBE2ALL)) | 0xF)
                                         - 7;
  *(unsigned char *)(v28 - 0x2D98A81A628584D6) = *(unsigned char *)(v24 - 0x10B17FC23B8BBE29)
                                         + (~(2 * *(unsigned char *)(v24 - 0x10B17FC23B8BBE29)) | 0xF)
                                         - 7;
  *(unsigned char *)(v28 - 0x2D98A81A628584D5) = *(unsigned char *)(v24 - 0x10B17FC23B8BBE28)
                                         + (~(2 * *(unsigned char *)(v24 - 0x10B17FC23B8BBE28)) | 0xF)
                                         - 7;
  *(unsigned char *)(v28 - 0x2D98A81A628584D4) = *(unsigned char *)(v24 - 0x10B17FC23B8BBE27)
                                         + (~(2 * *(unsigned char *)(v24 - 0x10B17FC23B8BBE27)) | 0xF)
                                         - 7;
  *(unsigned char *)(v28 - 0x2D98A81A628584D3) = *(unsigned char *)(v24 - 0x10B17FC23B8BBE26)
                                         + (~(2 * *(unsigned char *)(v24 - 0x10B17FC23B8BBE26)) | 0xF)
                                         - 7;
  *(unsigned char *)(v28 - 0x2D98A81A628584D2) = *(unsigned char *)(v24 - 0x10B17FC23B8BBE25)
                                         + (~(2 * *(unsigned char *)(v24 - 0x10B17FC23B8BBE25)) | 0xF)
                                         - 7;
  *(unsigned char *)(v28 - 0x2D98A81A628584D1) = *(unsigned char *)(v24 - 0x10B17FC23B8BBE24)
                                         + (~(2 * *(unsigned char *)(v24 - 0x10B17FC23B8BBE24)) | 0xF)
                                         - 7;
  *(unsigned char *)(v28 - 0x2D98A81A628584D0) = *(unsigned char *)(v24 - 0x10B17FC23B8BBE23)
                                         + (~(2 * *(unsigned char *)(v24 - 0x10B17FC23B8BBE23)) | 0xF)
                                         - 7;
  *(unsigned char *)(v28 - 0x2D98A81A628584CFLL) = *(unsigned char *)(v24 - 0x10B17FC23B8BBE22)
                                         + (~(2 * *(unsigned char *)(v24 - 0x10B17FC23B8BBE22)) | 0xF)
                                         - 7;
  *(unsigned char *)(v28 - 0x2D98A81A628584CELL) = *(unsigned char *)(v24 - 0x10B17FC23B8BBE21)
                                         + (~(2 * *(unsigned char *)(v24 - 0x10B17FC23B8BBE21)) | 0xF)
                                         - 7;
  *(unsigned char *)(v28 - 0x2D98A81A628584CDLL) = *(unsigned char *)(v24 - 0x10B17FC23B8BBE20)
                                         + (~(2 * *(unsigned char *)(v24 - 0x10B17FC23B8BBE20)) | 0xF)
                                         - 7;
  *(unsigned char *)(v28 - 0x2D98A81A628584CCLL) = *(unsigned char *)(v24 - 0x10B17FC23B8BBE1FLL)
                                         + (~(2 * *(unsigned char *)(v24 - 0x10B17FC23B8BBE1FLL)) | 0xF)
                                         - 7;
  *(unsigned char *)(v28 - 0x2D98A81A628584CBLL) = *(unsigned char *)(v24 - 0x10B17FC23B8BBE1ELL)
                                         + (~(2 * *(unsigned char *)(v24 - 0x10B17FC23B8BBE1ELL)) | 0xF)
                                         - 7;
  *(unsigned char *)(v28 - 0x2D98A81A628584CALL) = *(unsigned char *)(v24 - 0x10B17FC23B8BBE1DLL)
                                         + (~(2 * *(unsigned char *)(v24 - 0x10B17FC23B8BBE1DLL)) | 0xF)
                                         - 7;
  *(_OWORD *)(v24 - 0x10B17FC23B8BBE2CLL) = 0u;
  *int v25 = 1730991235;
  *(_DWORD *)(v24 - 0x10B17FC23B8BBE18) = 1730991235;
  *(_OWORD *)(v24 - 0x10B17FC23B8BBE14) = 0u;
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((29 * (((v27 + 723) ^ 0x55ALL) == 16)) ^ v27)))(v37);
}

uint64_t sub_1D0AFE9D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W3>, uint64_t a4@<X8>)
{
  unint64_t v6 = a4 + a1;
  *(unsigned char *)(v6 + a2 - 1) = a3;
  return (*(uint64_t (**)(void))(v5
                              + 8 * (((v6 < 0x38) * (((611 * (v4 ^ 0x39B)) ^ 0x4E7) + 454)) ^ (611 * (v4 ^ 0x39B)))))();
}

uint64_t sub_1D0AFEA18()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((5 * (v0 == 0)) | 0x468)))();
}

uint64_t sub_1D0AFEA70()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((208 * (STACK[0x208] != 0)) ^ v0)))();
}

uint64_t sub_1D0AFEA9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v7
                                                                      + 8
                                                                      * (((LODWORD(STACK[0x210]) == 2107899887)
                                                                        * (v4 + (v6 ^ (v5 - 133)) + 1353)) ^ v6)))(a1, a2, a3, (v3 - 808));
}

void sub_1D0AFEADC()
{
}

uint64_t sub_1D0AFEAEC@<X0>(unsigned int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((56 * (v1 + 1 == v2 + 48)) ^ a1)))();
}

uint64_t sub_1D0AFEBB4(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, int a14)
{
  unsigned int v24 = a8 - 16;
  uint64_t v25 = v24 & 0xF;
  uint64_t v26 = v14;
  v27.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v27.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v20, a5).u64[0];
  int8x16_t v28 = vrev64q_s8(vmulq_s8(v27, a6));
  *(int8x16_t *)(a13 + v24) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v15 + v25 - 15), *(int8x16_t *)(a13 + v24)), veorq_s8(*(int8x16_t *)(v16 + v25 - 15), *(int8x16_t *)(v17 + v25 - 15))), vextq_s8(v28, v28, 8uLL));
  return (*(uint64_t (**)(void))(v19 + 8 * (((a14 == 16) * v18) ^ a12)))();
}

uint64_t sub_1D0AFEBC0@<X0>(int a1@<W8>)
{
  void *v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ a1)))();
}

uint64_t sub_1D0AFEBE4@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + v1 - 1716182421) = *(unsigned char *)(v2 + v1 - 1716182421);
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((1978 * ((v5 ^ 0xFFFFFFFFFFFFFD20) + v1 != v4)) ^ v5)))();
}

uint64_t sub_1D0AFEC2C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  *unint64_t v21 = a19 + 1;
  uint64_t v23 = *v19;
  unint64_t v24 = 1332649919 * ((v22 - 152) ^ 0xBAFDF0BB3D7384F2);
  *(_DWORD *)(v22 - 128) = a1 + 360461956 - v24;
  *(void *)(v22 - 136) = v23 + v24;
  *(_DWORD *)(v22 - 152) = ((a1 + 360461956) & 0x9DFF39FE) - v24;
  *(void *)(v22 - 144) = v24 + 5119;
  *(_DWORD *)(v22 - 112) = v24 + a1 + 572802862;
  *(_DWORD *)(v22 - 120) = -1332649919 * ((v22 - 152) ^ 0x3D7384F2);
  *(_DWORD *)(v22 - 116) = (a1 + 360461868) ^ v24;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (a1 ^ 0x565)))(v22 - 152);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * *(int *)(v22 - 124)))(v25);
}

uint64_t sub_1D0AFECFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((63
                                * ((((a6 ^ 0xDF) * v7) ^ (((a6 + 362103863) & 0xEA6ABBEF ^ 0x302)
                                                                         + a5 == a3)) & 1)) ^ a6)))();
}

uint64_t sub_1D0AFED54@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + v1 + 24) = 0;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 == 48) * v2) ^ v4)))();
}

uint64_t sub_1D0AFED80(uint64_t a1, uint64_t a2, int a3)
{
  int v6 = *(unsigned __int8 *)(v4 - 0x4005A18C73DCADE1) ^ 0x1F;
  uint64_t v7 = a2 - 0x7AFA2E4D31C5923ALL;
  unsigned int v8 = a3 - 1;
  if (v8 >= 0xE1BF3C70) {
    unsigned int v8 = -507560848;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(v3
                                                                               + 8
                                                                               * ((((244 * ((457 * (v5 ^ 0x2E0)) ^ 0x558)) ^ (457 * (v5 ^ 0x2E0) - 788))
                                                                                 * (v6 == ((-55 * (v5 ^ 0xE0)) ^ 0x5B))) ^ (457 * (v5 ^ 0x2E0)))))(a1, v7, v8 + 232065819, 81, 232065818);
}

void sub_1D0AFEE48()
{
}

uint64_t sub_1D0AFEE50(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8
                                   * (((v6 + v5 + (a1 ^ (a5 - 833) ^ 0xBA2CECCB) > 7) * ((a1 - 800) ^ 0x153)) ^ a1)))();
}

void sub_1D0AFEE9C()
{
}

uint64_t sub_1D0AFEF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, int a12)
{
  return (*(uint64_t (**)(void))(v13
                                           + 8
                                           * ((31
                                             * (a10 == ((31 * (a12 ^ 0x39B) - 1157628526) & 0xEFB8CECB ^ 0xAAB8CECA))) ^ a12)))(*v12);
}

uint64_t sub_1D0AFEF68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return (*(uint64_t (**)(uint64_t))(a29
                                            + 8
                                            * ((((((a18 - 1295) | 8) ^ 0x2F3DC87Bu) > 0x2F3DC893)
                                              * (((a18 - 1295) ^ 0xBA) - 104)) ^ (a18 - 170))))(a14);
}

uint64_t sub_1D0AFEFD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54)
{
  return (*(uint64_t (**)(void))(v54 + 8 * ((a54 + 273) ^ (44 * (a12 == 0x9BB0ED8CCB480BC7)))))();
}

void sub_1D0AFF01C(int a1@<W8>)
{
  uint64_t v2 = 4 * (v1 - 666946017);
  uint64_t v3 = (int *)(STACK[0x218] + v2);
  int v4 = *v3;
  LODWORD(v3) = 1513389751
              * ((*(_DWORD *)(*(void *)STACK[0x220] + (*(int *)STACK[0x228] & 0xFFFFFFFF989DBFD8)) ^ v3) & 0x7FFFFFFF);
  LODWORD(v3) = v3 ^ (v3 >> 16);
  *(_DWORD *)((char *)&STACK[0x260] + v2) ^= v4 ^ *((_DWORD *)*(&off_1F26D60E0 + (a1 ^ 0x257))
                                                  + ((1513389751 * v3) >> 24)
                                                  - 1) ^ *((_DWORD *)*(&off_1F26D60E0 + a1 - 526)
                                                         + ((1513389751 * v3) >> 24)
                                                         + 3) ^ *((_DWORD *)*(&off_1F26D60E0 + a1 - 441)
                                                                + ((1513389751 * v3) >> 24)
                                                                - 1) ^ (v3 * ((a1 - 137) ^ 0x7EB701CF)) ^ (1513389751 * v3) ^ (1727020189 * ((1513389751 * v3) >> 24));
  JUMPOUT(0x1D0AFF108);
}

uint64_t sub_1D0AFF150(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,unsigned int a37)
{
  unsigned int v41 = v38[396] ^ ((*v38 & ((v37 - v40 - 557) ^ 0xAB490CB9) | v38[623] & 0x80000000) >> 1);
  v38[623] = (v41 + a6 - (a5 & (2 * v41))) ^ *((_DWORD *)&STACK[0x4F8]
                                             + (*v38 & ((a4 + v37 - 741) ^ (a4 - 1))));
  return (*(uint64_t (**)(void))(v39 + 8 * ((13 * (a37 > 0x26F)) ^ v37)))();
}

uint64_t sub_1D0AFF1D4@<X0>(int a1@<W8>, int8x16_t a2@<Q1>)
{
  *(int8x16_t *)(v5 + v2 + 24) = veorq_s8(*(int8x16_t *)(v3 + v2), a2);
  return (*(uint64_t (**)(void))(v4 + 8 * (((v2 == 48) * (a1 + 506)) ^ a1)))();
}

uint64_t sub_1D0AFF20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  *(void *)(v32 - 120) = v30;
  *(void *)(v32 - 112) = &STACK[0x578EC1BAFC81F5B9];
  *(_DWORD *)(v32 - 136) = v31
                         + 1449114341 * (((v32 - 136) & 0x5E3A3A74 | ~((v32 - 136) | 0x5E3A3A74)) ^ 0x6E9B3C60)
                         + 1345;
  *(void *)(v32 - 128) = v29 + 12;
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(v33 + 8 * (v31 + 1553)))(v32 - 136);
  return (*(uint64_t (**)(uint64_t))(a29
                                            + 8
                                            * (((*(_DWORD *)(v32 - 104) == 343018756)
                                              * ((v31 + 612) ^ (v31 + 57) ^ 0x289)) ^ v31)))(v34);
}

uint64_t sub_1D0AFF2C8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  *(unsigned char *)(a2 + (int)(((v20 + 1424) ^ 0xEFD7D262) + a1)) ^= *(unsigned char *)(a17 + (int)(((v20 + 1424) ^ 0xEFD7D262) + a1)) ^ 0x22;
  return (*(uint64_t (**)(void))(v21 + 8 * (((a1 + 1 < v18) * ((((v20 + 1424) ^ v17) - 540) ^ v19)) ^ (v20 - 72))))();
}

uint64_t sub_1D0AFF330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  *(void *)(v41 - 120) = v39;
  *(void *)(v41 - 112) = &STACK[0xFEC6AE0F7D99DE0];
  *(_DWORD *)(v41 - 104) = (v40 + 1094) ^ (846572393 * ((v41 - 136) ^ 0x36635449));
  *(void *)(v41 - 136) = v38 + (a38 - 19245624);
  *(void *)(v41 - 128) = &STACK[0x4005A18C73DCAFF4];
  uint64_t v43 = (*(uint64_t (**)(uint64_t))(v42 + 8 * (v40 + 1497)))(v41 - 136);
  return (*(uint64_t (**)(uint64_t))(a29
                                            + 8
                                            * ((1250
                                              * (*(_DWORD *)(v41 - 100) == ((v40 + 79552043) & 0xFB4223FF ^ 0x14720F70 ^ (v40 + 654641343) & 0xD8FAF71F))) ^ v40)))(v43);
}

uint64_t sub_1D0AFF430(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v35
                                                     + 8
                                                     * ((1325 * (a4 == ((v33 + v34 + 398) ^ 0x14720CF4))) ^ (v33 + v34 - 7))))(a1, a33);
}

uint64_t sub_1D0AFF474@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, int a8@<W7>, int a9@<W8>)
{
  int v17 = (unsigned int *)(v14 + 4 * (v9 + a1));
  uint64_t v18 = v9 + 1;
  int v19 = *(_DWORD *)(v14 + 4 * (v18 + a1));
  unsigned int v20 = (v19 ^ a3) & ((a9 + 1024613607) & 0xC2EDA3FE ^ 0xDB22F7E2);
  unsigned int v21 = ((a5 | ~v20) + (v20 | a4)) ^ (v19 ^ a3) & a6 ^ 0xFFFFFFFE;
  int v22 = ((v21 & a7 ^ a8) + (v21 & v12 ^ v13) - 1) ^ v16;
  unsigned int *v17 = v17[397] ^ *(_DWORD *)(v11 + 4 * (v19 & 1)) ^ (((v22 | ((v10 & 0x80000000) + a2) ^ a2)
                                                         - ((2 * v22) & 0x44B45172)
                                                         - 1571149639) >> 1) ^ 0x721D0281;
  return (*(uint64_t (**)(void))(v15 + 8 * (((4 * (v18 != 566630784)) | (8 * (v18 != 566630784))) ^ a9)))();
}

uint64_t sub_1D0AFF568(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1691 * ((((a2 + 590) ^ (a2 + 535) ^ 0x1C1) & v2) == 0)) ^ (a2 + 335))))();
}

uint64_t sub_1D0AFF5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t (*a29)(void))
{
  *(unsigned char *)(v29 - 16) = *(unsigned char *)(STACK[0xA78] + *(unsigned __int8 *)(v29 - 16));
  *(unsigned char *)(v29 - 12) = *(unsigned char *)(STACK[0xAB8] + v30);
  *(unsigned char *)(v29 - 8) = *(unsigned char *)(STACK[0xAF8] + v31);
  *(unsigned char *)(v29 - 4) = *(unsigned char *)(STACK[0xB38] + v32);
  *(unsigned char *)(v29 - 3) = *(unsigned char *)(STACK[0xB48] + BYTE1(v31));
  *(unsigned char *)(v29 - 7) = *(unsigned char *)(STACK[0xB08] + BYTE1(v30));
  *(unsigned char *)(v29 - 11) = *(unsigned char *)(STACK[0xAC8] + *(unsigned __int8 *)(v29 - 15));
  *(unsigned char *)(v29 - 15) = *(unsigned char *)(STACK[0xA88] + BYTE1(v32));
  uint64_t v33 = *(unsigned __int8 *)(v29 - 14);
  *(unsigned char *)(v29 - 14) = *(unsigned char *)(STACK[0xA98] + BYTE2(v31));
  *(unsigned char *)(v29 - 6) = *(unsigned char *)(STACK[0xB18] + v33);
  *(unsigned char *)(v29 - 10) = *(unsigned char *)(STACK[0xAD8] + BYTE2(v32));
  *(unsigned char *)(v29 - 2) = *(unsigned char *)(STACK[0xB58] + BYTE2(v30));
  uint64_t v34 = *(unsigned __int8 *)(v29 - 13);
  *(unsigned char *)(v29 - 13) = *(unsigned char *)(STACK[0xAA8] + a6);
  *(unsigned char *)(v29 - 9) = *(unsigned char *)(STACK[0xAE8] + a5);
  *(unsigned char *)(v29 - 5) = *(unsigned char *)(STACK[0xB28] + a4);
  *(unsigned char *)(v29 - 1) = *(unsigned char *)(STACK[0xB68] + v34);
  return a29();
}

void sub_1D0AFF6AC(uint64_t a1, unsigned int a2)
{
  v3[*v3 * (unint64_t)a2 + 8 + v2] = *(unsigned char *)(v4 + v2);
  JUMPOUT(0x1D0AFCA80);
}

uint64_t sub_1D0AFF6D0@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((116 * (v2 + 1 == a1 + 44)) ^ v3)))();
}

uint64_t sub_1D0AFF7B4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((19 * (v6 + a6 + 863 + (((a6 - 40) | 0x53) ^ a4) > 0xFFFFFFEF)) ^ a6)))();
}

uint64_t sub_1D0AFF7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,unsigned int a27)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8 * ((117 * (v27 - 1116844671 >= a27)) ^ (a5 + 102))))(a1, 26);
}

uint64_t sub_1D0AFF82C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 < v1 - 233230806) * ((v1 + 212) ^ 0x2DC)) ^ (v1 - 307))))();
}

uint64_t sub_1D0AFF864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((487 * (v7 + v5 == (a5 ^ 0xDF))) ^ a5)))();
}

uint64_t sub_1D0AFF890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,int a22,int a23,_DWORD *a24,int *a25,_DWORD *a26,unsigned int a27,int a28)
{
  unsigned int v34 = 961505453 * ((((2 * &a24) | 0xDF547B1A) - &a24 + 274055795) ^ 0x4D51F32B);
  a24 = v30;
  LODWORD(a25) = v34 ^ 0x1126A7D6;
  HIDWORD(a25) = v34 + v31 + 355;
  (*(void (**)(_DWORD **))(v28 + 8 * (v31 ^ 0x70C)))(&a24);
  a25 = v30;
  a26 = (_DWORD *)(v32 - 0xA4EF894B2631DDELL);
  LODWORD(a24) = (v31 - 1488871010) ^ (961505453 * (&a24 ^ 0xA2FBCEA6));
  (*(void (**)(_DWORD **))(v28 + 8 * (v31 + 1242)))(&a24);
  unsigned int v35 = 1449114341 * ((&a24 & 0xA993976E | ~(&a24 | 0xA993976E)) ^ 0x9932917A);
  LODWORD(a24) = v31 - v35 + 104;
  a25 = &a20;
  a26 = v30;
  a27 = v35 + 1997355281;
  a28 = v35 ^ 0xD6687D8;
  uint64_t v36 = (*(uint64_t (**)(_DWORD **))(v28 + 8 * (v31 + 1229)))(&a24);
  *(_DWORD *)(v32 - 0x10B17FC23B8BBE2CLL) += a20;
  *(_DWORD *)(v32 - 0x10B17FC23B8BBE28) += a21;
  *(_DWORD *)(v32 - 0x10B17FC23B8BBE24) += a22;
  *(_DWORD *)(v32 - 0x10B17FC23B8BBE20) += a23;
  int v37 = v33 - v29 - 1842602153 < (v31 ^ 0x547u) - 1185;
  return (*(uint64_t (**)(uint64_t))(v28 + 8 * (((4 * v37) | (v37 << 6)) ^ v31 ^ 0x283)))(v36);
}

uint64_t sub_1D0AFFAA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v25 = *(void *)(a1 + 24);
  *(int8x16_t *)(v24 - 224) = veorq_s8(*(int8x16_t *)*(void *)(a1 + 40), (int8x16_t)xmmword_1D0B982B0);
  *(int8x16_t *)(v24 - 208) = veorq_s8(*(int8x16_t *)(v25 - 0x608BDA5C9F385208), (int8x16_t)xmmword_1D0B982C0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * (int)(((((82 * (a6 ^ 0x42E)) ^ 0xFFFFFE42) + ((a6 - 792802938) & 0x2F4137F7)) * (v24 - 224 != v23)) ^ a6)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

void sub_1D0AFFB38()
{
}

void sub_1D0AFFB40()
{
}

uint64_t sub_1D0AFFB4C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * (((v2 ^ 0x389) * (v1 == v3)) ^ v2)))();
}

uint64_t sub_1D0AFFB78()
{
  unsigned int v4 = v2 - 1169584652 + ((v0 + 1919145267) & 0x8D9C27F5);
  BOOL v6 = v4 <= 0x39E6961F || 971413088 - v1 <= v4;
  return (*(uint64_t (**)(void))(v3 + 8 * ((28 * v6) ^ v0)))();
}

uint64_t sub_1D0AFFBEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((((a8 - 32) ^ 0x56C) * (v8 < 0xFFFFFFF0)) ^ a8)))();
}

uint64_t sub_1D0AFFC20@<X0>(uint64_t a1@<X3>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3 + 8 * ((630 * (a2 + 1 == a1 + 48)) ^ v3)))();
}

void sub_1D0AFFCEC()
{
}

uint64_t sub_1D0AFFD08(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) + 1334103649 * ((2 * (a1 & 0x94E3C831) - a1 + 1797011406) ^ 0x3B4FF60);
  return (*((uint64_t (**)(void))*(&off_1F26D60E0 + (v1 ^ 0x254)) + ((221 * (*(void *)a1 != 0x55C89A4359EC5AEFLL)) ^ v1)))();
}

uint64_t sub_1D0AFFDA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(void))(v70 + 8 * ((((a3 ^ 0x5E7) - 995) * (a70 == a69)) ^ a3)))();
}

uint64_t sub_1D0AFFDE0@<X0>(uint64_t a1@<X4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t))
{
  int v10 = 1449114341 * ((~((v9 - 120) | 0xF72B5A7D) + ((v9 - 120) & 0xF72B5A7D)) ^ 0xC78A5C69);
  *(_DWORD *)(v9 - 112) = (v8 - 1340138284) ^ v10;
  *(_DWORD *)(v9 - 108) = (a2 - 651) ^ v10;
  *(void *)(v9 - 120) = a1;
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v7 + 8 * (a2 + 144)))(v9 - 120);
  return a7(v11);
}

uint64_t sub_1D0AFFE60(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v16 = (unsigned __int8 *)(a3 + v8 + v14);
  int v17 = ((*v16 ^ 0xF8) << 24) | ((v16[1] ^ 0xF8) << 16) | (((a8 - 110) ^ v12 ^ v16[2]) << 8);
  *(_DWORD *)(v10 + ((v8 + v14) & 0xFFFFFFFFFFFFFFFCLL)) = (v17 | v16[3] ^ 0xF8)
                                                         + v13
                                                         - 2
                                                         * ((v17 | v16[3] ^ 0xF8) & (a4 + 5) ^ (v16[3] ^ 0xF8) & v15);
  return (*(uint64_t (**)(void))(v11 + 8 * ((((unint64_t)(v8 + 4 + v14) < 0x40) * v9) ^ a8)))();
}

uint64_t sub_1D0AFFEE4@<X0>(uint64_t a1@<X8>)
{
  v5.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v5.i64[1] = 0xF8F8F8F8F8F8F8F8;
  *(int8x16_t *)(v4 + a1 + 24) = veorq_s8(*(int8x16_t *)(v2 + a1), v5);
  return (*(uint64_t (**)(void))(v3 + 8 * ((599 * ((((v1 - 38) | 0x2A1u) ^ 0x3B5) + a1 == 64)) ^ v1)))();
}

void sub_1D0AFFF30()
{
}

void sub_1D0AFFFA8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) - 1477295531 * (((a1 | 0x17F008B6) - a1 + (a1 & 0xE80FF749)) ^ 0x20FB3DE5);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1D0B000E0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  char v12 = v18[4];
  char v13 = v18[5];
  char v14 = ~((v6 ^ (v5 + 66) ^ 0x32) & (2 * v12));
  int v15 = 1334103649 * ((2 * ((v11 - 168) & 0x66AB7EF8) - (v11 - 168) - 1722515199) ^ 0xF1FC49AF);
  *(unsigned char *)(v11 - 151) = ((v18[6] + 1) ^ 0x63)
                        - 97 * ((2 * ((v11 + 88) & 0xF8) - (v11 + 88) + 1) ^ 0xAF)
                        + ((2 * (v18[6] + 1)) & 0xC7)
                        - 3;
  *(unsigned char *)(v11 - 136) = (v13 ^ 0xFD)
                        - 97 * ((2 * ((v11 + 88) & 0xF8) - (v11 + 88) + 1) ^ 0xAF)
                        + ((2 * v13) & 0xFB)
                        + 35;
  *(void *)(v11 - 144) = v9;
  *(void *)(v11 - 160) = v7;
  *(_DWORD *)(v11 - 168) = v15 + v6 + 524;
  *(unsigned char *)(v11 - 152) = v12 - 97 * ((2 * ((v11 + 88) & 0xF8) - (v11 + 88) + 1) ^ 0xAF) + v14 - 106;
  *(_DWORD *)(v11 - 132) = a4 - v15 - ((2 * a4 - 686037512) & 0xCB231ED4) - 786464154;
  int v16 = *(void (**)(uint64_t))(v10 + 8 * (v6 + 1155));
  v16(v11 - 168);
  *uint64_t v8 = -1;
  return (a4 - 343018756);
}

uint64_t sub_1D0B00200(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v31 = a1 ^ 0x7B4;
  int v32 = a1 - 1496;
  int v33 = a1 - 974;
  uint64_t v34 = 8 * (a1 ^ 0x25);
  (*(void (**)(uint64_t))(v30 + v34))(*(void *)(v29 + 8 * (a1 ^ 0x5C2)) - 8);
  uint64_t v35 = (*(uint64_t (**)(uint64_t, unint64_t *, uint64_t))(a29 + v34))(*(void *)(v29 + 8 * (a1 ^ 0x55F)) - 8, &STACK[0xCA8], 16);
  return (*(uint64_t (**)(uint64_t))(a29
                                            + 8 * (int)((((v32 ^ 0xFFFFFDC6) + v31) * (&STACK[0x200] == 0)) | v33)))(v35);
}

void sub_1D0B00388()
{
}

void sub_1D0B0039C()
{
}

uint64_t sub_1D0B003E4@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X4>, int a5@<W5>, int a6@<W6>, uint64_t a7@<X8>)
{
  HIDWORD(v17) = a3 ^ v13;
  LODWORD(v17) = a3 ^ 0x48000000;
  int v18 = (v17 >> 27)
      + (v7 ^ v15)
      + (((a2 ^ v9) + v15 - (v12 & (2 * (a2 ^ v9)))) ^ v8)
      + ((a5 - 271) ^ (v10 - 814) ^ *(_DWORD *)(a7 + 4 * (a4 + v16)));
  HIDWORD(v17) = v9 ^ 2;
  LODWORD(v17) = v9 ^ a6;
  return (*(uint64_t (**)(uint64_t, void, void))(v14 + 8 * ((25 * (a4 + 1 == v11 + 80)) ^ a5)))(a1, (v17 >> 2) + v15 - (v12 & (2 * (v17 >> 2))), v18 - 2 * ((v18 + 1247986134) & (v15 + 1) ^ v18 & 1u) + 431348544);
}

uint64_t sub_1D0B004B0@<X0>(uint64_t a1@<X1>, int a2@<W4>, uint64_t a3@<X8>)
{
  unint64_t v7 = v3 + a1;
  *(unsigned char *)(v7 + a3 - 1) = v5;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v7 < 0x38) * a2) ^ v4 ^ 0xCE)))();
}

uint64_t sub_1D0B004F0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v11 = v6 + v7;
  *(unsigned char *)(v11 + a6 - 1) = v9;
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (int)(((v11 < 0x38) * (((v8 + 1680286023) & 0x9BD8DCFF ^ 0xC2) * a2 + 621)) ^ (v8 + 1680286023) & 0x9BD8DCFF)))();
}

uint64_t sub_1D0B00544()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((201 * (v0 != ((67 * ((v1 + 371) ^ 0x378) + 1219170034) & 0xB754F37F ^ 0x33B))) ^ (v1 + 371))))();
}

void sub_1D0B00598()
{
}

void sub_1D0B00744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,_DWORD *a50)
{
  *a50 = (*a50 ^ v53) + (v50 ^ v53) + v53 - ((v52 + 2 * (v51 ^ 0x311) - 78) & (2 * ((*a50 ^ v53) + (v50 ^ v53))));
  JUMPOUT(0x1D0B00798);
}

uint64_t sub_1D0B0082C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 < ((a4 + 1914432718) & 0x8DE411FF) - 317) * (a4 - 648)) ^ (a4 + 762))))();
}

uint64_t sub_1D0B00870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, char a14, int a15, unsigned int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,__int16 a21,unsigned int a22)
{
  HIDWORD(a11) = (a15 - 1999662329) & 0x77306E2D;
  *uint64_t v22 = v25;
  uint64_t v28 = *v23;
  *(_DWORD *)(v28 + 3) = 16908633;
  *(unsigned char *)(v28 + 2) = 76;
  *(_WORD *)uint64_t v28 = 20550;
  *(unsigned char *)(v28 + 7) = 0;
  *(_DWORD *)(v28 + 8) = bswap32(v24 + 44);
  *(unsigned char *)(v28 + 12) = *v27;
  *(unsigned char *)(v28 + 13) = 0;
  *(unsigned char *)(v28 + 14) = a14;
  *(unsigned char *)(v28 + 15) = 0;
  a21 = 32560 - 32699 * ((unsigned __int16)&a20 ^ 0xD68D);
  a20 = v28 + 0x497FEE934D13E3F2;
  a22 = (a15 + 120) ^ (1663139771 * (&a20 ^ 0x78E9D68D));
  (*(void (**)(uint64_t *))(v26 + 8 * (a15 ^ 0x4E4)))(&a20);
  *(_DWORD *)(v28 + 32) = bswap32(a16);
  int v29 = v24 + 189700453 + ~(((a15 ^ 0x19) + 379400154) & (2 * v24));
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * (a15 | (8 * (((2 * v29) & 0xDED7BBFE ^ 0x169532C8) + (v29 ^ (HIDWORD(a11) - 467320721)) + 1994325909 == 1716182420)))))(HIDWORD(a11), v30, v31, v32, 2864238119, 1430729456, a16, 1716182420, a9, v25, a11);
}

uint64_t sub_1D0B009F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  *(void *)(v33 - 112) = v30;
  *(_DWORD *)(v33 - 120) = v31
                         - 1663139771
                         * ((((v33 - 136) | 0x494F1D84) - ((v33 - 136) | 0xB6B0E27B) - 1229921669) ^ 0x31A6CB09)
                         + 150;
  *(void *)(v33 - 128) = v32 + 0x11353BDA57BC7EA0;
  *(unsigned char *)(v33 - 136) = -69 * ((((v33 + 120) | 0x84) - ((v33 + 120) | 0x7B) + 123) ^ 9) + 21;
  *(unsigned char *)(v33 - 104) = (a22 ^ 0xE0)
                        + ((2 * a22) & 0xFB ^ 0x3A)
                        - 69 * ((((v33 + 120) | 0x84) - ((v33 + 120) | 0x7B) + 123) ^ 9)
                        + 123;
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (v31 ^ 0x7A9u)))(v33 - 136);
  return (*(uint64_t (**)(uint64_t))(a30
                                            + 8
                                            * (((*(_DWORD *)(v33 - 100) == 343018756) * (((v31 - 624) | 0x402) ^ 0x31D)) ^ v31)))(v34);
}

void sub_1D0B00AF0()
{
}

void sub_1D0B00B58()
{
}

uint64_t sub_1D0B00B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25)
{
  return sub_1D0AFEC2C(293 * (v25 ^ 0x54u), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, 0);
}

void sub_1D0B00B80()
{
}

uint64_t sub_1D0B00B98@<X0>(uint64_t a1@<X8>)
{
  return 0;
}

void sub_1D0B00BB0()
{
}

void sub_1D0B00BC4()
{
}

uint64_t sub_1D0B00C20()
{
  return v0();
}

uint64_t sub_1D0B00C28()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((35 * (v0 != ((v1 + 1360993279) & 0xAEE0E4CD ^ ((v1 ^ 0x13F) + 443)))) ^ v1)))();
}

uint64_t sub_1D0B00C70@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * ((((((23 * (v1 ^ 0x2DC)) ^ (v2 == a1)) & 1) == 0) * (v1 - 261)) ^ v1)))(1927);
}

uint64_t sub_1D0B00CB8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W6>, uint64_t a4@<X7>, int a5@<W8>)
{
  *(unsigned char *)(a2 + (v6 + a3)) = *(unsigned char *)(v5 + a1 + a4);
  return (*(uint64_t (**)(void))(v7
                              + 8 * ((((v6 + v8) > 0x3F) | (4 * ((v6 + v8) > 0x3F))) ^ a5)))();
}

uint64_t sub_1D0B00CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8 * (int)((((v7 - 621) ^ 0x296 ^ (v7 + 1339212611) & 0xB02D3BFF) * (v6 == a6)) ^ v7)))();
}

uint64_t sub_1D0B00D40()
{
  int v4 = v1 + 342;
  unsigned int v5 = ((v1 - 373301437) & 0x16401EBF ^ 0x2774F8A9) + ((v1 + 1069945136) & 0xC039EECF);
  if (*(void *)(v2 + 8)) {
    BOOL v6 = *(_DWORD *)v2 + v0 == v5;
  }
  else {
    BOOL v6 = 1;
  }
  int v7 = v6;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1892 * v7) ^ v4)))();
}

uint64_t sub_1D0B00DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54,int a55,int a56)
{
  a56 = 2107899875;
  a55 = 19245624;
  a54 = 932381550;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 8 * (int)(((((37 * ((v56 + 1048) ^ 0x53D)) ^ 0xFFFFFE04) + ((v56 + 1048) ^ 0x4CD)) * (&a9 == (uint64_t *)-432)) | (v56 + 1048))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

void sub_1D0B00E28()
{
}

uint64_t sub_1D0B00E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
  *(_DWORD *)uint64_t v51 = 1498173510;
  *(unsigned char *)(v51 + 4) = a51;
  *(_WORD *)(v51 + 5) = 513;
  *(unsigned char *)(v51 + 7) = 0;
  *(_DWORD *)(v51 + 8) = -2113929216;
  *(unsigned char *)(v51 + 12) = 2;
  *(unsigned char *)(v51 + 13) = *(unsigned char *)(v52 + 14);
  int v56 = 1503905621 * ((~(v55 - 144) & 0x91318861 | (v55 - 144) & 0x6ECE779E) ^ 0xCC49E6B5);
  *(_WORD *)(v55 - 144) = v56 + 20671;
  *(_DWORD *)(v55 - 140) = v54 - v56 - 270;
  *(void *)(a2 + 3008) = v51 + 0x6E4C05E1889C2C45;
  uint64_t v65 = v51;
  (*(void (**)(uint64_t))(v53 + 8 * (v54 ^ 0x499)))(v55 - 144);
  *(_WORD *)(v65 + 14) = 256;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8 * ((2007 * (v65 - a45 - 118 < (unint64_t)(v54 ^ 0x6Du) - 703)) ^ v54)))(v65, v57, v58, v59, v60, v61, v62, v63);
}

uint64_t sub_1D0B00F58()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((504 * (((v0 - 847) ^ 0xFFFFFFDF) + v1 != 0)) ^ (v0 + 384))))();
}

uint64_t sub_1D0B00F88()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v1 - 1518769450 == ((v0 - 983985883) & 0x3AA66DFF) + 323832129)
                                * (30 * (v0 ^ 0x2C8) - 475)) ^ v0)))();
}

uint64_t sub_1D0B00FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10
                                                                                                  + 8 * (((v9 == (v7 ^ 0x111) + v8) * (((v7 + 138) | 0x132) + 731)) ^ v7)))(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1D0B0102C(int *a1)
{
  int v2 = a1[1];
  signed int v3 = v2 + 1334103649 * (((a1 | 0x53AEBA34) - (a1 & 0x53AEBA34)) ^ 0x3B06729A) - 291625840;
  uint64_t result = (*((uint64_t (**)(char *, void (*)()))*(&off_1F26D60E0
                                                           + (int)(v2
                                                                 + 1334103649
                                                                 * (((a1 | 0x53AEBA34)
                                                                   - (a1 & 0x53AEBA34)) ^ 0x3B06729A)
                                                                 - 291625829))
            + (int)(v2
                  + 1334103649 * (((a1 | 0x53AEBA34) - (a1 & 0x53AEBA34)) ^ 0x3B06729A)
                  - 291624256)))((char *)*(&off_1F26D60E0 + v3) - 8, sub_1D0AF7540);
  int v5 = *(_DWORD *)*(&off_1F26D60E0 + v3 + 14);
  if (result) {
    int v5 = 342976450;
  }
  *a1 = v5;
  return result;
}

uint64_t sub_1D0B010F0(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * (a2 ^ (2 * (v2 == 0x724398F7)))))(a1, 2042714722);
}

void sub_1D0B01148(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1543459711 * ((-1684224306 - (a1 | 0x9B9CC6CE) + (a1 | 0x64633931)) ^ 0x28E13AF5));
  __asm { BRAA            X10, X17 }
}

void sub_1D0B01228(uint64_t a1)
{
  BOOL v3 = *(void *)(a1 + 16) != 0x587910004978A29CLL && *(void *)a1 != 0x7AFA2E4D31C5923ALL;
  int v1 = *(_DWORD *)(a1 + 12) ^ (1663139771 * ((-2 - ((a1 | 0xF0401EDF) + (~a1 | 0xFBFE120))) ^ 0x775637AD));
  __asm { BRAA            X12, X17 }
}

void sub_1D0B012D0(int8x16_t *a1@<X2>, int8x16_t *a2@<X8>, int8x16_t a3@<Q0>, int8x16_t a4@<Q2>)
{
  *a1 = vaddq_s8(vsubq_s8(*a2, vandq_s8(vaddq_s8(*a2, *a2), a3)), a4);
  JUMPOUT(0x1D0B01304);
}

uint64_t sub_1D0B018E0@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((177 * (((((v2 ^ 0xB1) + 28) | 0x30u) ^ 0xBFLL) != v1)) ^ v2 ^ 0xB1)))();
}

uint64_t sub_1D0B0191C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,int a22,int a23,int a24,int *a25,int *a26,unsigned int a27,int a28)
{
  unsigned int v34 = 1477295531 * ((&a24 & 0xD665C5E7 | ~(&a24 | 0xD665C5E7)) ^ 0x1E910F4B);
  a25 = v30;
  a24 = (v29 - 378) ^ v34;
  LODWORD(a26) = v34 + 1280986348;
  (*(void (**)(int *))(v28 + 8 * (v29 ^ 0x7BA)))(&a24);
  unsigned int v35 = 1449114341 * (((&a24 | 0x5B094D3) + (~&a24 | 0xFA4F6B2C)) ^ 0xCAEE6D39);
  a27 = v35 + 1997355281;
  a28 = v35 ^ 0xD6687D8;
  a24 = v29 - v35 - 357;
  a25 = &a20;
  a26 = v30;
  (*(void (**)(int *))(v28 + 8 * (v29 + 768)))(&a24);
  *(_DWORD *)(v32 - 0x10B17FC23B8BBE2CLL) += a20;
  *(_DWORD *)(v32 - 0x10B17FC23B8BBE28) += a21;
  *(_DWORD *)(v32 - 0x10B17FC23B8BBE24) += a22;
  *(_DWORD *)(v32 - 0x10B17FC23B8BBE20) += a23;
  a24 = v29
      + 1334103649 * (((&a24 | 0xFA15199F) - (&a24 & 0xFA15199F)) ^ 0x92BDD131)
      + 2097344667;
  a25 = (int *)(v32 + 0x50BAE18D02115304);
  a26 = v30;
  uint64_t v36 = (*(uint64_t (**)(int *))(v28 + 8 * (v29 ^ 0x4D6)))(&a24);
  return (*(uint64_t (**)(uint64_t))(v28
                                            + 8
                                            * (((v33 - v31 - 38282361 + 3 * ((v29 - 491) ^ 0x15Bu) < 0xFFFFFFC0)
                                              * ((145 * ((v29 - 491) ^ 0x10F)) ^ 0x165)) ^ (v29 - 491))))(v36);
}

void sub_1D0B01B60(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 12) + 1477295531 * (((a1 | 0x4B40B967) - a1 + (a1 & 0xB4BF4698)) ^ 0x7C4B8C34);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1D0B01C20@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  v43.i64[0] = 0x3636363636363636;
  v43.i64[1] = 0x3636363636363636;
  *(int8x16_t *)(&a40 + v40) = veorq_s8(*(int8x16_t *)(&a40 + v40), v43);
  v43.i64[0] = 0x5C5C5C5C5C5C5C5CLL;
  v43.i64[1] = 0x5C5C5C5C5C5C5C5CLL;
  *(int8x16_t *)(a1 + v40) = veorq_s8(*(int8x16_t *)(a1 + v40), v43);
  return (*(uint64_t (**)(void))(v42 + 8 * ((v41 - 1298) | (8 * (v40 + 16 != ((v41 - 1396) | 2u) + 9)))))();
}

void sub_1D0B01C70(_DWORD *a1)
{
  unsigned int v1 = *a1 - 1334103649 * ((-2 - ((~a1 | 0x5EEAECA9) + (a1 | 0xA1151356))) ^ 0x36422407);
  uint64_t v2 = (uint64_t)*(&off_1F26D60E0 + (int)(v1 ^ 0x36F));
  uint64_t v3 = *(void *)(v2
                 + 8
                 * (int)((((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (int)(v1 ^ 0x55F)))(12, 205473644) == 0)* ((v1 + 56012849) & 0xFCA94FE5 ^ 0x34E)) ^ v1));
  __asm { BRAA            X9, X17 }
}

void sub_1D0B01E80(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unsigned int a4)
{
  a3 = a1;
  a4 = (v4 + 491) ^ (1663139771
                   * ((((2 * &a3) | 0xB3349BE6) - &a3 - 1503284723) ^ 0x21739B7E));
  (*(void (**)(uint64_t *))(v5 + 8 * (v4 ^ 0x49C)))(&a3);
  JUMPOUT(0x1D0AEF48CLL);
}

uint64_t sub_1D0B01EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((((((-90 * (v8 ^ 0xD9) - 81) ^ (v8 + 113)) + v9) < 0xAu) * a8) ^ v8)))();
}

uint64_t sub_1D0B01F3C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((2012 * ((v0 ^ 0xA6E2B243DFA1ACBLL) != 0xA6E2B243DFA1ACBLL)) ^ 0x3FBu)))();
}

uint64_t sub_1D0B01FA8(__n128 a1)
{
  a1.n128_u16[0] = -1800;
  a1.n128_u8[2] = -8;
  a1.n128_u8[3] = -8;
  a1.n128_u8[4] = -8;
  a1.n128_u8[5] = -8;
  a1.n128_u8[6] = -8;
  a1.n128_u8[7] = -8;
  return sub_1D0B01FD0(((v1 - 920) | 0x184u) ^ 0x1ADLL, 1573, a1);
}

uint64_t sub_1D0B01FD0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>, int8x8_t a4@<D0>)
{
  *(int8x8_t *)(a3 + v5) = veor_s8(*(int8x8_t *)(v7 + v5), a4);
  return (*(uint64_t (**)(void))(v8 + 8 * (((a1 + v5 == v4) * a2) ^ v6)))();
}

uint64_t sub_1D0B01FFC@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + v2) = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v2 + 1 == v1) * ((v3 - 2091533755) & 0x7CAA42FF ^ 0x43)) ^ (v3 - 933))))();
}

uint64_t sub_1D0B02044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, long long a16, long long a17, long long a18)
{
  *(long long *)((char *)&a16 + 7) = 0u;
  *(long long *)((char *)&a17 + 7) = 0u;
  *(void *)((char *)&a18 + 7) = 0;
  HIBYTE(a18) = 0;
  uint64_t v20 = (*(uint64_t (**)(void))(v18 + 8 * (int)(v19 + 1394)))();
  uint64_t v21 = (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t))(v18 + 8 * (int)(v19 + 1385)))(a13, (char *)&a16 + 7, 41, v20);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, long long *, uint64_t))(v18 + 8 * ((59 * (v21 != (v19 + 100))) ^ v19)))(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, &a17, a13);
}

uint64_t sub_1D0B020E0(uint64_t a1)
{
  int v1 = 515566439 * ((((2 * (a1 ^ 0xE5C15AB6)) | 0x9F90E754) - (a1 ^ 0xE5C15AB6) + 808946774) ^ 0x46DD2EBB);
  return (*((uint64_t (**)(void))*(&off_1F26D60E0 + (*(_DWORD *)(a1 + 12) ^ v1) - 1241)
          + ((((*(_DWORD *)(a1 + 8) + v1 - 849653924) > 6) * ((*(_DWORD *)(a1 + 12) ^ v1 ^ 0x76F) - 433)) ^ *(_DWORD *)(a1 + 12) ^ v1)))();
}

void sub_1D0B02180()
{
}

uint64_t sub_1D0B0218C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((794
                                * (*(unsigned char *)((v0 | ((unint64_t)(v0 < ((v4 - 1597823216) & 0x5F3CD9F8u) + v2) << 32))
                                            + v1
                                            - 1118710191) == 0)) ^ v4)))();
}

void sub_1D0B021F0()
{
}

void sub_1D0B02284()
{
  *(_DWORD *)(v2 - 252) = v0;
  *(_DWORD *)(v2 - 248) = v1;
  *(_DWORD *)(v2 - 256) = v0 & 0xFFFFFFF8;
  *(_DWORD *)(v2 - 240) = -(v0 & 0xFFFFFFF8);
  JUMPOUT(0x1D0B022F0);
}

uint64_t sub_1D0B023EC(_DWORD *a1)
{
  unsigned int v1 = 1477295531 * ((((2 * a1) | 0x91D7A040) - a1 + 924069856) ^ 0xFFE0E573);
  int v2 = *a1 ^ v1;
  return (*((uint64_t (**)(void))*(&off_1F26D60E0 + (v2 ^ 0x158))
          + ((((((v2 - 357) ^ (a1[4] - v1 - 1280986333 < 7)) & 1) == 0) * ((v2 + 201) ^ 0x2BB)) ^ v2)))();
}

uint64_t sub_1D0B0249C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (int)(((((v9 + 1888123048) & 0x8F7587DF) + 917)
                                     * (v10 + 0x64E59DC47F05F649 == a9 + 0x5CB3E732A654FB26)) ^ v9)))();
}

uint64_t sub_1D0B02510()
{
  BOOL v2 = *(unsigned __int8 *)(STACK[0x208] + 7) != ((v0 + 100289124) & 0xC7 ^ 0x42);
  return (*(uint64_t (**)(void))(v1 + 8 * (((2 * v2) | (8 * v2)) ^ v0)))();
}

uint64_t sub_1D0B02554()
{
  *(unsigned char *)(v5 + v1 + v6 + ((v0 - 415) | v8) + 24) = *(unsigned char *)(v2 + v1 + v6 + ((v0 - 415) | v8)) ^ 0xF8;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 + 1 == v4 + 64) * v7) ^ v0)))();
}

void sub_1D0B02598()
{
  *(_DWORD *)(v1 - 256) = v0 + 1;
  JUMPOUT(0x1D0B02690);
}

void sub_1D0B02704(uint64_t a1)
{
  int v1 = 1663139771 * ((2 * (a1 & 0x1595FB68) - a1 + 1785332887) ^ 0x1283D21A);
  int v2 = *(_DWORD *)(a1 + 12) ^ v1;
  int v3 = (unsigned __int16)(*(_WORD *)(a1 + 8) + v1);
  BOOL v5 = *(void *)a1 == 0x497FEE934D13E3E2 || v3 == 32544;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D0B027D8(uint64_t result)
{
  *(void *)(v2 - 0x7F12632806E98E07) = result + 0x6E2E237C8C7936AALL;
  *(_DWORD *)(v1 + 8) = 343018756;
  return result;
}

void sub_1D0B02824(int a1@<W8>)
{
  *(_DWORD *)(v1 + 40) = a1;
}

uint64_t sub_1D0B02864(int a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v12 = (a4 + 993284614) & 0xC4CBAD5D;
  uint64_t v13 = v8 + v7 + v10 + v12 - a1;
  *(void *)(v5 - 7 + v13) = *(void *)(v4 - 7 + v13);
  return (*(uint64_t (**)(void, void))(v11
                                                   + 8 * (int)((164 * (((v12 ^ 0xFFFFFEBD) & v6) != a1 + 8)) ^ v12)))((a1 + 16), v9 - ((v12 ^ 0xFFFFFEBD) & v6));
}

uint64_t sub_1D0B028E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v6
                                                                      + 8
                                                                      * (((*(unsigned __int8 *)(v5 - 0x6E2E237C8C7936A9) != (v4 - 24))
                                                                        * (((v4 - 111) ^ 0x22) - 207)) ^ (v4 - 111))))(a1, a2, a3, (v3 + 6));
}

uint64_t sub_1D0B02934()
{
  int v11 = 1580882533 * ((491896246 - ((v10 - 168) | 0x1D51BDB6) + ((v10 - 168) | 0xE2AE4249)) ^ 0x7B36F189);
  *(_DWORD *)(v10 - 120) = (v1 + v3 + 197) ^ v11;
  *(void *)(v10 - 112) = v5;
  *(void *)(v10 - 104) = v2;
  *(void *)(v10 - 136) = v6;
  *(void *)(v10 - 128) = v8;
  *(void *)(v10 - 152) = v7;
  *(_DWORD *)(v10 - 160) = v11 ^ (v12 - ((2 * v12) & 0xC1EA2A4E) - 520809177);
  *(void *)(v10 - 168) = v4;
  (*(void (**)(uint64_t))(v9 + 8 * (v3 ^ (v3 + 1542))))(v10 - 168);
  return (*(_DWORD *)(v10 - 144) - 343018756);
}

uint64_t sub_1D0B029E4(double a1)
{
  *(double *)(v3 + v6) = a1;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v2 ^ (v4 == v6)) & 1) * v5) ^ v1)))();
}

void sub_1D0B02A10()
{
}

uint64_t sub_1D0B02A1C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((27
                                * (*(unsigned __int8 *)(v2 + 12) > (((v0 - 119) ^ 0xE0)
                                                                                                 + (v0 ^ 0x86)))) ^ v0)))();
}

void sub_1D0B02A5C()
{
}

uint64_t sub_1D0B02A6C(uint64_t a1, int a2, int a3, int a4, int a5)
{
  uint64_t v11 = a3 + a2 + ((a5 - 676383924) & 0x2850CFE7 ^ (a4 + 2789)) + v10;
  uint64_t v12 = ((_BYTE)a3 + (_BYTE)a2 + (((_BYTE)a5 + 76) & 0xE7 ^ (a4 - 27))) & 0xF;
  unint64_t v13 = v12 + v8 - v11;
  uint64_t v14 = (v12 | v6) - v11;
  unint64_t v15 = (v12 | v7) - v11 + ((a5 - 874013560) & 0x34186546) - 1089;
  BOOL v19 = (unint64_t)(v5 - v10) < 0x10 || v13 < 0x10 || (unint64_t)(v14 + 2) < 0x10 || v15 < 0x10;
  return (*(uint64_t (**)(void))(v9 + 8 * ((228 * v19) ^ a5)))();
}

uint64_t sub_1D0B02B10@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)(v7 + a1 + 24) = *(_OWORD *)(v2 + a1);
  return (*(uint64_t (**)(void))(v3 + 8 * (((a1 != 48) * ((v1 + v4) & v5 ^ v6)) ^ v1)))();
}

uint64_t sub_1D0B02B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  BOOL v44 = (((_BYTE)a11 + 8) & 0xF) == 0 && a11 != 452857672;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8 * (((((4 * (v41 ^ 0x25A)) ^ 0x47) - 113) * v44) ^ v41)))(a1, a2, a3, 4 * (v41 ^ 0x25Au), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

void sub_1D0B02B9C()
{
}

uint64_t sub_1D0B02BA8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,char a28)
{
  *(&a28 + a1 - 399510284) = -8;
  return (*(uint64_t (**)(void))(v29 + 8 * ((1271 * ((unint64_t)(a1 - 399510283) < 0x38)) ^ (v28 - 1168))))();
}

uint64_t sub_1D0B02BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((487
                                * ((((((a6 ^ 0x5DC) + 1877327517) & 0x901A45BD) - 1313) & v6) != (((a6 ^ 0x5DC)
                                                                                                 - 23913881) & 0x16CE5DF)
                                                                                               - 277)) ^ a6 ^ 0x5DC)))();
}

uint64_t sub_1D0B02C58()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((v3 + 726207857) ^ ((v2 > v0 + 623) | (2 * (v2 > v0 + 623))))))();
}

void sub_1D0B02C94()
{
}

uint64_t sub_1D0B02CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 8 * (((v61 + v62 + 1044) * (a4 == 343018756)) ^ (v61 + v62 - 74))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61);
}

uint64_t sub_1D0B02D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                         + 8
                                                                                         * ((1862
                                                                                           * (v6
                                                                                            + ((v7 - 2072280017) & 0x7B8479F4)
                                                                                            + ((v7 - 267) | 0x120u) < 0xFFFFFFC0)) ^ v7)))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1D0B02D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15)
{
  uint64_t v21 = *(unsigned char **)(v15 + 8);
  int v22 = 3 * (v20 ^ 0x256);
  unsigned int v23 = 515566439 * ((2 * (&a13 & 0x378AB438) - &a13 - 931836992) ^ 0xA4A14C67);
  a13 = v19;
  LODWORD(a14) = 849653937 - v23;
  HIDWORD(a14) = (v20 + 571) ^ v23;
  uint64_t v31 = 8 * (v20 ^ 0x4A9);
  (*(void (**)(uint64_t *))(v17 + v31))(&a13);
  int v24 = *v18 + 1071647139 - ((2 * *v18 + 832984826) & 0x4E19BF36) + 373;
  unsigned int v25 = 846572393 * (((&a13 | 0x34EDD252) - (&a13 & 0x34EDD252)) ^ 0x28E861B);
  a14 = v16 - 0xD4553162FACF473;
  LODWORD(a13) = v24 ^ v25;
  HIDWORD(a13) = v20 - 1736225639 + v25;
  (*(void (**)(uint64_t *))(v17 + 8 * (v20 + 881)))(&a13);
  int v26 = *(_DWORD *)(v16 - 0x10B17FC23B8BBE18)
      + (v22 ^ 0x3FE009A3)
      - ((2 * *(_DWORD *)(v16 - 0x10B17FC23B8BBE18) + 832984826) & 0x4E19BF36);
  unsigned int v27 = 846572393 * (((&a13 | 0x445D2066) - (&a13 & 0x445D2066)) ^ 0x723E742F);
  a14 = v16 - 0xD4553162FACF46FLL;
  LODWORD(a13) = v26 ^ v27;
  HIDWORD(a13) = v20 - 1736225639 + v27;
  (*(void (**)(uint64_t *))(v17 + 8 * (v20 ^ 0x48F)))(&a13);
  a15 = 1580882533 * ((1292394866 - (&a13 | 0x4D086172) + (&a13 | 0xB2F79E8D)) ^ 0x2B6F2D4D)
      + 2088559528
      + v20;
  a13 = v19;
  a14 = v16 + 0x3729F98066DF4DAALL;
  (*(void (**)(uint64_t *))(v17 + 8 * (v20 + 812)))(&a13);
  unsigned int v28 = 515566439 * ((&a13 & 0x1F5758B | ~(&a13 | 0x1F5758B)) ^ 0x92DE8DD3);
  a13 = v16 - 0x10B17FC23B8BBE2CLL;
  LODWORD(a14) = 849653927 - v28;
  HIDWORD(a14) = (v20 + 571) ^ v28;
  uint64_t v29 = (*(uint64_t (**)(uint64_t *))(v17 + v31))(&a13);
  *uint64_t v21 = *(unsigned char *)(v16 - 0x10B17FC23B8BBE2CLL);
  v21[1] = *(unsigned char *)(v16 - 0x10B17FC23B8BBE2BLL);
  v21[2] = *(unsigned char *)(v16 - 0x10B17FC23B8BBE2ALL);
  v21[3] = *(unsigned char *)(v16 - 0x10B17FC23B8BBE29);
  v21[4] = *(unsigned char *)(v16 - 0x10B17FC23B8BBE28);
  v21[5] = *(unsigned char *)(v16 - 0x10B17FC23B8BBE27);
  v21[6] = *(unsigned char *)(v16 - 0x10B17FC23B8BBE26);
  v21[7] = *(unsigned char *)(v16 - 0x10B17FC23B8BBE25);
  v21[8] = *(unsigned char *)(v16 - 0x10B17FC23B8BBE24);
  v21[9] = *(unsigned char *)(v16 - 0x10B17FC23B8BBE23);
  v21[10] = *(unsigned char *)(v16 - 0x10B17FC23B8BBE22);
  v21[11] = *(unsigned char *)(v16 - 0x10B17FC23B8BBE21);
  v21[12] = *(unsigned char *)(v16 - 0x10B17FC23B8BBE20);
  v21[13] = *(unsigned char *)(v16 - 0x10B17FC23B8BBE1FLL);
  v21[14] = *(unsigned char *)(v16 - 0x10B17FC23B8BBE1ELL);
  v21[15] = *(unsigned char *)(v16 - 0x10B17FC23B8BBE1DLL);
  *(_OWORD *)(v16 - 0x10B17FC23B8BBE2CLL) = 0u;
  *(_DWORD *)(v16 - 0x10B17FC23B8BBE18) = 1730991235;
  *uint64_t v18 = 1730991235;
  *(_OWORD *)(v16 - 0x10B17FC23B8BBE14) = 0u;
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * (v22 ^ (4 * (v22 != 651)))))(v29);
}

uint64_t sub_1D0B0322C@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3 + 8 * ((((a2 ^ 0x513) - 211) * (v3 == a1)) ^ a2)))();
}

uint64_t sub_1D0B03258@<X0>(uint64_t a1@<X8>)
{
  int8x8x4_t v6 = vld4_s8(v4);
  v7.val[0] = v6.val[3];
  v7.val[1] = v6.val[2];
  v7.val[2] = v6.val[1];
  v7.val[3] = v6.val[0];
  vst4_s8(v4, v7);
  return (*(uint64_t (**)(void))(a1 + 8 * (((v2 == 0) * v1) ^ v3)))();
}

void sub_1D0B03290()
{
}

void sub_1D0B03298()
{
}

void sub_1D0B032A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29)
{
  LODWORD(STACK[0x510]) ^= a29;
  JUMPOUT(0x1D0AE6394);
}

uint64_t sub_1D0B032BC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, int a18, int a19, int a20,int *a21,int *a22,unsigned int a23,int a24)
{
  unsigned int v31 = 1477295531 * ((-675871305 - (&a20 | 0xD7B705B7) + (&a20 | 0x2848FA48)) ^ 0x1F43CF1B);
  LODWORD(a22) = a2 + v31 + 12;
  a21 = v30;
  a20 = (v26 - 450) ^ v31;
  (*(void (**)(int *))(v25 + 8 * (v26 + 526)))(&a20);
  unsigned int v32 = 1449114341 * (&a20 ^ 0xCF5EF9EB);
  a21 = &a16;
  a22 = v30;
  a20 = v26 - v32 - 429;
  a23 = v32 + 1997355281;
  a24 = v32 ^ v27;
  (*(void (**)(int *))(v25 + 8 * (v26 + 696)))(&a20);
  *(_DWORD *)(v24 - 0x10B17FC23B8BBE2CLL) += a16;
  *(_DWORD *)(v24 - 0x10B17FC23B8BBE28) += a17;
  *(_DWORD *)(v24 - 0x10B17FC23B8BBE24) += a18;
  *(_DWORD *)(v24 - 0x10B17FC23B8BBE20) += a19;
  a20 = v28 + ((2 * (&a20 & 0x608DBA78) - &a20 - 1619901051) ^ 0xF7DA8D2B) * v29 + v26 - 14;
  a21 = (int *)(v24 + 0x50BAE18D02115304);
  a22 = v30;
  uint64_t v33 = (*(uint64_t (**)(int *))(v25 + 8 * (v26 + 746)))(&a20);
  *(void *)(v24 - 0x10B17FC23B8BBE14) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8 * v26))(v33, 1280986336);
}

void jEHf8Xzsv8K(uint64_t a1)
{
  __asm { BRAA            X9, X17 }
}

void sub_1D0B034F0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) ^ (1663139771 * (((a1 | 0x41583596) - (a1 & 0x41583596)) ^ 0x39B1E31B));
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1D0B035A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  return (*(uint64_t (**)(void))(a2
                              + 8 * (((a38 == ((v38 + 250221879) & 0xF115ED3B ^ 0x7DA3FBD4)) * (v38 + 1064)) ^ v38)))();
}

uint64_t sub_1D0B035F4@<X0>(uint64_t a1@<X8>)
{
  char v4 = *v1;
  char *v1 = v1[3];
  v1[3] = v4;
  char v5 = v1[1];
  v1[1] = v1[2];
  v1[2] = v5;
  return (*(uint64_t (**)(void))(a1 + 8 * ((232 * (((v3 + 178) ^ 0xFFFFFB05) + v2 == 849653923)) ^ v3)))();
}

uint64_t sub_1D0B03650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38,int a39,int a40)
{
  return (*(uint64_t (**)(void))(v41
                              + 8 * ((149 * (a39 + a40 + a38 == ((((v40 + 545) | 0x2B) + 552) ^ 0xB65D5932))) ^ v40)))();
}

void sub_1D0B036A0()
{
}

void sub_1D0B036A8()
{
}

uint64_t sub_1D0B0373C()
{
  unsigned int v4 = (v1 + 942588056) & 0xC7D13DBF;
  if (*(void *)(v2 + 16)) {
    BOOL v5 = (*(_DWORD *)(v2 + 48) ^ v0) == 528941967;
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = v5;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((v6 * (((173 * (v4 ^ 0x199) - 453) | 0x300) - 829)) ^ v4)))();
}

uint64_t sub_1D0B037A4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((2010
                                * (((((v1 + 1974899155) & 0x8A496B73) - 52539090) ^ (v1 - 12846077) & 0xFFC71A6D)
                                 + 2 * v0 >= v3 - 83031961)) ^ v1)))();
}

uint64_t sub_1D0B03820(uint64_t a1)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)a1 + 961505453 * ((((2 * a1) | 0x2E76B836) - a1 + 1757717477) ^ 0x35C092BD);
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned int v4 = (1334103649 * (((&v3 | 0x3E54581C) - (&v3 & 0x3E54581C)) ^ 0x56FC90B2)) ^ (v1 + 337131026);
  return (*((uint64_t (**)(uint64_t *))*(&off_1F26D60E0 + v1 + 820818540) + v1 + 820819977))(&v3);
}

void sub_1D0B03920(uint64_t a1)
{
  if (*(void *)a1) {
    BOOL v2 = *(void *)(a1 + 32) == 0x4005A18C73DCADE8;
  }
  else {
    BOOL v2 = 1;
  }
  int v5 = v2 || *(void *)(a1 + 8) == 0x351A91412706C5BLL || *(void *)(a1 + 16) == 0x7AFA2E4D31C5923ALL;
  int v1 = *(_DWORD *)(a1 + 28) - 961505453 * ((2 * (a1 & 0x4822944) - a1 + 2071844539) ^ 0xD986181D);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_1D0B039F4(uint64_t result)
{
  *(_DWORD *)(result + 8) = 342975856;
  return result;
}

void sub_1D0B03A04()
{
}

uint64_t sub_1D0B03A20(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  *(void *)(a4 + v6) = *(void *)(a1 + v6);
  return (*(uint64_t (**)(void))(v7 + 8 * (((a3 == 0) * v5) ^ a5)))();
}

uint64_t sub_1D0B03A50(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  unsigned int v40 = ((11 * (v37 ^ 0x1A9)) ^ (a6 + 32)) + v38;
  int v41 = *(_DWORD *)(a4 + (v40 & 0xFFFFFFFC));
  *(unsigned char *)(a37 + v40) = v41 ^ 0x92;
  *(unsigned char *)(a37 + (v38 + a6 + 1)) = (BYTE2(v41) ^ 0x53) - ((2 * (BYTE2(v41) ^ 0x53)) & 0xF0) - 8;
  *(unsigned char *)(a37 + (v38 + a6)) = (BYTE1(v41) ^ 0x19)
                                             + ((2 * ((BYTE1(v41) ^ 0x19 | 0x78) ^ BYTE1(v41))) ^ 0x3D)
                                             - 7;
  *(unsigned char *)(a37 + (v38 + a6 + 2)) = (HIBYTE(v41) ^ 0x4F) - ((2 * (HIBYTE(v41) ^ 0x4F)) & 0xF0) - 8;
  unsigned int v42 = *a2 + 1326744879;
  if ((v38 - 529543796) < 0x6023D846 != v42 < 0x6023D846) {
    BOOL v43 = v42 < 0x6023D846;
  }
  else {
    BOOL v43 = v38 - 529543796 < v42;
  }
  return (*(uint64_t (**)(void))(v39 + 8 * ((105 * !v43) ^ v37)))();
}

uint64_t sub_1D0B03B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v34 = 839339309 * ((((v32 - 136) | 0xCBFDBA02) - ((v32 - 136) & 0xCBFDBA02)) ^ 0x771CA263);
  *(_DWORD *)(v32 - 112) = v34 ^ 0x1892F8D0;
  *(void *)(v32 - 104) = v29 + 0x7AFA2E4D31C5923ALL;
  *(_DWORD *)(v32 - 136) = v34 + v31 + 586;
  uint64_t v35 = *(void *)(v30 + 8 * (v31 ^ 0x77)) - 4;
  *(void *)(v32 - 128) = &STACK[0x7CADFE0965419273];
  *(void *)(v32 - 120) = v35;
  uint64_t v36 = (*(uint64_t (**)(uint64_t))(v33 + 8 * (v31 ^ 0x5FE)))(v32 - 136);
  return (*(uint64_t (**)(uint64_t))(a29
                                            + 8
                                            * (((*(_DWORD *)(v32 - 132) == 343018756) * (((v31 + 612) ^ 0x56) - 40)) ^ v31)))(v36);
}

uint64_t sub_1D0B03C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8 * ((((v6 + 1 == v9 + 60) << 6) | ((v6 + 1 == v9 + 60) << 10)) ^ a6)))(v7);
}

void sub_1D0B03D50()
{
}

uint64_t sub_1D0B03DAC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,unsigned __int8 a41,char a42,unsigned __int8 a43,char a44,char a45,unsigned __int8 a46,char a47,char a48,__int16 a49,unsigned __int8 a50,char a51,char a52,unsigned __int8 a53,char a54,char a55,char a56,char a57,__int16 a58,__int16 a59,char a60,__int16 a61,unsigned __int8 a62,__int16 a63)
{
  int v88 = a1 ^ 0x433;
  int v89 = v88 - 1034;
  int v90 = v88;
  HIDWORD(a14) = v88;
  LOBYTE(v88) = (v88 - 10) | 1;
  LODWORD(v210) = v89;
  int v91 = BYTE5(a35) ^ v83;
  unsigned int v92 = ((171 * v91) >> 9) & 0x23 | (v89 ^ 0xFFFFFADE) & BYTE2(a31);
  unsigned int v93 = (135 * ((v88 ^ a80) ^ 0xA7u)) >> 8;
  uint64_t v94 = *(void *)(v85 + 8 * (v90 ^ 0x5D3)) - 8;
  unsigned int v95 = *(unsigned __int8 *)(v94
                           + ((v88 ^ a80 ^ 0xA7)
                                             - 21
                                             * ((v93
                                                                + ((((v88 ^ a80 ^ 0xA7) - v93) & 0xFE) >> 1)) >> 4))) ^ v83;
  LOBYTE(v92) = (v92 ^ 4) & (*(unsigned char *)(v94
                                      + (unsigned __int16)(((v95 >> 4) | (16 * v95))
                                                         - 21 * ((3121 * ((v95 >> 4) | (16 * v95))) >> 16))) ^ v83);
  BYTE3(a20) = v92 + (~(2 * v92 + 40) | 0x79) + 88;
  unsigned int v96 = ((205 * v91) >> 10) * ((205 * v91) >> 10);
  BYTE6(a23) = 2 * v96 - (v82 & (4 * v96)) + 36;
  BYTE1(a23) = -5;
  uint64_t v221 = v86;
  uint64_t v97 = (char *)&a18 + 7;
  LOBYTE(v96) = *((unsigned char *)&a18
                + ((a78 ^ v83) - 35 * ((235 * (a78 ^ v83)) >> 13))
                + 7) ^ 0x43;
  a55 ^= v96 * v96 * (a73 ^ v83);
  int v98 = ((*(unsigned __int8 *)(v94
                             + ((a79 ^ v83)
                                               - 21
                                               * ((((unsigned __int16)(135
                                                                                      * (a79 ^ v83)) >> 8)
                                                                  + ((((a79 ^ v83)
                                                                                      - ((unsigned __int16)(135 * (a79 ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4))) >> 1) & 0x10)
      + (*(unsigned __int8 *)(v87 - 113) ^ v83)
      - 80;
  int v99 = v98 - (v82 & (2 * v98)) + 36;
  *(unsigned char *)(v87 - 113) = v99;
  LOBYTE(v95) = (*(unsigned char *)(v87 - 100) ^ v83)
              - 2 * (((*(unsigned char *)(v87 - 100) ^ v83) + 16) & 0x2C ^ *(unsigned char *)(v87 - 100) & 8)
              - 76;
  *(unsigned char *)(v87 - 100) = v95;
  *(unsigned char *)(v87 - 103) = (*(unsigned char *)(v87 - 103) ^ v83) - ((2 * (*(unsigned char *)(v87 - 103) ^ v83) + 22) & v82) - 81;
  unsigned int v100 = (BYTE3(a27) ^ v83)
       - ((HIBYTE(a21) ^ 0x43) & ((BYTE1(a22) ^ 0x43u) / 3) & ((BYTE5(a24) ^ v83) & (*(unsigned __int8 *)(v87 - 101) ^ 0x5B) | *(unsigned char *)(v87 - 101) & 0x38 ^ 0x20) | (*(unsigned __int8 *)(v94 + ((BYTE6(a27) ^ v83) - 21 * ((((unsigned __int16)(135 * (BYTE6(a27) ^ v83)) >> 8) + ((((BYTE6(a27) ^ v83) - ((unsigned __int16)(135 * (BYTE6(a27) ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v83) & (HIBYTE(a21) ^ 0xFFFFFFBC));
  BYTE3(a27) = v100 - (v82 & (2 * v100)) + 36;
  char v101 = *(unsigned char *)(v87 - 104);
  int v102 = *((unsigned __int8 *)&a18
         + ((BYTE5(a31) ^ v83) - 35 * ((235 * (BYTE5(a31) ^ v83)) >> 13))
         + 7);
  unsigned __int8 v103 = (BYTE5(a21) ^ 0x43) & (v95 ^ v83) | v95 & 0x36 ^ 0x12;
  BYTE3(a20) = v103 / 5u - (((205 * v103) >> 9) & 6) + 67;
  int v104 = (((BYTE1(a22) >> 1) & 0x5E) - (BYTE1(a22) & 0xAC) + 118) ^ 0x56;
  char v105 = BYTE1(a25);
  int v106 = (*((unsigned __int8 *)&a18
          + ((BYTE1(a25) ^ v83) - 35
                                                 * ((235 * (BYTE1(a25) ^ v83)) >> 13))
          + 7) ^ 0x43)
       + v104 * v104 * v104;
  LOBYTE(v93) = (BYTE3(a22) ^ 0x43) & (v101 ^ v83 | 0x50) | (v101 ^ v83) & 0x50;
  BYTE4(a23) = (BYTE4(a23) ^ v83) - v93 * v93 + (~(2 * ((BYTE4(a23) ^ v83) - v93 * v93)) | 0xB7) + 37;
  int v107 = *((unsigned __int8 *)&a18
         + ((BYTE2(a27) ^ v83) - 35 * ((235 * (BYTE2(a27) ^ v83)) >> 13))
         + 7);
  unsigned int v108 = ((v106 - 90) ^ 0x7FC9E97F) + 2 * ((v106 - 90) & 0x7F) - 2143938943;
  int v109 = *(unsigned __int8 *)(v87 - 116 + (a69 ^ v83) % 0x14u);
  int v110 = *(unsigned __int8 *)(v94
                            + ((BYTE4(a30) ^ v83)
                                              - 21
                                              * ((((unsigned __int16)(135
                                                                                     * (BYTE4(a30) ^ v83)) >> 8)
                                                                 + ((((BYTE4(a30) ^ v83)
                                                                                     - ((unsigned __int16)(135 * (BYTE4(a30) ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4)));
  *(unsigned char *)(v87 - 97) = v110;
  unsigned int v111 = (BYTE4(a27) ^ v83) + ((205 * (*(unsigned __int8 *)(v94 + v108 % 0x15) ^ v83)) >> 10);
  BYTE4(a27) = v111 - (v82 & (2 * v111)) + 36;
  HIDWORD(v224) = (v107 ^ 0xFFFFFFBC) + (~(2 * (_BYTE)v107 + 2) | 0xFFFFFFF9) + 97;
  LODWORD(a18) = ((v107 ^ 0xBC) + (~(2 * v107 + 2) | 0xF9) + 97) ^ 3;
  unsigned __int16 v112 = a18 - 2146 - ((2 * a18) & 0x13C);
  unsigned int v219 = a18 - 2007107682 - ((2 * a18) & 0x13C);
  uint64_t v113 = v108 % 0x14;
  unsigned int v114 = ((((BYTE4(a19) ^ 0x18) & (BYTE1(a21) ^ 1) & (HIDWORD(v224) ^ 1) | (BYTE4(a19) ^ 1) & *(unsigned __int8 *)(v87 - 104)) & 0x19 | (*(unsigned __int8 *)(v87 - 116 + v113) >> 1) & 0x66) ^ 0xFFFFFFE4)
       + (v110 ^ v83);
  *(unsigned char *)(v87 - 97) = v114 + (~(2 * v114) | 0xB7) + 37;
  char v115 = *((unsigned char *)&a18
         + ((a69 ^ v83) - 35 * ((235 * (a69 ^ v83)) >> 13))
         + 7) ^ 0x43;
  LOBYTE(v114) = *(unsigned char *)(v94
                          + ((a73 ^ v83)
                                            - 21
                                            * ((((unsigned __int16)(135 * (a73 ^ v83)) >> 8)
                                                               + ((((a73 ^ v83)
                                                                                   - ((unsigned __int16)(135 * (a73 ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4)));
  char v116 = *(unsigned char *)(v94
                  + ((a39 ^ v83)
                                    - 21
                                    * ((((unsigned __int16)(135 * (a39 ^ v83)) >> 8)
                                                       + ((((a39 ^ v83)
                                                                           - ((unsigned __int16)(135
                                                                                               * (a39 ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4)));
  *(unsigned char *)(v87 - 101) ^= v115 * v115 * v115;
  LOBYTE(v107) = 92
               - (*(unsigned char *)(v87 - 116 + (unsigned __int16)((v112 ^ 0xF79E) - 20 * (((v112 ^ 0xF79E) & 0x1FFFu) / 0x14))) ^ v83);
  LOBYTE(v107) = (v107 | BYTE3(a36) ^ 0xDB) & (*(unsigned char *)(v87 - 114) ^ v83) | v107 & (BYTE3(a36) ^ 0xDB);
  LOBYTE(v107) = (v107 - ((2 * v107) & 0xCA) + 101) ^ 0x65;
  HIDWORD(a16) = (((v109 & 0xFFFFFFB3 ^ 0x64) << (((v101 ^ 4) + 2) & 7)) ^ ((v109 & 0xB3 ^ 0x64) >> (((v101 ^ 3) - 1) & 7))) & (v99 ^ v83) | (v102 ^ 0x43) & (v99 ^ 0xFFFFFFDB);
  BYTE1(a25) = (3
              * ((((BYTE2(a32) ^ v83) << (((v114 ^ 3) + 1) & 7)) ^ ((BYTE2(a32) ^ v83) >> (v114 & 7 ^ 4)))
               - 3 * (v116 ^ v83))) ^ v105;
  BYTE3(a19) ^= (171 * (a77 ^ v83)) >> 9;
  LOBYTE(a19) = (a19 ^ 0x43) + v107 * v107 * v107 - ((2 * ((a19 ^ 0x43) + v107 * v107 * v107)) & 0x87) + 67;
  *(unsigned char *)(v87 - 97) ^= (43691
                         * (*(unsigned char *)(v94
                                     + ((BYTE6(a34) ^ v83)
                                                       - 21
                                                       * ((((unsigned __int16)(135
                                                                                              * (BYTE6(a34) ^ v83)) >> 8)
                                                                          + ((((BYTE6(a34) ^ v83)
                                                                                              - ((unsigned __int16)(135 * (BYTE6(a34) ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4))) & 0x1B | 0xE0)
                         * (*((unsigned __int8 *)&a18
                            + ((BYTE3(a28) ^ v83)
                                              - 35 * ((235 * (BYTE3(a28) ^ v83)) >> 13))
                            + 7) ^ 0x43u)) >> 17;
  unsigned int v117 = ((92 << (((HIBYTE(a23) ^ 3) + 1) & 7)) ^ (0x5Cu >> (HIBYTE(a23) & 7 ^ 4))) + (a43 ^ v83);
  a43 = v117 - (v82 & (2 * v117)) + 36;
  LOBYTE(v117) = *((unsigned char *)&a18
                 + ((BYTE6(a24) ^ v83)
                                   - 35 * ((235 * (BYTE6(a24) ^ v83)) >> 13))
                 + 7) ^ BYTE6(a23) ^ 0x98;
  LOBYTE(v117) = ((v117 | a70) & 0xC0 | v117 & (a70 ^ v83)) + (BYTE3(a20) ^ 0x43);
  BYTE3(a20) = v117 - ((2 * v117) & 0x87) + 67;
  BYTE6(a27) = (BYTE6(a27) ^ v83) - ((2 * (BYTE6(a27) ^ v83) + 122) & v82) - 95;
  int v118 = (BYTE5(a21) ^ 0x43 | a41 ^ v83) & (*(unsigned __int8 *)(v87 - 101) ^ v83) | (BYTE5(a21) ^ 0x43) & (a41 ^ v83);
  int v119 = *(unsigned __int8 *)(v87 - 116 + (BYTE5(a28) ^ v83) % 0x14u) ^ v83;
  int v120 = *(unsigned __int8 *)(v87 - 115);
  unsigned int v121 = (v118 | v119) & (v120 ^ v83) | v118 & v119;
  LOBYTE(v119) = 2
               * ~*((unsigned char *)&a18
                  + ((a73 ^ v83) - 35 * ((235 * (a73 ^ v83)) >> 13))
                  + 7);
  int v122 = (v121 << (-(v119 & (*(unsigned char *)(v87 - 116) ^ 3) | ~*(unsigned char *)(v87 - 116) & 4) & 6)) ^ (v121 >> (v119 & (*(unsigned char *)(v87 - 116) & 6 ^ 2) | ~*(unsigned char *)(v87 - 116) & 4));
  BYTE6(a38) = v122 - (v82 & (2 * v122)) + 36;
  int v123 = *(unsigned __int8 *)(v87 - 116 + v113);
  int v124 = ((v123 ^ 4) & (v120 & 0x4C ^ 4) | v120 & 4) & (v82 ^ (2
                                                             * *(unsigned __int8 *)(v94
                                                                                  + ((BYTE6(a31) ^ v83) - 21 * ((((unsigned __int16)(135 * (BYTE6(a31) ^ v83)) >> 8) + ((((BYTE6(a31) ^ v83) - ((unsigned __int16)(135 * (BYTE6(a31) ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4))))) ^ 0x4C;
  unsigned int v125 = ((*(unsigned __int8 *)(v94
                              + ((BYTE1(a33) ^ v83)
                                                - 21
                                                * ((((unsigned __int16)(135
                                                                                       * (BYTE1(a33) ^ v83)) >> 8)
                                                                   + ((((BYTE1(a33) ^ v83)
                                                                                       - ((unsigned __int16)(135 * (BYTE1(a33) ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v83)
        + (a66 ^ v83)) >> 1;
  unsigned int v217 = (v125 | ((39324 * (a50 ^ v83)) >> 16)) & (a19 ^ 0x43) | v125 & ((39324 * (a50 ^ v83)) >> 16);
  uint64_t v126 = (unsigned __int16)((v112 ^ 0xF79E) - 35 * (((v112 ^ 0xF79E) & 0x1FFFu) / 0x23));
  LOBYTE(v122) = *((unsigned char *)&a18 + v126 + 7) & 0x97 ^ 0xB | v123 ^ v83;
  unsigned int v127 = ((BYTE3(a27) ^ v83) >> (-(BYTE5(a21) & 7 ^ 3) & 7)) ^ ((BYTE3(a27) ^ v83) << (BYTE5(a21) & 7 ^ 3));
  LOBYTE(v123) = (*(unsigned char *)(v87 - 110) & 0xA5 | *(unsigned char *)(v87 - 104) & 0x5A) ^ v83;
  LOBYTE(v122) = v122 - ((v127 | v123) & 0xE3 | v127 & v123) + (HIBYTE(a20) ^ 0x43);
  HIBYTE(a20) = v122 + (~(2 * v122) | 0x79) + 68;
  int v128 = (-34 - v217);
  *(unsigned char *)(v87 - 102) ^= *((unsigned char *)&a18 + (-34 - v217 - 35 * ((235 * v128) >> 13)) + 7) ^ 0x43;
  LOBYTE(v122) = *(unsigned char *)(v87 - 116 + (a76 ^ v83) % 0x14u) ^ v83;
  unsigned int v129 = *(unsigned __int8 *)(v94
                            + (v122
                                              - 21
                                              * ((((unsigned __int16)(135 * v122) >> 8)
                                                                 + (((v122
                                                                                     - ((unsigned __int16)(135 * v122) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v83;
  int v130 = (v129 << ((2
                  * (v97[((BYTE2(a37) ^ v83)
                                         - 35 * ((235 * (BYTE2(a37) ^ v83)) >> 13))] ^ 0x43)) & 6)) ^ (v129 >> ((-2 * (v97[((BYTE2(a37) ^ v83) - 35 * ((235 * (BYTE2(a37) ^ v83)) >> 13))] ^ 0x43)) & 6));
  unsigned int v131 = (205
        * ((*(unsigned char *)(v87 - 116 + (a81 ^ v83) % 0x14u) & 0x83 | *(unsigned char *)(v87
                                                                                           - 116
                                                                                           + (a62 ^ v83)
                                                                                           % 0x14u) & 0x7C) ^ v83)) >> 10;
  LOBYTE(v130) = ((v131 | v130) & 0x25 | v131 & v130) + (BYTE5(a25) ^ v83);
  BYTE5(a25) = v130 - (v82 & (2 * v130)) + 36;
  LOBYTE(v130) = (*(unsigned char *)(v94
                           + ((HIBYTE(a28) ^ v83)
                                             - 21
                                             * ((((unsigned __int16)(135
                                                                                    * (HIBYTE(a28) ^ v83)) >> 8)
                                                                + ((((HIBYTE(a28) ^ v83)
                                                                                    - ((unsigned __int16)(135 * (HIBYTE(a28) ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v83)
               + 92;
  HIBYTE(a19) = BYTE4(v224) ^ (0x8Cu >> ((v130 * v130) & 7)) ^ (140 << (-(char)(v130 * v130) & 7)) ^ 0x40;
  HIBYTE(a29) = ((205
                * (*(unsigned __int8 *)(v87 - 110) ^ v83 | *(unsigned __int8 *)(v87
                                                                              - 116
                                                                              + (BYTE5(a33) ^ v83)
                                                                              % 0x14u) ^ v83)) >> 10) ^ 0xDB;
  LOBYTE(v130) = (*(unsigned char *)(v87 - 103) ^ v83)
               + (*(unsigned char *)(v87 - 116 + (BYTE3(a28) ^ v83) % 0x14u) ^ v83);
  *(unsigned char *)(v87 - 103) = v130 - (v82 & (2 * v130)) + 36;
  int v132 = BYTE4(a23) ^ v83;
  *(unsigned char *)(v87 - 106) = ((*((unsigned char *)&a18 + v126 + 7) ^ 0x43 | v132) & (-34 - v217) | (*((unsigned char *)&a18 + v126 + 7) ^ 0x43u) & v132)
                        / 0xF
                        - (((137
                           * ((*((unsigned __int8 *)&a18 + v126 + 7) ^ 0x43 | v132) & (222 - v217) | (*((unsigned __int8 *)&a18 + v126 + 7) ^ 0x43) & v132)) >> 10) & 8)
                        + 36;
  a73 = *(unsigned char *)(v87 - 104);
  int v133 = (*(unsigned __int8 *)(v94
                             + (v132
                                               - 21
                                               * ((((unsigned __int16)(135 * v132) >> 8)
                                                                  + (((v132
                                                                                      - ((unsigned __int16)(135 * v132) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v83) & (BYTE2(a22) ^ 0x43) | (BYTE2(a22) ^ 0xBC) & (a73 ^ v83);
  int v134 = *((unsigned __int8 *)&a18 + (v124 - 35 * ((59 * v124) >> 11)) + 7) ^ 0x43;
  int v135 = ((v133 | v134) & 0x2A | v133 & v134) * ((v133 | v134) & 0x2A | v133 & v134);
  HIDWORD(v220) = ((2 * v135) & 0x1FEFC) + (v135 ^ 0x7FEFFF7E);
  int v136 = -1882813401 - HIDWORD(v220) - ((534773684 - 2 * HIDWORD(v220)) & 0x1FAD189A);
  __int16 v137 = *(unsigned __int8 *)(v94
                            + (unsigned __int16)((v112 ^ 0xF79E)
                                               - 21
                                               * ((((34329 * ((v112 ^ 0xF79E) & 0x1FFFu)) >> 16)
                                                 + ((unsigned __int16)(((v112 ^ 0xF79E)
                                                                      - ((34329 * ((v112 ^ 0xF79E) & 0x1FFFu)) >> 16)) & 0xFFFE) >> 1)) >> 4)));
  BYTE4(a20) ^= v137 ^ v83;
  LOBYTE(v135) = (*((unsigned char *)&a18
                  + ((a68 ^ v83) - 35 * ((235 * (a68 ^ v83)) >> 13))
                  + 7) ^ 0x43)
               - 38;
  LOBYTE(v135) = (v135 | (-34 - v217)) & (BYTE2(a21) ^ 0x43) | v128 & v135;
  char v214 = v135 * v135 + 92;
  int v138 = v136 ^ 0x4D;
  LOWORD(v135) = ((v136 ^ 0x4D) + ((BYTE5(a21) ^ 0x43) & a18)) & (v137 ^ 0xDB | 0x79) | (v137 ^ 0xFFDB) & 0x79;
  BYTE1(a29) ^= ((v135 ^ 0xA6) & (v219 ^ 0x9E) | ((-17 - v219) | ~(((v136 ^ 0x4D) + ((BYTE5(a21) ^ 0x43) & a18)) & (v137 ^ 0xDB | 0x79))) & 4)
              + (*((unsigned char *)&a18
                 + ((BYTE3(a34) ^ v83)
                                   - 35 * ((235 * (BYTE3(a34) ^ v83)) >> 13))
                 + 7) ^ 0x43);
  BYTE5(a38) ^= 0xDDu;
  LOWORD(v111) = (v137 ^ v83) - ((2 * v137) & 0x94) - 26550;
  unsigned int v139 = v108 % 0x23;
  LODWORD(v113) = (BYTE1(a20) ^ 0x43) & (v219 & 0xA3 ^ 0xDE) | v219 & 0x5C ^ 0x1C;
  int v140 = (a53 ^ v83) - 2 * ((a53 ^ v83) & 0x3F) + 968177471;
  int v141 = (v113 | v140 ^ 0x3F) & (a21 ^ 0x43);
  v140 ^= 0x39B5373Fu;
  int v142 = *((unsigned __int8 *)&a18 + v139 + 7) ^ 0x43;
  LODWORD(v113) = ((unsigned __int16)v111 ^ 0x984Au) / 3 - v142 - (v141 | v113 & v140);
  LOWORD(v135) = v135 ^ (((v219 >> 1) & 0x65 ^ 0x45) + 16309 - ((2 * ((v219 >> 1) & 0x65 ^ 0x45)) & 0xFFF9) + 73);
  int v222 = v113 + 1076893949 + (~(2 * v113) | 0x7F9FCE07);
  LODWORD(a18) = v222 ^ 0xFC;
  LOBYTE(v140) = (v222 ^ 0xFC | v140) & (BYTE2(a21) ^ 0x43) | (v222 ^ 0xFC) & v140;
  int v143 = (((BYTE2(a21) ^ 0x43) & 0xE4 | (v111 & 0xFC ^ v82) & 0xE4) & v140 | v142 & 0x1B | v140 & 0xC4 | (BYTE2(a21) ^ 0x43) & 0xC4 | (v111 & 0xFC ^ v82) & 0xC4)
       + v106
       - 90;
  LOBYTE(a23) = BYTE4(a26) ^ a23 ^ v83;
  BYTE4(a36) ^= ((v136 ^ 0x4D) - (v82 & (2 * (v136 ^ 0x4D))) + 36) ^ 0xA1;
  HIDWORD(v218) = v143;
  BYTE5(a22) = *(unsigned char *)(v87 - 116 + (BYTE4(a38) ^ v83) % 0x14u) ^ 0x67 ^ (((((BYTE2(a21) ^ 0x43) & 0xE4 | (v111 & 0xFC ^ v82) & 0xE4) & v140 | v142 & 0x1B | v140 & 0xC4 | (BYTE2(a21) ^ 0x43) & 0xC4 | (v111 & 0xFC ^ v82) & 0xC4) + v106 - 90)
                                                                                           / 3u
                                                                                           - (BYTE4(v224) & 0xE4)
                                                                                           - 19);
  LOBYTE(v111) = *((unsigned char *)&a18
                 + ((BYTE4(a34) ^ v83)
                                   - 35 * ((235 * (BYTE4(a34) ^ v83)) >> 13))
                 + 7) & 0x1B ^ 0x47;
  LOBYTE(a26) = v111 - 2 * ((v111 & 2 | 0xF9) ^ (v111 | 0xFD)) + 36;
  HIDWORD(a16) -= 15;
  LODWORD(v113) = (((v97[((unsigned __int16)v135 ^ 0x3FB5u) % 0x23] ^ 0x43) & (BYTE1(a23) ^ 0xBC) | (*(unsigned char *)(v94 + (BYTE4(a16) - 21 * ((((unsigned __int16)(135 * BYTE4(a16)) >> 8) + (((BYTE4(a16) - ((unsigned __int16)(135 * BYTE4(a16)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v83) & (BYTE1(a23) ^ 0x43)) ^ 0x9B6DBEFF)
                + 2
                * ((v97[((unsigned __int16)v135 ^ 0x3FB5u) % 0x23] ^ 0x43) & (BYTE1(a23) ^ 0xBC) | (*(unsigned char *)(v94 + (BYTE4(a16) - 21 * ((((unsigned __int16)(135 * BYTE4(a16)) >> 8) + (((BYTE4(a16) - ((unsigned __int16)(135 * BYTE4(a16)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v83) & (BYTE1(a23) ^ 0x43))
                + 257;
  LODWORD(v113) = (BYTE1(a21) ^ 0x43) + ((v113 * v113 * v113) >> 1);
  BYTE1(a21) = v113 + (~(2 * v113) | 0x79) + 68;
  LOBYTE(v140) = (*(unsigned char *)(v94
                           + ((BYTE6(a34) ^ v83)
                                             - 21
                                             * ((((unsigned __int16)(135
                                                                                    * (BYTE6(a34) ^ v83)) >> 8)
                                                                + ((((BYTE6(a34) ^ v83)
                                                                                    - ((unsigned __int16)(135 * (BYTE6(a34) ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ 0xDB)
               + (BYTE4(a19) ^ 0x43)
               + 1;
  BYTE4(a19) = v140 - ((2 * v140) & 0x87) + 67;
  LODWORD(v113) = ((39 - BYTE4(v220) - ((-76 - 2 * BYTE4(v220)) & 0x9A)) ^ 0x9F7DABB8)
                + 1619153931
                + ((2 * v136) & 0x1EA ^ 0x8A);
  uint64_t v213 = v113 % 0x23;
  BYTE1(a21) ^= ((BYTE3(a25) ^ v83) & (v135 ^ 0x4A) | (*(unsigned char *)(v87 - 116 + (BYTE5(a30) ^ v83)
                                                                            % 0x14u) ^ v83) & (v135 ^ 0xB5))
              * (((BYTE3(a28) ^ v83) & (*(unsigned char *)(v87 - 109) ^ 0xDB) | (*((unsigned char *)&a18
                                                                         + ((a71 ^ v83)
                                                                                           - 35
                                                                                           * ((235
                                                                                             * (a71 ^ v83)) >> 13))
                                                                         + 7) ^ 0x43) & (*(unsigned char *)(v87 - 109) ^ v83)) & (BYTE4(v220) + 37) | (*((unsigned char *)&a18 + v213 + 7) ^ 0x43) & (v136 ^ 0x4D));
  LOBYTE(v135) = ((*(unsigned char *)(v87 - 116 + (HIBYTE(a34) ^ v83) % 0x14u) ^ v83) & (*(unsigned char *)(v87 - 102) ^ 0xDB) | (*(unsigned char *)(v87 - 102) ^ 4) & 0x96) & (BYTE2(a20) ^ 0xBC) | (BYTE1(a24) ^ v83) & (BYTE2(a20) ^ 0x43);
  LOBYTE(v128) = *((unsigned char *)&a18
                 + ((BYTE6(a26) ^ v83)
                                   - 35 * ((235 * (BYTE6(a26) ^ v83)) >> 13))
                 + 7) & 7 ^ 3;
  unsigned int v144 = ((BYTE5(a24) ^ v83) << (-(char)v128 & 7)) ^ ((BYTE5(a24) ^ v83) >> v128);
  unsigned int v145 = ((*((unsigned __int8 *)&a18 + v126 + 7) ^ 0x43) << (v144 & 7)) ^ ((*((unsigned __int8 *)&a18 + v126 + 7) ^ 0x43u) >> (-(char)v144 & 7));
  LOBYTE(v135) = ((v145 | v135) & (a23 ^ 0x43) | v145 & v135) + (BYTE5(a21) ^ 0x43);
  BYTE5(a21) = v135 - ((2 * v135) & 0x87) + 67;
  LOBYTE(v135) = *(unsigned char *)(v87 - 116 + (BYTE1(a28) ^ v83) % 0x14u) ^ 0xFD;
  LOBYTE(v135) = v135
               - 21
               * ((((unsigned __int16)(135 * v135) >> 8)
                                  + (((v135 - ((unsigned __int16)(135 * v135) >> 8)) & 0xFE) >> 1)) >> 4);
  LOBYTE(v145) = (BYTE5(a19) ^ 0x43) & (v136 ^ 0x4D | v219 ^ 0x9E) | (v136 ^ 0x4D) & (v219 ^ 0x9E);
  LOBYTE(v135) = (*(unsigned char *)(v87 - 101) ^ v83)
               - ((v145 | *(unsigned char *)(v94 + v135) ^ v83) & v214 | v145 & (*(unsigned char *)(v94 + v135) ^ v83));
  *(unsigned char *)(v87 - 101) = v135 - (v82 & (2 * v135)) + 36;
  HIDWORD(v216) = v143 - ((2 * v143) & 0x9A) - 1021836467;
  LOBYTE(v136) = (v143 - ((2 * v143) & 0x9A) + 77) & 0x2D ^ 0x5F;
  LOWORD(v135) = (v143 - ((2 * v143) & 0x9A) + 845) ^ 0x34D;
  LOBYTE(v126) = *(unsigned char *)(v87 - 116 + (unsigned __int16)v135 % 0x14u) ^ v83;
  char v146 = *((unsigned char *)&a18
         + ((BYTE3(a30) ^ v83) - 35 * ((235 * (BYTE3(a30) ^ v83)) >> 13))
         + 7) ^ 0x43;
  char v147 = (v146 | v126) & (*(unsigned char *)(v87 - 115) ^ v83) | v146 & v126;
  unsigned __int8 v148 = (((v112 ^ 0xF79E) & 0x1FFFu) / 3 - (a26 ^ v83 | v143)) ^ v214 ^ ((v147 | v136) & (BYTE6(a22) ^ 0x43) | v147 & v136);
  unsigned int v149 = *(unsigned __int8 *)(v87 - 116 + (a53 ^ v83) % 0x14u) ^ v83 | *(unsigned __int8 *)(v94 + ((a77 ^ v83) - 21 * ((((unsigned __int16)(135 * (a77 ^ v83)) >> 8) + ((((a77 ^ v83) - ((unsigned __int16)(135 * (a77 ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v83;
  char v150 = *(unsigned char *)(v87 - 116 + (BYTE4(a29) ^ v83) % 0x14u) & 7 ^ 4;
  int v151 = (v149 >> (-v150 & 7)) ^ (v149 << v150);
  unsigned int v152 = (13108
        * (((*(unsigned char *)(v94
                      + ((BYTE1(a28) ^ v83)
                                        - 21
                                        * ((((unsigned __int16)(135
                                                                               * (BYTE1(a28) ^ v83)) >> 8)
                                                           + ((((BYTE1(a28) ^ v83)
                                                                               - ((unsigned __int16)(135 * (BYTE1(a28) ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4))) & 0xEE | BYTE3(a27) & 0x11) ^ v83)
         + ((*((unsigned char *)&a18
             + ((a41 ^ v83) - 35 * ((235 * (a41 ^ v83)) >> 13))
             + 7) ^ 0x43) & (HIBYTE(a20) ^ 0xBC) | (*(unsigned char *)(v87 - 116 + v148 % 0x14u) ^ v83) & (HIBYTE(a20) ^ 0x43)))) >> 16;
  int v153 = *(unsigned __int8 *)(v87 - 116 + (BYTE6(a23) ^ v83) % 0x14u) ^ v83;
  int v154 = ((v153 | v152) & (*(unsigned __int8 *)(v87 - 100) ^ v83) | v153 & v152) + v151 + v124;
  LOBYTE(v151) = *((unsigned char *)&a18 + (BYTE4(a16) - 35 * ((235 * BYTE4(a16)) >> 13)) + 7) ^ 0x43;
  int v155 = *(unsigned __int8 *)(v87 - 116 + (BYTE5(a35) ^ v83) % 0x14u) ^ v83;
  uint64_t v211 = (unsigned __int16)v135 % 0x23u;
  LODWORD(v224) = (v155 * v155 * v155 * v155) | *((unsigned __int8 *)&a18 + v211 + 7) ^ 0x43;
  int v156 = *(unsigned __int8 *)(v87 - 116 + (a82 ^ v83) % 0x14u);
  HIDWORD(v210) = v224;
  int v157 = *((unsigned __int8 *)&a18
         + (v224 - 35 * ((235 * v224) >> 13))
         + 7);
  int v158 = *(unsigned __int8 *)(v87 - 106);
  unsigned int v159 = ((((*(unsigned __int8 *)(v94
                                + ((BYTE1(a39) ^ v83)
                                                  - 21
                                                  * ((((unsigned __int16)(135
                                                                                         * (BYTE1(a39) ^ v83)) >> 8)
                                                                     + ((((BYTE1(a39) ^ v83)
                                                                                         - ((unsigned __int16)(135 * (BYTE1(a39) ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v83) << (v157 & 7 ^ 3)) ^ ((*(unsigned char *)(v94 + ((BYTE1(a39) ^ v83) - 21 * ((((unsigned __int16)(135 * (BYTE1(a39) ^ v83)) >> 8) + ((((BYTE1(a39) ^ v83) - ((unsigned __int16)(135 * (BYTE1(a39) ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v83) >> (((v157 ^ 4) + 1) & 7))) & (v158 ^ 0xFFFFFFC3) | ((v157 ^ 0x43 | v156 ^ v83) & (*(unsigned __int8 *)(v87 - 109) ^ 4) | (v157 ^ 0x43) & (v156 ^ 4)) & (v158 ^ 4)) & 0x47 | (2 * *(unsigned __int8 *)(v94 + (v151 - 21 * ((((unsigned __int16)(135 * v151) >> 8) + (((v151 - ((unsigned __int16)(135 * v151) >> 8)) & 0xFE) >> 1)) >> 4)))) & 0xFFB8;
  unsigned int v160 = (v159 ^ 8) + (~(2 * v159) | 0xFFFFFFB3);
  LOBYTE(v124) = v160 + 39;
  LODWORD(v220) = (v160 + 39) ^ 0x26;
  LOBYTE(v158) = ((v160 + 39) ^ 0x26) - ((2 * (v160 + 39)) & 0xB0);
  uint64_t v215 = (unsigned __int16)(v135
                          - 21
                          * ((unsigned __int16)(((34329 * (unsigned __int16)v135) >> 16)
                                              + ((unsigned __int16)((v135
                                                                   - ((34329 * (unsigned __int16)v135) >> 16)) & 0xFFFE) >> 1)) >> 4));
  uint64_t v161 = v113 % 0x14;
  LOBYTE(v135) = (((*(unsigned char *)(v94
                             + ((a73 ^ v83)
                                               - 21
                                               * ((((unsigned __int16)(135
                                                                                      * (a73 ^ v83)) >> 8)
                                                                  + ((((a73 ^ v83)
                                                                                      - ((unsigned __int16)(135 * (a73 ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4))) & 0x60 | (2 * *(unsigned char *)(v87 - 116 + v161)) & 0x9F) ^ 0x28) & (((*(unsigned char *)(v87 - 116 + (BYTE3(a26) ^ v83) % 0x14u) & 0x91 | *(unsigned char *)(v94 + v215) & 0x6E) ^ v83) & (*(unsigned char *)(v87 - 116) ^ 0xDB) | (BYTE3(a26) ^ v83) & (*(unsigned char *)(v87 - 116) ^ v83)))
               + (BYTE1(a19) ^ 0x43);
  LOBYTE(v141) = *((unsigned char *)&a18
                 + ((a25 ^ v83) - 35 * ((235 * (a25 ^ v83)) >> 13))
                 + 7);
  BYTE1(a19) = v135 - ((2 * v135) & 0x87) + 67;
  LOBYTE(v135) = (BYTE5(a20) ^ 0x43)
               + ((((*((unsigned char *)&a18
                     + ((BYTE6(a35) ^ v83)
                                       - 35 * ((235 * (BYTE6(a35) ^ v83)) >> 13))
                     + 7) ^ (v160 + 39)) & 0xDD ^ 0x45) & (*((unsigned char *)&a18 + v213 + 7) ^ 0x41) | BYTE3(a35) & 0x22) ^ 0xDF)
               + 1;
  BYTE5(a20) = v135 - ((2 * v135) & 0x87) + 67;
  LOBYTE(v159) = *(unsigned char *)(v87 - 116 + (a48 ^ v83) % 0x14u);
  *(unsigned char *)(v87 - 99) = (*(unsigned char *)(v87 - 99) ^ v83)
                       + ~(2 * (((*(unsigned char *)(v87 - 99) ^ v83) + 34) & 0x25 ^ *(unsigned char *)(v87 - 99) & 1))
                       - 57;
  LOBYTE(v160) = *(unsigned char *)(v94
                          + ((BYTE3(a25) ^ v83)
                                            - 21
                                            * ((((unsigned __int16)(135
                                                                                   * (BYTE3(a25) ^ v83)) >> 8)
                                                               + ((((BYTE3(a25) ^ v83)
                                                                                   - ((unsigned __int16)(135 * (BYTE3(a25) ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v83;
  LOBYTE(v160) = (v160 | *(unsigned char *)(v87 - 116 + v161) ^ v83) & ((v158 + 88) ^ 0x58) | v160 & (*(unsigned char *)(v87 - 116 + v161) ^ v83);
  BYTE1(a26) ^= 2
              * ((v160 | ((171 * (BYTE4(a29) ^ v83)) >> 9)) & (BYTE1(a20) ^ 0xC3) | v160 & ((171 * (BYTE4(a29) ^ v83)) >> 9));
  LOBYTE(v111) = v222 ^ 0xFC;
  LODWORD(v216) = v222 ^ 0xFC;
  uint64_t v223 = (v222 ^ 0xFCu) % 0x14;
  unsigned int v162 = (*(unsigned char *)(v87 - 116 + v223) | BYTE4(a24)) & 0x50 | BYTE4(a24) & 0xD0 & *(unsigned char *)(v87 - 116 + v223) | (2 * *(unsigned __int8 *)(v87 - 116 + (BYTE1(a28) ^ v83) % 0x14u)) & 0x2E;
  *(unsigned char *)(v87 - 103) = ((v162 >> 1) ^ 4) - 2 * (((v162 >> 1) ^ 4) & 0x27 ^ (v162 >> 1) & 3) + 36;
  LOBYTE(a23) = (a23 ^ 0x43) - (BYTE3(a37) & 9) - ((2 * ((a23 ^ 0x43) - (BYTE3(a37) & 9))) & 0x87) + 67;
  HIDWORD(a12) = v138;
  unsigned int v163 = (BYTE3(a22) ^ 0x43)
       - (((a37 >> 1) & 0x6E ^ 3) & (*(unsigned __int8 *)(v87 - 108) ^ 0xFFFFFFDB) | (*(unsigned __int8 *)(v87 - 108) ^ v83) & v138);
  BYTE3(a22) = v163 - ((2 * v163) & 0x87) + 67;
  unsigned int v164 = (v154 ^ 0xFC7B2FFF) + 2 * v154 + 59035649;
  int v165 = *(unsigned __int8 *)(v94 + v164 % 0x15) ^ v83;
  int v166 = (v165 | a18) & (BYTE6(a21) ^ 0x43) | v165 & a18;
  int v167 = (v166 - ((2 * v166) & 8) - 662209532) ^ 4;
  uint64_t v212 = v113 % 0x15;
  LODWORD(v126) = (*(unsigned __int8 *)(v94 + v212) ^ v83) + 208;
  int v168 = (v167 * v167 * v167) & ((v126 | a72 ^ 0xFFFFFFDB) & 0xBD | v126 & (a72 ^ 0xFFFFFFDB));
  BYTE5(a21) = (BYTE5(a21) ^ 0x43) + (a71 ^ v83) - ((2 * ((BYTE5(a21) ^ 0x43) + (a71 ^ v83))) & 0x87) + 67;
  LOBYTE(v126) = (a67 ^ v83)
               - 21
               * ((((unsigned __int16)(135 * (a67 ^ v83)) >> 8)
                                  + ((((a67 ^ v83)
                                                      - ((unsigned __int16)(135 * (a67 ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4);
  int v169 = v168 - (v82 & (2 * v168)) + 36;
  int v170 = *((unsigned __int8 *)&a18 + v164 % 0x23 + 7);
  *(unsigned char *)(v87 - 101) = v169;
  unsigned int v171 = HIDWORD(a16)
       + 99
       * (*(unsigned __int8 *)(v87 - 116 + (HIBYTE(a24) ^ v83) % 0x14u) ^ v83)
       * ((*(unsigned __int8 *)(v94 + v126) | v170 ^ 0x41) & 0xFFFFFFD1 | (*(unsigned __int8 *)(v94 + v126) ^ v83) & (v170 ^ 0x43))
       * (*(unsigned char *)(v94
                   + ((BYTE4(a26) ^ v83)
                                     - 21
                                     * ((((unsigned __int16)(135 * (BYTE4(a26) ^ v83)) >> 8)
                                                        + ((((BYTE4(a26) ^ v83)
                                                                            - ((unsigned __int16)(135
                                                                                                * (BYTE4(a26) ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4))) & 0xFE ^ v83);
  LOBYTE(v137) = 43
               - ((((v141 ^ 0x43) * (v141 ^ 0x43)) & (*(unsigned char *)(v87 - 114) ^ v83))
                + v217)
               - ((v159 ^ v124 ^ 2) & (*(unsigned char *)(v87 - 114) ^ 0xDB));
  int v172 = *((unsigned char *)&a18 + v211 + 7) & 0xF5 | *((unsigned char *)&a18 + v213 + 7) & 0xA;
  int v173 = ((2 * v171) & 0x19C) + (v171 ^ 0x1FFD7FCE);
  unsigned int v174 = ((*(unsigned char *)(v87 - 116 + v224 % 0x14u) & 0xAE ^ 0x75) + 111) ^ 0xFFFFFF91;
  unsigned int v175 = (BYTE1(a21) ^ 0x43)
       - ((v174 * v174 * v174) & (v169 ^ 0xFFFFFFDB) | (v169 ^ v83) & (v171 / 0xFu));
  LODWORD(v213) = *(unsigned __int8 *)(v94
                                     + ((BYTE3(a23) ^ v83)
                                                       - 21
                                                       * ((((unsigned __int16)(135
                                                                                              * (BYTE3(a23) ^ v83)) >> 8)
                                                                          + ((((BYTE3(a23) ^ v83)
                                                                                              - ((unsigned __int16)(135 * (BYTE3(a23) ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4)));
  BYTE1(a21) = v175 - ((2 * v175) & 0x87) + 67;
  LOBYTE(v159) = *(unsigned char *)(v87 - 116 + v164 % 0x14) ^ v83;
  unsigned int v176 = v154
       + (*(unsigned __int8 *)(v87 - 116 + (a60 ^ v83) % 0x14u) ^ 0xFFFFFFDB)
       + ((171
         * (*(unsigned __int8 *)(v94
                               + (v159
                                                 - 21
                                                 * ((((unsigned __int16)(135 * v159) >> 8)
                                                                    + (((v159
                                                                                        - ((unsigned __int16)(135 * v159) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v83)) >> 9);
  LOBYTE(v164) = *(unsigned char *)(v94
                          + ((HIBYTE(a31) ^ v83)
                                            - 21
                                            * ((((unsigned __int16)(135
                                                                                   * (HIBYTE(a31) ^ v83)) >> 8)
                                                               + ((((HIBYTE(a31) ^ v83)
                                                                                   - ((unsigned __int16)(135 * (HIBYTE(a31) ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v83;
  LOBYTE(v164) = ((v164 | a65 ^ v83) & v137 | v164 & (a65 ^ v83)) & 0xFA | 1;
  LOBYTE(v135) = (*(unsigned char *)(v87 - 100) ^ v83)
               - ((v164 | (v158 + 88) ^ 0x58) & (*(unsigned char *)(v87 - 114) ^ v83) | v164 & ((v158 + 88) ^ 0x58));
  *(unsigned char *)(v87 - 100) = v135 - (v82 & (2 * v135)) + 36;
  int v177 = *(unsigned __int8 *)(v94
                            + ((a57 ^ v83)
                                              - 21
                                              * ((((unsigned __int16)(135 * (a57 ^ v83)) >> 8)
                                                                 + ((((a57 ^ v83)
                                                                                     - ((unsigned __int16)(135 * (a57 ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v83;
  unsigned int v178 = (v177 | BYTE3(a36) ^ v83) & 0x8D | v177 & (BYTE3(a36) ^ v83);
  LOBYTE(v164) = *(unsigned char *)(v87 - 116 + (HIBYTE(a26) ^ v83) % 0x14u) ^ v83;
  LOBYTE(v174) = *(unsigned char *)(v94
                          + ((a64 ^ v83)
                                            - 21
                                            * ((((unsigned __int16)(135 * (a64 ^ v83)) >> 8)
                                                               + ((((a64 ^ v83)
                                                                                   - ((unsigned __int16)(135 * (a64 ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v83;
  LOBYTE(v164) = (v174 | v164) & 6 | v164 & v174 & 7;
  int v179 = (v178 >> (-(char)v164 & 7)) ^ (v178 << v164);
  LOBYTE(v179) = (*(unsigned char *)(v94
                           + (unsigned __int16)(v179
                                              - 21
                                              * ((unsigned __int16)(((34329 * v179) >> 16)
                                                                  + ((unsigned __int16)((v179
                                                                                       - ((34329 * v179) >> 16)) & 0xFFFE) >> 1)) >> 4))) ^ 0xDB)
               + (*(unsigned char *)(v87 - 113) ^ v83)
               + 1;
  *(unsigned char *)(v87 - 113) = v179 - (v82 & (2 * v179)) + 36;
  HIDWORD(a16) = v172 ^ 0x43;
  unsigned int v180 = (v172 ^ 0xD77F7BB6) + 679511051 + ((2 * (v172 ^ 0x43)) & 0x1EA);
  unsigned int v181 = 205 * (*(unsigned __int8 *)(v87 - 116 + (HIBYTE(a30) ^ v83) % 0x14u) ^ v83);
  unsigned int v182 = ((*(unsigned __int8 *)(v87 - 104) ^ v83) >> ((v181 >> 10) & 7)) ^ ((*(unsigned __int8 *)(v87 - 104) ^ v83) << (-(char)(v181 >> 10) & 7)) ^ ((*((unsigned __int8 *)&a18 + v180 % 0x23 + 7) ^ 0xFFFFFFBC) / 5);
  HIBYTE(a23) = v182 - (v82 & (2 * v182)) + 36;
  a75 = (a75 ^ v83) + (BYTE5(a23) ^ v83) - (v82 & (2 * ((a75 ^ v83) + (BYTE5(a23) ^ v83)))) + 36;
  int v183 = *((unsigned char *)&a18 + v211 + 7) & 0x5D ^ 0xE3;
  unsigned int v184 = (a62 ^ v83) + ((52429 * v183 * v183) >> 18);
  a62 = v184 - (v82 & (2 * v184)) + 36;
  unsigned int v185 = (0x8Bu >> ((v173 + 2) & 7)) ^ (139 << ((6 - v173) & 7));
  int v186 = *(unsigned __int8 *)(v87 - 116 + v161) ^ v83;
  LOBYTE(v181) = v186 | v185;
  int v187 = v186 & v185;
  int v188 = (*(unsigned __int8 *)(v94 + v215) ^ 0x5DFE37DB) + 2 * (*(unsigned __int8 *)(v94 + v215) ^ v83) + 1;
  LODWORD(v218) = v181 & 0xC | v187 | (*(unsigned __int8 *)(v87 - 116 + v223) ^ v83) & (*(unsigned __int8 *)(v87 - 115) ^ 0xFFFFFFDB) | (v188 * v188 * v188) & (*(unsigned __int8 *)(v87 - 115) ^ v83);
  BYTE3(a20) = (v218 & (BYTE1(a36) & 0xE3 ^ 0x30 | 0x2C) | (BYTE1(a36) & 0xE3 ^ 0x30) & 0x30) / 3u
             + (BYTE3(a20) ^ 0x43)
             - ((2
               * ((v218 & (BYTE1(a36) & 0xE3 ^ 0x30 | 0x2C) | (BYTE1(a36) & 0xE3 ^ 0x30) & 0x30) / 3u
                + (BYTE3(a20) ^ 0x43))) & 0x87)
             + 67;
  int v189 = (a46 ^ v83)
       - ((((BYTE5(a27) ^ v83) & (HIBYTE(a19) ^ 0xFFFFFFC3) | (HIBYTE(a19) ^ 0x3C) & a18) & (HIDWORD(v216) ^ 0xFFFFFFDF) | (v180 / 3) & (HIDWORD(v216) ^ 0x20)) & ((a65 >> 1) | 0x4D) | 0x12);
  a46 = v189 - (v82 & (2 * v189)) + 36;
  BYTE4(a22) = -31;
  LOBYTE(v137) = v176 + 1;
  int v190 = (v176 + 1);
  uint64_t v191 = (v176
                         + 1
                         - 21
                         * ((((unsigned __int16)(135 * v190) >> 8)
                                            + (((v176 + 1 - ((unsigned __int16)(135 * v190) >> 8)) & 0xFE) >> 1)) >> 4));
  LOBYTE(v176) = *((unsigned char *)&a18
                 + ((a51 ^ v83) - 35 * ((235 * (a51 ^ v83)) >> 13))
                 + 7) ^ ((BYTE5(a28) ^ v83) * (BYTE5(a28) ^ v83)) ^ 0x43;
  unsigned int v192 = ((*(unsigned char *)(v94 + v191) & 0xA0 | *(unsigned char *)(v87 - 116 + (HIBYTE(a38) ^ v83) % 0x14u) & 0x5Eu) >> 1) ^ 0x12;
  LOBYTE(v192) = ((v176 | v192) & (*(unsigned char *)(v87 - 99) ^ v83) | v176 & v192) + (*(unsigned char *)(v87 - 101) ^ v83);
  *(unsigned char *)(v87 - 101) = v192 - (v82 & (2 * v192)) + 36;
  BYTE1(a35) = *(unsigned char *)(v94 + v212);
  LOBYTE(v176) = *((unsigned char *)&a18
                 + ((BYTE3(a25) ^ v83)
                                   - 35 * ((235 * (BYTE3(a25) ^ v83)) >> 13))
                 + 7);
  LOBYTE(v176) = (v176 ^ 0xB8) + 5 + ((2 * (v176 ^ 0x43)) & 0xF7);
  unsigned int v193 = *((unsigned __int8 *)&a18 + (v173 - 536707022) % 0x23u + 7) ^ 0x43;
  int v194 = (v193 >> ((v176 * v176 * v176) & 7)) ^ (v193 << (-(char)(v176 * v176 * v176) & 7));
  LOBYTE(v194) = (*(unsigned char *)(v87 - 109) ^ v83) - v194 * v194;
  LOBYTE(v176) = (a77 ^ v83)
               - 21
               * ((((unsigned __int16)(135 * (a77 ^ v83)) >> 8)
                                  + ((((a77 ^ v83)
                                                      - ((unsigned __int16)(135 * (a77 ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4);
  LOBYTE(v181) = (a72 ^ 0xDB) + (HIBYTE(a19) ^ 0x43);
  LOBYTE(v113) = v194 - (v82 & (2 * v194)) + 36;
  int v195 = *(unsigned __int8 *)(v87 - 116 + v223);
  *(unsigned char *)(v87 - 109) = v113;
  LOBYTE(v174) = v181
               + (*(unsigned char *)(v94 + v176) ^ v83)
               * (*(unsigned char *)(v94 + v176) ^ v83)
               * (*(unsigned char *)(v94 + v176) ^ v83);
  int v196 = *(_DWORD *)(v221 + 28) ^ a13;
  LOBYTE(v176) = (3 * (v213 ^ v83) - 2 * ((3 * (v213 ^ v83)) & 3) + 3) ^ BYTE4(v224);
  unsigned int v197 = v143 + (v195 ^ 0xFFFFFFDB);
  HIBYTE(a19) = v174 + 1 - ((2 * (v174 + 1)) & 0x87) + 67;
  LOBYTE(v195) = *((unsigned char *)&a18
                 + ((a36 ^ v83) - 35 * ((235 * (a36 ^ v83)) >> 13))
                 + 7);
  *(unsigned char *)(v87 - 100) = (((((2 * v195) ^ 7) & 0x82 | (16 * ((v195 & 8) != 0))) ^ ((2 * v195) ^ 7) & 0x13)
                         - (((2 * v195) ^ 7) & 4)
                         - 28) ^ 0x41;
  int v198 = v224 ^ (*(unsigned __int8 *)(v94
                                    + (v111
                                                      - 21
                                                      * ((((unsigned __int16)(135 * v216) >> 8)
                                                                         + (((v111
                                                                                             - ((unsigned __int16)(135 * v216) >> 8)) & 0xFE) >> 1)) >> 4))) >> 1) ^ 0x12;
  LOBYTE(v174) = *(unsigned char *)(v94 + v191) ^ v83;
  LOBYTE(v175) = (*(unsigned char *)(v87 - 116 + (a74 ^ v83) % 0x14u) ^ 0xDB)
               + (v113 ^ v83)
               + ((v82 ^ (2
                        * *(unsigned char *)(v94
                                   + ((BYTE2(a33) ^ v83)
                                                     - 21
                                                     * ((((unsigned __int16)(135
                                                                                            * (BYTE2(a33) ^ v83)) >> 8)
                                                                        + ((((BYTE2(a33) ^ v83)
                                                                                            - ((unsigned __int16)(135 * (BYTE2(a33) ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4))))) & (BYTE2(a21) ^ 0xBC) | (*(unsigned char *)(v94 + (v174 - 21 * ((((unsigned __int16)(135 * v174) >> 8) + (((v174 - ((unsigned __int16)(135 * v174) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v83) & (BYTE2(a21) ^ 0x43))
               + 1;
  *(unsigned char *)(v87 - 109) = v175 - (v82 & (2 * v175)) + 36;
  *(unsigned char *)(v87 - 110) = *(unsigned char *)(v87 - 116 + (BYTE1(a38) ^ v83) % 0x14u);
  int v199 = *((unsigned __int8 *)&a18 + (v137 - 35 * ((235 * v190) >> 13)) + 7);
  uint64_t v200 = v197 + 1;
  unsigned int v201 = 205
       * ((v199 & 0x56 ^ 0x42) & (BYTE2(a27) ^ 4) | (-25
                                                   * (*(unsigned __int8 *)(v94
                                                                         + ((BYTE3(a30) ^ v83)
                                                                                           - 21
                                                                                           * ((((unsigned __int16)(135 * (BYTE3(a30) ^ v83)) >> 8) + ((((BYTE3(a30) ^ v83) - ((unsigned __int16)(135 * (BYTE3(a30) ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v83)) & 0xA9 | (BYTE2(a27) ^ 4 | v199 ^ 2) & 0x16);
  uint64_t v202 = v200 % 0x14u;
  int v203 = *(unsigned __int8 *)(v87 - 116 + v202) ^ v83;
  uint64_t v204 = (v203 * v203);
  LOBYTE(v175) = (*(unsigned char *)(v87 - 116 + v180 % 0x14) ^ ((*((unsigned char *)&a18
                                                          + ((BYTE1(a32) ^ v83)
                                                                            - 35
                                                                            * ((235
                                                                              * (BYTE1(a32) ^ v83)) >> 13))
                                                          + 7) ^ 0x43)
                                                       + (*((unsigned char *)&a18
                                                          + ((BYTE1(a25) ^ v83)
                                                                            - 35
                                                                            * ((235
                                                                              * (BYTE1(a25) ^ v83)) >> 13))
                                                          + 7) ^ 0x43)) ^ v83) & (v204 & 0x1B | *(unsigned char *)(v94 + ((a73 ^ v83) - 21 * ((((unsigned __int16)(135 * (a73 ^ v83)) >> 8) + ((((a73 ^ v83) - ((unsigned __int16)(135 * (a73 ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4))) & 0xA | a38 & 0x11 | v204 & ((*(unsigned char *)(v94 + ((a73 ^ v83) - 21 * ((((unsigned __int16)(135 * (a73 ^ v83)) >> 8) + ((((a73 ^ v83) - ((unsigned __int16)(135 * (a73 ^ v83)) >> 8)) & 0xFE) >> 1)) >> 4))) & 0x2E | a38 & 0xD1) ^ v83));
  *(unsigned char *)(v87 - 104) = v175 - (v82 & (2 * v175)) + 36;
  int v205 = *(unsigned __int8 *)(v94
                            + (v198
                                              - 21
                                              * ((((unsigned __int16)(135 * v198) >> 8)
                                                                 + (((v198
                                                                                     - ((unsigned __int16)(135 * v198) >> 8)) & 0xFE) >> 1)) >> 4)));
  uint64_t v206 = ((2 * (v205 ^ v83)) & 0xFFFFFFEF) + (v205 ^ 0x9E9B7DD3);
  uint64_t v207 = *(unsigned __int8 *)(v87 - 107) ^ 0xFFFFFFDB;
  LOBYTE(a22) = (2 * (*(unsigned char *)(v87 - 116 + v202) ^ v83) * (HIBYTE(a23) ^ v83)
               - (((v176 << ((v206 + 1) & 7)) ^ (v176 >> ((7 - v206) & 7))) & (v82 - BYTE4(v220)))) ^ a22;
  uint64_t v208 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 8 * (((v196 != 0xD6687C8) | (2 * (v196 != 0xD6687C8))) ^ HIDWORD(a14)));
  return v208(v208, v200, v206, v207, v202, (49 * (v201 >> 10)) >> 10, 4294967259, v204, a2, v210, v211, v212, v213, v215, v216, v218, v220, v221, a12,
           a13,
           a14,
           v223,
           a16,
           v224,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

void sub_1D0B06ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  (*(void (**)(uint64_t, uint64_t))(v25 + 8 * (v24 ^ (v24 + 527))))(a23, 2965982036);
  _DWORD *v23 = (*(uint64_t (**)(void))(v25 + 8 * (v24 + 726209225)))();
  JUMPOUT(0x1D0B06B44);
}

uint64_t sub_1D0B06B74()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((23 * (v0 < (((v2 - 413) | 0x229) ^ 0x2EDu))) ^ v2)))();
}

uint64_t sub_1D0B06C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  *v12 += a10;
  return (*(uint64_t (**)(void))(v11 + 8 * (((*(unsigned char *)(v13 - 0x4005A18C73DCADE4) == 30) * (v10 + 1007)) ^ v10)))();
}

uint64_t sub_1D0B06C5C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((a6 + 1 == v8 + 40) * a2) ^ v6)))();
}

uint64_t sub_1D0B06D18@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  *(unsigned char *)(v5 + v4 + v2 + 1058 - 1239007443) ^= *(unsigned char *)(*(void *)(v3 + 8 * (v2 + 136))
                                                           + v4
                                                           + v2
                                                           + 1058
                                                           - 1239007443);
  return (*(uint64_t (**)(void))(a1 + 8 * ((56 * (v4 + 1 < (v2 ^ a2))) ^ (v2 + 1412))))();
}

uint64_t sub_1D0B06D7C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((a2 - 808 + ((a2 - 734199067) & 0x2BC2FDED) - 1821) * (v2 < 0x20)) ^ (a2 - 57))))();
}

uint64_t sub_1D0B06DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(a6 + v8 - 0x17B29E135411194ALL) = v10;
  return (*(uint64_t (**)(void))(v9 + 8 * ((((v6 & 0xFFFFFFFFFFFFFFF8) == 8) * ((v7 - 134) ^ 0x19B)) ^ v7)))();
}

uint64_t sub_1D0B06E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v21 = 839339309 * ((((2 * (v20 - 144)) | 0x2BBC4D10) - (v20 - 144) + 1780603256) ^ 0x293F3EE9);
  v16[378] = &STACK[0x7AFA2E4D31C593EA];
  v16[375] = &STACK[0x7CADFE09654192F3];
  *(_DWORD *)(v20 - 120) = v21 ^ 0x1892F8D0;
  *(_DWORD *)(v20 - 144) = v21 + v18 + 519;
  v16[376] = (char *)*(&off_1F26D60E0 + (v18 ^ 0x3B)) - 12;
  (*(void (**)(uint64_t))(v17 + 8 * (v18 ^ 0x5B3)))(v20 - 144);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (((*(_DWORD *)(v20 - 140) == v19 + 33 * (v18 ^ 0x48) - 66) * (v18 ^ 0x474)) ^ v18)))(a16);
}

uint64_t sub_1D0B06F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,int a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,unsigned int a44)
{
  uint64_t v46 = (74 * (v45 ^ 0x5AA) - 159) & a44;
  *(&a35 + (v46 ^ 0x36)) = 120;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))(v44 + 8 * ((1296 * ((v46 ^ 0x36) > 0x37)) ^ (v45 - 1432))))(a1, a2, a3, a4, a5, a6, a7, 2142083465, a9, a10, &a32);
}

uint64_t sub_1D0B06FAC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,char a28)
{
  *(&a28 + a1 - 399510284) = -8;
  return (*(uint64_t (**)(void))(v29 + 8 * ((1048 * ((unint64_t)(a1 - 399510283) < 0x40)) ^ (v28 - 1217))))();
}

uint64_t sub_1D0B06FF4(__n128 a1)
{
  *uint64_t v3 = a1;
  v3[1] = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * v2) ^ v1)))();
}

uint64_t sub_1D0B07018()
{
  uint64_t v5 = v0 - 1;
  *(unsigned char *)(v4 + v5) = (v1 + ((v2 - 38) | 0x81) + 81) * ((v1 - 49) ^ 0xBA);
  return (*(uint64_t (**)(void))(v3 + 8 * (((v5 == 0) | ((v5 == 0) << 6)) ^ v2)))();
}

uint64_t sub_1D0B0705C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  *(_DWORD *)(v35 - 136) = (v34 - 483687773) ^ (1334103649
                                              * (((v35 - 144) & 0x724A5D3 | ~((v35 - 144) | 0x724A5D3)) ^ 0x90739282));
  STACK[0xD60] = a14;
  (*(void (**)(uint64_t))(a2 + 8 * (v34 | 0x49A)))(v35 - 144);
  int v36 = v34 + 891;
  int v37 = 1332649919 * ((v35 + 1301850112 - 2 * ((v35 - 144) & 0x4D98A890)) ^ 0x70EB2C62);
  STACK[0xD68] = (unint64_t)*(&off_1F26D60E0 + (v34 ^ 0x125)) - 4;
  STACK[0xD78] = a14;
  *(_DWORD *)(v35 - 128) = v34 + 891 + v37;
  *(_DWORD *)(v35 - 144) = v37 + 2140997303;
  uint64_t v38 = 8 * (v34 + 1248);
  (*(void (**)(uint64_t))(a34 + v38))(v35 - 144);
  int v39 = 1332649919 * ((((v35 - 144) | 0x1EEB68D2) - (v35 - 144) + ((v35 - 144) & 0xE1149728)) ^ 0x2398EC20);
  STACK[0xD68] = a20;
  STACK[0xD78] = a14;
  *(_DWORD *)(v35 - 144) = v39 + 2140997259;
  *(_DWORD *)(v35 - 128) = v36 + v39;
  uint64_t v40 = (*(uint64_t (**)(uint64_t))(a34 + v38))(v35 - 144);
  return sub_1D0B071F8(v40, a34);
}

uint64_t sub_1D0B071F8(uint64_t a1, uint64_t a2)
{
  STACK[0xC70] = STACK[0xC18];
  LODWORD(STACK[0xC78]) = STACK[0xC20];
  *(void *)(v4 + 2956) = *(void *)(v4 + 2868);
  LODWORD(STACK[0xC84]) = STACK[0xC2C];
  *(_OWORD *)(v4 + 2968) = *(_OWORD *)(v4 + 2880);
  return (*(uint64_t (**)(void))(a2 + 8 * (((((v3 ^ v2) - 1) & 1) * v2) ^ v3 ^ v2)))();
}

void sub_1D0B0726C()
{
}

void sub_1D0B072C8(uint64_t a1)
{
  int v1 = 515566439 * (((a1 | 0xB7040A71) - a1 + (a1 & 0x48FBF58E)) ^ 0xDBD00DD6);
  __asm { BRAA            X11, X17 }
}

void sub_1D0B07394()
{
}

uint64_t sub_1D0B073B8()
{
  char v6 = (((2 * *(unsigned char *)(v2 - 0x55C89A4359EC5AEBLL)) ^ 0x3E)
      + (*(unsigned char *)(v2 - 0x55C89A4359EC5AEBLL) ^ 0xAE ^ (v3 + 56))
      - 2) ^ (101 * ((~&v5 & 0xEB | &v5 & 0x14) ^ 0x2B));
  unsigned int v7 = (v3 + 1074710759) ^ (1580882533
                          * ((~&v5 & 0x7552A4EB | &v5 & 0x8AAD5B14) ^ 0xECCA172B));
  uint64_t result = (*(uint64_t (**)(int *))(v1 + 8 * (v3 ^ 0x438)))(&v5);
  *uint64_t v0 = v5;
  return result;
}

void sub_1D0B074A0()
{
}

void sub_1D0B07500(uint64_t a1, int a2, int a3)
{
  LODWORD(STACK[0x31C]) = v4;
  *(void *)(v7 - 248) = v6 - 7;
  *(void *)(v7 - 240) = v3 - 7;
  LODWORD(STACK[0x310]) = v4 & 0xFFFFFFF8;
  *(_DWORD *)(v7 - 252) = -(v4 & 0xFFFFFFF8);
  *(_DWORD *)(v7 - 256) = a3 + a2 + v5 + 202;
  JUMPOUT(0x1D0B0756CLL);
}

void sub_1D0B07670()
{
}

void sub_1D0B0767C()
{
}

uint64_t sub_1D0B07690(uint64_t a1, unsigned int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((210 * (v2 < ((a2 - 1087) | 0x508) - 1305)) ^ a2)))();
}

uint64_t sub_1D0B076C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((212
                                * (((a4 + (v6 ^ 0x412u) + a6 - 1337 < 0xFFFFFFF0) ^ (v6 + 62)) & 1)) ^ v6)))();
}

uint64_t sub_1D0B07708(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  unsigned int v19 = (v9 ^ v17) & (v11 ^ 0xB0ACE695) | (((a7 - 1127) | 0x473) ^ (v17 + 935) ^ v11) & (a1 ^ v17);
  int v20 = *(_DWORD *)(v10 + 4 * (*(unsigned char *)(a3 + v8 + v18) - 27)) ^ v16;
  unsigned int v21 = ((a8 ^ v17)
       + v14
       + v19
       + *(_DWORD *)(a4 + 4 * (v8 + v18))
       + v20
       + v17
       - (v13 & (2 * ((a8 ^ v17) + v14 + v19 + *(_DWORD *)(a4 + 4 * (v8 + v18)) + v20)))) ^ v17;
  int v22 = ((v21 << (*(unsigned char *)(a5 + v8 + v18) - 2)) | (v21 >> (2 - *(unsigned char *)(a5 + v8 + v18)))) + (a1 ^ v17);
  return (*(uint64_t (**)(void))(v12
                                           + 8 * (((4 * (v8 + 1 == v15 + 32)) | (16 * (v8 + 1 == v15 + 32))) ^ a7)))(v22 + v17 - (v13 & (2 * v22)));
}

uint64_t sub_1D0B077E8()
{
  unsigned int v5 = v0 + 880;
  unsigned __int8 v6 = ((v1 + v0) ^ 0xDA) - v3;
  if (v3 > ((v0 + 420) | 0xB0u) - 744) {
    unsigned __int8 v6 = 0;
  }
  uint64_t v7 = (*(uint64_t (**)(void, uint64_t))(v4 + 8 * (v0 + 1390)))(v3 + v6 + 56, 1606880405);
  uint64_t *v2 = v7;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                                         + 8 * ((50 * (v7 == 0)) ^ v5)))(v7, v8, v9, v10, v11, v12);
}

uint64_t sub_1D0B07870(uint64_t result)
{
  int v1 = *(_DWORD *)result + 1543459711 * ((result + 1369941851 - 2 * (result & 0x51A7A75B)) ^ 0x1D25A49F);
  uint64_t v2 = *(void *)(result + 8);
  *(unsigned char *)(v2 - 0x585DBEA5C7224C43) = HIBYTE(v1) ^ 0xFC;
  *(unsigned char *)(v2 - 0x585DBEA5C7224C42) = BYTE2(v1) ^ 0xFA;
  *(unsigned char *)(v2 - 0x585DBEA5C7224C41) = BYTE1(v1) ^ 0xDF;
  *(unsigned char *)(v2 - 0x585DBEA5C7224C40) = v1 ^ 0xDE;
  return result;
}

uint64_t sub_1D0B07920(uint64_t a1)
{
  uint64_t v107 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(_DWORD **)(a1 + 16);
  unsigned int v91 = (*v2 ^ 0xB5F795DB) + 1610612406 + ((2 * *v2) & 0x6BEF2BB6);
  unsigned int v92 = (v2[1] ^ 0xB5F795DB) + 1610612406 + ((2 * v2[1]) & 0x6BEF2BB6);
  unsigned int v93 = (v2[2] ^ 0xB5F795DB) + 1610612406 + ((2 * v2[2]) & 0x6BEF2BB6);
  unsigned int v94 = (v2[3] ^ 0xB5F795DB) + 1610612406 + ((2 * v2[3]) & 0x6BEF2BB6);
  unsigned int v95 = (v2[4] ^ 0xB5F795DB) + 1610612406 + ((2 * v2[4]) & 0x6BEF2BB6);
  unsigned int v96 = (v2[5] ^ 0xB5F795DB) + 1610612406 + ((2 * v2[5]) & 0x6BEF2BB6);
  unsigned int v97 = (v2[6] ^ 0xB5F795DB) + 1610612406 + ((2 * v2[6]) & 0x6BEF2BB6);
  unsigned int v98 = (v2[7] ^ 0xB5F795DB) + 1610612406 + ((2 * v2[7]) & 0x6BEF2BB6);
  unsigned int v99 = (v2[8] ^ 0xB5F795DB) + 1610612406 + ((2 * v2[8]) & 0x6BEF2BB6);
  unsigned int v100 = (v2[9] ^ 0xB5F795DB) + 1610612406 + ((2 * v2[9]) & 0x6BEF2BB6);
  unsigned int v101 = (v2[10] ^ 0xB5F795DB) + 1610612406 + ((2 * v2[10]) & 0x6BEF2BB6);
  unsigned int v102 = (v2[11] ^ 0xB5F795DB) + 1610612406 + ((2 * v2[11]) & 0x6BEF2BB6);
  unsigned int v103 = (v2[12] ^ 0xB5F795DB) + 1610612406 + ((2 * v2[12]) & 0x6BEF2BB6);
  unsigned int v104 = (v2[13] ^ 0xB5F795DB) + 1610612406 + ((2 * v2[13]) & 0x6BEF2BB6);
  unsigned int v105 = (v2[14] ^ 0xB5F795DB) + 1610612406 + ((2 * v2[14]) & 0x6BEF2BB6);
  unsigned int v106 = (v2[15] ^ 0xB5F795DB) + 1610612406 + ((2 * v2[15]) & 0x6BEF2BB6);
  uint64_t v90 = v1;
  int v3 = *(_DWORD *)(v1 - 0x616C614F3D9D112CLL);
  int v4 = *(_DWORD *)(v1 - 0x616C614F3D9D1128);
  int v5 = *(_DWORD *)(v1 - 0x616C614F3D9D1124);
  HIDWORD(v6) = *(_DWORD *)(v1 - 0x616C614F3D9D1130) + v91 - 1049423897 + (v4 & v3 | v5 & ~v3);
  LODWORD(v6) = HIDWORD(v6);
  int v7 = (v6 >> 25) + v3 - ((2 * ((v6 >> 25) + v3)) & 0xBC721C16) + 1580797451;
  HIDWORD(v6) = v5 + v92 - 758111547 + (v3 & (v7 ^ 0x5E390E0B) | v4 & ~(v7 ^ 0x5E390E0B));
  LODWORD(v6) = HIDWORD(v6);
  int v8 = (v6 >> 20) + (v7 ^ 0x5E390E0B) - 815764662 + (~(2 * ((v6 >> 20) + (v7 ^ 0x5E390E0B))) | 0x613F296B) + 1;
  HIDWORD(v6) = v4 + v93 + 237558858 + ((v8 ^ 0xCF606B4A) & (v7 ^ (v3 - ((2 * v3) & 0xBC721C16) + 1580797451)) ^ v3);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 15) + (v8 ^ 0xCF606B4A) - ((2 * ((v6 >> 15) + (v8 ^ 0xCF606B4A))) & 0x96A2E74C) + 1263629222;
  int v9 = v1 ^ 0x4B5173A6;
  HIDWORD(v6) = v3
              + v94
              - 1413072291
              + ((((v1 ^ 0x4B5173A6) & (v7 ^ 0x91596541 ^ v8))
                - ((2 * ((v1 ^ 0x4B5173A6) & (v7 ^ 0x91596541 ^ v8))) & 0xBC721C16)
                + 1580797451) ^ v7);
  LODWORD(v6) = HIDWORD(v6);
  int v10 = (v6 >> 10) + (v1 ^ 0x4B5173A6) - ((2 * ((v6 >> 10) + (v1 ^ 0x4B5173A6))) & 0x628C583E) + 826682399;
  HIDWORD(v6) = v95
              + (v7 ^ 0x5E390E0B)
              - 544965858
              + ((((v10 ^ 0x31462C1F) & (v8 ^ 0x843118EC ^ v1))
                - ((2 * ((v10 ^ 0x31462C1F) & (v8 ^ 0x843118EC ^ v1))) & 0x9EC0D694)
                - 815764662) ^ v8);
  LODWORD(v6) = HIDWORD(v6);
  int v11 = (v6 >> 25) + (v10 ^ 0x31462C1F) - ((2 * ((v6 >> 25) + (v10 ^ 0x31462C1F))) & 0x4E792B5A) - 1489201747;
  LODWORD(v2) = v11 ^ 0xA73C95AD;
  HIDWORD(v6) = v96
              + (v8 ^ 0xCF606B4A)
              + 831533465
              + ((((v11 ^ 0xA73C95AD) & (v1 ^ 0x7A175FB9 ^ v10))
                - ((2 * ((v11 ^ 0xA73C95AD) & (v1 ^ 0x7A175FB9 ^ v10))) & 0x96A2E74C)
                + 1263629222) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 20) + (v11 ^ 0xA73C95AD) - ((2 * ((v6 >> 20) + (v11 ^ 0xA73C95AD))) & 0x80203626) - 1072686317;
  int v12 = v1 ^ 0xC0101B13;
  HIDWORD(v6) = v97
              + v9
              - 1841778302
              + ((((v1 ^ 0xC0101B13) & (v10 ^ 0x967AB9B2 ^ v11))
                - ((2 * ((v1 ^ 0xC0101B13) & (v10 ^ 0x967AB9B2 ^ v11))) & 0x628C583E)
                + 826682399) ^ v10);
  LODWORD(v6) = HIDWORD(v6);
  int v13 = (v6 >> 15) + (v1 ^ 0xC0101B13) - ((2 * ((v6 >> 15) + (v1 ^ 0xC0101B13))) & 0x5F3B3EC4) + 798859106;
  HIDWORD(v6) = v98
              + (v10 ^ 0x31462C1F)
              - 414252944
              + ((((v13 ^ 0x2F9D9F62) & (v11 ^ 0x672C8EBE ^ v1))
                - ((2 * ((v13 ^ 0x2F9D9F62) & (v11 ^ 0x672C8EBE ^ v1))) & 0x4E792B5A)
                - 1489201747) ^ v11);
  LODWORD(v6) = HIDWORD(v6);
  int v14 = (v6 >> 10) + (v13 ^ 0x2F9D9F62) - ((2 * ((v6 >> 10) + (v13 ^ 0x2F9D9F62))) & 0x672C79CA) + 865484005;
  int v15 = v14 ^ 0x33963CE5;
  HIDWORD(v6) = v99
              + v2
              + 1401488455
              + ((((v14 ^ 0x33963CE5) & (v1 ^ 0xEF8D8471 ^ v13))
                - ((2 * ((v14 ^ 0x33963CE5) & (v1 ^ 0xEF8D8471 ^ v13))) & 0x80203626)
                - 1072686317) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 25) + (v14 ^ 0x33963CE5) - ((2 * ((v6 >> 25) + (v14 ^ 0x33963CE5))) & 0x316CFFF6) + 414613499;
  int v16 = v1 ^ 0x18B67FFB;
  HIDWORD(v6) = v100
              + v12
              + 1968005918
              + ((((v1 ^ 0x18B67FFB) & (v13 ^ 0x1C0BA387 ^ v14))
                - ((2 * ((v1 ^ 0x18B67FFB) & (v13 ^ 0x1C0BA387 ^ v14))) & 0x5F3B3EC4)
                + 798859106) ^ v13);
  LODWORD(v6) = HIDWORD(v6);
  int v17 = (v6 >> 20) + (v1 ^ 0x18B67FFB) - ((2 * ((v6 >> 20) + (v1 ^ 0x18B67FFB))) & 0x52ECD734) + 695626650;
  int v18 = v17 ^ 0x29766B9A;
  HIDWORD(v6) = v101
              + (v13 ^ 0x2F9D9F62)
              - 368589024
              + ((((v17 ^ 0x29766B9A) & (v14 ^ 0x2B20431E ^ v1))
                - ((2 * ((v17 ^ 0x29766B9A) & (v14 ^ 0x2B20431E ^ v1))) & 0x672C79CA)
                + 865484005) ^ v14);
  LODWORD(v6) = HIDWORD(v6);
  int v19 = (v6 >> 15) + (v17 ^ 0x29766B9A) - ((2 * ((v6 >> 15) + (v17 ^ 0x29766B9A))) & 0x8A947AF6) - 984990341;
  unsigned int v20 = v19 ^ 0xC54A3D7B;
  HIDWORD(v6) = v102
              + v15
              + 1936016173
              + ((((v19 ^ 0xC54A3D7B) & (v1 ^ 0x31C01461 ^ v17))
                - ((2 * ((v19 ^ 0xC54A3D7B) & (v1 ^ 0x31C01461 ^ v17))) & 0x316CFFF6)
                + 414613499) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 10) + (v19 ^ 0xC54A3D7B) - ((2 * ((v6 >> 10) + (v19 ^ 0xC54A3D7B))) & 0x94BE7402) - 899728895;
  int v21 = v1 ^ 0xCA5F3A01;
  HIDWORD(v6) = v103
              + v16
              + 1436056721
              + ((((v1 ^ 0xCA5F3A01) & (v17 ^ 0xEC3C56E1 ^ v19))
                - ((2 * ((v1 ^ 0xCA5F3A01) & (v17 ^ 0xEC3C56E1 ^ v19))) & 0x52ECD734)
                + 695626650) ^ v17);
  LODWORD(v6) = HIDWORD(v6);
  int v22 = (v6 >> 25) + (v1 ^ 0xCA5F3A01) - ((2 * ((v6 >> 25) + (v1 ^ 0xCA5F3A01))) & 0xBF7426E6) + 1606030195;
  HIDWORD(v6) = v104
              + v18
              - 408888062
              + ((((v22 ^ 0x5FBA1373) & (v19 ^ 0xF15077A ^ v1))
                - ((2 * ((v22 ^ 0x5FBA1373) & (v19 ^ 0xF15077A ^ v1))) & 0x8A947AF6)
                - 984990341) ^ v19);
  LODWORD(v6) = HIDWORD(v6);
  int v23 = (v6 >> 20) + (v22 ^ 0x5FBA1373) - ((2 * ((v6 >> 20) + (v22 ^ 0x5FBA1373))) & 0xE76C53A8) + 1941318100;
  int v24 = v23 ^ 0x73B629D4;
  HIDWORD(v6) = v105
              + v20
              - 1870549251
              + ((((v23 ^ 0x73B629D4) & (v1 ^ 0x95E52972 ^ v22))
                - ((2 * ((v23 ^ 0x73B629D4) & (v1 ^ 0x95E52972 ^ v22))) & 0x94BE7402)
                - 899728895) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 15) + (v23 ^ 0x73B629D4) - ((2 * ((v6 >> 15) + (v23 ^ 0x73B629D4))) & 0x87F9D1FC) - 1006835458;
  int v25 = v1 ^ 0xC3FCE8FE;
  HIDWORD(v6) = v106
              + v21
              + 867988368
              + ((((v1 ^ 0xC3FCE8FE) & (v22 ^ 0x2C0C3AA7 ^ v23))
                - ((2 * ((v1 ^ 0xC3FCE8FE) & (v22 ^ 0x2C0C3AA7 ^ v23))) & 0xBF7426E6)
                + 1606030195) ^ v22);
  LODWORD(v6) = HIDWORD(v6);
  int v26 = (v6 >> 10) + (v1 ^ 0xC3FCE8FE) - ((2 * ((v6 >> 10) + (v1 ^ 0xC3FCE8FE))) & 0x35A84716) - 1697373301;
  HIDWORD(v6) = v92
              + (v22 ^ 0x5FBA1373)
              - 534343471
              + ((((v1 ^ 0x5928CB75 ^ v26) & v24) - ((2 * ((v1 ^ 0x5928CB75 ^ v26) & v24)) & 0x87F9D1FC) - 1006835458) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = v26 ^ 0x9AD4238B;
  LODWORD(v1) = (v6 >> 27) + (v26 ^ 0x9AD4238B) - ((2 * ((v6 >> 27) + (v26 ^ 0x9AD4238B))) & 0xF737430) + 129612312;
  HIDWORD(v6) = v97
              + v24
              - 1438048593
              + ((((v26 ^ 0x9D6D9993 ^ v1) & v25) - ((2 * ((v26 ^ 0x9D6D9993 ^ v1) & v25)) & 0x35A84716) - 1697373301) ^ v26);
  LODWORD(v6) = HIDWORD(v6);
  int v27 = v1 ^ 0x7B9BA18;
  int v28 = (v6 >> 23) + (v1 ^ 0x7B9BA18) - ((2 * ((v6 >> 23) + (v1 ^ 0x7B9BA18))) & 0x1439B772) - 1977820231;
  HIDWORD(v6) = v102
              + v25
              + 275170752
              + ((((v1 ^ 0x8DA561A1 ^ v28) & v2)
                - ((2 * ((v1 ^ 0x8DA561A1 ^ v28) & v2)) & 0xF737430)
                + 129612312) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v29 = v28 ^ 0x8A1CDBB9;
  LODWORD(v1) = (v6 >> 18) + (v28 ^ 0x8A1CDBB9) - ((2 * ((v6 >> 18) + (v28 ^ 0x8A1CDBB9))) & 0xDC1879A6) + 1846295763;
  HIDWORD(v6) = v91
              + v2
              - 742444263
              + ((((v28 ^ 0xE410E76A ^ v1) & v27) - ((2 * ((v28 ^ 0xE410E76A ^ v1) & v27)) & 0x1439B772) - 1977820231) ^ v28);
  LODWORD(v6) = HIDWORD(v6);
  int v30 = v1 ^ 0x6E0C3CD3;
  LODWORD(v2) = (v6 >> 12) + (v1 ^ 0x6E0C3CD3) - ((2 * ((v6 >> 12) + (v1 ^ 0x6E0C3CD3))) & 0x7537AA64) - 1164192462;
  HIDWORD(v6) = v96
              + v27
              - 1070105652
              + ((((v1 ^ 0xD497E9E1 ^ v2) & v29)
                - ((2 * ((v1 ^ 0xD497E9E1 ^ v2) & v29)) & 0xDC1879A6)
                + 1846295763) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v31 = v2 ^ 0xBA9BD532;
  LODWORD(v1) = (v6 >> 27)
              + (v2 ^ 0xBA9BD532)
              - ((2 * ((v6 >> 27) + (v2 ^ 0xBA9BD532))) & 0x32931660)
              + 424250160;
  HIDWORD(v6) = v101
              + v29
              - 330530878
              + ((((v2 ^ 0xA3D25E02 ^ v1) & v30)
                - ((2 * ((v2 ^ 0xA3D25E02 ^ v1) & v30)) & 0x7537AA64)
                - 1164192462) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v32 = v1 ^ 0x19498B30;
  LODWORD(v2) = (v6 >> 23) + (v1 ^ 0x19498B30) - ((2 * ((v6 >> 23) + (v1 ^ 0x19498B30))) & 0x427C0308) + 557711748;
  HIDWORD(v6) = v106
              + v30
              - 1029025296
              + ((((v1 ^ 0x38778AB4 ^ v2) & v31)
                - ((2 * ((v1 ^ 0x38778AB4 ^ v2) & v31)) & 0x32931660)
                + 424250160) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v33 = v2 ^ 0x213E0184;
  LODWORD(v1) = (v6 >> 18)
              + (v2 ^ 0x213E0184)
              - ((2 * ((v6 >> 18) + (v2 ^ 0x213E0184))) & 0x3B07BBEC)
              - 1652302346;
  HIDWORD(v6) = v95
              + v31
              - 774084809
              + ((((v2 ^ 0xBCBDDC72 ^ v1) & v32)
                - ((2 * ((v2 ^ 0xBCBDDC72 ^ v1) & v32)) & 0x427C0308)
                + 557711748) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v34 = v1 ^ 0x9D83DDF6;
  LODWORD(v2) = (v6 >> 12) + (v1 ^ 0x9D83DDF6) - ((2 * ((v6 >> 12) + (v1 ^ 0x9D83DDF6))) & 0x2BFB6084) - 1778536382;
  HIDWORD(v6) = v100
              + v32
              + 199899477
              + ((((v1 ^ 0x87E6DB4 ^ v2) & v33)
                - ((2 * ((v1 ^ 0x87E6DB4 ^ v2) & v33)) & 0x3B07BBEC)
                - 1652302346) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v35 = v2 ^ 0x95FDB042;
  LODWORD(v1) = (v6 >> 27)
              + (v2 ^ 0x95FDB042)
              - ((2 * ((v6 >> 27) + (v2 ^ 0x95FDB042))) & 0x832B17B4)
              - 1047163942;
  HIDWORD(v6) = v105
              + v33
              - 1388350651
              + ((((v2 ^ 0x54683B98 ^ v1) & v34)
                - 1778536382
                + (~(2 * ((v2 ^ 0x54683B98 ^ v1) & v34)) | 0xD4049F7B)
                + 1) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v36 = v1 ^ 0xC1958BDA;
  LODWORD(v2) = (v6 >> 23) + (v1 ^ 0xC1958BDA) - ((2 * ((v6 >> 23) + (v1 ^ 0xC1958BDA))) & 0x2AF1BE02) + 360242945;
  HIDWORD(v6) = v94
              + v34
              - 555910922
              + ((((v1 ^ 0xD4ED54DB ^ v2) & v35)
                - ((2 * ((v1 ^ 0xD4ED54DB ^ v2) & v35)) & 0x832B17B4)
                - 1047163942) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v37 = v2 ^ 0x1578DF01;
  LODWORD(v1) = (v6 >> 18)
              + (v2 ^ 0x1578DF01)
              - ((2 * ((v6 >> 18) + (v2 ^ 0x1578DF01))) & 0x25A5C352)
              + 315810217;
  HIDWORD(v6) = v99
              + v35
              + 794984540
              + ((((v2 ^ 0x7AA3EA8 ^ v1) & v36)
                - ((2 * ((v2 ^ 0x7AA3EA8 ^ v1) & v36)) & 0x2AF1BE02)
                + 360242945) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 12) + (v1 ^ 0x12D2E1A9) - ((2 * ((v6 >> 12) + (v1 ^ 0x12D2E1A9))) & 0x3CD8B6C) + 31901110;
  HIDWORD(v6) = v104
              + v36
              - 1813228428
              + ((((v1 ^ 0x1334241F ^ v2) & v37)
                - ((2 * ((v1 ^ 0x1334241F ^ v2) & v37)) & 0x25A5C352)
                + 315810217) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  int v38 = (v6 >> 27)
      + (v2 ^ 0x1E6C5B6)
      - ((2 * ((v6 >> 27) + (v2 ^ 0x1E6C5B6))) & 0x328A0926)
      - 1723530093;
  HIDWORD(v6) = v93
              + v37
              - 419950745
              + ((((v2 ^ 0x98A3C125 ^ v38) & (v1 ^ 0x12D2E1A9))
                - ((2 * ((v2 ^ 0x98A3C125 ^ v38) & (v1 ^ 0x12D2E1A9))) & 0x3CD8B6C)
                + 31901110) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v39 = (v6 >> 23) + (v38 ^ 0x99450493) - ((2 * ((v6 >> 23) + (v38 ^ 0x99450493))) & 0xCB2ED472) + 1704421945;
  HIDWORD(v6) = v98
              + (v1 ^ 0x12D2E1A9)
              + 1366781512
              + ((((v38 ^ 0xFCD26EAA ^ v39) & (v2 ^ 0x1E6C5B6))
                - ((2 * ((v38 ^ 0xFCD26EAA ^ v39) & (v2 ^ 0x1E6C5B6))) & 0x328A0926)
                - 1723530093) ^ v38);
  LODWORD(v6) = HIDWORD(v6);
  int v40 = (v6 >> 18) + (v39 ^ 0x65976A39) - ((2 * ((v6 >> 18) + (v39 ^ 0x65976A39))) & 0x3BDC5A3A) + 502148381;
  HIDWORD(v6) = v103
              + (v2 ^ 0x1E6C5B6)
              + 1999812601
              + ((((v39 ^ 0x78794724 ^ v40) & (v38 ^ 0x99450493))
                - ((2 * ((v39 ^ 0x78794724 ^ v40) & (v38 ^ 0x99450493))) & 0xCB2ED472)
                + 1704421945) ^ v39);
  LODWORD(v6) = HIDWORD(v6);
  int v41 = (v6 >> 12) + (v40 ^ 0x1DEE2D1D) - ((2 * ((v6 >> 12) + (v40 ^ 0x1DEE2D1D))) & 0x25EA3A1C) - 1829430002;
  uint64_t v42 = 4 * (v38 & 0xF ^ 3u);
  unsigned int v43 = *(unsigned int *)((char *)&v91 + v42);
  uint64_t v44 = 4
      * (((v6 >> 12)
        + (v40 ^ 0x1D)
        - ((2 * ((v6 >> 12) + (v40 ^ 0x1D))) & 0x1C)
        + 14) & 0xF ^ 0xEu);
  *(unsigned int *)((char *)&v91 + v42) = *(unsigned int *)((char *)&v91 + v44);
  uint64_t v45 = 4 * (v40 & 0xF ^ 0xDu);
  *(unsigned int *)((char *)&v91 + v44) = *(unsigned int *)((char *)&v91 + v45);
  uint64_t v46 = 4 * (v39 & 0xF ^ 9u);
  *(unsigned int *)((char *)&v91 + v45) = *(unsigned int *)((char *)&v91 + v46);
  uint64_t v47 = 4 * ((v38 >> 4) ^ 9u);
  *(unsigned int *)((char *)&v91 + v46) = *(unsigned int *)((char *)&v91 + v47);
  uint64_t v48 = 4 * (((v6 >> 12) + (v40 ^ 0x1D) - ((2 * ((v6 >> 12) + (v40 ^ 0x1D))) & 0x1C) + 14) >> 4);
  *(unsigned int *)((char *)&v91 + v47) = *(unsigned int *)((char *)&v91 + v48);
  uint64_t v49 = 4 * ((v40 >> 4) ^ 1u);
  *(unsigned int *)((char *)&v91 + v48) = *(unsigned int *)((char *)&v91 + v49);
  uint64_t v50 = 4 * ((v39 >> 4) ^ 3u);
  *(unsigned int *)((char *)&v91 + v49) = *(unsigned int *)((char *)&v91 + v50);
  *(unsigned int *)((char *)&v91 + v50) = v43;
  HIDWORD(v6) = v96
              + (v38 ^ 0x99450493)
              - 368925519
              + (((v40 ^ 0x8F1B3013 ^ v41) - ((2 * (v40 ^ 0x8F1B3013 ^ v41)) & 0xCB2ED472) + 1704421945) ^ v39);
  LODWORD(v6) = HIDWORD(v6);
  int v51 = (v6 >> 28) + (v41 ^ 0x92F51D0E) - ((2 * ((v6 >> 28) + (v41 ^ 0x92F51D0E))) & 0x2EF562E2) + 393916785;
  unsigned int v52 = v100;
  HIDWORD(v6) = v99
              + (v39 ^ 0x65976A39)
              + 1903845872
              + (((v41 ^ 0x858FAC7F ^ v51) - ((2 * (v41 ^ 0x858FAC7F ^ v51)) & 0x3BDC5A3A) + 502148381) ^ v40);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v49) = (v6 >> 21) + (v51 ^ 0x177AB171) - ((2 * ((v6 >> 21) + (v51 ^ 0x177AB171))) & 0xB1E610D4) + 1492322410;
  HIDWORD(v6) = v102
              + (v40 ^ 0x1DEE2D1D)
              + 1470483601
              + (((v51 ^ 0x4F89B91B ^ v49) - ((2 * (v51 ^ 0x4F89B91B ^ v49)) & 0x25EA3A1C) - 1829430002) ^ v41);
  LODWORD(v6) = HIDWORD(v6);
  int v53 = v49 ^ 0x58F3086A;
  int v54 = (v6 >> 16) + (v49 ^ 0x58F3086A) - ((2 * ((v6 >> 16) + (v49 ^ 0x58F3086A))) & 0xA6D09D4E) - 748138841;
  HIDWORD(v6) = v105
              + (v41 ^ 0x92F51D0E)
              - 403856517
              + (((v49 ^ 0x8B9B46CD ^ v54) - ((2 * (v49 ^ 0x8B9B46CD ^ v54)) & 0x2EF562E2) + 393916785) ^ v51);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v55 = v54 ^ 0xD3684EA7;
  int v56 = (v6 >> 9) + (v54 ^ 0xD3684EA7) - ((2 * ((v6 >> 9) + (v54 ^ 0xD3684EA7))) & 0xC7FD63D2) + 1677636073;
  HIDWORD(v6) = v92
              + (v51 ^ 0x177AB171)
              - 1899539021
              + (((v54 ^ 0xB096FF4E ^ v56) - ((2 * (v54 ^ 0xB096FF4E ^ v56)) & 0xB1E610D4) + 1492322410) ^ v49);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v49) = (v6 >> 28) + (v56 ^ 0x63FEB1E9) - ((2 * ((v6 >> 28) + (v56 ^ 0x63FEB1E9))) & 0x13F846E6) - 1979964557;
  HIDWORD(v6) = v95
              + v53
              + 904346392
              + (((v56 ^ 0xEA02929A ^ v49) - ((2 * (v56 ^ 0xEA02929A ^ v49)) & 0xA6D09D4E) - 748138841) ^ v54);
  LODWORD(v6) = HIDWORD(v6);
  int v57 = v49 ^ 0x89FC2373;
  int v58 = (v6 >> 21) + (v49 ^ 0x89FC2373) - ((2 * ((v6 >> 21) + (v49 ^ 0x89FC2373))) & 0xEFCD4F10) + 2011604872;
  HIDWORD(v6) = v98
              + v55
              - 524044593
              + (((v49 ^ 0xFE1A84FB ^ v58) - ((2 * (v49 ^ 0xFE1A84FB ^ v58)) & 0xC7FD63D2) + 1677636073) ^ v56);
  LODWORD(v6) = HIDWORD(v6);
  int v59 = v58 ^ 0x77E6A788;
  int v60 = (v6 >> 16) + (v58 ^ 0x77E6A788) - ((2 * ((v6 >> 16) + (v58 ^ 0x77E6A788))) & 0x6B77DA12) - 1245975287;
  HIDWORD(v6) = v101
              + (v56 ^ 0x63FEB1E9)
              - 1463277601
              + (((v58 ^ 0xC25D4A81 ^ v60) - ((2 * (v58 ^ 0xC25D4A81 ^ v60)) & 0x13F846E6) - 1979964557) ^ v49);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v49) = (v6 >> 9) + (v60 ^ 0xB5BBED09) - ((2 * ((v6 >> 9) + (v60 ^ 0xB5BBED09))) & 0x7A1A9BB0) - 1123201576;
  HIDWORD(v6) = v104
              + v57
              + 312732213
              + (((v49 ^ v60 ^ 0x8B6A0D1) - 2 * ((v49 ^ v60 ^ 0x8B6A0D1) & 0x77E6A78E ^ (v49 ^ v60) & 6) + 2011604872) ^ v58);
  LODWORD(v6) = HIDWORD(v6);
  int v61 = v49 ^ 0xBD0D4DD8;
  int v62 = (v6 >> 28) + (v49 ^ 0xBD0D4DD8) - ((2 * ((v6 >> 28) + (v49 ^ 0xBD0D4DD8))) & 0x9E2BCF72) - 820648007;
  HIDWORD(v6) = v91
              + v59
              - 727084183
              + (((v62 ^ v49 ^ 0x7218AA61)
                - 2 * ((v62 ^ v49 ^ 0x7218AA61) & 0x35BBED19 ^ (v62 ^ v49) & 0x10)
                - 1245975287) ^ v60);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v63 = v62 ^ 0xCF15E7B9;
  int v64 = (v6 >> 21) + (v62 ^ 0xCF15E7B9) - ((2 * ((v6 >> 21) + (v62 ^ 0xCF15E7B9))) & 0xE2619FBC) + 1899024350;
  uint64_t result = v93;
  HIDWORD(v6) = v94
              + (v60 ^ 0xB5BBED09)
              - 1091068940
              + (((v62 ^ 0xBE252867 ^ v64) - ((2 * (v62 ^ 0xBE252867 ^ v64)) & 0x7A1A9BB0) - 1123201576) ^ v49);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v49) = (v6 >> 16) + (v64 ^ 0x7130CFDE) - ((2 * ((v6 >> 16) + (v64 ^ 0x7130CFDE))) & 0xD626ECF8) + 1796437628;
  HIDWORD(v6) = v97
              + v61
              - 292517772
              + (((v64 ^ 0x1A23B9A2 ^ v49) - ((2 * (v64 ^ 0x1A23B9A2 ^ v49)) & 0x9E2BCF72) - 820648007) ^ v62);
  LODWORD(v6) = HIDWORD(v6);
  int v66 = v49 ^ 0x6B13767C;
  int v67 = (v6 >> 9) + (v49 ^ 0x6B13767C) - ((2 * ((v6 >> 9) + (v49 ^ 0x6B13767C))) & 0x49ECF708) - 1527350396;
  HIDWORD(v6) = v100
              + v63
              - 1008911448
              + (((v67 ^ v49 ^ 0xCFE50DF8) - 2 * ((v67 ^ v49 ^ 0xCFE50DF8) & 0x7130CFDF ^ (v67 ^ v49) & 1) + 1899024350) ^ v64);
  LODWORD(v6) = HIDWORD(v6);
  int v68 = (v6 >> 28) + (v67 ^ 0xA4F67B84) - ((2 * ((v6 >> 28) + (v67 ^ 0xA4F67B84))) & 0xA5ABB47A) - 757736899;
  HIDWORD(v6) = v103
              + (v64 ^ 0x7130CFDE)
              - 790362796
              + (((v67 ^ 0x7623A1B9 ^ v68) - ((2 * (v67 ^ 0x7623A1B9 ^ v68)) & 0xD626ECF8) + 1796437628) ^ v49);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = v68 ^ 0xD2D5DA3D;
  LODWORD(v49) = (v6 >> 21) + (v68 ^ 0xD2D5DA3D) - ((2 * ((v6 >> 21) + (v68 ^ 0xD2D5DA3D))) & 0x8C22D40C) + 1175546374;
  HIDWORD(v6) = v106
              + v66
              + 162195559
              + (((v68 ^ 0x94C4B03B ^ v49) - ((2 * (v68 ^ 0x94C4B03B ^ v49)) & 0x49ECF708) - 1527350396) ^ v67);
  LODWORD(v6) = HIDWORD(v6);
  int v69 = v49 ^ 0x46116A06;
  LODWORD(v50) = (v6 >> 16) + (v49 ^ 0x46116A06) - ((2 * ((v6 >> 16) + (v49 ^ 0x46116A06))) & 0x6D9FAEA6) - 1227892909;
  HIDWORD(v6) = v93
              + (v67 ^ 0xA4F67B84)
              - 1363885612
              + (((v50 ^ v49 ^ 0xF0DEBD55) - 2 * ((v50 ^ v49 ^ 0xF0DEBD55) & 0x52D5DA3F ^ (v50 ^ v49) & 2) - 757736899) ^ v68);
  LODWORD(v6) = HIDWORD(v6);
  int v70 = (v6 >> 9) + (v50 ^ 0xB6CFD753) - ((2 * ((v6 >> 9) + (v50 ^ 0xB6CFD753))) & 0xC760E308) + 1672507780;
  int v71 = v70 ^ 0x63B07184;
  HIDWORD(v6) = v91
              + v2
              - 567177805
              + (((v71 | v49 ^ 0xB9EE95F9) - ((2 * (v71 | v49 ^ 0xB9EE95F9)) & 0x6D9FAEA6) - 1227892909) ^ v50);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v49) = (v6 >> 26) + v71 - ((2 * ((v6 >> 26) + v71)) & 0x5FF7294C) + 805016742;
  int v72 = v49 ^ 0x2FFB94A6;
  HIDWORD(v6) = v98
              + v69
              + 758344454
              + (((v49 ^ 0x2FFB94A6 | v50 ^ 0x493028AC)
                - ((2 * (v49 ^ 0x2FFB94A6 | v50 ^ 0x493028AC)) & 0xC760E308)
                + 1672507780) ^ v70);
  LODWORD(v6) = HIDWORD(v6);
  int v73 = (v6 >> 22) + (v49 ^ 0x2FFB94A6) - ((2 * ((v6 >> 22) + (v49 ^ 0x2FFB94A6))) & 0x2183490A) - 1866357627;
  unsigned int v74 = v73 ^ 0x90C1A485;
  HIDWORD(v6) = v105
              + (v50 ^ 0xB6CFD753)
              - 1784901866
              + (((v74 | v70 ^ 0x9C4F8E7B) - ((2 * (v74 | v70 ^ 0x9C4F8E7B)) & 0x5FF7294C) + 805016742) ^ v49);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 17) + v74 - ((2 * ((v6 >> 17) + v74)) & 0xC7F863B2) + 1677472217;
  unsigned int v75 = v2 ^ 0x63FC31D9;
  HIDWORD(v6) = v96
              + (v70 ^ 0x63B07184)
              - 425981016
              + (((v2 ^ 0x63FC31D9 | v49 ^ 0xD0046B59)
                - ((2 * (v2 ^ 0x63FC31D9 | v49 ^ 0xD0046B59)) & 0x2183490A)
                - 1866357627) ^ v73);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v49) = (v6 >> 11)
               + (v2 ^ 0x63FC31D9)
               - ((2 * ((v6 >> 11) + (v2 ^ 0x63FC31D9))) & 0x40CA1F84)
               + 543494082;
  int v76 = v49 ^ 0x20650FC2;
  HIDWORD(v6) = v103
              + v72
              + 1331938610
              + (((v76 | v73 ^ 0x6F3E5B7A) - ((2 * (v76 | v73 ^ 0x6F3E5B7A)) & 0xC7F863B2) + 1677472217) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v77 = (v6 >> 26) + v76 - ((2 * ((v6 >> 26) + v76)) & 0x9EE40F14) + 1332873098;
  int v78 = v77 ^ 0x4F72078A;
  HIDWORD(v6) = v94
              + v74
              + 2031433729
              + (((v77 ^ 0x4F72078A | v2 ^ 0x9C03CE26)
                - ((2 * (v77 ^ 0x4F72078A | v2 ^ 0x9C03CE26)) & 0x40CA1F84)
                + 543494082) ^ v49);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 22) + (v77 ^ 0x4F72078A) - ((2 * ((v6 >> 22) + (v77 ^ 0x4F72078A))) & 0x61D88F4C) + 820791206;
  unsigned int v79 = v2 ^ 0x30EC47A6;
  HIDWORD(v6) = v101
              + v75
              - 369598484
              + (((v79 | v49 ^ 0xDF9AF03D) - ((2 * (v79 | v49 ^ 0xDF9AF03D)) & 0x9EE40F14) + 1332873098) ^ v77);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v49) = (v6 >> 17) + v79 - ((2 * ((v6 >> 17) + v79)) & 0x99772056) + 1287360555;
  int v80 = v49 ^ 0x4CBB902B;
  HIDWORD(v6) = v92
              + v76
              + 1871497536
              + (((v49 ^ 0x4CBB902B | v77 ^ 0xB08DF875)
                - ((2 * (v49 ^ 0x4CBB902B | v77 ^ 0xB08DF875)) & 0x61D88F4C)
                + 820791206) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v81 = (v6 >> 11) + (v49 ^ 0x4CBB902B) - ((2 * ((v6 >> 11) + (v49 ^ 0x4CBB902B))) & 0x9819D7C) - 2067738946;
  unsigned int v82 = v81 ^ 0x84C0CEBE;
  HIDWORD(v6) = v99
              + v78
              + 1504766398
              + (((v82 | v2 ^ 0xCF13B859)
                - ((2 * (v82 | v2 ^ 0xCF13B859)) & 0x99772056)
                + 1287360555) ^ v49);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 26) + v82 - ((2 * ((v6 >> 26) + v82)) & 0x11ADBC38) + 148299292;
  unsigned int v83 = v2 ^ 0x8D6DE1C;
  HIDWORD(v6) = v106
              + v79
              - 399158705
              + (((v83 | v49 ^ 0xB3446FD4) - ((2 * (v83 | v49 ^ 0xB3446FD4)) & 0x9819D7C) - 2067738946) ^ v81);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v49) = (v6 >> 22) + v83 - ((2 * ((v6 >> 22) + v83)) & 0x9E0ABF1C) - 821731442;
  int v84 = v49 ^ 0xCF055F8E;
  HIDWORD(v6) = v97
              + v80
              - 1928745341
              + (((v49 ^ 0xCF055F8E | v81 ^ 0x7B3F3141)
                - ((2 * (v49 ^ 0xCF055F8E | v81 ^ 0x7B3F3141)) & 0x11ADBC38)
                + 148299292) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v85 = (v6 >> 17) + (v49 ^ 0xCF055F8E) - ((2 * ((v6 >> 17) + (v49 ^ 0xCF055F8E))) & 0xAF740EBA) + 1471809373;
  int v86 = v85 ^ 0x57BA075D;
  HIDWORD(v6) = v104
              + v82
              + 940604688
              + (((v85 ^ 0x57BA075D | v2 ^ 0xF72921E3)
                - ((2 * (v85 ^ 0x57BA075D | v2 ^ 0xF72921E3)) & 0x9E0ABF1C)
                - 821731442) ^ v49);
  LODWORD(v6) = HIDWORD(v6);
  int v87 = (v6 >> 11) + (v85 ^ 0x57BA075D) - ((2 * ((v6 >> 11) + (v85 ^ 0x57BA075D))) & 0xB02A1C22) - 669708783;
  unsigned int v88 = v87 ^ 0xD8150E11;
  HIDWORD(v6) = v95
              + (v2 ^ 0x8D6DE1C)
              - 514070031
              + (((v88 | v49 ^ 0x30FAA071) - ((2 * (v88 | v49 ^ 0x30FAA071)) & 0xAF740EBA) + 1471809373) ^ v85);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v49) = (v6 >> 26) + v88 - ((2 * ((v6 >> 26) + v88)) & 0x5F31F390) - 1348929080;
  HIDWORD(v6) = v102
              + v84
              - 1488757340
              + (((v49 ^ 0xAF98F9C8 | v85 ^ 0xA845F8A2)
                - ((2 * (v49 ^ 0xAF98F9C8 | v85 ^ 0xA845F8A2)) & 0xB02A1C22)
                - 669708783) ^ v87);
  LODWORD(v6) = HIDWORD(v6);
  *(_DWORD *)(v90 - 0x616C614F3D9D1130) += v49 ^ 0xAF98F9C8;
  int v89 = ((2 * ((v6 >> 22) + (v49 ^ 0xAF98F9C8))) & 0x6FFB535C)
      + (((v6 >> 22) + (v49 ^ 0xAF98F9C8)) ^ 0xB7FDA9AE)
      + 1208112722;
  HIDWORD(v6) = result
              + v86
              + 350240298
              + (((v89 | v87 ^ 0x27EAF1EE) - ((2 * (v89 | v87 ^ 0x27EAF1EE)) & 0x5F31F390) - 1348929080) ^ v49);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = v89 + (v6 >> 17);
  HIDWORD(v6) = v52 + (v87 ^ 0xD8150E11) - 712032512 + ((v2 | v49 ^ 0x50670637) ^ v89);
  LODWORD(v6) = HIDWORD(v6);
  *(_DWORD *)(v90 - 0x616C614F3D9D112CLL) += v2 + (v6 >> 11);
  *(_DWORD *)(v90 - 0x616C614F3D9D1128) += v2;
  *(_DWORD *)(v90 - 0x616C614F3D9D1124) += v89;
  return result;
}

uint64_t sub_1D0B09428()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 + v0 + ((v1 - 7) ^ 0xC0054045) < 8) * (v1 - 420)) ^ v1)))();
}

uint64_t sub_1D0B0948C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((287 * (v1 ^ 0x31D) + 1563394115) & 0xA2D07FDF) - 1132)
                                     * ((unint64_t)(v4 - v2 - 0x10B17FC23B8BBE14 + v0) > 7)) ^ v1)))();
}

void sub_1D0B094F0()
{
}

uint64_t sub_1D0B094FC(uint64_t a1)
{
  unsigned int v1 = 961505453 * (a1 ^ 0xA2FBCEA6);
  unsigned int v2 = *(_DWORD *)(a1 + 12) - v1;
  return (*((uint64_t (**)(void))*(&off_1F26D60E0 + (int)(v2 ^ 0x2A8))
          + (int)((((((*(_DWORD *)(a1 + 8) ^ v1) - 287745991 < 7) ^ (v2 + 94)) & 1)
                 * ((v2 + 39) ^ 0x298)) ^ v2)))();
}

uint64_t sub_1D0B09594()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((v1 - 320) | (v0 < v3) | (16 * (v0 < v3)))))();
}

uint64_t sub_1D0B095B4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + v1) = 0;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v1 + v4 - 637 != v2) * v5) ^ v3)))();
}

uint64_t sub_1D0B095E0@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((57 * (((v2 + 626) ^ 0x33ALL) == v1)) ^ v2)))();
}

void sub_1D0B09614()
{
}

uint64_t sub_1D0B09620(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((44 * (v1 != v2)) ^ a1)))();
}

uint64_t sub_1D0B09648(uint64_t result)
{
  int v1 = 772498675;
  unsigned __int8 v2 = ((2 * (result ^ 0x86)) | 0xD8) - (result ^ 0x86) - 108;
  switch(*(unsigned char *)(result + 12) + (v2 ^ 0x18) + (v2 << 6))
  {
    case '$':
      int v3 = 0x4000000;
      goto LABEL_3;
    case '%':
      int v3 = -2113929216;
      goto LABEL_3;
    case '&':
      int v3 = -1744830464;
      goto LABEL_3;
    case '\'':
      int v3 = 335544320;
LABEL_3:
      if (*(_DWORD *)(*(void *)result + 8) == v3) {
        int v1 = 772540756;
      }
      else {
        int v1 = 772498675;
      }
      break;
    default:
      break;
  }
  *(_DWORD *)(result + 8) = v1;
  return result;
}

uint64_t sub_1D0B096D0(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = v2 + a2;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((v5 - v2 + 1279262966 >= (unint64_t)(v3 - 70) - 315)
                                * (((v3 + 130) | 4) ^ 0x20A)) ^ v3)))();
}

uint64_t sub_1D0B09740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  uint64_t v59 = (v57 + 687857196) & 0xD70024AD ^ 0x452;
  v60.i64[0] = 0xF0F0F0F0F0F0F0F0;
  v60.i64[1] = 0xF0F0F0F0F0F0F0F0;
  v61.i64[0] = 0xF9F9F9F9F9F9F9F9;
  v61.i64[1] = 0xF9F9F9F9F9F9F9F9;
  int8x16_t v62 = vrev64q_s8(*(int8x16_t *)(a23 + v59 + 117));
  int8x16_t v63 = vextq_s8(v62, v62, 8uLL);
  int8x16_t v64 = vrev64q_s8(*(int8x16_t *)(a23 + v59 + 101));
  int8x16_t v65 = vextq_s8(v64, v64, 8uLL);
  int8x16_t v66 = vrev64q_s8(vaddq_s8(vaddq_s8(v63, v61), vmvnq_s8(vandq_s8(vaddq_s8(v63, v63), v60))));
  int v67 = &a57 + v59;
  *(int8x16_t *)(v67 - 15) = vextq_s8(v66, v66, 8uLL);
  int8x16_t v68 = vrev64q_s8(vaddq_s8(vaddq_s8(v65, v61), vmvnq_s8(vandq_s8(vaddq_s8(v65, v65), v60))));
  *(int8x16_t *)(v67 - 31) = vextq_s8(v68, v68, 8uLL);
  return (*(uint64_t (**)(void))(v58 + 8 * v57))();
}

uint64_t sub_1D0B09810(void *a1)
{
  uint64_t v101 = *MEMORY[0x1E4F143B8];
  unsigned int v2 = (_DWORD *)*a1;
  uint64_t v1 = a1[1];
  int v85 = (*(_DWORD *)*a1 ^ 0x39BFBDD7) - 16914564 + ((2 * *(_DWORD *)*a1) & 0x737F7BAE);
  int v86 = (v2[1] ^ 0x39BFBDD7) - 16914564 + ((2 * v2[1]) & 0x737F7BAE);
  unsigned int v87 = (v2[2] ^ 0x39BFBDD7) - 16914564 + ((2 * v2[2]) & 0x737F7BAE);
  int v88 = (v2[3] ^ 0x39BFBDD7) - 16914564 + ((2 * v2[3]) & 0x737F7BAE);
  int v89 = (v2[4] ^ 0x39BFBDD7) - 16914564 + ((2 * v2[4]) & 0x737F7BAE);
  int v90 = (v2[5] ^ 0x39BFBDD7) - 16914564 + ((2 * v2[5]) & 0x737F7BAE);
  int v91 = (v2[6] ^ 0x39BFBDD7) - 16914564 + ((2 * v2[6]) & 0x737F7BAE);
  int v92 = (v2[7] ^ 0x39BFBDD7) - 16914564 + ((2 * v2[7]) & 0x737F7BAE);
  int v93 = (v2[8] ^ 0x39BFBDD7) - 16914564 + ((2 * v2[8]) & 0x737F7BAE);
  int v94 = (v2[9] ^ 0x39BFBDD7) - 16914564 + ((2 * v2[9]) & 0x737F7BAE);
  int v95 = (v2[10] ^ 0x39BFBDD7) - 16914564 + ((2 * v2[10]) & 0x737F7BAE);
  int v96 = (v2[11] ^ 0x39BFBDD7) - 16914564 + ((2 * v2[11]) & 0x737F7BAE);
  int v97 = (v2[12] ^ 0x39BFBDD7) - 16914564 + ((2 * v2[12]) & 0x737F7BAE);
  int v98 = (v2[13] ^ 0x39BFBDD7) - 16914564 + ((2 * v2[13]) & 0x737F7BAE);
  int v99 = (v2[14] ^ 0x39BFBDD7) - 16914564 + ((2 * v2[14]) & 0x737F7BAE);
  int v100 = (v2[15] ^ 0x39BFBDD7) - 16914564 + ((2 * v2[15]) & 0x737F7BAE);
  uint64_t v84 = v1;
  int v3 = *(_DWORD *)(v1 - 0x47DB7942A26B0BD2);
  int v4 = *(_DWORD *)(v1 - 0x47DB7942A26B0BCELL);
  int v5 = *(_DWORD *)(v1 - 0x47DB7942A26B0BCALL);
  int v83 = v85;
  HIDWORD(v6) = *(_DWORD *)(v1 - 0x47DB7942A26B0BD6) + v85 - 1632829659 + (v4 & v3 | v5 & ~v3);
  LODWORD(v6) = HIDWORD(v6);
  int v7 = (v6 >> 25) + v3 - ((2 * ((v6 >> 25) + v3)) & 0x5C3DE6EE) + 773780343;
  HIDWORD(v6) = v5 + v86 - 1341517309 + (v3 & (v7 ^ 0x2E1EF377) | v4 & ~(v7 ^ 0x2E1EF377));
  LODWORD(v6) = HIDWORD(v6);
  int v8 = (v6 >> 20) + (v7 ^ 0x2E1EF377) - ((2 * ((v6 >> 20) + (v7 ^ 0x2E1EF377))) & 0xFA9407EE) + 2102002679;
  HIDWORD(v6) = v4 + v87 - 345846904 + ((v8 ^ 0x7D4A03F7) & (v7 ^ (v3 - ((2 * v3) & 0x5C3DE6EE) + 773780343)) ^ v3);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 15) + (v8 ^ 0x7D4A03F7) - ((2 * ((v6 >> 15) + (v8 ^ 0x7D4A03F7))) & 0x513221BA) + 681119965;
  int v9 = v1 ^ 0x289910DD;
  HIDWORD(v6) = v3
              + v88
              - 1996478053
              + ((((v1 ^ 0x289910DD) & (v7 ^ 0x5354F080 ^ v8))
                - ((2 * ((v1 ^ 0x289910DD) & (v7 ^ 0x5354F080 ^ v8))) & 0x5C3DE6EE)
                + 773780343) ^ v7);
  LODWORD(v6) = HIDWORD(v6);
  int v10 = (v6 >> 10) + (v1 ^ 0x289910DD) - ((2 * ((v6 >> 10) + (v1 ^ 0x289910DD))) & 0x513851FA) + 681322749;
  HIDWORD(v6) = v89
              + (v7 ^ 0x2E1EF377)
              - 1128371620
              + ((((v10 ^ 0x289C28FD) & (v8 ^ 0x55D3132A ^ v1))
                + 2102002679
                + (~(2 * ((v10 ^ 0x289C28FD) & (v8 ^ 0x55D3132A ^ v1))) | 0x56BF811)
                + 1) ^ v8);
  LODWORD(v6) = HIDWORD(v6);
  int v11 = (v6 >> 25) + (v10 ^ 0x289C28FD) - ((2 * ((v6 >> 25) + (v10 ^ 0x289C28FD))) & 0xBA170B90) + 1561036232;
  HIDWORD(v6) = v90
              + (v8 ^ 0x7D4A03F7)
              + 248127703
              + ((((v11 ^ 0x5D0B85C8) & (v1 ^ 0x53820 ^ v10))
                - ((2 * ((v11 ^ 0x5D0B85C8) & (v1 ^ 0x53820 ^ v10))) & 0x513221BA)
                + 681119965) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 20) + (v11 ^ 0x5D0B85C8) - ((2 * ((v6 >> 20) + (v11 ^ 0x5D0B85C8))) & 0x98BE952C) + 1281313430;
  int v12 = v1 ^ 0x4C5F4A96;
  HIDWORD(v6) = v91
              + v9
              + 1869783232
              + ((((v1 ^ 0x4C5F4A96) & (v10 ^ 0x7597AD35 ^ v11))
                - ((2 * ((v1 ^ 0x4C5F4A96) & (v10 ^ 0x7597AD35 ^ v11))) & 0x513851FA)
                + 681322749) ^ v10);
  LODWORD(v6) = HIDWORD(v6);
  int v13 = (v6 >> 15) + (v1 ^ 0x4C5F4A96) - ((2 * ((v6 >> 15) + (v1 ^ 0x4C5F4A96))) & 0x763DFA08) + 991886596;
  HIDWORD(v6) = v92
              + (v10 ^ 0x289C28FD)
              - 997658706
              + ((((v13 ^ 0x3B1EFD04) & (v11 ^ 0x1154CF5E ^ v1))
                - ((2 * ((v13 ^ 0x3B1EFD04) & (v11 ^ 0x1154CF5E ^ v1))) & 0xBA170B90)
                + 1561036232) ^ v11);
  LODWORD(v6) = HIDWORD(v6);
  int v14 = (v6 >> 10) + (v13 ^ 0x3B1EFD04) - ((2 * ((v6 >> 10) + (v13 ^ 0x3B1EFD04))) & 0x9A8810D0) - 851179416;
  HIDWORD(v6) = v93
              + (v11 ^ 0x5D0B85C8)
              + 818082693
              + ((((v14 ^ 0xCD440868) & (v1 ^ 0x7741B792 ^ v13))
                - ((2 * ((v14 ^ 0xCD440868) & (v1 ^ 0x7741B792 ^ v13))) & 0x98BE952C)
                + 1281313430) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 25) + (v14 ^ 0xCD440868) - ((2 * ((v6 >> 25) + (v14 ^ 0xCD440868))) & 0x95DB7B32) + 1257094553;
  int v15 = v1 ^ 0x4AEDBD99;
  HIDWORD(v6) = v94
              + v12
              + 1384600156
              + ((((v1 ^ 0x4AEDBD99) & (v13 ^ 0xF65AF56C ^ v14))
                - ((2 * ((v1 ^ 0x4AEDBD99) & (v13 ^ 0xF65AF56C ^ v14))) & 0x763DFA08)
                + 991886596) ^ v13);
  LODWORD(v6) = HIDWORD(v6);
  int v16 = (v6 >> 20) + (v1 ^ 0x4AEDBD99) - ((2 * ((v6 >> 20) + (v1 ^ 0x4AEDBD99))) & 0xF52BDCDE) + 2056646255;
  int v17 = v16 ^ 0x7A95EE6F;
  HIDWORD(v6) = v95
              + (v13 ^ 0x3B1EFD04)
              - 951994786
              + ((((v16 ^ 0x7A95EE6F) & (v14 ^ 0x87A9B5F1 ^ v1))
                - ((2 * ((v16 ^ 0x7A95EE6F) & (v14 ^ 0x87A9B5F1 ^ v1))) & 0x9A8810D0)
                - 851179416) ^ v14);
  LODWORD(v6) = HIDWORD(v6);
  int v18 = (v6 >> 15) + (v16 ^ 0x7A95EE6F) - ((2 * ((v6 >> 15) + (v16 ^ 0x7A95EE6F))) & 0x1469969C) + 171232078;
  HIDWORD(v6) = v96
              + (v14 ^ 0xCD440868)
              + 1352610411
              + ((((v18 ^ 0xA34CB4E) & (v1 ^ 0x307853F6 ^ v16))
                - ((2 * ((v18 ^ 0xA34CB4E) & (v1 ^ 0x307853F6 ^ v16))) & 0x95DB7B32)
                + 1257094553) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 10) + (v18 ^ 0xA34CB4E) - ((2 * ((v6 >> 10) + (v18 ^ 0xA34CB4E))) & 0xE16BFA2C) - 256508650;
  int v19 = v1 ^ 0xF0B5FD16;
  HIDWORD(v6) = v97
              + v15
              + 852650959
              + ((((v1 ^ 0xF0B5FD16) & (v16 ^ 0x70A12521 ^ v18))
                - ((2 * ((v1 ^ 0xF0B5FD16) & (v16 ^ 0x70A12521 ^ v18))) & 0xF52BDCDE)
                + 2056646255) ^ v16);
  LODWORD(v6) = HIDWORD(v6);
  int v20 = (v6 >> 25) + (v1 ^ 0xF0B5FD16) - ((2 * ((v6 >> 25) + (v1 ^ 0xF0B5FD16))) & 0x2A7BDB14) - 1791103606;
  HIDWORD(v6) = v98
              + v17
              - 992293824
              + ((((v20 ^ 0x953DED8A) & (v18 ^ 0xFA813658 ^ v1))
                - ((2 * ((v20 ^ 0x953DED8A) & (v18 ^ 0xFA813658 ^ v1))) & 0x1469969C)
                + 171232078) ^ v18);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 20) + (v20 ^ 0x953DED8A) - ((2 * ((v6 >> 20) + (v20 ^ 0x953DED8A))) & 0xC878D2D6) + 1681680747;
  unsigned int v21 = v2 ^ 0x643C696B;
  HIDWORD(v6) = v99
              + (v18 ^ 0xA34CB4E)
              + 1841012283
              + ((((v2 ^ 0x643C696B) & (v1 ^ 0x6588109C ^ v20))
                - ((2 * ((v2 ^ 0x643C696B) & (v1 ^ 0x6588109C ^ v20))) & 0xE16BFA2C)
                - 256508650) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 15)
              + (v2 ^ 0x643C696B)
              - ((2 * ((v6 >> 15) + (v2 ^ 0x643C696B))) & 0x9CAA731C)
              + 1314208142;
  int v22 = v1 ^ 0x4E55398E;
  HIDWORD(v6) = v100
              + v19
              + 284582606
              + ((((v1 ^ 0x4E55398E) & (v20 ^ 0xF10184E1 ^ v2))
                - ((2 * ((v1 ^ 0x4E55398E) & (v20 ^ 0xF10184E1 ^ v2))) & 0x2A7BDB14)
                - 1791103606) ^ v20);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 10) + (v1 ^ 0x4E55398E) - ((2 * ((v6 >> 10) + (v1 ^ 0x4E55398E))) & 0x1F2913EC) - 1886090762;
  HIDWORD(v6) = v86
              + (v20 ^ 0x953DED8A)
              - 1117749233
              + ((((v1 ^ 0xC1C1B078 ^ v2) & v21)
                + 1314208142
                + (~(2 * ((v1 ^ 0xC1C1B078 ^ v2) & v21)) | 0x63558CE3)
                + 1) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v23 = v2 ^ 0x8F9489F6;
  LODWORD(v1) = (v6 >> 27)
              + (v2 ^ 0x8F9489F6)
              - ((2 * ((v6 >> 27) + (v2 ^ 0x8F9489F6))) & 0x36A43D36)
              - 1689117029;
  HIDWORD(v6) = v91
              + v21
              - 2021454355
              + ((((v2 ^ 0x14C6976D ^ v1) & v22)
                - ((2 * ((v2 ^ 0x14C6976D ^ v1) & v22)) & 0x1F2913EC)
                - 1886090762) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v24 = v1 ^ 0x9B521E9B;
  LODWORD(v2) = (v6 >> 23) + (v1 ^ 0x9B521E9B) - ((2 * ((v6 >> 23) + (v1 ^ 0x9B521E9B))) & 0xE8F3D410) - 193336824;
  HIDWORD(v6) = v96
              + v22
              - 308235010
              + ((((v1 ^ 0x6F2BF493 ^ v2) & v23)
                - ((2 * ((v1 ^ 0x6F2BF493 ^ v2) & v23)) & 0x36A43D36)
                - 1689117029) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v25 = v2 ^ 0xF479EA08;
  LODWORD(v1) = (v6 >> 18)
              + (v2 ^ 0xF479EA08)
              - ((2 * ((v6 >> 18) + (v2 ^ 0xF479EA08))) & 0xABF3D89C)
              - 705041330;
  HIDWORD(v6) = v85
              + v23
              - 1325850025
              + ((((v2 ^ 0x21800646 ^ v1) & v24)
                - ((2 * ((v2 ^ 0x21800646 ^ v1) & v24)) & 0xE8F3D410)
                - 193336824) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v26 = v1 ^ 0xD5F9EC4E;
  LODWORD(v2) = (v6 >> 12) + (v1 ^ 0xD5F9EC4E) - ((2 * ((v6 >> 12) + (v1 ^ 0xD5F9EC4E))) & 0x7E8C177A) - 1085928515;
  HIDWORD(v6) = v90
              + v24
              - 1653511414
              + ((((v1 ^ 0x6ABFE7F3 ^ v2) & v25)
                - ((2 * ((v1 ^ 0x6ABFE7F3 ^ v2) & v25)) & 0xABF3D89C)
                - 705041330) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v27 = v2 ^ 0xBF460BBD;
  LODWORD(v1) = (v6 >> 27)
              + (v2 ^ 0xBF460BBD)
              - ((2 * ((v6 >> 27) + (v2 ^ 0xBF460BBD))) & 0x2A6374DE)
              - 1791903121;
  HIDWORD(v6) = v95
              + v25
              - 913936640
              + ((((v2 ^ 0x2A77B1D2 ^ v1) & v26)
                - ((2 * ((v2 ^ 0x2A77B1D2 ^ v1) & v26)) & 0x7E8C177A)
                - 1085928515) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v28 = v1 ^ 0x9531BA6F;
  LODWORD(v2) = (v6 >> 23) + (v1 ^ 0x9531BA6F) - ((2 * ((v6 >> 23) + (v1 ^ 0x9531BA6F))) & 0xF4BF2018) - 94400500;
  HIDWORD(v6) = v100
              + v26
              - 1612431058
              + ((((v1 ^ 0x6F6E2A63 ^ v2) & v27)
                - ((2 * ((v1 ^ 0x6F6E2A63 ^ v2) & v27)) & 0x2A6374DE)
                - 1791903121) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v29 = v2 ^ 0xFA5F900C;
  LODWORD(v1) = (v6 >> 18)
              + (v2 ^ 0xFA5F900C)
              - ((2 * ((v6 >> 18) + (v2 ^ 0xFA5F900C))) & 0xB5A19D5A)
              + 1523633837;
  HIDWORD(v6) = v89
              + v27
              - 1357490571
              + ((((v2 ^ 0xA08F5EA1 ^ v1) & v28)
                - ((2 * ((v2 ^ 0xA08F5EA1 ^ v1) & v28)) & 0xF4BF2018)
                - 94400500) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v30 = v1 ^ 0x5AD0CEAD;
  LODWORD(v2) = (v6 >> 12) + (v1 ^ 0x5AD0CEAD) - ((2 * ((v6 >> 12) + (v1 ^ 0x5AD0CEAD))) & 0xEF905B78) + 2009607612;
  HIDWORD(v6) = v94
              + v28
              - 383506285
              + ((((v1 ^ 0x2D18E311 ^ v2) & v29)
                - ((2 * ((v1 ^ 0x2D18E311 ^ v2) & v29)) & 0xB5A19D5A)
                + 1523633837) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v31 = v2 ^ 0x77C82DBC;
  LODWORD(v1) = (v6 >> 27)
              + (v2 ^ 0x77C82DBC)
              - ((2 * ((v6 >> 27) + (v2 ^ 0x77C82DBC))) & 0xABE5A77E)
              - 705506369;
  HIDWORD(v6) = v99
              + v29
              - 1971756413
              + ((((v2 ^ 0xA23AFE03 ^ v1) & v30)
                - ((2 * ((v2 ^ 0xA23AFE03 ^ v1) & v30)) & 0xEF905B78)
                + 2009607612) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v32 = v1 ^ 0xD5F2D3BF;
  LODWORD(v2) = (v6 >> 23) + (v1 ^ 0xD5F2D3BF) - ((2 * ((v6 >> 23) + (v1 ^ 0xD5F2D3BF))) & 0x8E747800) + 1194998784;
  HIDWORD(v6) = v88
              + v30
              - 1139316684
              + ((((v1 ^ 0x92C8EFBF ^ v2) & v31)
                - ((2 * ((v1 ^ 0x92C8EFBF ^ v2) & v31)) & 0xABE5A77E)
                - 705506369) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v33 = v2 ^ 0x473A3C00;
  LODWORD(v1) = (v6 >> 18)
              + (v2 ^ 0x473A3C00)
              - ((2 * ((v6 >> 18) + (v2 ^ 0x473A3C00))) & 0xD56535B8)
              - 357393700;
  HIDWORD(v6) = v93
              + v31
              + 211578778
              + ((((v2 ^ 0xAD88A6DC ^ v1) & v32)
                - ((2 * ((v2 ^ 0xAD88A6DC ^ v1) & v32)) & 0x8E747800)
                + 1194998784) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 12) + (v1 ^ 0xEAB29ADC) - ((2 * ((v6 >> 12) + (v1 ^ 0xEAB29ADC))) & 0xBA8C0F8A) - 582613051;
  HIDWORD(v6) = v98
              + v32
              + 1898333106
              + ((((v1 ^ 0x37F49D19 ^ v2) & v33)
                - ((2 * ((v1 ^ 0x37F49D19 ^ v2) & v33)) & 0xD56535B8)
                - 357393700) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  int v34 = (v6 >> 27)
      + (v2 ^ 0xDD4607C5)
      - 791780593
      - ((2 * ((v6 >> 27) + (v2 ^ 0xDD4607C5))) & 0xA19CC61E);
  HIDWORD(v6) = v87
              + v33
              - 1003356507
              + ((((v2 ^ 0xD8864CA ^ v34) & (v1 ^ 0xEAB29ADC))
                - ((2 * ((v2 ^ 0xD8864CA ^ v34) & (v1 ^ 0xEAB29ADC))) & 0xBA8C0F8A)
                - 582613051) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v35 = (v6 >> 23) + (v34 ^ 0xD0CE630F) - ((2 * ((v6 >> 23) + (v34 ^ 0xD0CE630F))) & 0x38B54982) + 475702465;
  HIDWORD(v6) = v92
              + (v1 ^ 0xEAB29ADC)
              + 783375750
              + ((((v34 ^ 0xCC94C7CE ^ v35) & (v2 ^ 0xDD4607C5))
                - ((2 * ((v34 ^ 0xCC94C7CE ^ v35) & (v2 ^ 0xDD4607C5))) & 0xA19CC61E)
                - 791780593) ^ v34);
  LODWORD(v6) = HIDWORD(v6);
  int v36 = (v6 >> 18) + (v35 ^ 0x1C5AA4C1) - ((2 * ((v6 >> 18) + (v35 ^ 0x1C5AA4C1))) & 0x49C09A0C) - 1528804090;
  HIDWORD(v6) = v97
              + (v2 ^ 0xDD4607C5)
              + 1416406839
              + ((((v35 ^ 0xB8BAE9C7 ^ v36) & (v34 ^ 0xD0CE630F))
                - ((2 * ((v35 ^ 0xB8BAE9C7 ^ v36) & (v34 ^ 0xD0CE630F))) & 0x38B54982)
                + 475702465) ^ v35);
  LODWORD(v6) = HIDWORD(v6);
  int v37 = (v6 >> 12) + (v36 ^ 0xA4E04D06) - ((2 * ((v6 >> 12) + (v36 ^ 0xA4E04D06))) & 0x68F6E068) + 880504884;
  uint64_t v38 = 4 * (~v34 & 0xF);
  int v85 = *(int *)((char *)&v85 + v38);
  *(int *)((char *)&v85 + v38) = v83;
  LODWORD(v38) = v86;
  uint64_t v39 = 4 * (v37 & 0xF ^ 4u);
  int v86 = *(int *)((char *)&v85 + v39);
  *(int *)((char *)&v85 + v39) = v38;
  LODWORD(v38) = v87;
  uint64_t v40 = 4 * (v36 & 0xF ^ 6u);
  unsigned int v87 = *(int *)((char *)&v85 + v40);
  *(int *)((char *)&v85 + v40) = v38;
  uint64_t v41 = 4 * (v35 & 0xF ^ 1u);
  int v42 = v88;
  int v88 = *(int *)((char *)&v85 + v41);
  *(int *)((char *)&v85 + v41) = v42;
  LODWORD(v41) = v89;
  uint64_t v43 = 4 * (v34 >> 4);
  int v89 = *(int *)((char *)&v85 + v43);
  *(int *)((char *)&v85 + v43) = v41;
  LODWORD(v41) = v90;
  uint64_t v44 = 4 * ((v37 >> 4) ^ 3u);
  int v90 = *(int *)((char *)&v85 + v44);
  *(int *)((char *)&v85 + v44) = v41;
  LODWORD(v41) = v91;
  uint64_t v45 = 4 * (v36 >> 4);
  int v91 = *(int *)((char *)&v85 + v45);
  *(int *)((char *)&v85 + v45) = v41;
  LODWORD(v41) = v92;
  uint64_t v46 = 4 * ((v35 >> 4) ^ 0xCu);
  int v92 = *(int *)((char *)&v85 + v46);
  *(int *)((char *)&v85 + v46) = v41;
  HIDWORD(v6) = v90
              + (v34 ^ 0xD0CE630F)
              - 952331281
              + (((v36 ^ 0x909B3D32 ^ v37) - ((2 * (v36 ^ 0x909B3D32 ^ v37)) & 0x38B54982) + 475702465) ^ v35);
  LODWORD(v6) = HIDWORD(v6);
  int v47 = (v6 >> 28) + (v37 ^ 0x347B7034) - ((2 * ((v6 >> 28) + (v37 ^ 0x347B7034))) & 0xA0AC669C) - 799657138;
  int v48 = v94;
  HIDWORD(v6) = v93
              + (v35 ^ 0x1C5AA4C1)
              + 1320440110
              + (((v37 ^ 0xE42D437A ^ v47) - 1528804090 + (~(2 * (v37 ^ 0xE42D437A ^ v47)) | 0xB63F65F3) + 1) ^ v36);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v41) = (v6 >> 21) + (v47 ^ 0xD056334E) - ((2 * ((v6 >> 21) + (v47 ^ 0xD056334E))) & 0x5D24C92E) - 1366137705;
  HIDWORD(v6) = v96
              + (v36 ^ 0xA4E04D06)
              + 887077839
              + (((v41 ^ v47 ^ 0x7EC457D9) - 2 * ((v41 ^ v47 ^ 0x7EC457D9) & 0x347B7036 ^ (v41 ^ v47) & 2) + 880504884) ^ v37);
  LODWORD(v6) = HIDWORD(v6);
  int v49 = v41 ^ 0xAE926497;
  int v50 = (v6 >> 16) + (v41 ^ 0xAE926497) - ((2 * ((v6 >> 16) + (v41 ^ 0xAE926497))) & 0xEAB42F0A) + 1968838533;
  HIDWORD(v6) = v99
              + (v37 ^ 0x347B7034)
              - 987262279
              + (((v41 ^ 0xDBC87312 ^ v50) - ((2 * (v41 ^ 0xDBC87312 ^ v50)) & 0xA0AC669C) - 799657138) ^ v47);
  LODWORD(v6) = HIDWORD(v6);
  int v51 = v50 ^ 0x755A1785;
  int v52 = (v6 >> 9) + (v50 ^ 0x755A1785) - ((2 * ((v6 >> 9) + (v50 ^ 0x755A1785))) & 0xA1F99A28) - 788738796;
  HIDWORD(v6) = v86
              + (v47 ^ 0xD056334E)
              + 1812022513
              + (((v52 ^ v50 ^ 0xA5A6DA91) - 2 * ((v52 ^ v50 ^ 0xA5A6DA91) & 0x2E92649F ^ (v52 ^ v50) & 8) - 1366137705) ^ v41);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v41) = (v6 >> 28) + (v52 ^ 0xD0FCCD14) - ((2 * ((v6 >> 28) + (v52 ^ 0xD0FCCD14))) & 0xD9EF2326) - 319319661;
  HIDWORD(v6) = v89
              + v49
              + 320940630
              + (((v41 ^ v52 ^ 0x3C0B5C87) - 2 * ((v41 ^ v52 ^ 0x3C0B5C87) & 0x755A178D ^ (v41 ^ v52) & 8) + 1968838533) ^ v50);
  LODWORD(v6) = HIDWORD(v6);
  int v53 = v41 ^ 0xECF79193;
  int v54 = (v6 >> 21) + (v41 ^ 0xECF79193) - ((2 * ((v6 >> 21) + (v41 ^ 0xECF79193))) & 0xC0E95FBC) - 529223714;
  HIDWORD(v6) = v92
              + v51
              - 1107450355
              + (((v41 ^ 0xC833E4D ^ v54) - ((2 * (v41 ^ 0xC833E4D ^ v54)) & 0xA1F99A28) - 788738796) ^ v52);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v55 = v54 ^ 0xE074AFDE;
  int v56 = (v6 >> 16) + (v54 ^ 0xE074AFDE) - ((2 * ((v6 >> 16) + (v54 ^ 0xE074AFDE))) & 0xDCEA1160) + 1853163696;
  HIDWORD(v6) = v95
              + (v52 ^ 0xD0FCCD14)
              - 2046683363
              + (((v54 ^ 0x8E01A76E ^ v56) - ((2 * (v54 ^ 0x8E01A76E ^ v56)) & 0xD9EF2326) - 319319661) ^ v41);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = v56 ^ 0x6E7508B0;
  LODWORD(v41) = (v6 >> 9) + (v56 ^ 0x6E7508B0) - ((2 * ((v6 >> 9) + (v56 ^ 0x6E7508B0))) & 0x6EEEF434) + 930576922;
  HIDWORD(v6) = v98
              + v53
              - 270673549
              + (((v56 ^ 0x590272AA ^ v41) - ((2 * (v56 ^ 0x590272AA ^ v41)) & 0xC0E95FBC) - 529223714) ^ v54);
  LODWORD(v6) = HIDWORD(v6);
  int v57 = v41 ^ 0x37777A1A;
  int v58 = (v6 >> 28) + (v41 ^ 0x37777A1A) - ((2 * ((v6 >> 28) + (v41 ^ 0x37777A1A))) & 0x10CE788A) + 140983365;
  HIDWORD(v6) = v85
              + v55
              - 1310489945
              + (((v41 ^ 0x3F10465F ^ v58) - ((2 * (v41 ^ 0x3F10465F ^ v58)) & 0xDCEA1160) + 1853163696) ^ v56);
  LODWORD(v6) = HIDWORD(v6);
  int v59 = v58 ^ 0x8673C45;
  int v60 = (v6 >> 21) + (v58 ^ 0x8673C45) - ((2 * ((v6 >> 21) + (v58 ^ 0x8673C45))) & 0x8A57D9AE) - 986977065;
  uint64_t result = v87;
  HIDWORD(v6) = v88
              + v2
              - 1674474702
              + (((v60 ^ v58 ^ 0xCD4CD092) - 2 * ((v60 ^ v58 ^ 0xCD4CD092) & 0x37777A1F ^ (v60 ^ v58) & 5) + 930576922) ^ v41);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v41) = (v6 >> 16) + (v60 ^ 0xC52BECD7) - ((2 * ((v6 >> 16) + (v60 ^ 0xC52BECD7))) & 0xFF403980) - 6284096;
  HIDWORD(v6) = v91
              + v57
              - 875923534
              + (((v60 ^ 0x3A8BF017 ^ v41) - ((2 * (v60 ^ 0x3A8BF017 ^ v41)) & 0x10CE788A) + 140983365) ^ v58);
  LODWORD(v6) = HIDWORD(v6);
  int v62 = v41 ^ 0xFFA01CC0;
  int v63 = (v6 >> 9) + (v41 ^ 0xFFA01CC0) - ((2 * ((v6 >> 9) + (v41 ^ 0xFFA01CC0))) & 0xBE5191EA) + 1596508405;
  HIDWORD(v6) = v94
              + v59
              - 1592317210
              + (((v41 ^ 0xA088D435 ^ v63) - ((2 * (v41 ^ 0xA088D435 ^ v63)) & 0x8A57D9AE) - 986977065) ^ v60);
  LODWORD(v6) = HIDWORD(v6);
  int v64 = v63 ^ 0x5F28C8F5;
  int v65 = (v6 >> 28) + (v63 ^ 0x5F28C8F5) - ((2 * ((v6 >> 28) + (v63 ^ 0x5F28C8F5))) & 0xF9498866) - 56310733;
  HIDWORD(v6) = v97
              + (v60 ^ 0xC52BECD7)
              - 1373768558
              + (((v65 ^ v63 ^ 0xA38C0CC6) - 2 * ((v65 ^ v63 ^ 0xA38C0CC6) & 0x7FA01CC9 ^ (v65 ^ v63) & 9) - 6284096) ^ v41);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = v65 ^ 0xFCA4C433;
  LODWORD(v41) = (v6 >> 21) + (v65 ^ 0xFCA4C433) - ((2 * ((v6 >> 21) + (v65 ^ 0xFCA4C433))) & 0xDEF91E3C) + 1870434078;
  HIDWORD(v6) = v100
              + v62
              - 421210203
              + (((v65 ^ 0x93D84B2D ^ v41) - ((2 * (v65 ^ 0x93D84B2D ^ v41)) & 0xBE5191EA) + 1596508405) ^ v63);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v46) = v41 ^ 0x6F7C8F1E;
  int v66 = (v6 >> 16) + (v41 ^ 0x6F7C8F1E) - ((2 * ((v6 >> 16) + (v41 ^ 0x6F7C8F1E))) & 0x712EA138) + 949440668;
  HIDWORD(v6) = v87
              + v64
              - 1947291374
              + (((v66 ^ v41 ^ 0x57EBDF82) - 2 * ((v66 ^ v41 ^ 0x57EBDF82) & 0x7CA4C437 ^ (v66 ^ v41) & 4) - 56310733) ^ v65);
  LODWORD(v6) = HIDWORD(v6);
  int v67 = (v6 >> 9) + (v66 ^ 0x3897509C) - ((2 * ((v6 >> 9) + (v66 ^ 0x3897509C))) & 0x3C1F35D0) - 1643144472;
  unsigned int v68 = v67 ^ 0x9E0F9AE8;
  HIDWORD(v6) = v85
              + v2
              - 1150583567
              + (((v68 | v41 ^ 0x908370E1) - ((2 * (v68 | v41 ^ 0x908370E1)) & 0x712EA138) + 949440668) ^ v66);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v41) = (v6 >> 26) + v68 - ((2 * ((v6 >> 26) + v68)) & 0xB43529C8) + 1511691492;
  int v69 = v41 ^ 0x5A1A94E4;
  HIDWORD(v6) = v92
              + v46
              + 174938692
              + (((v41 ^ 0x5A1A94E4 | v66 ^ 0xC768AF63)
                - ((2 * (v41 ^ 0x5A1A94E4 | v66 ^ 0xC768AF63)) & 0x3C1F35D0)
                - 1643144472) ^ v67);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v46) = (v6 >> 22) + (v41 ^ 0x5A1A94E4) - ((2 * ((v6 >> 22) + (v41 ^ 0x5A1A94E4))) & 0x299F51F4) - 1798330118;
  int v70 = v67 ^ 0x61F06517;
  int v71 = v46 ^ 0x94CFA8FA;
  HIDWORD(v6) = v99
              + (v66 ^ 0x3897509C)
              + 1926659668
              + (((v71 | v70) - ((2 * (v71 | v70)) & 0xB43529C8) + 1511691492) ^ v41);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 17) + v71 - ((2 * ((v6 >> 17) + v71)) & 0x6FD4CC00) - 1209375232;
  unsigned int v72 = v2 ^ 0xB7EA6600;
  HIDWORD(v6) = v90
              + v68
              - 1009386778
              + (((v72 | v41 ^ 0xA5E56B1B) - ((2 * (v72 | v41 ^ 0xA5E56B1B)) & 0x299F51F4) - 1798330118) ^ v46);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v41) = (v6 >> 11) + v72 - ((2 * ((v6 >> 11) + v72)) & 0xE69526A2) + 1934267217;
  int v73 = v41 ^ 0x734A9351;
  HIDWORD(v6) = v97
              + v69
              + 748532848
              + (((v41 ^ 0x734A9351 | v46 ^ 0x6B305705)
                - ((2 * (v41 ^ 0x734A9351 | v46 ^ 0x6B305705)) & 0x6FD4CC00)
                - 1209375232) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v46) = (v6 >> 26) + (v41 ^ 0x734A9351) - ((2 * ((v6 >> 26) + (v41 ^ 0x734A9351))) & 0x6A72A73E) + 892949407;
  int v74 = v46 ^ 0x3539539F;
  HIDWORD(v6) = v88
              + v71
              + 1448027967
              + (((v46 ^ 0x3539539F | v2 ^ 0x481599FF)
                - ((2 * (v46 ^ 0x3539539F | v2 ^ 0x481599FF)) & 0xE69526A2)
                + 1934267217) ^ v41);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 22) + (v46 ^ 0x3539539F) - ((2 * ((v6 >> 22) + (v46 ^ 0x3539539F))) & 0xE6AF1D8A) + 1935118021;
  unsigned int v75 = v2 ^ 0x73578EC5;
  HIDWORD(v6) = v95
              + v72
              - 953004246
              + (((v75 | v41 ^ 0x8CB56CAE) - ((2 * (v75 | v41 ^ 0x8CB56CAE)) & 0x6A72A73E) + 892949407) ^ v46);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v41) = (v6 >> 17) + v75 - ((2 * ((v6 >> 17) + v75)) & 0xE6CA1F42) - 211480671;
  int v76 = v41 ^ 0xF3650FA1;
  HIDWORD(v6) = v86
              + v73
              + 1288091774
              + (((v76 | v46 ^ 0xCAC6AC60) - ((2 * (v76 | v46 ^ 0xCAC6AC60)) & 0xE6AF1D8A) + 1935118021) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v46) = (v6 >> 11) + v76 + 826957964 + (~(2 * ((v6 >> 11) + v76)) | 0x9D6B3EE7) + 1;
  int v77 = v46 ^ 0x314A608C;
  HIDWORD(v6) = v93
              + v74
              + 921360636
              + (((v77 | v2 ^ 0x8CA8713A)
                - ((2 * (v77 | v2 ^ 0x8CA8713A)) & 0xE6CA1F42)
                - 211480671) ^ v41);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 26) + v77 - ((2 * ((v6 >> 26) + v77)) & 0xE670611A) + 1933062285;
  unsigned int v78 = v2 ^ 0x7338308D;
  HIDWORD(v6) = v100
              + v75
              - 982564467
              + (((v78 | v41 ^ 0xC9AF05E) - ((2 * (v78 | v41 ^ 0xC9AF05E)) & 0x6294C118) + 826957964) ^ v46);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v41) = (v6 >> 22) + v78 - ((2 * ((v6 >> 22) + v78)) & 0x91FD26E2) - 922840207;
  int v79 = v41 ^ 0xC8FE9371;
  HIDWORD(v6) = v91
              + v76
              + 1782816193
              + (((v41 ^ 0xC8FE9371 | v46 ^ 0xCEB59F73)
                - ((2 * (v41 ^ 0xC8FE9371 | v46 ^ 0xCEB59F73)) & 0xE670611A)
                + 1933062285) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v46) = (v6 >> 17) + (v41 ^ 0xC8FE9371) - ((2 * ((v6 >> 17) + (v41 ^ 0xC8FE9371))) & 0x53289810) - 1449899000;
  int v80 = v46 ^ 0xA9944C08;
  HIDWORD(v6) = v98
              + v77
              + 357198926
              + (((v46 ^ 0xA9944C08 | v2 ^ 0x8CC7CF72)
                - ((2 * (v46 ^ 0xA9944C08 | v2 ^ 0x8CC7CF72)) & 0x91FD26E2)
                - 922840207) ^ v41);
  LODWORD(v6) = HIDWORD(v6);
  int v81 = (v6 >> 11) + (v46 ^ 0xA9944C08) - ((2 * ((v6 >> 11) + (v46 ^ 0xA9944C08))) & 0xB36C51E8) + 1505110260;
  int v82 = v81 ^ 0x59B628F4;
  HIDWORD(v6) = v89
              + (v2 ^ 0x7338308D)
              - 1097475793
              + (((v82 | v41 ^ 0x37016C8E) - ((2 * (v82 | v41 ^ 0x37016C8E)) & 0x53289810) - 1449899000) ^ v46);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v41) = (v6 >> 26) + v82 - ((2 * ((v6 >> 26) + v82)) & 0x43B17916) + 567852171;
  HIDWORD(v6) = v96
              + v79
              - 2072163102
              + (((v41 ^ 0x21D8BC8B | v46 ^ 0x566BB3F7)
                - ((2 * (v41 ^ 0x21D8BC8B | v46 ^ 0x566BB3F7)) & 0xB36C51E8)
                + 1505110260) ^ v81);
  LODWORD(v6) = HIDWORD(v6);
  *(_DWORD *)(v84 - 0x47DB7942A26B0BD6) += v41 ^ 0x21D8BC8B;
  LODWORD(v46) = ((2 * ((v6 >> 22) + (v41 ^ 0x21D8BC8B))) & 0xC7AFFF7E)
               + (((v6 >> 22) + (v41 ^ 0x21D8BC8B)) ^ 0x63D7FFBF)
               - 1675100095;
  HIDWORD(v6) = result
              + v80
              - 233165464
              + (((v46 | v81 ^ 0xA649D70B) - ((2 * (v46 | v81 ^ 0xA649D70B)) & 0x43B17916) + 567852171) ^ v41);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = v46 + (v6 >> 17);
  HIDWORD(v6) = v48 + (v81 ^ 0x59B628F4) - 1295438274 + ((v2 | v41 ^ 0xDE274374) ^ v46);
  LODWORD(v6) = HIDWORD(v6);
  *(_DWORD *)(v84 - 0x47DB7942A26B0BD2) += v2 + (v6 >> 11);
  *(_DWORD *)(v84 - 0x47DB7942A26B0BCELL) += v2;
  *(_DWORD *)(v84 - 0x47DB7942A26B0BCALL) += v46;
  return result;
}

uint64_t sub_1D0B0B394@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 4) = *(_DWORD *)(*(void *)(v3 + 8 * (a2 - 973)) + 4 * v2 - 4);
  return result;
}

uint64_t sub_1D0B0B3AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v6 = a1 - 1;
  *(unsigned char *)(v4 + v6) = ((v1 - 112) ^ 0xBA) * (v1 - 95);
  return (*(uint64_t (**)(void))(v5 + 8 * ((102 * (v6 == (v3 ^ 0x270))) ^ v2)))();
}

uint64_t sub_1D0B0B3F4(uint64_t a1)
{
  uint64_t v105 = *MEMORY[0x1E4F143B8];
  int v2 = *(_DWORD **)(a1 + 8);
  uint64_t v1 = *(void *)(a1 + 16);
  unsigned int v89 = (*v2 ^ 0xEFB3753A) + 2078277576 + ((2 * *v2) & 0xDF66EA74);
  unsigned int v90 = (v2[1] ^ 0xEFB3753A) + 2078277576 + ((2 * v2[1]) & 0xDF66EA74);
  unsigned int v91 = (v2[2] ^ 0xEFB3753A) + 2078277576 + ((2 * v2[2]) & 0xDF66EA74);
  unsigned int v92 = (v2[3] ^ 0xEFB3753A) + 2078277576 + ((2 * v2[3]) & 0xDF66EA74);
  unsigned int v93 = (v2[4] ^ 0xEFB3753A) + 2078277576 + ((2 * v2[4]) & 0xDF66EA74);
  unsigned int v94 = (v2[5] ^ 0xEFB3753A) + 2078277576 + ((2 * v2[5]) & 0xDF66EA74);
  unsigned int v95 = (v2[6] ^ 0xEFB3753A) + 2078277576 + ((2 * v2[6]) & 0xDF66EA74);
  unsigned int v96 = (v2[7] ^ 0xEFB3753A) + 2078277576 + ((2 * v2[7]) & 0xDF66EA74);
  unsigned int v97 = (v2[8] ^ 0xEFB3753A) + 2078277576 + ((2 * v2[8]) & 0xDF66EA74);
  unsigned int v98 = (v2[9] ^ 0xEFB3753A) + 2078277576 + ((2 * v2[9]) & 0xDF66EA74);
  unsigned int v99 = (v2[10] ^ 0xEFB3753A) + 2078277576 + ((2 * v2[10]) & 0xDF66EA74);
  unsigned int v100 = (v2[11] ^ 0xEFB3753A) + 2078277576 + ((2 * v2[11]) & 0xDF66EA74);
  unsigned int v101 = (v2[12] ^ 0xEFB3753A) + 2078277576 + ((2 * v2[12]) & 0xDF66EA74);
  unsigned int v102 = (v2[13] ^ 0xEFB3753A) + 2078277576 + ((2 * v2[13]) & 0xDF66EA74);
  unsigned int v103 = (v2[14] ^ 0xEFB3753A) + 2078277576 + ((2 * v2[14]) & 0xDF66EA74);
  unsigned int v104 = (v2[15] ^ 0xEFB3753A) + 2078277576 + ((2 * v2[15]) & 0xDF66EA74);
  uint64_t v88 = v1;
  int v3 = *(_DWORD *)(v1 - 0x662872D8928A04ALL);
  int v4 = *(_DWORD *)(v1 - 0x662872D8928A046);
  int v5 = *(_DWORD *)(v1 - 0x662872D8928A042);
  HIDWORD(v6) = *(_DWORD *)(v1 - 0x662872D8928A04ELL) + v89 + 1809264502 + (v4 & v3 | v5 & ~v3);
  LODWORD(v6) = HIDWORD(v6);
  int v7 = (v6 >> 25) + v3 - ((2 * ((v6 >> 25) + v3)) & 0x920C1FD2) + 1225134057;
  HIDWORD(v6) = v5 + v90 + 2100576852 + (v3 & (v7 ^ 0x49060FE9) | v4 & ~(v7 ^ 0x49060FE9));
  LODWORD(v6) = HIDWORD(v6);
  int v8 = (v6 >> 20) + (v7 ^ 0x49060FE9) - ((2 * ((v6 >> 20) + (v7 ^ 0x49060FE9))) & 0x6D54608E) - 1230360505;
  HIDWORD(v6) = v4 + v91 - 1198720039 + ((v8 ^ 0xB6AA3047) & (v7 ^ (v3 - ((2 * v3) & 0x920C1FD2) + 1225134057)) ^ v3);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 15) + (v8 ^ 0xB6AA3047) - ((2 * ((v6 >> 15) + (v8 ^ 0xB6AA3047))) & 0xD6C93860) + 1801755696;
  int v9 = v1 ^ 0x6B649C30;
  HIDWORD(v6) = v3
              + v92
              + 1445616108
              + ((((v1 ^ 0x6B649C30) & (v7 ^ 0xFFAC3FAE ^ v8))
                - ((2 * ((v1 ^ 0x6B649C30) & (v7 ^ 0xFFAC3FAE ^ v8))) & 0x920C1FD2)
                + 1225134057) ^ v7);
  LODWORD(v6) = HIDWORD(v6);
  int v10 = (v6 >> 10) + (v1 ^ 0x6B649C30) - ((2 * ((v6 >> 10) + (v1 ^ 0x6B649C30))) & 0x83D9B45C) + 1106041390;
  HIDWORD(v6) = v93
              + (v7 ^ 0x49060FE9)
              - 1981244755
              + ((((v10 ^ 0x41ECDA2E) & (v8 ^ 0xDDCEAC77 ^ v1))
                - ((2 * ((v10 ^ 0x41ECDA2E) & (v8 ^ 0xDDCEAC77 ^ v1))) & 0x6D54608E)
                - 1230360505) ^ v8);
  LODWORD(v6) = HIDWORD(v6);
  int v11 = (v6 >> 25) + (v10 ^ 0x41ECDA2E) - ((2 * ((v6 >> 25) + (v10 ^ 0x41ECDA2E))) & 0xD9AD8B3C) - 321469026;
  LODWORD(v2) = v11 ^ 0xECD6C59E;
  HIDWORD(v6) = v94
              + (v8 ^ 0xB6AA3047)
              - 604745432
              + ((((v11 ^ 0xECD6C59E) & (v1 ^ 0x2A88461E ^ v10))
                + 1801755696
                + (~(2 * ((v11 ^ 0xECD6C59E) & (v1 ^ 0x2A88461E ^ v10))) | 0x2936C79F)
                + 1) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 20) + (v11 ^ 0xECD6C59E) - ((2 * ((v6 >> 20) + (v11 ^ 0xECD6C59E))) & 0x1A7EAFB4) - 1925228582;
  int v12 = v1 ^ 0x8D3F57DA;
  HIDWORD(v6) = v95
              + v9
              + 1016910097
              + ((((v1 ^ 0x8D3F57DA) & (v10 ^ 0xAD3A1FB0 ^ v11))
                - ((2 * ((v1 ^ 0x8D3F57DA) & (v10 ^ 0xAD3A1FB0 ^ v11))) & 0x83D9B45C)
                + 1106041390) ^ v10);
  LODWORD(v6) = HIDWORD(v6);
  int v13 = (v6 >> 15) + (v1 ^ 0x8D3F57DA) - ((2 * ((v6 >> 15) + (v1 ^ 0x8D3F57DA))) & 0x66E4078A) + 863110085;
  HIDWORD(v6) = v96
              + (v10 ^ 0x41ECDA2E)
              - 1850531841
              + ((((v13 ^ 0x337203C5) & (v11 ^ 0x61E99244 ^ v1))
                - 321469026
                + (~(2 * ((v13 ^ 0x337203C5) & (v11 ^ 0x61E99244 ^ v1))) | 0x265274C3)
                + 1) ^ v11);
  LODWORD(v6) = HIDWORD(v6);
  int v14 = (v6 >> 10) + (v13 ^ 0x337203C5) - ((2 * ((v6 >> 10) + (v13 ^ 0x337203C5))) & 0x714B88E6) - 1197095821;
  unsigned int v15 = v14 ^ 0xB8A5C473;
  HIDWORD(v6) = v97
              + v2
              - 34790442
              + ((((v14 ^ 0xB8A5C473) & (v1 ^ 0xBE4D541F ^ v13))
                - ((2 * ((v14 ^ 0xB8A5C473) & (v1 ^ 0xBE4D541F ^ v13))) & 0x1A7EAFB4)
                - 1925228582) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 25) + (v14 ^ 0xB8A5C473) - ((2 * ((v6 >> 25) + (v14 ^ 0xB8A5C473))) & 0xABAF05C0) + 1440187104;
  int v16 = v1 ^ 0x55D782E0;
  HIDWORD(v6) = v98
              + v12
              + 531727021
              + ((((v1 ^ 0x55D782E0) & (v13 ^ 0x8BD7C7B6 ^ v14))
                - ((2 * ((v1 ^ 0x55D782E0) & (v13 ^ 0x8BD7C7B6 ^ v14))) & 0x66E4078A)
                + 863110085) ^ v13);
  LODWORD(v6) = HIDWORD(v6);
  int v17 = (v6 >> 20) + (v1 ^ 0x55D782E0) - ((2 * ((v6 >> 20) + (v1 ^ 0x55D782E0))) & 0x2250A22E) + 287854871;
  int v18 = v17 ^ 0x11285117;
  HIDWORD(v6) = v99
              + (v13 ^ 0x337203C5)
              - 1804867921
              + ((((v17 ^ 0x11285117) & (v14 ^ 0xED724693 ^ v1))
                - ((2 * ((v17 ^ 0x11285117) & (v14 ^ 0xED724693 ^ v1))) & 0x714B88E6)
                - 1197095821) ^ v14);
  LODWORD(v6) = HIDWORD(v6);
  int v19 = (v6 >> 15) + (v17 ^ 0x11285117) - ((2 * ((v6 >> 15) + (v17 ^ 0x11285117))) & 0x5349D338) + 698673564;
  int v20 = v19 ^ 0x29A4E99C;
  HIDWORD(v6) = v100
              + v15
              + 499737276
              + ((((v19 ^ 0x29A4E99C) & (v1 ^ 0x44FFD3F7 ^ v17))
                - ((2 * ((v19 ^ 0x29A4E99C) & (v1 ^ 0x44FFD3F7 ^ v17))) & 0xABAF05C0)
                + 1440187104) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 10) + (v19 ^ 0x29A4E99C) - ((2 * ((v6 >> 10) + (v19 ^ 0x29A4E99C))) & 0x75B17732) - 1160201319;
  int v21 = v1 ^ 0xBAD8BB99;
  HIDWORD(v6) = v101
              + v16
              - 222176
              + ((((v1 ^ 0xBAD8BB99) & (v17 ^ 0x388CB88B ^ v19))
                - ((2 * ((v1 ^ 0xBAD8BB99) & (v17 ^ 0x388CB88B ^ v19))) & 0x2250A22E)
                + 287854871) ^ v17);
  LODWORD(v6) = HIDWORD(v6);
  int v22 = (v6 >> 25) + (v1 ^ 0xBAD8BB99) - ((2 * ((v6 >> 25) + (v1 ^ 0xBAD8BB99))) & 0x3DF7524A) - 1627674331;
  HIDWORD(v6) = v102
              + v18
              - 1845166959
              + ((((v22 ^ 0x9EFBA925) & (v19 ^ 0x937C5205 ^ v1))
                - ((2 * ((v22 ^ 0x9EFBA925) & (v19 ^ 0x937C5205 ^ v1))) & 0x5349D338)
                + 698673564) ^ v19);
  LODWORD(v6) = HIDWORD(v6);
  int v23 = (v6 >> 20) + (v22 ^ 0x9EFBA925) - 135115585 + (~(2 * ((v6 >> 20) + (v22 ^ 0x9EFBA925))) | 0x101B6681) + 1;
  unsigned int v24 = v23 ^ 0xF7F24CBF;
  HIDWORD(v6) = v103
              + v20
              + 988139148
              + ((((v23 ^ 0xF7F24CBF) & (v1 ^ 0x242312BC ^ v22))
                - ((2 * ((v23 ^ 0xF7F24CBF) & (v1 ^ 0x242312BC ^ v22))) & 0x75B17732)
                - 1160201319) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 15) + (v23 ^ 0xF7F24CBF) - ((2 * ((v6 >> 15) + (v23 ^ 0xF7F24CBF))) & 0x4B2A7814) + 630537226;
  int v25 = v1 ^ 0x25953C0A;
  HIDWORD(v6) = v104
              + v21
              - 568290529
              + ((((v1 ^ 0x25953C0A) & (v22 ^ 0x6909E59A ^ v23))
                - ((2 * ((v1 ^ 0x25953C0A) & (v22 ^ 0x6909E59A ^ v23))) & 0x3DF7524A)
                - 1627674331) ^ v22);
  LODWORD(v6) = HIDWORD(v6);
  int v26 = (v6 >> 10) + (v1 ^ 0x25953C0A) - ((2 * ((v6 >> 10) + (v1 ^ 0x25953C0A))) & 0xCECD8DAA) + 1734788821;
  HIDWORD(v6) = v90
              + (v22 ^ 0x9EFBA925)
              - 1970622368
              + ((((v1 ^ 0x42F3FADF ^ v26) & v24) - ((2 * ((v1 ^ 0x42F3FADF ^ v26) & v24)) & 0x4B2A7814) + 630537226) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = v26 ^ 0x6766C6D5;
  LODWORD(v1) = (v6 >> 27) + (v26 ^ 0x6766C6D5) - ((2 * ((v6 >> 27) + (v26 ^ 0x6766C6D5))) & 0x5C78373A) - 1371792483;
  HIDWORD(v6) = v95
              + v24
              + 1420639806
              + ((((v26 ^ 0xC95ADD48 ^ v1) & v25) - ((2 * ((v26 ^ 0xC95ADD48 ^ v1) & v25)) & 0xCECD8DAA) + 1734788821) ^ v26);
  LODWORD(v6) = HIDWORD(v6);
  int v27 = v1 ^ 0xAE3C1B9D;
  int v28 = (v6 >> 23) + (v1 ^ 0xAE3C1B9D) - ((2 * ((v6 >> 23) + (v1 ^ 0xAE3C1B9D))) & 0xBABDF060) - 580978640;
  HIDWORD(v6) = v100
              + v25
              - 1161108145
              + ((((v1 ^ 0x7362E3AD ^ v28) & v2)
                - 1371792483
                + (~(2 * ((v1 ^ 0x7362E3AD ^ v28) & v2)) | 0xA387C8C5)
                + 1) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v29 = v28 ^ 0xDD5EF830;
  LODWORD(v1) = (v6 >> 18) + (v28 ^ 0xDD5EF830) - ((2 * ((v6 >> 18) + (v28 ^ 0xDD5EF830))) & 0xA85D7972) + 1412349113;
  HIDWORD(v6) = v89
              + v2
              + 2116244136
              + ((((v28 ^ 0x89704489 ^ v1) & v27) - ((2 * ((v28 ^ 0x89704489 ^ v1) & v27)) & 0xBABDF060) - 580978640) ^ v28);
  LODWORD(v6) = HIDWORD(v6);
  int v30 = v1 ^ 0x542EBCB9;
  LODWORD(v2) = (v6 >> 12) + (v1 ^ 0x542EBCB9) - 135639325 + (~(2 * ((v6 >> 12) + (v1 ^ 0x542EBCB9))) | 0x102B6239) + 1;
  HIDWORD(v6) = v94
              + v27
              + 1788582747
              + ((((v1 ^ 0xA3C4F25A ^ v2) & v29)
                - ((2 * ((v1 ^ 0xA3C4F25A ^ v2) & v29)) & 0xA85D7972)
                + 1412349113) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v31 = v2 ^ 0xF7EA4EE3;
  LODWORD(v1) = (v6 >> 27)
              + (v2 ^ 0xF7EA4EE3)
              - ((2 * ((v6 >> 27) + (v2 ^ 0xF7EA4EE3))) & 0xD567584A)
              + 1790159909;
  HIDWORD(v6) = v99
              + v29
              - 1766809775
              + ((((v2 ^ 0x9D59E2C6 ^ v1) & v30)
                - ((2 * ((v2 ^ 0x9D59E2C6 ^ v1) & v30)) & 0xEFD49DC6)
                - 135639325) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v32 = v1 ^ 0x6AB3AC25;
  LODWORD(v2) = (v6 >> 23) + (v1 ^ 0x6AB3AC25) - ((2 * ((v6 >> 23) + (v1 ^ 0x6AB3AC25))) & 0x8FD77318) - 940852852;
  HIDWORD(v6) = v104
              + v30
              + 1829663103
              + ((((v1 ^ 0xAD5815A9 ^ v2) & v31)
                - ((2 * ((v1 ^ 0xAD5815A9 ^ v2) & v31)) & 0xD567584A)
                + 1790159909) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v33 = v2 ^ 0xC7EBB98C;
  LODWORD(v1) = (v6 >> 18)
              + (v2 ^ 0xC7EBB98C)
              - ((2 * ((v6 >> 18) + (v2 ^ 0xC7EBB98C))) & 0xC1C3D942)
              - 522064735;
  HIDWORD(v6) = v93
              + v31
              + 2084603590
              + ((((v2 ^ 0x270A552D ^ v1) & v32)
                - ((2 * ((v2 ^ 0x270A552D ^ v1) & v32)) & 0x8FD77318)
                - 940852852) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v34 = v1 ^ 0xE0E1ECA1;
  LODWORD(v2) = (v6 >> 12) + (v1 ^ 0xE0E1ECA1) - ((2 * ((v6 >> 12) + (v1 ^ 0xE0E1ECA1))) & 0x273C2D50) - 1818356056;
  HIDWORD(v6) = v98
              + v32
              - 1236379420
              + ((((v1 ^ 0x737FFA09 ^ v2) & v33)
                - ((2 * ((v1 ^ 0x737FFA09 ^ v2) & v33)) & 0xC1C3D942)
                - 522064735) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v35 = v2 ^ 0x939E16A8;
  LODWORD(v1) = (v6 >> 27)
              + (v2 ^ 0x939E16A8)
              - ((2 * ((v6 >> 27) + (v2 ^ 0x939E16A8))) & 0xB8659E00)
              - 600649984;
  HIDWORD(v6) = v103
              + v33
              + 1470337748
              + ((((v2 ^ 0x4FACD9A8 ^ v1) & v34)
                - ((2 * ((v2 ^ 0x4FACD9A8 ^ v1) & v34)) & 0x273C2D50)
                - 1818356056) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v36 = v1 ^ 0xDC32CF00;
  LODWORD(v2) = (v6 >> 23) + (v1 ^ 0xDC32CF00) - ((2 * ((v6 >> 23) + (v1 ^ 0xDC32CF00))) & 0x776B253A) - 1145728355;
  HIDWORD(v6) = v92
              + v34
              - 1992189819
              + ((((v1 ^ 0x67875D9D ^ v2) & v35)
                - ((2 * ((v1 ^ 0x67875D9D ^ v2) & v35)) & 0xB8659E00)
                - 600649984) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v37 = v2 ^ 0xBBB5929D;
  LODWORD(v1) = (v6 >> 18)
              + (v2 ^ 0xBBB5929D)
              - ((2 * ((v6 >> 18) + (v2 ^ 0xBBB5929D))) & 0x8D3CDF54)
              - 962695254;
  HIDWORD(v6) = v97
              + v35
              - 641294357
              + ((((v2 ^ 0x7D2BFD37 ^ v1) & v36)
                - ((2 * ((v2 ^ 0x7D2BFD37 ^ v1) & v36)) & 0x776B253A)
                - 1145728355) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 12) + (v1 ^ 0xC69E6FAA) - ((2 * ((v6 >> 12) + (v1 ^ 0xC69E6FAA))) & 0x11B093AC) - 1999091242;
  HIDWORD(v6) = v102
              + v36
              + 1045459971
              + ((((v1 ^ 0x4E46267C ^ v2) & v37)
                - ((2 * ((v1 ^ 0x4E46267C ^ v2) & v37)) & 0x8D3CDF54)
                - 962695254) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v38 = (v6 >> 27)
      + (v2 ^ 0x88D849D6)
      - ((2 * ((v6 >> 27) + (v2 ^ 0x88D849D6))) & 0x5D471628)
      - 1365013740;
  HIDWORD(v6) = v91
              + v37
              - 1856229642
              + ((((v2 ^ 0x267BC2C2 ^ v38) & (v1 ^ 0xC69E6FAA))
                - ((2 * ((v2 ^ 0x267BC2C2 ^ v38) & (v1 ^ 0xC69E6FAA))) & 0x11B093AC)
                - 1999091242) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  int v39 = (v6 >> 23) + (v38 ^ 0xAEA38B14) - ((2 * ((v6 >> 23) + (v38 ^ 0xAEA38B14))) & 0x94245E4C) - 904777946;
  HIDWORD(v6) = v96
              + (v1 ^ 0xC69E6FAA)
              - 69497385
              + ((((v38 ^ 0x64B1A432 ^ v39) & (v2 ^ 0x88D849D6))
                - ((2 * ((v38 ^ 0x64B1A432 ^ v39) & (v2 ^ 0x88D849D6))) & 0x5D471628)
                - 1365013740) ^ v38);
  LODWORD(v6) = HIDWORD(v6);
  int v40 = (v6 >> 18) + (v39 ^ 0xCA122F26) - ((2 * ((v6 >> 18) + (v39 ^ 0xCA122F26))) & 0x6EB9E1AA) - 1218645803;
  HIDWORD(v6) = v101
              + (v2 ^ 0x88D849D6)
              + 563533704
              + ((((v39 ^ 0x7D4EDFF3 ^ v40) & (v38 ^ 0xAEA38B14))
                - ((2 * ((v39 ^ 0x7D4EDFF3 ^ v40) & (v38 ^ 0xAEA38B14))) & 0x94245E4C)
                - 904777946) ^ v39);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v41 = (v6 >> 12) + (v40 ^ 0xB75CF0D5) - ((2 * ((v6 >> 12) + (v40 ^ 0xB75CF0D5))) & 0xDE40D9AA) - 283087659;
  uint64_t v42 = 4 * (v38 & 0xF ^ 4);
  LODWORD(v2) = *(unsigned int *)((char *)&v89 + v42);
  uint64_t v43 = 4 * (v41 & 0xF ^ 5);
  *(unsigned int *)((char *)&v89 + v42) = *(unsigned int *)((char *)&v89 + v43);
  *(unsigned int *)((char *)&v89 + v43) = v2;
  uint64_t v44 = 4 * (v40 & 0xF ^ 5u);
  LODWORD(v2) = *(unsigned int *)((char *)&v89 + v44);
  uint64_t v45 = 4 * (v39 & 0xF ^ 6u);
  *(unsigned int *)((char *)&v89 + v44) = *(unsigned int *)((char *)&v89 + v45);
  *(unsigned int *)((char *)&v89 + v45) = v2;
  uint64_t v46 = 4 * ((v38 >> 4) ^ 1u);
  LODWORD(v2) = *(unsigned int *)((char *)&v89 + v46);
  uint64_t v47 = 4 * ((v41 >> 4) ^ 0xDu);
  *(unsigned int *)((char *)&v89 + v46) = *(unsigned int *)((char *)&v89 + v47);
  *(unsigned int *)((char *)&v89 + v47) = v2;
  uint64_t v48 = 4 * ((v38 >> 8) & 0xF ^ 0xB);
  LODWORD(v2) = *(unsigned int *)((char *)&v89 + v48);
  uint64_t v49 = 4 * ((v41 >> 8) & 0xF ^ 0xC);
  *(unsigned int *)((char *)&v89 + v48) = *(unsigned int *)((char *)&v89 + v49);
  *(unsigned int *)((char *)&v89 + v49) = v2;
  uint64_t v50 = 4 * (((unsigned __int16)v38 >> 12) ^ 8u);
  LODWORD(v2) = *(unsigned int *)((char *)&v89 + v50);
  uint64_t v51 = 4
      * (((unsigned __int16)((v6 >> 12) + (v40 ^ 0xF0D5) - ((2 * ((v6 >> 12) + (v40 ^ 0xF0D5))) & 0xD9AA) + 27861) >> 12) ^ 6u);
  *(unsigned int *)((char *)&v89 + v50) = *(unsigned int *)((char *)&v89 + v51);
  *(unsigned int *)((char *)&v89 + v51) = v2;
  HIDWORD(v6) = v94
              + (v38 ^ 0xAEA38B14)
              - 1805204416
              + (((v40 ^ 0x587C9C00 ^ v41) - ((2 * (v40 ^ 0x587C9C00 ^ v41)) & 0x94245E4C) - 904777946) ^ v39);
  LODWORD(v6) = HIDWORD(v6);
  int v52 = (v6 >> 28) + (v41 ^ 0xEF206CD5) - ((2 * ((v6 >> 28) + (v41 ^ 0xEF206CD5))) & 0xA0997DA6) + 1347206867;
  unsigned int v53 = v98;
  HIDWORD(v6) = v97
              + (v39 ^ 0xCA122F26)
              + 467566975
              + (((v41 ^ 0xBF6CD206 ^ v52) - ((2 * (v41 ^ 0xBF6CD206 ^ v52)) & 0x6EB9E1AA) - 1218645803) ^ v40);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v50) = (v6 >> 21) + (v52 ^ 0x504CBED3) - ((2 * ((v6 >> 21) + (v52 ^ 0x504CBED3))) & 0x65EE8AE2) - 1292417679;
  HIDWORD(v6) = v100
              + (v40 ^ 0xB75CF0D5)
              + 34204704
              + (((v52 ^ 0xE2BBFBA2 ^ v50) - ((2 * (v52 ^ 0xE2BBFBA2 ^ v50)) & 0xDE40D9AA) - 283087659) ^ v41);
  LODWORD(v6) = HIDWORD(v6);
  int v54 = v50 ^ 0xB2F74571;
  int v55 = (v6 >> 16) + (v50 ^ 0xB2F74571) - ((2 * ((v6 >> 16) + (v50 ^ 0xB2F74571))) & 0x97391202) - 878933759;
  HIDWORD(v6) = v103
              + (v41 ^ 0xEF206CD5)
              - 1840135414
              + (((v55 ^ v50 ^ 0x796BCC70) - 2 * ((v55 ^ v50 ^ 0x796BCC70) & 0x504CBEDF ^ (v55 ^ v50) & 0xC) + 1347206867) ^ v52);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v56 = v55 ^ 0xCB9C8901;
  int v57 = (v6 >> 9) + (v55 ^ 0xCB9C8901) - ((2 * ((v6 >> 9) + (v55 ^ 0xCB9C8901))) & 0xF1A5BC88) - 120398268;
  HIDWORD(v6) = v90
              + (v52 ^ 0x504CBED3)
              + 959149378
              + (((v57 ^ v55 ^ 0x334E5745) - 2 * ((v57 ^ v55 ^ 0x334E5745) & 0x32F74579 ^ (v57 ^ v55) & 8) - 1292417679) ^ v50);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v50) = (v6 >> 28) + (v57 ^ 0xF8D2DE44) - ((2 * ((v6 >> 28) + (v57 ^ 0xF8D2DE44))) & 0xB9655D76) + 1555214011;
  HIDWORD(v6) = v93
              + v54
              - 531932505
              + (((v57 ^ 0xA46070FF ^ v50) - ((2 * (v57 ^ 0xA46070FF ^ v50)) & 0x97391202) - 878933759) ^ v55);
  LODWORD(v6) = HIDWORD(v6);
  int v58 = v50 ^ 0x5CB2AEBB;
  int v59 = (v6 >> 21) + (v50 ^ 0x5CB2AEBB) - ((2 * ((v6 >> 21) + (v50 ^ 0x5CB2AEBB))) & 0x6C4494CA) - 1239266715;
  HIDWORD(v6) = v96
              + v56
              - 1960323490
              + (((v59 ^ v50 ^ 0xEA90E4DE) - 2 * ((v59 ^ v50 ^ 0xEA90E4DE) & 0x78D2DE45 ^ (v59 ^ v50) & 1) - 120398268) ^ v57);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v60 = v59 ^ 0xB6224A65;
  int v61 = (v6 >> 16) + (v59 ^ 0xB6224A65) - ((2 * ((v6 >> 16) + (v59 ^ 0xB6224A65))) & 0xB87FA8A4) + 1547686994;
  HIDWORD(v6) = v99
              + (v57 ^ 0xF8D2DE44)
              + 1395410798
              + (((v59 ^ 0xEA1D9E37 ^ v61) - ((2 * (v59 ^ 0xEA1D9E37 ^ v61)) & 0xB9655D76) + 1555214011) ^ v50);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = v61 ^ 0x5C3FD452;
  LODWORD(v50) = (v6 >> 9) + (v61 ^ 0x5C3FD452) - ((2 * ((v6 >> 9) + (v61 ^ 0x5C3FD452))) & 0x130B6C56) - 1987725781;
  HIDWORD(v6) = v102
              + v58
              - 1123546684
              + (((v61 ^ 0xD5BA6279 ^ v50) - ((2 * (v61 ^ 0xD5BA6279 ^ v50)) & 0x6C4494CA) - 1239266715) ^ v59);
  LODWORD(v6) = HIDWORD(v6);
  int v62 = v50 ^ 0x8985B62B;
  int v63 = (v6 >> 28) + (v50 ^ 0x8985B62B) - ((2 * ((v6 >> 28) + (v50 ^ 0x8985B62B))) & 0x1769886) + 12274755;
  HIDWORD(v6) = v89
              + v60
              + 2131604216
              + (((v50 ^ 0x893EFA68 ^ v63) - ((2 * (v50 ^ 0x893EFA68 ^ v63)) & 0xB87FA8A4) + 1547686994) ^ v61);
  LODWORD(v6) = HIDWORD(v6);
  int v64 = v63 ^ 0xBB4C43;
  int v65 = (v6 >> 21) + (v63 ^ 0xBB4C43) - ((2 * ((v6 >> 21) + (v63 ^ 0xBB4C43))) & 0x3F164F3E) - 1618270305;
  uint64_t result = v91;
  HIDWORD(v6) = v92
              + v2
              + 1767619459
              + (((v63 ^ 0x9F306BDC ^ v65) - ((2 * (v63 ^ 0x9F306BDC ^ v65)) & 0x130B6C56) - 1987725781) ^ v50);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v50) = (v6 >> 16) + (v65 ^ 0x9F8B279F) - ((2 * ((v6 >> 16) + (v65 ^ 0x9F8B279F))) & 0x2485A378) + 306368956;
  HIDWORD(v6) = v95
              + v62
              - 1728796669
              + (((v50 ^ v65 ^ 0x8DC9F623) - 2 * ((v50 ^ v65 ^ 0x8DC9F623) & 0xBB4C53 ^ (v50 ^ v65) & 0x10) + 12274755) ^ v63);
  LODWORD(v6) = HIDWORD(v6);
  int v67 = v50 ^ 0x1242D1BC;
  int v68 = (v6 >> 9) + (v50 ^ 0x1242D1BC) - ((2 * ((v6 >> 9) + (v50 ^ 0x1242D1BC))) & 0x33509028) - 1717024748;
  HIDWORD(v6) = v98
              + v64
              + 1849776951
              + (((v50 ^ 0x8BEA99A8 ^ v68) - ((2 * (v50 ^ 0x8BEA99A8 ^ v68)) & 0x3F164F3E) - 1618270305) ^ v65);
  LODWORD(v6) = HIDWORD(v6);
  unsigned int v69 = v68 ^ 0x99A84814;
  int v70 = (v6 >> 28) + (v68 ^ 0x99A84814) - ((2 * ((v6 >> 28) + (v68 ^ 0x99A84814))) & 0xED791978) - 155415364;
  HIDWORD(v6) = v101
              + (v65 ^ 0x9F8B279F)
              + 2068325603
              + (((v70 ^ v68 ^ 0x6F14C4A8) - 2 * ((v70 ^ v68 ^ 0x6F14C4A8) & 0x1242D1BF ^ (v70 ^ v68) & 3) + 306368956) ^ v50);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v50) = (v6 >> 21) + (v70 ^ 0xF6BC8CBC) - ((2 * ((v6 >> 21) + (v70 ^ 0xF6BC8CBC))) & 0xDF960CFC) - 271907202;
  HIDWORD(v6) = v104
              + v67
              - 1274083338
              + (((v70 ^ 0x19778AC2 ^ v50) - ((2 * (v70 ^ 0x19778AC2 ^ v50)) & 0x33509028) - 1717024748) ^ v68);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v51) = v50 ^ 0xEFCB067E;
  int v71 = (v6 >> 16) + (v50 ^ 0xEFCB067E) - ((2 * ((v6 >> 16) + (v50 ^ 0xEFCB067E))) & 0x451D2DE6) + 579770099;
  HIDWORD(v6) = v91
              + v69
              + 1494802787
              + (((v50 ^ 0xCD45908D ^ v71) - ((2 * (v50 ^ 0xCD45908D ^ v71)) & 0xED791978) - 155415364) ^ v70);
  LODWORD(v6) = HIDWORD(v6);
  int v72 = (v6 >> 9) + (v71 ^ 0x228E96F3) - ((2 * ((v6 >> 9) + (v71 ^ 0x228E96F3))) & 0x88F4833C) + 1148862878;
  int v73 = v72 ^ 0x447A419E;
  HIDWORD(v6) = v89
              + (v70 ^ 0xF6BC8CBC)
              - 2003456702
              + (((v73 | v50 ^ 0x1034F981) - ((2 * (v73 | v50 ^ 0x1034F981)) & 0x451D2DE6) + 579770099) ^ v71);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v50) = (v6 >> 26) + v73 + 1535394219 + (~(2 * ((v6 >> 26) + v73)) | 0x48F77CA9) + 1;
  int v74 = v50 ^ 0x5B8441AB;
  HIDWORD(v6) = v96
              + v51
              - 677934443
              + (((v50 ^ 0x5B8441AB | v71 ^ 0xDD71690C)
                - ((2 * (v50 ^ 0x5B8441AB | v71 ^ 0xDD71690C)) & 0x88F4833C)
                + 1148862878) ^ v72);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v51) = (v6 >> 22) + (v50 ^ 0x5B8441AB) - ((2 * ((v6 >> 22) + (v50 ^ 0x5B8441AB))) & 0x703F2656) + 941593387;
  unsigned int v75 = v72 ^ 0xBB85BE61;
  int v76 = v51 ^ 0x381F932B;
  HIDWORD(v6) = v103
              + (v71 ^ 0x228E96F3)
              + 1073786533
              + (((v76 | v75) - ((2 * (v76 | v75)) & 0xB7088356) + 1535394219) ^ v50);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 17) + v76 - ((2 * ((v6 >> 17) + v76)) & 0x654F347E) + 849844799;
  unsigned int v77 = v2 ^ 0x32A79A3F;
  HIDWORD(v6) = v94
              + v73
              - 1862259913
              + (((v77 | v50 ^ 0xA47BBE54) - ((2 * (v77 | v50 ^ 0xA47BBE54)) & 0x703F2656) + 941593387) ^ v51);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v50) = (v6 >> 11) + v77 - ((2 * ((v6 >> 11) + v77)) & 0xF7E2A638) - 68070628;
  int v78 = v50 ^ 0xFBF1531C;
  HIDWORD(v6) = v101
              + v74
              - 104340287
              + (((v78 | v51 ^ 0xC7E06CD4) - ((2 * (v78 | v51 ^ 0xC7E06CD4)) & 0x654F347E) + 849844799) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v51) = (v6 >> 26) + v78 - ((2 * ((v6 >> 26) + v78)) & 0x7D49B19E) - 1096492849;
  int v79 = v51 ^ 0xBEA4D8CF;
  HIDWORD(v6) = v92
              + v76
              + 595154832
              + (((v51 ^ 0xBEA4D8CF | v2 ^ 0xCD5865C0)
                - ((2 * (v51 ^ 0xBEA4D8CF | v2 ^ 0xCD5865C0)) & 0xF7E2A638)
                - 68070628) ^ v50);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 22) + (v51 ^ 0xBEA4D8CF) - ((2 * ((v6 >> 22) + (v51 ^ 0xBEA4D8CF))) & 0xCFEC804E) - 403292121;
  unsigned int v80 = v2 ^ 0xE7F64027;
  HIDWORD(v6) = v99
              + v77
              - 1805877381
              + (((v80 | v50 ^ 0x40EACE3) - ((2 * (v80 | v50 ^ 0x40EACE3)) & 0x7D49B19E) - 1096492849) ^ v51);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v50) = (v6 >> 17) + v80 - ((2 * ((v6 >> 17) + v80)) & 0xAC3C619C) - 702664498;
  int v81 = v50 ^ 0xD61E30CE;
  HIDWORD(v6) = v90
              + v78
              + 435218639
              + (((v50 ^ 0xD61E30CE | v51 ^ 0x415B2730)
                - ((2 * (v50 ^ 0xD61E30CE | v51 ^ 0x415B2730)) & 0xCFEC804E)
                - 403292121) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v51) = (v6 >> 11) + (v50 ^ 0xD61E30CE) - ((2 * ((v6 >> 11) + (v50 ^ 0xD61E30CE))) & 0x90015610) - 939480312;
  int v82 = v51 ^ 0xC800AB08;
  HIDWORD(v6) = v97
              + v79
              + 68487501
              + (((v82 | v2 ^ 0x1809BFD8)
                - ((2 * (v82 | v2 ^ 0x1809BFD8)) & 0xAC3C619C)
                - 702664498) ^ v50);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 26) + v82 - ((2 * ((v6 >> 26) + v82)) & 0x7C25205A) - 1106079699;
  unsigned int v83 = v2 ^ 0xBE12902D;
  HIDWORD(v6) = v104
              + v80
              - 1835437602
              + (((v83 | v50 ^ 0x29E1CF31) - ((2 * (v83 | v50 ^ 0x29E1CF31)) & 0x90015610) - 939480312) ^ v51);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v50) = (v6 >> 22) + v83 - ((2 * ((v6 >> 22) + v83)) & 0xCA82CBAE) - 448698921;
  int v84 = v50 ^ 0xE54165D7;
  HIDWORD(v6) = v95
              + v81
              + 929943058
              + (((v50 ^ 0xE54165D7 | v51 ^ 0x37FF54F7)
                - ((2 * (v50 ^ 0xE54165D7 | v51 ^ 0x37FF54F7)) & 0x7C25205A)
                - 1106079699) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v51) = (v6 >> 17) + (v50 ^ 0xE54165D7) - ((2 * ((v6 >> 17) + (v50 ^ 0xE54165D7))) & 0xC4552644) - 500526302;
  int v85 = v51 ^ 0xE22A9322;
  HIDWORD(v6) = v102
              + v82
              - 495674209
              + (((v51 ^ 0xE22A9322 | v2 ^ 0x41ED6FD2)
                - ((2 * (v51 ^ 0xE22A9322 | v2 ^ 0x41ED6FD2)) & 0xCA82CBAE)
                - 448698921) ^ v50);
  LODWORD(v6) = HIDWORD(v6);
  int v86 = (v6 >> 11) + (v51 ^ 0xE22A9322) - ((2 * ((v6 >> 11) + (v51 ^ 0xE22A9322))) & 0x9FA630D8) + 1339234412;
  int v87 = v86 ^ 0x4FD3186C;
  HIDWORD(v6) = v93
              + (v2 ^ 0xBE12902D)
              - 1950348928
              + (((v87 | v50 ^ 0x1ABE9A28) - ((2 * (v87 | v50 ^ 0x1ABE9A28)) & 0xC4552644) - 500526302) ^ v51);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v50) = (v6 >> 26) + v87 - ((2 * ((v6 >> 26) + v87)) & 0x34379A82) + 438029633;
  HIDWORD(v6) = v100
              + v84
              + 1369931059
              + (((v50 ^ 0x1A1BCD41 | v51 ^ 0x1DD56CDD)
                - ((2 * (v50 ^ 0x1A1BCD41 | v51 ^ 0x1DD56CDD)) & 0x9FA630D8)
                + 1339234412) ^ v86);
  LODWORD(v6) = HIDWORD(v6);
  *(_DWORD *)(v88 - 0x662872D8928A04ELL) += v50 ^ 0x1A1BCD41;
  LODWORD(v51) = ((2 * ((v6 >> 22) + (v50 ^ 0x1A1BCD41))) & 0x9BDFFAFE)
               + (((v6 >> 22) + (v50 ^ 0x1A1BCD41)) ^ 0x4DEFFD7F)
               - 1307573631;
  HIDWORD(v6) = result
              + v85
              - 1086038599
              + (((v51 | v86 ^ 0xB02CE793) - ((2 * (v51 | v86 ^ 0xB02CE793)) & 0x34379A82) + 438029633) ^ v50);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = v51 + (v6 >> 17);
  HIDWORD(v6) = v53 + (v86 ^ 0x4FD3186C) + 2146655887 + ((v2 | v50 ^ 0xE5E432BE) ^ v51);
  LODWORD(v6) = HIDWORD(v6);
  *(_DWORD *)(v88 - 0x662872D8928A04ALL) += v2 + (v6 >> 11);
  *(_DWORD *)(v88 - 0x662872D8928A046) += v2;
  *(_DWORD *)(v88 - 0x662872D8928A042) += v51;
  return result;
}

void sub_1D0B0CF50(uint64_t a1)
{
  int v1 = 961505453 * (((a1 | 0xA1859FC4) - (a1 & 0xA1859FC4)) ^ 0x37E5162);
  int v2 = *(_DWORD *)(a1 + 4) + v1;
  char v3 = 27 * (*(unsigned char *)(a1 + 8) ^ v1) - 47;
  if (*(void *)(a1 + 24)) {
    BOOL v4 = v3 == 3;
  }
  else {
    BOOL v4 = 0;
  }
  int v5 = v4;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D0B0D020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34
                                                                       + 8
                                                                       * (((a34 != 310820031) | (32 * (a34 != 310820031))) ^ 0x349)))(a1, a2, a3, 343018756);
}

void sub_1D0B0D088(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,int *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v28 = 4 * (v27 - 621667567);
  unsigned int v29 = 1513389751 * ((*(_DWORD *)(*a22 + (*a23 & 0xFFFFFFFFC6250B18)) ^ (a26 + v28)) & 0x7FFFFFFF);
  int v30 = (v29 >> ((a1 + 39) ^ 0x5F)) ^ v29;
  *(_DWORD *)(a27 + v28) ^= *(_DWORD *)(a26 + v28) ^ *((_DWORD *)*(&off_1F26D60E0 + (a1 ^ 0x265))
                                                     + ((1513389751 * v30) >> 24)
                                                     - 1) ^ *((_DWORD *)*(&off_1F26D60E0 + (a1 ^ 0x255))
                                                            + ((1513389751 * v30) >> 24)
                                                            + 5) ^ *((_DWORD *)*(&off_1F26D60E0 + (a1 ^ 0x2BB))
                                                                   + ((1513389751 * v30) >> 24)) ^ (2125922304 * v30) ^ (1513389751 * v30) ^ (-1871337257 * ((1513389751 * v30) >> 24));
  JUMPOUT(0x1D0AF7378);
}

void sub_1D0B0D17C()
{
}

uint64_t sub_1D0B0D1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v7
                                                                                        + 8
                                                                                        * ((505
                                                                                          * ((((v6 + 69) ^ (v5 < (v6 ^ 0x208u) - 691)) & 1) == 0)) ^ v6)))(a1, a2, a3, a4, a5, 0);
}

void sub_1D0B0D20C()
{
}

uint64_t sub_1D0B0D244(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  int v2 = *(_DWORD *)(result + 4) - 1477295531 * (((result | 0x36F1BB57) - (result & 0x36F1BB57)) ^ 0x1FA8E04);
  *(_DWORD *)(v1 - 0x17B29E1307D117F4) = ((v2 & 0x1FF ^ 0x145)
                                          + (v2 & 0x13E ^ 0x1F903A)
                                          - ((v2 & 0x1FF ^ 0x145) & 0x13E)) & 0xFFF07FFF ^ 0x512ECD6D;
  *(void *)(v1 - 0x17B29E1307D11814) = 0x4E6215769C2686EDLL;
  *(_DWORD *)(v1 - 0x17B29E1307D117F8) = 286216983;
  int v3 = v2 ^ 0x1C;
  if (v3 == 1)
  {
    int v4 = 286216999;
    goto LABEL_5;
  }
  if (v3 == 2)
  {
    *(_DWORD *)(v1 - 0x17B29E1307D117FCLL) = -1937639270;
    int v4 = 286217003;
LABEL_5:
    *(void *)(v1 - 0x17B29E1307D1180CLL) = 0xA09EB2E328163A6BLL;
    *(void *)(v1 - 0x17B29E1307D11804) = 0x5F614D1CD7E9C594;
    *(_DWORD *)(v1 - 0x17B29E1307D117F8) = v4;
  }
  *(_DWORD *)uint64_t result = 205538776;
  return result;
}

void sub_1D0B0D3B0(uint64_t a1)
{
  int v1 = 1503905621 * (((a1 | 0x8A342AF4) - (a1 & 0x8A342AF4)) ^ 0xD74C4420);
  int v2 = *(_DWORD *)a1 + v1;
  if (*(void *)(a1 + 8)) {
    BOOL v3 = (*(_DWORD *)(a1 + 24) ^ v1) == 1811180530;
  }
  else {
    BOOL v3 = 1;
  }
  int v4 = v3;
  __asm { BRAA            X9, X17 }
}

void sub_1D0B0D480()
{
  *(_DWORD *)(v1 + 16) = v0;
}

void sub_1D0B0D4C4()
{
}

uint64_t sub_1D0B0D4D0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((v3 * ((361 * (v2 ^ 0x97)) ^ (v2 - 69))) ^ v2)))();
}

uint64_t sub_1D0B0D4FC@<X0>(int a1@<W8>, uint64_t a2)
{
  *(void *)(a2 + (a1 - 1049) + v3) = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((189 * ((v2 & 0x38) == 8)) ^ a1)))();
}

uint64_t sub_1D0B0D538(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(void))(v70
                              + 8
                              * ((((((a4 + 305) | 0x120) ^ 0x464) + ((a4 + 560) | 0x21))
                                * (*(_DWORD *)(v71 - 256) == a70)) ^ a4)))();
}

uint64_t sub_1D0B0D584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v6
                                                                               + 8
                                                                               * ((100
                                                                                 * (v5 < ((((v4 - 1552020531) & 0x5C81F3BD)
                                                                                         - 163) ^ 0x105u))) ^ v4)))(a1, a2, a3, a4, 0);
}

uint64_t sub_1D0B0D5CC()
{
  int v6 = v0 + 75;
  unsigned int v7 = (v0 - 847955184) & 0xC535499F;
  int v8 = (v0 - 360) | 0x52;
  uint64_t v9 = *(void *)((v4 ^ 0xA6E2B243DFA1ACBLL) - 0xA6E2B243DFA1AB3);
  if (v1) {
    BOOL v10 = v9 == 0x6E2E237C8C7936AALL;
  }
  else {
    BOOL v10 = 1;
  }
  int v13 = v10 || v3 == 0 || v2 == 0;
  return (*(uint64_t (**)(void))(v5 + 8 * (int)((v13 * ((v7 ^ 0x3ACAF774) + v8)) ^ v6)))();
}

void sub_1D0B0D670()
{
}

uint64_t sub_1D0B0D93C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = (_DWORD *)(a1 - 0x7CADFE0965419187);
  *uint64_t v4 = 2107899875;
  int v5 = *v2;
  *uint64_t v4 = 2107899876;
  return (*(uint64_t (**)(void))(v3 + 8 * ((910 * (v5 == ((v1 + 91) ^ 0x15))) ^ v1)))();
}

uint64_t sub_1D0B0D9A4@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  if (*(unsigned char *)(*(void *)(result + 16) + 131) == 1) {
    JUMPOUT(0x1D0B0DA34);
  }
  if (!*(unsigned char *)(*(void *)(result + 16) + 131)) {
    __asm { BRAA            X8, X17 }
  }
  return result;
}

void sub_1D0B0DC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 *a14)
{
  int v17 = v16 - 144;
  *(void *)(v16 - 136) = v16 + 0x10B17FC23B8BBD34;
  *(_DWORD *)(v16 - 144) = (v15 - 1521868242) ^ (1543459711
                                               * ((2 * ((v16 - 144) & 0x57382E48) - (v16 - 144) - 1463299662) ^ 0xE445D276));
  (*(void (**)(uint64_t))(v14 + 8 * (v15 + 1438)))(v16 - 144);
  unsigned int v18 = 1334103649 * (((v17 | 0xC7107BEE) - v17 + (v17 & 0x38EF8410)) ^ 0xAFB8B340);
  *(_DWORD *)(v16 - 144) = v15 + 321 + v18;
  *(_DWORD *)(v16 - 120) = v18 ^ 0x6DD3E07A;
  *(void *)(v16 - 136) = (char *)*(&off_1F26D60E0 + v15 - 163) - 12;
  *(void *)(v16 - 128) = v16 + 0x10B17FC23B8BBD34;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 ^ 0x6AF)))(v16 - 144);
  unsigned int v19 = 1334103649 * ((((v17 | 0xD1107CB0) ^ 0xFFFFFFFE) - (~v17 | 0x2EEF834F)) ^ 0x46474BE1);
  *(_DWORD *)(v16 - 144) = v15 + 321 + v19;
  *(_DWORD *)(v16 - 120) = v19 ^ 0x6DD3E0E9;
  *(void *)(v16 - 136) = a12;
  *(void *)(v16 - 128) = v16 + 0x10B17FC23B8BBD34;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 + 1365)))(v16 - 144);
  int v20 = 1334103649 * ((v16 - 144) ^ 0x68A8C8AE);
  *(_DWORD *)(v16 - 120) = v20 ^ 0x6DD3E0E9;
  int v21 = v15 + 321 + v20;
  *(_DWORD *)(v16 - 144) = v21;
  *(void *)(v16 - 136) = a13;
  *(void *)(v16 - 128) = v16 + 0x10B17FC23B8BBD34;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 + 1365)))(v16 - 144);
  *(_DWORD *)(v16 - 144) = v21;
  *(_DWORD *)(v16 - 120) = v20 ^ 0x6DD3E07A;
  *(void *)(v16 - 136) = *(&off_1F26D60E0 + (v15 ^ 0xAF));
  *(void *)(v16 - 128) = v16 + 0x10B17FC23B8BBD34;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 + 1365)))(v16 - 144);
  *(void *)(v16 - 128) = &a14[56 * *a14 + 0x2D98A81A628584E1];
  *(_DWORD *)(v16 - 136) = v15
                         - 1332649919
                         * ((-1360376287 - ((v16 - 144) | 0xAEEA4E21) + ((v16 - 144) | 0x5115B1DE)) ^ 0x6C66352C)
                         + 1117;
  *(void *)(v16 - 144) = v16 + 0x10B17FC23B8BBD34;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 + 1356)))(v16 - 144);
  *(_DWORD *)(v16 - 144) = v15
                         - 961505453 * ((((v16 - 144) | 0xB97603FB) - ((v16 - 144) & 0xB97603FB)) ^ 0x1B8DCD5D)
                         - 820818696;
  *(void *)(v16 - 136) = v16 + 0x10B17FC23B8BBD34;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 + 1367)))(v16 - 144);
  unsigned int v22 = 1543459711 * ((((2 * v17) | 0xECA4A530) - v17 - 1985106584) ^ 0x3AD0515C);
  *(_DWORD *)(v16 - 144) = (v15 + 566) ^ v22;
  *(_DWORD *)(v16 - 128) = v22 ^ 0x2482351;
  *(void *)(v16 - 120) = (char *)*(&off_1F26D60E0 + (v15 ^ 0x90)) - 8;
  *(void *)(v16 - 136) = v16 + 0x10B17FC23B8BBD34;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 + 1358)))(v16 - 144);
  unsigned int v23 = 1543459711 * ((((v17 | 0x779FA454) ^ 0xFFFFFFFE) - (~v17 | 0x88605BAB)) ^ 0xC4E2586F);
  *(void *)(v16 - 120) = a12;
  *(_DWORD *)(v16 - 144) = (v15 + 566) ^ v23;
  *(void *)(v16 - 136) = v16 + 0x10B17FC23B8BBD34;
  *(_DWORD *)(v16 - 128) = v23 ^ 0x24823C0;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 + 1358)))(v16 - 144);
  unsigned int v24 = 1543459711 * ((1341839592 - (v17 | 0x4FFAD8E8) + (v17 | 0xB0052717)) ^ 0xFC8724D3);
  *(void *)(v16 - 120) = a13;
  *(_DWORD *)(v16 - 144) = (v15 + 566) ^ v24;
  *(_DWORD *)(v16 - 128) = v24 ^ 0x24823C0;
  *(void *)(v16 - 136) = v16 + 0x10B17FC23B8BBD34;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 + 1358)))(v16 - 144);
  int v25 = 1543459711 * ((v16 - 1337968160 - 2 * ((v16 - 144) & 0xB0403A70)) ^ 0xFCC239B4);
  *(_DWORD *)(v16 - 128) = v25 ^ 0x2482351;
  *(void *)(v16 - 120) = (char *)*(&off_1F26D60E0 + v15 - 85) - 12;
  *(_DWORD *)(v16 - 144) = (v15 + 566) ^ v25;
  *(void *)(v16 - 136) = v16 + 0x10B17FC23B8BBD34;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 ^ 0x6B6)))(v16 - 144);
  uint64_t v26 = (uint64_t)&a14[56 * *a14 + 0x691D25B51BD3A2A9];
  *(_DWORD *)(v16 - 144) = v15
                         - 1580882533 * ((((v16 - 144) | 0x61D6C961) - ((v16 - 144) & 0x61D6C961)) ^ 0xF84E7AA1)
                         + 331;
  *(void *)(v16 - 136) = v26;
  *(void *)(v16 - 128) = v16 + 0x10B17FC23B8BBD34;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 ^ 0x69D)))(v16 - 144);
  JUMPOUT(0x1D0B0E138);
}

void sub_1D0B0E178()
{
}

void sub_1D0B0E180()
{
}

uint64_t sub_1D0B0E198()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((23 * (v0 < ((v1 - 1991405811) & 0x36B26F3B) - 786)) ^ v1)))();
}

uint64_t sub_1D0B0E1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,_DWORD *a32)
{
  uint64_t v34 = *a32 & 0x3F;
  *(unsigned char *)(v32 + (v34 ^ 0x36)) = 120;
  return (*(uint64_t (**)(void))(v33 + 8 * ((((v34 ^ 0x36) > 0x37) * ((a13 + 829) ^ 0x6C1)) ^ a13)))();
}

uint64_t sub_1D0B0E238()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((v2 - 16573876) ^ (435 * v0))))();
}

uint64_t sub_1D0B0E25C()
{
  BOOL v1 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 12424))(40, 2217100586) == 0;
  return (*(uint64_t (**)(void))(v0 + 8 * ((502 * v1) ^ 0x2D4)))();
}

void sub_1D0B0E2E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, int a19, int a20,void *a21,_DWORD *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  unsigned int v31 = (int *)(a26 + 4 * v29);
  int v32 = *v31;
  LODWORD(v31) = ((*(_DWORD *)(*a21 + (*a22 & 0x392A03C0)) ^ v31) & 0x7FFFFFFF)
               * (a20 & 0x2BE457DC ^ 0x5A347D6F);
  LODWORD(v31) = v31 ^ (v31 >> 16);
  unsigned int v33 = 1513389751 * v31;
  *((_DWORD *)&a29 + v29) ^= v32 ^ *((_DWORD *)*(&off_1F26D60E0 + a19) + HIBYTE(v33) - 3) ^ *((_DWORD *)*(&off_1F26D60E0 + a18)
                                                                                            + HIBYTE(v33)
                                                                                            + 4) ^ *((_DWORD *)*(&off_1F26D60E0 + v30 - 819) + HIBYTE(v33) - 3) ^ (2125922304 * v31) ^ v33 ^ (2108157479 * HIBYTE(v33));
  JUMPOUT(0x1D0B0E3BCLL);
}

void sub_1D0B0E3FC()
{
}

uint64_t sub_1D0B0E428(int8x16_t a1, int8x16_t a2, int32x4_t a3, uint64_t a4, uint64_t a5, uint64_t a6, const char *a7, uint64_t a8, uint64_t a9, int32x4_t *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  int8x16x4_t v46 = vld4q_s8(a7);
  uint8x16_t v21 = (uint8x16_t)veorq_s8(v46.val[0], a2);
  uint16x8_t v22 = vmovl_u8(*(uint8x8_t *)v21.i8);
  uint16x8_t v23 = vmovl_high_u8(v21);
  uint8x16_t v24 = (uint8x16_t)veorq_s8(v46.val[1], a2);
  _Q21 = vmovl_u8(*(uint8x8_t *)v24.i8);
  _Q20 = vmovl_high_u8(v24);
  __asm
  {
    SHLL2           V22.4S, V20.8H, #0x10
    SHLL2           V23.4S, V21.8H, #0x10
  }
  uint8x16_t v33 = (uint8x16_t)veorq_s8(v46.val[2], a2);
  uint16x8_t v34 = vmovl_high_u8(v33);
  uint16x8_t v35 = vmovl_u8(*(uint8x8_t *)v33.i8);
  v46.val[0] = veorq_s8(v46.val[3], a2);
  v46.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v46.val[0]);
  v46.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v46.val[1]);
  v46.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v46.val[1].i8);
  v46.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v46.val[0].i8);
  v46.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v46.val[0]);
  v46.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v46.val[0].i8);
  int32x4_t v36 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v35.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v22.i8), 0x18uLL)), v46.val[0]);
  int32x4_t v37 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v35, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v22), 0x18uLL)), v46.val[3]);
  int32x4_t v38 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v34.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v23.i8), 0x18uLL)), v46.val[1]);
  int32x4_t v39 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q22, (int8x16_t)vshll_high_n_u16(v34, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v23), 0x18uLL)), v46.val[2]);
  v46.val[0] = veorq_s8(vandq_s8((int8x16_t)v36, a1), (int8x16_t)(*(_OWORD *)v46.val & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
  v46.val[3] = veorq_s8(vandq_s8((int8x16_t)v37, a1), (int8x16_t)(*(_OWORD *)&v46.val[3] & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
  v46.val[1] = veorq_s8(vandq_s8((int8x16_t)v38, a1), (int8x16_t)(*(_OWORD *)&v46.val[1] & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
  v46.val[2] = veorq_s8(vandq_s8((int8x16_t)v39, a1), (int8x16_t)(*(_OWORD *)&v46.val[2] & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
  a10[2] = vaddq_s32(vsubq_s32(v38, vaddq_s32((int32x4_t)v46.val[1], (int32x4_t)v46.val[1])), a3);
  a10[3] = vaddq_s32(vsubq_s32(v39, vaddq_s32((int32x4_t)v46.val[2], (int32x4_t)v46.val[2])), a3);
  *a10 = vaddq_s32(vsubq_s32(v36, vaddq_s32((int32x4_t)v46.val[0], (int32x4_t)v46.val[0])), a3);
  a10[1] = vaddq_s32(vsubq_s32(v37, vaddq_s32((int32x4_t)v46.val[3], (int32x4_t)v46.val[3])), a3);
  int v40 = &a10[4].i32[v20 + v19];
  int v41 = *(v40 - 8) ^ *(v40 - 3);
  unsigned int v42 = v41 + v18 - ((2 * v41) & 0xCE9BE6E4);
  int v43 = a10[4].i32[((a17 | 0x588) ^ 0x40Eu ^ (unint64_t)(v19 - 371)) + v20] ^ *(v40 - 14);
  HIDWORD(v44) = v43 ^ v42 ^ 0x674DF372;
  LODWORD(v44) = v43 ^ ~v42;
  *int v40 = (v44 >> 31) + v18 - ((2 * (v44 >> 31)) & 0xCE9BE6E4);
  return (*(uint64_t (**)(void))(v17 + 8 * ((61 * (v20 + 17 == v20 + 80)) ^ ((a17 | 0x588) - 660))))();
}

void sub_1D0B0E558()
{
  uint64_t v7 = *(void *)(v0 + 40) + 56 * **(unsigned __int8 **)(v0 + 40) + 24;
  int v8 = 846572393 * ((v6 - 128 - 2 * ((v6 - 128) & 0xAAD93C81) - 1428603775) ^ 0x9CBA68C8);
  *(_DWORD *)(v6 - 104) = v8 ^ 0x1E0D8D12;
  *(void *)(v6 - 120) = &STACK[0xE8AF10975501C9A];
  *(void *)(v6 - 112) = v7;
  *(_WORD *)(v6 - 128) = 16640 - -21655 * ((v6 - 128 - 2 * ((v6 - 128) & 0x3C81) + 15489) ^ 0x68C8);
  *(_DWORD *)(v6 - 124) = v8 + v2 + 930;
  (*(void (**)(uint64_t))(v1 + 8 * (v2 + 1061)))(v6 - 128);
  int v9 = 1503905621 * ((v6 - 128) ^ 0x5D786ED4);
  *(void *)(v6 - 120) = v4;
  *(void *)(v6 - 112) = &STACK[0xE8AF10975501C9A];
  *(_DWORD *)(v6 - 128) = v2 + 646 - v9;
  *(_DWORD *)(v6 - 104) = v9 ^ 0x6BF46C16;
  (*(void (**)(uint64_t))(v1 + 8 * (v2 + 1051)))(v6 - 128);
  int v10 = 1503905621 * ((((v6 - 128) | 0xF41AE9AF) - ((v6 - 128) & 0xF41AE9AF)) ^ 0xA962877B);
  *(_DWORD *)(v6 - 128) = v2 + 646 - v10;
  *(_DWORD *)(v6 - 104) = (v5 + 1282238563) ^ v10;
  *(void *)(v6 - 120) = v3;
  *(void *)(v6 - 112) = &STACK[0xE8AF10975501C9A];
  (*(void (**)(uint64_t))(v1 + 8 * (v2 ^ 0x425)))(v6 - 128);
  *(void *)(v6 - 112) = &STACK[0xE8AF10975501C9A];
  *(_DWORD *)(v6 - 120) = v2 - 1477295531 * ((v6 - 128) ^ 0x370B3553) - 486;
  *(void *)(v6 - 128) = v6 - 148;
  (*(void (**)(uint64_t))(v1 + 8 * (v2 + 1001)))(v6 - 128);
  JUMPOUT(0x1D0B0E704);
}

uint64_t sub_1D0B0E758@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W3>, int a4@<W7>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,unsigned int a36)
{
  unsigned int v40 = v36[396] ^ ((*v36 & 0x7FFFFFFE | v36[623] & 0x80000000) >> 1);
  v36[623] = (v40 + a3 - (a2 & (2 * v40))) ^ *(_DWORD *)(v38 + 4 * (*v36 & 1));
  return (*(uint64_t (**)(void))(v37
                              + 8
                              * (((a36 > v39 + ((a1 + a5 + 500 + 1005427718) | 0xC4126000) + 439) * a4) ^ (a5 + 500))))();
}

uint64_t sub_1D0B0E7D8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 - 417 + ((v1 - 665) | 0x20) + 957) * (v0 == v2)) ^ v1)))();
}

uint64_t sub_1D0B0E808(uint64_t a1, int a2, uint64_t a3, int a4)
{
  *(unsigned char *)(v5 + (a2 + v6)) = *(unsigned char *)(v7 + (a2 + v6));
  BOOL v9 = a2 - 1 == ((a4 + 1144943216) & 0xBBC18BDF) + v4;
  return (*(uint64_t (**)(void))(v8 + 8 * ((2 * v9) | (4 * v9) | (a4 + 26))))();
}

uint64_t sub_1D0B0E858()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((8 * (v0 == 0)) | 0x596u)))();
}

void sub_1D0B0E87C()
{
}

void sub_1D0B0E928(uint64_t a1)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 8) + 1477295531 * ((1461229368 - (a1 | 0x57189738) + (a1 | 0xA8E768C7)) ^ 0x9FEC5D94);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D0B0EC7C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a2 - 0x4F5C534513D454FDLL) = 1305428773;
  *(void *)(v3 - 0x7AFA2E4D31C58922) = v2;
  *(_DWORD *)(a2 - 0x4F5C534513D454FDLL) += 256;
  *(void *)(v3 - 0x7AFA2E4D31C58912) = v2 + 256;
  *(_DWORD *)(a2 - 0x4F5C534513D454FDLL) += 256;
  *(void *)(v3 - 0x7AFA2E4D31C58902) = v2 + 512;
  *(_DWORD *)(a2 - 0x4F5C534513D454FDLL) = v4 + *(_DWORD *)(a2 - 0x4F5C534513D454FDLL) - 362;
  *(void *)(v3 - 0x7AFA2E4D31C588F2) = v2 + 768;
  *(_DWORD *)(a2 - 0x4F5C534513D454FDLL) += 256;
  *(void *)(v3 - 0x7AFA2E4D31C588E2) = v2 + 1024;
  *(_DWORD *)(a2 - 0x4F5C534513D454FDLL) += 256;
  *(void *)(v3 - 0x7AFA2E4D31C588D2) = v2 + 1280;
  *(_DWORD *)(a2 - 0x4F5C534513D454FDLL) += 256;
  *(void *)(v3 - 0x7AFA2E4D31C588C2) = v2 + 1536;
  *(_DWORD *)(a2 - 0x4F5C534513D454FDLL) += 256;
  *(void *)(v3 - 0x7AFA2E4D31C588B2) = v2 + 1792;
  *(_DWORD *)(a2 - 0x4F5C534513D454FDLL) += 256;
  *(void *)(v3 - 0x7AFA2E4D31C588A2) = v2 + 2048;
  *(_DWORD *)(a2 - 0x4F5C534513D454FDLL) += 256;
  *(void *)(v3 - 0x7AFA2E4D31C58892) = v2 + 2304;
  *(_DWORD *)(a2 - 0x4F5C534513D454FDLL) += 256;
  *(void *)(v3 - 0x7AFA2E4D31C58882) = v2 + 2560;
  *(_DWORD *)(a2 - 0x4F5C534513D454FDLL) += 256;
  *(void *)(v3 - 0x7AFA2E4D31C58872) = v2 + 2816;
  *(_DWORD *)(a2 - 0x4F5C534513D454FDLL) += 256;
  *(void *)(v3 - 0x7AFA2E4D31C58862) = v2 + 3072;
  *(_DWORD *)(a2 - 0x4F5C534513D454FDLL) += 256;
  *(void *)(v3 - 0x7AFA2E4D31C58852) = v2 + 3328;
  *(_DWORD *)(a2 - 0x4F5C534513D454FDLL) += 256;
  *(void *)(v3 - 0x7AFA2E4D31C58842) = v2 + 3584;
  *(_DWORD *)(a2 - 0x4F5C534513D454FDLL) += 256;
  *(void *)(v3 - 0x7AFA2E4D31C58832) = v2 + 3840;
  *(_DWORD *)(a2 - 0x4F5C534513D454FDLL) += 256;
  *(_DWORD *)(result + 24) = 343018756;
  return result;
}

uint64_t sub_1D0B0EEE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  unsigned int v27 = *(_DWORD *)(v25 + 4 * (v22 - 1));
  *(_DWORD *)(v25 + 4 * v22) = ((1566083941 * (v27 ^ (v27 >> 30))) ^ *(_DWORD *)(v25 + 4 * v22)) - v22;
  unint64_t v28 = 1543459711 * (((a22 | 0xD30D589E97052515) - (a22 & 0xD30D589E97052515)) ^ 0xEE8287ECE2A45B07);
  int v29 = (v23 - 989728351) ^ v28;
  *(_DWORD *)(v26 - 120) = v28 + v23 + 700516720;
  *(_DWORD *)(v26 - 116) = v29 ^ 0x76;
  *(void *)(v26 - 152) = v22 + 1 + v28;
  *(void *)(v26 - 128) = 623 - v28;
  *(_DWORD *)(v26 - 144) = (v23 - 989728309) ^ v28;
  *(_DWORD *)(v26 - 136) = v29;
  *(_DWORD *)(v26 - 112) = v28 ^ 1;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v23 + 628)))(v26 - 152);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * *(int *)(v26 - 140)))(v30);
}

uint64_t sub_1D0B0F020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  unint64_t v18 = v16 - 1116844670;
  if (v18 <= 0x38) {
    unint64_t v18 = 56;
  }
  return (*(uint64_t (**)(void))(v17
                              + 8
                              * (((v18 - v16 + 1116844671 < (unint64_t)(a16 + 407) - 1040)
                                * ((2 * a16) ^ 0x529)) ^ a16)))();
}

uint64_t sub_1D0B0F098(uint64_t a1, int a2, int a3, int a4, uint64_t a5)
{
  uint64_t v11 = v9 - 0x831B691D8B0FF82 + a3 + a2 + ((v5 + 1085) ^ 0x51 ^ (a4 + 809)) + 1119;
  unint64_t v12 = a5 - (v9 - 0x831B691D8B0FB23) - 0x43A8029596AF693CLL;
  uint64_t v13 = ((_BYTE)a3 + (_BYTE)a2 + ((v5 + 61) ^ 0x51 ^ (a4 + 41))) & 0xF;
  unint64_t v14 = v13 + v6 - v11;
  unint64_t v15 = (v13 | v8) - v11;
  unint64_t v16 = (v13 | v7) - v11 + (v5 + 242) - 556;
  BOOL v20 = v12 < 0x10 || v14 < 0x10 || v15 < 0x10 || v16 < 0x10;
  return (*(uint64_t (**)(void))(v10 + 8 * ((251 * v20) ^ (v5 + 1085))))();
}

uint64_t sub_1D0B0F144()
{
  BOOL v4 = v2 == v3 + 6 * (v0 ^ 0x1C7) - 318;
  return (*(uint64_t (**)(void))(v1 + 8 * (v4 | (4 * v4) | v0)))();
}

uint64_t sub_1D0B0F178@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  *(unsigned char *)(v3 + (v4 + v2)) = *(unsigned char *)(a1 + (v4 + v2)) ^ 0xF8;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 - 1 == a2) * (((v5 - 516) | 0x48) ^ 0x5B)) ^ v5)))();
}

uint64_t sub_1D0B0F1BC@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W7>, uint64_t a4@<X8>)
{
  *(unsigned char *)(a4 + (v4 - 1716182421)) = *(unsigned char *)(v6 + (v4 - 1716182421));
  return (*(uint64_t (**)(void))(v7 + 8 * ((111 * (((v5 ^ (a1 - 515) ^ (v4 - 1 == a3)) & 1) == 0)) ^ (a2 + v5 - 273))))();
}

uint64_t sub_1D0B0F210@<X0>(_OWORD *a1@<X8>)
{
  *a1 = 0u;
  a1[1] = 0u;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v1 & 0xFFFFFFE0) == 32) * ((v2 + 687) ^ 0x5C9)) ^ (v2 - 687))))();
}

void sub_1D0B0F258()
{
  if (v0 == 516686737) {
    int v1 = 343018756;
  }
  else {
    int v1 = 342976732;
  }
  *(_DWORD *)(v2 + 44) = v1;
}

uint64_t sub_1D0B0F2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((41 * ((a26 & 0xDD ^ ((a26 - 1628070586) > 0x1A6827ED)) & 1)) ^ (a24 + 222))))();
}

uint64_t sub_1D0B0F348@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v6 = a1 - 1268245118;
  if ((v6 + 1) > 0x40) {
    int v7 = v6 + 1;
  }
  else {
    int v7 = 64;
  }
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((49 * (v2 - v3 - v4 + v7 < ((240 * ((v5 + 1108) ^ 0x4D1) - 958) | 0x389u) - 892)) ^ (v5 + 1108))))();
}

uint64_t sub_1D0B0F420(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  *(void *)(v41 + (v45 + a4 + v44)) = *(void *)(a41
                                                                + a6
                                                                + v42
                                                                + v45
                                                                - 760
                                                                + ((2 * v46) ^ 0x75Au));
  return (*(uint64_t (**)(void))(v47 + 8 * ((1947 * (v45 - (v43 & 0x1FFFFFFF8) == -8)) ^ v46)))((a6 + v42 + v45 - 752));
}

uint64_t sub_1D0B0F48C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8
                                                     * ((127
                                                       * (v3 + v2 + ((a2 + 265) ^ 0x10942456 ^ (162 * (a2 ^ 0x236u))) < 8)) ^ a2)))(a1, v4);
}

uint64_t sub_1D0B0F4E4(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  *(unsigned char *)(v28 - 16) = *a3;
  int v29 = (unsigned char *)(v28 - 16);
  v29[1] = a3[1];
  v29[2] = a3[2];
  v29[3] = a3[3];
  v29[4] = a3[4];
  v29[5] = a3[5];
  v29[6] = a3[6];
  v29[7] = a3[7];
  v29[8] = a3[8];
  v29[9] = a3[9];
  v29[10] = a3[10];
  v29[11] = a3[11];
  v29[12] = a3[12];
  v29[13] = a3[13];
  v29[14] = a3[14];
  v29[15] = a3[15];
  return (*(uint64_t (**)(unsigned char *, uint64_t, unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 8 * ((((a27 + v27 + 885 - 326354717) < 0x7FFFFFEF) * ((19 * ((v27 - 1586151951) & 0x5E8AC179 ^ 0x39)) ^ 0x428)) ^ (v27 + 885))))(a3 - 16, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_1D0B0F504(int a1)
{
  BOOL v3 = v1 >= ((((2 * a1) ^ 0x26C) - 578661339) & 0x227DABD9 ^ 0x1E9u);
  return (*(uint64_t (**)(void))(v2 + 8 * (((16 * v3) | (32 * v3)) ^ a1)))();
}

void sub_1D0B0F550()
{
}

void sub_1D0B0F55C()
{
  *(_DWORD *)(v2 - 248) = v1;
  *(_DWORD *)(v2 - 256) = v0;
  JUMPOUT(0x1D0B0F5B8);
}

uint64_t sub_1D0B0F688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v5
                                                                      + 8
                                                                      * ((983
                                                                        * (*(unsigned __int8 *)(STACK[0x208] + 5) == (((v3 + 17) | 0x40) - 65))) ^ v3)))(a1, a2, a3, (v4 + 5));
}

void sub_1D0B0F6C0()
{
}

uint64_t sub_1D0B0F800()
{
  int v11 = 515566439 * ((v10 - 168) ^ 0x6CD407A7);
  *(void *)(v10 - 160) = v2;
  *(void *)(v10 - 152) = v4;
  *(void *)(v10 - 112) = v6;
  *(void *)(v10 - 136) = v5;
  *(void *)(v10 - 128) = v7;
  *(_DWORD *)(v10 - 168) = v1 + v3 + v11 + 1323;
  *(_DWORD *)(v10 - 164) = v12 - ((2 * v12) & 0xD2E620C6) - v11 - 378335133;
  *(void *)(v10 - 144) = v8;
  (*(void (**)(uint64_t))(v9 + 8 * (v3 ^ (v3 + 1595))))(v10 - 168);
  return (*(_DWORD *)(v10 - 120) - 343018756);
}

void sub_1D0B0F880()
{
}

void sub_1D0B0F988()
{
}

void sub_1D0B0F9D4()
{
}

void sub_1D0B0F9DC()
{
}

uint64_t sub_1D0B0F9E8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v0 > 0xBE45DEBB) ^ (v1 - 1)) & 1) * LODWORD(STACK[0x20C])) ^ (v1 - 186))))();
}

uint64_t sub_1D0B0FA2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  BOOL v71 = a37 - 0x51B785786A38B801 - a68 < ((v68 + 1) ^ 0x1EAuLL)
     || a37 - 0x51B785786A38B801 - a38 < ((165 * (v68 ^ 0x1FFu)) ^ 0x3CEuLL);
  return (*(uint64_t (**)(void))(v69 + 8 * ((v71 | (2 * v71)) ^ v68)))();
}

uint64_t sub_1D0B0FAA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, void))(v8 + 8 * ((((a7 - 488) ^ 0x154) * ((v7 & 0x18) == 0)) ^ a7)))(a1, (a1 - a3));
}

void sub_1D0B0FAD4()
{
}

void sub_1D0B0FADC()
{
}

uint64_t sub_1D0B0FAE4(int a1)
{
  return (*(uint64_t (**)(void))(v4
                                           + 8
                                           * (int)((92 * (((((a1 + 1272479652) & 0xB4277F9A ^ 0x336) - 406) & v1) != 0)) ^ (a1 + 1272479652) & 0xB4277F9A)))((v2 - v3));
}

void sub_1D0B0FB30(uint64_t a1)
{
  if (*(void *)a1) {
    BOOL v2 = *(void *)(a1 + 8) == 0x4005A18C73DCADE8;
  }
  else {
    BOOL v2 = 1;
  }
  int v5 = !v2 && *(void *)(a1 + 24) != 0xFEC6AE0F7D99CFCLL && *(void *)(a1 + 16) != 0x7AFA2E4D31C5923ALL;
  int v1 = *(_DWORD *)(a1 + 32) ^ (846572393 * ((-2 - ((a1 | 0x78304FE) + (~a1 | 0xF87CFB01))) ^ 0xCE1FAF48));
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1D0B0FC54@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + v1 + 24) = 0;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 == 48) * v2) ^ v4)))();
}

uint64_t sub_1D0B0FC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,char a30)
{
  *(_DWORD *)a1 = 1498173510;
  *(unsigned char *)(a1 + 4) = a30 ^ 0x8D ^ (5 * ((v30 + 31) & 0xBE ^ 0x42));
  *(_WORD *)(a1 + 5) = 769;
  *(unsigned char *)(a1 + 7) = 0;
  *(_DWORD *)(a1 + 8) = -1744830464;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(STACK[0x208] + 13);
  *(_WORD *)(a1 + 13) = 6799;
  *(unsigned char *)(a1 + 15) = -100;
  int v34 = 1503905621 * ((v32 + 512381294 - 2 * ((v32 - 168) & 0x1E8A5216)) ^ 0x43F23CC2);
  *(_DWORD *)(v32 - 164) = v30 - v34 - 824;
  *(_WORD *)(v32 - 168) = v34 + 20671;
  *(void *)(v32 - 152) = a1 + 0x6E4C05E1889C2C47;
  uint64_t v35 = (*(uint64_t (**)(uint64_t))(v31 + 8 * (v30 + 335)))(v32 - 168);
  *(_WORD *)(a1 + 16) = 256;
  return (*(uint64_t (**)(uint64_t))(v31
                                            + 8
                                            * (v30 ^ (366
                                                    * (((a1 - (void)&STACK[0x240]) & 0xFFFFFFFFFFFFFFE0) == 160)))))(v35);
}

void sub_1D0B0FDC8()
{
}

uint64_t sub_1D0B0FDD0()
{
  v0.n128_u64[0] = 0xF8F8F8F8F8F8F8F8;
  v0.n128_u64[1] = 0xF8F8F8F8F8F8F8F8;
  return sub_1D0B0FDE4(1165, 561, v0);
}

uint64_t sub_1D0B0FDE4(int a1, int a2, int8x16_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = (v10 + v8 - v13);
  int8x16_t v16 = *(int8x16_t *)(a8 + v15 - 15);
  int8x16_t v17 = *(int8x16_t *)(a8 + v15 - 31);
  uint64_t v18 = v9 + v15;
  *(int8x16_t *)(v18 - 15) = veorq_s8(v16, a3);
  *(int8x16_t *)(v18 - 31) = veorq_s8(v17, a3);
  return (*(uint64_t (**)(void))(v14 + 8 * (((((v12 + 740) ^ a1) + v13 == v11) * a2) ^ v12)))();
}

uint64_t sub_1D0B0FE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,unsigned char *a36)
{
  *a36 = v38 - 72;
  int v42 = 1332649919 * (((~(v41 - 168) & 0x8B6B85C) - (~(v41 - 168) | 0x8B6B85D)) ^ 0x35C53CAF);
  *(void *)(v41 - 160) = a36;
  *(void *)(v41 - 144) = v37;
  *(_DWORD *)(v41 - 168) = v42 + 2140997255;
  *(_DWORD *)(v41 - 152) = v42 + v36 + 687;
  (*(void (**)(uint64_t))(v40 + 8 * (v36 ^ 0x7F4)))(v41 - 168);
  *(void *)(v41 - 168) = v37;
  *(void *)(v41 - 160) = v39 + (v38 << (v36 + 20)) + 2122521472;
  *(_DWORD *)(v41 - 152) = v36
                         + 1449114341 * ((((2 * (v41 - 168)) | 0x7C7AA89C) - (v41 - 168) + 1103276978) ^ 0x7163ADA5)
                         + 906;
  uint64_t v43 = (*(uint64_t (**)(uint64_t))(v40 + 8 * (v36 ^ 0x7F2)))(v41 - 168);
  return (*(uint64_t (**)(uint64_t))(v40 + 8 * ((((v36 - 106) ^ 0x567) * (v38 == 135777872)) ^ v36)))(v43);
}

uint64_t sub_1D0B0FF5C(uint64_t result)
{
  char v1 = 45 * ((2 * ((result ^ 0xB2) & 0x3A) - (result ^ 0xB2) - 59) ^ 0x16);
  if ((*(unsigned char *)(result + 5) - v1) == 39 && (*(unsigned char *)(result + 4) ^ v1) == 24) {
    int v3 = 343018756;
  }
  else {
    int v3 = 342976669;
  }
  *(_DWORD *)(result + 8) = v3;
  return result;
}

char *sub_1D0B0FFC8(char *result, char *a2, unint64_t a3)
{
  if (((a2 ^ result) & 7) != 0)
  {
    if ((a3 + 7) >= 8)
    {
      unsigned int v9 = (a3 + 7) >> 3;
      switch(a3 & 7)
      {
        case 1uLL:
          goto LABEL_23;
        case 2uLL:
          goto LABEL_22;
        case 3uLL:
          goto LABEL_21;
        case 4uLL:
          goto LABEL_20;
        case 5uLL:
          goto LABEL_19;
        case 6uLL:
          goto LABEL_18;
        case 7uLL:
          goto LABEL_17;
        default:
          do
          {
            char v21 = *result++;
            *a2++ = v21;
LABEL_17:
            char v22 = *result++;
            *a2++ = v22;
LABEL_18:
            char v23 = *result++;
            *a2++ = v23;
LABEL_19:
            char v24 = *result++;
            *a2++ = v24;
LABEL_20:
            char v25 = *result++;
            *a2++ = v25;
LABEL_21:
            char v26 = *result++;
            *a2++ = v26;
LABEL_22:
            char v27 = *result++;
            *a2++ = v27;
LABEL_23:
            char v28 = *result++;
            *a2++ = v28;
            --v9;
          }
          while (v9);
          break;
      }
    }
  }
  else
  {
    unint64_t v10 = -(int)result & 7;
    switch((int)v10)
    {
      case 1:
        goto LABEL_11;
      case 2:
        goto LABEL_10;
      case 3:
        goto LABEL_9;
      case 4:
        goto LABEL_8;
      case 5:
        goto LABEL_7;
      case 6:
        goto LABEL_6;
      case 7:
        char v11 = *result++;
        *a2++ = v11;
LABEL_6:
        char v12 = *result++;
        *a2++ = v12;
LABEL_7:
        char v13 = *result++;
        *a2++ = v13;
LABEL_8:
        char v14 = *result++;
        *a2++ = v14;
LABEL_9:
        char v15 = *result++;
        *a2++ = v15;
LABEL_10:
        char v16 = *result++;
        *a2++ = v16;
LABEL_11:
        char v17 = *result++;
        *a2++ = v17;
        break;
      default:
        break;
    }
    BOOL v18 = a3 >= v10;
    unint64_t v19 = a3 - v10;
    if (!v18) {
      unint64_t v19 = 0;
    }
    if (v19 >= 8)
    {
      unint64_t v20 = ((v19 >> 3) + 7) >> 3;
      switch((v19 >> 3) & 7)
      {
        case 1uLL:
          goto LABEL_32;
        case 2uLL:
          goto LABEL_31;
        case 3uLL:
          goto LABEL_30;
        case 4uLL:
          goto LABEL_29;
        case 5uLL:
          goto LABEL_28;
        case 6uLL:
          goto LABEL_27;
        case 7uLL:
          goto LABEL_26;
        default:
          do
          {
            uint64_t v29 = *(void *)result;
            result += 8;
            *(void *)a2 = v29;
            a2 += 8;
LABEL_26:
            uint64_t v30 = *(void *)result;
            result += 8;
            *(void *)a2 = v30;
            a2 += 8;
LABEL_27:
            uint64_t v31 = *(void *)result;
            result += 8;
            *(void *)a2 = v31;
            a2 += 8;
LABEL_28:
            uint64_t v32 = *(void *)result;
            result += 8;
            *(void *)a2 = v32;
            a2 += 8;
LABEL_29:
            uint64_t v33 = *(void *)result;
            result += 8;
            *(void *)a2 = v33;
            a2 += 8;
LABEL_30:
            uint64_t v34 = *(void *)result;
            result += 8;
            *(void *)a2 = v34;
            a2 += 8;
LABEL_31:
            uint64_t v35 = *(void *)result;
            result += 8;
            *(void *)a2 = v35;
            a2 += 8;
LABEL_32:
            uint64_t v36 = *(void *)result;
            result += 8;
            *(void *)a2 = v36;
            a2 += 8;
            --v20;
          }
          while (v20);
          break;
      }
    }
    switch(v19 & 7)
    {
      case 1uLL:
        goto LABEL_40;
      case 2uLL:
        goto LABEL_39;
      case 3uLL:
        goto LABEL_38;
      case 4uLL:
        goto LABEL_37;
      case 5uLL:
        goto LABEL_36;
      case 6uLL:
        goto LABEL_35;
      case 7uLL:
        char v3 = *result++;
        *a2++ = v3;
LABEL_35:
        char v4 = *result++;
        *a2++ = v4;
LABEL_36:
        char v5 = *result++;
        *a2++ = v5;
LABEL_37:
        char v6 = *result++;
        *a2++ = v6;
LABEL_38:
        char v7 = *result++;
        *a2++ = v7;
LABEL_39:
        char v8 = *result++;
        *a2++ = v8;
LABEL_40:
        *a2 = *result;
        break;
      default:
        return result;
    }
  }
  return result;
}

unsigned char *sub_1D0B101E8(unsigned char *result, unsigned int a2, unint64_t a3)
{
  unint64_t v3 = -(int)result & 7;
  if (v3 > a3) {
    LODWORD(v3) = a3;
  }
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  unint64_t v4 = a3 - v3;
  if (v4 >= 8)
  {
    uint64_t v5 = 0x101010101010101 * a2;
    unint64_t v6 = ((v4 >> 3) + 7) >> 3;
    switch((v4 >> 3) & 7)
    {
      case 1uLL:
        goto LABEL_20;
      case 2uLL:
        goto LABEL_19;
      case 3uLL:
        goto LABEL_18;
      case 4uLL:
        goto LABEL_17;
      case 5uLL:
        goto LABEL_16;
      case 6uLL:
        goto LABEL_15;
      case 7uLL:
        goto LABEL_14;
      default:
        do
        {
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_14:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_15:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_16:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_17:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_18:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_19:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_20:
          *(void *)uint64_t result = v5;
          result += 8;
          --v6;
        }
        while (v6);
        break;
    }
  }
  switch(v4 & 7)
  {
    case 1uLL:
      goto LABEL_28;
    case 2uLL:
      goto LABEL_27;
    case 3uLL:
      goto LABEL_26;
    case 4uLL:
      goto LABEL_25;
    case 5uLL:
      goto LABEL_24;
    case 6uLL:
      goto LABEL_23;
    case 7uLL:
      *result++ = a2;
LABEL_23:
      *result++ = a2;
LABEL_24:
      *result++ = a2;
LABEL_25:
      *result++ = a2;
LABEL_26:
      *result++ = a2;
LABEL_27:
      *result++ = a2;
LABEL_28:
      *uint64_t result = a2;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D0B102D4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((*(void *)(v1 + 40) == 0) | a1)))();
}

uint64_t metadataSource_Finalize_cold_1(int a1)
{
  if (a1 != -1) {
    return LogPrintF();
  }
  uint64_t result = _LogCategory_Initialize();
  if (result) {
    return LogPrintF();
  }
  return result;
}

uint64_t apsession_Finalize_cold_1(int a1)
{
  if (a1 != -1) {
    return LogPrintF();
  }
  uint64_t result = _LogCategory_Initialize();
  if (result) {
    return LogPrintF();
  }
  return result;
}

uint64_t manager_Finalize_cold_1(int a1)
{
  if (a1 != -1) {
    return LogPrintF();
  }
  uint64_t result = _LogCategory_Initialize();
  if (result) {
    return LogPrintF();
  }
  return result;
}

void __manager_copyShowInfo_block_invoke_cold_1()
{
}

uint64_t spmanager_Finalize_cold_1(int a1)
{
  if (a1 != -1) {
    return LogPrintF();
  }
  uint64_t result = _LogCategory_Initialize();
  if (result) {
    return LogPrintF();
  }
  return result;
}

void screenstreamudp_handleClearScreen_cold_1()
{
}

uint64_t __carManager_getWeakRefTable_block_invoke_cold_1(int a1)
{
  if (a1 != -1) {
    return LogPrintF();
  }
  uint64_t result = _LogCategory_Initialize();
  if (result) {
    return LogPrintF();
  }
  return result;
}

uint64_t sdpsession_Finalize_cold_1(int a1)
{
  if (a1 != -1) {
    return LogPrintF();
  }
  uint64_t result = _LogCategory_Initialize();
  if (result) {
    return LogPrintF();
  }
  return result;
}

uint64_t _APRealTimeAudioFileWriterFinalize_cold_1(int a1)
{
  if (a1 != -1) {
    return LogPrintF();
  }
  uint64_t result = _LogCategory_Initialize();
  if (result) {
    return LogPrintF();
  }
  return result;
}

uint64_t hdpd_Finalize_cold_1(int a1)
{
  if (a1 != -1) {
    return LogPrintF();
  }
  uint64_t result = _LogCategory_Initialize();
  if (result) {
    return LogPrintF();
  }
  return result;
}

uint64_t endpointCluster_Finalize_cold_1(int a1)
{
  if (a1 != -1) {
    return LogPrintF();
  }
  uint64_t result = _LogCategory_Initialize();
  if (result) {
    return LogPrintF();
  }
  return result;
}

uint64_t spendpoint_Finalize_cold_1(int a1)
{
  if (a1 != -1) {
    return LogPrintF();
  }
  uint64_t result = _LogCategory_Initialize();
  if (result) {
    return LogPrintF();
  }
  return result;
}

uint64_t hdpp_Finalize_cold_1(int a1)
{
  if (a1 != -1) {
    return LogPrintF();
  }
  uint64_t result = _LogCategory_Initialize();
  if (result) {
    return LogPrintF();
  }
  return result;
}

uint64_t endpoint_Finalize_cold_1(int a1)
{
  if (a1 != -1) {
    return LogPrintF();
  }
  uint64_t result = _LogCategory_Initialize();
  if (result) {
    return LogPrintF();
  }
  return result;
}

uint64_t APAdvertiserInfoCopyAirPlayData()
{
  return MEMORY[0x1F41053E8]();
}

uint64_t APAdvertiserInfoCopyClusterCompatibleAirPlayData()
{
  return MEMORY[0x1F41053F0]();
}

uint64_t APAdvertiserInfoCopyProperty()
{
  return MEMORY[0x1F41053F8]();
}

uint64_t APAdvertiserInfoCreate()
{
  return MEMORY[0x1F4105400]();
}

uint64_t APAdvertiserInfoCreateTestInfoDictionary()
{
  return MEMORY[0x1F4105408]();
}

uint64_t APAdvertiserInfoCreateWithRAOPAndAirPlayDataAndDeviceName()
{
  return MEMORY[0x1F4105410]();
}

uint64_t APAdvertiserInfoSetProperty()
{
  return MEMORY[0x1F4105418]();
}

uint64_t APAudioFormatAtmosIsAllowedForCurrentDeviceAsSender()
{
  return MEMORY[0x1F4107238]();
}

uint64_t APAudioFormatChooseFromPreferredAudioFormats()
{
  return MEMORY[0x1F4107240]();
}

uint64_t APAudioFormatCopyPreferredBufferedAudioFormats()
{
  return MEMORY[0x1F4107248]();
}

uint64_t APAudioFormatCopyPreferredLowLatencyAudioFormats()
{
  return MEMORY[0x1F4107250]();
}

uint64_t APAudioFormatCopyPreferredRealTimeAudioFormats()
{
  return MEMORY[0x1F4107258]();
}

uint64_t APAudioFormatCreateDescriptionArray()
{
  return MEMORY[0x1F4107260]();
}

uint64_t APAudioFormatGetLowLatencyAudioFramesPerPacket()
{
  return MEMORY[0x1F4107268]();
}

uint64_t APAudioFormatGetSupportedTransportAudioFormatsLowLatencySender()
{
  return MEMORY[0x1F4107270]();
}

uint64_t APAudioFormatSupportsVBR()
{
  return MEMORY[0x1F4107278]();
}

uint64_t APAudioFormatToASBD()
{
  return MEMORY[0x1F4107280]();
}

uint64_t APAudioFormatToCompressionType()
{
  return MEMORY[0x1F4107288]();
}

uint64_t APBrokerManagerAuthenticateBrokerGroup()
{
  return MEMORY[0x1F4105420]();
}

uint64_t APBrokerManagerCreate()
{
  return MEMORY[0x1F4105428]();
}

uint64_t APBrokerManagerGetInfoFromBrokerGroup()
{
  return MEMORY[0x1F4105430]();
}

uint64_t APBrokerManagerInvalidate()
{
  return MEMORY[0x1F4105438]();
}

uint64_t APBrowserCarBonjourCreate()
{
  return MEMORY[0x1F4105440]();
}

uint64_t APBrowserCarSessionCreate()
{
  return MEMORY[0x1F4105448]();
}

uint64_t APBrowserCreate()
{
  return MEMORY[0x1F4105450]();
}

uint64_t APBrowserDiscoverAndInjectDevice()
{
  return MEMORY[0x1F4105458]();
}

uint64_t APBrowserGetCMBaseObject()
{
  return MEMORY[0x1F4105460]();
}

uint64_t APBrowserGetEventString()
{
  return MEMORY[0x1F4105468]();
}

uint64_t APBrowserGetModeString()
{
  return MEMORY[0x1F4105470]();
}

uint64_t APBrowserGetStartEventForBrowserDeviceEvent()
{
  return MEMORY[0x1F4105478]();
}

uint64_t APBrowserRemoveInjectedDevice()
{
  return MEMORY[0x1F4105480]();
}

uint64_t APBrowserTickleDetailedMode()
{
  return MEMORY[0x1F4105488]();
}

uint64_t APCarPlayControlServerCreate()
{
  return MEMORY[0x1F4105490]();
}

uint64_t APSAPAPBBufDecodeHeader()
{
  return MEMORY[0x1F4107290]();
}

uint64_t APSAPAPBBufEncode()
{
  return MEMORY[0x1F4107298]();
}

uint64_t APSAPAPBBufEncodeGetMinBackingSize()
{
  return MEMORY[0x1F41072A0]();
}

uint64_t APSAPAPExtensionConvertLoudnessInfoDictLoudnessParametersToBBuf()
{
  return MEMORY[0x1F41072B0]();
}

uint64_t APSAPAPExtensionConvertLoudnessInfoDictMediaKindToBBuf()
{
  return MEMORY[0x1F41072B8]();
}

uint64_t APSAPAPExtensionConvertLoudnessInfoDictSoundCheckInfoToBBuf()
{
  return MEMORY[0x1F41072C0]();
}

uint64_t APSAPAPExtensionConvertSbufTracerDictToBBuf()
{
  return MEMORY[0x1F41072C8]();
}

uint64_t APSAccessControlIsValidConfig()
{
  return MEMORY[0x1F41072D0]();
}

uint64_t APSAllocatorGetDefaultAirPlayMallocZone()
{
  return MEMORY[0x1F41072D8]();
}

uint64_t APSAllocatorGetDefaultAirPlayMallocZoneCFAllocator()
{
  return MEMORY[0x1F41072E0]();
}

uint64_t APSAtomicMessageQueueCreate()
{
  return MEMORY[0x1F41072F8]();
}

uint64_t APSAtomicMessageQueueReadMessage()
{
  return MEMORY[0x1F4107300]();
}

uint64_t APSAtomicMessageQueueSendMessage()
{
  return MEMORY[0x1F4107308]();
}

uint64_t APSAudioFormatDescriptionCopyDebugString()
{
  return MEMORY[0x1F4107310]();
}

uint64_t APSAudioFormatDescriptionCopyFigEndpointStreamAudioFormatDescription()
{
  return MEMORY[0x1F4107318]();
}

uint64_t APSAudioFormatDescriptionCreateAndAppendAudioFormatToList()
{
  return MEMORY[0x1F4107320]();
}

uint64_t APSAudioFormatDescriptionCreateWithASBD()
{
  return MEMORY[0x1F4107328]();
}

uint64_t APSAudioFormatDescriptionCreateWithCMFormatDescription()
{
  return MEMORY[0x1F4107330]();
}

uint64_t APSAudioFormatDescriptionCreateWithFigEndpointStreamAudioFormatDescription()
{
  return MEMORY[0x1F4107338]();
}

uint64_t APSAudioFormatDescriptionGetASBD()
{
  return MEMORY[0x1F4107340]();
}

uint64_t APSAudioFormatDescriptionGetAudioFormatIndex()
{
  return MEMORY[0x1F4107348]();
}

uint64_t APSAudioFormatDescriptionGetChannelCount()
{
  return MEMORY[0x1F4107350]();
}

uint64_t APSAudioFormatDescriptionGetCompressionType()
{
  return MEMORY[0x1F4107358]();
}

uint64_t APSAudioFormatDescriptionGetFramesPerPacket()
{
  return MEMORY[0x1F4107360]();
}

uint64_t APSAudioFormatDescriptionGetLegacyFormatMask()
{
  return MEMORY[0x1F4107368]();
}

uint64_t APSAudioFormatDescriptionGetSampleRate()
{
  return MEMORY[0x1F4107370]();
}

uint64_t APSAudioFormatDescriptionListAddFormat()
{
  return MEMORY[0x1F4107378]();
}

uint64_t APSAudioFormatDescriptionListAddSupportedEncryptedALACFormatsForPassthrough()
{
  return MEMORY[0x1F4107380]();
}

uint64_t APSAudioFormatDescriptionListAddSupportedFormatsForALACToList()
{
  return MEMORY[0x1F4107388]();
}

uint64_t APSAudioFormatDescriptionListAddSupportedFormatsForPassthrough()
{
  return MEMORY[0x1F4107390]();
}

uint64_t APSAudioFormatDescriptionListContainsFormat()
{
  return MEMORY[0x1F4107398]();
}

uint64_t APSAudioFormatDescriptionListCopyAudioFormatDescriptionsArray()
{
  return MEMORY[0x1F41073A0]();
}

uint64_t APSAudioFormatDescriptionListCopyChannelLayoutTags()
{
  return MEMORY[0x1F41073A8]();
}

uint64_t APSAudioFormatDescriptionListCopyDebugString()
{
  return MEMORY[0x1F41073B0]();
}

uint64_t APSAudioFormatDescriptionListCopyFilterFormatsForCurrentBufferedSenderWithEndpointStreamsInfo()
{
  return MEMORY[0x1F41073B8]();
}

uint64_t APSAudioFormatDescriptionListCopyRichestFormatAsFigEndpointStreamAudioFormatDescription()
{
  return MEMORY[0x1F41073C0]();
}

uint64_t APSAudioFormatDescriptionListCopyTransportFormatDescriptionForSourceFormatDescription()
{
  return MEMORY[0x1F41073C8]();
}

uint64_t APSAudioFormatDescriptionListCreate()
{
  return MEMORY[0x1F41073D0]();
}

uint64_t APSAudioFormatDescriptionListCreateASRDArrayPCM()
{
  return MEMORY[0x1F41073D8]();
}

uint64_t APSAudioFormatDescriptionListCreateFigEndpointStreamAudioFormatDescriptionArray()
{
  return MEMORY[0x1F41073E0]();
}

uint64_t APSAudioFormatDescriptionListCreateFilteredListWithTranscodeFormats()
{
  return MEMORY[0x1F41073E8]();
}

uint64_t APSAudioFormatDescriptionListCreateForBufferedLocalReceiverEchoCancellationReference()
{
  return MEMORY[0x1F41073F0]();
}

uint64_t APSAudioFormatDescriptionListCreateForBufferedReceiverWithAudioCapabilities()
{
  return MEMORY[0x1F41073F8]();
}

uint64_t APSAudioFormatDescriptionListCreateForLowLatencySender()
{
  return MEMORY[0x1F4107400]();
}

uint64_t APSAudioFormatDescriptionListCreateForRealTimeLocalReceiver()
{
  return MEMORY[0x1F4107408]();
}

uint64_t APSAudioFormatDescriptionListCreateForRealTimeSender()
{
  return MEMORY[0x1F4107410]();
}

uint64_t APSAudioFormatDescriptionListCreateIntersectionList()
{
  return MEMORY[0x1F4107418]();
}

uint64_t APSAudioFormatDescriptionListCreateRelativeComplementList()
{
  return MEMORY[0x1F4107420]();
}

uint64_t APSAudioFormatDescriptionListCreateWithAdvertisementArray()
{
  return MEMORY[0x1F4107428]();
}

uint64_t APSAudioFormatDescriptionListCreateWithFigEndpointStreamAudioFormatDescriptionArray()
{
  return MEMORY[0x1F4107430]();
}

uint64_t APSAudioFormatDescriptionListCreateWithLegacyAudioFormatMask()
{
  return MEMORY[0x1F4107438]();
}

uint64_t APSAudioFormatDescriptionListGetDefaultFormat()
{
  return MEMORY[0x1F4107440]();
}

uint64_t APSAudioFormatDescriptionListGetForBufferedSender()
{
  return MEMORY[0x1F4107448]();
}

uint64_t APSAudioFormatDescriptionListGetFormatCount()
{
  return MEMORY[0x1F4107450]();
}

uint64_t APSAudioFormatDescriptionListGetLegacyFormatMask()
{
  return MEMORY[0x1F4107458]();
}

uint64_t APSAudioFormatDescriptionListGetMaxChannelCount()
{
  return MEMORY[0x1F4107460]();
}

uint64_t APSAudioFormatDescriptionListSupports44kHz()
{
  return MEMORY[0x1F4107468]();
}

uint64_t APSAudioFormatDescriptionListSupports48kHz()
{
  return MEMORY[0x1F4107470]();
}

uint64_t APSAudioIOAssertionTimingControllerAssertUntilTime()
{
  return MEMORY[0x1F4107478]();
}

uint64_t APSAudioIOAssertionTimingControllerCreate()
{
  return MEMORY[0x1F4107480]();
}

uint64_t APSAudioLatencyAdjustForAVMs()
{
  return MEMORY[0x1F4107488]();
}

uint64_t APSAudioLatencyAdjustForScreenMs()
{
  return MEMORY[0x1F4107490]();
}

uint64_t APSAudioLatencyAdjustForSystemAudioMs()
{
  return MEMORY[0x1F4107498]();
}

uint64_t APSAudioLatencyForAVMs()
{
  return MEMORY[0x1F41074A0]();
}

uint64_t APSAudioLatencyForScreenMs()
{
  return MEMORY[0x1F41074A8]();
}

uint64_t APSAudioLatencyForSystemAudioMs()
{
  return MEMORY[0x1F41074B0]();
}

uint64_t APSAudioLatencyMinForAVMs()
{
  return MEMORY[0x1F41074B8]();
}

uint64_t APSAudioLatencyMinForScreenMs()
{
  return MEMORY[0x1F41074C0]();
}

uint64_t APSAudioLatencyMinForSystemAudioMs()
{
  return MEMORY[0x1F41074C8]();
}

uint64_t APSAudioLatencyOffsetForAVMs()
{
  return MEMORY[0x1F41074D0]();
}

uint64_t APSAudioLatencyOffsetForScreenMs()
{
  return MEMORY[0x1F41074D8]();
}

uint64_t APSAudioLatencyOffsetForSystemAudioMs()
{
  return MEMORY[0x1F41074E0]();
}

uint64_t APSAudioStatsCreate()
{
  return MEMORY[0x1F41074E8]();
}

uint64_t APSAudioStats_CopySampleRateStatsAsString()
{
  return MEMORY[0x1F41074F0]();
}

uint64_t APSAudioStats_MarkEvent()
{
  return MEMORY[0x1F41074F8]();
}

uint64_t APSAudioStats_ProcessAudioBuffer()
{
  return MEMORY[0x1F4107500]();
}

uint64_t APSAudioStats_TerminateSession()
{
  return MEMORY[0x1F4107508]();
}

uint64_t APSAudioTransportTimeCopyDebugDesc()
{
  return MEMORY[0x1F4107510]();
}

uint64_t APSAudioTransportTimeIsValid()
{
  return MEMORY[0x1F4107518]();
}

uint64_t APSAudioTransportTimeMakeWithMediaTime()
{
  return MEMORY[0x1F4107520]();
}

uint64_t APSAudioTransportTimeMakeWithRTPTime()
{
  return MEMORY[0x1F4107528]();
}

uint64_t APSAudioTransportTimeMax()
{
  return MEMORY[0x1F4107530]();
}

uint64_t APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary()
{
  return MEMORY[0x1F4107538]();
}

uint64_t APSAudioTransportTimeUtilsEncodeToRequestResponseDictionary()
{
  return MEMORY[0x1F4107540]();
}

uint64_t APSBadgingFormatInfoCopyBadgeType()
{
  return MEMORY[0x1F4107548]();
}

uint64_t APSBadgingFormatInfoTypeGetEnum()
{
  return MEMORY[0x1F4107550]();
}

uint64_t APSBadgingFormatInfoTypeResolve()
{
  return MEMORY[0x1F4107558]();
}

uint64_t APSCFArrayGetEmpty()
{
  return MEMORY[0x1F4107560]();
}

uint64_t APSCFArrayGetUInt64AtIndex()
{
  return MEMORY[0x1F4107568]();
}

uint64_t APSCFArrayReverse()
{
  return MEMORY[0x1F4107570]();
}

uint64_t APSCFArraySetUInt64AtIndex()
{
  return MEMORY[0x1F4107578]();
}

uint64_t APSCFDictionaryGetBooleanIfPresent()
{
  return MEMORY[0x1F4107588]();
}

uint64_t APSCFRealTimeReadableCopyValue()
{
  return MEMORY[0x1F4107590]();
}

uint64_t APSCFRealTimeReadableCreate()
{
  return MEMORY[0x1F4107598]();
}

uint64_t APSCFRealTimeReadableSetValue()
{
  return MEMORY[0x1F41075A0]();
}

uint64_t APSCFRealTimeRelease()
{
  return MEMORY[0x1F41075A8]();
}

uint64_t APSCMBlockBufferCreateBigUIntWithUInt64()
{
  return MEMORY[0x1F41075B0]();
}

uint64_t APSCMBlockBufferCreateWithUUID()
{
  return MEMORY[0x1F41075C0]();
}

uint64_t APSCMBlockBufferReplace()
{
  return MEMORY[0x1F41075C8]();
}

uint64_t APSCanSendToAltReceiver()
{
  return MEMORY[0x1F41075D0]();
}

uint64_t APSCarPlayScreenLatencyMs()
{
  return MEMORY[0x1F41075D8]();
}

uint64_t APSClusterTypeToDescriptionString()
{
  return MEMORY[0x1F41075E0]();
}

uint64_t APSClusterTypeToFigEndpointDescriptorClusterType()
{
  return MEMORY[0x1F41075E8]();
}

uint64_t APSConnectionInterfaceManagerCreate()
{
  return MEMORY[0x1F41075F0]();
}

uint64_t APSConnectionInterfaceManagerReleaseInterfaceSelection()
{
  return MEMORY[0x1F41075F8]();
}

uint64_t APSConnectionInterfaceManagerSelectInterface()
{
  return MEMORY[0x1F4107600]();
}

uint64_t APSCopyBootUUID()
{
  return MEMORY[0x1F4107608]();
}

uint64_t APSCopyClusterInfo()
{
  return MEMORY[0x1F4107610]();
}

uint64_t APSCopyTightSyncInfo()
{
  return MEMORY[0x1F4107618]();
}

uint64_t APSCreateGroupID()
{
  return MEMORY[0x1F4107620]();
}

uint64_t APSCreateNewUUIDString()
{
  return MEMORY[0x1F4107628]();
}

uint64_t APSCreateSecureMemAllocator()
{
  return MEMORY[0x1F4107630]();
}

uint64_t APSCryptorCBCCreate()
{
  return MEMORY[0x1F4107638]();
}

uint64_t APSCryptorCTRCreate()
{
  return MEMORY[0x1F4107640]();
}

uint64_t APSCryptorChaCha20Poly1305Create()
{
  return MEMORY[0x1F4107648]();
}

uint64_t APSCryptorGetNull()
{
  return MEMORY[0x1F4107650]();
}

uint64_t APSCryptorGetTypeID()
{
  return MEMORY[0x1F4107658]();
}

uint64_t APSDataSetStatisticsAddValue()
{
  return MEMORY[0x1F4107660]();
}

uint64_t APSDataSetStatisticsInit()
{
  return MEMORY[0x1F4107668]();
}

uint64_t APSDispatchAsyncFHelper()
{
  return MEMORY[0x1F4107670]();
}

uint64_t APSDispatchSectionCreate()
{
  return MEMORY[0x1F4107688]();
}

uint64_t APSDispatchSectionEnter()
{
  return MEMORY[0x1F4107690]();
}

uint64_t APSDispatchSectionEnterWithPriorityDispatcher()
{
  return MEMORY[0x1F4107698]();
}

uint64_t APSDispatchSectionLeave()
{
  return MEMORY[0x1F41076A0]();
}

uint64_t APSDispatchSyncBatchAssignment()
{
  return MEMORY[0x1F41076A8]();
}

uint64_t APSDispatchSyncFlush()
{
  return MEMORY[0x1F41076B0]();
}

uint64_t APSDispatchSyncTask()
{
  return MEMORY[0x1F41076B8]();
}

uint64_t APSDynamicLatencyManagerAddPerformanceReport()
{
  return MEMORY[0x1F41076C0]();
}

uint64_t APSDynamicLatencyManagerGetLLA()
{
  return MEMORY[0x1F41076C8]();
}

uint64_t APSDynamicLatencyManagerGetLatencyTier()
{
  return MEMORY[0x1F41076D0]();
}

uint64_t APSDynamicLatencyManagerReset()
{
  return MEMORY[0x1F41076D8]();
}

uint64_t APSDynamicLatencyManagerSetVariant()
{
  return MEMORY[0x1F41076E0]();
}

uint64_t APSDynamicLatencyManagerUpdate()
{
  return MEMORY[0x1F41076E8]();
}

uint64_t APSEndpointStreamAudioHoseProtocolGetProtocolID()
{
  return MEMORY[0x1F41076F0]();
}

uint64_t APSEndpointStreamAudioHoseRegistrarProtocolGetProtocolID()
{
  return MEMORY[0x1F41076F8]();
}

uint64_t APSEndpointStreamAudioHoseSBARCreate()
{
  return MEMORY[0x1F4107700]();
}

uint64_t APSEndpointStreamAudioHoseSBARInvalidate()
{
  return MEMORY[0x1F4107708]();
}

uint64_t APSEndpointStreamAudioHoseSendAudioBatchSlow()
{
  return MEMORY[0x1F4107710]();
}

uint64_t APSEventRecorderAddChildEventRecorderToParent()
{
  return MEMORY[0x1F4107718]();
}

uint64_t APSEventRecorderAddSignPostForEvent()
{
  return MEMORY[0x1F4107720]();
}

uint64_t APSEventRecorderCreate()
{
  return MEMORY[0x1F4107730]();
}

uint64_t APSEventRecorderCreateStringWithEventRecorderTime()
{
  return MEMORY[0x1F4107738]();
}

uint64_t APSEventRecorderGetEventTime()
{
  return MEMORY[0x1F4107740]();
}

uint64_t APSEventRecorderGetEventTimeRecursive()
{
  return MEMORY[0x1F4107748]();
}

uint64_t APSEventRecorderGetTimeBetweenCFAbsoluteTimeAndEventInMilliSecond()
{
  return MEMORY[0x1F4107750]();
}

uint64_t APSEventRecorderGetTimeBetweenEventsInMilliSecond()
{
  return MEMORY[0x1F4107758]();
}

uint64_t APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursive()
{
  return MEMORY[0x1F4107760]();
}

uint64_t APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursiveEx()
{
  return MEMORY[0x1F4107768]();
}

uint64_t APSEventRecorderGetTimeSinceEventInMilliSecond()
{
  return MEMORY[0x1F4107770]();
}

uint64_t APSEventRecorderGetTimeSinceEventInMilliSecondRecursive()
{
  return MEMORY[0x1F4107778]();
}

uint64_t APSEventRecorderRecordEvent()
{
  return MEMORY[0x1F4107788]();
}

uint64_t APSEventRecorderRecordEventWithFlags()
{
  return MEMORY[0x1F4107790]();
}

uint64_t APSEventRecorderRemoveChildEventRecorderFromParent()
{
  return MEMORY[0x1F41077A0]();
}

uint64_t APSEventRecorderReset()
{
  return MEMORY[0x1F41077A8]();
}

uint64_t APSFeaturesClearAllFeatures()
{
  return MEMORY[0x1F41077B8]();
}

uint64_t APSFeaturesClearFeature()
{
  return MEMORY[0x1F41077C0]();
}

uint64_t APSFeaturesCopyStringRepresentation()
{
  return MEMORY[0x1F41077C8]();
}

uint64_t APSFeaturesCreateFromEndpointInfoFeatureRepresentations()
{
  return MEMORY[0x1F41077D0]();
}

uint64_t APSFeaturesCreateMutable()
{
  return MEMORY[0x1F41077E8]();
}

uint64_t APSFeaturesCreateMutableCopy()
{
  return MEMORY[0x1F41077F0]();
}

uint64_t APSFeaturesHasAllFeatures()
{
  return MEMORY[0x1F4107800]();
}

uint64_t APSFeaturesHasFeature()
{
  return MEMORY[0x1F4107808]();
}

uint64_t APSFeaturesSetAllFeatures()
{
  return MEMORY[0x1F4107810]();
}

uint64_t APSFeaturesSetFeature()
{
  return MEMORY[0x1F4107818]();
}

uint64_t APSGetAPMuteControlTypeName()
{
  return MEMORY[0x1F4107858]();
}

uint64_t APSGetAPVolumeControlTypeName()
{
  return MEMORY[0x1F4107860]();
}

uint64_t APSGetAirPlayNonSystemPeersCount()
{
  return MEMORY[0x1F4107868]();
}

uint64_t APSGetAllowPersistentGroupsOnInfra()
{
  return MEMORY[0x1F4107870]();
}

uint64_t APSGetCPULoadAverage()
{
  return MEMORY[0x1F4107878]();
}

uint64_t APSGetClusterModelForPersistentGroupModel()
{
  return MEMORY[0x1F4107880]();
}

uint64_t APSGetClusterModelForTightSyncGroupModel()
{
  return MEMORY[0x1F4107888]();
}

uint64_t APSGetClusterModelNameForClusterTypeAndModel()
{
  return MEMORY[0x1F4107890]();
}

uint64_t APSGetDeviceID()
{
  return MEMORY[0x1F4107898]();
}

uint64_t APSGetDeviceNameCString()
{
  return MEMORY[0x1F41078A0]();
}

uint64_t APSGetFBOPropertyCString()
{
  return MEMORY[0x1F41078A8]();
}

uint64_t APSGetFBOPropertyDouble()
{
  return MEMORY[0x1F41078B0]();
}

uint64_t APSGetFBOPropertyInt64()
{
  return MEMORY[0x1F41078B8]();
}

uint64_t APSGetFabricatedMemberIDForHTGroup()
{
  return MEMORY[0x1F41078C0]();
}

uint64_t APSGetFigEndpointVolumeControlTypeName()
{
  return MEMORY[0x1F41078C8]();
}

uint64_t APSGetMaxSizePreservingAspectRatio()
{
  return MEMORY[0x1F41078D0]();
}

uint64_t APSGetPersistentGroupModel()
{
  return MEMORY[0x1F41078D8]();
}

uint64_t APSGetVolumeFadeTypeName()
{
  return MEMORY[0x1F41078E0]();
}

uint64_t APSHDMIVideoLatencyMs()
{
  return MEMORY[0x1F41078E8]();
}

uint64_t APSHTTPOpenLocalFile()
{
  return MEMORY[0x1F41078F0]();
}

uint64_t APSHTTPParseByteRangeRequest()
{
  return MEMORY[0x1F41078F8]();
}

uint64_t APSHas4K60444SenderSupport()
{
  return MEMORY[0x1F4107900]();
}

uint64_t APSHasHDRSenderSupport()
{
  return MEMORY[0x1F4107908]();
}

uint64_t APSHasNANSupport()
{
  return MEMORY[0x1F4107910]();
}

uint64_t APSHasSamePersistentGroupUUID()
{
  return MEMORY[0x1F4107918]();
}

uint64_t APSHasUDPMirroringOutOfProcessSupport()
{
  return MEMORY[0x1F4107920]();
}

uint64_t APSHasUDPMirroringSenderSupport()
{
  return MEMORY[0x1F4107928]();
}

uint64_t APSHierarchyReporterProtocolGetProtocolID()
{
  return MEMORY[0x1F4107930]();
}

uint64_t APSIOReporterCreate()
{
  return MEMORY[0x1F4107938]();
}

uint64_t APSIOReporterGetCoreCaptureCount()
{
  return MEMORY[0x1F4107940]();
}

uint64_t APSIntrospectorAddCommand()
{
  return MEMORY[0x1F4107948]();
}

uint64_t APSIsAPMSpeaker()
{
  return MEMORY[0x1F4107958]();
}

uint64_t APSIsAPValeriaScreenSender()
{
  return MEMORY[0x1F4107960]();
}

uint64_t APSIsAirPlayDEnabled()
{
  return MEMORY[0x1F4107970]();
}

uint64_t APSIsDemoModeEnabled()
{
  return MEMORY[0x1F4107978]();
}

uint64_t APSIsDirectLinkInterface()
{
  return MEMORY[0x1F4107980]();
}

uint64_t APSIsEndpointClusteringEnabled()
{
  return MEMORY[0x1F4107988]();
}

uint64_t APSIsExplicitEndpointManagerInitializationEnabledInMX()
{
  return MEMORY[0x1F4107998]();
}

uint64_t APSIsFBOPropertyAvailable()
{
  return MEMORY[0x1F41079A0]();
}

uint64_t APSIsFBOPropertyNonNull()
{
  return MEMORY[0x1F41079A8]();
}

uint64_t APSIsInAirPlaySenderSystemServer()
{
  return MEMORY[0x1F41079B0]();
}

uint64_t APSIsInAudioSystemServer()
{
  return MEMORY[0x1F41079B8]();
}

uint64_t APSIsMemberOfHTGroup()
{
  return MEMORY[0x1F41079C0]();
}

uint64_t APSIsMemberOfPersistentGroup()
{
  return MEMORY[0x1F41079C8]();
}

uint64_t APSIsMemberOfStereoPair()
{
  return MEMORY[0x1F41079D0]();
}

uint64_t APSIsPairingGroupEnabled()
{
  return MEMORY[0x1F41079D8]();
}

uint64_t APSIsPermanentSpeakerGroupingEnabled()
{
  return MEMORY[0x1F41079E0]();
}

uint64_t APSIsProximitySenderEnabled()
{
  return MEMORY[0x1F41079F0]();
}

uint64_t APSIsRemoteHALPluginLoadingEnabled()
{
  return MEMORY[0x1F41079F8]();
}

uint64_t APSIsSuntoryEnabled()
{
  return MEMORY[0x1F4107A00]();
}

uint64_t APSIsVirtualMachine()
{
  return MEMORY[0x1F4107A10]();
}

uint64_t APSIssueReporterProtocolGetProtocolID()
{
  return MEMORY[0x1F4107A18]();
}

uint64_t APSKeyHolderGetClassID()
{
  return MEMORY[0x1F4107A20]();
}

uint64_t APSLocalAudioCapabilityMonitorCopyProperty()
{
  return MEMORY[0x1F4107A30]();
}

uint64_t APSLocalAudioCapabilityMonitorGetSharedInstance()
{
  return MEMORY[0x1F4107A38]();
}

uint64_t APSLogErrorAt()
{
  return MEMORY[0x1F4107A40]();
}

uint64_t APSMultiPrimariesEnabled()
{
  return MEMORY[0x1F4107A58]();
}

uint64_t APSNetworkAddressCopyStringRepresentationWithFlags()
{
  return MEMORY[0x1F4107A90]();
}

uint64_t APSNetworkAddressCreateWithString()
{
  return MEMORY[0x1F4107AA0]();
}

uint64_t APSNetworkAddressGetSocketAddr()
{
  return MEMORY[0x1F4107AB8]();
}

uint64_t APSNetworkAddressSetPort()
{
  return MEMORY[0x1F4107AD8]();
}

uint64_t APSNetworkClockAddOrUpdatePeerFromSerializablePeerDictionary()
{
  return MEMORY[0x1F4107AE0]();
}

uint64_t APSNetworkClockAddOrUpdatePeerWithAddressAndInterfaceNameStrings()
{
  return MEMORY[0x1F4107AE8]();
}

uint64_t APSNetworkClockDetermineAndSetOrUpdateLocalPeerInfo()
{
  return MEMORY[0x1F4107AF0]();
}

uint64_t APSNetworkClockGetCMBaseObject()
{
  return MEMORY[0x1F4107AF8]();
}

uint64_t APSNetworkClockLogCurrentNetworkTime()
{
  return MEMORY[0x1F4107B00]();
}

uint64_t APSNetworkClockNTPConvertNTPToUpTicks()
{
  return MEMORY[0x1F4107B08]();
}

uint64_t APSNetworkClockNTPConvertUpTicksToNTP()
{
  return MEMORY[0x1F4107B10]();
}

uint64_t APSNetworkClockNTPServerCreate()
{
  return MEMORY[0x1F4107B18]();
}

uint64_t APSNetworkClockPTPCreate()
{
  return MEMORY[0x1F4107B20]();
}

uint64_t APSNetworkClockReportRTCMetrics()
{
  return MEMORY[0x1F4107B28]();
}

uint64_t APSNetworkTimeCopyAsDictionary()
{
  return MEMORY[0x1F4107B30]();
}

uint64_t APSOasisCPUFloorRaiserCreate()
{
  return MEMORY[0x1F4107B38]();
}

uint64_t APSOasisCPUFloorRaiserReleaseAssertion()
{
  return MEMORY[0x1F4107B40]();
}

uint64_t APSOasisCPUFloorRaiserRetainAssertion()
{
  return MEMORY[0x1F4107B48]();
}

uint64_t APSPSGDataSourceGetCMBaseObject()
{
  return MEMORY[0x1F4107B50]();
}

uint64_t APSPersistentGroupTypeToClusterType()
{
  return MEMORY[0x1F4107B68]();
}

uint64_t APSPowerAssertionCreate()
{
  return MEMORY[0x1F4107B70]();
}

uint64_t APSPowerAssertionRaise()
{
  return MEMORY[0x1F4107B78]();
}

uint64_t APSPowerAssertionRaiseTemporary()
{
  return MEMORY[0x1F4107B80]();
}

uint64_t APSPowerAssertionRelease()
{
  return MEMORY[0x1F4107B88]();
}

uint64_t APSPriorityDispatchSourceCancel()
{
  return MEMORY[0x1F4107BA0]();
}

uint64_t APSPriorityDispatchSourceCreate()
{
  return MEMORY[0x1F4107BA8]();
}

uint64_t APSPriorityDispatchSourceResume()
{
  return MEMORY[0x1F4107BB0]();
}

uint64_t APSPriorityDispatchSourceSetPriority()
{
  return MEMORY[0x1F4107BB8]();
}

uint64_t APSPriorityDispatchSourceSetTimer()
{
  return MEMORY[0x1F4107BC0]();
}

uint64_t APSPriorityDispatcherAsync()
{
  return MEMORY[0x1F4107BD0]();
}

uint64_t APSPriorityDispatcherAsyncEnforcePriorityF()
{
  return MEMORY[0x1F4107BD8]();
}

uint64_t APSPriorityDispatcherAsyncF()
{
  return MEMORY[0x1F4107BE0]();
}

uint64_t APSPriorityDispatcherCreate()
{
  return MEMORY[0x1F4107BE8]();
}

uint64_t APSPriorityDispatcherSetPriority()
{
  return MEMORY[0x1F4107BF0]();
}

uint64_t APSPriorityDispatcherSyncF()
{
  return MEMORY[0x1F4107BF8]();
}

uint64_t APSPriorityDispatcherSyncTask()
{
  return MEMORY[0x1F4107C00]();
}

uint64_t APSRTCReportingAgentCreate()
{
  return MEMORY[0x1F4107C08]();
}

uint64_t APSRTCReportingAgentSendEvent()
{
  return MEMORY[0x1F4107C10]();
}

uint64_t APSRTCReportingAgentSendOfflineEvent()
{
  return MEMORY[0x1F4107C18]();
}

uint64_t APSRTPJitterBufferCreate()
{
  return MEMORY[0x1F4107C28]();
}

uint64_t APSRTPJitterBufferDiscardPacket()
{
  return MEMORY[0x1F4107C30]();
}

uint64_t APSRTPJitterBufferEnqueuePacket()
{
  return MEMORY[0x1F4107C38]();
}

uint64_t APSRTPJitterBufferGetEmptyPacket()
{
  return MEMORY[0x1F4107C40]();
}

uint64_t APSRTPJitterBufferRead()
{
  return MEMORY[0x1F4107C48]();
}

uint64_t APSRealTimeAllocatorGetDefault()
{
  return MEMORY[0x1F4107C60]();
}

uint64_t APSRealTimePTPClockCreate()
{
  return MEMORY[0x1F4107C78]();
}

uint64_t APSRealTimePTPClockGetEstimatedPTPTimeForHostTime()
{
  return MEMORY[0x1F4107C80]();
}

uint64_t APSRealTimeReadableCreate()
{
  return MEMORY[0x1F4107C88]();
}

uint64_t APSRealTimeReadableRead()
{
  return MEMORY[0x1F4107C90]();
}

uint64_t APSRealTimeReadableWrite()
{
  return MEMORY[0x1F4107CA8]();
}

uint64_t APSRealTimeSignalCreate()
{
  return MEMORY[0x1F4107CB0]();
}

uint64_t APSRealTimeSignalInvalidate()
{
  return MEMORY[0x1F4107CB8]();
}

uint64_t APSRealTimeSignalRaise()
{
  return MEMORY[0x1F4107CC0]();
}

uint64_t APSRealTimeWritableCreate()
{
  return MEMORY[0x1F4107CC8]();
}

uint64_t APSRealTimeWritableRead()
{
  return MEMORY[0x1F4107CD0]();
}

uint64_t APSRealTimeWritableWrite()
{
  return MEMORY[0x1F4107CD8]();
}

uint64_t APSRegisterReceiverAppLauncher()
{
  return MEMORY[0x1F4107CF8]();
}

uint64_t APSRemoteConfigCopyValue()
{
  return MEMORY[0x1F4107D00]();
}

uint64_t APSRemoteConfigGetShared()
{
  return MEMORY[0x1F4107D08]();
}

uint64_t APSRemoveAirPlayNonSystemPeers()
{
  return MEMORY[0x1F4107D10]();
}

uint64_t APSRingBufferFlushControllerFlush()
{
  return MEMORY[0x1F4107D18]();
}

uint64_t APSRingBufferFlushControllerInit()
{
  return MEMORY[0x1F4107D20]();
}

uint64_t APSRingBufferFlushControllerPrepareForFlush()
{
  return MEMORY[0x1F4107D28]();
}

uint64_t APSScreenGetMediaPresentationParams()
{
  return MEMORY[0x1F4107D60]();
}

uint64_t APSScreenLatencyMs()
{
  return MEMORY[0x1F4107D68]();
}

uint64_t APSScreenMediaPresentationLatencyMs()
{
  return MEMORY[0x1F4107D70]();
}

uint64_t APSScreenMediaPresentationUDPLatencyMs()
{
  return MEMORY[0x1F4107D78]();
}

uint64_t APSSetFBOPropertyDictionary()
{
  return MEMORY[0x1F4107D80]();
}

uint64_t APSSetFBOPropertyDouble()
{
  return MEMORY[0x1F4107D88]();
}

uint64_t APSSetFBOPropertyInt64()
{
  return MEMORY[0x1F4107D90]();
}

uint64_t APSSettingsCopyValue()
{
  return MEMORY[0x1F4107D98]();
}

uint64_t APSSettingsCopyValueEx()
{
  return MEMORY[0x1F4107DA0]();
}

uint64_t APSSettingsGetBooleanIfPresent()
{
  return MEMORY[0x1F4107DA8]();
}

uint64_t APSSettingsGetCString()
{
  return MEMORY[0x1F4107DB0]();
}

uint64_t APSSettingsGetDouble()
{
  return MEMORY[0x1F4107DB8]();
}

uint64_t APSSettingsGetInt64()
{
  return MEMORY[0x1F4107DC0]();
}

uint64_t APSSettingsGetIntWithDefault()
{
  return MEMORY[0x1F4107DD0]();
}

uint64_t APSSettingsGetIntWithOverrideAndDefault()
{
  return MEMORY[0x1F4107DD8]();
}

uint64_t APSSettingsIsFeatureEnabled()
{
  return MEMORY[0x1F4107DE0]();
}

uint64_t APSSettingsSetValue()
{
  return MEMORY[0x1F4107DE8]();
}

uint64_t APSSettingsSynchronize()
{
  return MEMORY[0x1F4107DF0]();
}

uint64_t APSSharedRingBuffer_ClearDataInBuffer()
{
  return MEMORY[0x1F4107DF8]();
}

uint64_t APSSharedRingBuffer_Create()
{
  return MEMORY[0x1F4107E00]();
}

uint64_t APSSharedRingBuffer_CreateWithBufferAndState()
{
  return MEMORY[0x1F4107E08]();
}

uint64_t APSSharedRingBuffer_GetSharedMemoryBuffer()
{
  return MEMORY[0x1F4107E10]();
}

uint64_t APSSharedRingBuffer_GetSharedMemoryState()
{
  return MEMORY[0x1F4107E18]();
}

uint64_t APSSharedRingBuffer_GetWritePointer()
{
  return MEMORY[0x1F4107E20]();
}

uint64_t APSSharedRingBuffer_IsDataAvailable()
{
  return MEMORY[0x1F4107E28]();
}

uint64_t APSSharedRingBuffer_IsSpaceAvailable()
{
  return MEMORY[0x1F4107E30]();
}

uint64_t APSSharedRingBuffer_ReadData()
{
  return MEMORY[0x1F4107E38]();
}

uint64_t APSSharedRingBuffer_ReadDataWithEndiannessConversion()
{
  return MEMORY[0x1F4107E40]();
}

uint64_t APSSharedRingBuffer_UpdateWriteState()
{
  return MEMORY[0x1F4107E48]();
}

uint64_t APSSharedRingBuffer_WriteData()
{
  return MEMORY[0x1F4107E50]();
}

uint64_t APSShouldClusterEngageOnActivation()
{
  return MEMORY[0x1F4107E58]();
}

uint64_t APSSignalErrorAt()
{
  return MEMORY[0x1F4107E60]();
}

uint64_t APSStatsHistogramAddValue()
{
  return MEMORY[0x1F4107E80]();
}

uint64_t APSStatsHistogramCopyAsRTCString()
{
  return MEMORY[0x1F4107E88]();
}

uint64_t APSStatsHistogramCopyValuesAsRTCString()
{
  return MEMORY[0x1F4107E90]();
}

uint64_t APSStatsHistogramCreate()
{
  return MEMORY[0x1F4107E98]();
}

uint64_t APSStatsHistogramCreateFromSerializedDictionary()
{
  return MEMORY[0x1F4107EA0]();
}

uint64_t APSStatsHistogramGetTotalSampleCount()
{
  return MEMORY[0x1F4107EA8]();
}

uint64_t APSTapToRadarInvoke()
{
  return MEMORY[0x1F4107EB8]();
}

uint64_t APSThreadSafeDictionaryCopyMutableDictionary()
{
  return MEMORY[0x1F4107EC0]();
}

uint64_t APSThreadSafeDictionaryCopyValueIfPresent()
{
  return MEMORY[0x1F4107EC8]();
}

uint64_t APSThreadSafeDictionaryCreate()
{
  return MEMORY[0x1F4107ED0]();
}

uint64_t APSThreadSafeDictionaryGetInt32IfPresent()
{
  return MEMORY[0x1F4107ED8]();
}

uint64_t APSThreadSafeDictionaryGetInt64IfPresent()
{
  return MEMORY[0x1F4107EE0]();
}

uint64_t APSThreadSafeDictionaryRemoveValue()
{
  return MEMORY[0x1F4107EE8]();
}

uint64_t APSThreadSafeDictionarySetInt32()
{
  return MEMORY[0x1F4107EF0]();
}

uint64_t APSThreadSafeDictionarySetInt64()
{
  return MEMORY[0x1F4107EF8]();
}

uint64_t APSThreadSafeDictionarySetValue()
{
  return MEMORY[0x1F4107F00]();
}

uint64_t APSThreadSafeSetCreate()
{
  return MEMORY[0x1F4107F08]();
}

uint64_t APSThreadSafeSetGetCount()
{
  return MEMORY[0x1F4107F10]();
}

uint64_t APSThreadSafeSetRemoveValue()
{
  return MEMORY[0x1F4107F18]();
}

uint64_t APSThreadSafeSetSetValue()
{
  return MEMORY[0x1F4107F20]();
}

uint64_t APSTimeProfilerTaskBegin()
{
  return MEMORY[0x1F4107F28]();
}

uint64_t APSTimeProfilerTaskEnd()
{
  return MEMORY[0x1F4107F30]();
}

uint64_t APSTimedInfoManagerAddTimedInfo()
{
  return MEMORY[0x1F4107F38]();
}

uint64_t APSTimedInfoManagerCreate()
{
  return MEMORY[0x1F4107F40]();
}

uint64_t APSTimedInfoManagerFlush()
{
  return MEMORY[0x1F4107F48]();
}

uint64_t APSTimedInfoManagerFlushWithinTimeRange()
{
  return MEMORY[0x1F4107F50]();
}

uint64_t APSTimedInfoManagerResume()
{
  return MEMORY[0x1F4107F58]();
}

uint64_t APSTimedInfoManagerSuspend()
{
  return MEMORY[0x1F4107F60]();
}

uint64_t APSTransportMessageBufferedCreateReferencingBBufWithAudioDataLength()
{
  return MEMORY[0x1F4107F68]();
}

uint64_t APSTransportMessageCreateReferencingBBufWithAudioDataLength()
{
  return MEMORY[0x1F4107F70]();
}

uint64_t APSTransportMessageGetAudioAADPointer()
{
  return MEMORY[0x1F4107F78]();
}

uint64_t APSTransportMessageGetAudioDataHeader()
{
  return MEMORY[0x1F4107F80]();
}

uint64_t APSTransportMessageGetAudioDataPointer()
{
  return MEMORY[0x1F4107F88]();
}

uint64_t APSTransportMessageGetAudioDataSequenceNumber()
{
  return MEMORY[0x1F4107F90]();
}

uint64_t APSTransportMessageGetAudioDataTimestamp()
{
  return MEMORY[0x1F4107F98]();
}

uint64_t APSTransportMessageGetBufferedAudioAADPointer()
{
  return MEMORY[0x1F4107FA0]();
}

uint64_t APSTransportMessageGetBufferedAudioDataExtendedSequenceNumber()
{
  return MEMORY[0x1F4107FA8]();
}

uint64_t APSTransportMessageGetBufferedAudioDataPointer()
{
  return MEMORY[0x1F4107FB0]();
}

uint64_t APSTransportMessageGetBufferedAudioDataTimestamp()
{
  return MEMORY[0x1F4107FB8]();
}

uint64_t APSTransportMessageGetRetransmitRequest()
{
  return MEMORY[0x1F4107FC0]();
}

uint64_t APSTransportMessageSetAudioDataHeader()
{
  return MEMORY[0x1F4107FC8]();
}

uint64_t APSTransportMessageSetAudioDataSequenceNumber()
{
  return MEMORY[0x1F4107FD0]();
}

uint64_t APSTransportMessageSetBufferedAudioDataHeader()
{
  return MEMORY[0x1F4107FE0]();
}

uint64_t APSTransportMessageSetPTPTimeAnnounce()
{
  return MEMORY[0x1F4107FE8]();
}

uint64_t APSTransportMessageSetRetransmitResponseFutile()
{
  return MEMORY[0x1F4107FF0]();
}

uint64_t APSTransportMessageSetTimeAnnounce()
{
  return MEMORY[0x1F4107FF8]();
}

uint64_t APSValidatePersistentGroupInfo()
{
  return MEMORY[0x1F4108000]();
}

uint64_t APSVersionUtilsGetShortVersionLength()
{
  return MEMORY[0x1F4108008]();
}

uint64_t APSVideoFormatDescriptionCopyAsBlockBuffer()
{
  return MEMORY[0x1F4108010]();
}

uint64_t APSVolumeControlTypeFromEx()
{
  return MEMORY[0x1F4108018]();
}

uint64_t APSVolumeControlTypeToEx()
{
  return MEMORY[0x1F4108020]();
}

uint64_t APSVolumeConvertDBToClampedSliderValue()
{
  return MEMORY[0x1F4108028]();
}

uint64_t APSVolumeConvertDBToSliderValue()
{
  return MEMORY[0x1F4108030]();
}

uint64_t APSVolumeConvertSliderValueToDB()
{
  return MEMORY[0x1F4108038]();
}

uint64_t APSVolumeDBValuesAreNoticeablyDifferent()
{
  return MEMORY[0x1F4108040]();
}

uint64_t APSWirelessCoexManagerCreateWithOptions()
{
  return MEMORY[0x1F4108068]();
}

uint64_t APSWirelessCoexManagerNotifyCriticalBuffering()
{
  return MEMORY[0x1F4108070]();
}

uint64_t APSWrapperCreate()
{
  return MEMORY[0x1F4108078]();
}

uint64_t APSWrapperGetValue()
{
  return MEMORY[0x1F4108080]();
}

uint64_t APSXPCClientGetDisconnectNotificationName()
{
  return MEMORY[0x1F4108088]();
}

uint64_t APSXPCClientSendCommandCreatingReply()
{
  return MEMORY[0x1F4108090]();
}

uint64_t APSXPCServerAddCommandHandler()
{
  return MEMORY[0x1F4108098]();
}

uint64_t APSXPCServerPostEvent()
{
  return MEMORY[0x1F41080A0]();
}

uint64_t APSXPCServerStart()
{
  return MEMORY[0x1F41080A8]();
}

uint64_t APTDiagnosticMulticastDataToAllHosts()
{
  return MEMORY[0x1F4105498]();
}

uint64_t APTNANDataSessionCreateStatisticsReport()
{
  return MEMORY[0x1F41054A0]();
}

uint64_t APTNANDataSessionPreWarm()
{
  return MEMORY[0x1F41054A8]();
}

uint64_t APTNANDataSessionStatisticsReportCopyDictionary()
{
  return MEMORY[0x1F41054B0]();
}

uint64_t APTransportDeviceCopyAssistedInfo()
{
  return MEMORY[0x1F41054B8]();
}

uint64_t APTransportDeviceCopyBrokeredReceiverInfo()
{
  return MEMORY[0x1F41054C0]();
}

uint64_t APTransportDeviceCopyCUDNSNames()
{
  return MEMORY[0x1F41054C8]();
}

uint64_t APTransportDeviceCopyProximityData()
{
  return MEMORY[0x1F41054D0]();
}

uint64_t APTransportDeviceCreate()
{
  return MEMORY[0x1F41054D8]();
}

uint64_t APTransportDeviceCreateWithNetworkAddress()
{
  return MEMORY[0x1F41054E0]();
}

uint64_t APTransportDeviceGetAddress()
{
  return MEMORY[0x1F41054E8]();
}

uint64_t APTransportDeviceGetAdvertiserInfo()
{
  return MEMORY[0x1F41054F0]();
}

uint64_t APTransportDeviceGetDiscoveryID()
{
  return MEMORY[0x1F41054F8]();
}

uint64_t APTransportDeviceGetEventRecorder()
{
  return MEMORY[0x1F4105500]();
}

uint64_t APTransportDeviceGetInfraReachability()
{
  return MEMORY[0x1F4105508]();
}

uint64_t APTransportDeviceGetTransportsRequiringBroker()
{
  return MEMORY[0x1F4105510]();
}

uint64_t APTransportDeviceHasMinimumRelationship()
{
  return MEMORY[0x1F4105518]();
}

uint64_t APTransportDeviceIsAssistedDevice()
{
  return MEMORY[0x1F4105520]();
}

uint64_t APTransportDeviceIsConnectedOverUSB()
{
  return MEMORY[0x1F4105528]();
}

uint64_t APTransportDeviceIsLegacyPresent()
{
  return MEMORY[0x1F4105530]();
}

uint64_t APTransportDeviceIsModernPresent()
{
  return MEMORY[0x1F4105538]();
}

uint64_t APTransportDeviceIsModernPresentOnInfra()
{
  return MEMORY[0x1F4105540]();
}

uint64_t APTransportDeviceIsPresentOnInfra()
{
  return MEMORY[0x1F4105548]();
}

uint64_t APTransportDeviceIsReachable()
{
  return MEMORY[0x1F4105550]();
}

uint64_t APTransportDeviceIsSameDevice()
{
  return MEMORY[0x1F4105558]();
}

uint64_t APTransportDeviceIsSelf()
{
  return MEMORY[0x1F4105560]();
}

uint64_t APTransportDeviceReconfirm()
{
  return MEMORY[0x1F4105568]();
}

uint64_t APTransportDeviceShouldPerformTrafficRegistration()
{
  return MEMORY[0x1F4105570]();
}

uint64_t APTransportDeviceStartTracking()
{
  return MEMORY[0x1F4105578]();
}

uint64_t APTransportDeviceStopTracking()
{
  return MEMORY[0x1F4105580]();
}

uint64_t APTransportDeviceTriggerWoLCachingIfNeeded()
{
  return MEMORY[0x1F4105588]();
}

uint64_t APTransportGetSharedTransport()
{
  return MEMORY[0x1F4105590]();
}

uint64_t APTransportStreamAggregateAddSubStream()
{
  return MEMORY[0x1F4105598]();
}

uint64_t APTransportStreamAggregateCreate()
{
  return MEMORY[0x1F41055A0]();
}

uint64_t APTransportStreamAggregateRemoveSubStream()
{
  return MEMORY[0x1F41055A8]();
}

uint64_t APTransportStreamIDMakeWithPort()
{
  return MEMORY[0x1F41055B0]();
}

uint64_t APTransportStreamSendBackingProviderAcquireBBuf()
{
  return MEMORY[0x1F41055B8]();
}

uint64_t APTransportStreamSendBackingProviderCopyPackageForAcquiredBBuf()
{
  return MEMORY[0x1F41055C0]();
}

uint64_t APTransportStreamSendBackingProviderCreateWithStreamID()
{
  return MEMORY[0x1F41055C8]();
}

uint64_t APTransportStreamSendBackingProviderRelinquishBBuf()
{
  return MEMORY[0x1F41055D0]();
}

uint64_t APTransportStreamSendBackingProviderUpdateAcquiredBBuf()
{
  return MEMORY[0x1F41055D8]();
}

uint64_t APTransportStreamSendData()
{
  return MEMORY[0x1F41055E0]();
}

uint64_t APTransportStreamSendDataCreatingReplyData()
{
  return MEMORY[0x1F41055E8]();
}

uint64_t APTransportStreamSendPlistMessage()
{
  return MEMORY[0x1F41055F0]();
}

uint64_t APTransportStreamSendPlistMessageCreatingPlistReply()
{
  return MEMORY[0x1F41055F8]();
}

uint64_t APTransportStreamSendPlistMessageCreatingReply()
{
  return MEMORY[0x1F4105600]();
}

uint64_t APTransportTrafficRegistrarGetAWDLChannelSequence()
{
  return MEMORY[0x1F4105608]();
}

uint64_t APTransportTrafficRegistrarGetRSSI()
{
  return MEMORY[0x1F4105610]();
}

uint64_t APTransportTrafficRegistrarGetRegistration()
{
  return MEMORY[0x1F4105618]();
}

uint64_t APTransportTrafficRegistrarGetWifiChannel()
{
  return MEMORY[0x1F4105620]();
}

uint64_t ASBDToAPAudioFormat()
{
  return MEMORY[0x1F41080B0]();
}

uint64_t ASPrintF()
{
  return MEMORY[0x1F4115D28]();
}

uint64_t AirPlaySetProperty()
{
  return MEMORY[0x1F412C880]();
}

uint64_t AppendPrintF()
{
  return MEMORY[0x1F4115D30]();
}

OSStatus AudioConverterDispose(AudioConverterRef inAudioConverter)
{
  return MEMORY[0x1F410B4E0](inAudioConverter);
}

OSStatus AudioConverterFillComplexBuffer(AudioConverterRef inAudioConverter, AudioConverterComplexInputDataProc inInputDataProc, void *inInputDataProcUserData, UInt32 *ioOutputDataPacketSize, AudioBufferList *outOutputData, AudioStreamPacketDescription *outPacketDescription)
{
  return MEMORY[0x1F410B4E8](inAudioConverter, inInputDataProc, inInputDataProcUserData, ioOutputDataPacketSize, outOutputData, outPacketDescription);
}

OSStatus AudioConverterGetProperty(AudioConverterRef inAudioConverter, AudioConverterPropertyID inPropertyID, UInt32 *ioPropertyDataSize, void *outPropertyData)
{
  return MEMORY[0x1F410B4F8](inAudioConverter, *(void *)&inPropertyID, ioPropertyDataSize, outPropertyData);
}

OSStatus AudioConverterNew(const AudioStreamBasicDescription *inSourceFormat, const AudioStreamBasicDescription *inDestinationFormat, AudioConverterRef *outAudioConverter)
{
  return MEMORY[0x1F410B508](inSourceFormat, inDestinationFormat, outAudioConverter);
}

OSStatus AudioConverterReset(AudioConverterRef inAudioConverter)
{
  return MEMORY[0x1F410B528](inAudioConverter);
}

OSStatus AudioConverterSetProperty(AudioConverterRef inAudioConverter, AudioConverterPropertyID inPropertyID, UInt32 inPropertyDataSize, const void *inPropertyData)
{
  return MEMORY[0x1F410B530](inAudioConverter, *(void *)&inPropertyID, *(void *)&inPropertyDataSize, inPropertyData);
}

OSStatus AudioQueueDispose(AudioQueueRef inAQ, Boolean inImmediate)
{
  return MEMORY[0x1F40D4D18](inAQ, inImmediate);
}

OSStatus AudioQueueNewOutput(const AudioStreamBasicDescription *inFormat, AudioQueueOutputCallback inCallbackProc, void *inUserData, CFRunLoopRef inCallbackRunLoop, CFStringRef inCallbackRunLoopMode, UInt32 inFlags, AudioQueueRef *outAQ)
{
  return MEMORY[0x1F40D4D80](inFormat, inCallbackProc, inUserData, inCallbackRunLoop, inCallbackRunLoopMode, *(void *)&inFlags, outAQ);
}

OSStatus AudioQueueStart(AudioQueueRef inAQ, const AudioTimeStamp *inStartTime)
{
  return MEMORY[0x1F40D4DF0](inAQ, inStartTime);
}

uint64_t AudioServerPlugInRegisterRemote()
{
  return MEMORY[0x1F40D7028]();
}

uint64_t Base64Decode()
{
  return MEMORY[0x1F4115D50]();
}

uint64_t Base64DecodeCopy()
{
  return MEMORY[0x1F4115D58]();
}

uint64_t Base64EncodeCopyEx()
{
  return MEMORY[0x1F4115D60]();
}

uint64_t Base64EncodeEx()
{
  return MEMORY[0x1F4115D68]();
}

uint64_t CARenderServerGetStatistics()
{
  return MEMORY[0x1F40F4C80]();
}

int CC_SHA1_Final(unsigned __int8 *md, CC_SHA1_CTX *c)
{
  return MEMORY[0x1F40C9738](md, c);
}

int CC_SHA1_Init(CC_SHA1_CTX *c)
{
  return MEMORY[0x1F40C9740](c);
}

int CC_SHA1_Update(CC_SHA1_CTX *c, const void *data, CC_LONG len)
{
  return MEMORY[0x1F40C9748](c, data, *(void *)&len);
}

unsigned __int8 *__cdecl CC_SHA256(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x1F40C9770](data, *(void *)&len, md);
}

int CC_SHA512_Final(unsigned __int8 *md, CC_SHA512_CTX *c)
{
  return MEMORY[0x1F40C97B8](md, c);
}

int CC_SHA512_Init(CC_SHA512_CTX *c)
{
  return MEMORY[0x1F40C97C0](c);
}

int CC_SHA512_Update(CC_SHA512_CTX *c, const void *data, CC_LONG len)
{
  return MEMORY[0x1F40C97C8](c, data, *(void *)&len);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  MEMORY[0x1F40D70A8]();
  return result;
}

void *__cdecl CFAllocatorAllocate(CFAllocatorRef allocator, CFIndex size, CFOptionFlags hint)
{
  return (void *)MEMORY[0x1F40D70E8](allocator, size, hint);
}

void CFAllocatorDeallocate(CFAllocatorRef allocator, void *ptr)
{
}

CFAllocatorRef CFAllocatorGetDefault(void)
{
  return (CFAllocatorRef)MEMORY[0x1F40D7110]();
}

void *__cdecl CFAllocatorReallocate(CFAllocatorRef allocator, void *ptr, CFIndex newsize, CFOptionFlags hint)
{
  return (void *)MEMORY[0x1F40D7128](allocator, ptr, newsize, hint);
}

void CFArrayAppendArray(CFMutableArrayRef theArray, CFArrayRef otherArray, CFRange otherRange)
{
}

uint64_t CFArrayAppendInt64()
{
  return MEMORY[0x1F4115E70]();
}

void CFArrayAppendValue(CFMutableArrayRef theArray, const void *value)
{
}

uint64_t CFArrayApplyBlock()
{
  return MEMORY[0x1F4115E78]();
}

Boolean CFArrayContainsValue(CFArrayRef theArray, CFRange range, const void *value)
{
  return MEMORY[0x1F40D7160](theArray, range.location, range.length, value);
}

CFArrayRef CFArrayCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFArrayCallBacks *callBacks)
{
  return (CFArrayRef)MEMORY[0x1F40D7170](allocator, values, numValues, callBacks);
}

CFArrayRef CFArrayCreateCopy(CFAllocatorRef allocator, CFArrayRef theArray)
{
  return (CFArrayRef)MEMORY[0x1F40D7178](allocator, theArray);
}

CFMutableArrayRef CFArrayCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks)
{
  return (CFMutableArrayRef)MEMORY[0x1F40D7190](allocator, capacity, callBacks);
}

CFMutableArrayRef CFArrayCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFArrayRef theArray)
{
  return (CFMutableArrayRef)MEMORY[0x1F40D7198](allocator, capacity, theArray);
}

uint64_t CFArrayEnsureCreatedAndAppend()
{
  return MEMORY[0x1F4115E80]();
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return MEMORY[0x1F40D71B8](theArray);
}

CFIndex CFArrayGetCountOfValue(CFArrayRef theArray, CFRange range, const void *value)
{
  return MEMORY[0x1F40D71C0](theArray, range.location, range.length, value);
}

CFIndex CFArrayGetFirstIndexOfValue(CFArrayRef theArray, CFRange range, const void *value)
{
  return MEMORY[0x1F40D71C8](theArray, range.location, range.length, value);
}

CFTypeID CFArrayGetTypeID(void)
{
  return MEMORY[0x1F40D71D8]();
}

uint64_t CFArrayGetTypedValueAtIndex()
{
  return MEMORY[0x1F4115E88]();
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return (const void *)MEMORY[0x1F40D71F0](theArray, idx);
}

void CFArrayGetValues(CFArrayRef theArray, CFRange range, const void **values)
{
}

void CFArrayInsertValueAtIndex(CFMutableArrayRef theArray, CFIndex idx, const void *value)
{
}

void CFArrayRemoveAllValues(CFMutableArrayRef theArray)
{
}

void CFArrayRemoveValueAtIndex(CFMutableArrayRef theArray, CFIndex idx)
{
}

void CFArraySetValueAtIndex(CFMutableArrayRef theArray, CFIndex idx, const void *value)
{
}

CFTypeID CFBooleanGetTypeID(void)
{
  return MEMORY[0x1F40D7420]();
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return MEMORY[0x1F40D7430](BOOLean);
}

CFStringRef CFBundleCopyLocalizedString(CFBundleRef bundle, CFStringRef key, CFStringRef value, CFStringRef tableName)
{
  return (CFStringRef)MEMORY[0x1F40D74A8](bundle, key, value, tableName);
}

CFBundleRef CFBundleCreate(CFAllocatorRef allocator, CFURLRef bundleURL)
{
  return (CFBundleRef)MEMORY[0x1F40D7528](allocator, bundleURL);
}

CFCalendarRef CFCalendarCreateWithIdentifier(CFAllocatorRef allocator, CFCalendarIdentifier identifier)
{
  return (CFCalendarRef)MEMORY[0x1F40D7690](allocator, identifier);
}

Boolean CFCalendarDecomposeAbsoluteTime(CFCalendarRef calendar, CFAbsoluteTime at, const char *componentDesc, ...)
{
  va_start(va, componentDesc);
  uint64_t v3 = va_arg(va, void);
  return MEMORY[0x1F40D7698](calendar, v3, at);
}

CFStringRef CFCopyTypeIDDescription(CFTypeID type_id)
{
  return (CFStringRef)MEMORY[0x1F40D77D0](type_id);
}

uint64_t CFCreateObjectFromString()
{
  return MEMORY[0x1F4115E98]();
}

uint64_t CFCreateWithPlistBytes()
{
  return MEMORY[0x1F4115EA0]();
}

CFDataRef CFDataCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length)
{
  return (CFDataRef)MEMORY[0x1F40D77E8](allocator, bytes, length);
}

CFMutableDataRef CFDataCreateMutable(CFAllocatorRef allocator, CFIndex capacity)
{
  return (CFMutableDataRef)MEMORY[0x1F40D7808](allocator, capacity);
}

CFDataRef CFDataCreateWithBytesNoCopy(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length, CFAllocatorRef bytesDeallocator)
{
  return (CFDataRef)MEMORY[0x1F40D7818](allocator, bytes, length, bytesDeallocator);
}

const UInt8 *__cdecl CFDataGetBytePtr(CFDataRef theData)
{
  return (const UInt8 *)MEMORY[0x1F40D7830](theData);
}

void CFDataGetBytes(CFDataRef theData, CFRange range, UInt8 *buffer)
{
}

CFIndex CFDataGetLength(CFDataRef theData)
{
  return MEMORY[0x1F40D7850](theData);
}

UInt8 *__cdecl CFDataGetMutableBytePtr(CFMutableDataRef theData)
{
  return (UInt8 *)MEMORY[0x1F40D7858](theData);
}

CFTypeID CFDataGetTypeID(void)
{
  return MEMORY[0x1F40D7860]();
}

void CFDataSetLength(CFMutableDataRef theData, CFIndex length)
{
}

CFDateRef CFDateCreate(CFAllocatorRef allocator, CFAbsoluteTime at)
{
  return (CFDateRef)MEMORY[0x1F40D7898](allocator, at);
}

CFAbsoluteTime CFDateGetAbsoluteTime(CFDateRef theDate)
{
  MEMORY[0x1F40D7928](theDate);
  return result;
}

CFTypeID CFDateGetTypeID(void)
{
  return MEMORY[0x1F40D7938]();
}

void CFDictionaryAddValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

uint64_t CFDictionaryApplyBlock()
{
  return MEMORY[0x1F4115EA8]();
}

void CFDictionaryApplyFunction(CFDictionaryRef theDict, CFDictionaryApplierFunction applier, void *context)
{
}

Boolean CFDictionaryContainsKey(CFDictionaryRef theDict, const void *key)
{
  return MEMORY[0x1F40D7968](theDict, key);
}

Boolean CFDictionaryContainsValue(CFDictionaryRef theDict, const void *value)
{
  return MEMORY[0x1F40D7970](theDict, value);
}

uint64_t CFDictionaryCopyCString()
{
  return MEMORY[0x1F4115EB0]();
}

uint64_t CFDictionaryCopyKeys()
{
  return MEMORY[0x1F4115EB8]();
}

CFDictionaryRef CFDictionaryCreate(CFAllocatorRef allocator, const void **keys, const void **values, CFIndex numValues, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFDictionaryRef)MEMORY[0x1F40D7978](allocator, keys, values, numValues, keyCallBacks, valueCallBacks);
}

CFDictionaryRef CFDictionaryCreateCopy(CFAllocatorRef allocator, CFDictionaryRef theDict)
{
  return (CFDictionaryRef)MEMORY[0x1F40D7990](allocator, theDict);
}

uint64_t CFDictionaryCreateFromNameTypeValueArgList()
{
  return MEMORY[0x1F4115EC0]();
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFMutableDictionaryRef)MEMORY[0x1F40D7998](allocator, capacity, keyCallBacks, valueCallBacks);
}

CFMutableDictionaryRef CFDictionaryCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFDictionaryRef theDict)
{
  return (CFMutableDictionaryRef)MEMORY[0x1F40D79A8](allocator, capacity, theDict);
}

uint64_t CFDictionaryGetCString()
{
  return MEMORY[0x1F4115ED8]();
}

CFIndex CFDictionaryGetCount(CFDictionaryRef theDict)
{
  return MEMORY[0x1F40D79C0](theDict);
}

CFIndex CFDictionaryGetCountOfValue(CFDictionaryRef theDict, const void *value)
{
  return MEMORY[0x1F40D79D8](theDict, value);
}

uint64_t CFDictionaryGetDouble()
{
  return MEMORY[0x1F4115EF0]();
}

uint64_t CFDictionaryGetEmpty()
{
  return MEMORY[0x1F4115EF8]();
}

uint64_t CFDictionaryGetInt64()
{
  return MEMORY[0x1F4115F10]();
}

uint64_t CFDictionaryGetInt64Ranged()
{
  return MEMORY[0x1F4115F18]();
}

void CFDictionaryGetKeysAndValues(CFDictionaryRef theDict, const void **keys, const void **values)
{
}

CFTypeID CFDictionaryGetTypeID(void)
{
  return MEMORY[0x1F40D7A00]();
}

uint64_t CFDictionaryGetTypedValue()
{
  return MEMORY[0x1F4115F28]();
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return (const void *)MEMORY[0x1F40D7A10](theDict, key);
}

Boolean CFDictionaryGetValueIfPresent(CFDictionaryRef theDict, const void *key, const void **value)
{
  return MEMORY[0x1F40D7A18](theDict, key, value);
}

uint64_t CFDictionaryMergeDictionary()
{
  return MEMORY[0x1F4115F38]();
}

void CFDictionaryRemoveAllValues(CFMutableDictionaryRef theDict)
{
}

void CFDictionaryRemoveValue(CFMutableDictionaryRef theDict, const void *key)
{
}

void CFDictionaryReplaceValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

uint64_t CFDictionarySetCString()
{
  return MEMORY[0x1F4115F40]();
}

uint64_t CFDictionarySetData()
{
  return MEMORY[0x1F4115F48]();
}

uint64_t CFDictionarySetDouble()
{
  return MEMORY[0x1F4115F50]();
}

uint64_t CFDictionarySetInt64()
{
  return MEMORY[0x1F4115F58]();
}

uint64_t CFDictionarySetUUIDString()
{
  return MEMORY[0x1F4115F60]();
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2)
{
  return MEMORY[0x1F40D7A68](cf1, cf2);
}

CFIndex CFErrorGetCode(CFErrorRef err)
{
  return MEMORY[0x1F40D7AA8](err);
}

CFAllocatorRef CFGetAllocator(CFTypeRef cf)
{
  return (CFAllocatorRef)MEMORY[0x1F40D7B60](cf);
}

uint64_t CFGetCString()
{
  return MEMORY[0x1F4115F68]();
}

uint64_t CFGetDouble()
{
  return MEMORY[0x1F4115F70]();
}

uint64_t CFGetHardwareAddress()
{
  return MEMORY[0x1F4115F78]();
}

uint64_t CFGetInt64()
{
  return MEMORY[0x1F4115F80]();
}

uint64_t CFGetInt64Ranged()
{
  return MEMORY[0x1F4115F88]();
}

CFIndex CFGetRetainCount(CFTypeRef cf)
{
  return MEMORY[0x1F40D7B68](cf);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x1F40D7B80](cf);
}

CFHashCode CFHash(CFTypeRef cf)
{
  return MEMORY[0x1F40D7BA0](cf);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1F40D7D08]();
}

CFNotificationCenterRef CFNotificationCenterGetLocalCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1F40D7D20]();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
}

CFComparisonResult CFNumberCompare(CFNumberRef number, CFNumberRef otherNumber, void *context)
{
  return MEMORY[0x1F40D7D78](number, otherNumber, context);
}

CFNumberRef CFNumberCreate(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr)
{
  return (CFNumberRef)MEMORY[0x1F40D7D80](allocator, theType, valuePtr);
}

uint64_t CFNumberCreateInt64()
{
  return MEMORY[0x1F4115F98]();
}

CFTypeID CFNumberGetTypeID(void)
{
  return MEMORY[0x1F40D7E10]();
}

Boolean CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr)
{
  return MEMORY[0x1F40D7E20](number, theType, valuePtr);
}

uint64_t CFObjectGetPropertyInt64Sync()
{
  return MEMORY[0x1F4115FA8]();
}

uint64_t CFObjectSetProperty()
{
  return MEMORY[0x1F4115FB8]();
}

uint64_t CFObjectSetPropertyCString()
{
  return MEMORY[0x1F4115FC0]();
}

CFPlugInRef CFPlugInCreate(CFAllocatorRef allocator, CFURLRef plugInURL)
{
  return (CFPlugInRef)MEMORY[0x1F40D7E40](allocator, plugInURL);
}

CFArrayRef CFPlugInFindFactoriesForPlugInTypeInPlugIn(CFUUIDRef typeUUID, CFPlugInRef plugIn)
{
  return (CFArrayRef)MEMORY[0x1F40D7E50](typeUUID, plugIn);
}

void *__cdecl CFPlugInInstanceCreate(CFAllocatorRef allocator, CFUUIDRef factoryUUID, CFUUIDRef typeUUID)
{
  return (void *)MEMORY[0x1F40D7E70](allocator, factoryUUID, typeUUID);
}

CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return (CFPropertyListRef)MEMORY[0x1F40D7ED0](key, applicationID, userName, hostName);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x1F40D7EE0](key, applicationID, keyExistsAndHasValidFormat);
}

CFIndex CFPreferencesGetAppIntegerValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x1F40D7EE8](key, applicationID, keyExistsAndHasValidFormat);
}

Boolean CFPreferencesSynchronize(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return MEMORY[0x1F40D7F10](applicationID, userName, hostName);
}

uint64_t CFPrefs_CopyTypedValue()
{
  return MEMORY[0x1F4115FD8]();
}

uint64_t CFPrefs_GetInt64()
{
  return MEMORY[0x1F4116000]();
}

uint64_t CFPrefs_SetValue()
{
  return MEMORY[0x1F4116028]();
}

CFDataRef CFPropertyListCreateData(CFAllocatorRef allocator, CFPropertyListRef propertyList, CFPropertyListFormat format, CFOptionFlags options, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x1F40D7F18](allocator, propertyList, format, options, error);
}

CFPropertyListRef CFPropertyListCreateDeepCopy(CFAllocatorRef allocator, CFPropertyListRef propertyList, CFOptionFlags mutabilityOption)
{
  return (CFPropertyListRef)MEMORY[0x1F40D7F28](allocator, propertyList, mutabilityOption);
}

uint64_t CFPropertyListCreateFormatted()
{
  return MEMORY[0x1F4116040]();
}

uint64_t CFPropertyListCreateFromFilePath()
{
  return MEMORY[0x1F4116048]();
}

CFPropertyListRef CFPropertyListCreateWithData(CFAllocatorRef allocator, CFDataRef data, CFOptionFlags options, CFPropertyListFormat *format, CFErrorRef *error)
{
  return (CFPropertyListRef)MEMORY[0x1F40D7F50](allocator, data, options, format, error);
}

uint64_t CFPropertyListWriteToFilePath()
{
  return MEMORY[0x1F4116050]();
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x1F40D8048](cf);
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return (CFRunLoopRef)MEMORY[0x1F40D80B0]();
}

CFRunLoopRef CFRunLoopGetMain(void)
{
  return (CFRunLoopRef)MEMORY[0x1F40D80B8]();
}

void CFSetAddValue(CFMutableSetRef theSet, const void *value)
{
}

uint64_t CFSetApplyBlock()
{
  return MEMORY[0x1F4116058]();
}

void CFSetApplyFunction(CFSetRef theSet, CFSetApplierFunction applier, void *context)
{
}

Boolean CFSetContainsValue(CFSetRef theSet, const void *value)
{
  return MEMORY[0x1F40D81F8](theSet, value);
}

CFSetRef CFSetCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFSetCallBacks *callBacks)
{
  return (CFSetRef)MEMORY[0x1F40D8200](allocator, values, numValues, callBacks);
}

CFSetRef CFSetCreateCopy(CFAllocatorRef allocator, CFSetRef theSet)
{
  return (CFSetRef)MEMORY[0x1F40D8208](allocator, theSet);
}

CFMutableSetRef CFSetCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFSetCallBacks *callBacks)
{
  return (CFMutableSetRef)MEMORY[0x1F40D8210](allocator, capacity, callBacks);
}

CFIndex CFSetGetCount(CFSetRef theSet)
{
  return MEMORY[0x1F40D8220](theSet);
}

CFTypeID CFSetGetTypeID(void)
{
  return MEMORY[0x1F40D8230]();
}

void CFSetGetValues(CFSetRef theSet, const void **values)
{
}

void CFSetRemoveAllValues(CFMutableSetRef theSet)
{
}

void CFSetRemoveValue(CFMutableSetRef theSet, const void *value)
{
}

void CFSetSetValue(CFMutableSetRef theSet, const void *value)
{
}

void CFStringAppend(CFMutableStringRef theString, CFStringRef appendedString)
{
}

void CFStringAppendCString(CFMutableStringRef theString, const char *cStr, CFStringEncoding encoding)
{
}

uint64_t CFStringAppendF()
{
  return MEMORY[0x1F4116060]();
}

void CFStringAppendFormat(CFMutableStringRef theString, CFDictionaryRef formatOptions, CFStringRef format, ...)
{
}

uint64_t CFStringAppendV()
{
  return MEMORY[0x1F4116068]();
}

CFComparisonResult CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions)
{
  return MEMORY[0x1F40D8388](theString1, theString2, compareOptions);
}

uint64_t CFStringCopyUTF8CString()
{
  return MEMORY[0x1F4116070]();
}

CFArrayRef CFStringCreateArrayBySeparatingStrings(CFAllocatorRef alloc, CFStringRef theString, CFStringRef separatorString)
{
  return (CFArrayRef)MEMORY[0x1F40D83D0](alloc, theString, separatorString);
}

CFStringRef CFStringCreateByCombiningStrings(CFAllocatorRef alloc, CFArrayRef theArray, CFStringRef separatorString)
{
  return (CFStringRef)MEMORY[0x1F40D83E0](alloc, theArray, separatorString);
}

uint64_t CFStringCreateF()
{
  return MEMORY[0x1F4116078]();
}

CFMutableStringRef CFStringCreateMutable(CFAllocatorRef alloc, CFIndex maxLength)
{
  return (CFMutableStringRef)MEMORY[0x1F40D8408](alloc, maxLength);
}

CFMutableStringRef CFStringCreateMutableCopy(CFAllocatorRef alloc, CFIndex maxLength, CFStringRef theString)
{
  return (CFMutableStringRef)MEMORY[0x1F40D8410](alloc, maxLength, theString);
}

CFStringRef CFStringCreateStringWithValidatedFormat(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef validFormatSpecifiers, CFStringRef format, CFErrorRef *errorPtr, ...)
{
  return (CFStringRef)MEMORY[0x1F40D8420](alloc, formatOptions, validFormatSpecifiers, format, errorPtr);
}

uint64_t CFStringCreateV()
{
  return MEMORY[0x1F4116080]();
}

CFStringRef CFStringCreateWithBytes(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation)
{
  return (CFStringRef)MEMORY[0x1F40D8438](alloc, bytes, numBytes, *(void *)&encoding, isExternalRepresentation);
}

CFStringRef CFStringCreateWithBytesNoCopy(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation, CFAllocatorRef contentsDeallocator)
{
  return (CFStringRef)MEMORY[0x1F40D8440](alloc, bytes, numBytes, *(void *)&encoding, isExternalRepresentation, contentsDeallocator);
}

CFStringRef CFStringCreateWithCString(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding)
{
  return (CFStringRef)MEMORY[0x1F40D8448](alloc, cStr, *(void *)&encoding);
}

CFStringRef CFStringCreateWithFormat(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, ...)
{
  return (CFStringRef)MEMORY[0x1F40D8490](alloc, formatOptions, format);
}

CFRange CFStringFind(CFStringRef theString, CFStringRef stringToFind, CFStringCompareFlags compareOptions)
{
  CFIndex v3 = MEMORY[0x1F40D84C8](theString, stringToFind, compareOptions);
  result.length = v4;
  result.location = v3;
  return result;
}

Boolean CFStringGetCString(CFStringRef theString, char *buffer, CFIndex bufferSize, CFStringEncoding encoding)
{
  return MEMORY[0x1F40D8510](theString, buffer, bufferSize, *(void *)&encoding);
}

const char *__cdecl CFStringGetCStringPtr(CFStringRef theString, CFStringEncoding encoding)
{
  return (const char *)MEMORY[0x1F40D8520](theString, *(void *)&encoding);
}

double CFStringGetDoubleValue(CFStringRef str)
{
  MEMORY[0x1F40D8548](str);
  return result;
}

SInt32 CFStringGetIntValue(CFStringRef str)
{
  return MEMORY[0x1F40D8568](str);
}

CFIndex CFStringGetLength(CFStringRef theString)
{
  return MEMORY[0x1F40D8578](theString);
}

uint64_t CFStringGetOrCopyCStringUTF8()
{
  return MEMORY[0x1F4116088]();
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x1F40D85F0]();
}

Boolean CFStringHasPrefix(CFStringRef theString, CFStringRef prefix)
{
  return MEMORY[0x1F40D8600](theString, prefix);
}

void CFStringTrim(CFMutableStringRef theString, CFStringRef trimString)
{
}

CFURLRef CFURLCreateWithFileSystemPath(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory)
{
  return (CFURLRef)MEMORY[0x1F40D88A0](allocator, filePath, pathStyle, isDirectory);
}

CFURLRef CFURLCreateWithString(CFAllocatorRef allocator, CFStringRef URLString, CFURLRef baseURL)
{
  return (CFURLRef)MEMORY[0x1F40D88C0](allocator, URLString, baseURL);
}

CFStringRef CFURLGetString(CFURLRef anURL)
{
  return (CFStringRef)MEMORY[0x1F40D8918](anURL);
}

CFUUIDRef CFUUIDCreate(CFAllocatorRef alloc)
{
  return (CFUUIDRef)MEMORY[0x1F40D8988](alloc);
}

CFUUIDRef CFUUIDCreateFromString(CFAllocatorRef alloc, CFStringRef uuidStr)
{
  return (CFUUIDRef)MEMORY[0x1F40D8998](alloc, uuidStr);
}

CFStringRef CFUUIDCreateString(CFAllocatorRef alloc, CFUUIDRef uuid)
{
  return (CFStringRef)MEMORY[0x1F40D89B0](alloc, uuid);
}

CFUUIDRef CFUUIDGetConstantUUIDWithBytes(CFAllocatorRef alloc, UInt8 byte0, UInt8 byte1, UInt8 byte2, UInt8 byte3, UInt8 byte4, UInt8 byte5, UInt8 byte6, UInt8 byte7, UInt8 byte8, UInt8 byte9, UInt8 byte10, UInt8 byte11, UInt8 byte12, UInt8 byte13, UInt8 byte14, UInt8 byte15)
{
  return (CFUUIDRef)MEMORY[0x1F40D89D0](alloc, byte0, byte1, byte2, byte3, byte4, byte5, byte6);
}

CFUUIDBytes CFUUIDGetUUIDBytes(CFUUIDRef uuid)
{
  uint64_t v1 = MEMORY[0x1F40D89E8](uuid);
  result.byte8 = v2;
  result.byte9 = BYTE1(v2);
  result.byte10 = BYTE2(v2);
  result.byte11 = BYTE3(v2);
  result.byte12 = BYTE4(v2);
  result.byte13 = BYTE5(v2);
  result.byte14 = BYTE6(v2);
  result.byte15 = HIBYTE(v2);
  result.byte0 = v1;
  result.byte1 = BYTE1(v1);
  result.byte2 = BYTE2(v1);
  result.byte3 = BYTE3(v1);
  result.byte4 = BYTE4(v1);
  result.byte5 = BYTE5(v1);
  result.byte6 = BYTE6(v1);
  result.byte7 = HIBYTE(v1);
  return result;
}

BOOL CGRectContainsRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1F40DB230]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CFDictionaryRef CGRectCreateDictionaryRepresentation(CGRect a1)
{
  return (CFDictionaryRef)MEMORY[0x1F40DB238]((__n128)a1.origin, *(__n128 *)&a1.origin.y, (__n128)a1.size, *(__n128 *)&a1.size.height);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1F40DB248]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

BOOL CGRectMakeWithDictionaryRepresentation(CFDictionaryRef dict, CGRect *rect)
{
  return MEMORY[0x1F40DB2F0](dict, rect);
}

CFDictionaryRef CGSizeCreateDictionaryRepresentation(CGSize size)
{
  return (CFDictionaryRef)MEMORY[0x1F40DB4C8]((__n128)size, *(__n128 *)&size.height);
}

BOOL CGSizeMakeWithDictionaryRepresentation(CFDictionaryRef dict, CGSize *size)
{
  return MEMORY[0x1F40DB4E0](dict, size);
}

const void *__cdecl CMAudioFormatDescriptionGetMagicCookie(CMAudioFormatDescriptionRef desc, size_t *sizeOut)
{
  return (const void *)MEMORY[0x1F40DB8B0](desc, sizeOut);
}

uint64_t CMAudioFormatDescriptionGetRichestDecodableFormatAndChannelLayout()
{
  return MEMORY[0x1F40DB8D0]();
}

const AudioStreamBasicDescription *__cdecl CMAudioFormatDescriptionGetStreamBasicDescription(CMAudioFormatDescriptionRef desc)
{
  return (const AudioStreamBasicDescription *)MEMORY[0x1F40DB8D8](desc);
}

uint64_t CMBaseGetClassID()
{
  return MEMORY[0x1F40DB900]();
}

uint64_t CMBaseObjectGetDerivedStorage()
{
  return MEMORY[0x1F40DB910]();
}

uint64_t CMBaseObjectGetProtocolVTable()
{
  return MEMORY[0x1F40DB918]();
}

uint64_t CMBaseObjectGetVTable()
{
  return MEMORY[0x1F40DB920]();
}

uint64_t CMBaseObjectImplementsProtocol()
{
  return MEMORY[0x1F40DB930]();
}

uint64_t CMBaseObjectIsMemberOfClass()
{
  return MEMORY[0x1F40DB938]();
}

OSStatus CMBlockBufferAppendBufferReference(CMBlockBufferRef theBuffer, CMBlockBufferRef targetBBuf, size_t offsetToData, size_t dataLength, CMBlockBufferFlags flags)
{
  return MEMORY[0x1F40DB950](theBuffer, targetBBuf, offsetToData, dataLength, *(void *)&flags);
}

OSStatus CMBlockBufferCopyDataBytes(CMBlockBufferRef theSourceBuffer, size_t offsetToData, size_t dataLength, void *destination)
{
  return MEMORY[0x1F40DB968](theSourceBuffer, offsetToData, dataLength, destination);
}

OSStatus CMBlockBufferCreateEmpty(CFAllocatorRef structureAllocator, uint32_t subBlockCapacity, CMBlockBufferFlags flags, CMBlockBufferRef *blockBufferOut)
{
  return MEMORY[0x1F40DB978](structureAllocator, *(void *)&subBlockCapacity, *(void *)&flags, blockBufferOut);
}

OSStatus CMBlockBufferCreateWithBufferReference(CFAllocatorRef structureAllocator, CMBlockBufferRef bufferReference, size_t offsetToData, size_t dataLength, CMBlockBufferFlags flags, CMBlockBufferRef *blockBufferOut)
{
  return MEMORY[0x1F40DB980](structureAllocator, bufferReference, offsetToData, dataLength, *(void *)&flags, blockBufferOut);
}

OSStatus CMBlockBufferCreateWithMemoryBlock(CFAllocatorRef structureAllocator, void *memoryBlock, size_t blockLength, CFAllocatorRef blockAllocator, const CMBlockBufferCustomBlockSource *customBlockSource, size_t offsetToData, size_t dataLength, CMBlockBufferFlags flags, CMBlockBufferRef *blockBufferOut)
{
  return MEMORY[0x1F40DB988](structureAllocator, memoryBlock, blockLength, blockAllocator, customBlockSource, offsetToData, dataLength, *(void *)&flags);
}

size_t CMBlockBufferGetDataLength(CMBlockBufferRef theBuffer)
{
  return MEMORY[0x1F40DB998](theBuffer);
}

OSStatus CMBlockBufferGetDataPointer(CMBlockBufferRef theBuffer, size_t offset, size_t *lengthAtOffsetOut, size_t *totalLengthOut, char **dataPointerOut)
{
  return MEMORY[0x1F40DB9A0](theBuffer, offset, lengthAtOffsetOut, totalLengthOut, dataPointerOut);
}

CFTypeID CMBlockBufferGetTypeID(void)
{
  return MEMORY[0x1F40DB9B0]();
}

OSStatus CMBlockBufferReplaceDataBytes(const void *sourceBytes, CMBlockBufferRef destinationBuffer, size_t offsetIntoDestination, size_t dataLength)
{
  return MEMORY[0x1F40DB9C8](sourceBytes, destinationBuffer, offsetIntoDestination, dataLength);
}

OSStatus CMBufferQueueCreate(CFAllocatorRef allocator, CMItemCount capacity, const CMBufferCallbacks *callbacks, CMBufferQueueRef *queueOut)
{
  return MEMORY[0x1F40DB9E8](allocator, capacity, callbacks, queueOut);
}

CMBufferRef CMBufferQueueDequeueAndRetain(CMBufferQueueRef queue)
{
  return (CMBufferRef)MEMORY[0x1F40DB9F8](queue);
}

OSStatus CMBufferQueueEnqueue(CMBufferQueueRef queue, CMBufferRef buf)
{
  return MEMORY[0x1F40DBA08](queue, buf);
}

CMItemCount CMBufferQueueGetBufferCount(CMBufferQueueRef queue)
{
  return MEMORY[0x1F40DBA10](queue);
}

const CMBufferCallbacks *CMBufferQueueGetCallbacksForUnsortedSampleBuffers(void)
{
  return (const CMBufferCallbacks *)MEMORY[0x1F40DBA20]();
}

CMTime *__cdecl CMBufferQueueGetDuration(CMTime *__return_ptr retstr, CMBufferQueueRef queue)
{
  return (CMTime *)MEMORY[0x1F40DBA28](retstr, queue);
}

OSStatus CMBufferQueueInstallTriggerWithIntegerThreshold(CMBufferQueueRef queue, CMBufferQueueTriggerCallback callback, void *refcon, CMBufferQueueTriggerCondition condition, CMItemCount threshold, CMBufferQueueTriggerToken *triggerTokenOut)
{
  return MEMORY[0x1F40DBA80](queue, callback, refcon, *(void *)&condition, threshold, triggerTokenOut);
}

OSStatus CMBufferQueueRemoveTrigger(CMBufferQueueRef queue, CMBufferQueueTriggerToken triggerToken)
{
  return MEMORY[0x1F40DBAA0](queue, triggerToken);
}

OSStatus CMBufferQueueReset(CMBufferQueueRef queue)
{
  return MEMORY[0x1F40DBAA8](queue);
}

uint64_t CMClockConvertHostTimeToSystemUnits(CMTime *hostTime)
{
  return MEMORY[0x1F40DBB20](hostTime);
}

CMClockRef CMClockGetHostTimeClock(void)
{
  return (CMClockRef)MEMORY[0x1F40DBB30]();
}

CMTime *__cdecl CMClockGetTime(CMTime *__return_ptr retstr, CMClockRef clock)
{
  return (CMTime *)MEMORY[0x1F40DBB38](retstr, clock);
}

CMTime *__cdecl CMClockMakeHostTimeFromSystemUnits(CMTime *__return_ptr retstr, uint64_t hostTime)
{
  return (CMTime *)MEMORY[0x1F40DBB50](retstr, hostTime);
}

uint64_t CMDerivedObjectCreate()
{
  return MEMORY[0x1F40DBB80]();
}

Boolean CMFormatDescriptionEqual(CMFormatDescriptionRef formatDescription, CMFormatDescriptionRef otherFormatDescription)
{
  return MEMORY[0x1F40DBBA8](formatDescription, otherFormatDescription);
}

CFPropertyListRef CMFormatDescriptionGetExtension(CMFormatDescriptionRef desc, CFStringRef extensionKey)
{
  return (CFPropertyListRef)MEMORY[0x1F40DBBB8](desc, extensionKey);
}

FourCharCode CMFormatDescriptionGetMediaSubType(CMFormatDescriptionRef desc)
{
  return MEMORY[0x1F40DBBC8](desc);
}

CFTypeRef CMGetAttachment(CMAttachmentBearerRef target, CFStringRef key, CMAttachmentMode *attachmentModeOut)
{
  return (CFTypeRef)MEMORY[0x1F40DBBF0](target, key, attachmentModeOut);
}

uint64_t CMNotificationCenterAddListener()
{
  return MEMORY[0x1F40DBCA8]();
}

uint64_t CMNotificationCenterGetDefaultLocalCenter()
{
  return MEMORY[0x1F40DBCB8]();
}

uint64_t CMNotificationCenterPostNotification()
{
  return MEMORY[0x1F40DBCC0]();
}

uint64_t CMNotificationCenterRemoveListener()
{
  return MEMORY[0x1F40DBCD8]();
}

void CMRemoveAttachment(CMAttachmentBearerRef target, CFStringRef key)
{
}

OSStatus CMSampleBufferCallForEachSample(CMSampleBufferRef sbuf, OSStatus (__cdecl *callback)(CMSampleBufferRef, CMItemCount, void *), void *refcon)
{
  return MEMORY[0x1F40DBD18](sbuf, callback, refcon);
}

OSStatus CMSampleBufferCreate(CFAllocatorRef allocator, CMBlockBufferRef dataBuffer, Boolean dataReady, CMSampleBufferMakeDataReadyCallback makeDataReadyCallback, void *makeDataReadyRefcon, CMFormatDescriptionRef formatDescription, CMItemCount numSamples, CMItemCount numSampleTimingEntries, const CMSampleTimingInfo *sampleTimingArray, CMItemCount numSampleSizeEntries, const size_t *sampleSizeArray, CMSampleBufferRef *sampleBufferOut)
{
  return MEMORY[0x1F40DBD30](allocator, dataBuffer, dataReady, makeDataReadyCallback, makeDataReadyRefcon, formatDescription, numSamples, numSampleTimingEntries);
}

OSStatus CMSampleBufferCreateReady(CFAllocatorRef allocator, CMBlockBufferRef dataBuffer, CMFormatDescriptionRef formatDescription, CMItemCount numSamples, CMItemCount numSampleTimingEntries, const CMSampleTimingInfo *sampleTimingArray, CMItemCount numSampleSizeEntries, const size_t *sampleSizeArray, CMSampleBufferRef *sampleBufferOut)
{
  return MEMORY[0x1F40DBD60](allocator, dataBuffer, formatDescription, numSamples, numSampleTimingEntries, sampleTimingArray, numSampleSizeEntries, sampleSizeArray);
}

OSStatus CMSampleBufferGetAudioStreamPacketDescriptionsPtr(CMSampleBufferRef sbuf, const AudioStreamPacketDescription **packetDescriptionsPointerOut, size_t *packetDescriptionsSizeOut)
{
  return MEMORY[0x1F40DBD98](sbuf, packetDescriptionsPointerOut, packetDescriptionsSizeOut);
}

CMBlockBufferRef CMSampleBufferGetDataBuffer(CMSampleBufferRef sbuf)
{
  return (CMBlockBufferRef)MEMORY[0x1F40DBDA0](sbuf);
}

CMTime *__cdecl CMSampleBufferGetDuration(CMTime *__return_ptr retstr, CMSampleBufferRef sbuf)
{
  return (CMTime *)MEMORY[0x1F40DBDB8](retstr, sbuf);
}

CMFormatDescriptionRef CMSampleBufferGetFormatDescription(CMSampleBufferRef sbuf)
{
  return (CMFormatDescriptionRef)MEMORY[0x1F40DBDC0](sbuf);
}

CMItemCount CMSampleBufferGetNumSamples(CMSampleBufferRef sbuf)
{
  return MEMORY[0x1F40DBDD0](sbuf);
}

CMTime *__cdecl CMSampleBufferGetOutputDuration(CMTime *__return_ptr retstr, CMSampleBufferRef sbuf)
{
  return (CMTime *)MEMORY[0x1F40DBDE0](retstr, sbuf);
}

CMTime *__cdecl CMSampleBufferGetOutputPresentationTimeStamp(CMTime *__return_ptr retstr, CMSampleBufferRef sbuf)
{
  return (CMTime *)MEMORY[0x1F40DBDE8](retstr, sbuf);
}

CMTime *__cdecl CMSampleBufferGetPresentationTimeStamp(CMTime *__return_ptr retstr, CMSampleBufferRef sbuf)
{
  return (CMTime *)MEMORY[0x1F40DBDF8](retstr, sbuf);
}

CFArrayRef CMSampleBufferGetSampleAttachmentsArray(CMSampleBufferRef sbuf, Boolean createIfNecessary)
{
  return (CFArrayRef)MEMORY[0x1F40DBE00](sbuf, createIfNecessary);
}

size_t CMSampleBufferGetSampleSize(CMSampleBufferRef sbuf, CMItemIndex sampleIndex)
{
  return MEMORY[0x1F40DBE08](sbuf, sampleIndex);
}

OSStatus CMSampleBufferGetSampleTimingInfo(CMSampleBufferRef sbuf, CMItemIndex sampleIndex, CMSampleTimingInfo *timingInfoOut)
{
  return MEMORY[0x1F40DBE18](sbuf, sampleIndex, timingInfoOut);
}

size_t CMSampleBufferGetTotalSampleSize(CMSampleBufferRef sbuf)
{
  return MEMORY[0x1F40DBE30](sbuf);
}

uint64_t CMSessionMgrRegisterEndpointManager()
{
  return MEMORY[0x1F412C9F8]();
}

void CMSetAttachment(CMAttachmentBearerRef target, CFStringRef key, CFTypeRef value, CMAttachmentMode attachmentMode)
{
}

OSStatus CMSimpleQueueCreate(CFAllocatorRef allocator, int32_t capacity, CMSimpleQueueRef *queueOut)
{
  return MEMORY[0x1F40DBED0](allocator, *(void *)&capacity, queueOut);
}

const void *__cdecl CMSimpleQueueDequeue(CMSimpleQueueRef queue)
{
  return (const void *)MEMORY[0x1F40DBED8](queue);
}

OSStatus CMSimpleQueueEnqueue(CMSimpleQueueRef queue, const void *element)
{
  return MEMORY[0x1F40DBEE0](queue, element);
}

int32_t CMSimpleQueueGetCount(CMSimpleQueueRef queue)
{
  return MEMORY[0x1F40DBEF0](queue);
}

const void *__cdecl CMSimpleQueueGetHead(CMSimpleQueueRef queue)
{
  return (const void *)MEMORY[0x1F40DBEF8](queue);
}

CMTime *__cdecl CMSyncConvertTime(CMTime *__return_ptr retstr, CMTime *time, CMClockOrTimebaseRef fromClockOrTimebase, CMClockOrTimebaseRef toClockOrTimebase)
{
  return (CMTime *)MEMORY[0x1F40DBF20](retstr, time, fromClockOrTimebase, toClockOrTimebase);
}

OSStatus CMSyncGetRelativeRateAndAnchorTime(CMClockOrTimebaseRef ofClockOrTimebase, CMClockOrTimebaseRef relativeToClockOrTimebase, Float64 *outRelativeRate, CMTime *outOfClockOrTimebaseAnchorTime, CMTime *outRelativeToClockOrTimebaseAnchorTime)
{
  return MEMORY[0x1F40DBF30](ofClockOrTimebase, relativeToClockOrTimebase, outRelativeRate, outOfClockOrTimebaseAnchorTime, outRelativeToClockOrTimebaseAnchorTime);
}

CMTime *__cdecl CMSyncGetTime(CMTime *__return_ptr retstr, CMClockOrTimebaseRef clockOrTimebase)
{
  return (CMTime *)MEMORY[0x1F40DBF38](retstr, clockOrTimebase);
}

CMTime *__cdecl CMTimeAbsoluteValue(CMTime *__return_ptr retstr, CMTime *time)
{
  return (CMTime *)MEMORY[0x1F40DC080](retstr, time);
}

CMTime *__cdecl CMTimeAdd(CMTime *__return_ptr retstr, CMTime *lhs, CMTime *rhs)
{
  return (CMTime *)MEMORY[0x1F40DC088](retstr, lhs, rhs);
}

int32_t CMTimeCompare(CMTime *time1, CMTime *time2)
{
  return MEMORY[0x1F40DC0C8](time1, time2);
}

CMTime *__cdecl CMTimeConvertScale(CMTime *__return_ptr retstr, CMTime *time, int32_t newTimescale, CMTimeRoundingMethod method)
{
  return (CMTime *)MEMORY[0x1F40DC0D0](retstr, time, *(void *)&newTimescale, *(void *)&method);
}

CFDictionaryRef CMTimeCopyAsDictionary(CMTime *time, CFAllocatorRef allocator)
{
  return (CFDictionaryRef)MEMORY[0x1F40DC0E0](time, allocator);
}

Float64 CMTimeGetSeconds(CMTime *time)
{
  MEMORY[0x1F40DC100](time);
  return result;
}

CMTime *__cdecl CMTimeMake(CMTime *__return_ptr retstr, int64_t value, int32_t timescale)
{
  return (CMTime *)MEMORY[0x1F40DC108](retstr, value, *(void *)&timescale);
}

CMTime *__cdecl CMTimeMakeFromDictionary(CMTime *__return_ptr retstr, CFDictionaryRef dictionaryRepresentation)
{
  return (CMTime *)MEMORY[0x1F40DC110](retstr, dictionaryRepresentation);
}

CMTime *__cdecl CMTimeMakeWithSeconds(CMTime *__return_ptr retstr, Float64 seconds, int32_t preferredTimescale)
{
  return (CMTime *)MEMORY[0x1F40DC120](retstr, *(void *)&preferredTimescale, seconds);
}

CMTime *__cdecl CMTimeMaximum(CMTime *__return_ptr retstr, CMTime *time1, CMTime *time2)
{
  return (CMTime *)MEMORY[0x1F40DC160](retstr, time1, time2);
}

CMTime *__cdecl CMTimeMinimum(CMTime *__return_ptr retstr, CMTime *time1, CMTime *time2)
{
  return (CMTime *)MEMORY[0x1F40DC168](retstr, time1, time2);
}

CMTime *__cdecl CMTimeMultiplyByFloat64(CMTime *__return_ptr retstr, CMTime *time, Float64 multiplier)
{
  return (CMTime *)MEMORY[0x1F40DC178](retstr, time, multiplier);
}

CMTime *__cdecl CMTimeMultiplyByRatio(CMTime *__return_ptr retstr, CMTime *time, int32_t multiplier, int32_t divisor)
{
  return (CMTime *)MEMORY[0x1F40DC180](retstr, time, *(void *)&multiplier, *(void *)&divisor);
}

CMTime *__cdecl CMTimeRangeGetEnd(CMTime *__return_ptr retstr, CMTimeRange *range)
{
  return (CMTime *)MEMORY[0x1F40DC1C0](retstr, range);
}

CMTimeRange *__cdecl CMTimeRangeMake(CMTimeRange *__return_ptr retstr, CMTime *start, CMTime *duration)
{
  return (CMTimeRange *)MEMORY[0x1F40DC1D8](retstr, start, duration);
}

CMTime *__cdecl CMTimeSubtract(CMTime *__return_ptr retstr, CMTime *lhs, CMTime *rhs)
{
  return (CMTime *)MEMORY[0x1F40DC1F0](retstr, lhs, rhs);
}

OSStatus CMTimebaseCreateWithSourceClock(CFAllocatorRef allocator, CMClockRef sourceClock, CMTimebaseRef *timebaseOut)
{
  return MEMORY[0x1F40DC240](allocator, sourceClock, timebaseOut);
}

Float64 CMTimebaseGetRate(CMTimebaseRef timebase)
{
  MEMORY[0x1F40DC258](timebase);
  return result;
}

CMTime *__cdecl CMTimebaseGetTime(CMTime *__return_ptr retstr, CMTimebaseRef timebase)
{
  return (CMTime *)MEMORY[0x1F40DC260](retstr, timebase);
}

uint64_t CMTimebaseGetTimeClampedAboveAnchorTime()
{
  return MEMORY[0x1F40DC270]();
}

CMTime *__cdecl CMTimebaseGetTimeWithTimeScale(CMTime *__return_ptr retstr, CMTimebaseRef timebase, CMTimeScale timescale, CMTimeRoundingMethod method)
{
  return (CMTime *)MEMORY[0x1F40DC280](retstr, timebase, *(void *)&timescale, *(void *)&method);
}

OSStatus CMTimebaseSetRateAndAnchorTime(CMTimebaseRef timebase, Float64 rate, CMTime *timebaseTime, CMTime *immediateSourceTime)
{
  return MEMORY[0x1F40DC2B0](timebase, timebaseTime, immediateSourceTime, rate);
}

CMVideoDimensions CMVideoFormatDescriptionGetDimensions(CMVideoFormatDescriptionRef videoDesc)
{
  return (CMVideoDimensions)MEMORY[0x1F40DC338](videoDesc);
}

uint64_t CPrintF()
{
  return MEMORY[0x1F4116098]();
}

uint64_t CUFatalErrorF()
{
  return MEMORY[0x1F41160C8]();
}

uint64_t CelestialCFCreatePropertyList()
{
  return MEMORY[0x1F40DC378]();
}

uint64_t CelestialCFCreatePropertyListForModelAndBundleIdentifier()
{
  return MEMORY[0x1F40DC380]();
}

uint64_t CelestialGetModelSpecificName()
{
  return MEMORY[0x1F40DC390]();
}

uint64_t CreateScaledImageDataWithData()
{
  return MEMORY[0x1F4116268]();
}

uint64_t DACPServer_AddRemote()
{
  return MEMORY[0x1F41162A8]();
}

uint64_t DACPServer_Create()
{
  return MEMORY[0x1F41162B0]();
}

uint64_t DACPServer_RemoveRemote()
{
  return MEMORY[0x1F41162B8]();
}

uint64_t DMAPContentBlock_AddCFObjectByKey()
{
  return MEMORY[0x1F41162C0]();
}

uint64_t DMAPContentBlock_AddInt32()
{
  return MEMORY[0x1F41162C8]();
}

uint64_t DMAPContentBlock_AddInt8()
{
  return MEMORY[0x1F41162D0]();
}

uint64_t DMAPContentBlock_CloseContainer()
{
  return MEMORY[0x1F41162D8]();
}

uint64_t DMAPContentBlock_Commit()
{
  return MEMORY[0x1F41162E0]();
}

uint64_t DMAPContentBlock_Free()
{
  return MEMORY[0x1F41162E8]();
}

uint64_t DMAPContentBlock_Init()
{
  return MEMORY[0x1F41162F0]();
}

uint64_t DMAPContentBlock_OpenContainer()
{
  return MEMORY[0x1F41162F8]();
}

uint64_t DataBuffer_Append()
{
  return MEMORY[0x1F4116300]();
}

uint64_t DataBuffer_AppendF()
{
  return MEMORY[0x1F4116308]();
}

uint64_t DataBuffer_Commit()
{
  return MEMORY[0x1F4116310]();
}

uint64_t DataBuffer_Free()
{
  return MEMORY[0x1F4116318]();
}

uint64_t DataBuffer_Init()
{
  return MEMORY[0x1F4116320]();
}

uint64_t DataToHexCStringEx()
{
  return MEMORY[0x1F4116328]();
}

uint64_t DebugIPC_EnsureFinalized()
{
  return MEMORY[0x1F4116338]();
}

uint64_t DebugIPC_EnsureInitialized()
{
  return MEMORY[0x1F4116340]();
}

uint64_t Dk7hjUuq()
{
  return MEMORY[0x1F41080C0]();
}

OSStatus ExtAudioFileCreateWithURL(CFURLRef inURL, AudioFileTypeID inFileType, const AudioStreamBasicDescription *inStreamDesc, const AudioChannelLayout *inChannelLayout, UInt32 inFlags, ExtAudioFileRef *outExtAudioFile)
{
  return MEMORY[0x1F410B6C0](inURL, *(void *)&inFileType, inStreamDesc, inChannelLayout, *(void *)&inFlags, outExtAudioFile);
}

OSStatus ExtAudioFileDispose(ExtAudioFileRef inExtAudioFile)
{
  return MEMORY[0x1F410B6C8](inExtAudioFile);
}

OSStatus ExtAudioFileSetProperty(ExtAudioFileRef inExtAudioFile, ExtAudioFilePropertyID inPropertyID, UInt32 inPropertyDataSize, const void *inPropertyData)
{
  return MEMORY[0x1F410B6F8](inExtAudioFile, *(void *)&inPropertyID, *(void *)&inPropertyDataSize, inPropertyData);
}

OSStatus ExtAudioFileWrite(ExtAudioFileRef inExtAudioFile, UInt32 inNumberFrames, const AudioBufferList *ioData)
{
  return MEMORY[0x1F410B710](inExtAudioFile, *(void *)&inNumberFrames, ioData);
}

uint64_t FPrintF()
{
  return MEMORY[0x1F4116358]();
}

uint64_t FVDUtilsEncryptedEncodeSupported()
{
  return MEMORY[0x1F40ED120]();
}

uint64_t FVDUtilsH264EncoderSupports444()
{
  return MEMORY[0x1F40ED128]();
}

uint64_t FVDUtilsHEVCEncoderSupports4K60()
{
  return MEMORY[0x1F40ED138]();
}

uint64_t FigAirPlaySecureStopRouterFinalizeRecordAndCommitToDisk()
{
  return MEMORY[0x1F40ED148]();
}

uint64_t FigAssetReaderCreateWithURLAndFormatReader()
{
  return MEMORY[0x1F40ED270]();
}

uint64_t FigAudioSessionCreateWithAVAudioSessionSiblingForAudioSessionID()
{
  return MEMORY[0x1F40ED310]();
}

uint64_t FigBufferedAirPlayGlobalRoutingRegistryGetSharedInstance()
{
  return MEMORY[0x1F40ED318]();
}

uint64_t FigBufferedAirPlayGlobalRoutingRegistryStartServer()
{
  return MEMORY[0x1F40ED320]();
}

uint64_t FigCFArrayAppendInt32()
{
  return MEMORY[0x1F40DC810]();
}

uint64_t FigCFArrayApplyFunction()
{
  return MEMORY[0x1F40DC828]();
}

uint64_t FigCFArrayContainsValue()
{
  return MEMORY[0x1F40DC848]();
}

uint64_t FigCFArrayCreateMutableCopy()
{
  return MEMORY[0x1F40DC870]();
}

uint64_t FigCFArrayGetInt64AtIndex()
{
  return MEMORY[0x1F40DC8D8]();
}

uint64_t FigCFArrayRemoveLastElementOfValue()
{
  return MEMORY[0x1F40DC900]();
}

uint64_t FigCFCopyCompactDescription()
{
  return MEMORY[0x1F40DC918]();
}

uint64_t FigCFDictionaryApplyBlock()
{
  return MEMORY[0x1F40DC948]();
}

uint64_t FigCFDictionaryCopyArrayOfKeys()
{
  return MEMORY[0x1F40DC950]();
}

uint64_t FigCFDictionaryCopyArrayOfValues()
{
  return MEMORY[0x1F40DC958]();
}

uint64_t FigCFDictionaryCreateMutableCopy()
{
  return MEMORY[0x1F40DC970]();
}

uint64_t FigCFDictionaryGetBooleanIfPresent()
{
  return MEMORY[0x1F40DC988]();
}

uint64_t FigCFDictionaryGetBooleanValue()
{
  return MEMORY[0x1F40DC990]();
}

uint64_t FigCFDictionaryGetCGFloatIfPresent()
{
  return MEMORY[0x1F40DC9A0]();
}

uint64_t FigCFDictionaryGetCGSizeIfPresent()
{
  return MEMORY[0x1F40DC9B0]();
}

uint64_t FigCFDictionaryGetCMTimeIfPresent()
{
  return MEMORY[0x1F40DC9B8]();
}

uint64_t FigCFDictionaryGetCount()
{
  return MEMORY[0x1F40DC9C8]();
}

uint64_t FigCFDictionaryGetDoubleIfPresent()
{
  return MEMORY[0x1F40DC9E0]();
}

uint64_t FigCFDictionaryGetFloatIfPresent()
{
  return MEMORY[0x1F40DC9F0]();
}

uint64_t FigCFDictionaryGetInt32IfPresent()
{
  return MEMORY[0x1F40DCA00]();
}

uint64_t FigCFDictionaryGetInt64IfPresent()
{
  return MEMORY[0x1F40DCA08]();
}

uint64_t FigCFDictionaryGetIntIfPresent()
{
  return MEMORY[0x1F40DCA10]();
}

uint64_t FigCFDictionaryGetNumberValue()
{
  return MEMORY[0x1F40DCA18]();
}

uint64_t FigCFDictionaryGetStringValue()
{
  return MEMORY[0x1F40DCA28]();
}

uint64_t FigCFDictionaryGetValue()
{
  return MEMORY[0x1F40DCA38]();
}

uint64_t FigCFDictionaryRemoveAllValues()
{
  return MEMORY[0x1F40DCA50]();
}

uint64_t FigCFDictionarySetAllValuesFromDictionary()
{
  return MEMORY[0x1F40DCA58]();
}

uint64_t FigCFDictionarySetBoolean()
{
  return MEMORY[0x1F40DCA60]();
}

uint64_t FigCFDictionarySetCGSize()
{
  return MEMORY[0x1F40DCA80]();
}

uint64_t FigCFDictionarySetCMTime()
{
  return MEMORY[0x1F40DCA88]();
}

uint64_t FigCFDictionarySetDouble()
{
  return MEMORY[0x1F40DCA98]();
}

uint64_t FigCFDictionarySetFloat()
{
  return MEMORY[0x1F40DCAA0]();
}

uint64_t FigCFDictionarySetFloat32()
{
  return MEMORY[0x1F40DCAA8]();
}

uint64_t FigCFDictionarySetInt()
{
  return MEMORY[0x1F40DCAB0]();
}

uint64_t FigCFDictionarySetInt32()
{
  return MEMORY[0x1F40DCAC0]();
}

uint64_t FigCFDictionarySetInt64()
{
  return MEMORY[0x1F40DCAC8]();
}

uint64_t FigCFDictionarySetUInt32()
{
  return MEMORY[0x1F40DCAD8]();
}

uint64_t FigCFDictionarySetValue()
{
  return MEMORY[0x1F40DCAE8]();
}

uint64_t FigCFDictionarySetValueFromKeyInDict()
{
  return MEMORY[0x1F40DCAF0]();
}

uint64_t FigCFEqual()
{
  return MEMORY[0x1F40DCAF8]();
}

uint64_t FigCFNumberCreateFloat64()
{
  return MEMORY[0x1F40DCB20]();
}

uint64_t FigCFNumberCreateSInt32()
{
  return MEMORY[0x1F40DCB30]();
}

uint64_t FigCFNumberCreateSInt64()
{
  return MEMORY[0x1F40DCB38]();
}

uint64_t FigCFNumberCreateUInt16()
{
  return MEMORY[0x1F40DCB48]();
}

uint64_t FigCFNumberCreateUInt32()
{
  return MEMORY[0x1F40DCB50]();
}

uint64_t FigCFNumberCreateUInt64()
{
  return MEMORY[0x1F40DCB58]();
}

uint64_t FigCFNumberGetSInt32()
{
  return MEMORY[0x1F40DCB78]();
}

uint64_t FigCFNumberGetSInt64()
{
  return MEMORY[0x1F40DCB80]();
}

uint64_t FigCFNumberGetUInt16()
{
  return MEMORY[0x1F40DCB88]();
}

uint64_t FigCFNumberGetUInt32()
{
  return MEMORY[0x1F40DCB90]();
}

uint64_t FigCFNumberGetUInt64()
{
  return MEMORY[0x1F40DCB98]();
}

uint64_t FigCFSetCopyValuesAsCFArray()
{
  return MEMORY[0x1F40DCBD0]();
}

uint64_t FigCFStringGetCStringPtrAndBufferToFree()
{
  return MEMORY[0x1F40DCC20]();
}

uint64_t FigCFWeakReferenceDestroy()
{
  return MEMORY[0x1F40DCC98]();
}

uint64_t FigCFWeakReferenceHolderCopyReferencedObject()
{
  return MEMORY[0x1F40DCCA0]();
}

uint64_t FigCFWeakReferenceHolderCreateWithReferencedObject()
{
  return MEMORY[0x1F40DCCA8]();
}

uint64_t FigCFWeakReferenceInit()
{
  return MEMORY[0x1F40DCCB8]();
}

uint64_t FigCFWeakReferenceLoadAndRetain()
{
  return MEMORY[0x1F40DCCC0]();
}

uint64_t FigCFWeakReferenceStore()
{
  return MEMORY[0x1F40DCCC8]();
}

uint64_t FigCFWeakReferenceTableAddValueAndGetKey()
{
  return MEMORY[0x1F40DCCD0]();
}

uint64_t FigCFWeakReferenceTableCopyValue()
{
  return MEMORY[0x1F40DCCE8]();
}

uint64_t FigCFWeakReferenceTableCreate()
{
  return MEMORY[0x1F40DCCF8]();
}

uint64_t FigCFWeakReferenceTableRemoveValue()
{
  return MEMORY[0x1F40DCD00]();
}

uint64_t FigCPECryptorGetNotificationCenter()
{
  return MEMORY[0x1F40DCD10]();
}

uint64_t FigClusterSynchronizationManager_OneTimeInitialization()
{
  return MEMORY[0x1F40ED440]();
}

uint64_t FigCreateBlockBufferCopyingMemoryBlock()
{
  return MEMORY[0x1F40DD000]();
}

uint64_t FigCreateBlockBufferWithCFDataNoCopy()
{
  return MEMORY[0x1F40DD008]();
}

uint64_t FigCreateBlockBufferWithCFString()
{
  return MEMORY[0x1F40DD010]();
}

uint64_t FigCreateCFDataFromCFPropertyList()
{
  return MEMORY[0x1F40DD038]();
}

uint64_t FigCreateCFDataWithBlockBufferNoCopy()
{
  return MEMORY[0x1F40DD040]();
}

uint64_t FigDispatchAsyncPostNotification()
{
  return MEMORY[0x1F40DD370]();
}

uint64_t FigDispatchQueueCreateWithPriority()
{
  return MEMORY[0x1F40DD3A8]();
}

uint64_t FigDisplayModes_BuildColorAndTimingModes()
{
  return MEMORY[0x1F40ED528]();
}

uint64_t FigDisplayModes_BuildColorModesFromHDRMode()
{
  return MEMORY[0x1F40ED530]();
}

uint64_t FigDisplayModes_ConvertNonSquarePixelSizeToSquarePixelSize()
{
  return MEMORY[0x1F40ED538]();
}

uint64_t FigDisplayModes_CopyTimingModeAppendingPreferredUIScale()
{
  return MEMORY[0x1F40ED540]();
}

uint64_t FigDisplayModes_CreateColorAndTimingModesArraysWithPreferredMode()
{
  return MEMORY[0x1F40ED548]();
}

uint64_t FigEndpointActivateSync()
{
  return MEMORY[0x1F40DD3F0]();
}

uint64_t FigEndpointAggregateGetClassID()
{
  return MEMORY[0x1F40DD3F8]();
}

uint64_t FigEndpointAggregateGetFigEndpoint()
{
  return MEMORY[0x1F40DD400]();
}

uint64_t FigEndpointAudioSinkGetClassID()
{
  return MEMORY[0x1F40DD408]();
}

uint64_t FigEndpointAudioSourceGetCMBaseObject()
{
  return MEMORY[0x1F40DD410]();
}

uint64_t FigEndpointAudioSourceGetClassID()
{
  return MEMORY[0x1F40DD418]();
}

uint64_t FigEndpointAudioSourceGetTypeID()
{
  return MEMORY[0x1F40DD420]();
}

uint64_t FigEndpointCopyFirstStreamOfType()
{
  return MEMORY[0x1F40DD440]();
}

uint64_t FigEndpointDeactivate()
{
  return MEMORY[0x1F40DD450]();
}

uint64_t FigEndpointExtendedGetClassID()
{
  return MEMORY[0x1F40DD458]();
}

uint64_t FigEndpointExtendedGetFigEndpoint()
{
  return MEMORY[0x1F40DD460]();
}

uint64_t FigEndpointGetCMBaseObject()
{
  return MEMORY[0x1F40DD468]();
}

uint64_t FigEndpointGetTypeID()
{
  return MEMORY[0x1F40DD480]();
}

uint64_t FigEndpointManagerForNeroGetShared()
{
  return MEMORY[0x1F40ED570]();
}

uint64_t FigEndpointManagerGetCMBaseObject()
{
  return MEMORY[0x1F40DD490]();
}

uint64_t FigEndpointManagerGetClassID()
{
  return MEMORY[0x1F40DD498]();
}

uint64_t FigEndpointManagerGetTypeID()
{
  return MEMORY[0x1F40DD4A0]();
}

uint64_t FigEndpointManagerRemoteCopyAirPlayManager()
{
  return MEMORY[0x1F40DD4A8]();
}

uint64_t FigEndpointManagerRemoteCopyCarPlayManager()
{
  return MEMORY[0x1F40DD4B0]();
}

uint64_t FigEndpointManagerRemoteCopySidePlayManager()
{
  return MEMORY[0x1F40DD4B8]();
}

uint64_t FigEndpointManagerStartServerEx()
{
  return MEMORY[0x1F40DD4C0]();
}

uint64_t FigEndpointPlaybackSessionGetCMBaseObject()
{
  return MEMORY[0x1F40DD4C8]();
}

uint64_t FigEndpointPlaybackSessionGetClassID()
{
  return MEMORY[0x1F40DD4D0]();
}

uint64_t FigEndpointPlaybackSessionStartServer()
{
  return MEMORY[0x1F40DD4D8]();
}

uint64_t FigEndpointRemoteControlSessionGetCMBaseObject()
{
  return MEMORY[0x1F40DD510]();
}

uint64_t FigEndpointRemoteControlSessionGetClassID()
{
  return MEMORY[0x1F40DD518]();
}

uint64_t FigEndpointRemoteControlSessionStartServer()
{
  return MEMORY[0x1F40DD520]();
}

uint64_t FigEndpointStartServerEx()
{
  return MEMORY[0x1F40DD538]();
}

uint64_t FigEndpointStreamAirPlayGetClassID()
{
  return MEMORY[0x1F40DD540]();
}

uint64_t FigEndpointStreamAirPlayGetFigEndpointStream()
{
  return MEMORY[0x1F40DD548]();
}

uint64_t FigEndpointStreamAudioEngineGetCMBaseObject()
{
  return MEMORY[0x1F40ED578]();
}

uint64_t FigEndpointStreamAudioEngineGetClassID()
{
  return MEMORY[0x1F40ED580]();
}

uint64_t FigEndpointStreamAudioEngineGetTypeID()
{
  return MEMORY[0x1F40ED588]();
}

uint64_t FigEndpointStreamAudioEngineSbufTracerDebugPrint()
{
  return MEMORY[0x1F40ED590]();
}

uint64_t FigEndpointStreamAudioEngineStartServer()
{
  return MEMORY[0x1F40ED598]();
}

uint64_t FigEndpointStreamGetCMBaseObject()
{
  return MEMORY[0x1F40DD570]();
}

uint64_t FigEndpointStreamGetClassID()
{
  return MEMORY[0x1F40DD578]();
}

uint64_t FigEndpointStreamResumeSync()
{
  return MEMORY[0x1F40DD588]();
}

uint64_t FigEndpointStreamStartServer()
{
  return MEMORY[0x1F40DD590]();
}

uint64_t FigEndpointStreamSuspend()
{
  return MEMORY[0x1F40DD598]();
}

uint64_t FigEndpointStreamSuspendSync()
{
  return MEMORY[0x1F40DD5A0]();
}

uint64_t FigEndpointSubEndpointSupportProtocolGetProtocolID()
{
  return MEMORY[0x1F40DD5B8]();
}

uint64_t FigGetCFPreferenceBooleanWithDefault()
{
  return MEMORY[0x1F40DD840]();
}

uint64_t FigGetCFPreferenceDoubleWithDefault()
{
  return MEMORY[0x1F40DD848]();
}

uint64_t FigGetCFPreferenceNumberWithDefault()
{
  return MEMORY[0x1F40DD858]();
}

uint64_t FigGetUpTimeNanoseconds()
{
  return MEMORY[0x1F40DD8D0]();
}

uint64_t FigHALAudioConduitDeviceCopyProperty()
{
  return MEMORY[0x1F40DD9B8]();
}

uint64_t FigHALAudioConduitDeviceHALSendAudio()
{
  return MEMORY[0x1F40DD9C8]();
}

uint64_t FigHALAudioConduitDeviceHALStartIO()
{
  return MEMORY[0x1F40DD9D0]();
}

uint64_t FigHALAudioConduitDeviceHALStartStream()
{
  return MEMORY[0x1F40DD9D8]();
}

uint64_t FigHALAudioConduitDeviceHALStopIO()
{
  return MEMORY[0x1F40DD9E0]();
}

uint64_t FigHALAudioConduitDeviceHALStopStream()
{
  return MEMORY[0x1F40DD9E8]();
}

uint64_t FigHALAudioDeviceBrokerCopy()
{
  return MEMORY[0x1F40DDA08]();
}

uint64_t FigInstallSysdiagnoseBlock()
{
  return MEMORY[0x1F40DDB20]();
}

uint64_t FigNotificationCenterAddWeakListener()
{
  return MEMORY[0x1F40DDD90]();
}

uint64_t FigNotificationCenterAddWeakListeners()
{
  return MEMORY[0x1F40DDD98]();
}

uint64_t FigNotificationCenterRemoveWeakListener()
{
  return MEMORY[0x1F40DDDB0]();
}

uint64_t FigNotificationCenterRemoveWeakListeners()
{
  return MEMORY[0x1F40DDDB8]();
}

uint64_t FigPKDStopAirPlaySenderSession()
{
  return MEMORY[0x1F40ED7A0]();
}

uint64_t FigPWDKeyExchangeSenderCreate()
{
  return MEMORY[0x1F40ED7A8]();
}

uint64_t FigRouteDiscovererCreate()
{
  return MEMORY[0x1F412CA78]();
}

uint64_t FigRoutingContextCopySystemMirroringContext()
{
  return MEMORY[0x1F412CA90]();
}

uint64_t FigSampleBufferConsumerCreateForBufferQueue()
{
  return MEMORY[0x1F40EDB10]();
}

uint64_t FigSampleBufferConsumerStartServer()
{
  return MEMORY[0x1F40EDB18]();
}

uint64_t FigSampleBufferGetDecryptor()
{
  return MEMORY[0x1F40DE210]();
}

uint64_t FigServer_IsAirplayd()
{
  return MEMORY[0x1F40DE2D0]();
}

uint64_t FigSignalErrorAt()
{
  return MEMORY[0x1F40DE320]();
}

uint64_t FigSimpleMutexCheckIsLockedOnThisThread()
{
  return MEMORY[0x1F40DE330]();
}

uint64_t FigSimpleMutexCheckIsNotLockedOnThisThread()
{
  return MEMORY[0x1F40DE338]();
}

uint64_t FigSimpleMutexCreate()
{
  return MEMORY[0x1F40DE340]();
}

uint64_t FigSimpleMutexDestroy()
{
  return MEMORY[0x1F40DE348]();
}

uint64_t FigSimpleMutexLock()
{
  return MEMORY[0x1F40DE350]();
}

uint64_t FigSimpleMutexTryLock()
{
  return MEMORY[0x1F40DE358]();
}

uint64_t FigSimpleMutexUnlock()
{
  return MEMORY[0x1F40DE360]();
}

uint64_t FigStarkModeControllerGetCurrentMode()
{
  return MEMORY[0x1F412CAF8]();
}

uint64_t FigStarkModeControllerRequestInitialModeChange()
{
  return MEMORY[0x1F412CB00]();
}

uint64_t FigStarkModeControllerRequestModeChange()
{
  return MEMORY[0x1F412CB08]();
}

uint64_t FigStarkModeControllerSetExecuteChangeHandler()
{
  return MEMORY[0x1F412CB10]();
}

uint64_t FigStarkModeCopyController()
{
  return MEMORY[0x1F412CB18]();
}

uint64_t FigThreadRunOnce()
{
  return MEMORY[0x1F40DE5F0]();
}

uint64_t FigTransportGetCMBaseObject()
{
  return MEMORY[0x1F40DE750]();
}

uint64_t FigTransportSessionGetCMBaseObject()
{
  return MEMORY[0x1F40DE778]();
}

uint64_t FigTransportStreamGetCMBaseObject()
{
  return MEMORY[0x1F40DE790]();
}

uint64_t FigTransportStreamGetTypeID()
{
  return MEMORY[0x1F40DE7A0]();
}

uint64_t FigTransportStreamSendBatchSlow()
{
  return MEMORY[0x1F40DE7A8]();
}

uint64_t FigUSleep()
{
  return MEMORY[0x1F40DE7C0]();
}

uint64_t FigVideoFormatDescriptionCreateWithSampleDescriptionExtensionAtom()
{
  return MEMORY[0x1F40DE850]();
}

uint64_t FigVirtualDisplayCopyDefaultTimestampInfo()
{
  return MEMORY[0x1F40EDCC0]();
}

uint64_t FigVirtualDisplayProcessorGetTypeID()
{
  return MEMORY[0x1F40EDCD8]();
}

uint64_t FigVirtualDisplaySessionActivateWithSourceAndSink()
{
  return MEMORY[0x1F40EDCE0]();
}

uint64_t FigVirtualDisplaySessionDeactivate()
{
  return MEMORY[0x1F40EDCF0]();
}

uint64_t FigVirtualDisplaySinkGetClassID()
{
  return MEMORY[0x1F40EDD00]();
}

uint64_t FigVirtualDisplaySourceGetTypeID()
{
  return MEMORY[0x1F40EDD18]();
}

uint64_t FigVirtualDisplaySourceScreenGetCurrent()
{
  return MEMORY[0x1F40EDD20]();
}

uint64_t FigXPCCreateBasicMessage()
{
  return MEMORY[0x1F40DE950]();
}

uint64_t FigXPCHandleStdCopyPropertyMessage()
{
  return MEMORY[0x1F40DE970]();
}

uint64_t FigXPCHandleStdSetPropertyMessage()
{
  return MEMORY[0x1F40DE978]();
}

uint64_t FigXPCMessageCopyCFDictionary()
{
  return MEMORY[0x1F40DE9C8]();
}

uint64_t FigXPCMessageGetOpCode()
{
  return MEMORY[0x1F40DEA90]();
}

uint64_t FigXPCMessageSetCFDictionary()
{
  return MEMORY[0x1F40DEAD8]();
}

uint64_t FigXPCRelease()
{
  return MEMORY[0x1F40DEB78]();
}

uint64_t FigXPCRemoteClientAssociateObject()
{
  return MEMORY[0x1F40DEB80]();
}

uint64_t FigXPCRemoteClientDisassociateObject()
{
  return MEMORY[0x1F40DEBB8]();
}

uint64_t FigXPCRemoteClientSendSyncMessage()
{
  return MEMORY[0x1F40DEBF0]();
}

uint64_t FigXPCRemoteClientSendSyncMessageCreatingReply()
{
  return MEMORY[0x1F40DEBF8]();
}

uint64_t FigXPCRetain()
{
  return MEMORY[0x1F40DEC08]();
}

uint64_t FigXPCSendStdCopyPropertyMessage()
{
  return MEMORY[0x1F40DEC10]();
}

uint64_t FigXPCSendStdSetPropertyMessage()
{
  return MEMORY[0x1F40DEC18]();
}

uint64_t FigXPCServerAssociateObjectWithConnection()
{
  return MEMORY[0x1F40DEC40]();
}

uint64_t FigXPCServerDisassociateObjectWithConnection()
{
  return MEMORY[0x1F40DEC80]();
}

uint64_t FigXPCServerLookupAndRetainAssociatedObject()
{
  return MEMORY[0x1F40DECA0]();
}

uint64_t FigXPCServerStart()
{
  return MEMORY[0x1F40DECC8]();
}

uint64_t FourCharCodeToCString()
{
  return MEMORY[0x1F4116370]();
}

uint64_t GestaltGetCString()
{
  return MEMORY[0x1F4116390]();
}

uint64_t GestaltGetData()
{
  return MEMORY[0x1F4116398]();
}

uint64_t GetDeviceInternalModelString()
{
  return MEMORY[0x1F41163B8]();
}

uint64_t GetDeviceModelString()
{
  return MEMORY[0x1F41163C0]();
}

uint64_t GetDeviceUniqueID()
{
  return MEMORY[0x1F41163C8]();
}

uint64_t GetFairPlayHWInfo()
{
  return MEMORY[0x1F41163D0]();
}

uint64_t GetFileExtensionFromString()
{
  return MEMORY[0x1F41163D8]();
}

uint64_t GetSystemBuildVersionString()
{
  return MEMORY[0x1F41163F8]();
}

uint64_t GvMGlTNs()
{
  return MEMORY[0x1F41080C8]();
}

uint64_t HTTPConnectionGetNextURLSegmentEx()
{
  return MEMORY[0x1F4116488]();
}

uint64_t HTTPConnectionInitResponse()
{
  return MEMORY[0x1F4116490]();
}

uint64_t HTTPConnectionSendResponse()
{
  return MEMORY[0x1F4116498]();
}

uint64_t HTTPConnectionSendSimpleResponseEx()
{
  return MEMORY[0x1F41164A0]();
}

uint64_t HTTPConnectionSetTransportDelegate()
{
  return MEMORY[0x1F41164B8]();
}

uint64_t HTTPGetHeaderField()
{
  return MEMORY[0x1F41164D0]();
}

uint64_t HTTPMakeDateString()
{
  return MEMORY[0x1F41164F0]();
}

uint64_t HTTPMessageGetHeaderField()
{
  return MEMORY[0x1F4116508]();
}

uint64_t HTTPMessageSetBodyFileDescriptor()
{
  return MEMORY[0x1F4116518]();
}

uint64_t HTTPMessageSetHeaderField()
{
  return MEMORY[0x1F4116528]();
}

uint64_t HTTPParseParameter()
{
  return MEMORY[0x1F4116538]();
}

uint64_t HTTPServerCreate()
{
  return MEMORY[0x1F4116548]();
}

uint64_t HTTPServer_Delete()
{
  return MEMORY[0x1F4116560]();
}

uint64_t HTTPServer_Start()
{
  return MEMORY[0x1F4116568]();
}

uint64_t HTTPServer_Stop()
{
  return MEMORY[0x1F4116570]();
}

uint64_t HardwareAddressToCString()
{
  return MEMORY[0x1F4116578]();
}

uint64_t HexToData()
{
  return MEMORY[0x1F4116588]();
}

uint64_t IOHIDEventGetIntegerValue()
{
  return MEMORY[0x1F40E8A00]();
}

uint64_t IOHIDEventGetType()
{
  return MEMORY[0x1F40E8A38]();
}

uint64_t IOHIDEventSystemClientCreate()
{
  return MEMORY[0x1F40E8AC0]();
}

uint64_t IOHIDEventSystemClientRegisterEventCallback()
{
  return MEMORY[0x1F40E8AF0]();
}

uint64_t IOHIDEventSystemClientScheduleWithRunLoop()
{
  return MEMORY[0x1F40E8B20]();
}

uint64_t IOHIDEventSystemClientSetMatching()
{
  return MEMORY[0x1F40E8B38]();
}

uint64_t IOHIDEventSystemClientUnregisterEventCallback()
{
  return MEMORY[0x1F40E8B68]();
}

uint64_t IOHIDEventSystemClientUnscheduleWithRunLoop()
{
  return MEMORY[0x1F40E8B90]();
}

uint64_t IOHIDUserDeviceCreate()
{
  return MEMORY[0x1F40E8E30]();
}

IOReturn IOHIDUserDeviceHandleReportWithTimeStamp(IOHIDUserDeviceRef device, uint64_t timestamp, const uint8_t *report, CFIndex reportLength)
{
  return MEMORY[0x1F40E8E48](device, timestamp, report, reportLength);
}

uint64_t IsAppleInternalBuild()
{
  return MEMORY[0x1F41165A0]();
}

uint64_t IsAppleTV()
{
  return MEMORY[0x1F41165A8]();
}

uint64_t LogCategoryCopyOSLogHandle()
{
  return MEMORY[0x1F41165D8]();
}

uint64_t LogControlCF()
{
  return MEMORY[0x1F4116620]();
}

uint64_t LogPrintF()
{
  return MEMORY[0x1F4116630]();
}

uint64_t LogSetAppID()
{
  return MEMORY[0x1F4116648]();
}

uint64_t LogShow()
{
  return MEMORY[0x1F4116660]();
}

uint64_t MFiSAP_CopyCertificate()
{
  return MEMORY[0x1F4116670]();
}

uint64_t MFiSAP_CopyCertificateSerialNumber()
{
  return MEMORY[0x1F4116678]();
}

uint64_t MFiSAP_Create()
{
  return MEMORY[0x1F4116680]();
}

uint64_t MFiSAP_Delete()
{
  return MEMORY[0x1F4116688]();
}

uint64_t MFiSAP_Encrypt()
{
  return MEMORY[0x1F4116690]();
}

uint64_t MFiSAP_Exchange()
{
  return MEMORY[0x1F4116698]();
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x1F417CDE0]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x1F417CE00]();
}

uint64_t MTAudioProcessingTapServerStart()
{
  return MEMORY[0x1F40EDD38]();
}

uint64_t MediaControlClient_Cancel()
{
  return MEMORY[0x1F412C888]();
}

uint64_t MediaControlClient_CopyPlaybackInfo()
{
  return MEMORY[0x1F412C890]();
}

uint64_t MediaControlClient_CopyProperty()
{
  return MEMORY[0x1F412C898]();
}

uint64_t MediaControlClient_Create()
{
  return MEMORY[0x1F412C8A0]();
}

uint64_t MediaControlClient_DoAction()
{
  return MEMORY[0x1F412C8A8]();
}

uint64_t MediaControlClient_DoAuthorize()
{
  return MEMORY[0x1F412C8B0]();
}

uint64_t MediaControlClient_DoInsertPlaylistItem()
{
  return MEMORY[0x1F412C8B8]();
}

uint64_t MediaControlClient_DoPlayLocal()
{
  return MEMORY[0x1F412C8C0]();
}

uint64_t MediaControlClient_DoPlayRemote()
{
  return MEMORY[0x1F412C8C8]();
}

uint64_t MediaControlClient_DoRate()
{
  return MEMORY[0x1F412C8D0]();
}

uint64_t MediaControlClient_DoRemovePlaylistItem()
{
  return MEMORY[0x1F412C8D8]();
}

uint64_t MediaControlClient_DoScrubSet()
{
  return MEMORY[0x1F412C8E0]();
}

uint64_t MediaControlClient_DoStop()
{
  return MEMORY[0x1F412C8E8]();
}

uint64_t MediaControlClient_EnsureConnected()
{
  return MEMORY[0x1F412C8F0]();
}

uint64_t MediaControlClient_EnsureDisconnected()
{
  return MEMORY[0x1F412C8F8]();
}

uint64_t MediaControlClient_Invalidate()
{
  return MEMORY[0x1F412C900]();
}

uint64_t MediaControlClient_IsConnectedOnP2PInterface()
{
  return MEMORY[0x1F412C908]();
}

uint64_t MediaControlClient_SetConnectionInterfaceManager()
{
  return MEMORY[0x1F412C910]();
}

uint64_t MediaControlClient_SetDispatchQueue()
{
  return MEMORY[0x1F412C918]();
}

uint64_t MediaControlClient_SetEventHandler()
{
  return MEMORY[0x1F412C920]();
}

uint64_t MediaControlClient_SetInfo()
{
  return MEMORY[0x1F412C928]();
}

uint64_t MediaControlClient_SetPassword()
{
  return MEMORY[0x1F412C930]();
}

uint64_t MediaControlClient_SetProperty()
{
  return MEMORY[0x1F412C938]();
}

uint64_t MicrosecondsToUpTicks()
{
  return MEMORY[0x1F41166A8]();
}

uint64_t MillisecondsToUpTicks()
{
  return MEMORY[0x1F41166B0]();
}

uint64_t MirroredRingBufferFree()
{
  return MEMORY[0x1F41166B8]();
}

uint64_t MirroredRingBufferInit()
{
  return MEMORY[0x1F41166C0]();
}

uint64_t NSErrorToOSStatus()
{
  return MEMORY[0x1F4116790]();
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1F40E72C8]();
}

uint64_t NTPtoUpTicks()
{
  return MEMORY[0x1F4116860]();
}

uint64_t NanosecondsToUpTicks()
{
  return MEMORY[0x1F4116868]();
}

uint64_t NetSocket_CreateWithNative()
{
  return MEMORY[0x1F4116880]();
}

uint64_t NetSocket_Delete()
{
  return MEMORY[0x1F4116888]();
}

uint64_t NetTransportTLSPSKConfigure()
{
  return MEMORY[0x1F41168A0]();
}

uint64_t OpenSelfConnectedLoopbackSocket()
{
  return MEMORY[0x1F41168E8]();
}

uint64_t PCFdAVst()
{
  return MEMORY[0x1F41080D0]();
}

uint64_t PLLogRegisteredEvent()
{
  return MEMORY[0x1F4145D90]();
}

uint64_t PairingSessionCopyPeerIdentifier()
{
  return MEMORY[0x1F4116900]();
}

uint64_t PairingSessionCopyProperty()
{
  return MEMORY[0x1F4116910]();
}

uint64_t PairingSessionCreate()
{
  return MEMORY[0x1F4116918]();
}

uint64_t PairingSessionDeriveKey()
{
  return MEMORY[0x1F4116928]();
}

uint64_t PairingSessionExchange()
{
  return MEMORY[0x1F4116930]();
}

uint64_t PairingSessionFindPeer()
{
  return MEMORY[0x1F4116938]();
}

uint64_t PairingSessionGenerateTranscriptResultMFi4()
{
  return MEMORY[0x1F4116940]();
}

uint64_t PairingSessionGetPairedPeer()
{
  return MEMORY[0x1F4116948]();
}

uint64_t PairingSessionSetACL()
{
  return MEMORY[0x1F4116968]();
}

uint64_t PairingSessionSetFlags()
{
  return MEMORY[0x1F4116978]();
}

uint64_t PairingSessionSetIdentifier()
{
  return MEMORY[0x1F4116980]();
}

uint64_t PairingSessionSetKeychainInfo()
{
  return MEMORY[0x1F4116988]();
}

uint64_t PairingSessionSetLogging()
{
  return MEMORY[0x1F4116990]();
}

uint64_t PairingSessionSetProperty()
{
  return MEMORY[0x1F41169C0]();
}

uint64_t PairingSessionSetSetupCode()
{
  return MEMORY[0x1F41169D0]();
}

uint64_t PairingSessionSetSignBytesHandler_b()
{
  return MEMORY[0x1F41169D8]();
}

uint64_t PairingSessionSetTranscriptType()
{
  return MEMORY[0x1F41169E0]();
}

uint64_t PairingSessionSetVerifySignatureHandler_b()
{
  return MEMORY[0x1F41169E8]();
}

uint64_t RandomBytes()
{
  return MEMORY[0x1F4116A00]();
}

SCDynamicStoreRef SCDynamicStoreCreate(CFAllocatorRef allocator, CFStringRef name, SCDynamicStoreCallBack callout, SCDynamicStoreContext *context)
{
  return (SCDynamicStoreRef)MEMORY[0x1F4101DB0](allocator, name, callout, context);
}

CFStringRef SCDynamicStoreKeyCreateNetworkInterfaceEntity(CFAllocatorRef allocator, CFStringRef domain, CFStringRef ifname, CFStringRef entity)
{
  return (CFStringRef)MEMORY[0x1F4101DE8](allocator, domain, ifname, entity);
}

Boolean SCDynamicStoreSetDispatchQueue(SCDynamicStoreRef store, dispatch_queue_t queue)
{
  return MEMORY[0x1F4101E08](store, queue);
}

Boolean SCDynamicStoreSetNotificationKeys(SCDynamicStoreRef store, CFArrayRef keys, CFArrayRef patterns)
{
  return MEMORY[0x1F4101E18](store, keys, patterns);
}

int SCError(void)
{
  return MEMORY[0x1F4101E20]();
}

const char *__cdecl SCErrorString(int status)
{
  return (const char *)MEMORY[0x1F4101E28](*(void *)&status);
}

uint64_t SNPrintF()
{
  return MEMORY[0x1F4116A18]();
}

uint64_t SNPrintF_Add()
{
  return MEMORY[0x1F4116A20]();
}

uint64_t SNScanF()
{
  return MEMORY[0x1F4116A28]();
}

uint64_t SecKeyCreateRSAPublicKey()
{
  return MEMORY[0x1F40F6ED8]();
}

OSStatus SecKeyDecrypt(SecKeyRef key, SecPadding padding, const uint8_t *cipherText, size_t cipherTextLen, uint8_t *plainText, size_t *plainTextLen)
{
  return MEMORY[0x1F40F6F10](key, *(void *)&padding, cipherText, cipherTextLen, plainText, plainTextLen);
}

OSStatus SecKeyEncrypt(SecKeyRef key, SecPadding padding, const uint8_t *plainText, size_t plainTextLen, uint8_t *cipherText, size_t *cipherTextLen)
{
  return MEMORY[0x1F40F6F18](key, *(void *)&padding, plainText, plainTextLen, cipherText, cipherTextLen);
}

uint64_t SecondsToUpTicks()
{
  return MEMORY[0x1F4116A30]();
}

uint64_t SendSelfConnectedLoopbackMessage()
{
  return MEMORY[0x1F4116A40]();
}

uint64_t SipHash()
{
  return MEMORY[0x1F4116A60]();
}

uint64_t SockAddrCopy()
{
  return MEMORY[0x1F4116A78]();
}

uint64_t SockAddrGetPort()
{
  return MEMORY[0x1F4116A80]();
}

uint64_t SockAddrSetPort()
{
  return MEMORY[0x1F4116A90]();
}

uint64_t SockAddrToString()
{
  return MEMORY[0x1F4116AA0]();
}

uint64_t SocketAccept()
{
  return MEMORY[0x1F4116AA8]();
}

uint64_t SourceVersionToCString()
{
  return MEMORY[0x1F4116B10]();
}

uint64_t SrtySZG0()
{
  return MEMORY[0x1F41080D8]();
}

uint64_t TMIsAutomaticTimeEnabled()
{
  return MEMORY[0x1F4115C78]();
}

uint64_t TextToFourCharCode()
{
  return MEMORY[0x1F4116B98]();
}

uint64_t TextToHardwareAddress()
{
  return MEMORY[0x1F4116BA0]();
}

uint64_t TextToHardwareAddressScalar()
{
  return MEMORY[0x1F4116BB0]();
}

uint64_t TextToInt32()
{
  return MEMORY[0x1F4116BB8]();
}

uint64_t TextToSourceVersion()
{
  return MEMORY[0x1F4116BC0]();
}

uint64_t UUIDGet()
{
  return MEMORY[0x1F4116BD0]();
}

uint64_t UUIDtoCString()
{
  return MEMORY[0x1F4116BD8]();
}

uint64_t UpTicksPerSecond()
{
  return MEMORY[0x1F4116BE8]();
}

uint64_t UpTicksToMilliseconds()
{
  return MEMORY[0x1F4116BF8]();
}

uint64_t UpTicksToNanoseconds()
{
  return MEMORY[0x1F4116C08]();
}

uint64_t UpTicksToSeconds()
{
  return MEMORY[0x1F4116C10]();
}

uint64_t UpTicksToSecondsF()
{
  return MEMORY[0x1F4116C20]();
}

uint64_t VBAEFt()
{
  return MEMORY[0x1F41080E0]();
}

uint64_t XoN3GgjZNCvkN1T8I3()
{
  return MEMORY[0x1F41080E8]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1F40C9A70](aBlock);
}

void _Block_object_assign(void *a1, const void *a2, const int a3)
{
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _CFCopySystemVersionDictionary()
{
  return MEMORY[0x1F40D8D10]();
}

uint64_t _CFRuntimeCreateInstance()
{
  return MEMORY[0x1F40D90D0]();
}

uint64_t _CFRuntimeRegisterClass()
{
  return MEMORY[0x1F40D90E8]();
}

void _Exit(int a1)
{
}

uint64_t _LogCategory_Initialize()
{
  return MEMORY[0x1F4116C88]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

int __darwin_check_fd_set_overflow(int a1, const void *a2, int a3)
{
  return MEMORY[0x1F40C9B68](*(void *)&a1, a2, *(void *)&a3);
}

int *__error(void)
{
  return (int *)MEMORY[0x1F40C9B88]();
}

uint64_t __memcpy_chk()
{
  return MEMORY[0x1F40C9C28]();
}

uint64_t __strlcat_chk()
{
  return MEMORY[0x1F40C9CD0]();
}

uint64_t __strlcpy_chk()
{
  return MEMORY[0x1F40C9CD8]();
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t aMoe8v8GNE9T()
{
  return MEMORY[0x1F41080F0]();
}

uint32_t arc4random(void)
{
  return MEMORY[0x1F40CA3A8]();
}

uint64_t atol(const char *a1)
{
  return MEMORY[0x1F40CA4B8](a1);
}

int bind(int a1, const sockaddr *a2, socklen_t a3)
{
  return MEMORY[0x1F40CA530](*(void *)&a1, a2, *(void *)&a3);
}

void bzero(void *a1, size_t a2)
{
}

int close(int a1)
{
  return MEMORY[0x1F40CB3F8](*(void *)&a1);
}

size_t confstr(int a1, char *a2, size_t a3)
{
  return MEMORY[0x1F40CB438](*(void *)&a1, a2, a3);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_async_f(dispatch_queue_t queue, void *context, dispatch_function_t work)
{
}

void *__cdecl dispatch_get_context(dispatch_object_t object)
{
  return (void *)MEMORY[0x1F40CBA50](object);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1F40CBA60](identifier, flags);
}

void *__cdecl dispatch_get_specific(const void *key)
{
  return (void *)MEMORY[0x1F40CBA68](key);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

void dispatch_once_f(dispatch_once_t *predicate, void *context, dispatch_function_t function)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x1F40CBBB8](attr, *(void *)&qos_class, *(void *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1F40CBBC0](label, attr);
}

void dispatch_queue_set_specific(dispatch_queue_t queue, const void *key, void *context, dispatch_function_t destructor)
{
}

void dispatch_release(dispatch_object_t object)
{
}

void dispatch_resume(dispatch_object_t object)
{
}

void dispatch_retain(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1F40CBC30](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1F40CBC40](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1F40CBC50](dsema, timeout);
}

void dispatch_set_context(dispatch_object_t object, void *context)
{
}

void dispatch_set_finalizer_f(dispatch_object_t object, dispatch_function_t finalizer)
{
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1F40CBC98](type, handle, mask, queue);
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_cancel_handler_f(dispatch_source_t source, dispatch_function_t handler)
{
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_event_handler_f(dispatch_source_t source, dispatch_function_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

void dispatch_suspend(dispatch_object_t object)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_sync_f(dispatch_queue_t queue, void *context, dispatch_function_t work)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1F40CBD30](when, delta);
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x1F40CBDB8](__path, *(void *)&__mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1F40CBDC8](__handle, __symbol);
}

void free(void *a1)
{
}

void freeifaddrs(ifaddrs *a1)
{
}

uint64_t gQblcfSzZBQsYCCV()
{
  return MEMORY[0x1F41080F8]();
}

int getifaddrs(ifaddrs **a1)
{
  return MEMORY[0x1F40CC410](a1);
}

int getopt(int a1, char *const a2[], const char *a3)
{
  return MEMORY[0x1F40CC468](*(void *)&a1, a2, a3);
}

pid_t getpid(void)
{
  return MEMORY[0x1F40CC4A0]();
}

const char *getprogname(void)
{
  return (const char *)MEMORY[0x1F40CC4C0]();
}

int getrusage(int a1, rusage *a2)
{
  return MEMORY[0x1F40CC508](*(void *)&a1, a2);
}

int gettimeofday(timeval *a1, void *a2)
{
  return MEMORY[0x1F40CC568](a1, a2);
}

uint64_t h4BvW7X()
{
  return MEMORY[0x1F4108100]();
}

uint64_t in_audio_mx_server_process()
{
  return MEMORY[0x1F410BC98]();
}

const char *__cdecl inet_ntop(int a1, const void *a2, char *a3, socklen_t a4)
{
  return (const char *)MEMORY[0x1F40CC678](*(void *)&a1, a2, a3, *(void *)&a4);
}

uint64_t kdebug_trace()
{
  return MEMORY[0x1F40CC700]();
}

int listen(int a1, int a2)
{
  return MEMORY[0x1F40CC840](*(void *)&a1, *(void *)&a2);
}

tm *__cdecl localtime(const time_t *a1)
{
  return (tm *)MEMORY[0x1F40CC868](a1);
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x1F40CC910]();
}

malloc_zone_t *malloc_default_zone(void)
{
  return (malloc_zone_t *)MEMORY[0x1F40CCB30]();
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCB90](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCB98](size, type_id);
}

void *__cdecl malloc_type_zone_calloc(malloc_zone_t *zone, size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCBB8](zone, count, size, type_id);
}

void malloc_zone_free(malloc_zone_t *zone, void *ptr)
{
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1F40CCCE8](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

uint64_t memrchr()
{
  return MEMORY[0x1F4116D30]();
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1F40CD028](*(void *)&token);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return MEMORY[0x1F40CD040](*(void *)&token, state64);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x1F40CD050](name);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return MEMORY[0x1F40CD058](name, out_token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1F40CD060](name, out_token, queue, handler);
}

uint32_t notify_set_state(int token, uint64_t state64)
{
  return MEMORY[0x1F40CD088](*(void *)&token, state64);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1F4181638](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1F4181648]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1F4181660](a1);
}

{
  MEMORY[0x1F4181668](context);
}

{
  return (void *)MEMORY[0x1F4181670]();
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1F4181680](exc_buf);
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1F4181728](name);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1F41817C0]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1F41817C8]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

void os_release(void *object)
{
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1F40CD550](log);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x1F40CD5A0]();
}

int proc_pidinfo(int pid, int flavor, uint64_t arg, void *buffer, int buffersize)
{
  return MEMORY[0x1F40CD8A8](*(void *)&pid, *(void *)&flavor, arg, buffer, *(void *)&buffersize);
}

int pthread_create(pthread_t *a1, const pthread_attr_t *a2, void *(__cdecl *a3)(void *), void *a4)
{
  return MEMORY[0x1F40CD9B8](a1, a2, a3, a4);
}

int pthread_join(pthread_t a1, void **a2)
{
  return MEMORY[0x1F40CDA38](a1, a2);
}

int pthread_setname_np(const char *a1)
{
  return MEMORY[0x1F40CDB60](a1);
}

uint64_t rJPl3sdBfc0E3yB()
{
  return MEMORY[0x1F4108108]();
}

int select(int a1, fd_set *a2, fd_set *a3, fd_set *a4, timeval *a5)
{
  return MEMORY[0x1F40CDED8](*(void *)&a1, a2, a3, a4, a5);
}

int setsockopt(int a1, int a2, int a3, const void *a4, socklen_t a5)
{
  return MEMORY[0x1F40CDFC0](*(void *)&a1, *(void *)&a2, *(void *)&a3, a4, *(void *)&a5);
}

unsigned int sleep(unsigned int a1)
{
  return MEMORY[0x1F40CE078](*(void *)&a1);
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return MEMORY[0x1F40CE080](__str, __size, __format);
}

int socket(int a1, int a2, int a3)
{
  return MEMORY[0x1F40CE090](*(void *)&a1, *(void *)&a2, *(void *)&a3);
}

int sscanf(const char *a1, const char *a2, ...)
{
  return MEMORY[0x1F40CE0D0](a1, a2);
}

int strcasecmp(const char *a1, const char *a2)
{
  return MEMORY[0x1F40CE138](a1, a2);
}

char *__cdecl strchr(char *__s, int __c)
{
  return (char *)MEMORY[0x1F40CE150](__s, *(void *)&__c);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1F40CE158](__s1, __s2);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x1F40CE188](*(void *)&__errnum);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1F40CE1C8](__s);
}

int strncmp(const char *__s1, const char *__s2, size_t __n)
{
  return MEMORY[0x1F40CE1F0](__s1, __s2, __n);
}

char *__cdecl strncpy(char *__dst, const char *__src, size_t __n)
{
  return (char *)MEMORY[0x1F40CE1F8](__dst, __src, __n);
}

uint64_t strnicmp_prefix()
{
  return MEMORY[0x1F4116D68]();
}

uint64_t strnicmpx()
{
  return MEMORY[0x1F4116D70]();
}

char *__cdecl strstr(char *__s1, const char *__s2)
{
  return (char *)MEMORY[0x1F40CE258](__s1, __s2);
}

unint64_t strtoull(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x1F40CE2F0](__str, __endptr, *(void *)&__base);
}

int usleep(useconds_t a1)
{
  return MEMORY[0x1F40CE608](*(void *)&a1);
}

uint64_t xOvZekdnwD6()
{
  return MEMORY[0x1F4108110]();
}

uint64_t xpc_connection_has_entitlement()
{
  return MEMORY[0x1F4116D80]();
}

size_t xpc_data_get_bytes(xpc_object_t xdata, void *buffer, size_t off, size_t length)
{
  return MEMORY[0x1F40CEDA8](xdata, buffer, off, length);
}

uint64_t xpc_dictionary_get_uint64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1F40CEEF8](xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x1F40CEF10](xdict, key);
}

void xpc_dictionary_set_data(xpc_object_t xdict, const char *key, const void *bytes, size_t length)
{
}

void xpc_dictionary_set_uint64(xpc_object_t xdict, const char *key, uint64_t value)
{
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
}