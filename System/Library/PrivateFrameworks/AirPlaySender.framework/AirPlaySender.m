uint64_t manager_SetDiscoveryMode()
{
  uint64_t DerivedStorage;
  uint64_t v1;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
  if (*(unsigned char *)DerivedStorage)
  {
    ++*(void *)(DerivedStorage + 72);
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v1 = APBrowserControllerSetRequestedDiscoveryMode();
    if (v1) {
      APSLogErrorAt();
    }
  }
  else
  {
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v1 = 0;
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 64));
  return v1;
}

uint64_t APBrowserControllerSetRequestedDiscoveryMode()
{
  return APSDispatchSyncTask();
}

void browserController_setBrowserMode(uint64_t *a1)
{
  if (CFEqual((CFTypeRef)a1[1], (CFTypeRef)*MEMORY[0x1E4F205D0]))
  {
    uint64_t v2 = *(void *)(*a1 + 40);
    uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v3) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    v8 = *(unsigned int (**)(uint64_t, void))(v4 + 16);
    if (!v8 || v8(v2, 0))
    {
LABEL_31:
      APSLogErrorAt();
      goto LABEL_36;
    }
  }
  else if (CFEqual((CFTypeRef)a1[1], (CFTypeRef)*MEMORY[0x1E4F205D8]))
  {
    uint64_t v5 = *(void *)(*a1 + 40);
    uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v6) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 0;
    }
    v12 = *(unsigned int (**)(uint64_t, uint64_t))(v7 + 16);
    if (!v12 || v12(v5, 1)) {
      goto LABEL_31;
    }
  }
  else if (CFEqual((CFTypeRef)a1[1], (CFTypeRef)*MEMORY[0x1E4F205C0]))
  {
    uint64_t v9 = *(void *)(*a1 + 40);
    uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v10) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    v16 = *(unsigned int (**)(uint64_t, uint64_t))(v11 + 16);
    if (!v16 || v16(v9, 2)) {
      goto LABEL_31;
    }
  }
  else if (CFEqual((CFTypeRef)a1[1], (CFTypeRef)*MEMORY[0x1E4F205C8]))
  {
    uint64_t v13 = *(void *)(*a1 + 40);
    uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v14) {
      uint64_t v15 = v14;
    }
    else {
      uint64_t v15 = 0;
    }
    v17 = *(unsigned int (**)(uint64_t, uint64_t))(v15 + 16);
    if (!v17 || v17(v13, 3)) {
      goto LABEL_31;
    }
  }
  else if (gLogCategory_APBrowserController <= 90 {
         && (gLogCategory_APBrowserController != -1 || _LogCategory_Initialize()))
  }
  {
    LogPrintF();
  }
  uint64_t v18 = *a1;
  if (!*(unsigned char *)(*a1 + 16))
  {
    v19 = *(void (**)(uint64_t, uint64_t, void))(v18 + 104);
    if (v19) {
      v19(a1[1], a1[2], *(void *)(v18 + 120));
    }
  }
LABEL_36:
  CFRelease((CFTypeRef)*a1);
  v20 = (const void *)a1[1];
  if (v20) {
    CFRelease(v20);
  }
  v21 = (const void *)a1[3];
  if (v21)
  {
    CFRelease(v21);
  }
}

void manager_handleDiscoveryModeChanged(const void *a1, uint64_t a2, void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
  if (!*(unsigned char *)(DerivedStorage + 1))
  {
    if (gLogCategory_APEndpointManager <= 30
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (FigCFEqual())
    {
      manager_setAVDevicePresence((uint64_t)a3, 0);
      manager_removeAllEndpointsIfNeeded(a3, *(const __CFDictionary **)(DerivedStorage + 168));
      manager_removeAllEndpointsIfNeeded(a3, *(const __CFDictionary **)(DerivedStorage + 176));
    }
    uint64_t v7 = *(const void **)(DerivedStorage + 88);
    *(void *)(DerivedStorage + 80) = a2;
    *(void *)(DerivedStorage + 88) = a1;
    if (a1) {
      CFRetain(a1);
    }
    if (v7) {
      CFRelease(v7);
    }
    CFRetain(a3);
    dispatch_async_f(*(dispatch_queue_t *)(DerivedStorage + 8), a3, (dispatch_function_t)manager_notifyAvailableEndpointsChanged);
  }
  JUMPOUT(0x1D25EB390);
}

void manager_notifyAvailableEndpointsChanged(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CMTime v10 = *(CMTime *)*(void *)&MEMORY[0x1E4F1F9F8];
  if (gLogCategory_APEndpointManager <= 40
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CMNotificationCenterGetDefaultLocalCenter();
  FigDispatchAsyncPostNotification();
  uint64_t v3 = *(NSObject **)(DerivedStorage + 56);
  if (v3)
  {
    dispatch_source_cancel(v3);
    uint64_t v4 = *(NSObject **)(DerivedStorage + 56);
    if (v4)
    {
      dispatch_release(v4);
      *(void *)(DerivedStorage + 56) = 0;
    }
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
  if (CFDictionaryGetCount(*(CFDictionaryRef *)(DerivedStorage + 168)) >= 10) {
    FigCFEqual();
  }
  LODWORD(v9.value) = 0;
  int64_t Int64 = APSSettingsGetInt64();
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 64));
  HostTimeClock = CMClockGetHostTimeClock();
  CMClockGetTime(&v10, HostTimeClock);
  CMTimeMake(&rhs, Int64, 1000);
  CMTime v7 = v10;
  CMTimeAdd(&v9, &v7, &rhs);
  *(CMTime *)(DerivedStorage + 32) = v9;
  if (a1) {
    CFRelease(a1);
  }
}

uint64_t browserController_setRequestedDiscoveryModeInternal(uint64_t a1)
{
  if (gLogCategory_APBrowserController <= 30
    && (gLogCategory_APBrowserController != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v2 = *(const void **)(a1 + 8);
  if (!v2)
  {
    uint64_t v2 = (const void *)*MEMORY[0x1E4F205D0];
    *(void *)(a1 + 8) = *MEMORY[0x1E4F205D0];
  }
  uint64_t v3 = (const void *)*MEMORY[0x1E4F205C8];
  if (CFEqual(v2, (CFTypeRef)*MEMORY[0x1E4F205C8]) && CFEqual(*(CFTypeRef *)(*(void *)a1 + 64), v3))
  {
    CFRetain(*(CFTypeRef *)a1);
    dispatch_async_f(*(dispatch_queue_t *)(*(void *)a1 + 32), *(void **)a1, (dispatch_function_t)browserController_tickleDetailedMode);
  }
  uint64_t v4 = *(const void **)(a1 + 8);
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = *(const void **)(*(void *)a1 + 56);
  v5[6] = *(void *)(a1 + 16);
  v5[7] = v4;
  if (v4) {
    CFRetain(v4);
  }
  if (v6) {
    CFRelease(v6);
  }
  CMTime v7 = *(const void **)(*(void *)a1 + 72);
  v8 = *(const void **)(a1 + 24);
  *(void *)(*(void *)a1 + 72) = v8;
  if (v8) {
    CFRetain(v8);
  }
  if (v7) {
    CFRelease(v7);
  }
  browserController_updateDiscoveryMode(*(void *)a1);
  return 0;
}

uint64_t browserController_updateDiscoveryMode(uint64_t a1)
{
  DiscoveryModeRequiredByEndpoints = (const void *)browserController_getDiscoveryModeRequiredByEndpoints(a1);
  int v3 = APSIsVirtualMachine();
  uint64_t v4 = (CFTypeRef *)MEMORY[0x1E4F205C8];
  if (v3 && !IsAppleInternalBuild())
  {
    CFTypeRef v6 = (CFTypeRef)*MEMORY[0x1E4F205D0];
    if (gLogCategory_APBrowserController > 50
      || gLogCategory_APBrowserController == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_36;
    }
LABEL_19:
    LogPrintF();
    goto LABEL_36;
  }
  CFIndex Count = CFSetGetCount(*(CFSetRef *)(a1 + 136));
  CFTypeRef v6 = *v4;
  if (Count >= 1)
  {
    if (gLogCategory_APBrowserController > 50
      || gLogCategory_APBrowserController == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_36;
    }
    CFSetGetCount(*(CFSetRef *)(a1 + 136));
    goto LABEL_19;
  }
  if (CFEqual(DiscoveryModeRequiredByEndpoints, *v4))
  {
    if (gLogCategory_APBrowserController > 30
      || gLogCategory_APBrowserController == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_36;
    }
    goto LABEL_19;
  }
  CMTime v7 = (const void *)*MEMORY[0x1E4F205D8];
  int v8 = CFEqual(DiscoveryModeRequiredByEndpoints, (CFTypeRef)*MEMORY[0x1E4F205D8]);
  CMTime v9 = *(const void **)(a1 + 56);
  if (v8)
  {
    if (CFEqual(*(CFTypeRef *)(a1 + 56), v6) || CFEqual(*(CFTypeRef *)(a1 + 56), (CFTypeRef)*MEMORY[0x1E4F205C0]))
    {
      CFTypeRef v6 = *(CFTypeRef *)(a1 + 56);
      if (gLogCategory_APBrowserController > 30
        || gLogCategory_APBrowserController == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_36;
      }
      goto LABEL_19;
    }
    if (gLogCategory_APBrowserController <= 30
      && (gLogCategory_APBrowserController != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFTypeRef v6 = v7;
  }
  else
  {
    if (gLogCategory_APBrowserController <= 30
      && (gLogCategory_APBrowserController != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFTypeRef v6 = v9;
  }
LABEL_36:
  if (CFEqual(v6, *v4)
    && (APSIsAPMSpeaker()
     && (!APSSettingsIsFeatureEnabled() || !APSIsMemberOfStereoPair())
     || IsAppleTV() && !APSIsMemberOfHTGroup()))
  {
    CFTypeRef v6 = (CFTypeRef)*MEMORY[0x1E4F205C0];
  }
  CFRetain((CFTypeRef)a1);
  if (v6) {
    CFRetain(v6);
  }
  CMTime v10 = *(const void **)(a1 + 72);
  if (v10) {
    CFRetain(v10);
  }
  if (!CFEqual(v6, *(CFTypeRef *)(a1 + 64)))
  {
    uint64_t v11 = *(const void **)(a1 + 64);
    *(void *)(a1 + 64) = v6;
    if (v6) {
      CFRetain(v6);
    }
    if (v11) {
      CFRelease(v11);
    }
  }
  return APSDispatchAsyncFHelper();
}

uint64_t browserController_getDiscoveryModeRequiredByEndpoints(uint64_t a1)
{
  if (CFDictionaryGetCountOfValue(*(CFDictionaryRef *)(a1 + 128), @"Detailed") <= 0)
  {
    CFIndex CountOfValue = CFDictionaryGetCountOfValue(*(CFDictionaryRef *)(a1 + 128), @"Presence");
    uint64_t v2 = MEMORY[0x1E4F205D0];
    if (CountOfValue > 0) {
      uint64_t v2 = MEMORY[0x1E4F205D8];
    }
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4F205C8];
  }
  return *(void *)v2;
}

uint64_t manager_CopyProperty(const void *a1, const void *a2, const __CFAllocator *a3, __CFArray **a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointManager <= 10
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 1))
  {
    APSLogErrorAt();
    return 4294950584;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20620]))
  {
    CMTime v9 = (__CFArray *)CFRetain((CFTypeRef)*MEMORY[0x1E4F20638]);
    uint64_t result = 0;
    *a4 = v9;
    return result;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20630]))
  {
    uint64_t v11 = 31;
    if (*(_DWORD *)(DerivedStorage + 348) == 4) {
      uint64_t v11 = 63;
    }
    uint64_t valuePtr = v11;
    CFNumberRef v12 = CFNumberCreate(a3, kCFNumberSInt64Type, &valuePtr);
    *a4 = v12;
    if (!v12) {
      goto LABEL_28;
    }
    return 0;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20628]))
  {
    uint64_t valuePtr = 7;
    CFNumberRef v13 = CFNumberCreate(a3, kCFNumberSInt64Type, &valuePtr);
    *a4 = v13;
    if (!v13)
    {
LABEL_28:
      APSLogErrorAt();
      return 4294950585;
    }
    return 0;
  }
  uint64_t v14 = *MEMORY[0x1E4F4A1B8];
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F4A1B8]))
  {
    if (*(void *)(DerivedStorage + 280))
    {
      uint64_t CMBaseObject = APSPSGDataSourceGetCMBaseObject();
      uint64_t v16 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v16) {
        uint64_t v17 = v16;
      }
      else {
        uint64_t v17 = 0;
      }
      v19 = *(uint64_t (**)(uint64_t, uint64_t, const __CFAllocator *, __CFArray **))(v17 + 48);
      if (v19)
      {
        return v19(CMBaseObject, v14, a3, a4);
      }
      else
      {
        return 4294954514;
      }
    }
    else
    {
      APSLogErrorAt();
      return 4294960591;
    }
  }
  else
  {
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
    uint64_t v18 = manager_copyPropertyInternal(a1, a2, a3, a4);
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 64));
    return v18;
  }
}

uint64_t manager_copyPropertyInternal(const void *a1, const void *a2, const __CFAllocator *a3, __CFArray **a4)
{
  CMBaseObjectGetDerivedStorage();
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20608]))
  {
    if (!FigCFEqual() && !FigCFEqual())
    {
      LODWORD(v105) = 0;
      CMBaseObjectGetDerivedStorage();
      uint64_t v15 = manager_copyEndpoints((uint64_t)a1, 0);
      if (v15)
      {
        CFArrayRef v16 = v15;
        v92 = a4;
        CFAllocatorRef v17 = CFGetAllocator(a1);
        CFMutableArrayRef Mutable = CFArrayCreateMutable(v17, 0, MEMORY[0x1E4F1D510]);
        if (Mutable)
        {
          v19 = Mutable;
          CFIndex Count = CFArrayGetCount(v16);
          if (Count >= 1)
          {
            CFIndex v21 = Count;
            for (CFIndex i = 0; i != v21; ++i)
            {
              ValueAtIndex = CFArrayGetValueAtIndex(v16, i);
              uint64_t v24 = APSGetFBOPropertyInt64();
              uint64_t v25 = APSGetFBOPropertyInt64();
              if (v24 | APSGetFBOPropertyInt64())
              {
                CFArrayAppendValue(v19, ValueAtIndex);
              }
              else if (v25)
              {
                CFArrayAppendValue(v19, ValueAtIndex);
                if (gLogCategory_APEndpointManager <= 50
                  && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
                {
                  LogPrintF();
                }
              }
            }
          }
          *v92 = v19;
        }
        else
        {
          APSLogErrorAt();
          LODWORD(v105) = -16711;
        }
        CFRelease(v16);
        return v105;
      }
      else
      {
        APSLogErrorAt();
        return 4294950585;
      }
    }
    int v8 = manager_copyEndpoints((uint64_t)a1, 0);
    goto LABEL_9;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20610]))
  {
    BOOL v9 = manager_areEndpointsPresent();
    CMTime v10 = (CFTypeRef *)MEMORY[0x1E4F1CFD0];
    if (!v9) {
      CMTime v10 = (CFTypeRef *)MEMORY[0x1E4F1CFC8];
    }
    int v8 = (__CFArray *)CFRetain(*v10);
    goto LABEL_9;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20618]))
  {
    uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
    if (!*(void *)(DerivedStorage + 240)) {
      return 4294950583;
    }
    uint64_t v14 = DerivedStorage;
    if (manager_isEndpointLocalAndSuppressed()) {
      return 4294950583;
    }
    int v8 = (__CFArray *)CFRetain(*(CFTypeRef *)(v14 + 240));
    if (!v8) {
      return 4294950583;
    }
LABEL_9:
    uint64_t v11 = 0;
    *a4 = v8;
    return v11;
  }
  if (CFEqual(a2, @"ShowInfo"))
  {
    v93 = a4;
    uint64_t v117 = 0;
    v118 = &v117;
    uint64_t v119 = 0x2020000000;
    int v120 = 0;
    uint64_t v88 = CMBaseObjectGetDerivedStorage();
    v115 = 0;
    CFDictionaryRef v116 = 0;
    v113 = 0;
    v114 = 0;
    uint64_t v105 = 0;
    v106 = &v105;
    uint64_t v107 = 0x5810000000;
    long long v109 = 0u;
    long long v110 = 0u;
    long long v111 = 0u;
    v108 = "";
    uint64_t v112 = 0;
    CFTypeRef cf = 0;
    uint64_t v104 = 0;
    DataBuffer_Init();
    v26 = (void *)CMBaseObjectGetDerivedStorage();
    theDict[0] = 0;
    CFMutableStringRef theString = CFStringCreateMutable(a3, 0);
    if (theString)
    {
      int v27 = APBrowserControllerCopyProperty(v26[34], @"showInfo", (uint64_t)a3, (uint64_t)theDict);
      if (v27)
      {
        APSLogErrorAt();
        CFRelease(theString);
        CFMutableStringRef theString = 0;
      }
      else
      {
        Value = CFDictionaryGetValue(theDict[0], @"detailedDescription");
        CFStringAppendFormat(theString, 0, @"\n%@", Value);
        CFStringAppend(theString, @"\n");
        CFStringAppend(theString, @"+-+ APEndpointManager state +-+\n");
        CFStringAppend(theString, @"\n");
        CFStringAppendFormat(theString, 0, @"DiscoveryMode: %@ (seed %llu/%llu) ", v26[11], v26[9], v26[10]);
        CFStringAppend(theString, @"\n");
        uint64_t v29 = CMBaseObjectGetDerivedStorage();
        CFIndex v30 = CFSetGetCount(*(CFSetRef *)(v29 + 208));
        CFStringAppendFormat(theString, 0, @"NonBuddyConnectionActive: %d\n", v30 > 0);
      }
      if (theDict[0]) {
        CFRelease(theDict[0]);
      }
      *((_DWORD *)v118 + 6) = v27;
      if (!v27)
      {
        v91 = CFDictionaryCreateMutable(a3, 1, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
        if (!v91)
        {
          APSLogErrorAt();
          v90 = 0;
          v91 = 0;
          CFMutableDictionaryRef v77 = 0;
          CFArrayRef v96 = 0;
          CFDictionaryRef v99 = 0;
          CFArrayRef theArray = 0;
          *((_DWORD *)v118 + 6) = -16711;
          goto LABEL_143;
        }
        v90 = CFStringCreateMutable(a3, 0);
        CFStringAppend(v90, theString);
        v31 = manager_copyEndpoints((uint64_t)a1, 0);
        CFArrayRef theArray = v31;
        if (v31)
        {
          CFArrayGetCount(v31);
          manager_copyEndpointInfoForShowInfo(theArray, &v114, &v115);
          manager_copyEndpointInfoForShowInfo(*(CFArrayRef *)(v88 + 192), 0, &v113);
          if (v114) {
            CFIndex v32 = CFArrayGetCount(v114);
          }
          else {
            CFIndex v32 = 0;
          }
          if (v115) {
            CFIndex v87 = CFArrayGetCount(v115);
          }
          else {
            CFIndex v87 = 0;
          }
          DataBuffer_AppendF();
          if (v32)
          {
            if (v32 >= 1)
            {
              for (CFIndex j = 0; j != v32; ++j)
              {
                CFDictionaryRef v116 = (const __CFDictionary *)CFArrayGetValueAtIndex(v114, j);
                manager_AppendEndpointShowInfo(v116, 1, (uint64_t)(v106 + 4));
              }
            }
            CFDictionarySetValue(v91, @"ActivatedEndpointShowInfos", v114);
            if (v114)
            {
              CFRelease(v114);
              v114 = 0;
            }
          }
          if (v113) {
            CFIndex v34 = CFArrayGetCount(v113);
          }
          else {
            CFIndex v34 = 0;
          }
          DataBuffer_AppendF();
          if (v34)
          {
            CFIndex v101 = v34;
            if (v34 >= 1)
            {
              CFIndex v35 = 0;
              CFAllocatorRef alloc = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
              do
              {
                CFDictionaryRef v36 = (const __CFDictionary *)CFArrayGetValueAtIndex(v113, v35);
                CFDictionaryRef v37 = v36;
                CFDictionaryRef v116 = v36;
                if (v36)
                {
                  v38 = (__CFString *)CFDictionaryGetValue(v36, @"RoutingContextID");
                  v39 = CFDictionaryGetValue(v37, @"EndpointHash");
                  v40 = CFDictionaryGetValue(v37, @"EndpointID");
                  v41 = &stru_1F26D66A0;
                  if (v38) {
                    v41 = v38;
                  }
                  CFStringRef v42 = CFStringCreateWithFormat(alloc, 0, @"%@[%@][%@]", v39, v40, v41);
                  if (v42)
                  {
                    DataBuffer_AppendF();
                    CFArrayRef v43 = (const __CFArray *)CFDictionaryGetValue(v37, @"SubEndpointShowInfoDicts");
                    CFArrayRef v44 = v43;
                    if (v43)
                    {
                      CFIndex v45 = CFArrayGetCount(v43);
                      if (v45 >= 1)
                      {
                        for (CFIndex k = 0; k != v45; ++k)
                        {
                          DataBuffer_AppendF();
                          CFDictionaryRef v47 = (const __CFDictionary *)CFArrayGetValueAtIndex(v44, k);
                          CFDictionaryGetValue(v47, @"EndpointHash");
                          DataBuffer_AppendF();
                          CFDictionaryGetValue(v47, @"Name");
                          DataBuffer_AppendF();
                        }
                      }
                    }
                    CFRelease(v42);
                  }
                }
                ++v35;
              }
              while (v35 != v101);
            }
            CFDictionarySetValue(v91, @"AggregateShowInfos", v113);
            if (v113)
            {
              CFRelease(v113);
              v113 = 0;
            }
          }
          DataBuffer_AppendF();
          v48 = v115;
          if (v115)
          {
            if (v87 >= 1)
            {
              for (CFIndex m = 0; m != v87; ++m)
              {
                CFDictionaryRef v116 = (const __CFDictionary *)CFArrayGetValueAtIndex(v115, m);
                manager_AppendEndpointShowInfo(v116, 0, (uint64_t)(v106 + 4));
              }
              v48 = v115;
            }
            CFDictionarySetValue(v91, @"EndpointShowInfos", v48);
            if (v115)
            {
              CFRelease(v115);
              v115 = 0;
            }
          }
          CMBaseObjectGetDerivedStorage();
          CFDictionaryRef v99 = CFDictionaryCreateMutable(a3, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
          if (v99)
          {
            CFArrayRef v50 = (const __CFArray *)FigCFDictionaryCopyArrayOfValues();
            CFArrayRef v51 = v50;
            if (v50)
            {
              if (CFArrayGetCount(v50) >= 1)
              {
                CFIndex v52 = 0;
                uint64_t v53 = *MEMORY[0x1E4F20E08];
                v54 = (const CFArrayCallBacks *)MEMORY[0x1E4F1D510];
                do
                {
                  v55 = CFArrayGetValueAtIndex(v51, v52);
                  theDict[0] = 0;
                  uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
                  uint64_t v57 = *(void *)(CMBaseObjectGetVTable() + 8);
                  if (v57) {
                    uint64_t v58 = v57;
                  }
                  else {
                    uint64_t v58 = 0;
                  }
                  v59 = *(void (**)(uint64_t, uint64_t, const __CFAllocator *, CFDictionaryRef *))(v58 + 48);
                  if (v59) {
                    v59(CMBaseObject, v53, a3, theDict);
                  }
                  if (theDict[0])
                  {
                    if (CFDictionaryContainsKey(v99, theDict[0]))
                    {
                      v60 = CFDictionaryGetValue(v99, theDict[0]);
                      v61 = (void *)CFRetain(v60);
                    }
                    else
                    {
                      v61 = CFArrayCreateMutable(a3, 0, v54);
                      CFDictionarySetValue(v99, theDict[0], v61);
                    }
                    CFArrayAppendValue((CFMutableArrayRef)v61, v55);
                    if (v61) {
                      CFRelease(v61);
                    }
                    if (theDict[0]) {
                      CFRelease(theDict[0]);
                    }
                  }
                  ++v52;
                }
                while (v52 < CFArrayGetCount(v51));
              }
              CFRelease(v51);
            }
          }
          uint64_t v95 = FigCFDictionaryGetCount();
          v62 = "s";
          if (v95 == 1) {
            v62 = "";
          }
          v86 = v62;
          DataBuffer_AppendF();
          CFArrayRef v96 = (const __CFArray *)FigCFDictionaryCopyArrayOfKeys();
          if (v96)
          {
            if (v95 >= 1)
            {
              CFIndex v63 = 0;
              key = (void *)*MEMORY[0x1E4F1CF80];
              do
              {
                CFAllocatorRef alloca = (CFAllocatorRef)v63;
                v64 = CFArrayGetValueAtIndex(v96, v63);
                CFArrayRef v65 = (const __CFArray *)CFDictionaryGetValue(v99, v64);
                CFArrayRef v66 = v65;
                if (v65) {
                  CFIndex v67 = CFArrayGetCount(v65);
                }
                else {
                  CFIndex v67 = 0;
                }
                DataBuffer_AppendF();
                if (v67 >= 1)
                {
                  for (CFIndex n = 0; n != v67; ++n)
                  {
                    CFArrayGetValueAtIndex(v66, n);
                    CFDictionaryRef v116 = 0;
                    uint64_t v69 = FigEndpointGetCMBaseObject();
                    uint64_t v70 = *(void *)(CMBaseObjectGetVTable() + 8);
                    if (v70) {
                      uint64_t v71 = v70;
                    }
                    else {
                      uint64_t v71 = 0;
                    }
                    v72 = *(void (**)(uint64_t, __CFString *, void *, const __CFDictionary **))(v71 + 48);
                    if (v72) {
                      v72(v69, @"EndpointShowInfo", key, &v116);
                    }
                    CFDictionaryRef v73 = v116;
                    if (v116)
                    {
                      CFDictionaryGetValue(v116, @"Name");
                      DataBuffer_AppendF();
                      if (CFDictionaryGetValue(v73, @"DiscoveryID")) {
                        DataBuffer_AppendF();
                      }
                      CFDictionaryGetValue(v73, @"DeviceID");
                      DataBuffer_AppendF();
                      v86 = CFDictionaryGetValue(v73, @"Model");
                      DataBuffer_AppendF();
                      DataBuffer_AppendF();
                      if (v116)
                      {
                        CFRelease(v116);
                        CFDictionaryRef v116 = 0;
                      }
                    }
                  }
                }
                CFIndex v63 = (CFIndex)alloca + 1;
              }
              while ((CFAllocatorRef)((char *)alloca + 1) != (CFAllocatorRef)v95);
            }
            if (!*(void *)(v88 + 280))
            {
              CFMutableDictionaryRef v77 = 0;
LABEL_137:
              int v83 = DataBuffer_Append();
              *((_DWORD *)v118 + 6) = v83;
              if (!v83)
              {
                int v84 = DataBuffer_Commit();
                *((_DWORD *)v118 + 6) = v84;
                if (!v84)
                {
                  CFStringAppendFormat(v90, 0, @"%s", v104, v86);
                  CFDictionarySetValue(v91, @"DetailedDescription", v90);
LABEL_143:
                  DataBuffer_Free();
                  if (theArray) {
                    CFRelease(theArray);
                  }
                  if (v90) {
                    CFRelease(v90);
                  }
                  if (theString) {
                    CFRelease(theString);
                  }
                  if (v114) {
                    CFRelease(v114);
                  }
                  if (v113) {
                    CFRelease(v113);
                  }
                  if (v115) {
                    CFRelease(v115);
                  }
                  if (v99) {
                    CFRelease(v99);
                  }
                  if (v96) {
                    CFRelease(v96);
                  }
                  if (cf) {
                    CFRelease(cf);
                  }
                  if (v77) {
                    CFRelease(v77);
                  }
                  uint64_t v11 = *((unsigned int *)v118 + 6);
                  _Block_object_dispose(&v105, 8);
                  _Block_object_dispose(&v117, 8);
                  if (!v11) {
                    *v93 = v91;
                  }
                  return v11;
                }
              }
              APSLogErrorAt();
LABEL_142:
              CFRelease(v91);
              v91 = 0;
              goto LABEL_143;
            }
            uint64_t v74 = APSPSGDataSourceGetCMBaseObject();
            uint64_t v75 = *(void *)(CMBaseObjectGetVTable() + 8);
            if (v75) {
              uint64_t v76 = v75;
            }
            else {
              uint64_t v76 = 0;
            }
            v78 = *(uint64_t (**)(uint64_t, void, void, CFTypeRef *))(v76 + 48);
            if (v78)
            {
              CFAllocatorRef v79 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
              int v80 = v78(v74, *MEMORY[0x1E4F4A1B8], *MEMORY[0x1E4F1CF80], &cf);
              *((_DWORD *)v118 + 6) = v80;
              if (!v80)
              {
                CFMutableDictionaryRef v77 = CFDictionaryCreateMutable(v79, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
                if (v77)
                {
                  theDict[0] = (CFDictionaryRef)MEMORY[0x1E4F143A8];
                  theDict[1] = (CFDictionaryRef)3221225472;
                  theDict[2] = (CFDictionaryRef)__manager_copyShowInfo_block_invoke;
                  theDict[3] = (CFDictionaryRef)&unk_1E6891CD0;
                  theDict[4] = (CFDictionaryRef)&v117;
                  theDict[5] = v77;
                  CFDictionaryApplyBlock();
                  CFIndex v81 = CFDictionaryGetCount(v77);
                  v82 = "s";
                  if (v81 == 1) {
                    v82 = "";
                  }
                  v86 = v82;
                  DataBuffer_AppendF();
                  CFDictionaryApplyBlock();
                  goto LABEL_137;
                }
                APSLogErrorAt();
                int v85 = -6728;
LABEL_179:
                CFMutableDictionaryRef v77 = 0;
                *((_DWORD *)v118 + 6) = v85;
                goto LABEL_142;
              }
            }
            else
            {
              *((_DWORD *)v118 + 6) = -12782;
            }
            APSLogErrorAt();
            CFMutableDictionaryRef v77 = 0;
            goto LABEL_142;
          }
          APSLogErrorAt();
          CFArrayRef v96 = 0;
        }
        else
        {
          APSLogErrorAt();
          CFArrayRef v96 = 0;
          CFDictionaryRef v99 = 0;
        }
        int v85 = -16711;
        goto LABEL_179;
      }
    }
    else
    {
      APSLogErrorAt();
      CFMutableStringRef theString = 0;
      *((_DWORD *)v118 + 6) = -6728;
    }
    APSLogErrorAt();
    v90 = 0;
    v91 = 0;
    CFMutableDictionaryRef v77 = 0;
    CFArrayRef v96 = 0;
    CFDictionaryRef v99 = 0;
    CFArrayRef theArray = 0;
    goto LABEL_143;
  }
  if (!CFEqual(a2, @"HierarchyDump"))
  {
    if (gLogCategory_APEndpointManager <= 30
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return 4294954512;
  }
  return manager_copyHierarchy((uint64_t)a1, a3, a4);
}

void sub_1D09491D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  _Block_object_dispose(&a41, 8);
  _Block_object_dispose((const void *)(v41 - 136), 8);
  _Unwind_Resume(a1);
}

__CFArray *manager_copyEndpoints(uint64_t a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFAllocatorRef v4 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D510]);
  if (!Mutable || (CFArrayRef v6 = (const __CFArray *)FigCFDictionaryCopyArrayOfValues()) == 0)
  {
    APSLogErrorAt();
    return Mutable;
  }
  CFArrayRef v7 = v6;
  MutableCopy = CFArrayCreateMutableCopy(v4, 0, v6);
  if (!MutableCopy)
  {
    APSLogErrorAt();
    CFArrayRef v18 = v7;
    goto LABEL_34;
  }
  CFArrayRef v9 = MutableCopy;
  CMTime v10 = *(const void **)(DerivedStorage + 256);
  if (v10) {
    CFArrayAppendValue(MutableCopy, v10);
  }
  if (a2 == 1)
  {
    v20.length = CFArrayGetCount(v9);
    v20.locatioCFIndex n = 0;
    CFArrayAppendArray(Mutable, v9, v20);
    CFArrayRef v11 = 0;
LABEL_23:
    CFArrayRef v17 = (const __CFArray *)FigCFDictionaryCopyArrayOfValues();
    v21.length = CFArrayGetCount(v17);
    v21.locatioCFIndex n = 0;
    CFArrayAppendArray(Mutable, v17, v21);
    goto LABEL_30;
  }
  if (a2)
  {
    if (gLogCategory_APEndpointManager <= 90
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFArrayRef v11 = 0;
  }
  else
  {
    CFArrayRef v11 = (const __CFArray *)FigCFDictionaryCopyArrayOfValues();
    if (v11)
    {
      CFDictionaryRef v12 = *(const __CFDictionary **)(DerivedStorage + 216);
      if (CFArrayGetCount(v9) >= 1)
      {
        CFIndex v13 = 0;
        do
        {
          ValueAtIndex = CFArrayGetValueAtIndex(v9, v13);
          if ((!v12 || !CFDictionaryContainsKey(v12, ValueAtIndex)) && !manager_isEndpointLocalAndSuppressed()) {
            CFArrayAppendValue(Mutable, ValueAtIndex);
          }
          ++v13;
        }
        while (v13 < CFArrayGetCount(v9));
      }
      if (CFArrayGetCount(v11) >= 1)
      {
        CFIndex v15 = 0;
        do
        {
          CFArrayRef v16 = CFArrayGetValueAtIndex(v11, v15);
          if (!manager_isEndpointLocalAndSuppressed()) {
            CFArrayAppendValue(Mutable, v16);
          }
          ++v15;
        }
        while (v15 < CFArrayGetCount(v11));
      }
      goto LABEL_23;
    }
    APSLogErrorAt();
  }
  CFArrayRef v17 = 0;
LABEL_30:
  CFRelease(v7);
  CFRelease(v9);
  if (v17) {
    CFRelease(v17);
  }
  if (v11)
  {
    CFArrayRef v18 = v11;
LABEL_34:
    CFRelease(v18);
  }
  return Mutable;
}

uint64_t APPWDKeyExchangeSenderSessionGetTypeID()
{
  if (gAPPWDKeyExchangeSenderSessionInitOnce != -1) {
    dispatch_once_f(&gAPPWDKeyExchangeSenderSessionInitOnce, 0, (dispatch_function_t)_APPWDKeyExchangeSenderSessionGetTypeID);
  }
  return gAPPWDKeyExchangeSenderSessionTypeID;
}

uint64_t _APPWDKeyExchangeSenderSessionGetTypeID()
{
  uint64_t result = _CFRuntimeRegisterClass();
  gAPPWDKeyExchangeSenderSessionTypeID = result;
  return result;
}

uint64_t APPWDKeyExchangeSenderSessionCreate(uint64_t a1, void *a2)
{
  if (gAPPWDKeyExchangeSenderSessionInitOnce != -1) {
    dispatch_once_f(&gAPPWDKeyExchangeSenderSessionInitOnce, 0, (dispatch_function_t)_APPWDKeyExchangeSenderSessionGetTypeID);
  }
  uint64_t Instance = _CFRuntimeCreateInstance();
  if (!Instance)
  {
    APSLogErrorAt();
    return 4294960568;
  }
  uint64_t v5 = (const void *)Instance;
  *(_OWORD *)(Instance + 16) = 0u;
  *(void *)(Instance + 64) = 0;
  *(_OWORD *)(Instance + 32) = 0u;
  *(_OWORD *)(Instance + 48) = 0u;
  if (!a2)
  {
    APSLogErrorAt();
    uint64_t v7 = 4294960591;
LABEL_18:
    CFRelease(v5);
    return v7;
  }
  *(void *)(Instance + 24) = FigSimpleMutexCreate();
  if (a1)
  {
    CFDictionaryGetTypeID();
    if (CFDictionaryGetTypedValue()) {
      CFDictionaryGetInt64();
    }
  }
  uint64_t v6 = FigPWDKeyExchangeSenderCreate();
  if (v6)
  {
    uint64_t v7 = v6;
    APSLogErrorAt();
    goto LABEL_18;
  }
  if (gLogCategory_APPWDKeyExchangeSenderSession <= 50
    && (gLogCategory_APPWDKeyExchangeSenderSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v7 = 0;
  *a2 = v5;
  return v7;
}

uint64_t _SendMessageAsyncCallback(uint64_t a1, const void *a2)
{
  int v4 = gLogCategory_APPWDKeyExchangeSenderSession;
  if (gLogCategory_APPWDKeyExchangeSenderSession <= 50)
  {
    if (gLogCategory_APPWDKeyExchangeSenderSession == -1)
    {
      if (!_LogCategory_Initialize()) {
        goto LABEL_9;
      }
      int v4 = gLogCategory_APPWDKeyExchangeSenderSession;
    }
    if (v4 == -1) {
      _LogCategory_Initialize();
    }
    LogPrintF();
  }
LABEL_9:
  FigSimpleMutexCheckIsNotLockedOnThisThread();
  MEMORY[0x1D25EB370](*(void *)(a1 + 24));
  if (*(unsigned char *)(a1 + 33))
  {
    uint64_t v5 = 4294896148;
  }
  else
  {
    uint64_t v6 = *(const void **)(a1 + 56);
    if (a2) {
      CFRetain(a2);
    }
    *(void *)(a1 + 56) = a2;
    if (v6) {
      CFRelease(v6);
    }
    dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
    uint64_t v5 = 0;
  }
  MEMORY[0x1D25EB390](*(void *)(a1 + 24));
  return v5;
}

void _CompletedCallback(uint64_t a1, int a2)
{
  if (gLogCategory_APPWDKeyExchangeSenderSession <= 50
    && (gLogCategory_APPWDKeyExchangeSenderSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  FigSimpleMutexCheckIsNotLockedOnThisThread();
  MEMORY[0x1D25EB370](*(void *)(a1 + 24));
  if (!*(unsigned char *)(a1 + 33))
  {
    *(unsigned char *)(a1 + 64) = 1;
    *(_DWORD *)(a1 + 68) = a2;
    dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
  }
  JUMPOUT(0x1D25EB390);
}

uint64_t APPWDKeyExchangeSenderSessionInvalidate(uint64_t a1)
{
  if (gLogCategory_APPWDKeyExchangeSenderSession <= 50
    && (gLogCategory_APPWDKeyExchangeSenderSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  FigSimpleMutexCheckIsNotLockedOnThisThread();
  MEMORY[0x1D25EB370](*(void *)(a1 + 24));
  if (!*(unsigned char *)(a1 + 33))
  {
    uint64_t v2 = *(void *)(a1 + 16);
    if (v2)
    {
      uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
      uint64_t v4 = v3 ? v3 : 0;
      uint64_t v5 = *(void (**)(uint64_t))(v4 + 16);
      if (v5) {
        v5(v2);
      }
    }
    uint64_t v6 = *(NSObject **)(a1 + 48);
    if (v6) {
      dispatch_semaphore_signal(v6);
    }
    uint64_t v7 = *(const void **)(a1 + 56);
    if (v7)
    {
      CFRelease(v7);
      *(void *)(a1 + 56) = 0;
    }
    *(unsigned char *)(a1 + 33) = 1;
  }
  uint64_t result = MEMORY[0x1D25EB390](*(void *)(a1 + 24));
  if (gLogCategory_APPWDKeyExchangeSenderSession <= 50)
  {
    if (gLogCategory_APPWDKeyExchangeSenderSession != -1) {
      return LogPrintF();
    }
    uint64_t result = _LogCategory_Initialize();
    if (result) {
      return LogPrintF();
    }
  }
  return result;
}

uint64_t APPWDKeyExchangeSenderSessionPerformKeyExchange(uint64_t a1, uint64_t a2, void *a3, unsigned char *a4)
{
  FigSimpleMutexCheckIsNotLockedOnThisThread();
  MEMORY[0x1D25EB370](*(void *)(a1 + 24));
  if (*(unsigned char *)(a1 + 33))
  {
    uint64_t v14 = 4294896148;
    goto LABEL_32;
  }
  if (!*(unsigned char *)(a1 + 32))
  {
    *(void *)(a1 + 48) = dispatch_semaphore_create(0);
    if (gLogCategory_APPWDKeyExchangeSenderSession <= 50
      && (gLogCategory_APPWDKeyExchangeSenderSession != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v9 = *(void *)(a1 + 16);
    uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v10) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    CFDictionaryRef v12 = *(uint64_t (**)(uint64_t))(v11 + 8);
    if (v12)
    {
      uint64_t v13 = v12(v9);
      if (v13)
      {
        uint64_t v14 = v13;
        goto LABEL_32;
      }
      *(unsigned char *)(a1 + 32) = 1;
      goto LABEL_28;
    }
    uint64_t v14 = 4294954514;
LABEL_32:
    APSLogErrorAt();
    goto LABEL_50;
  }
  if (!a2)
  {
    APSLogErrorAt();
    uint64_t v14 = 4294960591;
    goto LABEL_50;
  }
  int v8 = gLogCategory_APPWDKeyExchangeSenderSession;
  if (gLogCategory_APPWDKeyExchangeSenderSession <= 50)
  {
    if (gLogCategory_APPWDKeyExchangeSenderSession == -1)
    {
      if (!_LogCategory_Initialize()) {
        goto LABEL_23;
      }
      int v8 = gLogCategory_APPWDKeyExchangeSenderSession;
    }
    if (v8 == -1) {
      _LogCategory_Initialize();
    }
    LogPrintF();
  }
LABEL_23:
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v16) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = 0;
  }
  CFArrayRef v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 24);
  if (!v18)
  {
    uint64_t v14 = 4294954514;
    goto LABEL_32;
  }
  uint64_t v19 = v18(v15, a2);
  if (v19)
  {
    uint64_t v14 = v19;
    goto LABEL_32;
  }
LABEL_28:
  MEMORY[0x1D25EB390](*(void *)(a1 + 24));
  if (gLogCategory_APPWDKeyExchangeSenderSession <= 50
    && (gLogCategory_APPWDKeyExchangeSenderSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  dispatch_semaphore_wait(*(dispatch_semaphore_t *)(a1 + 48), 0xFFFFFFFFFFFFFFFFLL);
  int v20 = gLogCategory_APPWDKeyExchangeSenderSession;
  if (gLogCategory_APPWDKeyExchangeSenderSession <= 50)
  {
    if (gLogCategory_APPWDKeyExchangeSenderSession == -1)
    {
      if (!_LogCategory_Initialize()) {
        goto LABEL_42;
      }
      int v20 = gLogCategory_APPWDKeyExchangeSenderSession;
    }
    if (v20 == -1) {
      _LogCategory_Initialize();
    }
    LogPrintF();
  }
LABEL_42:
  MEMORY[0x1D25EB370](*(void *)(a1 + 24));
  if (*(unsigned char *)(a1 + 33))
  {
    uint64_t v14 = 4294896148;
    goto LABEL_32;
  }
  if (*(unsigned char *)(a1 + 64))
  {
    if (a4) {
      *a4 = 1;
    }
    uint64_t v14 = *(unsigned int *)(a1 + 68);
  }
  else
  {
    uint64_t v21 = *(void *)(a1 + 56);
    if (v21)
    {
      uint64_t v14 = 0;
      if (a3)
      {
        *a3 = v21;
        *(void *)(a1 + 56) = 0;
      }
    }
    else
    {
      APSLogErrorAt();
      uint64_t v14 = 4294960587;
    }
  }
LABEL_50:
  MEMORY[0x1D25EB390](*(void *)(a1 + 24));
  return v14;
}

uint64_t APPWDKeyExchangeSenderSessionCopyEncoderEncryptionContext(uint64_t a1, uint64_t a2)
{
  FigSimpleMutexCheckIsNotLockedOnThisThread();
  MEMORY[0x1D25EB370](*(void *)(a1 + 24));
  if (!*(unsigned char *)(a1 + 32))
  {
    APSLogErrorAt();
    uint64_t v8 = 4294960587;
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t, void, void, uint64_t))(v6 + 48);
  if (!v7)
  {
    uint64_t v8 = 4294954514;
LABEL_9:
    APSLogErrorAt();
    goto LABEL_10;
  }
  uint64_t v8 = v7(v4, *MEMORY[0x1E4F33240], *MEMORY[0x1E4F1CF80], a2);
  if (v8) {
    goto LABEL_9;
  }
LABEL_10:
  MEMORY[0x1D25EB390](*(void *)(a1 + 24));
  return v8;
}

uint64_t _APPWDKeyExchangeSenderSessionFinalize(uint64_t a1)
{
  if (gLogCategory_APPWDKeyExchangeSenderSession <= 50
    && (gLogCategory_APPWDKeyExchangeSenderSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v3) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    uint64_t v5 = *(void (**)(uint64_t))(v4 + 16);
    if (v5) {
      v5(v2);
    }
    CFRelease(*(CFTypeRef *)(a1 + 16));
    *(void *)(a1 + 16) = 0;
  }
  uint64_t v6 = *(NSObject **)(a1 + 48);
  if (v6)
  {
    dispatch_release(v6);
    *(void *)(a1 + 48) = 0;
  }
  uint64_t v7 = *(const void **)(a1 + 56);
  if (v7)
  {
    CFRelease(v7);
    *(void *)(a1 + 56) = 0;
  }
  return FigSimpleMutexDestroy();
}

uint64_t APEndpointLocalCreate(uint64_t a1, void *a2)
{
  return APEndpointLocalCreateWithEndpointDescription(a1, 0, 0, a2);
}

uint64_t APEndpointLocalCreateWithEndpointDescription(uint64_t a1, const void *a2, uint64_t a3, void *a4)
{
  if (!a4)
  {
    APSLogErrorAt();
    return 4294950576;
  }
  FigEndpointExtendedGetClassID();
  uint64_t v7 = CMDerivedObjectCreate();
  if (v7)
  {
    uint64_t v15 = v7;
    APSLogErrorAt();
    CFUUIDRef v10 = 0;
    goto LABEL_28;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFAllocatorRef v9 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFUUIDRef v10 = CFUUIDCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80]);
  if (!v10
    || (dispatch_queue_t v11 = dispatch_queue_create("APEndpointLocal.notification", 0), (*(void *)DerivedStorage = v11) == 0)
    || (uint64_t v12 = FigSimpleMutexCreate(), (*(void *)(DerivedStorage + 144) = v12) == 0)
    || (CFStringRef v13 = CFUUIDCreateString(v9, v10), (*(void *)(DerivedStorage + 24) = v13) == 0))
  {
    APSLogErrorAt();
    uint64_t v15 = 4294950575;
    goto LABEL_28;
  }
  *(void *)(DerivedStorage + 32) = CFRetain(&stru_1F26D66A0);
  *(void *)(DerivedStorage + 80) = CFDictionaryCreateMutable(v9, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!a2)
  {
    uint64_t v14 = APEndpointDescriptionAirPlayCreateWithTransportDevice(a1, 0, 0, (void *)(DerivedStorage + 16));
    if (!v14) {
      goto LABEL_10;
    }
    uint64_t v15 = v14;
    APSLogErrorAt();
LABEL_28:
    if (!v10) {
      return v15;
    }
    goto LABEL_23;
  }
  *(void *)(DerivedStorage + 16) = CFRetain(a2);
LABEL_10:
  if (!FigCFDictionaryGetBooleanIfPresent()) {
    *(unsigned char *)(DerivedStorage + 8) = APSSettingsIsFeatureEnabled();
  }
  if (!FigCFDictionaryGetBooleanIfPresent()) {
    *(unsigned char *)(DerivedStorage + 9) = APSIsAPMSpeaker() != 0;
  }
  *(_DWORD *)(DerivedStorage + 156) = 0;
  if (gLogCategory_APEndpointLocal <= 50
    && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CMNotificationCenterGetDefaultLocalCenter();
  FigNotificationCenterAddWeakListener();
  if (gLogCategory_APEndpointLocal <= 50
    && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v15 = 0;
  *a4 = 0;
LABEL_23:
  CFRelease(v10);
  return v15;
}

void endpointLocal_handleEndpointDescriptionChanged(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFStringRef v44 = 0;
  theString[0] = 0;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 144));
  uint64_t v8 = *MEMORY[0x1E4F1CF80];
  CFMutableArrayRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!Mutable)
  {
LABEL_120:
    APSLogErrorAt();
    goto LABEL_111;
  }
  uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(DerivedStorage + 16));
  uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v11) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = 0;
  }
  CFStringRef v13 = *(void (**)(uint64_t, __CFString *, uint64_t, CFStringRef *))(v12 + 48);
  if (v13)
  {
    v13(CMBaseObject, @"PairingPeerCUSystemIdentifier", v8, theString);
    if (theString[0])
    {
      if (CFStringGetLength(theString[0])) {
        goto LABEL_15;
      }
      if (theString[0])
      {
        CFRelease(theString[0]);
        theString[0] = 0;
      }
    }
  }
  uint64_t v14 = APEndpointDescriptionGetCMBaseObject(*(void *)(DerivedStorage + 16));
  uint64_t v15 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v15) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = 0;
  }
  uint64_t v17 = *(void (**)(uint64_t, __CFString *, uint64_t, CFStringRef *))(v16 + 48);
  if (v17) {
    v17(v14, @"DeviceID", v8, theString);
  }
LABEL_15:
  if (theString[0] && CFStringGetLength(theString[0]))
  {
    *(unsigned char *)(DerivedStorage + 153) = 1;
    if (!CFEqual(theString[0], *(CFTypeRef *)(DerivedStorage + 24)))
    {
      if (gLogCategory_APEndpointLocal <= 50
        && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFArrayRef v18 = *(const void **)(DerivedStorage + 24);
      CFStringRef v19 = theString[0];
      *(CFStringRef *)(DerivedStorage + 24) = theString[0];
      if (v19) {
        CFRetain(v19);
      }
      if (v18) {
        CFRelease(v18);
      }
      CFDictionarySetValue(Mutable, @"IDDidChange", (const void *)*MEMORY[0x1E4F1CFD0]);
    }
  }
  else if (gLogCategory_APEndpointLocal <= 90 {
         && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
  }
  {
    LogPrintF();
  }
  uint64_t v20 = APEndpointDescriptionGetCMBaseObject(*(void *)(DerivedStorage + 16));
  uint64_t v21 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v21) {
    uint64_t v22 = v21;
  }
  else {
    uint64_t v22 = 0;
  }
  v23 = *(void (**)(uint64_t, __CFString *, uint64_t, CFStringRef *))(v22 + 48);
  if (v23) {
    v23(v20, @"Name", v8, &v44);
  }
  if (!v44 || !CFStringGetLength(v44))
  {
    if (gLogCategory_APEndpointLocal <= 90
      && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
      if (a5) {
        goto LABEL_49;
      }
LABEL_69:
      int v24 = 0;
      goto LABEL_70;
    }
LABEL_48:
    if (a5) {
      goto LABEL_49;
    }
    goto LABEL_69;
  }
  *(unsigned char *)(DerivedStorage + 154) = 1;
  if (CFEqual(v44, *(CFTypeRef *)(DerivedStorage + 32))) {
    goto LABEL_48;
  }
  if (gLogCategory_APEndpointLocal <= 50
    && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v25 = *(const void **)(DerivedStorage + 32);
  CFStringRef v26 = v44;
  *(void *)(DerivedStorage + 32) = v44;
  if (v26) {
    CFRetain(v26);
  }
  if (v25) {
    CFRelease(v25);
  }
  CFDictionarySetValue(Mutable, @"NameDidChange", (const void *)*MEMORY[0x1E4F1CFD0]);
  if (!a5) {
    goto LABEL_69;
  }
LABEL_49:
  if (CFDictionaryGetInt64())
  {
    if (gLogCategory_APEndpointLocal <= 50
      && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFDictionarySetValue(Mutable, @"ClusterInfoDidChange", (const void *)*MEMORY[0x1E4F1CFD0]);
    int v24 = 1;
  }
  else
  {
    int v24 = 0;
  }
  if (CFDictionaryGetInt64())
  {
    if (gLogCategory_APEndpointLocal <= 50
      && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFDictionarySetValue(Mutable, @"ClusterLeaderDidChange", (const void *)*MEMORY[0x1E4F1CFD0]);
  }
  FigCFDictionarySetValueFromKeyInDict();
  FigCFDictionarySetValueFromKeyInDict();
LABEL_70:
  if (*(unsigned char *)(DerivedStorage + 153) && *(unsigned char *)(DerivedStorage + 154)) {
    CFDictionarySetValue(Mutable, @"LocalEndpointInfoComplete", (const void *)*MEMORY[0x1E4F1CFD0]);
  }
  if (APSGetFBOPropertyInt64()) {
    int v27 = 3;
  }
  else {
    int v27 = 0;
  }
  uint64_t v28 = CMBaseObjectGetDerivedStorage();
  if (*(_DWORD *)(v28 + 156) != v27)
  {
    if (gLogCategory_APEndpointLocal <= 50
      && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
    {
      APSGetAPVolumeControlTypeName();
      APSGetAPVolumeControlTypeName();
      LogPrintF();
    }
    *(_DWORD *)(v28 + 156) = v27;
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
  }
  CMNotificationCenterGetDefaultLocalCenter();
  FigDispatchAsyncPostNotification();
  if (v24)
  {
    uint64_t v29 = CMBaseObjectGetDerivedStorage();
    if (*(unsigned char *)(v29 + 40))
    {
      *(unsigned char *)(v29 + 152) = 1;
      uint64_t v30 = CMBaseObjectGetDerivedStorage();
      if (*(unsigned char *)(v30 + 41)) {
        goto LABEL_111;
      }
      v31 = (void *)v30;
      *(_DWORD *)(v30 + 48) = -72277;
      CFAllocatorRef v32 = CFGetAllocator(a2);
      CFMutableDictionaryRef v33 = CFDictionaryCreateMutable(v32, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      if (v33)
      {
        CFIndex v34 = v33;
        CFAllocatorRef v35 = CFGetAllocator(a2);
        CFMutableDictionaryRef v36 = CFDictionaryCreateMutable(v35, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
        if (!v36)
        {
          APSLogErrorAt();
          goto LABEL_110;
        }
        CFDictionaryRef v37 = v36;
        CFDictionarySetInt64();
        CFDictionarySetInt64();
        CFDictionarySetInt64();
        CFDictionarySetValue(v34, (const void *)*MEMORY[0x1E4F206A0], (const void *)*MEMORY[0x1E4F20678]);
        CFDictionarySetValue(v37, (const void *)*MEMORY[0x1E4F205A0], (const void *)*MEMORY[0x1E4F20580]);
        if (!v31[14]) {
          goto LABEL_105;
        }
        if (v31[17])
        {
          uint64_t v38 = FigCFWeakReferenceHolderCopyReferencedObject();
          CFStringRef v39 = (const __CFString *)v38;
          if (v31[17] && !v38)
          {
            if (gLogCategory_APEndpointLocal > 90)
            {
LABEL_109:
              CMNotificationCenterGetDefaultLocalCenter();
              FigDispatchAsyncPostNotification();
              CFRelease(v37);
LABEL_110:
              CFRelease(v34);
              goto LABEL_111;
            }
            if (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()) {
              LogPrintF();
            }
LABEL_105:
            if (gLogCategory_APEndpointLocal <= 30
              && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            goto LABEL_109;
          }
        }
        else
        {
          CFStringRef v39 = 0;
        }
        CFStringRef v40 = (const __CFString *)CFRetain(a2);
        CFStringRef v41 = (const __CFString *)v31[7];
        theString[1] = v40;
        theString[2] = v41;
        CFStringRef v42 = (const __CFString *)CFRetain(v37);
        CFStringRef v43 = (const __CFString *)v31[14];
        theString[3] = v42;
        theString[4] = v43;
        theString[5] = v39;
        if (gLogCategory_APEndpointLocal <= 50
          && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        APSDispatchAsyncFHelper();
        goto LABEL_105;
      }
      goto LABEL_120;
    }
    if (gLogCategory_APEndpointLocal <= 50
      && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
  }
LABEL_111:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 144));
  if (theString[0]) {
    CFRelease(theString[0]);
  }
  if (v44) {
    CFRelease(v44);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
}

void endpointLocal_Finalize()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointLocal <= 50
    && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CMNotificationCenterGetDefaultLocalCenter();
  FigNotificationCenterRemoveWeakListener();
  v1 = *(const void **)(DerivedStorage + 16);
  if (v1)
  {
    CFRelease(v1);
    *(void *)(DerivedStorage + 16) = 0;
  }
  uint64_t v2 = *(const void **)(DerivedStorage + 80);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(DerivedStorage + 80) = 0;
  }
  uint64_t v3 = *(const void **)(DerivedStorage + 72);
  if (v3)
  {
    CFRelease(v3);
    *(void *)(DerivedStorage + 72) = 0;
  }
  uint64_t v4 = *(const void **)(DerivedStorage + 88);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(DerivedStorage + 88) = 0;
  }
  uint64_t v5 = *(const void **)(DerivedStorage + 24);
  if (v5)
  {
    CFRelease(v5);
    *(void *)(DerivedStorage + 24) = 0;
  }
  uint64_t v6 = *(const void **)(DerivedStorage + 32);
  if (v6)
  {
    CFRelease(v6);
    *(void *)(DerivedStorage + 32) = 0;
  }
  FigSimpleMutexDestroy();
  if (*(void *)DerivedStorage)
  {
    dispatch_release(*(dispatch_object_t *)DerivedStorage);
    *(void *)uint64_t DerivedStorage = 0;
  }
}

__CFString *endpointLocal_CopyDebugDescription(uint64_t a1)
{
  CFMutableArrayRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppendFormat(Mutable, 0, @"<APEndpointLocal %p>", a1);
  return Mutable;
}

uint64_t endpointLocal_CopyProperty(uint64_t a1, const void *a2, const __CFAllocator *a3, __CFDictionary **a4)
{
  unsigned int v11 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2 && a4)
  {
    uint64_t v9 = DerivedStorage;
    if (!endpointLocal_copyStaticProperty(a2, (uint64_t *)a4, (int *)&v11)
      && !endpointLocal_copyFromEndpointDescription(a1, a2, (uint64_t)a3, a4, (int *)&v11))
    {
      MEMORY[0x1D25EB370](*(void *)(v9 + 144));
      unsigned int v11 = endpointLocal_copyPropertyInternal(a1, a2, a3, a4);
      MEMORY[0x1D25EB390](*(void *)(v9 + 144));
    }
  }
  else
  {
    APSLogErrorAt();
    return -16720;
  }
  return v11;
}

uint64_t endpointLocal_SetProperty(const void *a1, const void *a2, const void *a3)
{
  unsigned int v19 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 144));
  if (!a2)
  {
    APSLogErrorAt();
    int v18 = -6705;
LABEL_62:
    unsigned int v19 = v18;
    goto LABEL_8;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21080]))
  {
    CFGetDouble();
    float v8 = v7;
LABEL_6:
    endpointLocal_setVolumeSlider(a1, 1, v8);
LABEL_7:
    unsigned int v19 = 0;
    goto LABEL_8;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21098]))
  {
    CFGetDouble();
    APSVolumeConvertDBToSliderValue();
    goto LABEL_6;
  }
  if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20E98]))
  {
    if (CFEqual(a2, @"IsHALMuted"))
    {
      BOOL v11 = *MEMORY[0x1E4F1CFD0] == (void)a3;
      int IsHALMuteForUser = APEndpointIsHALMuteForUser();
      if (gLogCategory_APEndpointLocal <= 50
        && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v16 = a1;
      int v15 = v11;
      int v17 = IsHALMuteForUser;
      goto LABEL_41;
    }
    if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20EA0]))
    {
      if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20EA8]))
      {
        if (gLogCategory_APEndpointLocal <= 50
          && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
        {
          goto LABEL_34;
        }
        goto LABEL_8;
      }
      if (CFEqual(a2, @"EndpointInfo"))
      {
        unsigned int v19 = APEndpointDescriptionSetEndpointInfo(*(void *)(DerivedStorage + 16), (uint64_t)a3);
        if (!v19) {
          goto LABEL_8;
        }
      }
      else
      {
        if (!CFEqual(a2, @"PermanentSpeakerGroupingInfo"))
        {
          if (gLogCategory_APEndpointLocal <= 30
            && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          int v18 = -12784;
          goto LABEL_62;
        }
        unsigned int v19 = APEndpointDescriptionSetProperty(*(void *)(DerivedStorage + 16), @"PermanentSpeakerGroupingInfo", (uint64_t)a3);
        if (!v19)
        {
          endpointLocal_writePSGInfoIntoPrefs();
          goto LABEL_8;
        }
      }
      APSLogErrorAt();
      goto LABEL_8;
    }
    if (a3)
    {
      CFTypeID v13 = CFGetTypeID(a3);
      if (v13 == CFBooleanGetTypeID())
      {
        if (gLogCategory_APEndpointLocal <= 50
          && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        BOOL v14 = *MEMORY[0x1E4F1CFD0] == (void)a3;
        goto LABEL_28;
      }
    }
    goto LABEL_59;
  }
  if (!a3 || (CFTypeID v10 = CFGetTypeID(a3), v10 != CFBooleanGetTypeID()))
  {
LABEL_59:
    APSLogErrorAt();
    int v18 = -16720;
    goto LABEL_62;
  }
  if (gLogCategory_APEndpointLocal <= 50
    && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 8))
  {
    BOOL v14 = *MEMORY[0x1E4F1CFD0] == (void)a3;
LABEL_28:
    int v15 = v14;
    uint64_t v16 = a1;
    int v17 = 1;
LABEL_41:
    endpointLocal_setIsMuted(v16, v15, v17);
    goto LABEL_7;
  }
  if (gLogCategory_APEndpointLocal <= 50
    && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
  {
LABEL_34:
    LogPrintF();
  }
LABEL_8:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 144));
  return v19;
}

uint64_t endpointLocal_copyStaticProperty(const void *a1, uint64_t *a2, int *a3)
{
  if (!a2)
  {
    APSLogErrorAt();
    int v8 = -16720;
    goto LABEL_12;
  }
  if (CFEqual(a1, (CFTypeRef)*MEMORY[0x1E4F21048]))
  {
    uint64_t v6 = (CFTypeRef *)MEMORY[0x1E4F21548];
LABEL_11:
    CFTypeRef v7 = CFRetain(*v6);
    int v8 = 0;
    *a2 = (uint64_t)v7;
    goto LABEL_12;
  }
  if (CFEqual(a1, (CFTypeRef)*MEMORY[0x1E4F20E88]))
  {
LABEL_5:
    uint64_t v6 = (CFTypeRef *)MEMORY[0x1E4F1CFD0];
    goto LABEL_11;
  }
  if (CFEqual(a1, (CFTypeRef)*MEMORY[0x1E4F20EB8])
    || CFEqual(a1, (CFTypeRef)*MEMORY[0x1E4F20F10])
    || CFEqual(a1, (CFTypeRef)*MEMORY[0x1E4F20D10])
    || CFEqual(a1, @"IsClusterEndpoint"))
  {
LABEL_10:
    uint64_t v6 = (CFTypeRef *)MEMORY[0x1E4F1CFC8];
    goto LABEL_11;
  }
  if (CFEqual(a1, (CFTypeRef)*MEMORY[0x1E4F20EC8])) {
    goto LABEL_5;
  }
  if (!CFEqual(a1, (CFTypeRef)*MEMORY[0x1E4F20FC0]))
  {
    if (!CFEqual(a1, (CFTypeRef)*MEMORY[0x1E4F20CC0]) && !CFEqual(a1, (CFTypeRef)*MEMORY[0x1E4F20EB0]))
    {
      if (CFEqual(a1, (CFTypeRef)*MEMORY[0x1E4F20D08]))
      {
        uint64_t v6 = (CFTypeRef *)MEMORY[0x1E4F203C8];
        goto LABEL_11;
      }
      uint64_t result = CFEqual(a1, @"EligibleForFastReactivate");
      if (!result) {
        return result;
      }
      goto LABEL_5;
    }
    goto LABEL_10;
  }
  uint64_t Int64 = CFNumberCreateInt64();
  *a2 = Int64;
  if (Int64)
  {
    int v8 = 0;
  }
  else
  {
    APSLogErrorAt();
    int v8 = -16721;
  }
LABEL_12:
  if (a3) {
    *a3 = v8;
  }
  return 1;
}

uint64_t endpointLocal_copyFromEndpointDescription(uint64_t a1, const void *a2, uint64_t a3, __CFDictionary **a4, int *a5)
{
  int v27 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a4)
  {
    APSLogErrorAt();
    int v27 = -16720;
    goto LABEL_29;
  }
  uint64_t v11 = DerivedStorage;
  if (!CFEqual(a2, @"EndpointDescription"))
  {
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20FB8]))
    {
      uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(v11 + 16));
      uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v14) {
        uint64_t v15 = v14;
      }
      else {
        uint64_t v15 = 0;
      }
      int v18 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t, __CFDictionary **))(v15 + 48);
      if (v18)
      {
        unsigned int v19 = kAPEndpointDescriptionProperty_SubType;
LABEL_26:
        int v24 = v18(CMBaseObject, *v19, a3, a4);
        goto LABEL_28;
      }
    }
    else if (CFEqual(a2, @"GroupPublicName"))
    {
      uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(v11 + 16));
      uint64_t v16 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v16) {
        uint64_t v17 = v16;
      }
      else {
        uint64_t v17 = 0;
      }
      int v18 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t, __CFDictionary **))(v17 + 48);
      if (v18)
      {
        unsigned int v19 = kAPEndpointDescriptionProperty_GroupPublicName;
        goto LABEL_26;
      }
    }
    else
    {
      if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21008]))
      {
        if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20FE0]))
        {
          uint64_t v22 = *(void *)(v11 + 16);
          v23 = kAPEndpointDescriptionProperty_SupportsExtendedWHA;
        }
        else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20C98]))
        {
          uint64_t v22 = *(void *)(v11 + 16);
          v23 = kAPEndpointDescriptionProperty_AdvertisesHAPSupport;
        }
        else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20F60]))
        {
          uint64_t v22 = *(void *)(v11 + 16);
          v23 = kAPEndpointDescriptionProperty_ClusterUUID;
        }
        else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20E58]))
        {
          uint64_t v22 = *(void *)(v11 + 16);
          v23 = kAPEndpointDescriptionProperty_IsClusterLeader;
        }
        else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20D78]))
        {
          uint64_t v22 = *(void *)(v11 + 16);
          v23 = kAPEndpointDescriptionProperty_ClusterSize;
        }
        else
        {
          if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20D80]))
          {
            int v26 = APSGetFBOPropertyInt64();
            uint64_t v12 = (void *)APEndpointAPSClusterTypeToFigEndpointClusterType(v26);
            if (!v12) {
              goto LABEL_5;
            }
            goto LABEL_4;
          }
          if (CFEqual(a2, @"ClusterModel"))
          {
            uint64_t v22 = *(void *)(v11 + 16);
            v23 = kAPEndpointDescriptionProperty_ClusterModel;
          }
          else if (CFEqual(a2, @"RoomUUID"))
          {
            uint64_t v22 = *(void *)(v11 + 16);
            v23 = kAPEndpointDescriptionProperty_RoomUUID;
          }
          else if (CFEqual(a2, @"RoomName"))
          {
            uint64_t v22 = *(void *)(v11 + 16);
            v23 = kAPEndpointDescriptionProperty_RoomName;
          }
          else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21038]))
          {
            uint64_t v22 = *(void *)(v11 + 16);
            v23 = kAPEndpointDescriptionProperty_TightSyncUUID;
          }
          else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21028]))
          {
            uint64_t v22 = *(void *)(v11 + 16);
            v23 = kAPEndpointDescriptionProperty_TightSyncIsGroupLeader;
          }
          else if (CFEqual(a2, @"TightSyncClusterInfo"))
          {
            uint64_t v22 = *(void *)(v11 + 16);
            v23 = kAPEndpointDescriptionProperty_TightSyncClusterInfo;
          }
          else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20E48]))
          {
            uint64_t v22 = *(void *)(v11 + 16);
            v23 = kAPEndpointDescriptionProperty_IsAppleMusicSubscriber;
          }
          else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20D50]))
          {
            uint64_t v22 = *(void *)(v11 + 16);
            v23 = kAPEndpointDescriptionProperty_CloudLibraryIsOn;
          }
          else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20CA8]))
          {
            uint64_t v22 = *(void *)(v11 + 16);
            v23 = kAPEndpointDescriptionProperty_SupportsAirPlayFromCloud;
          }
          else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20CD0]))
          {
            uint64_t v22 = *(void *)(v11 + 16);
            v23 = kAPEndpointDescriptionProperty_VodkaVersion;
          }
          else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20E18]))
          {
            uint64_t v22 = *(void *)(v11 + 16);
            v23 = kAPEndpointDescriptionProperty_HKAccessControlLevel;
          }
          else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20E80]))
          {
            uint64_t v22 = *(void *)(v11 + 16);
            v23 = kAPEndpointDescriptionProperty_IsHKAccessControlEnabled;
          }
          else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20CB0]))
          {
            uint64_t v22 = *(void *)(v11 + 16);
            v23 = kAPEndpointDescriptionProperty_AirPlaySecurity;
          }
          else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20F18]))
          {
            uint64_t v22 = *(void *)(v11 + 16);
            v23 = kAPEndpointDescriptionProperty_Model;
          }
          else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20EF8]))
          {
            uint64_t v22 = *(void *)(v11 + 16);
            v23 = kAPEndpointDescriptionProperty_Manufacturer;
          }
          else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20EF0]))
          {
            uint64_t v22 = *(void *)(v11 + 16);
            v23 = kAPEndpointDescriptionProperty_MACAddress;
          }
          else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20DF0]))
          {
            uint64_t v22 = *(void *)(v11 + 16);
            v23 = kAPEndpointDescriptionProperty_FirmwareVersion;
          }
          else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20F88]))
          {
            uint64_t v22 = *(void *)(v11 + 16);
            v23 = kAPEndpointDescriptionProperty_SerialNumber;
          }
          else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20E08]))
          {
            uint64_t v22 = *(void *)(v11 + 16);
            v23 = kAPEndpointDescriptionProperty_GroupID;
          }
          else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20E70]))
          {
            uint64_t v22 = *(void *)(v11 + 16);
            v23 = kAPEndpointDescriptionProperty_IsGroupLeader;
          }
          else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20E00]))
          {
            uint64_t v22 = *(void *)(v11 + 16);
            v23 = kAPEndpointDescriptionProperty_GroupContainsDiscoverableLeader;
          }
          else if (CFEqual(a2, @"ReceiverSessionIsActive"))
          {
            uint64_t v22 = *(void *)(v11 + 16);
            v23 = kAPEndpointDescriptionProperty_ReceiverSessionIsActive;
          }
          else
          {
            if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20E90]))
            {
              uint64_t result = CFEqual(a2, @"AirPlayClusterCompatibleEndpointProperties");
              if (!result) {
                return result;
              }
              int v24 = endpointLocal_copyAirPlayClusterCompatibleEndpointProperties(a1, a4);
              goto LABEL_28;
            }
            uint64_t v22 = *(void *)(v11 + 16);
            v23 = kAPEndpointDescriptionProperty_IsLowFidelitySpeaker;
          }
        }
        int v24 = APEndpointDescriptionCopyProperty(v22, (uint64_t)*v23, a3, (uint64_t)a4);
LABEL_28:
        int v27 = v24;
        goto LABEL_29;
      }
      uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(v11 + 16));
      uint64_t v20 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v20) {
        uint64_t v21 = v20;
      }
      else {
        uint64_t v21 = 0;
      }
      int v18 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t, __CFDictionary **))(v21 + 48);
      if (v18)
      {
        unsigned int v19 = kAPEndpointDescriptionProperty_DeviceSupportsRelay;
        goto LABEL_26;
      }
    }
    int v24 = -12782;
    goto LABEL_28;
  }
  uint64_t v12 = *(void **)(v11 + 16);
  if (v12) {
LABEL_4:
  }
    uint64_t v12 = (void *)CFRetain(v12);
LABEL_5:
  *a4 = (__CFDictionary *)v12;
LABEL_29:
  if (a5) {
    *a5 = v27;
  }
  return 1;
}

uint64_t endpointLocal_copyPropertyInternal(uint64_t a1, const void *a2, const __CFAllocator *a3, __CFDictionary **a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20E38]))
  {
    Suint64_t Int64 = *(void **)(DerivedStorage + 24);
LABEL_13:
    Suint64_t Int64 = (void *)CFRetain(SInt64);
LABEL_14:
    uint64_t v12 = 0;
    *a4 = (__CFDictionary *)SInt64;
    return v12;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20F28]))
  {
    Suint64_t Int64 = *(void **)(DerivedStorage + 32);
    goto LABEL_13;
  }
  if (CFEqual(a2, @"IsDissociated"))
  {
    CFTypeID v10 = (const void **)MEMORY[0x1E4F1CFD0];
    int v11 = *(unsigned __int8 *)(DerivedStorage + 41);
    goto LABEL_10;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20E40]) || CFEqual(a2, @"IsInUse"))
  {
    CFTypeID v10 = (const void **)MEMORY[0x1E4F1CFD0];
    int v11 = *(unsigned __int8 *)(DerivedStorage + 40);
    goto LABEL_10;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20C88]))
  {
    uint64_t Int64 = CFNumberCreateInt64();
    *a4 = (__CFDictionary *)Int64;
    if (!Int64) {
      goto LABEL_49;
    }
    return 0;
  }
  if (CFEqual(a2, @"EnabledFeatures"))
  {
    uint64_t valuePtr = 0;
    uint64_t EnabledFeatures = APEndpointGetEnabledFeatures(*(void *)(DerivedStorage + 80), 0, &valuePtr);
    if (!EnabledFeatures)
    {
      CFNumberRef v16 = CFNumberCreate(a3, kCFNumberSInt64Type, &valuePtr);
      *a4 = v16;
      if (!v16)
      {
LABEL_49:
        APSLogErrorAt();
        return 4294950575;
      }
      return 0;
    }
    uint64_t v12 = EnabledFeatures;
LABEL_48:
    APSLogErrorAt();
    return v12;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20FA8]))
  {
    Suint64_t Int64 = (void *)FigCFDictionaryCopyArrayOfValues();
    goto LABEL_14;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21080]))
  {
    if (gLogCategory_APEndpointLocal <= 30
      && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t Float64 = FigCFNumberCreateFloat64();
    *a4 = (__CFDictionary *)Float64;
    if (!Float64) {
      goto LABEL_49;
    }
    return 0;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21098]))
  {
    APSVolumeConvertSliderValueToDB();
    uint64_t v17 = FigCFNumberCreateFloat64();
    *a4 = (__CFDictionary *)v17;
    if (!v17) {
      goto LABEL_49;
    }
    return 0;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20E98]) || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20EA0]))
  {
    CFTypeID v10 = (const void **)MEMORY[0x1E4F1CFD0];
    int v11 = *(unsigned __int8 *)(DerivedStorage + 173);
    goto LABEL_10;
  }
  if (CFEqual(a2, @"IsHALMuted"))
  {
    if (APEndpointIsHALMuteForUser() && *(unsigned char *)(DerivedStorage + 173))
    {
LABEL_41:
      CFTypeID v10 = (const void **)MEMORY[0x1E4F1CFD0];
LABEL_12:
      Suint64_t Int64 = (void *)*v10;
      goto LABEL_13;
    }
LABEL_43:
    CFTypeID v10 = (const void **)MEMORY[0x1E4F1CFC8];
    goto LABEL_12;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20EA8])) {
    goto LABEL_43;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21090]))
  {
    Uuint64_t Int64 = FigCFNumberCreateUInt64();
    *a4 = (__CFDictionary *)UInt64;
    if (!UInt64) {
      goto LABEL_49;
    }
    return 0;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21088]))
  {
    CFTypeID v10 = (const void **)MEMORY[0x1E4F1CFD0];
    int v11 = *(unsigned __int8 *)(DerivedStorage + 160);
    goto LABEL_10;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20F20]))
  {
    CFTypeID v10 = (const void **)MEMORY[0x1E4F1CFD0];
    int v11 = *(unsigned __int8 *)(DerivedStorage + 172);
    goto LABEL_10;
  }
  if (CFEqual(a2, @"EndpointShowInfo"))
  {
    uint64_t v12 = endpointLocal_copyShowInfoDictionary(a1, a4);
    if (!v12) {
      return v12;
    }
    goto LABEL_48;
  }
  if (CFEqual(a2, @"IsEngaged"))
  {
    CFTypeID v10 = (const void **)MEMORY[0x1E4F1CFD0];
    int v11 = *(unsigned __int8 *)(DerivedStorage + 45);
LABEL_10:
    if (!v11) {
      CFTypeID v10 = (const void **)MEMORY[0x1E4F1CFC8];
    }
    goto LABEL_12;
  }
  if (CFEqual(a2, @"EndpointStatus"))
  {
    CFNumberRef v20 = CFNumberCreate(a3, kCFNumberSInt32Type, (const void *)(DerivedStorage + 48));
    *a4 = v20;
    if (!v20) {
      goto LABEL_49;
    }
    return 0;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20F78]))
  {
    Suint64_t Int64 = *(void **)(DerivedStorage + 72);
    if (!SInt64) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (CFEqual(a2, @"LocalRouteState"))
  {
    int v21 = *(unsigned __int8 *)(DerivedStorage + 40);
    uint64_t v22 = *(const void **)(DerivedStorage + 72);
    return APEndpointCreateLocalRouteState(v21, v22, 0, a4);
  }
  else
  {
    if (CFEqual(a2, @"ActivationStage"))
    {
      Suint64_t Int64 = (void *)FigCFNumberCreateSInt64();
      goto LABEL_14;
    }
    if (CFEqual(a2, @"IsEndpointInfoComplete"))
    {
      if (*(unsigned char *)(DerivedStorage + 153) && *(unsigned char *)(DerivedStorage + 154)) {
        goto LABEL_41;
      }
      goto LABEL_43;
    }
    if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20D98]))
    {
      if (gLogCategory_APEndpointLocal <= 30
        && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      return 4294954512;
    }
    return endpointLocal_copyMXDescriptor(a1, a4);
  }
}

uint64_t APEndpointDescriptionCopyProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(a1);
  uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  CFTypeID v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10) {
    return 4294954514;
  }
  return v10(CMBaseObject, a2, a3, a4);
}

uint64_t endpointLocal_copyAirPlayClusterCompatibleEndpointProperties(uint64_t a1, __CFDictionary **a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(DerivedStorage + 16));
  uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  CFTypeRef v7 = *(uint64_t (**)(uint64_t, __CFString *, void, CFTypeRef *))(v6 + 48);
  if (!v7)
  {
    uint64_t v11 = 4294954514;
LABEL_9:
    APSLogErrorAt();
    goto LABEL_10;
  }
  uint64_t v8 = v7(CMBaseObject, @"AirPlayClusterCompatibleEndpointProperties", *MEMORY[0x1E4F1CF80], &cf);
  if (v8)
  {
    uint64_t v11 = v8;
    goto LABEL_9;
  }
  MutableCopy = (__CFDictionary *)FigCFDictionaryCreateMutableCopy();
  if (MutableCopy)
  {
    CFTypeID v10 = MutableCopy;
    CFDictionarySetValue(MutableCopy, @"IsLocalDevice", (const void *)*MEMORY[0x1E4F1CFD0]);
    uint64_t v11 = 0;
    *a2 = v10;
  }
  else
  {
    APSLogErrorAt();
    uint64_t v11 = 4294950575;
  }
LABEL_10:
  if (cf) {
    CFRelease(cf);
  }
  return v11;
}

uint64_t endpointLocal_copyShowInfoDictionary(uint64_t a1, __CFDictionary **a2)
{
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  value[0] = 0;
  uint64_t v41 = 0;
  uint64_t v42 = 0;
  int v43 = 0;
  long long v39 = 0u;
  long long v40 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v36 = 0u;
  __int16 v35 = 0;
  value[1] = 0;
  if (a2)
  {
    uint64_t v4 = DerivedStorage;
    uint64_t v5 = *MEMORY[0x1E4F1CF80];
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (Mutable)
    {
      CFTypeRef v7 = Mutable;
      SNPrintF();
      CFDictionarySetCString();
      uint64_t v8 = (const void *)*MEMORY[0x1E4F1CFD0];
      CFDictionarySetValue(v7, @"IsLocal", (const void *)*MEMORY[0x1E4F1CFD0]);
      APSGetFBOPropertyCString();
      TextToHardwareAddressScalar();
      CFDictionarySetInt64();
      CFDictionarySetValue(v7, @"DeviceID", *(const void **)(v4 + 24));
      CFDictionarySetValue(v7, @"Name", *(const void **)(v4 + 32));
      GetDeviceModelString();
      CFDictionarySetCString();
      APSVersionUtilsGetShortVersionLength();
      TextToSourceVersion();
      CFDictionarySetInt64();
      uint64_t v9 = (const void *)*MEMORY[0x1E4F1CFC8];
      CFDictionarySetValue(v7, @"IsRemoteControlEndpoint", (const void *)*MEMORY[0x1E4F1CFC8]);
      uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(v4 + 16));
      uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v11) {
        uint64_t v12 = v11;
      }
      else {
        uint64_t v12 = 0;
      }
      CFTypeID v13 = *(void (**)(uint64_t, __CFString *, uint64_t, void **))(v12 + 48);
      if (v13) {
        v13(CMBaseObject, @"IsClusterLeader", v5, value);
      }
      if (value[0]) {
        CFDictionarySetValue(v7, @"IsClusterLeader", value[0]);
      }
      if (*(unsigned char *)(v4 + 40)) {
        uint64_t v14 = v8;
      }
      else {
        uint64_t v14 = v9;
      }
      CFDictionarySetValue(v7, @"Activated", v14);
      uint64_t v15 = *(void *)(v4 + 16);
      uint64_t v16 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v16) {
        uint64_t v17 = v16;
      }
      else {
        uint64_t v17 = 0;
      }
      int v18 = *(void (**)(uint64_t, CFTypeRef *))(v17 + 8);
      if (v18) {
        v18(v15, &cf);
      }
      FigCFDictionarySetValue();
      if (cf)
      {
        CFRelease(cf);
        CFTypeRef cf = 0;
      }
      uint64_t v19 = APEndpointDescriptionGetCMBaseObject(*(void *)(v4 + 16));
      uint64_t v20 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v20) {
        uint64_t v21 = v20;
      }
      else {
        uint64_t v21 = 0;
      }
      uint64_t v22 = *(void (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v21 + 48);
      if (v22) {
        v22(v19, @"StatusFlags", v5, &cf);
      }
      FigCFDictionarySetValue();
      if (cf)
      {
        CFRelease(cf);
        CFTypeRef cf = 0;
      }
      if (*(unsigned char *)(v4 + 40)) {
        v23 = v8;
      }
      else {
        v23 = v9;
      }
      CFDictionarySetValue(v7, @"Started", v23);
      uint64_t v24 = APEndpointDescriptionGetCMBaseObject(*(void *)(v4 + 16));
      uint64_t v25 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v25) {
        uint64_t v26 = v25;
      }
      else {
        uint64_t v26 = 0;
      }
      int v27 = *(void (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v26 + 48);
      if (v27) {
        v27(v24, @"AccessControlType", v5, &cf);
      }
      FigCFDictionarySetValue();
      if (cf)
      {
        CFRelease(cf);
        CFTypeRef cf = 0;
      }
      uint64_t v28 = APEndpointDescriptionGetCMBaseObject(*(void *)(v4 + 16));
      uint64_t v29 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v29) {
        uint64_t v30 = v29;
      }
      else {
        uint64_t v30 = 0;
      }
      v31 = *(void (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v30 + 48);
      if (v31) {
        v31(v28, @"HKAccessControlLevel", v5, &cf);
      }
      FigCFDictionarySetValue();
      if (cf)
      {
        CFRelease(cf);
        CFTypeRef cf = 0;
      }
      *a2 = v7;
      uint64_t result = (uint64_t)value[0];
      if (value[0])
      {
        CFRelease(value[0]);
        return 0;
      }
    }
    else
    {
      APSLogErrorAt();
      return 4294950575;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294950576;
  }
  return result;
}

uint64_t endpointLocal_copyMXDescriptor(uint64_t a1, CFMutableDictionaryRef *a2)
{
  CFTypeRef cf = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 153) && (uint64_t v5 = DerivedStorage, *(unsigned char *)(DerivedStorage + 154)))
  {
    uint64_t v6 = *MEMORY[0x1E4F1CF80];
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (Mutable)
    {
      CFMutableDictionaryRef v8 = Mutable;
      if (*(unsigned char *)(v5 + 41))
      {
LABEL_5:
        FigCFDictionarySetValue();
        FigCFDictionarySetValue();
        uint64_t v9 = 0;
        *a2 = v8;
        goto LABEL_14;
      }
      uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(v5 + 16));
      uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v11) {
        uint64_t v12 = v11;
      }
      else {
        uint64_t v12 = 0;
      }
      CFTypeID v13 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v12 + 48);
      if (v13)
      {
        uint64_t v14 = v13(CMBaseObject, @"Descriptor", v6, &cf);
        if (!v14)
        {
          FigCFDictionarySetAllValuesFromDictionary();
          endpointLocal_setPropertyOnMXDescriptor(a1, (const void *)*MEMORY[0x1E4F20EC8]);
          endpointLocal_setPropertyOnMXDescriptor(a1, (const void *)*MEMORY[0x1E4F20E88]);
          goto LABEL_5;
        }
        uint64_t v9 = v14;
      }
      else
      {
        uint64_t v9 = 4294954514;
      }
      APSLogErrorAt();
      CFRelease(v8);
    }
    else
    {
      APSLogErrorAt();
      uint64_t v9 = 4294950575;
    }
  }
  else
  {
    APSLogErrorAt();
    uint64_t v9 = 4294949690;
  }
LABEL_14:
  if (cf) {
    CFRelease(cf);
  }
  return v9;
}

void endpointLocal_setPropertyOnMXDescriptor(uint64_t a1, const void *a2)
{
  int v6 = 0;
  CFTypeRef cf = 0;
  CMBaseObjectGetDerivedStorage();
  if (endpointLocal_copyStaticProperty(a2, (uint64_t *)&cf, &v6)
    || (uint64_t v4 = *MEMORY[0x1E4F1CF80],
        endpointLocal_copyFromEndpointDescription(a1, a2, *MEMORY[0x1E4F1CF80], (__CFDictionary **)&cf, &v6)))
  {
    if (!v6)
    {
LABEL_4:
      FigCFDictionarySetValue();
      goto LABEL_5;
    }
  }
  else
  {
    int v6 = endpointLocal_copyPropertyInternal(a1, a2, v4, &cf);
    if (!v6) {
      goto LABEL_4;
    }
  }
  APSLogErrorAt();
LABEL_5:
  if (cf) {
    CFRelease(cf);
  }
}

void endpointLocal_setVolumeSlider(const void *a1, int a2, float a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointLocal <= 50
    && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
  {
    APSVolumeConvertSliderValueToDB();
    APSVolumeConvertSliderValueToDB();
    LogPrintF();
  }
  if (a2 && *(unsigned char *)(DerivedStorage + 173))
  {
    *(unsigned char *)(DerivedStorage + 173) = 0;
  }
  else if (vabds_f32(a3, *(float *)(DerivedStorage + 164)) < 0.00000011921)
  {
    return;
  }
  *(float *)(DerivedStorage + 164) = a3;
  if (*(unsigned char *)(DerivedStorage + 9))
  {
    CFRetain(a1);
    CFTypeRef v7 = *(NSObject **)DerivedStorage;
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __endpointLocal_setVolumeSlider_block_invoke;
    block[3] = &__block_descriptor_44_e5_v8__0l;
    block[4] = a1;
    float v9 = a3;
    dispatch_async(v7, block);
  }
}

void endpointLocal_setIsMuted(const void *a1, int a2, int a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a3)
  {
    uint64_t v7 = DerivedStorage;
    if (gLogCategory_APEndpointLocal <= 50
      && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (*(unsigned __int8 *)(v7 + 173) != a2)
    {
      *(unsigned char *)(v7 + 173) = a2;
      if (*(unsigned char *)(v7 + 8))
      {
        if (*(unsigned char *)(v7 + 9))
        {
          CFRetain(a1);
          CFMutableDictionaryRef v8 = *(NSObject **)v7;
          block[0] = MEMORY[0x1E4F143A8];
          block[1] = 3221225472;
          block[2] = __endpointLocal_setIsMuted_block_invoke;
          block[3] = &__block_descriptor_41_e5_v8__0l;
          block[4] = a1;
          char v14 = a2;
          dispatch_async(v8, block);
        }
      }
      else
      {
        uint64_t v9 = CMBaseObjectGetDerivedStorage();
        APSVolumeConvertDBToSliderValue();
        if (a2 == 1)
        {
          APSVolumeConvertDBToSliderValue();
          float v11 = v10;
          int v12 = *(_DWORD *)(v9 + 164);
        }
        else
        {
          float v11 = *(float *)(v9 + 176);
          APSVolumeConvertDBToSliderValue();
        }
        *(_DWORD *)(v9 + 176) = v12;
        if (gLogCategory_APEndpointLocal <= 50
          && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        endpointLocal_setVolumeSlider(a1, 0, v11);
      }
    }
  }
}

uint64_t APEndpointDescriptionSetEndpointInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  int v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 32);
  if (!v6) {
    return 4294954514;
  }
  return v6(a1, a2);
}

uint64_t APEndpointDescriptionSetProperty(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(a1);
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  CFMutableDictionaryRef v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 56);
  if (!v8) {
    return 4294954514;
  }
  return v8(CMBaseObject, a2, a3);
}

uint64_t endpointLocal_writePSGInfoIntoPrefs()
{
  FigCFDictionaryGetValue();
  APSSettingsSetValue();
  FigCFDictionaryGetValue();
  APSSettingsSetValue();
  FigCFDictionaryGetValue();
  APSSettingsSetValue();
  FigCFDictionaryGetValue();
  APSSettingsSetValue();
  FigCFDictionaryGetValue();
  APSSettingsSetValue();
  FigCFDictionaryGetValue();
  APSSettingsSetValue();
  APSSettingsSynchronize();
  return notify_post("com.apple.airplay.psgInfoChanged");
}

void __endpointLocal_setVolumeSlider_block_invoke(uint64_t a1)
{
  CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointLocal <= 50
    && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  APSLogErrorAt();
  uint64_t v2 = *(const void **)(a1 + 32);
  CFRelease(v2);
}

void __endpointLocal_setIsMuted_block_invoke(uint64_t a1)
{
  CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointLocal <= 50
    && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  APSLogErrorAt();
  uint64_t v2 = *(const void **)(a1 + 32);
  CFRelease(v2);
}

uint64_t endpointLocal_DumpHierarchy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 144));
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, const char *, ...))(a5 + 16))(a5, a3, "Endpoint:[%{ptr}] (Local) %''@ Parent:[%{ptr}]\n", a1, *(void *)(DerivedStorage + 32), a2);
  if (v10) {
    APSLogErrorAt();
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 144));
  return v10;
}

uint64_t endpointLocal_Activate(void *a1, uint64_t a2, const __CFDictionary *a3, uint64_t a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 144));
  uint64_t v9 = *(void *)(DerivedStorage + 56) + 1;
  *(void *)(DerivedStorage + 56) = v9;
  if (gLogCategory_APEndpointLocal <= 50
    && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 40))
  {
    APSLogErrorAt();
  }
  else
  {
    if (*(unsigned char *)(DerivedStorage + 41))
    {
      APSLogErrorAt();
      uint64_t v10 = 4294950573;
      goto LABEL_9;
    }
    endpointLocal_activateInternal(a1, 0, v9, 1, a2, a3, a4);
  }
  uint64_t v10 = 0;
LABEL_9:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 144));
  return v10;
}

uint64_t endpointLocal_Deactivate(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointLocal <= 50
    && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 144));
  if (*(unsigned char *)(DerivedStorage + 41))
  {
    APSLogErrorAt();
    int v6 = 0;
    uint64_t v7 = 4294950573;
  }
  else
  {
    int v6 = *(unsigned __int8 *)(DerivedStorage + 152);
    endpointLocal_suspendAndDissociateStreams(a1);
    endpointLocal_resetActivationState();
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
    endpointLocal_updateIsVolumeAndMuteControlSupported();
    if (gLogCategory_APEndpointLocal <= 50
      && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v7 = 0;
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 144));
  if (a3)
  {
    CFRetain(a1);
    APSDispatchAsyncFHelper();
  }
  if (v6)
  {
    if (gLogCategory_APEndpointLocal <= 50
      && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
  }
  return v7;
}

uint64_t endpointLocal_Dissociate()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 144));
  int v1 = *(unsigned __int8 *)(DerivedStorage + 41);
  *(unsigned char *)(DerivedStorage + 41) = 1;
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 144));
  if (!v1)
  {
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
  }
  return 0;
}

uint64_t endpointLocal_SetDelegateRouting(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 144));
  if (*(unsigned char *)(DerivedStorage + 41))
  {
    APSLogErrorAt();
    a2 = 4294950573;
  }
  else
  {
    if (gLogCategory_APEndpointLocal <= 50
      && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v4 = *(const void **)(DerivedStorage + 136);
    if (v4)
    {
      CFRelease(v4);
      *(void *)(DerivedStorage + 136) = 0;
    }
    uint64_t v5 = (_OWORD *)(DerivedStorage + 96);
    if (a2)
    {
      long long v6 = *(_OWORD *)a2;
      long long v7 = *(_OWORD *)(a2 + 16);
      *(void *)(DerivedStorage + 128) = *(void *)(a2 + 32);
      *uint64_t v5 = v6;
      *(_OWORD *)(DerivedStorage + 112) = v7;
      a2 = 0;
      *(void *)(DerivedStorage + 136) = FigCFWeakReferenceHolderCreateWithReferencedObject();
    }
    else
    {
      *(void *)(DerivedStorage + 128) = 0;
      *uint64_t v5 = 0u;
      *(_OWORD *)(DerivedStorage + 112) = 0u;
    }
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 144));
  return a2;
}

uint64_t endpointLocal_UpdateFeatures(void *a1, uint64_t a2, const void *a3, uint64_t a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v9 = *(void *)(DerivedStorage + 64);
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 144));
  if (gLogCategory_APEndpointLocal <= 50
    && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(unsigned char *)(DerivedStorage + 40))
  {
    uint64_t v15 = 4294949691;
    goto LABEL_23;
  }
  if (*(unsigned char *)(DerivedStorage + 41))
  {
    uint64_t v15 = 4294950573;
    goto LABEL_23;
  }
  uint64_t v10 = v9 | a2;
  if ((v9 | a2) == v9 && v10 == a2) {
    goto LABEL_18;
  }
  if (v10 == v9 || v10 == a2)
  {
    if (!a3 || (CFTypeID v13 = CFGetTypeID(a3), v13 == CFDictionaryGetTypeID()))
    {
LABEL_18:
      uint64_t v15 = 0;
      goto LABEL_19;
    }
    uint64_t v15 = 4294950576;
LABEL_23:
    APSLogErrorAt();
    goto LABEL_19;
  }
  uint64_t v15 = 4294960591;
LABEL_19:
  endpointLocal_activateInternal(a1, v15, *(void *)(DerivedStorage + 56), 0, a2, (const __CFDictionary *)a3, a4);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 144));
  return v15;
}

void endpointLocal_activateInternal(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, const __CFDictionary *a6, uint64_t a7)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v29 = 0;
  if (a2)
  {
    APSLogErrorAt();
    uint64_t v22 = 0;
LABEL_80:
    int v26 = 0;
    uint64_t v27 = 0;
    if (!a7) {
      goto LABEL_62;
    }
LABEL_61:
    CFRetain(a1);
    APSDispatchAsyncFHelper();
    goto LABEL_62;
  }
  if (gLogCategory_APEndpointLocal <= 50
    && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  FigCFDictionaryGetBooleanIfPresent();
  if (!*(unsigned char *)(DerivedStorage + 42)) {
    goto LABEL_83;
  }
  char v14 = (unsigned char *)(DerivedStorage + 43);
  FigCFDictionaryGetBooleanIfPresent();
  uint64_t v15 = CMBaseObjectGetDerivedStorage();
  if (a6)
  {
    uint64_t v16 = v15;
    uint64_t v17 = DerivedStorage;
    uint64_t v18 = a5;
    uint64_t v19 = (const void *)*MEMORY[0x1E4F20350];
    if (CFDictionaryContainsKey(a6, (const void *)*MEMORY[0x1E4F20350]))
    {
      uint64_t v20 = *(const void **)(v16 + 72);
      Value = CFDictionaryGetValue(a6, v19);
      *(void *)(v16 + 72) = Value;
      if (Value) {
        CFRetain(Value);
      }
      if (v20) {
        CFRelease(v20);
      }
    }
    a5 = v18;
    uint64_t DerivedStorage = v17;
    if (FigCFDictionaryGetBooleanIfPresent()
      && gLogCategory_APEndpointLocal <= 50
      && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  if (APSIsEndpointClusteringEnabled() && APSIsFBOPropertyNonNull() && !*v14)
  {
LABEL_83:
    APSLogErrorAt();
    uint64_t v22 = 0;
    goto LABEL_75;
  }
  if (*(unsigned char *)(DerivedStorage + 40))
  {
    uint64_t v22 = 0;
  }
  else
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    uint64_t v22 = Mutable;
    if (!Mutable)
    {
      APSLogErrorAt();
      goto LABEL_75;
    }
    CFDictionarySetValue(Mutable, @"PreferredNetworkClockType", (const void *)*MEMORY[0x1E4F4A158]);
    if (APEndpointCopyFromActivationOptionsOrCreateSharedContext(a6, a5, (uint64_t)v22, DerivedStorage + 88, 0, &v29))
    {
LABEL_88:
      APSLogErrorAt();
      goto LABEL_75;
    }
  }
  uint64_t v24 = *(void *)(DerivedStorage + 64);
  if (v24)
  {
    if (a5)
    {
      if (v24 == a5)
      {
        if (gLogCategory_APEndpointLocal <= 90)
        {
          if (gLogCategory_APEndpointLocal == -1 && !_LogCategory_Initialize()) {
            goto LABEL_75;
          }
LABEL_42:
          LogPrintF();
          goto LABEL_75;
        }
LABEL_79:
        endpointLocal_resetActivationState();
        goto LABEL_80;
      }
      if (gLogCategory_APEndpointLocal > 90) {
        goto LABEL_79;
      }
      if (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()) {
        goto LABEL_42;
      }
LABEL_75:
      if (gLogCategory_APEndpointLocal <= 50
        && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      goto LABEL_79;
    }
    if (gLogCategory_APEndpointLocal <= 50
      && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    endpointLocal_suspendAndDissociateStreams(a1);
    CFDictionaryRemoveAllValues(*(CFMutableDictionaryRef *)(DerivedStorage + 80));
    uint64_t v28 = *(void *)(DerivedStorage + 64);
    if (v28) {
      endpointLocal_postStreamsChangedNotification(a1, v28, a3, 0);
    }
    goto LABEL_55;
  }
  if (!a5)
  {
LABEL_55:
    uint64_t v27 = 0;
    int v26 = 0;
    goto LABEL_56;
  }
  int v25 = *(unsigned __int8 *)(DerivedStorage + 44);
  CMBaseObjectGetDerivedStorage();
  if ((a5 & 2) == 0)
  {
    if ((a5 & 8) == 0)
    {
      if (gLogCategory_APEndpointLocal > 90) {
        goto LABEL_79;
      }
      if (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()) {
        goto LABEL_42;
      }
      goto LABEL_75;
    }
    uint64_t v27 = 8;
LABEL_50:
    if (!endpointLocal_setUpAudioStream((uint64_t)a1, (const void *)*MEMORY[0x1E4F21470], v25))
    {
      int v26 = 1;
      goto LABEL_56;
    }
    goto LABEL_87;
  }
  if (endpointLocal_setUpAudioStream((uint64_t)a1, (const void *)*MEMORY[0x1E4F21468], v25))
  {
LABEL_87:
    APSLogErrorAt();
    goto LABEL_88;
  }
  if ((a5 & 8) != 0)
  {
    uint64_t v27 = 10;
    goto LABEL_50;
  }
  int v26 = 1;
  uint64_t v27 = 2;
LABEL_56:
  *(void *)(DerivedStorage + 64) = v27;
  *(unsigned char *)(DerivedStorage + 40) = 1;
  CMNotificationCenterGetDefaultLocalCenter();
  FigDispatchAsyncPostNotification();
  endpointLocal_updateIsVolumeAndMuteControlSupported();
  if (gLogCategory_APEndpointLocal <= 50
    && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a7) {
    goto LABEL_61;
  }
LABEL_62:
  if (v26) {
    endpointLocal_postStreamsChangedNotification(a1, v27, a3, 1);
  }
  if (v22) {
    CFRelease(v22);
  }
  if (v29) {
    CFRelease(v29);
  }
}

void endpointLocal_suspendAndDissociateStreams(void *a1)
{
  CFDictionaryRef v2 = *(const __CFDictionary **)(CMBaseObjectGetDerivedStorage() + 80);
  if (v2) {
    CFDictionaryApplyFunction(v2, (CFDictionaryApplierFunction)endpointLocal_suspendAndDissociateStreamsDictionaryEntry, a1);
  }
  endpoint_handleIdleStateChanged((uint64_t)a1, 0);
}

void endpointLocal_postStreamsChangedNotification(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  CFAllocatorRef v8 = CFGetAllocator(a1);
  if (APEndpointCreateStreamsChangedNotificationPayload(v8, a2, a3, a4, (CFMutableDictionaryRef *)&cf))
  {
    APSLogErrorAt();
  }
  else
  {
    if (gLogCategory_APEndpointLocal <= 30
      && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
  }
  if (cf) {
    CFRelease(cf);
  }
}

uint64_t endpointLocal_updateIsVolumeAndMuteControlSupported()
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 40)) {
    int v2 = *(_DWORD *)(result + 156) != 0;
  }
  else {
    int v2 = 0;
  }
  if (*(unsigned __int8 *)(result + 160) != v2)
  {
    *(unsigned char *)(result + 160) = v2;
    if (gLogCategory_APEndpointLocal <= 50
      && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CMNotificationCenterGetDefaultLocalCenter();
    uint64_t result = FigDispatchAsyncPostNotification();
  }
  if (*(unsigned __int8 *)(v1 + 172) != v2)
  {
    *(unsigned char *)(v1 + 172) = v2;
    if (gLogCategory_APEndpointLocal <= 50)
    {
      if (gLogCategory_APEndpointLocal != -1 || (uint64_t result = _LogCategory_Initialize(), result)) {
        uint64_t result = LogPrintF();
      }
    }
    if (*(unsigned char *)(v1 + 8))
    {
      CMNotificationCenterGetDefaultLocalCenter();
      return FigDispatchAsyncPostNotification();
    }
  }
  return result;
}

void endpointLocal_resetActivationState()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(unsigned char *)(DerivedStorage + 40) = 0;
  *(_WORD *)(DerivedStorage + 42) = 0;
  *(void *)(DerivedStorage + 64) = 0;
  *(unsigned char *)(DerivedStorage + 152) = 0;
  *(unsigned char *)(DerivedStorage + 44) = 0;
  CFDictionaryRemoveAllValues(*(CFMutableDictionaryRef *)(DerivedStorage + 80));
  uint64_t v1 = *(const void **)(DerivedStorage + 88);
  if (v1)
  {
    CFRelease(v1);
    *(void *)(DerivedStorage + 88) = 0;
  }
  int v2 = *(const void **)(DerivedStorage + 72);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(DerivedStorage + 72) = 0;
  }
}

uint64_t endpointLocal_setUpAudioStream(uint64_t a1, const void *a2, int a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  value = 0;
  if (!a2)
  {
    APSLogErrorAt();
    return 4294950576;
  }
  uint64_t v7 = DerivedStorage;
  CFAllocatorRef v8 = (const void *)*MEMORY[0x1E4F21468];
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21468]) || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21470]))
  {
    CFAllocatorRef v9 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    float v11 = Mutable;
    if (Mutable)
    {
      if (a3) {
        CFDictionarySetValue(Mutable, @"ForEchoCancellationReference", (const void *)*MEMORY[0x1E4F1CFD0]);
      }
      CFTypeRef v25 = 0;
      CFTypeRef cf = 0;
      CFTypeRef v23 = 0;
      CFTypeRef v24 = 0;
      CFTypeRef v22 = 0;
      CFMutableDictionaryRef v12 = *(CFMutableDictionaryRef *)(CMBaseObjectGetDerivedStorage() + 16);
      if (!v12) {
        goto LABEL_39;
      }
      uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v13) {
        uint64_t v14 = v13;
      }
      else {
        uint64_t v14 = 0;
      }
      uint64_t v15 = *(void (**)(CFMutableDictionaryRef, CFTypeRef *, CFTypeRef *, CFTypeRef *, void, CFTypeRef *, CFTypeRef *, void))(v14 + 48);
      if (!v15 || (v15(v12, &cf, &v25, &v24, 0, &v23, &v22, 0), !cf))
      {
        CFMutableDictionaryRef v12 = 0;
LABEL_17:
        if (v25) {
          CFRelease(v25);
        }
        if (v24) {
          CFRelease(v24);
        }
        if (v23) {
          CFRelease(v23);
        }
        if (v22) {
          CFRelease(v22);
        }
        FigCFDictionarySetValue();
        uint64_t v16 = *(const void **)(v7 + 88);
        Boolean v17 = CFEqual(a2, v8);
        uint64_t v18 = APEndpointStreamLocalCreate(v9, @"Local Playback Stream", a2, (uint64_t)v11, v16, v17, (CFTypeRef *)&value);
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterAddWeakListener();
        BOOL v19 = APSGetFBOPropertyInt64() != 0;
        endpoint_handleIdleStateChanged(a1, v19);
        CFDictionarySetValue(*(CFMutableDictionaryRef *)(v7 + 80), a2, value);
        if (gLogCategory_APEndpointLocal <= 50
          && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        if (v12) {
          CFRelease(v12);
        }
        goto LABEL_31;
      }
      CFMutableDictionaryRef v12 = CFDictionaryCreateMutable(v9, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      if (v12)
      {
        FigCFDictionarySetValue();
        FigCFDictionarySetValue();
        FigCFDictionarySetValue();
        FigCFDictionarySetValue();
        FigCFDictionarySetValue();
      }
      else
      {
LABEL_39:
        APSLogErrorAt();
      }
      if (cf) {
        CFRelease(cf);
      }
      goto LABEL_17;
    }
    APSLogErrorAt();
    uint64_t v18 = 4294950575;
  }
  else
  {
    APSLogErrorAt();
    float v11 = 0;
    uint64_t v18 = 4294950576;
  }
LABEL_31:
  if (value) {
    CFRelease(value);
  }
  if (v11) {
    CFRelease(v11);
  }
  return v18;
}

void endpointLocal_handleStreamIsPlayingDidChange(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  BOOL v4 = CFDictionaryGetInt64() != 0;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 144));
  endpoint_handleIdleStateChanged(a2, v4);
  JUMPOUT(0x1D25EB390);
}

void endpoint_handleIdleStateChanged(uint64_t a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int v4 = *(unsigned __int8 *)(DerivedStorage + 45);
  if (a2)
  {
    int v5 = 1;
    goto LABEL_13;
  }
  if (*(void *)(CMBaseObjectGetDerivedStorage() + 80))
  {
    CFArrayRef v6 = (const __CFArray *)FigCFDictionaryCopyArrayOfValues();
    if (CFArrayGetCount(v6) < 1)
    {
LABEL_8:
      int v8 = 1;
      if (!v6) {
        goto LABEL_12;
      }
    }
    else
    {
      CFIndex v7 = 0;
      while (1)
      {
        CFArrayGetValueAtIndex(v6, v7);
        if (APSGetFBOPropertyInt64()) {
          break;
        }
        if (++v7 >= CFArrayGetCount(v6)) {
          goto LABEL_8;
        }
      }
      int v8 = 0;
      if (!v6) {
        goto LABEL_12;
      }
    }
    CFRelease(v6);
  }
  else
  {
    int v8 = 1;
  }
LABEL_12:
  int v5 = v8 == 0;
LABEL_13:
  if (v4 != v5)
  {
    if (gLogCategory_APEndpointLocal <= 50
      && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(DerivedStorage + 45) = v5;
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    uint64_t v10 = Mutable;
    float v11 = (const void **)MEMORY[0x1E4F1CFC8];
    if (v5) {
      float v11 = (const void **)MEMORY[0x1E4F1CFD0];
    }
    CFDictionarySetValue(Mutable, @"IsEngaged", *v11);
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
    if (v10)
    {
      CFRelease(v10);
    }
  }
}

uint64_t endpointLocal_suspendAndDissociateStreamsDictionaryEntry(uint64_t a1, uint64_t a2)
{
  if (gLogCategory_APEndpointLocal <= 50
    && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CMNotificationCenterGetDefaultLocalCenter();
  FigNotificationCenterRemoveWeakListener();
  uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  int v5 = *(void (**)(uint64_t, void, void, void))(v4 + 8);
  if (v5) {
    v5(a2, 0, 0, 0);
  }
  uint64_t VTable = CMBaseObjectGetVTable();
  uint64_t v9 = *(void *)(VTable + 16);
  uint64_t result = VTable + 16;
  uint64_t v8 = v9;
  if (v9) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = 0;
  }
  float v11 = *(uint64_t (**)(uint64_t))(v10 + 32);
  if (v11)
  {
    return v11(a2);
  }
  return result;
}

uint64_t endpointLocal_DuckAudio()
{
  if (gLogCategory_APEndpointLocal <= 50
    && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 0;
}

uint64_t endpointLocal_AcquireAndCopyResource(uint64_t a1, uint64_t a2, const __CFDictionary *a3, void *a4)
{
  FigEndpointExtendedGetFigEndpoint();
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointLocal <= 50
    && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 144));
  if (*(unsigned char *)(DerivedStorage + 40))
  {
    if (FigCFEqual())
    {
      uint64_t v7 = CMBaseObjectGetDerivedStorage();
      if (a3 && (v8 = v7, (uint64_t v9 = CFDictionaryGetValue(a3, (const void *)*MEMORY[0x1E4F202F8])) != 0))
      {
        uint64_t v10 = v9;
        if (gLogCategory_APEndpointLocal <= 50
          && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        CFDictionaryRef v12 = *(const __CFDictionary **)(v8 + 80);
        if (v12 && (Value = CFDictionaryGetValue(v12, v10)) != 0 && (CFTypeRef v14 = CFRetain(Value)) != 0)
        {
          uint64_t v11 = 0;
          *a4 = v14;
        }
        else
        {
          APSLogErrorAt();
          uint64_t v11 = 4294950571;
        }
      }
      else
      {
        APSLogErrorAt();
        uint64_t v11 = 4294950576;
      }
    }
    else
    {
      if (gLogCategory_APEndpointLocal <= 90
        && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v11 = 4294950570;
    }
  }
  else
  {
    uint64_t v11 = 4294949690;
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 144));
  return v11;
}

uint64_t endpointLocal_RelinquishResource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  FigEndpointExtendedGetFigEndpoint();
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointLocal <= 50
    && (gLogCategory_APEndpointLocal != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 144));
  if (!*(unsigned char *)(DerivedStorage + 40))
  {
    uint64_t v5 = 4294949690;
LABEL_13:
    APSLogErrorAt();
    goto LABEL_9;
  }
  if (!a3)
  {
    uint64_t v5 = 4294950576;
    goto LABEL_13;
  }
  if (!FigCFEqual())
  {
    uint64_t v5 = 4294950570;
    goto LABEL_13;
  }
  uint64_t v5 = 0;
LABEL_9:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 144));
  return v5;
}

void endpointLocal_callDelegateHandleFailed(uint64_t a1)
{
  (*(void (**)(void, void, void, void))(a1 + 24))(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 32));
  CFRelease(*(CFTypeRef *)a1);
  CFRelease(*(CFTypeRef *)(a1 + 16));
  int v2 = *(const void **)(a1 + 32);
  if (v2)
  {
    CFRelease(v2);
  }
}

uint64_t APAuthenticationClientMFiMutualAuthCreate(uint64_t a1, const void *a2, const void *a3, const __CFData *a4, void *a5)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  if (!a2)
  {
    uint64_t v17 = 4294895495;
    APSLogErrorAt();
    return v17;
  }
  if (!a3)
  {
    uint64_t v17 = 4294895495;
LABEL_21:
    APSLogErrorAt();
    return v17;
  }
  if (!a4)
  {
    uint64_t v17 = 4294895495;
    goto LABEL_21;
  }
  APAuthenticationClientGetClassID();
  uint64_t v9 = CMDerivedObjectCreate();
  if (v9)
  {
    uint64_t v17 = v9;
    goto LABEL_21;
  }
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  SNPrintF();
  DerivedStorage[12] = dispatch_queue_create(label, 0);
  *uint64_t DerivedStorage = CFRetain(a2);
  CFTypeRef v11 = CFRetain(a3);
  DerivedStorage[2] = v11;
  uint64_t v12 = APAccTransportClientConnectionCopyEndpoint((uint64_t)v11, (uint64_t)"com.apple.AccTransportClientEndpointMFi4Authentication", (uint64_t)(DerivedStorage + 1));
  if (v12)
  {
    uint64_t v17 = v12;
    goto LABEL_21;
  }
  if (CFDataGetLength(a4) != 64)
  {
    uint64_t v17 = 4294895495;
    goto LABEL_21;
  }
  BytePtr = CFDataGetBytePtr(a4);
  size_t Length = CFDataGetLength(a4);
  memcpy(DerivedStorage + 3, BytePtr, Length);
  uint64_t v15 = FigSimpleMutexCreate();
  DerivedStorage[13] = v15;
  if (v15 && (dispatch_semaphore_t v16 = dispatch_semaphore_create(0), (DerivedStorage[11] = v16) != 0))
  {
    DerivedStorage[15] = 0;
    if (gLogCategory_APAuthenticationClientMFiMutualAuth <= 50
      && (gLogCategory_APAuthenticationClientMFiMutualAuth != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v17 = 0;
    *a5 = 0;
  }
  else
  {
    APSLogErrorAt();
    return 4294895496;
  }
  return v17;
}

uint64_t mfiMutualAuth_createTransformedMessage(uint64_t a1, int a2, const __CFData *a3, CFTypeRef *a4)
{
  uint64_t v8 = 4294896151;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v10 = DerivedStorage;
  if (!a3 || !a4)
  {
LABEL_13:
    APSLogErrorAt();
    goto LABEL_14;
  }
  CFTypeRef v11 = (void *)(DerivedStorage + 104);
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 104));
  if (*(void *)(v10 + 120) != 3)
  {
    if (gLogCategory_APAuthenticationClientMFiMutualAuth <= 90
      && (gLogCategory_APAuthenticationClientMFiMutualAuth != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    MEMORY[0x1D25EB390](*v11);
    goto LABEL_13;
  }
  if (gLogCategory_APAuthenticationClientMFiMutualAuth <= 30
    && (gLogCategory_APAuthenticationClientMFiMutualAuth != -1 || _LogCategory_Initialize()))
  {
    CFDataGetLength(a3);
    LogPrintF();
  }
  if (a2)
  {
    mfiMutualAuth_setAndLogSecureTunnelState(a1, 3);
    int v14 = APAccTransportClientEndpointForwardData(*(void *)(v10 + 8), (uint64_t)a3);
  }
  else
  {
    mfiMutualAuth_setAndLogSecureTunnelState(a1, 1);
    int v14 = APAccTransportClientEndpointSecureTunnelDataSend(*(void *)(v10 + 8), (uint64_t)a3);
  }
  int v15 = v14;
  MEMORY[0x1D25EB390](*v11);
  if (v15) {
    goto LABEL_13;
  }
  dispatch_semaphore_wait(*(dispatch_semaphore_t *)(v10 + 88), 0xFFFFFFFFFFFFFFFFLL);
  if (gLogCategory_APAuthenticationClientMFiMutualAuth <= 50
    && (gLogCategory_APAuthenticationClientMFiMutualAuth != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(v10 + 104));
  int v16 = *(_DWORD *)(v10 + 124);
  if (v16 == 4 || v16 == 2)
  {
    uint64_t v17 = *(const void **)(v10 + 112);
    if (v17)
    {
      *a4 = CFRetain(v17);
      uint64_t v18 = *(const void **)(v10 + 112);
      if (v18)
      {
        CFRelease(v18);
        int v12 = 0;
        uint64_t v8 = 0;
        *(void *)(v10 + 112) = 0;
      }
      else
      {
        int v12 = 0;
        uint64_t v8 = 0;
      }
      goto LABEL_19;
    }
    goto LABEL_13;
  }
  MEMORY[0x1D25EB390](*v11);
LABEL_14:
  CFTypeRef v11 = (void *)(v10 + 104);
  MEMORY[0x1D25EB370](*(void *)(v10 + 104));
  if (gLogCategory_APAuthenticationClientMFiMutualAuth <= 90
    && (gLogCategory_APAuthenticationClientMFiMutualAuth != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  int v12 = 7;
LABEL_19:
  mfiMutualAuth_setAndLogSecureTunnelState(a1, v12);
  MEMORY[0x1D25EB390](*v11);
  return v8;
}

void mfiMutualAuth_Finalize()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAuthenticationClientMFiMutualAuth <= 50
    && (gLogCategory_APAuthenticationClientMFiMutualAuth != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v1 = *(void *)(CMBaseObjectGetDerivedStorage() + 8);
  if (v1) {
    APAccTransportClientEndpointDeactivate(v1);
  }
  if (*(void *)DerivedStorage)
  {
    CFRelease(*(CFTypeRef *)DerivedStorage);
    *(void *)uint64_t DerivedStorage = 0;
  }
  int v2 = *(const void **)(DerivedStorage + 112);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(DerivedStorage + 112) = 0;
  }
  APAccTransportClientConnectionInvalidateEndpoint(*(void *)(DerivedStorage + 16), *(void *)(DerivedStorage + 8));
  uint64_t v3 = *(const void **)(DerivedStorage + 8);
  if (v3) {
    CFRelease(v3);
  }
  uint64_t v4 = *(const void **)(DerivedStorage + 16);
  if (v4) {
    CFRelease(v4);
  }
  FigSimpleMutexDestroy();
  uint64_t v5 = *(NSObject **)(DerivedStorage + 88);
  if (v5)
  {
    dispatch_release(v5);
    *(void *)(DerivedStorage + 88) = 0;
  }
  CFArrayRef v6 = *(NSObject **)(DerivedStorage + 96);
  if (v6)
  {
    dispatch_release(v6);
    *(void *)(DerivedStorage + 96) = 0;
  }
}

__CFString *mfiMutualAuth_CopyDebugDescription(uint64_t a1)
{
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppendFormat(Mutable, 0, @"<APAuthenticationClientMFiMutualAuth %p>", a1);
  return Mutable;
}

uint64_t mfiMutualAuth_CopyProperty(int a1, CFTypeRef cf1, uint64_t a3, uint64_t *a4)
{
  if (CFEqual(cf1, @"AuthenticationData"))
  {
    uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
    if (!a4)
    {
      APSLogErrorAt();
      return 4294895495;
    }
    uint64_t v6 = APAccTransportClientEndpointCopyAuthenticationCertificateSerial(*(void *)(DerivedStorage + 8));
    if (gLogCategory_APAuthenticationClientMFiMutualAuth <= 30
      && (gLogCategory_APAuthenticationClientMFiMutualAuth != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (v6)
    {
      uint64_t result = 0;
      *a4 = v6;
      return result;
    }
    APSLogErrorAt();
  }
  return 4294954512;
}

uint64_t mfiMutualAuth_GetAuthenticationType()
{
  return 32;
}

uint64_t mfiMutualAuth_AuthenticateEndpoint(uint64_t a1)
{
  uint64_t v6 = 0;
  uint64_t v7 = &v6;
  uint64_t v8 = 0x2000000000;
  int v9 = 0;
  int v2 = *(NSObject **)(CMBaseObjectGetDerivedStorage() + 96);
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 0x40000000;
  v5[2] = __mfiMutualAuth_AuthenticateEndpoint_block_invoke;
  v5[3] = &unk_1E6890A30;
  v5[4] = &v6;
  v5[5] = a1;
  dispatch_sync(v2, v5);
  uint64_t v3 = *((unsigned int *)v7 + 6);
  _Block_object_dispose(&v6, 8);
  return v3;
}

uint64_t mfiMutualAuth_sendMessageMFi4(uint64_t a1, const void *a2, uint64_t a3)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  CMBaseObjectGetDerivedStorage();
  if (a2)
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (Mutable)
    {
      uint64_t v6 = Mutable;
      snprintf(__str, 0x20uLL, "%d", 32);
      CFDictionarySetCString();
      if (a3) {
        CFDictionaryApplyBlock();
      }
      CFDictionarySetValue(v6, (const void *)*MEMORY[0x1E4F4A218], a2);
      if (gLogCategory_APAuthenticationClientMFiMutualAuth <= 20
        && (gLogCategory_APAuthenticationClientMFiMutualAuth != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v7 = APTransportStreamSendPlistMessageCreatingReply();
      CFRelease(v6);
    }
    else
    {
      APSLogErrorAt();
      return 4294895496;
    }
  }
  else
  {
    uint64_t v7 = 4294895495;
    APSLogErrorAt();
  }
  return v7;
}

uint64_t mfiMutualAuth_setAndLogAuthState(uint64_t a1, int a2)
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  uint64_t v4 = result;
  if (gLogCategory_APAuthenticationClientMFiMutualAuth <= 40)
  {
    if (gLogCategory_APAuthenticationClientMFiMutualAuth != -1 || (uint64_t result = _LogCategory_Initialize(), result)) {
      uint64_t result = LogPrintF();
    }
  }
  *(_DWORD *)(v4 + 120) = a2;
  return result;
}

void __mfiMutualAuth_initMFi4_block_invoke(uint64_t a1, const void *a2)
{
  if (gLogCategory_APAuthenticationClientMFiMutualAuth <= 50
    && (gLogCategory_APAuthenticationClientMFiMutualAuth != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v4 = *(void *)(a1 + 32);
  int v5 = *(_DWORD *)(*(void *)(a1 + 40) + 120);
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 104));
  if (v5 != 3)
  {
    if (*(_DWORD *)(DerivedStorage + 120) != 1)
    {
      mfiMutualAuth_setAndLogAuthState(v4, 4);
      if (gLogCategory_APAuthenticationClientMFiMutualAuth <= 90
        && (gLogCategory_APAuthenticationClientMFiMutualAuth != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
LABEL_28:
      JUMPOUT(0x1D25EB390);
    }
    mfiMutualAuth_setAndLogAuthState(v4, 2);
LABEL_23:
    uint64_t v10 = *(const void **)(DerivedStorage + 112);
    *(void *)(DerivedStorage + 112) = a2;
    if (a2) {
      CFRetain(a2);
    }
    if (v10) {
      CFRelease(v10);
    }
    dispatch_semaphore_signal(*(dispatch_semaphore_t *)(DerivedStorage + 88));
    goto LABEL_28;
  }
  int v7 = *(_DWORD *)(DerivedStorage + 124);
  if (v7 == 5)
  {
    uint64_t v8 = v4;
    int v9 = 6;
  }
  else
  {
    if (v7 != 1)
    {
      mfiMutualAuth_setAndLogSecureTunnelState(v4, 7);
      if (gLogCategory_APAuthenticationClientMFiMutualAuth <= 90
        && (gLogCategory_APAuthenticationClientMFiMutualAuth != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
LABEL_22:
      if (*(_DWORD *)(DerivedStorage + 124) == 7) {
        goto LABEL_28;
      }
      goto LABEL_23;
    }
    uint64_t v8 = v4;
    int v9 = 2;
  }
  mfiMutualAuth_setAndLogSecureTunnelState(v8, v9);
  goto LABEL_22;
}

void __mfiMutualAuth_initMFi4_block_invoke_2(uint64_t a1, int a2)
{
  MEMORY[0x1D25EB370](*(void *)(*(void *)(a1 + 32) + 104));
  if (*(_DWORD *)(*(void *)(a1 + 32) + 120) == 1)
  {
    if (gLogCategory_APAuthenticationClientMFiMutualAuth <= 50
      && (gLogCategory_APAuthenticationClientMFiMutualAuth != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    mfiMutualAuth_setAndLogAuthState(*(void *)(a1 + 40), 2);
    if (a2) {
      int v4 = 3;
    }
    else {
      int v4 = 4;
    }
    mfiMutualAuth_setAndLogAuthState(*(void *)(a1 + 40), v4);
    dispatch_semaphore_signal(*(dispatch_semaphore_t *)(*(void *)(a1 + 32) + 88));
  }
  else
  {
    mfiMutualAuth_setAndLogAuthState(*(void *)(a1 + 40), 4);
    if (gLogCategory_APAuthenticationClientMFiMutualAuth <= 90
      && (gLogCategory_APAuthenticationClientMFiMutualAuth != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  JUMPOUT(0x1D25EB390);
}

void __mfiMutualAuth_initMFi4_block_invoke_3(uint64_t a1, const void *a2)
{
  if (gLogCategory_APAuthenticationClientMFiMutualAuth <= 50
    && (gLogCategory_APAuthenticationClientMFiMutualAuth != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(*(void *)(a1 + 40) + 104));
  uint64_t v4 = *(void *)(a1 + 32);
  if (*(_DWORD *)(*(void *)(a1 + 40) + 124) == 3)
  {
    mfiMutualAuth_setAndLogSecureTunnelState(v4, 4);
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = *(const void **)(v5 + 112);
    *(void *)(v5 + 112) = a2;
    if (a2) {
      CFRetain(a2);
    }
    if (v6) {
      CFRelease(v6);
    }
    dispatch_semaphore_signal(*(dispatch_semaphore_t *)(*(void *)(a1 + 40) + 88));
  }
  else
  {
    mfiMutualAuth_setAndLogSecureTunnelState(v4, 7);
    if (gLogCategory_APAuthenticationClientMFiMutualAuth <= 90
      && (gLogCategory_APAuthenticationClientMFiMutualAuth != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  JUMPOUT(0x1D25EB390);
}

uint64_t mfiMutualAuth_setAndLogSecureTunnelState(uint64_t a1, int a2)
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  uint64_t v4 = result;
  if (gLogCategory_APAuthenticationClientMFiMutualAuth <= 40)
  {
    if (gLogCategory_APAuthenticationClientMFiMutualAuth != -1 || (uint64_t result = _LogCategory_Initialize(), result)) {
      uint64_t result = LogPrintF();
    }
  }
  *(_DWORD *)(v4 + 124) = a2;
  return result;
}

void __mfiMutualAuth_sendMessageMFi4_block_invoke(uint64_t a1, const void *a2, const void *a3)
{
}

uint64_t APKeyHolderCoreUtilsCreate(uint64_t a1, const void *a2, void *a3)
{
  APSKeyHolderGetClassID();
  uint64_t v5 = CMDerivedObjectCreate();
  if (v5)
  {
    uint64_t v8 = v5;
    APSLogErrorAt();
  }
  else
  {
    uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
    *uint64_t DerivedStorage = a2;
    if (a2) {
      CFRetain(a2);
    }
    uint64_t v7 = APSCreateSecureMemAllocator();
    DerivedStorage[1] = v7;
    if (v7)
    {
      if (gLogCategory_APKeyHolderCoreUtils <= 30
        && (gLogCategory_APKeyHolderCoreUtils != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v8 = 0;
      *a3 = 0;
    }
    else
    {
      APSLogErrorAt();
      return 4294895576;
    }
  }
  return v8;
}

CFStringRef APKeyHolderCoreUtilsEncryptionContextDataStreamCreateWithSeed(const __CFAllocator *a1, uint64_t a2)
{
  return CFStringCreateWithFormat(a1, 0, @"DataStream(seed: %llu)", a2);
}

void coreUtilsKeyHolder_Finalize()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APKeyHolderCoreUtils <= 30
    && (gLogCategory_APKeyHolderCoreUtils != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(void *)DerivedStorage)
  {
    CFRelease(*(CFTypeRef *)DerivedStorage);
    *(void *)uint64_t DerivedStorage = 0;
  }
  uint64_t v1 = *(const void **)(DerivedStorage + 8);
  if (v1)
  {
    CFRelease(v1);
    *(void *)(DerivedStorage + 8) = 0;
  }
}

__CFString *coreUtilsKeyHolder_CopyDebugDescription(uint64_t a1)
{
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppendFormat(Mutable, 0, @"<APKeyHolderCoreUtils %p>", a1);
  return Mutable;
}

uint64_t coreUtilsKeyHolder_CopyProperty(int a1, CFTypeRef cf1, uint64_t a3, void *a4)
{
  if (gLogCategory_APKeyHolderCoreUtils <= 10
    && (gLogCategory_APKeyHolderCoreUtils != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(cf1, @"HasPairingClient"))
  {
    CFTypeRef v6 = CFRetain((CFTypeRef)*MEMORY[0x1E4F1CFD0]);
    uint64_t result = 0;
    *a4 = v6;
  }
  else
  {
    if (gLogCategory_APKeyHolderCoreUtils <= 90
      && (gLogCategory_APKeyHolderCoreUtils != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return 4294954512;
  }
  return result;
}

uint64_t coreUtilsKeyHolder_CreateDerivedKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, CFIndex a6, __CFData **a7)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a6)
  {
    uint64_t v23 = 4294895575;
    APSLogErrorAt();
    return v23;
  }
  int v14 = (uint64_t *)DerivedStorage;
  CFMutableDictionaryRef Mutable = CFDataCreateMutable(*(CFAllocatorRef *)(DerivedStorage + 8), a6);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294895576;
  }
  int v16 = Mutable;
  CFDataSetLength(Mutable, a6);
  uint64_t v17 = *v14;
  MutableBytePtr = CFDataGetMutableBytePtr(v16);
  uint64_t v19 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v19) {
    uint64_t v20 = v19;
  }
  else {
    uint64_t v20 = 0;
  }
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, CFIndex, UInt8 *))(v20 + 8);
  if (!v21)
  {
    uint64_t v23 = 4294954514;
LABEL_11:
    APSLogErrorAt();
    goto LABEL_12;
  }
  uint64_t v22 = v21(v17, a2, a3, a4, a5, a6, MutableBytePtr);
  if (v22)
  {
    uint64_t v23 = v22;
    goto LABEL_11;
  }
  uint64_t v23 = 0;
  if (!a7)
  {
LABEL_12:
    CFRelease(v16);
    return v23;
  }
  *a7 = v16;
  return v23;
}

uint64_t coreUtilsKeyHolder_CreateEncryptionKeysForStream(uint64_t a1, uint64_t a2, CFIndex a3, __CFData **a4, CFIndex a5, __CFData **a6)
{
  uint64_t v11 = (int)ASPrintF();
  uint64_t DerivedKey = coreUtilsKeyHolder_CreateDerivedKey(a1, 0, v11, (uint64_t)"DataStream-Input-Encryption-Key", 31, a3, a4);
  if (DerivedKey)
  {
    uint64_t v13 = DerivedKey;
  }
  else
  {
    uint64_t v13 = coreUtilsKeyHolder_CreateDerivedKey(a1, 0, v11, (uint64_t)"DataStream-Output-Encryption-Key", 32, a5, a6);
    if (!v13) {
      goto LABEL_3;
    }
  }
  APSLogErrorAt();
LABEL_3:
  int v14 = 0;
  if (v11)
  {
    do
    {
      *v14++ = 0;
      --v11;
    }
    while (v11);
  }
  return v13;
}

uint64_t coreUtilsKeyHolder_CreateEncryptionKeysForContext(uint64_t a1, CFStringRef theString1, CFIndex a3, __CFData **a4, CFIndex a5, __CFData **a6)
{
  CFTypeRef v31 = 0;
  CFTypeRef cf = 0;
  if (a3) {
    CFIndex v10 = a3;
  }
  else {
    CFIndex v10 = 32;
  }
  if (a5) {
    CFIndex v11 = a5;
  }
  else {
    CFIndex v11 = 32;
  }
  if (CFStringCompare(theString1, @"Ctrl", 0))
  {
    if (CFStringCompare(theString1, @"Events", 0))
    {
      __int16 v35 = 0;
      uint64_t v36 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      if (CFStringGetOrCopyCStringUTF8())
      {
        APSLogErrorAt();
        uint64_t v14 = 0;
        BOOL v13 = 1;
      }
      else
      {
        int v12 = SNScanF();
        BOOL v13 = v12 != 1;
        if (v12 == 1) {
          uint64_t v14 = v33;
        }
        else {
          uint64_t v14 = 0;
        }
      }
      if (v13) {
        EncryptionKeysForStreaCFIndex m = 4294895575;
      }
      else {
        EncryptionKeysForStreaCFIndex m = coreUtilsKeyHolder_CreateEncryptionKeysForStream(a1, v14, v10, a4, v11, a6);
      }
      goto LABEL_35;
    }
    uint64_t v30 = "Events-Write-Encryption-Key";
    int v16 = "Events-Read-Encryption-Key";
    uint64_t v17 = 27;
    uint64_t v18 = 26;
    uint64_t v19 = 11;
    uint64_t v20 = "Events-Salt";
  }
  else
  {
    uint64_t v30 = "Control-Write-Encryption-Key";
    int v16 = "Control-Read-Encryption-Key";
    uint64_t v17 = 28;
    uint64_t v18 = 27;
    uint64_t v19 = 12;
    uint64_t v20 = "Control-Salt";
  }
  uint64_t v21 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v21) {
    uint64_t v22 = v21;
  }
  else {
    uint64_t v22 = 0;
  }
  uint64_t v23 = *(uint64_t (**)(uint64_t, const char *, uint64_t, const char *, uint64_t, CFIndex, CFTypeRef *))(v22 + 48);
  if (!v23)
  {
    EncryptionKeysForStreaCFIndex m = 4294954514;
LABEL_34:
    APSLogErrorAt();
    goto LABEL_35;
  }
  uint64_t v24 = v23(a1, v20, v19, v16, v18, v10, &cf);
  if (v24)
  {
    EncryptionKeysForStreaCFIndex m = v24;
    goto LABEL_34;
  }
  uint64_t v25 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v25) {
    uint64_t v26 = v25;
  }
  else {
    uint64_t v26 = 0;
  }
  uint64_t v27 = *(uint64_t (**)(uint64_t, const char *, uint64_t, const char *, uint64_t, CFIndex, CFTypeRef *))(v26 + 48);
  if (!v27)
  {
    EncryptionKeysForStreaCFIndex m = 4294954514;
    goto LABEL_34;
  }
  uint64_t v28 = v27(a1, v20, v19, v30, v17, v11, &v31);
  if (v28)
  {
    EncryptionKeysForStreaCFIndex m = v28;
    goto LABEL_34;
  }
  if (a4)
  {
    *a4 = (__CFData *)cf;
    CFTypeRef cf = 0;
  }
  EncryptionKeysForStreaCFIndex m = 0;
  if (a6)
  {
    *a6 = (__CFData *)v31;
    CFTypeRef v31 = 0;
  }
LABEL_35:
  if (cf) {
    CFRelease(cf);
  }
  if (v31) {
    CFRelease(v31);
  }
  return EncryptionKeysForStream;
}

void APEndpointStreamUpdateNowPlayingTransaction(uint64_t a1, int a2, int *a3, const void **a4)
{
  if (*a3 <= 50 && (*a3 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  if (a4)
  {
    uint64_t v8 = *a4;
    if (a2)
    {
      if (!v8)
      {
        MEMORY[0x1F4108058](1, a1, a3, a4);
      }
    }
    else if (v8)
    {
      CFRelease(v8);
      *a4 = 0;
    }
  }
  else
  {
    APSLogErrorAt();
  }
}

uint64_t metadataSource_getTypeID(uint64_t *a1)
{
  uint64_t result = _CFRuntimeRegisterClass();
  *a1 = result;
  return result;
}

uint64_t APMetadataSourceCreateWithNowPlayingAppPID(uint64_t a1, uint64_t a2, void *a3)
{
  int v12 = 0;
  uint64_t v5 = (void *)[objc_alloc((Class)getMRClientClass[0]()) initWithProcessIdentifier:a2 bundleIdentifier:0];
  if (!v5)
  {
    APSLogErrorAt();
    int v9 = 0;
    CFTypeRef v6 = 0;
LABEL_15:
    uint64_t v7 = 0;
LABEL_17:
    uint64_t v10 = 4294960568;
    goto LABEL_10;
  }
  CFTypeRef v6 = (void *)[objc_alloc((Class)getMRPlayerPathClass[0]()) initWithOrigin:0 client:v5 player:0];
  if (!v6)
  {
    APSLogErrorAt();
    int v9 = 0;
    goto LABEL_15;
  }
  uint64_t v7 = (void *)[objc_alloc((Class)getMRDestinationClass[0]()) initWithPlayerPath:v6];
  if (!v7)
  {
    APSLogErrorAt();
    int v9 = 0;
    goto LABEL_17;
  }
  uint64_t v8 = metadataSource_createWithMRDestination(a1, v7, &v12);
  if (v8)
  {
    uint64_t v10 = v8;
    APSLogErrorAt();
    int v9 = v12;
  }
  else
  {
    if (gLogCategory_APMetadataSource <= 50
      && (gLogCategory_APMetadataSource != -1 || _LogCategory_Initialize()))
    {
      [v6 description];
      LogPrintF();
    }
    int v9 = 0;
    uint64_t v10 = 0;
    *a3 = v12;
  }
LABEL_10:

  if (v9) {
    CFRelease(v9);
  }
  return v10;
}

uint64_t metadataSource_createWithMRDestination(uint64_t a1, void *a2, void *a3)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v20 = 0u;
  long long v21 = 0u;
  *(_OWORD *)label = 0u;
  long long v19 = 0u;
  if (APMetadataSourceGetTypeID_sInitOnce != -1) {
    dispatch_once_f(&APMetadataSourceGetTypeID_sInitOnce, &APMetadataSourceGetTypeID_sTypeID, (dispatch_function_t)metadataSource_getTypeID);
  }
  uint64_t Instance = _CFRuntimeCreateInstance();
  if (Instance)
  {
    CFTypeRef v6 = (void *)Instance;
    *(void *)(Instance + 128) = 0;
    *(_OWORD *)(Instance + 96) = 0u;
    *(_OWORD *)(Instance + 112) = 0u;
    *(_OWORD *)(Instance + 64) = 0u;
    *(_OWORD *)(Instance + 80) = 0u;
    *(_OWORD *)(Instance + 32) = 0u;
    *(_OWORD *)(Instance + 48) = 0u;
    *(_OWORD *)(Instance + 16) = 0u;
    if (a2)
    {
      *(void *)(Instance + 120) = a2;
      SNPrintF();
      dispatch_queue_t v7 = dispatch_queue_create(label, 0);
      v6[2] = v7;
      if (v7)
      {
        SNPrintF();
        dispatch_queue_t v8 = dispatch_queue_create(label, 0);
        v6[12] = v8;
        if (v8)
        {
          CFAllocatorRef v9 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
          uint64_t v10 = 3;
          CFIndex v11 = (const CFDictionaryKeyCallBacks *)MEMORY[0x1E4F1D530];
          int v12 = (const CFDictionaryValueCallBacks *)MEMORY[0x1E4F1D540];
          while (1)
          {
            CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v9, 0, v11, v12);
            v6[v10] = Mutable;
            if (!Mutable) {
              break;
            }
            if (++v10 == 7)
            {
              CFMutableDictionaryRef v14 = CFDictionaryCreateMutable(v9, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
              v6[7] = v14;
              if (v14)
              {
                CFMutableDictionaryRef v15 = CFDictionaryCreateMutable(v9, 0, 0, 0);
                v6[14] = v15;
                if (v15)
                {
                  uint64_t v16 = 0;
                  *a3 = v6;
                  return v16;
                }
              }
              break;
            }
          }
        }
      }
      APSLogErrorAt();
      uint64_t v16 = 4294960568;
    }
    else
    {
      APSLogErrorAt();
      uint64_t v16 = 4294960591;
    }
    CFRelease(v6);
  }
  else
  {
    APSLogErrorAt();
    return 4294960568;
  }
  return v16;
}

uint64_t APMetadataSourceCreateWithRoutingContextUUID(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v10 = 0;
  uint64_t v5 = (void *)[objc_alloc((Class)getMRDestinationClass[0]()) initWithOutputContextUID:a2];
  if (v5)
  {
    uint64_t v6 = metadataSource_createWithMRDestination(a1, v5, &v10);
    if (v6)
    {
      uint64_t v7 = v6;
      APSLogErrorAt();
      CFAllocatorRef v9 = v10;

      if (v9) {
        CFRelease(v9);
      }
    }
    else
    {
      if (gLogCategory_APMetadataSource <= 50
        && (gLogCategory_APMetadataSource != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *a3 = v10;

      return 0;
    }
  }
  else
  {
    APSLogErrorAt();

    return 4294960568;
  }
  return v7;
}

uint64_t APMetadataSourceAddEventCallback(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = 0;
  uint64_t v5 = (const void *)FigCFWeakReferenceHolderCreateWithReferencedObject();
  context[0] = a1;
  context[1] = v5;
  context[2] = a3;
  context[3] = &v8;
  dispatch_sync_f(*(dispatch_queue_t *)(a1 + 96), context, (dispatch_function_t)metadataSource_addEventCallbackInternal);
  if (v5) {
    CFRelease(v5);
  }
  return v8;
}

uint64_t metadataSource_addEventCallbackInternal(void *a1)
{
  int v2 = malloc_type_calloc(1uLL, 0x10uLL, 0xA0040AFF93C70uLL);
  CFTypeRef v3 = (CFTypeRef)a1[1];
  if (v3) {
    CFTypeRef v3 = CFRetain(v3);
  }
  uint64_t v4 = a1[2];
  *int v2 = v3;
  v2[1] = v4;
  uint64_t v5 = *(__CFDictionary **)(*a1 + 112);
  uint64_t v6 = (const void *)(*(void *)(*a1 + 104) + 1);
  *(void *)(*a1 + 104) = v6;
  CFDictionarySetValue(v5, v6, v2);
  CFRetain((CFTypeRef)*a1);
  uint64_t v7 = (const void *)a1[1];
  if (v7) {
    CFRetain(v7);
  }
  uint64_t result = APSDispatchAsyncFHelper();
  *(void *)a1[3] = *(void *)(*a1 + 104);
  return result;
}

void APMetadataSourceRemoveEventCallback(uint64_t a1, uint64_t a2)
{
  v2[0] = a1;
  v2[1] = a2;
  dispatch_sync_f(*(dispatch_queue_t *)(a1 + 96), v2, (dispatch_function_t)metadataSource_removeEventCallbackInternal);
}

void metadataSource_removeEventCallbackInternal(const void **a1)
{
  Value = (const void **)CFDictionaryGetValue(*((CFDictionaryRef *)*a1 + 14), a1[1]);
  if (Value)
  {
    CFTypeRef v3 = Value;
    uint64_t v4 = *Value;
    if (v4) {
      CFRelease(v4);
    }
    CFDictionaryRemoveValue(*((CFMutableDictionaryRef *)*a1 + 14), a1[1]);
    free(v3);
  }
}

void APMetadataSourceStart(uint64_t a1)
{
  uint64_t v1 = *(NSObject **)(a1 + 16);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __APMetadataSourceStart_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  block[4] = a1;
  dispatch_sync(v1, block);
}

uint64_t __APMetadataSourceStart_block_invoke(uint64_t result)
{
  if (*(void *)(*(void *)(result + 32) + 128)) {
    return result;
  }
  uint64_t v1 = result;
  int v2 = [[APMRNowPlayingControllerDelegate alloc] initWithMetadataSource:*(void *)(result + 32)];
  uint64_t v3 = *(void *)(v1 + 32);
  *(void *)(v3 + 128) = v2;
  if (gLogCategory_APMetadataSource <= 50)
  {
    if (gLogCategory_APMetadataSource == -1)
    {
      int v4 = _LogCategory_Initialize();
      uint64_t v3 = *(void *)(v1 + 32);
      if (!v4) {
        goto LABEL_6;
      }
      int v2 = *(APMRNowPlayingControllerDelegate **)(v3 + 128);
    }
    uint64_t v5 = v3;
    uint64_t v6 = v2;
    LogPrintF();
    uint64_t v3 = *(void *)(v1 + 32);
  }
LABEL_6:
  uint64_t result = objc_msgSend(*(id *)(v3 + 128), "start", v5, v6);
  if (gLogCategory_APMetadataSource <= 50)
  {
    if (gLogCategory_APMetadataSource != -1) {
      return LogPrintF();
    }
    uint64_t result = _LogCategory_Initialize();
    if (result) {
      return LogPrintF();
    }
  }
  return result;
}

void APMetadataSourceStop(uint64_t a1)
{
  uint64_t v1 = *(NSObject **)(a1 + 16);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __APMetadataSourceStop_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  block[4] = a1;
  dispatch_sync(v1, block);
}

void __APMetadataSourceStop_block_invoke(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 128) = 0;
  if (gLogCategory_APMetadataSource <= 50
    && (gLogCategory_APMetadataSource != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

uint64_t APMetadataSourceSetMetadata(const void *a1, const void *a2)
{
  if (a2) {
    CFRetain(a2);
  }
  return APSDispatchAsyncFHelper();
}

void metadataSource_setMetadataCallback(uint64_t a1)
{
  int v2 = *(void **)a1;
  CFDictionaryRef v3 = *(const __CFDictionary **)(a1 + 8);
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  for (uint64_t i = 0; i != 3; ++i)
  {
    CFDictionaryRef Value = (const __CFDictionary *)CFDictionaryGetValue(v3, off_1E68910B8[i]);
    if (Value)
    {
      CFDictionaryRef v7 = Value;
      metadataSource_updateMetadata(v2, i, Value);
      CFDictionaryApplyFunction(v7, (CFDictionaryApplierFunction)metadataSource_appendDictionaryInternal, Mutable);
    }
  }
  if (CFDictionaryGetCount(Mutable) >= 1) {
    metadataSource_updateMetadata(v2, 3, Mutable);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  CFRelease(*(CFTypeRef *)a1);
  uint64_t v8 = *(const void **)(a1 + 8);
  if (v8)
  {
    CFRelease(v8);
  }
}

uint64_t APMetadataSourceCopyMetadata(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v13 = 0;
  CFMutableDictionaryRef v14 = &v13;
  uint64_t v15 = 0x2020000000;
  int v16 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = &v9;
  uint64_t v11 = 0x2020000000;
  uint64_t v12 = 0;
  if (a2 && a3)
  {
    int v4 = *(NSObject **)(a1 + 16);
    v8[0] = MEMORY[0x1E4F143A8];
    v8[1] = 3221225472;
    v8[2] = __APMetadataSourceCopyMetadata_block_invoke;
    v8[3] = &unk_1E6890F18;
    v8[6] = a2;
    v8[7] = a1;
    v8[4] = &v9;
    v8[5] = &v13;
    dispatch_sync(v4, v8);
    uint64_t v5 = v10;
    *a3 = v10[3];
    v5[3] = 0;
    uint64_t v6 = *((unsigned int *)v14 + 6);
  }
  else
  {
    APSLogErrorAt();
    uint64_t v6 = 4294960591;
    *((_DWORD *)v14 + 6) = -6705;
  }
  _Block_object_dispose(&v9, 8);
  _Block_object_dispose(&v13, 8);
  return v6;
}

void sub_1D0953788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 48), 8);
  _Unwind_Resume(a1);
}

const void *__APMetadataSourceCopyMetadata_block_invoke(uint64_t a1)
{
  if (CFEqual(*(CFTypeRef *)(a1 + 48), @"APNowPlayingInfoArtwork"))
  {
    CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    CFDictionaryRef v3 = *(const __CFDictionary **)(*(void *)(a1 + 56) + 24);
LABEL_11:
    uint64_t result = CFDictionaryCreateCopy(v2, v3);
LABEL_12:
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    return result;
  }
  if (CFEqual(*(CFTypeRef *)(a1 + 48), @"APNowPlayingInfoProgress"))
  {
    CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    CFDictionaryRef v3 = *(const __CFDictionary **)(*(void *)(a1 + 56) + 32);
    goto LABEL_11;
  }
  if (CFEqual(*(CFTypeRef *)(a1 + 48), @"APNowPlayingInfoText"))
  {
    CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    CFDictionaryRef v3 = *(const __CFDictionary **)(*(void *)(a1 + 56) + 40);
    goto LABEL_11;
  }
  if (CFEqual(*(CFTypeRef *)(a1 + 48), @"APNowPlayingInfoCoalesced"))
  {
    CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    CFDictionaryRef v3 = *(const __CFDictionary **)(*(void *)(a1 + 56) + 48);
    goto LABEL_11;
  }
  if (CFEqual(*(CFTypeRef *)(a1 + 48), @"MRNowPlayingInfo"))
  {
    CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    CFDictionaryRef v3 = *(const __CFDictionary **)(*(void *)(a1 + 56) + 56);
    goto LABEL_11;
  }
  if (CFEqual(*(CFTypeRef *)(a1 + 48), @"MRSupportedCommands"))
  {
    uint64_t result = *(const void **)(*(void *)(a1 + 56) + 64);
    if (!result) {
      goto LABEL_12;
    }
    goto LABEL_21;
  }
  if (CFEqual(*(CFTypeRef *)(a1 + 48), @"MRPlaybackState"))
  {
    uint64_t result = *(const void **)(*(void *)(a1 + 56) + 72);
    if (!result) {
      goto LABEL_12;
    }
    goto LABEL_21;
  }
  uint64_t result = (const void *)CFEqual(*(CFTypeRef *)(a1 + 48), @"MRNowPlayingClient");
  if (result)
  {
    uint64_t result = *(const void **)(*(void *)(a1 + 56) + 80);
    if (!result) {
      goto LABEL_12;
    }
LABEL_21:
    uint64_t result = CFRetain(result);
    goto LABEL_12;
  }
  *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = -6735;
  return result;
}

void metadataSource_handleNowPlayingInfoChangedInternal(void *a1, CFDictionaryRef theDict, const void *a3, char a4)
{
  if (!theDict) {
    return;
  }
  uint64_t v8 = &unk_1EB9F5000;
  int v9 = gLogCategory_APMetadataSource;
  if (gLogCategory_APMetadataSource <= 10)
  {
    if (gLogCategory_APMetadataSource != -1) {
      goto LABEL_4;
    }
    int v10 = _LogCategory_Initialize();
    int v9 = gLogCategory_APMetadataSource;
    if (v10)
    {
      if (gLogCategory_APMetadataSource > 10) {
        goto LABEL_21;
      }
LABEL_4:
      if (v9 != -1 || _LogCategory_Initialize()) {
        goto LABEL_15;
      }
      goto LABEL_21;
    }
  }
  if (v9 <= 40 && (v9 != -1 || _LogCategory_Initialize()))
  {
    uint64_t v11 = (const void *)getkMRMediaRemoteNowPlayingInfoArtworkData[0]();
    CFDataRef v12 = (const __CFData *)CFDictionaryGetValue(theDict, v11);
    if (v12)
    {
      CFDataRef v13 = v12;
      CFTypeID v14 = CFGetTypeID(v12);
      if (v14 == CFDataGetTypeID()) {
        CFDataGetLength(v13);
      }
    }
    if (gLogCategory_APMetadataSource <= 40
      && (gLogCategory_APMetadataSource != -1 || _LogCategory_Initialize()))
    {
      uint64_t v15 = (const void *)getkMRMediaRemoteNowPlayingInfoArtist[0]();
      CFDictionaryGetValue(theDict, v15);
      int v16 = (const void *)getkMRMediaRemoteNowPlayingInfoAlbum[0]();
      CFDictionaryGetValue(theDict, v16);
      uint64_t v17 = (const void *)getkMRMediaRemoteNowPlayingInfoTitle[0]();
      CFDictionaryGetValue(theDict, v17);
      uint64_t v18 = (const void *)getkMRMediaRemoteNowPlayingInfoTrackNumber[0]();
      CFDictionaryGetValue(theDict, v18);
      long long v19 = (const void *)getkMRMediaRemoteNowPlayingInfoTotalTrackCount[0]();
      CFDictionaryGetValue(theDict, v19);
      long long v20 = (const void *)getkMRMediaRemoteNowPlayingInfoElapsedTime[0]();
      CFDictionaryGetValue(theDict, v20);
      long long v21 = (const void *)getkMRMediaRemoteNowPlayingInfoDuration[0]();
      CFDictionaryGetValue(theDict, v21);
      uint64_t v22 = (const void *)getkMRMediaRemoteNowPlayingInfoArtworkMIMEType[0]();
      CFDictionaryGetValue(theDict, v22);
      uint64_t v8 = (_DWORD *)&unk_1EB9F5000;
LABEL_15:
      LogPrintF();
    }
  }
LABEL_21:
  if (CFDictionaryGetCount(theDict) == 2)
  {
    uint64_t v23 = (const void *)getkMRMediaRemoteNowPlayingInfoIsMusicApp[0]();
    if (CFDictionaryGetValue(theDict, v23) == (const void *)*MEMORY[0x1E4F1CFD0])
    {
      int v83 = (const void *)getkMRMediaRemoteNowPlayingInfoTimestamp[0]();
      if (CFDictionaryGetValue(theDict, v83))
      {
        int v84 = v8[52];
        if (v84 <= 40 && (v84 != -1 || _LogCategory_Initialize())) {
          goto LABEL_113;
        }
        return;
      }
    }
  }
  uint64_t v24 = (const __CFAllocator **)MEMORY[0x1E4F1CF80];
  if (a3)
  {
    CFAllocatorRef v25 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, theDict);
    if (MutableCopy)
    {
      uint64_t v27 = MutableCopy;
      uint64_t v28 = (const void *)getkMRMediaRemoteNowPlayingInfoUniqueIdentifier[0]();
      if (CFDictionaryContainsKey(v27, v28))
      {
        uint64_t v29 = (const void *)getkMRMediaRemoteNowPlayingInfoMediaType[0]();
        uint64_t v30 = (const void *)getkMRMediaRemoteMediaTypeMusic[0]();
        CFDictionaryAddValue(v27, v29, v30);
      }
      if (CFEqual(a3, @"replace"))
      {
        CFTypeRef v31 = (const void *)a1[7];
        a1[7] = v27;
        CFRetain(v27);
        if (v31) {
          CFRelease(v31);
        }
        goto LABEL_32;
      }
      if (CFEqual(a3, @"update"))
      {
        CFDictionaryMergeDictionary();
LABEL_32:
        CFRelease(v27);
        metadataSource_notifyMetadataChange(a1, 1852860704, theDict, a3, a4);
        goto LABEL_33;
      }
      int v85 = v8[52];
      if (v85 <= 60 && (v85 != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      CFRelease(v27);
    }
    else
    {
      APSLogErrorAt();
    }
  }
  else
  {
    APSLogErrorAt();
    CFAllocatorRef v25 = *v24;
  }
  APSLogErrorAt();
LABEL_33:
  CFDictionaryRef v32 = (const __CFDictionary *)a1[7];
  int updated = 0;
  CFTypeRef v101 = 0;
  CFDateRef v102 = 0;
  CFTypeRef v99 = 0;
  CFTypeRef v100 = 0;
  CFTypeRef v97 = 0;
  CFTypeRef cf = 0;
  uint64_t v95 = 0;
  value = 0;
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v25, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    uint64_t v34 = Mutable;
    CFMutableDictionaryRef v35 = CFDictionaryCreateMutable(v25, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (v35)
    {
      uint64_t v36 = v35;
      long long v37 = CFDictionaryCreateMutable(v25, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      if (v37)
      {
        CFMutableDictionaryRef v38 = CFDictionaryCreateMutable(v25, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
        if (v38)
        {
          long long v39 = (const void *)getkMRMediaRemoteNowPlayingInfoArtworkData[0]();
          CFTypeID TypeID = CFDataGetTypeID();
          uint64_t v41 = (const void *)*MEMORY[0x1E4F1D260];
          int updated = metadataSource_cloneValue(v32, v39, TypeID, (const void *)*MEMORY[0x1E4F1D260], v34, @"artworkData", 0);
          if (updated) {
            goto LABEL_134;
          }
          uint64_t v42 = CFDictionaryGetValue(v34, @"artworkData");
          if (CFEqual(v42, v41))
          {
            CFDictionarySetValue(v34, @"artworkMIMEType", @"image/none");
          }
          else
          {
            int v43 = (const void *)getkMRMediaRemoteNowPlayingInfoArtworkMIMEType[0]();
            CFTypeID v44 = CFStringGetTypeID();
            int updated = metadataSource_cloneValue(v32, v43, v44, @"image/jpeg", v34, @"artworkMIMEType", 0);
            if (updated) {
              goto LABEL_134;
            }
            CFIndex v45 = CFDictionaryGetValue(v34, @"artworkMIMEType");
            if (CFEqual(v45, @"image/none"))
            {
              int v93 = v8[52];
              if (v93 <= 60 && (v93 != -1 || _LogCategory_Initialize())) {
                LogPrintF();
              }
              int v94 = -6705;
              goto LABEL_140;
            }
          }
          v46 = (const void *)getkMRMediaRemoteNowPlayingInfoTimestamp[0]();
          CFTypeID v47 = CFDateGetTypeID();
          int updated = metadataSource_cloneValue(v32, v46, v47, 0, v36, @"timestamp", &v102);
          if (updated) {
            goto LABEL_134;
          }
          if (v102)
          {
LABEL_47:
            CFArrayRef v50 = (const void *)getkMRMediaRemoteNowPlayingInfoAlbum[0]();
            CFTypeID v51 = CFStringGetTypeID();
            int updated = metadataSource_cloneValue(v32, v50, v51, &stru_1F26D66A0, v37, @"album", &v101);
            if (updated) {
              goto LABEL_134;
            }
            CFIndex v52 = (const void *)getkMRMediaRemoteNowPlayingInfoArtist[0]();
            CFTypeID v53 = CFStringGetTypeID();
            int updated = metadataSource_cloneValue(v32, v52, v53, &stru_1F26D66A0, v37, @"artist", &v100);
            if (updated) {
              goto LABEL_134;
            }
            v54 = (const void *)getkMRMediaRemoteNowPlayingInfoComposer[0]();
            CFTypeID v55 = CFStringGetTypeID();
            int updated = metadataSource_cloneValue(v32, v54, v55, &stru_1F26D66A0, v37, @"composer", 0);
            if (updated) {
              goto LABEL_134;
            }
            v56 = (const void *)getkMRMediaRemoteNowPlayingInfoGenre[0]();
            CFTypeID v57 = CFStringGetTypeID();
            int updated = metadataSource_cloneValue(v32, v56, v57, &stru_1F26D66A0, v37, @"genre", 0);
            if (updated) {
              goto LABEL_134;
            }
            uint64_t v58 = (const void *)getkMRMediaRemoteNowPlayingInfoTitle[0]();
            CFTypeID v59 = CFStringGetTypeID();
            int updated = metadataSource_cloneValue(v32, v58, v59, &stru_1F26D66A0, v37, @"title", &v99);
            if (updated) {
              goto LABEL_134;
            }
            v60 = (const void *)getkMRMediaRemoteNowPlayingInfoQueueIndex[0]();
            CFTypeRef cf = CFDictionaryGetValue(v32, v60);
            v61 = (const void *)getkMRMediaRemoteNowPlayingInfoTotalQueueCount[0]();
            CFTypeRef v97 = CFDictionaryGetValue(v32, v61);
            if (cf
              && (CFTypeID v62 = CFGetTypeID(cf), v62 == CFNumberGetTypeID())
              && v97
              && (CFTypeID v63 = CFGetTypeID(v97), v63 == CFNumberGetTypeID()))
            {
              CFGetInt64();
              CFDictionarySetInt64();
              CFDictionarySetValue(v37, @"totalTracks", v97);
            }
            else
            {
              v64 = (const void *)getkMRMediaRemoteNowPlayingInfoTrackNumber[0]();
              CFTypeID v65 = CFNumberGetTypeID();
              int updated = metadataSource_cloneValue(v32, v64, v65, 0, v37, @"trackNumber", &cf);
              if (updated) {
                goto LABEL_134;
              }
              CFArrayRef v66 = (const void *)getkMRMediaRemoteNowPlayingInfoTotalTrackCount[0]();
              CFTypeID v67 = CFNumberGetTypeID();
              int updated = metadataSource_cloneValue(v32, v66, v67, 0, v37, @"totalTracks", &v97);
              if (updated) {
                goto LABEL_134;
              }
            }
            v68 = (const void *)getkMRMediaRemoteNowPlayingInfoDiscNumber[0]();
            CFTypeID v69 = CFNumberGetTypeID();
            int updated = metadataSource_cloneValue(v32, v68, v69, 0, v37, @"discNumber", 0);
            if (updated) {
              goto LABEL_134;
            }
            uint64_t v70 = (const void *)getkMRMediaRemoteNowPlayingInfoTotalDiscCount[0]();
            CFTypeID v71 = CFNumberGetTypeID();
            int updated = metadataSource_cloneValue(v32, v70, v71, 0, v37, @"totalDiscs", 0);
            if (updated) {
              goto LABEL_134;
            }
            v72 = (const void *)getkMRMediaRemoteNowPlayingInfoElapsedTime[0]();
            CFTypeID v73 = CFNumberGetTypeID();
            int updated = metadataSource_cloneValue(v32, v72, v73, 0, v36, @"elapsedTime", 0);
            if (updated) {
              goto LABEL_134;
            }
            uint64_t v74 = (const void *)getkMRMediaRemoteNowPlayingInfoDuration[0]();
            CFTypeID v75 = CFNumberGetTypeID();
            int updated = metadataSource_cloneValue(v32, v74, v75, 0, v36, @"duration", &value);
            if (updated) {
              goto LABEL_134;
            }
            if (value) {
              CFDictionarySetValue(v37, @"duration", value);
            }
            uint64_t v76 = (const void *)getkMRMediaRemoteNowPlayingInfoIsExplicitTrack[0]();
            CFTypeID v77 = CFBooleanGetTypeID();
            v78 = (const void *)*MEMORY[0x1E4F1CFC8];
            int updated = metadataSource_cloneValue(v32, v76, v77, (const void *)*MEMORY[0x1E4F1CFC8], v37, @"isExplicitTrack", 0);
            if (updated) {
              goto LABEL_134;
            }
            CFAllocatorRef v79 = (const void *)getkMRMediaRemoteNowPlayingInfoIsAlwaysLive[0]();
            CFTypeID v80 = CFBooleanGetTypeID();
            int updated = metadataSource_cloneValue(v32, v79, v80, v78, v37, @"isStream", 0);
            if (updated) {
              goto LABEL_134;
            }
            getkMRMediaRemoteNowPlayingInfoPlaybackRate[0]();
            CFDictionaryGetDouble();
            CFDictionarySetDouble();
            CFDictionarySetDouble();
            CFIndex v81 = (const void *)getkMRMediaRemoteNowPlayingInfoUniqueIdentifier[0]();
            CFTypeID v82 = CFNumberGetTypeID();
            int updated = metadataSource_cloneValue(v32, v81, v82, 0, v37, @"uniqueID", &v95);
            if (updated) {
              goto LABEL_134;
            }
            if (!v95)
            {
              if (v101) {
                CFHash(v101);
              }
              if (v100) {
                CFHash(v100);
              }
              if (v99) {
                CFHash(v99);
              }
              if (cf) {
                CFHash(cf);
              }
              CFDictionarySetInt64();
            }
            getkMRMediaRemoteNowPlayingInfoRepeatMode[0]();
            unsigned int Int64 = CFDictionaryGetInt64();
            if (Int64 < 2)
            {
              CFIndex v87 = @"none";
            }
            else if (Int64 == 2)
            {
              CFIndex v87 = @"one";
            }
            else
            {
              if (Int64 != 3)
              {
                int v90 = v8[52];
                if (v90 <= 50 && (v90 != -1 || _LogCategory_Initialize())) {
                  LogPrintF();
                }
LABEL_92:
                getkMRMediaRemoteNowPlayingInfoShuffleMode[0]();
                unsigned int v88 = CFDictionaryGetInt64();
                if (v88 < 2)
                {
                  v89 = @"off";
                }
                else if (v88 == 2)
                {
                  v89 = @"albums";
                }
                else
                {
                  if (v88 != 3)
                  {
                    int v92 = v8[52];
                    if (v92 <= 50 && (v92 != -1 || _LogCategory_Initialize())) {
                      LogPrintF();
                    }
LABEL_102:
                    mach_absolute_time();
                    CFDictionarySetInt64();
                    int updated = metadataSource_updateMetadata(a1, 2, v37);
                    if (!updated)
                    {
                      int updated = metadataSource_updateMetadata(a1, 1, v36);
                      if (!updated)
                      {
                        int updated = metadataSource_updateMetadata(a1, 0, v34);
                        if (!updated)
                        {
                          CFDictionaryApplyFunction(v34, (CFDictionaryApplierFunction)metadataSource_appendDictionaryInternal, v38);
                          CFDictionaryApplyFunction(v37, (CFDictionaryApplierFunction)metadataSource_appendDictionaryInternal, v38);
                          CFDictionaryApplyFunction(v36, (CFDictionaryApplierFunction)metadataSource_appendDictionaryInternal, v38);
                          int updated = metadataSource_updateMetadata(a1, 3, v38);
                          if (!updated)
                          {
LABEL_106:
                            CFRelease(v34);
                            CFRelease(v36);
                            if (v37) {
                              CFRelease(v37);
                            }
                            if (v38) {
                              CFRelease(v38);
                            }
                            if (!updated) {
                              return;
                            }
                            goto LABEL_111;
                          }
                        }
                      }
                    }
LABEL_134:
                    APSLogErrorAt();
                    goto LABEL_106;
                  }
                  v89 = @"songs";
                }
                CFDictionarySetValue(v38, @"shuffleMode", v89);
                goto LABEL_102;
              }
              CFIndex v87 = @"all";
            }
            CFDictionarySetValue(v38, @"repeatMode", v87);
            goto LABEL_92;
          }
          CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
          CFDateRef v49 = CFDateCreate(0, Current);
          CFDateRef v102 = v49;
          if (v49)
          {
            CFDictionarySetValue(v36, @"timestamp", v49);
            if (v102) {
              CFRelease(v102);
            }
            goto LABEL_47;
          }
        }
        APSLogErrorAt();
      }
      else
      {
        APSLogErrorAt();
        CFMutableDictionaryRef v38 = 0;
      }
      int v94 = -6728;
LABEL_140:
      int updated = v94;
      goto LABEL_106;
    }
    APSLogErrorAt();
    int updated = -6728;
    CFRelease(v34);
  }
  else
  {
    APSLogErrorAt();
    int updated = -6728;
  }
LABEL_111:
  int v91 = v8[52];
  if (v91 <= 90 && (v91 != -1 || _LogCategory_Initialize())) {
LABEL_113:
  }
    LogPrintF();
}

void metadataSource_handleMRPlaybackStateChangedInternal(void *a1)
{
  if (gLogCategory_APMetadataSource <= 30
    && (gLogCategory_APMetadataSource != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  UInt32 = (const void *)FigCFNumberCreateUInt32();
  if (UInt32)
  {
    CFDictionaryRef v3 = UInt32;
    int v4 = (const void *)a1[9];
    a1[9] = UInt32;
    CFRetain(UInt32);
    if (v4) {
      CFRelease(v4);
    }
    metadataSource_notifyMetadataChange(a1, 1836216435, v3, @"notApplicable", 1);
    CFRelease(v3);
  }
  else
  {
    APSLogErrorAt();
  }
}

void metadataSource_handleMRSupportedCommandsChangedInternal(void *a1, CFArrayRef theArray)
{
  if (theArray
    && (uint64_t Count = CFArrayGetCount(theArray),
        uint64_t v5 = *MEMORY[0x1E4F1CF80],
        (CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], Count, MEMORY[0x1E4F1D510])) != 0))
  {
    CFMutableArrayRef v7 = Mutable;
    if (Count < 1)
    {
LABEL_7:
      CFDataRef v12 = (const void *)a1[8];
      a1[8] = v7;
      CFRetain(v7);
      if (v12) {
        CFRelease(v12);
      }
      metadataSource_notifyMetadataChange(a1, 1836217187, v7, @"notApplicable", 0);
      CFRelease(v7);
      return;
    }
    CFIndex v8 = 0;
    while (1)
    {
      ValueAtIndex = CFArrayGetValueAtIndex(theArray, v8);
      int v10 = (const void *)((uint64_t (*)(uint64_t, uint64_t))softLinkMRMediaRemoteCommandInfoCreateExternalRepresentation[0])(v5, (uint64_t)ValueAtIndex);
      if (!v10) {
        break;
      }
      uint64_t v11 = v10;
      CFArrayAppendValue(v7, v10);
      CFRelease(v11);
      if (Count == ++v8) {
        goto LABEL_7;
      }
    }
    APSLogErrorAt();
    CFRelease(v7);
  }
  else
  {
    APSLogErrorAt();
  }
  APSLogErrorAt();
}

void metadataSource_handleNowPlayingClientChangedInternal(void *a1, uint64_t a2)
{
  if (a2)
  {
    if (gLogCategory_APMetadataSource <= 30
      && (gLogCategory_APMetadataSource != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    int v4 = (const void *)((uint64_t (*)(uint64_t))softLinkMRNowPlayingClientCreateExternalRepresentation[0])(a2);
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = (const void *)a1[10];
      a1[10] = v4;
      CFRetain(v4);
      if (v6) {
        CFRelease(v6);
      }
      metadataSource_notifyMetadataChange(a1, 1836215907, v5, @"notApplicable", 0);
      CFRelease(v5);
    }
    else
    {
      APSLogErrorAt();
    }
  }
}

void metadataSource_Finalize(uint64_t a1)
{
  if (gLogCategory_APMetadataSource <= 50
    && (gLogCategory_APMetadataSource != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(void *)(a1 + 128))
  {
    if (gLogCategory_APMetadataSource <= 100) {
      metadataSource_Finalize_cold_1(gLogCategory_APMetadataSource);
    }
    __break(1u);
  }
  else
  {
    uint64_t v2 = 0;
    uint64_t v3 = a1 + 24;
    do
    {
      int v4 = *(__CFDictionary **)(v3 + v2);
      if (v4)
      {
        CFDictionaryRemoveAllValues(v4);
        uint64_t v5 = *(const void **)(v3 + v2);
        if (v5)
        {
          CFRelease(v5);
          *(void *)(v3 + v2) = 0;
        }
      }
      v2 += 8;
    }
    while (v2 != 32);

    *(void *)(a1 + 120) = 0;
    uint64_t v6 = *(const void **)(a1 + 56);
    if (v6)
    {
      CFRelease(v6);
      *(void *)(a1 + 56) = 0;
    }
    CFMutableArrayRef v7 = *(const void **)(a1 + 64);
    if (v7)
    {
      CFRelease(v7);
      *(void *)(a1 + 64) = 0;
    }
    CFIndex v8 = *(const void **)(a1 + 72);
    if (v8)
    {
      CFRelease(v8);
      *(void *)(a1 + 72) = 0;
    }
    int v9 = *(const void **)(a1 + 80);
    if (v9)
    {
      CFRelease(v9);
      *(void *)(a1 + 80) = 0;
    }
    int v10 = *(const void **)(a1 + 88);
    if (v10)
    {
      CFRelease(v10);
      *(void *)(a1 + 88) = 0;
    }
    uint64_t v11 = *(const void **)(a1 + 112);
    if (v11)
    {
      CFRelease(v11);
      *(void *)(a1 + 112) = 0;
    }
    CFDataRef v12 = *(NSObject **)(a1 + 96);
    if (v12)
    {
      dispatch_release(v12);
      *(void *)(a1 + 96) = 0;
    }
    CFDataRef v13 = *(NSObject **)(a1 + 16);
    if (v13)
    {
      dispatch_release(v13);
      *(void *)(a1 + 16) = 0;
    }
  }
}

Class initMRClient()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  Class result = objc_getClass("MRClient");
  classMRClient = (uint64_t)result;
  getMRClientClass[0] = MRClientFunction;
  return result;
}

uint64_t MRClientFunction()
{
  return classMRClient;
}

void *__MediaRemoteLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote", 2);
  MediaRemoteLibrary_sLib = (uint64_t)result;
  return result;
}

Class initMRPlayerPath()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  Class result = objc_getClass("MRPlayerPath");
  classMRPlayerPath = (uint64_t)result;
  getMRPlayerPathClass[0] = MRPlayerPathFunction;
  return result;
}

uint64_t MRPlayerPathFunction()
{
  return classMRPlayerPath;
}

Class initMRDestination()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  Class result = objc_getClass("MRDestination");
  classMRDestinatioCFIndex n = (uint64_t)result;
  getMRDestinationClass[0] = MRDestinationFunction;
  return result;
}

uint64_t MRDestinationFunction()
{
  return classMRDestination;
}

void metadataSource_notifyListenerAboutCurrentMetadata(uint64_t *a1)
{
  if (a1[1])
  {
    uint64_t v2 = FigCFWeakReferenceHolderCopyReferencedObject();
    if (a1[1]) {
      BOOL v3 = v2 == 0;
    }
    else {
      BOOL v3 = 0;
    }
    if (v3)
    {
      APSLogErrorAt();
      goto LABEL_26;
    }
    int v4 = (const void *)v2;
    BOOL v9 = v2 == 0;
  }
  else
  {
    int v4 = 0;
    BOOL v9 = 1;
  }
  for (uint64_t i = 0; i != 192; i += 24)
  {
    CFTypeRef cf = 0;
    uint64_t v6 = *(unsigned int *)&metadataSource_notifyListenerAboutCurrentMetadata_conversionTable[i];
    uint64_t v7 = *(void *)&metadataSource_notifyListenerAboutCurrentMetadata_conversionTable[i + 16];
    if (APMetadataSourceCopyMetadata(*a1, *(void *)&metadataSource_notifyListenerAboutCurrentMetadata_conversionTable[i + 8], &cf))
    {
      APSLogErrorAt();
      if (gLogCategory_APMetadataSource <= 90
        && (gLogCategory_APMetadataSource != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    else
    {
      if (gLogCategory_APMetadataSource <= 30
        && (gLogCategory_APMetadataSource != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      ((void (*)(uint64_t, const void *, uint64_t, CFTypeRef, uint64_t, void))a1[2])(*a1, v4, v6, cf, v7, 0);
    }
    if (cf) {
      CFRelease(cf);
    }
  }
  if (!v9) {
    CFRelease(v4);
  }
LABEL_26:
  CFIndex v8 = (const void *)a1[1];
  if (v8) {
    CFRelease(v8);
  }
  CFRelease((CFTypeRef)*a1);
}

uint64_t metadataSource_updateMetadata(void *a1, signed int a2, const __CFDictionary *a3)
{
  CFAllocatorRef v6 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  CFIndex v8 = &a1[a2];
  uint64_t v10 = v8[3];
  BOOL v9 = (CFDictionaryRef *)(v8 + 3);
  v13[0] = v10;
  v13[1] = Mutable;
  if (Mutable)
  {
    CFDictionaryRef MutableCopy = Mutable;
    CFDictionaryApplyFunction(a3, (CFDictionaryApplierFunction)metadataSource_updateMetadataApplier, v13);
    if (CFDictionaryGetCount(MutableCopy) < 1) {
      goto LABEL_6;
    }
    if (a2 <= 1)
    {
      CFRelease(MutableCopy);
      CFDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy(v6, 0, *v9);
    }
    metadataSource_notifyMetadataChange(a1, kAPMetadataSourceEventTypes[a2], MutableCopy, @"notApplicable", 0);
    if (MutableCopy) {
LABEL_6:
    }
      CFRelease(MutableCopy);
    return 0;
  }
  else
  {
    APSLogErrorAt();
    return 4294960568;
  }
}

void metadataSource_updateMetadataApplier(void *key, const void *a2, CFDictionaryRef *a3)
{
  CFDictionaryGetValue(*a3, key);
  if ((const void *)*MEMORY[0x1E4F1D260] == a2)
  {
    CFAllocatorRef v6 = *a3;
    CFDictionaryRemoveValue(v6, key);
  }
  else if (!FigCFEqual())
  {
    CFDictionarySetValue(*a3, key, a2);
    uint64_t v7 = a3[1];
    CFDictionarySetValue(v7, key, a2);
  }
}

void metadataSource_notifyMetadataChange(void *a1, int a2, const void *a3, const void *a4, char a5)
{
  CFRetain(a1);
  if (a3) {
    CFRetain(a3);
  }
  CFRetain(a4);
  uint64_t v10 = a1[12];
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  v11[2] = __metadataSource_notifyMetadataChange_block_invoke;
  v11[3] = &__block_descriptor_61_e5_v8__0l;
  int v12 = a2;
  v11[4] = a1;
  v11[5] = a3;
  v11[6] = a4;
  char v13 = a5;
  dispatch_async(v10, v11);
}

void __metadataSource_notifyMetadataChange_block_invoke(uint64_t a1)
{
  CFDictionaryApplyBlock();
  CFRelease(*(CFTypeRef *)(a1 + 32));
  uint64_t v2 = *(const void **)(a1 + 40);
  if (v2) {
    CFRelease(v2);
  }
  CFRelease(*(CFTypeRef *)(a1 + 48));
}

void __metadataSource_notifyMetadataChange_block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)a3)
  {
    uint64_t v5 = (const void *)FigCFWeakReferenceHolderCopyReferencedObject();
    if (!v5) {
      return;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  (*(void (**)(void, const void *, void, void, void, void))(a3 + 8))(*(void *)(a1 + 32), v5, *(unsigned int *)(a1 + 56), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned __int8 *)(a1 + 60));
  if (v5)
  {
    CFRelease(v5);
  }
}

void metadataSource_appendDictionaryInternal(void *key, void *value, CFMutableDictionaryRef theDict)
{
}

Class initMRNowPlayingControllerConfiguration()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  Class result = objc_getClass("MRNowPlayingControllerConfiguration");
  classMRNowPlayingControllerConfiguratioCFIndex n = (uint64_t)result;
  getMRNowPlayingControllerConfigurationClass[0] = MRNowPlayingControllerConfigurationFunction;
  return result;
}

uint64_t MRNowPlayingControllerConfigurationFunction()
{
  return classMRNowPlayingControllerConfiguration;
}

Class initMRPlaybackQueueRequest()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  Class result = objc_getClass("MRPlaybackQueueRequest");
  classMRPlaybackQueueRequest = (uint64_t)result;
  getMRPlaybackQueueRequestClass[0] = MRPlaybackQueueRequestFunction;
  return result;
}

uint64_t MRPlaybackQueueRequestFunction()
{
  return classMRPlaybackQueueRequest;
}

Class initMRNowPlayingController()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  Class result = objc_getClass("MRNowPlayingController");
  classMRNowPlayingController = (uint64_t)result;
  getMRNowPlayingControllerClass = MRNowPlayingControllerFunction;
  return result;
}

uint64_t MRNowPlayingControllerFunction()
{
  return classMRNowPlayingController;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoArtworkData()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoArtworkData");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoArtworkData = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoArtworkData;
  }
  getkMRMediaRemoteNowPlayingInfoArtworkData[0] = kMRMediaRemoteNowPlayingInfoArtworkDataFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoArtworkDataFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoArtworkData;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoArtist()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoArtist");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoArtist = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoArtist;
  }
  getkMRMediaRemoteNowPlayingInfoArtist[0] = kMRMediaRemoteNowPlayingInfoArtistFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoArtistFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoArtist;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoAlbum()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoAlbum");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoAlbuCFIndex m = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoAlbum;
  }
  getkMRMediaRemoteNowPlayingInfoAlbum[0] = kMRMediaRemoteNowPlayingInfoAlbumFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoAlbumFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoAlbum;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoTitle()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoTitle");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoTitle = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoTitle;
  }
  getkMRMediaRemoteNowPlayingInfoTitle[0] = kMRMediaRemoteNowPlayingInfoTitleFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoTitleFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoTitle;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoTrackNumber()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoTrackNumber");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoTrackNumber = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoTrackNumber;
  }
  getkMRMediaRemoteNowPlayingInfoTrackNumber[0] = kMRMediaRemoteNowPlayingInfoTrackNumberFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoTrackNumberFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoTrackNumber;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoTotalTrackCount()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoTotalTrackCount");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoTotalTrackuint64_t Count = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoTotalTrackCount;
  }
  getkMRMediaRemoteNowPlayingInfoTotalTrackCount[0] = kMRMediaRemoteNowPlayingInfoTotalTrackCountFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoTotalTrackCountFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoTotalTrackCount;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoElapsedTime()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoElapsedTime");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoElapsedTime = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoElapsedTime;
  }
  getkMRMediaRemoteNowPlayingInfoElapsedTime[0] = kMRMediaRemoteNowPlayingInfoElapsedTimeFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoElapsedTimeFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoElapsedTime;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoDuration()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoDuration");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoDuratioCFIndex n = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoDuration;
  }
  getkMRMediaRemoteNowPlayingInfoDuration[0] = kMRMediaRemoteNowPlayingInfoDurationFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoDurationFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoDuration;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoArtworkMIMEType()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoArtworkMIMEType");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoArtworkMIMEType = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoArtworkMIMEType;
  }
  getkMRMediaRemoteNowPlayingInfoArtworkMIMEType[0] = kMRMediaRemoteNowPlayingInfoArtworkMIMETypeFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoArtworkMIMETypeFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoArtworkMIMEType;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoIsMusicApp()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoIsMusicApp");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoIsMusicApp = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoIsMusicApp;
  }
  getkMRMediaRemoteNowPlayingInfoIsMusicApp[0] = kMRMediaRemoteNowPlayingInfoIsMusicAppFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoIsMusicAppFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoIsMusicApp;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoTimestamp()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoTimestamp");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoTimestamp = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoTimestamp;
  }
  getkMRMediaRemoteNowPlayingInfoTimestamp[0] = kMRMediaRemoteNowPlayingInfoTimestampFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoTimestampFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoTimestamp;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoUniqueIdentifier()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoUniqueIdentifier");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoUniqueIdentifier = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoUniqueIdentifier;
  }
  getkMRMediaRemoteNowPlayingInfoUniqueIdentifier[0] = kMRMediaRemoteNowPlayingInfoUniqueIdentifierFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoUniqueIdentifierFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoUniqueIdentifier;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoMediaType()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoMediaType");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoMediaType = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoMediaType;
  }
  getkMRMediaRemoteNowPlayingInfoMediaType[0] = kMRMediaRemoteNowPlayingInfoMediaTypeFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoMediaTypeFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoMediaType;
}

uint64_t initValkMRMediaRemoteMediaTypeMusic()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteMediaTypeMusic");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteMediaTypeMusic = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteMediaTypeMusic;
  }
  getkMRMediaRemoteMediaTypeMusic[0] = kMRMediaRemoteMediaTypeMusicFunction;
  return result;
}

uint64_t kMRMediaRemoteMediaTypeMusicFunction()
{
  return constantValkMRMediaRemoteMediaTypeMusic;
}

uint64_t metadataSource_cloneValue(const __CFDictionary *a1, const void *a2, uint64_t a3, const void *a4, __CFDictionary *a5, const void *a6, void *a7)
{
  CFDictionaryRef Value = CFDictionaryGetValue(a1, a2);
  char v13 = Value;
  if (Value)
  {
    a4 = Value;
    if (CFGetTypeID(Value) != a3)
    {
      APSLogErrorAt();
      return 4294960540;
    }
  }
  else if (!a4)
  {
    goto LABEL_6;
  }
  CFDictionarySetValue(a5, a6, a4);
LABEL_6:
  uint64_t result = 0;
  if (a7) {
    *a7 = v13;
  }
  return result;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoComposer()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoComposer");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoComposer = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoComposer;
  }
  getkMRMediaRemoteNowPlayingInfoComposer[0] = kMRMediaRemoteNowPlayingInfoComposerFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoComposerFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoComposer;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoGenre()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoGenre");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoGenre = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoGenre;
  }
  getkMRMediaRemoteNowPlayingInfoGenre[0] = kMRMediaRemoteNowPlayingInfoGenreFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoGenreFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoGenre;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoQueueIndex()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoQueueIndex");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoQueueIndex = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoQueueIndex;
  }
  getkMRMediaRemoteNowPlayingInfoQueueIndex[0] = kMRMediaRemoteNowPlayingInfoQueueIndexFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoQueueIndexFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoQueueIndex;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoTotalQueueCount()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoTotalQueueCount");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoTotalQueueuint64_t Count = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoTotalQueueCount;
  }
  getkMRMediaRemoteNowPlayingInfoTotalQueueCount[0] = kMRMediaRemoteNowPlayingInfoTotalQueueCountFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoTotalQueueCountFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoTotalQueueCount;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoDiscNumber()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoDiscNumber");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoDiscNumber = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoDiscNumber;
  }
  getkMRMediaRemoteNowPlayingInfoDiscNumber[0] = kMRMediaRemoteNowPlayingInfoDiscNumberFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoDiscNumberFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoDiscNumber;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoTotalDiscCount()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoTotalDiscCount");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoTotalDiscuint64_t Count = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoTotalDiscCount;
  }
  getkMRMediaRemoteNowPlayingInfoTotalDiscCount[0] = kMRMediaRemoteNowPlayingInfoTotalDiscCountFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoTotalDiscCountFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoTotalDiscCount;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoIsExplicitTrack()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoIsExplicitTrack");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoIsExplicitTracCFIndex k = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoIsExplicitTrack;
  }
  getkMRMediaRemoteNowPlayingInfoIsExplicitTrack[0] = kMRMediaRemoteNowPlayingInfoIsExplicitTrackFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoIsExplicitTrackFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoIsExplicitTrack;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoIsAlwaysLive()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoIsAlwaysLive");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoIsAlwaysLive = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoIsAlwaysLive;
  }
  getkMRMediaRemoteNowPlayingInfoIsAlwaysLive[0] = kMRMediaRemoteNowPlayingInfoIsAlwaysLiveFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoIsAlwaysLiveFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoIsAlwaysLive;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoPlaybackRate()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoPlaybackRate");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoPlaybackRate = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoPlaybackRate;
  }
  getkMRMediaRemoteNowPlayingInfoPlaybackRate[0] = kMRMediaRemoteNowPlayingInfoPlaybackRateFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoPlaybackRateFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoPlaybackRate;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoRepeatMode()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoRepeatMode");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoRepeatMode = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoRepeatMode;
  }
  getkMRMediaRemoteNowPlayingInfoRepeatMode[0] = kMRMediaRemoteNowPlayingInfoRepeatModeFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoRepeatModeFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoRepeatMode;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoShuffleMode()
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoShuffleMode");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoShuffleMode = result;
  }
  else
  {
    uint64_t result = constantValkMRMediaRemoteNowPlayingInfoShuffleMode;
  }
  getkMRMediaRemoteNowPlayingInfoShuffleMode[0] = kMRMediaRemoteNowPlayingInfoShuffleModeFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoShuffleModeFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoShuffleMode;
}

uint64_t initMRMediaRemoteCommandInfoCreateExternalRepresentation(uint64_t a1, uint64_t a2)
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  int v4 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteCommandInfoCreateExternalRepresentation");
  softLinkMRMediaRemoteCommandInfoCreateExternalRepresentation[0] = v4;
  return ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
}

uint64_t initMRNowPlayingClientCreateExternalRepresentation(uint64_t a1)
{
  if (MediaRemoteLibrary_sOnce != -1) {
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global);
  }
  uint64_t v2 = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRNowPlayingClientCreateExternalRepresentation");
  softLinkMRNowPlayingClientCreateExternalRepresentation[0] = v2;
  return ((uint64_t (*)(uint64_t))v2)(a1);
}

uint64_t APEndpointPlaybackSessionMCCreate(uint64_t a1, const void *a2, const void *a3, const void *a4, const __CFDictionary *a5, void *a6)
{
  if (!a2 || !a3)
  {
    APSLogErrorAt();
    return 4294950556;
  }
  FigEndpointPlaybackSessionGetClassID();
  uint64_t v12 = CMDerivedObjectCreate();
  if (v12)
  {
    uint64_t v20 = v12;
LABEL_24:
    APSLogErrorAt();
    return v20;
  }
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  dispatch_queue_t v14 = dispatch_queue_create("APEndpointPlaybackSessionMC", 0);
  DerivedStorage[2] = v14;
  if (!v14)
  {
    APSLogErrorAt();
    return 4294950555;
  }
  dispatch_queue_t v15 = dispatch_queue_create("APEndpointPlaybackSessionMC.notifications", 0);
  DerivedStorage[3] = v15;
  if (!v15) {
    return 4294950555;
  }
  if (a1) {
    int v16 = (__CFString *)a1;
  }
  else {
    int v16 = @"unnamed";
  }
  DerivedStorage[5] = v16;
  CFRetain(v16);
  uint64_t v17 = (const void *)*MEMORY[0x1E4F20AB8];
  DerivedStorage[6] = *MEMORY[0x1E4F20AB8];
  if (v17) {
    CFRetain(v17);
  }
  if (CFDictionaryContainsKey(a5, @"VolumeDB"))
  {
    CFNumberGetTypeID();
    TypedCFDictionaryRef Value = (const __CFBoolean *)CFDictionaryGetTypedValue();
    mcs_SetProperty(0, @"VolumeDB", TypedValue);
  }
  DerivedStorage[10] = CFRetain(a3);
  DerivedStorage[9] = CFRetain(a2);
  if (a4) {
    CFTypeRef v19 = CFRetain(a4);
  }
  else {
    CFTypeRef v19 = 0;
  }
  DerivedStorage[11] = v19;
  uint64_t v20 = APEndpointPlaybackSessionStatsCreate(@"MC", a1, (uint64_t)a5, DerivedStorage + 16);
  if (v20) {
    goto LABEL_24;
  }
  *a6 = 0;
  return v20;
}

uint64_t mcs_SetProperty(uint64_t a1, const void *a2, const __CFBoolean *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (CFEqual(a2, @"VolumeDB"))
  {
    CFGetDouble();
    APSVolumeConvertDBToSliderValue();
    *(double *)&valuePtr.value = v6;
    CFNumberRef v7 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], kCFNumberDoubleType, &valuePtr);
    uint64_t v8 = AirPlaySetProperty();
    if (v7) {
      CFRelease(v7);
    }
  }
  else
  {
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20B48]))
    {
      int Value = CFBooleanGetValue(a3);
      APEndpointPlaybackSessionSetIsParticipatingInCoordinatedPlayback(*(void *)(DerivedStorage + 128), Value);
    }
    else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20B80]))
    {
      memset(&valuePtr, 0, sizeof(valuePtr));
      CMTimeMakeFromDictionary(&valuePtr, a3);
      uint64_t v10 = *(void **)(DerivedStorage + 128);
      CMTime v12 = valuePtr;
      APEndpointPlaybackSessionSetVideoSyncTime(v10, (uint64_t)&v12);
    }
    return 0;
  }
  return v8;
}

uint64_t mcs_Invalidate(void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  dispatch_sync_f(*(dispatch_queue_t *)(DerivedStorage + 16), a1, (dispatch_function_t)mcs_InvalidateInternal);
  CMNotificationCenterGetDefaultLocalCenter();
  FigDispatchAsyncPostNotification();
  return 0;
}

void mcs_Finalize(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (DerivedStorage)
  {
    BOOL v3 = (void *)DerivedStorage;
    if (gLogCategory_EndpointPlaybackSessionMC <= 50
      && (gLogCategory_EndpointPlaybackSessionMC != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    mcs_InvalidateInternal(a1);
    int v4 = (const void *)v3[4];
    if (v4)
    {
      CFRelease(v4);
      v3[4] = 0;
    }
    uint64_t v5 = (const void *)v3[5];
    if (v5)
    {
      CFRelease(v5);
      v3[5] = 0;
    }
    float v6 = (const void *)v3[6];
    if (v6)
    {
      CFRelease(v6);
      v3[6] = 0;
    }
    CFNumberRef v7 = (const void *)v3[9];
    if (v7)
    {
      CFRelease(v7);
      v3[9] = 0;
    }
    uint64_t v8 = (const void *)v3[10];
    if (v8)
    {
      CFRelease(v8);
      v3[10] = 0;
    }
    BOOL v9 = (const void *)v3[11];
    if (v9)
    {
      CFRelease(v9);
      v3[11] = 0;
    }
    uint64_t v10 = (const void *)v3[15];
    if (v10)
    {
      CFRelease(v10);
      v3[15] = 0;
    }
    uint64_t v11 = (const void *)v3[8];
    if (v11)
    {
      CFRelease(v11);
      v3[8] = 0;
    }
    CMTime v12 = v3[2];
    if (v12)
    {
      dispatch_release(v12);
      v3[2] = 0;
    }
    char v13 = v3[3];
    if (v13)
    {
      dispatch_release(v13);
      v3[3] = 0;
    }
    APEndpointPlaybackSessionStatsDestroy(v3 + 16);
  }
}

CFStringRef mcs_CopyDebugDesc()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (DerivedStorage) {
    uint64_t v1 = *(__CFString **)(DerivedStorage + 40);
  }
  else {
    uint64_t v1 = @"?";
  }
  return CFStringCreateWithFormat(0, 0, @"[APEndpointPlaybackSessionMC %@]", v1);
}

uint64_t mcs_CopyProperty(uint64_t a1, const void *a2, uint64_t a3, CFDictionaryRef *a4)
{
  unsigned int v24 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20B58])) {
    goto LABEL_2;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20B78]))
  {
    uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(DerivedStorage + 80));
    uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v10) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    CMTime v12 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t, CFDictionaryRef *))(v11 + 48);
    if (v12) {
      return v12(CMBaseObject, @"SupportsAirPlayVideoPausedStart", a3, a4);
    }
    else {
      return -12782;
    }
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20B70])) {
    goto LABEL_8;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20B60]))
  {
    if (*(void *)(DerivedStorage + 80))
    {
      BOOL v15 = APSGetFBOPropertyInt64() == 0;
      uint64_t v8 = (CFTypeRef *)MEMORY[0x1E4F1CFD0];
      char v16 = !v15;
      if ((v16 & 1) == 0) {
        uint64_t v8 = (CFTypeRef *)MEMORY[0x1E4F1CFC8];
      }
      goto LABEL_3;
    }
    goto LABEL_8;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20B50]))
  {
LABEL_8:
    uint64_t v8 = (CFTypeRef *)MEMORY[0x1E4F1CFC8];
    goto LABEL_3;
  }
  if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20B68]))
  {
    if (CFEqual(a2, @"Activated"))
    {
      uint64_t v8 = (CFTypeRef *)MEMORY[0x1E4F1CFD0];
      int v20 = *(unsigned __int8 *)(DerivedStorage + 56);
    }
    else
    {
      if (!CFEqual(a2, @"IsPlaying"))
      {
        if (CFEqual(a2, @"RTCStats"))
        {
          APEndpointPlaybackSessionCopyRTCStats(*(void *)(DerivedStorage + 128), a4);
          if (*a4) {
            return v24;
          }
          APSLogErrorAt();
          return -16741;
        }
        else
        {
          return -12787;
        }
      }
      uint64_t v8 = (CFTypeRef *)MEMORY[0x1E4F1CFD0];
      int v20 = *(unsigned __int8 *)(DerivedStorage + 57);
    }
    if (!v20) {
      uint64_t v8 = (CFTypeRef *)MEMORY[0x1E4F1CFC8];
    }
    goto LABEL_3;
  }
  if (!*(void *)(DerivedStorage + 80) || (uint64_t v17 = APSGetFBOPropertyInt64(), v17 <= 2206799))
  {
    if (gLogCategory_EndpointPlaybackSessionMC <= 20
      && (gLogCategory_EndpointPlaybackSessionMC != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_8;
  }
  if ((unint64_t)v17 > 0x24D2F3)
  {
LABEL_2:
    uint64_t v8 = (CFTypeRef *)MEMORY[0x1E4F1CFD0];
LABEL_3:
    *a4 = (CFDictionaryRef)CFRetain(*v8);
    return v24;
  }
  CFStringRef theString = 0;
  unsigned int v18 = APEndpointDescriptionCopyProperty(*(void *)(DerivedStorage + 80), @"OSVersion", *MEMORY[0x1E4F1CF80], (uint64_t)&theString);
  BOOL v19 = 0;
  unsigned int v24 = v18;
  if (!v18 && theString) {
    BOOL v19 = CFStringGetLength(theString) > 0;
  }
  if (gLogCategory_EndpointPlaybackSessionMC <= 20
    && (gLogCategory_EndpointPlaybackSessionMC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v22 = (CFTypeRef *)MEMORY[0x1E4F1CFD0];
  if (!v19) {
    uint64_t v22 = (CFTypeRef *)MEMORY[0x1E4F1CFC8];
  }
  *a4 = (CFDictionaryRef)CFRetain(*v22);
  if (theString) {
    CFRelease(theString);
  }
  return 0;
}

void mcs_InvalidateInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(unsigned char *)(DerivedStorage + 8))
  {
    uint64_t v3 = DerivedStorage;
    APEndpointPlaybackSessionStatsUpdateAtInvalidate(*(void *)(DerivedStorage + 128));
    uint64_t v4 = CMBaseObjectGetDerivedStorage();
    if (!*(unsigned char *)(v4 + 8))
    {
      uint64_t v5 = v4;
      if (*(void *)(v4 + 32))
      {
        if (*(void *)(v4 + 72))
        {
          CMNotificationCenterGetDefaultLocalCenter();
          FigNotificationCenterRemoveWeakListener();
        }
        MediaControlClient_Cancel();
        MediaControlClient_EnsureDisconnected();
        MediaControlClient_Invalidate();
        float v6 = *(const void **)(v5 + 96);
        if (v6)
        {
          CFRelease(v6);
          *(void *)(v5 + 96) = 0;
        }
        mcs_postConnectedStateChangedNotification(a1, 0, 0, 0);
      }
    }
    *(unsigned char *)(v3 + 8) = 1;
    *(void *)(v3 + 104) = 0;
    *(void *)(v3 + 112) = 0;
    if (*(void *)v3)
    {
      os_release(*(void **)v3);
      *(void *)uint64_t v3 = 0;
    }
  }
}

uint64_t mcs_handlePasswordChangedNotification()
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  if (!*(unsigned char *)(result + 8))
  {
    return mcs_updatePassword();
  }
  return result;
}

void mcs_postConnectedStateChangedNotification(uint64_t a1, int a2, int a3, const void *a4)
{
  CMBaseObjectGetDerivedStorage();
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    uint64_t v8 = Mutable;
    BOOL v9 = (const void *)*MEMORY[0x1E4F1CFD0];
    uint64_t v10 = (const void *)*MEMORY[0x1E4F1CFC8];
    if (a2) {
      uint64_t v11 = (const void *)*MEMORY[0x1E4F1CFD0];
    }
    else {
      uint64_t v11 = (const void *)*MEMORY[0x1E4F1CFC8];
    }
    CFDictionarySetValue(Mutable, @"APEndpointPlaybackSessionMCNotificationPayloadKey_IsConnected", v11);
    if (a3) {
      CMTime v12 = v9;
    }
    else {
      CMTime v12 = v10;
    }
    CFDictionarySetValue(v8, @"APEndpointPlaybackSessionMCNotificationPayloadKey_IsConnectedOnP2P", v12);
    if (a4) {
      CFDictionarySetValue(v8, @"APEndpointPlaybackSessionMCNotificationPayloadKey_EventStatus", a4);
    }
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
    CFRelease(v8);
  }
  else
  {
    APSLogErrorAt();
  }
}

uint64_t mcs_updatePassword()
{
  unsigned int v1 = 0;
  if (*(void *)(CMBaseObjectGetDerivedStorage() + 72))
  {
    APSGetFBOPropertyCString();
    unsigned int v1 = MediaControlClient_SetPassword();
    if (v1) {
      APSLogErrorAt();
    }
  }
  return v1;
}

uint64_t mcs_AuthorizeItem(const void *a1, const void *a2, const void *a3, void (*a4)(void, void, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_EndpointPlaybackSessionMC <= 30
    && (gLogCategory_EndpointPlaybackSessionMC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 8))
  {
    uint64_t v11 = 4294950554;
    if (a4) {
      a4(0, 0, 4294950554, a5);
    }
  }
  else
  {
    CFRetain(a2);
    if (a3) {
      CFRetain(a3);
    }
    CFRetain(a1);
    APSDispatchAsyncFHelper();
    return 0;
  }
  return v11;
}

uint64_t mcs_Play(const void *a1, __CFDictionary *a2, void (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  CFDictionaryRef v6 = a2;
  CFMutableDictionaryRef v14 = a2;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  value = 0;
  if (gLogCategory_EndpointPlaybackSessionMC <= 50
    && (gLogCategory_EndpointPlaybackSessionMC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(unsigned char *)(DerivedStorage + 8))
  {
    CFDictionaryGetValueIfPresent(v6, (const void *)*MEMORY[0x1E4F209B8], (const void **)&value);
    BOOL v9 = value;
    if (value)
    {
      uint64_t v10 = *(const void **)(DerivedStorage + 48);
      *(void *)(DerivedStorage + 48) = value;
    }
    else
    {
      BOOL v9 = (void *)*MEMORY[0x1E4F20AB8];
      value = v9;
      uint64_t v10 = *(const void **)(DerivedStorage + 48);
      *(void *)(DerivedStorage + 48) = v9;
      if (!v9)
      {
LABEL_10:
        if (v10)
        {
          CFRelease(v10);
          CFDictionaryRef v6 = v14;
        }
        APEndpointPlaybackSessionStatsUpdateAtPlay(*(void *)(DerivedStorage + 128), v6);
        APEndpointPlaybackSessionCreatePlayParamsWithTimesInSeconds(v6, &v14);
        CFRetain(a1);
        APSDispatchAsyncFHelper();
        return 0;
      }
    }
    CFRetain(v9);
    goto LABEL_10;
  }
  uint64_t v11 = 4294950554;
  if (a3) {
    a3(4294950554, a4);
  }
  return v11;
}

uint64_t mcs_InsertPlayQueueItem(const void *a1, __CFDictionary *a2, const void *a3, void (*a4)(uint64_t, uint64_t), uint64_t a5)
{
  CFMutableDictionaryRef v16 = a2;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  value = 0;
  if (gLogCategory_EndpointPlaybackSessionMC <= 50
    && (gLogCategory_EndpointPlaybackSessionMC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 8))
  {
    uint64_t v13 = 4294950554;
    if (a4) {
      a4(4294950554, a5);
    }
  }
  else
  {
    APEndpointPlaybackSessionCreatePlayParamsWithTimesInSeconds(a2, &v16);
    if (a3) {
      CFRetain(a3);
    }
    CFRetain(a1);
    CFDictionaryGetValueIfPresent(v16, (const void *)*MEMORY[0x1E4F209B8], (const void **)&value);
    if (!value) {
      value = (void *)*MEMORY[0x1E4F20AB8];
    }
    if (!FigCFEqual())
    {
      uint64_t v11 = value;
      CMTime v12 = *(const void **)(DerivedStorage + 48);
      *(void *)(DerivedStorage + 48) = value;
      if (v11) {
        CFRetain(v11);
      }
      if (v12) {
        CFRelease(v12);
      }
    }
    APSDispatchAsyncFHelper();
    return 0;
  }
  return v13;
}

uint64_t mcs_RemovePlayQueueItem(const void *a1, const void *a2, void (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_EndpointPlaybackSessionMC <= 50
    && (gLogCategory_EndpointPlaybackSessionMC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 8))
  {
    uint64_t v9 = 4294950554;
    if (a3) {
      a3(4294950554, a4);
    }
  }
  else
  {
    if (a2) {
      CFRetain(a2);
    }
    CFRetain(a1);
    APSDispatchAsyncFHelper();
    return 0;
  }
  return v9;
}

uint64_t mcs_Stop(const void *a1, void (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_EndpointPlaybackSessionMC <= 50
    && (gLogCategory_EndpointPlaybackSessionMC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 8))
  {
    APSLogErrorAt();
    uint64_t v7 = 4294950554;
    if (a2) {
      a2(4294950554, a3);
    }
  }
  else
  {
    CFRetain(a1);
    APSDispatchAsyncFHelper();
    return 0;
  }
  return v7;
}

uint64_t mcs_GetPlaybackInfo(const void *a1, void (*a2)(void, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_EndpointPlaybackSessionMC <= 30
    && (gLogCategory_EndpointPlaybackSessionMC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 8))
  {
    uint64_t v7 = 4294950554;
    if (a2) {
      a2(0, 4294950554, a3);
    }
  }
  else
  {
    CFRetain(a1);
    APSDispatchAsyncFHelper();
    return 0;
  }
  return v7;
}

uint64_t mcs_SeekToTime(const void *a1, CMTime *a2, const void *a3, void (*a4)(void, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_EndpointPlaybackSessionMC <= 50
    && (gLogCategory_EndpointPlaybackSessionMC != -1 || _LogCategory_Initialize()))
  {
    CMTime time = *a2;
    CMTimeGetSeconds(&time);
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 8))
  {
    uint64_t v11 = 4294950554;
    if (a4) {
      a4(0, 4294950554, a5);
    }
  }
  else
  {
    if (a3) {
      CFRetain(a3);
    }
    CFRetain(a1);
    APSDispatchAsyncFHelper();
    return 0;
  }
  return v11;
}

uint64_t mcs_SeekToDate(const void *a1, const void *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_EndpointPlaybackSessionMC <= 50
    && (gLogCategory_EndpointPlaybackSessionMC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 8))
  {
    uint64_t v10 = 4294950554;
    if (a4) {
      a4(0, 4294950554, a5);
    }
  }
  else
  {
    CFRetain(a1);
    if (a2) {
      CFRetain(a2);
    }
    APSDispatchAsyncFHelper();
    return 0;
  }
  return v10;
}

uint64_t mcs_SetRate(const void *a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_EndpointPlaybackSessionMC <= 50
    && (gLogCategory_EndpointPlaybackSessionMC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 8))
  {
    uint64_t v8 = 4294950554;
    if (a3) {
      a3(4294950554, a4);
    }
  }
  else
  {
    CFRetain(a1);
    APSDispatchAsyncFHelper();
    return 0;
  }
  return v8;
}

uint64_t mcs_GetProxiedProperty(const void *a1, const void *a2, uint64_t a3, void (*a4)(const void *, void, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_EndpointPlaybackSessionMC <= 30
    && (gLogCategory_EndpointPlaybackSessionMC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (FigCFEqual())
  {
    int Value = (const void *)FigCFDictionaryGetValue();
  }
  else
  {
    if (FigCFEqual())
    {
      uint64_t v11 = 4294954509;
      if (!a4) {
        return v11;
      }
LABEL_14:
      a4(a2, 0, v11, a5);
      return v11;
    }
    int Value = 0;
  }
  if (*(unsigned char *)(DerivedStorage + 8))
  {
    uint64_t v11 = 4294950554;
    if (!a4) {
      return v11;
    }
    goto LABEL_14;
  }
  CFRetain(a2);
  if (Value) {
    CFRetain(Value);
  }
  CFRetain(a1);
  APSDispatchAsyncFHelper();
  return 0;
}

uint64_t mcs_SetProxiedProperty(const void *a1, const void *a2, uint64_t a3, const void *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (FigCFEqual()) {
    int Value = (const void *)FigCFDictionaryGetValue();
  }
  else {
    int Value = 0;
  }
  if (gLogCategory_EndpointPlaybackSessionMC <= 30
    && (gLogCategory_EndpointPlaybackSessionMC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 8)) {
    return 4294950554;
  }
  CFRetain(a2);
  if (Value) {
    CFRetain(Value);
  }
  if (a4) {
    CFRetain(a4);
  }
  CFRetain(a1);
  APSDispatchAsyncFHelper();
  return 0;
}

uint64_t mcs_PerformRemoteAction(const void *a1, const void *a2, const void *a3, void (*a4)(uint64_t, void, uint64_t), uint64_t a5)
{
  if (*(unsigned char *)(CMBaseObjectGetDerivedStorage() + 8))
  {
    uint64_t v10 = 4294950554;
    if (a4) {
      a4(4294950554, 0, a5);
    }
  }
  else
  {
    if (a2) {
      CFRetain(a2);
    }
    if (a3) {
      CFRetain(a3);
    }
    CFRetain(a1);
    APSDispatchAsyncFHelper();
    return 0;
  }
  return v10;
}

uint64_t mcs_SetEventHandler()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_EndpointPlaybackSessionMC <= 30
    && (gLogCategory_EndpointPlaybackSessionMC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 8)) {
    return 4294950554;
  }
  APSDispatchSyncTask();
  return 0;
}

void mcs_AuthorizeItemInternal(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  if (*(unsigned char *)(CMBaseObjectGetDerivedStorage() + 8))
  {
    CFDictionaryRef v6 = 0;
    uint64_t v5 = 4294950554;
    goto LABEL_7;
  }
  uint64_t v2 = mcs_EnsureConnectedInternal(*(void *)a1);
  if (v2)
  {
    uint64_t v5 = v2;
LABEL_19:
    APSLogErrorAt();
    CFDictionaryRef v6 = 0;
    goto LABEL_7;
  }
  CFDataGetBytePtr(*(CFDataRef *)(a1 + 8));
  CFDataGetLength(*(CFDataRef *)(a1 + 8));
  FigCFStringGetCStringPtrAndBufferToFree();
  uint64_t v3 = MediaControlClient_DoAuthorize();
  if (v3)
  {
    uint64_t v5 = v3;
    goto LABEL_19;
  }
  CFStringRef v4 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x1E4F1CF80], cStr, 0x8000100u);
  uint64_t v5 = 0;
  if (v4) {
    CFDictionaryRef v6 = (__CFString *)v4;
  }
  else {
    CFDictionaryRef v6 = &stru_1F26D66A0;
  }
LABEL_7:
  uint64_t v7 = *(void (**)(void, __CFString *, uint64_t, void))(a1 + 24);
  if (v7) {
    v7(0, v6, v5, *(void *)(a1 + 32));
  }
  if (v6) {
    CFRelease(v6);
  }
  uint64_t v8 = *(const void **)(a1 + 8);
  if (v8) {
    CFRelease(v8);
  }
  uint64_t v9 = *(const void **)(a1 + 16);
  if (v9) {
    CFRelease(v9);
  }
  CFRelease(*(CFTypeRef *)a1);
  free(0);
}

uint64_t mcs_EnsureConnectedInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 8)) {
    return 4294950554;
  }
  uint64_t v3 = (void *)DerivedStorage;
  if (*(void *)(DerivedStorage + 32)) {
    return 0;
  }
  uint64_t v4 = *(void *)(DerivedStorage + 80);
  if (v4) {
    APEndpointDescriptionGetDeviceID(v4);
  }
  CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  uint64_t v6 = MediaControlClient_Create();
  if (v6)
  {
    uint64_t v39 = v6;
LABEL_85:
    APSLogErrorAt();
    return v39;
  }
  uint64_t v7 = FigCFWeakReferenceHolderCreateWithReferencedObject();
  v3[12] = v7;
  if (!v7)
  {
    APSLogErrorAt();
    return 4294950555;
  }
  MediaControlClient_SetDispatchQueue();
  MediaControlClient_SetEventHandler();
  if (v3[9])
  {
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterAddWeakListener();
  }
  uint64_t updated = mcs_updatePassword();
  if (updated)
  {
    uint64_t v39 = updated;
    goto LABEL_85;
  }
  if (!v3[10]) {
    goto LABEL_67;
  }
  uint64_t v9 = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  value = 0;
  CFTypeRef v44 = 0;
  if (!*(void *)(v9 + 32) || (uint64_t v10 = v9, !*(void *)(v9 + 80)))
  {
    APSLogErrorAt();
    int v43 = -6705;
LABEL_82:
    unsigned int v47 = v43;
    goto LABEL_62;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v5, 6, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!Mutable)
  {
    APSLogErrorAt();
    int v43 = -6728;
    goto LABEL_82;
  }
  CMTime v12 = Mutable;
  uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(v10 + 80));
  uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v14) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  CFMutableDictionaryRef v16 = *(uint64_t (**)(uint64_t, __CFString *, const __CFAllocator *, void **))(v15 + 48);
  if (!v16)
  {
    unsigned int v47 = -12782;
    goto LABEL_59;
  }
  unsigned int v17 = v16(CMBaseObject, @"Name", v5, &value);
  unsigned int v47 = v17;
  if (v17 != -12784 && v17) {
    goto LABEL_59;
  }
  if (value) {
    CFDictionarySetValue(v12, @"MediaControlClientRouteInfo_Name", value);
  }
  uint64_t v18 = APEndpointDescriptionGetCMBaseObject(*(void *)(v10 + 80));
  uint64_t v19 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v19) {
    uint64_t v20 = v19;
  }
  else {
    uint64_t v20 = 0;
  }
  long long v21 = *(uint64_t (**)(uint64_t, __CFString *, const __CFAllocator *, CFTypeRef *))(v20 + 48);
  if (!v21)
  {
    unsigned int v47 = -12782;
    goto LABEL_59;
  }
  unsigned int v22 = v21(v18, @"TransportDevice", v5, &cf);
  unsigned int v47 = v22;
  if (v22 != -12784 && v22) {
    goto LABEL_59;
  }
  if (cf) {
    CFDictionarySetValue(v12, @"MediaControlClientRouteInfo_TransportDevice", cf);
  }
  uint64_t v23 = *(void *)(v10 + 80);
  uint64_t v24 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v24) {
    uint64_t v25 = v24;
  }
  else {
    uint64_t v25 = 0;
  }
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 16);
  if (v26)
  {
    int v27 = v26(v23, 27);
    uint64_t v28 = (const void *)*MEMORY[0x1E4F1CFD0];
    uint64_t v29 = (const void *)*MEMORY[0x1E4F1CFC8];
    uint64_t v30 = (const void *)*MEMORY[0x1E4F1CFD0];
    if (v27) {
      goto LABEL_42;
    }
  }
  else
  {
    uint64_t v28 = (const void *)*MEMORY[0x1E4F1CFD0];
    uint64_t v29 = (const void *)*MEMORY[0x1E4F1CFC8];
  }
  uint64_t v30 = v29;
LABEL_42:
  CFDictionarySetValue(v12, @"MediaControlClientRouteInfo_PairingEnabled", v30);
  uint64_t v31 = APEndpointDescriptionGetCMBaseObject(*(void *)(v10 + 80));
  uint64_t v32 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v32) {
    uint64_t v33 = v32;
  }
  else {
    uint64_t v33 = 0;
  }
  uint64_t v34 = *(uint64_t (**)(uint64_t, __CFString *, const __CFAllocator *, CFTypeRef *))(v33 + 48);
  if (!v34)
  {
    unsigned int v47 = -12782;
LABEL_59:
    APSLogErrorAt();
    goto LABEL_60;
  }
  unsigned int v35 = v34(v31, @"PairingPeerPublicKey", v5, &v44);
  unsigned int v47 = v35;
  if (v35 != -12784 && v35) {
    goto LABEL_59;
  }
  if (v44) {
    CFDictionarySetValue(v12, @"MediaControlClientRouteInfo_PublicKey", v44);
  }
  uint64_t v36 = APSGetFBOPropertyInt64();
  if (v47 != -12784)
  {
    if (v47) {
      goto LABEL_59;
    }
  }
  uint64_t v37 = APSGetFBOPropertyInt64();
  if (v47 != -12784)
  {
    if (v47) {
      goto LABEL_59;
    }
  }
  if (v36 | v37) {
    CFMutableDictionaryRef v38 = v28;
  }
  else {
    CFMutableDictionaryRef v38 = v29;
  }
  CFDictionarySetValue(v12, @"MediaControlClientRouteInfo_PairPinEnabled", v38);
  MediaControlClient_SetInfo();
  unsigned int v47 = 0;
LABEL_60:
  CFRelease(v12);
  if (value) {
    CFRelease(value);
  }
LABEL_62:
  if (cf) {
    CFRelease(cf);
  }
  if (v44) {
    CFRelease(v44);
  }
  uint64_t v39 = v47;
  if (v47) {
    goto LABEL_85;
  }
LABEL_67:
  if (v3[11])
  {
    uint64_t v40 = MediaControlClient_SetConnectionInterfaceManager();
    if (v40)
    {
      uint64_t v39 = v40;
      goto LABEL_85;
    }
  }
  uint64_t v39 = MediaControlClient_EnsureConnected();
  if (v39) {
    goto LABEL_85;
  }
  int IsConnectedOnP2PInterface = MediaControlClient_IsConnectedOnP2PInterface();
  mcs_postConnectedStateChangedNotification(a1, 1, IsConnectedOnP2PInterface, 0);
  return v39;
}

void mcs_EventHandler(uint64_t a1, const __CFDictionary *a2, uint64_t a3)
{
  value = 0;
  if (!a2 || !a3)
  {
    APSLogErrorAt();
    uint64_t v4 = 0;
LABEL_38:
    uint64_t v11 = 0;
    goto LABEL_30;
  }
  uint64_t v4 = (const void *)FigCFWeakReferenceHolderCopyReferencedObject();
  if (!v4) {
    goto LABEL_38;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_EndpointPlaybackSessionMC <= 30
    && (gLogCategory_EndpointPlaybackSessionMC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 8)) {
    goto LABEL_38;
  }
  uint64_t v6 = (__CFString *)CFDictionaryGetValue(a2, @"state");
  uint64_t v7 = v6;
  if (v6 == @"disconnected") {
    goto LABEL_42;
  }
  if (!v6)
  {
LABEL_28:
    uint64_t v11 = (void *)CFRetain(a2);
    goto LABEL_29;
  }
  if (CFEqual(v6, @"disconnected"))
  {
LABEL_42:
    if (CFDictionaryGetValue(a2, @"error"))
    {
      CFNumberGetTypeID();
      Typedint Value = (const void *)CFDictionaryGetTypedValue();
      CFDictionaryGetInt64();
      if (gLogCategory_EndpointPlaybackSessionMC <= 50
        && (gLogCategory_EndpointPlaybackSessionMC != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    else
    {
      Typedint Value = 0;
    }
    mcs_postConnectedStateChangedNotification((uint64_t)v4, 0, 0, TypedValue);
    if (!v7) {
      goto LABEL_28;
    }
  }
  if (CFEqual(v7, @"playing")) {
    BOOL v9 = 1;
  }
  else {
    BOOL v9 = CFEqual(v7, @"loading") != 0;
  }
  mcs_updateIsPlayingAndPostNotification((uint64_t)v4, v9);
  if (v7 != @"playing" && !CFEqual(v7, @"playing")) {
    goto LABEL_28;
  }
  CFDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, a2);
  uint64_t v11 = MutableCopy;
  if (MutableCopy)
  {
    CMTime v12 = (const void *)*MEMORY[0x1E4F207B8];
    CFDictionaryRef v13 = (const __CFDictionary *)CFDictionaryGetValue(MutableCopy, (const void *)*MEMORY[0x1E4F207B8]);
    if (!v13)
    {
LABEL_29:
      CFRetain(v4);
      CFRetain(v11);
      APSDispatchAsyncFHelper();
      goto LABEL_30;
    }
    if (!APEndpointPlaybackSessionCreatePlayPlaybackInfoTimesInCMTime(v13, (__CFDictionary **)&value))
    {
      CFDictionarySetValue((CFMutableDictionaryRef)v11, v12, value);
      goto LABEL_29;
    }
  }
  APSLogErrorAt();
LABEL_30:
  if (value) {
    CFRelease(value);
  }
  if (v11) {
    CFRelease(v11);
  }
  if (v4) {
    CFRelease(v4);
  }
}

void mcs_updateIsPlayingAndPostNotification(uint64_t a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned __int8 *)(DerivedStorage + 57) != a2)
  {
    uint64_t v5 = DerivedStorage;
    APEndpointPlaybackSessionUpdateNowPlayingTransaction(a1, a2, &gLogCategory_EndpointPlaybackSessionMC, (const void **)(DerivedStorage + 64));
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    uint64_t v7 = Mutable;
    uint64_t v8 = (const void **)MEMORY[0x1E4F1CFC8];
    if (a2) {
      uint64_t v8 = (const void **)MEMORY[0x1E4F1CFD0];
    }
    CFDictionarySetValue(Mutable, @"Playing", *v8);
    *(unsigned char *)(v5 + 57) = a2;
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
    CFRelease(v7);
  }
}

void mcs_invokeEventHandlerCallback(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_EndpointPlaybackSessionMC <= 30
    && (gLogCategory_EndpointPlaybackSessionMC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(unsigned char *)(DerivedStorage + 8))
  {
    uint64_t v3 = *(void (**)(void, void, void, void))(DerivedStorage + 104);
    if (v3) {
      v3(*(void *)a1, *(void *)(a1 + 8), *(void *)(DerivedStorage + 112), *(void *)(DerivedStorage + 120));
    }
  }
  CFRelease(*(CFTypeRef *)(a1 + 8));
  uint64_t v4 = *(const void **)a1;
  CFRelease(v4);
}

void mcs_PlayInternal(uint64_t *a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  uint64_t v15 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 8))
  {
    unsigned int v16 = -16742;
  }
  else
  {
    uint64_t v3 = DerivedStorage;
    unsigned int v16 = mcs_EnsureConnectedInternal(*a1);
    if (!v16)
    {
      if (!*(void *)v3)
      {
        SNPrintF();
        *(void *)uint64_t v3 = os_transaction_create();
      }
      CFStringGetTypeID();
      CFDictionaryGetTypedValue();
      if (v16 || (CFStringCopyUTF8CString(), !v15))
      {
        unsigned int v4 = MediaControlClient_DoPlayRemote();
        unsigned int v16 = v4;
        if (!v4)
        {
LABEL_12:
          *(unsigned char *)(v3 + 136) = 1;
LABEL_25:
          unsigned int v16 = 0;
          *(unsigned char *)(v3 + 56) = 1;
          CMNotificationCenterGetDefaultLocalCenter();
          FigDispatchAsyncPostNotification();
          mcs_updateIsPlayingAndPostNotification(*a1, 1);
          goto LABEL_26;
        }
      }
      else
      {
        unsigned int v16 = MediaControlClient_DoPlayLocal();
        free(v15);
        unsigned int v4 = v16;
        if (!v16) {
          goto LABEL_12;
        }
      }
      if (gLogCategory_EndpointPlaybackSessionMC <= 90)
      {
        if (gLogCategory_EndpointPlaybackSessionMC != -1 || (v5 = _LogCategory_Initialize(), unsigned int v4 = v16, v5))
        {
          LogPrintF();
          unsigned int v4 = v16;
        }
      }
      if (v4 == 200453 && *(unsigned char *)(v3 + 136))
      {
        long long v11 = *(_OWORD *)a1;
        uint64_t v13 = 0;
        uint64_t v14 = 0;
        uint64_t v12 = 0;
        uint64_t v6 = (const void *)v11;
        if (gLogCategory_EndpointPlaybackSessionMC <= 50)
        {
          if (gLogCategory_EndpointPlaybackSessionMC != -1
            || (v7 = _LogCategory_Initialize(), uint64_t v6 = (const void *)*a1, v7))
          {
            LogPrintF();
            uint64_t v6 = (const void *)*a1;
          }
        }
        if (v6) {
          CFRetain(v6);
        }
        uint64_t v8 = (const void *)a1[1];
        if (v8) {
          CFRetain(v8);
        }
        mcs_InsertPlayQueueItemInternal((uint64_t)&v11);
      }
      goto LABEL_25;
    }
    APSLogErrorAt();
  }
LABEL_26:
  BOOL v9 = (void (*)(void, uint64_t))a1[2];
  if (v9) {
    v9(v16, a1[3]);
  }
  uint64_t v10 = (const void *)a1[1];
  if (v10) {
    CFRelease(v10);
  }
  CFRelease((CFTypeRef)*a1);
}

void mcs_InsertPlayQueueItemInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 8))
  {
    uint64_t inserted = 4294950554;
  }
  else if (*(void *)(DerivedStorage + 32))
  {
    uint64_t inserted = MediaControlClient_DoInsertPlaylistItem();
    if (!inserted) {
      goto LABEL_4;
    }
    APSLogErrorAt();
  }
  else
  {
    uint64_t inserted = 4294950553;
  }
  if (gLogCategory_EndpointPlaybackSessionMC <= 90
    && (gLogCategory_EndpointPlaybackSessionMC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_4:
  unsigned int v4 = *(void (**)(uint64_t, void))(a1 + 24);
  if (v4) {
    v4(inserted, *(void *)(a1 + 32));
  }
  CFRelease(*(CFTypeRef *)(a1 + 8));
  int v5 = *(const void **)(a1 + 16);
  if (v5) {
    CFRelease(v5);
  }
  uint64_t v6 = *(const void **)a1;
  CFRelease(v6);
}

void mcs_RemovePlayQueueItemInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 8))
  {
    uint64_t v3 = 4294950554;
  }
  else if (*(void *)(DerivedStorage + 32))
  {
    uint64_t v3 = MediaControlClient_DoRemovePlaylistItem();
    if (v3) {
      APSLogErrorAt();
    }
  }
  else
  {
    uint64_t v3 = 4294950553;
  }
  unsigned int v4 = *(void (**)(uint64_t, void))(a1 + 16);
  if (v4) {
    v4(v3, *(void *)(a1 + 24));
  }
  int v5 = *(const void **)(a1 + 8);
  if (v5) {
    CFRelease(v5);
  }
  uint64_t v6 = *(const void **)a1;
  CFRelease(v6);
}

void mcs_StopInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 8))
  {
    APSLogErrorAt();
    uint64_t v4 = 4294950554;
  }
  else
  {
    uint64_t v3 = DerivedStorage;
    if (*(void *)(DerivedStorage + 32)) {
      uint64_t v4 = MediaControlClient_DoStop();
    }
    else {
      uint64_t v4 = 0;
    }
    *(unsigned char *)(v3 + 56) = 0;
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
  }
  int v5 = *(void (**)(uint64_t, void))(a1 + 8);
  if (v5) {
    v5(v4, *(void *)(a1 + 16));
  }
  uint64_t v6 = *(const void **)a1;
  CFRelease(v6);
}

void mcs_GetPlaybackInfoInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef v6 = 0;
  CFTypeRef cf = 0;
  if (*(unsigned char *)(DerivedStorage + 8))
  {
    uint64_t PlayPlaybackInfoTimesInCMTime = 4294950554;
  }
  else if (*(void *)(DerivedStorage + 32))
  {
    uint64_t v3 = MediaControlClient_CopyPlaybackInfo();
    if (v3)
    {
      uint64_t PlayPlaybackInfoTimesInCMTime = v3;
    }
    else
    {
      uint64_t PlayPlaybackInfoTimesInCMTime = APEndpointPlaybackSessionCreatePlayPlaybackInfoTimesInCMTime((CFDictionaryRef)cf, (__CFDictionary **)&v6);
      if (!PlayPlaybackInfoTimesInCMTime) {
        goto LABEL_5;
      }
    }
    APSLogErrorAt();
  }
  else
  {
    uint64_t PlayPlaybackInfoTimesInCMTime = 4294950553;
  }
LABEL_5:
  int v5 = *(void (**)(CFTypeRef, uint64_t, void))(a1 + 8);
  if (v5) {
    v5(v6, PlayPlaybackInfoTimesInCMTime, *(void *)(a1 + 16));
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v6) {
    CFRelease(v6);
  }
  CFRelease(*(CFTypeRef *)a1);
}

void mcs_SeekToTimeInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CMTime v6 = *(CMTime *)(a1 + 8);
  CMTimeGetSeconds(&v6);
  if (*(unsigned char *)(DerivedStorage + 8))
  {
    uint64_t v3 = 4294950554;
  }
  else if (*(void *)(DerivedStorage + 32))
  {
    uint64_t v3 = MediaControlClient_DoScrubSet();
    if (v3) {
      APSLogErrorAt();
    }
  }
  else
  {
    uint64_t v3 = 4294950553;
  }
  uint64_t v4 = *(void (**)(void, uint64_t, void))(a1 + 40);
  if (v4) {
    v4(0, v3, *(void *)(a1 + 48));
  }
  int v5 = *(const void **)(a1 + 32);
  if (v5) {
    CFRelease(v5);
  }
  CFRelease(*(CFTypeRef *)a1);
}

void mcs_SetProxiedPropertyInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 8))
  {
    uint64_t v3 = 4294950554;
  }
  else if (*(void *)(DerivedStorage + 32))
  {
    uint64_t v3 = MediaControlClient_SetProperty();
    if (v3) {
      APSLogErrorAt();
    }
  }
  else
  {
    uint64_t v3 = 4294950553;
  }
  uint64_t v4 = *(void (**)(void, uint64_t, void))(a1 + 32);
  if (v4) {
    v4(0, v3, *(void *)(a1 + 40));
  }
  CFRelease(*(CFTypeRef *)(a1 + 8));
  int v5 = *(const void **)(a1 + 16);
  if (v5) {
    CFRelease(v5);
  }
  CMTime v6 = *(const void **)(a1 + 24);
  if (v6) {
    CFRelease(v6);
  }
  int v7 = *(const void **)a1;
  CFRelease(v7);
}

void mcs_SetRateInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 8))
  {
    uint64_t v3 = 4294950554;
  }
  else if (*(void *)(DerivedStorage + 32))
  {
    uint64_t v3 = MediaControlClient_DoRate();
    if (v3) {
      APSLogErrorAt();
    }
    else {
      mcs_updateIsPlayingAndPostNotification(*(void *)a1, *(float *)(a1 + 8) != 0.0);
    }
  }
  else
  {
    uint64_t v3 = 4294950553;
  }
  uint64_t v4 = *(void (**)(uint64_t, void))(a1 + 16);
  if (v4) {
    v4(v3, *(void *)(a1 + 24));
  }
  int v5 = *(const void **)a1;
  CFRelease(v5);
}

void mcs_GetProxiedPropertyInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 8))
  {
    uint64_t v3 = 0;
    int v6 = -16742;
  }
  else
  {
    if (*(void *)(DerivedStorage + 32))
    {
      uint64_t v3 = (const void *)MediaControlClient_CopyProperty();
      unsigned int v7 = 0;
      goto LABEL_4;
    }
    uint64_t v3 = 0;
    int v6 = -16743;
  }
  unsigned int v7 = v6;
LABEL_4:
  uint64_t v4 = *(void (**)(void, const void *, void, void))(a1 + 24);
  if (v4) {
    v4(*(void *)(a1 + 8), v3, v7, *(void *)(a1 + 32));
  }
  if (v3) {
    CFRelease(v3);
  }
  CFRelease(*(CFTypeRef *)(a1 + 8));
  int v5 = *(const void **)(a1 + 16);
  if (v5) {
    CFRelease(v5);
  }
  CFRelease(*(CFTypeRef *)a1);
}

void mcs_PerformRemoteActionInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  unsigned int v8 = 0;
  if (!*(unsigned char *)(DerivedStorage + 8))
  {
    if (*(void *)(DerivedStorage + 32))
    {
      unsigned int v3 = MediaControlClient_DoAction();
      if (v3)
      {
        unsigned int v7 = v3;
        APSLogErrorAt();
        unsigned int v8 = v7;
      }
    }
  }
  uint64_t v4 = *(void (**)(void, void, void))(a1 + 24);
  if (v4) {
    v4(v8, 0, *(void *)(a1 + 32));
  }
  int v5 = *(const void **)(a1 + 8);
  if (v5) {
    CFRelease(v5);
  }
  int v6 = *(const void **)(a1 + 16);
  if (v6) {
    CFRelease(v6);
  }
  CFRelease(*(CFTypeRef *)a1);
}

uint64_t mcs_SetEventHandlerInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 8)) {
    return 4294950554;
  }
  *(_OWORD *)(DerivedStorage + 104) = *(_OWORD *)(a1 + 8);
  unsigned int v3 = *(const void **)(a1 + 24);
  if (v3)
  {
    uint64_t v4 = *(const void **)(DerivedStorage + 120);
    *(void *)(DerivedStorage + 120) = v3;
    CFRetain(v3);
    if (v4) {
      CFRelease(v4);
    }
  }
  return 0;
}

uint64_t AirPlayReceiverServicesServerStart()
{
  if (!FigGetCFPreferenceNumberWithDefault()) {
    return 0;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F4A230], @"com.apple.airplay.receiverservices");
  uint64_t v1 = APSXPCServerStart();
  if (v1)
  {
    APSLogErrorAt();
    if (!Mutable) {
      return v1;
    }
    goto LABEL_6;
  }
  if (IsAppleInternalBuild()) {
    APSXPCServerAddCommandHandler();
  }
  if (Mutable) {
LABEL_6:
  }
    CFRelease(Mutable);
  return v1;
}

uint64_t handleTestEchoCommand(int a1, CFTypeRef cf, void *a3)
{
  if (cf) {
    CFTypeRef v4 = CFRetain(cf);
  }
  else {
    CFTypeRef v4 = 0;
  }
  *a3 = v4;
  return 0;
}

uint64_t AirPlayXPCServicesServerStart()
{
  uint64_t v0 = AirPlayReceiverServicesServerStart();
  if (v0)
  {
    uint64_t v4 = v0;
LABEL_13:
    APSLogErrorAt();
    return v4;
  }
  uint64_t v1 = AirPlayDiscoveryBrokerXPCServicesServerStart();
  if (v1)
  {
    uint64_t v4 = v1;
    goto LABEL_13;
  }
  uint64_t started = FigBufferedAirPlayGlobalRoutingRegistryStartServer();
  if (started)
  {
    uint64_t v4 = started;
    goto LABEL_13;
  }
  uint64_t v3 = APCarPlayAVVCServerInit();
  if (v3)
  {
    uint64_t v4 = v3;
    goto LABEL_13;
  }
  if (!MEMORY[0x1D25E8620]())
  {
    APDemoManagerStart();
    APSRegisterReceiverAppLauncher();
  }
  return 0;
}

uint64_t AirPlayDiscoveryBrokerXPCServicesServerStart()
{
  if (!APSSettingsIsFeatureEnabled() || !FigGetCFPreferenceNumberWithDefault()) {
    return 0;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F4A230], @"com.apple.airplay.discoverybroker.allow");
  uint64_t v1 = APSXPCServerStart();
  if (v1)
  {
    APSLogErrorAt();
    if (!Mutable) {
      return v1;
    }
    goto LABEL_7;
  }
  if (IsAppleInternalBuild()) {
    APSXPCServerAddCommandHandler();
  }
  if (Mutable) {
LABEL_7:
  }
    CFRelease(Mutable);
  return v1;
}

uint64_t AirPlayStartAlwaysOnModules()
{
  APDemoManagerStart();
  return APSRegisterReceiverAppLauncher();
}

uint64_t AirPlayXPCServicesStart()
{
  int v0 = MEMORY[0x1D25E8620]();
  int IsAirplayd = FigServer_IsAirplayd();
  int v2 = IsAirplayd;
  if (v0 && !IsAirplayd) {
    return 0;
  }
  uint64_t started = FigEndpointStreamAudioEngineStartServer();
  if (started)
  {
    Shareduint64_t Instance = started;
LABEL_47:
    APSLogErrorAt();
    if (gLogCategory_AirPlayServices > 90
      || gLogCategory_AirPlayServices == -1 && !_LogCategory_Initialize())
    {
      return SharedInstance;
    }
    goto LABEL_71;
  }
  uint64_t v4 = FigSampleBufferConsumerStartServer();
  if (v4)
  {
    Shareduint64_t Instance = v4;
    APSLogErrorAt();
    if (gLogCategory_AirPlayServices > 90
      || gLogCategory_AirPlayServices == -1 && !_LogCategory_Initialize())
    {
      return SharedInstance;
    }
LABEL_71:
    LogPrintF();
    return SharedInstance;
  }
  uint64_t v5 = FigEndpointPlaybackSessionStartServer();
  if (v5)
  {
    Shareduint64_t Instance = v5;
    APSLogErrorAt();
    if (gLogCategory_AirPlayServices > 90
      || gLogCategory_AirPlayServices == -1 && !_LogCategory_Initialize())
    {
      return SharedInstance;
    }
    goto LABEL_71;
  }
  uint64_t v6 = FigEndpointRemoteControlSessionStartServer();
  if (v6)
  {
    Shareduint64_t Instance = v6;
    goto LABEL_47;
  }
  uint64_t v7 = FigEndpointStreamStartServer();
  if (v7)
  {
    Shareduint64_t Instance = v7;
    APSLogErrorAt();
    if (gLogCategory_AirPlayServices > 90
      || gLogCategory_AirPlayServices == -1 && !_LogCategory_Initialize())
    {
      return SharedInstance;
    }
    goto LABEL_71;
  }
  uint64_t v8 = AirPlayDiscoveryBrokerXPCServicesServerStart();
  if (v8)
  {
    Shareduint64_t Instance = v8;
    APSLogErrorAt();
    if (gLogCategory_AirPlayServices > 90
      || gLogCategory_AirPlayServices == -1 && !_LogCategory_Initialize())
    {
      return SharedInstance;
    }
    goto LABEL_71;
  }
  uint64_t v9 = FigBufferedAirPlayGlobalRoutingRegistryStartServer();
  if (v9)
  {
    Shareduint64_t Instance = v9;
    APSLogErrorAt();
    if (gLogCategory_AirPlayServices > 90
      || gLogCategory_AirPlayServices == -1 && !_LogCategory_Initialize())
    {
      return SharedInstance;
    }
    goto LABEL_71;
  }
  uint64_t v10 = FigClusterSynchronizationManager_OneTimeInitialization();
  if (v10)
  {
    Shareduint64_t Instance = v10;
    APSLogErrorAt();
    if (gLogCategory_AirPlayServices > 90
      || gLogCategory_AirPlayServices == -1 && !_LogCategory_Initialize())
    {
      return SharedInstance;
    }
    goto LABEL_71;
  }
  if (MTAudioProcessingTapServerStart()
    && gLogCategory_AirPlayServices <= 90
    && (gLogCategory_AirPlayServices != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v11 = APCarPlayAVVCServerInit();
  if (v11)
  {
    Shareduint64_t Instance = v11;
LABEL_65:
    APSLogErrorAt();
    return SharedInstance;
  }
  uint64_t v12 = AirPlayStartEndpointXPCService();
  if (v12)
  {
    Shareduint64_t Instance = v12;
    goto LABEL_65;
  }
  uint64_t v13 = AirPlayStartEndpointManagerXPCServiceIfNeeded();
  if (v13)
  {
    Shareduint64_t Instance = v13;
    goto LABEL_65;
  }
  uint64_t v14 = AirPlayReceiverServicesServerStart();
  if (v14)
  {
    Shareduint64_t Instance = v14;
    APSLogErrorAt();
    if (gLogCategory_AirPlayServices > 90
      || gLogCategory_AirPlayServices == -1 && !_LogCategory_Initialize())
    {
      return SharedInstance;
    }
    goto LABEL_71;
  }
  uint64_t v15 = AirPlayAutoconnectServicesServerStart();
  if (v15)
  {
    Shareduint64_t Instance = v15;
    APSLogErrorAt();
    if (gLogCategory_AirPlayServices > 90
      || gLogCategory_AirPlayServices == -1 && !_LogCategory_Initialize())
    {
      return SharedInstance;
    }
    goto LABEL_71;
  }
  if (v2)
  {
    if (gLogCategory_AirPlayServices <= 50
      && (gLogCategory_AirPlayServices != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (APAirPlayAgentServicesClientSendCommand()
      && gLogCategory_AirPlayServices <= 90
      && (gLogCategory_AirPlayServices != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  if (!IsAppleTV()) {
    return 0;
  }
  Shareduint64_t Instance = APSLocalAudioCapabilityMonitorGetSharedInstance();
  if (SharedInstance)
  {
    if (gLogCategory_AirPlayServices <= 90
      && (gLogCategory_AirPlayServices != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return 0;
  }
  return SharedInstance;
}

uint64_t AirPlayStartEndpointManagerXPCServiceIfNeeded()
{
  uint64_t v6 = 0;
  value = 0;
  uint64_t v5 = 0;
  if (!FigServer_IsAirplayd()) {
    return 0;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 0;
  }
  uint64_t v1 = Mutable;
  uint64_t v2 = APGetEndpointManager(&value);
  if (v2)
  {
    uint64_t started = v2;
    APSLogErrorAt();
  }
  else
  {
    CFDictionarySetValue(v1, (const void *)*MEMORY[0x1E4F20638], value);
    APGetEndpointManagerCarPlay(&v6);
    FigCFDictionarySetValue();
    SPGetEndpointManager(&v5);
    FigCFDictionarySetValue();
    FigEndpointManagerForNeroGetShared();
    FigCFDictionarySetValue();
    uint64_t started = FigEndpointManagerStartServerEx();
    if (started)
    {
      APSLogErrorAt();
      if (gLogCategory_AirPlayServices <= 90
        && (gLogCategory_AirPlayServices != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
  }
  CFRelease(v1);
  return started;
}

uint64_t AirPlayAutoconnectServicesServerStart()
{
  if (!FigGetCFPreferenceNumberWithDefault()) {
    return 0;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F4A230], @"com.apple.airplay.autoconnect.services.allow");
  uint64_t v1 = APSXPCServerStart();
  if (v1)
  {
    APSLogErrorAt();
    if (!Mutable) {
      return v1;
    }
    goto LABEL_6;
  }
  if (IsAppleInternalBuild()) {
    APSXPCServerAddCommandHandler();
  }
  if (Mutable) {
LABEL_6:
  }
    CFRelease(Mutable);
  return v1;
}

uint64_t AirPlayStartServicesInMXProcess()
{
  uint64_t v0 = AirPlayXPCServicesStart();
  if (v0)
  {
    uint64_t started = v0;
    APSLogErrorAt();
  }
  else
  {
    APDemoManagerStart();
    if (MEMORY[0x1D25E8620]() && (uint64_t v1 = APAirPlayAgentServicesServerStart(), v1))
    {
      uint64_t started = v1;
      if (gLogCategory_AirPlayServices <= 90
        && (gLogCategory_AirPlayServices != -1 || _LogCategory_Initialize()))
      {
        goto LABEL_12;
      }
    }
    else
    {
      APSRegisterReceiverAppLauncher();
      uint64_t started = SPHubbedDevicesProviderStartService(0);
      if (started
        && gLogCategory_AirPlayServices <= 90
        && (gLogCategory_AirPlayServices != -1 || _LogCategory_Initialize()))
      {
LABEL_12:
        LogPrintF();
      }
    }
  }
  return started;
}

uint64_t AirPlayStartEndpointXPCService()
{
  int v0 = MEMORY[0x1D25E8620]();
  int IsAirplayd = FigServer_IsAirplayd();
  uint64_t started = 0;
  if (v0)
  {
    if (IsAirplayd)
    {
      uint64_t started = FigEndpointStartServerEx();
      if (started)
      {
        APSLogErrorAt();
        if (gLogCategory_AirPlayServices <= 90
          && (gLogCategory_AirPlayServices != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
    }
  }
  return started;
}

uint64_t APAudioSourceCompressionCreate(uint64_t a1, const void *a2, uint64_t a3, void *a4)
{
  if (a2 && a3 && a4)
  {
    FigEndpointAudioSourceGetClassID();
    uint64_t v7 = CMDerivedObjectCreate();
    if (v7)
    {
      uint64_t v11 = v7;
      APSLogErrorAt();
    }
    else
    {
      uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
      uint64_t v9 = *(void *)(a3 + 32);
      long long v10 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)(DerivedStorage + 8) = *(_OWORD *)a3;
      *(_OWORD *)(DerivedStorage + 24) = v10;
      *(void *)(DerivedStorage + 40) = v9;
      *(void *)(DerivedStorage + 48) = CFRetain(a2);
      *(void *)(DerivedStorage + 136) = 0;
      *(_DWORD *)(DerivedStorage + 144) = -1;
      *(unsigned char *)(DerivedStorage + 148) = 0;
      if (gLogCategory_APAudioSourceCompression <= 30
        && (gLogCategory_APAudioSourceCompression != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v11 = 0;
      *a4 = 0;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294950525;
  }
  return v11;
}

uint64_t compsource_Invalidate()
{
  uint64_t DerivedStorage = (unsigned char *)CMBaseObjectGetDerivedStorage();
  if (!*DerivedStorage)
  {
    uint64_t v1 = DerivedStorage;
    if (gLogCategory_APAudioSourceCompression <= 30
      && (gLogCategory_APAudioSourceCompression != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    unsigned char *v1 = 1;
    compsource_ensureAudioConverterDestroyed();
    uint64_t v2 = (const void *)*((void *)v1 + 6);
    if (v2)
    {
      CFRelease(v2);
      *((void *)v1 + 6) = 0;
    }
  }
  return 0;
}

__CFString *compsource_CopyDebugDescription(uint64_t a1)
{
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppendFormat(Mutable, 0, @"<APAudioSourceCompression %p>", a1);
  return Mutable;
}

uint64_t compsource_CopyProperty(uint64_t a1, const void *a2, const __CFAllocator *a3, CFNumberRef *a4)
{
  uint64_t DerivedStorage = (AudioConverterRef *)CMBaseObjectGetDerivedStorage();
  if (CFEqual(a2, @"PacketSizeLimit"))
  {
    CFNumberRef v8 = CFNumberCreate(a3, kCFNumberSInt64Type, DerivedStorage + 12);
    *a4 = v8;
    if (!v8) {
      goto LABEL_21;
    }
    return 0;
  }
  if (CFEqual(a2, @"VBRBitRate"))
  {
    CFNumberRef v9 = CFNumberCreate(a3, kCFNumberSInt64Type, DerivedStorage + 17);
    *a4 = v9;
    if (!v9) {
      goto LABEL_21;
    }
    return 0;
  }
  if (CFEqual(a2, @"AlgorithmicLatency"))
  {
    uint64_t outPropertyData = 0;
    long long v10 = DerivedStorage[13];
    if (!v10)
    {
      APSLogErrorAt();
      return 4294950524;
    }
    UInt32 ioPropertyDataSize = 8;
    uint64_t Property = AudioConverterGetProperty(v10, 0x7072696Du, &ioPropertyDataSize, &outPropertyData);
    if (!Property)
    {
      CFNumberRef v12 = CFNumberCreate(a3, kCFNumberSInt32Type, &outPropertyData);
      *a4 = v12;
      if (!v12) {
        goto LABEL_21;
      }
      return 0;
    }
    uint64_t v16 = Property;
LABEL_20:
    APSLogErrorAt();
    return v16;
  }
  if (!CFEqual(a2, @"MaximumOutputPacketSize")) {
    return 4294954512;
  }
  UInt32 ioPropertyDataSize = 4;
  LODWORD(outPropertyData) = 0;
  uint64_t v13 = AudioConverterGetProperty(DerivedStorage[13], 0x786F7073u, &ioPropertyDataSize, &outPropertyData);
  if (v13)
  {
    uint64_t v16 = v13;
    goto LABEL_20;
  }
  CFNumberRef v14 = CFNumberCreate(a3, kCFNumberSInt32Type, &outPropertyData);
  *a4 = v14;
  if (v14) {
    return 0;
  }
LABEL_21:
  APSLogErrorAt();
  return 4294950526;
}

uint64_t compsource_SetProperty(uint64_t a1, const void *a2, const void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!CFEqual(a2, @"PacketSizeLimit"))
  {
    if (CFEqual(a2, @"VBRBitRate"))
    {
      unsigned int v9 = ASBDToAPAudioFormat();
      if (!v9)
      {
        if (APAudioFormatSupportsVBR())
        {
          *(void *)(DerivedStorage + 136) = CFGetInt64();
          return v9;
        }
        if (gLogCategory_APAudioSourceCompression <= 50
          && (gLogCategory_APAudioSourceCompression != -1 || _LogCategory_Initialize()))
        {
          goto LABEL_40;
        }
        return v9;
      }
LABEL_49:
      APSLogErrorAt();
      return v9;
    }
    if (CFEqual(a2, @"CodecQuality"))
    {
      unsigned int v9 = ASBDToAPAudioFormat();
      if (v9) {
        goto LABEL_49;
      }
      if (!APAudioFormatSupportsVBR())
      {
        if (gLogCategory_APAudioSourceCompression <= 50
          && (gLogCategory_APAudioSourceCompression != -1 || _LogCategory_Initialize()))
        {
          goto LABEL_40;
        }
        return v9;
      }
      if (CFEqual(a3, @"CodecQualityMode_Max"))
      {
        int v6 = 127;
LABEL_37:
        *(_DWORD *)(DerivedStorage + 144) = v6;
        return v9;
      }
      if (CFEqual(a3, @"CodecQualityMode_High"))
      {
        int v6 = 96;
        goto LABEL_37;
      }
      if (CFEqual(a3, @"CodecQualityMode_Medium"))
      {
        int v6 = 64;
        goto LABEL_37;
      }
      if (CFEqual(a3, @"CodecQualityMode_Low"))
      {
        int v6 = 32;
        goto LABEL_37;
      }
      if (CFEqual(a3, @"CodecQualityMode_Min"))
      {
        *(_DWORD *)(DerivedStorage + 144) = 0;
        return v9;
      }
      *(_DWORD *)(DerivedStorage + 144) = -1;
      if (gLogCategory_APAudioSourceCompression <= 50
        && (gLogCategory_APAudioSourceCompression != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      return -16771;
    }
    else
    {
      return -12784;
    }
  }
  unsigned int v9 = ASBDToAPAudioFormat();
  if (v9) {
    goto LABEL_49;
  }
  if (APAudioFormatSupportsVBR())
  {
    *(void *)(DerivedStorage + 96) = CFGetInt64();
    return v9;
  }
  if (gLogCategory_APAudioSourceCompression <= 50
    && (gLogCategory_APAudioSourceCompression != -1 || _LogCategory_Initialize()))
  {
LABEL_40:
    LogPrintF();
  }
  return v9;
}

void compsource_ensureAudioConverterDestroyed()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v1 = *(OpaqueAudioConverter **)(DerivedStorage + 104);
  if (v1)
  {
    AudioConverterDispose(v1);
    *(void *)(DerivedStorage + 104) = 0;
  }
  *(void *)(DerivedStorage + 88) = 0;
  *(_OWORD *)(DerivedStorage + 72) = 0u;
  *(_OWORD *)(DerivedStorage + 56) = 0u;
  if (*(void *)(DerivedStorage + 112))
  {
    CFAllocatorRef DefaultAirPlayMallocZoneCFAllocator = (const __CFAllocator *)APSAllocatorGetDefaultAirPlayMallocZoneCFAllocator();
    CFAllocatorDeallocate(DefaultAirPlayMallocZoneCFAllocator, *(void **)(DerivedStorage + 112));
    *(void *)(DerivedStorage + 112) = 0;
  }
  *(void *)(DerivedStorage + 120) = 0;
}

uint64_t compsource_Resume()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioSourceCompression <= 30
    && (gLogCategory_APAudioSourceCompression != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v1 = CMBaseObjectGetDerivedStorage();
  uint64_t v29 = 0;
  cf[0] = 0;
  cf[1] = 0;
  uint64_t v27 = 0;
  uint64_t v2 = (AudioConverterRef *)(v1 + 104);
  if (!*(void *)(v1 + 104))
  {
    uint64_t v3 = v1;
    uint64_t v4 = *(void *)(v1 + 48);
    uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v5) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = 0;
    }
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 96);
    if (!v7)
    {
      uint64_t v13 = 4294954514;
LABEL_15:
      APSLogErrorAt();
      goto LABEL_48;
    }
    uint64_t v8 = v7(v4, v3 + 56);
    if (v8)
    {
      uint64_t v13 = v8;
      goto LABEL_15;
    }
    uint64_t v9 = AudioConverterNew((const AudioStreamBasicDescription *)(v3 + 56), (const AudioStreamBasicDescription *)(v3 + 8), v2);
    if (v9)
    {
      uint64_t v13 = v9;
      goto LABEL_15;
    }
    uint64_t CMBaseObject = FigEndpointAudioSourceGetCMBaseObject();
    uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v11) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    CFNumberRef v14 = *(void (**)(uint64_t, void, void, CFTypeRef *))(v12 + 48);
    if (v14)
    {
      v14(CMBaseObject, *MEMORY[0x1E4F203B0], 0, cf);
      if (cf[0])
      {
        int RichestDecodableFormatAndChannelLayout = CMAudioFormatDescriptionGetRichestDecodableFormatAndChannelLayout();
        if (!v29 || RichestDecodableFormatAndChannelLayout)
        {
          if (RichestDecodableFormatAndChannelLayout
            && gLogCategory_APAudioSourceCompression <= 90
            && (gLogCategory_APAudioSourceCompression != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
        }
        else
        {
          memset(v26, 0, sizeof(v26));
          LODWORD(v26[0]) = *v29;
          uint64_t v16 = AudioConverterSetProperty(*v2, 0x69636C20u, 0x20u, v26);
          if (v16)
          {
            uint64_t v13 = v16;
            goto LABEL_15;
          }
          uint64_t v17 = AudioConverterSetProperty(*v2, 0x6F636C20u, 0x20u, v26);
          if (v17)
          {
            uint64_t v13 = v17;
            goto LABEL_15;
          }
        }
      }
    }
    if (*(void *)(v3 + 96))
    {
      LODWORD(v26[0]) = *(void *)(v3 + 96);
      uint64_t v18 = AudioConverterSetProperty(*v2, 0x70616B6Cu, 4u, v26);
      if (v18)
      {
        uint64_t v13 = v18;
        goto LABEL_15;
      }
    }
    if (*(void *)(v3 + 136))
    {
      LODWORD(v26[0]) = *(void *)(v3 + 136);
      uint64_t v19 = AudioConverterSetProperty(*v2, 0x76627262u, 4u, v26);
      if (v19)
      {
        uint64_t v13 = v19;
        goto LABEL_15;
      }
      if (gLogCategory_APAudioSourceCompression <= 50
        && (gLogCategory_APAudioSourceCompression != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    if (*(_DWORD *)(v3 + 144) != -1)
    {
      LODWORD(v26[0]) = *(_DWORD *)(v3 + 144);
      uint64_t v20 = AudioConverterSetProperty(*v2, 0x63647175u, 4u, v26);
      if (v20)
      {
        uint64_t v13 = v20;
        goto LABEL_15;
      }
      if (gLogCategory_APAudioSourceCompression <= 50
        && (gLogCategory_APAudioSourceCompression != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    if (gLogCategory_APAudioSourceCompression <= 50
      && (gLogCategory_APAudioSourceCompression != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  uint64_t v13 = 0;
LABEL_48:
  if (cf[0]) {
    CFRelease(cf[0]);
  }
  if (v13) {
    goto LABEL_58;
  }
  uint64_t v21 = *(void *)(DerivedStorage + 48);
  uint64_t v22 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v22) {
    uint64_t v23 = v22;
  }
  else {
    uint64_t v23 = 0;
  }
  uint64_t v24 = *(uint64_t (**)(uint64_t))(v23 + 8);
  if (!v24)
  {
    uint64_t v13 = 4294954514;
    goto LABEL_58;
  }
  uint64_t v13 = v24(v21);
  if (v13)
  {
LABEL_58:
    APSLogErrorAt();
    return v13;
  }
  *(_DWORD *)(DerivedStorage + 128) = 0;
  return v13;
}

uint64_t compsource_Suspend()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioSourceCompression <= 30
    && (gLogCategory_APAudioSourceCompression != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v1 = *(void *)(DerivedStorage + 48);
  uint64_t v2 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void (**)(uint64_t))(v3 + 16);
  if (v4) {
    v4(v1);
  }
  compsource_ensureAudioConverterDestroyed();
  return 0;
}

uint64_t compsource_Flush()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioSourceCompression <= 30
    && (gLogCategory_APAudioSourceCompression != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v1 = *(OpaqueAudioConverter **)(DerivedStorage + 104);
  if (v1)
  {
    uint64_t v2 = AudioConverterReset(v1);
    if (v2)
    {
      uint64_t v7 = v2;
      goto LABEL_14;
    }
  }
  uint64_t v3 = *(void *)(DerivedStorage + 48);
  uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v5 + 24);
  if (!v6)
  {
    uint64_t v7 = 4294954514;
    goto LABEL_14;
  }
  uint64_t v7 = v6(v3);
  if (v7)
  {
LABEL_14:
    APSLogErrorAt();
    return v7;
  }
  *(_DWORD *)(DerivedStorage + 128) = 0;
  return v7;
}

uint64_t compsource_CanProduceBytes(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(CMBaseObjectGetDerivedStorage() + 48);
  uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 32);
  if (!v6) {
    return 0;
  }
  return v6(v3, a2);
}

uint64_t compsource_GetAudioFormat(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioSourceCompression <= 30
    && (gLogCategory_APAudioSourceCompression != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  long long v4 = *(_OWORD *)(DerivedStorage + 8);
  long long v5 = *(_OWORD *)(DerivedStorage + 24);
  *(void *)(a2 + 32) = *(void *)(DerivedStorage + 40);
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v5;
  return 0;
}

uint64_t compsource_CanProducePackets(uint64_t a1, unint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int v4 = *(_DWORD *)(DerivedStorage + 28);
  int v5 = *(_DWORD *)(DerivedStorage + 80);
  if (a2 <= 1) {
    uint64_t v6 = 1;
  }
  else {
    uint64_t v6 = a2;
  }
  uint64_t v7 = *(void *)(DerivedStorage + 48);
  uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  long long v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 32);
  if (!v10) {
    return 0;
  }
  return v10(v7, v6 * (v5 * v4));
}

uint64_t compsource_FillComplexBuffer(uint64_t a1, void *a2, UInt32 a3, AudioStreamPacketDescription *a4, uint64_t a5, void *a6, void *a7, void *a8, uint64_t a9)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(void *)&outOutputData.mNumberBuffers = 0;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  uint64_t v18 = *(unsigned int *)(DerivedStorage + 128);
  uint64_t inInputDataProcUserData = a1;
  uint64_t v19 = *(void *)(DerivedStorage + 48);
  uint64_t v20 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v20) {
    uint64_t v21 = v20;
  }
  else {
    uint64_t v21 = 0;
  }
  uint64_t v22 = *(uint64_t (**)(uint64_t, char *))(v21 + 40);
  if (v22) {
    uint64_t v23 = v22(v19, (char *)&v35 + 8);
  }
  else {
    uint64_t v23 = 0;
  }
  *(void *)&long long v35 = v23;
  LOBYTE(v36) = 1;
  DWORD1(v36) = 0;
  UInt32 ioOutputDataPacketSize = a5;
  UInt32 v24 = *(_DWORD *)(DerivedStorage + 36);
  outOutputData.mNumberBuffers = 1;
  outOutputData.mBuffers[0].mNumberChannels = v24;
  outOutputData.mBuffers[0].mDataByteSize = a3;
  outOutputData.mBuffers[0].mData = a2;
  bzero(a4, 16 * a5);
  uint64_t v25 = AudioConverterFillComplexBuffer(*(AudioConverterRef *)(DerivedStorage + 104), (AudioConverterComplexInputDataProc)compsource_audioConverterInputCallBack, &inInputDataProcUserData, &ioOutputDataPacketSize, &outOutputData, a4);
  uint64_t v26 = v25;
  if ((void)v35) {
    *(_DWORD *)(v35 + 24) += DWORD1(v36);
  }
  uint64_t v27 = ioOutputDataPacketSize;
  *(_DWORD *)(DerivedStorage + 128) -= *(_DWORD *)(DerivedStorage + 28) * ioOutputDataPacketSize;
  *(unsigned char *)(DerivedStorage + 148) = 0;
  if (v25 != -16774)
  {
    if (v25)
    {
      APSLogErrorAt();
      return v26;
    }
    if (!outOutputData.mBuffers[0].mDataByteSize)
    {
      APSLogErrorAt();
      return 4294950524;
    }
  }
  *a7 = v27;
  *a6 = 0;
  if (v27)
  {
    uint64_t v28 = 0;
    uint64_t v29 = v27 - 1;
    do
      v28 += a4[v29].mDataByteSize;
    while ((unint64_t)v29--);
    *a6 = v28;
  }
  if (a8) {
    *a8 = *((void *)&v35 + 1) - v18;
  }
  if (a9)
  {
    long long v31 = *(_OWORD *)(DerivedStorage + 8);
    long long v32 = *(_OWORD *)(DerivedStorage + 24);
    *(void *)(a9 + 32) = *(void *)(DerivedStorage + 40);
    *(_OWORD *)a9 = v31;
    *(_OWORD *)(a9 + 16) = v32;
  }
  return v26;
}

uint64_t compsource_SetWriteHandler(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(CMBaseObjectGetDerivedStorage() + 48);
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 120);
  if (!v8)
  {
    uint64_t v9 = 4294954514;
LABEL_8:
    APSLogErrorAt();
    return v9;
  }
  uint64_t v9 = v8(v5, a2, a3);
  if (v9) {
    goto LABEL_8;
  }
  return v9;
}

uint64_t compsource_PrepareForFlush()
{
  uint64_t v0 = *(void *)(CMBaseObjectGetDerivedStorage() + 48);
  uint64_t v1 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v1) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = 0;
  }
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 128);
  if (!v3)
  {
    uint64_t v4 = 4294954514;
LABEL_8:
    APSLogErrorAt();
    return v4;
  }
  uint64_t v4 = v3(v0);
  if (v4) {
    goto LABEL_8;
  }
  return v4;
}

uint64_t compsource_AllowPartialFillOfNextComplexBuffer(uint64_t a1, char a2)
{
  *(unsigned char *)(CMBaseObjectGetDerivedStorage() + 148) = a2;
  return 0;
}

uint64_t compsource_audioConverterInputCallBack(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v9 = DerivedStorage;
  uint64_t v34 = 0;
  int v10 = *(_DWORD *)(DerivedStorage + 84);
  *(void *)(a3 + 16) = 0;
  *(_DWORD *)(a3 + 8) = v10;
  *(_DWORD *)(a3 + 12) = 0;
  unsigned int v11 = *(_DWORD *)(DerivedStorage + 80);
  uint64_t v12 = v11 * *a2;
  uint64_t v13 = *(void *)(a5 + 8);
  if (v13)
  {
    int v14 = *(_DWORD *)(a5 + 28);
    unsigned int v15 = *(_DWORD *)(v13 + 24);
    if (v14)
    {
      v15 += v14;
      *(_DWORD *)(v13 + 24) = v15;
      *(_DWORD *)(a5 + 28) = 0;
    }
    unsigned int v16 = *(_DWORD *)(v13 + 28) - v15;
    if (v16)
    {
      if (v16 >= v12) {
        unint64_t v17 = v12;
      }
      else {
        unint64_t v17 = v16;
      }
      *(void *)(a3 + 16) = *(void *)v13 + (*(_DWORD *)(v13 + 20) & v15);
      *(_DWORD *)(a3 + 12) = v17;
      goto LABEL_9;
    }
    goto LABEL_20;
  }
  uint64_t v19 = *(void *)(DerivedStorage + 48);
  uint64_t v20 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v20) {
    uint64_t v21 = v20;
  }
  else {
    uint64_t v21 = 0;
  }
  uint64_t v22 = *(unsigned int (**)(uint64_t, void))(v21 + 32);
  if (!v22 || !v22(v19, 0))
  {
LABEL_20:
    *a2 = 0;
LABEL_21:
    uint64_t v18 = 4294950522;
    if (*(_DWORD *)(a5 + 28))
    {
      if (*(unsigned char *)(v9 + 148)) {
        return 0;
      }
      else {
        return 4294950522;
      }
    }
    return v18;
  }
  if (*(void *)(v9 + 120) >= (unint64_t)v12)
  {
    UInt32 v24 = *(char **)(v9 + 112);
  }
  else
  {
    CFIndex v23 = (unint64_t)(v12 + *MEMORY[0x1E4F14B00] - 1) / *MEMORY[0x1E4F14B00] * *MEMORY[0x1E4F14B00];
    if (gLogCategory_APAudioSourceCompression <= 50
      && (gLogCategory_APAudioSourceCompression != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFAllocatorRef DefaultAirPlayMallocZoneCFAllocator = (const __CFAllocator *)APSAllocatorGetDefaultAirPlayMallocZoneCFAllocator();
    uint64_t v26 = (char *)CFAllocatorReallocate(DefaultAirPlayMallocZoneCFAllocator, *(void **)(v9 + 112), v23, 0);
    if (!v26)
    {
      APSLogErrorAt();
      uint64_t v18 = APSSignalErrorAt();
      if (!v18)
      {
        unint64_t v17 = 0;
        unsigned int v11 = *(_DWORD *)(v9 + 80);
        goto LABEL_10;
      }
LABEL_55:
      *a2 = 0;
      if (v18 != -16774) {
        return v18;
      }
      goto LABEL_21;
    }
    UInt32 v24 = v26;
    *(void *)(v9 + 112) = v26;
    *(void *)(v9 + 120) = v23;
  }
  uint64_t v33 = 0;
  if (!v12)
  {
LABEL_45:
    if (gLogCategory_APAudioSourceCompression <= 30
      && (gLogCategory_APAudioSourceCompression != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v18 = 4294950522;
    goto LABEL_55;
  }
  unint64_t v17 = 0;
  while (1)
  {
    uint64_t v27 = *(void *)(v9 + 48);
    uint64_t v28 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v28) {
      uint64_t v29 = v28;
    }
    else {
      uint64_t v29 = 0;
    }
    uint64_t v30 = *(uint64_t (**)(uint64_t, char *, void, uint64_t *, void, uint64_t *, uint64_t))(v29 + 48);
    if (!v30)
    {
      uint64_t v18 = 4294954514;
      goto LABEL_48;
    }
    uint64_t v31 = v30(v27, v24, v12, &v33, 0, &v34, a5 + 32);
    if (v31) {
      break;
    }
    if (v33)
    {
      v24 += v33;
      v17 += v33;
      LODWORD(v12) = v12 - v33;
      if (v12) {
        continue;
      }
    }
    goto LABEL_41;
  }
  uint64_t v18 = v31;
  if (v31 != -16774)
  {
LABEL_48:
    if (gLogCategory_APAudioSourceCompression <= 90
      && (gLogCategory_APAudioSourceCompression != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    APSLogErrorAt();
    goto LABEL_55;
  }
LABEL_41:
  if (!v17) {
    goto LABEL_45;
  }
  if (!*(unsigned char *)(a5 + 24))
  {
    *(void *)(a5 + 16) = v34;
    *(unsigned char *)(a5 + 24) = 1;
  }
  *(void *)(a3 + 16) = *(void *)(v9 + 112);
  *(_DWORD *)(a3 + 12) = v17;
  unsigned int v11 = *(_DWORD *)(v9 + 80);
LABEL_9:
  *(_DWORD *)(a5 + 28) = v17;
  *(_DWORD *)(v9 + 128) += v17 / v11;
LABEL_10:
  uint64_t v18 = 0;
  *a2 = v17 / v11;
  return v18;
}

uint64_t APEndpointStreamAudioHoseAggregateCreate(const __CFAllocator *a1, const void *a2, const __CFDictionary *a3, void *a4)
{
  if (!a2)
  {
    APSLogErrorAt();
    return 4294894965;
  }
  if (!a4)
  {
    APSLogErrorAt();
    CFMutableDictionaryRef v13 = 0;
    uint64_t v20 = 4294894965;
    goto LABEL_24;
  }
  if (hoseAggregate_getClassID_sRegisterAPEndpointStreamAudioHoseAggregateBaseTypeOnce != -1) {
    dispatch_once_f(&hoseAggregate_getClassID_sRegisterAPEndpointStreamAudioHoseAggregateBaseTypeOnce, &hoseAggregate_getClassID_sAPEndpointStreamAudioHoseAggregateClassID, (dispatch_function_t)hoseAggregate_initClassIDOnce);
  }
  uint64_t v8 = CMDerivedObjectCreate();
  if (v8)
  {
    uint64_t v20 = v8;
LABEL_36:
    APSLogErrorAt();
    CFMutableDictionaryRef v13 = 0;
LABEL_24:
    if (!v13) {
      return v20;
    }
    goto LABEL_28;
  }
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  uint64_t v10 = FigSimpleMutexCreate();
  DerivedStorage[1] = v10;
  if (!v10)
  {
    uint64_t v20 = 4294894966;
    goto LABEL_36;
  }
  SNPrintF();
  uint64_t v11 = FigDispatchQueueCreateWithPriority();
  DerivedStorage[2] = v11;
  if (!v11)
  {
    uint64_t v20 = 4294894966;
    goto LABEL_36;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(a1, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  DerivedStorage[3] = Mutable;
  if (!Mutable)
  {
    uint64_t v20 = 4294894966;
    goto LABEL_36;
  }
  if (a3)
  {
    CFMutableDictionaryRef v13 = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (!v13)
    {
      uint64_t v20 = 4294894966;
      goto LABEL_23;
    }
    CFDictionaryGetValue(a3, @"BBufBackingProvider");
    FigCFDictionarySetValue();
  }
  else
  {
    CFMutableDictionaryRef v13 = 0;
  }
  uint64_t v14 = APTransportStreamAggregateCreate();
  if (v14)
  {
    uint64_t v20 = v14;
    goto LABEL_23;
  }
  uint64_t v15 = DerivedStorage[4];
  uint64_t v16 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v16) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = 0;
  }
  uint64_t v18 = *(uint64_t (**)(uint64_t))(v17 + 8);
  if (!v18)
  {
    uint64_t v20 = 4294954514;
LABEL_23:
    APSLogErrorAt();
    goto LABEL_24;
  }
  uint64_t v19 = v18(v15);
  if (v19)
  {
    uint64_t v20 = v19;
    goto LABEL_23;
  }
  DerivedStorage[5] = CFRetain(a2);
  if (gLogCategory_APEndpointStreamAudioHoseAggregate <= 50
    && (gLogCategory_APEndpointStreamAudioHoseAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v20 = 0;
  *a4 = 0;
  if (v13) {
LABEL_28:
  }
    CFRelease(v13);
  return v20;
}

uint64_t APEndpointStreamAudioHoseAggregateRegisterWithParentRegistrar(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 8));
  if (*(unsigned char *)(DerivedStorage + 56))
  {
    uint64_t v7 = 0;
    goto LABEL_13;
  }
  if (gLogCategory_APEndpointStreamAudioHoseAggregate <= 50
    && (gLogCategory_APEndpointStreamAudioHoseAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v3 = *(void *)(DerivedStorage + 40);
  APSEndpointStreamAudioHoseRegistrarProtocolGetProtocolID();
  Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
  if (!ProtocolVTable || (uint64_t v5 = *(void *)(ProtocolVTable + 16)) == 0)
  {
    uint64_t v7 = 4294954508;
    goto LABEL_12;
  }
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t))(v5 + 8);
  if (!v6)
  {
    uint64_t v7 = 4294954514;
    goto LABEL_12;
  }
  uint64_t v7 = v6(v3, a1, 0, DerivedStorage + 48);
  if (v7)
  {
LABEL_12:
    APSLogErrorAt();
    goto LABEL_13;
  }
  *(unsigned char *)(DerivedStorage + 56) = 1;
LABEL_13:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 8));
  return v7;
}

uint64_t APEndpointStreamAudioHoseAggregateDeregisterWithParentRegistrar(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v3 = DerivedStorage;
  uint64_t v4 = *(void *)(DerivedStorage + 8);
  if (v4)
  {
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 8));
    if (!*(unsigned char *)(v3 + 56))
    {
      MEMORY[0x1D25EB390](*(void *)(v3 + 8));
      return 0;
    }
  }
  else if (!*(unsigned char *)(DerivedStorage + 56))
  {
    return 0;
  }
  if (gLogCategory_APEndpointStreamAudioHoseAggregate <= 50
    && (gLogCategory_APEndpointStreamAudioHoseAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v5 = *(const void **)(v3 + 40);
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(unsigned char *)(v3 + 56) = 0;
  if (v4) {
    MEMORY[0x1D25EB390](*(void *)(v3 + 8));
  }
  APSEndpointStreamAudioHoseRegistrarProtocolGetProtocolID();
  Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
  if (ProtocolVTable)
  {
    uint64_t v7 = *(void *)(ProtocolVTable + 16);
    if (v7)
    {
      uint64_t v8 = *(void (**)(const void *, uint64_t, void))(v7 + 16);
      if (v8) {
        v8(v5, a1, 0);
      }
    }
  }
  if (v5) {
    CFRelease(v5);
  }
  return 0;
}

uint64_t hoseAggregate_Invalidate(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v3 = DerivedStorage;
  uint64_t v4 = *(void *)(DerivedStorage + 8);
  if (v4)
  {
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 8));
    if (*(unsigned char *)v3)
    {
      MEMORY[0x1D25EB390](*(void *)(v3 + 8));
      return 0;
    }
  }
  else if (*(unsigned char *)DerivedStorage)
  {
    return 0;
  }
  *(unsigned char *)uint64_t v3 = 1;
  if (gLogCategory_APEndpointStreamAudioHoseAggregate <= 50
    && (gLogCategory_APEndpointStreamAudioHoseAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v5 = *(const void **)(v3 + 24);
  if (v5)
  {
    CFRelease(v5);
    *(void *)(v3 + 24) = 0;
  }
  if (v4) {
    MEMORY[0x1D25EB390](*(void *)(v3 + 8));
  }
  APEndpointStreamAudioHoseAggregateDeregisterWithParentRegistrar(a1);
  return 0;
}

void hoseAggregate_Finalize(uint64_t a1)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamAudioHoseAggregate <= 50
    && (gLogCategory_APEndpointStreamAudioHoseAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  hoseAggregate_Invalidate(a1);
  uint64_t v3 = (const void *)DerivedStorage[4];
  if (v3) {
    CFRelease(v3);
  }
  FigSimpleMutexDestroy();
  DerivedStorage[1] = 0;
  uint64_t v4 = DerivedStorage[2];
  if (v4) {
    dispatch_release(v4);
  }
  DerivedStorage[2] = 0;
}

__CFString *hoseAggregate_CopyDebugDescription(uint64_t a1)
{
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  uint64_t v3 = Mutable;
  if (Mutable) {
    CFStringAppendFormat(Mutable, 0, @"<APEndpointStreamAudioHoseAggregate %p>", a1);
  }
  return v3;
}

uint64_t hoseAggregate_CopyProperty(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a4)
  {
    uint64_t v8 = 4294894965;
    goto LABEL_21;
  }
  uint64_t v7 = DerivedStorage;
  if (FigCFEqual())
  {
    uint64_t v8 = 0;
    *a4 = CFRetain((CFTypeRef)*MEMORY[0x1E4F1CFD0]);
    return v8;
  }
  if (FigCFEqual())
  {
    uint64_t context = 0;
    MEMORY[0x1D25EB370](*(void *)(v7 + 8));
    if (CFDictionaryGetCount(*(CFDictionaryRef *)(v7 + 24)) >= 1)
    {
      uint64_t context = -1;
      CFDictionaryApplyFunction(*(CFDictionaryRef *)(v7 + 24), (CFDictionaryApplierFunction)hoseAggregate_arrivalToRenderTicksApplier, &context);
    }
    MEMORY[0x1D25EB390](*(void *)(v7 + 8));
    uint64_t Int64 = CFNumberCreateInt64();
    *a4 = Int64;
    if (Int64) {
      return 0;
    }
    APSLogErrorAt();
    return 4294894966;
  }
  if (FigCFEqual())
  {
    uint64_t CMBaseObject = FigTransportStreamGetCMBaseObject();
    uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v12) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    uint64_t v14 = *(uint64_t (**)(uint64_t, void, uint64_t, void *))(v13 + 48);
    if (v14)
    {
      uint64_t v8 = v14(CMBaseObject, *MEMORY[0x1E4F477A0], a3, a4);
      if (!v8) {
        return v8;
      }
    }
    else
    {
      uint64_t v8 = 4294954514;
    }
LABEL_21:
    APSLogErrorAt();
    return v8;
  }
  if (gLogCategory_APEndpointStreamAudioHoseAggregate <= 50
    && (gLogCategory_APEndpointStreamAudioHoseAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 4294954509;
}

uint64_t hoseAggregate_SetProperty()
{
  if (*(unsigned char *)CMBaseObjectGetDerivedStorage())
  {
    APSLogErrorAt();
    return 4294954511;
  }
  else
  {
    if (gLogCategory_APEndpointStreamAudioHoseAggregate <= 30
      && (gLogCategory_APEndpointStreamAudioHoseAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (FigCFEqual())
    {
      uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
      MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 8));
      if (*(unsigned char *)DerivedStorage)
      {
        APSLogErrorAt();
        MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 8));
        uint64_t v1 = 4294954511;
        APSLogErrorAt();
      }
      else
      {
        CFDictionaryApplyBlock();
        MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 8));
        return 0;
      }
    }
    else
    {
      return 4294954512;
    }
  }
  return v1;
}

uint64_t CMBaseObjectNotificationBarrier(uint64_t a1)
{
  uint64_t v2 = *(void **)(CMBaseObjectGetVTable() + 8);
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (*v3 < 2uLL) {
    return 4294954514;
  }
  uint64_t v4 = (uint64_t (*)(uint64_t))v3[8];
  if (!v4) {
    return 4294954514;
  }
  return v4(a1);
}

unint64_t hoseAggregate_arrivalToRenderTicksApplier(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  unint64_t result = APSGetFBOPropertyInt64();
  unint64_t v5 = *a3;
  if (*a3 >= result) {
    unint64_t v5 = result;
  }
  *a3 = v5;
  return result;
}

uint64_t __hoseAggregate_setPropertyOnSubHoses_block_invoke(uint64_t a1, uint64_t a2)
{
  if (gLogCategory_APEndpointStreamAudioHoseAggregate <= 20
    && (gLogCategory_APEndpointStreamAudioHoseAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t VTable = CMBaseObjectGetVTable();
  uint64_t v9 = *(void *)(VTable + 8);
  uint64_t result = VTable + 8;
  uint64_t v8 = v9;
  if (v9) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (v11)
  {
    return v11(a2, v4, v5);
  }
  return result;
}

__CFString *hoseAggregate_audioHoseProtocolCopyDebugDescription(uint64_t a1)
{
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  uint64_t v3 = Mutable;
  if (Mutable) {
    CFStringAppendFormat(Mutable, 0, @"APEndpointStreamAudioHoseAggregate <APSEndpointStreamAudioHoseProtocol> on <%p>", a1);
  }
  return v3;
}

uint64_t hoseAggregate_audioHoseSendAudio(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)DerivedStorage) {
    return 0;
  }
  uint64_t v6 = *(void *)(DerivedStorage + 32);
  uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9)
  {
    uint64_t v10 = 4294954514;
LABEL_9:
    APSLogErrorAt();
    return v10;
  }
  uint64_t v10 = v9(v6, a2, a3);
  if (v10) {
    goto LABEL_9;
  }
  return v10;
}

uint64_t hoseAggregate_audioHoseTimeAnnounce()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 8));
  if (*(unsigned char *)DerivedStorage)
  {
    APSLogErrorAt();
    uint64_t v1 = 4294954511;
  }
  else
  {
    CFDictionaryApplyBlock();
    uint64_t v1 = 0;
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 8));
  return v1;
}

uint64_t hoseAggregate_audioHoseFlush(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 8));
  if (a4)
  {
    APSLogErrorAt();
    uint64_t v6 = APSSignalErrorAt();
  }
  else if (*(unsigned char *)DerivedStorage)
  {
    APSLogErrorAt();
    uint64_t v6 = 4294954511;
  }
  else
  {
    CFDictionaryApplyBlock();
    uint64_t v6 = 0;
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 8));
  return v6;
}

uint64_t hoseAggregate_audioHoseSendAudioBatch(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)DerivedStorage) {
    return 0;
  }
  uint64_t v6 = *(void *)(DerivedStorage + 32);
  uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 88);
  if (v9) {
    uint64_t v10 = v9(v6, a2, a3);
  }
  else {
    uint64_t v10 = FigTransportStreamSendBatchSlow();
  }
  uint64_t v11 = v10;
  if (v10) {
    APSLogErrorAt();
  }
  return v11;
}

uint64_t __hoseAggregate_audioHoseTimeAnnounce_block_invoke(uint64_t a1, uint64_t a2)
{
  if (gLogCategory_APEndpointStreamAudioHoseAggregate <= 30
    && (gLogCategory_APEndpointStreamAudioHoseAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v4 = *(unsigned int *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 40);
  APSEndpointStreamAudioHoseProtocolGetProtocolID();
  uint64_t result = CMBaseObjectGetProtocolVTable();
  if (result)
  {
    uint64_t v8 = *(void *)(result + 16);
    result += 16;
    uint64_t v7 = v8;
    if (v8)
    {
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
      if (v9)
      {
        return v9(a2, v4, v5);
      }
    }
  }
  return result;
}

uint64_t __hoseAggregate_audioHoseFlush_block_invoke(uint64_t a1, uint64_t a2)
{
  if (gLogCategory_APEndpointStreamAudioHoseAggregate <= 30
    && (gLogCategory_APEndpointStreamAudioHoseAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v4 = *(unsigned int *)(a1 + 40);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)(a1 + 44);
  *(_OWORD *)&v9[12] = *(_OWORD *)(a1 + 56);
  APSEndpointStreamAudioHoseProtocolGetProtocolID();
  uint64_t result = CMBaseObjectGetProtocolVTable();
  if (result)
  {
    uint64_t v7 = *(void *)(result + 16);
    result += 16;
    uint64_t v6 = v7;
    if (v7)
    {
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, _OWORD *, void, void))(v6 + 24);
      if (v8)
      {
        v10[0] = *(_OWORD *)v9;
        *(_OWORD *)((char *)v10 + 12) = *(_OWORD *)&v9[12];
        return v8(a2, v4, v10, 0, 0);
      }
    }
  }
  return result;
}

__CFString *hoseAggregate_audioHoseRegistrarProtocolCopyDebugDescription(uint64_t a1)
{
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppendFormat(Mutable, 0, @"APEndpointStreamAudioHoseAggregate <APSEndpointStreamAudioHoseRegistrarProtocol> on <%p>", a1);
  return Mutable;
}

uint64_t hoseAggregate_audioHoseRegistrarRegisterHose(uint64_t a1, const void *a2, const __CFDictionary *a3, void *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
  {
    uint64_t v14 = 4294894965;
LABEL_35:
    APSLogErrorAt();
    return v14;
  }
  if (!a4)
  {
    uint64_t v14 = 4294894965;
    goto LABEL_35;
  }
  uint64_t v8 = DerivedStorage;
  if (gLogCategory_APEndpointStreamAudioHoseAggregate <= 50
    && (gLogCategory_APEndpointStreamAudioHoseAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a3)
  {
    int Value = CFDictionaryGetValue(a3, (const void *)*MEMORY[0x1E4F4A008]);
    if (Value)
    {
      uint64_t v10 = Value;
      CFTypeID v11 = CFGetTypeID(Value);
      if (v11 == FigTransportStreamGetTypeID())
      {
        MEMORY[0x1D25EB370](*(void *)(v8 + 8));
        if (*(unsigned char *)v8)
        {
          APSLogErrorAt();
          uint64_t v14 = 4294954511;
        }
        else if (CFDictionaryContainsKey(*(CFDictionaryRef *)(v8 + 24), a2))
        {
          APSLogErrorAt();
          uint64_t v14 = APSSignalErrorAt();
        }
        else
        {
          uint64_t v12 = APTransportStreamAggregateAddSubStream();
          if (!v12)
          {
            CFDictionaryAddValue(*(CFMutableDictionaryRef *)(v8 + 24), a2, v10);
            uint64_t v13 = *(const void **)(v8 + 40);
            if (v13) {
              uint64_t v14 = (uint64_t)CFRetain(v13);
            }
            else {
              uint64_t v14 = 0;
            }
            uint64_t v16 = *(void *)(v8 + 48);
            if (v16 && *(void *)(v16 + 16)) {
              uint64_t v17 = *(void (**)(uint64_t))(v16 + 16);
            }
            else {
              uint64_t v17 = 0;
            }
            MEMORY[0x1D25EB390](*(void *)(v8 + 8));
            if (v14 && v17) {
              v17(v14);
            }
            if (gLogCategory_APEndpointStreamAudioHoseAggregate <= 30
              && (gLogCategory_APEndpointStreamAudioHoseAggregate != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            *a4 = &gHoseAggregateCallbacks;
            if (v14)
            {
              CFRelease((CFTypeRef)v14);
              return 0;
            }
            return v14;
          }
          uint64_t v14 = v12;
          APSLogErrorAt();
        }
        MEMORY[0x1D25EB390](*(void *)(v8 + 8));
        return v14;
      }
    }
  }
  APSLogErrorAt();
  return APSSignalErrorAt();
}

uint64_t hoseAggregate_audioHoseRegistrarDeregisterHose(const void *a1, const void *a2, const void *a3)
{
  uint64_t DerivedStorage = (unsigned char *)CMBaseObjectGetDerivedStorage();
  if (a2)
  {
    if (*DerivedStorage)
    {
      return 4294954511;
    }
    else
    {
      if (gLogCategory_APEndpointStreamAudioHoseAggregate <= 50
        && (gLogCategory_APEndpointStreamAudioHoseAggregate != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (a1) {
        CFRetain(a1);
      }
      CFRetain(a2);
      if (a3) {
        CFRetain(a3);
      }
      APSDispatchAsyncFHelper();
      return 0;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294894965;
  }
}

uint64_t hoseAggregate_hoseRegistrarGetMessageAtSequenceNumberCallback(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 8));
  if (!*(unsigned char *)DerivedStorage
    && *(unsigned char *)(DerivedStorage + 56)
    && (uint64_t v6 = *(void **)(DerivedStorage + 48)) != 0
    && *v6)
  {
    if (gLogCategory_APEndpointStreamAudioHoseAggregate <= 20
      && (gLogCategory_APEndpointStreamAudioHoseAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (**(void **)(DerivedStorage + 48)) {
      uint64_t v8 = **(uint64_t (***)(void, uint64_t, uint64_t))(DerivedStorage + 48);
    }
    else {
      uint64_t v8 = 0;
    }
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 8));
    uint64_t v7 = v8(*(void *)(DerivedStorage + 40), a2, a3);
    if (v7) {
      APSLogErrorAt();
    }
  }
  else
  {
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 8));
    return 0;
  }
  return v7;
}

uint64_t hoseAggregate_hoseRegistrarTriggerTimeAnnounceCallback()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 8));
  if (!*(unsigned char *)DerivedStorage
    && *(unsigned char *)(DerivedStorage + 56)
    && (uint64_t v1 = *(void *)(DerivedStorage + 48)) != 0
    && *(void *)(v1 + 16))
  {
    if (gLogCategory_APEndpointStreamAudioHoseAggregate <= 20
      && (gLogCategory_APEndpointStreamAudioHoseAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (*(void *)(*(void *)(DerivedStorage + 48) + 16)) {
      uint64_t v3 = *(uint64_t (**)(void))(*(void *)(DerivedStorage + 48) + 16);
    }
    else {
      uint64_t v3 = 0;
    }
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 8));
    uint64_t v2 = v3(*(void *)(DerivedStorage + 40));
    if (v2) {
      APSLogErrorAt();
    }
  }
  else
  {
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 8));
    return 0;
  }
  return v2;
}

void hoseAggregate_audioHoseRegistrarDeregisterHoseDispatchInternal(uint64_t a1)
{
  uint64_t v2 = *(const void **)(a1 + 8);
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 8));
  if (*(unsigned char *)DerivedStorage)
  {
LABEL_32:
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 8));
    goto LABEL_13;
  }
  if (!CFDictionaryContainsKey(*(CFDictionaryRef *)(DerivedStorage + 24), v2))
  {
    APSLogErrorAt();
    if (gLogCategory_APEndpointStreamAudioHoseAggregate <= 50
      && (gLogCategory_APEndpointStreamAudioHoseAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_32;
  }
  int Value = CFDictionaryGetValue(*(CFDictionaryRef *)(DerivedStorage + 24), v2);
  if (Value) {
    CFTypeRef v5 = CFRetain(Value);
  }
  else {
    CFTypeRef v5 = 0;
  }
  CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(DerivedStorage + 24), v2);
  if (APTransportStreamAggregateRemoveSubStream())
  {
    APSLogErrorAt();
  }
  else if (gLogCategory_APEndpointStreamAudioHoseAggregate <= 20 {
         && (gLogCategory_APEndpointStreamAudioHoseAggregate != -1 || _LogCategory_Initialize()))
  }
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 8));
  if (v5) {
    CFRelease(v5);
  }
LABEL_13:
  if (gLogCategory_APEndpointStreamAudioHoseAggregate <= 50
    && (gLogCategory_APEndpointStreamAudioHoseAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
  uint64_t v6 = *(const void **)(a1 + 8);
  if (v6) {
    CFRelease(v6);
  }
  uint64_t v7 = *(const void **)(a1 + 16);
  if (v7)
  {
    CFRelease(v7);
  }
}

uint64_t hoseAggregate_initClassIDOnce(uint64_t a1)
{
  uint64_t ClassID = CMBaseGetClassID();
  return MEMORY[0x1F40DC658](&hoseAggregate_initClassIDOnce_sAPEndpointStreamAudioHoseAggregateClassDesc, ClassID, 1, a1);
}

uint64_t APAudioSourceCarPlayCreate(uint64_t a1, long long *a2, void *a3)
{
  if (a2 && a3 && *((_DWORD *)a2 + 2) == 1819304813 && *((_DWORD *)a2 + 8) == 16)
  {
    FigEndpointAudioSourceGetClassID();
    uint64_t v5 = CMDerivedObjectCreate();
    if (v5)
    {
      uint64_t v11 = v5;
      APSLogErrorAt();
    }
    else
    {
      uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
      uint64_t v7 = *((void *)a2 + 4);
      long long v8 = a2[1];
      *(_OWORD *)(DerivedStorage + 8) = *a2;
      *(_OWORD *)(DerivedStorage + 24) = v8;
      *(void *)(DerivedStorage + 40) = v7;
      long long v10 = *a2;
      long long v9 = a2[1];
      *(void *)(DerivedStorage + 80) = *((void *)a2 + 4);
      *(_OWORD *)(DerivedStorage + 48) = v10;
      *(_OWORD *)(DerivedStorage + 64) = v9;
      *(_DWORD *)(DerivedStorage + 88) = 100;
      if (gLogCategory_APAudioSourceCarPlay <= 30
        && (gLogCategory_APAudioSourceCarPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v11 = 0;
      *a3 = 0;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294950525;
  }
  return v11;
}

void carplaysource_Finalize()
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  uint64_t v1 = (OpaqueAudioConverter *)DerivedStorage[24];
  if (v1)
  {
    AudioConverterDispose(v1);
    DerivedStorage[24] = 0;
  }
  MirroredRingBufferFree();
  uint64_t v2 = (const void *)DerivedStorage[19];
  if (v2)
  {
    CFRelease(v2);
    DerivedStorage[19] = 0;
  }
  uint64_t v3 = (const void *)DerivedStorage[21];
  if (v3)
  {
    CFRelease(v3);
    DerivedStorage[21] = 0;
  }
  uint64_t v4 = (const void *)DerivedStorage[22];
  if (v4)
  {
    CFRelease(v4);
    DerivedStorage[22] = 0;
  }
  uint64_t v5 = (void *)DerivedStorage[18];
  if (v5)
  {
    DerivedStorage[18] = 0;
    free(v5);
  }
  uint64_t v6 = DerivedStorage[25];
  if (v6)
  {
    dispatch_release(v6);
    DerivedStorage[25] = 0;
  }
}

__CFString *carplaysource_CopyDebugDescription()
{
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppendFormat(Mutable, 0, @"<APAudioSourceCarPlay>");
  return Mutable;
}

uint64_t carplaysource_CopyProperty(uint64_t a1, const void *a2, uint64_t a3, uint64_t *a4)
{
  CMBaseObjectGetDerivedStorage();
  if (CFEqual(a2, @"BufferCapacityMS"))
  {
    uint64_t UInt32 = FigCFNumberCreateUInt32();
    *a4 = UInt32;
    if (!UInt32) {
      goto LABEL_10;
    }
  }
  if (CFEqual(a2, @"PacketSizeLimit"))
  {
    uint64_t v7 = FigCFNumberCreateUInt32();
    *a4 = v7;
    if (!v7) {
      goto LABEL_10;
    }
    return 0;
  }
  if (!CFEqual(a2, @"VBRTestingBitRate")) {
    return 4294954512;
  }
  uint64_t v8 = FigCFNumberCreateUInt32();
  *a4 = v8;
  if (v8) {
    return 0;
  }
LABEL_10:
  APSLogErrorAt();
  return 4294950526;
}

uint64_t carplaysource_SetProperty(uint64_t a1, const void *a2)
{
  unsigned int v5 = 0;
  uint64_t DerivedStorage = (_DWORD *)CMBaseObjectGetDerivedStorage();
  if (CFEqual(a2, @"BufferCapacityMS"))
  {
    DerivedStorage[22] = CFGetInt64Ranged();
  }
  else if (CFEqual(a2, @"PacketSizeLimit"))
  {
    DerivedStorage[23] = CFGetInt64();
  }
  else if (CFEqual(a2, @"VBRTestingBitRate"))
  {
    DerivedStorage[24] = CFGetInt64();
  }
  else
  {
    return -12784;
  }
  return v5;
}

uint64_t carplaysource_GetOutputFormat(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v4 = *(void *)(DerivedStorage + 80);
  long long v5 = *(_OWORD *)(DerivedStorage + 64);
  *(_OWORD *)a2 = *(_OWORD *)(DerivedStorage + 48);
  *(_OWORD *)(a2 + 16) = v5;
  *(void *)(a2 + 32) = v4;
  return 0;
}

uint64_t carplaysource_SetOutputFormat(uint64_t a1, long long *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v4 = DerivedStorage + 48;
  if (a2)
  {
    if (!*(_DWORD *)(DerivedStorage + 56)) {
      goto LABEL_7;
    }
    __s1[0] = *(void *)(DerivedStorage + 48);
    __s1[1] = 0xC6C70636DLL;
    int v5 = *(_DWORD *)(DerivedStorage + 76);
    int v12 = 2 * v5;
    int v13 = 1;
    int v14 = 2 * v5;
    int v15 = v5;
    uint64_t v16 = 16;
    if (!memcmp(__s1, (const void *)(DerivedStorage + 8), 0x28uLL))
    {
      uint64_t v6 = 0;
      long long v7 = *a2;
      long long v8 = a2[1];
      *(void *)(v4 + 32) = *((void *)a2 + 4);
      *(_OWORD *)uint64_t v4 = v7;
      *(_OWORD *)(v4 + 16) = v8;
    }
    else
    {
LABEL_7:
      APSLogErrorAt();
      return 4294950525;
    }
  }
  else
  {
    uint64_t v6 = 0;
    long long v9 = *(_OWORD *)(DerivedStorage + 24);
    *(_OWORD *)uint64_t v4 = *(_OWORD *)(DerivedStorage + 8);
    *(_OWORD *)(DerivedStorage + 64) = v9;
    *(void *)(DerivedStorage + 80) = *(void *)(DerivedStorage + 40);
  }
  return v6;
}

uint64_t carplaySource_SetDataReadyCallback(uint64_t a1, int a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v10 = DerivedStorage;
  if (a4 && *(unsigned char *)DerivedStorage)
  {
    APSLogErrorAt();
    return 4294950524;
  }
  else
  {
    if (*(void *)(DerivedStorage + 248))
    {
      uint64_t v11 = *(NSObject **)(DerivedStorage + 200);
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 0x40000000;
      block[2] = __carplaySource_SetDataReadyCallback_block_invoke;
      block[3] = &__block_descriptor_tmp_0;
      block[4] = v10;
      dispatch_sync(v11, block);
    }
    if (a4)
    {
      v13[0] = MEMORY[0x1E4F143A8];
      v13[1] = 0x40000000;
      void v13[2] = __carplaySource_SetDataReadyCallback_block_invoke_2;
      v13[3] = &__block_descriptor_tmp_14;
      v13[4] = v10;
      v13[5] = a3;
      v13[6] = a4;
      v13[7] = a5;
      int v14 = a2;
      dispatch_sync(a3, v13);
    }
    return 0;
  }
}

uint64_t carplaysource_Resume(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)DerivedStorage) {
    goto LABEL_32;
  }
  if (gLogCategory_APAudioSourceCarPlay <= 30
    && (gLogCategory_APAudioSourceCarPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(void *)(DerivedStorage + 248) && !*(_DWORD *)(DerivedStorage + 100))
  {
LABEL_32:
    APSLogErrorAt();
    uint64_t v21 = 4294950524;
LABEL_36:
    carplaysource_SuspendInternal((void *)DerivedStorage);
    return v21;
  }
  unsigned int v3 = *(_DWORD *)(DerivedStorage + 88) + 4;
  unsigned int v4 = v3 / 5;
  CFAllocatorRef v5 = CFGetAllocator(a1);
  uint64_t v6 = CMSimpleQueueCreate(v5, v3 / 5, (CMSimpleQueueRef *)(DerivedStorage + 152));
  if (v6)
  {
    uint64_t v21 = v6;
LABEL_35:
    APSLogErrorAt();
    goto LABEL_36;
  }
  CFAllocatorRef v7 = CFGetAllocator(a1);
  uint64_t v8 = CMSimpleQueueCreate(v7, v3 / 5, (CMSimpleQueueRef *)(DerivedStorage + 168));
  if (v8)
  {
    uint64_t v21 = v8;
    goto LABEL_35;
  }
  CFAllocatorRef v9 = CFGetAllocator(a1);
  uint64_t v10 = CMSimpleQueueCreate(v9, v3 / 5, (CMSimpleQueueRef *)(DerivedStorage + 176));
  if (v10)
  {
    uint64_t v21 = v10;
    goto LABEL_35;
  }
  unint64_t v11 = v4;
  *(void *)(DerivedStorage + 144) = malloc_type_calloc(v4, 0xE8uLL, 0x100004002D9DE29uLL);
  if (v3 >= 5)
  {
    uint64_t v12 = 0;
    if (v11 <= 1) {
      unsigned int v13 = 1;
    }
    else {
      unsigned int v13 = v11;
    }
    uint64_t v14 = 232 * v13;
    do
    {
      CMSimpleQueueEnqueue(*(CMSimpleQueueRef *)(DerivedStorage + 152), (const void *)(*(void *)(DerivedStorage + 144) + v12));
      v12 += 232;
    }
    while (v14 != v12);
  }
  MirroredRingBufferInit();
  int v15 = (AudioConverterRef *)(DerivedStorage + 192);
  uint64_t v16 = AudioConverterNew((const AudioStreamBasicDescription *)(DerivedStorage + 8), (const AudioStreamBasicDescription *)(DerivedStorage + 48), (AudioConverterRef *)(DerivedStorage + 192));
  if (v16)
  {
    uint64_t v21 = v16;
    goto LABEL_35;
  }
  if (*(_DWORD *)(DerivedStorage + 56) != 1819304813)
  {
    if (*(_DWORD *)(DerivedStorage + 92)
      && (uint64_t v17 = AudioConverterSetProperty(*v15, 0x70616B6Cu, 4u, (const void *)(DerivedStorage + 92)), v17))
    {
      uint64_t v21 = v17;
    }
    else
    {
      if (!*(_DWORD *)(DerivedStorage + 96)) {
        goto LABEL_23;
      }
      uint64_t v18 = AudioConverterSetProperty(*v15, 0x76627262u, 4u, (const void *)(DerivedStorage + 96));
      if (!v18) {
        goto LABEL_23;
      }
      uint64_t v21 = v18;
    }
    goto LABEL_35;
  }
LABEL_23:
  *(void *)(DerivedStorage + 224) = 0;
  *(_DWORD *)(DerivedStorage + 232) = 0;
  *(_DWORD *)(DerivedStorage + 136) = 0;
  *(_DWORD *)(DerivedStorage + 160) = 0;
  *(void *)(DerivedStorage + 240) = 0;
  if (*(void *)(DerivedStorage + 248))
  {
    uint64_t v19 = (*(_DWORD *)(DerivedStorage + 68) * *(_DWORD *)(DerivedStorage + 100));
    unsigned int v20 = ((double)(1000000000 * (unint64_t)v19) / *(double *)(DerivedStorage + 48));
    *(_DWORD *)(DerivedStorage + 212) = 0;
    *(_DWORD *)(DerivedStorage + 216) = v20;
    *(_DWORD *)(DerivedStorage + 208) = v19;
    *(void *)(DerivedStorage + 272) = v19;
    *(unsigned char *)(DerivedStorage + 264) = 0;
    carplaysource_scheduleReadinessCallbackAfterTimeNs(a1, v20 + 1000000);
  }
  uint64_t v21 = 0;
  *(unsigned char *)uint64_t DerivedStorage = 1;
  return v21;
}

uint64_t carplaysource_Suspend()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)DerivedStorage)
  {
    if (gLogCategory_APAudioSourceCarPlay <= 30
      && (gLogCategory_APAudioSourceCarPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (*(_DWORD *)(DerivedStorage + 232) >= 2u)
    {
      if (gLogCategory_APAudioSourceCarPlay > 50) {
        goto LABEL_19;
      }
      if (gLogCategory_APAudioSourceCarPlay != -1 || _LogCategory_Initialize()) {
        LogPrintF();
      }
    }
    if (gLogCategory_APAudioSourceCarPlay <= 50)
    {
      if (gLogCategory_APAudioSourceCarPlay != -1 || _LogCategory_Initialize()) {
        LogPrintF();
      }
      if (gLogCategory_APAudioSourceCarPlay <= 50
        && (gLogCategory_APAudioSourceCarPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
  }
LABEL_19:
  *(unsigned char *)uint64_t DerivedStorage = 0;
  return 0;
}

uint64_t carplaysource_Flush()
{
  if (*(unsigned char *)CMBaseObjectGetDerivedStorage()) {
    return 0;
  }
  else {
    return 4294950524;
  }
}

uint64_t carplaysource_WritePackets(uint64_t a1, const void *a2, size_t a3, uint64_t a4, int a5, long long *a6)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(unsigned char *)DerivedStorage) {
    return 4294950524;
  }
  uint64_t v11 = DerivedStorage;
  if ((*((unsigned char *)a6 + 200) & 3) != 0 && *(_DWORD *)(DerivedStorage + 24) * a5 == a3)
  {
    uint64_t v12 = (char *)CMSimpleQueueDequeue(*(CMSimpleQueueRef *)(DerivedStorage + 152));
    if (v12)
    {
      unsigned int v13 = *(_DWORD *)(v11 + 120) - *(_DWORD *)(v11 + 132) + *(_DWORD *)(v11 + 128);
      if (v13 >= a3) {
        size_t v14 = a3;
      }
      else {
        size_t v14 = v13;
      }
      if (v14 < a3) {
        ++*(_DWORD *)(v11 + 136);
      }
      *(_DWORD *)uint64_t v12 = v14 / *(_DWORD *)(v11 + 24);
      long long v15 = a6[4];
      long long v16 = a6[5];
      long long v17 = a6[3];
      *(_OWORD *)(v12 + 40) = a6[2];
      *(_OWORD *)(v12 + 88) = v16;
      *(_OWORD *)(v12 + 72) = v15;
      *(_OWORD *)(v12 + 56) = v17;
      long long v18 = a6[8];
      long long v19 = a6[9];
      long long v20 = a6[7];
      *(_OWORD *)(v12 + 104) = a6[6];
      *(_OWORD *)(v12 + 152) = v19;
      *(_OWORD *)(v12 + 136) = v18;
      *(_OWORD *)(v12 + 120) = v20;
      long long v21 = a6[12];
      long long v22 = a6[13];
      long long v23 = a6[11];
      *(_OWORD *)(v12 + 168) = a6[10];
      *(_OWORD *)(v12 + 216) = v22;
      *(_OWORD *)(v12 + 200) = v21;
      *(_OWORD *)(v12 + 184) = v23;
      long long v24 = *a6;
      *(_OWORD *)(v12 + 24) = a6[1];
      *(_OWORD *)(v12 + 8) = v24;
      CMSimpleQueueEnqueue(*(CMSimpleQueueRef *)(v11 + 168), v12);
      uint64_t v25 = *(void *)(v11 + 104);
      if (v25)
      {
        memcpy((void *)(v25 + (*(_DWORD *)(v11 + 124) & *(_DWORD *)(v11 + 132))), a2, v14);
        uint64_t v26 = 0;
        *(_DWORD *)(v11 + 132) += v14;
        return v26;
      }
      APSLogErrorAt();
      uint64_t v26 = 4294960591;
    }
    else
    {
      ++*(_DWORD *)(v11 + 160);
      uint64_t v26 = 4294950523;
    }
  }
  else
  {
    uint64_t v26 = 4294950525;
  }
  if (gLogCategory_APAudioSourceCarPlay <= 90
    && (gLogCategory_APAudioSourceCarPlay != -1 || _LogCategory_Initialize()))
  {
    mach_absolute_time();
    UpTicksToMilliseconds();
    LogPrintF();
  }
  return v26;
}

BOOL carplaysource_CanProducePackets(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)DerivedStorage) {
    return *(unsigned int *)(DerivedStorage + 68) * a2 * (unint64_t)*(unsigned int *)(DerivedStorage + 32) <= (*(_DWORD *)(DerivedStorage + 132) - *(_DWORD *)(DerivedStorage + 128));
  }
  APSLogErrorAt();
  return 0;
}

uint64_t carplaysource_ReadPackets(const void *a1, void *a2, UInt32 a3, AudioStreamPacketDescription *a4, UInt32 a5, void *a6, UInt32 *a7, uint64_t a8)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v17 = DerivedStorage;
  UInt32 ioOutputDataPacketSize = a5;
  memset(&outOutputData, 0, sizeof(outOutputData));
  if (a5)
  {
    UInt32 v18 = *(_DWORD *)(DerivedStorage + 76);
    outOutputData.mNumberBuffers = 1;
    outOutputData.mBuffers[0].mNumberChannels = v18;
    outOutputData.mBuffers[0].mDataByteSize = a3;
    outOutputData.mBuffers[0].mData = a2;
    uint64_t v19 = AudioConverterFillComplexBuffer(*(AudioConverterRef *)(DerivedStorage + 192), (AudioConverterComplexInputDataProc)carplaysource_AudioConverterInputCallBack, (void *)DerivedStorage, &ioOutputDataPacketSize, &outOutputData, a4);
    *(_DWORD *)(v17 + 128) += *(_DWORD *)(v17 + 140);
    *(_DWORD *)(v17 + 140) = 0;
    if (v19 != -16774 && v19 != 0)
    {
      uint64_t v21 = v19;
      if (gLogCategory_APAudioSourceCarPlay <= 60
        && (gLogCategory_APAudioSourceCarPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      AudioConverterReset(*(AudioConverterRef *)(v17 + 192));
      char v33 = 0;
      goto LABEL_36;
    }
  }
  else
  {
    *(_DWORD *)(DerivedStorage + 128) += *(_DWORD *)(DerivedStorage + 140);
    *(_DWORD *)(DerivedStorage + 140) = 0;
  }
  if (ioOutputDataPacketSize)
  {
    UInt32 v22 = *(_DWORD *)(v17 + 68) * ioOutputDataPacketSize;
    *(_DWORD *)(v17 + 212) += v22;
    if (v22)
    {
      CFTypeRef v44 = a1;
      CFIndex v45 = a7;
      v46 = a4;
      unsigned int v47 = a6;
      char v23 = 1;
      double v24 = 0.0;
      while (1)
      {
        UInt32 v25 = v22;
        Head = CMSimpleQueueGetHead(*(CMSimpleQueueRef *)(v17 + 176));
        unint64_t v27 = *((void *)Head + 4);
        double v28 = *((double *)Head + 19);
        double v29 = *((double *)Head + 28);
        unsigned int v30 = *(_DWORD *)(v17 + 188);
        if (v23) {
          double v24 = v28 + (double)v30;
        }
        BOOL v31 = v22 >= *(_DWORD *)Head - v30;
        v22 -= *(_DWORD *)Head - v30;
        if (v22 == 0 || !v31) {
          break;
        }
        long long v32 = Head;
        *(_DWORD *)(v17 + 188) = 0;
        if (gLogCategory_APAudioSourceCarPlay <= 10
          && (gLogCategory_APAudioSourceCarPlay != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        CMSimpleQueueDequeue(*(CMSimpleQueueRef *)(v17 + 176));
        CMSimpleQueueEnqueue(*(CMSimpleQueueRef *)(v17 + 152), v32);
        char v23 = 0;
        if (!v22) {
          goto LABEL_26;
        }
      }
      *(_DWORD *)(v17 + 188) = v30 + v25;
LABEL_26:
      unint64_t v34 = (unint64_t)v28;
      double v35 = (double)v27;
      UInt32 v22 = 1;
      a4 = v46;
      a6 = v47;
      a1 = v44;
      a7 = v45;
    }
    else
    {
      unint64_t v34 = 0;
      double v35 = 0.0;
      double v29 = 0.0;
      double v24 = 0.0;
    }
    if (*(void *)(v17 + 248) && *(_DWORD *)(v17 + 212) >= *(_DWORD *)(v17 + 208))
    {
      uint64_t v36 = mach_absolute_time();
      uint64_t v37 = *(unsigned int *)(v17 + 208);
      *(_DWORD *)(v17 + 212) -= v37;
      if ((unint64_t)(v35 + (double)((unint64_t)v24 - v34 + v37 + *(void *)(v17 + 272)) * v29) > v36) {
        int64_t v38 = UpTicksToNanoseconds() + 1000000;
      }
      else {
        int64_t v38 = 0;
      }
      carplaysource_scheduleReadinessCallbackAfterTimeNs(a1, v38);
    }
    uint64_t v21 = 0;
    goto LABEL_43;
  }
  uint64_t v21 = 0;
  char v33 = 1;
LABEL_36:
  if (*(void *)(v17 + 248))
  {
    if (a5) {
      int64_t v39 = 1000000;
    }
    else {
      int64_t v39 = 5000000;
    }
    carplaysource_scheduleReadinessCallbackAfterTimeNs(a1, v39);
  }
  if (v33)
  {
    UInt32 v22 = 0;
    double v24 = 0.0;
LABEL_43:
    UInt32 v40 = ioOutputDataPacketSize;
    *a7 = ioOutputDataPacketSize;
    if (a4)
    {
      uint64_t v41 = 0;
      if (v40)
      {
        uint64_t v42 = v40 - 1;
        do
          v41 += a4[v42--].mDataByteSize;
        while (v42 != -1);
      }
    }
    else
    {
      uint64_t v41 = *(_DWORD *)(v17 + 64) * v40;
    }
    *a6 = v41;
    if (a8)
    {
      *(double *)a8 = v24;
      *(_OWORD *)(a8 + 8) = 0u;
      *(_OWORD *)(a8 + 24) = 0u;
      *(_OWORD *)(a8 + 40) = 0u;
      *(_DWORD *)(a8 + 56) = v22;
      *(_DWORD *)(a8 + 60) = 0;
    }
  }
  return v21;
}

void carplaysource_scheduleReadinessCallbackAfterTimeNs(const void *a1, int64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(void *)(DerivedStorage + 200))
  {
    uint64_t v5 = DerivedStorage;
    CFRetain(a1);
    if (a2)
    {
      kdebug_trace();
      dispatch_time_t v6 = dispatch_time(0, a2);
      CFAllocatorRef v7 = *(NSObject **)(v5 + 200);
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 0x40000000;
      block[2] = __carplaysource_scheduleReadinessCallbackAfterTimeNs_block_invoke;
      block[3] = &__block_descriptor_tmp_16;
      block[4] = a1;
      dispatch_after(v6, v7, block);
    }
    else
    {
      uint64_t v8 = *(NSObject **)(v5 + 200);
      v9[0] = MEMORY[0x1E4F143A8];
      v9[1] = 0x40000000;
      v9[2] = __carplaysource_scheduleReadinessCallbackAfterTimeNs_block_invoke_2;
      v9[3] = &__block_descriptor_tmp_17;
      v9[4] = a1;
      dispatch_async(v8, v9);
    }
  }
}

void carplaysource_SuspendInternal(void *a1)
{
  uint64_t v2 = (OpaqueAudioConverter *)a1[24];
  if (v2)
  {
    AudioConverterDispose(v2);
    a1[24] = 0;
  }
  MirroredRingBufferFree();
  unsigned int v3 = (const void *)a1[19];
  if (v3)
  {
    CFRelease(v3);
    a1[19] = 0;
  }
  unsigned int v4 = (const void *)a1[21];
  if (v4)
  {
    CFRelease(v4);
    a1[21] = 0;
  }
  uint64_t v5 = (const void *)a1[22];
  if (v5)
  {
    CFRelease(v5);
    a1[22] = 0;
  }
  dispatch_time_t v6 = (void *)a1[18];
  if (v6)
  {
    a1[18] = 0;
    free(v6);
  }
}

void __carplaysource_scheduleReadinessCallbackAfterTimeNs_block_invoke(uint64_t a1)
{
  carplaysource_ReadinessCallback(*(void *)(a1 + 32));
  uint64_t v2 = *(const void **)(a1 + 32);
  CFRelease(v2);
}

void carplaysource_ReadinessCallback(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v3 = DerivedStorage;
  if (*(unsigned char *)DerivedStorage)
  {
    if (*(unsigned char *)(DerivedStorage + 264)
      || !CMSimpleQueueGetCount(*(CMSimpleQueueRef *)(DerivedStorage + 168))
      || (uint64_t v8 = mach_absolute_time(),
          Head = (unint64_t *)CMSimpleQueueGetHead(*(CMSimpleQueueRef *)(v3 + 168)),
          *(unsigned char *)(v3 + 264) = 1,
          double v10 = (double)Head[4] + (double)*(unint64_t *)(v3 + 272) * *((double *)Head + 28),
          (unint64_t)v10 <= v8))
    {
      *(void *)(v3 + 240) = mach_absolute_time();
      unsigned int v4 = *(_DWORD *)(v3 + 208);
      unsigned int v5 = *(_DWORD *)(v3 + 68);
      dispatch_time_t v6 = *(void **)(CMBaseObjectGetVTable() + 16);
      if (v6) {
        CFAllocatorRef v7 = v6;
      }
      else {
        CFAllocatorRef v7 = 0;
      }
      if (*v7 < 2uLL || (unsigned int v13 = (unsigned int (*)(uint64_t, void))v7[8]) != 0 && !v13(a1, v4 / v5))
      {
        if (!*(void *)(v3 + 224))
        {
          *(void *)(v3 + 224) = *(void *)(v3 + 240);
          ++*(_DWORD *)(v3 + 232);
        }
        carplaysource_scheduleReadinessCallbackAfterTimeNs(a1, 1000000);
      }
      else
      {
        if (*(void *)(v3 + 224))
        {
          if (gLogCategory_APAudioSourceCarPlay <= 30
            && (gLogCategory_APAudioSourceCarPlay != -1 || _LogCategory_Initialize()))
          {
            UpTicksPerSecond();
            LogPrintF();
          }
          *(void *)(v3 + 224) = 0;
        }
        if (*(void *)(v3 + 248))
        {
          kdebug_trace();
          long long v15 = *(void (**)(uint64_t))(v3 + 248);
          uint64_t v14 = *(void *)(v3 + 256);
          v15(v14);
        }
      }
    }
    else
    {
      unint64_t v11 = 1000000000 * ((unint64_t)v10 - v8);
      unint64_t v12 = UpTicksPerSecond();
      carplaysource_scheduleReadinessCallbackAfterTimeNs(a1, v11 / v12 + 1000000);
      *(void *)(v3 + 240) = mach_absolute_time();
    }
  }
  else
  {
    carplaysource_SuspendInternal((void *)DerivedStorage);
  }
}

void __carplaysource_scheduleReadinessCallbackAfterTimeNs_block_invoke_2(uint64_t a1)
{
  carplaysource_ReadinessCallback(*(void *)(a1 + 32));
  uint64_t v2 = *(const void **)(a1 + 32);
  CFRelease(v2);
}

uint64_t carplaysource_AudioConverterInputCallBack(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5 = *(_DWORD *)(a5 + 132);
  int v6 = *(_DWORD *)(a5 + 128) + *(_DWORD *)(a5 + 140);
  *(_DWORD *)(a5 + 128) = v6;
  *(_DWORD *)(a5 + 140) = 0;
  unsigned int v7 = v5 - v6;
  unsigned int v8 = *(_DWORD *)(a5 + 24);
  if (*a2 * v8 >= v7) {
    unsigned int v9 = v7;
  }
  else {
    unsigned int v9 = *a2 * v8;
  }
  if (!v9) {
    return 4294950522;
  }
  int v11 = *(_DWORD *)(a5 + 36);
  *(void *)(a3 + 16) = *(void *)(a5 + 104) + (*(_DWORD *)(a5 + 124) & v6);
  *(_DWORD *)(a3 + 8) = v11;
  *(_DWORD *)(a3 + 12) = v9;
  *a2 = v9 / v8;
  if (v8 <= v9)
  {
    unsigned int v12 = *(_DWORD *)(a5 + 32);
    if (v12 <= v9)
    {
      unsigned int v13 = v9 / v12;
      while (1)
      {
        Head = CMSimpleQueueGetHead(*(CMSimpleQueueRef *)(a5 + 168));
        int v15 = *(_DWORD *)(a5 + 184);
        if (!v15)
        {
          CMSimpleQueueEnqueue(*(CMSimpleQueueRef *)(a5 + 176), Head);
          int v15 = *(_DWORD *)(a5 + 184);
        }
        if (*Head - v15 > v13) {
          break;
        }
        CMSimpleQueueDequeue(*(CMSimpleQueueRef *)(a5 + 168));
        int v16 = *(_DWORD *)(a5 + 184);
        unsigned int v17 = v13 - *Head;
        *(_DWORD *)(a5 + 184) = 0;
        unsigned int v13 = v17 + v16;
        if (!(v17 + v16)) {
          goto LABEL_14;
        }
      }
      *(_DWORD *)(a5 + 184) = v15 + v13;
    }
  }
LABEL_14:
  uint64_t result = 0;
  *(_DWORD *)(a5 + 140) = v9;
  return result;
}

uint64_t APAudioEngineVendorGetTypeID()
{
  if (gAPAudioEngineVendorInitOnce != -1) {
    dispatch_once_f(&gAPAudioEngineVendorInitOnce, 0, (dispatch_function_t)_APAudioEngineVendorGetTypeID);
  }
  return gAPAudioEngineVendorTypeID;
}

uint64_t _APAudioEngineVendorGetTypeID()
{
  uint64_t result = _CFRuntimeRegisterClass();
  gAPAudioEngineVendorCFTypeID TypeID = result;
  return result;
}

uint64_t APAudioEngineVendorCreate(const void *a1, const void *a2, uint64_t (*a3)(CFAllocatorRef, void, void, void *), void *a4)
{
  if (!a3) {
    return 4294960591;
  }
  if (gAPAudioEngineVendorInitOnce != -1) {
    dispatch_once_f(&gAPAudioEngineVendorInitOnce, 0, (dispatch_function_t)_APAudioEngineVendorGetTypeID);
  }
  uint64_t Instance = _CFRuntimeCreateInstance();
  if (!Instance) {
    return 4294960568;
  }
  unsigned int v9 = (void *)Instance;
  *(_OWORD *)(Instance + 16) = 0u;
  *(_OWORD *)(Instance + 32) = 0u;
  double v10 = (void *)(Instance + 16);
  if (a1) {
    CFTypeRef v11 = CFRetain(a1);
  }
  else {
    CFTypeRef v11 = 0;
  }
  *double v10 = v11;
  if (a2) {
    CFTypeRef v12 = CFRetain(a2);
  }
  else {
    CFTypeRef v12 = 0;
  }
  v9[3] = v12;
  v9[4] = a3;
  CFAllocatorRef v13 = CFGetAllocator(v9);
  uint64_t v14 = a3(v13, v9[2], v9[3], v9 + 5);
  if (v14) {
    CFRelease(v9);
  }
  else {
    *a4 = v9;
  }
  return v14;
}

uint64_t APAudioEngineVendorVend(void *cf, uint64_t a2)
{
  unsigned int v8 = (uint64_t (*)(CFAllocatorRef, uint64_t, uint64_t, uint64_t))cf[4];
  CFAllocatorRef v4 = CFGetAllocator(cf);
  uint64_t v5 = cf[2];
  uint64_t v6 = cf[3];
  return v8(v4, v5, v6, a2);
}

void _APAudioEngineVendorFinalize(void *a1)
{
  uint64_t v2 = (const void *)a1[2];
  if (v2) {
    CFRelease(v2);
  }
  uint64_t v3 = (const void *)a1[3];
  if (v3) {
    CFRelease(v3);
  }
  CFAllocatorRef v4 = (const void *)a1[5];
  if (v4)
  {
    CFRelease(v4);
  }
}

uint64_t APEndpointAggregateCreateAsSystemMusicAggregate(uint64_t a1, int a2, const void *a3, void *a4)
{
  return endpointAggregate_createInternal(a1, 0, 0, 0, 0, a2 != 2, a2 == 1, 0, a3, 0, a4);
}

uint64_t endpointAggregate_createInternal(uint64_t a1, int a2, const void *a3, const void *a4, char a5, int a6, int a7, uint64_t a8, const void *a9, const __CFDictionary *a10, void *a11)
{
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  FigEndpointAggregateGetClassID();
  uint64_t v46 = CMDerivedObjectCreate();
  if (v46) {
    goto LABEL_56;
  }
  uint64_t DerivedStorage = (unsigned char *)CMBaseObjectGetDerivedStorage();
  long long v20 = DerivedStorage;
  DerivedStorage[448] = a5;
  DerivedStorage[449] = a6;
  if (a6) {
    BOOL v21 = a7 == 0;
  }
  else {
    BOOL v21 = 0;
  }
  char v22 = v21;
  DerivedStorage[450] = v22;
  char v23 = DerivedStorage + 456;
  if (!FigCFDictionaryGetBooleanIfPresent()) {
    unsigned char *v23 = APSMultiPrimariesEnabled();
  }
  if (FigCFDictionaryGetIntIfPresent())
  {
    int v24 = 0;
LABEL_16:
    *((_DWORD *)v20 + 120) = v24;
    goto LABEL_17;
  }
  if (IsAppleTV())
  {
    int v24 = 4;
    goto LABEL_16;
  }
  if (APSIsAPMSpeaker())
  {
    int v24 = 7;
    goto LABEL_16;
  }
  *((_DWORD *)v20 + 120) = 0;
LABEL_17:
  if (a10)
  {
    int Value = CFDictionaryGetValue(a10, @"aggregateIsMemberOfHTGroup");
    *((void *)v20 + 58) = Value;
    if (Value) {
      CFRetain(Value);
    }
    uint64_t v26 = CFDictionaryGetValue(a10, @"aggregateIsPersistentConnectionOverride");
    *((void *)v20 + 59) = v26;
    if (v26) {
      CFRetain(v26);
    }
    if (a9) {
      goto LABEL_23;
    }
LABEL_25:
    CFTypeRef v27 = 0;
    goto LABEL_26;
  }
  *((void *)v20 + 58) = 0;
  *((void *)v20 + 59) = 0;
  if (!a9) {
    goto LABEL_25;
  }
LABEL_23:
  CFTypeRef v27 = CFRetain(a9);
LABEL_26:
  *((void *)v20 + 55) = v27;
  uint64_t v28 = FigSimpleMutexCreate();
  *(void *)long long v20 = v28;
  if (!v28) {
    goto LABEL_54;
  }
  if (a3)
  {
    double v29 = (void *)CFRetain(a3);
  }
  else
  {
    UUIDGet();
    unsigned int v30 = (const char *)UUIDtoCString();
    double v29 = (void *)CFStringCreateWithCString(0, v30, 0x8000100u);
  }
  *((void *)v20 + 53) = v29;
  if (!v29) {
    goto LABEL_54;
  }
  if (a7)
  {
    if (!a6)
    {
      APSLogErrorAt();
      LODWORD(v46) = APSSignalErrorAt();
      return v46;
    }
    LODWORD(v46) = APEndpointLocalCreate(a1, (void *)v20 + 51);
    if (v46)
    {
LABEL_56:
      APSLogErrorAt();
      return v46;
    }
  }
  CFAllocatorRef v31 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], &endpointAggregate_createInternal_subEndpointEntryDictionaryCallbacks);
  *((void *)v20 + 1) = Mutable;
  if (!Mutable) {
    goto LABEL_54;
  }
  CFMutableArrayRef v33 = CFArrayCreateMutable(v31, 0, MEMORY[0x1E4F1D510]);
  *((void *)v20 + 4) = v33;
  if (!v33) {
    goto LABEL_54;
  }
  SNPrintF();
  dispatch_queue_t v34 = dispatch_queue_create(label, 0);
  *((void *)v20 + 48) = v34;
  if (!v34) {
    goto LABEL_54;
  }
  SNPrintF();
  dispatch_queue_t v35 = dispatch_queue_create(label, 0);
  *((void *)v20 + 49) = v35;
  if (!v35) {
    goto LABEL_54;
  }
  *((_DWORD *)v20 + 100) = a2;
  *((void *)v20 + 54) = a8;
  v20[162] = *((_DWORD *)v20 + 120) == 4;
  v20[162] = FigGetCFPreferenceNumberWithDefault();
  *((void *)v20 + 45) = 0;
  CFAllocatorRef v36 = CFGetAllocator(0);
  CFMutableDictionaryRef v37 = CFDictionaryCreateMutable(v36, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  *((void *)v20 + 13) = v37;
  if (!v37) {
    goto LABEL_54;
  }
  CFAllocatorRef v38 = CFGetAllocator(0);
  CFMutableDictionaryRef v39 = CFDictionaryCreateMutable(v38, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  *((void *)v20 + 16) = v39;
  if (!v39) {
    goto LABEL_54;
  }
  CFAllocatorRef v40 = CFGetAllocator(0);
  CFMutableDictionaryRef v41 = CFDictionaryCreateMutable(v40, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  *((void *)v20 + 21) = v41;
  if (!v41
    || (CFAllocatorRef v42 = CFGetAllocator(0),
        CFMutableDictionaryRef v43 = CFDictionaryCreateMutable(v42, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]),
        (*((void *)v20 + 17) = v43) == 0)
    || (CFMutableDictionaryRef v44 = CFDictionaryCreateMutable(v31, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]),
        (*((void *)v20 + 47) = v44) == 0))
  {
LABEL_54:
    APSLogErrorAt();
    LODWORD(v46) = -16721;
    return v46;
  }
  if (a4) {
    *((void *)v20 + 52) = CFRetain(a4);
  }
  else {
    *((void *)v20 + 52) = CFStringCreateF();
  }
  if (gLogCategory_APEndpointAggregate <= 50
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  *a11 = 0;
  return v46;
}

uint64_t APEndpointAggregateCreateAsSystemRemotePool(uint64_t a1, void *a2)
{
  return endpointAggregate_createInternal(a1, 3, 0, 0, 0, 0, 0, 0, 0, 0, a2);
}

uint64_t APEndpointAggregateCreateAsCluster(uint64_t a1, const void *a2, const void *a3, char a4, uint64_t a5, const void *a6, const __CFDictionary *a7, void *a8)
{
  return endpointAggregate_createInternal(a1, 2, a2, a3, a4, 0, 0, a5, a6, a7, a8);
}

void endpointAggregate_subEndpointEntryReleaseCallback(int a1, void *a2)
{
}

uint64_t endpointAggregate_subEndpointEntryCopyDescriptionCallback(uint64_t result)
{
  if (result)
  {
    uint64_t result = CFStringCreateF();
    if (!result)
    {
      APSLogErrorAt();
      return 0;
    }
  }
  return result;
}

BOOL endpointAggregate_subEndpointEntryEqualCallback(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
}

void endpointAggregate_Finalize()
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  uint64_t v1 = DerivedStorage[49];
  if (v1)
  {
    dispatch_release(v1);
    DerivedStorage[49] = 0;
  }
  uint64_t v2 = DerivedStorage[48];
  if (v2)
  {
    dispatch_release(v2);
    DerivedStorage[48] = 0;
  }
  FigSimpleMutexDestroy();
  if (gLogCategory_APEndpointAggregate <= 50
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v3 = (const void *)DerivedStorage[31];
  if (v3)
  {
    CFRelease(v3);
    DerivedStorage[31] = 0;
  }
  CFAllocatorRef v4 = (const void *)DerivedStorage[32];
  if (v4)
  {
    CFRelease(v4);
    DerivedStorage[32] = 0;
  }
  uint64_t v5 = (const void *)DerivedStorage[8];
  if (v5)
  {
    CFRelease(v5);
    DerivedStorage[8] = 0;
  }
  uint64_t v6 = (const void *)DerivedStorage[9];
  if (v6)
  {
    CFRelease(v6);
    DerivedStorage[9] = 0;
  }
  unsigned int v7 = (const void *)DerivedStorage[10];
  if (v7)
  {
    CFRelease(v7);
    DerivedStorage[10] = 0;
  }
  unsigned int v8 = (const void *)DerivedStorage[11];
  if (v8)
  {
    CFRelease(v8);
    DerivedStorage[11] = 0;
  }
  unsigned int v9 = (const void *)DerivedStorage[13];
  if (v9)
  {
    CFRelease(v9);
    DerivedStorage[13] = 0;
  }
  double v10 = (const void *)DerivedStorage[14];
  if (v10)
  {
    CFRelease(v10);
    DerivedStorage[14] = 0;
  }
  CFTypeRef v11 = (const void *)DerivedStorage[1];
  if (v11)
  {
    CFRelease(v11);
    DerivedStorage[1] = 0;
  }
  CFTypeRef v12 = (const void *)DerivedStorage[3];
  if (v12)
  {
    CFRelease(v12);
    DerivedStorage[3] = 0;
  }
  CFAllocatorRef v13 = (const void *)DerivedStorage[4];
  if (v13)
  {
    CFRelease(v13);
    DerivedStorage[4] = 0;
  }
  uint64_t v14 = (const void *)DerivedStorage[16];
  if (v14)
  {
    CFRelease(v14);
    DerivedStorage[16] = 0;
  }
  int v15 = (const void *)DerivedStorage[17];
  if (v15)
  {
    CFRelease(v15);
    DerivedStorage[17] = 0;
  }
  int v16 = (const void *)DerivedStorage[21];
  if (v16)
  {
    CFRelease(v16);
    DerivedStorage[21] = 0;
  }
  unsigned int v17 = (const void *)DerivedStorage[18];
  if (v17)
  {
    CFRelease(v17);
    DerivedStorage[18] = 0;
  }
  UInt32 v18 = (const void *)DerivedStorage[19];
  if (v18)
  {
    CFRelease(v18);
    DerivedStorage[19] = 0;
  }
  uint64_t v19 = (const void *)DerivedStorage[42];
  if (v19)
  {
    CFRelease(v19);
    DerivedStorage[42] = 0;
  }
  long long v20 = (const void *)DerivedStorage[47];
  if (v20)
  {
    CFRelease(v20);
    DerivedStorage[47] = 0;
  }
  BOOL v21 = (const void *)DerivedStorage[55];
  if (v21)
  {
    CFRelease(v21);
    DerivedStorage[55] = 0;
  }
  char v22 = (const void *)DerivedStorage[53];
  if (v22)
  {
    CFRelease(v22);
    DerivedStorage[53] = 0;
  }
  char v23 = (const void *)DerivedStorage[51];
  if (v23)
  {
    CFRelease(v23);
    DerivedStorage[51] = 0;
  }
  int v24 = (const void *)DerivedStorage[52];
  if (v24)
  {
    CFRelease(v24);
    DerivedStorage[52] = 0;
  }
  UInt32 v25 = (const void *)DerivedStorage[58];
  if (v25)
  {
    CFRelease(v25);
    DerivedStorage[58] = 0;
  }
  uint64_t v26 = (const void *)DerivedStorage[59];
  if (v26)
  {
    CFRelease(v26);
    DerivedStorage[59] = 0;
  }
}

CFStringRef endpointAggregate_CopyDebugDescription(const void *a1)
{
  CFAllocatorRef v2 = CFGetAllocator(a1);
  return CFStringCreateWithFormat(v2, 0, @"<APEndpointAggregate %p>", a1);
}

uint64_t endpointAggregate_CopyProperty(uint64_t a1, const void *a2, const __CFAllocator *a3, void *a4)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  uint64_t v19 = 0;
  if (gLogCategory_APEndpointAggregate <= 10
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a2)
  {
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20F28]))
    {
      unsigned int v9 = (__CFString *)DerivedStorage[52];
LABEL_15:
      CFTypeRef v11 = (void *)CFRetain(v9);
LABEL_16:
      uint64_t v12 = 0;
      *a4 = v11;
      return v12;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20F68]))
    {
      if (DerivedStorage[8]) {
        unsigned int v9 = (__CFString *)DerivedStorage[8];
      }
      else {
        unsigned int v9 = (__CFString *)*MEMORY[0x1E4F20C78];
      }
      goto LABEL_15;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21048]))
    {
      double v10 = (__CFString **)MEMORY[0x1E4F21550];
LABEL_14:
      unsigned int v9 = *v10;
      goto LABEL_15;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20FB8]))
    {
      int v14 = *((_DWORD *)DerivedStorage + 100);
      if (v14 == 3)
      {
        double v10 = (__CFString **)MEMORY[0x1E4F214A0];
      }
      else if (v14 == 2)
      {
        double v10 = (__CFString **)MEMORY[0x1E4F21490];
      }
      else
      {
        if (v14)
        {
          unsigned int v9 = @"Unknown";
          goto LABEL_15;
        }
        double v10 = (__CFString **)MEMORY[0x1E4F21498];
      }
      goto LABEL_14;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20D10]))
    {
LABEL_24:
      double v10 = (__CFString **)MEMORY[0x1E4F1CFC8];
      goto LABEL_14;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20EB8]))
    {
      double v10 = (__CFString **)MEMORY[0x1E4F1CFD0];
      if (*((_DWORD *)DerivedStorage + 100) != 3) {
        double v10 = (__CFString **)MEMORY[0x1E4F1CFC8];
      }
      goto LABEL_14;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20FC0]))
    {
      int v15 = *((_DWORD *)DerivedStorage + 100);
      if (v15 == 3)
      {
        uint64_t valuePtr = 16;
      }
      else
      {
        uint64_t valuePtr = 10;
        uint64_t v16 = 14;
        if (v15 == 2 && *((_DWORD *)DerivedStorage + 120) == 4)
        {
          if (*((unsigned char *)DerivedStorage + 448))
          {
            uint64_t valuePtr = 42;
            uint64_t v16 = 46;
          }
          else
          {
            uint64_t v16 = 14;
          }
        }
        unsigned int v17 = *(_DWORD *)(CMBaseObjectGetDerivedStorage() + 480);
        if (v17 > 0xD || ((1 << v17) & 0x2090) == 0) {
          uint64_t valuePtr = v16;
        }
      }
      CFTypeRef v11 = CFNumberCreate(a3, kCFNumberSInt64Type, &valuePtr);
      if (v11) {
        goto LABEL_16;
      }
      APSLogErrorAt();
      uint64_t v12 = 4294950575;
    }
    else
    {
      if (CFEqual(a2, @"SupportsMuteControl")) {
        goto LABEL_24;
      }
      MEMORY[0x1D25EB370](*DerivedStorage);
      uint64_t v12 = endpointAggregate_copyPropertyInternal(a1, a2, a3, &v19);
      MEMORY[0x1D25EB390](*DerivedStorage);
      if (!v12)
      {
        CFTypeRef v11 = v19;
        goto LABEL_16;
      }
      if (v12 == -12784) {
        return v12;
      }
    }
  }
  else
  {
    APSLogErrorAt();
    uint64_t v12 = 4294950536;
  }
  if (gLogCategory_APEndpointAggregate <= 90
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v12;
}

uint64_t endpointAggregate_SetProperty(const void *a1, const void *a2, const void *a3)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointAggregate <= 50
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*DerivedStorage);
  uint64_t v7 = CMBaseObjectGetDerivedStorage();
  if (!a2) {
    goto LABEL_39;
  }
  uint64_t v8 = v7;
  if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20398]))
  {
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21080]) || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21098]))
    {
      if (*(_DWORD *)(v8 + 400) != 3)
      {
        uint64_t IsEnabledOrDisabled = endpointAggregate_setPropertyOnAllSubEndpoints((uint64_t)a1, (uint64_t)a2, (uint64_t)a3);
        goto LABEL_25;
      }
    }
    else
    {
      if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20E98])
        && !CFEqual(a2, @"IsHALMuted")
        && !CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20EA0])
        && !CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20EA8]))
      {
        if (gLogCategory_APEndpointAggregate <= 30
          && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t IsEnabledOrDisabled = 4294954512;
        goto LABEL_25;
      }
      if (*(_DWORD *)(v8 + 400) != 3)
      {
        uint64_t IsEnabledOrDisabled = endpointAggregate_setPropertyOnAllSubEndpoints((uint64_t)a1, (uint64_t)a2, (uint64_t)a3);
        if (!IsEnabledOrDisabled) {
          goto LABEL_25;
        }
        goto LABEL_35;
      }
    }
LABEL_44:
    APSLogErrorAt();
    uint64_t IsEnabledOrDisabled = 4294950570;
    goto LABEL_25;
  }
  if (!a3 || (CFTypeID v9 = CFGetTypeID(a3), v9 != CFBooleanGetTypeID()))
  {
LABEL_39:
    APSLogErrorAt();
    uint64_t IsEnabledOrDisabled = 4294950576;
    goto LABEL_25;
  }
  if (*(_DWORD *)(v8 + 400) == 3) {
    goto LABEL_44;
  }
  if (!*(unsigned char *)(v8 + 449))
  {
    APSLogErrorAt();
    uint64_t IsEnabledOrDisabled = 4294954509;
    goto LABEL_25;
  }
  if (endpointAggregate_isATVInHTGroup())
  {
    if (gLogCategory_APEndpointAggregate <= 50
      && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_24;
  }
  int Value = CFBooleanGetValue((CFBooleanRef)a3);
  if (*(unsigned __int8 *)(v8 + 160) == Value)
  {
LABEL_24:
    uint64_t IsEnabledOrDisabled = 0;
    goto LABEL_25;
  }
  *(unsigned char *)(v8 + 160) = Value;
  if (gLogCategory_APEndpointAggregate <= 50
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t IsEnabledOrDisabled = endpointAggregate_ensureLocalPlaybackIsEnabledOrDisabled(a1);
  if (IsEnabledOrDisabled) {
LABEL_35:
  }
    APSLogErrorAt();
LABEL_25:
  MEMORY[0x1D25EB390](*DerivedStorage);
  return IsEnabledOrDisabled;
}

uint64_t endpointAggregate_copyPropertyInternal(uint64_t a1, const void *a2, const __CFAllocator *a3, void *a4)
{
  unsigned int EnabledFeatures = 0;
  unsigned int v30 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
  {
    APSLogErrorAt();
    return -16760;
  }
  uint64_t v9 = DerivedStorage;
  double v10 = (const void *)*MEMORY[0x1E4F20E40];
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20E40])
    || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20E38])
    || !*(unsigned char *)(v9 + 44))
  {
    if (CFEqual(a2, v10))
    {
      CFTypeRef v11 = (const void **)MEMORY[0x1E4F1CFD0];
      uint64_t v12 = (const void **)MEMORY[0x1E4F1CFC8];
      BOOL v13 = *(_DWORD *)(v9 + 40) == 2;
LABEL_7:
      if (!v13) {
        CFTypeRef v11 = v12;
      }
      goto LABEL_9;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20C88]))
    {
      uint64_t valuePtr = 0;
      if (*(_DWORD *)(v9 + 40) == 2) {
        uint64_t valuePtr = *(void *)(v9 + 56);
      }
      unsigned int v30 = CFNumberCreate(a3, kCFNumberSInt64Type, &valuePtr);
      if (v30)
      {
LABEL_16:
        if (!EnabledFeatures)
        {
LABEL_17:
          *a4 = v30;
          return EnabledFeatures;
        }
LABEL_36:
        APSLogErrorAt();
        return EnabledFeatures;
      }
      goto LABEL_47;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20E38]))
    {
      int v14 = *(const void **)(v9 + 424);
      goto LABEL_10;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20398]))
    {
      if (!*(unsigned char *)(v9 + 449))
      {
        APSLogErrorAt();
        return APSSignalErrorAt();
      }
      CFTypeRef v11 = (const void **)MEMORY[0x1E4F1CFC8];
      uint64_t v12 = (const void **)MEMORY[0x1E4F1CFD0];
      BOOL v13 = *(unsigned char *)(v9 + 160) == 0;
      goto LABEL_7;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20F78]))
    {
      int v14 = *(const void **)(v9 + 72);
      if (!v14) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (CFEqual(a2, @"EnabledFeatures"))
    {
      uint64_t valuePtr = 0;
      unsigned int EnabledFeatures = APEndpointGetEnabledFeatures(*(void *)(v9 + 128), *(void *)(v9 + 152) != 0, &valuePtr);
      if (EnabledFeatures) {
        goto LABEL_36;
      }
      unsigned int v30 = CFNumberCreate(a3, kCFNumberSInt64Type, &valuePtr);
      if (v30) {
        goto LABEL_16;
      }
LABEL_47:
      APSLogErrorAt();
      return -16721;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20FA8]))
    {
      unsigned int v16 = endpointAggregate_copyStreams(a1, a3, &v30);
      goto LABEL_35;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20FB0]))
    {
      unsigned int v16 = endpointAggregate_copyExposedSubEndpoints(a1, &v30);
      goto LABEL_35;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20CC0]))
    {
      CFTypeRef v11 = (const void **)MEMORY[0x1E4F1CFD0];
      int v18 = *(unsigned __int8 *)(v9 + 344);
LABEL_43:
      uint64_t v19 = (const void **)MEMORY[0x1E4F1CFC8];
      BOOL v20 = v18 == 0;
      goto LABEL_44;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21088]))
    {
      CFTypeRef v11 = (const void **)MEMORY[0x1E4F1CFD0];
      int v18 = *(unsigned __int8 *)(v9 + 352);
      goto LABEL_43;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21090]))
    {
      unsigned int v30 = CFNumberCreate(a3, kCFNumberSInt64Type, (const void *)(v9 + 360));
      if (v30) {
        goto LABEL_16;
      }
      goto LABEL_47;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20F20]))
    {
      CFTypeRef v11 = (const void **)MEMORY[0x1E4F1CFD0];
      int v18 = *(unsigned __int8 *)(v9 + 368);
      goto LABEL_43;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21098]) || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21080]))
    {
      unsigned int v16 = endpointAggregate_copyPropertyFromAnySubEndpoint(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&v30);
      goto LABEL_35;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20E98])
      || CFEqual(a2, @"IsHALMuted")
      || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20EA0])
      || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20EA8]))
    {
      LOBYTE(valuePtr) = 0;
      unsigned int EnabledFeatures = endpointAggregate_isMuted(a1, (uint64_t)a2, (BOOL *)&valuePtr);
      if (EnabledFeatures) {
        goto LABEL_36;
      }
      CFTypeRef v11 = (const void **)MEMORY[0x1E4F1CFD0];
      int v18 = valuePtr;
      goto LABEL_43;
    }
    if (CFEqual(a2, @"EndpointShowInfo"))
    {
      unsigned int v16 = endpointAggregate_copyShowInfoDict(a1, &v30);
LABEL_35:
      unsigned int EnabledFeatures = v16;
      if (!v16) {
        goto LABEL_17;
      }
      goto LABEL_36;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20CA8])
      || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20CB8])
      || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20CC8])
      || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20FE8])
      || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20FF0]))
    {
      int v14 = *(const void **)(v9 + 152);
      if (v14)
      {
LABEL_77:
        int v14 = (const void *)endpointAggregate_copySubEndpointProperty((uint64_t)v14, (uint64_t)a3, (uint64_t)a2, (int *)&EnabledFeatures);
        goto LABEL_11;
      }
      CFTypeRef v11 = (const void **)MEMORY[0x1E4F1CFC8];
LABEL_9:
      int v14 = *v11;
LABEL_10:
      int v14 = CFRetain(v14);
LABEL_11:
      unsigned int v30 = (__CFArray *)v14;
      goto LABEL_16;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20DB8])
      || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20DD8])
      || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20DC8])
      || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20DD0])
      || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20DE8]))
    {
      int v14 = *(const void **)(v9 + 152);
      if (v14) {
        goto LABEL_77;
      }
      CFTypeRef v11 = (const void **)MEMORY[0x1E4F1CFD0];
      goto LABEL_9;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20CD0]))
    {
      uint64_t v21 = *(void *)(v9 + 152);
      if (v21) {
        uint64_t Int64 = (__CFDictionary *)endpointAggregate_copySubEndpointProperty(v21, (uint64_t)a3, (uint64_t)a2, (int *)&EnabledFeatures);
      }
      else {
        uint64_t Int64 = (__CFDictionary *)CFNumberCreateInt64();
      }
      unsigned int v30 = Int64;
      if (Int64) {
        goto LABEL_16;
      }
      goto LABEL_47;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20DC0]))
    {
      int v14 = *(const void **)(v9 + 152);
      if (!v14) {
        goto LABEL_11;
      }
      goto LABEL_77;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20EC0]))
    {
      CFTypeRef v11 = (const void **)MEMORY[0x1E4F1CFD0];
      uint64_t v19 = (const void **)MEMORY[0x1E4F1CFC8];
      BOOL v20 = *(void *)(v9 + 152) == 0;
LABEL_44:
      if (v20) {
        CFTypeRef v11 = v19;
      }
      goto LABEL_9;
    }
    if (CFEqual(a2, @"IsEngaged"))
    {
      CFTypeRef v11 = (const void **)MEMORY[0x1E4F1CFD0];
      int v18 = *(unsigned __int8 *)(v9 + 45);
      goto LABEL_43;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21050]))
    {
      int v14 = *(const void **)(v9 + 144);
      if (!v14) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20E08]))
    {
      char v23 = *(const void **)(v9 + 88);
      if (v23)
      {
        unsigned int v30 = (__CFArray *)CFRetain(v23);
        if (v30) {
          goto LABEL_16;
        }
      }
      APSLogErrorAt();
      return -17606;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20D58]))
    {
      if (*(_DWORD *)(v9 + 400) == 2)
      {
        unsigned int EnabledFeatures = endpointAggregate_copyClusterActivatedCompositionAsArray(a1, (uint64_t *)&v30);
        if (!EnabledFeatures) {
          goto LABEL_17;
        }
        goto LABEL_36;
      }
      return -16726;
    }
    if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20D88])) {
      return -12784;
    }
    CFArrayRef v24 = (const __CFArray *)FigCFDictionaryCopyArrayOfKeys();
    if (v24)
    {
      CFArrayRef v25 = v24;
      if (CFArrayGetCount(v24) < 1)
      {
        CFRelease(v25);
      }
      else
      {
        char v26 = 0;
        CFIndex v27 = 0;
        do
        {
          CFArrayGetValueAtIndex(v25, v27);
          v26 |= APSGetFBOPropertyInt64() != 0;
          ++v27;
        }
        while (v27 < CFArrayGetCount(v25));
        CFRelease(v25);
        if (v26)
        {
          uint64_t v28 = (const void **)MEMORY[0x1E4F1CFD0];
          goto LABEL_121;
        }
      }
    }
    uint64_t v28 = (const void **)MEMORY[0x1E4F1CFC8];
LABEL_121:
    int v14 = *v28;
    if (!*v28) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  APSLogErrorAt();
  unsigned int EnabledFeatures = -72255;
  if (gLogCategory_APEndpointAggregate <= 30
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return EnabledFeatures;
}

uint64_t endpointAggregate_copyStreams(uint64_t a1, const __CFAllocator *a2, __CFArray **a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a3)
  {
    APSLogErrorAt();
    return 4294950576;
  }
  uint64_t v7 = DerivedStorage;
  CFMutableArrayRef Mutable = CFArrayCreateMutable(a2, 0, MEMORY[0x1E4F1D510]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294950575;
  }
  uint64_t v9 = Mutable;
  CFArrayRef v10 = (const __CFArray *)FigCFDictionaryCopyArrayOfValues();
  CFArrayRef v11 = v10;
  if (v10)
  {
    v15.length = CFArrayGetCount(v10);
    v15.locatioCFIndex n = 0;
    CFArrayAppendArray(v9, v11, v15);
  }
  uint64_t v12 = *(void *)(v7 + 48);
  if (v12)
  {
    if ((v12 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:
    if (endpointAggregate_getFirstSubEndpointActivatedForFeatures(a1, 1)) {
      FigEndpointCopyFirstStreamOfType();
    }
    goto LABEL_11;
  }
  if (*(void *)(v7 + 56)) {
    goto LABEL_9;
  }
LABEL_11:
  *a3 = v9;
  if (v11) {
    CFRelease(v11);
  }
  return 0;
}

uint64_t endpointAggregate_copyExposedSubEndpoints(uint64_t a1, __CFArray **a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFArrayRef v4 = (const __CFArray *)FigCFDictionaryCopyArrayOfKeys();
  if (v4)
  {
    CFArrayRef v5 = v4;
    CFIndex Count = CFArrayGetCount(v4);
    uint64_t v7 = *(const void **)(DerivedStorage + 408);
    if (v7 && (CFIndex v8 = Count, v12.location = 0, v12.length = Count, CFArrayContainsValue(v5, v12, v7)))
    {
      CFDictionaryRef MutableCopy = CFArrayCreateMutableCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, v5);
      v13.locatioCFIndex n = 0;
      v13.length = v8;
      FirstIndexOfint Value = CFArrayGetFirstIndexOfValue(v5, v13, *(const void **)(DerivedStorage + 408));
      if (gLogCategory_APEndpointAggregate <= 30
        && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFArrayRemoveValueAtIndex(MutableCopy, FirstIndexOfValue);
      if (!a2) {
        goto LABEL_11;
      }
    }
    else
    {
      CFDictionaryRef MutableCopy = (__CFArray *)CFRetain(v5);
      if (!a2)
      {
LABEL_11:
        if (MutableCopy) {
          CFRelease(MutableCopy);
        }
        goto LABEL_13;
      }
    }
    *a2 = MutableCopy;
LABEL_13:
    CFRelease(v5);
    return 0;
  }
  APSLogErrorAt();
  return 4294949690;
}

uint64_t endpointAggregate_copyPropertyFromAnySubEndpoint(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointAggregate <= 30
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFArrayRef v8 = (const __CFArray *)FigCFDictionaryCopyArrayOfKeys();
  CFArrayRef v9 = v8;
  if (*(_DWORD *)(DerivedStorage + 40) != 2)
  {
    APSLogErrorAt();
    uint64_t v17 = 4294895039;
    if (!v9) {
      return v17;
    }
    goto LABEL_20;
  }
  if (!v8)
  {
    APSLogErrorAt();
    return 4294950575;
  }
  CFIndex Count = CFArrayGetCount(v8);
  if (Count < 1)
  {
    uint64_t v17 = 0;
LABEL_20:
    CFRelease(v9);
    return v17;
  }
  CFIndex v11 = Count;
  for (CFIndex i = 0; i != v11; ++i)
  {
    CFArrayGetValueAtIndex(v9, i);
    uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
    uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v14) {
      uint64_t v15 = v14;
    }
    else {
      uint64_t v15 = 0;
    }
    unsigned int v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 48);
    if (v16)
    {
      uint64_t v17 = v16(CMBaseObject, a2, a3, a4);
      if (!v17) {
        break;
      }
    }
    else
    {
      uint64_t v17 = 4294954514;
    }
  }
  if (v9) {
    goto LABEL_20;
  }
  return v17;
}

uint64_t endpointAggregate_isMuted(uint64_t a1, uint64_t a2, BOOL *a3)
{
  unsigned int v14 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointAggregate <= 30
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFArrayRef v5 = (const __CFArray *)FigCFDictionaryCopyArrayOfKeys();
  CFArrayRef v6 = v5;
  if (*(_DWORD *)(DerivedStorage + 40) != 2)
  {
    APSLogErrorAt();
    unsigned int v14 = -72257;
    if (!v6) {
      return v14;
    }
    goto LABEL_19;
  }
  if (!v5)
  {
    APSLogErrorAt();
    return -16721;
  }
  if (!a3)
  {
    APSLogErrorAt();
    unsigned int v14 = -16720;
LABEL_19:
    CFRelease(v6);
    return v14;
  }
  CFIndex Count = CFArrayGetCount(v5);
  if (Count < 1)
  {
    BOOL v11 = 0;
  }
  else
  {
    CFIndex v8 = Count;
    for (CFIndex i = 0; i != v8; ++i)
    {
      CFArrayGetValueAtIndex(v6, i);
      uint64_t v10 = APSGetFBOPropertyInt64();
      BOOL v11 = v10 != 0;
      if (v10) {
        int v12 = 0;
      }
      else {
        int v12 = 11;
      }
      if (v12) {
        break;
      }
    }
  }
  *a3 = v11;
  if (v6) {
    goto LABEL_19;
  }
  return v14;
}

uint64_t endpointAggregate_copyShowInfoDict(uint64_t a1, __CFDictionary **a2)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  __int16 v25 = 0;
  value[1] = 0;
  CFAllocatorRef v4 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 0;
  }
  CFArrayRef v6 = Mutable;
  SNPrintF();
  CFDictionarySetCString();
  uint64_t v7 = (const void *)*MEMORY[0x1E4F1CFD0];
  CFIndex v8 = (const void *)*MEMORY[0x1E4F1CFC8];
  if (*(_DWORD *)(DerivedStorage + 40) == 2) {
    CFArrayRef v9 = (const void *)*MEMORY[0x1E4F1CFD0];
  }
  else {
    CFArrayRef v9 = (const void *)*MEMORY[0x1E4F1CFC8];
  }
  CFDictionarySetValue(v6, @"Activated", v9);
  CFDictionarySetValue(v6, @"Name", @"APEndpointAggregate");
  FigCFDictionarySetValue();
  FigCFDictionarySetValue();
  if (*(_DWORD *)(DerivedStorage + 400) == 3) {
    uint64_t v10 = v7;
  }
  else {
    uint64_t v10 = v8;
  }
  CFDictionarySetValue(v6, @"IsRemoteControlEndpoint", v10);
  CFArrayRef v11 = (const __CFArray *)FigCFDictionaryCopyArrayOfKeys();
  if (!v11)
  {
    uint64_t v22 = 0;
    *a2 = v6;
    return v22;
  }
  CFArrayRef v12 = v11;
  uint64_t Count = CFArrayGetCount(v11);
  if (Count > 0)
  {
    uint64_t v14 = Count;
    CFMutableArrayRef v15 = CFArrayCreateMutable(v4, Count, MEMORY[0x1E4F1D510]);
    if (!v15)
    {
      APSLogErrorAt();
      CFRelease(v6);
      uint64_t v22 = 4294950575;
      goto LABEL_23;
    }
    unsigned int v16 = v15;
    for (CFIndex i = 0; i != v14; ++i)
    {
      value[0] = 0;
      CFArrayGetValueAtIndex(v12, i);
      uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
      uint64_t v19 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v19) {
        uint64_t v20 = v19;
      }
      else {
        uint64_t v20 = 0;
      }
      uint64_t v21 = *(void (**)(uint64_t, __CFString *, const __CFAllocator *, void **))(v20 + 48);
      if (v21) {
        v21(CMBaseObject, @"EndpointShowInfo", v4, value);
      }
      if (value[0])
      {
        CFArrayAppendValue(v16, value[0]);
        if (value[0]) {
          CFRelease(value[0]);
        }
      }
    }
    CFDictionarySetValue(v6, @"SubEndpointShowInfoDicts", v16);
    CFRelease(v16);
  }
  uint64_t v22 = 0;
  *a2 = v6;
LABEL_23:
  CFRelease(v12);
  return v22;
}

uint64_t endpointAggregate_copySubEndpointProperty(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v13 = 0;
  uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
  uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t *))(v9 + 48);
  if (!v10)
  {
    int v11 = -12782;
LABEL_10:
    APSLogErrorAt();
    if (!a4) {
      return v13;
    }
    goto LABEL_7;
  }
  int v11 = v10(CMBaseObject, a3, a2, &v13);
  if (v11) {
    goto LABEL_10;
  }
  if (a4) {
LABEL_7:
  }
    *a4 = v11;
  return v13;
}

uint64_t endpointAggregate_copyClusterActivatedCompositionAsArray(uint64_t a1, uint64_t *a2)
{
  uint64_t v9 = 0;
  uint64_t v10 = &v9;
  uint64_t v11 = 0x2000000000;
  int v12 = 0;
  if (*(_DWORD *)(CMBaseObjectGetDerivedStorage() + 400) != 2)
  {
    CFMutableDictionaryRef Mutable = 0;
    uint64_t v7 = v10;
    int v8 = -16726;
LABEL_20:
    *((_DWORD *)v7 + 6) = v8;
    goto LABEL_9;
  }
  if (gLogCategory_APEndpointAggregate <= 30
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!Mutable) {
    goto LABEL_19;
  }
  CFDictionaryApplyBlock();
  if (*((_DWORD *)v10 + 6))
  {
    APSLogErrorAt();
    goto LABEL_9;
  }
  uint64_t v4 = FigCFDictionaryCopyArrayOfValues();
  *a2 = v4;
  if (!v4)
  {
LABEL_19:
    APSLogErrorAt();
    uint64_t v7 = v10;
    int v8 = -16721;
    goto LABEL_20;
  }
LABEL_9:
  if (gLogCategory_APEndpointAggregate <= 30
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  uint64_t v5 = *((unsigned int *)v10 + 6);
  _Block_object_dispose(&v9, 8);
  return v5;
}

const void *endpointAggregate_getFirstSubEndpointActivatedForFeatures(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(CMBaseObjectGetDerivedStorage() + 40) == 2)
  {
    CFArrayRef v3 = (const __CFArray *)FigCFDictionaryCopyArrayOfKeys();
    CFIndex Count = CFArrayGetCount(v3);
    if (Count < 1)
    {
LABEL_6:
      ValueAtIndex = 0;
    }
    else
    {
      CFIndex v5 = Count;
      CFIndex v6 = 0;
      while (1)
      {
        ValueAtIndex = CFArrayGetValueAtIndex(v3, v6);
        if ((a2 & ~APSGetFBOPropertyInt64()) == 0) {
          break;
        }
        if (v5 == ++v6) {
          goto LABEL_6;
        }
      }
    }
    if (v3) {
      CFRelease(v3);
    }
  }
  else
  {
    APSLogErrorAt();
    return 0;
  }
  return ValueAtIndex;
}

void __endpointAggregate_copyClusterActivatedCompositionAsArray_block_invoke(uint64_t a1, int a2, CFDictionaryRef theDict)
{
  int Value = CFDictionaryGetValue(theDict, (const void *)*MEMORY[0x1E4F21038]);
  if (Value)
  {
    CFIndex v6 = Value;
    CFDictionaryRef v7 = (const __CFDictionary *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 40), Value);
    if (v7)
    {
      CFDictionaryRef v8 = v7;
      uint64_t Int64 = CFDictionaryGetInt64();
      uint64_t v10 = CFDictionaryGetInt64();
      if (Int64) {
        BOOL v11 = 1;
      }
      else {
        BOOL v11 = v10 == 0;
      }
      if (!v11)
      {
        FigCFDictionarySetValueFromKeyInDict();
        FigCFDictionarySetValueFromKeyInDict();
        if (gLogCategory_APEndpointAggregate > 30
          || gLogCategory_APEndpointAggregate == -1 && !_LogCategory_Initialize())
        {
          return;
        }
LABEL_28:
        LogPrintF();
        return;
      }
      if ((Int64 != 0) == (v10 != 0))
      {
        int v12 = (const void *)*MEMORY[0x1E4F20450];
        CFStringRef v13 = (const __CFString *)CFDictionaryGetValue(v8, (const void *)*MEMORY[0x1E4F20450]);
        CFStringRef v14 = (const __CFString *)CFDictionaryGetValue(theDict, v12);
        if (v13)
        {
          CFStringRef v15 = v14;
          CFTypeID v16 = CFGetTypeID(v13);
          if (v16 == CFStringGetTypeID() && v15 != 0)
          {
            CFTypeID v18 = CFGetTypeID(v15);
            if (v18 == CFStringGetTypeID() && CFStringCompare(v13, v15, 1uLL) == kCFCompareGreaterThan)
            {
              CFDictionarySetValue(v8, v12, v15);
              if (gLogCategory_APEndpointAggregate <= 30
                && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
              {
                goto LABEL_28;
              }
            }
          }
        }
      }
    }
    else
    {
      CFDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, theDict);
      if (MutableCopy)
      {
        uint64_t v21 = MutableCopy;
        CFDictionarySetValue(MutableCopy, (const void *)*MEMORY[0x1E4F20458], v6);
        FigCFDictionarySetValueFromKeyInDict();
        FigCFDictionarySetValueFromKeyInDict();
        if (gLogCategory_APEndpointAggregate <= 30
          && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 40), v6, v21);
        CFRelease(v21);
      }
      else
      {
        *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = -16721;
      }
    }
  }
  else
  {
    uint64_t v19 = CFDictionaryGetValue(theDict, (const void *)*MEMORY[0x1E4F20458]);
    if (gLogCategory_APEndpointAggregate <= 30
      && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v22 = *(__CFDictionary **)(a1 + 40);
    CFDictionarySetValue(v22, v19, theDict);
  }
}

uint64_t endpointAggregate_isATVInHTGroup()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v1 = *(void *)(DerivedStorage + 464);
  if (v1)
  {
    return v1 == *MEMORY[0x1E4F1CFD0] && *(_DWORD *)(DerivedStorage + 480) == 4;
  }
  else
  {
    return MEMORY[0x1F4107968]();
  }
}

uint64_t endpointAggregate_ensureLocalPlaybackIsEnabledOrDisabled(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(unsigned char *)(DerivedStorage + 449)) {
    return 0;
  }
  uint64_t v3 = DerivedStorage;
  if (*(unsigned char *)(DerivedStorage + 160) && *(_DWORD *)(DerivedStorage + 40) == 2)
  {
    if (*(unsigned char *)(CMBaseObjectGetDerivedStorage() + 162)) {
      BOOL v4 = endpointAggregate_getSubEndpointCount((uint64_t)a1, 1) > 0;
    }
    else {
      BOOL v4 = 1;
    }
    if (gLogCategory_APEndpointAggregate <= 30
      && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    int v5 = v4;
  }
  else
  {
    int v5 = 0;
  }
  if (*(unsigned char *)(v3 + 161)) {
    int v6 = 1;
  }
  else {
    int v6 = *(void *)(CMBaseObjectGetDerivedStorage() + 24) && APSGetFBOPropertyInt64() != 0;
  }
  if (v6 == v5) {
    return 0;
  }
  if (!*(void *)(v3 + 408))
  {
    uint64_t v9 = CMBaseObjectGetDerivedStorage();
    if (gLogCategory_APEndpointAggregate <= 50
      && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    unint64_t v10 = APEndpointGetAllAudioFeatures(*(void *)(v9 + 56)) & 0xFFFFFFFFFFFFFFDFLL;
    if (v5)
    {
      endpointAggregate_handleSubEndpointFeatureActivationStateChanged(a1, 0, 1, v10);
      endpointAggregate_setEnableLocalPlaybackOnAggregateStreams((uint64_t)a1, 1, v10);
    }
    else
    {
      endpointAggregate_setEnableLocalPlaybackOnAggregateStreams((uint64_t)a1, 0, v10);
      endpointAggregate_handleSubEndpointFeatureActivationStateChanged(a1, 0, 0, v10);
    }
    *(unsigned char *)(v9 + 161) = v5;
    endpointAggregate_updateIsVolumeControlSupported();
    return 0;
  }
  if (!a1 || (FigEndpointAggregateGetClassID(), !CMBaseObjectIsMemberOfClass())) {
    a1 = 0;
  }
  CFDictionaryRef v7 = *(__CFString **)(v3 + 408);
  if (v5)
  {
    uint64_t v8 = endpointAggregate_addEndpointInternal((uint64_t)a1, v7, 0, 0, 0);
    if (v8) {
      goto LABEL_29;
    }
  }
  else
  {
    uint64_t v8 = endpointAggregate_removeEndpointInternal((uint64_t)a1, v7, 0, 0);
    if (v8) {
LABEL_29:
    }
      APSLogErrorAt();
  }
  return v8;
}

uint64_t endpointAggregate_setPropertyOnAllSubEndpoints(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFArrayRef v6 = (const __CFArray *)FigCFDictionaryCopyArrayOfKeys();
  CFArrayRef v7 = v6;
  if (*(_DWORD *)(DerivedStorage + 40) != 2)
  {
    APSLogErrorAt();
    uint64_t v14 = 4294895039;
    if (!v7) {
      return v14;
    }
    goto LABEL_18;
  }
  if (!v6)
  {
    APSLogErrorAt();
    return 4294950575;
  }
  CFIndex Count = CFArrayGetCount(v6);
  if (gLogCategory_APEndpointAggregate <= 50
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (Count < 1)
  {
    uint64_t v14 = 0;
LABEL_18:
    CFRelease(v7);
    return v14;
  }
  for (CFIndex i = 0; i != Count; ++i)
  {
    CFArrayGetValueAtIndex(v7, i);
    uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
    uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v11) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    CFStringRef v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 56);
    if (v13) {
      v13(CMBaseObject, a2, a3);
    }
  }
  uint64_t v14 = 0;
  if (v7) {
    goto LABEL_18;
  }
  return v14;
}

uint64_t endpointAggregate_addEndpointInternal(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  FigEndpoint = (const void *)FigEndpointAggregateGetFigEndpoint();
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  APSGetFBOPropertyInt64();
  uint64_t v11 = *(void *)(DerivedStorage + 48);
  if (!v11) {
    uint64_t v11 = *(void *)(DerivedStorage + 56);
  }
  if (gLogCategory_APEndpointAggregate <= 50
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v12 = malloc_type_calloc(1uLL, 0x28uLL, 0x10A004044E3744DuLL);
  *uint64_t v12 = CFRetain(FigEndpoint);
  v12[1] = *(void *)(DerivedStorage + 120);
  v12[3] = a5;
  v12[4] = a4;
  uint64_t v33 = a4;
  if (*(_DWORD *)(DerivedStorage + 40) == 2)
  {
    uint64_t v13 = APSGetFBOPropertyInt64();
    uint64_t v14 = APSGetFBOPropertyInt64();
    APSGetFBOPropertyInt64();
    if (*(_DWORD *)(DerivedStorage + 400) == 3)
    {
      if (!v14)
      {
        int v15 = -72258;
LABEL_78:
        APSLogErrorAt();
        CFDictionaryRef MutableCopy = 0;
        uint64_t v28 = 0;
        goto LABEL_79;
      }
    }
    else
    {
      if (!v13)
      {
        int v15 = -72258;
        goto LABEL_78;
      }
      if (v14)
      {
        int v15 = -72258;
        goto LABEL_78;
      }
      uint64_t v16 = CMBaseObjectGetDerivedStorage();
      CFTypeRef cf = 0;
      SubEndpointCFIndex Count = endpointAggregate_getSubEndpointCount((uint64_t)FigEndpoint, 1);
      if (*(unsigned char *)(v16 + 96) && !SubEndpointCount)
      {
        if (endpointAggregate_generateGroupID((uint64_t)FigEndpoint, (uint64_t *)&cf))
        {
          APSLogErrorAt();
        }
        else if (!FigCFEqual())
        {
          if (gLogCategory_APEndpointAggregate <= 50
            && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          CFTypeID v18 = *(const void **)(v16 + 88);
          CFTypeRef v19 = cf;
          *(void *)(v16 + 88) = cf;
          if (v19) {
            CFRetain(v19);
          }
          if (v18) {
            CFRelease(v18);
          }
          CMNotificationCenterGetDefaultLocalCenter();
          FigDispatchAsyncPostNotification();
        }
      }
      if (cf) {
        CFRelease(cf);
      }
    }
    FigEndpointAggregateGetFigEndpoint();
    uint64_t v20 = CMBaseObjectGetDerivedStorage();
    if (CFDictionaryContainsKey(*(CFDictionaryRef *)(v20 + 8), a2))
    {
      int Value = CFDictionaryGetValue(*(CFDictionaryRef *)(v20 + 8), a2);
    }
    else
    {
      if (*(_DWORD *)(v20 + 400) != 3 && APSGetFBOPropertyInt64())
      {
        if (*(void *)(v20 + 24))
        {
          APSLogErrorAt();
          unsigned int v34 = -72258;
          APSLogErrorAt();
          uint64_t v28 = 0;
          CFDictionaryRef MutableCopy = 0;
          goto LABEL_64;
        }
        *(void *)(v20 + 24) = a2;
        if (a2) {
          CFRetain(a2);
        }
      }
      int Value = malloc_type_calloc(1uLL, 0x10uLL, 0x1000040F7F8B94BuLL);
      int v23 = *(_DWORD *)(v20 + 16) + 1;
      *(_DWORD *)(v20 + 16) = v23;
      *(_DWORD *)int Value = v23;
      CFDictionarySetValue(*(CFMutableDictionaryRef *)(v20 + 8), a2, Value);
      if (gLogCategory_APEndpointAggregate >= 51)
      {
        ++Value[1];
LABEL_43:
        unsigned int v34 = 0;
        *((_DWORD *)v12 + 4) = *(_DWORD *)Value;
        uint64_t v24 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v24) {
          uint64_t v25 = v24;
        }
        else {
          uint64_t v25 = 0;
        }
        uint64_t v26 = *(void (**)(const void *, uint64_t))(v25 + 48);
        if (v26) {
          v26(a2, DerivedStorage + 264);
        }
        if (*(_DWORD *)(DerivedStorage + 400) != 3) {
          FigEndpointSetDelegateRemoteControl((uint64_t)a2, DerivedStorage + 304);
        }
        CFDictionaryRef MutableCopy = (__CFDictionary *)FigCFDictionaryCreateMutableCopy();
        if (a3) {
          CFDictionaryMergeDictionary();
        }
        uint64_t v28 = (const void *)CFStringCreateF();
        CFDictionarySetValue(MutableCopy, @"ParentContextID", v28);
        if (*(_DWORD *)(DerivedStorage + 400) != 3)
        {
          CFDictionarySetValue(MutableCopy, @"AudioOptions", *(const void **)(DerivedStorage + 104));
          CFDictionarySetValue(MutableCopy, @"NetworkClock", *(const void **)(DerivedStorage + 80));
          CFDictionarySetValue(MutableCopy, @"GroupID", *(const void **)(DerivedStorage + 88));
          double v29 = (const void *)*MEMORY[0x1E4F1CFD0];
          CFDictionarySetValue(MutableCopy, @"IsGroupPlayback", (const void *)*MEMORY[0x1E4F1CFD0]);
          if (*(_DWORD *)(DerivedStorage + 400) == 2) {
            unsigned int v30 = v29;
          }
          else {
            unsigned int v30 = (const void *)*MEMORY[0x1E4F1CFC8];
          }
          CFDictionarySetValue(MutableCopy, @"IsPartOfCluster", v30);
        }
        uint64_t SubEndpointFeaturesToActivate = endpointAggregate_getSubEndpointFeaturesToActivate((uint64_t)FigEndpoint, (uint64_t)a2, v11);
        if (gLogCategory_APEndpointAggregate <= 50
          && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        FigEndpointActivateWithCompletionCallback((uint64_t)a2, SubEndpointFeaturesToActivate, (uint64_t)MutableCopy, (uint64_t)v12);
        CFRetain(FigEndpoint);
        if (a2) {
          CFRetain(a2);
        }
        CFRetain((CFTypeRef)*MEMORY[0x1E4F20380]);
        APSDispatchAsyncFHelper();
LABEL_64:
        if (!v34) {
          goto LABEL_68;
        }
        goto LABEL_65;
      }
      if (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()) {
        LogPrintF();
      }
    }
    int v22 = gLogCategory_APEndpointAggregate;
    ++Value[1];
    if (v22 <= 50 && (v22 != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    goto LABEL_43;
  }
  APSLogErrorAt();
  CFDictionaryRef MutableCopy = 0;
  uint64_t v28 = 0;
  int v15 = -15580;
LABEL_79:
  unsigned int v34 = v15;
LABEL_65:
  if (v33) {
    endpointAggregate_scheduleAddOrRemoveSubEndpointCompletionCallback(FigEndpoint, a2);
  }
  CFRelease((CFTypeRef)*v12);
  free(v12);
LABEL_68:
  if (v28) {
    CFRelease(v28);
  }
  if (MutableCopy) {
    CFRelease(MutableCopy);
  }
  return v34;
}

uint64_t endpointAggregate_removeEndpointInternal(uint64_t a1, __CFString *a2, uint64_t a3, uint64_t a4)
{
  FigEndpoint = (const void *)FigEndpointAggregateGetFigEndpoint();
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointAggregate <= 50
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  unint64_t v10 = malloc_type_calloc(1uLL, 0x28uLL, 0x10A004044E3744DuLL);
  *unint64_t v10 = CFRetain(FigEndpoint);
  v10[1] = *(void *)(DerivedStorage + 120);
  v10[3] = a4;
  v10[4] = a3;
  *((_DWORD *)v10 + 4) = 0;
  if (*(_DWORD *)(DerivedStorage + 40) == 2)
  {
    if (*(_DWORD *)(DerivedStorage + 400) != 3)
    {
      int v11 = APSGetFBOPropertyInt64();
      endpointAggregate_handleSubEndpointFeatureActivationStateChanged(FigEndpoint, a2, 0, v11);
    }
    uint64_t v12 = endpointAggregate_removeEntryForSubEndpoint(a1, a2, 1);
    if (!v12)
    {
      endpointAggregate_updateURLPlaybackSupportedState(FigEndpoint);
      endpointAggregate_updateClusterCompositionPropertiesFromSubEndpoint((uint64_t)FigEndpoint, a2, 1);
      endpointAggregate_unregisterCommChannelsForSubEndpointAndNotifyClientIfNeeded();
      if (*(_DWORD *)(DerivedStorage + 400) != 3)
      {
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterRemoveWeakListener();
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterRemoveWeakListener();
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterRemoveWeakListener();
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterRemoveWeakListener();
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterRemoveWeakListener();
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterRemoveWeakListener();
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterRemoveWeakListener();
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterRemoveWeakListener();
        if (*(_DWORD *)(DerivedStorage + 400) != 3)
        {
          uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 16);
          uint64_t v14 = v13 ? v13 : 0;
          int v15 = *(void (**)(__CFString *, void))(v14 + 56);
          if (v15) {
            v15(a2, 0);
          }
        }
      }
      uint64_t v16 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v16) {
        uint64_t v17 = v16;
      }
      else {
        uint64_t v17 = 0;
      }
      CFTypeID v18 = *(void (**)(__CFString *, void))(v17 + 48);
      if (v18) {
        v18(a2, 0);
      }
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 1, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F20538], @"RemovedFromAggregate");
      uint64_t v20 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v20) {
        uint64_t v21 = v20;
      }
      else {
        uint64_t v21 = 0;
      }
      int v22 = *(void (**)(__CFString *, __CFDictionary *, void (*)(const void *, uint64_t, uint64_t, uint64_t, const void **), void *))(v21 + 16);
      if (v22) {
        v22(a2, Mutable, endpointAggregate_deactivateSubEndpointCallback, v10);
      }
      CFRetain(FigEndpoint);
      CFRetain(a2);
      CFRetain((CFTypeRef)*MEMORY[0x1E4F20388]);
      APSDispatchAsyncFHelper();
      if (Mutable) {
        CFRelease(Mutable);
      }
      return 0;
    }
    uint64_t v23 = v12;
    APSLogErrorAt();
  }
  else
  {
    APSLogErrorAt();
    uint64_t v23 = 4294951716;
  }
  if (a3) {
    endpointAggregate_scheduleAddOrRemoveSubEndpointCompletionCallback(FigEndpoint, a2);
  }
  CFRelease((CFTypeRef)*v10);
  free(v10);
  return v23;
}

CFIndex endpointAggregate_getSubEndpointCount(uint64_t a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFIndex result = CFDictionaryGetCount(*(CFDictionaryRef *)(DerivedStorage + 8));
  if (a2 && result >= 1 && *(void *)(DerivedStorage + 24) && (a2 == 1 || *(void *)(DerivedStorage + 408))) {
    --result;
  }
  return result;
}

uint64_t endpointAggregate_handleSubEndpointFeatureActivationStateChanged(const void *a1, __CFString *a2, uint64_t a3, int a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v9 = DerivedStorage;
  if (a2)
  {
    uint64_t result = CFDictionaryContainsKey(*(CFDictionaryRef *)(DerivedStorage + 8), a2);
    if (!result) {
      return result;
    }
  }
  else if (!*(unsigned char *)(DerivedStorage + 450))
  {
    return APSLogErrorAt();
  }
  if (gLogCategory_APEndpointAggregate <= 50
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!a3 || (uint64_t v11 = *(void *)(v9 + 48)) == 0) {
    uint64_t v11 = *(void *)(v9 + 56);
  }
  if (a4 & v11) {
    endpointAggregate_fireStreamsChangedNotification(a1, a3, 1);
  }
  endpointAggregate_updateURLPlaybackSupportedState(a1);
  uint64_t AllAudioFeatures = APEndpointGetAllAudioFeatures(v11);
  uint64_t result = APEndpointGetAllAudioFeatures(a4);
  uint64_t v13 = result & AllAudioFeatures;
  if (gLogCategory_APEndpointAggregate <= 30)
  {
    if (gLogCategory_APEndpointAggregate != -1 || (uint64_t result = _LogCategory_Initialize(), result))
    {
      APEndpointGetAllAudioFeatures(a4);
      uint64_t result = LogPrintF();
    }
  }
  if (v13)
  {
    if (!a3)
    {
      endpointAggregate_updateSubEndpointAggregateStreamMembershipForFeatures((uint64_t)a1, a2, v13, 0);
      endpointAggregate_notifyStreamObservers((uint64_t)a1, (uint64_t)a2);
      LODWORD(CFDictionarySetValue(theDict, key, value) = 0;
      uint64_t v17 = CMBaseObjectGetDerivedStorage();
      CFArrayRef v18 = (const __CFArray *)CFDictionaryCopyKeys();
      CFIndex Count = CFArrayGetCount(v18);
      if (Count < 1)
      {
        uint64_t v22 = 0;
      }
      else
      {
        CFIndex v20 = Count;
        CFIndex v21 = 0;
        uint64_t v22 = 0;
        do
        {
          ValueAtIndex = CFArrayGetValueAtIndex(v18, v21);
          if (!CFDictionaryContainsKey(*(CFDictionaryRef *)(v17 + 136), ValueAtIndex)) {
            v22 |= APEndpointGetFeatureFromStreamType((uint64_t)ValueAtIndex);
          }
          ++v21;
        }
        while (v20 != v21);
        if (v22)
        {
          endpointAggregate_destroyAggregateStreams((uint64_t)a1, v22);
          uint64_t v24 = CMBaseObjectGetDerivedStorage();
          CFTypeID v62 = 0;
          if (*(_DWORD *)(v24 + 400) != 3 && (uint64_t v25 = v24, *(void *)(v24 + 80)) && *(void *)(v24 + 112))
          {
            CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
            CFDictionaryRef v27 = Mutable;
            if (!Mutable
              || (CFDictionarySetValue(Mutable, @"IsSharedAudioEngine", (const void *)*MEMORY[0x1E4F1CFD0]),
                  APEndpointCreateAudioOptions(v22, *(void *)(v25 + 80), v27, 0, &v62)))
            {
              APSLogErrorAt();
            }
            else
            {
              CFDictionaryMergeDictionary();
              if (gLogCategory_APEndpointAggregate <= 50
                && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
            }
          }
          else
          {
            APSLogErrorAt();
            CFDictionaryRef v27 = 0;
          }
          if (v62) {
            CFRelease(v62);
          }
          if (v27) {
            CFRelease(v27);
          }
        }
      }
      if (v18) {
        CFRelease(v18);
      }
      endpointAggregate_fireStreamsChangedNotification(a1, 0, v22);
      uint64_t v53 = v13 & ~v22;
      CFIndex v52 = a1;
      return endpointAggregate_fireStreamsChangedNotification(v52, 1, v53);
    }
    endpointAggregate_updateSubEndpointAggregateStreamMembershipForFeatures((uint64_t)a1, a2, v13, 1);
    uint64_t v14 = CMBaseObjectGetDerivedStorage();
    CFTypeID v62 = 0;
    CFTypeRef cf = 0;
    value = 0;
    CFTypeRef v58 = 0;
    CFTypeRef v59 = 0;
    if (!*(void *)(v14 + 112) || (uint64_t v15 = v14, *(_DWORD *)(v14 + 40) != 2))
    {
      APSLogErrorAt();
      LOBYTE(v16) = 0;
LABEL_129:
      endpointAggregate_destroyAggregateStreams((uint64_t)a1, v16);
      goto LABEL_102;
    }
    if ((v13 & 2) != 0)
    {
      uint64_t v16 = 2 * (CFDictionaryContainsKey(*(CFDictionaryRef *)(v14 + 128), (const void *)*MEMORY[0x1E4F21468]) == 0);
      if ((v13 & 8) == 0) {
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v16 = 0;
      if ((v13 & 8) == 0) {
        goto LABEL_42;
      }
    }
    if (!CFDictionaryContainsKey(*(CFDictionaryRef *)(v15 + 128), (const void *)*MEMORY[0x1E4F21470])) {
      v16 |= 8uLL;
    }
LABEL_42:
    if (a2 && (v13 & 0x20) != 0)
    {
      uint64_t v28 = *(void *)(CMBaseObjectGetDerivedStorage() + 464);
      if (v28)
      {
        if (v28 != *MEMORY[0x1E4F1CFD0]) {
          goto LABEL_49;
        }
      }
      else if (!APSIsMemberOfHTGroup())
      {
        goto LABEL_49;
      }
      if (!CFDictionaryContainsKey(*(CFDictionaryRef *)(v15 + 128), (const void *)*MEMORY[0x1E4F21478]))
      {
        LOBYTE(v16) = v16 | 0x20;
        goto LABEL_50;
      }
    }
LABEL_49:
    if (!v16)
    {
LABEL_102:
      if (value) {
        CFRelease(value);
      }
      if (v62) {
        CFRelease(v62);
      }
      if (cf) {
        CFRelease(cf);
      }
      if (v59) {
        CFRelease(v59);
      }
      if (v58) {
        CFRelease(v58);
      }
      endpointAggregate_notifyStreamObservers((uint64_t)a1, (uint64_t)a2);
      CFIndex v52 = a1;
      uint64_t v53 = v13;
      return endpointAggregate_fireStreamsChangedNotification(v52, 1, v53);
    }
LABEL_50:
    uint64_t Int64 = CFDictionaryGetInt64();
    uint64_t v29 = CFDictionaryGetInt64();
    char v57 = v29 == 0;
    BOOL v30 = (~v13 & 0xALL | v29) == 0;
    CFAllocatorRef v31 = CFDictionaryGetValue(*(CFDictionaryRef *)(v15 + 112), (const void *)*MEMORY[0x1E4F20328]);
    uint64_t v32 = *MEMORY[0x1E4F1CF80];
    uint64_t CMBaseObject = APSNetworkClockGetCMBaseObject();
    uint64_t v34 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v34) {
      uint64_t v35 = v34;
    }
    else {
      uint64_t v35 = 0;
    }
    CFAllocatorRef v36 = *(void (**)(uint64_t, void, uint64_t, CFTypeRef *))(v35 + 48);
    if (v36) {
      v36(CMBaseObject, *MEMORY[0x1E4F4A140], v32, &v59);
    }
    endpointAggregate_copyPropertyFromAnySubEndpoint((uint64_t)a1, *MEMORY[0x1E4F21080], v32, (uint64_t)&v58);
    CFGetDouble();
    APSVolumeConvertSliderValueToDB();
    if ((v16 & 2) != 0)
    {
      CFMutableDictionaryRef v37 = (const void *)*MEMORY[0x1E4F21468];
      if (endpointAggregate_createAndInitAudioStream((uint64_t)a1, *(const __CFDictionary **)(v15 + 104), *(void *)(v15 + 424), (uint64_t)a2, *(const void **)(v15 + 80), v30, *(const void **)(v15 + 72), 0, (const void *)*MEMORY[0x1E4F21468], v31, v57, (CFTypeRef *)&value))goto LABEL_128; {
      if (!(v29 | Int64))
      }
      {
        if (*(_DWORD *)(v15 + 400) == 2)
        {
          int v38 = FigCFEqual();
          CFMutableDictionaryRef v39 = kAPHALAudioDeviceCreationOptionDeviceType_Screen;
          CFAllocatorRef v40 = *(__CFString **)(v15 + 416);
          if (!v38) {
            CFMutableDictionaryRef v39 = kAPHALAudioDeviceCreationOptionDeviceType_Audio;
          }
          CFMutableDictionaryRef v41 = *v39;
          if (v38) {
            uint64_t v42 = 75;
          }
          else {
            uint64_t v42 = 0;
          }
        }
        else
        {
          uint64_t v42 = 0;
          CFAllocatorRef v40 = @"AirPlay";
          CFMutableDictionaryRef v41 = @"AggrAudio";
        }
        if (gLogCategory_APEndpointAggregate >= 51)
        {
          BOOL v44 = v41 != @"AggrAudio";
        }
        else
        {
          unsigned int v55 = v42;
          if (gLogCategory_APEndpointAggregate != -1 || (CFIndex v45 = v40, v46 = _LogCategory_Initialize(), v40 = v45, v46))
          {
            CFMutableDictionaryRef v43 = v40;
            LogPrintF();
            CFAllocatorRef v40 = v43;
          }
          BOOL v44 = v41 != @"AggrAudio";
          BOOL v30 = (~v13 & 0xALL | v29) == 0;
          uint64_t v42 = v55;
          if (gLogCategory_APEndpointAggregate <= 50)
          {
            v54 = v40;
            if (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize())
            {
              APSVolumeConvertDBToSliderValue();
              LogPrintF();
            }
            CFAllocatorRef v40 = v54;
            uint64_t v42 = v55;
            BOOL v44 = v41 != @"AggrAudio";
          }
        }
        if (*(void *)(v15 + 432)) {
          uint64_t v47 = *(void *)(v15 + 432);
        }
        else {
          uint64_t v47 = (uint64_t)a1;
        }
        APEndpointTriggerAudioHALDeviceCreation(v47, (uint64_t)value, v40, v41, v59, v42, v44, 0);
      }
      CFDictionarySetValue(*(CFMutableDictionaryRef *)(v15 + 128), v37, value);
      endpointAggregate_addObserverInternal((uint64_t)a1, value);
      CMNotificationCenterGetDefaultLocalCenter();
      FigNotificationCenterAddWeakListener();
    }
    if ((v16 & 8) == 0)
    {
LABEL_89:
      if ((v16 & 0x20) == 0 || !*(unsigned char *)(v15 + 448)) {
        goto LABEL_101;
      }
      CFDateRef v49 = (const void *)*MEMORY[0x1E4F21478];
      if (!endpointAggregate_createAndInitAudioStream((uint64_t)a1, *(const __CFDictionary **)(v15 + 104), *(void *)(v15 + 424), (uint64_t)a2, *(const void **)(v15 + 80), 0, 0, 0, (const void *)*MEMORY[0x1E4F21478], v31, 1, &cf))
      {
        if (Int64)
        {
LABEL_100:
          CFDictionarySetValue(*(CFMutableDictionaryRef *)(v15 + 128), v49, cf);
          endpointAggregate_addObserverInternal((uint64_t)a1, cf);
          CMNotificationCenterGetDefaultLocalCenter();
          FigNotificationCenterAddWeakListener();
LABEL_101:
          endpointAggregate_updateEngagedState();
          goto LABEL_102;
        }
        CFArrayRef v50 = (const void *)CFStringCreateF();
        if (gLogCategory_APEndpointAggregate <= 50
          && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t v51 = *(void *)(v15 + 432);
        if (v51)
        {
          APEndpointTriggerAudioHALDeviceCreation(v51, (uint64_t)cf, v50, @"LowLatencyAudio", v59, 0, 0, 0);
          if (v50) {
            CFRelease(v50);
          }
          goto LABEL_100;
        }
      }
      goto LABEL_128;
    }
    uint64_t v48 = (const void *)*MEMORY[0x1E4F21470];
    if (!endpointAggregate_createAndInitAudioStream((uint64_t)a1, *(const __CFDictionary **)(v15 + 104), *(void *)(v15 + 424), (uint64_t)a2, *(const void **)(v15 + 80), v30, *(const void **)(v15 + 72), value, (const void *)*MEMORY[0x1E4F21470], v31, v57, (CFTypeRef *)&v62))
    {
      CFDictionarySetValue(*(CFMutableDictionaryRef *)(v15 + 128), v48, v62);
      endpointAggregate_addObserverInternal((uint64_t)a1, v62);
      CMNotificationCenterGetDefaultLocalCenter();
      FigNotificationCenterAddWeakListener();
      goto LABEL_89;
    }
LABEL_128:
    APSLogErrorAt();
    goto LABEL_129;
  }
  return result;
}

void endpointAggregate_setEnableLocalPlaybackOnAggregateStreams(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(unsigned char *)(DerivedStorage + 449) || *(void *)(DerivedStorage + 408))
  {
    APSLogErrorAt();
  }
  else
  {
    CFArrayRef v6 = (const __CFArray *)FigCFDictionaryCopyArrayOfValues();
    if (CFArrayGetCount(v6) >= 1)
    {
      CFIndex v7 = 0;
      uint64_t v8 = *MEMORY[0x1E4F21408];
      uint64_t v9 = *MEMORY[0x1E4F1CF80];
      unint64_t v10 = (uint64_t *)MEMORY[0x1E4F1CFC8];
      if (a2) {
        unint64_t v10 = (uint64_t *)MEMORY[0x1E4F1CFD0];
      }
      uint64_t v11 = *v10;
      do
      {
        CFArrayGetValueAtIndex(v6, v7);
        CFTypeRef cf = 0;
        uint64_t CMBaseObject = FigEndpointStreamGetCMBaseObject();
        uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 8);
        if (v13) {
          uint64_t v14 = v13;
        }
        else {
          uint64_t v14 = 0;
        }
        uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, CFTypeRef *))(v14 + 48);
        if (v15) {
          v15(CMBaseObject, v8, v9, &cf);
        }
        if (cf)
        {
          if ((APEndpointGetFeatureFromStreamType((uint64_t)cf) & a3) != 0)
          {
            uint64_t v16 = FigEndpointStreamGetCMBaseObject();
            uint64_t v17 = *(void *)(CMBaseObjectGetVTable() + 8);
            uint64_t v18 = v17 ? v17 : 0;
            CFTypeRef v19 = *(void (**)(uint64_t, __CFString *, uint64_t))(v18 + 56);
            if (v19) {
              v19(v16, @"enableLocalPlayback", v11);
            }
          }
          if (cf) {
            CFRelease(cf);
          }
        }
        ++v7;
      }
      while (v7 < CFArrayGetCount(v6));
    }
    if (v6) {
      CFRelease(v6);
    }
  }
}

void endpointAggregate_updateIsVolumeControlSupported()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFArrayRef v1 = (const __CFArray *)FigCFDictionaryCopyArrayOfKeys();
  if (v1)
  {
    CFArrayRef v2 = v1;
    if (CFArrayGetCount(v1) < 1)
    {
LABEL_6:
      int v4 = *(unsigned __int8 *)(DerivedStorage + 161);
    }
    else
    {
      CFIndex v3 = 0;
      while (1)
      {
        CFArrayGetValueAtIndex(v2, v3);
        if (APSGetFBOPropertyInt64()) {
          break;
        }
        if (++v3 >= CFArrayGetCount(v2)) {
          goto LABEL_6;
        }
      }
      int v4 = 1;
    }
    if (*(unsigned __int8 *)(DerivedStorage + 352) != v4)
    {
      if (gLogCategory_APEndpointAggregate <= 50
        && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(unsigned char *)(DerivedStorage + 352) = v4;
      CMNotificationCenterGetDefaultLocalCenter();
      FigDispatchAsyncPostNotification();
    }
    CFRelease(v2);
  }
  else
  {
    APSLogErrorAt();
  }
}

uint64_t endpointAggregate_fireStreamsChangedNotification(const void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  if (!a3) {
    return 0;
  }
  uint64_t v7 = DerivedStorage;
  if (gLogCategory_APEndpointAggregate <= 30
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFAllocatorRef v8 = CFGetAllocator(a1);
  uint64_t StreamsChangedNotificationPayload = APEndpointCreateStreamsChangedNotificationPayload(v8, a3, *(void *)(v7 + 120), a2, (CFMutableDictionaryRef *)&cf);
  if (StreamsChangedNotificationPayload)
  {
    uint64_t v11 = StreamsChangedNotificationPayload;
    APSLogErrorAt();
  }
  else
  {
    CMNotificationCenterGetDefaultLocalCenter();
    uint64_t v10 = FigDispatchAsyncPostNotification();
    uint64_t v11 = 0;
    if (v10)
    {
      uint64_t v13 = v10;
      APSLogErrorAt();
      uint64_t v11 = v13;
    }
  }
  if (cf) {
    CFRelease(cf);
  }
  return v11;
}

void endpointAggregate_updateURLPlaybackSupportedState(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  int v3 = *(_DWORD *)(DerivedStorage + 400);
  if (v3 != 3)
  {
    uint64_t v4 = DerivedStorage;
    if (*(_DWORD *)(DerivedStorage + 40) != 2) {
      goto LABEL_34;
    }
    uint64_t v5 = *(void *)(DerivedStorage + 48);
    if (v5)
    {
      if ((v5 & 4) == 0) {
        goto LABEL_13;
      }
    }
    else if ((*(void *)(DerivedStorage + 56) & 4) == 0)
    {
      goto LABEL_13;
    }
    if (v3 == 2 || !v3 && endpointAggregate_getSubEndpointCount((uint64_t)a1, 2) == 1)
    {
      FirstSubEndpointActivatedForFeatures = endpointAggregate_getFirstSubEndpointActivatedForFeatures((uint64_t)a1, 4);
      if (FirstSubEndpointActivatedForFeatures
        && ((CMBaseObject = FigEndpointGetCMBaseObject(), (uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 8)) == 0)
          ? (uint64_t v9 = 0)
          : (uint64_t v9 = v8),
            (uint64_t v11 = *(void (**)(uint64_t, void, void, CFTypeRef *))(v9 + 48)) != 0))
      {
        v11(CMBaseObject, *MEMORY[0x1E4F21050], *MEMORY[0x1E4F1CF80], &cf);
        CFTypeRef v10 = cf;
      }
      else
      {
        CFTypeRef v10 = 0;
      }
      goto LABEL_18;
    }
LABEL_13:
    CFTypeRef v10 = 0;
    FirstSubEndpointActivatedForFeatures = 0;
LABEL_18:
    if (*(const void **)(v4 + 152) == FirstSubEndpointActivatedForFeatures)
    {
      if (FigCFEqual()) {
        goto LABEL_30;
      }
      CFTypeRef v10 = cf;
    }
    uint64_t v12 = *(const void **)(v4 + 144);
    *(void *)(v4 + 144) = v10;
    if (v10) {
      CFRetain(v10);
    }
    if (v12) {
      CFRelease(v12);
    }
    uint64_t v13 = *(const void **)(v4 + 152);
    *(void *)(v4 + 152) = FirstSubEndpointActivatedForFeatures;
    if (FirstSubEndpointActivatedForFeatures) {
      CFRetain(FirstSubEndpointActivatedForFeatures);
    }
    if (v13) {
      CFRelease(v13);
    }
    if (!endpointAggregate_fireStreamsChangedNotification(a1, FirstSubEndpointActivatedForFeatures != 0, 4))goto LABEL_30; {
LABEL_34:
    }
    APSLogErrorAt();
LABEL_30:
    if (cf) {
      CFRelease(cf);
    }
  }
}

void endpointAggregate_updateSubEndpointAggregateStreamMembershipForFeatures(uint64_t a1, __CFString *a2, char a3, int a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFArrayRef theArray = 0;
  if (!a2 && !*(unsigned char *)(DerivedStorage + 450)) {
    goto LABEL_39;
  }
  if (gLogCategory_APEndpointAggregate <= 30
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  char AllAudioFeatures = APEndpointGetAllAudioFeatures(a3);
  APEndpointCreateStreamTypeArrayFromFeatures(AllAudioFeatures, &theArray);
  if (theArray)
  {
    CFIndex Count = CFArrayGetCount(theArray);
    if (Count >= 1)
    {
      CFIndex v10 = Count;
      CFIndex v11 = 0;
      CFAllocatorRef allocator = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
      if (a2) {
        uint64_t v12 = a2;
      }
      else {
        uint64_t v12 = @"LocalPlaybackID";
      }
      do
      {
        ValueAtIndex = CFArrayGetValueAtIndex(theArray, v11);
        uint64_t v14 = CMBaseObjectGetDerivedStorage();
        uint64_t v15 = v14;
        if (a4)
        {
          if ((a2 || *(unsigned char *)(v14 + 450)) && ValueAtIndex)
          {
            int Value = CFDictionaryGetValue(*(CFDictionaryRef *)(v14 + 136), ValueAtIndex);
            if (Value)
            {
              uint64_t v17 = (__CFSet *)CFRetain(Value);
              if (v17) {
                goto LABEL_20;
              }
            }
            CFMutableSetRef Mutable = CFSetCreateMutable(allocator, 0, MEMORY[0x1E4F1D548]);
            if (Mutable)
            {
              uint64_t v17 = Mutable;
              CFDictionarySetValue(*(CFMutableDictionaryRef *)(v15 + 136), ValueAtIndex, Mutable);
LABEL_20:
              CFSetAddValue(v17, v12);
              if (gLogCategory_APEndpointAggregate <= 30
                && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
              {
                CFSetGetCount(v17);
                LogPrintF();
              }
              CFRelease(v17);
              goto LABEL_36;
            }
          }
        }
        else if ((a2 || *(unsigned char *)(v14 + 450)) && ValueAtIndex)
        {
          CFSetRef v19 = (const __CFSet *)CFDictionaryGetValue(*(CFDictionaryRef *)(v14 + 136), ValueAtIndex);
          if (v19)
          {
            CFIndex v20 = v19;
            if (CFSetContainsValue(v19, v12))
            {
              CFSetRemoveValue(v20, v12);
              if (gLogCategory_APEndpointAggregate <= 30
                && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
              {
                CFSetGetCount(v20);
                LogPrintF();
              }
              if (!CFSetGetCount(v20)) {
                CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(v15 + 136), ValueAtIndex);
              }
            }
          }
          goto LABEL_36;
        }
        APSLogErrorAt();
LABEL_36:
        ++v11;
      }
      while (v10 != v11);
    }
  }
  else
  {
LABEL_39:
    APSLogErrorAt();
  }
  if (theArray) {
    CFRelease(theArray);
  }
}

uint64_t endpointAggregate_notifyStreamObservers(uint64_t a1, uint64_t a2)
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  if (a2)
  {
    if (gLogCategory_APEndpointAggregate <= 50
      && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return CFDictionaryApplyBlock();
  }
  return result;
}

uint64_t endpointAggregate_createAndInitAudioStream(uint64_t a1, const __CFDictionary *a2, uint64_t a3, uint64_t a4, const void *a5, int a6, const void *a7, const void *a8, const void *a9, const void *a10, char a11, CFTypeRef *a12)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  if (!a9)
  {
    APSLogErrorAt();
    return 4294950576;
  }
  if (a2
    && a5
    && ((uint64_t v20 = DerivedStorage, a4) || *(unsigned char *)(DerivedStorage + 450))
    && (CFDictionaryRef Value = (const __CFDictionary *)CFDictionaryGetValue(a2, a9)) != 0
    && (uint64_t v22 = CFDictionaryGetValue(Value, @"AudioEngineVendor")) != 0)
  {
    uint64_t v23 = *MEMORY[0x1E4F1CF80];
    uint64_t v24 = APEndpointStreamAggregateAudioCreate((const __CFAllocator *)*MEMORY[0x1E4F1CF80], a9, a3, v22, a5, a4, 1, *(_DWORD *)(v20 + 400) == 2, *(unsigned char *)(v20 + 448), *(unsigned char *)(v20 + 450), a11, a10, &cf);
    if (v24)
    {
      uint64_t v26 = v24;
    }
    else
    {
      if (!a6)
      {
        *a12 = CFRetain(cf);
LABEL_15:
        if (gLogCategory_APEndpointAggregate <= 50
          && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t v26 = 0;
        goto LABEL_20;
      }
      if (a8) {
        uint64_t v25 = APEndpointStreamInterruptingWrapperCreate(v23, cf, a8, a7, a12);
      }
      else {
        uint64_t v25 = APEndpointStreamInterruptibleWrapperCreate(v23, cf, a7, a12);
      }
      uint64_t v26 = v25;
      if (!v25) {
        goto LABEL_15;
      }
    }
    APSLogErrorAt();
  }
  else
  {
    APSLogErrorAt();
    uint64_t v26 = 4294950576;
  }
LABEL_20:
  if (cf) {
    CFRelease(cf);
  }
  return v26;
}

void endpointAggregate_addObserverInternal(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  APSubEndpointAddRemoveObservingProtocolGetProtocolID();
  if (CMBaseObjectImplementsProtocol())
  {
    uint64_t v4 = *(__CFArray **)(DerivedStorage + 32);
    CFArrayAppendValue(v4, a2);
  }
  else
  {
    APSLogErrorAt();
    APSSignalErrorAt();
  }
}

void endpointAggregate_handleAggregateStreamInUseChanged()
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*DerivedStorage);
  endpointAggregate_updateEngagedState();
  JUMPOUT(0x1D25EB390);
}

void endpointAggregate_updateEngagedState()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(_DWORD *)(DerivedStorage + 400) == 3) {
    return;
  }
  uint64_t v1 = DerivedStorage;
  CFArrayRef v2 = (const __CFArray *)FigCFDictionaryCopyArrayOfValues();
  if (CFArrayGetCount(v2) < 1)
  {
    BOOL v5 = 0;
LABEL_8:
    int v6 = 0;
  }
  else
  {
    CFIndex v3 = 0;
    while (1)
    {
      CFArrayGetValueAtIndex(v2, v3);
      uint64_t v4 = APSGetFBOPropertyInt64();
      BOOL v5 = v4 != 0;
      if (v4) {
        break;
      }
      if (++v3 >= CFArrayGetCount(v2)) {
        goto LABEL_8;
      }
    }
    int v6 = 1;
  }
  if (*(unsigned __int8 *)(v1 + 45) != v6)
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (!Mutable)
    {
      APSLogErrorAt();
      if (!v2) {
        return;
      }
      goto LABEL_20;
    }
    uint64_t v8 = Mutable;
    *(unsigned char *)(v1 + 45) = v6;
    if (gLogCategory_APEndpointAggregate <= 50
      && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v9 = (const void **)MEMORY[0x1E4F1CFC8];
    if (v5) {
      uint64_t v9 = (const void **)MEMORY[0x1E4F1CFD0];
    }
    CFDictionarySetValue(v8, @"IsEngaged", *v9);
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
    CFRelease(v8);
  }
  if (!v2) {
    return;
  }
LABEL_20:
  CFRelease(v2);
}

void endpointAggregate_destroyAggregateStreams(uint64_t a1, char a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFArrayRef theArray = 0;
  char AllAudioFeatures = APEndpointGetAllAudioFeatures(a2);
  APEndpointCreateStreamTypeArrayFromFeatures(AllAudioFeatures, &theArray);
  if (theArray)
  {
    if (CFArrayGetCount(theArray) >= 1)
    {
      CFIndex v5 = 0;
      do
      {
        ValueAtIndex = CFArrayGetValueAtIndex(theArray, v5);
        CFDictionaryRef Value = CFDictionaryGetValue(*(CFDictionaryRef *)(DerivedStorage + 128), ValueAtIndex);
        if (Value)
        {
          uint64_t v8 = Value;
          if (gLogCategory_APEndpointAggregate <= 50
            && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 16);
          if (v9) {
            uint64_t v10 = v9;
          }
          else {
            uint64_t v10 = 0;
          }
          CFIndex v11 = *(void (**)(const void *))(v10 + 32);
          if (v11) {
            v11(v8);
          }
          uint64_t v12 = CMBaseObjectGetDerivedStorage();
          if (CFArrayGetCount(*(CFArrayRef *)(v12 + 32)) >= 1)
          {
            CFIndex v13 = 0;
            while (1)
            {
              uint64_t v14 = CFArrayGetValueAtIndex(*(CFArrayRef *)(v12 + 32), v13);
              int v15 = CFEqual(v8, v14);
              CFArrayRef v16 = *(const __CFArray **)(v12 + 32);
              if (v15) {
                break;
              }
              if (++v13 >= CFArrayGetCount(v16)) {
                goto LABEL_20;
              }
            }
            CFArrayRemoveValueAtIndex(v16, v13);
          }
LABEL_20:
          CMNotificationCenterGetDefaultLocalCenter();
          FigNotificationCenterRemoveWeakListener();
          CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(DerivedStorage + 128), ValueAtIndex);
          APEndpointGetFeatureFromStreamType((uint64_t)ValueAtIndex);
        }
        ++v5;
      }
      while (v5 < CFArrayGetCount(theArray));
    }
    endpointAggregate_updateEngagedState();
  }
  else
  {
    APSLogErrorAt();
  }
  if (theArray) {
    CFRelease(theArray);
  }
}

uint64_t __endpointAggregate_notifyStreamObservers_block_invoke(uint64_t a1, uint64_t a2, const void *a3)
{
  uint64_t FeatureFromStreamType = APEndpointGetFeatureFromStreamType(a2);
  uint64_t result = APEndpointGetAllAudioFeatures(*(void *)(a1 + 32));
  if ((result & FeatureFromStreamType) != 0)
  {
    if (gLogCategory_APEndpointAggregate <= 50
      && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFRetain(a3);
    CFRetain(*(CFTypeRef *)(a1 + 48));
    return APSDispatchAsyncFHelper();
  }
  return result;
}

void endpointAggregate_notifyObserverNotificationQueueDispatch(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  CFIndex v3 = *(const void **)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  APSubEndpointAddRemoveObservingProtocolGetProtocolID();
  Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
  if (v2)
  {
    if (ProtocolVTable)
    {
      uint64_t v6 = *(void *)(ProtocolVTable + 16);
      if (v6)
      {
        uint64_t v7 = *(void (**)(const void *, uint64_t))(v6 + 8);
        if (v7) {
LABEL_9:
        }
          v7(v3, v4);
      }
    }
  }
  else if (ProtocolVTable)
  {
    uint64_t v8 = *(void *)(ProtocolVTable + 16);
    if (v8)
    {
      uint64_t v7 = *(void (**)(const void *, uint64_t))(v8 + 16);
      if (v7) {
        goto LABEL_9;
      }
    }
  }
  CFRelease(*(CFTypeRef *)(a1 + 8));
  uint64_t v9 = *(const void **)a1;
  CFRelease(v9);
}

uint64_t FigEndpointSetDelegateRemoteControl(uint64_t a1, uint64_t a2)
{
  uint64_t VTable = CMBaseObjectGetVTable();
  uint64_t v7 = *(void *)(VTable + 16);
  uint64_t result = VTable + 16;
  uint64_t v6 = v7;
  if (v7) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 56);
  if (v9)
  {
    return v9(a1, a2);
  }
  return result;
}

uint64_t endpointAggregate_getSubEndpointFeaturesToActivate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return APSGetFBOPropertyInt64() & a3;
}

uint64_t FigEndpointActivateWithCompletionCallback(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t VTable = CMBaseObjectGetVTable();
  uint64_t v11 = *(void *)(VTable + 16);
  uint64_t result = VTable + 16;
  uint64_t v10 = v11;
  if (v11) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = 0;
  }
  CFIndex v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t))(v12 + 8);
  if (v13)
  {
    return v13(a1, a2, a3, endpointAggregate_activateSubEndpointCallback, a4);
  }
  return result;
}

void endpointAggregate_activateSubEndpointCallback(__CFString *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  if (!a1 || (FigEndpointExtendedGetClassID(), uint64_t v9 = a1, !CMBaseObjectIsMemberOfClass())) {
    uint64_t v9 = 0;
  }
  MEMORY[0x1D25EB370](*DerivedStorage);
  CFDictionaryRef Value = CFDictionaryGetValue((CFDictionaryRef)DerivedStorage[1], a1);
  if (Value && *Value == *(_DWORD *)(a5 + 16))
  {
    if (gLogCategory_APEndpointAggregate <= 50
      && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (a4)
    {
      uint64_t v11 = *(const void **)a5;
      if (!*(void *)a5 || (FigEndpointAggregateGetClassID(), !CMBaseObjectIsMemberOfClass())) {
        uint64_t v11 = 0;
      }
      endpointAggregate_removeEntryForSubEndpoint((uint64_t)v11, a1, 0);
    }
    else
    {
      if (v9)
      {
        uint64_t v12 = DerivedStorage[42];
        if (v12)
        {
          uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 24);
          uint64_t v14 = v13 ? v13 : 0;
          int v15 = *(void (**)(__CFString *, uint64_t))(v14 + 48);
          if (v15) {
            v15(v9, v12);
          }
        }
      }
      if (*((_DWORD *)DerivedStorage + 100) != 3)
      {
        CFArrayRef v16 = *(const void **)a5;
        CMBaseObjectGetDerivedStorage();
        endpointAggregate_updateURLPlaybackSupportedState(v16);
        endpointAggregate_ensureLocalPlaybackIsEnabledOrDisabled(v16);
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterAddWeakListener();
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterAddWeakListener();
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterAddWeakListener();
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterAddWeakListener();
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterAddWeakListener();
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterAddWeakListener();
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterAddWeakListener();
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterAddWeakListener();
        uint64_t v17 = APSGetFBOPropertyInt64();
        if (v17) {
          endpointAggregate_handleSubEndpointFeatureActivationStateChanged(v16, a1, 1, v17);
        }
        endpointAggregate_updateIsVolumeControlSupported();
        endpointAggregate_updateVolumeControlType();
        endpointAggregate_updateIsMuteControlSupported();
        endpointAggregate_updateVideoPlaybackIsActive(v16);
        endpointAggregate_updateClusterCompositionPropertiesFromSubEndpoint((uint64_t)v16, a1, 0);
      }
    }
  }
  else if (gLogCategory_APEndpointAggregate <= 60 {
         && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  }
  {
    LogPrintF();
  }
  endpointAggregate_scheduleAddOrRemoveSubEndpointCompletionCallback(*(const void **)a5, a1);
  MEMORY[0x1D25EB390](*DerivedStorage);
  CFRelease(*(CFTypeRef *)a5);
  free((void *)a5);
}

void endpointAggregate_postEndpointAddedOrRemovedNotification(uint64_t a1)
{
  value = 0;
  uint64_t v2 = *MEMORY[0x1E4F1CF80];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    uint64_t v4 = Mutable;
    if (*(void *)a1
      && ((CMBaseObject = FigEndpointGetCMBaseObject(), (uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 8)) == 0)
        ? (uint64_t v7 = 0)
        : (uint64_t v7 = v6),
          (uint64_t v8 = *(unsigned int (**)(uint64_t, void, uint64_t, void **))(v7 + 48)) != 0
       && !v8(CMBaseObject, *MEMORY[0x1E4F20E38], v2, &value)))
    {
      CFDictionarySetValue(v4, (const void *)*MEMORY[0x1E4F20378], value);
      if (gLogCategory_APEndpointAggregate <= 10
        && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CMNotificationCenterGetDefaultLocalCenter();
      CMNotificationCenterPostNotification();
    }
    else
    {
      APSLogErrorAt();
    }
    CFRelease(v4);
    if (value) {
      CFRelease(value);
    }
  }
  else
  {
    APSLogErrorAt();
  }
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
  uint64_t v9 = *(const void **)(a1 + 8);
  if (v9) {
    CFRelease(v9);
  }
  uint64_t v10 = *(const void **)(a1 + 16);
  if (v10) {
    CFRelease(v10);
  }
}

uint64_t endpointAggregate_scheduleAddOrRemoveSubEndpointCompletionCallback(const void *a1, const void *a2)
{
  return APSDispatchAsyncFHelper();
}

uint64_t endpointAggregate_generateGroupID(uint64_t a1, uint64_t *a2)
{
  CMBaseObjectGetDerivedStorage();
  unsigned int v3 = *(_DWORD *)(CMBaseObjectGetDerivedStorage() + 480);
  BOOL v4 = v3 > 0xD;
  int v5 = (1 << v3) & 0x2090;
  if (!v4 && v5 != 0) {
    APSCopyClusterInfo();
  }
  uint64_t v7 = APSCopyBootUUID();
  if (v7)
  {
    uint64_t v10 = v7;
    APSLogErrorAt();
  }
  else
  {
    uint64_t v8 = APSCreateGroupID();
    uint64_t v9 = (const void *)v8;
    uint64_t v10 = 0;
    if (!a2) {
      goto LABEL_10;
    }
    *a2 = v8;
  }
  uint64_t v9 = 0;
LABEL_10:
  if (v9) {
    CFRelease(v9);
  }
  return v10;
}

uint64_t endpointAggregate_removeEntryForSubEndpoint(uint64_t a1, const void *a2, int a3)
{
  FigEndpointAggregateGetFigEndpoint();
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (CFDictionaryContainsKey(*(CFDictionaryRef *)(DerivedStorage + 8), a2))
  {
    CFDictionaryRef Value = CFDictionaryGetValue(*(CFDictionaryRef *)(DerivedStorage + 8), a2);
    uint64_t v7 = Value[1];
    if (v7)
    {
      uint64_t v8 = Value;
      Value[1] = v7 - 1;
      if (gLogCategory_APEndpointAggregate <= 50
        && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (a3 || !v8[1])
      {
        if (gLogCategory_APEndpointAggregate <= 50
          && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(DerivedStorage + 8), a2);
        uint64_t result = FigCFEqual();
        if (result)
        {
          uint64_t result = *(void *)(DerivedStorage + 24);
          if (result)
          {
            CFRelease((CFTypeRef)result);
            uint64_t result = 0;
            *(void *)(DerivedStorage + 24) = 0;
          }
        }
      }
      else
      {
        return 0;
      }
    }
    else
    {
      APSLogErrorAt();
      return 4294949690;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895046;
  }
  return result;
}

void endpointAggregate_handleSubEndpointVolumeDidChange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a5)
  {
    goto LABEL_10;
  }
  uint64_t v7 = (void *)DerivedStorage;
  uint64_t v8 = (const void *)*MEMORY[0x1E4F21080];
  CFNumberGetTypeID();
  TypedCFDictionaryRef Value = (const void *)CFDictionaryGetTypedValue();
  MEMORY[0x1D25EB370](*v7);
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 2, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!Mutable)
  {
LABEL_10:
    APSLogErrorAt();
    return;
  }
  uint64_t v11 = Mutable;
  CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F20E38], (const void *)v7[53]);
  CFDictionarySetValue(v11, v8, TypedValue);
  if (gLogCategory_APEndpointAggregate <= 50
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CMNotificationCenterGetDefaultLocalCenter();
  FigDispatchAsyncPostNotification();
  MEMORY[0x1D25EB390](*v7);
  CFRelease(v11);
}

void endpointAggregate_handleSubEndpointIsMutedDidChange()
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*DerivedStorage);
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 1, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    uint64_t v2 = Mutable;
    CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F20E38], (const void *)DerivedStorage[53]);
    if (gLogCategory_APEndpointAggregate <= 50
      && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
    MEMORY[0x1D25EB390](*DerivedStorage);
    CFRelease(v2);
  }
  else
  {
    APSLogErrorAt();
  }
}

void endpointAggregate_handleSubEndpointVolumeControlSupportedChanged()
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*DerivedStorage);
  endpointAggregate_updateIsVolumeControlSupported();
  JUMPOUT(0x1D25EB390);
}

void endpointAggregate_handleSubEndpointVolumeControlTypeChanged()
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*DerivedStorage);
  endpointAggregate_updateVolumeControlType();
  JUMPOUT(0x1D25EB390);
}

void endpointAggregate_handleSubEndpointMuteControlSupportedChanged()
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*DerivedStorage);
  endpointAggregate_updateIsMuteControlSupported();
  JUMPOUT(0x1D25EB390);
}

void endpointAggregate_handleSubEndpointAirPlayVideoPlaybackChanged(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*DerivedStorage);
  endpointAggregate_updateVideoPlaybackIsActive(a2);
  JUMPOUT(0x1D25EB390);
}

void endpointAggregate_handleSubEndpointStreamsChanged(uint64_t a1, const void *a2, uint64_t a3, __CFString *a4)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  uint64_t Int64 = CFDictionaryGetInt64();
  int v8 = CFDictionaryGetInt64();
  if (gLogCategory_APEndpointAggregate <= 30
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*DerivedStorage);
  endpointAggregate_handleSubEndpointFeatureActivationStateChanged(a2, a4, Int64 != 0, v8);
  JUMPOUT(0x1D25EB390);
}

void endpointAggregate_handleSubEndpointDescriptionChanged(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4, uint64_t a5)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*DerivedStorage);
  if (a5 && (CFDictionaryGetInt64() || CFDictionaryGetInt64() || CFDictionaryGetInt64())) {
    endpointAggregate_updateClusterCompositionPropertiesFromSubEndpoint(a2, a4, 0);
  }
  JUMPOUT(0x1D25EB390);
}

void endpointAggregate_updateVolumeControlType()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFArrayRef v1 = (const __CFArray *)FigCFDictionaryCopyArrayOfKeys();
  if (v1)
  {
    CFArrayRef v2 = v1;
    if (CFArrayGetCount(v1) < 1)
    {
      uint64_t v3 = 0;
    }
    else
    {
      uint64_t v3 = 0;
      CFIndex v4 = 0;
      while (1)
      {
        CFArrayGetValueAtIndex(v2, v4);
        uint64_t v5 = APSGetFBOPropertyInt64();
        if (v5 == 3) {
          break;
        }
        uint64_t v6 = v5;
        if (CFArrayGetCount(v2) == 1) {
          uint64_t v3 = v6;
        }
        if (++v4 >= CFArrayGetCount(v2)) {
          goto LABEL_11;
        }
      }
      uint64_t v3 = 3;
    }
LABEL_11:
    if (*(void *)(DerivedStorage + 360) != v3)
    {
      if (gLogCategory_APEndpointAggregate <= 50
        && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
      {
        APSGetFigEndpointVolumeControlTypeName();
        APSGetFigEndpointVolumeControlTypeName();
        LogPrintF();
      }
      *(void *)(DerivedStorage + 360) = v3;
      CMNotificationCenterGetDefaultLocalCenter();
      FigDispatchAsyncPostNotification();
    }
    CFRelease(v2);
  }
  else
  {
    APSLogErrorAt();
  }
}

void endpointAggregate_updateIsMuteControlSupported()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFArrayRef v1 = (const __CFArray *)FigCFDictionaryCopyArrayOfKeys();
  if (v1)
  {
    CFArrayRef v2 = v1;
    if (CFArrayGetCount(v1) < 1)
    {
      int v4 = 0;
    }
    else
    {
      CFIndex v3 = 0;
      while (1)
      {
        CFArrayGetValueAtIndex(v2, v3);
        if (APSGetFBOPropertyInt64()) {
          break;
        }
        if (++v3 >= CFArrayGetCount(v2))
        {
          int v4 = 0;
          goto LABEL_9;
        }
      }
      int v4 = 1;
    }
LABEL_9:
    if (*(unsigned __int8 *)(DerivedStorage + 368) != v4)
    {
      if (gLogCategory_APEndpointAggregate <= 50
        && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(unsigned char *)(DerivedStorage + 368) = v4;
      CMNotificationCenterGetDefaultLocalCenter();
      FigDispatchAsyncPostNotification();
    }
    CFRelease(v2);
  }
  else
  {
    APSLogErrorAt();
  }
}

void endpointAggregate_updateVideoPlaybackIsActive(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFArrayRef v3 = (const __CFArray *)FigCFDictionaryCopyArrayOfKeys();
  if (v3)
  {
    CFArrayRef v4 = v3;
    if (CFArrayGetCount(v3) < 1)
    {
LABEL_6:
      int v6 = 0;
    }
    else
    {
      CFIndex v5 = 0;
      while (1)
      {
        CFArrayGetValueAtIndex(v4, v5);
        if (APSGetFBOPropertyInt64()) {
          break;
        }
        if (++v5 >= CFArrayGetCount(v4)) {
          goto LABEL_6;
        }
      }
      int v6 = 1;
    }
    if (*(unsigned __int8 *)(DerivedStorage + 344) != v6)
    {
      *(unsigned char *)(DerivedStorage + 344) = v6;
      CFAllocatorRef v8 = CFGetAllocator(a1);
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v8, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      if (Mutable)
      {
        CFMutableDictionaryRef v10 = Mutable;
        FigCFDictionarySetInt64();
        CMNotificationCenterGetDefaultLocalCenter();
        FigDispatchAsyncPostNotification();
        CFRelease(v4);
        CFArrayRef v7 = v10;
        goto LABEL_12;
      }
      APSLogErrorAt();
    }
    CFArrayRef v7 = v4;
LABEL_12:
    CFRelease(v7);
    return;
  }
  APSLogErrorAt();
}

uint64_t endpointAggregate_updateClusterCompositionPropertiesFromSubEndpoint(uint64_t a1, const void *a2, int a3)
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  if (*(_DWORD *)(result + 400) != 2) {
    return result;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a3)
  {
    CFHash(a2);
    uint64_t Int64 = (const void *)CFNumberCreateInt64();
    CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(DerivedStorage + 376), Int64);
    if (gLogCategory_APEndpointAggregate <= 30
      && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (!Int64) {
      goto LABEL_49;
    }
    CFTypeRef v17 = Int64;
  }
  else
  {
    CFTypeRef v51 = 0;
    CFIndex v52 = 0;
    CFTypeRef cf = 0;
    value = 0;
    CFTypeRef v47 = 0;
    CFTypeRef v48 = 0;
    CFTypeRef v45 = 0;
    CFTypeRef v46 = 0;
    uint64_t v8 = *MEMORY[0x1E4F1CF80];
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (!Mutable) {
      goto LABEL_28;
    }
    uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
    uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 8);
    uint64_t v12 = v11 ? v11 : 0;
    uint64_t v13 = *(unsigned int (**)(uint64_t, void, uint64_t, const void **))(v12 + 48);
    if (!v13 || v13(CMBaseObject, *MEMORY[0x1E4F20E38], v8, &v52)) {
      goto LABEL_28;
    }
    CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F20458], v52);
    uint64_t v14 = FigEndpointGetCMBaseObject();
    uint64_t v15 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v15) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = 0;
    }
    uint64_t v18 = *(void (**)(uint64_t, void, uint64_t, CFTypeRef *))(v16 + 48);
    if (v18) {
      v18(v14, *MEMORY[0x1E4F20F28], v8, &v51);
    }
    FigCFDictionarySetValue();
    uint64_t v19 = FigEndpointGetCMBaseObject();
    uint64_t v20 = *(void *)(CMBaseObjectGetVTable() + 8);
    uint64_t v21 = v20 ? v20 : 0;
    uint64_t v22 = *(unsigned int (**)(uint64_t, void, uint64_t, void **))(v21 + 48);
    if (v22 && !v22(v19, *MEMORY[0x1E4F20FB8], v8, &value))
    {
      uint64_t v23 = (const void *)*MEMORY[0x1E4F20460];
      CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F20460], value);
      uint64_t v24 = FigEndpointGetCMBaseObject();
      uint64_t v25 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v25) {
        uint64_t v26 = v25;
      }
      else {
        uint64_t v26 = 0;
      }
      uint64_t v28 = *(void (**)(uint64_t, void, uint64_t, CFTypeRef *))(v26 + 48);
      if (v28) {
        v28(v24, *MEMORY[0x1E4F20E58], v8, &cf);
      }
      FigCFDictionarySetValue();
      uint64_t v29 = FigEndpointGetCMBaseObject();
      uint64_t v30 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v30) {
        uint64_t v31 = v30;
      }
      else {
        uint64_t v31 = 0;
      }
      uint64_t v32 = *(void (**)(uint64_t, void, uint64_t, CFTypeRef *))(v31 + 48);
      if (v32) {
        v32(v29, *MEMORY[0x1E4F20F18], v8, &v48);
      }
      FigCFDictionarySetValue();
      uint64_t v33 = FigEndpointGetCMBaseObject();
      uint64_t v34 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v34) {
        uint64_t v35 = v34;
      }
      else {
        uint64_t v35 = 0;
      }
      CFAllocatorRef v36 = *(void (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v35 + 48);
      if (v36) {
        v36(v33, @"RoomUUID", v8, &v47);
      }
      FigCFDictionarySetValue();
      uint64_t v37 = FigEndpointGetCMBaseObject();
      uint64_t v38 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v38) {
        uint64_t v39 = v38;
      }
      else {
        uint64_t v39 = 0;
      }
      CFAllocatorRef v40 = *(void (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v39 + 48);
      if (v40) {
        v40(v37, @"RoomName", v8, &v46);
      }
      FigCFDictionarySetValue();
      uint64_t v41 = FigEndpointGetCMBaseObject();
      uint64_t v42 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v42) {
        uint64_t v43 = v42;
      }
      else {
        uint64_t v43 = 0;
      }
      BOOL v44 = *(void (**)(uint64_t, void, uint64_t, CFTypeRef *))(v43 + 48);
      if (v44)
      {
        v44(v41, *MEMORY[0x1E4F21038], v8, &v45);
        if (v45)
        {
          FigCFDictionarySetValue();
          CFDictionarySetValue(Mutable, v23, (const void *)*MEMORY[0x1E4F214C8]);
        }
      }
      CFHash(a2);
      CFDictionaryRef v27 = (const void *)CFNumberCreateInt64();
      CFDictionarySetValue(*(CFMutableDictionaryRef *)(DerivedStorage + 376), v27, Mutable);
      if (gLogCategory_APEndpointAggregate <= 30
        && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    else
    {
LABEL_28:
      APSLogErrorAt();
      CFDictionaryRef v27 = 0;
    }
    if (v52) {
      CFRelease(v52);
    }
    if (v51) {
      CFRelease(v51);
    }
    if (value) {
      CFRelease(value);
    }
    if (cf) {
      CFRelease(cf);
    }
    if (v48) {
      CFRelease(v48);
    }
    if (v47) {
      CFRelease(v47);
    }
    if (v46) {
      CFRelease(v46);
    }
    if (Mutable) {
      CFRelease(Mutable);
    }
    if (v27) {
      CFRelease(v27);
    }
    CFTypeRef v17 = v45;
    if (!v45) {
      goto LABEL_49;
    }
  }
  CFRelease(v17);
LABEL_49:
  if (gLogCategory_APEndpointAggregate <= 50
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CMNotificationCenterGetDefaultLocalCenter();
  FigDispatchAsyncPostNotification();
  CMNotificationCenterGetDefaultLocalCenter();
  return FigDispatchAsyncPostNotification();
}

void endpointAggregate_addOrRemoveSubEndpointCallCompletionCallback(uint64_t a1)
{
  CFArrayRef v2 = *(void (**)(void, void, void, void, void, void))(a1 + 48);
  if (v2) {
    v2(*(void *)(a1 + 8), *(void *)a1, *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned int *)(a1 + 32), *(void *)(a1 + 40));
  }
  CFRelease(*(CFTypeRef *)a1);
  CFArrayRef v3 = *(const void **)(a1 + 8);
  CFRelease(v3);
}

void endpointAggregate_unregisterCommChannelsForSubEndpointAndNotifyClientIfNeeded()
{
  CMBaseObjectGetDerivedStorage();
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D510]);
  if (Mutable)
  {
    CFArrayRef v1 = Mutable;
    CFDictionaryApplyBlock();
    CFArrayGetCount(v1);
    CFArrayApplyBlock();
    CFRelease(v1);
  }
  else
  {
    APSLogErrorAt();
  }
}

void endpointAggregate_deactivateSubEndpointCallback(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, const void **a5)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*DerivedStorage);
  uint64_t v8 = CMBaseObjectGetDerivedStorage();
  if (a1)
  {
    uint64_t v9 = v8;
    if (CFArrayGetCount(*(CFArrayRef *)(v8 + 32)) >= 1)
    {
      CFIndex v10 = 0;
      do
      {
        ValueAtIndex = CFArrayGetValueAtIndex(*(CFArrayRef *)(v9 + 32), v10);
        CFRetain(ValueAtIndex);
        CFRetain(a1);
        APSDispatchAsyncFHelper();
        ++v10;
      }
      while (v10 < CFArrayGetCount(*(CFArrayRef *)(v9 + 32)));
    }
  }
  if (*((_DWORD *)DerivedStorage + 100) != 3)
  {
    uint64_t v12 = (uint64_t)*a5;
    uint64_t v13 = CMBaseObjectGetDerivedStorage();
    if (*(void *)(v13 + 80))
    {
      uint64_t v14 = v13;
      if (!CFDictionaryGetInt64())
      {
        SubEndpointCFIndex Count = endpointAggregate_getSubEndpointCount(v12, 1);
        BOOL v16 = *(void *)(v14 + 24) && APSGetFBOPropertyInt64() != 0;
        if (SubEndpointCount <= 0 && !v16)
        {
          uint64_t v17 = *(void *)(v14 + 80);
          uint64_t v18 = *(void *)(CMBaseObjectGetVTable() + 16);
          uint64_t v19 = v18 ? v18 : 0;
          uint64_t v20 = *(unsigned int (**)(uint64_t))(v19 + 96);
          if (!v20 || v20(v17)) {
            APSLogErrorAt();
          }
        }
      }
    }
    endpointAggregate_ensureLocalPlaybackIsEnabledOrDisabled(*a5);
    endpointAggregate_updateIsVolumeControlSupported();
    endpointAggregate_updateVolumeControlType();
    endpointAggregate_updateIsMuteControlSupported();
    endpointAggregate_updateVideoPlaybackIsActive(*a5);
  }
  if (gLogCategory_APEndpointAggregate <= 50
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  endpointAggregate_scheduleAddOrRemoveSubEndpointCompletionCallback(*a5, a1);
  MEMORY[0x1D25EB390](*DerivedStorage);
  CFRelease(*a5);
  free(a5);
}

void __endpointAggregate_unregisterCommChannelsForSubEndpointAndNotifyClientIfNeeded_block_invoke(uint64_t a1, void *value, CFTypeRef cf2)
{
  CFIndex v5 = *(const void **)(a1 + 32);
  if (!v5 || CFEqual(v5, cf2))
  {
    int v6 = *(__CFArray **)(a1 + 40);
    CFArrayAppendValue(v6, value);
  }
}

void __endpointAggregate_unregisterCommChannelsForSubEndpointAndNotifyClientIfNeeded_block_invoke_2(uint64_t a1, const void *a2)
{
}

void endpointAggregate_unregisterCommChannelAndNotifyClientIfNeeded(const void *a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (CFDictionaryContainsKey(*(CFDictionaryRef *)(DerivedStorage + 168), a2))
  {
    APEndpointCallRCDelegateDidCloseAsync(a1, *(void *)(DerivedStorage + 120), a2, *(NSObject **)(DerivedStorage + 392), *(void *)(DerivedStorage + 240), *(void *)(DerivedStorage + 256));
    if (gLogCategory_APEndpointAggregate <= 50
      && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFIndex v5 = *(__CFDictionary **)(DerivedStorage + 168);
    CFDictionaryRemoveValue(v5, a2);
  }
}

__CFString *endpointAggregate_subEndpointSupportProtocolCopyDebugDescription(uint64_t a1)
{
  CFMutableArrayRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppendFormat(Mutable, 0, @"APEndpointCluster <FigEndpointSubEndpointSupportProtocol> on <%p>", a1);
  return Mutable;
}

uint64_t endpointAggregate_CopySubEndpointProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  uint64_t v21 = 0;
  if (gLogCategory_APEndpointAggregate <= 30
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*DerivedStorage);
  if (!endpointAggregate_getSubEndpointWithID(a1, a2, &v21))
  {
    uint64_t v15 = 4294949689;
    goto LABEL_25;
  }
  uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
  uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v12) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v14) {
    uint64_t v15 = v14(CMBaseObject, a3, a4, a5);
  }
  else {
    uint64_t v15 = 4294954514;
  }
  if (v21 && v15)
  {
    uint64_t v16 = FigEndpointGetCMBaseObject();
    uint64_t v17 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v17) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 48);
    if (!v19)
    {
      uint64_t v15 = 4294954514;
LABEL_24:
      APSLogErrorAt();
      goto LABEL_25;
    }
    uint64_t v15 = v19(v16, a3, a4, a5);
  }
  if (v15 != -12784 && v15 != -6727 && v15) {
    goto LABEL_24;
  }
LABEL_25:
  MEMORY[0x1D25EB390](*DerivedStorage);
  return v15;
}

uint64_t endpointAggregate_SetSubEndpointProperty(uint64_t a1, uint64_t a2, const void *a3, uint64_t a4)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  uint64_t v19 = 0;
  if (gLogCategory_APEndpointAggregate <= 30
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*DerivedStorage);
  if (!endpointAggregate_getSubEndpointWithID(a1, a2, &v19))
  {
    uint64_t v13 = 4294949689;
    goto LABEL_30;
  }
  uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
  uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v10) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0;
  }
  uint64_t v12 = *(uint64_t (**)(uint64_t, const void *, uint64_t))(v11 + 56);
  if (v12) {
    uint64_t v13 = v12(CMBaseObject, a3, a4);
  }
  else {
    uint64_t v13 = 4294954514;
  }
  if (v19)
  {
    if (!v13
      && (CFEqual(a3, (CFTypeRef)*MEMORY[0x1E4F21080])
       || CFEqual(a3, (CFTypeRef)*MEMORY[0x1E4F21098])
       || CFEqual(a3, (CFTypeRef)*MEMORY[0x1E4F20E98])
       || CFEqual(a3, @"IsHALMuted")))
    {
      uint64_t v13 = 0;
      goto LABEL_30;
    }
    uint64_t v14 = FigEndpointGetCMBaseObject();
    uint64_t v15 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v15) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = 0;
    }
    uint64_t v17 = *(uint64_t (**)(uint64_t, const void *, uint64_t))(v16 + 56);
    if (!v17)
    {
      uint64_t v13 = 4294954514;
LABEL_29:
      APSLogErrorAt();
      goto LABEL_30;
    }
    uint64_t v13 = v17(v14, a3, a4);
  }
  if (v13 != -12784 && v13 != -6727 && v13) {
    goto LABEL_29;
  }
LABEL_30:
  MEMORY[0x1D25EB390](*DerivedStorage);
  return v13;
}

const void *endpointAggregate_getSubEndpointWithID(uint64_t a1, uint64_t a2, void *a3)
{
  CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointAggregate <= 30
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a3) {
    *a3 = 0;
  }
  CFArrayRef v4 = (const __CFArray *)FigCFDictionaryCopyArrayOfKeys();
  CFIndex Count = CFArrayGetCount(v4);
  if (Count < 1)
  {
    CFDictionaryRef v27 = 0;
    if (!v4) {
      goto LABEL_54;
    }
    goto LABEL_53;
  }
  CFIndex v6 = Count;
  CFIndex v7 = 0;
  CFDictionaryRef v27 = 0;
  uint64_t v26 = *MEMORY[0x1E4F20E38];
  uint64_t v8 = *MEMORY[0x1E4F1CF80];
  uint64_t v25 = *MEMORY[0x1E4F21038];
  int v9 = -1;
  while (1)
  {
    ValueAtIndex = CFArrayGetValueAtIndex(v4, v7);
    CFTypeRef v28 = 0;
    uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
    uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v12) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, CFTypeRef *))(v13 + 48);
    if (v14) {
      v14(CMBaseObject, v26, v8, &v28);
    }
    int v15 = FigCFEqual();
    if (gLogCategory_APEndpointAggregate <= 30
      && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (v28) {
      CFRelease(v28);
    }
    if (v15) {
      break;
    }
    uint64_t v16 = FigEndpointGetCMBaseObject();
    uint64_t v17 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v17) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, CFTypeRef *))(v18 + 48);
    if (v19) {
      v19(v16, v25, v8, &v28);
    }
    int v20 = FigCFEqual();
    if (gLogCategory_APEndpointAggregate <= 30
      && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (v28) {
      CFRelease(v28);
    }
    if (v20)
    {
      BOOL v21 = APSGetFBOPropertyInt64() != 0;
      int v22 = v21 | (2 * (APSGetFBOPropertyInt64() != 0));
      int v23 = v22 | (4 * (APSGetFBOPropertyInt64() != 0));
      if (gLogCategory_APEndpointAggregate <= 30
        && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (v23 <= v9)
      {
        if (a3) {
          *a3 = ValueAtIndex;
        }
      }
      else
      {
        if (a3) {
          *a3 = v27;
        }
        if (gLogCategory_APEndpointAggregate <= 30
          && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        if (!a3 && v23 == 3) {
          break;
        }
        CFDictionaryRef v27 = ValueAtIndex;
        int v9 = v23;
      }
    }
    if (v6 == ++v7) {
      goto LABEL_52;
    }
  }
  CFDictionaryRef v27 = ValueAtIndex;
LABEL_52:
  if (v4) {
LABEL_53:
  }
    CFRelease(v4);
LABEL_54:
  if (gLogCategory_APEndpointAggregate <= 30
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v27;
}

uint64_t endpointAggregate_Activate(const void *a1, uint64_t a2, CFTypeRef a3, uint64_t a4)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*DerivedStorage);
  if (gLogCategory_APEndpointAggregate <= 50
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a3 && (CFTypeID v9 = CFGetTypeID(a3), v9 != CFDictionaryGetTypeID()))
  {
    APSLogErrorAt();
    uint64_t v11 = 4294950576;
  }
  else if (*((_DWORD *)DerivedStorage + 10))
  {
    APSLogErrorAt();
    uint64_t v11 = 4294950569;
  }
  else if (*((unsigned char *)DerivedStorage + 44))
  {
    APSLogErrorAt();
    uint64_t v11 = 4294950573;
  }
  else
  {
    uint64_t v10 = CMBaseObjectGetDerivedStorage();
    if (CFDictionaryGetCount(*(CFDictionaryRef *)(v10 + 8)))
    {
      APSLogErrorAt();
      uint64_t v11 = 4294895043;
    }
    else
    {
      uint64_t v11 = endpointAggregate_copyActivationOptionsToStorage((uint64_t)a1, a2, a3, *((_DWORD *)DerivedStorage + 100) != 3, 1);
      if (v11)
      {
        APSLogErrorAt();
      }
      else
      {
        *(_OWORD *)(DerivedStorage + 33) = 0u;
        *(_OWORD *)(DerivedStorage + 35) = 0u;
        *((_OWORD *)DerivedStorage + 19) = 0u;
        *((_OWORD *)DerivedStorage + 20) = 0u;
        DerivedStorage[37] = 0;
        DerivedStorage[38] = a1;
        DerivedStorage[33] = a1;
        DerivedStorage[34] = endpointAggregate_handleAuthRequiredInternal;
        DerivedStorage[36] = endpointAggregate_handleConnectedStateChangedInternal;
        DerivedStorage[35] = endpointAggregate_handleFailedInternal;
        DerivedStorage[40] = endpointAggregate_handleDidReceiveDataFromCommChannelInternal;
        DerivedStorage[41] = endpointAggregate_handleDidCloseCommChannelInternal;
        DerivedStorage[6] = a2;
        *((_DWORD *)DerivedStorage + 10) = 1;
        ++DerivedStorage[15];
      }
    }
  }
  CFTypeRef v12 = CFRetain(a1);
  if (a3) {
    a3 = CFRetain(a3);
  }
  uint64_t v13 = (const void *)DerivedStorage[10];
  if (v13) {
    CFTypeRef v14 = CFRetain(v13);
  }
  else {
    CFTypeRef v14 = 0;
  }
  if (*((_DWORD *)DerivedStorage + 100) != 3)
  {
    APSDispatchAsyncFHelper();
    goto LABEL_34;
  }
  uint64_t v15 = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointAggregate <= 50
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (v11)
  {
    APSLogErrorAt();
    if (gLogCategory_APEndpointAggregate <= 90
      && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    endpointAggregate_clearActivationState(v12);
    if (!a4) {
      goto LABEL_30;
    }
  }
  else
  {
    *(void *)(v15 + 56) = a2;
    *(_DWORD *)(v15 + 40) = 2;
    if (gLogCategory_APEndpointAggregate <= 50
      && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (!a4) {
      goto LABEL_30;
    }
  }
  CFRetain(v12);
  APSDispatchAsyncFHelper();
LABEL_30:
  CFRelease(v12);
  if (a3) {
    CFRelease(a3);
  }
  if (v14) {
    CFRelease(v14);
  }
LABEL_34:
  MEMORY[0x1D25EB390](*DerivedStorage);
  return v11;
}

uint64_t endpointAggregate_Deactivate(const void *a1)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointAggregate <= 50
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*DerivedStorage);
  if (*((unsigned char *)DerivedStorage + 44))
  {
    uint64_t v3 = 4294950573;
LABEL_13:
    APSLogErrorAt();
    goto LABEL_9;
  }
  if (*((_DWORD *)DerivedStorage + 10) != 2)
  {
    uint64_t v3 = 4294951716;
    goto LABEL_13;
  }
  if (endpointAggregate_getSubEndpointCount((uint64_t)a1, 2))
  {
    uint64_t v3 = 4294895043;
    goto LABEL_13;
  }
  uint64_t v3 = 0;
LABEL_9:
  CFRetain(a1);
  APSDispatchAsyncFHelper();
  MEMORY[0x1D25EB390](*DerivedStorage);
  return v3;
}

uint64_t endpointAggregate_Dissociate()
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*DerivedStorage);
  if (!*((unsigned char *)DerivedStorage + 44))
  {
    if (gLogCategory_APEndpointAggregate <= 50
      && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *((unsigned char *)DerivedStorage + 44) = 1;
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
  }
  MEMORY[0x1D25EB390](*DerivedStorage);
  return 0;
}

uint64_t endpointAggregate_SetDelegate(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    uint64_t v6 = endpointAggregate_SetDelegateRouting(a1, 0);
    if (v6)
    {
      uint64_t v5 = v6;
    }
    else
    {
      uint64_t v5 = endpointAggregate_SetDelegateRemoteControl(a1, 0);
      if (!v5) {
        return v5;
      }
    }
LABEL_10:
    APSLogErrorAt();
    return v5;
  }
  long long v3 = *(_OWORD *)(a2 + 16);
  v10[0] = *(_OWORD *)a2;
  v10[1] = v3;
  uint64_t v11 = *(void *)(a2 + 32);
  v8[1] = 0;
  v8[0] = *(void *)&v10[0];
  long long v9 = *(_OWORD *)(a2 + 48);
  uint64_t v4 = endpointAggregate_SetDelegateRouting(a1, (uint64_t)v10);
  if (v4)
  {
    uint64_t v5 = v4;
    goto LABEL_10;
  }
  uint64_t v5 = endpointAggregate_SetDelegateRemoteControl(a1, (uint64_t)v8);
  if (v5) {
    goto LABEL_10;
  }
  return v5;
}

uint64_t endpointAggregate_SetDelegateRouting(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*DerivedStorage);
  if (*((unsigned char *)DerivedStorage + 44))
  {
    APSLogErrorAt();
    a2 = 4294950573;
  }
  else
  {
    if (gLogCategory_APEndpointAggregate <= 50
      && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v4 = (const void *)DerivedStorage[31];
    if (v4)
    {
      CFRelease(v4);
      DerivedStorage[31] = 0;
    }
    uint64_t v5 = DerivedStorage + 22;
    if (a2)
    {
      long long v6 = *(_OWORD *)a2;
      long long v7 = *(_OWORD *)(a2 + 16);
      DerivedStorage[26] = *(void *)(a2 + 32);
      *uint64_t v5 = v6;
      *((_OWORD *)DerivedStorage + 12) = v7;
      a2 = 0;
      DerivedStorage[31] = FigCFWeakReferenceHolderCreateWithReferencedObject();
    }
    else
    {
      DerivedStorage[26] = 0;
      *uint64_t v5 = 0u;
      *((_OWORD *)DerivedStorage + 12) = 0u;
    }
  }
  MEMORY[0x1D25EB390](*DerivedStorage);
  return a2;
}

uint64_t endpointAggregate_SetDelegateRemoteControl(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*DerivedStorage);
  if (*((unsigned char *)DerivedStorage + 44))
  {
    APSLogErrorAt();
    a2 = 4294950573;
  }
  else
  {
    if (gLogCategory_APEndpointAggregate <= 50
      && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v4 = (const void *)DerivedStorage[32];
    if (v4)
    {
      CFRelease(v4);
      DerivedStorage[32] = 0;
    }
    uint64_t v5 = DerivedStorage + 27;
    if (a2)
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *uint64_t v5 = *(_OWORD *)a2;
      *(_OWORD *)(DerivedStorage + 29) = v6;
      a2 = 0;
      DerivedStorage[32] = FigCFWeakReferenceHolderCreateWithReferencedObject();
    }
    else
    {
      *uint64_t v5 = 0u;
      *(_OWORD *)(DerivedStorage + 29) = 0u;
    }
  }
  MEMORY[0x1D25EB390](*DerivedStorage);
  return a2;
}

uint64_t endpointAggregate_CreatePlaybackSession(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*DerivedStorage);
  if (*((_DWORD *)DerivedStorage + 10) != 2)
  {
    APSLogErrorAt();
    uint64_t v8 = 4294951716;
    goto LABEL_11;
  }
  uint64_t v4 = DerivedStorage[19];
  if (!v4)
  {
    APSLogErrorAt();
    uint64_t v8 = 4294895039;
    goto LABEL_11;
  }
  uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  long long v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 72);
  if (!v7)
  {
    uint64_t v8 = 4294954514;
LABEL_10:
    APSLogErrorAt();
    goto LABEL_11;
  }
  uint64_t v8 = v7(v4, a2);
  if (v8) {
    goto LABEL_10;
  }
LABEL_11:
  MEMORY[0x1D25EB390](*DerivedStorage);
  return v8;
}

uint64_t endpointAggregate_UpdateFeatures(const void *a1, uint64_t a2, const void *a3)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointAggregate <= 50
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*DerivedStorage);
  if (*((_DWORD *)DerivedStorage + 100) == 3)
  {
    APSLogErrorAt();
    uint64_t v6 = 4294950570;
  }
  else if (*((_DWORD *)DerivedStorage + 10))
  {
    if (a1) {
      CFRetain(a1);
    }
    if (a3) {
      CFRetain(a3);
    }
    APSDispatchAsyncFHelper();
    uint64_t v6 = 0;
  }
  else
  {
    APSLogErrorAt();
    uint64_t v6 = 4294949690;
  }
  MEMORY[0x1D25EB390](*DerivedStorage);
  return v6;
}

uint64_t endpointAggregate_copyActivationOptionsToStorage(uint64_t a1, char a2, const void *a3, int a4, int a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  CFTypeRef v53 = 0;
  uint64_t v11 = *(const void **)(DerivedStorage + 112);
  if (v11)
  {
    CFRelease(v11);
    *(void *)(DerivedStorage + 112) = 0;
  }
  char v51 = a2;
  if (a3)
  {
    CFTypeRef v12 = (const void *)*MEMORY[0x1E4F20328];
    if (CFDictionaryContainsKey((CFDictionaryRef)a3, (const void *)*MEMORY[0x1E4F20328]))
    {
      CFDictionaryRef MutableCopy = (__CFDictionary *)CFRetain(a3);
    }
    else
    {
      uint64_t v17 = (const void *)APSCreateNewUUIDString();
      CFDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, (CFDictionaryRef)a3);
      CFDictionaryAddValue(MutableCopy, v12, v17);
      if (v17) {
        CFRelease(v17);
      }
    }
    *(void *)(DerivedStorage + 112) = MutableCopy;
    uint64_t v18 = CFDictionaryGetValue((CFDictionaryRef)a3, (const void *)*MEMORY[0x1E4F20340]);
    uint64_t v15 = CFDictionaryGetValue((CFDictionaryRef)a3, (const void *)*MEMORY[0x1E4F20350]);
    BOOL v14 = CFDictionaryGetInt64() != 0;
    uint64_t v16 = *(const void **)(DerivedStorage + 64);
    *(void *)(DerivedStorage + 64) = v18;
    if (v18) {
      CFRetain(v18);
    }
  }
  else
  {
    BOOL v14 = 0;
    uint64_t v15 = 0;
    *(void *)(DerivedStorage + 112) = 0;
    uint64_t v16 = *(const void **)(DerivedStorage + 64);
    *(void *)(DerivedStorage + 64) = 0;
  }
  if (v16) {
    CFRelease(v16);
  }
  uint64_t v19 = *(const void **)(DerivedStorage + 72);
  *(void *)(DerivedStorage + 72) = v15;
  if (v15) {
    CFRetain(v15);
  }
  if (v19) {
    CFRelease(v19);
  }
  if (!a4)
  {
    uint64_t v34 = 0;
    uint64_t AudioStreamOptions = 0;
    CFMutableArrayRef Mutable = 0;
    uint64_t v25 = 0;
    goto LABEL_78;
  }
  int v20 = FigCFEqual();
  uint64_t Int64 = APSSettingsGetInt64();
  CFAllocatorRef v22 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFMutableArrayRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!Mutable)
  {
    APSLogErrorAt();
    uint64_t v34 = 0;
    uint64_t v25 = 0;
    uint64_t AudioStreamOptions = 4294950575;
    goto LABEL_78;
  }
  uint64_t v50 = a1;
  int v24 = a5;
  uint64_t v25 = CFDictionaryCreateMutable(v22, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  uint64_t v26 = (const void *)*MEMORY[0x1E4F1CFD0];
  CFDictionarySetValue(v25, @"IsSharedAudioEngine", (const void *)*MEMORY[0x1E4F1CFD0]);
  CFDictionaryRef v27 = (const void *)*MEMORY[0x1E4F1CFC8];
  if (v14) {
    CFTypeRef v28 = v26;
  }
  else {
    CFTypeRef v28 = (const void *)*MEMORY[0x1E4F1CFC8];
  }
  CFDictionarySetValue(v25, @"IsHTGroup", v28);
  uint64_t v29 = (const void **)MEMORY[0x1E4F4A158];
  if (Int64) {
    uint64_t v29 = (const void **)MEMORY[0x1E4F4A148];
  }
  CFDictionarySetValue(Mutable, @"PreferredNetworkClockType", *v29);
  CFDictionarySetValue(Mutable, @"AllowP2PForNTP", v26);
  if (v20) {
    uint64_t v30 = v26;
  }
  else {
    uint64_t v30 = v27;
  }
  CFDictionarySetValue(Mutable, @"IgnoreClientPIDForMediaRemote", v30);
  CFDictionarySetValue(Mutable, @"AudioEngineOptions", v25);
  uint64_t v31 = *(const void **)(DerivedStorage + 440);
  if (v31) {
    CFDictionarySetValue(Mutable, @"NetworkClock", v31);
  }
  uint64_t SharedContext = APEndpointCopyFromActivationOptionsOrCreateSharedContext((const __CFDictionary *)a3, v51, (uint64_t)Mutable, (unint64_t)&cf, 0, (__CFDictionary **)&v53);
  if (SharedContext)
  {
    uint64_t AudioStreamOptions = SharedContext;
    goto LABEL_97;
  }
  if (v24)
  {
    uint64_t v33 = CMBaseObjectGetDerivedStorage();
    if (*(_DWORD *)(v33 + 400) || (unsigned int v36 = *(_DWORD *)(CMBaseObjectGetDerivedStorage() + 480), v36 > 0xD))
    {
      LOBYTE(v37) = 1;
      if (!a3) {
        goto LABEL_45;
      }
    }
    else
    {
      unsigned int v37 = (0x1F6Fu >> v36) & 1;
      if (!a3) {
        goto LABEL_45;
      }
    }
    uint64_t v38 = CFDictionaryGetValue((CFDictionaryRef)a3, @"GroupID");
    if (v38)
    {
      uint64_t v39 = (void *)CFRetain(v38);
      value = v39;
      if (v39) {
        goto LABEL_51;
      }
      if ((v37 & 1) == 0)
      {
LABEL_46:
        uint64_t GroupID = endpointAggregate_generateGroupID(v50, (uint64_t *)&value);
        if (!GroupID)
        {
          char v40 = 1;
          uint64_t v34 = value;
          goto LABEL_52;
        }
        uint64_t AudioStreamOptions = GroupID;
        APSLogErrorAt();
        if (value) {
          CFRelease(value);
        }
LABEL_97:
        APSLogErrorAt();
        uint64_t v34 = 0;
        goto LABEL_78;
      }
LABEL_42:
      if (*(_DWORD *)(v33 + 400) == 2
        && (endpointAggregate_isATVInHTGroup()
         || endpointAggregate_isPersistentConnection() && *(_DWORD *)(v33 + 480) == 7))
      {
        uint64_t v34 = 0;
        char v40 = 1;
        goto LABEL_52;
      }
      uint64_t v39 = (void *)APSCreateNewUUIDString();
      value = v39;
      if (!v39)
      {
        APSLogErrorAt();
        uint64_t AudioStreamOptions = 4294950575;
        goto LABEL_97;
      }
LABEL_51:
      uint64_t v34 = v39;
      char v40 = 0;
LABEL_52:
      if (gLogCategory_APEndpointAggregate <= 50
        && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v42 = *(const void **)(DerivedStorage + 88);
      *(void *)(DerivedStorage + 88) = v34;
      if (v34) {
        CFRetain(v34);
      }
      if (v42) {
        CFRelease(v42);
      }
      *(unsigned char *)(DerivedStorage + 96) = v40;
      goto LABEL_61;
    }
LABEL_45:
    value = 0;
    if ((v37 & 1) == 0) {
      goto LABEL_46;
    }
    goto LABEL_42;
  }
  uint64_t v34 = 0;
LABEL_61:
  CFTypeRef v43 = cf;
  uint64_t v44 = CMBaseObjectGetDerivedStorage();
  value = 0;
  if (!*(unsigned char *)(v44 + 448)) {
    goto LABEL_69;
  }
  uint64_t v45 = v44;
  if (*(_DWORD *)(v44 + 480) != 4
    || (CFTypeRef v46 = (const void *)*MEMORY[0x1E4F21478],
        CFDictionaryContainsKey(*(CFDictionaryRef *)(v44 + 104), (const void *)*MEMORY[0x1E4F21478])))
  {
    uint64_t AudioStreamOptions = 0;
  }
  else
  {
    uint64_t AudioStreamOptions = APEndpointCreateAudioStreamOptions((uint64_t)v46, (uint64_t)v43, v25);
    if (AudioStreamOptions) {
      APSLogErrorAt();
    }
    else {
      CFDictionarySetValue(*(CFMutableDictionaryRef *)(v45 + 104), v46, value);
    }
  }
  if (value) {
    CFRelease(value);
  }
  if (AudioStreamOptions)
  {
    APSLogErrorAt();
  }
  else
  {
LABEL_69:
    CFDictionaryMergeDictionary();
    if (gLogCategory_APEndpointAggregate <= 50
      && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFTypeRef v47 = *(const void **)(DerivedStorage + 80);
    CFTypeRef v48 = cf;
    *(void *)(DerivedStorage + 80) = cf;
    if (v48) {
      CFRetain(v48);
    }
    if (v47) {
      CFRelease(v47);
    }
    uint64_t AudioStreamOptions = 0;
  }
LABEL_78:
  if (cf) {
    CFRelease(cf);
  }
  if (v34) {
    CFRelease(v34);
  }
  if (v53) {
    CFRelease(v53);
  }
  if (v25) {
    CFRelease(v25);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  return AudioStreamOptions;
}

uint64_t endpointAggregate_handleAuthRequiredInternal(const void *a1, uint64_t a2, uint64_t a3, const void *a4, const void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*DerivedStorage);
  if (DerivedStorage[23])
  {
    if (DerivedStorage[31] && (uint64_t v13 = FigCFWeakReferenceHolderCopyReferencedObject(), DerivedStorage[31]) && !v13)
    {
      if (gLogCategory_APEndpointAggregate <= 90
        && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    else
    {
      BOOL v14 = malloc_type_calloc(1uLL, 0x18uLL, 0xA00402214FCE6uLL);
      if (a1) {
        CFTypeRef v15 = CFRetain(a1);
      }
      else {
        CFTypeRef v15 = 0;
      }
      *BOOL v14 = v15;
      v14[1] = a6;
      v14[2] = a7;
      if (a4) {
        CFRetain(a4);
      }
      if (a1) {
        CFRetain(a1);
      }
      if (a5) {
        CFRetain(a5);
      }
      APSDispatchAsyncFHelper();
    }
  }
  return MEMORY[0x1D25EB390](*DerivedStorage);
}

uint64_t endpointAggregate_handleConnectedStateChangedInternal(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*DerivedStorage);
  if (DerivedStorage[25])
  {
    if (DerivedStorage[31] && (uint64_t v8 = FigCFWeakReferenceHolderCopyReferencedObject(), DerivedStorage[31]) && !v8)
    {
      if (gLogCategory_APEndpointAggregate <= 90
        && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    else
    {
      if (a5) {
        CFRetain(a5);
      }
      if (a1) {
        CFRetain(a1);
      }
      APSDispatchAsyncFHelper();
    }
  }
  return MEMORY[0x1D25EB390](*DerivedStorage);
}

void endpointAggregate_handleFailedInternal(const void *a1, uint64_t a2, const __CFDictionary *a3, const void *a4)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*DerivedStorage);
  if (!DerivedStorage[24]) {
    goto LABEL_16;
  }
  if (DerivedStorage[31])
  {
    uint64_t v8 = FigCFWeakReferenceHolderCopyReferencedObject();
    if (DerivedStorage[31])
    {
      if (!v8)
      {
        if (gLogCategory_APEndpointAggregate <= 90
          && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
LABEL_16:
        JUMPOUT(0x1D25EB390);
      }
    }
  }
  if (a3) {
    CFDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy(0, 0, a3);
  }
  else {
    CFDictionaryRef MutableCopy = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  }
  uint64_t v10 = MutableCopy;
  if (!MutableCopy)
  {
    APSLogErrorAt();
    goto LABEL_16;
  }
  CFDictionaryAddValue(MutableCopy, (const void *)*MEMORY[0x1E4F20368], a1);
  CFDictionarySetInt64();
  if (a4) {
    CFRetain(a4);
  }
  CFRetain(v10);
  APSDispatchAsyncFHelper();
  MEMORY[0x1D25EB390](*DerivedStorage);
  CFRelease(v10);
}

uint64_t endpointAggregate_handleDidReceiveDataFromCommChannelInternal(const void *a1, uint64_t a2, const void *a3, const void *a4, const void *a5)
{
  if (a1 && a3 && a4 && a5)
  {
    uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
    MEMORY[0x1D25EB370](*(void *)DerivedStorage);
    if (!*(unsigned char *)(DerivedStorage + 44)
      && *(_DWORD *)(DerivedStorage + 40) == 2
      && endpointAggregate_getSubEndpointCount((uint64_t)a5, 1) > 0
      && CFDictionaryContainsKey(*(CFDictionaryRef *)(DerivedStorage + 8), a1))
    {
      if (!CFDictionaryContainsKey(*(CFDictionaryRef *)(DerivedStorage + 168), a3))
      {
        if (gLogCategory_APEndpointAggregate <= 50
          && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        CFDictionarySetValue(*(CFMutableDictionaryRef *)(DerivedStorage + 168), a3, a1);
      }
      APEndpointCallRCDelegateDidReceiveDataAsync(a5, *(void *)(DerivedStorage + 120), a3, a4, *(NSObject **)(DerivedStorage + 392), *(void *)(DerivedStorage + 232), *(void *)(DerivedStorage + 256));
    }
    else
    {
      APSLogErrorAt();
    }
    JUMPOUT(0x1D25EB390);
  }
  return APSLogErrorAt();
}

uint64_t endpointAggregate_handleDidCloseCommChannelInternal(uint64_t a1, uint64_t a2, const void *a3, const void *a4)
{
  if (a1 && a3 && a4)
  {
    uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
    MEMORY[0x1D25EB370](*(void *)DerivedStorage);
    if (*(unsigned char *)(DerivedStorage + 44)) {
      APSLogErrorAt();
    }
    else {
      endpointAggregate_unregisterCommChannelAndNotifyClientIfNeeded(a4, a3);
    }
    JUMPOUT(0x1D25EB390);
  }
  return APSLogErrorAt();
}

void endpointAggregate_activateInternal(uint64_t a1)
{
  CFTypeRef v2 = *(CFTypeRef *)a1;
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  if (*(_DWORD *)(a1 + 32))
  {
    APSLogErrorAt();
    if (!*(_DWORD *)(a1 + 32)) {
      goto LABEL_9;
    }
  }
  else
  {
    if (gLogCategory_APEndpointAggregate <= 50
      && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    MEMORY[0x1D25EB370](*DerivedStorage);
    if (*(void *)(a1 + 16) == DerivedStorage[15] && *((_DWORD *)DerivedStorage + 10) == 1)
    {
      *((_DWORD *)DerivedStorage + 10) = 2;
      uint64_t v4 = *(void *)(a1 + 8);
      DerivedStorage[6] = 0;
      DerivedStorage[7] = v4;
      endpointAggregate_ensureLocalPlaybackIsEnabledOrDisabled(v2);
      MEMORY[0x1D25EB390](*DerivedStorage);
LABEL_9:
      if (gLogCategory_APEndpointAggregate <= 50
        && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      goto LABEL_22;
    }
    MEMORY[0x1D25EB390](*DerivedStorage);
    APSLogErrorAt();
  }
  if (gLogCategory_APEndpointAggregate <= 90
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*DerivedStorage);
  if (*(void *)(a1 + 16) == DerivedStorage[15] && *((_DWORD *)DerivedStorage + 10) == 1) {
    endpointAggregate_clearActivationState(v2);
  }
  MEMORY[0x1D25EB390](*DerivedStorage);
LABEL_22:
  if (*(void *)(a1 + 40))
  {
    CFRetain(v2);
    APSDispatchAsyncFHelper();
  }
  CFRelease(*(CFTypeRef *)a1);
  uint64_t v5 = *(const void **)(a1 + 24);
  if (v5) {
    CFRelease(v5);
  }
  uint64_t v6 = *(const void **)(a1 + 56);
  if (v6) {
    CFRelease(v6);
  }
}

uint64_t endpointAggregate_isPersistentConnection()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v1 = *(void *)(DerivedStorage + 472);
  if (v1) {
    return v1 == *MEMORY[0x1E4F1CFD0];
  }
  uint64_t v1 = *(void *)(DerivedStorage + 464);
  if (v1) {
    return v1 == *MEMORY[0x1E4F1CFD0];
  }
  if (!*(unsigned char *)(DerivedStorage + 448)) {
    return 0;
  }
  return APSIsMemberOfPersistentGroup();
}

void endpointAggregate_authHandlingCompletionCallbackInternal(int a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = (void (*)(void, uint64_t, uint64_t, void))a4[1];
  if (v5) {
    v5(*a4, a2, a3, a4[2]);
  }
  if (*a4) {
    CFRelease((CFTypeRef)*a4);
  }
  free(a4);
}

void endpointAggregate_callDelegateHandleAuthRequiredInternal(uint64_t a1)
{
  (*(void (**)(void, void, void, void, void, void, void))(a1 + 16))(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56));
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
  CFTypeRef v2 = *(const void **)(a1 + 32);
  if (v2) {
    CFRelease(v2);
  }
  long long v3 = *(const void **)(a1 + 8);
  if (v3) {
    CFRelease(v3);
  }
  uint64_t v4 = *(const void **)(a1 + 40);
  if (v4)
  {
    CFRelease(v4);
  }
}

void endpointAggregate_callDelegateHandleConnectedStateChangedInternal(uint64_t a1)
{
  (*(void (**)(void, void, void, void, void))(a1 + 8))(*(void *)a1, *(void *)(a1 + 24), *(unsigned __int8 *)(a1 + 32), *(void *)(a1 + 16), *(void *)(a1 + 40));
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
  CFTypeRef v2 = *(const void **)(a1 + 16);
  if (v2) {
    CFRelease(v2);
  }
  long long v3 = *(const void **)(a1 + 40);
  if (v3)
  {
    CFRelease(v3);
  }
}

void endpointAggregate_callDelegateHandleFailedInternal(uint64_t a1)
{
  (*(void (**)(void, void, void, void))(a1 + 8))(*(void *)a1, *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32));
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
  CFTypeRef v2 = *(const void **)(a1 + 32);
  if (v2) {
    CFRelease(v2);
  }
  long long v3 = *(const void **)(a1 + 24);
  if (v3)
  {
    CFRelease(v3);
  }
}

void endpointAggregate_clearActivationState(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  endpointAggregate_updateURLPlaybackSupportedState(a1);
  *(unsigned char *)(DerivedStorage + 160) = 0;
  endpointAggregate_ensureLocalPlaybackIsEnabledOrDisabled(a1);
  *(_DWORD *)(DerivedStorage + 40) = 0;
  char AllAudioFeatures = APEndpointGetAllAudioFeatures(*(void *)(DerivedStorage + 48) | *(void *)(DerivedStorage + 56));
  endpointAggregate_destroyAggregateStreams((uint64_t)a1, AllAudioFeatures);
  endpointAggregate_unregisterCommChannelsForSubEndpointAndNotifyClientIfNeeded();
  uint64_t v4 = CMBaseObjectGetDerivedStorage();
  CFArrayRemoveAllValues(*(CFMutableArrayRef *)(v4 + 32));
  *(unsigned char *)(DerivedStorage + 96) = 0;
  *(void *)(DerivedStorage + 48) = 0;
  *(void *)(DerivedStorage + 56) = 0;
  CFDictionaryRemoveAllValues(*(CFMutableDictionaryRef *)(DerivedStorage + 136));
  uint64_t v5 = *(const void **)(DerivedStorage + 64);
  if (v5)
  {
    CFRelease(v5);
    *(void *)(DerivedStorage + 64) = 0;
  }
  uint64_t v6 = *(const void **)(DerivedStorage + 72);
  if (v6)
  {
    CFRelease(v6);
    *(void *)(DerivedStorage + 72) = 0;
  }
  long long v7 = *(const void **)(DerivedStorage + 80);
  if (v7)
  {
    CFRelease(v7);
    *(void *)(DerivedStorage + 80) = 0;
  }
  uint64_t v8 = *(const void **)(DerivedStorage + 88);
  if (v8)
  {
    CFRelease(v8);
    *(void *)(DerivedStorage + 88) = 0;
  }
  CFDictionaryRemoveAllValues(*(CFMutableDictionaryRef *)(DerivedStorage + 104));
  long long v9 = *(const void **)(DerivedStorage + 112);
  if (v9)
  {
    CFRelease(v9);
    *(void *)(DerivedStorage + 112) = 0;
  }
}

void endpointAggregate_deactivateInternal(uint64_t a1)
{
  CFTypeRef v2 = *(CFTypeRef *)a1;
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  if (*(_DWORD *)(a1 + 32))
  {
    APSLogErrorAt();
  }
  else
  {
    MEMORY[0x1D25EB370](*DerivedStorage);
    if (*(void *)(a1 + 16) == DerivedStorage[15] && *((_DWORD *)DerivedStorage + 10))
    {
      endpointAggregate_clearActivationState(v2);
      MEMORY[0x1D25EB390](*DerivedStorage);
    }
    else
    {
      MEMORY[0x1D25EB390](*DerivedStorage);
      APSLogErrorAt();
    }
  }
  if (*(void *)(a1 + 40))
  {
    CFRetain(v2);
    APSDispatchAsyncFHelper();
  }
  CFRelease(*(CFTypeRef *)a1);
}

void endpointAggregate_updateFeaturesInternalWithContext(uint64_t a1)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*DerivedStorage);
  CFTypeRef v3 = *(CFTypeRef *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v6 = *(const void **)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v24 = *(void *)(a1 + 32);
  int v25 = 0;
  uint64_t v7 = CMBaseObjectGetDerivedStorage();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 + 48);
  if (!v9) {
    uint64_t v9 = *(void *)(v7 + 56);
  }
  uint64_t v23 = v5;
  if (gLogCategory_APEndpointAggregate <= 50
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v10 = v9 | v4;
  if ((v9 | v4) == v9 && v10 == v4) {
    goto LABEL_32;
  }
  if (v10 != v9 && v10 != v4)
  {
    int v22 = -6705;
LABEL_42:
    int v25 = v22;
LABEL_32:
    CFRetain(v3);
    APSDispatchAsyncFHelper();
    if (v25) {
      APSLogErrorAt();
    }
    goto LABEL_34;
  }
  isPersistentConnectioCFIndex n = endpointAggregate_isPersistentConnection();
  int v25 = endpointAggregate_copyActivationOptionsToStorage((uint64_t)v3, v4, v6, (v9 | v4) != v9, isPersistentConnection);
  if (v25)
  {
    APSLogErrorAt();
    goto LABEL_32;
  }
  CFAllocatorRef v14 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFDictionaryRef MutableCopy = (__CFDictionary *)FigCFDictionaryCreateMutableCopy();
  if (!MutableCopy)
  {
    APSLogErrorAt();
    int v22 = -16721;
    goto LABEL_42;
  }
  uint64_t v16 = MutableCopy;
  uint64_t v17 = (const void **)MEMORY[0x1E4F1CFD0];
  if (*(_DWORD *)(v8 + 400) != 2) {
    uint64_t v17 = (const void **)MEMORY[0x1E4F1CFC8];
  }
  CFDictionarySetValue(MutableCopy, @"IsPartOfCluster", *v17);
  if (v10 == v9)
  {
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v18 = (const void *)CFStringCreateF();
    CFDictionarySetValue(v16, @"ParentContextID", v18);
  }
  CFDictionarySetValue(v16, @"AudioOptions", *(const void **)(v8 + 104));
  *(void *)(v8 + 48) = v4;
  uint64_t v19 = malloc_type_calloc(1uLL, 0x40uLL, 0x10A00407E6BCD4EuLL);
  if (v19)
  {
    int v20 = v19;
    void *v19 = v3;
    CFRetain(v3);
    v20[1] = v4;
    v20[2] = *(void *)(v8 + 120);
    *((_DWORD *)v20 + 6) = 0;
    v20[4] = v23;
    v20[5] = v24;
    v20[6] = CFDictionaryCreateMutable(v14, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    v20[7] = CFDictionaryGetCount(*(CFDictionaryRef *)(v8 + 8));
    if (gLogCategory_APEndpointAggregate <= 50
      && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFDictionaryApplyBlock();
  }
  else
  {
    APSLogErrorAt();
    int v25 = -6728;
  }
  CFRelease(v16);
  if (v18) {
    CFRelease(v18);
  }
  if (v25) {
    goto LABEL_32;
  }
LABEL_34:
  MEMORY[0x1D25EB390](*DerivedStorage);
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
  BOOL v21 = *(const void **)(a1 + 16);
  if (v21) {
    CFRelease(v21);
  }
}

void __endpointAggregate_updateFeaturesInternal_block_invoke(void *a1, const void *a2)
{
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = *(uint64_t (**)(const void *, uint64_t, uint64_t, void, uint64_t))(v8 + 80);
  if (v9) {
    int v10 = v9(a2, v4, v5, endpointaggregate_handleSubEndpointUpdateFeaturesCompleted, v6);
  }
  else {
    int v10 = -12782;
  }
  if (gLogCategory_APEndpointAggregate <= 50
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (v10 == -12782)
  {
    if (a2) {
      CFRetain(a2);
    }
    uint64_t v11 = a1[8];
    CFTypeRef v12 = *(NSObject **)(v11 + 392);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 0x40000000;
    block[2] = __endpointAggregate_updateFeaturesInternal_block_invoke_2;
    block[3] = &__block_descriptor_tmp_150;
    uint64_t v13 = a1[4];
    block[4] = a2;
    void block[5] = v13;
    int v16 = -12782;
    uint64_t v14 = a1[6];
    block[6] = v11;
    block[7] = v14;
    dispatch_async(v12, block);
  }
}

void endpointaggregate_handleSubEndpointUpdateFeaturesCompleted(const void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a1) {
    CFRetain(a1);
  }
  uint64_t v11 = *(NSObject **)(DerivedStorage + 392);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __endpointaggregate_handleSubEndpointUpdateFeaturesCompleted_block_invoke;
  block[3] = &__block_descriptor_tmp_152;
  block[4] = a1;
  void block[5] = a2;
  int v13 = a4;
  block[6] = a3;
  block[7] = a5;
  dispatch_async(v11, block);
}

void __endpointAggregate_updateFeaturesInternal_block_invoke_2(uint64_t a1)
{
  endpointaggregate_handleSubEndpointUpdateFeaturesCompletedInternal(*(void *)(a1 + 32), *(unsigned int *)(a1 + 64), *(void *)(a1 + 56));
  CFTypeRef v2 = *(const void **)(a1 + 32);
  if (v2)
  {
    CFRelease(v2);
  }
}

void endpointaggregate_handleSubEndpointUpdateFeaturesCompletedInternal(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointAggregate <= 50
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFDictionarySetInt64();
  if (CFDictionaryGetCount(*(CFDictionaryRef *)(a3 + 48)) == *(void *)(a3 + 56))
  {
    long long v15 = 0u;
    memset(v14, 0, sizeof(v14));
    uint64_t v10 = 0;
    uint64_t v11 = &v10;
    uint64_t v12 = 0x2000000000;
    int v13 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = &v6;
    uint64_t v8 = 0x2000000000;
    char v9 = 0;
    CFDictionaryApplyBlock();
    MEMORY[0x1D25EB370](*DerivedStorage);
    if (gLogCategory_APEndpointAggregate <= 50
      && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (*((unsigned char *)v7 + 24))
    {
      *((_DWORD *)v11 + 6) = 0;
    }
    else if (*((_DWORD *)v11 + 6))
    {
      goto LABEL_17;
    }
    DerivedStorage[7] = *(void *)(a3 + 8);
LABEL_17:
    DerivedStorage[6] = 0;
    MEMORY[0x1D25EB390](*DerivedStorage);
    *(void *)&v14[0] = CFRetain(*(CFTypeRef *)a3);
    *(int8x16_t *)((char *)v14 + 8) = vextq_s8(*(int8x16_t *)(a3 + 8), *(int8x16_t *)(a3 + 8), 8uLL);
    DWORD2(v14[1]) = *((_DWORD *)v11 + 6);
    long long v15 = *(_OWORD *)(a3 + 32);
    APSDispatchAsyncFHelper();
    if (*(void *)a3) {
      CFRelease(*(CFTypeRef *)a3);
    }
    uint64_t v5 = *(const void **)(a3 + 48);
    if (v5) {
      CFRelease(v5);
    }
    free((void *)a3);
    _Block_object_dispose(&v6, 8);
    _Block_object_dispose(&v10, 8);
    return;
  }
  if (gLogCategory_APEndpointAggregate <= 50
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

void __endpointaggregate_handleSubEndpointUpdateFeaturesCompleted_block_invoke(uint64_t a1)
{
  endpointaggregate_handleSubEndpointUpdateFeaturesCompletedInternal(*(void *)(a1 + 32), *(unsigned int *)(a1 + 64), *(void *)(a1 + 56));
  CFTypeRef v2 = *(const void **)(a1 + 32);
  if (v2)
  {
    CFRelease(v2);
  }
}

uint64_t __endpointaggregate_handleSubEndpointUpdateFeaturesCompletedInternal_block_invoke(uint64_t a1)
{
  uint64_t result = FigCFNumberGetUInt64();
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  if (*(_DWORD *)(v3 + 24)) {
    BOOL v4 = 1;
  }
  else {
    BOOL v4 = result == 0;
  }
  if (v4)
  {
    if (!result) {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    }
  }
  else
  {
    *(_DWORD *)(v3 + 24) = result;
  }
  return result;
}

uint64_t endpointAggregate_BorrowScreen(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return endpointAggregate_borrowOrUnborrowScreen(a1, a2, a3, 0);
}

uint64_t endpointAggregate_UnborrowScreen(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return endpointAggregate_borrowOrUnborrowScreen(a1, a2, a3, 1);
}

uint64_t endpointAggregate_DuckAudio(uint64_t a1, const __CFDictionary *a2)
{
  FigEndpointExtendedGetFigEndpoint();
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointAggregate <= 50
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*DerivedStorage);
  if (!a2)
  {
    uint64_t v17 = 4294950576;
LABEL_36:
    APSLogErrorAt();
    MEMORY[0x1D25EB390](*DerivedStorage);
    return v17;
  }
  if (!CFDictionaryContainsKey(a2, (const void *)*MEMORY[0x1E4F20560]))
  {
    uint64_t v17 = 4294950576;
    goto LABEL_36;
  }
  if (*((_DWORD *)DerivedStorage + 10) != 2)
  {
    uint64_t v17 = 4294951716;
    goto LABEL_36;
  }
  CFArrayRef v4 = (const __CFArray *)FigCFDictionaryCopyArrayOfKeys();
  if (!v4)
  {
    uint64_t v17 = 4294950575;
    goto LABEL_36;
  }
  CFArrayRef v5 = v4;
  CFIndex Count = CFArrayGetCount(v4);
  if (Count < 1)
  {
LABEL_24:
    int v16 = (const void *)DerivedStorage[42];
    DerivedStorage[42] = a2;
    CFRetain(a2);
    if (v16) {
      CFRelease(v16);
    }
    uint64_t v17 = 0;
  }
  else
  {
    CFIndex v7 = Count;
    for (CFIndex i = 0; i != v7; ++i)
    {
      if (CFArrayGetValueAtIndex(v5, i))
      {
        FigEndpointExtendedGetClassID();
        if (CMBaseObjectIsMemberOfClass()) {
          continue;
        }
      }
      APSLogErrorAt();
      uint64_t v17 = 4294950570;
      goto LABEL_28;
    }
    CFIndex v9 = 0;
    while (1)
    {
      ValueAtIndex = CFArrayGetValueAtIndex(v5, v9);
      if (!ValueAtIndex
        || (uint64_t v11 = ValueAtIndex, FigEndpointExtendedGetClassID(), !CMBaseObjectIsMemberOfClass()))
      {
        uint64_t v11 = 0;
      }
      uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 24);
      if (v12) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = 0;
      }
      uint64_t v14 = *(uint64_t (**)(const void *, const __CFDictionary *))(v13 + 48);
      if (!v14)
      {
        uint64_t v17 = 4294954514;
        goto LABEL_31;
      }
      uint64_t v15 = v14(v11, a2);
      if (v15) {
        break;
      }
      if (v7 == ++v9) {
        goto LABEL_24;
      }
    }
    uint64_t v17 = v15;
LABEL_31:
    APSLogErrorAt();
  }
LABEL_28:
  MEMORY[0x1D25EB390](*DerivedStorage);
  CFRelease(v5);
  return v17;
}

uint64_t endpointAggregate_SendCommand(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, void, uint64_t), uint64_t a5)
{
  FigEndpointExtendedGetFigEndpoint();
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*DerivedStorage);
  if (*((_DWORD *)DerivedStorage + 10) != 2)
  {
    uint64_t v21 = 4294951716;
LABEL_22:
    APSLogErrorAt();
    CFArrayRef v12 = 0;
    goto LABEL_15;
  }
  CFArrayRef v11 = (const __CFArray *)FigCFDictionaryCopyArrayOfKeys();
  if (!v11)
  {
    uint64_t v21 = 4294950575;
    goto LABEL_22;
  }
  CFArrayRef v12 = v11;
  CFIndex Count = CFArrayGetCount(v11);
  if (Count >= 1)
  {
    CFIndex v14 = Count;
    for (CFIndex i = 0; i != v14; ++i)
    {
      ValueAtIndex = CFArrayGetValueAtIndex(v12, i);
      if (!ValueAtIndex
        || (uint64_t v17 = ValueAtIndex, FigEndpointExtendedGetClassID(), !CMBaseObjectIsMemberOfClass()))
      {
        uint64_t v17 = 0;
      }
      uint64_t v18 = *(void *)(CMBaseObjectGetVTable() + 24);
      if (v18) {
        uint64_t v19 = v18;
      }
      else {
        uint64_t v19 = 0;
      }
      int v20 = *(void (**)(const void *, uint64_t, uint64_t, void, void))(v19 + 72);
      if (v20) {
        v20(v17, a2, a3, 0, 0);
      }
    }
  }
  uint64_t v21 = 0;
LABEL_15:
  MEMORY[0x1D25EB390](*DerivedStorage);
  if (a4) {
    a4(a1, v21, 0, a5);
  }
  if (v12) {
    CFRelease(v12);
  }
  return v21;
}

uint64_t endpointAggregate_SendData(const void *a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t FigEndpoint = FigEndpointExtendedGetFigEndpoint();
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFArrayRef v12 = endpointAggregate_copySubEndpointExtendedForRelayCommChannel(FigEndpoint, a2);
  if (v12)
  {
    RCSendDataCompletionContext = APEndpointCreateRCSendDataCompletionContext(a1, a2, *(NSObject **)(DerivedStorage + 392), a4, a5);
    if (RCSendDataCompletionContext)
    {
      CFIndex v14 = RCSendDataCompletionContext;
      uint64_t v15 = *(void *)(CMBaseObjectGetVTable() + 24);
      if (v15) {
        uint64_t v16 = v15;
      }
      else {
        uint64_t v16 = 0;
      }
      uint64_t v17 = *(void (**)(const void *, const void *, uint64_t, void (*)(uint64_t, uint64_t, int, uint64_t), void *))(v16 + 96);
      if (v17) {
        v17(v12, a2, a3, APEndpointCallRCSendDataCompletionFromContextAsync, v14);
      }
LABEL_8:
      CFRelease(v12);
      return 0;
    }
    int v19 = -16721;
  }
  else
  {
    int v19 = -16725;
  }
  APSLogErrorAt();
  if (a4) {
    APEndpointCallRCSendDataCompletionAsync(a1, a2, v19, *(dispatch_queue_t *)(DerivedStorage + 392), a4, a5);
  }
  if (v12) {
    goto LABEL_8;
  }
  return 0;
}

uint64_t endpointAggregate_CloseCommChannel(uint64_t a1, const void *a2)
{
  uint64_t FigEndpoint = FigEndpointExtendedGetFigEndpoint();
  CFArrayRef v4 = endpointAggregate_copySubEndpointExtendedForRelayCommChannel(FigEndpoint, a2);
  if (!v4) {
    return 4294950571;
  }
  CFArrayRef v5 = v4;
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 24);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = *(uint64_t (**)(const void *, const void *))(v7 + 104);
  if (!v8)
  {
    uint64_t v9 = 4294954514;
LABEL_9:
    APSLogErrorAt();
    goto LABEL_10;
  }
  uint64_t v9 = v8(v5, a2);
  if (v9) {
    goto LABEL_9;
  }
LABEL_10:
  CFRelease(v5);
  return v9;
}

uint64_t endpointAggregate_AcquireAndCopyResource(uint64_t a1, uint64_t a2, const __CFDictionary *a3, void *a4)
{
  FigEndpointExtendedGetFigEndpoint();
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointAggregate <= 50
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*DerivedStorage);
  if (*((_DWORD *)DerivedStorage + 10) == 2)
  {
    if (FigCFEqual())
    {
      uint64_t v7 = CMBaseObjectGetDerivedStorage();
      if (a3 && (v8 = v7, (uint64_t v9 = CFDictionaryGetValue(a3, (const void *)*MEMORY[0x1E4F202F8])) != 0))
      {
        uint64_t v10 = v9;
        CFDictionaryRef v11 = *(const __CFDictionary **)(v8 + 128);
        if (v11 && (Value = CFDictionaryGetValue(v11, v10)) != 0 && (CFTypeRef v13 = CFRetain(Value)) != 0)
        {
          CFTypeRef v14 = v13;
          if (gLogCategory_APEndpointAggregate <= 50
            && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          uint64_t v15 = 0;
          *a4 = v14;
        }
        else
        {
          APSLogErrorAt();
          uint64_t v15 = 4294950571;
        }
      }
      else
      {
        APSLogErrorAt();
        uint64_t v15 = 4294950576;
      }
    }
    else
    {
      if (gLogCategory_APEndpointAggregate <= 90
        && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v15 = 4294950570;
    }
  }
  else
  {
    uint64_t v15 = 4294949690;
  }
  MEMORY[0x1D25EB390](*DerivedStorage);
  return v15;
}

uint64_t endpointAggregate_RelinquishResource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  FigEndpointExtendedGetFigEndpoint();
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointAggregate <= 50
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*DerivedStorage);
  if (*((_DWORD *)DerivedStorage + 10) != 2)
  {
    uint64_t v5 = 4294949690;
LABEL_13:
    APSLogErrorAt();
    goto LABEL_9;
  }
  if (!a3)
  {
    uint64_t v5 = 4294950576;
    goto LABEL_13;
  }
  if (!FigCFEqual())
  {
    uint64_t v5 = 4294950570;
    goto LABEL_13;
  }
  uint64_t v5 = 0;
LABEL_9:
  MEMORY[0x1D25EB390](*DerivedStorage);
  return v5;
}

void endpointAggregate_CloseAllCommChannels()
{
  FigEndpointExtendedGetFigEndpoint();
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*DerivedStorage);
  CFArrayRef v1 = (const __CFArray *)FigCFDictionaryCopyArrayOfKeys();
  MEMORY[0x1D25EB390](*DerivedStorage);
  if (v1)
  {
    CFArrayGetCount(v1);
    CFArrayApplyBlock();
    CFRelease(v1);
  }
  else
  {
    APSLogErrorAt();
  }
}

uint64_t endpointAggregate_borrowOrUnborrowScreen(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t FigEndpoint = FigEndpointExtendedGetFigEndpoint();
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*DerivedStorage);
  if (*((_DWORD *)DerivedStorage + 100) != 2)
  {
    APSLogErrorAt();
    uint64_t v13 = 4294950570;
    goto LABEL_23;
  }
  if (*((_DWORD *)DerivedStorage + 10) != 2)
  {
    APSLogErrorAt();
    uint64_t v13 = 4294951716;
    goto LABEL_23;
  }
  FirstSubEndpointActivatedForFeatures = endpointAggregate_getFirstSubEndpointActivatedForFeatures(FigEndpoint, 1);
  if (!FirstSubEndpointActivatedForFeatures
    || (uint64_t v10 = FirstSubEndpointActivatedForFeatures,
        FigEndpointExtendedGetClassID(),
        !CMBaseObjectIsMemberOfClass()))
  {
    APSLogErrorAt();
    uint64_t v13 = 4294949690;
    goto LABEL_23;
  }
  uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 24);
  if (a4)
  {
    if (v11) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    uint64_t v15 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v12 + 24);
    if (v15) {
      goto LABEL_16;
    }
  }
  else
  {
    if (v11) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 0;
    }
    uint64_t v15 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v14 + 16);
    if (v15)
    {
LABEL_16:
      uint64_t v13 = v15(v10, a2, a3);
      if (!v13) {
        goto LABEL_23;
      }
      goto LABEL_19;
    }
  }
  uint64_t v13 = 4294954514;
LABEL_19:
  APSLogErrorAt();
  if (gLogCategory_APEndpointAggregate <= 90
    && (gLogCategory_APEndpointAggregate != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_23:
  MEMORY[0x1D25EB390](*DerivedStorage);
  return v13;
}

const void *endpointAggregate_copySubEndpointExtendedForRelayCommChannel(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*DerivedStorage);
  if (*((_DWORD *)DerivedStorage + 10) == 2)
  {
    CFDictionaryRef Value = CFDictionaryGetValue((CFDictionaryRef)DerivedStorage[21], a2);
    if (Value)
    {
      FigEndpointExtendedGetClassID();
      if (!CMBaseObjectIsMemberOfClass()) {
        CFDictionaryRef Value = 0;
      }
      CFRetain(Value);
    }
    else
    {
      APSLogErrorAt();
    }
  }
  else
  {
    APSLogErrorAt();
    CFDictionaryRef Value = 0;
  }
  MEMORY[0x1D25EB390](*DerivedStorage);
  return Value;
}

uint64_t endpointAggregate_AddEndpoint(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  FigEndpointAggregateGetFigEndpoint();
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*DerivedStorage);
  uint64_t v11 = endpointAggregate_addEndpointInternal(a1, a2, a3, a4, a5);
  MEMORY[0x1D25EB390](*DerivedStorage);
  return v11;
}

uint64_t endpointAggregate_RemoveEndpoint(uint64_t a1, __CFString *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  FigEndpointAggregateGetFigEndpoint();
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*DerivedStorage);
  uint64_t v10 = endpointAggregate_removeEndpointInternal(a1, a2, a4, a5);
  MEMORY[0x1D25EB390](*DerivedStorage);
  return v10;
}

uint64_t APEndpointStreamCarPlayAudioCreate(const __CFAllocator *a1, uint64_t a2, const void *a3, const void *a4, const void *a5, const __CFDictionary *a6, const void *a7, const void *a8, const void *a9, const void *a10, CFTypeRef *a11)
{
  uint64_t v91 = *MEMORY[0x1E4F143B8];
  CFTypeRef cf = 0;
  CFTypeRef v83 = 0;
  CFStringRef theString = 0;
  CFTypeRef v81 = 0;
  long long v89 = 0u;
  long long v90 = 0u;
  *(_OWORD *)label = 0u;
  long long v88 = 0u;
  if (!a2 || !a3 || !a5 || !a8 || !a7 || !a10 || !a9 || !a11)
  {
    APSLogErrorAt();
    uint64_t v33 = 4294950536;
    goto LABEL_105;
  }
  FigEndpointStreamGetClassID();
  uint64_t v17 = CMDerivedObjectCreate();
  if (v17)
  {
    uint64_t v33 = v17;
    goto LABEL_18;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(void *)uint64_t DerivedStorage = FigCFWeakReferenceHolderCreateWithReferencedObject();
  *(void *)(DerivedStorage + 24) = CFRetain(a3);
  *(void *)(DerivedStorage + 32) = CFRetain(a4);
  *(void *)(DerivedStorage + 40) = CFRetain(a5);
  *(void *)(DerivedStorage + 96) = CFRetain(a8);
  *(void *)(DerivedStorage + 8) = CFRetain(a7);
  *(void *)(DerivedStorage + 16) = CFRetain(a10);
  *(void *)(DerivedStorage + 104) = CFRetain(a9);
  uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(a7);
  uint64_t v20 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v20) {
    uint64_t v21 = v20;
  }
  else {
    uint64_t v21 = 0;
  }
  int v22 = *(uint64_t (**)(uint64_t, __CFString *, const __CFAllocator *, CFTypeRef *))(v21 + 48);
  if (!v22)
  {
    uint64_t v33 = 4294954514;
    goto LABEL_18;
  }
  uint64_t v23 = v22(CMBaseObject, @"DeviceID", a1, &cf);
  if (v23)
  {
    uint64_t v33 = v23;
    goto LABEL_18;
  }
  CFTypeRef v24 = cf;
  uint64_t v25 = *(void *)(DerivedStorage + 32);
  uint64_t v26 = *(void *)(DerivedStorage + 40);
  uint64_t UpTimeNanoseconds = FigGetUpTimeNanoseconds();
  *(void *)(DerivedStorage + 48) = CFStringCreateWithFormat(a1, 0, @"%@-%@-%@-%llu", v24, v25, v26, UpTimeNanoseconds);
  int v28 = CFEqual(a5, (CFTypeRef)*MEMORY[0x1E4F21440]);
  uint64_t v29 = (CFTypeRef *)MEMORY[0x1E4F21448];
  if (v28)
  {
    char v30 = 1;
    int v31 = 1835100526;
    char v32 = 1;
  }
  else if (CFEqual(a5, (CFTypeRef)*MEMORY[0x1E4F21420]))
  {
    char v30 = 0;
    char v32 = 1;
    int v31 = 1634497568;
  }
  else if (CFEqual(a5, (CFTypeRef)*MEMORY[0x1E4F21428]))
  {
    char v30 = 0;
    char v32 = 1;
    int v31 = 1635088495;
  }
  else
  {
    if (!CFEqual(a5, *v29))
    {
      uint64_t v33 = 4294950536;
      goto LABEL_18;
    }
    char v32 = 0;
    char v30 = 1;
    int v31 = 1869575779;
  }
  *(_DWORD *)(DerivedStorage + 68) = v31;
  *(unsigned char *)(DerivedStorage + 72) = v30;
  *(unsigned char *)(DerivedStorage + 73) = v32;
  if (APSSettingsGetInt64())
  {
    CFDictionaryRef theDict = 0;
    uint64_t v34 = *MEMORY[0x1E4F1CF80];
    uint64_t v35 = APEndpointDescriptionGetCMBaseObject(*(void *)(DerivedStorage + 8));
    uint64_t v36 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v36) {
      uint64_t v37 = v36;
    }
    else {
      uint64_t v37 = 0;
    }
    uint64_t v41 = *(void (**)(uint64_t, __CFString *, uint64_t, CFDictionaryRef *))(v37 + 48);
    if (v41) {
      v41(v35, @"HeadUnitRestrictions", v34, &theDict);
    }
    if (!theDict)
    {
      APSLogErrorAt();
      uint64_t v33 = 0;
      goto LABEL_105;
    }
    char v42 = CFDictionaryContainsKey(theDict, @"kAPCarPlay_ClockUnstable") == 0;
  }
  else
  {
    uint64_t v34 = *MEMORY[0x1E4F1CF80];
    uint64_t v38 = APEndpointDescriptionGetCMBaseObject(*(void *)(DerivedStorage + 8));
    uint64_t v39 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v39) {
      uint64_t v40 = v39;
    }
    else {
      uint64_t v40 = 0;
    }
    CFTypeRef v43 = *(void (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v40 + 48);
    if (v43) {
      v43(v38, @"Manufacturer", v34, &v81);
    }
    uint64_t v44 = APEndpointDescriptionGetCMBaseObject(*(void *)(DerivedStorage + 8));
    uint64_t v45 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    CFTypeRef v47 = *(void (**)(uint64_t, __CFString *, uint64_t, CFStringRef *))(v46 + 48);
    if (v47) {
      v47(v44, @"Model", v34, &theString);
    }
    int v48 = FigCFEqual();
    BOOL v49 = 0;
    if (v48 && theString) {
      BOOL v49 = CFStringFind(theString, @"NBTEvo", 0).location != -1;
    }
    char v42 = !v49;
  }
  uint64_t v50 = APAudioZeroTimeStampProviderCreate(2.017, (uint64_t)a1, v42, (uint64_t *)(DerivedStorage + 56));
  if (v50)
  {
    uint64_t v33 = v50;
    goto LABEL_18;
  }
  uint64_t v51 = CMBaseObjectGetDerivedStorage();
  CFStringRef theString1 = 0;
  CFDictionaryRef theDict = 0;
  if (APSSettingsGetInt64())
  {
    CFDictionaryRef v84 = 0;
    uint64_t v52 = APEndpointDescriptionGetCMBaseObject(*(void *)(v51 + 8));
    uint64_t v53 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v53) {
      uint64_t v54 = v53;
    }
    else {
      uint64_t v54 = 0;
    }
    CFTypeRef v58 = *(void (**)(uint64_t, __CFString *, uint64_t, CFDictionaryRef *))(v54 + 48);
    if (v58 && (v58(v52, @"HeadUnitRestrictions", v34, &v84), v84)) {
      CFDictionaryContainsKey(v84, @"kAPCarPlay_DisableTimestampSmoothing");
    }
    else {
      APSLogErrorAt();
    }
  }
  else
  {
    uint64_t v55 = APEndpointDescriptionGetCMBaseObject(*(void *)(v51 + 8));
    uint64_t v56 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v56) {
      uint64_t v57 = v56;
    }
    else {
      uint64_t v57 = 0;
    }
    CFTypeRef v59 = *(void (**)(uint64_t, __CFString *, uint64_t, CFDictionaryRef *))(v57 + 48);
    if (v59) {
      v59(v55, @"Manufacturer", v34, &theDict);
    }
    uint64_t v60 = APEndpointDescriptionGetCMBaseObject(*(void *)(v51 + 8));
    uint64_t v61 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v61) {
      uint64_t v62 = v61;
    }
    else {
      uint64_t v62 = 0;
    }
    CFTypeID v63 = *(void (**)(uint64_t, __CFString *, uint64_t, CFStringRef *))(v62 + 48);
    if (v63)
    {
      v63(v60, @"Model", v34, &theString1);
      CFStringRef v64 = (const __CFString *)theDict;
      if (theDict)
      {
        if (theString1)
        {
          if (gLogCategory_APEndpointStreamCarPlayAudio <= 30)
          {
            if (gLogCategory_APEndpointStreamCarPlayAudio != -1
              || (int v65 = _LogCategory_Initialize(), v64 = (const __CFString *)theDict, v65))
            {
              LogPrintF();
              CFStringRef v64 = (const __CFString *)theDict;
            }
          }
          if ((CFEqual(v64, @"SUZUKI")
             && CFEqual(theString1, @"Suzuki Harman MY15SN")
             || CFEqual((CFStringRef)theDict, @"JBL")
             && CFEqual(theString1, @"Legend CP100"))
            && gLogCategory_APEndpointStreamCarPlayAudio <= 50
            && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
        }
      }
    }
  }
  char IntWithDefault = APSSettingsGetIntWithDefault();
  if (theDict) {
    CFRelease(theDict);
  }
  if (theString1) {
    CFRelease(theString1);
  }
  *(unsigned char *)(DerivedStorage + 64) = IntWithDefault;
  if (gLogCategory_APEndpointStreamCarPlayAudio <= 50
    && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  *(void *)(DerivedStorage + 392) = 0;
  *(void *)(DerivedStorage + 488) = 0;
  CMBaseObjectGetDerivedStorage();
  if (a6) {
    CFDictionaryGetValue(a6, @"EventRecorder");
  }
  if (FigCFEqual())
  {
    uint64_t v67 = APSEventRecorderCreate();
    if (!v67) {
      goto LABEL_96;
    }
    uint64_t v33 = v67;
LABEL_119:
    APSLogErrorAt();
    goto LABEL_18;
  }
  if (FigCFEqual())
  {
    uint64_t v68 = APSEventRecorderCreate();
    if (!v68) {
      goto LABEL_96;
    }
    uint64_t v33 = v68;
    goto LABEL_119;
  }
  if (FigCFEqual())
  {
    uint64_t v69 = APSEventRecorderCreate();
    if (!v69) {
      goto LABEL_96;
    }
    uint64_t v33 = v69;
    goto LABEL_119;
  }
  if (!FigCFEqual())
  {
    uint64_t v33 = 4294950536;
    goto LABEL_119;
  }
  uint64_t v70 = APSEventRecorderCreate();
  if (v70)
  {
    uint64_t v33 = v70;
    goto LABEL_119;
  }
LABEL_96:
  APSEventRecorderAddSignPostForEvent();
  uint64_t v71 = APCarPlayAnalyticsCreate((uint64_t)a1, (uint64_t *)(DerivedStorage + 88));
  if (v71)
  {
    uint64_t v33 = v71;
    goto LABEL_18;
  }
  SNPrintF();
  dispatch_queue_t v72 = dispatch_queue_create(label, 0);
  *(void *)(DerivedStorage + 112) = v72;
  if (v72)
  {
    SNPrintF();
    dispatch_queue_t v73 = dispatch_queue_create(label, 0);
    *(void *)(DerivedStorage + 120) = v73;
    if (v73)
    {
      SNPrintF();
      uint64_t v74 = FigDispatchQueueCreateWithPriority();
      *(void *)(DerivedStorage + 168) = v74;
      if (v74)
      {
        SNPrintF();
        uint64_t v75 = FigDispatchQueueCreateWithPriority();
        *(void *)(DerivedStorage + 352) = v75;
        if (v75)
        {
          SNPrintF();
          uint64_t v76 = FigDispatchQueueCreateWithPriority();
          *(void *)(DerivedStorage + 416) = v76;
          if (v76)
          {
            if (!CFEqual(a5, *v29) || (uint64_t v77 = APCarPlayAVVCServerRegisterStream(v83), !v77))
            {
              uint64_t v33 = 0;
              *a11 = v83;
              CFTypeRef v83 = 0;
              goto LABEL_105;
            }
            uint64_t v33 = v77;
LABEL_18:
            APSLogErrorAt();
            goto LABEL_105;
          }
        }
      }
    }
  }
  APSLogErrorAt();
  uint64_t v33 = 4294950535;
LABEL_105:
  if (cf) {
    CFRelease(cf);
  }
  if (v83) {
    CFRelease(v83);
  }
  if (v81) {
    CFRelease(v81);
  }
  if (theString) {
    CFRelease(theString);
  }
  return v33;
}

uint64_t carAudioStream_finalize()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(void *)DerivedStorage)
  {
    CFRelease(*(CFTypeRef *)DerivedStorage);
    *(void *)uint64_t DerivedStorage = 0;
  }
  CFArrayRef v1 = *(const void **)(DerivedStorage + 8);
  if (v1)
  {
    CFRelease(v1);
    *(void *)(DerivedStorage + 8) = 0;
  }
  CFTypeRef v2 = *(const void **)(DerivedStorage + 16);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(DerivedStorage + 16) = 0;
  }
  uint64_t v3 = *(const void **)(DerivedStorage + 24);
  if (v3)
  {
    CFRelease(v3);
    *(void *)(DerivedStorage + 24) = 0;
  }
  CFArrayRef v4 = *(const void **)(DerivedStorage + 40);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(DerivedStorage + 40) = 0;
  }
  uint64_t v5 = *(const void **)(DerivedStorage + 48);
  if (v5)
  {
    CFRelease(v5);
    *(void *)(DerivedStorage + 48) = 0;
  }
  uint64_t v6 = *(const void **)(DerivedStorage + 80);
  if (v6)
  {
    CFRelease(v6);
    *(void *)(DerivedStorage + 80) = 0;
  }
  uint64_t v7 = *(const void **)(DerivedStorage + 96);
  if (v7)
  {
    CFRelease(v7);
    *(void *)(DerivedStorage + 96) = 0;
  }
  uint64_t v8 = *(const void **)(DerivedStorage + 104);
  if (v8)
  {
    CFRelease(v8);
    *(void *)(DerivedStorage + 104) = 0;
  }
  uint64_t v9 = *(const void **)(DerivedStorage + 56);
  if (v9)
  {
    CFRelease(v9);
    *(void *)(DerivedStorage + 56) = 0;
  }
  uint64_t v10 = *(const void **)(DerivedStorage + 136);
  if (v10)
  {
    CFRelease(v10);
    *(void *)(DerivedStorage + 136) = 0;
  }
  uint64_t v11 = *(const void **)(DerivedStorage + 144);
  if (v11)
  {
    CFRelease(v11);
    *(void *)(DerivedStorage + 144) = 0;
  }
  uint64_t v12 = *(const void **)(DerivedStorage + 152);
  if (v12)
  {
    CFRelease(v12);
    *(void *)(DerivedStorage + 152) = 0;
  }
  uint64_t v13 = *(const void **)(DerivedStorage + 160);
  if (v13)
  {
    CFRelease(v13);
    *(void *)(DerivedStorage + 160) = 0;
  }
  uint64_t v14 = *(NSObject **)(DerivedStorage + 112);
  if (v14)
  {
    dispatch_release(v14);
    *(void *)(DerivedStorage + 112) = 0;
  }
  uint64_t v15 = *(NSObject **)(DerivedStorage + 120);
  if (v15)
  {
    dispatch_release(v15);
    *(void *)(DerivedStorage + 120) = 0;
  }
  uint64_t v16 = *(NSObject **)(DerivedStorage + 168);
  if (v16)
  {
    dispatch_release(v16);
    *(void *)(DerivedStorage + 168) = 0;
  }
  uint64_t v17 = *(NSObject **)(DerivedStorage + 352);
  if (v17)
  {
    dispatch_release(v17);
    *(void *)(DerivedStorage + 352) = 0;
  }
  uint64_t v18 = *(NSObject **)(DerivedStorage + 416);
  if (v18)
  {
    dispatch_release(v18);
    *(void *)(DerivedStorage + 416) = 0;
  }
  int v19 = *(const void **)(DerivedStorage + 88);
  if (v19)
  {
    CFRelease(v19);
    *(void *)(DerivedStorage + 88) = 0;
  }
  uint64_t v20 = *(const void **)(DerivedStorage + 368);
  if (v20)
  {
    CFRelease(v20);
    *(void *)(DerivedStorage + 368) = 0;
  }
  uint64_t v21 = *(const void **)(DerivedStorage + 376);
  if (v21)
  {
    CFRelease(v21);
    *(void *)(DerivedStorage + 376) = 0;
  }
  int v22 = *(const void **)(DerivedStorage + 384);
  if (v22)
  {
    CFRelease(v22);
    *(void *)(DerivedStorage + 384) = 0;
  }
  uint64_t v23 = *(const void **)(DerivedStorage + 432);
  if (v23)
  {
    CFRelease(v23);
    *(void *)(DerivedStorage + 432) = 0;
  }
  CFTypeRef v24 = *(const void **)(DerivedStorage + 448);
  if (v24)
  {
    CFRelease(v24);
    *(void *)(DerivedStorage + 448) = 0;
  }
  uint64_t v25 = *(const void **)(DerivedStorage + 456);
  if (v25)
  {
    CFRelease(v25);
    *(void *)(DerivedStorage + 456) = 0;
  }
  uint64_t v26 = *(const void **)(DerivedStorage + 464);
  if (v26)
  {
    CFRelease(v26);
    *(void *)(DerivedStorage + 464) = 0;
  }
  CFDictionaryRef v27 = *(const void **)(DerivedStorage + 392);
  if (v27)
  {
    CFRelease(v27);
    *(void *)(DerivedStorage + 392) = 0;
  }
  int v28 = *(const void **)(DerivedStorage + 488);
  if (v28)
  {
    CFRelease(v28);
    *(void *)(DerivedStorage + 488) = 0;
  }
  return kdebug_trace();
}

__CFString *carAudioStream_copyDebugDescription(const void *a1)
{
  CFMutableArrayRef Mutable = CFStringCreateMutable(0, 0);
  CFStringAppendFormat(Mutable, 0, @"<APEndpointStreamCarPlayAudio %p>\n", a1);
  CFAllocatorRef v3 = CFGetAllocator(a1);
  CFArrayRef v4 = carAudioStream_copyShowInfo((uint64_t)a1, v3);
  if (v4)
  {
    uint64_t v5 = v4;
    ASPrintF();
    size_t v6 = strlen(0);
    if (v6 && *(unsigned char *)(v6 - 1) == 10) {
      *(unsigned char *)(v6 - 1) = 0;
    }
    CFStringAppendFormat(Mutable, 0, @"%s", 0);
    free(0);
    CFRelease(v5);
  }
  return Mutable;
}

uint64_t carAudioStream_copyProperty(uint64_t a1, void *a2, uint64_t a3, CFTypeRef *a4)
{
  CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamCarPlayAudio <= 30
    && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v33 = 0;
  uint64_t v34 = &v33;
  uint64_t v35 = 0x2000000000;
  int v36 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!CFEqual(a2, @"AudioInputStatistics"))
  {
    if (CFEqual(a2, @"ConnectionID"))
    {
      uint64_t v10 = *(const void **)(DerivedStorage + 184);
LABEL_9:
      *a4 = v10;
      goto LABEL_13;
    }
    if (CFEqual(a2, @"AudioZeroTimeStampProvider"))
    {
      uint64_t v11 = *(const void **)(DerivedStorage + 56);
LABEL_12:
      *a4 = CFRetain(v11);
      goto LABEL_13;
    }
    if (CFEqual(a2, @"CarPlayAudioFormats"))
    {
      uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(DerivedStorage + 8));
      uint64_t v16 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v16) {
        uint64_t v17 = v16;
      }
      else {
        uint64_t v17 = 0;
      }
      int v19 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v17 + 48);
      if (v19)
      {
        int v20 = v19(CMBaseObject, @"CarPlayAudioFormats", a3, a4);
        *((_DWORD *)v34 + 6) = v20;
        if (!v20) {
          goto LABEL_13;
        }
      }
      else
      {
        *((_DWORD *)v34 + 6) = -12782;
      }
      goto LABEL_31;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21368]))
    {
      uint64_t v11 = *(const void **)(DerivedStorage + 48);
      goto LABEL_12;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21370]))
    {
      uint64_t v21 = (const void **)MEMORY[0x1E4F1CFD0];
      if (!*(unsigned char *)(DerivedStorage + 176)) {
        uint64_t v21 = (const void **)MEMORY[0x1E4F1CFC8];
      }
    }
    else
    {
      if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F213B0]))
      {
        uint64_t v11 = *(const void **)(DerivedStorage + 40);
        goto LABEL_12;
      }
      if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F213D0]))
      {
        if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F213F0]))
        {
          if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21408]))
          {
            *((_DWORD *)v34 + 6) = -12784;
            goto LABEL_13;
          }
          uint64_t v11 = *(const void **)(DerivedStorage + 32);
          goto LABEL_12;
        }
        if (!FigCFEqual())
        {
          uint64_t v10 = (const void *)*MEMORY[0x1E4F1CFC8];
          goto LABEL_9;
        }
        int v22 = APEndpointDescriptionCopyProperty(*(void *)(DerivedStorage + 8), @"SupportsVocoderInfo", a3, (uint64_t)a4);
        *((_DWORD *)v34 + 6) = v22;
        if (!v22) {
          goto LABEL_13;
        }
LABEL_31:
        APSLogErrorAt();
        goto LABEL_13;
      }
      if (APSGetFBOPropertyInt64() || APSGetFBOPropertyInt64() <= 2803308) {
        uint64_t v21 = (const void **)MEMORY[0x1E4F1CFC8];
      }
      else {
        uint64_t v21 = (const void **)MEMORY[0x1E4F1CFD0];
      }
    }
    uint64_t v11 = *v21;
    goto LABEL_12;
  }
  uint64_t v9 = *(NSObject **)(DerivedStorage + 168);
  blocCFIndex k = MEMORY[0x1E4F143A8];
  uint64_t v24 = 0x40000000;
  uint64_t v25 = __carAudioStream_copyNonStateProperty_block_invoke;
  uint64_t v26 = &unk_1E6891430;
  CFDictionaryRef v27 = &v33;
  uint64_t v28 = DerivedStorage;
  uint64_t v29 = a4;
  dispatch_sync(v9, &block);
LABEL_13:
  uint64_t v12 = *((unsigned int *)v34 + 6);
  _Block_object_dispose(&v33, 8);
  if (v12 == -12784)
  {
    uint64_t v33 = 0;
    uint64_t v34 = &v33;
    uint64_t v35 = 0x2000000000;
    int v36 = 0;
    uint64_t v13 = CMBaseObjectGetDerivedStorage();
    uint64_t v14 = *(NSObject **)(v13 + 120);
    blocCFIndex k = MEMORY[0x1E4F143A8];
    uint64_t v24 = 0x40000000;
    uint64_t v25 = __carAudioStream_copyStateProperty_block_invoke;
    uint64_t v26 = &unk_1E6891458;
    CFDictionaryRef v27 = &v33;
    uint64_t v28 = v13;
    uint64_t v29 = (CFTypeRef *)a2;
    char v30 = a4;
    uint64_t v31 = a1;
    uint64_t v32 = a3;
    dispatch_sync(v14, &block);
    uint64_t v12 = *((unsigned int *)v34 + 6);
    _Block_object_dispose(&v33, 8);
    if (v12 == -12784)
    {
      if (gLogCategory_APEndpointStreamCarPlayAudio <= 30
        && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      return 4294954512;
    }
  }
  return v12;
}

uint64_t carAudioStream_setProperty(const void *a1, const void *a2, const void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamCarPlayAudio <= 10
    && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21348]))
  {
    if (*(unsigned char *)(DerivedStorage + 73))
    {
      uint64_t v7 = CMBaseObjectGetDerivedStorage();
      CFRetain(a1);
      if (a3) {
        CFRetain(a3);
      }
      uint64_t v8 = *(NSObject **)(v7 + 120);
      blocCFIndex k = MEMORY[0x1E4F143A8];
      uint64_t v18 = 0x40000000;
      uint64_t v9 = __carAudioStream_setAudioSource_block_invoke;
      uint64_t v10 = &__block_descriptor_tmp_62;
LABEL_15:
      int v19 = v9;
      int v20 = v10;
      uint64_t v21 = v7;
      int v22 = a1;
      uint64_t v23 = a3;
LABEL_16:
      p_blocCFIndex k = &block;
      goto LABEL_17;
    }
LABEL_33:
    APSLogErrorAt();
    return 4294954509;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21340]))
  {
    if (*(unsigned char *)(DerivedStorage + 72))
    {
      uint64_t v7 = CMBaseObjectGetDerivedStorage();
      CFRetain(a1);
      if (a3) {
        CFRetain(a3);
      }
      uint64_t v8 = *(NSObject **)(v7 + 120);
      blocCFIndex k = MEMORY[0x1E4F143A8];
      uint64_t v18 = 0x40000000;
      uint64_t v9 = __carAudioStream_setAudioSink_block_invoke;
      uint64_t v10 = &__block_descriptor_tmp_64;
      goto LABEL_15;
    }
    goto LABEL_33;
  }
  if (CFEqual(a2, @"AudioFormatInfo"))
  {
    uint64_t v13 = CMBaseObjectGetDerivedStorage();
    CFRetain(a1);
    if (a3) {
      CFRetain(a3);
    }
    uint64_t v8 = *(NSObject **)(v13 + 120);
    blocCFIndex k = MEMORY[0x1E4F143A8];
    uint64_t v18 = 0x40000000;
    int v19 = __carAudioStream_setAudioFormatInfo_block_invoke;
    int v20 = &__block_descriptor_tmp_65;
    uint64_t v21 = v13;
    int v22 = a3;
    uint64_t v23 = a1;
    goto LABEL_16;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21418]))
  {
    uint64_t v14 = CMBaseObjectGetDerivedStorage();
    CFRetain(a1);
    if (a3) {
      CFRetain(a3);
    }
    uint64_t v15 = *(NSObject **)(v14 + 120);
    blocCFIndex k = MEMORY[0x1E4F143A8];
    uint64_t v18 = 0x40000000;
    int v19 = __carAudioStream_setVocoderInfo_block_invoke;
    int v20 = &__block_descriptor_tmp_66;
    uint64_t v21 = v14;
    int v22 = a3;
    uint64_t v23 = a1;
    dispatch_async(v15, &block);
    if (!a3) {
      return 0;
    }
    uint64_t v8 = *(NSObject **)(v14 + 168);
    v16[0] = MEMORY[0x1E4F143A8];
    v16[1] = 0x40000000;
    v16[2] = __carAudioStream_setVocoderInfo_block_invoke_2;
    v16[3] = &__block_descriptor_tmp_74;
    v16[4] = v14;
    v16[5] = a1;
    v16[6] = a3;
    p_blocCFIndex k = v16;
LABEL_17:
    dispatch_async(v8, p_block);
    return 0;
  }
  if (gLogCategory_APEndpointStreamCarPlayAudio <= 30
    && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 4294954512;
}

__CFDictionary *carAudioStream_copyShowInfo(uint64_t a1, const __CFAllocator *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFMutableArrayRef Mutable = CFDictionaryCreateMutable(a2, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  uint64_t v5 = Mutable;
  if (Mutable)
  {
    CFDictionarySetValue(Mutable, @"Type", *(const void **)(DerivedStorage + 32));
    CFDictionarySetValue(v5, @"Subtype", *(const void **)(DerivedStorage + 40));
    CFDictionarySetValue(v5, @"Name", *(const void **)(DerivedStorage + 24));
    CFDictionarySetValue(v5, @"ID", *(const void **)(DerivedStorage + 48));
    size_t v6 = (const void **)MEMORY[0x1E4F1CFD0];
    if (!*(unsigned char *)(DerivedStorage + 176)) {
      size_t v6 = (const void **)MEMORY[0x1E4F1CFC8];
    }
    CFDictionarySetValue(v5, @"Resumed", *v6);
  }
  else
  {
    APSLogErrorAt();
  }
  return v5;
}

uint64_t __carAudioStream_copyNonStateProperty_block_invoke(void *a1)
{
  uint64_t v2 = a1[5];
  uint64_t v3 = *(void *)(v2 + 368);
  if (v3)
  {
    CFAllocatorRef v4 = CFGetAllocator(*(CFTypeRef *)(v2 + 368));
    uint64_t v5 = a1[6];
    uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v6) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 0;
    }
    uint64_t v9 = *(uint64_t (**)(uint64_t, __CFString *, CFAllocatorRef, uint64_t))(v7 + 48);
    if (v9) {
      uint64_t result = v9(v3, @"Statistics", v4, v5);
    }
    else {
      uint64_t result = 4294954514;
    }
  }
  else
  {
    uint64_t result = 4294954512;
  }
  *(_DWORD *)(*(void *)(a1[4] + 8) + 24) = result;
  return result;
}

CFTypeRef *__carAudioStream_copyStateProperty_block_invoke(CFTypeRef *result)
{
  CFArrayRef v1 = result;
  if (*((unsigned char *)result[5] + 128))
  {
    uint64_t v2 = *((void *)result[4] + 1);
    int v3 = -16762;
  }
  else
  {
    if (CFEqual(result[6], @"AudioFormatInfo"))
    {
      uint64_t result = (CFTypeRef *)*((void *)v1[5] + 17);
      if (!result)
      {
LABEL_7:
        *(void *)v1[7] = result;
        return result;
      }
LABEL_4:
      uint64_t result = (CFTypeRef *)CFRetain(result);
      goto LABEL_7;
    }
    if (CFEqual(v1[6], @"EndpointStreamShowInfo"))
    {
      uint64_t result = (CFTypeRef *)carAudioStream_copyShowInfo((uint64_t)v1[8], (const __CFAllocator *)v1[9]);
      goto LABEL_7;
    }
    uint64_t result = (CFTypeRef *)CFEqual(v1[6], (CFTypeRef)*MEMORY[0x1E4F21418]);
    if (result)
    {
      uint64_t result = (CFTypeRef *)*((void *)v1[5] + 18);
      if (!result) {
        goto LABEL_7;
      }
      goto LABEL_4;
    }
    uint64_t v2 = *((void *)v1[4] + 1);
    int v3 = -12784;
  }
  *(_DWORD *)(v2 + 24) = v3;
  return result;
}

void __carAudioStream_setAudioSource_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v2 + 128))
  {
    if (gLogCategory_APEndpointStreamCarPlayAudio <= 30)
    {
      if (gLogCategory_APEndpointStreamCarPlayAudio != -1
        || (v3 = _LogCategory_Initialize(), uint64_t v2 = *(void *)(a1 + 32), v3))
      {
        LogPrintF();
        uint64_t v2 = *(void *)(a1 + 32);
      }
    }
    CFAllocatorRef v4 = *(const void **)(v2 + 160);
    uint64_t v5 = *(const void **)(a1 + 48);
    *(void *)(v2 + 160) = v5;
    if (v5) {
      CFRetain(v5);
    }
    if (v4) {
      CFRelease(v4);
    }
  }
  CFRelease(*(CFTypeRef *)(a1 + 40));
  uint64_t v6 = *(const void **)(a1 + 48);
  if (v6)
  {
    CFRelease(v6);
  }
}

void __carAudioStream_setAudioSink_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v2 + 128))
  {
    if (gLogCategory_APEndpointStreamCarPlayAudio <= 30)
    {
      if (gLogCategory_APEndpointStreamCarPlayAudio != -1
        || (v3 = _LogCategory_Initialize(), uint64_t v2 = *(void *)(a1 + 32), v3))
      {
        LogPrintF();
        uint64_t v2 = *(void *)(a1 + 32);
      }
    }
    CFAllocatorRef v4 = *(const void **)(v2 + 152);
    uint64_t v5 = *(const void **)(a1 + 48);
    *(void *)(v2 + 152) = v5;
    if (v5) {
      CFRetain(v5);
    }
    if (v4) {
      CFRelease(v4);
    }
  }
  CFRelease(*(CFTypeRef *)(a1 + 40));
  uint64_t v6 = *(const void **)(a1 + 48);
  if (v6)
  {
    CFRelease(v6);
  }
}

void __carAudioStream_setAudioFormatInfo_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v2 + 128))
  {
    int v3 = *(const void **)(a1 + 40);
    if (v3)
    {
      CFAllocatorRef v4 = *(const void **)(v2 + 136);
      *(void *)(v2 + 136) = v3;
      CFRetain(v3);
      if (v4) {
        CFRelease(v4);
      }
    }
  }
  CFRelease(*(CFTypeRef *)(a1 + 48));
  uint64_t v5 = *(const void **)(a1 + 40);
  if (v5)
  {
    CFRelease(v5);
  }
}

void __carAudioStream_setVocoderInfo_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v2 + 128))
  {
    int v3 = *(const void **)(v2 + 144);
    CFAllocatorRef v4 = *(const void **)(a1 + 40);
    *(void *)(v2 + 144) = v4;
    if (v4) {
      CFRetain(v4);
    }
    if (v3) {
      CFRelease(v3);
    }
  }
  CFRelease(*(CFTypeRef *)(a1 + 48));
  uint64_t v5 = *(const void **)(a1 + 40);
  if (v5)
  {
    CFRelease(v5);
  }
}

void __carAudioStream_setVocoderInfo_block_invoke_2(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v1 + 176)) {
    return;
  }
  uint64_t AudioType = APCarPlayAudioFormatInfoGetAudioType(*(void *)(v1 + 192));
  if (!AudioType) {
    goto LABEL_23;
  }
  CFAllocatorRef v4 = (const void *)AudioType;
  int StreamType = APCarPlayAudioFormatInfoGetStreamType(*(void *)(*(void *)(a1 + 32) + 192));
  if (StreamType != 100)
  {
    if (StreamType) {
      return;
    }
LABEL_23:
    APSLogErrorAt();
    return;
  }
  if (CFEqual(v4, @"telephony"))
  {
    uint64_t v6 = FigCFWeakReferenceHolderCopyReferencedObject();
    if (v6)
    {
      uint64_t v7 = (const void *)v6;
      CFAllocatorRef v8 = CFGetAllocator(*(CFTypeRef *)(a1 + 40));
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v8, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      if (Mutable)
      {
        CFMutableDictionaryRef v10 = Mutable;
        FigCFDictionarySetInt64();
        FigCFDictionarySetValue();
        if (gLogCategory_APEndpointStreamCarPlayAudio <= 30
          && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 24);
        if (v11) {
          uint64_t v12 = v11;
        }
        else {
          uint64_t v12 = 0;
        }
        uint64_t v13 = *(void (**)(const void *, __CFString *, CFMutableDictionaryRef, void, void))(v12 + 72);
        if (v13) {
          v13(v7, @"updateVocoderInfo", v10, 0, 0);
        }
        CFRelease(v10);
      }
      else
      {
        APSLogErrorAt();
      }
      CFRelease(v7);
    }
  }
}

uint64_t carAudioStream_suspend(const void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFRetain(a1);
  if (a2) {
    CFRetain(a2);
  }
  uint64_t v9 = *(NSObject **)(DerivedStorage + 168);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __carAudioStream_suspend_block_invoke;
  block[3] = &__block_descriptor_tmp_76;
  block[4] = a1;
  void block[5] = DerivedStorage;
  block[6] = a3;
  block[7] = a4;
  void block[8] = a2;
  dispatch_async(v9, block);
  return 0;
}

uint64_t carAudioStream_resume(const void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  v18[0] = 0;
  v18[1] = v18;
  v18[2] = 0x2000000000;
  int v19 = 0;
  v17[0] = 0;
  v17[1] = v17;
  v17[2] = 0x2000000000;
  v17[3] = 0;
  v16[0] = 0;
  v16[1] = v16;
  v16[2] = 0x2000000000;
  v16[3] = 0;
  v15[0] = 0;
  v15[1] = v15;
  v15[2] = 0x2000000000;
  v15[3] = 0;
  v14[0] = 0;
  v14[1] = v14;
  _OWORD v14[2] = 0x2000000000;
  v14[3] = 0;
  uint64_t v9 = *(NSObject **)(DerivedStorage + 120);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __carAudioStream_resume_block_invoke;
  block[3] = &unk_1E6891600;
  block[4] = v18;
  void block[5] = v17;
  block[6] = v16;
  block[7] = v15;
  void block[8] = v14;
  void block[9] = DerivedStorage;
  dispatch_sync(v9, block);
  CFRetain(a1);
  if (a2) {
    CFRetain(a2);
  }
  CFMutableDictionaryRef v10 = *(NSObject **)(DerivedStorage + 168);
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 0x40000000;
  v12[2] = __carAudioStream_resume_block_invoke_2;
  v12[3] = &unk_1E68916B8;
  v12[4] = v18;
  v12[5] = v17;
  v12[6] = v16;
  v12[7] = v15;
  v12[8] = v14;
  v12[9] = DerivedStorage;
  v12[10] = a1;
  v12[11] = a2;
  v12[12] = a3;
  v12[13] = a4;
  dispatch_async(v10, v12);
  _Block_object_dispose(v14, 8);
  _Block_object_dispose(v15, 8);
  _Block_object_dispose(v16, 8);
  _Block_object_dispose(v17, 8);
  _Block_object_dispose(v18, 8);
  return 0;
}

uint64_t carAudioStream_flush(const void *a1, uint64_t a2, const void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 128))
  {
    APSLogErrorAt();
    return 4294950534;
  }
  else
  {
    uint64_t v7 = DerivedStorage;
    CFRetain(a1);
    if (a3) {
      CFRetain(a3);
    }
    CFAllocatorRef v8 = *(NSObject **)(v7 + 168);
    v10[0] = MEMORY[0x1E4F143A8];
    v10[1] = 0x40000000;
    _OWORD v10[2] = __carAudioStream_flush_block_invoke;
    v10[3] = &__block_descriptor_tmp_181;
    v10[4] = v7;
    v10[5] = a3;
    v10[6] = a1;
    v10[7] = a2;
    dispatch_async(v8, v10);
    return 0;
  }
}

uint64_t carAudioStream_dissociate(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v3 = CMBaseObjectGetDerivedStorage();
  CFAllocatorRef v4 = *(NSObject **)(v3 + 120);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __carAudioStream_dissociateInternal_block_invoke;
  block[3] = &__block_descriptor_tmp_183;
  block[4] = v3;
  dispatch_sync(v4, block);
  uint64_t v5 = *(NSObject **)(v3 + 168);
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 0x40000000;
  v9[2] = __carAudioStream_dissociateInternal_block_invoke_2;
  v9[3] = &__block_descriptor_tmp_184;
  v9[4] = a1;
  dispatch_sync(v5, v9);
  if (CFEqual(*(CFTypeRef *)(v3 + 40), (CFTypeRef)*MEMORY[0x1E4F21448])) {
    APCarPlayAVVCServerRemoveStream(a1);
  }
  CFRetain(a1);
  uint64_t v6 = *(NSObject **)(DerivedStorage + 112);
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 0x40000000;
  void v8[2] = __carAudioStream_dissociate_block_invoke;
  v8[3] = &__block_descriptor_tmp_182;
  v8[4] = a1;
  dispatch_async(v6, v8);
  return 0;
}

uint64_t carAudioStream_control(int a1, CFTypeRef cf1, const void *a3)
{
  if (!CFEqual(cf1, @"APCarPlayStreamAudioControl_SpeechEvent")) {
    return 4294960561;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFRetain(a3);
  uint64_t v5 = *(NSObject **)(DerivedStorage + 416);
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 0x40000000;
  v7[2] = __carAudioStream_handleSpeechEvent_block_invoke;
  v7[3] = &__block_descriptor_tmp_185;
  v7[4] = DerivedStorage;
  v7[5] = a3;
  dispatch_async(v5, v7);
  return 0;
}

void __carAudioStream_suspend_block_invoke(uint64_t *a1)
{
  carAudioStream_suspendInternal(a1[4], 0);
  CFRetain((CFTypeRef)a1[4]);
  uint64_t v2 = *(NSObject **)(a1[5] + 112);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __carAudioStream_suspend_block_invoke_2;
  block[3] = &__block_descriptor_tmp_75;
  uint64_t v3 = a1[4];
  uint64_t v4 = a1[7];
  block[4] = a1[6];
  void block[5] = v3;
  block[6] = v4;
  dispatch_async(v2, block);
  uint64_t v5 = (const void *)a1[8];
  if (v5) {
    CFRelease(v5);
  }
  CFRelease((CFTypeRef)a1[4]);
}

void carAudioStream_suspendInternal(uint64_t a1, int a2)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 176))
  {
    uint64_t v5 = DerivedStorage;
    if (gLogCategory_APEndpointStreamCarPlayAudio <= 50
      && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v6 = LogCategoryCopyOSLogHandle();
    uint64_t v7 = (void *)v6;
    CFAllocatorRef v8 = MEMORY[0x1E4F14500];
    if (v6) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = MEMORY[0x1E4F14500];
    }
    if (os_signpost_enabled(v9))
    {
      CStringPtr = CFStringGetCStringPtr(*(CFStringRef *)(v5 + 40), 0x8000100u);
      *(_DWORD *)buf = 136315138;
      uint64_t v29 = CStringPtr;
      _os_signpost_emit_with_name_impl(&dword_1D0945000, v9, OS_SIGNPOST_EVENT, 0x2B8D0940uLL, "AP_SIGNPOST_CAR_AUDIOSTREAM_SUSPEND_START", "stream type=%s\n", buf, 0xCu);
    }
    if (v7) {
      os_release(v7);
    }
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
    if (APCarPlayAudioFormatInfoGetStreamType(*(void *)(v5 + 192)) == 102)
    {
      uint64_t v11 = *(void *)(v5 + 16);
      uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v12) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = 0;
      }
      int v19 = *(void (**)(uint64_t))(v13 + 32);
      if (v19) {
        v19(v11);
      }
    }
    else
    {
      if (*(void *)(v5 + 368))
      {
        uint64_t v14 = *(NSObject **)(v5 + 352);
        block[0] = MEMORY[0x1E4F143A8];
        block[1] = 0x40000000;
        block[2] = __carAudioStream_suspendInternal_block_invoke;
        block[3] = &__block_descriptor_tmp_80;
        block[4] = v5;
        dispatch_sync(v14, block);
      }
      if (*(void *)(v5 + 432))
      {
        uint64_t v15 = *(NSObject **)(v5 + 416);
        v26[0] = MEMORY[0x1E4F143A8];
        v26[1] = 0x40000000;
        _OWORD v26[2] = __carAudioStream_suspendInternal_block_invoke_2;
        v26[3] = &__block_descriptor_tmp_82;
        v26[4] = v5;
        v26[5] = a1;
        dispatch_sync(v15, v26);
        uint64_t v16 = *(void *)(v5 + 432);
        uint64_t v17 = *(void **)(CMBaseObjectGetVTable() + 16);
        if (v17) {
          uint64_t v18 = v17;
        }
        else {
          uint64_t v18 = 0;
        }
        if (*v18 >= 2uLL)
        {
          int v20 = (void (*)(uint64_t, void, void, void, void))v18[3];
          if (v20) {
            v20(v16, 0, 0, 0, 0);
          }
        }
        *(_DWORD *)(v5 + 440) = 0;
      }
    }
    APCarPlayAnalyticsStopCollections(*(void *)(v5 + 88));
    APCarPlayAnalyticsSubmitToCarPlay(*(NSObject ***)(v5 + 88));
    carAudioStream_teardownTransportStreams(a1, a2);
    carAudioStream_teardownAudioProcessing();
    uint64_t v21 = CMBaseObjectGetDerivedStorage();
    if (CFEqual(*(CFTypeRef *)(v21 + 40), (CFTypeRef)*MEMORY[0x1E4F21440])
      || FigCFEqual()
      || FigCFEqual()
      || FigCFEqual())
    {
      APSEventRecorderRecordEvent();
    }
    else
    {
      APSLogErrorAt();
    }
    *(unsigned char *)(v5 + 176) = 0;
    if (gLogCategory_APEndpointStreamCarPlayAudio <= 50
      && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v22 = LogCategoryCopyOSLogHandle();
    uint64_t v23 = (void *)v22;
    if (v22) {
      uint64_t v24 = v22;
    }
    else {
      uint64_t v24 = v8;
    }
    if (os_signpost_enabled(v24))
    {
      uint64_t v25 = CFStringGetCStringPtr(*(CFStringRef *)(v5 + 40), 0x8000100u);
      *(_DWORD *)buf = 136315138;
      uint64_t v29 = v25;
      _os_signpost_emit_with_name_impl(&dword_1D0945000, v24, OS_SIGNPOST_EVENT, 0x2B8D0944uLL, "AP_SIGNPOST_CAR_AUDIOSTREAM_SUSPEND_END", "stream type=%s\n", buf, 0xCu);
    }
    if (v23) {
      os_release(v23);
    }
  }
}

void __carAudioStream_suspend_block_invoke_2(void *a1)
{
  uint64_t v2 = (void (*)(void, void, void))a1[4];
  if (v2) {
    v2(a1[5], 0, a1[6]);
  }
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterPostNotification();
  uint64_t v3 = (const void *)a1[5];
  CFRelease(v3);
}

void carAudioStream_handleFeedbackReceivedNotification(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4, const void *a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a5 && (CFTypeID v8 = CFGetTypeID(a5), v8 != CFDictionaryGetTypeID()))
  {
    APSLogErrorAt();
  }
  else
  {
    CFArrayGetTypeID();
    TypedCFDictionaryRef Value = CFDictionaryGetTypedValue();
    if (TypedValue)
    {
      CFMutableDictionaryRef v10 = (const void *)TypedValue;
      CFRetain(a2);
      uint64_t v11 = *(NSObject **)(DerivedStorage + 416);
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 0x40000000;
      block[2] = __carAudioStream_handleFeedbackReceivedNotification_block_invoke;
      block[3] = &__block_descriptor_tmp_86;
      block[4] = DerivedStorage;
      void block[5] = a2;
      dispatch_async(v11, block);
      CFRetain(a2);
      CFRetain(v10);
      if (a5) {
        CFRetain(a5);
      }
      uint64_t v12 = *(NSObject **)(DerivedStorage + 168);
      v13[0] = MEMORY[0x1E4F143A8];
      v13[1] = 0x40000000;
      void v13[2] = __carAudioStream_handleFeedbackReceivedNotification_block_invoke_2;
      v13[3] = &__block_descriptor_tmp_99;
      v13[4] = DerivedStorage;
      v13[5] = v10;
      v13[6] = a2;
      v13[7] = a5;
      dispatch_async(v12, v13);
    }
  }
}

void __carAudioStream_suspendInternal_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  *(unsigned char *)(v2 + 360) = 0;
  *(unsigned char *)(v2 + 400) = 0;
  uint64_t v3 = *(const void **)(v2 + 392);
  if (v3)
  {
    CFRelease(v3);
    uint64_t v2 = *(void *)(a1 + 32);
  }
  uint64_t v4 = *(const void **)(v2 + 376);
  if (v4)
  {
    CFRelease(v4);
    uint64_t v2 = *(void *)(a1 + 32);
  }
  uint64_t v5 = *(const void **)(v2 + 368);
  if (v5)
  {
    CFRelease(v5);
  }
}

void __carAudioStream_suspendInternal_block_invoke_2(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 424) = 0;
  APSAudioStats_TerminateSession();
  if (gLogCategory_APEndpointStreamCarPlayAudio <= 50
    && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v2 = *(const void **)(*(void *)(a1 + 32) + 504);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(*(void *)(a1 + 32) + 504) = 0;
  }
}

void carAudioStream_teardownTransportStreams(uint64_t a1, int a2)
{
  uint64_t DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  uint64_t v5 = DerivedStorage;
  if (!a2 && (DerivedStorage[48] || DerivedStorage[58]))
  {
    uint64_t StreamType = APCarPlayAudioFormatInfoGetStreamType(DerivedStorage[24]);
    if (gLogCategory_APEndpointStreamCarPlayAudio <= 50
      && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    switch((int)StreamType)
    {
        kdebug_trace();
        uint64_t v7 = v5[12];
        uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v8) {
          uint64_t v9 = v8;
        }
        else {
          uint64_t v9 = 0;
        }
        uint64_t v14 = *(void (**)(uint64_t, uint64_t, void))(v9 + 48);
        if (v14) {
          v14(v7, 96, 0);
        }
        break;
      default:
        kdebug_trace();
        uint64_t v10 = v5[12];
        uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v11) {
          uint64_t v12 = v11;
        }
        else {
          uint64_t v12 = 0;
        }
        uint64_t v13 = *(void (**)(uint64_t, uint64_t, void))(v12 + 48);
        if (v13) {
          v13(v10, StreamType, 0);
        }
        break;
    }
    kdebug_trace();
  }
  uint64_t v15 = (const void *)v5[49];
  if (v15)
  {
    CFRelease(v15);
    v5[49] = 0;
  }
  if (v5[48])
  {
    uint64_t CMBaseObject = FigTransportStreamGetCMBaseObject();
    if (CMBaseObject)
    {
      uint64_t v17 = CMBaseObject;
      uint64_t v18 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v19 = v18 ? v18 : 0;
      int v20 = *(void (**)(uint64_t))(v19 + 24);
      if (v20) {
        v20(v17);
      }
    }
    uint64_t v21 = (const void *)v5[48];
    if (v21)
    {
      CFRelease(v21);
      v5[48] = 0;
    }
  }
  uint64_t v22 = (const void *)v5[47];
  if (v22)
  {
    CFRelease(v22);
    v5[47] = 0;
  }
  if (v5[58])
  {
    uint64_t v23 = FigTransportStreamGetCMBaseObject();
    if (v23)
    {
      uint64_t v24 = v23;
      uint64_t v25 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v26 = v25 ? v25 : 0;
      CFDictionaryRef v27 = *(void (**)(uint64_t))(v26 + 24);
      if (v27) {
        v27(v24);
      }
    }
    uint64_t v28 = (const void *)v5[58];
    if (v28)
    {
      CFRelease(v28);
      v5[58] = 0;
    }
  }
  if (v5[57])
  {
    uint64_t v29 = FigTransportStreamGetCMBaseObject();
    if (v29)
    {
      uint64_t v30 = v29;
      uint64_t v31 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v32 = v31 ? v31 : 0;
      uint64_t v33 = *(void (**)(uint64_t))(v32 + 24);
      if (v33) {
        v33(v30);
      }
    }
    uint64_t v34 = (const void *)v5[57];
    if (v34)
    {
      CFRelease(v34);
      v5[57] = 0;
    }
  }
  if (*((unsigned char *)v5 + 472))
  {
    uint64_t v35 = v5[2];
    uint64_t v36 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v36) {
      uint64_t v37 = v36;
    }
    else {
      uint64_t v37 = 0;
    }
    uint64_t v38 = *(void (**)(uint64_t, uint64_t, void))(v37 + 16);
    if (v38) {
      v38(v35, a1, 0);
    }
    *((unsigned char *)v5 + 472) = 0;
    uint64_t v39 = APAudioEngineGetCMBaseObject(v5[2]);
    uint64_t v40 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v40) {
      uint64_t v41 = v40;
    }
    else {
      uint64_t v41 = 0;
    }
    char v42 = *(void (**)(uint64_t, __CFString *, void))(v41 + 56);
    if (v42) {
      v42(v39, @"cryptor", 0);
    }
  }
  CFTypeRef v43 = (const void *)v5[56];
  if (v43)
  {
    CFRelease(v43);
    v5[56] = 0;
  }
  uint64_t v44 = (const void *)v5[61];
  if (v44)
  {
    CFRelease(v44);
    v5[61] = 0;
  }
  v5[23] = 0;
}

void carAudioStream_teardownAudioProcessing()
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  uint64_t v1 = (const void *)DerivedStorage[24];
  if (v1)
  {
    CFRelease(v1);
    DerivedStorage[24] = 0;
  }
  uint64_t v2 = (const void *)DerivedStorage[46];
  if (v2)
  {
    CFRelease(v2);
    DerivedStorage[46] = 0;
  }
  uint64_t v3 = (const void *)DerivedStorage[54];
  if (v3)
  {
    CFRelease(v3);
    DerivedStorage[54] = 0;
  }
  uint64_t v4 = CMBaseObjectGetDerivedStorage();
  if (CMSimpleQueueGetCount(*(CMSimpleQueueRef *)(v4 + 408)) >= 1)
  {
    while (1)
    {
      uint64_t v5 = CMSimpleQueueDequeue(*(CMSimpleQueueRef *)(v4 + 408));
      if (!v5) {
        break;
      }
      CFRelease(v5);
    }
  }
  uint64_t v6 = (const void *)DerivedStorage[51];
  if (v6)
  {
    CFRelease(v6);
    DerivedStorage[51] = 0;
  }
}

void __carAudioStream_handleFeedbackReceivedNotification_block_invoke(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 504))
  {
    uint64_t v2 = (const void *)APSAudioStats_CopySampleRateStatsAsString();
    if (gLogCategory_APEndpointStreamCarPlayAudio <= 50
      && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (v2) {
      CFRelease(v2);
    }
  }
  uint64_t v3 = *(const void **)(a1 + 40);
  CFRelease(v3);
}

void __carAudioStream_handleFeedbackReceivedNotification_block_invoke_2(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 192);
  if (v2)
  {
    int StreamType = APCarPlayAudioFormatInfoGetStreamType(v2);
    CFArrayGetCount(*(CFArrayRef *)(a1 + 40));
    CFArrayApplyBlock();
    CFMutableDictionaryRef Mutable = 0;
    if (StreamType == 102)
    {
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      CFDictionarySetInt64();
      CFDictionarySetInt64();
    }
    if (APCarPlayAnalyticsCollectFromFeedbackResponse(*(void **)(*(void *)(a1 + 32) + 88), *(CFTypeRef *)(a1 + 56), Mutable)&& gLogCategory_APEndpointStreamCarPlayAudio <= 60&& (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFRelease(*(CFTypeRef *)(a1 + 40));
    CFRelease(*(CFTypeRef *)(a1 + 48));
    uint64_t v5 = *(const void **)(a1 + 56);
    if (v5) {
      CFRelease(v5);
    }
    if (Mutable) {
      CFRelease(Mutable);
    }
  }
}

double *__carAudioStream_handleFeedbackReceivedNotification_block_invoke_3(double *result, CFTypeRef cf)
{
  if (cf)
  {
    uint64_t v2 = (uint64_t)result;
    CFTypeID v3 = CFGetTypeID(cf);
    uint64_t result = (double *)CFDictionaryGetTypeID();
    if ((double *)v3 == result)
    {
      uint64_t result = (double *)CFDictionaryGetInt64Ranged();
      if (*(_DWORD *)(v2 + 48) == result)
      {
        int DoubleIfPresent = FigCFDictionaryGetDoubleIfPresent();
        uint64_t result = (double *)FigCFDictionaryGetDoubleIfPresent();
        if (result
          && (uint64_t result = (double *)FigCFDictionaryGetInt64IfPresent(), result)
          && *(unsigned char *)(*(void *)(v2 + 32) + 200))
        {
          FigCFDictionaryGetInt64IfPresent();
          APSNetworkClockNTPConvertNTPToUpTicks();
          if (gLogCategory_APEndpointStreamCarPlayAudio <= 50
            && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          return (double *)carAudioStream_updateZeroTimeFromPhaseValues(0.0, *(void *)(v2 + 40), 0, 0);
        }
        else if (DoubleIfPresent)
        {
          if (gLogCategory_APEndpointStreamCarPlayAudio <= 50
            && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          return carAudioStream_updateZeroTimeFromSampleRate(0.0);
        }
        else if (gLogCategory_APEndpointStreamCarPlayAudio <= 60)
        {
          if (gLogCategory_APEndpointStreamCarPlayAudio != -1) {
            return (double *)LogPrintF();
          }
          uint64_t result = (double *)_LogCategory_Initialize();
          if (result) {
            return (double *)LogPrintF();
          }
        }
      }
    }
  }
  return result;
}

uint64_t carAudioStream_updateZeroTimeFromPhaseValues(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(double *)(DerivedStorage + 272) = a1;
  *(void *)(DerivedStorage + 280) = a3;
  *(_DWORD *)(DerivedStorage + 328) = 3;
  *(double *)(DerivedStorage + 288) = (double)a4;
  if (gLogCategory_APEndpointStreamCarPlayAudio <= 50
    && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
  {
    mach_absolute_time();
    LogPrintF();
  }
  double v8 = *(double *)APCarPlayAudioFormatInfoGetDescription(*(void *)(DerivedStorage + 192));
  if ((~*(_DWORD *)(DerivedStorage + 264) & 3) != 0)
  {
    long long v11 = *(_OWORD *)(DerivedStorage + 320);
    *(_OWORD *)(DerivedStorage + 240) = *(_OWORD *)(DerivedStorage + 304);
    *(_OWORD *)(DerivedStorage + 256) = v11;
    long long v12 = *(_OWORD *)(DerivedStorage + 288);
    *(_OWORD *)(DerivedStorage + 208) = *(_OWORD *)(DerivedStorage + 272);
    *(_OWORD *)(DerivedStorage + 224) = v12;
    *(double *)(DerivedStorage + 224) = (double)a4;
    *(double *)(DerivedStorage + 344) = v8;
  }
  else
  {
    double v9 = a1 - *(double *)(DerivedStorage + 272);
    UpTicksToSecondsF();
    double v13 = v9 / v10;
    if (vabdd_f64(*(double *)(DerivedStorage + 344), v8) > v8 * 0.00025
      && gLogCategory_APEndpointStreamCarPlayAudioTimeStamps <= 50
      && (gLogCategory_APEndpointStreamCarPlayAudioTimeStamps != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (vabdd_f64(*(double *)(DerivedStorage + 344), v13) > *(double *)(DerivedStorage + 344) * 0.00005
      && gLogCategory_APEndpointStreamCarPlayAudioTimeStamps <= 50
      && (gLogCategory_APEndpointStreamCarPlayAudioTimeStamps != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    double v14 = a1 - *(double *)(DerivedStorage + 208);
    UpTicksToSecondsF();
    *(double *)(DerivedStorage + 344) = v14 / v15;
  }
  uint64_t v16 = *(void *)(DerivedStorage + 56);
  return APAudioZeroTimeStampProviderSetZeroTimeStamp(v16, (_OWORD *)(DerivedStorage + 272));
}

double *carAudioStream_updateZeroTimeFromSampleRate(double a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v3 = mach_absolute_time();
  uint64_t result = (double *)APCarPlayAudioFormatInfoGetDescription(*(void *)(DerivedStorage + 192));
  double v5 = *result;
  if (vabdd_f64(*result, a1) <= 2000.0)
  {
    double v6 = a1;
    if ((~*(_DWORD *)(DerivedStorage + 328) & 3) == 0)
    {
      if (vabdd_f64(a1, v5) > v5 * 0.00025
        && gLogCategory_APEndpointStreamCarPlayAudioTimeStamps <= 50
        && (gLogCategory_APEndpointStreamCarPlayAudioTimeStamps != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      double v6 = a1;
      if (vabdd_f64(*(double *)(DerivedStorage + 344), a1) > *(double *)(DerivedStorage + 344) * 0.00005)
      {
        if (*(unsigned char *)(DerivedStorage + 64))
        {
          double v6 = a1;
          if (gLogCategory_APEndpointStreamCarPlayAudioTimeStamps <= 50)
          {
            if (gLogCategory_APEndpointStreamCarPlayAudioTimeStamps != -1
              || (double v6 = a1, _LogCategory_Initialize()))
            {
              LogPrintF();
              double v6 = a1;
            }
          }
        }
        else if (gLogCategory_APEndpointStreamCarPlayAudioTimeStamps > 50)
        {
          double v6 = *(double *)(DerivedStorage + 344);
        }
        else if (gLogCategory_APEndpointStreamCarPlayAudioTimeStamps != -1 {
               || (v7 = _LogCategory_Initialize(), double v6 = *(double *)(DerivedStorage + 344), v7))
        }
        {
          LogPrintF();
          double v6 = *(double *)(DerivedStorage + 344);
        }
      }
    }
    if ((~*(_DWORD *)(DerivedStorage + 328) & 3) != 0)
    {
      *(void *)(DerivedStorage + 272) = 0;
      *(void *)(DerivedStorage + 280) = v3;
      *(_DWORD *)(DerivedStorage + 328) = 3;
      *(double *)(DerivedStorage + 344) = v5;
    }
    else
    {
      unint64_t v8 = *(void *)(DerivedStorage + 280);
      if (v3 > v8)
      {
        *(double *)(DerivedStorage + 272) = *(double *)(DerivedStorage + 272)
                                          + v6 * (double)(v3 - v8) / (double)(unint64_t)UpTicksPerSecond();
        *(void *)(DerivedStorage + 280) = v3;
      }
    }
    if (gLogCategory_APEndpointStreamCarPlayAudio <= 50
      && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    double v9 = *(double *)(DerivedStorage + 344);
    double v10 = vabdd_f64(v9, a1) / v5;
    if (v10 >= 0.0011) {
      double v11 = 0.01;
    }
    else {
      double v11 = fmax(v10 / -0.0011 + 1.0, 0.01);
    }
    if (gLogCategory_APEndpointStreamCarPlayAudioTimeStamps <= 30)
    {
      if (gLogCategory_APEndpointStreamCarPlayAudioTimeStamps != -1
        || (v12 = _LogCategory_Initialize(), double v9 = *(double *)(DerivedStorage + 344), v12))
      {
        LogPrintF();
        double v9 = *(double *)(DerivedStorage + 344);
      }
    }
    unsigned int v13 = *(_DWORD *)(DerivedStorage + 336);
    *(double *)(DerivedStorage + 344) = (v11 * a1 + v9 * (double)v13) / (v11 + (double)v13);
    *(_DWORD *)(DerivedStorage + 336) = v13 + 1;
    uint64_t v14 = *(void *)(DerivedStorage + 56);
    return (double *)APAudioZeroTimeStampProviderSetZeroTimeStamp(v14, (_OWORD *)(DerivedStorage + 272));
  }
  else if (gLogCategory_APEndpointStreamCarPlayAudioTimeStamps <= 90)
  {
    if (gLogCategory_APEndpointStreamCarPlayAudioTimeStamps != -1) {
      return (double *)LogPrintF();
    }
    uint64_t result = (double *)_LogCategory_Initialize();
    if (result) {
      return (double *)LogPrintF();
    }
  }
  return result;
}

uint64_t APAudioEngineSetProperty(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t CMBaseObject = APAudioEngineGetCMBaseObject(a1);
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 56);
  if (!v8) {
    return 4294954514;
  }
  return v8(CMBaseObject, a2, a3);
}

CFTypeRef __carAudioStream_resume_block_invoke(void *a1)
{
  uint64_t v2 = a1[9];
  int v3 = *(_DWORD *)(v2 + 132) + 1;
  *(_DWORD *)(v2 + 132) = v3;
  *(_DWORD *)(*(void *)(a1[4] + 8) + 24) = v3;
  CFTypeRef v4 = *(CFTypeRef *)(v2 + 152);
  if (v4) {
    CFTypeRef v4 = CFRetain(v4);
  }
  *(void *)(*(void *)(a1[5] + 8) + 24) = v4;
  CFTypeRef v5 = *(CFTypeRef *)(a1[9] + 160);
  if (v5) {
    CFTypeRef v5 = CFRetain(v5);
  }
  *(void *)(*(void *)(a1[6] + 8) + 24) = v5;
  CFTypeRef v6 = *(CFTypeRef *)(a1[9] + 136);
  if (v6) {
    CFTypeRef v6 = CFRetain(v6);
  }
  *(void *)(*(void *)(a1[7] + 8) + 24) = v6;
  CFTypeRef result = *(CFTypeRef *)(a1[9] + 144);
  if (result) {
    CFTypeRef result = CFRetain(result);
  }
  *(void *)(*(void *)(a1[8] + 8) + 24) = result;
  return result;
}

void __carAudioStream_resume_block_invoke_2(void *a1)
{
  int inited = 0;
  uint64_t v210 = 0;
  v211 = &v210;
  uint64_t v212 = 0x2000000000;
  char v213 = 0;
  uint64_t v206 = 0;
  v207 = &v206;
  uint64_t v208 = 0x2000000000;
  char v209 = 0;
  uint64_t v2 = a1[9];
  int v3 = "ted %.3f secs ago.\n";
  if (*(unsigned char *)(v2 + 176)) {
    goto LABEL_296;
  }
  CFTypeRef v4 = *(NSObject **)(v2 + 120);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __carAudioStream_resume_block_invoke_3;
  block[3] = &unk_1E6891628;
  block[4] = &v210;
  void block[5] = &v206;
  void block[6] = a1[4];
  void block[7] = v2;
  dispatch_sync(v4, block);
  if (*((unsigned char *)v211 + 24)) {
    goto LABEL_296;
  }
  if (!*((unsigned char *)v207 + 24))
  {
    APSLogErrorAt();
LABEL_296:
    CFTypeRef v5 = 0;
    goto LABEL_267;
  }
  if (gLogCategory_APEndpointStreamCarPlayAudio <= 50
    && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!FigCFEqual())
  {
    CFTypeRef v5 = 0;
    goto LABEL_16;
  }
  CFTypeRef v5 = (const void *)FigCFWeakReferenceHolderCopyReferencedObject();
  if (v5)
  {
    uint64_t v6 = APSGetFBOPropertyInt64();
    if (inited) {
      goto LABEL_266;
    }
    if (v6)
    {
      if (gLogCategory_APEndpointStreamCarPlayAudio <= 60
        && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      goto LABEL_35;
    }
LABEL_16:
    uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
    *(_OWORD *)(DerivedStorage + 208) = 0u;
    *(_OWORD *)(DerivedStorage + 224) = 0u;
    *(_OWORD *)(DerivedStorage + 240) = 0u;
    *(_OWORD *)(DerivedStorage + 256) = 0u;
    *(_OWORD *)(DerivedStorage + 272) = 0u;
    *(_OWORD *)(DerivedStorage + 288) = 0u;
    *(_OWORD *)(DerivedStorage + 304) = 0u;
    *(_OWORD *)(DerivedStorage + 320) = 0u;
    *(_DWORD *)(DerivedStorage + 336) = 0;
    *(void *)(DerivedStorage + 344) = 0;
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterAddWeakListener();
    unint64_t v8 = (const void *)a1[10];
    unint64_t v9 = *(void *)(*(void *)(a1[5] + 8) + 24);
    unint64_t v10 = *(void *)(*(void *)(a1[6] + 8) + 24);
    double v11 = *(const void **)(*(void *)(a1[7] + 8) + 24);
    uint64_t v12 = CMBaseObjectGetDerivedStorage();
    if (!(v9 | v10) || !v11)
    {
      APSLogErrorAt();
      int v18 = -16760;
      goto LABEL_54;
    }
    uint64_t v13 = v12;
    *(void *)(v12 + 192) = CFRetain(v11);
    DescriptioCFIndex n = APCarPlayAudioFormatInfoGetDescription((uint64_t)v11);
    APCarPlayAudioFormatInfoGetLatencyInfo((uint64_t)v11);
    if (!v9) {
      goto LABEL_40;
    }
    *(unsigned char *)(v13 + 400) = 1;
    CFAllocatorRef v15 = CFGetAllocator(v8);
    OSStatus v16 = CMSimpleQueueCreate(v15, 20, (CMSimpleQueueRef *)(v13 + 408));
    if (v16)
    {
      int v18 = v16;
    }
    else
    {
      int v17 = APSSetFBOPropertyInt64();
      if (v17 == -12784 || (int v18 = v17, v17 == -12782) || !v17)
      {
        CFTypeRef v19 = CFRetain((CFTypeRef)v9);
        *(void *)(v13 + 368) = v19;
        int v20 = *(void **)(CMBaseObjectGetVTable() + 16);
        if (v20) {
          uint64_t v21 = v20;
        }
        else {
          uint64_t v21 = 0;
        }
        if (*v21 < 2uLL)
        {
          int v18 = -12781;
        }
        else
        {
          uint64_t v22 = (uint64_t (*)(CFTypeRef, uint64_t))v21[2];
          if (v22)
          {
            int v23 = v22(v19, Description);
            if (v23)
            {
              int v18 = v23;
            }
            else
            {
              uint64_t v24 = *(void *)(v13 + 368);
              uint64_t v25 = *(void **)(CMBaseObjectGetVTable() + 16);
              if (v25) {
                uint64_t v26 = v25;
              }
              else {
                uint64_t v26 = 0;
              }
              if (*v26 < 2uLL)
              {
                int v18 = -12781;
              }
              else
              {
                uint64_t v28 = (uint64_t (*)(uint64_t))v26[3];
                if (v28)
                {
                  int v29 = v28(v24);
                  if (!v29)
                  {
LABEL_40:
                    if (!v10) {
                      goto LABEL_86;
                    }
                    CFTypeRef v30 = CFRetain((CFTypeRef)v10);
                    *(void *)(v13 + 432) = v30;
                    uint64_t v31 = *(void **)(CMBaseObjectGetVTable() + 16);
                    if (v31) {
                      uint64_t v32 = v31;
                    }
                    else {
                      uint64_t v32 = 0;
                    }
                    if (*v32 < 2uLL)
                    {
                      int v18 = -12781;
                    }
                    else
                    {
                      uint64_t v33 = (uint64_t (*)(CFTypeRef, uint64_t))v32[2];
                      if (v33)
                      {
                        int v34 = v33(v30, Description);
                        if (v34)
                        {
                          int v18 = v34;
                        }
                        else
                        {
                          if (*(_DWORD *)(Description + 8) == 1819304813) {
                            goto LABEL_77;
                          }
                          APCarPlayAudioFormatInfoGetStreamType((uint64_t)v11);
                          if (gLogCategory_APEndpointStreamCarPlayAudio <= 50
                            && (gLogCategory_APEndpointStreamCarPlayAudio != -1
                             || _LogCategory_Initialize()))
                          {
                            LogPrintF();
                          }
                          int v43 = APSSetFBOPropertyInt64();
                          if (v43)
                          {
                            int v18 = v43;
                          }
                          else
                          {
LABEL_77:
                            if (APCarPlayAudioFormatInfoGetStreamType((uint64_t)v11) == 102)
                            {
                              uint64_t v44 = *(void *)(v13 + 432);
                              uint64_t CMBaseObject = APAudioEngineGetCMBaseObject(*(void *)(v13 + 16));
                              uint64_t v46 = *(void *)(CMBaseObjectGetVTable() + 8);
                              if (v46) {
                                uint64_t v47 = v46;
                              }
                              else {
                                uint64_t v47 = 0;
                              }
                              BOOL v49 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t))(v47 + 56);
                              if (v49)
                              {
                                int v50 = v49(CMBaseObject, @"audioSource", v44);
                                if (!v50) {
                                  goto LABEL_85;
                                }
                                int v18 = v50;
                              }
                              else
                              {
                                int v18 = -12782;
                              }
                            }
                            else
                            {
                              int v48 = APSSetFBOPropertyInt64();
                              if (!v48)
                              {
LABEL_85:
                                *(_WORD *)(v13 + 474) = 0;
                                *(void *)(v13 + 480) = 0;
LABEL_86:
                                int inited = 0;
                                uint64_t v51 = *(void *)(*(void *)(a1[7] + 8) + 24);
                                v192 = *(const void **)(*(void *)(a1[8] + 8) + 24);
                                uint64_t v52 = a1[10];
                                CFDictionaryRef v197 = (const __CFDictionary *)a1[11];
                                int TransportStreamIDAndQuality = 0;
                                uint64_t v53 = CMBaseObjectGetDerivedStorage();
                                v226[0] = xmmword_1F26CF5A0;
                                v226[1] = unk_1F26CF5B0;
                                v226[2] = xmmword_1F26CF5C0;
                                uint64_t v225 = 0;
                                int v224 = 0;
                                uint64_t v222 = 0;
                                double v223 = 0.0;
                                CFTypeRef v220 = 0;
                                uint64_t v221 = 0;
                                char v219 = 0;
                                uint64_t v218 = 0;
                                v199 = (void *)FigCFWeakReferenceHolderCreateWithReferencedObject();
                                if (v199)
                                {
                                  uint64_t v54 = APSGetFBOPropertyInt64();
                                  CFAllocatorRef v55 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
                                  CFDictionaryRef theDict = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
                                  if (theDict)
                                  {
                                    uint64_t StreamType = APCarPlayAudioFormatInfoGetStreamType(v51);
                                    if (StreamType)
                                    {
                                      uint64_t v57 = StreamType;
                                      uint64_t AudioType = (const void *)APCarPlayAudioFormatInfoGetAudioType(v51);
                                      BOOL v59 = v57 != 102 && v54 == 0;
                                      BOOL v194 = v59;
                                      if (v57 == 102)
                                      {
                                        CFDictionaryRemoveAllValues(theDict);
                                        CFDictionarySetInt64();
                                        uint64_t v69 = (const void *)*MEMORY[0x1E4F22028];
                                        CFUUIDRef v70 = CFUUIDGetConstantUUIDWithBytes(0, 0x26u, 0x5Au, 0xC5u, 0x1Bu, 0x30u, 0xC0u, 0x40u, 0xADu, 0x90u, 0xC8u, 0xF6u, 0x9Cu, 0x26u, 0xD1u, 0x88u, 0x26u);
                                        CFDictionarySetValue(theDict, v69, v70);
                                        uint64_t v71 = *(void *)(v53 + 96);
                                        uint64_t v72 = *(void *)(CMBaseObjectGetVTable() + 16);
                                        if (v72) {
                                          uint64_t v73 = v72;
                                        }
                                        else {
                                          uint64_t v73 = 0;
                                        }
                                        CFTypeID v80 = *(uint64_t (**)(uint64_t, uint64_t, __CFDictionary *, uint64_t))(v73 + 64);
                                        if (!v80)
                                        {
                                          int TransportStreamIDAndQuality = -12782;
                                          goto LABEL_200;
                                        }
                                        CFTypeRef v81 = (uint64_t *)(v53 + 456);
                                        int TransportStreamIDAndQuality = v80(v71, 1735287668, theDict, v53 + 456);
                                        if (TransportStreamIDAndQuality) {
                                          goto LABEL_200;
                                        }
                                        uint64_t v82 = *v81;
                                        uint64_t v83 = *(void *)(CMBaseObjectGetVTable() + 16);
                                        if (v83) {
                                          uint64_t v84 = v83;
                                        }
                                        else {
                                          uint64_t v84 = 0;
                                        }
                                        long long v89 = *(uint64_t (**)(uint64_t, void, void, uint64_t))(v84 + 24);
                                        if (!v89)
                                        {
                                          int TransportStreamIDAndQuality = -12782;
                                          goto LABEL_200;
                                        }
                                        int TransportStreamIDAndQuality = v89(v82, carAudioStream_handleOutputControlMessage, 0, v52);
                                        if (TransportStreamIDAndQuality)
                                        {
LABEL_200:
                                          APSLogErrorAt();
                                          CFMutableDictionaryRef Mutable = 0;
                                          CFTypeRef v97 = 0;
                                          int v3 = "[%{ptr}] Dropping initial metadata because it's updated %.3f secs ago.\n"
                                             + 52;
                                          unint64_t v95 = 0x1EA627000uLL;
                                          goto LABEL_201;
                                        }
                                        uint64_t v90 = *v81;
                                        uint64_t v91 = *(void *)(CMBaseObjectGetVTable() + 16);
                                        if (v91) {
                                          uint64_t v92 = v91;
                                        }
                                        else {
                                          uint64_t v92 = 0;
                                        }
                                        uint64_t v117 = *(uint64_t (**)(uint64_t))(v92 + 8);
                                        if (!v117)
                                        {
                                          int TransportStreamIDAndQuality = -12782;
                                          goto LABEL_200;
                                        }
                                        int TransportStreamIDAndQuality = v117(v90);
                                        if (TransportStreamIDAndQuality) {
                                          goto LABEL_200;
                                        }
                                        int v60 = APSGetFBOPropertyInt64();
                                        if (TransportStreamIDAndQuality) {
                                          goto LABEL_200;
                                        }
                                        int v190 = 1;
                                      }
                                      else
                                      {
                                        if (v57 == 100
                                          && CFEqual(AudioType, @"speechRecognition")
                                          && !*(void *)(v53 + 368))
                                        {
                                          CFTypeRef cf = (CFTypeRef)v52;
                                          uint64_t v187 = v51;
                                          if (gLogCategory_APEndpointStreamCarPlayAudio <= 50
                                            && (gLogCategory_APEndpointStreamCarPlayAudio != -1
                                             || _LogCategory_Initialize()))
                                          {
                                            uint64_t v61 = (void *)v53;
                                            LogPrintF();
                                          }
                                          else
                                          {
                                            uint64_t v61 = (void *)v53;
                                          }
                                          int v191 = 0;
                                          int v62 = 0;
                                          int v190 = 0;
                                          goto LABEL_99;
                                        }
                                        int v190 = 0;
                                        int v60 = 0;
                                      }
                                      int v191 = v60;
                                      if (!*(void *)(v53 + 368))
                                      {
                                        int v188 = 0;
                                        goto LABEL_104;
                                      }
                                      uint64_t v187 = v51;
                                      uint64_t v61 = (void *)v53;
                                      CFTypeRef cf = (CFTypeRef)v52;
                                      int v62 = 1;
LABEL_99:
                                      *(void *)&long long v215 = 0;
                                      int v217 = 0;
                                      int TransportStreamIDAndQuality = carAudioStream_getTransportStreamIDAndQuality(v57, 1, (uint64_t *)&v215, &v217);
                                      CFDictionaryRemoveAllValues(theDict);
                                      CFDictionarySetInt64();
                                      CFTypeID v63 = (const void *)*MEMORY[0x1E4F22028];
                                      CFUUIDRef v64 = CFUUIDGetConstantUUIDWithBytes(0, 0x26u, 0x5Au, 0xC5u, 0x1Bu, 0x30u, 0xC0u, 0x40u, 0xADu, 0x90u, 0xC8u, 0xF6u, 0x9Cu, 0x26u, 0xD1u, 0x88u, 0x26u);
                                      CFDictionarySetValue(theDict, v63, v64);
                                      uint64_t v65 = v61[12];
                                      uint64_t v66 = v215;
                                      uint64_t v67 = *(void *)(CMBaseObjectGetVTable() + 16);
                                      if (v67) {
                                        uint64_t v68 = v67;
                                      }
                                      else {
                                        uint64_t v68 = 0;
                                      }
                                      uint64_t v75 = *(uint64_t (**)(uint64_t, uint64_t, __CFDictionary *, void *))(v68 + 64);
                                      if (v75)
                                      {
                                        uint64_t v76 = v61 + 48;
                                        int TransportStreamIDAndQuality = v75(v65, v66, theDict, v61 + 48);
                                        if (!TransportStreamIDAndQuality)
                                        {
                                          uint64_t v77 = *v76;
                                          uint64_t v78 = *(void *)(CMBaseObjectGetVTable() + 16);
                                          if (v78) {
                                            uint64_t v79 = v78;
                                          }
                                          else {
                                            uint64_t v79 = 0;
                                          }
                                          int v85 = *(uint64_t (**)(uint64_t, void, void, CFTypeRef))(v79 + 24);
                                          if (v85)
                                          {
                                            int TransportStreamIDAndQuality = v85(v77, carAudioStream_handleIncomingInputDataMessage, 0, cf);
                                            if (!TransportStreamIDAndQuality)
                                            {
                                              uint64_t v86 = *v76;
                                              uint64_t v87 = *(void *)(CMBaseObjectGetVTable() + 16);
                                              if (v87) {
                                                uint64_t v88 = v87;
                                              }
                                              else {
                                                uint64_t v88 = 0;
                                              }
                                              int v93 = *(uint64_t (**)(uint64_t))(v88 + 8);
                                              if (v93)
                                              {
                                                int TransportStreamIDAndQuality = v93(v86);
                                                if (!TransportStreamIDAndQuality)
                                                {
                                                  kdebug_trace();
                                                  int TransportStreamIDAndQuality = FigTransportStreamWaitUntilConnected(*v76);
                                                  if (!TransportStreamIDAndQuality)
                                                  {
                                                    kdebug_trace();
                                                    int v188 = APSGetFBOPropertyInt64();
                                                    if (!TransportStreamIDAndQuality)
                                                    {
                                                      if (v62)
                                                      {
                                                        CFAllocatorRef v94 = CFGetAllocator(cf);
                                                        APSRTPPacketHandlerCreate(v94, 2, 2u, 0, v61 + 49);
                                                      }
                                                      kdebug_trace();
                                                      uint64_t v52 = (uint64_t)cf;
                                                      uint64_t v53 = (uint64_t)v61;
                                                      uint64_t v51 = v187;
LABEL_104:
                                                      if (!v197
                                                        || !CFDictionaryContainsKey(v197, @"StreamStartTimestamp")
                                                        || (CFDictionaryGetInt64(), !TransportStreamIDAndQuality)
                                                        && (int TransportStreamIDAndQuality = APSNetworkClockNTPConvertUpTicksToNTP()) == 0)
                                                      {
                                                        if (v57 == 107)
                                                        {
                                                          uint64_t v74 = FigCFWeakReferenceHolderCopyReferencedObject();
                                                          if (v74 && !v54 && !APSGetFBOPropertyInt64()) {
                                                            FigGetCFPreferenceNumberWithDefault();
                                                          }
                                                        }
                                                        else
                                                        {
                                                          uint64_t v74 = 0;
                                                        }
                                                        v189 = (const void *)v74;
                                                        CFTypeRef cfa = (CFTypeRef)v52;
                                                        CFDictionaryRef v198 = (CFDictionaryRef)v53;
                                                        uint64_t v186 = v218;
                                                        CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v55, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
                                                        if (!Mutable)
                                                        {
                                                          APSLogErrorAt();
                                                          int TransportStreamIDAndQuality = -6728;
                                                          APSLogErrorAt();
                                                          int v3 = "[%{ptr}] Dropping initial metadata because it's updated %.3f secs ago.\n"
                                                             + 52;
                                                          unint64_t v95 = 0x1EA627000;
                                                          goto LABEL_184;
                                                        }
                                                        int v98 = APCarPlayAudioFormatInfoGetStreamType(v51);
                                                        CFTypeRef v99 = (const void *)APCarPlayAudioFormatInfoGetAudioType(v51);
                                                        APCarPlayAudioFormatInfoGetDescription(v51);
                                                        APCarPlayAudioFormatInfoGetAudioFormat(v51);
                                                        APCarPlayAudioFormatInfoGetLatencyInfo(v51);
                                                        CFDictionarySetValue(Mutable, @"audioType", v99);
                                                        CFDictionarySetInt64();
                                                        CFDictionarySetInt64();
                                                        if (v192 && v98 == 100 && CFEqual(v99, @"telephony")) {
                                                          CFDictionarySetValue(Mutable, @"vocoderInfo", v192);
                                                        }
                                                        if (v191 >= 1)
                                                        {
                                                          CFDictionarySetInt64();
                                                          CFDictionarySetInt64();
                                                        }
                                                        CFTypeRef v100 = (const void *)*MEMORY[0x1E4F1CFD0];
                                                        if (v188 >= 1)
                                                        {
                                                          CFDictionarySetValue(Mutable, @"input", (const void *)*MEMORY[0x1E4F1CFD0]);
                                                          CFDictionarySetInt64();
                                                        }
                                                        CFDictionarySetValue(Mutable, @"supportsHighAccuracyTimestamps", v100);
                                                        if (v194) {
                                                          CFDictionarySetValue(Mutable, @"supportsRTPPacketRedundancy", v100);
                                                        }
                                                        BOOL v101 = v98 == 107;
                                                        uint64_t v52 = (uint64_t)cfa;
                                                        if (v101)
                                                        {
                                                          if (v186) {
                                                            CFDictionarySetInt64();
                                                          }
                                                          CFDictionarySetInt64();
                                                        }
                                                        int TransportStreamIDAndQuality = 0;
                                                        uint64_t v102 = *(void *)(v53 + 96);
                                                        uint64_t v103 = *(void *)(CMBaseObjectGetVTable() + 16);
                                                        if (v103) {
                                                          uint64_t v104 = v103;
                                                        }
                                                        else {
                                                          uint64_t v104 = 0;
                                                        }
                                                        uint64_t v105 = *(uint64_t (**)(uint64_t, uint64_t, __CFDictionary *, CFTypeRef *, uint64_t, uint64_t))(v104 + 40);
                                                        if (!v105)
                                                        {
                                                          int TransportStreamIDAndQuality = -12782;
                                                          goto LABEL_183;
                                                        }
                                                        v193 = v100;
                                                        int TransportStreamIDAndQuality = v105(v102, v57, Mutable, &v220, v53 + 448, v53 + 376);
                                                        if (!TransportStreamIDAndQuality)
                                                        {
                                                          kdebug_trace();
                                                          *(void *)(v53 + 520) = CFDictionaryGetInt64();
                                                          if (!*(void *)(v53 + 432))
                                                          {
LABEL_314:
                                                            if (!v190) {
                                                              goto LABEL_321;
                                                            }
                                                            CFDictionaryGetInt64();
                                                            if (!TransportStreamIDAndQuality)
                                                            {
                                                              int TransportStreamIDAndQuality = APSSetFBOPropertyInt64();
                                                              if (!TransportStreamIDAndQuality)
                                                              {
                                                                int TransportStreamIDAndQuality = APAudioEngineSetProperty(*(void *)(v53 + 16), @"cryptor", *(void *)(v53 + 448));
                                                                if (!TransportStreamIDAndQuality)
                                                                {
                                                                  APCarPlayAudioFormatInfoGetDescription(v51);
                                                                  APCarPlayAudioFormatInfoGetLatencyInfo(v51);
                                                                  APSSetFBOPropertyInt64();
                                                                  if (!TransportStreamIDAndQuality)
                                                                  {
                                                                    uint64_t v164 = *(void *)(v53 + 16);
                                                                    uint64_t AudioFormat = APCarPlayAudioFormatInfoGetAudioFormat(v51);
                                                                    int TransportStreamIDAndQuality = APAudioEngineRegisterStream(v164, (uint64_t)cfa, AudioFormat, (uint64_t)v226);
                                                                    if (!TransportStreamIDAndQuality)
                                                                    {
                                                                      *(unsigned char *)(v53 + 472) = 1;
LABEL_321:
                                                                      v166 = (void *)CMBaseObjectGetDerivedStorage();
                                                                      v167 = (char *)(v166 + 25);
                                                                      if (!FigCFDictionaryGetBooleanIfPresent()) {
                                                                        char *v167 = 0;
                                                                      }
                                                                      uint64_t v168 = v166[46];
                                                                      v169 = (const void **)MEMORY[0x1E4F1CFC8];
                                                                      if (v168
                                                                        && (*v167
                                                                          ? (v170 = v193)
                                                                          : (v170 = (const void *)*MEMORY[0x1E4F1CFC8]),
                                                                            (uint64_t v171 = *(void *)(CMBaseObjectGetVTable()
                                                                                              + 8)) == 0
                                                                          ? (uint64_t v172 = 0)
                                                                          : (uint64_t v172 = v171),
                                                                            (v173 = *(uint64_t (**)(uint64_t, void, const void *))(v172 + 56)) != 0
                                                                         && (int v174 = v173(v168, *MEMORY[0x1E4F203A8], v170), v174 != -12784)&& (v175 = v174, v174 != -12782)&& v174))
                                                                      {
                                                                        APSLogErrorAt();
                                                                        int v3 = "[%{ptr}] Dropping initial metadata because "
                                                                             "it's updated %.3f secs ago.\n"
                                                                           + 52;
                                                                        unint64_t v95 = 0x1EA627000;
                                                                      }
                                                                      else
                                                                      {
                                                                        char v176 = *v167;
                                                                        BOOL v101 = v57 == 102;
                                                                        unint64_t v95 = 0x1EA627000uLL;
                                                                        if (!v101)
                                                                        {
LABEL_345:
                                                                          APAudioZeroTimeStampProviderSetHighAccuracySupport(v166[7], v176);
                                                                          if (gLogCategory_APEndpointStreamCarPlayAudio <= 50
                                                                            && (gLogCategory_APEndpointStreamCarPlayAudio != -1
                                                                             || _LogCategory_Initialize()))
                                                                          {
                                                                            LogPrintF();
                                                                          }
                                                                          int TransportStreamIDAndQuality = 0;
                                                                          CFDictionaryRef v183 = v198;
                                                                          if (!FigCFDictionaryGetDoubleIfPresent()
                                                                            || !FigCFDictionaryGetInt64IfPresent()
                                                                            || v223 == 0.0 && !v222)
                                                                          {
                                                                            APAudioZeroTimeStampProviderReset(*((void *)v198 + 7));
                                                                            v184 = (double *)APCarPlayAudioFormatInfoGetDescription(*((void *)v198 + 24));
                                                                            carAudioStream_updateZeroTimeFromSampleRate(*v184);
                                                                            int v3 = "[%{ptr}] Dropping initial metadata beca"
                                                                                 "use it's updated %.3f secs ago.\n"
                                                                               + 52;
                                                                            goto LABEL_358;
                                                                          }
                                                                          FigCFDictionaryGetInt64IfPresent();
                                                                          int TransportStreamIDAndQuality = APSNetworkClockNTPConvertNTPToUpTicks();
                                                                          int v3 = "[%{ptr}] Dropping initial metadata becaus"
                                                                               "e it's updated %.3f secs ago.\n"
                                                                             + 52;
                                                                          if (!TransportStreamIDAndQuality)
                                                                          {
                                                                            carAudioStream_updateZeroTimeFromPhaseValues(v223, (uint64_t)cfa, v222, v221);
                                                                            CFDictionaryRef v183 = v198;
LABEL_358:
                                                                            *((void *)v183 + 23) = CFDictionaryGetInt64();
                                                                            if (gLogCategory_APEndpointStreamCarPlayAudio <= 50)
                                                                            {
                                                                              CFTypeRef v97 = v189;
                                                                              if (gLogCategory_APEndpointStreamCarPlayAudio != -1
                                                                                || _LogCategory_Initialize())
                                                                              {
                                                                                LogPrintF();
                                                                              }
                                                                              goto LABEL_201;
                                                                            }
                                                                            goto LABEL_184;
                                                                          }
                                                                          goto LABEL_351;
                                                                        }
                                                                        uint64_t v177 = v166[2];
                                                                        if (*v167) {
                                                                          v178 = *v169;
                                                                        }
                                                                        else {
                                                                          v178 = v193;
                                                                        }
                                                                        uint64_t v179 = *(void *)(CMBaseObjectGetVTable() + 8);
                                                                        if (v179) {
                                                                          uint64_t v180 = v179;
                                                                        }
                                                                        else {
                                                                          uint64_t v180 = 0;
                                                                        }
                                                                        v181 = *(uint64_t (**)(uint64_t, __CFString *, const void *))(v180 + 56);
                                                                        if (v181)
                                                                        {
                                                                          int v182 = v181(v177, @"ForceZeroBasedSampleTimes", v178);
                                                                          if (!v182)
                                                                          {
                                                                            char v176 = *v167;
                                                                            goto LABEL_345;
                                                                          }
                                                                          int v175 = v182;
                                                                        }
                                                                        else
                                                                        {
                                                                          int v175 = -12782;
                                                                        }
                                                                        APSLogErrorAt();
                                                                        int v3 = "[%{ptr}] Dropping initial metadata because "
                                                                             "it's updated %.3f secs ago.\n"
                                                                           + 52;
                                                                      }
                                                                      int TransportStreamIDAndQuality = v175;
LABEL_351:
                                                                      APSLogErrorAt();
                                                                      goto LABEL_184;
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                            goto LABEL_183;
                                                          }
                                                          long long v215 = 0u;
                                                          long long v216 = 0u;
                                                          *(void *)&long long v215 = CFRetain(v199);
                                                          *((void *)&v215 + 1) = MEMORY[0x1E4F1C278];
                                                          *(void *)&long long v216 = carAudioStream_acquireMessageBacking;
                                                          *((void *)&v216 + 1) = carAudioStream_relinquishMessageBacking;
                                                          int TransportStreamIDAndQuality = carAudioStream_getTransportStreamIDAndQuality(v57, 0, &v225, &v224);
                                                          if (TransportStreamIDAndQuality) {
                                                            goto LABEL_183;
                                                          }
                                                          CFDictionaryRemoveAllValues(theDict);
                                                          CFDictionarySetInt64();
                                                          CFDictionarySetInt64();
                                                          v106 = (const void *)*MEMORY[0x1E4F22028];
                                                          CFUUIDRef v107 = CFUUIDGetConstantUUIDWithBytes(0, 0x26u, 0x5Au, 0xC5u, 0x1Bu, 0x30u, 0xC0u, 0x40u, 0xADu, 0x90u, 0xC8u, 0xF6u, 0x9Cu, 0x26u, 0xD1u, 0x88u, 0x26u);
                                                          CFDictionarySetValue(theDict, v106, v107);
                                                          uint64_t v108 = *(void *)(v53 + 96);
                                                          uint64_t v109 = v225;
                                                          uint64_t v110 = *(void *)(CMBaseObjectGetVTable() + 16);
                                                          if (v110) {
                                                            uint64_t v111 = v110;
                                                          }
                                                          else {
                                                            uint64_t v111 = 0;
                                                          }
                                                          uint64_t v112 = *(uint64_t (**)(uint64_t, uint64_t, __CFDictionary *, uint64_t))(v111 + 64);
                                                          if (!v112)
                                                          {
                                                            int TransportStreamIDAndQuality = -12782;
                                                            goto LABEL_183;
                                                          }
                                                          v113 = (uint64_t *)(v53 + 464);
                                                          int TransportStreamIDAndQuality = v112(v108, v109, theDict, v53 + 464);
                                                          if (TransportStreamIDAndQuality) {
                                                            goto LABEL_183;
                                                          }
                                                          CFDictionaryGetInt64();
                                                          if (TransportStreamIDAndQuality) {
                                                            goto LABEL_183;
                                                          }
                                                          int TransportStreamIDAndQuality = APSSetFBOPropertyInt64();
                                                          if (TransportStreamIDAndQuality) {
                                                            goto LABEL_183;
                                                          }
                                                          uint64_t v114 = *v113;
                                                          uint64_t v115 = *(void *)(CMBaseObjectGetVTable() + 16);
                                                          if (v115) {
                                                            uint64_t v116 = v115;
                                                          }
                                                          else {
                                                            uint64_t v116 = 0;
                                                          }
                                                          v157 = *(uint64_t (**)(uint64_t))(v116 + 8);
                                                          if (!v157)
                                                          {
                                                            int TransportStreamIDAndQuality = -12782;
                                                            goto LABEL_183;
                                                          }
                                                          int TransportStreamIDAndQuality = v157(v114);
                                                          if (!TransportStreamIDAndQuality)
                                                          {
                                                            kdebug_trace();
                                                            uint64_t v158 = *v113;
                                                            uint64_t v159 = *(void *)(CMBaseObjectGetVTable() + 16);
                                                            if (v159) {
                                                              uint64_t v160 = v159;
                                                            }
                                                            else {
                                                              uint64_t v160 = 0;
                                                            }
                                                            v161 = *(uint64_t (**)(uint64_t))(v160 + 16);
                                                            if (!v161)
                                                            {
                                                              int TransportStreamIDAndQuality = -12782;
                                                              goto LABEL_183;
                                                            }
                                                            int TransportStreamIDAndQuality = v161(v158);
                                                            if (TransportStreamIDAndQuality) {
                                                              goto LABEL_183;
                                                            }
                                                            kdebug_trace();
                                                            FigCFDictionaryGetBooleanIfPresent();
                                                            if (gLogCategory_APEndpointStreamCarPlayAudio <= 50
                                                              && (gLogCategory_APEndpointStreamCarPlayAudio != -1
                                                               || _LogCategory_Initialize()))
                                                            {
                                                              LogPrintF();
                                                            }
                                                            unsigned int v162 = v194 && v219 != 0 ? 2 : 1;
                                                            CFAllocatorRef v163 = CFGetAllocator(cfa);
                                                            int TransportStreamIDAndQuality = APSRTPPacketHandlerCreate(v163, 1, v162, (uint64_t)&v215, (uint64_t *)(v53 + 488));
                                                            if (TransportStreamIDAndQuality) {
                                                              goto LABEL_183;
                                                            }
                                                            goto LABEL_314;
                                                          }
                                                        }
LABEL_183:
                                                        APSLogErrorAt();
                                                        int v3 = "[%{ptr}] Dropping initial metadata because it's updated %.3f secs ago.\n"
                                                           + 52;
                                                        unint64_t v95 = 0x1EA627000;
LABEL_184:
                                                        CFTypeRef v97 = v189;
                                                        goto LABEL_201;
                                                      }
                                                      goto LABEL_200;
                                                    }
                                                  }
                                                }
                                              }
                                              else
                                              {
                                                int TransportStreamIDAndQuality = -12782;
                                              }
                                            }
                                          }
                                          else
                                          {
                                            int TransportStreamIDAndQuality = -12782;
                                          }
                                        }
                                      }
                                      else
                                      {
                                        int TransportStreamIDAndQuality = -12782;
                                      }
                                      APSLogErrorAt();
                                      int v3 = "[%{ptr}] Dropping initial metadata because it's updated %.3f secs ago.\n"
                                         + 52;
                                      unint64_t v95 = 0x1EA627000;
                                      uint64_t v52 = (uint64_t)cf;
                                      CFMutableDictionaryRef Mutable = 0;
                                      CFTypeRef v97 = 0;
LABEL_201:
                                      if (TransportStreamIDAndQuality) {
                                        carAudioStream_teardownTransportStreams(v52, 0);
                                      }
                                      CFRelease(v199);
                                      if (v97) {
                                        CFRelease(v97);
                                      }
                                      CFRelease(theDict);
                                      if (Mutable) {
                                        CFRelease(Mutable);
                                      }
LABEL_207:
                                      if (v220) {
                                        CFRelease(v220);
                                      }
                                      int inited = TransportStreamIDAndQuality;
                                      if (TransportStreamIDAndQuality) {
                                        goto LABEL_266;
                                      }
                                      if (APCarPlayAudioFormatInfoGetStreamType(*(void *)(*(void *)(a1[7] + 8) + 24)) == 102)
                                      {
                                        uint64_t v118 = CMBaseObjectGetDerivedStorage();
                                        *(void *)(v118 + 536) = 0;
                                        *(void *)(v118 + 528) = 0;
                                      }
                                      if (APCarPlayAudioFormatInfoGetStreamType(*(void *)(*(void *)(a1[7] + 8) + 24)) != 107)
                                      {
                                        if (APCarPlayAudioFormatInfoGetDescription(*(void *)(*(void *)(a1[7] + 8)
                                                                                              + 24)))
                                        {
                                          uint64_t v119 = *(void *)(a1[9] + 88);
                                          int v120 = (double *)APCarPlayAudioFormatInfoGetDescription(*(void *)(*(void *)(a1[7] + 8) + 24));
                                          int inited = APCarPlayAnalyticsInitASRCollection(v119, *v120);
                                          if (inited)
                                          {
                                            int v121 = *(_DWORD *)(v95 + 2992);
                                            if (v121 <= 60 && (v121 != -1 || _LogCategory_Initialize()))
                                            {
                                              APCarPlayAudioFormatInfoGetDescription(*(void *)(*(void *)(a1[7] + 8)
                                                                                               + 24));
                                              LogPrintF();
                                            }
                                            int inited = 0;
                                          }
                                        }
                                        int inited = APCarPlayAnalyticsInitAudioAnomaliesCollection(*(void *)(a1[9] + 88));
                                        if (inited)
                                        {
                                          int v122 = *(_DWORD *)(v95 + 2992);
                                          if (v122 <= 60 && (v122 != -1 || _LogCategory_Initialize())) {
                                            LogPrintF();
                                          }
                                          int inited = 0;
                                        }
                                        uint64_t v123 = *(void *)(a1[9] + 88);
                                        int v124 = APCarPlayAudioFormatInfoGetStreamType(*(void *)(*(void *)(a1[7] + 8)
                                                                                               + 24));
                                        APCarPlayAnalyticsStartCollections(v123, v124, *(void *)(a1[9] + 520), 0);
                                      }
                                      uint64_t v125 = a1[9];
                                      if (*(void *)(v125 + 368))
                                      {
                                        v126 = *(NSObject **)(v125 + 352);
                                        v204[0] = MEMORY[0x1E4F143A8];
                                        v204[1] = 0x40000000;
                                        v204[2] = __carAudioStream_resume_block_invoke_4;
                                        v204[3] = &__block_descriptor_tmp_131;
                                        v204[4] = v125;
                                        dispatch_async(v126, v204);
                                      }
                                      int v127 = APCarPlayAudioFormatInfoGetStreamType(*(void *)(*(void *)(a1[7] + 8)
                                                                                             + 24));
                                      v128 = (void *)a1[9];
                                      if (v127 == 102)
                                      {
                                        uint64_t v129 = v128[2];
                                        uint64_t v130 = *(void *)(CMBaseObjectGetVTable() + 16);
                                        if (v130) {
                                          uint64_t v131 = v130;
                                        }
                                        else {
                                          uint64_t v131 = 0;
                                        }
                                        v136 = *(uint64_t (**)(uint64_t))(v131 + 24);
                                        if (v136)
                                        {
                                          int inited = v136(v129);
                                          if (!inited) {
                                            goto LABEL_238;
                                          }
                                        }
                                        else
                                        {
                                          int inited = -12782;
                                        }
                                        goto LABEL_266;
                                      }
                                      if (!v128[54])
                                      {
LABEL_238:
                                        int v27 = 0;
LABEL_239:
                                        uint64_t v137 = CMBaseObjectGetDerivedStorage();
                                        if (CFEqual(*(CFTypeRef *)(v137 + 40), (CFTypeRef)*MEMORY[0x1E4F21440])
                                          || FigCFEqual()
                                          || FigCFEqual()
                                          || FigCFEqual())
                                        {
                                          APSEventRecorderRecordEvent();
                                        }
                                        else
                                        {
                                          APSLogErrorAt();
                                        }
                                        *(unsigned char *)(a1[9] + 176) = 1;
                                        int v156 = *(_DWORD *)(v95 + 2992);
                                        if (v156 <= 50 && (v156 != -1 || _LogCategory_Initialize())) {
                                          LogPrintF();
                                        }
LABEL_55:
                                        if (!inited) {
                                          goto LABEL_57;
                                        }
                                        goto LABEL_56;
                                      }
                                      v132 = v128[52];
                                      v203[0] = MEMORY[0x1E4F143A8];
                                      v203[1] = 0x40000000;
                                      v203[2] = __carAudioStream_resume_block_invoke_5;
                                      v203[3] = &unk_1E6891670;
                                      v203[4] = a1[7];
                                      v203[5] = v128;
                                      dispatch_async(v132, v203);
                                      uint64_t v133 = *(void *)(a1[9] + 448);
                                      uint64_t v134 = APCarPlayAudioFormatInfoGetDescription(*(void *)(*(void *)(a1[7] + 8)
                                                                                              + 24));
                                      if (*(_DWORD *)(v134 + 20) <= 1u)
                                      {
                                        uint64_t v138 = v134;
                                        if (v133
                                          && ((uint64_t v139 = *(void *)(CMBaseObjectGetVTable() + 16)) == 0
                                            ? (uint64_t v140 = 0)
                                            : (uint64_t v140 = v139),
                                              (v141 = *(uint64_t (**)(uint64_t))(v140 + 8)) != 0))
                                        {
                                          unsigned int v142 = 1440 - v141(v133);
                                        }
                                        else
                                        {
                                          unsigned int v142 = 1440;
                                        }
                                        uint64_t v135 = v142 / *(_DWORD *)(v138 + 16);
                                        if ((double)(1000 * v135) / *(double *)v138 > 7.5) {
                                          uint64_t v135 = (*(double *)v138 * 7.5 / 1000.0);
                                        }
                                      }
                                      else
                                      {
                                        uint64_t v135 = 1;
                                      }
                                      uint64_t v143 = a1[9];
                                      *(_DWORD *)(v143 + 440) = v135;
                                      uint64_t v144 = *(void *)(v143 + 432);
                                      uint64_t v145 = *(void *)(v143 + 416);
                                      uint64_t v146 = a1[10];
                                      v147 = *(void **)(CMBaseObjectGetVTable() + 16);
                                      if (v147) {
                                        v148 = v147;
                                      }
                                      else {
                                        v148 = 0;
                                      }
                                      if (*v148 < 2uLL)
                                      {
                                        int v153 = -12781;
                                      }
                                      else
                                      {
                                        v149 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void (*)(const void *), uint64_t))v148[3];
                                        if (v149)
                                        {
                                          int inited = v149(v144, v135, v145, carAudioStreamHandleDataReady, v146);
                                          if (!inited)
                                          {
                                            dispatch_suspend(*(dispatch_object_t *)(a1[9] + 416));
                                            uint64_t v150 = *(void *)(a1[9] + 432);
                                            v151 = *(void **)(CMBaseObjectGetVTable() + 16);
                                            if (v151) {
                                              v152 = v151;
                                            }
                                            else {
                                              v152 = 0;
                                            }
                                            if (*v152 < 2uLL)
                                            {
                                              int v155 = -12781;
                                            }
                                            else
                                            {
                                              v154 = (uint64_t (*)(uint64_t))v152[4];
                                              if (v154)
                                              {
                                                int inited = v154(v150);
                                                if (!inited)
                                                {
                                                  int v27 = 1;
                                                  goto LABEL_239;
                                                }
LABEL_283:
                                                APSLogErrorAt();
                                                int v27 = 1;
                                                goto LABEL_55;
                                              }
                                              int v155 = -12782;
                                            }
                                            int inited = v155;
                                            goto LABEL_283;
                                          }
LABEL_266:
                                          APSLogErrorAt();
LABEL_267:
                                          int v27 = 0;
                                          goto LABEL_55;
                                        }
                                        int v153 = -12782;
                                      }
                                      int inited = v153;
                                      goto LABEL_266;
                                    }
                                    APSLogErrorAt();
                                    int TransportStreamIDAndQuality = -16760;
                                    carAudioStream_teardownTransportStreams(v52, 0);
                                    CFRelease(v199);
                                    v185 = theDict;
                                  }
                                  else
                                  {
                                    APSLogErrorAt();
                                    int TransportStreamIDAndQuality = -16761;
                                    carAudioStream_teardownTransportStreams(v52, 0);
                                    v185 = (__CFDictionary *)v199;
                                  }
                                  CFRelease(v185);
                                }
                                else
                                {
                                  APSLogErrorAt();
                                  int TransportStreamIDAndQuality = -16761;
                                  carAudioStream_teardownTransportStreams(v52, 0);
                                }
                                int v3 = "[%{ptr}] Dropping initial metadata because it's updated %.3f secs ago.\n" + 52;
                                unint64_t v95 = 0x1EA627000;
                                goto LABEL_207;
                              }
                              int v18 = v48;
                            }
                          }
                        }
                      }
                      else
                      {
                        int v18 = -12782;
                      }
                    }
                    goto LABEL_53;
                  }
                  int v18 = v29;
                }
                else
                {
                  int v18 = -12782;
                }
              }
            }
          }
          else
          {
            int v18 = -12782;
          }
        }
      }
    }
LABEL_53:
    APSLogErrorAt();
LABEL_54:
    carAudioStream_teardownAudioProcessing();
    int inited = v18;
    APSLogErrorAt();
    int v27 = 0;
    int v3 = "ted %.3f secs ago.\n";
    goto LABEL_55;
  }
  APSLogErrorAt();
LABEL_35:
  int v27 = 0;
  int inited = -6709;
LABEL_56:
  carAudioStream_suspendInternal(a1[10], 0);
LABEL_57:
  if (v27) {
    dispatch_resume(*(dispatch_object_t *)(a1[9] + 416));
  }
  CFRetain((CFTypeRef)a1[10]);
  uint64_t v35 = *(NSObject **)(a1[9] + 112);
  v201[0] = MEMORY[0x1E4F143A8];
  v201[1] = *((void *)v3 + 177);
  v201[2] = __carAudioStream_resume_block_invoke_6;
  v201[3] = &__block_descriptor_tmp_134;
  uint64_t v36 = a1[10];
  uint64_t v37 = a1[13];
  v201[4] = a1[12];
  v201[5] = v36;
  int v202 = inited;
  v201[6] = v37;
  dispatch_async(v35, v201);
  uint64_t v38 = *(const void **)(*(void *)(a1[5] + 8) + 24);
  if (v38) {
    CFRelease(v38);
  }
  uint64_t v39 = *(const void **)(*(void *)(a1[6] + 8) + 24);
  if (v39) {
    CFRelease(v39);
  }
  uint64_t v40 = *(const void **)(*(void *)(a1[7] + 8) + 24);
  if (v40) {
    CFRelease(v40);
  }
  uint64_t v41 = *(const void **)(*(void *)(a1[8] + 8) + 24);
  if (v41) {
    CFRelease(v41);
  }
  char v42 = (const void *)a1[11];
  if (v42) {
    CFRelease(v42);
  }
  CFRelease((CFTypeRef)a1[10]);
  if (v5) {
    CFRelease(v5);
  }
  _Block_object_dispose(&v206, 8);
  _Block_object_dispose(&v210, 8);
}

void *__carAudioStream_resume_block_invoke_3(void *result)
{
  *(unsigned char *)(*(void *)(result[4] + 8) + 24) = *(unsigned char *)(result[7] + 128);
  *(unsigned char *)(*(void *)(result[5] + 8) + 24) = *(_DWORD *)(*(void *)(result[6] + 8) + 24) == *(_DWORD *)(result[7] + 132);
  return result;
}

CFTypeRef __carAudioStream_resume_block_invoke_4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = *(const void **)(v2 + 392);
  if (v3)
  {
    CFRetain(v3);
    uint64_t v2 = *(void *)(a1 + 32);
  }
  CFTypeRef v4 = *(const void **)(v2 + 368);
  if (v4)
  {
    CFRetain(v4);
    uint64_t v2 = *(void *)(a1 + 32);
  }
  CFTypeRef result = *(CFTypeRef *)(v2 + 376);
  if (result)
  {
    CFTypeRef result = CFRetain(result);
    uint64_t v2 = *(void *)(a1 + 32);
  }
  *(unsigned char *)(v2 + 360) = 1;
  return result;
}

uint64_t __carAudioStream_resume_block_invoke_5(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  *(unsigned char *)(v2 + 424) = 1;
  *(_DWORD *)(v2 + 496) = 0;
  APCarPlayAudioFormatInfoGetDescription(*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24));
  uint64_t result = APSAudioStatsCreate();
  *(void *)(*(void *)(a1 + 40) + 512) = 0;
  return result;
}

void carAudioStreamHandleDataReady(const void *a1)
{
  if (!*(unsigned char *)(CMBaseObjectGetDerivedStorage() + 424)) {
    return;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v66 = 0;
  memset(v67, 0, 10);
  CFUUIDRef v64 = 0;
  unint64_t v65 = 0;
  uint64_t v63 = 0;
  int v62 = 0;
  uint64_t v60 = 0;
  uint64_t v61 = 0;
  v59[0] = 0;
  v59[1] = 0;
  memset(v58, 0, sizeof(v58));
  unsigned int v57 = 0;
  DescriptioCFIndex n = APCarPlayAudioFormatInfoGetDescription(*(void *)(DerivedStorage + 192));
  uint64_t v4 = *(void *)(DerivedStorage + 432);
  uint64_t v5 = *(unsigned int *)(DerivedStorage + 440);
  uint64_t v6 = *(void **)(CMBaseObjectGetVTable() + 16);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  if (*v7 < 2uLL || (unint64_t v8 = (unsigned int (*)(uint64_t, uint64_t))v7[8]) != 0 && !v8(v4, v5))
  {
    double v11 = 0;
    EmptyBBuf = 0;
    goto LABEL_57;
  }
  EmptyBBuf = (int *)APSRTPPacketHandlerGetEmptyBBuf(*(void *)(DerivedStorage + 488));
  unint64_t v10 = APSRTPPacketHandlerGetEmptyBBuf(*(void *)(DerivedStorage + 488));
  double v11 = v10;
  uint64_t v12 = *(unsigned int *)(DerivedStorage + 496);
  if (!EmptyBBuf || !v10)
  {
    if (!v12
      && gLogCategory_APEndpointStreamCarPlayAudio <= 90
      && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    ++*(_DWORD *)(DerivedStorage + 496);
LABEL_57:
    uint64_t v33 = *(void *)(DerivedStorage + 432);
    int v34 = *(void **)(CMBaseObjectGetVTable() + 16);
    if (v34) {
      uint64_t v35 = v34;
    }
    else {
      uint64_t v35 = 0;
    }
    if (*v35 >= 2uLL)
    {
      uint64_t v36 = (void (*)(uint64_t, void, void, void, void, uint64_t *, int *, _OWORD *, uint64_t))v35[9];
      if (v36) {
        v36(v33, 0, 0, 0, 0, &v63, &v62, v58, v47);
      }
    }
    if (!EmptyBBuf) {
      goto LABEL_65;
    }
    goto LABEL_64;
  }
  if (v12)
  {
    if (gLogCategory_APEndpointStreamCarPlayAudio <= 90)
    {
      if (gLogCategory_APEndpointStreamCarPlayAudio == -1)
      {
        if (!_LogCategory_Initialize()) {
          goto LABEL_20;
        }
        uint64_t v12 = *(unsigned int *)(DerivedStorage + 496);
      }
      uint64_t v47 = v12;
      LogPrintF();
    }
LABEL_20:
    *(_DWORD *)(DerivedStorage + 496) = 0;
  }
  if (APSTransportMessageGetAudioDataPointer()) {
    goto LABEL_82;
  }
  uint64_t v13 = *(void *)(DerivedStorage + 448);
  if (!v13)
  {
    unint64_t v50 = 0;
    unint64_t v16 = v65;
    goto LABEL_32;
  }
  uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 16);
  uint64_t v15 = v14 ? v14 : 0;
  int v17 = *(uint64_t (**)(uint64_t))(v15 + 8);
  unint64_t v18 = v17 ? v17(v13) : 0;
  unint64_t v16 = v65 - v18;
  if (v65 <= v18)
  {
LABEL_82:
    APSLogErrorAt();
    goto LABEL_57;
  }
  unint64_t v50 = v18;
  v65 -= v18;
LABEL_32:
  uint64_t v19 = *(void *)(DerivedStorage + 432);
  uint64_t v51 = Description;
  if (*(_DWORD *)(Description + 20) <= 1u) {
    int v20 = 0;
  }
  else {
    int v20 = v59;
  }
  uint64_t v21 = *(unsigned int *)(DerivedStorage + 440);
  uint64_t v22 = *(void **)(CMBaseObjectGetVTable() + 16);
  if (v22) {
    int v23 = v22;
  }
  else {
    int v23 = 0;
  }
  if (*v23 >= 2uLL)
  {
    uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void *, uint64_t, uint64_t *, int *, _OWORD *, uint64_t))v23[9];
    if (v24)
    {
      int v25 = v24(v19, v66, v16, v20, v21, &v63, &v62, v58, v47);
      if (v25)
      {
        if (v25 == -16774) {
          goto LABEL_64;
        }
      }
      else
      {
        APSAudioStats_ProcessAudioBuffer();
        uint64_t v26 = v51;
        if (!APSTransportMessageCreateReferencingBBufWithAudioDataLength() && v11[2])
        {
          *(_DWORD *)double v11 = carAudioStream_getRTPPayloadType(*(_DWORD *)(DerivedStorage + 68));
          __int16 v27 = *(_WORD *)(DerivedStorage + 474) + 1;
          *(_WORD *)(DerivedStorage + 474) = v27;
          LOWORD(v67[0]) = v27;
          *(_DWORD *)((char *)v67 + 6) = 0;
          unsigned int v28 = *(unsigned char *)(DerivedStorage + 200)
              ? (*(double *)v58 - (double)((unint64_t)(*(double *)v58 * 2.32830644e-10) << 32))
              : *(_DWORD *)(DerivedStorage + 480);
          *(_DWORD *)((char *)v67 + 2) = v28;
          if (!APSTransportMessageSetAudioDataHeader())
          {
            if (APSRTPPacketHandlerComposeRTPPacketWithBBuf(*(void *)(DerivedStorage + 488), v11, v50, EmptyBBuf, &v57))goto LABEL_77; {
            if (!*(void *)(DerivedStorage + 448))
            }
            {
LABEL_75:
              int v43 = *(const void **)(DerivedStorage + 488);
              if (v43) {
                CFTypeRef v44 = CFRetain(v43);
              }
              else {
                CFTypeRef v44 = 0;
              }
              CFRetain(a1);
              CFTypeRef v45 = *(CFTypeRef *)(DerivedStorage + 464);
              if (v45) {
                CFTypeRef v45 = CFRetain(v45);
              }
              uint64_t v46 = *(NSObject **)(DerivedStorage + 168);
              lengthAtOffsetOut[0] = MEMORY[0x1E4F143A8];
              lengthAtOffsetOut[1] = 0x40000000;
              lengthAtOffsetOut[2] = (size_t)__carAudioStream_sendOneAudioDataMessage_block_invoke;
              lengthAtOffsetOut[3] = (size_t)&__block_descriptor_tmp_177;
              uint64_t v54 = v67[0];
              __int16 v55 = v67[1];
              lengthAtOffsetOut[4] = DerivedStorage;
              lengthAtOffsetOut[5] = (size_t)a1;
              lengthAtOffsetOut[6] = (size_t)v45;
              lengthAtOffsetOut[7] = (size_t)EmptyBBuf;
              int v53 = v62;
              lengthAtOffsetOut[8] = (size_t)v44;
              dispatch_async(v46, lengthAtOffsetOut);
              *(void *)(DerivedStorage + 480) += (*(_DWORD *)(v26 + 20) * v62);
              return;
            }
            lengthAtOffsetOut[0] = 0;
            dataPointerOut = 0;
            if (APSTransportMessageGetAudioAADPointer()
              || CMBlockBufferGetDataPointer(*((CMBlockBufferRef *)EmptyBBuf + 2), 0, lengthAtOffsetOut, 0, &dataPointerOut))
            {
              goto LABEL_77;
            }
            size_t v29 = lengthAtOffsetOut[0];
            uint64_t v30 = v57;
            uint64_t v31 = &dataPointerOut[v57];
            dataPointerOut = v31;
            if (v50)
            {
              if (CMBlockBufferGetDataPointer(*((CMBlockBufferRef *)EmptyBBuf + 2), lengthAtOffsetOut[0] - v50, 0, 0, &v64))
              {
LABEL_77:
                APSLogErrorAt();
                double v11 = 0;
                goto LABEL_64;
              }
              uint64_t v31 = dataPointerOut;
              uint64_t v32 = v57;
              size_t v48 = lengthAtOffsetOut[0];
              BOOL v49 = v64;
            }
            else
            {
              size_t v48 = lengthAtOffsetOut[0];
              BOOL v49 = 0;
              uint64_t v32 = v57;
            }
            uint64_t v37 = *(void *)(DerivedStorage + 448);
            uint64_t v39 = v60;
            uint64_t v38 = v61;
            uint64_t v40 = *(void *)(CMBaseObjectGetVTable() + 16);
            if (v40) {
              uint64_t v41 = v40;
            }
            else {
              uint64_t v41 = 0;
            }
            char v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, char *, size_t, char *, size_t, char *, unint64_t))(v41 + 16);
            if (v42 && !v42(v37, v38, v39, v31, v29 - (v50 + v30), v31, v48 - v32, v49, v50))
            {
              uint64_t v26 = v51;
              goto LABEL_75;
            }
            goto LABEL_77;
          }
        }
      }
    }
  }
  APSLogErrorAt();
LABEL_64:
  APSRTPPacketHandlerReturnBBuf(*(void *)(DerivedStorage + 488), EmptyBBuf);
LABEL_65:
  if (v11) {
    APSRTPPacketHandlerReturnBBuf(*(void *)(DerivedStorage + 488), v11);
  }
}

void __carAudioStream_resume_block_invoke_6(uint64_t a1)
{
  uint64_t v2 = *(void (**)(void, void, void))(a1 + 32);
  if (v2) {
    v2(*(void *)(a1 + 40), *(unsigned int *)(a1 + 56), *(void *)(a1 + 48));
  }
  if (!*(_DWORD *)(a1 + 56))
  {
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterPostNotification();
  }
  int v3 = *(const void **)(a1 + 40);
  CFRelease(v3);
}

uint64_t carAudioStream_sendFlush(const void *a1, __int16 a2, int a3)
{
  uint64_t v13 = 0;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x2000000000;
  int v16 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFRetain(a1);
  uint64_t v7 = *(NSObject **)(DerivedStorage + 168);
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 0x40000000;
  _OWORD v10[2] = __carAudioStream_sendFlush_block_invoke;
  v10[3] = &unk_1E68916E0;
  v10[5] = a1;
  v10[6] = DerivedStorage;
  __int16 v12 = a2;
  int v11 = a3;
  v10[4] = &v13;
  dispatch_async(v7, v10);
  uint64_t v8 = *((unsigned int *)v14 + 6);
  _Block_object_dispose(&v13, 8);
  return v8;
}

uint64_t carAudioStream_sendMainHighMessage(const void *a1, int a2, const void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2 == 1734700576)
  {
    uint64_t v7 = DerivedStorage;
    CFRetain(a1);
    CFRetain(a3);
    uint64_t v8 = *(NSObject **)(v7 + 168);
    v10[0] = MEMORY[0x1E4F143A8];
    v10[1] = 0x40000000;
    _OWORD v10[2] = __carAudioStream_sendMainHighMessage_block_invoke;
    v10[3] = &__block_descriptor_tmp_157;
    int v11 = 1734700576;
    v10[4] = v7;
    v10[5] = a3;
    v10[6] = a1;
    dispatch_async(v8, v10);
    return 0;
  }
  else
  {
    APSLogErrorAt();
    return 4294960561;
  }
}

void carAudioStream_handleOutputControlMessage(const void *a1, int a2, const void *a3, const void *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2 == 1634168383)
  {
    uint64_t v9 = DerivedStorage;
    CFRetain(a1);
    CFRetain(a3);
    CFRetain(a4);
    unint64_t v10 = *(NSObject **)(v9 + 168);
    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 0x40000000;
    v11[2] = __carAudioStream_handleOutputControlMessage_block_invoke;
    v11[3] = &__block_descriptor_tmp_163;
    v11[4] = v9;
    v11[5] = a3;
    v11[6] = a4;
    void v11[7] = a1;
    dispatch_async(v10, v11);
  }
}

uint64_t carAudioStream_getTransportStreamIDAndQuality(int a1, int a2, uint64_t *a3, int *a4)
{
  switch(a1)
  {
    case 'd':
      uint64_t v4 = 0;
      uint64_t v5 = 1835626096;
      if (!a2) {
        uint64_t v5 = 1835100526;
      }
      goto LABEL_14;
    case 'e':
      uint64_t v4 = 0;
      uint64_t v5 = 1634497568;
      goto LABEL_14;
    case 'f':
      uint64_t v4 = 0;
      *a3 = 1734700576;
      int v6 = 10;
      goto LABEL_15;
    case 'j':
      uint64_t v4 = 0;
      uint64_t v5 = 1635088495;
      goto LABEL_14;
    case 'k':
      uint64_t v4 = 0;
      uint64_t v5 = 1869575779;
      goto LABEL_14;
    case 'l':
      uint64_t v4 = 0;
      uint64_t v5 = 1635283556;
      goto LABEL_14;
    case 'm':
      uint64_t v4 = 0;
      uint64_t v5 = 1870033508;
LABEL_14:
      *a3 = v5;
      int v6 = 3;
LABEL_15:
      *a4 = v6;
      break;
    default:
      if (gLogCategory_APEndpointStreamCarPlayAudio <= 50
        && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v4 = 4294950536;
      APSLogErrorAt();
      break;
  }
  return v4;
}

void carAudioStream_handleIncomingInputDataMessage(uint64_t a1, int a2, const void *a3, const void *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2 > 1869575778)
  {
    if (a2 != 1870033508)
    {
      int v9 = 1869575779;
LABEL_6:
      if (a2 != v9) {
        return;
      }
    }
  }
  else if (a2 != 1835100526)
  {
    int v9 = 1836213604;
    goto LABEL_6;
  }
  CFRetain(a4);
  CFRetain(a3);
  unint64_t v10 = *(NSObject **)(DerivedStorage + 352);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __carAudioStream_handleIncomingInputDataMessage_block_invoke;
  block[3] = &__block_descriptor_tmp_167;
  block[4] = DerivedStorage;
  void block[5] = a4;
  int v12 = a2;
  void block[6] = a1;
  void block[7] = a3;
  dispatch_async(v10, block);
}

uint64_t FigTransportStreamWaitUntilConnected(uint64_t a1)
{
  uint64_t v2 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v3 + 16);
  if (!v4) {
    return 4294954514;
  }
  return v4(a1);
}

uint64_t carAudioStream_acquireMessageBacking(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = FigCFWeakReferenceHolderCopyReferencedObject();
  if (v3)
  {
    uint64_t v4 = (const void *)v3;
    uint64_t v5 = *(void *)(CMBaseObjectGetDerivedStorage() + 464);
    if (v5)
    {
      uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v6) {
        uint64_t v7 = v6;
      }
      else {
        uint64_t v7 = 0;
      }
      uint64_t v8 = *(uint64_t (**)(uint64_t, void, uint64_t))(v7 + 32);
      if (v8) {
        uint64_t v9 = v8(v5, 0, a2);
      }
      else {
        uint64_t v9 = 4294954514;
      }
    }
    else
    {
      APSLogErrorAt();
      uint64_t v9 = 4294950533;
    }
    CFRelease(v4);
  }
  else
  {
    APSLogErrorAt();
    return 4294950534;
  }
  return v9;
}

uint64_t carAudioStream_relinquishMessageBacking(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = FigCFWeakReferenceHolderCopyReferencedObject();
  if (v3)
  {
    uint64_t v4 = (const void *)v3;
    uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
    uint64_t v6 = *(void *)(DerivedStorage + 464);
    if (v6 && *(unsigned char *)(DerivedStorage + 176))
    {
      uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v7) {
        uint64_t v8 = v7;
      }
      else {
        uint64_t v8 = 0;
      }
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 40);
      if (v9) {
        uint64_t v10 = v9(v6, a2);
      }
      else {
        uint64_t v10 = 4294954514;
      }
    }
    else
    {
      uint64_t v10 = 0;
    }
    CFRelease(v4);
  }
  else
  {
    APSLogErrorAt();
    return 4294950534;
  }
  return v10;
}

uint64_t APAudioEngineRegisterStream(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void, uint64_t))(v9 + 8);
  if (!v10) {
    return 4294954514;
  }
  return v10(a1, a2, a3, 0, 0, a4);
}

void __carAudioStream_sendFlush_block_invoke(uint64_t a1)
{
  CFTypeRef cf = 0;
  if (gLogCategory_APEndpointStreamCarPlayAudio <= 50
    && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v2 = *(void *)(*(void *)(a1 + 48) + 96);
  CFAllocatorRef v3 = CFGetAllocator(*(CFTypeRef *)(a1 + 40));
  uint64_t CMBaseObject = APSenderSessionGetCMBaseObject(v2);
  uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t, __CFString *, CFAllocatorRef, CFTypeRef *))(v6 + 48);
  if (v7) {
    int v8 = v7(CMBaseObject, @"TransportControlStream", v3, &cf);
  }
  else {
    int v8 = -12782;
  }
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v8;
  if (*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
    CFStringRef v11 = 0;
    CFDataRef Data = 0;
    goto LABEL_23;
  }
  CFAllocatorRef v9 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!Mutable)
  {
    APSLogErrorAt();
    CFStringRef v11 = 0;
LABEL_35:
    CFDataRef Data = 0;
LABEL_37:
    *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = -16761;
    goto LABEL_23;
  }
  CFStringRef v11 = CFStringCreateWithFormat(v9, 0, @"seq=%u;rtptime=%u",
          *(unsigned __int16 *)(a1 + 60),
          *(unsigned int *)(a1 + 56));
  if (!v11)
  {
    APSLogErrorAt();
    goto LABEL_35;
  }
  CFDictionarySetValue(Mutable, @"RTP-Info", v11);
  CFDataRef Data = CFPropertyListCreateData(v9, Mutable, kCFPropertyListBinaryFormat_v1_0, 0, 0);
  if (!Data)
  {
    APSLogErrorAt();
    goto LABEL_37;
  }
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = FigCreateBlockBufferWithCFDataNoCopy();
  if (*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)
    || ((CFTypeRef v13 = cf, (v14 = *(void *)(CMBaseObjectGetVTable() + 16)) == 0) ? (v15 = 0) : (v15 = v14),
        (int v16 = *(uint64_t (**)(CFTypeRef, uint64_t, void, void))(v15 + 56)) == 0
      ? (int v17 = -12782)
      : (int v17 = v16(v13, 1718383464, 0, 0)),
        (*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v17) != 0))
  {
    APSLogErrorAt();
  }
LABEL_23:
  if (cf) {
    CFRelease(cf);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  if (v11) {
    CFRelease(v11);
  }
  if (Data) {
    CFRelease(Data);
  }
  CFRelease(*(CFTypeRef *)(a1 + 40));
}

void __carAudioStream_sendMainHighMessage_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v2 + 176))
  {
    carAudioStream_MarkPacket(*(void *)(v2 + 192));
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 464);
    uint64_t v5 = *(unsigned int *)(a1 + 56);
    uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
    uint64_t v7 = v6 ? v6 : 0;
    int v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (v8) {
      v8(v4, v5, v3);
    }
  }
  CFRelease(*(CFTypeRef *)(a1 + 40));
  CFAllocatorRef v9 = *(const void **)(a1 + 48);
  CFRelease(v9);
}

uint64_t carAudioStream_MarkPacket(uint64_t a1)
{
  unsigned int v1 = APCarPlayAudioFormatInfoGetStreamType(a1) - 100;
  if ((v1 >= 7 || ((0x47u >> v1) & 1) == 0)
    && gLogCategory_APEndpointStreamCarPlayAudio <= 60
    && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return kdebug_trace();
}

void __carAudioStream_handleOutputControlMessage_block_invoke(uint64_t a1)
{
  int v3 = 0;
  CFTypeRef v2 = 0;
  if (*(unsigned char *)(*(void *)(a1 + 32) + 176))
  {
    if (APSTransportMessageGetRetransmitRequest())
    {
      APSLogErrorAt();
    }
    else
    {
      if (gLogCategory_APEndpointStreamCarPlayAudio <= 30
        && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      --HIWORD(v3);
    }
  }
  CFRelease(*(CFTypeRef *)(a1 + 48));
  CFRelease(*(CFTypeRef *)(a1 + 40));
  CFRelease(*(CFTypeRef *)(a1 + 56));
  if (v2) {
    CFRelease(v2);
  }
}

void __carAudioStream_handleOutputControlMessage_block_invoke_2(uint64_t a1)
{
  uint64_t v18 = 0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v2 + 176))
  {
    uint64_t v3 = *(void *)(v2 + 456);
    uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v4) {
      uint64_t v5 = v4;
    }
    else {
      uint64_t v5 = 0;
    }
    uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t *))(v5 + 32);
    if (!v6
      || v6(v3, 4, &v18)
      || APSTransportMessageSetRetransmitResponseFutile()
      || ((uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 456),
           uint64_t v8 = v18,
           (uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 16)) == 0)
        ? (uint64_t v10 = 0)
        : (uint64_t v10 = v9),
          (CFStringRef v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48)) == 0
       || v11(v7, 560031598, v8)))
    {
      APSLogErrorAt();
    }
    else if (gLogCategory_APEndpointStreamCarPlayAudio <= 30 {
           && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
    }
    {
      LogPrintF();
    }
  }
  uint64_t v12 = *(void *)(a1 + 32);
  *(void *)(v12 + 536) += *(int *)(a1 + 48);
  uint64_t v13 = v18;
  if (v18)
  {
    uint64_t v14 = *(void *)(v12 + 456);
    uint64_t v15 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v15) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = 0;
    }
    int v17 = *(void (**)(uint64_t, uint64_t))(v16 + 40);
    if (v17) {
      v17(v14, v13);
    }
  }
  CFRelease(*(CFTypeRef *)(a1 + 40));
}

void __carAudioStream_handleOutputControlMessage_block_invoke_3(void *a1)
{
  uint64_t v2 = a1[4];
  if (*(unsigned char *)(v2 + 176))
  {
    uint64_t v3 = *(void *)(v2 + 456);
    uint64_t v4 = a1[5];
    uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 16);
    uint64_t v6 = v5 ? v5 : 0;
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (v7) {
      v7(v3, 1634168352, v4);
    }
  }
  uint64_t v8 = (const void *)a1[5];
  ++*(void *)(a1[4] + 528);
  CFRelease(v8);
  uint64_t v9 = (const void *)a1[6];
  CFRelease(v9);
}

void __carAudioStream_handleIncomingInputDataMessage_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v2 + 360))
  {
    if (*(unsigned char *)(v2 + 400))
    {
      uint64_t v3 = *(void *)(a1 + 40);
      uint64_t v4 = *(void *)(v2 + 392);
      uint64_t v5 = *(void *)(v2 + 368);
      uint64_t v6 = *(void *)(v2 + 376);
      int v7 = *(_DWORD *)(a1 + 64);
      uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
      if (CMSimpleQueueGetCount(*(CMSimpleQueueRef *)(DerivedStorage + 408)) >= 1
        && gLogCategory_APEndpointStreamCarPlayAudio <= 50
        && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      kdebug_trace();
      if (CMSimpleQueueGetCount(*(CMSimpleQueueRef *)(DerivedStorage + 408)) >= 1)
      {
        do
        {
          uint64_t v9 = (void *)CMSimpleQueueDequeue(*(CMSimpleQueueRef *)(DerivedStorage + 408));
          if (carAudioStream_processOneInputDataMessage(v3, v4, v5, v6, v7, v9)
            && gLogCategory_APEndpointStreamCarPlayAudio <= 90
            && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          if (v9) {
            CFRelease(v9);
          }
        }
        while (CMSimpleQueueGetCount(*(CMSimpleQueueRef *)(DerivedStorage + 408)) > 0);
      }
      uint64_t v2 = *(void *)(a1 + 32);
      *(unsigned char *)(v2 + 400) = 0;
    }
    carAudioStream_processOneInputDataMessage(*(void *)(a1 + 40), *(void *)(v2 + 392), *(void *)(v2 + 368), *(void *)(v2 + 376), *(_DWORD *)(a1 + 64), *(void **)(a1 + 56));
    goto LABEL_26;
  }
  if (!*(unsigned char *)(v2 + 400))
  {
    if (gLogCategory_APEndpointStreamCarPlayAudio > 30
      || gLogCategory_APEndpointStreamCarPlayAudio == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_26;
    }
LABEL_34:
    LogPrintF();
    goto LABEL_26;
  }
  if (gLogCategory_APEndpointStreamCarPlayAudio <= 30
    && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFStringRef v11 = *(const void **)(a1 + 56);
  uint64_t v12 = CMBaseObjectGetDerivedStorage();
  if (!*(void *)(v12 + 408))
  {
    APSLogErrorAt();
    goto LABEL_26;
  }
  uint64_t v13 = v12;
  CFRetain(v11);
  if (CMSimpleQueueEnqueue(*(CMSimpleQueueRef *)(v13 + 408), v11)
    && gLogCategory_APEndpointStreamCarPlayAudio <= 50
    && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
  {
    goto LABEL_34;
  }
LABEL_26:
  CFRelease(*(CFTypeRef *)(a1 + 40));
  uint64_t v10 = *(const void **)(a1 + 56);
  CFRelease(v10);
}

uint64_t carAudioStream_processOneInputDataMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, void *a6)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v33 = 0;
  int v34 = 0;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v30 = 0u;
  memset(v29, 0, sizeof(v29));
  if (*(unsigned char *)(DerivedStorage + 360))
  {
    DescriptioCFIndex n = APCarPlayAudioFormatInfoGetDescription(*(void *)(DerivedStorage + 192));
    char RTPPayloadType = carAudioStream_getRTPPayloadType(a5);
    uint64_t NewMessage = APSRTPPacketHandlerReadNewMessage(a2, a6, RTPPayloadType);
    if (NewMessage)
    {
      uint64_t v27 = NewMessage;
    }
    else
    {
      if (!a4 || (uint64_t v15 = APSRTPPacketHandlerDecryptCurrentMessage(a2, a4), !v15))
      {
        while (APSRTPPacketHandlerGetNextPacket(a2, (uint64_t)&v31))
        {
          kdebug_trace();
          uint64_t v16 = *(void **)(CMBaseObjectGetVTable() + 16);
          if (v16) {
            int v17 = v16;
          }
          else {
            int v17 = 0;
          }
          if (*v17 < 2uLL)
          {
            uint64_t v27 = 4294954515;
            goto LABEL_26;
          }
          uint64_t v18 = (uint64_t (*)(uint64_t, void **, uint64_t *))v17[5];
          if (!v18)
          {
            uint64_t v27 = 4294954514;
            goto LABEL_26;
          }
          uint64_t v19 = v18(a3, &v34, &v33);
          if (v19)
          {
            uint64_t v27 = v19;
            goto LABEL_26;
          }
          memcpy(v34, (const void *)v32, *((size_t *)&v32 + 1));
          *(double *)size_t v29 = (double)bswap32(DWORD1(v31));
          uint64_t v20 = 1;
          DWORD2(v30) = 1;
          uint64_t v21 = *((void *)&v32 + 1);
          if (*(_DWORD *)(Description + 20) <= 1u) {
            uint64_t v20 = (DWORD2(v32) / *(_DWORD *)(Description + 16));
          }
          uint64_t v22 = v34;
          int v23 = *(void **)(CMBaseObjectGetVTable() + 16);
          if (v23) {
            uint64_t v24 = v23;
          }
          else {
            uint64_t v24 = 0;
          }
          if (*v24 < 2uLL)
          {
            uint64_t v27 = 4294954515;
            goto LABEL_26;
          }
          int v25 = (uint64_t (*)(uint64_t, void *, uint64_t, void, uint64_t, _OWORD *))v24[6];
          if (!v25)
          {
            uint64_t v27 = 4294954514;
            goto LABEL_26;
          }
          uint64_t v26 = v25(a3, v22, v21, 0, v20, v29);
          if (v26)
          {
            uint64_t v27 = v26;
            goto LABEL_26;
          }
        }
        return 0;
      }
      uint64_t v27 = v15;
    }
LABEL_26:
    APSLogErrorAt();
    return v27;
  }
  return 0;
}

uint64_t carAudioStream_getRTPPayloadType(int a1)
{
  if (a1 > 1835100525)
  {
    if (a1 > 1869575778)
    {
      if (a1 == 1869575779) {
        return 107;
      }
      if (a1 == 1870033508) {
        return 109;
      }
    }
    else
    {
      if (a1 == 1835100526) {
        return 100;
      }
      if (a1 == 1836213604) {
        return 104;
      }
    }
  }
  else if (a1 > 1635088494)
  {
    if (a1 == 1635088495) {
      return 106;
    }
    if (a1 == 1635283556) {
      return 108;
    }
  }
  else
  {
    if (a1 == 1634497568) {
      return 101;
    }
    if (a1 == 1634887012) {
      return 105;
    }
  }
  uint64_t v1 = 1835100526;
  if (gLogCategory_APEndpointStreamCarPlayAudio <= 90
    && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v1;
}

void __carAudioStream_sendOneAudioDataMessage_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v2 + 176))
  {
    carAudioStream_MarkPacket(*(void *)(v2 + 192));
    uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
    uint64_t v4 = mach_absolute_time();
    if (*(void *)(DerivedStorage + 512) && (unint64_t)UpTicksToMilliseconds() >= 0x33) {
      carAudioStream_MarkPacket(*(void *)(DerivedStorage + 192));
    }
    *(void *)(DerivedStorage + 512) = v4;
    uint64_t v5 = *(void *)(a1 + 48);
    unsigned int v6 = **(_DWORD **)(a1 + 56) - 100;
    if (v6 < 0xA && ((0x3F3u >> v6) & 1) != 0)
    {
      uint64_t v7 = *(unsigned int *)&aNiamTlaniamnia[4 * v6];
    }
    else
    {
      uint64_t v7 = 1835100526;
      if (gLogCategory_APEndpointStreamCarPlayAudio <= 90
        && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 16);
    uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v9) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    CFStringRef v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    if (!v11 || v11(v5, v7, v8))
    {
      if (gLogCategory_APEndpointStreamCarPlayAudio <= 50
        && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
      {
        goto LABEL_22;
      }
    }
    else if (gLogCategory_APEndpointStreamCarPlayAudio <= 10 {
           && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
    }
    {
LABEL_22:
      LogPrintF();
    }
  }
  APSRTPPacketHandlerReturnComposedBBuf(*(void *)(a1 + 64), *(void **)(a1 + 56));
  uint64_t v12 = *(const void **)(a1 + 64);
  if (v12) {
    CFRelease(v12);
  }
  CFRelease(*(CFTypeRef *)(a1 + 40));
  uint64_t v13 = *(const void **)(a1 + 48);
  if (v13)
  {
    CFRelease(v13);
  }
}

void __carAudioStream_flush_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v2 + 176))
  {
    if (APCarPlayAudioFormatInfoGetStreamType(*(void *)(v2 + 192)) == 102)
    {
      *(_OWORD *)&v9.value = *MEMORY[0x1E4F1F9F8];
      v9.epoch = *(void *)(MEMORY[0x1E4F1F9F8] + 16);
      FigCFDictionaryGetCMTimeIfPresent();
      if (gLogCategory_APEndpointStreamCarPlayAudio <= 30
        && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
      {
        CMTime time = v9;
        CMTimeGetSeconds(&time);
        LogPrintF();
      }
      uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 16);
      char v4 = *(unsigned char *)(a1 + 56);
      uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v5) {
        uint64_t v6 = v5;
      }
      else {
        uint64_t v6 = 0;
      }
      uint64_t v7 = *(void (**)(uint64_t, void, CMTime *))(v6 + 40);
      if (v7)
      {
        CMTime time = v9;
        v7(v3, v4 & 1, &time);
      }
    }
    else if (gLogCategory_APEndpointStreamCarPlayAudio <= 30 {
           && (gLogCategory_APEndpointStreamCarPlayAudio != -1 || _LogCategory_Initialize()))
    }
    {
      LogPrintF();
    }
  }
  else
  {
    APSLogErrorAt();
  }
  uint64_t v8 = *(const void **)(a1 + 40);
  if (v8) {
    CFRelease(v8);
  }
  CFRelease(*(CFTypeRef *)(a1 + 48));
}

void __carAudioStream_dissociate_block_invoke(uint64_t a1)
{
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterPostNotification();
  uint64_t v2 = *(const void **)(a1 + 32);
  CFRelease(v2);
}

uint64_t __carAudioStream_dissociateInternal_block_invoke(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 128) = 1;
  return result;
}

void __carAudioStream_dissociateInternal_block_invoke_2(uint64_t a1)
{
}

void __carAudioStream_handleSpeechEvent_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v2 + 424) && *(unsigned char *)(v2 + 176))
  {
    CFStringGetTypeID();
    if (CFDictionaryGetTypedValue()) {
      APSAudioStats_MarkEvent();
    }
    else {
      APSLogErrorAt();
    }
  }
  CFRelease(*(CFTypeRef *)(a1 + 40));
}

uint64_t APSenderSessionAirPlayCreate(int a1, const void *a2, const void *a3, const void *a4, int a5, int a6, NSObject *a7, char a8, double a9, char a10, char a11, CFTypeRef a12, const void *a13, const void *a14, char a15, const __CFDictionary *a16, CFTypeRef *a17)
{
  uint64_t v98 = *MEMORY[0x1E4F143B8];
  CFTypeRef v89 = 0;
  CFTypeRef v90 = 0;
  APSenderSessionGetClassID();
  uint64_t v25 = CMDerivedObjectCreate();
  if (v25)
  {
    uint64_t v50 = v25;
    goto LABEL_110;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(void *)(DerivedStorage + 8) = CFRetain(a2);
  uint64_t v27 = FigSimpleMutexCreate();
  *(void *)(DerivedStorage + 256) = v27;
  if (!v27)
  {
    uint64_t v50 = 4294895476;
    goto LABEL_110;
  }
  *(void *)(DerivedStorage + 40) = a7;
  dispatch_retain(a7);
  *(void *)(DerivedStorage + 48) = CFRetain(a3);
  if (a4) {
    CFTypeRef v28 = CFRetain(a4);
  }
  else {
    CFTypeRef v28 = 0;
  }
  *(void *)(DerivedStorage + 56) = v28;
  *(_DWORD *)(DerivedStorage + 360) = -998653952;
  *(unsigned char *)(DerivedStorage + 364) = 0;
  *(_DWORD *)(DerivedStorage + 64) = a5;
  *(_DWORD *)(DerivedStorage + 80) = a6;
  *(unsigned char *)(DerivedStorage + 104) = a8;
  *(unsigned char *)(DerivedStorage + 105) = a11;
  *(unsigned char *)(DerivedStorage + 106) = a10;
  *(unsigned char *)(DerivedStorage + 107) = a15;
  *(double *)(DerivedStorage + 112) = a9;
  if (a13) {
    CFTypeRef v29 = CFRetain(a13);
  }
  else {
    CFTypeRef v29 = 0;
  }
  *(void *)(DerivedStorage + 88) = v29;
  if (a14) {
    CFTypeRef v30 = CFRetain(a14);
  }
  else {
    CFTypeRef v30 = 0;
  }
  *(void *)(DerivedStorage + 96) = v30;
  unsigned int v31 = *(_DWORD *)(DerivedStorage + 64);
  long long v32 = (CFAllocatorRef *)MEMORY[0x1E4F1CF80];
  if (v31 <= 8 && ((1 << v31) & 0x1C2) != 0)
  {
    uint64_t v33 = @"None";
    *(void *)(DerivedStorage + 16) = @"None";
    goto LABEL_15;
  }
  if (a12)
  {
    *(void *)(DerivedStorage + 72) = CFRetain(a12);
    uint64_t CMBaseObject = APSNetworkClockGetCMBaseObject();
    uint64_t v84 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v84) {
      uint64_t v85 = v84;
    }
    else {
      uint64_t v85 = 0;
    }
    uint64_t v87 = *(uint64_t (**)(uint64_t, void, CFAllocatorRef, CFTypeRef *))(v85 + 48);
    if (!v87)
    {
      uint64_t v50 = 4294954514;
      goto LABEL_110;
    }
    uint64_t v88 = v87(CMBaseObject, *MEMORY[0x1E4F4A140], *v32, &v89);
    if (v88)
    {
      uint64_t v50 = v88;
      goto LABEL_110;
    }
    if (FigCFEqual()) {
      uint64_t v33 = @"PTP";
    }
    else {
      uint64_t v33 = @"NTP";
    }
    *(void *)(DerivedStorage + 16) = v33;
    *(unsigned char *)(DerivedStorage + 270) = 1;
LABEL_15:
    CFRetain(v33);
    char ShouldForcePairSetup = APManagedConfigurationShouldForcePairSetup();
    if (*(_DWORD *)(DerivedStorage + 64) == 5) {
      char v35 = 0;
    }
    else {
      char v35 = ShouldForcePairSetup;
    }
    *(unsigned char *)(DerivedStorage + 392) = v35;
    CFAllocatorRef v36 = *v32;
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(*v32, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    *(void *)(DerivedStorage + 184) = Mutable;
    if (Mutable)
    {
      SNPrintF();
      *(void *)(DerivedStorage + 152) = dispatch_queue_create(label, 0);
      SNPrintF();
      *(void *)(DerivedStorage + 32) = dispatch_queue_create(label, 0);
      SNPrintF();
      *(void *)(DerivedStorage + 24) = dispatch_queue_create(label, 0);
      uint64_t v38 = CMBaseObjectGetDerivedStorage();
      if (a16) {
        CFDictionaryGetValue(a16, @"eventRecorder");
      }
      uint64_t v39 = (const void *)CFStringCreateF();
      uint64_t v40 = *(const void **)(v38 + 128);
      if (v40)
      {
        CFRelease(v40);
        *(void *)(v38 + 128) = 0;
      }
      uint64_t v41 = *(const void **)(v38 + 136);
      if (v41)
      {
        CFRelease(v41);
        *(void *)(v38 + 136) = 0;
      }
      uint64_t v42 = APSEventRecorderCreate();
      if (v42)
      {
        uint64_t v50 = v42;
      }
      else
      {
        if (*(_DWORD *)(v38 + 64) == 5)
        {
          uint64_t v43 = APSEventRecorderAddSignPostForEvent();
          if (v43)
          {
            uint64_t v50 = v43;
            goto LABEL_127;
          }
          uint64_t v44 = APSEventRecorderAddSignPostForEvent();
          if (v44)
          {
            uint64_t v50 = v44;
            goto LABEL_127;
          }
          uint64_t v45 = APSEventRecorderAddSignPostForEvent();
          if (v45)
          {
            uint64_t v50 = v45;
            goto LABEL_127;
          }
          uint64_t v46 = APSEventRecorderAddSignPostForEvent();
          if (v46)
          {
            uint64_t v50 = v46;
            goto LABEL_127;
          }
          uint64_t v47 = APSEventRecorderAddSignPostForEvent();
          if (v47)
          {
            uint64_t v50 = v47;
            goto LABEL_127;
          }
          uint64_t v48 = APSEventRecorderAddSignPostForEvent();
          if (v48)
          {
            uint64_t v50 = v48;
            goto LABEL_127;
          }
        }
        CFMutableArrayRef v49 = CFArrayCreateMutable(v36, 0, MEMORY[0x1E4F1D510]);
        *(void *)(v38 + 136) = v49;
        if (v49)
        {
          uint64_t v50 = 0;
          goto LABEL_35;
        }
        uint64_t v50 = 4294895476;
      }
LABEL_127:
      APSLogErrorAt();
LABEL_35:
      if (v39) {
        CFRelease(v39);
      }
      if (!v50)
      {
        if (a16)
        {
          *(unsigned char *)(DerivedStorage + 120) = CFDictionaryGetInt64() != 0;
          *(unsigned char *)(DerivedStorage + 121) = CFDictionaryGetInt64() != 0;
        }
        uint64_t v51 = CMBaseObjectGetDerivedStorage();
        CFTypeRef v95 = 0;
        CFTypeRef v96 = 0;
        CFTypeRef v93 = 0;
        CFTypeRef cf = 0;
        CFTypeRef v91 = 0;
        CFTypeRef v92 = 0;
        uint64_t v52 = CFDictionaryCreateMutable(v36, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
        if (v52)
        {
          uint64_t v53 = APEndpointDescriptionGetCMBaseObject(*(void *)(v51 + 48));
          uint64_t v54 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v54) {
            uint64_t v55 = v54;
          }
          else {
            uint64_t v55 = 0;
          }
          uint64_t v56 = *(void (**)(uint64_t, __CFString *, void, CFTypeRef *))(v55 + 48);
          if (v56) {
            v56(v53, @"Company", 0, &cf);
          }
          uint64_t v57 = APEndpointDescriptionGetCMBaseObject(*(void *)(v51 + 48));
          uint64_t v58 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v58) {
            uint64_t v59 = v58;
          }
          else {
            uint64_t v59 = 0;
          }
          uint64_t v60 = *(void (**)(uint64_t, __CFString *, void, CFTypeRef *))(v59 + 48);
          if (v60) {
            v60(v57, @"Manufacturer", 0, &v93);
          }
          uint64_t v61 = APEndpointDescriptionGetCMBaseObject(*(void *)(v51 + 48));
          uint64_t v62 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v62) {
            uint64_t v63 = v62;
          }
          else {
            uint64_t v63 = 0;
          }
          CFUUIDRef v64 = *(void (**)(uint64_t, __CFString *, void, CFTypeRef *))(v63 + 48);
          if (v64) {
            v64(v61, @"Model", 0, &v92);
          }
          uint64_t v65 = APEndpointDescriptionGetCMBaseObject(*(void *)(v51 + 48));
          uint64_t v66 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v66) {
            uint64_t v67 = v66;
          }
          else {
            uint64_t v67 = 0;
          }
          uint64_t v68 = *(void (**)(uint64_t, __CFString *, void, CFTypeRef *))(v67 + 48);
          if (v68) {
            v68(v65, @"OSVersion", 0, &v91);
          }
          uint64_t v69 = APEndpointDescriptionGetCMBaseObject(*(void *)(v51 + 48));
          uint64_t v70 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v70) {
            uint64_t v71 = v70;
          }
          else {
            uint64_t v71 = 0;
          }
          uint64_t v72 = *(void (**)(uint64_t, __CFString *, void, CFTypeRef *))(v71 + 48);
          if (v72) {
            v72(v69, @"StatusFlags", 0, &v95);
          }
          uint64_t v73 = APEndpointDescriptionGetCMBaseObject(*(void *)(v51 + 48));
          uint64_t v74 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v74) {
            uint64_t v75 = v74;
          }
          else {
            uint64_t v75 = 0;
          }
          uint64_t v76 = *(void (**)(uint64_t, __CFString *, void, CFTypeRef *))(v75 + 48);
          if (v76) {
            v76(v73, @"AirPlaySecurity", 0, &v96);
          }
          uint64_t v77 = APSGetFBOPropertyInt64();
          uint64_t v78 = APSGetFBOPropertyInt64();
          APSGetFBOPropertyInt64();
          FigCFDictionarySetValue();
          FigCFDictionarySetValue();
          FigCFDictionarySetValue();
          FigCFDictionarySetValue();
          FigCFDictionarySetValue();
          FigCFDictionarySetValue();
          uint64_t v79 = (const void *)*MEMORY[0x1E4F1CFD0];
          CFTypeID v80 = (const void *)*MEMORY[0x1E4F1CFC8];
          if (v78) {
            CFTypeRef v81 = (const void *)*MEMORY[0x1E4F1CFD0];
          }
          else {
            CFTypeRef v81 = (const void *)*MEMORY[0x1E4F1CFC8];
          }
          CFDictionarySetValue(v52, @"unifiedAuthPairing", v81);
          if (v77) {
            uint64_t v82 = v79;
          }
          else {
            uint64_t v82 = v80;
          }
          CFDictionarySetValue(v52, @"supportsVideoV2", v82);
          CFDictionarySetInt64();
          *(void *)(DerivedStorage + 432) = v52;
          if (cf) {
            CFRelease(cf);
          }
          uint64_t v50 = 0;
        }
        else
        {
          uint64_t v50 = 4294895476;
          APSLogErrorAt();
        }
        if (v93) {
          CFRelease(v93);
        }
        if (v92) {
          CFRelease(v92);
        }
        if (v91) {
          CFRelease(v91);
        }
        if (v95) {
          CFRelease(v95);
        }
        if (v96) {
          CFRelease(v96);
        }
        if (v52)
        {
          if (gLogCategory_APSenderSessionAirPlay <= 30
            && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          uint64_t v50 = 0;
          *a17 = v90;
          CFTypeRef v90 = 0;
          goto LABEL_99;
        }
      }
      goto LABEL_110;
    }
    uint64_t v50 = 4294895476;
LABEL_110:
    APSLogErrorAt();
    goto LABEL_111;
  }
  APSLogErrorAt();
  uint64_t v50 = 4294895475;
LABEL_111:
  if (v90) {
    CFRelease(v90);
  }
LABEL_99:
  if (v89) {
    CFRelease(v89);
  }
  return v50;
}

void APSenderSessionGetPreferredAndEligibleTransportsBasedOnUsage(int a1, uint64_t a2, int *a3, int *a4, unsigned char *a5)
{
  if (!IsAppleInternalBuild())
  {
    CFStringRef v10 = 0;
    goto LABEL_7;
  }
  CFStringRef v9 = (const __CFString *)APSSettingsCopyValue();
  CFStringRef v10 = v9;
  if (!v9)
  {
LABEL_7:
    char v11 = 1;
    goto LABEL_8;
  }
  if (CFStringGetLength(v9) >= 1)
  {
    if (CFStringHasPrefix(v10, @"awdl"))
    {
      char v11 = 0;
      int v12 = 2;
      int v13 = 2;
    }
    else
    {
      int HasPrefix = CFStringHasPrefix(v10, @"nan");
      char v11 = 0;
      if (HasPrefix) {
        int v12 = 4;
      }
      else {
        int v12 = 1;
      }
      if (HasPrefix) {
        int v13 = 4;
      }
      else {
        int v13 = 9;
      }
    }
    goto LABEL_56;
  }
  char v11 = 0;
LABEL_8:
  int v14 = 9;
  int v12 = 1;
  if (a1 > 3)
  {
    if (a1 == 4)
    {
      uint64_t v19 = APSGetFBOPropertyInt64();
      if (v19) {
        int v20 = 4;
      }
      else {
        int v20 = 2;
      }
      int v21 = 4 * (v19 != 0);
      if (v19) {
        int v22 = 12;
      }
      else {
        int v22 = 8;
      }
      uint64_t v23 = APSGetFBOPropertyInt64();
      int v24 = v22 | 2;
      if (v23) {
        unsigned int v25 = v20;
      }
      else {
        unsigned int v25 = v21;
      }
      if (!v23) {
        int v24 = v22;
      }
      int v14 = v24 | 1;
      if (v25 <= 1) {
        int v12 = 1;
      }
      else {
        int v12 = v25;
      }
    }
    else if (a1 == 11 && APSSettingsIsFeatureEnabled())
    {
      int v15 = APSIsVirtualMachine();
      if (v15) {
        int v12 = 1;
      }
      else {
        int v12 = 4;
      }
      if (v15) {
        int v14 = 9;
      }
      else {
        int v14 = 13;
      }
    }
  }
  else if (a1)
  {
    if (a1 == 3)
    {
      int v12 = 4;
      if (APSGetAllowPersistentGroupsOnInfra()) {
        int v12 = APSIsVirtualMachine() ? 1 : 4;
      }
      else {
        int v14 = 8;
      }
      if (APSSettingsGetIntWithDefault()) {
        v14 |= 4u;
      }
    }
  }
  else
  {
    if (APSGetFBOPropertyInt64()) {
      int v16 = 12;
    }
    else {
      int v16 = 8;
    }
    uint64_t v17 = APSGetFBOPropertyInt64();
    int v18 = v16 | 2;
    if (!v17) {
      int v18 = v16;
    }
    int v14 = v18 | 1;
    int v12 = 1;
  }
  BOOL isDirectLinkEligible = apsession_isDirectLinkEligible();
  int v13 = v14 & 7;
  if (isDirectLinkEligible) {
    int v13 = v14;
  }
LABEL_56:
  if ((a1 - 1) > 0xA)
  {
    char v28 = 0;
    if (!a3) {
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  char v28 = byte_1D0B88678[a1 - 1];
  if (a3) {
LABEL_60:
  }
    *a3 = v12;
LABEL_61:
  if (a4) {
    *a4 = v13;
  }
  if (a5) {
    *a5 = v28;
  }
  if ((v11 & 1) == 0)
  {
    CFRelease(v10);
  }
}

BOOL apsession_isDirectLinkEligible()
{
  return !APSGetFBOPropertyInt64() && APSGetFBOPropertyInt64() == 0;
}

uint64_t APSenderSessionGetFallbackConnectionType(int a1, char a2, int a3, _DWORD *a4)
{
  if (a3 == -71890 && !a4[2]) {
    a4[2] = 1;
  }
  int v6 = a4[1];
  switch(a1)
  {
    case 4:
      if ((a2 & 2) != 0 && (v6 & 2) == 0)
      {
        uint64_t result = 2;
        break;
      }
      goto LABEL_20;
    case 2:
      if ((a2 & 4) != 0 && (v6 & 4) == 0)
      {
        uint64_t result = 4;
        break;
      }
LABEL_20:
      if (v6) {
        uint64_t result = 0;
      }
      else {
        uint64_t result = a2 & 1;
      }
      break;
    case 1:
      if (v6)
      {
        if (a4[2] == 1)
        {
          uint64_t result = 2;
          a4[2] = 2;
          break;
        }
LABEL_19:
        uint64_t result = 0;
        break;
      }
      if ((a2 & 4) != 0) {
        uint64_t result = 4;
      }
      else {
        uint64_t result = a2 & 2;
      }
      break;
    default:
      if (gLogCategory_APSenderSessionAirPlay > 90) {
        goto LABEL_19;
      }
      if (gLogCategory_APSenderSessionAirPlay != -1 || (uint64_t result = _LogCategory_Initialize(), result))
      {
        LogPrintF();
        goto LABEL_19;
      }
      break;
  }
  int v8 = a4[1] | a1;
  *a4 = a1;
  a4[1] = v8;
  return result;
}

uint64_t APSenderSessionAirPlayPerformPairingPeersListManagement(uint64_t a1, CFArrayRef theArray, const __CFArray *a3, __CFArray **a4)
{
  uint64_t v37 = 0;
  CFArrayRef v35 = 0;
  CFTypeRef v36 = 0;
  if (theArray)
  {
    CFIndex Count = CFArrayGetCount(theArray);
    if (a3)
    {
LABEL_3:
      CFIndex v9 = CFArrayGetCount(a3);
      goto LABEL_6;
    }
  }
  else
  {
    CFIndex Count = 0;
    if (a3) {
      goto LABEL_3;
    }
  }
  CFIndex v9 = 0;
LABEL_6:
  apsession_copyTransportControlStream(a1, &v37);
  if (v37)
  {
    CFTypeRef cf = v37;
    uint64_t v10 = APPairingClientCoreUtilsCreate(*MEMORY[0x1E4F1CF80], 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, v37, 0, &v36);
    if (v10)
    {
      uint64_t v30 = v10;
    }
    else
    {
      long long v32 = a4;
      CFArrayRef theArraya = a3;
      if (Count < 1)
      {
LABEL_16:
        if (v9 < 1)
        {
LABEL_22:
          if (APPairingClientCoreUtilsPerformListPairings((uint64_t)v36, (uint64_t *)&v35))
          {
            APSLogErrorAt();
            CFMutableDictionaryRef Mutable = 0;
            uint64_t v30 = 0;
            *long long v32 = 0;
            goto LABEL_33;
          }
          CFMutableDictionaryRef Mutable = CFArrayCreateMutable(0, 0, MEMORY[0x1E4F1D510]);
          if (!Mutable)
          {
            APSLogErrorAt();
            uint64_t v30 = 4294895476;
            goto LABEL_33;
          }
          if (v35)
          {
            CFIndex v25 = CFArrayGetCount(v35);
            if (v25 >= 1)
            {
              CFIndex v26 = v25;
              CFIndex v27 = 0;
              while (1)
              {
                CFDictionaryRef ValueAtIndex = (const __CFDictionary *)CFArrayGetValueAtIndex(v35, v27);
                CFDictionaryGetValue(ValueAtIndex, @"identifier");
                CFDictionaryGetValue(ValueAtIndex, @"pk");
                CFDictionaryGetValue(ValueAtIndex, @"permissions");
                uint64_t Formatted = CFPropertyListCreateFormatted();
                if (Formatted) {
                  break;
                }
                CFArrayAppendValue(Mutable, 0);
                if (v26 == ++v27) {
                  goto LABEL_29;
                }
              }
              uint64_t v30 = Formatted;
LABEL_51:
              APSLogErrorAt();
              goto LABEL_33;
            }
          }
LABEL_29:
          if (!v32)
          {
            uint64_t v30 = 0;
            goto LABEL_33;
          }
          uint64_t v30 = 0;
          *long long v32 = Mutable;
LABEL_31:
          CFMutableDictionaryRef Mutable = 0;
LABEL_33:
          CFRelease(cf);
          goto LABEL_34;
        }
        CFIndex v21 = 0;
        int v22 = (const void *)*MEMORY[0x1E4F204D0];
        while (1)
        {
          CFDictionaryRef v23 = (const __CFDictionary *)CFArrayGetValueAtIndex(theArraya, v21);
          if (!v23)
          {
            uint64_t v30 = 4294895475;
            goto LABEL_49;
          }
          if (!CFDictionaryGetValue(v23, v22))
          {
            uint64_t v30 = 4294895475;
            goto LABEL_49;
          }
          uint64_t v24 = APPairingClientCoreUtilsPerformRemovePairing();
          if (v24) {
            break;
          }
          if (v9 == ++v21) {
            goto LABEL_22;
          }
        }
        uint64_t v30 = v24;
      }
      else
      {
        CFIndex v11 = 0;
        int v12 = (const void *)*MEMORY[0x1E4F204D0];
        int v13 = (const void *)*MEMORY[0x1E4F204E0];
        int v14 = (const void *)*MEMORY[0x1E4F204D8];
        while (1)
        {
          CFDictionaryRef v15 = (const __CFDictionary *)CFArrayGetValueAtIndex(theArray, v11);
          CFMutableDictionaryRef Mutable = v15;
          if (!v15)
          {
            uint64_t v30 = 4294895475;
            goto LABEL_51;
          }
          CFDictionaryRef Value = CFDictionaryGetValue(v15, v12);
          int v18 = CFDictionaryGetValue(Mutable, v13);
          uint64_t v19 = CFDictionaryGetValue(Mutable, v14);
          if (!Value)
          {
            uint64_t v30 = 4294895475;
            goto LABEL_49;
          }
          if (!v18)
          {
            uint64_t v30 = 4294895475;
            goto LABEL_49;
          }
          if (!v19)
          {
            uint64_t v30 = 4294895475;
            goto LABEL_49;
          }
          uint64_t v20 = APPairingClientCoreUtilsPerformAddPairing();
          if (v20) {
            break;
          }
          if (Count == ++v11) {
            goto LABEL_16;
          }
        }
        uint64_t v30 = v20;
      }
    }
LABEL_49:
    APSLogErrorAt();
    goto LABEL_31;
  }
  APSLogErrorAt();
  CFMutableDictionaryRef Mutable = 0;
  uint64_t v30 = 4294895467;
LABEL_34:
  if (v36) {
    CFRelease(v36);
  }
  if (v35) {
    CFRelease(v35);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  return v30;
}

void apsession_copyTransportControlStream(uint64_t a1, void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  CFTypeRef v4 = *(CFTypeRef *)(DerivedStorage + 288);
  if (v4) {
    CFTypeRef v4 = CFRetain(v4);
  }
  *a2 = v4;
  JUMPOUT(0x1D25EB390);
}

uint64_t apsession_Invalidate(const void *a1)
{
  uint64_t v7 = 0;
  int v8 = &v7;
  uint64_t v9 = 0x2000000000;
  int v10 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionAirPlay <= 50
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  apsession_invalidateAndClearTransportStreams(a1);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
  uint64_t v3 = *(NSObject **)(DerivedStorage + 152);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __apsession_Invalidate_block_invoke;
  block[3] = &unk_1E68919D8;
  block[4] = &v7;
  void block[5] = a1;
  dispatch_sync(v3, block);
  if (*((_DWORD *)v8 + 6))
  {
    APSLogErrorAt();
    uint64_t v4 = *((unsigned int *)v8 + 6);
  }
  else
  {
    uint64_t v4 = 0;
  }
  _Block_object_dispose(&v7, 8);
  return v4;
}

uint64_t apsession_Finalize()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionAirPlay <= 50
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)DerivedStorage)
  {
    MEMORY[0x1D25EAD70](DerivedStorage + 304);
    *(void *)(DerivedStorage + 304) = 0;
    uint64_t v1 = *(const void **)(DerivedStorage + 280);
    if (v1)
    {
      if (gLogCategory_APSenderSessionAirPlay > 50) {
        goto LABEL_12;
      }
      if (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()) {
        LogPrintF();
      }
      uint64_t v1 = *(const void **)(DerivedStorage + 280);
      if (v1)
      {
LABEL_12:
        CFRelease(v1);
        *(void *)(DerivedStorage + 280) = 0;
      }
    }
    uint64_t v2 = *(const void **)(DerivedStorage + 432);
    if (v2)
    {
      CFRelease(v2);
      *(void *)(DerivedStorage + 432) = 0;
    }
    uint64_t v3 = *(const void **)(DerivedStorage + 440);
    if (v3)
    {
      CFRelease(v3);
      *(void *)(DerivedStorage + 440) = 0;
    }
    uint64_t v4 = *(const void **)(DerivedStorage + 488);
    if (v4)
    {
      CFRelease(v4);
      *(void *)(DerivedStorage + 488) = 0;
    }
    uint64_t v5 = *(const void **)(DerivedStorage + 128);
    if (v5)
    {
      CFRelease(v5);
      *(void *)(DerivedStorage + 128) = 0;
    }
    int v6 = *(const void **)(DerivedStorage + 136);
    if (v6)
    {
      CFRelease(v6);
      *(void *)(DerivedStorage + 136) = 0;
    }
    uint64_t v7 = *(const void **)(DerivedStorage + 144);
    if (v7)
    {
      CFRelease(v7);
      *(void *)(DerivedStorage + 144) = 0;
    }
    int v8 = *(const void **)(DerivedStorage + 88);
    if (v8)
    {
      CFRelease(v8);
      *(void *)(DerivedStorage + 88) = 0;
    }
    uint64_t v9 = *(const void **)(DerivedStorage + 96);
    if (v9)
    {
      CFRelease(v9);
      *(void *)(DerivedStorage + 96) = 0;
    }
    int v10 = *(const void **)(DerivedStorage + 72);
    if (v10)
    {
      CFRelease(v10);
      *(void *)(DerivedStorage + 72) = 0;
    }
    CFIndex v11 = *(NSObject **)(DerivedStorage + 40);
    if (v11)
    {
      dispatch_release(v11);
      *(void *)(DerivedStorage + 40) = 0;
    }
    int v12 = *(NSObject **)(DerivedStorage + 32);
    if (v12)
    {
      dispatch_release(v12);
      *(void *)(DerivedStorage + 32) = 0;
    }
    int v13 = *(NSObject **)(DerivedStorage + 152);
    if (v13)
    {
      dispatch_release(v13);
      *(void *)(DerivedStorage + 152) = 0;
    }
    int v14 = *(NSObject **)(DerivedStorage + 24);
    if (v14)
    {
      dispatch_release(v14);
      *(void *)(DerivedStorage + 24) = 0;
    }
    CFDictionaryRef v15 = *(const void **)(DerivedStorage + 8);
    if (v15)
    {
      CFRelease(v15);
      *(void *)(DerivedStorage + 8) = 0;
    }
    int v16 = *(const void **)(DerivedStorage + 16);
    if (v16)
    {
      CFRelease(v16);
      *(void *)(DerivedStorage + 16) = 0;
    }
    uint64_t v17 = *(const void **)(DerivedStorage + 168);
    if (v17)
    {
      CFRelease(v17);
      *(void *)(DerivedStorage + 168) = 0;
    }
    int v18 = *(const void **)(DerivedStorage + 216);
    if (v18)
    {
      CFRelease(v18);
      *(void *)(DerivedStorage + 216) = 0;
    }
    uint64_t v19 = *(const void **)(DerivedStorage + 224);
    if (v19)
    {
      CFRelease(v19);
      *(void *)(DerivedStorage + 224) = 0;
    }
    uint64_t v20 = *(const void **)(DerivedStorage + 232);
    if (v20)
    {
      CFRelease(v20);
      *(void *)(DerivedStorage + 232) = 0;
    }
    CFIndex v21 = *(const void **)(DerivedStorage + 248);
    if (v21)
    {
      CFRelease(v21);
      *(void *)(DerivedStorage + 248) = 0;
    }
    int v22 = *(const void **)(DerivedStorage + 184);
    if (v22)
    {
      CFRelease(v22);
      *(void *)(DerivedStorage + 184) = 0;
    }
    return FigSimpleMutexDestroy();
  }
  else
  {
    uint64_t result = gLogCategory_APSenderSessionAirPlay;
    if (gLogCategory_APSenderSessionAirPlay <= 100) {
      uint64_t result = apsession_Finalize_cold_1(gLogCategory_APSenderSessionAirPlay);
    }
    __break(1u);
  }
  return result;
}

__CFString *apsession_CopyDebugDescription(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppendFormat(Mutable, 0, @"<APSenderSessionAirPlay %p %@>", a1, *(void *)(DerivedStorage + 8));
  return Mutable;
}

uint64_t apsession_CopyProperty(uint64_t a1, const void *a2, const __CFAllocator *a3, void *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionAirPlay <= 10
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!a4)
  {
    APSLogErrorAt();
    return 4294960591;
  }
  if (*(unsigned char *)DerivedStorage && !CFEqual(a2, @"InitialRTCStats")) {
    return 4294954511;
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  uint64_t v9 = CMBaseObjectGetDerivedStorage();
  if (!CFEqual(a2, @"TransportControlStream"))
  {
    if (CFEqual(a2, @"InitialVolumeDB"))
    {
      CFNumberRef v12 = CFNumberCreate(a3, kCFNumberFloat32Type, (const void *)(v9 + 360));
      *a4 = v12;
      if (v12) {
        goto LABEL_14;
      }
      uint64_t ConnectionLatencyHint = 4294895476;
LABEL_47:
      APSLogErrorAt();
      goto LABEL_15;
    }
    if (CFEqual(a2, @"InitialIsMuted"))
    {
      int v14 = (const void **)MEMORY[0x1E4F1CFD0];
      if (!*(unsigned char *)(v9 + 364)) {
        int v14 = (const void **)MEMORY[0x1E4F1CFC8];
      }
    }
    else
    {
      if (CFEqual(a2, @"MediaControlClientPassword"))
      {
        Uuint64_t Int64 = *(const void **)(v9 + 352);
        if (!UInt64) {
          goto LABEL_11;
        }
        goto LABEL_10;
      }
      if (CFEqual(a2, @"TransportSession"))
      {
        Uuint64_t Int64 = *(const void **)(v9 + 280);
        if (!UInt64)
        {
          uint64_t ConnectionLatencyHint = 4294960587;
          goto LABEL_15;
        }
        goto LABEL_10;
      }
      if (!CFEqual(a2, @"IsConnectedOnPeerToPeerInterface"))
      {
        if (CFEqual(a2, @"ControlConnectionInterfaceLatencyHint"))
        {
          int v19 = 0;
          uint64_t ConnectionLatencyHint = apsession_getConnectionLatencyHint(a1, &v19);
          uint64_t Int64 = CFNumberCreateInt64();
          *a4 = Int64;
          if (Int64) {
            goto LABEL_15;
          }
          uint64_t ConnectionLatencyHint = 4294895476;
        }
        else
        {
          if (CFEqual(a2, @"KeyHolder"))
          {
            Uuint64_t Int64 = *(const void **)(v9 + 192);
            if (!UInt64) {
              goto LABEL_11;
            }
            goto LABEL_10;
          }
          if (CFEqual(a2, @"ShowInfo"))
          {
            Uuint64_t Int64 = apsession_copyShowInfo();
            goto LABEL_11;
          }
          if (CFEqual(a2, @"AuthenticationData"))
          {
            uint64_t v17 = *(void *)(v9 + 368);
            if (v17) {
              uint64_t ConnectionLatencyHint = APAuthenticationClientCopyProperty(v17, 0x1F26DD0E0, (uint64_t)a3, (uint64_t)a4);
            }
            else {
              uint64_t ConnectionLatencyHint = 4294954513;
            }
            goto LABEL_15;
          }
          if (CFEqual(a2, @"InitialRTCStats"))
          {
            apsession_updateSenderSessionMetricsForRTCStats();
            CFDictionaryRef Copy = CFDictionaryCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], *(CFDictionaryRef *)(v9 + 432));
            *a4 = Copy;
            if (Copy) {
              goto LABEL_14;
            }
            uint64_t ConnectionLatencyHint = 4294895476;
          }
          else
          {
            if (CFEqual(a2, @"ReceiverSuppliedRTCStats"))
            {
              Uuint64_t Int64 = *(const void **)(v9 + 440);
              if (!UInt64) {
                goto LABEL_11;
              }
              goto LABEL_10;
            }
            if (CFEqual(a2, @"ActivationMsgsProcessingTimeMs"))
            {
              Uuint64_t Int64 = (const void *)FigCFNumberCreateUInt64();
              if (UInt64) {
                goto LABEL_11;
              }
              uint64_t ConnectionLatencyHint = 4294895476;
            }
            else if (CFEqual(a2, @"ActivationMsgsRoundTripTimeMs"))
            {
              Uuint64_t Int64 = (const void *)FigCFNumberCreateUInt64();
              if (UInt64) {
                goto LABEL_11;
              }
              uint64_t ConnectionLatencyHint = 4294895476;
            }
            else
            {
              if (!CFEqual(a2, @"ActivationConnectionTimeMs"))
              {
                if (CFEqual(a2, @"EventRecorder"))
                {
                  Uuint64_t Int64 = *(const void **)(v9 + 128);
                  if (!UInt64) {
                    goto LABEL_11;
                  }
                  goto LABEL_10;
                }
                if (CFEqual(a2, @"LocalNetworkIPAddress"))
                {
                  Uuint64_t Int64 = *(const void **)(v9 + 224);
                  if (!UInt64) {
                    goto LABEL_11;
                  }
                  goto LABEL_10;
                }
                if (CFEqual(a2, @"PWDEncryptorEncryptionContext"))
                {
                  Uuint64_t Int64 = *(const void **)(v9 + 472);
                  if (UInt64) {
                    goto LABEL_10;
                  }
                }
                else
                {
                  if (!CFEqual(a2, @"PWDProtectionFlags"))
                  {
                    if (!CFEqual(a2, @"GroupID"))
                    {
                      uint64_t ConnectionLatencyHint = 4294954512;
                      goto LABEL_15;
                    }
                    Uuint64_t Int64 = *(const void **)(v9 + 488);
                    if (!UInt64) {
                      goto LABEL_11;
                    }
                    goto LABEL_10;
                  }
                  if (*(void *)(v9 + 480))
                  {
                    Uuint64_t Int64 = (const void *)CFNumberCreateInt64();
                    goto LABEL_11;
                  }
                }
                uint64_t ConnectionLatencyHint = 4294954509;
                goto LABEL_15;
              }
              Uuint64_t Int64 = (const void *)FigCFNumberCreateUInt64();
              if (UInt64) {
                goto LABEL_11;
              }
              uint64_t ConnectionLatencyHint = 4294895476;
            }
          }
        }
        goto LABEL_47;
      }
      uint64_t v15 = *(void *)(v9 + 280);
      if (!v15)
      {
        APSLogErrorAt();
        uint64_t ConnectionLatencyHint = 4294895467;
        goto LABEL_15;
      }
      if (!*(void *)(v9 + 288)) {
        goto LABEL_42;
      }
      if (!FigTransportSessionCopyProperty(v15, *MEMORY[0x1E4F476C0], *MEMORY[0x1E4F1CF80], (uint64_t)a4))
      {
LABEL_14:
        uint64_t ConnectionLatencyHint = 0;
        goto LABEL_15;
      }
      int v14 = (const void **)MEMORY[0x1E4F1CFC8];
    }
    Uuint64_t Int64 = *v14;
    goto LABEL_10;
  }
  Uuint64_t Int64 = *(const void **)(v9 + 288);
  if (!UInt64)
  {
LABEL_42:
    APSLogErrorAt();
    uint64_t ConnectionLatencyHint = 4294895466;
    goto LABEL_15;
  }
LABEL_10:
  Uuint64_t Int64 = CFRetain(UInt64);
LABEL_11:
  uint64_t ConnectionLatencyHint = 0;
  *a4 = UInt64;
LABEL_15:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
  return ConnectionLatencyHint;
}

uint64_t apsession_SetProperty(uint64_t a1, const void *a2, const void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionAirPlay <= 30
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)DerivedStorage)
  {
    APSLogErrorAt();
    return 4294954511;
  }
  if (!a2)
  {
    uint64_t v15 = 4294895475;
    APSLogErrorAt();
    return v15;
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  uint64_t v6 = CMBaseObjectGetDerivedStorage();
  if (CFEqual(a2, @"AuthorizationString"))
  {
    if (!a3)
    {
      int v8 = (uint64_t *)(v6 + 352);
      uint64_t v9 = *(const void **)(v6 + 352);
      *(void *)(v6 + 352) = 0;
      if (!v9) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
    CFTypeID v7 = CFGetTypeID(a3);
    if (v7 == CFStringGetTypeID())
    {
      int v8 = (uint64_t *)(v6 + 352);
      uint64_t v9 = *(const void **)(v6 + 352);
      *(void *)(v6 + 352) = a3;
      CFRetain(a3);
      if (!v9)
      {
LABEL_12:
        if (*(void *)(v6 + 288))
        {
          uint64_t v10 = *v8;
          uint64_t CMBaseObject = FigTransportStreamGetCMBaseObject();
          uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v12) {
            uint64_t v13 = v12;
          }
          else {
            uint64_t v13 = 0;
          }
          int v14 = *(void (**)(uint64_t, void, uint64_t))(v13 + 56);
          if (v14) {
            v14(CMBaseObject, *MEMORY[0x1E4F47798], v10);
          }
        }
        CMNotificationCenterGetDefaultLocalCenter();
        FigDispatchAsyncPostNotification();
        goto LABEL_23;
      }
LABEL_11:
      CFRelease(v9);
      goto LABEL_12;
    }
    goto LABEL_37;
  }
  if (CFEqual(a2, @"DACPID"))
  {
    *(void *)(v6 + 400) = CFGetInt64();
  }
  else if (CFEqual(a2, @"DACPRemoteID"))
  {
    *(_DWORD *)(v6 + 408) = CFGetInt64();
  }
  else if (CFEqual(a2, @"PublishEncryptionKeyDiagnosticMode"))
  {
    *(unsigned char *)(v6 + 344) = CFGetInt64() != 0;
  }
  else
  {
    if (CFEqual(a2, @"GroupID"))
    {
      uint64_t v17 = *(const void **)(v6 + 488);
      *(void *)(v6 + 488) = a3;
      if (a3) {
        CFRetain(a3);
      }
      if (v17) {
        CFRelease(v17);
      }
      goto LABEL_23;
    }
    if (CFEqual(a2, @"IsMediaSession"))
    {
      unsigned int v18 = *(_DWORD *)(v6 + 64);
      if (v18 > 8 || ((1 << v18) & 0x1C2) == 0)
      {
        uint64_t v19 = CFGetInt64();
        int v20 = v19 != 0;
        if (*(unsigned __int8 *)(v6 + 270) != v20)
        {
          if (gLogCategory_APSenderSessionAirPlay <= 50
            && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          *(unsigned char *)(v6 + 270) = v20;
        }
        goto LABEL_23;
      }
LABEL_37:
      APSLogErrorAt();
    }
  }
LABEL_23:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
  return 0;
}

uint64_t apsession_invalidateAndClearTransportStreams(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t result = *(void *)(DerivedStorage + 56);
  if (result && *(_DWORD *)(DerivedStorage + 208))
  {
    uint64_t result = APSConnectionInterfaceManagerReleaseInterfaceSelection();
    *(_DWORD *)(DerivedStorage + 208) = 0;
  }
  if (*(void *)(DerivedStorage + 280))
  {
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
    CFRetain(a1);
    *(void *)(DerivedStorage + 288) = 0;
    *(void *)(DerivedStorage + 296) = 0;
    *(void *)(DerivedStorage + 336) = 0;
    uint64_t result = APSDispatchAsyncFHelper();
    *(unsigned char *)(DerivedStorage + 266) = 0;
    *(_WORD *)(DerivedStorage + 264) = 0;
  }
  return result;
}

void apsession_handleTransportSessionDisconnected(uint64_t a1, const void *a2, uint64_t a3, const void *a4, const void *a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a5) {
    goto LABEL_6;
  }
  CFTypeID v9 = CFGetTypeID(a5);
  if (v9 != CFDictionaryGetTypeID())
  {
    a5 = 0;
LABEL_6:
    int Int64 = -16613;
    goto LABEL_13;
  }
  if (CFDictionaryContainsKey((CFDictionaryRef)a5, (const void *)*MEMORY[0x1E4F47680])
    || *(_DWORD *)(DerivedStorage + 64) == 5
    && CFDictionaryContainsKey((CFDictionaryRef)a5, (const void *)*MEMORY[0x1E4F47678]))
  {
    int Int64 = CFDictionaryGetInt64();
  }
  else
  {
    int Int64 = -16613;
  }
  if (CFDictionaryContainsKey((CFDictionaryRef)a5, (const void *)*MEMORY[0x1E4F47688])) {
    a5 = (const void *)CFDictionaryGetInt64();
  }
  else {
    a5 = 0;
  }
LABEL_13:
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  if (*(const void **)(DerivedStorage + 280) != a4)
  {
    if (gLogCategory_APSenderSessionAirPlay <= 50
      && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    JUMPOUT(0x1D25EB390);
  }
  if (*(unsigned char *)(DerivedStorage + 269)) {
    BOOL v11 = a5 == (const void *)1702260340;
  }
  else {
    BOOL v11 = 0;
  }
  int v12 = !v11;
  if (*(unsigned char *)(DerivedStorage + 271))
  {
    if (!*(_DWORD *)(DerivedStorage + 276))
    {
      if (gLogCategory_APSenderSessionAirPlay <= 50
        && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (v12) {
        apsession_invalidateAndClearTransportStreams(a2);
      }
      apsession_dispatchPostFailedNotification(a2);
    }
  }
  else
  {
    *(_DWORD *)(DerivedStorage + 272) = Int64;
    if (gLogCategory_APSenderSessionAirPlay <= 50
      && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
  if (gLogCategory_APSenderSessionAirPlay <= 50
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFRetain(a2);
  CFRetain(a4);
  uint64_t v13 = *(NSObject **)(DerivedStorage + 152);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __apsession_handleTransportSessionDisconnected_block_invoke;
  block[3] = &__block_descriptor_tmp_50_0;
  block[4] = a4;
  void block[5] = DerivedStorage;
  void block[6] = a2;
  dispatch_async(v13, block);
}

void apsession_handleTransportSessionKeepAliveResponseReceived(int a1, const void *a2, int a3, int a4, CFTypeRef cf)
{
  CFPropertyListRef v5 = cf;
  if (cf)
  {
    CFTypeID v7 = CFGetTypeID(cf);
    if (v7 == CFDictionaryGetTypeID() && (CMBlockBufferGetTypeID(), CFDictionaryGetTypedValue()))
    {
      CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
      if (FigCreateCFDataWithBlockBufferNoCopy())
      {
        APSLogErrorAt();
        CFPropertyListRef v5 = 0;
        goto LABEL_15;
      }
      CFPropertyListRef v5 = CFPropertyListCreateWithData(v8, 0, 0, 0, 0);
      if (!v5)
      {
        APSLogErrorAt();
        goto LABEL_15;
      }
    }
    else
    {
      CFPropertyListRef v5 = 0;
    }
  }
  if (gLogCategory_APSenderSessionAirPlay <= 30
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CMBaseObjectGetDerivedStorage();
  CFRetain(a2);
  if (v5) {
    CFRetain(v5);
  }
  APSDispatchAsyncFHelper();
LABEL_15:
  if (v5) {
    CFRelease(v5);
  }
}

void apsession_invalidateTransportStreams(const void **a1)
{
  uint64_t v2 = a1[1];
  if (v2)
  {
    uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v3) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    CFPropertyListRef v5 = *(void (**)(const void *, void, void, void))(v4 + 24);
    if (v5) {
      v5(v2, 0, 0, 0);
    }
    uint64_t CMBaseObject = FigTransportStreamGetCMBaseObject();
    if (CMBaseObject)
    {
      uint64_t v7 = CMBaseObject;
      uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v9 = v8 ? v8 : 0;
      uint64_t v10 = *(void (**)(uint64_t))(v9 + 24);
      if (v10) {
        v10(v7);
      }
    }
    if (gLogCategory_APSenderSessionAirPlay <= 50
      && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFRelease(a1[1]);
  }
  BOOL v11 = a1[2];
  if (v11)
  {
    uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v12) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    int v14 = *(void (**)(const void *, void, void, void))(v13 + 24);
    if (v14) {
      v14(v11, 0, 0, 0);
    }
    uint64_t v15 = FigTransportStreamGetCMBaseObject();
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v18 = v17 ? v17 : 0;
      uint64_t v19 = *(void (**)(uint64_t))(v18 + 24);
      if (v19) {
        v19(v16);
      }
    }
    if (gLogCategory_APSenderSessionAirPlay <= 50
      && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFRelease(a1[2]);
  }
  int v20 = a1[3];
  if (v20)
  {
    uint64_t v21 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v21) {
      uint64_t v22 = v21;
    }
    else {
      uint64_t v22 = 0;
    }
    CFDictionaryRef v23 = *(void (**)(const void *, void, void, void))(v22 + 24);
    if (v23) {
      v23(v20, 0, 0, 0);
    }
    uint64_t v24 = FigTransportStreamGetCMBaseObject();
    if (v24)
    {
      uint64_t v25 = v24;
      uint64_t v26 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v27 = v26 ? v26 : 0;
      char v28 = *(void (**)(uint64_t))(v27 + 24);
      if (v28) {
        v28(v25);
      }
    }
    if (gLogCategory_APSenderSessionAirPlay <= 50
      && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFRelease(a1[3]);
  }
  CFTypeRef v29 = *a1;
  CFRelease(v29);
}

uint64_t apsession_dispatchPostFailedNotification(const void *a1)
{
  return APSDispatchAsyncFHelper();
}

void __apsession_handleTransportSessionDisconnected_block_invoke(uint64_t a1)
{
  if (*(void *)(a1 + 32) == *(void *)(*(void *)(a1 + 40) + 280))
  {
    apsession_disconnectControlStream(*(void *)(a1 + 48));
  }
  else if (gLogCategory_APSenderSessionAirPlay <= 50 {
         && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  }
  {
    LogPrintF();
  }
  CFRelease(*(CFTypeRef *)(a1 + 32));
  uint64_t v2 = *(const void **)(a1 + 48);
  CFRelease(v2);
}

void apsession_disconnectControlStream(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionAirPlay <= 50
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  unsigned int v3 = *(_DWORD *)(DerivedStorage + 64);
  BOOL v4 = v3 > 8;
  int v5 = (1 << v3) & 0x1C2;
  if (v4 || v5 == 0) {
    apsession_stopSenderNetworkClockIfNeeded(a1);
  }
  apsession_ensureDisconnected(a1);
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  uint64_t v7 = *(const void **)(DerivedStorage + 368);
  if (v7)
  {
    CFRelease(v7);
    *(void *)(DerivedStorage + 368) = 0;
  }
  uint64_t v8 = *(const void **)(DerivedStorage + 376);
  if (v8)
  {
    CFRelease(v8);
    *(void *)(DerivedStorage + 376) = 0;
  }
  uint64_t v9 = *(const void **)(DerivedStorage + 384);
  if (v9)
  {
    CFRelease(v9);
    *(void *)(DerivedStorage + 384) = 0;
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
  uint64_t v10 = *(const void **)(DerivedStorage + 192);
  if (v10)
  {
    CFRelease(v10);
    *(void *)(DerivedStorage + 192) = 0;
  }
  BOOL v11 = *(const void **)(DerivedStorage + 168);
  if (v11)
  {
    CFRelease(v11);
    *(void *)(DerivedStorage + 168) = 0;
  }
  *(unsigned char *)(DerivedStorage + 161) = 0;
  *(_WORD *)(DerivedStorage + 163) = 0;
}

void apsession_postFailedNotificationCallback(uint64_t a1)
{
  apsession_postFailedNotification(*(const void **)a1, *(unsigned int *)(a1 + 8), *(const void **)(a1 + 16));
  uint64_t v2 = *(const void **)a1;
  CFRelease(v2);
}

void apsession_postFailedNotification(const void *a1, uint64_t a2, const void *a3)
{
  CMBaseObjectGetDerivedStorage();
  CFAllocatorRef v5 = CFGetAllocator(a1);
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v5, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    uint64_t v7 = Mutable;
    CFDictionarySetInt64();
    CFDictionarySetValue(v7, @"SessionState", a3);
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterPostNotification();
    CFRelease(v7);
  }
  else
  {
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterPostNotification();
  }
}

uint64_t apsession_stopSenderNetworkClockIfNeeded(uint64_t a1)
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  uint64_t v3 = result;
  if (!*(void *)(result + 72) || !*(unsigned char *)(result + 162)) {
    goto LABEL_27;
  }
  CMNotificationCenterGetDefaultLocalCenter();
  FigNotificationCenterRemoveWeakListener();
  if (*(unsigned char *)(v3 + 177) || *(__CFString **)(v3 + 16) != @"PTP") {
    goto LABEL_5;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(void *)(DerivedStorage + 232)
    || (uint64_t v6 = DerivedStorage, (TimingPeerIdentifier = apsession_getTimingPeerIdentifier()) == 0))
  {
    APSLogErrorAt();
    goto LABEL_5;
  }
  uint64_t v8 = TimingPeerIdentifier;
  uint64_t v9 = *(void *)(v6 + 72);
  uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v10) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0;
  }
  uint64_t v12 = *(unsigned int (**)(uint64_t, const void *, void, void))(v11 + 40);
  if (v12 && !v12(v9, v8, 0, 0))
  {
    int v4 = gLogCategory_APSenderSessionAirPlay;
    if (gLogCategory_APSenderSessionAirPlay > 30) {
      goto LABEL_6;
    }
    if (gLogCategory_APSenderSessionAirPlay == -1 && !_LogCategory_Initialize())
    {
LABEL_5:
      int v4 = gLogCategory_APSenderSessionAirPlay;
LABEL_6:
      if (v4 <= 40 && (v4 != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      goto LABEL_21;
    }
LABEL_20:
    LogPrintF();
    goto LABEL_5;
  }
  if (gLogCategory_APSenderSessionAirPlay <= 90)
  {
    if (gLogCategory_APSenderSessionAirPlay == -1 && !_LogCategory_Initialize()) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_21:
  uint64_t v13 = *(void *)(v3 + 72);
  uint64_t VTable = CMBaseObjectGetVTable();
  uint64_t v16 = *(void *)(VTable + 16);
  uint64_t result = VTable + 16;
  uint64_t v15 = v16;
  if (v16) {
    uint64_t v17 = v15;
  }
  else {
    uint64_t v17 = 0;
  }
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 88);
  if (v18) {
    uint64_t result = v18(v13, a1);
  }
  *(unsigned char *)(v3 + 162) = 0;
LABEL_27:
  *(_DWORD *)(v3 + 240) = 0;
  return result;
}

void apsession_ensureDisconnected(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  apsession_copyTransportSession(a1, &cf);
  if (*(unsigned char *)(DerivedStorage + 176))
  {
    CFTypeRef v3 = cf;
    if (cf)
    {
      uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 16);
      uint64_t v5 = v4 ? v4 : 0;
      uint64_t v6 = *(void (**)(CFTypeRef))(v5 + 56);
      if (v6) {
        v6(v3);
      }
    }
    *(unsigned char *)(DerivedStorage + 176) = 0;
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  if (*(unsigned char *)(DerivedStorage + 264)) {
    BOOL v7 = *(unsigned char *)(DerivedStorage + 265) != 0;
  }
  else {
    BOOL v7 = 0;
  }
  apsession_invalidateAndClearTransportStreams(a1);
  if (*(void *)(DerivedStorage + 280))
  {
    uint64_t CMBaseObject = FigTransportSessionGetCMBaseObject();
    if (CMBaseObject)
    {
      uint64_t v9 = CMBaseObject;
      uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v11 = v10 ? v10 : 0;
      uint64_t v12 = *(void (**)(uint64_t))(v11 + 24);
      if (v12) {
        v12(v9);
      }
    }
    apsession_setTransportSession(a1, 0);
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
  if (v7)
  {
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
  }
  if (cf) {
    CFRelease(cf);
  }
  if (gLogCategory_APSenderSessionAirPlay <= 50
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

void apsession_handlePeerListChangedNotification(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFArrayRef theArray = 0;
  TimingPeerIdentifier = apsession_getTimingPeerIdentifier();
  if (*(unsigned char *)DerivedStorage)
  {
    if (gLogCategory_APSenderSessionAirPlay <= 50
      && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_13;
  }
  if (*(__CFString **)(DerivedStorage + 16) != @"PTP")
  {
LABEL_13:
    uint64_t v11 = 0;
    goto LABEL_56;
  }
  uint64_t v5 = TimingPeerIdentifier;
  uint64_t v6 = APSGetFBOPropertyInt64();
  uint64_t v7 = *(void *)(DerivedStorage + 72);
  uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = *(unsigned int (**)(uint64_t, const void *, BOOL, CFArrayRef *))(v9 + 56);
  if (!v10 || v10(v7, v5, v6 != 0, &theArray))
  {
    APSLogErrorAt();
    goto LABEL_13;
  }
  if (gLogCategory_APSenderSessionAirPlay <= 50
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    CFArrayGetCount(theArray);
    if (gLogCategory_APSenderSessionAirPlay == -1) {
      _LogCategory_Initialize();
    }
    LogPrintF();
  }
  CFArrayRef v12 = theArray;
  CFTypeRef cf = 0;
  CFTypeRef v29 = 0;
  CFDataRef data = 0;
  CFTypeRef v27 = 0;
  if (!theArray
    || apsession_isCancelled()
    || (apsession_copyTransportControlStream(a2, &v29), (uint64_t v13 = v29) == 0))
  {
    APSLogErrorAt();
LABEL_67:
    uint64_t v11 = 0;
    uint64_t v22 = 0;
    goto LABEL_41;
  }
  CFAllocatorRef v14 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFDataRef v15 = CFPropertyListCreateData((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v12, kCFPropertyListBinaryFormat_v1_0, 0, 0);
  if (!v15)
  {
    APSLogErrorAt();
    CFRelease(v13);
    goto LABEL_67;
  }
  CFDataRef v16 = v15;
  if (FigCreateBlockBufferWithCFDataNoCopy()) {
    goto LABEL_38;
  }
  uint64_t v17 = v6 ? 1936027768 : 1936027749;
  CFTypeRef v18 = cf;
  uint64_t v19 = *(void *)(CMBaseObjectGetVTable() + 16);
  uint64_t v20 = v19 ? v19 : 0;
  uint64_t v21 = *(unsigned int (**)(const void *, uint64_t, CFTypeRef, CFTypeRef *))(v20 + 56);
  if (!v21 || v21(v13, v17, v18, &v27) || apsession_isCancelled()) {
    goto LABEL_38;
  }
  uint64_t v11 = 0;
  if (!v6)
  {
    uint64_t v22 = 0;
    goto LABEL_40;
  }
  uint64_t v22 = 0;
  if (v27)
  {
    if (!FigCreateCFDataWithBlockBufferNoCopy())
    {
      CFPropertyListRef v23 = CFPropertyListCreateWithData(v14, data, 0, 0, 0);
      uint64_t v22 = v23;
      if (!v23 || (CFTypeID v24 = CFGetTypeID(v23), v24 != CFDictionaryGetTypeID()))
      {
        APSLogErrorAt();
        uint64_t v11 = 0;
        goto LABEL_40;
      }
      uint64_t v11 = v22;
      goto LABEL_39;
    }
LABEL_38:
    APSLogErrorAt();
    uint64_t v11 = 0;
LABEL_39:
    uint64_t v22 = 0;
  }
LABEL_40:
  CFRelease(v13);
  CFRelease(v16);
LABEL_41:
  if (cf) {
    CFRelease(cf);
  }
  if (v27) {
    CFRelease(v27);
  }
  if (data) {
    CFRelease(data);
  }
  if (v22) {
    CFRelease(v22);
  }
  if (gLogCategory_APSenderSessionAirPlay <= 50
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (v11 && APSNetworkClockAddOrUpdatePeerFromSerializablePeerDictionary()) {
    APSLogErrorAt();
  }
LABEL_56:
  if (theArray) {
    CFRelease(theArray);
  }
  if (v11) {
    CFRelease(v11);
  }
}

const void *apsession_getTimingPeerIdentifier()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFDictionaryRef v1 = *(const __CFDictionary **)(DerivedStorage + 248);
  if (!v1) {
    return *(const void **)(DerivedStorage + 216);
  }
  uint64_t v2 = (const void *)*MEMORY[0x1E4F4A118];
  return CFDictionaryGetValue(v1, v2);
}

uint64_t apsession_isCancelled()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionAirPlay <= 30
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  uint64_t v1 = *(unsigned __int8 *)(DerivedStorage + 267);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
  return v1;
}

void apsession_copyTransportSession(uint64_t a1, void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  CFTypeRef v4 = *(CFTypeRef *)(DerivedStorage + 280);
  if (v4) {
    CFTypeRef v4 = CFRetain(v4);
  }
  *a2 = v4;
  JUMPOUT(0x1D25EB390);
}

void apsession_setTransportSession(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v4 = DerivedStorage;
  uint64_t v5 = *(const void **)(DerivedStorage + 280);
  if (v5 == a2)
  {
    *(void *)(DerivedStorage + 280) = a2;
    uint64_t v6 = a2;
    if (!a2) {
      return;
    }
LABEL_21:
    CFRetain(a2);
    if (!v6) {
      return;
    }
    goto LABEL_22;
  }
  if (v5
    && gLogCategory_APSenderSessionAirPlay <= 50
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a2)
  {
    if (gLogCategory_APSenderSessionAirPlay <= 50
      && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(v4 + 279) = 0;
    *(void *)(v4 + 271) = 0;
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterAddWeakListener();
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterAddWeakListener();
    if (gLogCategory_APSenderSessionAirPlay <= 30
      && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v6 = *(const void **)(v4 + 280);
    *(void *)(v4 + 280) = a2;
    goto LABEL_21;
  }
  uint64_t v6 = *(const void **)(v4 + 280);
  *(void *)(v4 + 280) = 0;
  if (!v6) {
    return;
  }
LABEL_22:
  CFRelease(v6);
}

void apsession_postFeedbackReceivedNotificationCallback(uint64_t a1)
{
  CMBaseObjectGetDerivedStorage();
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterPostNotification();
  CFRelease(*(CFTypeRef *)a1);
  uint64_t v2 = *(const void **)(a1 + 8);
  if (v2)
  {
    CFRelease(v2);
  }
}

uint64_t FigTransportSessionCopyProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t CMBaseObject = FigTransportSessionGetCMBaseObject();
  uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10) {
    return 4294954514;
  }
  return v10(CMBaseObject, a2, a3, a4);
}

uint64_t apsession_getConnectionLatencyHint(uint64_t a1, int *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  if (*(void *)(DerivedStorage + 280))
  {
    if (*(void *)(DerivedStorage + 288))
    {
      if (APSGetFBOPropertyInt64()) {
        goto LABEL_10;
      }
      int v4 = APSGetFBOPropertyInt64();
      uint64_t CMBaseObject = FigTransportStreamGetCMBaseObject();
      uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v6) {
        uint64_t v7 = v6;
      }
      else {
        uint64_t v7 = 0;
      }
      uint64_t v8 = *(void (**)(uint64_t, void, void, CFTypeRef *))(v7 + 48);
      if (v8) {
        v8(CMBaseObject, *MEMORY[0x1E4F47660], *MEMORY[0x1E4F1CF80], &cf);
      }
      if (v4 == 2)
      {
LABEL_10:
        uint64_t v9 = 0;
        int v10 = 1;
      }
      else
      {
        uint64_t v9 = 0;
        if (APSIsDirectLinkInterface()) {
          int v10 = -1;
        }
        else {
          int v10 = 0;
        }
      }
    }
    else
    {
      uint64_t v9 = 4294895466;
      APSLogErrorAt();
      int v10 = 0;
    }
  }
  else
  {
    APSLogErrorAt();
    int v10 = 0;
    uint64_t v9 = 4294895467;
  }
  if (a2) {
    *a2 = v10;
  }
  if (cf) {
    CFRelease(cf);
  }
  return v9;
}

__CFDictionary *apsession_copyShowInfo()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  value = 0;
  uint64_t v1 = *MEMORY[0x1E4F1CF80];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  CFTypeRef v3 = Mutable;
  int v4 = (const void *)*MEMORY[0x1E4F1CFD0];
  uint64_t v5 = (const void *)*MEMORY[0x1E4F1CFC8];
  if (*(unsigned char *)(DerivedStorage + 264)) {
    uint64_t v6 = (const void *)*MEMORY[0x1E4F1CFD0];
  }
  else {
    uint64_t v6 = (const void *)*MEMORY[0x1E4F1CFC8];
  }
  CFDictionarySetValue(Mutable, @"isConnected", v6);
  if (*(unsigned char *)(DerivedStorage + 266)) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = v5;
  }
  CFDictionarySetValue(v3, @"isSessionStarted", v7);
  if (*(unsigned char *)(DerivedStorage + 267)) {
    uint64_t v8 = v4;
  }
  else {
    uint64_t v8 = v5;
  }
  CFDictionarySetValue(v3, @"isCancelled", v8);
  if (*(void *)(DerivedStorage + 280))
  {
    uint64_t CMBaseObject = FigTransportSessionGetCMBaseObject();
    uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v10) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    CFArrayRef v12 = *(unsigned int (**)(uint64_t, void, uint64_t, void **))(v11 + 48);
    if (!v12 || v12(CMBaseObject, *MEMORY[0x1E4F476C8], v1, &value)) {
      APSLogErrorAt();
    }
    else {
      CFDictionarySetValue(v3, @"TransportSessionInfo", value);
    }
  }
  if (value) {
    CFRelease(value);
  }
  return v3;
}

uint64_t APAuthenticationClientCopyProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t CMBaseObject = APAuthenticationClientGetCMBaseObject();
  uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10) {
    return 4294954514;
  }
  return v10(CMBaseObject, a2, a3, a4);
}

uint64_t apsession_updateSenderSessionMetricsForRTCStats()
{
  CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionAirPlay <= 30
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursiveEx()) {
    CFDictionarySetInt64();
  }
  if (!APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursiveEx()) {
    CFDictionarySetInt64();
  }
  APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursive();
  APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursive();
  APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursive();
  APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursive();
  APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursive();
  APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursive();
  APSEventRecorderGetEventTimeRecursive();
  if (v0 != 0.0) {
    APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursive();
  }
  APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursive();
  APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursive();
  APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursive();
  APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursive();
  APSEventRecorderGetTimeBetweenEventsInMilliSecondRecursive();
  CFDictionarySetInt64();
  CFDictionarySetInt64();
  CFDictionarySetInt64();
  CFDictionarySetInt64();
  CFDictionarySetInt64();
  CFDictionarySetInt64();
  CFDictionarySetInt64();
  CFDictionarySetInt64();
  CFDictionarySetInt64();
  CFDictionarySetInt64();
  CFDictionarySetInt64();
  CFDictionarySetInt64();
  CFDictionarySetInt64();
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t result = *(void *)(DerivedStorage + 136);
  if (result)
  {
    uint64_t result = CFArrayGetCount((CFArrayRef)result);
    CFIndex v3 = result - 1;
    if (result >= 1)
    {
      CFIndex v4 = result;
      CFArrayGetValueAtIndex(*(CFArrayRef *)(DerivedStorage + 136), 0);
      CFArrayGetValueAtIndex(*(CFArrayRef *)(DerivedStorage + 136), v3);
      APSEventRecorderGetEventTime();
      if (v5 == 0.0)
      {
        uint64_t result = APSEventRecorderGetTimeSinceEventInMilliSecond();
        CFIndex v3 = v4;
        if (!result)
        {
LABEL_16:
          if (v3) {
            return CFDictionarySetInt64();
          }
          return result;
        }
      }
      else
      {
        uint64_t result = APSEventRecorderGetTimeBetweenEventsInMilliSecond();
        if (!result) {
          goto LABEL_16;
        }
      }
      uint64_t result = CFDictionarySetInt64();
      goto LABEL_16;
    }
  }
  return result;
}

uint64_t FigTransportStreamCopyProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t CMBaseObject = FigTransportStreamGetCMBaseObject();
  uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10) {
    return 4294954514;
  }
  return v10(CMBaseObject, a2, a3, a4);
}

uint64_t apsession_DumpHierarchy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  uint64_t v10 = *(const void **)(DerivedStorage + 280);
  if (v10) {
    CFTypeRef v11 = CFRetain(v10);
  }
  else {
    CFTypeRef v11 = 0;
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, const char *, ...))(a5 + 16))(a5, a3, "SenderSession:[%{ptr}] Parent:[%{ptr}]\n", a1, a2);
  if (v12)
  {
    uint64_t v18 = v12;
LABEL_21:
    APSLogErrorAt();
    if (!v11) {
      return v18;
    }
    goto LABEL_17;
  }
  uint64_t v13 = a3 + 1;
  APSHierarchyReporterProtocolGetProtocolID();
  Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
  if (!ProtocolVTable || (uint64_t v15 = *(void *)(ProtocolVTable + 16)) == 0)
  {
    uint64_t v18 = 4294954508;
LABEL_14:
    uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t, const char *, ...))(a5 + 16))(a5, v13, "[Error] Object:[%{ptr}]%?s%?''@ cannot be dumped (error %#m) Parent:[%{ptr}]\n", v11, 0, " ", 0, 0, v18, a1);
    goto LABEL_15;
  }
  CFDataRef v16 = *(uint64_t (**)(CFTypeRef, uint64_t, uint64_t, void, uint64_t))(v15 + 8);
  if (!v16)
  {
    uint64_t v18 = 4294954514;
    goto LABEL_14;
  }
  uint64_t v17 = v16(v11, a1, v13, 0, a5);
  uint64_t v18 = v17;
  if (v17 == -12782 || v17 == -12788) {
    goto LABEL_14;
  }
LABEL_15:
  if (v18) {
    goto LABEL_21;
  }
  if (v11) {
LABEL_17:
  }
    CFRelease(v11);
  return v18;
}

BOOL apsession_IsConnected()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionAirPlay <= 30
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  if (*(unsigned char *)(DerivedStorage + 264)) {
    BOOL v1 = *(unsigned char *)(DerivedStorage + 265) != 0;
  }
  else {
    BOOL v1 = 0;
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
  return v1;
}

uint64_t apsession_IsActive()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionAirPlay <= 30
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  uint64_t v1 = *(unsigned __int8 *)(DerivedStorage + 266);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
  return v1;
}

uint64_t apsession_EnsureStarted()
{
  CMBaseObjectGetDerivedStorage();
  return APSDispatchSyncTask();
}

uint64_t apsession_UpdateSession()
{
  CMBaseObjectGetDerivedStorage();
  return APSDispatchSyncTask();
}

uint64_t apsession_SetupStreamCreatingResponse()
{
  if (!*(unsigned char *)CMBaseObjectGetDerivedStorage()) {
    return APSDispatchSyncTask();
  }
  APSLogErrorAt();
  return 4294954511;
}

uint64_t apsession_TeardownStream()
{
  return APSDispatchSyncTask();
}

uint64_t apsession_CreateTransportStream(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v12 = 0;
  if (!*(unsigned char *)CMBaseObjectGetDerivedStorage())
  {
    apsession_copyTransportSession(a1, &v12);
    uint64_t v6 = v12;
    if (!v12)
    {
      APSLogErrorAt();
      return 4294895467;
    }
    uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v7) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 0;
    }
    uint64_t v9 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v8 + 24);
    if (v9)
    {
      uint64_t v10 = v9(v6, a2, a3);
      if (!v10)
      {
LABEL_11:
        CFRelease(v6);
        return v10;
      }
    }
    else
    {
      uint64_t v10 = 4294954514;
    }
    APSLogErrorAt();
    goto LABEL_11;
  }
  APSLogErrorAt();
  return APSSignalErrorAt();
}

uint64_t apsession_CreateTransportStreamWithID(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  CFAllocatorRef v14 = 0;
  if (!*(unsigned char *)CMBaseObjectGetDerivedStorage())
  {
    apsession_copyTransportSession(a1, &v14);
    uint64_t v8 = v14;
    if (!v14)
    {
      APSLogErrorAt();
      return 4294895467;
    }
    uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v9) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    CFTypeRef v11 = *(uint64_t (**)(const void *, uint64_t, uint64_t, uint64_t))(v10 + 32);
    if (v11)
    {
      uint64_t v12 = v11(v8, a2, a3, a4);
      if (!v12)
      {
LABEL_11:
        CFRelease(v8);
        return v12;
      }
    }
    else
    {
      uint64_t v12 = 4294954514;
    }
    APSLogErrorAt();
    goto LABEL_11;
  }
  APSLogErrorAt();
  return APSSignalErrorAt();
}

uint64_t apsession_PrepareForTeardown(void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionAirPlay <= 50
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  *(unsigned char *)(DerivedStorage + 267) = 1;
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
  CFRetain(a1);
  dispatch_async_f(*(dispatch_queue_t *)(DerivedStorage + 152), a1, (dispatch_function_t)apsession_prepareForTeardownInternal);
  return 0;
}

uint64_t apsession_EnsureStopped()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  *(unsigned char *)(DerivedStorage + 267) = 1;
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
  return APSDispatchSyncTask();
}

uint64_t apsession_SendAudioContentTypeUpdate()
{
  return APSDispatchSyncTask();
}

uint64_t apsession_SetEventCallbacks(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](DerivedStorage[32]);
  MEMORY[0x1D25EAD70](DerivedStorage + 38);
  DerivedStorage[38] = 0;
  DerivedStorage[39] = a3;
  DerivedStorage[40] = a4;
  DerivedStorage[41] = a5;
  if (a2) {
    FigCFWeakReferenceStore();
  }
  MEMORY[0x1D25EB390](DerivedStorage[32]);
  return 0;
}

uint64_t apsession_PerformStage1StartTransaction(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (*(_DWORD *)(CMBaseObjectGetDerivedStorage() + 64) != 5) {
    return 0;
  }
  uint64_t v5 = APSDispatchSyncTask();
  if (v5) {
    APSLogErrorAt();
  }
  else {
    *a4 = 0;
  }
  return v5;
}

uint64_t apsession_PerformStage2StartTransaction()
{
  if (*(_DWORD *)(CMBaseObjectGetDerivedStorage() + 64) == 5) {
    return APSDispatchSyncTask();
  }
  else {
    return 0;
  }
}

uint64_t apsession_BroadcastKeysForDiagnosticsData()
{
  return APSDispatchSyncTask();
}

uint64_t apsession_ensureStartedInternal(uint64_t a1)
{
  v5[0] = a1;
  memset(&v5[1], 0, 24);
  v4[0] = a1;
  v4[1] = 0;
  uint64_t started = apsession_ensureStartedInternalStage1StartTransaction((uint64_t)v5);
  if (started)
  {
    uint64_t v2 = started;
    goto LABEL_5;
  }
  uint64_t v2 = apsession_ensureStartedInternalStage2StartTransaction((uint64_t)v4);
  if (v2) {
LABEL_5:
  }
    APSLogErrorAt();
  return v2;
}

uint64_t apsession_ensureStartedInternalStage1StartTransaction(uint64_t a1)
{
  uint64_t v2 = *(const void **)a1;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef v63 = 0;
  uint64_t v64 = 0;
  CFTypeRef v62 = 0;
  if (gLogCategory_APSenderSessionAirPlay <= 30
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)DerivedStorage)
  {
    uint64_t v23 = 4294954511;
    goto LABEL_131;
  }
  if (*(unsigned char *)(DerivedStorage + 177)) {
    goto LABEL_183;
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  int v4 = *(unsigned __int8 *)(DerivedStorage + 266);
  int v5 = *(unsigned __int8 *)(DerivedStorage + 268);
  uint64_t v6 = *(const void **)(DerivedStorage + 384);
  uint64_t v7 = *(const void **)(a1 + 16);
  *(void *)(DerivedStorage + 384) = v7;
  if (v7) {
    CFRetain(v7);
  }
  if (v6) {
    CFRelease(v6);
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
  if (v4)
  {
    uint64_t v23 = 0;
    goto LABEL_142;
  }
  if (v5)
  {
LABEL_183:
    uint64_t v23 = 4294895467;
    goto LABEL_131;
  }
  uint64_t v8 = CMBaseObjectGetDerivedStorage();
  *(void *)(v8 + 416) = 0;
  *(void *)(v8 + 424) = 0;
  CFArrayGetCount(*(CFArrayRef *)(v8 + 136));
  uint64_t v9 = (const void *)CFStringCreateF();
  APSEventRecorderRemoveChildEventRecorderFromParent();
  if (*(void *)(v8 + 144))
  {
    CFRelease(*(CFTypeRef *)(v8 + 144));
    *(void *)(v8 + 144) = 0;
  }
  uint64_t v10 = APSEventRecorderCreate();
  if (v10)
  {
    uint64_t v23 = v10;
  }
  else
  {
    if (*(_DWORD *)(v8 + 64) == 5)
    {
      uint64_t v11 = APSEventRecorderAddSignPostForEvent();
      if (v11)
      {
        uint64_t v23 = v11;
        goto LABEL_209;
      }
      uint64_t v12 = APSEventRecorderAddSignPostForEvent();
      if (v12)
      {
        uint64_t v23 = v12;
        goto LABEL_209;
      }
      uint64_t v13 = APSEventRecorderAddSignPostForEvent();
      if (v13)
      {
        uint64_t v23 = v13;
        goto LABEL_209;
      }
      uint64_t v14 = APSEventRecorderAddSignPostForEvent();
      if (v14)
      {
        uint64_t v23 = v14;
        goto LABEL_209;
      }
      uint64_t v15 = APSEventRecorderAddSignPostForEvent();
      if (v15)
      {
        uint64_t v23 = v15;
        goto LABEL_209;
      }
      uint64_t v16 = APSEventRecorderAddSignPostForEvent();
      if (v16)
      {
        uint64_t v23 = v16;
        goto LABEL_209;
      }
      uint64_t v17 = APSEventRecorderAddSignPostForEvent();
      if (v17)
      {
        uint64_t v23 = v17;
        goto LABEL_209;
      }
      uint64_t v18 = APSEventRecorderAddSignPostForEvent();
      if (v18)
      {
        uint64_t v23 = v18;
        goto LABEL_209;
      }
      uint64_t v19 = APSEventRecorderAddSignPostForEvent();
      if (v19)
      {
        uint64_t v23 = v19;
        goto LABEL_209;
      }
      uint64_t v20 = APSEventRecorderAddSignPostForEvent();
      if (v20)
      {
        uint64_t v23 = v20;
        goto LABEL_209;
      }
      uint64_t v21 = APSEventRecorderAddSignPostForEvent();
      if (v21)
      {
        uint64_t v23 = v21;
        goto LABEL_209;
      }
      uint64_t v22 = APSEventRecorderAddSignPostForEvent();
      if (v22)
      {
        uint64_t v23 = v22;
        goto LABEL_209;
      }
    }
    uint64_t v23 = MEMORY[0x1D25E8260](*(void *)(v8 + 128), *(void *)(v8 + 144));
    if (!v23)
    {
      CFArrayAppendValue(*(CFMutableArrayRef *)(v8 + 136), *(const void **)(v8 + 144));
      goto LABEL_31;
    }
  }
LABEL_209:
  APSLogErrorAt();
LABEL_31:
  if (v9) {
    CFRelease(v9);
  }
  if (v23) {
    goto LABEL_212;
  }
  APSEventRecorderRecordEvent();
  if (IsAppleInternalBuild()
    && gLogCategory_APSenderSessionAirPlay <= 50
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  mach_absolute_time();
  uint64_t v23 = apsession_ensureConnectedInternal(v2);
  mach_absolute_time();
  if (IsAppleInternalBuild())
  {
    int v24 = v23 ? 90 : 50;
    if (v24 >= gLogCategory_APSenderSessionAirPlay
      && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
    {
      UpTicksToMilliseconds();
      LogPrintF();
    }
  }
  if (v23) {
    goto LABEL_212;
  }
  if (*(void *)(DerivedStorage + 144)) {
    APSEventRecorderRecordEvent();
  }
  if (*(_DWORD *)(DerivedStorage + 64) == 5)
  {
    uint64_t v25 = LogCategoryCopyOSLogHandle();
    uint64_t v26 = (void *)v25;
    if (v25) {
      CFTypeRef v27 = v25;
    }
    else {
      CFTypeRef v27 = MEMORY[0x1E4F14500];
    }
    if (os_signpost_enabled(v27))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl(&dword_1D0945000, v27, OS_SIGNPOST_EVENT, 0x2B8D081CuLL, "AP_SIGNPOST_CAR_AUTHORIZE_START", (const char *)&unk_1D0B9874E, buf, 2u);
    }
    if (v26) {
      os_release(v26);
    }
  }
  unsigned int v69 = 0;
  uint64_t v28 = CMBaseObjectGetDerivedStorage();
  uint64_t v67 = 0;
  *(void *)buf = 0;
  CFTypeRef v65 = 0;
  CFTypeRef cf = 0;
  if (*(unsigned char *)(v28 + 106))
  {
    if (gLogCategory_APSenderSessionAirPlay <= 90
      && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_70;
  }
  uint64_t v29 = v28;
  if (*(_DWORD *)(v28 + 64) == 10)
  {
LABEL_70:
    uint64_t v30 = 0;
    CFTypeRef v31 = 0;
    CFTypeRef v32 = 0;
    goto LABEL_71;
  }
  uint64_t v30 = 0;
  CFTypeRef v31 = 0;
  CFTypeRef v32 = 0;
  if (APSGetFBOPropertyInt64()) {
    goto LABEL_71;
  }
  int v33 = APSGetFBOPropertyInt64();
  if (v69)
  {
    APSLogErrorAt();
    goto LABEL_70;
  }
  MEMORY[0x1D25EB370](*(void *)(v29 + 256));
  CFTypeRef v34 = *(CFTypeRef *)(v29 + 368);
  if (v34) {
    CFTypeRef v34 = CFRetain(v34);
  }
  CFTypeRef cf = v34;
  CFArrayRef v35 = *(const void **)(v29 + 376);
  if (v35) {
    CFTypeRef v31 = CFRetain(v35);
  }
  else {
    CFTypeRef v31 = 0;
  }
  uint64_t v56 = *(const void **)(v29 + 384);
  if (v56) {
    CFTypeRef v32 = CFRetain(v56);
  }
  else {
    CFTypeRef v32 = 0;
  }
  MEMORY[0x1D25EB390](*(void *)(v29 + 256));
  CFTypeRef v36 = cf;
  if (cf)
  {
    uint64_t v30 = 0;
    goto LABEL_72;
  }
  apsession_copyTransportControlStream((uint64_t)v2, &v67);
  unsigned int v69 = 0;
  uint64_t v30 = v67;
  if (!v67)
  {
    APSLogErrorAt();
    int v61 = -71821;
    goto LABEL_186;
  }
  if (v33 <= 7)
  {
    if (v33 == 1)
    {
      if (IsAppleInternalBuild() && *(_DWORD *)(v29 + 64) == 5)
      {
        uint64_t v58 = *MEMORY[0x1E4F1CF80];
        unsigned int v69 = APEndpointDescriptionCopyProperty(*(void *)(v29 + 48), @"MACAddress", *MEMORY[0x1E4F1CF80], (uint64_t)buf);
        if (v69) {
          goto LABEL_219;
        }
        unsigned int v69 = APAuthenticationClientRSACreate(v58, v30, *(CFDataRef *)buf, &cf);
        if (v69) {
          goto LABEL_219;
        }
        goto LABEL_173;
      }
      goto LABEL_172;
    }
    if (v33 != 4) {
      goto LABEL_179;
    }
    unsigned int v69 = APAuthenticationClientFairPlayCreate(*MEMORY[0x1E4F1CF80], v67, &cf);
    if (!v69) {
      goto LABEL_173;
    }
LABEL_219:
    APSLogErrorAt();
    goto LABEL_71;
  }
  if (v33 == 8)
  {
    unsigned int v69 = APAuthenticationClientMFiCreate(*MEMORY[0x1E4F1CF80], v67, &cf);
    if (!v69) {
      goto LABEL_173;
    }
    goto LABEL_219;
  }
  if (v33 != 16)
  {
    if (v33 == 32)
    {
      if (v31)
      {
        uint64_t v57 = *MEMORY[0x1E4F1CF80];
        unsigned int v69 = APPairingClientCopyProperty((uint64_t)v31, 0x1F26DBF80, *MEMORY[0x1E4F1CF80], (uint64_t)&v65);
        if (v69) {
          goto LABEL_219;
        }
        unsigned int v69 = APAuthenticationClientMFiMutualAuthCreate(v57, v30, v32, (const __CFData *)v65, &cf);
        if (v69) {
          goto LABEL_219;
        }
        goto LABEL_173;
      }
      APSLogErrorAt();
      int v61 = -71829;
LABEL_186:
      unsigned int v69 = v61;
      goto LABEL_71;
    }
LABEL_179:
    if (gLogCategory_APSenderSessionAirPlay <= 90
      && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    int v61 = -71824;
    goto LABEL_186;
  }
LABEL_172:
  unsigned int v69 = APAuthenticationClientTokenCreate(*MEMORY[0x1E4F1CF80], v30, &cf);
  if (v69) {
    goto LABEL_219;
  }
LABEL_173:
  unsigned int v69 = APAuthenticationClientAuthenticateEndpoint((uint64_t)cf);
  if (v69) {
    goto LABEL_219;
  }
  MEMORY[0x1D25EB370](*(void *)(v29 + 256));
  uint64_t v59 = *(const void **)(v29 + 368);
  CFTypeRef v60 = cf;
  *(void *)(v29 + 368) = cf;
  if (v60) {
    CFRetain(v60);
  }
  if (v59) {
    CFRelease(v59);
  }
  MEMORY[0x1D25EB390](*(void *)(v29 + 256));
LABEL_71:
  CFTypeRef v36 = cf;
  if (cf) {
LABEL_72:
  }
    CFRelease(v36);
  if (*(void *)buf) {
    CFRelease(*(CFTypeRef *)buf);
  }
  if (v30) {
    CFRelease(v30);
  }
  if (v31) {
    CFRelease(v31);
  }
  if (v32) {
    CFRelease(v32);
  }
  if (v65) {
    CFRelease(v65);
  }
  uint64_t v23 = v69;
  if (*(void *)(DerivedStorage + 144)) {
    APSEventRecorderRecordEvent();
  }
  if (*(_DWORD *)(DerivedStorage + 64) == 5)
  {
    uint64_t v37 = LogCategoryCopyOSLogHandle();
    uint64_t v38 = (void *)v37;
    if (v37) {
      uint64_t v39 = v37;
    }
    else {
      uint64_t v39 = MEMORY[0x1E4F14500];
    }
    if (os_signpost_enabled(v39))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl(&dword_1D0945000, v39, OS_SIGNPOST_EVENT, 0x2B8D089CuLL, "AP_SIGNPOST_CAR_AUTHORIZE_COMPLETE", (const char *)&unk_1D0B9874E, buf, 2u);
    }
    if (v38) {
      os_release(v38);
    }
  }
  if (v23) {
    goto LABEL_212;
  }
  uint64_t v40 = apsession_ensureKeyHolderSetUp();
  if (v40)
  {
    uint64_t v23 = v40;
    goto LABEL_212;
  }
  unsigned int v41 = *(_DWORD *)(DerivedStorage + 64);
  if (v41 > 8 || ((1 << v41) & 0x1C2) == 0)
  {
    uint64_t v54 = apsession_ensureSenderNetworkClockStarted((uint64_t)v2);
    if (v54)
    {
      uint64_t v23 = v54;
LABEL_212:
      APSLogErrorAt();
      goto LABEL_131;
    }
  }
  if (*(void *)(DerivedStorage + 144)) {
    APSEventRecorderRecordEvent();
  }
  if (*(_DWORD *)(DerivedStorage + 64) == 5)
  {
    uint64_t v42 = LogCategoryCopyOSLogHandle();
    uint64_t v43 = (void *)v42;
    if (v42) {
      uint64_t v44 = v42;
    }
    else {
      uint64_t v44 = MEMORY[0x1E4F14500];
    }
    if (os_signpost_enabled(v44))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl(&dword_1D0945000, v44, OS_SIGNPOST_EVENT, 0x2B8D08A8uLL, "AP_SIGNPOST_CAR_SETUPMESSAGE_START", (const char *)&unk_1D0B9874E, buf, 2u);
    }
    if (v43) {
      os_release(v43);
    }
  }
  uint64_t v23 = apsession_ensureControlStreamSetup((uint64_t)v2, *(const void **)(a1 + 8), (_DWORD *)&v64 + 1, &v64, &v63, &v62);
  if (*(void *)(DerivedStorage + 144)) {
    APSEventRecorderRecordEvent();
  }
  if (*(_DWORD *)(DerivedStorage + 64) == 5)
  {
    uint64_t v45 = LogCategoryCopyOSLogHandle();
    uint64_t v46 = (void *)v45;
    if (v45) {
      uint64_t v47 = v45;
    }
    else {
      uint64_t v47 = MEMORY[0x1E4F14500];
    }
    if (os_signpost_enabled(v47))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl(&dword_1D0945000, v47, OS_SIGNPOST_EVENT, 0x2B8D08ACuLL, "AP_SIGNPOST_CAR_SETUPMESSAGE_COMPLETE", (const char *)&unk_1D0B9874E, buf, 2u);
    }
    if (v46) {
      os_release(v46);
    }
  }
  if (v23) {
    goto LABEL_212;
  }
  if (v62)
  {
    uint64_t v48 = *(CFTypeRef **)(a1 + 24);
    if (v48)
    {
      CFTypeRef *v48 = v62;
      CFTypeRef v62 = 0;
    }
  }
  if (v64)
  {
    if (*(_DWORD *)(DerivedStorage + 64) == 5)
    {
      uint64_t v49 = apsession_ensureLowPowerKeepAliveStreamSetup((uint64_t)v2, v64);
      if (v49)
      {
        uint64_t v23 = v49;
        goto LABEL_212;
      }
    }
  }
  if (*(__CFString **)(DerivedStorage + 16) == @"PTP")
  {
    uint64_t v50 = *(const void **)(DerivedStorage + 248);
    CFTypeRef v51 = v63;
    *(void *)(DerivedStorage + 248) = v63;
    if (v51) {
      CFRetain(v51);
    }
    if (v50) {
      CFRelease(v50);
    }
    uint64_t v52 = apsession_addPeerToNetworkClock();
    if (v52)
    {
      uint64_t v23 = v52;
      goto LABEL_212;
    }
  }
  uint64_t v23 = apsession_ensureEventStreamCreated((uint64_t)v2, SHIDWORD(v64));
  if (v23) {
    goto LABEL_212;
  }
LABEL_131:
  if (v23) {
    int v53 = 90;
  }
  else {
    int v53 = 50;
  }
  if (v53 >= gLogCategory_APSenderSessionAirPlay
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (v23)
  {
    apsession_recordActivationMessageTiming((uint64_t)v2);
    apsession_disconnectControlStream((uint64_t)v2);
  }
LABEL_142:
  if (v63) {
    CFRelease(v63);
  }
  if (v62) {
    CFRelease(v62);
  }
  return v23;
}

uint64_t apsession_ensureStartedInternalStage2StartTransaction(uint64_t a1)
{
  uint64_t v2 = *(const void **)a1;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int v4 = &unk_1EB9F5000;
  if (gLogCategory_APSenderSessionAirPlay <= 30
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)DerivedStorage)
  {
    APSLogErrorAt();
    uint64_t Info = 4294954511;
    goto LABEL_195;
  }
  if (*(unsigned char *)(DerivedStorage + 177))
  {
    uint64_t Info = 4294895467;
    goto LABEL_240;
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  int v5 = *(unsigned __int8 *)(DerivedStorage + 266);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
  if (v5) {
    goto LABEL_194;
  }
  if (*(void *)(DerivedStorage + 144)) {
    APSEventRecorderRecordEvent();
  }
  if (*(_DWORD *)(DerivedStorage + 64) == 5)
  {
    uint64_t v6 = LogCategoryCopyOSLogHandle();
    uint64_t v7 = (void *)v6;
    if (v6) {
      uint64_t v8 = v6;
    }
    else {
      uint64_t v8 = MEMORY[0x1E4F14500];
    }
    if (os_signpost_enabled(v8))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl(&dword_1D0945000, v8, OS_SIGNPOST_EVENT, 0x2B8D08B0uLL, "AP_SIGNPOST_CAR_INFOMESSAGE_START", (const char *)&unk_1D0B9874E, buf, 2u);
    }
    if (v7) {
      os_release(v7);
    }
  }
  mach_absolute_time();
  int v9 = *(_DWORD *)(DerivedStorage + 64);
  BOOL v10 = v9 == 9 || v9 == 4;
  if (v10
    && APSIsInAirPlaySenderSystemServer()
    && FVDUtilsEncryptedEncodeSupported()
    && APSSettingsIsFeatureEnabled())
  {
    uint64_t v11 = *(void *)(DerivedStorage + 48);
    uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v12) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 16);
    if (v29) {
      int v30 = v29(v11, 87);
    }
    else {
      int v30 = 0;
    }
    BOOL v14 = v30 != 0;
  }
  else
  {
    BOOL v14 = 0;
  }
  CFDictionaryRef v15 = *(const __CFDictionary **)(a1 + 8);
  uint64_t v16 = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionAirPlay <= 30
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(v16 + 164))
  {
    uint64_t Info = 0;
  }
  else
  {
    uint64_t Info = apsession_fetchInfo(v2, 0, v14, v15);
    if (Info) {
      APSLogErrorAt();
    }
    else {
      *(unsigned char *)(v16 + 164) = 1;
    }
  }
  mach_absolute_time();
  if (*(void *)(DerivedStorage + 144)) {
    APSEventRecorderRecordEvent();
  }
  if (*(_DWORD *)(DerivedStorage + 64) == 5)
  {
    uint64_t v18 = LogCategoryCopyOSLogHandle();
    uint64_t v19 = (void *)v18;
    if (v18) {
      uint64_t v20 = v18;
    }
    else {
      uint64_t v20 = MEMORY[0x1E4F14500];
    }
    if (os_signpost_enabled(v20))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl(&dword_1D0945000, v20, OS_SIGNPOST_EVENT, 0x2B8D08B4uLL, "AP_SIGNPOST_CAR_INFOMESSAGE_COMPLETE", (const char *)&unk_1D0B9874E, buf, 2u);
    }
    if (v19) {
      os_release(v19);
    }
  }
  if (IsAppleInternalBuild()
    && gLogCategory_APSenderSessionAirPlay <= 50
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    UpTicksToMilliseconds();
    LogPrintF();
  }
  if (Info) {
    goto LABEL_240;
  }
  unsigned int v21 = *(_DWORD *)(DerivedStorage + 64);
  if (v21 <= 8 && ((1 << v21) & 0x1C2) != 0) {
    goto LABEL_55;
  }
  APSEventRecorderRecordEvent();
  mach_absolute_time();
  uint64_t v28 = CMBaseObjectGetDerivedStorage();
  LODWORD(v77) = 0;
  *(void *)buf = 0;
  if (gLogCategory_APSenderSessionAirPlay <= 30
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(v28 + 163))
  {
    unsigned int v69 = 0;
    uint64_t Info = 0;
  }
  else
  {
    if (APSGetFBOPropertyInt64())
    {
      apsession_copyTransportControlStream((uint64_t)v2, buf);
      unsigned int v69 = *(const void **)buf;
      if (!*(void *)buf)
      {
        APSLogErrorAt();
        uint64_t Info = 4294895475;
        goto LABEL_218;
      }
      uint64_t Info = APSenderSessionUtilityFetchInitialVolume(*(const void **)buf, (int *)&v77);
      if (Info)
      {
        APSLogErrorAt();
        goto LABEL_218;
      }
      MEMORY[0x1D25EB370](*(void *)(v28 + 256));
      *(_DWORD *)(v28 + 360) = v77;
      MEMORY[0x1D25EB390](*(void *)(v28 + 256));
    }
    else
    {
      if (gLogCategory_APSenderSessionAirPlay <= 30
        && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      unsigned int v69 = 0;
      uint64_t Info = 0;
    }
    *(unsigned char *)(v28 + 163) = 1;
  }
LABEL_218:
  if (gLogCategory_APSenderSessionAirPlay <= 50
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (v69) {
    CFRelease(v69);
  }
  mach_absolute_time();
  APSEventRecorderRecordEvent();
  if (IsAppleInternalBuild()
    && gLogCategory_APSenderSessionAirPlay <= 50
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    UpTicksToMilliseconds();
    LogPrintF();
  }
  if (Info) {
    goto LABEL_240;
  }
LABEL_55:
  if (!v14) {
    goto LABEL_157;
  }
  uint64_t v22 = CMBaseObjectGetDerivedStorage();
  CFTypeRef v77 = 0;
  BOOL v76 = 0;
  CFTypeRef v74 = 0;
  CFTypeRef cf = 0;
  if (!*(void *)(v22 + 168))
  {
    uint64_t Info = 4294895467;
    APSLogErrorAt();
    CFTypeRef v31 = 0;
    uint64_t v25 = 0;
    goto LABEL_146;
  }
  uint64_t v23 = (void *)v22;
  CFAllocatorRef allocator = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  uint64_t v25 = Mutable;
  uint64_t v26 = (const void **)MEMORY[0x1E4F1CFD0];
  if (!v23[21]) {
    uint64_t v26 = (const void **)MEMORY[0x1E4F1CFC8];
  }
  CFDictionarySetValue(Mutable, @"displayCapabilities", *v26);
  uint64_t v72 = v25;
  uint64_t v27 = APPWDKeyExchangeSenderSessionCreate((uint64_t)v25, &v77);
  if (v27)
  {
    uint64_t Info = v27;
    APSLogErrorAt();
    CFTypeRef v31 = 0;
    goto LABEL_146;
  }
  if (gLogCategory_APSenderSessionAirPlay <= 50)
  {
    if (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
    if (gLogCategory_APSenderSessionAirPlay <= 50
      && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  uint64_t v71 = v23;
  CFTypeRef v31 = 0;
  CFTypeRef v32 = "OSStatus apsession_performPWDKeyExchange(APSenderSessionRef)";
  while (1)
  {
    if (cf)
    {
      CFRelease(cf);
      CFTypeRef cf = 0;
    }
    int v33 = v4[332];
    if (v33 <= 30)
    {
      if (v33 != -1) {
        goto LABEL_81;
      }
      if (!_LogCategory_Initialize()) {
        goto LABEL_88;
      }
      int v33 = v4[332];
      if (v33 <= 30)
      {
LABEL_81:
        if (v33 == -1) {
          _LogCategory_Initialize();
        }
      }
      LogPrintF();
    }
LABEL_88:
    uint64_t v34 = APPWDKeyExchangeSenderSessionPerformKeyExchange((uint64_t)v77, (uint64_t)v31, &cf, &v76);
    if (v34)
    {
      uint64_t Info = v34;
LABEL_232:
      APSLogErrorAt();
      uint64_t v25 = v72;
      goto LABEL_146;
    }
    int v35 = v4[332];
    if (v76) {
      break;
    }
    if (v35 <= 50 && (v35 != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    if (v31) {
      CFRelease(v31);
    }
    int v36 = v4[332];
    if (v36 <= 30)
    {
      if (v36 != -1) {
        goto LABEL_98;
      }
      if (!_LogCategory_Initialize()) {
        goto LABEL_105;
      }
      int v36 = v4[332];
      if (v36 <= 30)
      {
LABEL_98:
        if (v36 == -1) {
          _LogCategory_Initialize();
        }
      }
      LogPrintF();
    }
LABEL_105:
    CFTypeRef v37 = cf;
    uint64_t v38 = CMBaseObjectGetDerivedStorage();
    *(void *)buf = 0;
    MEMORY[0x1D25EB370](*(void *)(v38 + 256));
    uint64_t v39 = *(const void **)(v38 + 288);
    if (!v39)
    {
      MEMORY[0x1D25EB390](*(void *)(v38 + 256));
LABEL_112:
      APSLogErrorAt();
      CFTypeRef v31 = 0;
      uint64_t Info = 0;
      goto LABEL_120;
    }
    CFTypeRef v40 = CFRetain(v39);
    MEMORY[0x1D25EB390](*(void *)(v38 + 256));
    if (!v40) {
      goto LABEL_112;
    }
    unsigned int v41 = v2;
    uint64_t v42 = v4;
    uint64_t v43 = (const CFDictionaryKeyCallBacks *)MEMORY[0x1E4F1D530];
    uint64_t v44 = (const CFDictionaryValueCallBacks *)MEMORY[0x1E4F1D540];
    uint64_t v45 = CFDictionaryCreateMutable(allocator, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    CFDictionarySetValue(v45, @"data", v37);
    uint64_t v46 = CFDictionaryCreateMutable(allocator, 0, v43, v44);
    CFDictionarySetValue(v46, @"params", v45);
    CFDictionarySetValue(v46, @"type", @"performPWDKeyExchange");
    uint64_t Info = APTransportStreamSendPlistMessageCreatingPlistReply();
    if (Info || !*(void *)buf)
    {
      APSLogErrorAt();
      CFTypeRef v31 = 0;
    }
    else
    {
      uint64_t v47 = v32;
      BOOL v48 = CFDictionaryGetInt64() != 0;
      CFDataGetTypeID();
      TypedCFDictionaryRef Value = (const void *)CFDictionaryGetTypedValue();
      if (TypedValue) {
        CFTypeRef v31 = CFRetain(TypedValue);
      }
      else {
        CFTypeRef v31 = 0;
      }
      BOOL v76 = v48;
      CFTypeRef v32 = v47;
    }
    CFRelease(v40);
    if (v46) {
      CFRelease(v46);
    }
    if (v45) {
      CFRelease(v45);
    }
    int v4 = v42;
    uint64_t v2 = v41;
LABEL_120:
    if (*(void *)buf) {
      CFRelease(*(CFTypeRef *)buf);
    }
    if (Info) {
      goto LABEL_232;
    }
    int v50 = v4[332];
    if (v76)
    {
      if (v50 <= 50)
      {
        uint64_t v25 = v72;
        if (v50 != -1 || _LogCategory_Initialize()) {
          goto LABEL_135;
        }
        goto LABEL_140;
      }
LABEL_136:
      uint64_t v25 = v72;
      goto LABEL_144;
    }
    if (v50 <= 50 && (v50 != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
  }
  if (v35 > 50) {
    goto LABEL_136;
  }
  uint64_t v25 = v72;
  if (v35 != -1 || _LogCategory_Initialize()) {
LABEL_135:
  }
    LogPrintF();
LABEL_140:
  int v51 = v4[332];
  if (v51 <= 50 && (v51 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
LABEL_144:
  uint64_t v52 = APPWDKeyExchangeSenderSessionCopyEncoderEncryptionContext((uint64_t)v77, (uint64_t)&v74);
  if (v52)
  {
    uint64_t Info = v52;
    int v70 = v4[332];
    if (v70 <= 90 && (v70 != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
  }
  else
  {
    MEMORY[0x1D25EB370](v71[32]);
    v71[59] = v74;
    CFTypeRef v74 = 0;
    v71[60] = CFDictionaryGetInt64();
    MEMORY[0x1D25EB390](v71[32]);
    uint64_t Info = 0;
  }
LABEL_146:
  if (v77)
  {
    APPWDKeyExchangeSenderSessionInvalidate((uint64_t)v77);
    CFRelease(v77);
    CFTypeRef v77 = 0;
  }
  if (v25) {
    CFRelease(v25);
  }
  if (v31) {
    CFRelease(v31);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v74) {
    CFRelease(v74);
  }
  if (Info)
  {
LABEL_240:
    APSLogErrorAt();
    goto LABEL_195;
  }
LABEL_157:
  if (*(void *)(DerivedStorage + 144)) {
    APSEventRecorderRecordEvent();
  }
  if (*(_DWORD *)(DerivedStorage + 64) == 5)
  {
    uint64_t v53 = LogCategoryCopyOSLogHandle();
    uint64_t v54 = (void *)v53;
    if (v53) {
      uint64_t v55 = v53;
    }
    else {
      uint64_t v55 = MEMORY[0x1E4F14500];
    }
    if (os_signpost_enabled(v55))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl(&dword_1D0945000, v55, OS_SIGNPOST_EVENT, 0x2B8D08A0uLL, "AP_SIGNPOST_CAR_STARTSESSION_START", (const char *)&unk_1D0B9874E, buf, 2u);
    }
    if (v54) {
      os_release(v54);
    }
  }
  uint64_t v56 = CMBaseObjectGetDerivedStorage();
  *(void *)buf = 0;
  MEMORY[0x1D25EB370](*(void *)(v56 + 256));
  int v57 = *(unsigned __int8 *)(v56 + 266);
  MEMORY[0x1D25EB390](*(void *)(v56 + 256));
  int v58 = v4[332];
  if (v58 <= 30 && (v58 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  if (v57)
  {
    uint64_t Info = 0;
  }
  else
  {
    apsession_copyTransportControlStream((uint64_t)v2, buf);
    uint64_t v59 = *(const void **)buf;
    if (*(void *)buf)
    {
      uint64_t Info = APTransportStreamSendPlistMessageCreatingPlistReply();
      if (Info)
      {
        APSLogErrorAt();
      }
      else
      {
        MEMORY[0x1D25EB370](*(void *)(v56 + 256));
        *(unsigned char *)(v56 + 266) = 1;
        MEMORY[0x1D25EB390](*(void *)(v56 + 256));
      }
      CFRelease(v59);
    }
    else
    {
      APSLogErrorAt();
      uint64_t Info = 4294895475;
    }
  }
  if (*(void *)(DerivedStorage + 144)) {
    APSEventRecorderRecordEvent();
  }
  if (*(_DWORD *)(DerivedStorage + 64) == 5)
  {
    uint64_t v60 = LogCategoryCopyOSLogHandle();
    int v61 = (void *)v60;
    if (v60) {
      CFTypeRef v62 = v60;
    }
    else {
      CFTypeRef v62 = MEMORY[0x1E4F14500];
    }
    if (os_signpost_enabled(v62))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl(&dword_1D0945000, v62, OS_SIGNPOST_EVENT, 0x2B8D08A4uLL, "AP_SIGNPOST_CAR_STARTSESSION_COMPLETE", (const char *)&unk_1D0B9874E, buf, 2u);
    }
    if (v61) {
      os_release(v61);
    }
  }
  if (Info) {
    goto LABEL_240;
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  *(unsigned char *)(DerivedStorage + 268) = 1;
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
  int KeepAliveMode = apsession_getKeepAliveMode();
  uint64_t v64 = apsession_ensureKeepAliveStarted((uint64_t)v2, KeepAliveMode);
  if (v64)
  {
    uint64_t Info = v64;
    goto LABEL_240;
  }
  int v65 = v4[332];
  if (v65 <= 40 && (v65 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  apsession_updateReceiverInfoForRTCStats();
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
  CMNotificationCenterGetDefaultLocalCenter();
  FigDispatchAsyncPostNotification();
LABEL_194:
  uint64_t Info = 0;
LABEL_195:
  if (Info) {
    int v66 = 90;
  }
  else {
    int v66 = 50;
  }
  int v67 = v4[332];
  if (v66 >= v67 && (v67 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  apsession_recordActivationMessageTiming((uint64_t)v2);
  if (Info) {
    apsession_disconnectControlStream((uint64_t)v2);
  }
  return Info;
}

uint64_t apsession_ensureConnectedInternal(const void *a1)
{
  unsigned int v269 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  char v268 = 0;
  CFTypeRef v266 = 0;
  v267 = 0;
  CFDataRef v265 = 0;
  *(void *)buffer = 0;
  uint64_t v262 = 0;
  int v264 = 0;
  uint64_t v263 = 0;
  v258 = 0;
  v259 = 0;
  v260 = 0;
  if (gLogCategory_APSenderSessionAirPlay <= 30
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)DerivedStorage)
  {
    APSLogErrorAt();
    uint64_t v22 = 0;
    unsigned int v269 = APSSignalErrorAt();
    goto LABEL_681;
  }
  uint64_t v3 = APSGetFBOPropertyInt64();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  if (*(unsigned char *)(DerivedStorage + 264))
  {
    int v4 = *(unsigned __int8 *)(DerivedStorage + 265);
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
    if (v4)
    {
      if (gLogCategory_APSenderSessionAirPlay > 30
        || gLogCategory_APSenderSessionAirPlay == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_680;
      }
      goto LABEL_10;
    }
  }
  else
  {
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
  }
  LODWORD(buf[0]) = 0;
  uint64_t v5 = CMBaseObjectGetDerivedStorage();
  LODWORD(v270) = 0;
  LODWORD(v275[0]) = 0;
  LODWORD(v274) = 0;
  if (apsession_isCancelled())
  {
    APSLogErrorAt();
    unsigned int v269 = -71832;
    goto LABEL_622;
  }
  APSenderSessionGetPreferredAndEligibleTransportsBasedOnUsage(*(_DWORD *)(v5 + 64), *(void *)(v5 + 48), (int *)&v270, (int *)&v274, &v268);
  int v6 = apsession_determineTransportAvailabilityAndWaitIfNeeded((uint64_t)a1, 8, (int)v274, v275, 0, (int *)buf);
  BOOL v7 = v6 == 0;
  if (LODWORD(buf[0])) {
    goto LABEL_628;
  }
  apsession_determineTransportAvailabilityAndWaitIfNeeded((uint64_t)a1, 1, (int)v274, v275, 0, (int *)buf);
  if (LODWORD(buf[0])) {
    goto LABEL_628;
  }
  BOOL v8 = !v6 && v270 == 4;
  int v9 = v8;
  if (apsession_determineTransportAvailabilityAndWaitIfNeeded((uint64_t)a1, 4, (int)v274, v275, v9, (int *)buf))
  {
    if (v6)
    {
      BOOL v7 = 0;
      unsigned int v10 = 8;
    }
    else if v270 != 4 && ((uint64_t)v275[0])
    {
      unsigned int v10 = 0;
      BOOL v7 = 1;
    }
    else
    {
      BOOL v7 = 0;
      unsigned int v10 = 4;
    }
  }
  else
  {
    unsigned int v10 = 8 * (v6 != 0);
    if (v270 == 4) {
      LODWORD(v270) = 2;
    }
  }
  if (LODWORD(buf[0])) {
    goto LABEL_628;
  }
  int v11 = v270 == 2 && v7;
  int v12 = apsession_determineTransportAvailabilityAndWaitIfNeeded((uint64_t)a1, 2, (int)v274, v275, v11, (int *)buf);
  if (!v10 && v12)
  {
    if v270 != 2 && ((uint64_t)v275[0]) {
      unsigned int v10 = 0;
    }
    else {
      unsigned int v10 = 2;
    }
  }
  if (LODWORD(buf[0]))
  {
LABEL_628:
    APSLogErrorAt();
    int v13 = 0;
    char v256 = 0;
  }
  else
  {
    if (v10 <= 1) {
      int v13 = 1;
    }
    else {
      int v13 = v10;
    }
    if (gLogCategory_APSenderSessionAirPlay <= 50
      && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    char v256 = (char)v275[0];
  }
  unsigned int v269 = buf[0];
  if (LODWORD(buf[0]))
  {
    if (LODWORD(buf[0]) != -71832) {
      goto LABEL_679;
    }
    goto LABEL_622;
  }
  if ((v256 & 0xF) == 0)
  {
    if (gLogCategory_APSenderSessionAirPlay <= 90
      && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v22 = 0;
    int v23 = -6705;
    goto LABEL_76;
  }
  if (*(void *)(DerivedStorage + 144)) {
    APSEventRecorderRecordEvent();
  }
  if (*(_DWORD *)(DerivedStorage + 64) == 5)
  {
    uint64_t v14 = LogCategoryCopyOSLogHandle();
    CFDictionaryRef v15 = (void *)v14;
    if (v14) {
      uint64_t v16 = v14;
    }
    else {
      uint64_t v16 = MEMORY[0x1E4F14500];
    }
    if (os_signpost_enabled(v16))
    {
      LOWORD(buf[0]) = 0;
      _os_signpost_emit_with_name_impl(&dword_1D0945000, v16, OS_SIGNPOST_EVENT, 0x2B8D08D4uLL, "AP_SIGNPOST_CAR_INITIALCONNECTION_START", (const char *)&unk_1D0B9874E, (uint8_t *)buf, 2u);
    }
    if (v15) {
      os_release(v15);
    }
  }
  uint64_t v246 = v3;
  mach_absolute_time();
  uint64_t v17 = CMBaseObjectGetDerivedStorage();
  uint64_t v18 = v17;
  if (v13 == 8) {
    int FallbackConnectionType = 1;
  }
  else {
    int FallbackConnectionType = v13;
  }
  MEMORY[0x1D25EB370](*(void *)(v17 + 256));
  int v20 = *(unsigned __int8 *)(v18 + 264);
  MEMORY[0x1D25EB390](*(void *)(v18 + 256));
  if (!v20)
  {
    if (gLogCategory_APSenderSessionAirPlay <= 50
      && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v252 = CMBaseObjectGetDerivedStorage();
    int v21 = 0;
    int v271 = 0;
    CFTypeRef v270 = 0;
    value = (void *)*MEMORY[0x1E4F1CFD0];
    key = (void *)*MEMORY[0x1E4F47690];
    v247 = (void *)*MEMORY[0x1E4F47698];
    v242 = (const void *)*MEMORY[0x1E4F1CFC8];
    v243 = (void *)*MEMORY[0x1E4F476B8];
    v238 = (void *)*MEMORY[0x1E4F47648];
    v239 = (void *)*MEMORY[0x1E4F47640];
    v240 = (void *)*MEMORY[0x1E4F47658];
    v241 = (const void *)*MEMORY[0x1E4F47650];
    uint64_t v235 = *MEMORY[0x1E4F477E0];
    uint64_t v236 = *MEMORY[0x1E4F477D8];
    uint64_t v234 = *MEMORY[0x1E4F47798];
    uint64_t v232 = *MEMORY[0x1E4F47730];
    uint64_t v233 = *MEMORY[0x1E4F477D0];
    CFAllocatorRef allocator = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    uint64_t v244 = DerivedStorage;
    while (1)
    {
      int v24 = FallbackConnectionType;
      int FallbackConnectionType = APSenderSessionGetFallbackConnectionType(FallbackConnectionType, v256, v21, &v270);
      ++*(void *)(v252 + 424);
      uint64_t v25 = CMBaseObjectGetDerivedStorage();
      if (apsession_isCancelled())
      {
        APSLogErrorAt();
        int v33 = 0;
        goto LABEL_297;
      }
      uint64_t v26 = CMBaseObjectGetDerivedStorage();
      v274 = 0;
      v275[0] = 0;
      uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(v26 + 48));
      uint64_t v28 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v29 = v28 ? v28 : 0;
      int v30 = *(uint64_t (**)(uint64_t, __CFString *, const __CFAllocator *, const void **))(v29 + 48);
      if (!v30) {
        break;
      }
      int v31 = v30(CMBaseObject, @"TransportDevice", allocator, v275);
      if (v31)
      {
        int v21 = v31;
        goto LABEL_94;
      }
      APTransportDeviceGetTransportsRequiringBroker();
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(allocator, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      if (Mutable)
      {
        CFDictionarySetInt64();
        CFDictionarySetInt64();
        if (APSGetAllowPersistentGroupsOnInfra()) {
          CFDictionarySetValue(Mutable, key, value);
        }
        if (FallbackConnectionType)
        {
          if (gLogCategory_APSenderSessionAirPlay <= 40
            && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          CMTimeMake((CMTime *)buf, 15000, 1000);
          FigCFDictionarySetCMTime();
        }
        if (gLogCategory_APSenderSessionAirPlay <= 30
          && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t v34 = *(const void **)(v26 + 144);
        if (v34) {
          CFDictionarySetValue(Mutable, v247, v34);
        }
        if (*(_DWORD *)(v26 + 64) == 5) {
          CFDictionarySetValue(Mutable, v243, value);
        }
        uint64_t SharedTransport = APTransportGetSharedTransport();
        uint64_t v36 = *(void *)(v26 + 8);
        CFTypeRef v37 = v275[0];
        uint64_t v38 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v38) {
          uint64_t v39 = v38;
        }
        else {
          uint64_t v39 = 0;
        }
        CFTypeRef v40 = *(uint64_t (**)(uint64_t, const __CFAllocator *, uint64_t, const void *, __CFDictionary *, const void **))(v39 + 24);
        if (v40)
        {
          int v21 = v40(SharedTransport, allocator, v36, v37, Mutable, &v274);
          if (v21)
          {
            int v33 = 0;
          }
          else
          {
            int v33 = v274;
            v274 = 0;
          }
        }
        else
        {
          int v33 = 0;
          int v21 = -12782;
        }
      }
      else
      {
        APSLogErrorAt();
        int v33 = 0;
        int v21 = -71820;
      }
LABEL_112:
      if (v275[0]) {
        CFRelease(v275[0]);
      }
      if (Mutable) {
        CFRelease(Mutable);
      }
      if (v274) {
        CFRelease(v274);
      }
      if (v21) {
        goto LABEL_135;
      }
      MEMORY[0x1D25EB370](*(void *)(v25 + 256));
      if (*(void *)(v25 + 280))
      {
        apsession_invalidateAndClearTransportStreams(a1);
        uint64_t v41 = FigTransportSessionGetCMBaseObject();
        if (v41)
        {
          uint64_t v42 = v41;
          uint64_t v43 = *(void *)(CMBaseObjectGetVTable() + 8);
          uint64_t v44 = v43 ? v43 : 0;
          uint64_t v45 = *(void (**)(uint64_t))(v44 + 24);
          if (v45) {
            v45(v42);
          }
        }
      }
      apsession_setTransportSession((uint64_t)a1, v33);
      MEMORY[0x1D25EB390](*(void *)(v25 + 256));
      if (apsession_isCancelled())
      {
        APSLogErrorAt();
LABEL_297:
        CFTypeRef v51 = 0;
LABEL_307:
        int v21 = -71832;
        goto LABEL_218;
      }
      uint64_t v46 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v46) {
        uint64_t v47 = v46;
      }
      else {
        uint64_t v47 = 0;
      }
      BOOL v48 = *(uint64_t (**)(const void *))(v47 + 16);
      if (!v48)
      {
        int v21 = -12782;
LABEL_135:
        APSLogErrorAt();
        CFTypeRef v51 = 0;
        goto LABEL_218;
      }
      int v49 = v48(v33);
      if (v49)
      {
        int v21 = v49;
        goto LABEL_135;
      }
      MEMORY[0x1D25EB370](*(void *)(v25 + 256));
      uint64_t v50 = CMBaseObjectGetDerivedStorage();
      buf[0] = 0;
      if (!*(void *)(v50 + 288))
      {
        uint64_t v52 = v50;
        uint64_t v53 = (const CFDictionaryKeyCallBacks *)MEMORY[0x1E4F1D530];
        uint64_t v54 = (const CFDictionaryValueCallBacks *)MEMORY[0x1E4F1D540];
        CFDictionaryRef theDict = CFDictionaryCreateMutable(allocator, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
        if (theDict)
        {
          uint64_t v55 = CFDictionaryCreateMutable(allocator, 0, v53, v54);
          if (v55)
          {
            uint64_t v56 = APEndpointDescriptionGetCMBaseObject(*(void *)(v52 + 48));
            uint64_t v57 = *(void *)(CMBaseObjectGetVTable() + 8);
            uint64_t DerivedStorage = v244;
            if (v57) {
              uint64_t v58 = v57;
            }
            else {
              uint64_t v58 = 0;
            }
            uint64_t v59 = *(void (**)(uint64_t, __CFString *, const __CFAllocator *, CFTypeRef *))(v58 + 48);
            if (v59)
            {
              v59(v56, @"TransportDevice", allocator, buf);
              CMTimeValue v60 = (CMTimeValue)buf[0];
            }
            else
            {
              CMTimeValue v60 = 0;
            }
            unsigned int v61 = *(_DWORD *)(CMBaseObjectGetDerivedStorage() + 64) - 1;
            if (v61 < 8 && ((0xF5u >> v61) & 1) != 0)
            {
              int v62 = 1;
            }
            else if ((v24 & 4) != 0)
            {
              int v62 = 1;
            }
            else if (v60)
            {
              if ((v24 & 1) != 0
                && ((LOBYTE(v275[0]) = 0,
                     LOBYTE(v274) = 0,
                     APTransportDeviceGetInfraReachability(),
                     apsession_isDirectLinkEligible())
                 && (int v62 = LOBYTE(v275[0]), LOBYTE(v275[0]))
                 || (int v62 = v274, (_BYTE)v274)))
              {
                uint64_t DerivedStorage = v244;
              }
              else
              {
                APTransportDeviceShouldPerformTrafficRegistration();
                int v62 = 0;
              }
            }
            else
            {
              int v62 = 0;
            }
            if (gLogCategory_APSenderSessionAirPlay <= 50
              && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            if (v62) {
              CFTypeRef v63 = v242;
            }
            else {
              CFTypeRef v63 = value;
            }
            CFDictionarySetValue(v55, v241, v63);
            uint64_t v64 = theDict;
            if (*(void *)(v52 + 96))
            {
              if (gLogCategory_APSenderSessionAirPlay <= 50
                && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              CFDictionarySetValue(v55, v239, value);
              CFDictionarySetValue(v55, v238, *(const void **)(v52 + 96));
            }
            CFDictionarySetValue(theDict, v240, v55);
            CFDictionarySetInt64();
            uint64_t v65 = *(void *)(v52 + 280);
            uint64_t v66 = *(void *)(CMBaseObjectGetVTable() + 16);
            if (v66) {
              uint64_t v67 = v66;
            }
            else {
              uint64_t v67 = 0;
            }
            uint64_t v68 = *(uint64_t (**)(uint64_t, uint64_t))(v67 + 32);
            if (v68)
            {
              int v69 = v68(v65, 1668575852);
              if (v69)
              {
                int v21 = v69;
                uint64_t v64 = theDict;
                uint64_t DerivedStorage = v244;
              }
              else
              {
                v237 = (uint64_t *)(v52 + 288);
                uint64_t v70 = *(void *)(v52 + 288);
                uint64_t v71 = *(void *)(CMBaseObjectGetVTable() + 16);
                if (v71) {
                  uint64_t v72 = v71;
                }
                else {
                  uint64_t v72 = 0;
                }
                uint64_t v64 = theDict;
                uint64_t v73 = *(uint64_t (**)(uint64_t, void, void, const void *))(v72 + 24);
                if (v73)
                {
                  uint64_t DerivedStorage = v244;
                  int v74 = v73(v70, apsession_controlStreamMessageCallback, 0, a1);
                  if (!v74)
                  {
                    ShortVersionsize_t Length = APSVersionUtilsGetShortVersionLength();
                    CFStringRef cf = CFStringCreateWithFormat(allocator, 0, @"AirPlay/%.*s", ShortVersionLength, "835.19.1.1");
                    if (cf)
                    {
                      uint64_t v229 = APSGetFBOPropertyInt64();
                      uint64_t v76 = FigTransportStreamGetCMBaseObject();
                      uint64_t v77 = *(void *)(CMBaseObjectGetVTable() + 8);
                      if (v77) {
                        uint64_t v78 = v77;
                      }
                      else {
                        uint64_t v78 = 0;
                      }
                      CFTypeRef v97 = *(void (**)(uint64_t, uint64_t, CFStringRef))(v78 + 56);
                      if (v97) {
                        v97(v76, v236, cf);
                      }
                      uint64_t v98 = FigTransportStreamGetCMBaseObject();
                      uint64_t v99 = *(void *)(CMBaseObjectGetVTable() + 8);
                      if (v99) {
                        uint64_t v100 = v99;
                      }
                      else {
                        uint64_t v100 = 0;
                      }
                      BOOL v101 = *(void (**)(uint64_t, uint64_t, __CFString *))(v100 + 56);
                      if (v101) {
                        v101(v98, v235, @"iTunes");
                      }
                      uint64_t v228 = *(void *)(v52 + 352);
                      uint64_t v102 = FigTransportStreamGetCMBaseObject();
                      uint64_t v103 = *(void *)(CMBaseObjectGetVTable() + 8);
                      if (v103) {
                        uint64_t v104 = v103;
                      }
                      else {
                        uint64_t v104 = 0;
                      }
                      uint64_t v105 = *(void (**)(uint64_t, uint64_t, uint64_t))(v104 + 56);
                      if (v105) {
                        v105(v102, v234, v228);
                      }
                      uint64_t v106 = *v237;
                      CFUUIDRef v107 = value;
                      if (!v229) {
                        CFUUIDRef v107 = (void *)v242;
                      }
                      v230 = v107;
                      uint64_t v108 = *(void *)(CMBaseObjectGetVTable() + 8);
                      if (v108) {
                        uint64_t v109 = v108;
                      }
                      else {
                        uint64_t v109 = 0;
                      }
                      uint64_t v110 = *(void (**)(uint64_t, uint64_t, void *))(v109 + 56);
                      if (v110) {
                        v110(v106, v233, v230);
                      }
                      APSenderSessionMessageSendTimeout();
                      APSSetFBOPropertyInt64();
                      unsigned int v111 = *(_DWORD *)(v52 + 64);
                      if (v111 <= 8 && ((1 << v111) & 0x1C2) != 0)
                      {
                        uint64_t v112 = *v237;
                        uint64_t v113 = *(void *)(CMBaseObjectGetVTable() + 8);
                        if (v113) {
                          uint64_t v114 = v113;
                        }
                        else {
                          uint64_t v114 = 0;
                        }
                        uint64_t v115 = *(void (**)(uint64_t, uint64_t, void *))(v114 + 56);
                        if (v115) {
                          v115(v112, v232, value);
                        }
                        unsigned int v111 = *(_DWORD *)(v52 + 64);
                      }
                      if ((v111 > 8 || ((1 << v111) & 0x1C2) == 0)
                        && (!*(void *)(v52 + 400) || !*(_DWORD *)(v52 + 408))
                        && gLogCategory_APSenderSessionAirPlay <= 60
                        && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
                      {
                        LogPrintF();
                      }
                      APSSetFBOPropertyInt64();
                      APSSetFBOPropertyInt64();
                      if (gLogCategory_APSenderSessionAirPlay <= 50
                        && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
                      {
                        LogPrintF();
                      }
                      CFRelease(cf);
                      int v21 = 0;
                    }
                    else
                    {
                      APSLogErrorAt();
                      int v21 = -6728;
                    }
                    goto LABEL_184;
                  }
                  int v21 = v74;
                }
                else
                {
                  int v21 = -12782;
                  uint64_t DerivedStorage = v244;
                }
              }
            }
            else
            {
              int v21 = -12782;
            }
            APSLogErrorAt();
LABEL_184:
            if (buf[0]) {
              CFRelease(buf[0]);
            }
            if (v64) {
              CFRelease(v64);
            }
            if (v55) {
              CFRelease(v55);
            }
            goto LABEL_190;
          }
          APSLogErrorAt();
        }
        else
        {
          APSLogErrorAt();
          uint64_t v55 = 0;
        }
        int v21 = -71820;
        uint64_t DerivedStorage = v244;
        uint64_t v64 = theDict;
        goto LABEL_184;
      }
      int v21 = 0;
LABEL_190:
      uint64_t v79 = *(const void **)(v25 + 288);
      if (v79) {
        CFTypeRef v51 = CFRetain(v79);
      }
      else {
        CFTypeRef v51 = 0;
      }
      MEMORY[0x1D25EB390](*(void *)(v25 + 256));
      if (v21) {
        goto LABEL_217;
      }
      if (apsession_isCancelled()) {
        goto LABEL_306;
      }
      if (*(void *)(v25 + 56))
      {
        int v80 = APSConnectionInterfaceManagerSelectInterface();
        if (v80)
        {
          int v21 = v80;
LABEL_217:
          APSLogErrorAt();
          goto LABEL_218;
        }
      }
      else if (gLogCategory_APSenderSessionAirPlay <= 40 {
             && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
      }
      {
        LogPrintF();
      }
      uint64_t v81 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v81) {
        uint64_t v82 = v81;
      }
      else {
        uint64_t v82 = 0;
      }
      uint64_t v83 = *(uint64_t (**)(CFTypeRef))(v82 + 8);
      if (!v83)
      {
        int v21 = -12782;
        goto LABEL_217;
      }
      int v84 = v83(v51);
      if (v84)
      {
        int v21 = v84;
        goto LABEL_217;
      }
      if (apsession_isCancelled()) {
        goto LABEL_306;
      }
      uint64_t v85 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v85) {
        uint64_t v86 = v85;
      }
      else {
        uint64_t v86 = 0;
      }
      uint64_t v87 = *(uint64_t (**)(CFTypeRef))(v86 + 16);
      if (!v87)
      {
        int v21 = -12782;
        goto LABEL_217;
      }
      int v88 = v87(v51);
      if (v88)
      {
        int v21 = v88;
        goto LABEL_217;
      }
      if (apsession_isCancelled())
      {
LABEL_306:
        APSLogErrorAt();
        goto LABEL_307;
      }
      MEMORY[0x1D25EB370](*(void *)(v25 + 256));
      *(unsigned char *)(v25 + 264) = 1;
      MEMORY[0x1D25EB390](*(void *)(v25 + 256));
      int v21 = 0;
LABEL_218:
      MEMORY[0x1D25EB370](*(void *)(v25 + 256));
      *(unsigned char *)(v25 + 271) = 1;
      if (!v21) {
        int v21 = *(_DWORD *)(v25 + 272);
      }
      *(_DWORD *)(v25 + 276) = v21;
      MEMORY[0x1D25EB390](*(void *)(v25 + 256));
      if (v21)
      {
        buf[0] = 0;
        uint64_t v89 = *(void *)(CMBaseObjectGetDerivedStorage() + 48);
        CFAllocatorRef v90 = CFGetAllocator(a1);
        uint64_t v91 = APEndpointDescriptionGetCMBaseObject(v89);
        uint64_t v92 = *(void *)(CMBaseObjectGetVTable() + 8);
        if (v92) {
          uint64_t v93 = v92;
        }
        else {
          uint64_t v93 = 0;
        }
        CFAllocatorRef v94 = *(void (**)(uint64_t, __CFString *, CFAllocatorRef, CFTypeRef *))(v93 + 48);
        if (v94)
        {
          v94(v91, @"TransportDevice", v90, buf);
          if (buf[0])
          {
            if (gLogCategory_APSenderSessionAirPlay <= 50
              && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            APTransportDeviceReconfirm();
            if (buf[0]) {
              CFRelease(buf[0]);
            }
          }
        }
        if (*(void *)(v25 + 56) && *(_DWORD *)(v25 + 208))
        {
          APSConnectionInterfaceManagerReleaseInterfaceSelection();
          *(_DWORD *)(v25 + 208) = 0;
        }
      }
      if (v51) {
        CFRelease(v51);
      }
      if (v33) {
        CFRelease(v33);
      }
      if (!v21) {
        goto LABEL_320;
      }
      if (FallbackConnectionType) {
        BOOL v95 = v21 == -71832;
      }
      else {
        BOOL v95 = 1;
      }
      char v96 = v95;
      if (gLogCategory_APSenderSessionAirPlay <= 50
        && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (v96)
      {
        APSLogErrorAt();
        APSLogErrorAt();
        goto LABEL_319;
      }
    }
    int v21 = -12782;
LABEL_94:
    APSLogErrorAt();
    int v33 = 0;
    CFMutableDictionaryRef Mutable = 0;
    goto LABEL_112;
  }
  int v21 = 0;
LABEL_319:
  int v24 = 1;
LABEL_320:
  unsigned int v269 = v21;
  mach_absolute_time();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  *(void *)(DerivedStorage + 464) = UpTicksToMilliseconds();
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
  if (*(void *)(DerivedStorage + 144)) {
    APSEventRecorderRecordEvent();
  }
  if (*(_DWORD *)(DerivedStorage + 64) == 5)
  {
    uint64_t v116 = LogCategoryCopyOSLogHandle();
    uint64_t v117 = (void *)v116;
    if (v116) {
      uint64_t v118 = v116;
    }
    else {
      uint64_t v118 = MEMORY[0x1E4F14500];
    }
    if (os_signpost_enabled(v118))
    {
      LOWORD(buf[0]) = 0;
      _os_signpost_emit_with_name_impl(&dword_1D0945000, v118, OS_SIGNPOST_EVENT, 0x2B8D08D8uLL, "AP_SIGNPOST_CAR_INITIALCONNECTION_COMPLETE", (const char *)&unk_1D0B9874E, (uint8_t *)buf, 2u);
    }
    if (v117) {
      os_release(v117);
    }
  }
  if (IsAppleInternalBuild()
    && gLogCategory_APSenderSessionAirPlay <= 50
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    UpTicksToMilliseconds();
    LogPrintF();
  }
  if (!v21)
  {
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
    CFDictionarySetInt64();
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
    if (*(_DWORD *)(DerivedStorage + 64) != 5)
    {
      APSEventRecorderRecordEvent();
      mach_absolute_time();
      Initialuint64_t Info = apsession_fetchInitialInfo(a1);
      unsigned int v269 = InitialInfo;
      mach_absolute_time();
      APSEventRecorderRecordEvent();
      if (IsAppleInternalBuild()
        && gLogCategory_APSenderSessionAirPlay <= 50
        && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
      {
        UpTicksToMilliseconds();
        LogPrintF();
      }
      if (InitialInfo == -71831) {
        goto LABEL_680;
      }
      if (InitialInfo)
      {
        if (gLogCategory_APSenderSessionAirPlay <= 40
          && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        unsigned int v269 = 0;
      }
    }
    if (*(void *)(DerivedStorage + 144)) {
      APSEventRecorderRecordEvent();
    }
    if (*(_DWORD *)(DerivedStorage + 64) == 5)
    {
      uint64_t v120 = LogCategoryCopyOSLogHandle();
      int v121 = (void *)v120;
      if (v120) {
        int v122 = v120;
      }
      else {
        int v122 = MEMORY[0x1E4F14500];
      }
      if (os_signpost_enabled(v122))
      {
        LOWORD(buf[0]) = 0;
        _os_signpost_emit_with_name_impl(&dword_1D0945000, v122, OS_SIGNPOST_EVENT, 0x2B8D0814uLL, "AP_SIGNPOST_CAR_PAIRING_START", (const char *)&unk_1D0B9874E, (uint8_t *)buf, 2u);
      }
      if (v121) {
        os_release(v121);
      }
    }
    uint64_t v123 = CMBaseObjectGetDerivedStorage();
    uint64_t v124 = APSGetFBOPropertyInt64();
    uint64_t v125 = CMBaseObjectGetDerivedStorage();
    if (*(_DWORD *)(v125 + 64) == 10)
    {
      BOOL v257 = 0;
    }
    else if (*(unsigned char *)(v125 + 106))
    {
      BOOL v257 = 0;
    }
    else
    {
      BOOL v126 = APSGetFBOPropertyInt64() || APSGetFBOPropertyInt64() || apsession_getTransportsRequiringBroker() != 0;
      BOOL v257 = v126;
    }
    char v273 = 0;
    if (APSGetFBOPropertyInt64() && (IsAppleInternalBuild() || APSSettingsGetInt64()))
    {
      buf[0] = 0;
      uint64_t v127 = APEndpointDescriptionGetCMBaseObject(*(void *)(v123 + 48));
      uint64_t v128 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v128) {
        uint64_t v129 = v128;
      }
      else {
        uint64_t v129 = 0;
      }
      uint64_t v130 = *(void (**)(uint64_t, __CFString *, void, CFTypeRef *))(v129 + 48);
      if (v130) {
        v130(v127, @"SerialNumber", *MEMORY[0x1E4F1CF80], buf);
      }
      if (gLogCategory_APSenderSessionAirPlay <= 50
        && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (buf[0]) {
        CFRelease(buf[0]);
      }
    }
    if (v257 && !v124)
    {
      APSLogErrorAt();
      LODWORD(v133) = -71827;
      goto LABEL_645;
    }
    uint64_t v131 = CMBaseObjectGetDerivedStorage();
    MEMORY[0x1D25EB370](*(void *)(v131 + 256));
    if (APSGetFBOPropertyInt64()
      || APSGetFBOPropertyInt64()
      || APSGetFBOPropertyInt64()
      || APSGetFBOPropertyInt64()
      || APSGetFBOPropertyInt64() == 2
      || *(unsigned char *)(v131 + 392))
    {
      MEMORY[0x1D25EB390](*(void *)(v131 + 256));
    }
    else
    {
      int v218 = *(_DWORD *)(v131 + 64);
      MEMORY[0x1D25EB390](*(void *)(v131 + 256));
      if ((v218 - 7) >= 3)
      {
LABEL_576:
        LODWORD(v133) = 0;
LABEL_645:
        MEMORY[0x1D25EB370](*(void *)(v123 + 256));
        CFDictionarySetInt64();
        MEMORY[0x1D25EB390](*(void *)(v123 + 256));
        unsigned int v269 = v133;
        if (*(void *)(DerivedStorage + 144)) {
          APSEventRecorderRecordEvent();
        }
        if (*(_DWORD *)(DerivedStorage + 64) == 5)
        {
          uint64_t v219 = LogCategoryCopyOSLogHandle();
          CFTypeRef v220 = (void *)v219;
          if (v219) {
            uint64_t v221 = v219;
          }
          else {
            uint64_t v221 = MEMORY[0x1E4F14500];
          }
          if (os_signpost_enabled(v221))
          {
            LOWORD(buf[0]) = 0;
            _os_signpost_emit_with_name_impl(&dword_1D0945000, v221, OS_SIGNPOST_EVENT, 0x2B8D0818uLL, "AP_SIGNPOST_CAR_PAIRING_COMPLETE", (const char *)&unk_1D0B9874E, (uint8_t *)buf, 2u);
          }
          if (v220) {
            os_release(v220);
          }
        }
        if (v133) {
          goto LABEL_679;
        }
        uint64_t v22 = v267;
        if (!v267)
        {
          apsession_copyTransportControlStream((uint64_t)a1, &v267);
          uint64_t v22 = v267;
          if (!v267)
          {
            APSLogErrorAt();
            unsigned int v269 = -71829;
            goto LABEL_683;
          }
        }
        uint64_t v222 = *(const void **)(DerivedStorage + 216);
        if (v222)
        {
          CFRelease(v222);
          *(void *)(DerivedStorage + 216) = 0;
        }
        double v223 = *(const void **)(DerivedStorage + 224);
        if (v223)
        {
          CFRelease(v223);
          *(void *)(DerivedStorage + 224) = 0;
        }
        int v224 = *(const void **)(DerivedStorage + 232);
        if (v224)
        {
          CFRelease(v224);
          *(void *)(DerivedStorage + 232) = 0;
        }
        CFAllocatorRef v225 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
        unsigned int v269 = FigTransportStreamCopyProperty((uint64_t)v22, *MEMORY[0x1E4F477B8], *MEMORY[0x1E4F1CF80], (uint64_t)&v266);
        if (v269) {
          goto LABEL_679;
        }
        unsigned int v269 = APSNetworkAddressCopyStringRepresentationWithFlags();
        if (v269) {
          goto LABEL_679;
        }
        uint64_t v226 = *MEMORY[0x1E4F47758];
        unsigned int v269 = FigTransportStreamCopyProperty((uint64_t)v22, *MEMORY[0x1E4F47758], (uint64_t)v225, DerivedStorage + 224);
        if (v269) {
          goto LABEL_679;
        }
        unsigned int v269 = FigTransportStreamCopyProperty((uint64_t)v22, *MEMORY[0x1E4F47748], (uint64_t)v225, DerivedStorage + 232);
        if (v269) {
          goto LABEL_679;
        }
        if (v246)
        {
          unsigned int v269 = apsession_ensureKeyHolderSetUp();
          if (v269) {
            goto LABEL_679;
          }
          unsigned int v269 = FigTransportStreamConfigureEncryption((uint64_t)v22, *(void *)(DerivedStorage + 192), @"Ctrl");
          if (*(unsigned char *)(DerivedStorage + 344))
          {
            APSGetFBOPropertyInt64();
            if (!v269)
            {
              unsigned int v269 = FigTransportStreamCopyProperty((uint64_t)v22, v226, (uint64_t)v225, (uint64_t)&v265);
              if (!v269)
              {
                if (v265)
                {
                  v276.locatioCFIndex n = 0;
                  v276.length = 28;
                  CFDataGetBytes(v265, v276, buffer);
                  SockAddrGetPort();
                  uint64_t v22 = CFDictionaryCreateMutable(v225, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
                  if (v22)
                  {
                    CFDictionarySetInt64();
                    CFDictionarySetInt64();
                    CFDictionarySetValue(v22, @"localSendsWithReadKey", (const void *)*MEMORY[0x1E4F1CFC8]);
                    v258 = a1;
                    v259 = @"Ctrl";
                    v260 = v22;
                    unsigned int v269 = apsession_broadcastKeysForDiagnosticsDataInternal((uint64_t)&v258);
                    if (v269)
                    {
                      APSLogErrorAt();
                      goto LABEL_681;
                    }
                    goto LABEL_678;
                  }
                  APSLogErrorAt();
                  int v23 = -71820;
                }
                else
                {
                  APSLogErrorAt();
                  uint64_t v22 = 0;
                  int v23 = -71829;
                }
LABEL_76:
                unsigned int v269 = v23;
                goto LABEL_681;
              }
            }
LABEL_679:
            APSLogErrorAt();
            goto LABEL_680;
          }
        }
        uint64_t v22 = 0;
LABEL_678:
        MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
        *(unsigned char *)(DerivedStorage + 265) = 1;
        MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
        CMNotificationCenterGetDefaultLocalCenter();
        FigDispatchAsyncPostNotification();
        goto LABEL_681;
      }
    }
    if (apsession_isCancelled())
    {
LABEL_638:
      APSLogErrorAt();
      LODWORD(v133) = -71832;
      goto LABEL_645;
    }
    uint64_t v254 = v123;
    uint64_t v132 = CMBaseObjectGetDerivedStorage();
    uint64_t v133 = APSGetFBOPropertyInt64();
    uint64_t v134 = APSGetFBOPropertyInt64();
    uint64_t v135 = APSGetFBOPropertyInt64();
    buf[0] = 0;
    if (v134 == 2)
    {
      if (!v133 || !v135)
      {
        APSLogErrorAt();
        int v145 = 0;
        int v144 = 0;
        LODWORD(v133) = -71827;
        goto LABEL_637;
      }
      goto LABEL_398;
    }
    if (v133)
    {
      if (v135 && !*(unsigned char *)(v132 + 160))
      {
LABEL_398:
        ++*(void *)(v132 + 416);
        int PairingClient = apsession_createPairingClient((uint64_t)a1, 1, 0, 0, v257, 0, 0, buf);
        if (!PairingClient)
        {
          uint64_t v133 = (uint64_t)buf[0];
          uint64_t v137 = *(void *)(CMBaseObjectGetVTable() + 16);
          if (v137) {
            uint64_t v138 = v137;
          }
          else {
            uint64_t v138 = 0;
          }
          uint64_t v139 = *(uint64_t (**)(uint64_t, void))(v138 + 32);
          if (v139)
          {
            int v140 = v139(v133, 0);
            LODWORD(v133) = v140;
            if (v140 == -71164 || v140 == -71145)
            {
              APSLogErrorAt();
              int v145 = 0;
              int v143 = 1;
              int v144 = 1;
LABEL_416:
              uint64_t v123 = v254;
              goto LABEL_417;
            }
            if (!v140)
            {
              MEMORY[0x1D25EB370](*(void *)(v132 + 256));
              v141 = *(const void **)(v132 + 376);
              CFTypeRef v142 = buf[0];
              *(CFTypeRef *)(v132 + 376) = buf[0];
              if (v142) {
                CFRetain(v142);
              }
              if (v141) {
                CFRelease(v141);
              }
              MEMORY[0x1D25EB390](*(void *)(v132 + 256));
              LODWORD(v133) = 0;
              int v143 = 0;
              int v144 = 0;
              int v145 = 1;
              goto LABEL_416;
            }
          }
          else
          {
            LODWORD(v133) = -12782;
          }
          uint64_t v123 = v254;
          if (v134 == 2)
          {
            LODWORD(v133) = -72279;
            APSLogErrorAt();
          }
          int v145 = 0;
          int v144 = 0;
          int v143 = 1;
LABEL_417:
          if (v134 == 2) {
            int v146 = v145;
          }
          else {
            int v146 = 1;
          }
          if (v133) {
            int v146 = 1;
          }
          if (!v146) {
            LODWORD(v133) = -71827;
          }
          if (v133) {
            BOOL v147 = v134 == 2;
          }
          else {
            BOOL v147 = 0;
          }
          if (v147) {
            int v148 = 1;
          }
          else {
            int v148 = v144;
          }
          CFTypeRef v149 = buf[0];
          if (v133 || buf[0])
          {
            if (v148) {
              BOOL v150 = v133 == 0;
            }
            else {
              BOOL v150 = 1;
            }
            if (v150) {
              int v151 = 50;
            }
            else {
              int v151 = 90;
            }
            if (v151 >= gLogCategory_APSenderSessionAirPlay)
            {
              if (gLogCategory_APSenderSessionAirPlay != -1 || (v152 = _LogCategory_Initialize(), CFTypeRef v149 = buf[0], v152))
              {
                LogPrintF();
                CFTypeRef v149 = buf[0];
              }
            }
            char v273 = v145;
            if (v149) {
              CFRelease(v149);
            }
          }
          else
          {
            char v273 = v145;
          }
          if (!v143) {
            goto LABEL_645;
          }
          if (v133 && v148)
          {
            APSLogErrorAt();
            goto LABEL_645;
          }
          if (apsession_isCancelled()) {
            goto LABEL_638;
          }
          uint64_t v153 = CMBaseObjectGetDerivedStorage();
          int v154 = APSGetFBOPropertyInt64();
          uint64_t v155 = APSGetFBOPropertyInt64();
          buf[0] = 0;
          CFTypeRef v270 = 0;
          BOOL v156 = v154 == 1 || *(_DWORD *)(v153 + 64) == 3;
          int isTransientPairingSupported = apsession_isTransientPairingSupported();
          int v158 = *(_DWORD *)(v153 + 64);
          if (!isTransientPairingSupported && v158 == 10) {
            BOOL v156 = 1;
          }
          int v159 = 0;
          int v160 = 1;
          int v161 = 0;
          int v162 = 0;
          if (v158 == 7 || v158 == 9) {
            goto LABEL_503;
          }
          if (v158 == 8)
          {
            if (!APSGetFBOPropertyInt64())
            {
              if (gLogCategory_APSenderSessionAirPlay <= 40
                && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              int v159 = 0;
              int v161 = 0;
              int v162 = 0;
              uint64_t v123 = v254;
              goto LABEL_503;
            }
            int v158 = *(_DWORD *)(v153 + 64);
          }
          if (v158 != 10 && (!v156 && *(unsigned char *)(v153 + 160) || !APSGetFBOPropertyInt64()))
          {
            int v159 = 0;
            goto LABEL_501;
          }
          ++*(void *)(v153 + 416);
          int v163 = apsession_createPairingClient((uint64_t)a1, 0, 1, 0, v257, 0, 0, &v270);
          if (v163)
          {
            int v159 = v163;
            goto LABEL_500;
          }
          CFTypeRef v164 = v270;
          uint64_t v165 = *(void *)(CMBaseObjectGetVTable() + 16);
          if (v165) {
            uint64_t v166 = v165;
          }
          else {
            uint64_t v166 = 0;
          }
          v167 = *(uint64_t (**)(CFTypeRef, CFTypeRef *))(v166 + 32);
          if (v167)
          {
            int v159 = v167(v164, buf);
            if (!v159) {
              goto LABEL_486;
            }
          }
          else
          {
            int v159 = -12782;
          }
          if (*(_DWORD *)(v153 + 64) == 8)
          {
            if (buf[0])
            {
              CFRelease(buf[0]);
              buf[0] = 0;
            }
            if (v270)
            {
              CFRelease(v270);
              CFTypeRef v270 = 0;
            }
            ++*(void *)(v153 + 416);
            int v168 = apsession_createPairingClient((uint64_t)a1, 0, 1, 1, v257, 0, 0, &v270);
            if (v168)
            {
              int v159 = v168;
              goto LABEL_500;
            }
            CFTypeRef v169 = v270;
            uint64_t v170 = *(void *)(CMBaseObjectGetVTable() + 16);
            if (v170) {
              uint64_t v171 = v170;
            }
            else {
              uint64_t v171 = 0;
            }
            uint64_t v172 = *(uint64_t (**)(CFTypeRef, CFTypeRef *))(v171 + 32);
            if (!v172)
            {
              int v159 = -12782;
LABEL_495:
              if (*(_DWORD *)(v153 + 64) == 8)
              {
                int v159 = -17602;
LABEL_497:
                APSLogErrorAt();
                int v161 = 0;
                int v162 = 1;
                goto LABEL_503;
              }
              if (!v156)
              {
LABEL_501:
                int v161 = 0;
                goto LABEL_502;
              }
              int v159 = -17602;
LABEL_500:
              APSLogErrorAt();
              goto LABEL_501;
            }
            int v159 = v172(v169, buf);
          }
          if (v159 == -71164 || v159 == -71145) {
            goto LABEL_497;
          }
          if (!v159)
          {
LABEL_486:
            MEMORY[0x1D25EB370](*(void *)(v153 + 256));
            v173 = *(const void **)(v153 + 376);
            CFTypeRef v174 = v270;
            *(void *)(v153 + 376) = v270;
            if (v174) {
              CFRetain(v174);
            }
            if (v173) {
              CFRelease(v173);
            }
            MEMORY[0x1D25EB390](*(void *)(v153 + 256));
            unsigned int v175 = *(_DWORD *)(v153 + 64);
            if (v175 <= 8)
            {
              int v161 = 1;
              if (((1 << v175) & 0x1C2) != 0) {
                goto LABEL_492;
              }
            }
            int v159 = 0;
            CFTypeRef v216 = buf[0];
            int v161 = 1;
            int v160 = 0;
            int v162 = 0;
            if (buf[0] && v155)
            {
              int v217 = *(const void **)(v153 + 200);
              *(CFTypeRef *)(v153 + 200) = buf[0];
              CFRetain(v216);
              if (v217) {
                CFRelease(v217);
              }
LABEL_492:
              int v159 = 0;
              int v160 = 0;
LABEL_502:
              int v162 = 0;
            }
LABEL_503:
            int v176 = v161 | !v156;
            if (v159) {
              int v176 = 1;
            }
            if (v176) {
              LODWORD(v133) = v159;
            }
            else {
              LODWORD(v133) = -71827;
            }
            if (v156 && v133 != 0) {
              int v177 = 1;
            }
            else {
              int v177 = v162;
            }
            if (v133 || v270)
            {
              BOOL v178 = !v177 || v133 == 0;
              int v179 = v178 ? 50 : 90;
              if (v179 >= gLogCategory_APSenderSessionAirPlay
                && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
            }
            char v273 = v161;
            if (buf[0]) {
              CFRelease(buf[0]);
            }
            if (v270) {
              CFRelease(v270);
            }
            if (!v160) {
              goto LABEL_645;
            }
            if (v133 && v177) {
              goto LABEL_644;
            }
            if (apsession_isCancelled()) {
              goto LABEL_638;
            }
            uint64_t v180 = CMBaseObjectGetDerivedStorage();
            uint64_t v181 = APSGetFBOPropertyInt64();
            uint64_t v182 = APSGetFBOPropertyInt64();
            uint64_t v183 = APSGetFBOPropertyInt64();
            uint64_t v184 = APSGetFBOPropertyInt64();
            int v185 = apsession_isTransientPairingSupported();
            int v186 = *(_DWORD *)(v180 + 64);
            BOOL v188 = v186 != 9 && v186 != 7;
            CFTypeRef v270 = 0;
            v274 = 0;
            v275[0] = 0;
            if (*(unsigned char *)(v180 + 160))
            {
              LODWORD(v133) = 0;
              char v189 = 0;
              char v190 = 0;
              int v191 = 1;
              char v192 = 1;
              goto LABEL_539;
            }
            BOOL allocatora = v188;
            int v253 = v185;
            uint64_t v255 = v184;
            buf[0] = 0;
            if (apsession_createPairingClient((uint64_t)a1, 0, 0, 0, 0, 0, 0, buf))
            {
              APSLogErrorAt();
              int v200 = 0;
              int v201 = 90;
            }
            else
            {
              CMTimeValue v195 = (CMTimeValue)buf[0];
              uint64_t v196 = *(void *)(CMBaseObjectGetVTable() + 16);
              if (v196) {
                uint64_t v197 = v196;
              }
              else {
                uint64_t v197 = 0;
              }
              v199 = *(uint64_t (**)(CMTimeValue))(v197 + 16);
              if (v199) {
                int v200 = v199(v195);
              }
              else {
                int v200 = 0;
              }
              int v201 = 50;
            }
            if (v201 >= gLogCategory_APSenderSessionAirPlay
              && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            if (buf[0]) {
              CFRelease(buf[0]);
            }
            LODWORD(v133) = 0;
            if (v182) {
              BOOL v204 = v183 == 0;
            }
            else {
              BOOL v204 = 1;
            }
            int v205 = v204;
            if (v181) {
              BOOL v206 = 0;
            }
            else {
              BOOL v206 = v200 == 0;
            }
            int v191 = 1;
            char v189 = 0;
            char v190 = 0;
            char v192 = 1;
            if (!v206 && v205)
            {
              if (v255) {
                BOOL v207 = v253 == 0;
              }
              else {
                BOOL v207 = 1;
              }
              BOOL v208 = allocatora;
              if (v207) {
                BOOL v208 = 0;
              }
              if (v208)
              {
                LODWORD(v133) = 0;
              }
              else
              {
                apsession_copyAPPairingGroupInfo();
                ++*(void *)(v180 + 416);
                int v209 = apsession_createPairingClient((uint64_t)a1, 0, 0, 0, v257, v275[0], v274, &v270);
                if (v209)
                {
                  LODWORD(v133) = v209;
                  APSLogErrorAt();
                }
                else
                {
                  uint64_t v133 = (uint64_t)v270;
                  uint64_t v210 = *(void *)(CMBaseObjectGetVTable() + 16);
                  if (v210) {
                    uint64_t v211 = v210;
                  }
                  else {
                    uint64_t v211 = 0;
                  }
                  uint64_t v212 = *(uint64_t (**)(uint64_t, void))(v211 + 32);
                  if (!v212)
                  {
                    char v189 = 0;
                    char v190 = 0;
                    LODWORD(v133) = -12782;
                    goto LABEL_539;
                  }
                  int v213 = v212(v133, 0);
                  LODWORD(v133) = v213;
                  if (v213 == -71164 || v213 == -71145)
                  {
                    APSLogErrorAt();
                    char v189 = 0;
                    char v192 = 0;
                    char v190 = 1;
                    goto LABEL_539;
                  }
                  if (!v213)
                  {
                    MEMORY[0x1D25EB370](*(void *)(v180 + 256));
                    v214 = *(const void **)(v180 + 376);
                    CFTypeRef v215 = v270;
                    *(void *)(v180 + 376) = v270;
                    if (v215) {
                      CFRetain(v215);
                    }
                    if (v214) {
                      CFRelease(v214);
                    }
                    MEMORY[0x1D25EB390](*(void *)(v180 + 256));
                    LODWORD(v133) = 0;
                    int v191 = 0;
                    char v190 = 0;
                    char v189 = 1;
                    goto LABEL_539;
                  }
                }
              }
              char v189 = 0;
              char v190 = 0;
            }
LABEL_539:
            if (v275[0]) {
              CFRelease(v275[0]);
            }
            if (v274) {
              CFRelease(v274);
            }
            if (v270)
            {
              CFRelease(v270);
              CFTypeRef v193 = v270;
              if (v133)
              {
LABEL_551:
                if (((v133 != 0) & v190) != 0) {
                  int v198 = 90;
                }
                else {
                  int v198 = 50;
                }
                if (v198 >= gLogCategory_APSenderSessionAirPlay
                  && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
                {
                  LogPrintF();
                }
LABEL_567:
                char v273 = v189;
                if (!v191) {
                  goto LABEL_645;
                }
                if (v133) {
                  char v202 = v192;
                }
                else {
                  char v202 = 1;
                }
                if (v202)
                {
                  if (apsession_isCancelled()) {
                    goto LABEL_638;
                  }
                  int v203 = apsession_tryAPPairSetupAndVerify((uint64_t)a1, v24, v257, &v273);
                  if (!v203)
                  {
                    if (!v273)
                    {
                      APSLogErrorAt();
                      LODWORD(v133) = -71829;
                      goto LABEL_645;
                    }
                    if (!apsession_isCancelled()) {
                      goto LABEL_576;
                    }
                    goto LABEL_638;
                  }
                  LODWORD(v133) = v203;
                }
LABEL_644:
                APSLogErrorAt();
                goto LABEL_645;
              }
            }
            else
            {
              CFTypeRef v193 = 0;
              if (v133) {
                goto LABEL_551;
              }
            }
            if (!v193) {
              goto LABEL_567;
            }
            goto LABEL_551;
          }
          goto LABEL_495;
        }
        LODWORD(v133) = PairingClient;
        APSLogErrorAt();
        goto LABEL_632;
      }
      LODWORD(v133) = 0;
    }
LABEL_632:
    int v145 = 0;
    int v144 = 0;
LABEL_637:
    int v143 = 1;
    goto LABEL_416;
  }
  if (v21 != -71832) {
    goto LABEL_679;
  }
LABEL_622:
  if (gLogCategory_APSenderSessionAirPlay > 50
    || gLogCategory_APSenderSessionAirPlay == -1 && !_LogCategory_Initialize())
  {
    goto LABEL_680;
  }
LABEL_10:
  LogPrintF();
LABEL_680:
  uint64_t v22 = 0;
LABEL_681:
  if (v267) {
    CFRelease(v267);
  }
LABEL_683:
  if (v266) {
    CFRelease(v266);
  }
  if (v22) {
    CFRelease(v22);
  }
  if (v265) {
    CFRelease(v265);
  }
  if (!v269) {
    return 0;
  }
  apsession_recordActivationMessageTiming((uint64_t)a1);
  apsession_ensureDisconnected((uint64_t)a1);
  return v269;
}

uint64_t apsession_ensureKeyHolderSetUp()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(void *)(DerivedStorage + 192)) {
    return 0;
  }
  uint64_t v1 = DerivedStorage;
  uint64_t v2 = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  uint64_t v3 = APSGetFBOPropertyInt64();
  if (*(unsigned char *)(v2 + 106)) {
    BOOL v4 = v3 == 0;
  }
  else {
    BOOL v4 = 0;
  }
  if (v4)
  {
    if (gLogCategory_APSenderSessionAirPlay <= 90
      && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v13 = 0;
    CFTypeRef v7 = 0;
    CFTypeRef v9 = 0;
  }
  else
  {
    uint64_t v5 = v3;
    MEMORY[0x1D25EB370](*(void *)(v2 + 256));
    int v6 = *(const void **)(v2 + 376);
    if (v6) {
      CFTypeRef v7 = CFRetain(v6);
    }
    else {
      CFTypeRef v7 = 0;
    }
    BOOL v8 = *(const void **)(v2 + 368);
    if (v8) {
      CFTypeRef v9 = CFRetain(v8);
    }
    else {
      CFTypeRef v9 = 0;
    }
    MEMORY[0x1D25EB390](*(void *)(v2 + 256));
    uint64_t v10 = *MEMORY[0x1E4F1CF80];
    if (v5)
    {
      uint64_t v11 = APKeyHolderCoreUtilsCreate(v10, v7, &cf);
      if (!v11)
      {
        if (gLogCategory_APSenderSessionAirPlay <= 50
          && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
        {
LABEL_23:
          LogPrintF();
        }
LABEL_43:
        uint64_t v13 = 0;
        CFTypeRef v14 = cf;
        CFTypeRef cf = 0;
        if (!v7) {
          goto LABEL_30;
        }
LABEL_29:
        CFRelease(v7);
        goto LABEL_30;
      }
      uint64_t v13 = v11;
    }
    else
    {
      uint64_t v12 = APKeyHolderLegacyCreate(v10, v7, v9, &cf);
      if (!v12)
      {
        if (gLogCategory_APSenderSessionAirPlay <= 50
          && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
        {
          goto LABEL_23;
        }
        goto LABEL_43;
      }
      uint64_t v13 = v12;
    }
    APSLogErrorAt();
  }
  if (cf) {
    CFRelease(cf);
  }
  CFTypeRef v14 = 0;
  if (v7) {
    goto LABEL_29;
  }
LABEL_30:
  if (v9) {
    CFRelease(v9);
  }
  if (v13)
  {
    APSLogErrorAt();
    if (!v14) {
      return v13;
    }
    goto LABEL_38;
  }
  CFDictionaryRef v15 = *(const void **)(v1 + 192);
  *(void *)(v1 + 192) = v14;
  if (v14) {
    CFRetain(v14);
  }
  if (v15) {
    CFRelease(v15);
  }
  if (v14) {
LABEL_38:
  }
    CFRelease(v14);
  return v13;
}

uint64_t apsession_ensureSenderNetworkClockStarted(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(void *)buffer = 0;
  uint64_t v14 = 0;
  int v16 = 0;
  uint64_t v15 = 0;
  if (apsession_isCancelled())
  {
    CFTypeRef v4 = 0;
    uint64_t v10 = 4294895464;
  }
  else
  {
    if (*(unsigned char *)(DerivedStorage + 162))
    {
      CFTypeRef v4 = 0;
      goto LABEL_30;
    }
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
    uint64_t v3 = *(const void **)(DerivedStorage + 288);
    if (v3) {
      CFTypeRef v4 = CFRetain(v3);
    }
    else {
      CFTypeRef v4 = 0;
    }
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
    if (gLogCategory_APSenderSessionAirPlay <= 40
      && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v5 = *(void *)(DerivedStorage + 72);
    uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v6) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 0;
    }
    BOOL v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 80);
    if (v8)
    {
      uint64_t v9 = v8(v5, a1);
      if (v9)
      {
        uint64_t v10 = v9;
      }
      else
      {
        *(unsigned char *)(DerivedStorage + 162) = 1;
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterAddWeakListener();
        *(_DWORD *)(DerivedStorage + 240) = APSGetFBOPropertyInt64();
        if (gLogCategory_APSenderSessionAirPlay <= 30
          && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        if (*(__CFString **)(DerivedStorage + 16) != @"PTP"
          || (v17.locatioCFIndex n = 0,
              v17.length = 28,
              CFDataGetBytes(*(CFDataRef *)(DerivedStorage + 224), v17, buffer),
              uint64_t updated = APSNetworkClockDetermineAndSetOrUpdateLocalPeerInfo(),
              !updated))
        {
LABEL_30:
          if (gLogCategory_APSenderSessionAirPlay <= 50
            && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          uint64_t v10 = 0;
          if (!v4) {
            return v10;
          }
LABEL_25:
          CFRelease(v4);
          return v10;
        }
        uint64_t v10 = updated;
      }
    }
    else
    {
      uint64_t v10 = 4294954514;
    }
    APSLogErrorAt();
  }
  if (gLogCategory_APSenderSessionAirPlay <= 90
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  apsession_stopSenderNetworkClockIfNeeded(a1);
  if (v4) {
    goto LABEL_25;
  }
  return v10;
}

uint64_t apsession_ensureControlStreamSetup(uint64_t a1, const void *a2, _DWORD *a3, _DWORD *a4, void *a5, void *a6)
{
  unsigned int v23 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  if (gLogCategory_APSenderSessionAirPlay <= 30
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 161)) {
    goto LABEL_36;
  }
  unsigned int v23 = apsession_requestControlSetupWithResponse(a1, a2, 0, &cf);
  if (v23)
  {
    APSLogErrorAt();
LABEL_36:
    TypedCFDictionaryRef Value = 0;
    goto LABEL_30;
  }
  int Int64 = CFDictionaryGetInt64();
  if (!v23) {
    *a3 = Int64;
  }
  unsigned int v23 = 0;
  int v14 = CFDictionaryGetInt64();
  if (!v23) {
    *a4 = v14;
  }
  unsigned int v23 = 0;
  CFDictionaryGetTypeID();
  TypedCFDictionaryRef Value = (const void *)CFDictionaryGetTypedValue();
  if (!v23)
  {
    if (gLogCategory_APSenderSessionAirPlay <= 50
      && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFTypeRef v16 = CFRetain(TypedValue);
    TypedCFDictionaryRef Value = 0;
    *a5 = v16;
  }
  unsigned int v23 = 0;
  if (*(_DWORD *)(DerivedStorage + 64) == 5)
  {
    CFArrayGetTypeID();
    CFRange v17 = (const void *)CFDictionaryGetTypedValue();
    if (v23 == -6727)
    {
      unsigned int v23 = 0;
    }
    else
    {
      if (v23)
      {
        APSLogErrorAt();
        goto LABEL_30;
      }
      if (a6)
      {
        if (v17) {
          CFRange v17 = CFRetain(v17);
        }
        *a6 = v17;
      }
    }
  }
  uint64_t v18 = CFDictionaryGetInt64();
  if (!v23)
  {
    uint64_t v19 = v18;
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
    int v20 = (const void **)MEMORY[0x1E4F1CFD0];
    if (!v19) {
      int v20 = (const void **)MEMORY[0x1E4F1CFC8];
    }
    CFDictionarySetValue(*(CFMutableDictionaryRef *)(DerivedStorage + 432), @"uiPreloaded", *v20);
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
  }
  unsigned int v23 = 0;
  *(unsigned char *)(DerivedStorage + 161) = 1;
LABEL_30:
  if (cf) {
    CFRelease(cf);
  }
  if (TypedValue) {
    CFRelease(TypedValue);
  }
  return v23;
}

uint64_t apsession_ensureLowPowerKeepAliveStreamSetup(uint64_t a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2) {
    return 0;
  }
  uint64_t v5 = DerivedStorage;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  uint64_t v6 = *(const void **)(v5 + 336);
  if (v6)
  {
    CFTypeRef v7 = CFRetain(v6);
    MEMORY[0x1D25EB390](*(void *)(v5 + 256));
    if (v7)
    {
      uint64_t v8 = 0;
LABEL_38:
      CFRelease(v7);
      return v8;
    }
  }
  else
  {
    MEMORY[0x1D25EB390](*(void *)(v5 + 256));
  }
  CFTypeRef cf = 0;
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!Mutable)
  {
    APSLogErrorAt();
    CFTypeRef v7 = 0;
    uint64_t v8 = 4294895476;
    goto LABEL_37;
  }
  CFMutableDictionaryRef v10 = Mutable;
  CFDictionarySetInt64();
  CFDictionarySetInt64();
  uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v11) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = 0;
  }
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, CFMutableDictionaryRef, CFTypeRef *))(v12 + 64);
  if (v13)
  {
    uint64_t v14 = v13(a1, 1802529910, v10, &cf);
    if (v14)
    {
      uint64_t v8 = v14;
    }
    else
    {
      uint64_t v8 = APSSetFBOPropertyInt64();
      if (!v8)
      {
        CFTypeRef v7 = cf;
        CFTypeRef cf = 0;
        goto LABEL_16;
      }
    }
  }
  else
  {
    uint64_t v8 = 4294954514;
  }
  APSLogErrorAt();
  CFTypeRef v7 = 0;
LABEL_16:
  CFRelease(v10);
  if (cf)
  {
    uint64_t CMBaseObject = FigTransportStreamGetCMBaseObject();
    if (CMBaseObject)
    {
      uint64_t v16 = CMBaseObject;
      uint64_t v17 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v18 = v17 ? v17 : 0;
      uint64_t v19 = *(void (**)(uint64_t))(v18 + 24);
      if (v19) {
        v19(v16);
      }
    }
    CFRelease(cf);
  }
  if (!v8)
  {
    MEMORY[0x1D25EB370](*(void *)(v5 + 256));
    int v20 = *(const void **)(v5 + 336);
    *(void *)(v5 + 336) = v7;
    if (v7) {
      CFRetain(v7);
    }
    if (v20) {
      CFRelease(v20);
    }
    MEMORY[0x1D25EB390](*(void *)(v5 + 256));
    uint64_t v21 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v21) {
      uint64_t v22 = v21;
    }
    else {
      uint64_t v22 = 0;
    }
    unsigned int v23 = *(uint64_t (**)(CFTypeRef))(v22 + 8);
    if (v23)
    {
      uint64_t v8 = v23(v7);
      if (!v8)
      {
        if (!v7) {
          return v8;
        }
        goto LABEL_38;
      }
    }
    else
    {
      uint64_t v8 = 4294954514;
    }
  }
LABEL_37:
  APSLogErrorAt();
  if (v7) {
    goto LABEL_38;
  }
  return v8;
}

uint64_t apsession_addPeerToNetworkClock()
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  if (!DerivedStorage[29])
  {
    uint64_t v3 = 4294895467;
    goto LABEL_21;
  }
  if (DerivedStorage[31])
  {
    uint64_t updated = APSNetworkClockAddOrUpdatePeerFromSerializablePeerDictionary();
    if (!updated)
    {
      if (gLogCategory_APSenderSessionAirPlay > 30
        || gLogCategory_APSenderSessionAirPlay == -1 && !_LogCategory_Initialize())
      {
        return 0;
      }
      goto LABEL_11;
    }
    uint64_t v3 = updated;
LABEL_21:
    APSLogErrorAt();
    return v3;
  }
  if (!DerivedStorage[27])
  {
    uint64_t v3 = 4294895467;
    goto LABEL_21;
  }
  uint64_t v2 = APSNetworkClockAddOrUpdatePeerWithAddressAndInterfaceNameStrings();
  if (v2)
  {
    uint64_t v3 = v2;
    goto LABEL_21;
  }
  if (gLogCategory_APSenderSessionAirPlay > 30
    || gLogCategory_APSenderSessionAirPlay == -1 && !_LogCategory_Initialize())
  {
    return 0;
  }
LABEL_11:
  LogPrintF();
  return 0;
}

uint64_t apsession_ensureEventStreamCreated(uint64_t a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v45 = 0;
  if (!a2) {
    return 0;
  }
  uint64_t v5 = (void *)DerivedStorage;
  uint64_t v6 = APSGetFBOPropertyInt64();
  apsession_copyTransportSession(a1, &v45);
  CFTypeRef v7 = v45;
  if (!v45)
  {
    uint64_t v14 = 4294895475;
    APSLogErrorAt();
    return v14;
  }
  if (v6) {
    uint64_t v6 = v5[24];
  }
  LODWORD(v46[0]) = 0;
  uint64_t v8 = CMBaseObjectGetDerivedStorage();
  cf[0] = 0;
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!Mutable)
  {
    APSLogErrorAt();
    CFTypeRef v23 = 0;
    uint64_t v14 = 4294895476;
    goto LABEL_93;
  }
  CFMutableDictionaryRef v10 = Mutable;
  if (*(_DWORD *)(v8 + 64) == 5)
  {
    int v11 = APSGetFBOPropertyInt64();
    if (LODWORD(v46[0])) {
      goto LABEL_28;
    }
    if (v11 == 2) {
      CFDictionarySetValue(v10, (const void *)*MEMORY[0x1E4F476E0], (const void *)*MEMORY[0x1E4F1CFD0]);
    }
  }
  CFDictionarySetInt64();
  uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v12) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  uint64_t v15 = *(uint64_t (**)(const void *, uint64_t, __CFDictionary *, CFTypeRef *))(v13 + 32);
  if (!v15)
  {
    LODWORD(v46[0]) = -12782;
    goto LABEL_28;
  }
  LODWORD(v46[0]) = v15(v7, 1702260340, v10, cf);
  if (LODWORD(v46[0]))
  {
LABEL_28:
    APSLogErrorAt();
    CFTypeRef v23 = 0;
    goto LABEL_29;
  }
  CFTypeRef v16 = cf[0];
  uint64_t v17 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v17) {
    uint64_t v18 = v17;
  }
  else {
    uint64_t v18 = 0;
  }
  uint64_t v19 = *(uint64_t (**)(CFTypeRef, void, uint64_t (*)(), uint64_t))(v18 + 24);
  if (!v19)
  {
    LODWORD(v46[0]) = -12782;
    goto LABEL_28;
  }
  LODWORD(v46[0]) = v19(v16, apsession_eventStreamMessageCallback, apsession_eventStreamCreateReplyCallback, a1);
  if (LODWORD(v46[0])) {
    goto LABEL_28;
  }
  LODWORD(v46[0]) = APSSetFBOPropertyInt64();
  if (LODWORD(v46[0])) {
    goto LABEL_28;
  }
  if (v6)
  {
    CFTypeRef v20 = cf[0];
    uint64_t v21 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v21) {
      uint64_t v22 = v21;
    }
    else {
      uint64_t v22 = 0;
    }
    uint64_t v41 = *(uint64_t (**)(CFTypeRef, uint64_t, __CFString *))(v22 + 80);
    if (v41)
    {
      LODWORD(v46[0]) = v41(v20, v6, @"Events");
      if (!LODWORD(v46[0])) {
        goto LABEL_72;
      }
    }
    else
    {
      LODWORD(v46[0]) = -12782;
    }
    goto LABEL_28;
  }
LABEL_72:
  CFTypeRef v23 = cf[0];
  cf[0] = 0;
LABEL_29:
  CFRelease(v10);
  if (cf[0])
  {
    uint64_t CMBaseObject = FigTransportStreamGetCMBaseObject();
    if (CMBaseObject)
    {
      uint64_t v25 = CMBaseObject;
      uint64_t v26 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v27 = v26 ? v26 : 0;
      uint64_t v28 = *(void (**)(uint64_t))(v27 + 24);
      if (v28) {
        v28(v25);
      }
    }
    CFRelease(cf[0]);
  }
  uint64_t v14 = LODWORD(v46[0]);
  if (!LODWORD(v46[0]))
  {
    MEMORY[0x1D25EB370](v5[32]);
    uint64_t v29 = (const void *)v5[37];
    v5[37] = v23;
    if (v23) {
      CFRetain(v23);
    }
    if (v29) {
      CFRelease(v29);
    }
    APSenderSessionMessageSendTimeout();
    APSSetFBOPropertyInt64();
    MEMORY[0x1D25EB390](v5[32]);
    memset(cf, 0, sizeof(cf));
    int v49 = 0;
    CFDictionaryRef theDict = 0;
    uint64_t v30 = CMBaseObjectGetDerivedStorage();
    if (v23)
    {
      uint64_t v31 = v30;
      uint64_t v32 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v32) {
        uint64_t v33 = v32;
      }
      else {
        uint64_t v33 = 0;
      }
      uint64_t v34 = *(uint64_t (**)(CFTypeRef))(v33 + 8);
      if (v34)
      {
        unsigned int v50 = v34(v23);
        if (!v50)
        {
          uint64_t v35 = *(void *)(CMBaseObjectGetVTable() + 16);
          if (v35) {
            uint64_t v36 = v35;
          }
          else {
            uint64_t v36 = 0;
          }
          CFTypeRef v37 = *(uint64_t (**)(CFTypeRef, CFDictionaryRef *))(v36 + 96);
          if (v37)
          {
            unsigned int v50 = v37(v23, &theDict);
            if (!v50)
            {
              uint64_t v38 = APSGetFBOPropertyInt64();
              if (!*(unsigned char *)(v31 + 344) || !v38) {
                goto LABEL_63;
              }
              CFDictionaryGetInt64();
              if (v50 != -6727 && v50)
              {
                if (gLogCategory_APSenderSessionAirPlay <= 60
                  && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
                {
                  LogPrintF();
                }
LABEL_63:
                if (theDict) {
                  CFRelease(theDict);
                }
                uint64_t v14 = v50;
                if (!v50) {
                  goto LABEL_66;
                }
                goto LABEL_93;
              }
              unsigned int v50 = 0;
              CFDataRef Value = (const __CFData *)CFDictionaryGetValue(theDict, (const void *)*MEMORY[0x1E4F47758]);
              if (Value)
              {
                v51.locatioCFIndex n = 0;
                v51.length = 28;
                CFDataGetBytes(Value, v51, (UInt8 *)cf);
                SockAddrGetPort();
              }
              else if (gLogCategory_APSenderSessionAirPlay <= 60 {
                     && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
              }
              {
                LogPrintF();
              }
              CFMutableDictionaryRef v42 = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
              if (v42)
              {
                uint64_t v43 = v42;
                CFDictionarySetInt64();
                CFDictionarySetInt64();
                CFDictionarySetValue(v43, @"localSendsWithReadKey", (const void *)*MEMORY[0x1E4F1CFD0]);
                v46[0] = a1;
                v46[1] = @"Events";
                v46[2] = v43;
                unsigned int v50 = apsession_broadcastKeysForDiagnosticsDataInternal((uint64_t)v46);
                if (v50) {
                  APSLogErrorAt();
                }
                CFRelease(v43);
                goto LABEL_63;
              }
              APSLogErrorAt();
              int v44 = -71820;
LABEL_92:
              unsigned int v50 = v44;
              goto LABEL_63;
            }
          }
          else
          {
            unsigned int v50 = -12782;
          }
        }
      }
      else
      {
        unsigned int v50 = -12782;
      }
      APSLogErrorAt();
      goto LABEL_63;
    }
    APSLogErrorAt();
    int v44 = -71821;
    goto LABEL_92;
  }
LABEL_93:
  APSLogErrorAt();
LABEL_66:
  CFRelease(v7);
  if (v23) {
    CFRelease(v23);
  }
  return v14;
}

void apsession_recordActivationMessageTiming(uint64_t a1)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  CFTypeRef v15 = 0;
  CFTypeRef v13 = 0;
  apsession_copyTransportControlStream(a1, &v15);
  CFTypeRef v3 = v15;
  if (v15)
  {
    uint64_t CMBaseObject = FigTransportStreamGetCMBaseObject();
    uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v5) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = 0;
    }
    CFTypeRef v7 = *(unsigned int (**)(uint64_t, void, void, CFTypeRef *))(v6 + 48);
    if (!v7
      || (uint64_t v8 = *MEMORY[0x1E4F1CF80], v7(CMBaseObject, *MEMORY[0x1E4F47710], *MEMORY[0x1E4F1CF80], &cf))
      || ((uint64_t v9 = FigTransportStreamGetCMBaseObject(), (v10 = *(void *)(CMBaseObjectGetVTable() + 8)) == 0)
        ? (uint64_t v11 = 0)
        : (uint64_t v11 = v10),
          (uint64_t v12 = *(unsigned int (**)(uint64_t, void, uint64_t, CFTypeRef *))(v11 + 48)) == 0
       || v12(v9, *MEMORY[0x1E4F47708], v8, &v13)))
    {
      APSLogErrorAt();
    }
    else
    {
      MEMORY[0x1D25EB370](DerivedStorage[32]);
      DerivedStorage[56] = FigCFNumberGetUInt64();
      DerivedStorage[57] = FigCFNumberGetUInt64();
      MEMORY[0x1D25EB390](DerivedStorage[32]);
    }
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v13) {
    CFRelease(v13);
  }
  if (v3) {
    CFRelease(v3);
  }
}

uint64_t apsession_fetchInitialInfo(const void *a1)
{
  CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionAirPlay <= 30
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t Info = apsession_fetchInfo(a1, 1, 0, 0);
  if (Info) {
    APSLogErrorAt();
  }
  return Info;
}

uint64_t FigTransportStreamConfigureEncryption(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 80);
  if (!v8) {
    return 4294954514;
  }
  return v8(a1, a2, a3);
}

uint64_t apsession_broadcastKeysForDiagnosticsDataInternal(uint64_t a1)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  unsigned int Formatted = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFDataRef v39 = 0;
  theCFDataRef Data = 0;
  CFTypeRef propertyList = 0;
  *(void *)buffer = 0;
  uint64_t v35 = 0;
  int v37 = 0;
  uint64_t v36 = 0;
  __int16 v33 = 0;
  int v32 = 0;
  __int16 v31 = 0;
  int v30 = 0;
  int v29 = -1;
  int v28 = -1;
  CFTypeRef v26 = 0;
  CFDataRef v27 = 0;
  CFTypeRef cf = 0;
  if (!*(unsigned char *)(DerivedStorage + 344)) {
    goto LABEL_44;
  }
  uint64_t v3 = DerivedStorage;
  if (!*(void *)(DerivedStorage + 192)
    || !*(void *)(DerivedStorage + 216)
    || !*(void *)(DerivedStorage + 224)
    || !*(void *)(DerivedStorage + 232)
    || !*(void *)(a1 + 16))
  {
    goto LABEL_44;
  }
  uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(DerivedStorage + 48));
  uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t, __CFString *, void, CFTypeRef *))(v6 + 48);
  if (!v7)
  {
    unsigned int Formatted = -12782;
    goto LABEL_44;
  }
  uint64_t v8 = *MEMORY[0x1E4F1CF80];
  unsigned int Formatted = v7(CMBaseObject, @"Name", *MEMORY[0x1E4F1CF80], &v26);
  if (Formatted) {
    goto LABEL_44;
  }
  uint64_t v9 = APEndpointDescriptionGetCMBaseObject(*(void *)(v3 + 48));
  uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v10) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0;
  }
  uint64_t v12 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v11 + 48);
  if (!v12)
  {
    unsigned int Formatted = -12782;
    goto LABEL_44;
  }
  unsigned int Formatted = v12(v9, @"DeviceID", v8, &cf);
  if (Formatted) {
    goto LABEL_44;
  }
  uint64_t v13 = *(void *)(v3 + 192);
  uint64_t v14 = *(void *)(a1 + 8);
  uint64_t v15 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v15) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = 0;
  }
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, void, CFDataRef *, void, CFDataRef *))(v16 + 64);
  if (!v17)
  {
    unsigned int Formatted = -12782;
    goto LABEL_44;
  }
  unsigned int Formatted = v17(v13, v14, 0, &theData, 0, &v39);
  if (Formatted) {
    goto LABEL_44;
  }
  if (CFDataGetLength(theData) <= 31
    || CFDataGetLength(v39) <= 31
    || (FigCFDictionaryGetInt32IfPresent(),
        FigCFDictionaryGetInt32IfPresent(),
        FigCFDictionaryGetBooleanIfPresent(),
        v43.locatioCFIndex n = 0,
        v43.length = 28,
        CFDataGetBytes(*(CFDataRef *)(v3 + 224), v43, buffer),
        buffer[1] != 2)
    && buffer[1] != 30)
  {
    APSLogErrorAt();
    CFDataRef Data = 0;
    goto LABEL_69;
  }
  unsigned int Formatted = SockAddrToString();
  if (Formatted || (APSGetDeviceID(), Formatted))
  {
LABEL_44:
    APSLogErrorAt();
    CFDataRef Data = 0;
    goto LABEL_45;
  }
  GestaltGetData();
  if (Formatted) {
    LOBYTE(v30) = 0;
  }
  uint64_t v18 = APEndpointDescriptionGetCMBaseObject(*(void *)(v3 + 48));
  uint64_t v19 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v19) {
    uint64_t v20 = v19;
  }
  else {
    uint64_t v20 = 0;
  }
  uint64_t v22 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t, CFDataRef *))(v20 + 48);
  if (!v22)
  {
    unsigned int Formatted = -12782;
    goto LABEL_44;
  }
  unsigned int Formatted = v22(v18, @"MACAddress", v8, &v27);
  if (Formatted) {
    goto LABEL_44;
  }
  CFDataGetBytePtr(theData);
  CFDataGetBytePtr(v39);
  CFDataGetBytePtr(v27);
  unsigned int Formatted = CFPropertyListCreateFormatted();
  if (Formatted) {
    goto LABEL_44;
  }
  if (gLogCategory_APSenderSessionAirPlay <= 30
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFDataRef Data = CFPropertyListCreateData(0, propertyList, kCFPropertyListBinaryFormat_v1_0, 0, 0);
  if (!Data)
  {
    APSLogErrorAt();
    int v24 = -6700;
    goto LABEL_70;
  }
  if (!CFGetCString())
  {
LABEL_69:
    int v24 = -71821;
LABEL_70:
    unsigned int Formatted = v24;
    goto LABEL_45;
  }
  unsigned int Formatted = APTDiagnosticMulticastDataToAllHosts();
  if (Formatted) {
    APSLogErrorAt();
  }
LABEL_45:
  if (cf) {
    CFRelease(cf);
  }
  if (v26) {
    CFRelease(v26);
  }
  if (v27) {
    CFRelease(v27);
  }
  if (propertyList) {
    CFRelease(propertyList);
  }
  if (Data) {
    CFRelease(Data);
  }
  if (theData) {
    CFRelease(theData);
  }
  if (v39) {
    CFRelease(v39);
  }
  return Formatted;
}

uint64_t apsession_determineTransportAvailabilityAndWaitIfNeeded(uint64_t a1, int a2, int a3, _DWORD *a4, int a5, int *a6)
{
  if (!a4)
  {
    APSLogErrorAt();
    goto LABEL_37;
  }
  if (apsession_isCancelled())
  {
LABEL_38:
    APSLogErrorAt();
    uint64_t v13 = 0;
    int v19 = -71832;
    goto LABEL_32;
  }
  if ((a2 & ~a3) != 0)
  {
LABEL_37:
    int v19 = 0;
    uint64_t v13 = 0;
    goto LABEL_32;
  }
  uint64_t isTransportTypeAvailable = apsession_isTransportTypeAvailable(a1, a2);
  uint64_t v13 = isTransportTypeAvailable;
  if (a5 && !isTransportTypeAvailable)
  {
    uint64_t v14 = 20;
    if (a2 != 4) {
      uint64_t v14 = 0;
    }
    if (a2 == 2) {
      unint64_t v15 = 10;
    }
    else {
      unint64_t v15 = v14;
    }
    if (((a2 - 2) & 0xFFFFFFFD) != 0) {
      useconds_t v16 = 0;
    }
    else {
      useconds_t v16 = 500000;
    }
    if (gLogCategory_APSenderSessionAirPlay <= 50
      && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
      if (v15)
      {
LABEL_19:
        unint64_t v17 = 1;
        while (!apsession_isCancelled())
        {
          usleep(v16);
          uint64_t v13 = apsession_isTransportTypeAvailable(a1, a2);
          if (gLogCategory_APSenderSessionAirPlay <= 50
            && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          if (!v13 && v17++ < v15) {
            continue;
          }
          goto LABEL_28;
        }
        goto LABEL_38;
      }
    }
    else if (v15)
    {
      goto LABEL_19;
    }
    int v19 = 0;
    uint64_t v13 = 0;
    goto LABEL_32;
  }
LABEL_28:
  int v19 = 0;
  if (v13) {
    *a4 |= a2;
  }
LABEL_32:
  if (a6) {
    *a6 = v19;
  }
  return v13;
}

uint64_t apsession_isTransportTypeAvailable(uint64_t a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(DerivedStorage + 48));
  uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(unsigned int (**)(uint64_t, __CFString *, void, CFTypeRef *))(v6 + 48);
  if (!v7 || v7(CMBaseObject, @"TransportDevice", *MEMORY[0x1E4F1CF80], &cf))
  {
    APSLogErrorAt();
LABEL_8:
    uint64_t IsReachable = 0;
  }
  else
  {
    switch(a2)
    {
      case 1:
      case 2:
      case 8:
        uint64_t IsReachable = APTransportDeviceIsReachable();
        break;
      case 4:
        int v9 = *(_DWORD *)(DerivedStorage + 64);
        uint64_t v10 = APTransportDeviceIsReachable();
        uint64_t IsReachable = v10;
        if (v9 == 3 && v10) {
          uint64_t IsReachable = APTransportDeviceIsReachable() != 0;
        }
        break;
      default:
        if (gLogCategory_APSenderSessionAirPlay <= 90
          && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        goto LABEL_8;
    }
  }
  if (cf) {
    CFRelease(cf);
  }
  return IsReachable;
}

uint64_t apsession_controlStreamMessageCallback(const void *a1, uint64_t a2, uint64_t a3, const void *a4)
{
  return APSDispatchAsyncFHelper();
}

void apsession_controlStreamMessageCallbackInternal(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8);
  if (v2 != 1651470958)
  {
    if (v2 == 1684628836)
    {
      apsession_handleTransportStreamDisconnected(*(void **)(a1 + 16));
    }
    else if (gLogCategory_APSenderSessionAirPlay <= 50 {
           && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
    }
    {
      LogPrintF();
    }
  }
  CFRelease(*(CFTypeRef *)(a1 + 16));
  uint64_t v3 = *(const void **)a1;
  CFRelease(v3);
}

void apsession_handleTransportStreamDisconnected(void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionAirPlay <= 90
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFRetain(a1);
  dispatch_async_f(*(dispatch_queue_t *)(DerivedStorage + 152), a1, (dispatch_function_t)apsession_handleDeferredTeardownControlStream);
  apsession_postFailedNotification(a1, 4294950683, @"InProgress");
}

void apsession_handleDeferredTeardownControlStream(const void *a1)
{
  apsession_disconnectControlStream((uint64_t)a1);
  CFRelease(a1);
}

uint64_t apsession_fetchInfo(const void *a1, int a2, int a3, const __CFDictionary *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  CFTypeRef v48 = 0;
  CFStringRef theString1 = 0;
  uint64_t v46 = 0;
  if (*(_DWORD *)(DerivedStorage + 64) == 10)
  {
    uint64_t v28 = 0;
  }
  else
  {
    uint64_t v9 = DerivedStorage;
    apsession_copyTransportControlStream((uint64_t)a1, &v46);
    uint64_t v10 = v46;
    if (v46)
    {
      uint64_t v11 = *MEMORY[0x1E4F1CF80];
      if (a4 && *(_DWORD *)(v9 + 64) == 5) {
        CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, a4);
      }
      else {
        CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      }
      CFDictionaryRef v13 = MutableCopy;
      if (MutableCopy)
      {
        if (a2) {
          CFArrayEnsureCreatedAndAppend();
        }
        if (a3) {
          CFArrayEnsureCreatedAndAppend();
        }
        if (gLogCategory_APSenderSessionAirPlay <= 30
          && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        FigCFDictionarySetValue();
        CFDictionaryGetCount(v13);
        uint64_t v14 = APTransportStreamSendPlistMessageCreatingPlistReply();
        if (v14)
        {
          uint64_t v28 = v14;
        }
        else
        {
          if (gLogCategory_APSenderSessionAirPlay <= 30
            && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          if (cf && (CFTypeID v15 = CFGetTypeID(cf), v15 == CFDictionaryGetTypeID()))
          {
            CFStringRef Value = (const __CFString *)CFDictionaryGetValue((CFDictionaryRef)cf, @"deviceID");
            uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(v9 + 48));
            uint64_t v18 = *(void *)(CMBaseObjectGetVTable() + 8);
            if (v18) {
              uint64_t v19 = v18;
            }
            else {
              uint64_t v19 = 0;
            }
            uint64_t v20 = *(void (**)(uint64_t, __CFString *, uint64_t, CFStringRef *))(v19 + 48);
            if (v20) {
              v20(CMBaseObject, @"DeviceID", v11, &theString1);
            }
            if (Value
              && theString1
              && CFStringCompare(theString1, @"FF:FF:FF:FF:FF:FF", 1uLL)
              && CFStringCompare(Value, theString1, 1uLL)
              && gLogCategory_APSenderSessionAirPlay <= 90
              && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            if (a3)
            {
              uint64_t v21 = CFDictionaryGetValue((CFDictionaryRef)cf, @"displayCapabilities");
              if (gLogCategory_APSenderSessionAirPlay <= 50
                && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              uint64_t v22 = *(const void **)(v9 + 168);
              *(void *)(v9 + 168) = v21;
              if (v21) {
                CFRetain(v21);
              }
              if (v22) {
                CFRelease(v22);
              }
            }
            MEMORY[0x1D25EB370](*(void *)(v9 + 256));
            uint64_t v23 = *(void *)(v9 + 48);
            CFTypeRef v24 = cf;
            uint64_t v25 = *(void *)(CMBaseObjectGetVTable() + 16);
            if (v25) {
              uint64_t v26 = v25;
            }
            else {
              uint64_t v26 = 0;
            }
            CFDataRef v27 = *(uint64_t (**)(uint64_t, CFTypeRef))(v26 + 32);
            if (v27)
            {
              uint64_t v28 = v27(v23, v24);
              MEMORY[0x1D25EB390](*(void *)(v9 + 256));
              if (!v28)
              {
                if (CFDictionaryContainsKey((CFDictionaryRef)cf, @"initialVolume"))
                {
                  CFDictionaryGetDouble();
                  float v30 = v29;
                  BOOL v31 = CFDictionaryGetInt64() != 0;
                  if (gLogCategory_APSenderSessionAirPlay <= 50
                    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
                  {
                    LogPrintF();
                  }
                  MEMORY[0x1D25EB370](*(void *)(v9 + 256));
                  *(float *)(v9 + 360) = v30;
                  *(unsigned char *)(v9 + 364) = v31;
                  MEMORY[0x1D25EB390](*(void *)(v9 + 256));
                  *(unsigned char *)(v9 + 163) = 1;
                }
                else if (gLogCategory_APSenderSessionAirPlay <= 50 {
                       && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
                }
                {
                  LogPrintF();
                }
                CFDictionaryRef v32 = (const __CFDictionary *)cf;
                CFTypeRef v50 = 0;
                uint64_t v33 = CMBaseObjectGetDerivedStorage();
                uint64_t v34 = *(void **)(v33 + 200);
                if (v34
                  && (APPairingClientCoreUtilsPairedPeerDescriptionHasWoLInfo(v34)
                   || v32 && CFDictionaryContainsKey(v32, @"WoLInfo")))
                {
                  if (APPairingClientCoreUtilsPairedPeerDescriptionHasWoLInfo(*(void **)(v33 + 200))) {
                    goto LABEL_71;
                  }
                  uint64_t v35 = CFDictionaryGetValue(v32, @"WoLInfo");
                  CFTypeRef v49 = 0;
                  APPairingClientCoreUtilsCreatePatchedPairedPeerWithPeerInfo(*(void **)(v33 + 200), (uint64_t)v35, &v49);
                  CFTypeRef v36 = v49;
                  if (v49)
                  {
                    int v37 = *(const void **)(v33 + 200);
                    *(void *)(v33 + 200) = v49;
                    CFRetain(v36);
                    if (v37) {
                      CFRelease(v37);
                    }
                    CFRelease(v49);
                  }
                  if (APPairingClientCoreUtilsPairedPeerDescriptionHasWoLInfo(*(void **)(v33 + 200)))
                  {
LABEL_71:
                    uint64_t v38 = *(void *)(v33 + 48);
                    CFAllocatorRef v39 = CFGetAllocator(a1);
                    uint64_t v40 = APEndpointDescriptionGetCMBaseObject(v38);
                    uint64_t v41 = *(void *)(CMBaseObjectGetVTable() + 8);
                    if (v41) {
                      uint64_t v42 = v41;
                    }
                    else {
                      uint64_t v42 = 0;
                    }
                    CFRange v43 = *(void (**)(uint64_t, __CFString *, CFAllocatorRef, CFTypeRef *))(v42 + 48);
                    if (v43)
                    {
                      v43(v40, @"TransportDevice", v39, &v50);
                      if (v50)
                      {
                        if (gLogCategory_APSenderSessionAirPlay <= 50
                          && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
                        {
                          LogPrintF();
                        }
                        APTransportDeviceTriggerWoLCachingIfNeeded();
                        if (v50) {
                          CFRelease(v50);
                        }
                      }
                    }
                  }
                }
                uint64_t v28 = 0;
                goto LABEL_83;
              }
            }
            else
            {
              MEMORY[0x1D25EB390](*(void *)(v9 + 256));
              uint64_t v28 = 4294954514;
            }
          }
          else
          {
            uint64_t v28 = 4294895475;
          }
        }
        APSLogErrorAt();
LABEL_83:
        CFRelease(v10);
        CFRelease(v13);
        goto LABEL_84;
      }
      APSLogErrorAt();
      CFRelease(v10);
      uint64_t v28 = 4294895476;
    }
    else
    {
      uint64_t v28 = 4294895475;
      APSLogErrorAt();
    }
  }
LABEL_84:
  if (v48) {
    CFRelease(v48);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (theString1) {
    CFRelease(theString1);
  }
  return v28;
}

uint64_t apsession_tryAPPairSetupAndVerify(uint64_t a1, int a2, char a3, char *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int isTransientPairingSupported = apsession_isTransientPairingSupported();
  uint64_t v70 = APSGetFBOPropertyInt64();
  uint64_t v67 = APSGetFBOPropertyInt64();
  uint64_t v65 = APSGetFBOPropertyInt64();
  int v68 = *(_DWORD *)(DerivedStorage + 64);
  CFTypeRef v73 = 0;
  CFTypeRef v74 = 0;
  CFTypeRef v72 = 0;
  if (gLogCategory_APSenderSessionAirPlay <= 50
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    if ((a2 - 1) > 7) {
      uint64_t v8 = "UNKNOWN";
    }
    else {
      uint64_t v8 = off_1E6891AC0[a2 - 1];
    }
    CFTypeRef v63 = v8;
    uint64_t v64 = *(void *)(DerivedStorage + 8);
    uint64_t v62 = a1;
    LogPrintF();
  }
  uint64_t v9 = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(v9 + 256));
  uint64_t v10 = APSGetFBOPropertyInt64();
  if (APSGetFBOPropertyInt64() || *(unsigned char *)(v9 + 392))
  {
    char v11 = 1;
LABEL_12:
    BOOL v12 = 1;
    goto LABEL_13;
  }
  int v28 = *(_DWORD *)(v9 + 64);
  char v11 = 1;
  if (v28 == 7) {
    goto LABEL_12;
  }
  BOOL v12 = 1;
  if (v28 != 9)
  {
    if (APSGetFBOPropertyInt64())
    {
      char v11 = 0;
    }
    else
    {
      uint64_t v59 = APSGetFBOPropertyInt64();
      char v11 = 0;
      BOOL v12 = a2 == 2 && v10 == 0 || v59 != 0;
    }
  }
LABEL_13:
  MEMORY[0x1D25EB390](*(void *)(v9 + 256));
  unsigned int v13 = 0;
  if (isTransientPairingSupported && (v11 & 1) == 0)
  {
    if (v70 | v67) {
      unsigned int v13 = 1;
    }
    else {
      unsigned int v13 = !v12;
    }
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  CFStringRef v14 = *(const __CFString **)(DerivedStorage + 352);
  if (v14)
  {
    BOOL v15 = CFStringGetLength(v14) != 0;
    useconds_t v16 = *(const void **)(DerivedStorage + 352);
    if (v16)
    {
      CFTypeRef v17 = CFRetain(v16);
      goto LABEL_23;
    }
  }
  else
  {
    BOOL v15 = 0;
  }
  CFTypeRef v17 = 0;
LABEL_23:
  isBrokerAssistedConnectioCFIndex n = apsession_isBrokerAssistedConnection();
  uint64_t v19 = (const void *)*MEMORY[0x1E4F1CFD0];
  uint64_t v20 = (const void *)*MEMORY[0x1E4F1CFC8];
  char v71 = v13;
  if (v13) {
    uint64_t v21 = (const void *)*MEMORY[0x1E4F1CFD0];
  }
  else {
    uint64_t v21 = (const void *)*MEMORY[0x1E4F1CFC8];
  }
  CFDictionarySetValue(*(CFMutableDictionaryRef *)(DerivedStorage + 432), @"transientPairing", v21);
  if (v12) {
    uint64_t v22 = v19;
  }
  else {
    uint64_t v22 = v20;
  }
  CFDictionarySetValue(*(CFMutableDictionaryRef *)(DerivedStorage + 432), @"pairingRequiresCode", v22);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
  if (v15)
  {
    BOOL v23 = v68 != 6 && isBrokerAssistedConnection == 0;
    char v24 = (v67 == 0) & ~v11;
    if (!v23) {
      char v24 = 1;
    }
  }
  else
  {
    char v24 = 0;
  }
  if (!v12 | v24) {
    goto LABEL_57;
  }
  if (v68 == 6)
  {
    uint64_t v25 = CMBaseObjectGetDerivedStorage();
    MEMORY[0x1D25EB370](*(void *)(v25 + 256));
    uint64_t v26 = *(const void **)(v25 + 288);
    if (v26)
    {
      CFTypeRef v27 = CFRetain(v26);
      MEMORY[0x1D25EB390](*(void *)(v25 + 256));
      if (v27)
      {
        if (gLogCategory_APSenderSessionAirPlay <= 50
          && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
        {
          uint64_t v62 = a1;
          LogPrintF();
        }
        uint64_t v31 = APTransportStreamSendPlistMessageCreatingPlistReply();
        if (v31)
        {
          uint64_t v30 = v31;
          char v29 = 0;
LABEL_52:
          if (gLogCategory_APSenderSessionAirPlay <= 50
            && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          if ((v29 & 1) == 0) {
            CFRelease(v27);
          }
          goto LABEL_95;
        }
        CFRelease(v27);
        goto LABEL_56;
      }
    }
    else
    {
      MEMORY[0x1D25EB390](*(void *)(v25 + 256));
    }
    APSLogErrorAt();
    CFTypeRef v27 = 0;
    char v29 = 1;
    uint64_t v30 = 4294895467;
    goto LABEL_52;
  }
LABEL_56:
  if (*(unsigned char *)(DerivedStorage + 105))
  {
    APSLogErrorAt();
    char v56 = 0;
    uint64_t v30 = 4294949696;
    goto LABEL_96;
  }
LABEL_57:
  apsession_copyAPPairingGroupInfo();
  ++*(void *)(DerivedStorage + 416);
  uint64_t v32 = apsession_createPairingClient(a1, 0, 0, 0, a3, 0, 0, &v74);
  if (v32)
  {
    uint64_t v30 = v32;
    goto LABEL_95;
  }
  APSEventRecorderRecordEvent();
  CFTypeRef v33 = v74;
  uint64_t v34 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v34) {
    uint64_t v35 = v34;
  }
  else {
    uint64_t v35 = 0;
  }
  CFTypeRef v36 = *(uint64_t (**)(CFTypeRef, CFTypeRef, BOOL, void, CFTypeRef *, CFTypeRef *, void, void, uint64_t, const char *, uint64_t))(v35 + 24);
  if (v36) {
    uint64_t v30 = v36(v33, v17, v12, v13, &v73, &v72, 0, 0, v62, v63, v64);
  }
  else {
    uint64_t v30 = 4294954514;
  }
  APSEventRecorderRecordEvent();
  *(unsigned char *)(DerivedStorage + 160) = v30 != 0;
  if (v30) {
    goto LABEL_95;
  }
  if (!v65 && (v13 & 1) == 0)
  {
    CFTypeRef v37 = v73;
    CFTypeRef v38 = v72;
    uint64_t v39 = CMBaseObjectGetDerivedStorage();
    uint64_t v40 = v39;
    if (v37)
    {
      uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(v39 + 48));
      uint64_t v42 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v43 = v42 ? v42 : 0;
      int v44 = *(void (**)(uint64_t, __CFString *, CFTypeRef))(v43 + 56);
      if (v44) {
        v44(CMBaseObject, @"PairingPeerCUAirPlayIdentifier", v37);
      }
    }
    LOBYTE(v13) = v71;
    if (v38)
    {
      uint64_t v45 = APEndpointDescriptionGetCMBaseObject(*(void *)(v40 + 48));
      uint64_t v46 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v47 = v46 ? v46 : 0;
      CFTypeRef v48 = *(void (**)(uint64_t, __CFString *, CFTypeRef))(v47 + 56);
      if (v48) {
        v48(v45, @"PairingPeerPublicKey", v38);
      }
    }
  }
  if ((v13 & 1) == 0) {
    ++*(void *)(DerivedStorage + 416);
  }
  CFTypeRef v49 = v74;
  uint64_t v50 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v50) {
    uint64_t v51 = v50;
  }
  else {
    uint64_t v51 = 0;
  }
  uint64_t v52 = *(uint64_t (**)(CFTypeRef, void))(v51 + 32);
  if (!v52)
  {
    uint64_t v30 = 4294954514;
LABEL_95:
    APSLogErrorAt();
    char v56 = 0;
    goto LABEL_96;
  }
  uint64_t v53 = v52(v49, 0);
  if (v53)
  {
    uint64_t v30 = v53;
    goto LABEL_95;
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  uint64_t v54 = *(const void **)(DerivedStorage + 376);
  CFTypeRef v55 = v74;
  *(void *)(DerivedStorage + 376) = v74;
  if (v55) {
    CFRetain(v55);
  }
  if (v54) {
    CFRelease(v54);
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
  uint64_t v30 = 0;
  char v56 = 1;
LABEL_96:
  if (a4) {
    *a4 = v56;
  }
  if (v30) {
    int v57 = 90;
  }
  else {
    int v57 = 50;
  }
  if (v57 >= gLogCategory_APSenderSessionAirPlay
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (v74) {
    CFRelease(v74);
  }
  if (v17) {
    CFRelease(v17);
  }
  if (v73) {
    CFRelease(v73);
  }
  if (v72) {
    CFRelease(v72);
  }
  return v30;
}

uint64_t apsession_getTransportsRequiringBroker()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(DerivedStorage + 48));
  uint64_t v2 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  CFTypeRef v4 = *(void (**)(uint64_t, __CFString *, void, CFTypeRef *))(v3 + 48);
  if (!v4) {
    return 0;
  }
  v4(CMBaseObject, @"TransportDevice", *MEMORY[0x1E4F1CF80], &cf);
  if (!cf) {
    return 0;
  }
  uint64_t TransportsRequiringBroker = APTransportDeviceGetTransportsRequiringBroker();
  if (cf) {
    CFRelease(cf);
  }
  return TransportsRequiringBroker;
}

uint64_t apsession_createPairingClient(uint64_t a1, char a2, int a3, char a4, char a5, const void *a6, const void *a7, void *a8)
{
  uint64_t v70 = *MEMORY[0x1E4F143B8];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef v59 = 0;
  CFTypeRef cf = 0;
  CFTypeRef v58 = 0;
  if (!a8)
  {
    APSLogErrorAt();
    *(_DWORD *)uint64_t v64 = -71821;
    goto LABEL_71;
  }
  uint64_t v16 = DerivedStorage;
  uint64_t v54 = a7;
  CFTypeRef v55 = a6;
  char v56 = a5;
  uint64_t v17 = APSGetFBOPropertyInt64();
  BOOL v18 = APSGetFBOPropertyInt64() != 0;
  int v19 = *(_DWORD *)(v16 + 64);
  BOOL v21 = v19 == 9 || v19 == 7;
  if (a3) {
    BOOL v22 = v19 == 8;
  }
  else {
    BOOL v22 = 0;
  }
  char v23 = v22;
  char v52 = v23;
  int v53 = v21;
  char v24 = (uint64_t *)MEMORY[0x1E4F1CF80];
  if (v19 == 5)
  {
    uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(v16 + 48));
    uint64_t v26 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v26) {
      uint64_t v27 = v26;
    }
    else {
      uint64_t v27 = 0;
    }
    char v29 = *(void (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v27 + 48);
    if (v29) {
      v29(CMBaseObject, @"DeviceID", *v24, &v58);
    }
    BOOL v18 = 0;
    char v28 = 0;
  }
  else
  {
    char v28 = 1;
  }
  int v63 = 0;
  __int16 v62 = 0;
  int v61 = 0;
  APSGetDeviceID();
  char v57 = a4;
  char v51 = v28;
  if (v63)
  {
    APSLogErrorAt();
    CFStringRef v31 = 0;
LABEL_84:
    CFStringRef v30 = 0;
    goto LABEL_25;
  }
  HardwareAddressToCString();
  CFStringRef v30 = CFStringCreateWithCString(0, cStr, 0x8000100u);
  if (!v30)
  {
    APSLogErrorAt();
    CFStringRef v31 = 0;
    *(_DWORD *)uint64_t v64 = -71820;
    goto LABEL_81;
  }
  __int16 v66 = 0;
  uint64_t v65 = 0;
  int v67 = v61;
  __int16 v68 = v62;
  UUIDtoCString();
  CFStringRef v31 = CFStringCreateWithCString(0, v64, 0x8000100u);
  if (!v31)
  {
    APSLogErrorAt();
    int v63 = -71820;
    CFRelease(v30);
    goto LABEL_84;
  }
LABEL_25:
  *(_DWORD *)uint64_t v64 = v63;
  if (v63) {
    goto LABEL_81;
  }
  uint64_t v32 = *v24;
  if (v17)
  {
    uint64_t v33 = *(void *)(v16 + 48);
    if (v18)
    {
      uint64_t v34 = APEndpointDescriptionGetCMBaseObject(v33);
      uint64_t v35 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v35) {
        uint64_t v36 = v35;
      }
      else {
        uint64_t v36 = 0;
      }
      uint64_t v41 = *(void (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v36 + 48);
      if (v41)
      {
        uint64_t v42 = kAPEndpointDescriptionProperty_PairingPeerCUSystemIdentifier;
LABEL_43:
        uint64_t v43 = *v42;
        p_CFTypeRef cf = &cf;
        goto LABEL_44;
      }
    }
    else
    {
      uint64_t v34 = APEndpointDescriptionGetCMBaseObject(v33);
      uint64_t v39 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v39) {
        uint64_t v40 = v39;
      }
      else {
        uint64_t v40 = 0;
      }
      uint64_t v41 = *(void (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v40 + 48);
      if (v41)
      {
        uint64_t v42 = kAPEndpointDescriptionProperty_PairingPeerCUAirPlayIdentifier;
        goto LABEL_43;
      }
    }
  }
  else
  {
    uint64_t v34 = APEndpointDescriptionGetCMBaseObject(*(void *)(v16 + 48));
    uint64_t v37 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v37) {
      uint64_t v38 = v37;
    }
    else {
      uint64_t v38 = 0;
    }
    uint64_t v41 = *(void (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v38 + 48);
    if (v41)
    {
      uint64_t v43 = @"PairingPeerPublicKey";
      p_CFTypeRef cf = &v59;
LABEL_44:
      v41(v34, v43, v32, p_cf);
    }
  }
  MEMORY[0x1D25EB370](*(void *)(v16 + 256));
  uint64_t v45 = *(const void **)(v16 + 288);
  if (v45)
  {
    if (v17)
    {
      int v46 = APSGetFBOPropertyInt64();
      if (*(_DWORD *)v64) {
        BOOL v47 = 0;
      }
      else {
        BOOL v47 = v46 == 32;
      }
      char v48 = v47;
      int v49 = APPairingClientCoreUtilsCreate(v32, v31, *(unsigned char *)(v16 + 105), v18, v53, a2, a3, v52, v57, v56, v48, v51, cf, v55, v54, *(const void **)(v16 + 288), v58, a8);
    }
    else
    {
      int v49 = APPairingClientLegacyCreate(v32, v30, v59, v45, a8);
    }
    *(_DWORD *)uint64_t v64 = v49;
  }
  else
  {
    if (gLogCategory_APSenderSessionAirPlay <= 90
      && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(_DWORD *)uint64_t v64 = -71829;
  }
  MEMORY[0x1D25EB390](*(void *)(v16 + 256));
  if (*(_DWORD *)v64)
  {
LABEL_81:
    APSLogErrorAt();
    if (!v31) {
      goto LABEL_69;
    }
LABEL_68:
    CFRelease(v31);
    goto LABEL_69;
  }
  if (gLogCategory_APSenderSessionAirPlay > 50
    || gLogCategory_APSenderSessionAirPlay == -1 && !_LogCategory_Initialize())
  {
    if (!v31) {
      goto LABEL_69;
    }
    goto LABEL_68;
  }
  LogPrintF();
  if (v31) {
    goto LABEL_68;
  }
LABEL_69:
  if (v30) {
    CFRelease(v30);
  }
LABEL_71:
  if (cf) {
    CFRelease(cf);
  }
  if (v59) {
    CFRelease(v59);
  }
  if (v58) {
    CFRelease(v58);
  }
  return *(unsigned int *)v64;
}

uint64_t apsession_isTransientPairingSupported()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  LOBYTE(result) = APSGetFBOPropertyInt64() != 0;
  if (*(_DWORD *)(DerivedStorage + 64) == 10) {
    LOBYTE(result) = APSSettingsGetIntWithDefault();
  }
  return result;
}

void apsession_copyAPPairingGroupInfo()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  if (APSIsPairingGroupEnabled())
  {
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
    isBrokerAssistedConnectioCFIndex n = apsession_isBrokerAssistedConnection();
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
    if (isBrokerAssistedConnection)
    {
      uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(DerivedStorage + 48));
      uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v3) {
        uint64_t v4 = v3;
      }
      else {
        uint64_t v4 = 0;
      }
      uint64_t v5 = *(void (**)(uint64_t, __CFString *, void, CFTypeRef *))(v4 + 48);
      if (v5)
      {
        v5(CMBaseObject, @"TransportDevice", *MEMORY[0x1E4F1CF80], &cf);
        if (cf)
        {
          APTransportDeviceCopyBrokeredReceiverInfo();
          if (cf) {
            CFRelease(cf);
          }
        }
      }
    }
  }
}

uint64_t apsession_isBrokerAssistedConnection()
{
  uint64_t result = *(void *)(CMBaseObjectGetDerivedStorage() + 288);
  if (result)
  {
    int v1 = APSGetFBOPropertyInt64();
    return (apsession_getTransportsRequiringBroker() & v1) != 0;
  }
  return result;
}

uint64_t APPairingClientCopyProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t CMBaseObject = APPairingClientGetCMBaseObject();
  uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10) {
    return 4294954514;
  }
  return v10(CMBaseObject, a2, a3, a4);
}

uint64_t APAuthenticationClientAuthenticateEndpoint(uint64_t a1)
{
  uint64_t v2 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v3 + 16);
  if (!v4) {
    return 4294954514;
  }
  return v4(a1);
}

uint64_t apsession_requestControlSetupWithResponse(uint64_t a1, const void *a2, int a3, CFTypeRef *a4)
{
  CMBaseObjectGetDerivedStorage();
  uint64_t v16 = 0;
  CFTypeRef cf = 0;
  apsession_copyTransportControlStream(a1, &v16);
  uint64_t v8 = v16;
  if (!v16)
  {
    uint64_t v14 = 4294895475;
    APSLogErrorAt();
    return v14;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!Mutable)
  {
    APSLogErrorAt();
    CFRelease(v8);
    return 4294895476;
  }
  uint64_t v10 = Mutable;
  char v11 = (const void **)MEMORY[0x1E4F1CFD0];
  if (!a3) {
    char v11 = (const void **)MEMORY[0x1E4F1CFC8];
  }
  CFDictionarySetValue(Mutable, @"updateSessionRequest", *v11);
  uint64_t appended = apsession_appendControlSetupRequest(a1, v10, a2);
  if (appended)
  {
    uint64_t v14 = appended;
  }
  else
  {
    if (gLogCategory_APSenderSessionAirPlay <= 10
      && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v13 = APTransportStreamSendPlistMessageCreatingPlistReply();
    if (!v13)
    {
      if (gLogCategory_APSenderSessionAirPlay <= 10
        && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v14 = 0;
      if (a4)
      {
        *a4 = cf;
        CFTypeRef cf = 0;
      }
      goto LABEL_17;
    }
    uint64_t v14 = v13;
  }
  APSLogErrorAt();
LABEL_17:
  CFRelease(v8);
  CFRelease(v10);
  if (cf) {
    CFRelease(cf);
  }
  return v14;
}

uint64_t apsession_appendControlSetupRequest(uint64_t a1, __CFDictionary *a2, const void *a3)
{
  uint64_t v94 = *MEMORY[0x1E4F143B8];
  unsigned int v85 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFUUIDRef uuid = 0;
  theCFDataRef Data = 0;
  long long v92 = 0u;
  long long v93 = 0u;
  long long v90 = 0u;
  long long v91 = 0u;
  long long v89 = 0u;
  long long v87 = 0u;
  long long v88 = 0u;
  long long v86 = 0u;
  CFTypeRef cf = 0;
  value = 0;
  __int16 v80 = 0;
  int v79 = 0;
  uint64_t v5 = APSGetFBOPropertyInt64();
  CFTypeRef v78 = 0;
  uint64_t v6 = APSGetFBOPropertyInt64();
  CFTypeRef v76 = 0;
  CFTypeRef v77 = 0;
  BOOL v7 = APSGetFBOPropertyInt64() == 0;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  uint64_t v8 = *(const void **)(DerivedStorage + 280);
  if (v8) {
    CFTypeRef v9 = CFRetain(v8);
  }
  else {
    CFTypeRef v9 = 0;
  }
  uint64_t v10 = *(const void **)(DerivedStorage + 288);
  if (v10) {
    CFTypeRef v11 = CFRetain(v10);
  }
  else {
    CFTypeRef v11 = 0;
  }
  BOOL v12 = *(const void **)(DerivedStorage + 488);
  if (v12) {
    CFTypeRef v13 = CFRetain(v12);
  }
  else {
    CFTypeRef v13 = 0;
  }
  int v14 = *(unsigned __int8 *)(DerivedStorage + 270);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
  if (v9)
  {
    if (!v11)
    {
      APSLogErrorAt();
      CFStringRef v39 = 0;
      uint64_t v16 = 0;
      unsigned int v85 = APSSignalErrorAt();
      goto LABEL_79;
    }
    uint64_t v71 = v6;
    if (a2) {
      BOOL v15 = CFDictionaryGetInt64() != 0;
    }
    else {
      BOOL v15 = 0;
    }
    int v69 = v14;
    if (*(_DWORD *)(DerivedStorage + 64) == 5)
    {
      uint64_t v16 = (const void *)MGCopyAnswer();
      if (v16)
      {
        CFDictionarySetValue(a2, @"deviceID", v16);
      }
      else
      {
        APSGetDeviceID();
        HardwareAddressToCString();
        CFDictionarySetCString();
      }
    }
    else
    {
      APSGetDeviceID();
      HardwareAddressToCString();
      CFDictionarySetCString();
      uint64_t v16 = 0;
    }
    BOOL v70 = v7;
    unsigned int v17 = *(_DWORD *)(DerivedStorage + 64);
    if (v17 <= 4 && v17 != 3)
    {
      APSCopyBootUUID();
      FigCFDictionarySetValue();
    }
    uint64_t v18 = *(void *)(DerivedStorage + 192);
    if (v18 && !v5)
    {
      uint64_t v19 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v19) {
        uint64_t v20 = v19;
      }
      else {
        uint64_t v20 = 0;
      }
      BOOL v21 = *(uint64_t (**)(uint64_t))(v20 + 8);
      if (v21) {
        v21(v18);
      }
      CFDictionarySetInt64();
      uint64_t v22 = *(void *)(DerivedStorage + 192);
      uint64_t v23 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v23) {
        uint64_t v24 = v23;
      }
      else {
        uint64_t v24 = 0;
      }
      uint64_t v25 = *(uint64_t (**)(uint64_t, void **, CFTypeRef *))(v24 + 24);
      if (!v25)
      {
        unsigned int v85 = -12782;
        goto LABEL_78;
      }
      unsigned int v85 = v25(v22, &value, &cf);
      if (v85) {
        goto LABEL_78;
      }
      uint64_t v26 = *(void *)(DerivedStorage + 192);
      uint64_t v27 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v27) {
        uint64_t v28 = v27;
      }
      else {
        uint64_t v28 = 0;
      }
      char v29 = *(uint64_t (**)(uint64_t))(v28 + 32);
      if (!v29)
      {
        unsigned int v85 = -12782;
        goto LABEL_78;
      }
      unsigned int v85 = v29(v26);
      if (v85)
      {
LABEL_78:
        APSLogErrorAt();
        CFStringRef v39 = 0;
        goto LABEL_79;
      }
      CFDictionarySetValue(a2, @"ekey", value);
      CFDictionarySetValue(a2, @"eiv", cf);
    }
    uint64_t CMBaseObject = FigTransportStreamGetCMBaseObject();
    uint64_t v31 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v31) {
      uint64_t v32 = v31;
    }
    else {
      uint64_t v32 = 0;
    }
    uint64_t v33 = *(uint64_t (**)(uint64_t, void, void, CFDataRef *))(v32 + 48);
    if (v33)
    {
      CFAllocatorRef v34 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
      unsigned int v85 = v33(CMBaseObject, *MEMORY[0x1E4F47750], *MEMORY[0x1E4F1CF80], &theData);
      if (!v85)
      {
        CFDataGetBytePtr(theData);
        HardwareAddressToCString();
        CFDictionarySetCString();
        LOBYTE(v86) = 0;
        GetDeviceModelString();
        CFDictionarySetCString();
        LOBYTE(v86) = 0;
        APSGetDeviceNameCString();
        CFDictionarySetCString();
        LOBYTE(v86) = 0;
        GetSystemBuildVersionString();
        CFDictionarySetCString();
        uint64_t v35 = FigTransportSessionGetCMBaseObject();
        uint64_t v36 = *(void *)(CMBaseObjectGetVTable() + 8);
        if (v36) {
          uint64_t v37 = v36;
        }
        else {
          uint64_t v37 = 0;
        }
        uint64_t v38 = *(uint64_t (**)(uint64_t, void, const __CFAllocator *, CFUUIDRef *))(v37 + 48);
        if (v38)
        {
          unsigned int v85 = v38(v35, *MEMORY[0x1E4F22020], v34, &uuid);
          if (!v85)
          {
            uint64_t v67 = (uint64_t)v34;
            CFStringRef v39 = CFUUIDCreateString(v34, uuid);
            if (!v39)
            {
              APSLogErrorAt();
              unsigned int v85 = -71820;
              goto LABEL_79;
            }
            CFDictionarySetValue(a2, @"sessionUUID", v39);
            APSVersionUtilsGetShortVersionLength();
            CFDictionarySetCString();
            uint64_t v40 = (const void *)*MEMORY[0x1E4F1CFD0];
            __int16 v68 = (const void *)*MEMORY[0x1E4F1CFC8];
            if (*(unsigned char *)(DerivedStorage + 120)) {
              uint64_t v41 = (const void *)*MEMORY[0x1E4F1CFD0];
            }
            else {
              uint64_t v41 = (const void *)*MEMORY[0x1E4F1CFC8];
            }
            CFDictionarySetValue(a2, @"statsCollectionEnabled", v41);
            if (*(unsigned char *)(DerivedStorage + 121)) {
              CFDictionarySetValue(a2, @"highFreqStatsCollectionEnabled", v40);
            }
            if (*(_DWORD *)(DerivedStorage + 240)) {
              CFDictionarySetInt64();
            }
            unsigned int v42 = *(_DWORD *)(DerivedStorage + 64);
            if (v42 <= 8 && ((1 << v42) & 0x1C2) != 0)
            {
              CFDictionarySetValue(a2, @"isRemoteControlOnly", v40);
              unsigned int v42 = *(_DWORD *)(DerivedStorage + 64);
            }
            if (v42 == 9 || v42 == 4)
            {
              CFDictionarySetValue(a2, @"isScreenMirroringSession", v40);
              unsigned int v42 = *(_DWORD *)(DerivedStorage + 64);
            }
            if (v42 == 5)
            {
              int v43 = APSGetFBOPropertyInt64();
              if (!v85)
              {
                if (v43 == 2) {
                  CFDictionarySetValue(a2, @"keepAliveLowPower", v40);
                }
                if (a3) {
                  CFDictionarySetValue(a2, @"features", a3);
                }
                goto LABEL_79;
              }
              goto LABEL_116;
            }
            if (IsAppleInternalBuild())
            {
              LOBYTE(v86) = 0;
              GetDeviceInternalModelString();
              CFDictionarySetCString();
              LOBYTE(v86) = 0;
              GetDeviceUniqueID();
              CFDictionarySetCString();
            }
            CFDictionarySetValue(a2, @"timingProtocol", *(const void **)(DerivedStorage + 16));
            if (*(__CFString **)(DerivedStorage + 16) == @"PTP" && !v15)
            {
              uint64_t v45 = *(void *)(DerivedStorage + 72);
              BOOL v73 = *(_DWORD *)(DerivedStorage + 64) == 3;
              uint64_t v46 = *(void *)(CMBaseObjectGetVTable() + 16);
              if (v46) {
                uint64_t v47 = v46;
              }
              else {
                uint64_t v47 = 0;
              }
              char v48 = *(uint64_t (**)(uint64_t, BOOL, CFTypeRef *, CFTypeRef *))(v47 + 64);
              if (!v48)
              {
                unsigned int v85 = -12782;
                goto LABEL_116;
              }
              unsigned int v85 = v48(v45, v73, &v76, &v77);
              if (v85)
              {
LABEL_116:
                APSLogErrorAt();
                goto LABEL_79;
              }
              CFDictionarySetValue(a2, @"timingPeerInfo", v77);
              CFDictionarySetValue(a2, @"timingPeerList", v76);
              if (gLogCategory_APSenderSessionAirPlay <= 50
                && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
              {
                CFArrayGetCount((CFArrayRef)v76);
                if (gLogCategory_APSenderSessionAirPlay == -1) {
                  _LogCategory_Initialize();
                }
                LogPrintF();
              }
            }
            unsigned int v49 = *(_DWORD *)(DerivedStorage + 64);
            if (v49 <= 8 && ((1 << v49) & 0x1C2) != 0 || !v71)
            {
LABEL_123:
              if (softLinkDiagnosticLogSubmissionEnabled())
              {
                CFDictionarySetValue(a2, @"diagnosticsAndUsage", v40);
                if (IsAppleInternalBuild()) {
                  uint64_t v50 = v40;
                }
                else {
                  uint64_t v50 = v68;
                }
                CFDictionarySetValue(a2, @"internalBuild", v50);
              }
              CFDictionaryRef v51 = (const __CFDictionary *)_CFCopySystemVersionDictionary();
              if (v51)
              {
                CFDictionaryRef v52 = v51;
                int v53 = CFDictionaryGetValue(v51, (const void *)*MEMORY[0x1E4F1CD18]);
                uint64_t v54 = CFDictionaryGetValue(v52, (const void *)*MEMORY[0x1E4F1CD30]);
                if (v53) {
                  CFDictionarySetValue(a2, @"osName", v53);
                }
                if (v54) {
                  CFDictionarySetValue(a2, @"osVersion", v54);
                }
                CFRelease(v52);
              }
              if (*(_DWORD *)(DerivedStorage + 64) == 10)
              {
                CelestialGetModelSpecificName();
                CFTypeRef v55 = (const void *)CelestialCFCreatePropertyListForModelAndBundleIdentifier();
                if (v55 || (CFTypeRef v55 = (const void *)CelestialCFCreatePropertyList()) != 0)
                {
                  CFDictionarySetValue(a2, @"sidePlaySessionBehaviors", v55);
                  CFRelease(v55);
                }
              }
LABEL_79:
              CFRelease(v9);
              if (!v11) {
                goto LABEL_81;
              }
              goto LABEL_80;
            }
            unsigned int v56 = (v49 > 0xB) | (0x7F3u >> v49);
            if (!APSIsAPMSpeaker() && !IsAppleTV()) {
              BOOL v70 = 0;
            }
            if (v56) {
              char v57 = v68;
            }
            else {
              char v57 = v40;
            }
            CFDictionarySetValue(a2, @"isMultiSelectAirPlay", v57);
            if (v13)
            {
              if (v70) {
                CFTypeRef v58 = v40;
              }
              else {
                CFTypeRef v58 = v68;
              }
              CFDictionarySetValue(a2, @"groupContainsGroupLeader", v58);
              CFDictionarySetValue(a2, @"groupUUID", v13);
              if ((v56 & 1) != 0 || (CFTypeRef v59 = v40, !*(unsigned char *)(DerivedStorage + 104))) {
                CFTypeRef v59 = v68;
              }
              CFDictionarySetValue(a2, @"senderSupportsRelay", v59);
            }
            if (IsAppleTV() && *(_DWORD *)(DerivedStorage + 64) == 3)
            {
              CFDictionarySetValue(a2, @"isHomeTheaterSession", v40);
              APSHDMIVideoLatencyMs();
              CFDictionarySetInt64();
              CMTimeValue v60 = @"isPersistentConnection";
              int v61 = @"surviveAudioInterruption";
            }
            else
            {
              if (!APSIsAPMSpeaker() || *(_DWORD *)(DerivedStorage + 64) != 11)
              {
LABEL_163:
                int v63 = *(const void **)(DerivedStorage + 88);
                if (v63) {
                  CFDictionarySetValue(a2, @"hijackID", v63);
                }
                if (*(_DWORD *)(DerivedStorage + 80)) {
                  CFDictionarySetInt64();
                }
                if (*(unsigned char *)(DerivedStorage + 107))
                {
                  CFDictionarySetValue(a2, @"applyFadeOnFirstMediaAudioSession", v40);
                  CFDictionarySetDouble();
                }
                if (APSIsAPMSpeaker())
                {
                  CFTypeRef cf2 = 0;
                  CFTypeRef cf1 = 0;
                  APSCopyTightSyncInfo();
                  APEndpointDescriptionCopyProperty(*(void *)(DerivedStorage + 48), @"TightSyncUUID", v67, (uint64_t)&cf2);
                  CFTypeRef v64 = cf1;
                  BOOL v65 = 1;
                  if (cf1 && cf2)
                  {
                    BOOL v65 = CFEqual(cf1, cf2) == 0;
                    CFTypeRef v64 = cf1;
                  }
                  if (v64) {
                    CFRelease(v64);
                  }
                  if (cf2) {
                    CFRelease(cf2);
                  }
                  if (v65) {
                    __int16 v66 = v68;
                  }
                  else {
                    __int16 v66 = v40;
                  }
                  CFDictionarySetValue(a2, @"isTightSyncBuddyConnection", v66);
                }
                goto LABEL_123;
              }
              CMTimeValue v60 = @"surviveAudioInterruption";
              int v61 = @"isPersistentConnection";
            }
            CFDictionarySetValue(a2, v61, v40);
            CFDictionarySetValue(a2, v60, v40);
            if (v69) {
              __int16 v62 = v68;
            }
            else {
              __int16 v62 = v40;
            }
            CFDictionarySetValue(a2, @"isNonMediaSession", v62);
            goto LABEL_163;
          }
        }
        else
        {
          unsigned int v85 = -12782;
        }
      }
    }
    else
    {
      unsigned int v85 = -12782;
    }
    goto LABEL_78;
  }
  APSLogErrorAt();
  uint64_t v16 = 0;
  CFStringRef v39 = 0;
  unsigned int v85 = APSSignalErrorAt();
  if (v11) {
LABEL_80:
  }
    CFRelease(v11);
LABEL_81:
  if (value) {
    CFRelease(value);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (theData) {
    CFRelease(theData);
  }
  if (uuid) {
    CFRelease(uuid);
  }
  if (v39) {
    CFRelease(v39);
  }
  if (v16) {
    CFRelease(v16);
  }
  if (v13) {
    CFRelease(v13);
  }
  if (v78) {
    CFRelease(v78);
  }
  if (v77) {
    CFRelease(v77);
  }
  if (v76) {
    CFRelease(v76);
  }
  return v85;
}

uint64_t initDiagnosticLogSubmissionEnabled()
{
  if (CrashReporterSupportLibrary_sOnce != -1) {
    dispatch_once(&CrashReporterSupportLibrary_sOnce, &__block_literal_global_0);
  }
  double v0 = (uint64_t (*)())dlsym((void *)CrashReporterSupportLibrary_sLib, "DiagnosticLogSubmissionEnabled");
  softLinkDiagnosticLogSubmissionEnabled = v0;
  return v0();
}

void *__CrashReporterSupportLibrary_block_invoke()
{
  uint64_t result = dlopen("/System/Library/PrivateFrameworks/CrashReporterSupport.framework/CrashReporterSupport", 2);
  CrashReporterSupportLibrary_sLib = (uint64_t)result;
  return result;
}

void apsession_eventStreamMessageCallback(const void *a1, uint64_t a2, const void *a3, const void *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  if (*(void *)(DerivedStorage + 304)) {
    uint64_t v8 = (const void *)MEMORY[0x1D25EADB0](DerivedStorage + 304);
  }
  else {
    uint64_t v8 = 0;
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
  if (v8)
  {
    CFRetain(a1);
    if (a3) {
      CFRetain(a3);
    }
    CFRetain(a4);
    CFRetain(v8);
    APSDispatchAsyncFHelper();
    CFRelease(v8);
  }
  else if (gLogCategory_APSenderSessionAirPlay <= 30 {
         && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  }
  {
    LogPrintF();
  }
}

uint64_t apsession_eventStreamCreateReplyCallback()
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](DerivedStorage[32]);
  if (DerivedStorage[38]) {
    int v1 = (const void *)MEMORY[0x1D25EADB0](DerivedStorage + 38);
  }
  else {
    int v1 = 0;
  }
  uint64_t v2 = DerivedStorage[41];
  MEMORY[0x1D25EB390](DerivedStorage[32]);
  if (v1)
  {
    if (v2) {
      uint64_t v3 = APSDispatchSyncTask();
    }
    else {
      uint64_t v3 = 0;
    }
    CFRelease(v1);
  }
  else
  {
    APSLogErrorAt();
    return 4294895467;
  }
  return v3;
}

void apsession_eventStreamMessageCallbackInternal(uint64_t a1)
{
  CMBaseObjectGetDerivedStorage();
  if (*(_DWORD *)(a1 + 8) == 1684628836)
  {
    apsession_handleTransportStreamDisconnected(*(void **)(a1 + 24));
  }
  else if (*(void *)(a1 + 48))
  {
    CFRetain(*(CFTypeRef *)a1);
    uint64_t v2 = *(const void **)(a1 + 16);
    if (v2) {
      CFRetain(v2);
    }
    CFRetain(*(CFTypeRef *)(a1 + 32));
    APSDispatchAsyncFHelper();
  }
  CFRelease(*(CFTypeRef *)(a1 + 24));
  CFRelease(*(CFTypeRef *)a1);
  uint64_t v3 = *(const void **)(a1 + 16);
  if (v3) {
    CFRelease(v3);
  }
  uint64_t v4 = *(const void **)(a1 + 32);
  CFRelease(v4);
}

void apsession_eventStreamDeferredMessageCallback(uint64_t a1)
{
  (*(void (**)(void, void, void, void))(a1 + 48))(*(void *)a1, *(unsigned int *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 40));
  CFRelease(*(CFTypeRef *)a1);
  uint64_t v2 = *(const void **)(a1 + 16);
  if (v2) {
    CFRelease(v2);
  }
  uint64_t v3 = *(const void **)(a1 + 32);
  CFRelease(v3);
}

uint64_t apsession_eventStreamCallReplyCallback(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void, void))(a1 + 56))(*(void *)(a1 + 8), *(unsigned int *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 48), *(void *)(a1 + 32));
}

uint64_t apsession_getKeepAliveMode()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(_DWORD *)(DerivedStorage + 64) != 5) {
    return 2;
  }
  uint64_t v1 = DerivedStorage;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
  uint64_t v2 = *(const void **)(v1 + 336);
  if (v2) {
    CFTypeRef v3 = CFRetain(v2);
  }
  else {
    CFTypeRef v3 = 0;
  }
  MEMORY[0x1D25EB390](*(void *)(v1 + 256));
  if (CFDictionaryGetCount(*(CFDictionaryRef *)(v1 + 184))) {
    BOOL v5 = 1;
  }
  else {
    BOOL v5 = v3 == 0;
  }
  if (v5) {
    uint64_t v4 = 2;
  }
  else {
    uint64_t v4 = 4;
  }
  if (v3) {
    CFRelease(v3);
  }
  return v4;
}

uint64_t apsession_ensureKeepAliveStarted(uint64_t a1, int a2)
{
  unsigned int v14 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef v13 = 0;
  apsession_copyTransportSession(a1, &v13);
  BOOL v5 = v13;
  if (*(unsigned char *)(DerivedStorage + 176))
  {
    if (APSGetFBOPropertyInt64() == a2)
    {
      if (*(unsigned char *)(DerivedStorage + 176)) {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v6) {
        uint64_t v7 = v6;
      }
      else {
        uint64_t v7 = 0;
      }
      uint64_t v8 = *(uint64_t (**)(const void *))(v7 + 56);
      if (!v8)
      {
        unsigned int v14 = -12782;
        goto LABEL_23;
      }
      unsigned int v14 = v8(v5);
      if (v14)
      {
LABEL_23:
        APSLogErrorAt();
        goto LABEL_24;
      }
      *(unsigned char *)(DerivedStorage + 176) = 0;
    }
  }
  unsigned int v14 = APSSetFBOPropertyInt64();
  if (v14) {
    goto LABEL_23;
  }
  uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v9) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = 0;
  }
  CFTypeRef v11 = *(uint64_t (**)(const void *))(v10 + 48);
  if (!v11)
  {
    unsigned int v14 = -12782;
    goto LABEL_23;
  }
  unsigned int v14 = v11(v5);
  if (v14) {
    goto LABEL_23;
  }
  *(unsigned char *)(DerivedStorage + 176) = 1;
  if (gLogCategory_APSenderSessionAirPlay <= 50
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_24:
  if (v5) {
    CFRelease(v5);
  }
  return v14;
}

void apsession_updateReceiverInfoForRTCStats()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(DerivedStorage + 48));
  uint64_t v2 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void (**)(uint64_t, __CFString *, void, CFTypeRef *))(v3 + 48);
  if (v4) {
    v4(CMBaseObject, @"OSBuildVersion", *MEMORY[0x1E4F1CF80], &cf);
  }
  FigCFDictionarySetValue();
  if (cf) {
    CFRelease(cf);
  }
}

uint64_t apsession_updateSessionInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionAirPlay <= 30
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)DerivedStorage)
  {
    APSLogErrorAt();
    return 4294954511;
  }
  else if (*(unsigned char *)(DerivedStorage + 177))
  {
    APSLogErrorAt();
    return 4294895467;
  }
  else
  {
    unsigned int v3 = *(_DWORD *)(DerivedStorage + 64) - 1;
    if (v3 < 8 && ((0xE1u >> v3) & 1) != 0)
    {
      return 0;
    }
    else
    {
      return apsession_requestControlSetupWithResponse(a1, 0, 1, 0);
    }
  }
}

uint64_t apsession_setupStreamCreatingResponseInternal(uint64_t a1)
{
  v88[2] = *(CFTypeRef *)MEMORY[0x1E4F143B8];
  uint64_t DerivedStorage = (unsigned char *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionAirPlay <= 40
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*DerivedStorage) {
    return 0;
  }
  int v3 = *(_DWORD *)(a1 + 8);
  BOOL v4 = (v3 - 111) > 0x13 || ((1 << (v3 - 111)) & 0x80201) == 0;
  if (v4 && apsession_registryContainsStream()) {
    return 0;
  }
  uint64_t v5 = apsession_ensureStartedInternal(*(void *)a1);
  if (v5)
  {
    uint64_t v27 = v5;
LABEL_206:
    APSLogErrorAt();
    apsession_dispatchPostFailedNotification(*(const void **)a1);
    return v27;
  }
  uint64_t v6 = *(void *)a1;
  int v7 = *(_DWORD *)(a1 + 8);
  CFDictionaryRef v8 = *(const __CFDictionary **)(a1 + 16);
  __int16 v80 = *(void **)(a1 + 24);
  uint64_t v9 = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  CFTypeRef v85 = 0;
  v88[0] = 0;
  v88[1] = 0;
  uint64_t v10 = APSGetFBOPropertyInt64();
  if (gLogCategory_APSenderSessionAirPlay <= 30
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (apsession_isCancelled())
  {
    APSLogErrorAt();
    unint64_t v82 = 0;
    unsigned int v14 = 0;
    uint64_t v24 = 0;
    CFMutableDictionaryRef Mutable = 0;
    int v78 = -71832;
  }
  else
  {
    apsession_copyTransportControlStream(v6, &cf);
    if (!cf)
    {
      APSLogErrorAt();
      unint64_t v82 = 0;
      unsigned int appended = -71821;
      goto LABEL_78;
    }
    CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (Mutable)
    {
      if (!*(unsigned char *)(v9 + 161))
      {
        unsigned int appended = apsession_appendControlSetupRequest(v6, Mutable, 0);
        if (appended)
        {
          APSLogErrorAt();
          unint64_t v82 = 0;
          unsigned int v14 = 0;
          uint64_t v24 = 0;
          goto LABEL_70;
        }
      }
      CFArrayRef theArray = CFArrayCreateMutable(v11, 0, MEMORY[0x1E4F1D510]);
      if (theArray)
      {
        if (v8) {
          CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy(v11, 0, v8);
        }
        else {
          CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutable(v11, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
        }
        unsigned int v14 = MutableCopy;
        if (MutableCopy)
        {
          CFDictionarySetInt64();
          unint64_t v82 = 0;
          char v15 = v7 - 96;
          if ((v7 - 96) <= 0xF)
          {
            if (((1 << v15) & 0xCF1) != 0)
            {
              if (v10)
              {
                UUIDGet();
                unint64_t v82 = bswap64((unint64_t)v88[0]);
                CFDictionarySetInt64();
              }
              else
              {
                unint64_t v82 = 0;
              }
            }
            else if (((1 << v15) & 0xC000) != 0)
            {
              UUIDGet();
              unint64_t v82 = bswap64((unint64_t)v88[0]);
              CFDictionarySetInt64();
              if (*(_DWORD *)(v9 + 64) != 5)
              {
                uint64_t v16 = (const void *)FigVirtualDisplayCopyDefaultTimestampInfo();
                if (v16)
                {
                  unsigned int v17 = v16;
                  CFDictionarySetValue(v14, @"timestampInfo", v16);
                  CFRelease(v17);
                }
              }
              if (v7 == 110
                && gLogCategory_APSenderSessionAirPlay <= 30
                && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
            }
          }
          CFArrayAppendValue(theArray, v14);
          CFDictionarySetValue(Mutable, @"streams", theArray);
          if (gLogCategory_APSenderSessionAirPlay <= 10
            && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          APSEventRecorderRecordEvent();
          unsigned int appended = APTransportStreamSendPlistMessageCreatingPlistReply();
          APSEventRecorderRecordEvent();
          if (appended)
          {
LABEL_213:
            APSLogErrorAt();
            unint64_t v82 = 0;
            goto LABEL_214;
          }
          if (gLogCategory_APSenderSessionAirPlay <= 10
            && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          if (!apsession_isCancelled())
          {
            CFDictionaryGetInt64();
            unsigned int appended = 0;
            CFArrayGetTypeID();
            TypedCFStringRef Value = (const __CFArray *)CFDictionaryGetTypedValue();
            if (CFArrayGetCount(TypedValue) == 1)
            {
              CFDictionaryGetTypeID();
              TypedCFDictionaryRef ValueAtIndex = (const void *)CFArrayGetTypedValueAtIndex();
              if (v7 == CFDictionaryGetInt64())
              {
                CFDictionaryGetInt64();
                unsigned int appended = 0;
                LODWORD(v86) = 0;
                uint64_t v20 = CMBaseObjectGetDerivedStorage();
                CFMutableDictionaryRef v21 = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
                if (v21)
                {
                  CFMutableDictionaryRef v22 = v21;
                  CFDictionarySetInt64();
                  CFDictionarySetInt64();
                  CFDictionarySetInt64();
                  uint64_t v23 = (const void *)CFStringCreateF();
                  if (v86) {
                    APSLogErrorAt();
                  }
                  else {
                    CFDictionaryAddValue(*(CFMutableDictionaryRef *)(v20 + 184), v23, v22);
                  }
                  uint64_t v24 = theArray;
                  uint64_t v25 = v80;
                  CFRelease(v22);
                  if (v23) {
                    CFRelease(v23);
                  }
                }
                else
                {
                  APSLogErrorAt();
                  uint64_t v24 = theArray;
                  uint64_t v25 = v80;
                }
                if (v7 == 103)
                {
                  MEMORY[0x1D25EB370](*(void *)(v9 + 256));
                  if (*(void *)(v9 + 288)) {
                    APSSetFBOPropertyInt64();
                  }
                  if (*(void *)(v9 + 296)) {
                    APSSetFBOPropertyInt64();
                  }
                  MEMORY[0x1D25EB390](*(void *)(v9 + 256));
                }
                *(unsigned char *)(v9 + 161) = 1;
                if (v25)
                {
                  if (TypedValueAtIndex) {
                    CFTypeRef v26 = CFRetain(TypedValueAtIndex);
                  }
                  else {
                    CFTypeRef v26 = 0;
                  }
                  *uint64_t v25 = v26;
                }
                goto LABEL_70;
              }
            }
            goto LABEL_213;
          }
          APSLogErrorAt();
          unint64_t v82 = 0;
          int v79 = -71832;
        }
        else
        {
          APSLogErrorAt();
          unint64_t v82 = 0;
          int v79 = -71820;
        }
        unsigned int appended = v79;
LABEL_214:
        uint64_t v24 = theArray;
        goto LABEL_70;
      }
    }
    APSLogErrorAt();
    unint64_t v82 = 0;
    unsigned int v14 = 0;
    uint64_t v24 = 0;
    int v78 = -71820;
  }
  unsigned int appended = v78;
LABEL_70:
  if (cf) {
    CFRelease(cf);
  }
  if (v14) {
    CFRelease(v14);
  }
  if (v24) {
    CFRelease(v24);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
LABEL_78:
  if (v85) {
    CFRelease(v85);
  }
  uint64_t v27 = appended;
  if (appended) {
    goto LABEL_206;
  }
  int v28 = *(_DWORD *)(a1 + 8);
  CFStringRef v30 = *(CFTypeRef **)(a1 + 32);
  char v29 = *(CFTypeRef **)(a1 + 40);
  uint64_t v31 = CMBaseObjectGetDerivedStorage();
  CFTypeRef v85 = 0;
  CFTypeRef v86 = 0;
  CFTypeRef v87 = 0;
  v88[0] = 0;
  CFTypeRef cf = 0;
  uint64_t v32 = APSGetFBOPropertyInt64();
  uint64_t v33 = v32;
  if (v32 || !*(unsigned char *)(v31 + 106) || *(void *)(v31 + 192))
  {
    uint64_t v34 = *(void *)(v31 + 192);
    if (v34)
    {
      switch(v28)
      {
        case 'f':
        case 'g':
          uint64_t v35 = *(void *)(CMBaseObjectGetVTable() + 16);
          if (v33)
          {
            if (v35) {
              uint64_t v36 = v35;
            }
            else {
              uint64_t v36 = 0;
            }
            uint64_t v50 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, void, uint64_t, CFTypeRef *))(v36 + 56);
            if (!v50)
            {
              uint64_t v27 = 4294954514;
              goto LABEL_169;
            }
            uint64_t v51 = v50(v34, v82, 32, 0, 32, &v87);
            if (v51)
            {
              uint64_t v27 = v51;
            }
            else
            {
              uint64_t v52 = APSCryptorChaCha20Poly1305Create();
              if (!v52)
              {
                if (gLogCategory_APSenderSessionAirPlay <= 40
                  && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
                {
LABEL_134:
                  LogPrintF();
                  goto LABEL_175;
                }
                goto LABEL_175;
              }
              uint64_t v27 = v52;
            }
          }
          else
          {
            if (v35) {
              uint64_t v40 = v35;
            }
            else {
              uint64_t v40 = 0;
            }
            unsigned int v56 = *(uint64_t (**)(uint64_t, CFTypeRef *, CFTypeRef *))(v40 + 16);
            if (v56)
            {
              uint64_t v57 = v56(v34, &v87, v88);
              if (v57)
              {
                uint64_t v27 = v57;
              }
              else
              {
                uint64_t v58 = APSCryptorCBCCreate();
                if (!v58)
                {
                  if (gLogCategory_APSenderSessionAirPlay <= 40
                    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
                  {
                    goto LABEL_134;
                  }
LABEL_175:
                  if (v30)
                  {
                    *CFStringRef v30 = v85;
                    CFTypeRef v85 = 0;
                  }
                  uint64_t v27 = 0;
                  if (v29)
                  {
                    *char v29 = cf;
                    CFTypeRef cf = 0;
                  }
                  break;
                }
                uint64_t v27 = v58;
              }
            }
            else
            {
              uint64_t v27 = 4294954514;
            }
          }
LABEL_169:
          APSLogErrorAt();
          break;
        case 'a':
        case 'b':
        case 'c':
        case 'h':
        case 'i':
        case 'l':
        case 'm':
        case 'p':
        case 'q':
        case 'r':
        case 's':
        case 't':
        case 'u':
        case 'v':
        case 'w':
          goto LABEL_95;
        case 'd':
          if (!v32) {
            goto LABEL_175;
          }
          uint64_t v41 = *(void *)(CMBaseObjectGetVTable() + 16);
          if (v41) {
            uint64_t v42 = v41;
          }
          else {
            uint64_t v42 = 0;
          }
          __int16 v62 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, CFTypeRef *, uint64_t, CFTypeRef *))(v42 + 56);
          if (v62)
          {
            uint64_t v63 = v62(v34, v82, 32, &v86, 32, &v87);
            if (v63)
            {
              uint64_t v27 = v63;
            }
            else
            {
              uint64_t v64 = APSCryptorChaCha20Poly1305Create();
              if (v64)
              {
                uint64_t v27 = v64;
              }
              else
              {
                uint64_t v65 = APSCryptorChaCha20Poly1305Create();
                if (!v65) {
                  goto LABEL_175;
                }
                uint64_t v27 = v65;
              }
            }
          }
          else
          {
            uint64_t v27 = 4294954514;
          }
          goto LABEL_169;
        case 'e':
          if (!v32) {
            goto LABEL_175;
          }
          uint64_t v43 = *(void *)(CMBaseObjectGetVTable() + 16);
          if (v43) {
            uint64_t v44 = v43;
          }
          else {
            uint64_t v44 = 0;
          }
          __int16 v66 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, void, uint64_t, CFTypeRef *))(v44 + 56);
          if (v66)
          {
            uint64_t v67 = v66(v34, v82, 32, 0, 32, &v87);
            if (v67)
            {
              uint64_t v27 = v67;
            }
            else
            {
              uint64_t v68 = APSCryptorChaCha20Poly1305Create();
              if (!v68) {
                goto LABEL_175;
              }
              uint64_t v27 = v68;
            }
          }
          else
          {
            uint64_t v27 = 4294954514;
          }
          goto LABEL_169;
        case 'j':
          if (!v32) {
            goto LABEL_175;
          }
          uint64_t v45 = *(void *)(CMBaseObjectGetVTable() + 16);
          if (v45) {
            uint64_t v46 = v45;
          }
          else {
            uint64_t v46 = 0;
          }
          int v69 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, void, uint64_t, CFTypeRef *))(v46 + 56);
          if (v69)
          {
            uint64_t v70 = v69(v34, v82, 32, 0, 32, &v87);
            if (v70)
            {
              uint64_t v27 = v70;
            }
            else
            {
              uint64_t v71 = APSCryptorChaCha20Poly1305Create();
              if (!v71) {
                goto LABEL_175;
              }
              uint64_t v27 = v71;
            }
          }
          else
          {
            uint64_t v27 = 4294954514;
          }
          goto LABEL_169;
        case 'k':
          if (!v32) {
            goto LABEL_175;
          }
          uint64_t v47 = *(void *)(CMBaseObjectGetVTable() + 16);
          if (v47) {
            uint64_t v48 = v47;
          }
          else {
            uint64_t v48 = 0;
          }
          CFTypeRef v72 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, CFTypeRef *, uint64_t, void))(v48 + 56);
          if (v72)
          {
            uint64_t v73 = v72(v34, v82, 32, &v86, 32, 0);
            if (v73)
            {
              uint64_t v27 = v73;
            }
            else
            {
              uint64_t v74 = APSCryptorChaCha20Poly1305Create();
              if (!v74) {
                goto LABEL_175;
              }
              uint64_t v27 = v74;
            }
          }
          else
          {
            uint64_t v27 = 4294954514;
          }
          goto LABEL_169;
        case 'n':
        case 'o':
          uint64_t v38 = *(void *)(CMBaseObjectGetVTable() + 16);
          if (v33)
          {
            if (v38) {
              uint64_t v39 = v38;
            }
            else {
              uint64_t v39 = 0;
            }
            int v53 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, void, uint64_t, CFTypeRef *))(v39 + 56);
            if (v53)
            {
              uint64_t v54 = v53(v34, v82, 32, 0, 32, &v87);
              if (v54)
              {
                uint64_t v27 = v54;
              }
              else
              {
                uint64_t v55 = APSCryptorChaCha20Poly1305Create();
                if (!v55) {
                  goto LABEL_175;
                }
                uint64_t v27 = v55;
              }
            }
            else
            {
              uint64_t v27 = 4294954514;
            }
          }
          else
          {
            if (v38) {
              uint64_t v49 = v38;
            }
            else {
              uint64_t v49 = 0;
            }
            CFTypeRef v59 = *(uint64_t (**)(uint64_t, unint64_t, CFTypeRef *, CFTypeRef *))(v49 + 40);
            if (v59)
            {
              uint64_t v60 = v59(v34, v82, &v87, v88);
              if (v60)
              {
                uint64_t v27 = v60;
              }
              else
              {
                uint64_t v61 = APSCryptorCTRCreate();
                if (!v61) {
                  goto LABEL_175;
                }
                uint64_t v27 = v61;
              }
            }
            else
            {
              uint64_t v27 = 4294954514;
            }
          }
          goto LABEL_169;
        case 'x':
          goto LABEL_175;
        default:
          if (v28 == 130) {
            goto LABEL_175;
          }
LABEL_95:
          uint64_t v27 = 4294895471;
          uint64_t v37 = &unk_1EB9F5000;
          if (gLogCategory_APSenderSessionAirPlay <= 90
            && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          goto LABEL_180;
      }
    }
    else
    {
      APSLogErrorAt();
      uint64_t v27 = 4294895475;
    }
    uint64_t v37 = &unk_1EB9F5000;
    goto LABEL_180;
  }
  uint64_t v37 = (_DWORD *)&unk_1EB9F5000;
  uint64_t v27 = 0;
  if (v30) {
    *CFStringRef v30 = 0;
  }
LABEL_180:
  if (v86) {
    CFRelease(v86);
  }
  if (v87) {
    CFRelease(v87);
  }
  if (v88[0]) {
    CFRelease(v88[0]);
  }
  if (v85) {
    CFRelease(v85);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v27) {
    goto LABEL_206;
  }
  reuint64_t started = apsession_restartKeepAliveInDifferentModeIfNeeded(*(void *)a1);
  if (restarted)
  {
    uint64_t v27 = restarted;
    goto LABEL_206;
  }
  int v76 = v37[332];
  if (v76 <= 40 && (v76 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  CMNotificationCenterGetDefaultLocalCenter();
  FigDispatchAsyncPostNotification();
  return 0;
}

uint64_t apsession_registryContainsStream()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v1 = (const void *)CFStringCreateF();
  uint64_t v2 = CFDictionaryContainsKey(*(CFDictionaryRef *)(DerivedStorage + 184), v1);
  if (v1) {
    CFRelease(v1);
  }
  return v2;
}

uint64_t apsession_restartKeepAliveInDifferentModeIfNeeded(uint64_t a1)
{
  if (*(_DWORD *)(CMBaseObjectGetDerivedStorage() + 64) != 5) {
    return 0;
  }
  int KeepAliveMode = apsession_getKeepAliveMode();
  uint64_t v3 = apsession_ensureKeepAliveStarted(a1, KeepAliveMode);
  if (v3) {
    APSLogErrorAt();
  }
  return v3;
}

uint64_t __apsession_generateUniqueStreamIDFromRegistry_block_invoke(uint64_t a1)
{
  unint64_t Int64 = CFDictionaryGetInt64();
  uint64_t result = CFDictionaryGetInt64();
  if (result == *(_DWORD *)(a1 + 40))
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
    unint64_t v5 = *(void *)(v4 + 24);
    if (v5 <= Int64) {
      unint64_t v5 = Int64;
    }
    *(void *)(v4 + 24) = v5 + 1;
  }
  return result;
}

uint64_t apsession_teardownStreamInternal(uint64_t a1)
{
  uint64_t DerivedStorage = (unsigned char *)CMBaseObjectGetDerivedStorage();
  uint64_t v18 = 0;
  if (gLogCategory_APSenderSessionAirPlay <= 30
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*DerivedStorage) {
    return 0;
  }
  if (*(void *)(a1 + 16)) {
    CFDictionaryGetInt64();
  }
  if (!apsession_registryContainsStream())
  {
    APSLogErrorAt();
    return 0;
  }
  apsession_copyTransportControlStream(*(void *)a1, &v18);
  uint64_t v4 = v18;
  if (!v18) {
    return 0;
  }
  uint64_t v5 = *(void *)a1;
  int v6 = *(_DWORD *)(a1 + 8);
  CFDictionaryRef v7 = *(const __CFDictionary **)(a1 + 16);
  uint64_t v8 = CMBaseObjectGetDerivedStorage();
  if (v6 == 103)
  {
    uint64_t v9 = (void *)v8;
    MEMORY[0x1D25EB370](*(void *)(v8 + 256));
    if (v9[36])
    {
      APSenderSessionMessageSendTimeout();
      APSSetFBOPropertyInt64();
    }
    if (v9[37])
    {
      APSenderSessionMessageSendTimeout();
      APSSetFBOPropertyInt64();
    }
    MEMORY[0x1D25EB390](v9[32]);
  }
  CFAllocatorRef v10 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D510]);
  if (!Mutable)
  {
    APSLogErrorAt();
    goto LABEL_28;
  }
  BOOL v12 = Mutable;
  if (v7) {
    CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy(v10, 0, v7);
  }
  else {
    CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutable(v10, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  }
  CFMutableDictionaryRef v14 = MutableCopy;
  if (!MutableCopy)
  {
    APSLogErrorAt();
    goto LABEL_27;
  }
  CFDictionarySetInt64();
  CFArrayAppendValue(v12, v14);
  if (apsession_sendTeardownWithStreamDescArray(v5, v12))
  {
    APSLogErrorAt();
    goto LABEL_26;
  }
  CFDictionaryGetInt64();
  int v19 = 0;
  uint64_t v15 = CMBaseObjectGetDerivedStorage();
  uint64_t v16 = (const void *)CFStringCreateF();
  if (v19)
  {
    APSLogErrorAt();
    if (!v16) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(v15 + 184), v16);
  if (v16) {
LABEL_25:
  }
    CFRelease(v16);
LABEL_26:
  CFRelease(v14);
LABEL_27:
  CFRelease(v12);
LABEL_28:
  reuint64_t started = apsession_restartKeepAliveInDifferentModeIfNeeded(*(void *)a1);
  if (restarted) {
    APSLogErrorAt();
  }
  CFRelease(v4);
  return restarted;
}

uint64_t apsession_sendTeardownWithStreamDescArray(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  BOOL v12 = 0;
  CFDictionaryRef theDict = 0;
  apsession_copyTransportControlStream(a1, &v12);
  uint64_t v5 = v12;
  if (!v12) {
    return 0;
  }
  CFMutableArrayRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    CFDictionaryRef v7 = Mutable;
    if (a2)
    {
      CFDictionarySetValue(Mutable, @"streams", a2);
    }
    else
    {
      MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
      *(unsigned char *)(DerivedStorage + 269) = 1;
      MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
    }
    if (gLogCategory_APSenderSessionAirPlay <= 10
      && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v8 = APTransportStreamSendPlistMessageCreatingPlistReply();
    if (v8)
    {
      APSLogErrorAt();
    }
    else if (!a2 && theDict)
    {
      MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 256));
      uint64_t v9 = *(const void **)(DerivedStorage + 440);
      CFStringRef Value = CFDictionaryGetValue(theDict, @"teardownMetricsPayload");
      *(void *)(DerivedStorage + 440) = Value;
      if (Value) {
        CFRetain(Value);
      }
      if (v9) {
        CFRelease(v9);
      }
      MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 256));
    }
    CFRelease(v7);
    if (theDict) {
      CFRelease(theDict);
    }
  }
  else
  {
    APSLogErrorAt();
    uint64_t v8 = 4294895476;
  }
  CFRelease(v5);
  return v8;
}

void apsession_prepareForTeardownInternal(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionAirPlay <= 50
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(__CFString **)(DerivedStorage + 16) == @"PTP") {
    apsession_stopSenderNetworkClockIfNeeded((uint64_t)a1);
  }
  *(unsigned char *)(DerivedStorage + 177) = 1;
  CFRelease(a1);
}

uint64_t apsession_ensureStoppedInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionAirPlay <= 30
    && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)DerivedStorage)
  {
    APSLogErrorAt();
    return 4294954511;
  }
  else
  {
    CFDictionaryRemoveAllValues(*(CFMutableDictionaryRef *)(DerivedStorage + 184));
    if (apsession_IsConnected())
    {
      uint64_t v3 = apsession_sendTeardownWithStreamDescArray(a1, 0);
      if (v3)
      {
        uint64_t v4 = v3;
        APSLogErrorAt();
        return v4;
      }
      apsession_disconnectControlStream(a1);
      if (gLogCategory_APSenderSessionAirPlay <= 40
        && (gLogCategory_APSenderSessionAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    return 0;
  }
}

uint64_t apsession_sendAudioContentTypeUpdateInternal(uint64_t *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int v6 = 0;
  if (*(unsigned char *)DerivedStorage) {
    return 0;
  }
  if (*(_DWORD *)(DerivedStorage + 64) == 5) {
    return 0;
  }
  apsession_copyTransportControlStream(*a1, &v6);
  uint64_t v3 = v6;
  if (!v6) {
    return 0;
  }
  uint64_t v4 = APTransportStreamSendPlistMessage();
  if (v4) {
    APSLogErrorAt();
  }
  CFRelease(v3);
  return v4;
}

uint64_t APAudioSinkSharedMemRemote_ServerDied()
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  *(unsigned char *)(result + 24) = 0;
  return result;
}

uint64_t APAudioSinkSharedMemRemoteCreate(uint64_t a1, long long *a2, void *a3, uint64_t a4, void *a5)
{
  if (!a5 || !a3)
  {
    APSLogErrorAt();
    return 4294950504;
  }
  FigEndpointAudioSinkGetClassID();
  uint64_t v9 = CMDerivedObjectCreate();
  if (v9)
  {
    uint64_t v19 = v9;
LABEL_16:
    APSLogErrorAt();
    return v19;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(unsigned char *)uint64_t DerivedStorage = 0;
  *(void *)(DerivedStorage + 8) = a4;
  *(unsigned char *)(DerivedStorage + 24) = 0;
  uint64_t v11 = a3[4];
  long long v12 = *((_OWORD *)a3 + 1);
  *(_OWORD *)(DerivedStorage + 80) = *(_OWORD *)a3;
  *(_OWORD *)(DerivedStorage + 96) = v12;
  *(void *)(DerivedStorage + 112) = v11;
  long long v14 = *a2;
  long long v13 = a2[1];
  *(void *)(DerivedStorage + 72) = *((void *)a2 + 4);
  *(_OWORD *)(DerivedStorage + 40) = v14;
  *(_OWORD *)(DerivedStorage + 56) = v13;
  uint64_t v15 = CMBaseObjectGetDerivedStorage();
  uint64_t v16 = FigXPCCreateBasicMessage();
  if (v16)
  {
    uint64_t v19 = v16;
LABEL_14:
    APSLogErrorAt();
    goto LABEL_16;
  }
  xpc_dictionary_set_data(0, kAPCarPlayAVVCMsgParam_XPCSinkOutputFormat[0], a3, 0x28uLL);
  uint64_t v17 = FigXPCRemoteClientSendSyncMessageCreatingReply();
  if (v17)
  {
    uint64_t v19 = v17;
    goto LABEL_14;
  }
  uint64_t uint64 = xpc_dictionary_get_uint64(0, (const char *)*MEMORY[0x1E4F20280]);
  *(void *)(v15 + 16) = uint64;
  if (!uint64)
  {
    APSLogErrorAt();
    uint64_t v19 = 4294960578;
    goto LABEL_16;
  }
  FigXPCRemoteClientAssociateObject();
  uint64_t v19 = 0;
  *(unsigned char *)(v15 + 24) = 1;
  *a5 = 0;
  return v19;
}

uint64_t APAudioSinkSharedMemRemote_GetObjectID()
{
  return *(void *)(CMBaseObjectGetDerivedStorage() + 16);
}

uint64_t sharedMemSinkRemote_Finalize()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioSinkSharedMemRemote <= 30
    && (gLogCategory_APAudioSinkSharedMemRemote != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v1 = *(const void **)(DerivedStorage + 32);
  if (v1)
  {
    CFRelease(v1);
    *(void *)(DerivedStorage + 32) = 0;
  }
  uint64_t v2 = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(v2 + 24)
    && (FigXPCCreateBasicMessage() || FigXPCRemoteClientSendSyncMessage()))
  {
    uint64_t result = APSLogErrorAt();
  }
  else
  {
    uint64_t result = FigXPCRemoteClientDisassociateObject();
    *(void *)(v2 + 16) = 0;
  }
  *(unsigned char *)(v2 + 24) = 0;
  return result;
}

CFMutableStringRef sharedMemSinkRemote_CopyDebugDescription(const void *a1)
{
  CMBaseObjectGetDerivedStorage();
  CFMutableStringRef Mutable = CFStringCreateMutable(0, 0);
  CFStringAppendF();
  CFStringAppendF();
  CFStringAppendF();
  CFGetRetainCount(a1);
  CFStringAppendF();
  return Mutable;
}

uint64_t sharedMemSinkRemote_CopyProperty()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(void *)(DerivedStorage + 16))
  {
    if (*(unsigned char *)(DerivedStorage + 24))
    {
      return FigXPCSendStdCopyPropertyMessage();
    }
    else
    {
      APSLogErrorAt();
      return 4294960587;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960578;
  }
}

uint64_t sharedMemSinkRemote_SetProperty()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(void *)(DerivedStorage + 16))
  {
    if (*(unsigned char *)(DerivedStorage + 24))
    {
      return FigXPCSendStdSetPropertyMessage();
    }
    else
    {
      APSLogErrorAt();
      return 4294960587;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960578;
  }
}

uint64_t sharedMemSinkRemote_GetInputFormat(uint64_t a1, void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(void *)(DerivedStorage + 16))
  {
    APSLogErrorAt();
    return 4294960578;
  }
  if (!*(unsigned char *)(DerivedStorage + 24))
  {
    APSLogErrorAt();
    return 4294960587;
  }
  uint64_t v4 = FigXPCCreateBasicMessage();
  if (v4)
  {
    uint64_t v6 = v4;
    goto LABEL_11;
  }
  uint64_t v5 = FigXPCRemoteClientSendSyncMessageCreatingReply();
  if (v5)
  {
    uint64_t v6 = v5;
    goto LABEL_11;
  }
  uint64_t v6 = APCarPlayXPCUtils_UnpackASBD(0, kAPCarPlayAVVCMsgParam_XPCSinkInputFormat[0], 1, a2);
  if (v6) {
LABEL_11:
  }
    APSLogErrorAt();
  return v6;
}

uint64_t sharedMemSinkRemote_SetInputFormat(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(void *)(DerivedStorage + 16))
  {
    APSLogErrorAt();
    return 4294960578;
  }
  if (!*(unsigned char *)(DerivedStorage + 24))
  {
    APSLogErrorAt();
    return 4294960587;
  }
  uint64_t v4 = FigXPCCreateBasicMessage();
  if (v4)
  {
    uint64_t v5 = v4;
    goto LABEL_9;
  }
  xpc_dictionary_set_data(0, kAPCarPlayAVVCMsgParam_XPCSinkInputFormat[0], a2, 0x28uLL);
  uint64_t v5 = FigXPCRemoteClientSendSyncMessage();
  if (v5) {
LABEL_9:
  }
    APSLogErrorAt();
  return v5;
}

uint64_t sharedMemSinkRemote_Resume()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(void *)(DerivedStorage + 16))
  {
    APSLogErrorAt();
    return 4294960578;
  }
  uint64_t v1 = DerivedStorage;
  if (!*(unsigned char *)(DerivedStorage + 24))
  {
    APSLogErrorAt();
    return 4294960587;
  }
  if (gLogCategory_APAudioSinkSharedMemRemote <= 30
    && (gLogCategory_APAudioSinkSharedMemRemote != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v2 = FigXPCCreateBasicMessage();
  if (v2)
  {
    uint64_t value = v2;
    goto LABEL_20;
  }
  uint64_t v3 = FigXPCRemoteClientSendSyncMessageCreatingReply();
  if (v3)
  {
    uint64_t value = v3;
    goto LABEL_20;
  }
  uint64_t value = (uint64_t)xpc_dictionary_get_value(0, kAPCarPlayAVVCMsgParam_SharedMemoryBuffer[0]);
  if (!value) {
    goto LABEL_20;
  }
  if (!xpc_dictionary_get_value(0, kAPCarPlayAVVCMsgParam_SharedMemoryState))
  {
    APSLogErrorAt();
    return 0;
  }
  uint64_t value = APSSharedRingBuffer_CreateWithBufferAndState();
  if (value)
  {
LABEL_20:
    APSLogErrorAt();
    return value;
  }
  *(unsigned char *)(v1 + 120) = 1;
  *(_DWORD *)(v1 + 124) = 4;
  *(unsigned char *)uint64_t v1 = 1;
  return value;
}

uint64_t sharedMemSinkRemote_Suspend()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(void *)(DerivedStorage + 16))
  {
    APSLogErrorAt();
    return 4294960578;
  }
  uint64_t v1 = DerivedStorage;
  if (!*(unsigned char *)(DerivedStorage + 24)) {
    return 0;
  }
  *(unsigned char *)uint64_t DerivedStorage = 0;
  uint64_t v2 = FigXPCCreateBasicMessage();
  if (v2)
  {
    uint64_t v5 = v2;
LABEL_12:
    APSLogErrorAt();
    return v5;
  }
  uint64_t v3 = FigXPCRemoteClientSendSyncMessage();
  if (v3)
  {
    uint64_t v5 = v3;
    goto LABEL_12;
  }
  uint64_t v4 = *(const void **)(v1 + 32);
  if (!v4) {
    return 0;
  }
  CFRelease(v4);
  uint64_t v5 = 0;
  *(void *)(v1 + 32) = 0;
  return v5;
}

uint64_t sharedMemSinkRemote_ReadPackets(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void *a7, int *a8)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(void *)(DerivedStorage + 16))
  {
    APSLogErrorAt();
    return 4294960578;
  }
  uint64_t v15 = DerivedStorage;
  if (!*(unsigned char *)(DerivedStorage + 24) || !*(unsigned char *)DerivedStorage)
  {
    APSLogErrorAt();
    return 4294960587;
  }
  if (!a7 || !a8)
  {
    APSLogErrorAt();
    return 4294960591;
  }
  if (*(unsigned char *)(DerivedStorage + 120))
  {
    uint64_t DataFromSharedRing = sharedMemSinkRemote_readDataFromSharedRing(a1, DerivedStorage + 124, 4);
    if (DataFromSharedRing) {
      return DataFromSharedRing;
    }
    *(unsigned char *)(v15 + 120) = 0;
  }
  if (*(unsigned int *)(v15 + 124) > a4)
  {
    APSLogErrorAt();
    return 4294960533;
  }
  if (*(_DWORD *)(v15 + 88) == 1819304813)
  {
    uint64_t v17 = CMBaseObjectGetDerivedStorage();
    if (*(void *)(v17 + 16))
    {
      uint64_t v18 = v17;
      if (*(unsigned char *)(v17 + 24))
      {
        if (APSSharedRingBuffer_IsDataAvailable())
        {
          if (((*(_DWORD *)(v18 + 92) ^ *(_DWORD *)(v18 + 52)) & 2) != 0) {
            DataWithEndiannessConversioCFIndex n = APSSharedRingBuffer_ReadDataWithEndiannessConversion();
          }
          else {
            DataWithEndiannessConversioCFIndex n = APSSharedRingBuffer_ReadData();
          }
          uint64_t v23 = DataWithEndiannessConversion;
          if (!DataWithEndiannessConversion)
          {
            int v22 = *(_DWORD *)(v15 + 124) / *(_DWORD *)(v15 + 104);
            goto LABEL_21;
          }
          APSLogErrorAt();
        }
        else
        {
          APSLogErrorAt();
          uint64_t v23 = 4294960531;
        }
      }
      else
      {
        APSLogErrorAt();
        uint64_t v23 = 4294960587;
      }
    }
    else
    {
      APSLogErrorAt();
      uint64_t v23 = 4294960578;
    }
LABEL_33:
    APSLogErrorAt();
    return v23;
  }
  uint64_t v20 = sharedMemSinkRemote_readDataFromSharedRing(a1, a3, *(unsigned int *)(v15 + 124));
  if (v20)
  {
    uint64_t v23 = v20;
    goto LABEL_33;
  }
  int v21 = *(_DWORD *)(v15 + 124);
  *(void *)a5 = 0;
  *(_DWORD *)(a5 + 8) = 0;
  *(_DWORD *)(a5 + 12) = v21;
  int v22 = 1;
LABEL_21:
  uint64_t v23 = 0;
  *a8 = v22;
  *a7 = *(unsigned int *)(v15 + 124);
  *(unsigned char *)(v15 + 120) = 1;
  *(_DWORD *)(v15 + 124) = 0;
  return v23;
}

uint64_t sharedMemSinkRemote_readDataFromSharedRing(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(void *)(DerivedStorage + 16))
  {
    if (*(unsigned char *)(DerivedStorage + 24))
    {
      if (APSSharedRingBuffer_IsDataAvailable())
      {
        uint64_t Data = APSSharedRingBuffer_ReadData();
        if (Data)
        {
          uint64_t v6 = Data;
          APSLogErrorAt();
        }
        else if (a3 == a3)
        {
          return 0;
        }
        else
        {
          APSLogErrorAt();
          return 4294960550;
        }
      }
      else
      {
        return 4294960531;
      }
    }
    else
    {
      APSLogErrorAt();
      return 4294960587;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960578;
  }
  return v6;
}

uint64_t APGetEndpointManagerCarPlay(void *a1)
{
  if (!MGGetBoolAnswer())
  {
    APGetEndpointManagerCarPlay_sCreationResult = APSSignalErrorAt();
    return APGetEndpointManagerCarPlay_sCreationResult;
  }
  if (APGetEndpointManagerCarPlay_sCreateOnce != -1)
  {
    dispatch_once(&APGetEndpointManagerCarPlay_sCreateOnce, &__block_literal_global_1);
    if (!a1) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  if (a1) {
LABEL_4:
  }
    *a1 = APGetEndpointManagerCarPlay_sEndpointManager;
LABEL_5:
  if (gLogCategory_APEndpointManagerCarPlayFactory <= 50
    && (gLogCategory_APEndpointManagerCarPlayFactory != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return APGetEndpointManagerCarPlay_sCreationResult;
}

uint64_t __APGetEndpointManagerCarPlay_block_invoke(uint64_t a1)
{
  if (gLogCategory_APEndpointManagerCarPlayFactory <= 50)
  {
    if (gLogCategory_APEndpointManagerCarPlayFactory != -1 || (a1 = _LogCategory_Initialize(), a1)) {
      a1 = LogPrintF();
    }
  }
  if (!MEMORY[0x1D25E8620](a1) || (uint64_t v1 = getprogname(), strcmp(v1, "audiomxd")))
  {
    if (gLogCategory_APEndpointManagerCarPlayFactory <= 50
      && (gLogCategory_APEndpointManagerCarPlayFactory != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFTypeRef cf = 0;
    int v2 = APEndpointManagerCarPlayCreate(*MEMORY[0x1E4F1CF80], 0, &cf);
    if (!v2)
    {
      uint64_t result = APSIsExplicitEndpointManagerInitializationEnabledInMX();
      if (!result)
      {
        uint64_t result = CMSessionMgrRegisterEndpointManager();
        if (result)
        {
          if (gLogCategory_APEndpointManagerCarPlayFactory <= 90)
          {
            if (gLogCategory_APEndpointManagerCarPlayFactory != -1
              || (uint64_t result = _LogCategory_Initialize(), result))
            {
              uint64_t result = LogPrintF();
            }
          }
        }
      }
      int v4 = 0;
      APGetEndpointManagerCarPlay_sEndpointManager = (uint64_t)cf;
      goto LABEL_23;
    }
    int v4 = v2;
    APSLogErrorAt();
    if (cf) {
      CFRelease(cf);
    }
    goto LABEL_28;
  }
  if (gLogCategory_APEndpointManagerCarPlayFactory <= 50
    && (gLogCategory_APEndpointManagerCarPlayFactory != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t result = FigEndpointManagerRemoteCopyCarPlayManager();
  int v4 = result;
  if (result)
  {
LABEL_28:
    uint64_t result = APSLogErrorAt();
    if (gLogCategory_APEndpointManagerCarPlayFactory <= 90)
    {
      if (gLogCategory_APEndpointManagerCarPlayFactory != -1 || (uint64_t result = _LogCategory_Initialize(), result)) {
        uint64_t result = LogPrintF();
      }
    }
  }
LABEL_23:
  APGetEndpointManagerCarPlay_sCreationResult = v4;
  return result;
}

uint64_t APEndpointManagerCreate(void *a1)
{
  if (APEndpointManagerGetShared_once != -1) {
    dispatch_once(&APEndpointManagerGetShared_once, &__block_literal_global_2);
  }
  CFTypeRef v2 = (CFTypeRef)APEndpointManagerGetShared_sAPEndpointManager;
  if (APEndpointManagerGetShared_sAPEndpointManager) {
    CFTypeRef v2 = CFRetain((CFTypeRef)APEndpointManagerGetShared_sAPEndpointManager);
  }
  *a1 = v2;
  return gCreationErr;
}

uint64_t APEndpointManagerGetShared()
{
  if (APEndpointManagerGetShared_once != -1) {
    dispatch_once(&APEndpointManagerGetShared_once, &__block_literal_global_2);
  }
  return APEndpointManagerGetShared_sAPEndpointManager;
}

uint64_t APEndpointManagerCreateEx(uint64_t a1, void *a2)
{
  return manager_create(a2);
}

uint64_t manager_create(void *a1)
{
  char v96 = 0;
  long long v2 = *(_OWORD *)(MEMORY[0x1E4F1D530] + 16);
  *(_OWORD *)&keyCallBacks.versioCFIndex n = *MEMORY[0x1E4F1D530];
  *(_OWORD *)&keyCallBacks.release = v2;
  long long v3 = *(_OWORD *)(MEMORY[0x1E4F1D548] + 16);
  *(_OWORD *)&callBacks.versioCFIndex n = *MEMORY[0x1E4F1D548];
  *(_OWORD *)&callBacks.release = v3;
  keyCallBacks.equal = (CFDictionaryEqualCallBack)manager_transportDeviceEqual;
  keyCallBacks.hash = (CFDictionaryHashCallBack)manager_transportDeviceHash;
  callBacks.equal = (CFSetEqualCallBack)manager_transportDeviceEqual;
  callBacks.hash = (CFSetHashCallBack)manager_transportDeviceHash;
  LogSetAppID();
  if (!a1)
  {
    APSLogErrorAt();
    uint64_t v40 = 4294950586;
    goto LABEL_146;
  }
  CFAllocatorRef v4 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  FigEndpointManagerGetClassID();
  uint64_t v5 = CMDerivedObjectCreate();
  if (v5)
  {
    uint64_t v40 = v5;
    goto LABEL_175;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  dispatch_queue_t v7 = dispatch_queue_create("com.apple.airplay.apendpointManager.notification", 0);
  *(void *)(DerivedStorage + 8) = v7;
  if (!v7) {
    goto LABEL_156;
  }
  uint64_t v8 = FigSimpleMutexCreate();
  *(void *)(DerivedStorage + 64) = v8;
  if (!v8) {
    goto LABEL_156;
  }
  *(void *)(DerivedStorage + 88) = CFRetain((CFTypeRef)*MEMORY[0x1E4F205D0]);
  CFMutableDictionaryRef v9 = CFDictionaryCreateMutable(v4, 0, &keyCallBacks, MEMORY[0x1E4F1D540]);
  *(void *)(DerivedStorage + 168) = v9;
  if (!v9) {
    goto LABEL_156;
  }
  CFMutableDictionaryRef v10 = CFDictionaryCreateMutable(v4, 0, &keyCallBacks, MEMORY[0x1E4F1D540]);
  *(void *)(DerivedStorage + 176) = v10;
  if (!v10) {
    goto LABEL_156;
  }
  CFMutableSetRef v11 = CFSetCreateMutable(v4, 0, &callBacks);
  *(void *)(DerivedStorage + 184) = v11;
  if (!v11) {
    goto LABEL_156;
  }
  CFMutableArrayRef Mutable = CFArrayCreateMutable(v4, 0, MEMORY[0x1E4F1D510]);
  *(void *)(DerivedStorage + 192) = Mutable;
  if (!Mutable) {
    goto LABEL_156;
  }
  CFMutableSetRef v13 = CFSetCreateMutable(v4, 0, MEMORY[0x1E4F1D548]);
  *(void *)(DerivedStorage + 208) = v13;
  if (!v13) {
    goto LABEL_156;
  }
  *(unsigned char *)uint64_t DerivedStorage = 1;
  *(unsigned char *)(DerivedStorage + 2) = APSIsEndpointClusteringEnabled();
  if (gLogCategory_APEndpointManager <= 50
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  *(unsigned char *)(DerivedStorage + 3) = APSMultiPrimariesEnabled();
  if (gLogCategory_APEndpointManager <= 50)
  {
    if (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      APSIsProximitySenderEnabled();
      LogPrintF();
    }
  }
  if (APSSettingsIsFeatureEnabled())
  {
    APBrokerManagerCreate();
    if (!*(void *)(DerivedStorage + 288))
    {
      APSLogErrorAt();
      uint64_t v40 = 4294960568;
      goto LABEL_146;
    }
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  *(unsigned char *)(DerivedStorage + 352) = 0;
  *(unsigned char *)(DerivedStorage + 352) = APSSettingsIsFeatureEnabled();
  if (IsAppleTV())
  {
    int v14 = 4;
  }
  else
  {
    if (!APSIsAPMSpeaker())
    {
      int v14 = 0;
      *(_DWORD *)(DerivedStorage + 348) = 0;
      goto LABEL_33;
    }
    int v14 = 7;
  }
  *(_DWORD *)(DerivedStorage + 348) = v14;
LABEL_33:
  *(_DWORD *)(DerivedStorage + 4) = 0;
  if (*(unsigned char *)(DerivedStorage + 2) && (v14 == 7 || v14 == 4))
  {
    *(_DWORD *)(DerivedStorage + 4) = 2;
    uint64_t v15 = APEndpointLocalCreateWithEndpointDescription((uint64_t)v4, 0, 0, (void *)(DerivedStorage + 256));
    if (v15)
    {
      uint64_t v40 = v15;
      goto LABEL_175;
    }
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterAddWeakListener();
    manager_updateEndpointPSGInfoIfNeeded();
    *(unsigned char *)(DerivedStorage + 161) = APSGetFBOPropertyInt64() == 0;
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
    manager_updateExposedLocalEndpoint((uint64_t)v96, *(const void **)(DerivedStorage + 256));
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 64));
  }
  CFMutableDictionaryRef v16 = CFDictionaryCreateMutable(v4, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  *(void *)(DerivedStorage + 216) = v16;
  if (!v16) {
    goto LABEL_156;
  }
  CFMutableDictionaryRef v17 = CFDictionaryCreateMutable(v4, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  *(void *)(DerivedStorage + 224) = v17;
  if (!v17) {
    goto LABEL_156;
  }
  long long v91 = a1;
  if (*(_DWORD *)(DerivedStorage + 348) == 7
    || !APSIsRemoteHALPluginLoadingEnabled()
    || !APSIsInAirPlaySenderSystemServer()
    || APSIsInAudioSystemServer())
  {
    goto LABEL_65;
  }
  CFMutableStringRef v18 = CFStringCreateMutable(v4, 0);
  uint64_t handler = 0;
  CFStringAppendFormat(v18, 0, @"/System/Library/Audio/Plug-Ins/HAL/%@", @"AirPlayHalogen.driver");
  CFURLRef v19 = CFURLCreateWithFileSystemPath(0, v18, kCFURLPOSIXPathStyle, 1u);
  if (v19)
  {
    CFURLRef v20 = v19;
    CFPlugInRef v21 = CFPlugInCreate(0, v19);
    if (v21)
    {
      int v22 = v21;
      CFUUIDRef v23 = CFUUIDGetConstantUUIDWithBytes(0, 0x44u, 0x3Au, 0xBAu, 0xB8u, 0xE7u, 0xB3u, 0x49u, 0x1Au, 0xB9u, 0x85u, 0xBEu, 0xB9u, 0x18u, 0x70u, 0x30u, 0xDBu);
      FactoriesForPlugInTypeInPlugICFIndex n = CFPlugInFindFactoriesForPlugInTypeInPlugIn(v23, v22);
      if (FactoriesForPlugInTypeInPlugIn)
      {
        CFArrayRef v25 = FactoriesForPlugInTypeInPlugIn;
        if (CFArrayGetCount(FactoriesForPlugInTypeInPlugIn) <= 0)
        {
          if (gLogCategory_APEndpointManager <= 90
            && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
        }
        else
        {
          CFUUIDRef ValueAtIndex = (const __CFUUID *)CFArrayGetValueAtIndex(v25, 0);
          if (ValueAtIndex
            && (CFUUIDRef v27 = ValueAtIndex,
                v28 = CFUUIDGetConstantUUIDWithBytes(0, 0x44u, 0x3Au, 0xBAu, 0xB8u, 0xE7u, 0xB3u, 0x49u, 0x1Au, 0xB9u, 0x85u, 0xBEu, 0xB9u, 0x18u, 0x70u, 0x30u, 0xDBu), (char v29 = CFPlugInInstanceCreate(0, v27, v28)) != 0))
          {
            CFStringRef v30 = v29;
            uint64_t v31 = *(unsigned int (**)(void *, void, void, uint64_t *))(*(void *)v29 + 8);
            CFUUIDRef v32 = CFUUIDGetConstantUUIDWithBytes(0, 0xEEu, 0xA5u, 0x77u, 0x3Du, 0xCCu, 0x43u, 0x49u, 0xF1u, 0x8Eu, 0, 0x8Fu, 0x96u, 0xE7u, 0xD2u, 0x3Bu, 0x17u);
            CFUUIDBytes v33 = CFUUIDGetUUIDBytes(v32);
            if (v31(v30, *(void *)&v33.byte0, *(void *)&v33.byte8, &handler) || !handler) {
              APSLogErrorAt();
            }
            (*(void (**)(void *))(*(void *)v30 + 24))(v30);
          }
          else
          {
            APSLogErrorAt();
          }
        }
        CFRelease(v20);
      }
      else
      {
        APSLogErrorAt();
        CFArrayRef v25 = v20;
      }
      CFRelease(v25);
      uint64_t v34 = v22;
    }
    else
    {
      APSLogErrorAt();
      uint64_t v34 = v20;
    }
    CFRelease(v34);
    if (v18) {
      goto LABEL_62;
    }
  }
  else
  {
    APSLogErrorAt();
    if (v18) {
LABEL_62:
    }
      CFRelease(v18);
  }
  uint64_t v35 = handler;
  *(void *)(DerivedStorage + 304) = handler;
  if (v35)
  {
    uint64_t v36 = *(NSObject **)(DerivedStorage + 8);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __manager_create_block_invoke;
    block[3] = &__block_descriptor_40_e5_v8__0l;
    block[4] = v96;
    dispatch_sync(v36, block);
LABEL_65:
    uint64_t Int64 = APSSettingsGetInt64();
    char IntWithDefault = APSSettingsGetIntWithDefault();
    if (Int64)
    {
      uint64_t v39 = APSNetworkClockNTPServerCreate();
      if (v39)
      {
        uint64_t v40 = v39;
LABEL_175:
        APSLogErrorAt();
        goto LABEL_146;
      }
    }
    else
    {
      uint64_t v41 = APSNetworkClockPTPCreate();
      if (v41)
      {
        uint64_t v40 = v41;
        goto LABEL_175;
      }
    }
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (IntWithDefault)
    {
      uint64_t v42 = v96;
      uint64_t v43 = CMBaseObjectGetDerivedStorage();
      uint64_t v44 = dispatch_queue_create("com.apple.airplay.apendpointManager.clockstart", 0);
      if (gLogCategory_APEndpointManager <= 30
        && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFRetain(v42);
      uint64_t handler = MEMORY[0x1E4F143A8];
      uint64_t v98 = 3221225472;
      uint64_t v99 = __manager_asyncStartNetworkClock_block_invoke;
      uint64_t v100 = &__block_descriptor_48_e5_v8__0l;
      uint64_t v101 = v43;
      uint64_t v102 = v42;
      dispatch_async(v44, &handler);
      if (gLogCategory_APEndpointManager <= 30
        && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (v44) {
        dispatch_release(v44);
      }
    }
    CFMutableDictionaryRef v45 = CFDictionaryCreateMutable(v4, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (v45)
    {
      uint64_t v46 = v45;
      APSEventRecorderCreate();
      uint64_t v47 = *(const void **)(DerivedStorage + 296);
      if (v47) {
        CFDictionarySetValue(v46, @"eventRecorder", v47);
      }
      uint64_t v48 = (uint64_t)v96;
      uint64_t v49 = CMBaseObjectGetDerivedStorage();
      CFMutableSetRef v50 = CFSetCreateMutable(v4, 0, MEMORY[0x1E4F1D548]);
      *(void *)(v49 + 248) = v50;
      if (v50
        && (uint64_t v51 = dispatch_source_create(MEMORY[0x1E4F14490], 0, 0, *(dispatch_queue_t *)(v49 + 8)),
            (*(void *)(v49 + 312) = v51) != 0))
      {
        uint64_t handler = MEMORY[0x1E4F143A8];
        uint64_t v98 = 3221225472;
        uint64_t v99 = __manager_initAndStartDeviceMetricsTimer_block_invoke;
        uint64_t v100 = &__block_descriptor_40_e5_v8__0l;
        uint64_t v101 = v48;
        dispatch_source_set_event_handler(v51, &handler);
        uint64_t v52 = *(NSObject **)(v49 + 312);
        dispatch_time_t v53 = dispatch_time(0, 10800000000000);
        dispatch_source_set_timer(v52, v53, 0x4E94914F0000uLL, 0x3B9ACA00uLL);
        dispatch_resume(*(dispatch_object_t *)(v49 + 312));
      }
      else
      {
        APSLogErrorAt();
        long long v89 = *(NSObject **)(v49 + 312);
        if (v89)
        {
          dispatch_source_cancel(*(dispatch_source_t *)(v49 + 312));
          dispatch_release(v89);
          *(void *)(v49 + 312) = 0;
        }
        long long v90 = *(const void **)(v49 + 248);
        if (v90)
        {
          CFRelease(v90);
          *(void *)(v49 + 248) = 0;
        }
      }
      int v54 = *(_DWORD *)(DerivedStorage + 348);
      if (v54 == 13 || v54 == 7)
      {
        uint64_t v55 = (const void *)*MEMORY[0x1E4F1CFD0];
        unsigned int v56 = (const void *)*MEMORY[0x1E4F1CFC8];
      }
      else
      {
        int v57 = APSIsDemoModeEnabled();
        uint64_t v55 = (const void *)*MEMORY[0x1E4F1CFD0];
        unsigned int v56 = (const void *)*MEMORY[0x1E4F1CFC8];
        uint64_t v58 = (const void *)*MEMORY[0x1E4F1CFD0];
        if (!v57) {
          goto LABEL_95;
        }
      }
      uint64_t v58 = v56;
LABEL_95:
      CFDictionarySetValue(v46, @"fullAWDLAllowed", v58);
      int v59 = *(_DWORD *)(DerivedStorage + 348);
      if (APSIsDemoModeEnabled()) {
        BOOL v60 = 1;
      }
      else {
        BOOL v60 = v59 == 13;
      }
      if (v60 || v59 == 7) {
        __int16 v62 = v56;
      }
      else {
        __int16 v62 = v55;
      }
      CFDictionarySetValue(v46, @"partialAWDLAllowed", v62);
      if (!APSHasNANSupport() || (uint64_t v63 = APSSettingsGetInt64(), v64 = v55, !v63)) {
        uint64_t v64 = v56;
      }
      CFDictionarySetValue(v46, @"openFullNANAllowed", v64);
      int v65 = *(_DWORD *)(DerivedStorage + 348);
      int v66 = APSHasNANSupport();
      uint64_t v67 = v56;
      if (v66)
      {
        if (v65 == 4)
        {
          BOOL v68 = 1;
        }
        else
        {
          int IsFeatureEnabled = APSSettingsIsFeatureEnabled();
          BOOL v68 = v65 == 7 && IsFeatureEnabled != 0;
        }
        if (IsAppleInternalBuild())
        {
          int v71 = APSSettingsGetIntWithDefault();
          uint64_t v67 = v56;
          if (!v71) {
            goto LABEL_119;
          }
          goto LABEL_118;
        }
        uint64_t v67 = v56;
        if (v68) {
LABEL_118:
        }
          uint64_t v67 = v55;
      }
LABEL_119:
      CFDictionarySetValue(v46, @"securePartialNANAllowed", v67);
      FigCFDictionarySetValue();
      if (APSCanSendToAltReceiver()) {
        CFTypeRef v72 = v55;
      }
      else {
        CFTypeRef v72 = v56;
      }
      CFDictionarySetValue(v46, @"browseForAltReceiver", v72);
      uint64_t v73 = APBrowserControllerCreate((uint64_t)v4, (uint64_t)v46, (void *)(DerivedStorage + 272));
      if (v73)
      {
        uint64_t v40 = v73;
      }
      else
      {
        uint64_t v74 = APBrowserControllerSetEventHandlers(*(void *)(DerivedStorage + 272), (uint64_t)manager_handleDevicePresenceChanged, (uint64_t)manager_handleBrowserAddOrUpdateEvent, (uint64_t)manager_handleBrowserRemoveEvent, (uint64_t)manager_handleDiscoveryModeChanged, 0, (uint64_t)v96);
        if (v74)
        {
          uint64_t v40 = v74;
        }
        else
        {
          uint64_t v75 = AirPlayDebugIPCEnableForEndpointManager(v96);
          if (v75)
          {
            uint64_t v40 = v75;
          }
          else
          {
            *(void *)(DerivedStorage + 16) = -1;
            *(void *)(DerivedStorage + 24) = -1;
            manager_registerForNotifications((uint64_t)v96);
            manager_handlePreferencesChanged(v96, 1);
            uint64_t v76 = APSXPCServerAddCommandHandler();
            if (v76)
            {
              uint64_t v40 = v76;
            }
            else
            {
              uint64_t v77 = APSXPCServerAddCommandHandler();
              if (v77)
              {
                uint64_t v40 = v77;
              }
              else
              {
                CMNotificationCenterGetDefaultLocalCenter();
                FigNotificationCenterAddWeakListener();
                uint64_t v78 = APSXPCServerAddCommandHandler();
                if (v78)
                {
                  uint64_t v40 = v78;
                }
                else
                {
                  CMNotificationCenterGetDefaultLocalCenter();
                  FigNotificationCenterAddWeakListener();
                  uint64_t v79 = APSXPCServerAddCommandHandler();
                  if (v79)
                  {
                    uint64_t v40 = v79;
                  }
                  else
                  {
                    uint64_t v80 = APSXPCServerAddCommandHandler();
                    if (v80)
                    {
                      uint64_t v40 = v80;
                    }
                    else
                    {
                      uint64_t v81 = APSXPCServerAddCommandHandler();
                      if (v81)
                      {
                        uint64_t v40 = v81;
                      }
                      else
                      {
                        if (introspector_getCollectionOfEndpointManagers_once != -1) {
                          dispatch_once(&introspector_getCollectionOfEndpointManagers_once, &__block_literal_global_498);
                        }
                        if (introspector_getCollectionOfEndpointManagers_coll)
                        {
                          unint64_t v82 = *(NSObject **)introspector_getCollectionOfEndpointManagers_coll;
                          v92[0] = MEMORY[0x1E4F143A8];
                          v92[1] = 3221225472;
                          v92[2] = __manager_create_block_invoke_2;
                          v92[3] = &__block_descriptor_48_e5_v8__0l;
                          v92[4] = introspector_getCollectionOfEndpointManagers_coll;
                          v92[5] = v96;
                          dispatch_sync(v82, v92);
                        }
                        APSIntrospectorAddCommand();
                        APSIntrospectorAddCommand();
                        APSIntrospectorAddCommand();
                        APSIntrospectorAddCommand();
                        APSIntrospectorAddCommand();
                        APSIntrospectorAddCommand();
                        APSIntrospectorAddCommand();
                        uint64_t v83 = APSXPCServerAddCommandHandler();
                        if (!v83)
                        {
                          if (*(void *)(DerivedStorage + 280))
                          {
                            CMNotificationCenterGetDefaultLocalCenter();
                            FigNotificationCenterAddWeakListener();
                          }
                          FigInstallSysdiagnoseBlock();
                          if (gLogCategory_APEndpointManager <= 50
                            && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
                          {
                            LogPrintF();
                          }
                          uint64_t v40 = 0;
                          void *v91 = v96;
                          char v96 = 0;
                          goto LABEL_145;
                        }
                        uint64_t v40 = v83;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      APSLogErrorAt();
LABEL_145:
      CFRelease(v46);
      goto LABEL_146;
    }
LABEL_156:
    APSLogErrorAt();
    uint64_t v40 = 4294950585;
    goto LABEL_146;
  }
  APSLogErrorAt();
  uint64_t v40 = 4294895506;
LABEL_146:
  int v84 = v96;
  if (v96)
  {
    uint64_t v85 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v85) {
      uint64_t v86 = v85;
    }
    else {
      uint64_t v86 = 0;
    }
    CFTypeRef v87 = *(void (**)(void *))(v86 + 24);
    if (v87) {
      v87(v84);
    }
    CFRelease(v96);
  }
  return v40;
}

uint64_t __APEndpointManagerGetShared_block_invoke()
{
  uint64_t result = manager_create(&APEndpointManagerGetShared_sAPEndpointManager);
  gCreationErr = result;
  return result;
}

CFHashCode manager_transportDeviceHash()
{
  DiscoveryID = (const void *)APTransportDeviceGetDiscoveryID();
  return CFHash(DiscoveryID);
}

uint64_t manager_handleEndpointDescriptionChanged(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
  int v8 = FigCFEqual();
  if (!a5 || !v8) {
    goto LABEL_55;
  }
  uint64_t Int64 = CFDictionaryGetInt64();
  uint64_t v10 = CFDictionaryGetInt64();
  uint64_t v11 = CFDictionaryGetInt64();
  if (*(unsigned char *)(DerivedStorage + 160) || !Int64)
  {
    if (!(Int64 | v10)) {
      goto LABEL_50;
    }
  }
  else
  {
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(DerivedStorage + 160) = 1;
    CFRetain(a2);
    dispatch_async_f(*(dispatch_queue_t *)(DerivedStorage + 8), a2, (dispatch_function_t)manager_notifyAvailableEndpointsChanged);
  }
  CFTypeRef cf = 0;
  CFTypeRef v27 = 0;
  uint64_t v12 = *(void *)(DerivedStorage + 256);
  if (*(void *)(DerivedStorage + 240) == v12) {
    CFMutableSetRef v13 = 0;
  }
  else {
    CFMutableSetRef v13 = *(const void **)(DerivedStorage + 240);
  }
  manager_copyOrCreateClusterForEndpoint(a2, v12, &v27);
  if (gLogCategory_APEndpointManager <= 50
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (v13 && Int64)
  {
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v16 = (uint64_t)a2;
    CFTypeRef v15 = v13;
    int v17 = 1;
  }
  else
  {
    int v14 = manager_determineLocalClusterAction((uint64_t)a2, (uint64_t)v27);
    if (v14 != 2)
    {
      if (v14 == 1) {
        manager_activateLocalCluster(a2, (uint64_t)v27);
      }
      goto LABEL_31;
    }
    CFTypeRef v15 = v27;
    uint64_t v16 = (uint64_t)a2;
    int v17 = 0;
  }
  manager_deactivateLocalCluster(v16, (uint64_t)v15, v17);
LABEL_31:
  uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
  uint64_t v19 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v19) {
    uint64_t v20 = v19;
  }
  else {
    uint64_t v20 = 0;
  }
  CFPlugInRef v21 = *(void (**)(uint64_t, void, void, CFTypeRef *))(v20 + 48);
  if (v21) {
    v21(CMBaseObject, *MEMORY[0x1E4F20F60], *MEMORY[0x1E4F1CF80], &cf);
  }
  if (!FigCFEqual())
  {
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    int v22 = *(const void **)(DerivedStorage + 128);
    CFTypeRef v23 = cf;
    *(void *)(DerivedStorage + 128) = cf;
    if (v23) {
      CFRetain(v23);
    }
    if (v22) {
      CFRelease(v22);
    }
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v27) {
    CFRelease(v27);
  }
LABEL_50:
  if (!*(unsigned char *)(DerivedStorage + 161) || !v11)
  {
LABEL_55:
    BOOL v24 = APSGetFBOPropertyInt64() != 0;
    goto LABEL_58;
  }
  *(unsigned char *)(DerivedStorage + 161) = 0;
  if (gLogCategory_APEndpointManager <= 50
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  manager_updateEndpointPSGInfoIfNeeded();
  BOOL v24 = 1;
LABEL_58:
  manager_notifyAvailableEndpointsChangedWithThrottleIfNeeded(a2, v24);
  return MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 64));
}

void manager_updateEndpointPSGInfoIfNeeded()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef v39 = 0;
  uint64_t v1 = APSGetFBOPropertyInt64();
  if (!*(void *)(DerivedStorage + 280)) {
    return;
  }
  long long v2 = (void *)MEMORY[0x1E4F4A1B8];
  long long v3 = (const __CFAllocator **)MEMORY[0x1E4F1CF80];
  if (v1)
  {
    CFTypeRef cf = 0;
    CFDictionaryRef theDict = 0;
    if (!*(void *)(CMBaseObjectGetDerivedStorage() + 280))
    {
LABEL_49:
      if (theDict) {
        CFRelease(theDict);
      }
      goto LABEL_51;
    }
    uint64_t CMBaseObject = APSPSGDataSourceGetCMBaseObject();
    uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v5) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = 0;
    }
    dispatch_queue_t v7 = *(uint64_t (**)(uint64_t, void, const __CFAllocator *, CFDictionaryRef *))(v6 + 48);
    if (v7)
    {
      uint64_t v8 = *v2;
      CFAllocatorRef v9 = *v3;
      int v10 = v7(CMBaseObject, *v2, *v3, &theDict);
      if (theDict)
      {
        if (!v10)
        {
          uint64_t v11 = FigEndpointGetCMBaseObject();
          uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 8);
          uint64_t v13 = v12 ? v12 : 0;
          int v14 = *(uint64_t (**)(uint64_t, void, const __CFAllocator *, CFTypeRef *))(v13 + 48);
          if (v14)
          {
            int v15 = v14(v11, *MEMORY[0x1E4F20E38], v9, &cf);
            CFTypeRef v16 = cf;
            if (!cf || v15)
            {
LABEL_47:
              if (v16) {
                CFRelease(v16);
              }
              goto LABEL_49;
            }
            uint64_t Value = FigCFDictionaryGetValue();
            if (Value)
            {
              CFDictionaryRef v18 = (const __CFDictionary *)Value;
              if (CFDictionaryGetInt64())
              {
                if (gLogCategory_APEndpointManager <= 30
                  && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
                {
                  LogPrintF();
                }
              }
              else
              {
                CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy(v9, 0, theDict);
                if (MutableCopy)
                {
                  CFMutableDictionaryRef v20 = MutableCopy;
                  CFMutableDictionaryRef v21 = CFDictionaryCreateMutableCopy(v9, 0, v18);
                  if (v21)
                  {
                    CFMutableDictionaryRef v22 = v21;
                    FigCFDictionarySetValue();
                    FigCFDictionarySetValue();
                    uint64_t v23 = FigEndpointGetCMBaseObject();
                    uint64_t v24 = *(void *)(CMBaseObjectGetVTable() + 8);
                    if (v24) {
                      uint64_t v25 = v24;
                    }
                    else {
                      uint64_t v25 = 0;
                    }
                    CFTypeRef v26 = *(void (**)(uint64_t, __CFString *, CFMutableDictionaryRef))(v25 + 56);
                    if (v26) {
                      v26(v23, @"PermanentSpeakerGroupingInfo", v22);
                    }
                    uint64_t v27 = APSPSGDataSourceGetCMBaseObject();
                    uint64_t v28 = *(void *)(CMBaseObjectGetVTable() + 8);
                    if (v28) {
                      uint64_t v29 = v28;
                    }
                    else {
                      uint64_t v29 = 0;
                    }
                    CFStringRef v30 = *(void (**)(uint64_t, uint64_t, CFMutableDictionaryRef))(v29 + 56);
                    if (v30) {
                      v30(v27, v8, v20);
                    }
                    uint64_t v31 = APSPSGDataSourceGetCMBaseObject();
                    uint64_t v32 = *(void *)(CMBaseObjectGetVTable() + 8);
                    if (v32) {
                      uint64_t v33 = v32;
                    }
                    else {
                      uint64_t v33 = 0;
                    }
                    uint64_t v34 = *(void (**)(uint64_t, void, CFMutableDictionaryRef))(v33 + 56);
                    if (v34) {
                      v34(v31, *MEMORY[0x1E4F4A1C0], v22);
                    }
                    if (gLogCategory_APEndpointManager <= 30
                      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
                    {
                      LogPrintF();
                    }
                    CFRelease(v22);
                  }
                  CFRelease(v20);
                }
              }
            }
          }
        }
      }
    }
    CFTypeRef v16 = cf;
    goto LABEL_47;
  }
LABEL_51:
  uint64_t v35 = APSPSGDataSourceGetCMBaseObject();
  uint64_t v36 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v36) {
    uint64_t v37 = v36;
  }
  else {
    uint64_t v37 = 0;
  }
  uint64_t v38 = *(void (**)(uint64_t, void, const __CFAllocator *, CFTypeRef *))(v37 + 48);
  if (v38) {
    v38(v35, *v2, *v3, &v39);
  }
  manager_updatePSGInfoOnEndpoint();
  if (v39) {
    CFRelease(v39);
  }
}

void manager_updateExposedLocalEndpoint(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointManager <= 50
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (FigCFEqual())
  {
    APSLogErrorAt();
  }
  else
  {
    if (*(void *)(DerivedStorage + 240))
    {
      CMNotificationCenterGetDefaultLocalCenter();
      FigNotificationCenterRemoveWeakListener();
      CMNotificationCenterGetDefaultLocalCenter();
      FigNotificationCenterRemoveWeakListener();
      if (manager_exposedLocalEndpointIsPersistentlyConnectedCluster())
      {
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterRemoveWeakListener();
        if (*(_DWORD *)(DerivedStorage + 348) == 4)
        {
          CMNotificationCenterGetDefaultLocalCenter();
          FigNotificationCenterRemoveWeakListener();
        }
      }
      CFAllocatorRef v4 = *(const void **)(DerivedStorage + 240);
    }
    else
    {
      CFAllocatorRef v4 = 0;
    }
    *(void *)(DerivedStorage + 240) = a2;
    if (a2) {
      CFRetain(a2);
    }
    if (v4) {
      CFRelease(v4);
    }
    if (*(void *)(DerivedStorage + 240))
    {
      CMNotificationCenterGetDefaultLocalCenter();
      FigNotificationCenterAddWeakListener();
      CMNotificationCenterGetDefaultLocalCenter();
      FigNotificationCenterAddWeakListener();
      if (manager_exposedLocalEndpointIsPersistentlyConnectedCluster())
      {
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterAddWeakListener();
        if (*(_DWORD *)(DerivedStorage + 348) == 4)
        {
          CMNotificationCenterGetDefaultLocalCenter();
          FigNotificationCenterAddWeakListener();
        }
      }
    }
  }
}

void __manager_create_block_invoke()
{
}

void manager_asyncRegisterAirPlayHALDriverInternal()
{
  if (!*(unsigned char *)(CMBaseObjectGetDerivedStorage() + 1))
  {
    double v0 = (const void *)FigCFWeakReferenceHolderCreateWithReferencedObject();
    int v1 = AudioServerPlugInRegisterRemote();
    if (v1) {
      int v2 = 60;
    }
    else {
      int v2 = 50;
    }
    if (v2 >= gLogCategory_APEndpointManager
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (v1)
    {
      if (gLogCategory_APEndpointManager <= 60
        && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      manager_AudioServerPluginInterruptionHandler(v0);
    }
    if (v0) {
      CFRelease(v0);
    }
  }
}

void manager_handleDevicePresenceChanged(char a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
  manager_setAVDevicePresence(a2, a1);
  if (gLogCategory_APEndpointManager <= 30
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  JUMPOUT(0x1D25EB390);
}

void manager_handleBrowserAddOrUpdateEvent(const void *a1, void *a2)
{
  CFTypeRef v37 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef v36 = 0;
  if (!APTransportDeviceIsAssistedDevice())
  {
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
    if (!FigCFEqual())
    {
      uint64_t v6 = *MEMORY[0x1E4F1CF80];
      if (APEndpointDescriptionAirPlayCreateWithTransportDevice(*MEMORY[0x1E4F1CF80], a1, 0, &v36))
      {
        APSLogErrorAt();
      }
      else
      {
        BOOL v7 = manager_areEndpointsPresent();
        CFTypeRef v8 = v36;
        CMBaseObjectGetDerivedStorage();
        if (APSGetFBOPropertyInt64()
          || APSGetFBOPropertyInt64()
          || !manager_deviceIsAllowed((uint64_t)a2, (uint64_t)v8))
        {
          if (gLogCategory_APEndpointManager <= 30
            && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
        }
        else
        {
          CFTypeRef cf = 0;
          uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(v36);
          uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v10) {
            uint64_t v11 = v10;
          }
          else {
            uint64_t v11 = 0;
          }
          uint64_t v12 = *(unsigned int (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v11 + 48);
          if (!v12 || v12(CMBaseObject, @"TransportDevice", v6, &cf)) {
            goto LABEL_39;
          }
          int IsLegacyPresent = APTransportDeviceIsLegacyPresent();
          uint64_t v14 = APSGetFBOPropertyInt64();
          int IsModernPresent = APTransportDeviceIsModernPresent();
          uint64_t v16 = APSGetFBOPropertyInt64();
          uint64_t v17 = APSGetFBOPropertyInt64();
          if (v17)
          {
            uint64_t v18 = v17;
            int v19 = APSCanSendToAltReceiver();
            uint64_t v20 = -64;
            if (!v19) {
              uint64_t v20 = -48;
            }
            if ((v20 & v18) != 0) {
              goto LABEL_39;
            }
          }
          APSGetFBOPropertyInt64();
          if (!APTransportDeviceHasMinimumRelationship())
          {
LABEL_39:
            int v24 = 0;
          }
          else
          {
            if (v16) {
              BOOL v21 = 0;
            }
            else {
              BOOL v21 = IsLegacyPresent == 0;
            }
            char v22 = !v21;
            if (IsModernPresent && (v22 & 1) != 0 || (uint64_t v23 = APSGetFBOPropertyInt64(), IsModernPresent) && v23)
            {
              int v24 = 1;
            }
            else
            {
              if (IsLegacyPresent) {
                BOOL v34 = v14 == 0;
              }
              else {
                BOOL v34 = 0;
              }
              int v24 = v34 && v16 == 0;
            }
          }
          if (cf) {
            CFRelease(cf);
          }
          if (v24)
          {
            int IsSelf = APTransportDeviceIsSelf();
            int IsModernPresentOnInfra = APTransportDeviceIsModernPresentOnInfra();
            int IsPresentOnInfra = APTransportDeviceIsPresentOnInfra();
            if (IsSelf)
            {
              if (*(unsigned char *)(DerivedStorage + 120)) {
                manager_handleEndpointEvent(a2, a1, 1, 1, IsModernPresentOnInfra);
              }
            }
            else
            {
              int v28 = IsPresentOnInfra;
              uint64_t v29 = APSGetFBOPropertyInt64();
              unsigned int v30 = *(_DWORD *)(DerivedStorage + 348);
              int v31 = 1;
              if (v30 <= 0xD && ((1 << v30) & 0x2090) != 0) {
                int v31 = v28;
              }
              if (v29) {
                BOOL v32 = IsModernPresentOnInfra == 0;
              }
              else {
                BOOL v32 = 1;
              }
              int v33 = !v32;
              manager_handleEndpointEvent(a2, a1, 0, 0, v31);
              manager_handleEndpointEvent(a2, a1, 1, 0, v33);
              if (v31 || v33) {
                manager_gatherDeviceMetrics((uint64_t)a2, (uint64_t)v36);
              }
            }
          }
          else
          {
            if (gLogCategory_APEndpointManager <= 30
              && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            manager_removeAllEndpointsForTransportDeviceIfNeeded(a2, a1);
          }
        }
        if (v7 != manager_areEndpointsPresent())
        {
          if (gLogCategory_APEndpointManager <= 40
            && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          manager_postEndpointPresentChangedNotification();
        }
      }
    }
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 64));
    goto LABEL_81;
  }
  if (APEndpointCreateWithTransportDevice(*MEMORY[0x1E4F1CF80], a1, *(const void **)(DerivedStorage + 272), (uint64_t)a2, 0, &v37))
  {
    APSLogErrorAt();
LABEL_81:
    CFDictionaryRef v5 = 0;
    goto LABEL_82;
  }
  CFDictionaryRef v5 = (const __CFDictionary *)APTransportDeviceCopyAssistedInfo();
  if (!v5 || manager_injectEndpoint(a2, v5, a1, v37))
  {
    APSLogErrorAt();
  }
  else if (gLogCategory_APEndpointManager <= 50 {
         && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  }
  {
    LogPrintF();
  }
LABEL_82:
  if (v36) {
    CFRelease(v36);
  }
  if (v37) {
    CFRelease(v37);
  }
  if (v5) {
    CFRelease(v5);
  }
}

void manager_handleBrowserRemoveEvent(const void *a1, void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
  BOOL v5 = manager_areEndpointsPresent();
  manager_removeAllEndpointsForTransportDeviceIfNeeded(a2, a1);
  if (v5 != manager_areEndpointsPresent())
  {
    if (gLogCategory_APEndpointManager <= 40
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    manager_postEndpointPresentChangedNotification();
  }
  JUMPOUT(0x1D25EB390);
}

uint64_t manager_registerForNotifications(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  long long v3 = *(NSObject **)(DerivedStorage + 8);
  handler[0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __manager_registerForNotifications_block_invoke;
  handler[3] = &__block_descriptor_40_e8_v12__0i8l;
  handler[4] = a1;
  notify_register_dispatch("com.apple.airplay.prefsChanged", (int *)(DerivedStorage + 16), v3, handler);
  CFAllocatorRef v4 = *(NSObject **)(DerivedStorage + 8);
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  v11[2] = __manager_registerForNotifications_block_invoke_2;
  v11[3] = &__block_descriptor_40_e8_v12__0i8l;
  v11[4] = a1;
  uint64_t result = notify_register_dispatch("com.apple.airplay.stopSenderSession", (int *)(DerivedStorage + 24), v4, v11);
  unsigned int v6 = *(_DWORD *)(DerivedStorage + 348);
  if (v6 <= 0xD && ((1 << v6) & 0x2090) != 0 && !*(unsigned char *)(DerivedStorage + 3))
  {
    BOOL v7 = *(NSObject **)(DerivedStorage + 8);
    v10[0] = MEMORY[0x1E4F143A8];
    v10[1] = 3221225472;
    _OWORD v10[2] = __manager_registerForNotifications_block_invoke_3;
    v10[3] = &__block_descriptor_48_e8_v12__0i8l;
    v10[4] = DerivedStorage;
    v10[5] = a1;
    uint64_t result = notify_register_dispatch("com.apple.airplay.active", (int *)(DerivedStorage + 20), v7, v10);
    unsigned int v6 = *(_DWORD *)(DerivedStorage + 348);
  }
  if (v6 == 7)
  {
    CFTypeRef v8 = *(NSObject **)(DerivedStorage + 8);
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 3221225472;
    v9[2] = __manager_registerForNotifications_block_invoke_4;
    v9[3] = &__block_descriptor_48_e8_v12__0i8l;
    v9[4] = DerivedStorage;
    void v9[5] = a1;
    return notify_register_dispatch("kAirPlayWHANotification_GroupMemberInterruptedByPreWHASender", (int *)(DerivedStorage + 28), v8, v9);
  }
  return result;
}

void manager_handlePreferencesChanged(void *a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  APSSettingsSynchronize();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
  unsigned int v5 = *(_DWORD *)(DerivedStorage + 348);
  BOOL v6 = v5 > 0xD;
  int v7 = (1 << v5) & 0x2090;
  if (!v6 && v7 != 0) {
    *(unsigned char *)(DerivedStorage + 120) = APSSettingsGetIntWithDefault() != 0;
  }
  APSCopyTightSyncInfo();
  if (!FigCFEqual())
  {
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFAllocatorRef v9 = *(const void **)(DerivedStorage + 136);
    *(void *)(DerivedStorage + 136) = 0;
    if (v9) {
      CFRelease(v9);
    }
    if (!a2 && !*(void *)(DerivedStorage + 136))
    {
      uint64_t v10 = *(NSObject **)(DerivedStorage + 152);
      if (v10)
      {
        dispatch_source_cancel(*(dispatch_source_t *)(DerivedStorage + 152));
        dispatch_release(v10);
        *(void *)(DerivedStorage + 152) = 0;
      }
    }
  }
  uint64_t v11 = (const void *)APSSettingsCopyValue();
  int v12 = FigCFEqual();
  if (!v12)
  {
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v13 = *(const void **)(DerivedStorage + 104);
    *(void *)(DerivedStorage + 104) = v11;
    if (v11) {
      CFRetain(v11);
    }
    if (v13) {
      CFRelease(v13);
    }
  }
  uint64_t v14 = (const void *)APSSettingsCopyValue();
  if (FigCFEqual())
  {
    if (v12)
    {
      if (!a2) {
        goto LABEL_41;
      }
      goto LABEL_39;
    }
  }
  else
  {
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    int v15 = *(const void **)(DerivedStorage + 112);
    *(void *)(DerivedStorage + 112) = v14;
    if (v14) {
      CFRetain(v14);
    }
    if (v15) {
      CFRelease(v15);
    }
  }
  manager_updateAllowedDevices((uint64_t)a1);
  manager_updateAllowedDevices((uint64_t)a1);
  if (!a2) {
    goto LABEL_41;
  }
LABEL_39:
  uint64_t v16 = *(const void **)(DerivedStorage + 256);
  if (v16) {
    manager_updateEndpointClusterMembershipIfNeeded(a1, v16, 0, 0);
  }
LABEL_41:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 64));
  if (v11) {
    CFRelease(v11);
  }
  if (v14) {
    CFRelease(v14);
  }
}

uint64_t manager_handleActivateEndpointCommand(uint64_t a1, const void *a2, void *a3)
{
  if (a2)
  {
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (IsAppleInternalBuild() && CFDictionaryGetInt64())
    {
      TestInfoDictionary = (const void *)APAdvertiserInfoCreateTestInfoDictionary();
      CFDictionaryMergeDictionary();
    }
    else
    {
      TestInfoDictionary = CFRetain(a2);
    }
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterPostNotification();
    *a3 = 0;
    if (TestInfoDictionary) {
      CFRelease(TestInfoDictionary);
    }
    return 0;
  }
  else
  {
    uint64_t v6 = 4294950586;
    APSLogErrorAt();
  }
  return v6;
}

void manager_handleCreateEndpointWithEndpointInfoNotification(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, const __CFDictionary *a5)
{
  CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointManager <= 50)
  {
    if (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  if (!CFDictionaryContainsKey(a5, @"NetworkAddress"))
  {
    if (APBrowserControllerDiscoverAndInjectEndpoint())
    {
      APSLogErrorAt();
    }
    return;
  }
  CFTypeRef v18 = 0;
  CFAllocatorRef v7 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  int v19 = APAdvertiserInfoCreate();
  if (v19)
  {
    APSLogErrorAt();
    CFTypeRef v17 = 0;
    uint64_t Value = 0;
    CFTypeRef v8 = 0;
LABEL_35:
    CFMutableArrayRef Mutable = 0;
    goto LABEL_24;
  }
  CFDictionaryApplyBlock();
  CFTypeRef v8 = (void *)CFDictionaryCopyCString();
  TextToHardwareAddressScalar();
  uint64_t Value = CFDictionaryGetValue(a5, @"NetworkAddress");
  if (!Value)
  {
    int v19 = -16713;
    APSLogErrorAt();
    CFTypeRef v17 = 0;
    goto LABEL_35;
  }
  __int16 Int64 = CFDictionaryGetInt64();
  uint64_t v11 = CFDictionaryGetInt64();
  uint64_t v12 = CFDictionaryGetInt64();
  CFMutableArrayRef Mutable = CFDictionaryCreateMutable(v7, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  CFDictionarySetInt64();
  CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F475E0], 0);
  uint64_t v14 = (const void *)*MEMORY[0x1E4F1CFD0];
  CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F475F0], (const void *)*MEMORY[0x1E4F1CFD0]);
  CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F475F8], v14);
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v11 == 0;
  }
  if (v15) {
    uint64_t v16 = (const void *)*MEMORY[0x1E4F1CFC8];
  }
  else {
    uint64_t v16 = v14;
  }
  CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F475E8], v16);
  int v19 = APSNetworkAddressCreateWithString();
  if (v19) {
    goto LABEL_36;
  }
  if (Int64) {
    APSNetworkAddressSetPort();
  }
  int v19 = APTransportDeviceCreateWithNetworkAddress();
  if (v19)
  {
LABEL_36:
    APSLogErrorAt();
    CFTypeRef v17 = 0;
    uint64_t Value = 0;
LABEL_24:
    free(v8);
    if (!Mutable) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  int v19 = APEndpointCreateWithTransportDevice((uint64_t)v7, 0, 0, (uint64_t)a2, 0, &v18);
  if (!v19)
  {
    CFTypeRef v17 = v18;
    CFTypeRef v18 = 0;
    uint64_t Value = 0;
    goto LABEL_24;
  }
  APSLogErrorAt();
  CFTypeRef v17 = v18;
  free(v8);
  if (v17)
  {
    CFRelease(v17);
    CFTypeRef v17 = 0;
  }
  uint64_t Value = 0;
  if (!Mutable) {
    goto LABEL_26;
  }
LABEL_25:
  CFRelease(Mutable);
LABEL_26:
  if (!v19 && !manager_injectEndpoint(a2, a5, Value, v17))
  {
    if (!v17) {
      return;
    }
    goto LABEL_29;
  }
  APSLogErrorAt();
  if (v17) {
LABEL_29:
  }
    CFRelease(v17);
}

uint64_t manager_handleClearEndpointCommand(uint64_t a1, uint64_t a2, void *a3)
{
  if (gLogCategory_APEndpointManager <= 50
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a2)
  {
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterPostNotification();
    uint64_t v5 = 0;
    *a3 = 0;
  }
  else
  {
    uint64_t v5 = 4294950586;
    APSLogErrorAt();
  }
  return v5;
}

void manager_handleClearEndpointWithEndpointIDNotification(uint64_t a1, uint64_t a2)
{
  int v11 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v7 = 0;
  CFTypeRef v8 = &v7;
  uint64_t v9 = 0x2020000000;
  uint64_t v10 = 0;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
  CFAllocatorRef v4 = (void *)CFDictionaryCopyCString();
  if (v11)
  {
    APSLogErrorAt();
  }
  else
  {
    TextToHardwareAddressScalar();
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFDictionaryApplyBlock();
    uint64_t v5 = v8;
    if (v8[3])
    {
      if (gLogCategory_APEndpointManager <= 50)
      {
        if (gLogCategory_APEndpointManager != -1 || (v6 = _LogCategory_Initialize(), uint64_t v5 = v8, v6))
        {
          LogPrintF();
          uint64_t v5 = v8;
        }
      }
      manager_removeEndpointIfNeeded(a2, v5[3], 1);
    }
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 64));
  free(v4);
  _Block_object_dispose(&v7, 8);
}

void sub_1D0992430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t manager_handleUpdateLocalEndpointAuthStringCommand(uint64_t a1, const __CFDictionary *Value, void *a3)
{
  if (APEndpointManagerGetShared_once != -1) {
    dispatch_once(&APEndpointManagerGetShared_once, &__block_literal_global_2);
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (Value) {
    uint64_t Value = (const __CFDictionary *)CFDictionaryGetValue(Value, @"AuthString");
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
  if (FigCFEqual())
  {
    CFArrayRef v6 = 0;
  }
  else
  {
    CFTypeRef v8 = *(const void **)(DerivedStorage + 232);
    *(void *)(DerivedStorage + 232) = Value;
    if (Value) {
      CFRetain(Value);
    }
    if (v8) {
      CFRelease(v8);
    }
    CFArrayRef v6 = (const __CFArray *)FigCFDictionaryCopyArrayOfValues();
    CFIndex Count = CFArrayGetCount(v6);
    if (Count >= 1)
    {
      CFIndex v10 = Count;
      CFIndex v11 = 0;
      while (1)
      {
        CFArrayGetValueAtIndex(v6, v11);
        if (APSGetFBOPropertyInt64()) {
          break;
        }
        if (v10 == ++v11) {
          goto LABEL_7;
        }
      }
      uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
      uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v13) {
        uint64_t v14 = v13;
      }
      else {
        uint64_t v14 = 0;
      }
      BOOL v15 = *(void (**)(uint64_t, void, const __CFDictionary *))(v14 + 56);
      if (v15) {
        v15(CMBaseObject, *MEMORY[0x1E4F20F58], Value);
      }
    }
  }
LABEL_7:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 64));
  *a3 = 0;
  if (v6) {
    CFRelease(v6);
  }
  return 0;
}

uint64_t manager_handleUpdateLocalInfoDictCommand(int a1, CFDictionaryRef theDict, void *a3)
{
  if (APEndpointManagerGetShared_once != -1) {
    dispatch_once(&APEndpointManagerGetShared_once, &__block_literal_global_2);
  }
  *a3 = 0;
  uint64_t Value = CFDictionaryGetValue(theDict, @"InfoDict");
  if (MEMORY[0x1D25E8620]())
  {
    uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
    if (!*(void *)(DerivedStorage + 336)) {
      *(void *)(DerivedStorage + 336) = os_transaction_create();
    }
  }
  uint64_t v7 = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointManager <= 30
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (Value && *(void *)(v7 + 256))
  {
    uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
    uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v9) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    CFIndex v11 = *(void (**)(uint64_t, __CFString *, const void *))(v10 + 56);
    if (v11) {
      v11(CMBaseObject, @"EndpointInfo", Value);
    }
  }
  return 0;
}

uint64_t manager_handleDiscoveryBrokerRequest(uint64_t a1, uint64_t a2, void *a3)
{
  if (APEndpointManagerGetShared_once != -1) {
    dispatch_once(&APEndpointManagerGetShared_once, &__block_literal_global_2);
  }
  CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointManager <= 30
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!a2
    || (CFStringGetTypeID(), (Typeduint64_t Value = CFDictionaryGetTypedValue()) == 0)
    || (CFArrayRef v6 = (const void *)TypedValue, CFStringGetTypeID(), (v7 = CFDictionaryGetTypedValue()) == 0))
  {
LABEL_37:
    APSLogErrorAt();
    uint64_t result = 4294960591;
    if (!a3) {
      return result;
    }
    goto LABEL_35;
  }
  CFTypeRef v8 = (const void *)v7;
  if (CFEqual(v6, @"Authenticate"))
  {
    CFStringGetTypeID();
    if (CFDictionaryGetTypedValue())
    {
      CFStringGetTypeID();
      uint64_t v9 = CFDictionaryGetTypedValue();
      if (gLogCategory_APEndpointManager <= 50
        && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
      {
        if (v9) {
          IsAppleInternalBuild();
        }
        IsAppleInternalBuild();
        LogPrintF();
      }
      CFRetain(v8);
      APBrokerManagerAuthenticateBrokerGroup();
      goto LABEL_34;
    }
    goto LABEL_37;
  }
  if (CFEqual(v6, @"GetInfo"))
  {
    CFStringGetTypeID();
    uint64_t v10 = CFDictionaryGetTypedValue();
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      if (v10) {
        IsAppleInternalBuild();
      }
      LogPrintF();
    }
    CFRetain(v8);
    APBrokerManagerGetInfoFromBrokerGroup();
LABEL_34:
    uint64_t result = 0;
    if (!a3) {
      return result;
    }
    goto LABEL_35;
  }
  if (gLogCategory_APEndpointManager <= 90
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t result = 4294960561;
  if (a3) {
LABEL_35:
  }
    *a3 = 0;
  return result;
}

void __manager_create_block_invoke_2(uint64_t a1)
{
}

void manager_connectToAddressIntrospectorCmd(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  if (a3 < 2)
  {
LABEL_7:
    FPrintF();
    return;
  }
  CFStringRef v4 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x1E4F1CF80], *(const char **)(a4 + 8), 0x8000100u);
  TestInfoDictionary = (__CFDictionary *)APAdvertiserInfoCreateTestInfoDictionary();
  CFDictionarySetValue(TestInfoDictionary, (const void *)*MEMORY[0x1E4F47480], v4);
  CFDictionarySetValue(TestInfoDictionary, @"NetworkAddress", v4);
  if (CFDictionaryCreateFromNameTypeValueArgList())
  {
    FPrintF();
    if (v4) {
      CFRelease(v4);
    }
    if (TestInfoDictionary) {
      CFRelease(TestInfoDictionary);
    }
    goto LABEL_7;
  }
  CFDictionaryMergeDictionary();
  FPrintF();
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterPostNotification();
  if (v4) {
    CFRelease(v4);
  }
  if (TestInfoDictionary) {
    CFRelease(TestInfoDictionary);
  }
}

void manager_introspector_listEndpoints(uint64_t a1, uint64_t a2, int a3, char **a4)
{
  v51[0] = 0;
  if (a1)
  {
    unsigned __int8 v8 = 0;
    uint64_t v9 = 0;
    for (char i = 1; ; char i = 0)
    {
      do
      {
        uint64_t v10 = v9;
        int v11 = getopt(a3, a4, "va");
        uint64_t v9 = 1;
      }
      while (v11 == 97);
      if (v11 == -1) {
        break;
      }
      if (v11 != 118) {
        goto LABEL_11;
      }
      unsigned __int8 v8 = 1;
      uint64_t v9 = v10;
    }
    if (*MEMORY[0x1E4F149F8] < a3)
    {
LABEL_11:
      FPrintF();
      FPrintF();
      FPrintF();
      goto LABEL_12;
    }
    if (v10)
    {
      uint64_t CMBaseObject = FigEndpointManagerGetCMBaseObject();
      uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v13) {
        uint64_t v14 = v13;
      }
      else {
        uint64_t v14 = 0;
      }
      uint64_t v16 = *(unsigned int (**)(uint64_t, void, void, CFArrayRef *))(v14 + 48);
      if (!v16 || v16(CMBaseObject, *MEMORY[0x1E4F20608], *MEMORY[0x1E4F1CF80], v51))
      {
        APSLogErrorAt();
        goto LABEL_66;
      }
      BOOL v15 = v51[0];
      if (!v51[0])
      {
LABEL_66:
        FPrintF();
LABEL_67:
        if (v51[0]) {
          CFRelease(v51[0]);
        }
        return;
      }
LABEL_21:
      CFTypeID v17 = CFGetTypeID(v15);
      if (v17 == CFArrayGetTypeID())
      {
        CFIndex Count = CFArrayGetCount(v51[0]);
        FPrintF();
        if (Count >= 1)
        {
          CFIndex v19 = 0;
          uint64_t v45 = *MEMORY[0x1E4F20D80];
          uint64_t v20 = *MEMORY[0x1E4F1CF80];
          uint64_t v44 = *MEMORY[0x1E4F20E38];
          uint64_t v43 = *MEMORY[0x1E4F20F28];
          uint64_t v42 = *MEMORY[0x1E4F20FB0];
          do
          {
            CFUUIDRef ValueAtIndex = CFArrayGetValueAtIndex(v51[0], v19);
            if (APSGetFBOPropertyInt64())
            {
              CFTypeRef v49 = 0;
              CFTypeRef v50 = 0;
              CFTypeRef v48 = 0;
              CFTypeRef cf = 0;
              APSGetFBOPropertyInt64();
              uint64_t v22 = FigEndpointGetCMBaseObject();
              uint64_t v23 = *(void *)(CMBaseObjectGetVTable() + 8);
              if (v23) {
                uint64_t v24 = v23;
              }
              else {
                uint64_t v24 = 0;
              }
              uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t, CFTypeRef *))(v24 + 48);
              if (v25) {
                v25(v22, v45, v20, &v50);
              }
              uint64_t v26 = FigEndpointGetCMBaseObject();
              uint64_t v27 = *(void *)(CMBaseObjectGetVTable() + 8);
              if (v27) {
                uint64_t v28 = v27;
              }
              else {
                uint64_t v28 = 0;
              }
              uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t, CFTypeRef *))(v28 + 48);
              if (v29) {
                v29(v26, v44, v20, &v49);
              }
              uint64_t v30 = FigEndpointGetCMBaseObject();
              uint64_t v31 = *(void *)(CMBaseObjectGetVTable() + 8);
              if (v31) {
                uint64_t v32 = v31;
              }
              else {
                uint64_t v32 = 0;
              }
              int v33 = *(void (**)(uint64_t, uint64_t, uint64_t, CFTypeRef *))(v32 + 48);
              if (v33) {
                v33(v30, v43, v20, &v48);
              }
              APSGetFBOPropertyInt64();
              uint64_t v34 = FigEndpointGetCMBaseObject();
              uint64_t v35 = *(void *)(CMBaseObjectGetVTable() + 8);
              if (v35) {
                uint64_t v36 = v35;
              }
              else {
                uint64_t v36 = 0;
              }
              CFTypeRef v37 = *(void (**)(uint64_t, uint64_t, uint64_t, CFTypeRef *))(v36 + 48);
              if (v37) {
                v37(v34, v42, v20, &cf);
              }
              if (cf && (CFTypeID v38 = CFGetTypeID(cf), v38 == CFArrayGetTypeID())) {
                CFIndex v39 = CFArrayGetCount((CFArrayRef)cf);
              }
              else {
                CFIndex v39 = 0;
              }
              FPrintF();
              if ((i & 1) == 0) {
                FPrintF();
              }
              FPrintF();
              if (v39 >= 1)
              {
                for (CFIndex j = 0; j != v39; ++j)
                {
                  uint64_t v41 = CFArrayGetValueAtIndex((CFArrayRef)cf, j);
                  manager_introspector_showEndpointInfo(a2, 2, (uint64_t)v41, v8);
                }
              }
              if (v50) {
                CFRelease(v50);
              }
              if (v49) {
                CFRelease(v49);
              }
              if (v48) {
                CFRelease(v48);
              }
              if (cf) {
                CFRelease(cf);
              }
            }
            else
            {
              manager_introspector_showEndpointInfo(a2, 0, (uint64_t)ValueAtIndex, v8);
            }
            ++v19;
          }
          while (v19 != Count);
        }
        goto LABEL_67;
      }
      goto LABEL_66;
    }
    BOOL v15 = manager_copyEndpoints(a1, 0);
    v51[0] = v15;
    if (v15) {
      goto LABEL_21;
    }
  }
  APSLogErrorAt();
LABEL_12:
  FPrintF();
}

void manager_introspector_copyProperty(uint64_t a1, int a2, int a3, char **a4)
{
  CFTypeRef cf = 0;
  if (a1)
  {
    char v7 = 0;
    do
    {
      unsigned __int8 v8 = v7;
      int v9 = getopt(a3, a4, "r");
      char v7 = 1;
    }
    while (v9 == 114);
    if (v9 == -1 && (uint64_t v10 = (int *)MEMORY[0x1E4F149F8], v11 = (int)*MEMORY[0x1E4F149F8], (int)v11 < a3))
    {
      uint64_t v12 = a4[v11];
      int v13 = strncmp(v12, "desc@", 5uLL);
      CFAllocatorRef v14 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
      if (v13)
      {
        CFAllocatorRef v15 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
        uint64_t v16 = v12;
      }
      else
      {
        uint64_t v16 = v12 + 5;
        CFAllocatorRef v15 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
      }
      CFStringRef v17 = CFStringCreateWithCString(v15, v16, 0x8000100u);
      uint64_t v18 = *v10 + 1;
      *uint64_t v10 = v18;
      if ((int)v18 >= a3)
      {
        FPrintF();
        CFStringRef v19 = 0;
      }
      else
      {
        CFStringRef v19 = CFStringCreateWithCString(v14, a4[v18], 0x8000100u);
        int v20 = *v10 + 1;
        *uint64_t v10 = v20;
        if (v20 >= a3)
        {
          if (FigCFEqual())
          {
            uint64_t CMBaseObject = FigEndpointManagerGetCMBaseObject();
            uint64_t v22 = *(void *)(CMBaseObjectGetVTable() + 8);
            if (v22) {
              uint64_t v23 = v22;
            }
            else {
              uint64_t v23 = 0;
            }
            uint64_t v28 = *(unsigned int (**)(uint64_t, CFStringRef, const __CFAllocator *, CFTypeRef *))(v23 + 48);
            if (v28 && !v28(CMBaseObject, v19, v14, &cf))
            {
              CFTypeRef v24 = 0;
LABEL_33:
              CFTypeRef v33 = 0;
              goto LABEL_34;
            }
            FPrintF();
            CFTypeRef v24 = 0;
          }
          else
          {
            CFTypeRef v24 = manager_introspector_copyMatchingEndpoint(a1, (uint64_t)v17, v8);
            if (v24)
            {
              if (v13)
              {
                uint64_t v25 = FigEndpointGetCMBaseObject();
                uint64_t v26 = *(void *)(CMBaseObjectGetVTable() + 8);
                if (v26) {
                  uint64_t v27 = v26;
                }
                else {
                  uint64_t v27 = 0;
                }
                uint64_t v32 = *(unsigned int (**)(uint64_t, CFStringRef, const __CFAllocator *, CFTypeRef *))(v27 + 48);
                if (v32 && !v32(v25, v19, v14, &cf)) {
                  goto LABEL_33;
                }
              }
              else
              {
                uint64_t v29 = FigEndpointGetCMBaseObject();
                uint64_t v30 = *(void *)(CMBaseObjectGetVTable() + 8);
                if (v30) {
                  uint64_t v31 = v30;
                }
                else {
                  uint64_t v31 = 0;
                }
                uint64_t v34 = *(unsigned int (**)(uint64_t, __CFString *, const __CFAllocator *, CFTypeRef *))(v31 + 48);
                if (v34 && !v34(v29, @"EndpointDescription", v14, &cf))
                {
                  if (cf)
                  {
                    CFTypeID v35 = CFGetTypeID(cf);
                    if (v35 == APEndpointDescriptionGetTypeID())
                    {
                      CFTypeRef v33 = cf;
                      CFTypeRef cf = 0;
                      uint64_t v36 = APEndpointDescriptionGetCMBaseObject(v33);
                      uint64_t v37 = *(void *)(CMBaseObjectGetVTable() + 8);
                      if (v37) {
                        uint64_t v38 = v37;
                      }
                      else {
                        uint64_t v38 = 0;
                      }
                      CFIndex v39 = *(uint64_t (**)(uint64_t, CFStringRef, const __CFAllocator *, CFTypeRef *))(v38 + 48);
                      if (v39) {
                        v39(v36, v19, v14, &cf);
                      }
LABEL_34:
                      FPrintF();
                      if (!v17) {
                        goto LABEL_47;
                      }
                      goto LABEL_46;
                    }
                  }
                  if (gLogCategory_APEndpointManager <= 60)
                  {
                    if (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()) {
                      LogPrintF();
                    }
                    if (gLogCategory_APEndpointManager <= 60
                      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
                    {
                      LogPrintF();
                    }
                  }
                }
              }
            }
            FPrintF();
          }
          CFTypeRef v33 = 0;
          if (!v17)
          {
LABEL_47:
            if (v24) {
              CFRelease(v24);
            }
            if (v19) {
              CFRelease(v19);
            }
            if (cf) {
              CFRelease(cf);
            }
            if (v33) {
              CFRelease(v33);
            }
            return;
          }
LABEL_46:
          CFRelease(v17);
          goto LABEL_47;
        }
        FPrintF();
      }
      if (v17) {
        CFRelease(v17);
      }
      if (v19) {
        CFRelease(v19);
      }
    }
    else
    {
      FPrintF();
    }
    FPrintF();
    FPrintF();
    FPrintF();
    FPrintF();
    FPrintF();
  }
  else
  {
    APSLogErrorAt();
  }
  FPrintF();
}

void manager_introspector_setProperty(uint64_t a1, int a2, int a3, char **a4)
{
  if (a1)
  {
    char v7 = 0;
    do
    {
      unsigned __int8 v8 = v7;
      int v9 = getopt(a3, a4, "r");
      char v7 = 1;
    }
    while (v9 == 114);
    if (v9 == -1 && (uint64_t v10 = (int *)MEMORY[0x1E4F149F8], v11 = (int)*MEMORY[0x1E4F149F8], (int)v11 < a3))
    {
      CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
      CFStringRef v13 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x1E4F1CF80], a4[v11], 0x8000100u);
      uint64_t v14 = *v10 + 1;
      *uint64_t v10 = v14;
      if ((int)v14 >= a3)
      {
        FPrintF();
        CFStringRef v15 = 0;
      }
      else
      {
        CFStringRef v15 = CFStringCreateWithCString(v12, a4[v14], 0x8000100u);
        int v16 = *v10 + 1;
        *uint64_t v10 = v16;
        if (v16 < a3 && !CFCreateObjectFromString())
        {
          int v17 = *v10 + 1;
          *uint64_t v10 = v17;
          if (v17 >= a3)
          {
            CFTypeRef v18 = manager_introspector_copyMatchingEndpoint(a1, (uint64_t)v13, v8);
            if (v18)
            {
              uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
              uint64_t v20 = *(void *)(CMBaseObjectGetVTable() + 8);
              uint64_t v21 = v20 ? v20 : 0;
              uint64_t v22 = *(uint64_t (**)(uint64_t, CFStringRef, void))(v21 + 56);
              if (v22) {
                v22(CMBaseObject, v15, 0);
              }
            }
            FPrintF();
            if (v13) {
              CFRelease(v13);
            }
            if (v18) {
              CFRelease(v18);
            }
            if (v15) {
              CFRelease(v15);
            }
            return;
          }
        }
        FPrintF();
      }
      if (v13) {
        CFRelease(v13);
      }
      if (v15) {
        CFRelease(v15);
      }
    }
    else
    {
      FPrintF();
    }
    FPrintF();
    FPrintF();
    FPrintF();
    FPrintF();
    FPrintF();
    return;
  }
  APSLogErrorAt();
  FPrintF();
}

void manager_introspector_copySubEndpointProperty(uint64_t a1, int a2, int a3, char **a4)
{
  CFTypeRef cf = 0;
  if (!a1)
  {
    APSLogErrorAt();
    goto LABEL_16;
  }
  char v7 = 0;
  do
  {
    unsigned __int8 v8 = v7;
    int v9 = getopt(a3, a4, "r");
    char v7 = 1;
  }
  while (v9 == 114);
  if (v9 == -1)
  {
    uint64_t v10 = (int *)MEMORY[0x1E4F149F8];
    uint64_t v11 = (int)*MEMORY[0x1E4F149F8];
    if ((int)v11 < a3)
    {
      CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
      CFStringRef v13 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x1E4F1CF80], a4[v11], 0x8000100u);
      uint64_t v14 = *v10 + 1;
      *uint64_t v10 = v14;
      if ((int)v14 >= a3)
      {
        FPrintF();
        CFStringRef v15 = 0;
      }
      else
      {
        CFStringRef v15 = CFStringCreateWithCString(v12, a4[v14], 0x8000100u);
        uint64_t v16 = *v10 + 1;
        *uint64_t v10 = v16;
        if ((int)v16 < a3)
        {
          CFStringRef v17 = CFStringCreateWithCString(v12, a4[v16], 0x8000100u);
          int v18 = *v10 + 1;
          *uint64_t v10 = v18;
          if (v18 >= a3)
          {
            CFTypeRef v19 = manager_introspector_copyMatchingEndpoint(a1, (uint64_t)v13, v8);
            if (v19)
            {
              FigEndpointSubEndpointSupportProtocolGetProtocolID();
              Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
              if (ProtocolVTable)
              {
                uint64_t v21 = *(void *)(ProtocolVTable + 16);
                if (v21)
                {
                  uint64_t v22 = *(uint64_t (**)(CFTypeRef, CFStringRef, CFStringRef, const __CFAllocator *, CFTypeRef *))(v21 + 8);
                  if (v22) {
                    v22(v19, v15, v17, v12, &cf);
                  }
                }
              }
            }
            FPrintF();
            if (v13) {
              CFRelease(v13);
            }
            if (v15) {
              CFRelease(v15);
            }
            if (v19) {
              CFRelease(v19);
            }
            if (v17) {
              CFRelease(v17);
            }
            if (cf) {
              CFRelease(cf);
            }
            return;
          }
          FPrintF();
          goto LABEL_37;
        }
        FPrintF();
      }
      CFStringRef v17 = 0;
LABEL_37:
      if (v13) {
        CFRelease(v13);
      }
      if (v15) {
        CFRelease(v15);
      }
      if (v17) {
        CFRelease(v17);
      }
      goto LABEL_15;
    }
  }
  FPrintF();
LABEL_15:
  FPrintF();
  FPrintF();
  FPrintF();
LABEL_16:
  FPrintF();
}

void manager_introspector_setSubEndpointProperty(uint64_t a1, int a2, int a3, char **a4)
{
  if (a1)
  {
    char v7 = 0;
    do
    {
      unsigned __int8 v8 = v7;
      int v9 = getopt(a3, a4, "r");
      char v7 = 1;
    }
    while (v9 == 114);
    if (v9 != -1 || (uint64_t v10 = (int *)MEMORY[0x1E4F149F8], v11 = (int)*MEMORY[0x1E4F149F8], (int)v11 >= a3))
    {
      FPrintF();
LABEL_17:
      FPrintF();
      FPrintF();
      FPrintF();
      FPrintF();
      FPrintF();
      return;
    }
    CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    CFStringRef v13 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x1E4F1CF80], a4[v11], 0x8000100u);
    uint64_t v14 = *v10 + 1;
    *uint64_t v10 = v14;
    if ((int)v14 >= a3)
    {
      FPrintF();
      CFStringRef v15 = 0;
    }
    else
    {
      CFStringRef v15 = CFStringCreateWithCString(v12, a4[v14], 0x8000100u);
      uint64_t v16 = *v10 + 1;
      *uint64_t v10 = v16;
      if ((int)v16 < a3)
      {
        CFStringRef v17 = CFStringCreateWithCString(v12, a4[v16], 0x8000100u);
        int v18 = *v10 + 1;
        *uint64_t v10 = v18;
        if (v18 < a3 && !CFCreateObjectFromString())
        {
          int v19 = *v10 + 1;
          *uint64_t v10 = v19;
          if (v19 >= a3)
          {
            CFTypeRef v20 = manager_introspector_copyMatchingEndpoint(a1, (uint64_t)v13, v8);
            if (v20)
            {
              FigEndpointSubEndpointSupportProtocolGetProtocolID();
              Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
              if (ProtocolVTable)
              {
                uint64_t v22 = *(void *)(ProtocolVTable + 16);
                if (v22)
                {
                  uint64_t v23 = *(uint64_t (**)(CFTypeRef, CFStringRef, CFStringRef, void))(v22 + 16);
                  if (v23) {
                    v23(v20, v15, v17, 0);
                  }
                }
              }
            }
            FPrintF();
            if (v13) {
              CFRelease(v13);
            }
            if (v15) {
              CFRelease(v15);
            }
            if (v20) {
              CFRelease(v20);
            }
            if (v17) {
              CFRelease(v17);
            }
            return;
          }
        }
        FPrintF();
        goto LABEL_36;
      }
      FPrintF();
    }
    CFStringRef v17 = 0;
LABEL_36:
    if (v13) {
      CFRelease(v13);
    }
    if (v15) {
      CFRelease(v15);
    }
    if (v17) {
      CFRelease(v17);
    }
    goto LABEL_17;
  }
  APSLogErrorAt();
  FPrintF();
}

void manager_introspector_sendCommand(uint64_t a1, int a2, int a3, char **a4)
{
  if (a1)
  {
    char v7 = 0;
    do
    {
      unsigned __int8 v8 = v7;
      int v9 = getopt(a3, a4, "r");
      char v7 = 1;
    }
    while (v9 == 114);
    if (v9 == -1 && (uint64_t v10 = (int *)MEMORY[0x1E4F149F8], v11 = (int)*MEMORY[0x1E4F149F8], (int)v11 < a3))
    {
      CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
      CFStringRef v13 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x1E4F1CF80], a4[v11], 0x8000100u);
      uint64_t v14 = *v10 + 1;
      *uint64_t v10 = v14;
      if ((int)v14 >= a3)
      {
        FPrintF();
        CFStringRef v15 = 0;
      }
      else
      {
        CFStringRef v15 = CFStringCreateWithCString(v12, a4[v14], 0x8000100u);
        ++*v10;
        if (!CFDictionaryCreateFromNameTypeValueArgList())
        {
          CFTypeRef v16 = manager_introspector_copyMatchingEndpoint(a1, (uint64_t)v13, v8);
          if (v16)
          {
            FigEndpointExtendedGetClassID();
            if (CMBaseObjectIsMemberOfClass())
            {
              uint64_t v17 = *(void *)(CMBaseObjectGetVTable() + 24);
              uint64_t v18 = v17 ? v17 : 0;
              int v19 = *(uint64_t (**)(CFTypeRef, CFStringRef, void, void, void))(v18 + 72);
              if (v19) {
                v19(v16, v15, 0, 0, 0);
              }
            }
          }
          FPrintF();
          if (v13) {
            CFRelease(v13);
          }
          if (v16) {
            CFRelease(v16);
          }
          if (v15) {
            CFRelease(v15);
          }
          return;
        }
        FPrintF();
      }
      if (v13) {
        CFRelease(v13);
      }
      if (v15) {
        CFRelease(v15);
      }
    }
    else
    {
      FPrintF();
    }
    FPrintF();
    FPrintF();
    FPrintF();
    FPrintF();
    FPrintF();
    FPrintF();
    return;
  }
  APSLogErrorAt();
  FPrintF();
}

uint64_t manager_handleTriggerSenderStateUpdate()
{
  if (APEndpointManagerGetShared_once != -1) {
    dispatch_once(&APEndpointManagerGetShared_once, &__block_literal_global_2);
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointManager <= 50
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
  uint64_t v1 = manager_getAndPostSenderStateUpdate();
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 64));
  return v1;
}

void manager_handlePSGDataSourceGroupInfoChanged(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
  if (*(void *)(DerivedStorage + 280))
  {
    uint64_t CMBaseObject = APSPSGDataSourceGetCMBaseObject();
    uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v5) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = 0;
    }
    char v7 = *(void (**)(uint64_t, void, void, CFTypeRef *))(v6 + 48);
    if (v7) {
      v7(CMBaseObject, *MEMORY[0x1E4F4A1B8], *MEMORY[0x1E4F1CF80], &cf);
    }
    unsigned __int8 v8 = manager_copyEndpoints(a2, 1);
    int v9 = v8;
    if (v8)
    {
      CFArrayGetCount(v8);
      CFArrayApplyBlock();
    }
    else
    {
      APSLogErrorAt();
    }
  }
  else
  {
    APSLogErrorAt();
    int v9 = 0;
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 64));
  if (cf) {
    CFRelease(cf);
  }
  if (v9) {
    CFRelease(v9);
  }
}

uint64_t __manager_create_block_invoke_3(uint64_t a1)
{
  if (gLogCategory_APEndpointManager <= 50
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v2 = *(void *)(a1 + 32);
  APSHierarchyReporterProtocolGetProtocolID();
  Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
  if (!ProtocolVTable) {
    return __manager_create_block_invoke_4();
  }
  uint64_t v4 = *(void *)(ProtocolVTable + 16);
  if (!v4) {
    return __manager_create_block_invoke_4();
  }
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, void, void, void *))(v4 + 8);
  if (!v5) {
    return __manager_create_block_invoke_4();
  }
  uint64_t result = v5(v2, 0, 0, 0, &__block_literal_global_124);
  if (result == -12782 || result == -12788) {
    return __manager_create_block_invoke_4();
  }
  return result;
}

uint64_t __manager_create_block_invoke_4()
{
  double v0 = (const void *)CFStringCreateV();
  if (gLogCategory_APEndpointHierarchy <= 50
    && (gLogCategory_APEndpointHierarchy != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
    if (!v0) {
      return 0;
    }
    goto LABEL_7;
  }
  if (v0) {
LABEL_7:
  }
    CFRelease(v0);
  return 0;
}

uint64_t manager_Invalidate(void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  dispatch_sync_f(*(dispatch_queue_t *)(DerivedStorage + 8), a1, (dispatch_function_t)manager_invalidateInternal);
  return 0;
}

void manager_Finalize(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 344)
    && gLogCategory_APEndpointManager <= 50
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 1))
  {
    if (introspector_getCollectionOfEndpointManagers_once != -1) {
      dispatch_once(&introspector_getCollectionOfEndpointManagers_once, &__block_literal_global_498);
    }
    if (introspector_getCollectionOfEndpointManagers_coll)
    {
      long long v3 = *(NSObject **)introspector_getCollectionOfEndpointManagers_coll;
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 3221225472;
      block[2] = __manager_Finalize_block_invoke;
      block[3] = &__block_descriptor_48_e5_v8__0l;
      block[4] = introspector_getCollectionOfEndpointManagers_coll;
      void block[5] = a1;
      dispatch_sync(v3, block);
    }
    uint64_t v4 = *(NSObject **)(DerivedStorage + 8);
    if (v4)
    {
      dispatch_release(v4);
      *(void *)(DerivedStorage + 8) = 0;
    }
    uint64_t v5 = *(void *)(DerivedStorage + 264);
    if (v5)
    {
      if (gLogCategory_APEndpointManager <= 50)
      {
        if (gLogCategory_APEndpointManager != -1
          || (v6 = _LogCategory_Initialize(), uint64_t v5 = *(void *)(DerivedStorage + 264), v6))
        {
          LogPrintF();
          uint64_t v5 = *(void *)(DerivedStorage + 264);
        }
      }
      uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v7) {
        uint64_t v8 = v7;
      }
      else {
        uint64_t v8 = 0;
      }
      int v9 = *(void (**)(uint64_t, uint64_t))(v8 + 88);
      if (v9) {
        v9(v5, a1);
      }
    }
    FigSimpleMutexDestroy();
    uint64_t v10 = *(const void **)(DerivedStorage + 104);
    if (v10)
    {
      CFRelease(v10);
      *(void *)(DerivedStorage + 104) = 0;
    }
    uint64_t v11 = *(const void **)(DerivedStorage + 112);
    if (v11)
    {
      CFRelease(v11);
      *(void *)(DerivedStorage + 112) = 0;
    }
    CFAllocatorRef v12 = *(const void **)(DerivedStorage + 168);
    if (v12)
    {
      CFRelease(v12);
      *(void *)(DerivedStorage + 168) = 0;
    }
    CFStringRef v13 = *(const void **)(DerivedStorage + 176);
    if (v13)
    {
      CFRelease(v13);
      *(void *)(DerivedStorage + 176) = 0;
    }
    uint64_t v14 = *(const void **)(DerivedStorage + 192);
    if (v14)
    {
      CFRelease(v14);
      *(void *)(DerivedStorage + 192) = 0;
    }
    CFStringRef v15 = *(const void **)(DerivedStorage + 208);
    if (v15)
    {
      CFRelease(v15);
      *(void *)(DerivedStorage + 208) = 0;
    }
    CFTypeRef v16 = *(const void **)(DerivedStorage + 184);
    if (v16)
    {
      CFRelease(v16);
      *(void *)(DerivedStorage + 184) = 0;
    }
    uint64_t v17 = *(const void **)(DerivedStorage + 216);
    if (v17)
    {
      CFRelease(v17);
      *(void *)(DerivedStorage + 216) = 0;
    }
    uint64_t v18 = *(const void **)(DerivedStorage + 224);
    if (v18)
    {
      CFRelease(v18);
      *(void *)(DerivedStorage + 224) = 0;
    }
    int v19 = *(const void **)(DerivedStorage + 232);
    if (v19)
    {
      CFRelease(v19);
      *(void *)(DerivedStorage + 232) = 0;
    }
    CFTypeRef v20 = *(const void **)(DerivedStorage + 128);
    if (v20)
    {
      CFRelease(v20);
      *(void *)(DerivedStorage + 128) = 0;
    }
    uint64_t v21 = *(const void **)(DerivedStorage + 264);
    if (v21)
    {
      CFRelease(v21);
      *(void *)(DerivedStorage + 264) = 0;
    }
    uint64_t v22 = *(void *)(DerivedStorage + 304);
    if (v22)
    {
      (*(void (**)(uint64_t))(*(void *)v22 + 24))(v22);
      *(void *)(DerivedStorage + 304) = 0;
    }
    uint64_t v23 = *(const void **)(DerivedStorage + 296);
    if (v23)
    {
      CFRelease(v23);
      *(void *)(DerivedStorage + 296) = 0;
    }
    CFTypeRef v24 = *(const void **)(DerivedStorage + 248);
    if (v24)
    {
      CFRelease(v24);
      *(void *)(DerivedStorage + 248) = 0;
    }
    uint64_t v25 = *(NSObject **)(DerivedStorage + 312);
    if (v25)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(DerivedStorage + 312));
      dispatch_release(v25);
      *(void *)(DerivedStorage + 312) = 0;
    }
    uint64_t v26 = *(const void **)(DerivedStorage + 88);
    if (v26)
    {
      CFRelease(v26);
      *(void *)(DerivedStorage + 88) = 0;
    }
    uint64_t v27 = *(const void **)(DerivedStorage + 272);
    if (v27)
    {
      CFRelease(v27);
      *(void *)(DerivedStorage + 272) = 0;
    }
    uint64_t v28 = *(const void **)(DerivedStorage + 256);
    if (v28)
    {
      CFRelease(v28);
      *(void *)(DerivedStorage + 256) = 0;
    }
    uint64_t v29 = *(const void **)(DerivedStorage + 280);
    if (v29)
    {
      CFRelease(v29);
      *(void *)(DerivedStorage + 280) = 0;
    }
    uint64_t v30 = *(const void **)(DerivedStorage + 288);
    if (v30)
    {
      CFRelease(v30);
      *(void *)(DerivedStorage + 288) = 0;
    }
    uint64_t v31 = *(const void **)(DerivedStorage + 240);
    if (v31)
    {
      CFRelease(v31);
      *(void *)(DerivedStorage + 240) = 0;
    }
    uint64_t v32 = *(const void **)(DerivedStorage + 136);
    if (v32)
    {
      CFRelease(v32);
      *(void *)(DerivedStorage + 136) = 0;
    }
    CFTypeRef v33 = *(NSObject **)(DerivedStorage + 152);
    if (v33)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(DerivedStorage + 152));
      dispatch_release(v33);
      *(void *)(DerivedStorage + 152) = 0;
    }
    uint64_t v34 = *(void **)(DerivedStorage + 336);
    if (v34)
    {

      *(void *)(DerivedStorage + 336) = 0;
    }
  }
  else
  {
    if (gLogCategory_APEndpointManager <= 100) {
      manager_Finalize_cold_1(gLogCategory_APEndpointManager);
    }
    __break(1u);
  }
}

__CFString *manager_CopyDebugDescription(uint64_t a1)
{
  uint64_t v2 = *MEMORY[0x1E4F1CF80];
  CFMutableArrayRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFTypeRef cf = 0;
  CFStringAppendFormat(Mutable, 0, @"<APEndpointManager %p>", a1);
  uint64_t CMBaseObject = FigEndpointManagerGetCMBaseObject();
  uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v6 + 48);
  if (v7)
  {
    int v8 = v7(CMBaseObject, @"ShowInfo", v2, &cf);
    CFTypeRef v9 = cf;
    if (!v8)
    {
      ASPrintF();
      size_t v10 = strlen(0);
      if (v10 && *(unsigned char *)(v10 - 1) == 10) {
        *(unsigned char *)(v10 - 1) = 0;
      }
      CFStringAppendFormat(Mutable, 0, @"%s", 0);
      free(0);
      CFTypeRef v9 = cf;
    }
    if (v9) {
      CFRelease(v9);
    }
  }
  return Mutable;
}

uint64_t manager_SetProperty()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
  CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointManager <= 30
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 64));
  return 4294954512;
}

void manager_invalidateInternal(void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(unsigned char *)(DerivedStorage + 1))
  {
    uint64_t v3 = DerivedStorage;
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(v3 + 1) = 1;
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
    if (*(void *)(v3 + 280))
    {
      CMNotificationCenterGetDefaultLocalCenter();
      FigNotificationCenterRemoveWeakListener();
    }
    if (*(void *)(v3 + 288)) {
      APBrokerManagerInvalidate();
    }
    if (*(void *)(v3 + 256))
    {
      CMNotificationCenterGetDefaultLocalCenter();
      FigNotificationCenterRemoveWeakListener();
    }
    AirPlayDebugIPCDisableForEndpointManager(a1);
    uint64_t v4 = *(NSObject **)(v3 + 56);
    if (v4)
    {
      dispatch_source_cancel(v4);
      uint64_t v5 = *(NSObject **)(v3 + 56);
      if (v5)
      {
        dispatch_release(v5);
        *(void *)(v3 + 56) = 0;
      }
    }
    int v6 = *(_DWORD *)(v3 + 16);
    if (v6 != -1)
    {
      notify_cancel(v6);
      *(_DWORD *)(v3 + 16) = -1;
    }
    int v7 = *(_DWORD *)(v3 + 24);
    if (v7 != -1)
    {
      notify_cancel(v7);
      *(_DWORD *)(v3 + 24) = -1;
    }
    int v8 = *(_DWORD *)(v3 + 20);
    if (v8 != -1)
    {
      notify_cancel(v8);
      *(_DWORD *)(v3 + 20) = -1;
    }
    int v9 = *(_DWORD *)(v3 + 28);
    if (v9 != -1)
    {
      notify_cancel(v9);
      *(_DWORD *)(v3 + 28) = -1;
    }
    MEMORY[0x1D25EB370](*(void *)(v3 + 64));
    CFArrayGetCount(*(CFArrayRef *)(v3 + 192));
    CFArrayApplyBlock();
    uint64_t v10 = *(void *)(v3 + 200);
    if (v10)
    {
      uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v11) {
        uint64_t v12 = v11;
      }
      else {
        uint64_t v12 = 0;
      }
      CFStringRef v13 = *(void (**)(uint64_t))(v12 + 32);
      if (v13) {
        v13(v10);
      }
      uint64_t v14 = *(const void **)(v3 + 200);
      if (v14)
      {
        CFRelease(v14);
        *(void *)(v3 + 200) = 0;
      }
    }
    CFArrayRef v15 = (const __CFArray *)FigCFDictionaryCopyArrayOfValues();
    CFArrayGetCount(v15);
    CFArrayApplyBlock();
    CFDictionaryApplyBlock();
    manager_removeAllEndpointsIfNeeded(a1, *(const __CFDictionary **)(v3 + 168));
    manager_removeAllEndpointsIfNeeded(a1, *(const __CFDictionary **)(v3 + 176));
    manager_updateExposedLocalEndpoint((uint64_t)a1, 0);
    MEMORY[0x1D25EB390](*(void *)(v3 + 64));
    uint64_t v16 = *(void *)(v3 + 272);
    if (v16 && APBrowserControllerInvalidate(v16))
    {
      APSLogErrorAt();
      if (!v15) {
        return;
      }
      goto LABEL_36;
    }
    uint64_t v17 = *(NSObject **)(v3 + 312);
    if (v17) {
      dispatch_source_cancel(v17);
    }
    if (v15) {
LABEL_36:
    }
      CFRelease(v15);
  }
}

uint64_t __manager_invalidateInternal_block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t VTable = CMBaseObjectGetVTable();
  uint64_t v6 = *(void *)(VTable + 16);
  uint64_t result = VTable + 16;
  uint64_t v5 = v6;
  if (v6) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0;
  }
  int v8 = *(uint64_t (**)(uint64_t))(v7 + 32);
  if (v8)
  {
    return v8(a2);
  }
  return result;
}

void __manager_invalidateInternal_block_invoke_2(uint64_t a1, const void *a2)
{
}

void manager_removeCluster(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  CFArrayRef theArray = 0;
  key = 0;
  uint64_t v4 = *MEMORY[0x1E4F1CF80];
  uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  int v8 = *(void (**)(uint64_t, void, uint64_t, CFArrayRef *))(v7 + 48);
  if (v8) {
    v8(CMBaseObject, *MEMORY[0x1E4F20FB0], v4, &theArray);
  }
  uint64_t v9 = APSGetFBOPropertyInt64();
  uint64_t v10 = FigEndpointGetCMBaseObject();
  uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v11) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = 0;
  }
  CFStringRef v13 = *(void (**)(uint64_t, void, uint64_t, CFTypeRef *))(v12 + 48);
  if (v13) {
    v13(v10, *MEMORY[0x1E4F20D80], v4, &cf);
  }
  if (gLogCategory_APEndpointManager <= 50
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    APEndpointFigEndpointClusterTypeToAPSClusterType(cf);
    APSClusterTypeToDescriptionString();
    LogPrintF();
  }
  if (v9) {
    manager_updateExposedLocalEndpoint(a1, *(void *)(DerivedStorage + 256));
  }
  CMNotificationCenterGetDefaultLocalCenter();
  FigNotificationCenterRemoveWeakListener();
  CMNotificationCenterGetDefaultLocalCenter();
  FigNotificationCenterRemoveWeakListener();
  if (theArray)
  {
    CFIndex Count = CFArrayGetCount(theArray);
    if (Count >= 1)
    {
      CFIndex v15 = Count;
      for (CFIndex i = 0; i != v15; ++i)
      {
        CFUUIDRef ValueAtIndex = CFArrayGetValueAtIndex(theArray, i);
        if (gLogCategory_APEndpointManager <= 50
          && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        manager_removeEndpointFromCluster(a1, a2, ValueAtIndex);
      }
    }
  }
  uint64_t v18 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v18) {
    uint64_t v19 = v18;
  }
  else {
    uint64_t v19 = 0;
  }
  CFTypeRef v20 = *(void (**)(const void *))(v19 + 32);
  if (v20) {
    v20(a2);
  }
  uint64_t v21 = FigEndpointGetCMBaseObject();
  uint64_t v22 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v22) {
    uint64_t v23 = v22;
  }
  else {
    uint64_t v23 = 0;
  }
  CFTypeRef v24 = *(void (**)(uint64_t, void, uint64_t, void **))(v23 + 48);
  if (v24 && (v24(v21, *MEMORY[0x1E4F20E38], v4, &key), key))
  {
    CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(DerivedStorage + 224), key);
    APBrowserControllerRegisterClusterNeedsDiscovery();
  }
  else
  {
    APSLogErrorAt();
  }
  if (theArray) {
    CFRelease(theArray);
  }
  if (key) {
    CFRelease(key);
  }
  if (cf) {
    CFRelease(cf);
  }
}

uint64_t __manager_invalidateInternal_block_invoke_3(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t VTable = CMBaseObjectGetVTable();
  uint64_t v7 = *(void *)(VTable + 16);
  uint64_t result = VTable + 16;
  uint64_t v6 = v7;
  if (v7) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = *(uint64_t (**)(uint64_t))(v8 + 32);
  if (v9)
  {
    return v9(a3);
  }
  return result;
}

void manager_removeAllEndpointsIfNeeded(void *a1, const __CFDictionary *a2)
{
  CMBaseObjectGetDerivedStorage();
  CFArrayRef v4 = (const __CFArray *)FigCFDictionaryCopyArrayOfKeys();
  if (v4)
  {
    CFArrayRef v5 = v4;
    if (CFArrayGetCount(v4) >= 1)
    {
      CFIndex v6 = 0;
      do
      {
        CFUUIDRef ValueAtIndex = CFArrayGetValueAtIndex(v5, v6);
        manager_removeEndpointForTransportDeviceIfNeeded(a1, ValueAtIndex, a2, 1);
        ++v6;
      }
      while (v6 < CFArrayGetCount(v5));
    }
    CFRelease(v5);
  }
}

void manager_handleClusterSubEndpointFailed(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, const __CFDictionary *a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
  uint64_t Value = CFDictionaryGetValue(a5, @"SubEndpoint");
  if (Value)
  {
    uint64_t v9 = Value;
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (manager_updateEndpointClusterMembershipIfNeeded(a2, v9, 1, 0)
      || (manager_removeEndpointIfNeeded((uint64_t)a2, (uint64_t)v9, 0), !APSGetFBOPropertyInt64())
      && manager_updateEndpointClusterMembershipIfNeeded(a2, v9, 0, 0))
    {
      APSLogErrorAt();
    }
  }
  JUMPOUT(0x1D25EB390);
}

void manager_handleClusterDiscoveryModeCriteriaChanged()
{
  if (gLogCategory_APEndpointManager <= 30
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFTypeRef cf = 0;
  if (*(unsigned char *)(CMBaseObjectGetDerivedStorage() + 2))
  {
    uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
    uint64_t v1 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v1) {
      uint64_t v2 = v1;
    }
    else {
      uint64_t v2 = 0;
    }
    uint64_t v3 = *(void (**)(uint64_t, void, void, CFTypeRef *))(v2 + 48);
    if (v3) {
      v3(CMBaseObject, *MEMORY[0x1E4F20E38], *MEMORY[0x1E4F1CF80], &cf);
    }
    APSGetFBOPropertyInt64();
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (APBrowserControllerRegisterClusterNeedsDiscovery()) {
      APSLogErrorAt();
    }
    if (cf) {
      CFRelease(cf);
    }
  }
}

uint64_t manager_removeEndpointFromCluster(uint64_t a1, const void *a2, const void *a3)
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(result + 2))
  {
    CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(result + 216), a3);
    uint64_t result = APSGetFBOPropertyInt64();
    if (!result)
    {
      APEndpointClusterRemoveSubEndpoint(a2, a3);
      CMNotificationCenterGetDefaultLocalCenter();
      FigNotificationCenterAddWeakListener();
      CMNotificationCenterGetDefaultLocalCenter();
      return FigNotificationCenterAddWeakListener();
    }
  }
  return result;
}

uint64_t manager_updateEndpointClusterMembershipIfNeeded(void *a1, const void *a2, int a3, int a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v38 = 0;
  if (!*(unsigned char *)(DerivedStorage + 2)) {
    return 0;
  }
  uint64_t v9 = DerivedStorage;
  if (APSGetFBOPropertyInt64()) {
    goto LABEL_3;
  }
  if (!a3) {
    APEndpointCopyClusterInfo((uint64_t)a2, (uint64_t)&v38, 0, 0, 0, 0, 0, 0);
  }
  uint64_t Value = CFDictionaryGetValue(*(CFDictionaryRef *)(v9 + 216), a2);
  uint64_t v12 = APSGetFBOPropertyInt64();
  uint64_t v13 = v12;
  if (!a4 || v12)
  {
    int v14 = FigCFEqual();
    if (Value && (CFIndex v15 = CFDictionaryGetValue(*(CFDictionaryRef *)(v9 + 224), Value)) != 0)
    {
      CFTypeRef v16 = CFRetain(v15);
      if (v16)
      {
        if (v14) {
          BOOL v17 = 1;
        }
        else {
          BOOL v17 = v13 == 0;
        }
        int v18 = !v17;
        if (v14)
        {
          BOOL v19 = 0;
        }
        else
        {
          int v37 = v18;
          v39[0] = 0;
          uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
          uint64_t v22 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v22) {
            uint64_t v23 = v22;
          }
          else {
            uint64_t v23 = 0;
          }
          CFTypeRef v24 = *(void (**)(uint64_t, void, void, CFArrayRef *))(v23 + 48);
          if (v24 && (v24(CMBaseObject, *MEMORY[0x1E4F20FB0], *MEMORY[0x1E4F1CF80], v39), v39[0]))
          {
            CFIndex Count = CFArrayGetCount(v39[0]);
            if (v39[0]) {
              CFRelease(v39[0]);
            }
          }
          else
          {
            CFIndex Count = 0;
          }
          BOOL v19 = Count == 1;
          int v18 = v37;
        }
        char v36 = 0;
        int v20 = v18 | v19 | a4;
LABEL_31:
        if (gLogCategory_APEndpointManager <= 50
          && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        if (v14 && !v20)
        {
          uint64_t v10 = 0;
        }
        else
        {
          CFTypeRef v26 = 0;
          if (!v14 && v38)
          {
            uint64_t v27 = CFDictionaryGetValue(*(CFDictionaryRef *)(v9 + 224), v38);
            CFTypeRef v26 = v27 ? CFRetain(v27) : 0;
            if (gLogCategory_APEndpointManager <= 50
              && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
          }
          CFAllocatorRef v28 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
          CFMutableSetRef Mutable = CFSetCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D548]);
          if (Mutable)
          {
            CFMutableSetRef v30 = Mutable;
            CFMutableArrayRef v31 = CFArrayCreateMutable(v28, 0, MEMORY[0x1E4F1D510]);
            if (!v31)
            {
              APSLogErrorAt();
              uint64_t v10 = 4294960568;
LABEL_79:
              CFRelease(v30);
              if (!v26) {
                goto LABEL_81;
              }
              goto LABEL_80;
            }
            CFArrayRef v32 = v31;
            if (v20)
            {
              uint64_t v33 = manager_addClusterSubEndpoints();
              if (v33)
              {
                uint64_t v10 = v33;
                goto LABEL_94;
              }
              manager_removeCluster(a1, v16);
              if (gLogCategory_APEndpointManager > 50
                || gLogCategory_APEndpointManager == -1 && !_LogCategory_Initialize())
              {
LABEL_66:
                if (!v13 || !v26)
                {
LABEL_73:
                  CFSetApplyBlock();
                  CFArrayGetCount(v32);
                  CFArrayApplyBlock();
                  manager_notifyAvailableEndpointsChangedWithThrottleIfNeeded(a1, 1);
                  if (gLogCategory_APEndpointManager <= 50
                    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
                  {
                    LogPrintF();
                  }
                  uint64_t v10 = 0;
                  goto LABEL_78;
                }
                uint64_t v34 = manager_addClusterSubEndpoints();
                if (!v34)
                {
                  manager_removeCluster(a1, v26);
                  if (gLogCategory_APEndpointManager <= 50
                    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
                  {
                    CFSetGetCount(v30);
                    LogPrintF();
                  }
                  goto LABEL_73;
                }
                uint64_t v10 = v34;
LABEL_94:
                APSLogErrorAt();
LABEL_78:
                CFRelease(v32);
                goto LABEL_79;
              }
            }
            else if (v36)
            {
              if (!v38) {
                goto LABEL_66;
              }
              CFSetAddValue(v30, a2);
              if (gLogCategory_APEndpointManager > 50
                || gLogCategory_APEndpointManager == -1 && !_LogCategory_Initialize())
              {
                goto LABEL_66;
              }
            }
            else
            {
              manager_removeEndpointFromCluster((uint64_t)a1, v16, a2);
              CFSetAddValue(v30, a2);
              if (gLogCategory_APEndpointManager > 50
                || gLogCategory_APEndpointManager == -1 && !_LogCategory_Initialize())
              {
                goto LABEL_66;
              }
            }
            CFSetGetCount(v30);
            LogPrintF();
            goto LABEL_66;
          }
          APSLogErrorAt();
          uint64_t v10 = 4294960568;
          if (v26) {
LABEL_80:
          }
            CFRelease(v26);
        }
LABEL_81:
        if (v16) {
          CFRelease(v16);
        }
        goto LABEL_83;
      }
    }
    else
    {
      CFTypeRef v16 = 0;
    }
    int v20 = 0;
    char v36 = 1;
    goto LABEL_31;
  }
  APSLogErrorAt();
LABEL_3:
  uint64_t v10 = 0;
LABEL_83:
  if (v38) {
    CFRelease(v38);
  }
  return v10;
}

void manager_removeEndpointIfNeeded(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
  uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = *(void (**)(uint64_t, __CFString *, void, CFTypeRef *))(v8 + 48);
  if (v9) {
    v9(CMBaseObject, @"TransportDevice", *MEMORY[0x1E4F1CF80], &cf);
  }
  uint64_t v10 = APSGetFBOPropertyInt64();
  uint64_t v11 = 176;
  if (!v10) {
    uint64_t v11 = 168;
  }
  manager_removeEndpointForTransportDeviceIfNeeded(a1, cf, *(void *)(DerivedStorage + v11), a3);
  if (cf) {
    CFRelease(cf);
  }
}

uint64_t manager_addClusterSubEndpoints()
{
  CFArrayRef v7 = 0;
  uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
  uint64_t v1 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v1) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = 0;
  }
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, void, CFArrayRef *))(v2 + 48);
  if (!v3)
  {
    uint64_t v5 = 4294954514;
LABEL_9:
    APSLogErrorAt();
    goto LABEL_10;
  }
  uint64_t v4 = v3(CMBaseObject, *MEMORY[0x1E4F20FB0], *MEMORY[0x1E4F1CF80], &v7);
  if (v4)
  {
    uint64_t v5 = v4;
    goto LABEL_9;
  }
  uint64_t v5 = (uint64_t)v7;
  if (!v7) {
    return v5;
  }
  CFArrayGetCount(v7);
  CFArrayApplyBlock();
  uint64_t v5 = 0;
LABEL_10:
  if (v7) {
    CFRelease(v7);
  }
  return v5;
}

void __manager_updateEndpointClusterMembershipIfNeeded_block_invoke(uint64_t a1, void *value)
{
  if (*(void **)(a1 + 32) == value && *(unsigned char *)(a1 + 48)) {
    CFArrayInsertValueAtIndex(*(CFMutableArrayRef *)(a1 + 40), 0, value);
  }
  else {
    CFArrayAppendValue(*(CFMutableArrayRef *)(a1 + 40), value);
  }
}

void __manager_updateEndpointClusterMembershipIfNeeded_block_invoke_2(uint64_t a1, const void *a2)
{
  CFTypeRef cf = 0;
  if (*(unsigned char *)(a1 + 48) && *(const void **)(a1 + 32) == a2)
  {
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  else
  {
    int v3 = manager_copyOrCreateClusterForEndpoint(*(void *)(a1 + 40), a2, &cf);
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (v3)
    {
      APSLogErrorAt();
    }
    else
    {
      CFTypeRef v4 = cf;
      if (!cf) {
        return;
      }
      uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
      uint64_t value = 0;
      if (*(unsigned char *)(DerivedStorage + 2))
      {
        uint64_t v6 = DerivedStorage;
        uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
        uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 8);
        if (v8) {
          uint64_t v9 = v8;
        }
        else {
          uint64_t v9 = 0;
        }
        uint64_t v10 = *(void (**)(uint64_t, void, void, void **))(v9 + 48);
        if (v10 && (v10(CMBaseObject, *MEMORY[0x1E4F20F60], *MEMORY[0x1E4F1CF80], &value), value))
        {
          CFDictionarySetValue(*(CFMutableDictionaryRef *)(v6 + 216), a2, value);
          if (!APSGetFBOPropertyInt64())
          {
            CMNotificationCenterGetDefaultLocalCenter();
            FigNotificationCenterRemoveWeakListener();
            CMNotificationCenterGetDefaultLocalCenter();
            FigNotificationCenterRemoveWeakListener();
            APEndpointClusterAddSubEndpoint(v4, a2);
          }
        }
        else
        {
          APSLogErrorAt();
        }
        if (value) {
          CFRelease(value);
        }
      }
    }
  }
  if (cf) {
    CFRelease(cf);
  }
}

uint64_t manager_copyOrCreateClusterForEndpoint(const void *a1, uint64_t a2, void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v18 = 0;
  key = 0;
  int v17 = 0;
  uint64_t value = 0;
  CFTypeRef cf = 0;
  if (a3)
  {
    uint64_t v7 = DerivedStorage;
    if (*(unsigned char *)(DerivedStorage + 2)
      && (APEndpointCopyClusterInfo(a2, (uint64_t)&key, &v18, &v17, 0, 0, 0, (uint64_t)&cf), key))
    {
      uint64_t v8 = CFDictionaryGetValue(*(CFDictionaryRef *)(v7 + 224), key);
      if (v8)
      {
        uint64_t v9 = (void *)CFRetain(v8);
        uint64_t value = v9;
        if (v9)
        {
LABEL_16:
          uint64_t v13 = 0;
          *a3 = v9;
          uint64_t value = 0;
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t value = 0;
      }
      uint64_t v10 = APSGetFBOPropertyInt64();
      if (v10) {
        uint64_t v11 = (const void *)a2;
      }
      else {
        uint64_t v11 = 0;
      }
      uint64_t v12 = APEndpointClusterCreate((const __CFAllocator *)*MEMORY[0x1E4F1CF80], v11, key, v17, cf, v18, *(const void **)(v7 + 264), 0, (CFTypeRef *)&value);
      if (!v12)
      {
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterAddWeakListener();
        CMNotificationCenterGetDefaultLocalCenter();
        FigNotificationCenterAddWeakListener();
        if (v10)
        {
          manager_updateExposedLocalEndpoint((uint64_t)a1, value);
          if (manager_determineLocalClusterAction((uint64_t)a1, (uint64_t)value) == 1)
          {
            *(_DWORD *)(v7 + 328) = 0;
            manager_activateLocalCluster(a1, (uint64_t)value);
          }
        }
        CFDictionarySetValue(*(CFMutableDictionaryRef *)(v7 + 224), key, value);
        uint64_t v9 = value;
        goto LABEL_16;
      }
      uint64_t v13 = v12;
      APSLogErrorAt();
      if (value) {
        CFRelease(value);
      }
    }
    else
    {
      uint64_t v13 = 0;
    }
  }
  else
  {
    APSLogErrorAt();
    uint64_t v13 = 4294960591;
  }
LABEL_17:
  if (cf) {
    CFRelease(cf);
  }
  if (key) {
    CFRelease(key);
  }
  return v13;
}

void manager_notifyAvailableEndpointsChangedWithThrottleIfNeeded(void *a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2 || FigCFEqual() || FigCFEqual())
  {
    CFRetain(a1);
    uint64_t v5 = *(NSObject **)(DerivedStorage + 8);
    dispatch_async_f(v5, a1, (dispatch_function_t)manager_notifyAvailableEndpointsChangedWithThrottle);
  }
}

void __manager_addClusterSubEndpoints_block_invoke(uint64_t a1, const void *a2)
{
}

uint64_t manager_determineLocalClusterAction(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  if (!a2)
  {
    APSLogErrorAt();
    return a2;
  }
  uint64_t v4 = DerivedStorage;
  uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = *(void (**)(uint64_t, void, void, CFTypeRef *))(v7 + 48);
  if (v8)
  {
    v8(CMBaseObject, *MEMORY[0x1E4F20D80], *MEMORY[0x1E4F1CF80], &cf);
    CFTypeRef v9 = cf;
  }
  else
  {
    CFTypeRef v9 = 0;
  }
  int v10 = APEndpointFigEndpointClusterTypeToAPSClusterType(v9);
  if (v10 != 1)
  {
    if (v10 != 2 || *(_DWORD *)(v4 + 348) != 4) {
      goto LABEL_43;
    }
    if (APSGetFBOPropertyInt64())
    {
      if (gLogCategory_APEndpointManager > 50
        || gLogCategory_APEndpointManager == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_43;
      }
      goto LABEL_33;
    }
    if (gLogCategory_APEndpointManager > 50
      || gLogCategory_APEndpointManager == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (*(unsigned char *)(v4 + 352))
  {
    uint64_t v11 = APSGetFBOPropertyInt64();
    uint64_t v12 = APSGetFBOPropertyInt64();
    if (v11) {
      BOOL v13 = v12 == 0;
    }
    else {
      BOOL v13 = 0;
    }
    if (!v13)
    {
      if (!v11 && v12)
      {
        if (gLogCategory_APEndpointManager <= 50
          && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        a2 = 2;
        goto LABEL_44;
      }
      if (gLogCategory_APEndpointManager > 50
        || gLogCategory_APEndpointManager == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_43;
      }
LABEL_33:
      LogPrintF();
      goto LABEL_43;
    }
    if (gLogCategory_APEndpointManager > 50
      || gLogCategory_APEndpointManager == -1 && !_LogCategory_Initialize())
    {
LABEL_39:
      a2 = 1;
      goto LABEL_44;
    }
LABEL_30:
    LogPrintF();
    goto LABEL_39;
  }
LABEL_43:
  a2 = 0;
LABEL_44:
  if (cf) {
    CFRelease(cf);
  }
  return a2;
}

void manager_activateLocalCluster(const void *a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  if (!*(unsigned char *)(DerivedStorage + 1))
  {
    uint64_t v5 = DerivedStorage;
    uint64_t v6 = *MEMORY[0x1E4F1CF80];
    CFMutableSetRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (Mutable)
    {
      uint64_t v8 = Mutable;
      CFDictionarySetValue(Mutable, @"ActivatedByManager", (const void *)*MEMORY[0x1E4F1CFD0]);
      CFDictionarySetValue(v8, @"NetworkClock", *(const void **)(v5 + 264));
      CFTypeRef v9 = malloc_type_calloc(1uLL, 8uLL, 0x2004093837F09uLL);
      if (!v9) {
        goto LABEL_26;
      }
      int v10 = v9;
      *CFTypeRef v9 = CFRetain(a1);
      uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
      uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v12) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = 0;
      }
      int v14 = *(void (**)(uint64_t, void, uint64_t, CFTypeRef *))(v13 + 48);
      if (v14)
      {
        v14(CMBaseObject, *MEMORY[0x1E4F20D80], v6, &cf);
        CFTypeRef v15 = cf;
      }
      else
      {
        CFTypeRef v15 = 0;
      }
      int v16 = APEndpointFigEndpointClusterTypeToAPSClusterType(v15);
      if (gLogCategory_APEndpointManager <= 50
        && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
      {
        APSClusterTypeToDescriptionString();
        LogPrintF();
      }
      if (v16 == 2)
      {
        uint64_t v17 = 32;
      }
      else
      {
        if (v16 != 1)
        {
          if (gLogCategory_APEndpointManager <= 90
            && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          goto LABEL_27;
        }
        uint64_t v17 = 0;
      }
      uint64_t v18 = *(void *)(CMBaseObjectGetVTable() + 16);
      uint64_t v19 = v18 ? v18 : 0;
      int v20 = *(unsigned int (**)(uint64_t, uint64_t, __CFDictionary *, void, void *))(v19 + 8);
      if (!v20 || v20(a2, v17, v8, manager_activateLocalClusterCallback, v10)) {
LABEL_26:
      }
        APSLogErrorAt();
LABEL_27:
      CFRelease(v8);
      if (cf) {
        CFRelease(cf);
      }
      return;
    }
  }
  APSLogErrorAt();
}

void manager_activateLocalClusterCallback(const void *a1, uint64_t a2, uint64_t a3, int a4, const void **a5)
{
  uint64_t v8 = *a5;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointManager <= 50
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a4)
  {
    if (a4 == -16723)
    {
      if (gLogCategory_APEndpointManager <= 50
        && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    else
    {
      int v10 = *(_DWORD *)(DerivedStorage + 328);
      *(_DWORD *)(DerivedStorage + 328) = v10 + 1;
      if (v10 <= 4) {
        int v11 = 100;
      }
      else {
        int v11 = 1000;
      }
      if (v10 <= 9) {
        unsigned int v12 = v11;
      }
      else {
        unsigned int v12 = 5000;
      }
      if (v8) {
        CFRetain(v8);
      }
      if (a1) {
        CFRetain(a1);
      }
      if (gLogCategory_APEndpointManager <= 50
        && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      dispatch_time_t v13 = dispatch_time(0, 1000000 * v12);
      int v14 = *(NSObject **)(DerivedStorage + 8);
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 3221225472;
      block[2] = __manager_activateLocalClusterCallback_block_invoke;
      block[3] = &__block_descriptor_48_e5_v8__0l;
      block[4] = v8;
      void block[5] = a1;
      dispatch_after(v13, v14, block);
    }
  }
  else
  {
    *(_DWORD *)(DerivedStorage + 328) = 0;
  }
  if (v8) {
    CFRelease(v8);
  }
  free(a5);
}

void __manager_activateLocalClusterCallback_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
  manager_activateLocalCluster(v2, v3);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 64));
  uint64_t v5 = *(const void **)(a1 + 32);
  if (v5) {
    CFRelease(v5);
  }
  uint64_t v6 = *(const void **)(a1 + 40);
  if (v6)
  {
    CFRelease(v6);
  }
}

uint64_t manager_handleEndpointIsInUseDidChange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t result = CFDictionaryGetInt64();
  if (!result)
  {
    BOOL v8 = CFDictionaryGetInt64() != 0;
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
    manager_removeEndpointIfNeeded(a2, a4, v8);
    JUMPOUT(0x1D25EB390);
  }
  return result;
}

void manager_notifyAvailableEndpointsChangedWithThrottle(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CMTime v15 = *(CMTime *)*(void *)&MEMORY[0x1E4F1F9F8];
  HostTimeClocCFIndex k = CMClockGetHostTimeClock();
  CMClockGetTime(&v15, HostTimeClock);
  if ((*(unsigned char *)(DerivedStorage + 44) & 1) != 0
    && (time1 = *(CMTime *)(DerivedStorage + 32), CMTime time2 = v15, CMTimeCompare(&time1, &time2) > 0))
  {
    if (*(void *)(DerivedStorage + 56))
    {
      if (gLogCategory_APEndpointManager <= 10
        && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    else
    {
      CMTime time2 = *(CMTime *)(DerivedStorage + 32);
      CMTime rhs = v15;
      CMTimeSubtract(&time1, &time2, &rhs);
      CMTime time2 = time1;
      CMTimeConvertScale(&time1, &time2, 1000000000, kCMTimeRoundingMethod_RoundHalfAwayFromZero);
      if ((time1.flags & 0x1D) != 1) {
        goto LABEL_25;
      }
      int64_t value = time1.value;
      CMTime time2 = *(CMTime *)*(void *)&MEMORY[0x1E4F1FA48];
      if (CMTimeCompare(&time1, &time2) < 0) {
        goto LABEL_25;
      }
      if (gLogCategory_APEndpointManager <= 10
        && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      dispatch_source_t v5 = dispatch_source_create(MEMORY[0x1E4F14490], 0, 0, *(dispatch_queue_t *)(DerivedStorage + 8));
      *(void *)(DerivedStorage + 56) = v5;
      if (v5)
      {
        CFRetain(a1);
        uint64_t v6 = *(NSObject **)(DerivedStorage + 56);
        handler[0] = MEMORY[0x1E4F143A8];
        handler[1] = 3221225472;
        handler[2] = __manager_notifyAvailableEndpointsChangedWithThrottle_block_invoke;
        handler[3] = &__block_descriptor_40_e5_v8__0l;
        handler[4] = a1;
        dispatch_source_set_cancel_handler(v6, handler);
        uint64_t v7 = *(NSObject **)(DerivedStorage + 56);
        v10[0] = MEMORY[0x1E4F143A8];
        v10[1] = 3221225472;
        _OWORD v10[2] = __manager_notifyAvailableEndpointsChangedWithThrottle_block_invoke_2;
        v10[3] = &__block_descriptor_40_e5_v8__0l;
        v10[4] = a1;
        dispatch_source_set_event_handler(v7, v10);
        BOOL v8 = *(NSObject **)(DerivedStorage + 56);
        dispatch_time_t v9 = dispatch_time(0, value);
        dispatch_source_set_timer(v8, v9, 0xFFFFFFFFFFFFFFFFLL, 0x5F5E100uLL);
        dispatch_resume(*(dispatch_object_t *)(DerivedStorage + 56));
      }
      else
      {
LABEL_25:
        APSLogErrorAt();
        APSSignalErrorAt();
      }
    }
  }
  else
  {
    if (gLogCategory_APEndpointManager <= 10
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFRetain(a1);
    manager_notifyAvailableEndpointsChanged(a1);
  }
  if (a1) {
    CFRelease(a1);
  }
}

void __manager_notifyAvailableEndpointsChangedWithThrottle_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(const void **)(a1 + 32);
  if (v1) {
    CFRelease(v1);
  }
}

void __manager_notifyAvailableEndpointsChangedWithThrottle_block_invoke_2(uint64_t a1)
{
  CFRetain(*(CFTypeRef *)(a1 + 32));
  uint64_t v2 = *(const void **)(a1 + 32);
  manager_notifyAvailableEndpointsChanged(v2);
}

void manager_removeEndpointForTransportDeviceIfNeeded(void *a1, const void *a2, const __CFDictionary *a3, int a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2)
  {
    uint64_t v9 = DerivedStorage;
    if (a4) {
      CFSetAddValue(*(CFMutableSetRef *)(DerivedStorage + 184), a2);
    }
    if (CFDictionaryGetValue(a3, a2) && !APSGetFBOPropertyInt64() && CFSetContainsValue(*(CFSetRef *)(v9 + 184), a2))
    {
      manager_removeEndpointForTransportDevice(a1, a3, a2);
    }
  }
  else
  {
    APSLogErrorAt();
  }
}

void manager_removeEndpointForTransportDevice(void *a1, const __CFDictionary *a2, const void *a3)
{
  uint64_t DerivedStorage = (CFDictionaryRef *)CMBaseObjectGetDerivedStorage();
  uint64_t Value = CFDictionaryGetValue(a2, a3);
  if (Value)
  {
    BOOL v8 = Value;
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
    manager_updateEndpointClusterMembershipIfNeeded(a1, v8, 1, 0);
    if (!APSGetFBOPropertyInt64()) {
      manager_updateAggregatedInterruptingSessionStateIfNeeded((uint64_t)a1, v8, 0);
    }
    uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v9) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    int v11 = *(void (**)(const void *))(v10 + 32);
    if (v11) {
      v11(v8);
    }
    if (APTransportDeviceIsAssistedDevice())
    {
      APBrowserControllerRemoveInjectedEndpoint();
      if (gLogCategory_APEndpointManager <= 50
        && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    CFDictionaryRemoveValue(a2, a3);
    if (!CFDictionaryContainsKey(DerivedStorage[21], a3) && !CFDictionaryContainsKey(DerivedStorage[22], a3)) {
      CFSetRemoveValue(DerivedStorage[23], a3);
    }
    manager_notifyAvailableEndpointsChangedWithThrottleIfNeeded(a1, 1);
  }
}

void manager_handleInterruptingSessionStateDidChange(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  BOOL v7 = CFDictionaryGetInt64() != 0;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
  manager_updateAggregatedInterruptingSessionStateIfNeeded(a2, a4, v7);
  JUMPOUT(0x1D25EB390);
}

CFIndex manager_updateAggregatedInterruptingSessionStateIfNeeded(uint64_t a1, const void *a2, int a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v6 = CMBaseObjectGetDerivedStorage();
  CFIndex Count = CFSetGetCount(*(CFSetRef *)(v6 + 208));
  int v8 = CFSetContainsValue(*(CFSetRef *)(DerivedStorage + 208), a2);
  if (a3)
  {
    if (!v8)
    {
      CFSetSetValue(*(CFMutableSetRef *)(DerivedStorage + 208), a2);
      goto LABEL_15;
    }
    if (gLogCategory_APEndpointManager <= 90
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      goto LABEL_11;
    }
  }
  else
  {
    if (v8)
    {
      CFSetRemoveValue(*(CFMutableSetRef *)(DerivedStorage + 208), a2);
      goto LABEL_15;
    }
    if (gLogCategory_APEndpointManager <= 30
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
LABEL_11:
      LogPrintF();
    }
  }
LABEL_15:
  uint64_t v9 = CMBaseObjectGetDerivedStorage();
  CFIndex result = CFSetGetCount(*(CFSetRef *)(v9 + 208));
  if (Count > 0 != result > 0)
  {
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return manager_getAndPostSenderStateUpdate();
  }
  return result;
}

uint64_t manager_getAndPostSenderStateUpdate()
{
  CFTypeRef cf = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v1 = *MEMORY[0x1E4F1CF80];
  CFMutableSetRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!Mutable)
  {
    APSLogErrorAt();
    uint64_t v11 = 4294960568;
    goto LABEL_18;
  }
  if (*(void *)(DerivedStorage + 240))
  {
    uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
    uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v4) {
      uint64_t v5 = v4;
    }
    else {
      uint64_t v5 = 0;
    }
    uint64_t v6 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v5 + 48);
    if (v6)
    {
      uint64_t v7 = v6(CMBaseObject, @"LocalRouteState", v1, &cf);
      if (!v7)
      {
        FigCFDictionarySetValueFromKeyInDict();
        FigCFDictionarySetValueFromKeyInDict();
        FigCFDictionarySetValueFromKeyInDict();
        goto LABEL_9;
      }
      uint64_t v11 = v7;
    }
    else
    {
      uint64_t v11 = 4294954514;
    }
    APSLogErrorAt();
    goto LABEL_18;
  }
LABEL_9:
  uint64_t v8 = CMBaseObjectGetDerivedStorage();
  CFIndex Count = CFSetGetCount(*(CFSetRef *)(v8 + 208));
  uint64_t v10 = (const void **)MEMORY[0x1E4F1CFD0];
  if (Count < 1) {
    uint64_t v10 = (const void **)MEMORY[0x1E4F1CFC8];
  }
  CFDictionarySetValue(Mutable, @"NonBuddyConnectionActive", *v10);
  if (gLogCategory_APEndpointManager <= 50
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFRetain(Mutable);
  unsigned int v12 = *(NSObject **)(DerivedStorage + 8);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __manager_getAndPostSenderStateUpdate_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  block[4] = Mutable;
  dispatch_async(v12, block);
  uint64_t v11 = 0;
LABEL_18:
  if (cf) {
    CFRelease(cf);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  return v11;
}

void __manager_getAndPostSenderStateUpdate_block_invoke(uint64_t a1)
{
  APSXPCServerPostEvent();
  uint64_t v2 = *(const void **)(a1 + 32);
  CFRelease(v2);
}

BOOL manager_areEndpointsPresent()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  BOOL v1 = CFDictionaryGetCount(*(CFDictionaryRef *)(DerivedStorage + 168)) > 0 || *(unsigned char *)(DerivedStorage + 96) != 0;
  if (gLogCategory_APEndpointManager <= 30
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v1;
}

uint64_t manager_copyHierarchy(uint64_t a1, const __CFAllocator *a2, void *a3)
{
  CMBaseObjectGetDerivedStorage();
  uint64_t v19 = 0;
  int v20 = &v19;
  uint64_t v21 = 0x2020000000;
  uint64_t v22 = 0;
  CFMutableStringRef Mutable = CFStringCreateMutable(a2, 0x100000);
  v20[3] = (uint64_t)Mutable;
  if (!Mutable)
  {
    APSLogErrorAt();
    uint64_t v11 = 4294950585;
    goto LABEL_12;
  }
  CFStringAppendF();
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 3221225472;
  int v16 = __manager_copyHierarchy_block_invoke;
  uint64_t v17 = &unk_1E6891D20;
  uint64_t v18 = &v19;
  APSHierarchyReporterProtocolGetProtocolID();
  Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
  if (ProtocolVTable && (uint64_t v8 = *(void *)(ProtocolVTable + 16)) != 0)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, void, void, void, void *))(v8 + 8);
    if (v9)
    {
      uint64_t v10 = v9(a1, 0, 0, 0, v15);
      uint64_t v11 = v10;
      if (v10 != -12782 && v10 != -12788) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v11 = 4294954514;
    }
  }
  else
  {
    uint64_t v11 = 4294954508;
  }
  uint64_t v11 = ((uint64_t (*)(void *, void, const char *, ...))v16)(v15, 0, "[Error] Object:[%{ptr}]%?s%?''@ cannot be dumped (error %#m) Parent:[%{ptr}]\n", a1, 0, " ", 0, 0, v11, 0);
LABEL_10:
  if (v11)
  {
    APSLogErrorAt();
  }
  else
  {
    unsigned int v12 = v20;
    *a3 = v20[3];
    v12[3] = 0;
  }
LABEL_12:
  dispatch_time_t v13 = (const void *)v20[3];
  if (v13) {
    CFRelease(v13);
  }
  _Block_object_dispose(&v19, 8);
  return v11;
}

void sub_1D0999078(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

BOOL manager_isEndpointLocalAndSuppressed()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  return (*(unsigned char *)(DerivedStorage + 160) || *(unsigned char *)(DerivedStorage + 161)) && APSGetFBOPropertyInt64() != 0;
}

void manager_copyEndpointInfoForShowInfo(CFArrayRef theArray, __CFArray **a2, __CFArray **a3)
{
  int64_t value = 0;
  if (theArray) {
    uint64_t Count = CFArrayGetCount(theArray);
  }
  else {
    uint64_t Count = 0;
  }
  CFAllocatorRef v7 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], Count, MEMORY[0x1E4F1D510]);
  if (Mutable)
  {
    uint64_t v9 = Mutable;
    uint64_t v10 = CFArrayCreateMutable(v7, Count, MEMORY[0x1E4F1D510]);
    if (v10)
    {
      int v16 = a3;
      if (Count >= 1)
      {
        for (CFIndex i = 0; i != Count; ++i)
        {
          CFArrayGetValueAtIndex(theArray, i);
          int64_t value = 0;
          uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
          uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v13) {
            uint64_t v14 = v13;
          }
          else {
            uint64_t v14 = 0;
          }
          CMTime v15 = *(void (**)(uint64_t, __CFString *, const __CFAllocator *, void **))(v14 + 48);
          if (v15) {
            v15(CMBaseObject, @"EndpointShowInfo", v7, &value);
          }
          if (value)
          {
            CFArrayAppendValue(v9, value);
            if (CFDictionaryGetInt64()) {
              CFArrayAppendValue(v10, value);
            }
            if (value)
            {
              CFRelease(value);
              int64_t value = 0;
            }
          }
        }
      }
      if (a2)
      {
        *a2 = v10;
        uint64_t v10 = 0;
      }
      if (v16)
      {
        *int v16 = v9;
        if (!v10) {
          return;
        }
        goto LABEL_23;
      }
    }
    else
    {
      APSLogErrorAt();
    }
    CFRelease(v9);
    if (!v10) {
      return;
    }
LABEL_23:
    CFRelease(v10);
    return;
  }
  APSLogErrorAt();
}

CFDictionaryRef manager_AppendEndpointShowInfo(const __CFDictionary *result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    CFDictionaryRef v5 = result;
    CFDictionaryGetValue(result, @"EndpointHash");
    DataBuffer_AppendF();
    CFDictionaryGetValue(v5, @"Name");
    DataBuffer_AppendF();
    uint64_t Int64 = CFDictionaryGetInt64();
    if (CFDictionaryGetInt64())
    {
      CFDictionaryGetValue(v5, @"PersistentGroupType");
      CFDictionaryGetValue(v5, @"PersistentGroupUUID");
      CFDictionaryGetInt64Ranged();
      CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue(v5, @"SubEndpointShowInfoDicts");
      if (Value)
      {
        CFArrayRef v8 = Value;
        CFIndex Count = CFArrayGetCount(Value);
        CFIndex result = (const __CFDictionary *)DataBuffer_AppendF();
        if (Count >= 1)
        {
          for (CFIndex i = 0; i != Count; ++i)
          {
            CFUUIDRef ValueAtIndex = CFArrayGetValueAtIndex(v8, i);
            DataBuffer_AppendF();
            CFIndex result = (const __CFDictionary *)manager_AppendEndpointShowInfo(ValueAtIndex, a2, a3);
          }
        }
      }
      else
      {
        return (const __CFDictionary *)DataBuffer_AppendF();
      }
    }
    else
    {
      if (CFDictionaryGetValue(v5, @"DiscoveryID")) {
        DataBuffer_AppendF();
      }
      CFDictionaryGetValue(v5, @"DeviceID");
      DataBuffer_AppendF();
      CFDictionaryGetValue(v5, @"Model");
      DataBuffer_AppendF();
      CFDictionaryGetValue(v5, @"SourceVersion");
      DataBuffer_AppendF();
      CFDictionaryGetValue(v5, @"Hidden");
      DataBuffer_AppendF();
      CFDictionaryGetValue(v5, @"AirPlayFeatures");
      APSFeaturesCopyStringRepresentation();
      DataBuffer_AppendF();
      CFDictionaryGetInt64();
      DataBuffer_AppendF();
      CFDictionaryGetValue(v5, @"Started");
      DataBuffer_AppendF();
      CFDictionaryGetInt64();
      DataBuffer_AppendF();
      CFDictionaryGetValue(v5, @"IsRemoteControlEndpoint");
      DataBuffer_AppendF();
      CFDictionaryGetValue(v5, @"IsClusterLeader");
      DataBuffer_AppendF();
      CFDictionaryGetInt64Ranged();
      DataBuffer_AppendF();
      CFDictionaryGetInt64Ranged();
      DataBuffer_AppendF();
      if (Int64) {
        DataBuffer_AppendF();
      }
      CFDictionaryRef v12 = (const __CFDictionary *)CFDictionaryGetValue(v5, @"SenderSessionInfo");
      if (v12)
      {
        CFDictionaryRef v13 = (const __CFDictionary *)CFDictionaryGetValue(v12, @"TransportSessionInfo");
        if (v13)
        {
          if (CFDictionaryGetValue(v13, (const void *)*MEMORY[0x1E4F476D8])) {
            DataBuffer_AppendF();
          }
        }
      }
      CFIndex result = (const __CFDictionary *)DataBuffer_AppendF();
      if (a2)
      {
        uint64_t v14 = CFDictionaryGetValue(v5, @"StreamInfo_Screen");
        manager_AppendEndpointStreamShowInfo((uint64_t)v14);
        CMTime v15 = CFDictionaryGetValue(v5, @"StreamInfo_RealTimeAudio");
        manager_AppendEndpointStreamShowInfo((uint64_t)v15);
        int v16 = CFDictionaryGetValue(v5, @"StreamInfo_BufferedAudio");
        manager_AppendEndpointStreamShowInfo((uint64_t)v16);
        uint64_t v17 = CFDictionaryGetValue(v5, @"StreamInfo_LowLatencyAudio");
        return (const __CFDictionary *)manager_AppendEndpointStreamShowInfo((uint64_t)v17);
      }
    }
  }
  return result;
}

void __manager_copyShowInfo_block_invoke(uint64_t a1, const void *a2, CFDictionaryRef theDict)
{
  CFArrayRef Value = CFDictionaryGetValue(theDict, (const void *)*MEMORY[0x1E4F4A198]);
  CFAllocatorRef v7 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFIndex Count = CFDictionaryGetCount(theDict);
  CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy(v7, Count + 1, theDict);
  if (!MutableCopy) {
    __manager_copyShowInfo_block_invoke_cold_1();
  }
  uint64_t v10 = MutableCopy;
  CFDictionaryAddValue(MutableCopy, @"deviceID", a2);
  uint64_t v11 = CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 40), Value);
  if (v11 && (CFDictionaryRef v12 = (__CFArray *)CFRetain(v11)) != 0)
  {
    CFMutableArrayRef Mutable = v12;
    CFArrayAppendValue(v12, v10);
  }
  else
  {
    CFMutableArrayRef Mutable = CFArrayCreateMutable(v7, 0, MEMORY[0x1E4F1D510]);
    CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 40), Value, Mutable);
    CFArrayAppendValue(Mutable, v10);
    if (!Mutable) {
      goto LABEL_7;
    }
  }
  CFRelease(Mutable);
LABEL_7:
  CFRelease(v10);
}

void __manager_copyShowInfo_block_invoke_2(int a1, int a2, CFArrayRef theArray)
{
  CFDictionaryRef ValueAtIndex = (const __CFDictionary *)CFArrayGetValueAtIndex(theArray, 0);
  CFIndex Count = CFArrayGetCount(theArray);
  CFDictionaryGetValue(ValueAtIndex, (const void *)*MEMORY[0x1E4F4A180]);
  DataBuffer_AppendF();
  if (Count >= 1)
  {
    CFDictionaryRef v6 = (const __CFDictionary *)CFArrayGetValueAtIndex(theArray, 0);
    CFStringRef Value = (const __CFString *)CFDictionaryGetValue(v6, @"deviceID");
    if (Value)
    {
      CFStringRef v8 = Value;
      CFAllocatorRef v9 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
      uint64_t v10 = (const void *)*MEMORY[0x1E4F4A178];
      CFIndex v11 = 1;
      CFDictionaryRef v12 = (const void *)*MEMORY[0x1E4F4A170];
      while (1)
      {
        CFIndex Length = CFStringGetLength(v8);
        CFMutableDictionaryRef MutableCopy = CFStringCreateMutableCopy(v9, Length, v8);
        if (!MutableCopy) {
          break;
        }
        CMTime v15 = MutableCopy;
        CFStringTrim(MutableCopy, @"PSGDataSource::PSGInfo::");
        DataBuffer_AppendF();
        if (CFDictionaryContainsKey(v6, v10))
        {
          CFDictionaryGetValue(v6, v10);
          DataBuffer_AppendF();
        }
        if (CFDictionaryContainsKey(v6, v12))
        {
          CFDictionaryGetInt64();
          DataBuffer_AppendF();
        }
        DataBuffer_AppendF();
        if (Count == v11) {
          goto LABEL_12;
        }
        CFDictionaryRef v6 = (const __CFDictionary *)CFArrayGetValueAtIndex(theArray, v11);
        CFStringRef v8 = (const __CFString *)CFDictionaryGetValue(v6, @"deviceID");
        ++v11;
        if (!v8) {
          goto LABEL_11;
        }
      }
      APSLogErrorAt();
    }
    else
    {
      CMTime v15 = 0;
LABEL_11:
      APSLogErrorAt();
      if (v15)
      {
LABEL_12:
        CFRelease(v15);
      }
    }
  }
}

uint64_t manager_AppendEndpointStreamShowInfo(uint64_t result)
{
  if (result)
  {
    CFDictionaryRef v1 = (const __CFDictionary *)result;
    CFDictionaryGetInt64();
    DataBuffer_AppendF();
    CFDictionaryGetInt64();
    DataBuffer_AppendF();
    CFDictionaryGetValue(v1, @"Type");
    DataBuffer_AppendF();
    int64_t value = (void *)CFDictionaryGetValue(v1, @"Subtype");
    if (value) {
      DataBuffer_AppendF();
    }
    CFDictionaryGetValue(v1, @"Name");
    DataBuffer_AppendF();
    if (CFDictionaryGetValueIfPresent(v1, @"ScreenInfo", (const void **)&value))
    {
      uint64_t v2 = (const void *)FigCFCopyCompactDescription();
      DataBuffer_AppendF();
      if (v2) {
        CFRelease(v2);
      }
    }
    return DataBuffer_AppendF();
  }
  return result;
}

uint64_t __manager_copyHierarchy_block_invoke()
{
  uint64_t v0 = CFStringAppendF();
  if (v0)
  {
    uint64_t v1 = v0;
    goto LABEL_5;
  }
  uint64_t v1 = CFStringAppendV();
  if (v1) {
LABEL_5:
  }
    APSLogErrorAt();
  return v1;
}

uint64_t manager_DumpHierarchy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v22 = 0;
  (*(void (**)(uint64_t, uint64_t, const char *, ...))(a5 + 16))(a5, a3, "EndpointManager:[%{ptr}] (AirPlay)\n", a1);
  CFStringRef v8 = manager_copyEndpoints(a1, 0);
  if (!v8)
  {
    APSLogErrorAt();
    return 4294950585;
  }
  CFArrayRef v9 = v8;
  CFIndex Count = CFArrayGetCount(v8);
  if (Count < 1) {
    goto LABEL_3;
  }
  CFIndex v12 = Count;
  CFIndex v13 = 0;
  uint64_t v14 = a3 + 1;
  while (1)
  {
    CFDictionaryRef ValueAtIndex = CFArrayGetValueAtIndex(v9, v13);
    uint64_t v16 = APSGetFBOPropertyInt64();
    if (v22)
    {
      if (gLogCategory_APEndpointManager <= 90
        && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      unsigned int v22 = 0;
    }
    if (!v16) {
      goto LABEL_23;
    }
    APSHierarchyReporterProtocolGetProtocolID();
    Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
    if (!ProtocolVTable || (uint64_t v18 = *(void *)(ProtocolVTable + 16)) == 0)
    {
      uint64_t v20 = 4294954508;
LABEL_21:
      LODWORD(v20) = (*(uint64_t (**)(uint64_t, uint64_t, const char *, ...))(a5 + 16))(a5, v14, "[Error] Object:[%{ptr}]%?s%?''@ cannot be dumped (error %#m) Parent:[%{ptr}]\n", ValueAtIndex, 0, " ", 0, 0, v20, a1);
      goto LABEL_22;
    }
    uint64_t v19 = *(uint64_t (**)(const void *, uint64_t, uint64_t, void, uint64_t))(v18 + 8);
    if (!v19)
    {
      uint64_t v20 = 4294954514;
      goto LABEL_21;
    }
    uint64_t v20 = v19(ValueAtIndex, a1, v14, 0, a5);
    if (v20 == -12782 || v20 == -12788) {
      goto LABEL_21;
    }
LABEL_22:
    unsigned int v22 = v20;
    if (v20) {
      break;
    }
LABEL_23:
    if (v12 == ++v13) {
      goto LABEL_3;
    }
  }
  APSLogErrorAt();
LABEL_3:
  CFRelease(v9);
  return v22;
}

uint64_t manager_ConfigureForMaximumDiscovery()
{
  CMBaseObjectGetDerivedStorage();
  uint64_t v0 = APBrowserControllerConfigureForMaximumDiscovery();
  if (v0) {
    APSLogErrorAt();
  }
  return v0;
}

uint64_t manager_CreateAggregateEndpoint(uint64_t a1, int a2, void **a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int64_t value = 0;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
  if (a2 == 3)
  {
    uint64_t v8 = APEndpointAggregateCreateAsSystemRemotePool(*MEMORY[0x1E4F1CF80], &value);
    if (v8)
    {
      uint64_t v7 = v8;
      goto LABEL_20;
    }
    goto LABEL_6;
  }
  if (!a2)
  {
    uint64_t v6 = APEndpointAggregateCreateAsSystemMusicAggregate(*MEMORY[0x1E4F1CF80], *(_DWORD *)(DerivedStorage + 4), *(const void **)(DerivedStorage + 264), &value);
    if (v6)
    {
      uint64_t v7 = v6;
LABEL_20:
      APSLogErrorAt();
      goto LABEL_16;
    }
LABEL_6:
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFArrayAppendValue(*(CFMutableArrayRef *)(DerivedStorage + 192), value);
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterAddWeakListener();
    uint64_t v7 = 0;
    *a3 = value;
    int64_t value = 0;
    goto LABEL_16;
  }
  if (gLogCategory_APEndpointManager <= 90
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v7 = 4294950586;
LABEL_16:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 64));
  if (value) {
    CFRelease(value);
  }
  return v7;
}

uint64_t manager_CopyRemoteControlDepotEndpoint(uint64_t a1, void *a2)
{
  unsigned int v8 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  v7[0] = a1;
  v7[1] = a2;
  v7[2] = &v8;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
  if (manager_CopyRemoteControlDepotEndpoint_createDepotOnce != -1) {
    dispatch_once_f(&manager_CopyRemoteControlDepotEndpoint_createDepotOnce, v7, (dispatch_function_t)manager_createRemoteControlEndpointDepotInternalOnce);
  }
  CFTypeRef v5 = *(CFTypeRef *)(DerivedStorage + 200);
  if (v5) {
    CFTypeRef v5 = CFRetain(v5);
  }
  *a2 = v5;
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 64));
  return v8;
}

void manager_handleAggregateEndpointDissociated(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointManager <= 50
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
  CMNotificationCenterGetDefaultLocalCenter();
  FigNotificationCenterRemoveWeakListener();
  CFArrayRef v6 = *(const __CFArray **)(DerivedStorage + 192);
  v9.length = CFArrayGetCount(v6);
  v9.locatioCFIndex n = 0;
  FirstIndexOfCFStringRef Value = CFArrayGetFirstIndexOfValue(v6, v9, a4);
  if (FirstIndexOfValue == -1) {
    APSLogErrorAt();
  }
  else {
    CFArrayRemoveValueAtIndex(*(CFMutableArrayRef *)(DerivedStorage + 192), FirstIndexOfValue);
  }
  JUMPOUT(0x1D25EB390);
}

uint64_t manager_createRemoteControlEndpointDepotInternalOnce(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int AsSystemRemotePool = APEndpointAggregateCreateAsSystemRemotePool(*MEMORY[0x1E4F1CF80], (void *)(DerivedStorage + 200));
  if (AsSystemRemotePool)
  {
    uint64_t result = APSLogErrorAt();
  }
  else
  {
    CMNotificationCenterGetDefaultLocalCenter();
    uint64_t result = FigNotificationCenterAddWeakListener();
  }
  **(_DWORD **)(a1 + 16) = AsSystemRemotePool;
  return result;
}

void manager_deactivateLocalCluster(uint64_t a1, uint64_t a2, int a3)
{
  CFMutableArrayRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    CFArrayRef v6 = Mutable;
    uint64_t v7 = (const void *)*MEMORY[0x1E4F1CFD0];
    CFDictionarySetValue(Mutable, @"ActivatedByManager", (const void *)*MEMORY[0x1E4F1CFD0]);
    if (a3) {
      unsigned int v8 = v7;
    }
    else {
      unsigned int v8 = (const void *)*MEMORY[0x1E4F1CFC8];
    }
    CFDictionarySetValue(v6, @"ForceClusterChange", v8);
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v9) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    CFIndex v11 = *(unsigned int (**)(uint64_t, __CFDictionary *, void, void))(v10 + 16);
    if (!v11 || v11(a2, v6, 0, 0)) {
      APSLogErrorAt();
    }
    CFRelease(v6);
  }
  else
  {
    APSLogErrorAt();
  }
}

void manager_updatePSGInfoOnEndpoint()
{
  CFTypeRef cf = 0;
  uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
  uint64_t v1 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v1) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = 0;
  }
  uint64_t v3 = *(void (**)(uint64_t, void, void, CFTypeRef *))(v2 + 48);
  if (v3)
  {
    v3(CMBaseObject, *MEMORY[0x1E4F20E38], *MEMORY[0x1E4F1CF80], &cf);
    if (cf)
    {
      uint64_t Value = FigCFDictionaryGetValue();
      if (Value)
      {
        uint64_t v5 = Value;
        if (gLogCategory_APEndpointManager <= 30
          && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t v6 = FigEndpointGetCMBaseObject();
        uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 8);
        if (v7) {
          uint64_t v8 = v7;
        }
        else {
          uint64_t v8 = 0;
        }
        uint64_t v9 = *(void (**)(uint64_t, __CFString *, uint64_t))(v8 + 56);
        if (v9) {
          v9(v6, @"PermanentSpeakerGroupingInfo", v5);
        }
      }
      if (cf) {
        CFRelease(cf);
      }
    }
  }
}

void manager_handleLocalRouteStateChanged()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
  manager_getAndPostSenderStateUpdate();
  JUMPOUT(0x1D25EB390);
}

void manager_handleClusterChangeDeactivationFinish(uint64_t a1, void *a2, uint64_t a3, const void *a4, const __CFDictionary *a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v9 = APSGetFBOPropertyInt64();
  if (v9) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = 0;
  }
  if (v9) {
    uint64_t Value = 0;
  }
  else {
    uint64_t Value = a4;
  }
  if (gLogCategory_APEndpointManager <= 50
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
  if (v10)
  {
    if (a5) {
      uint64_t Value = CFDictionaryGetValue(a5, @"SourceEndpoint");
    }
    a4 = Value;
    if (!Value)
    {
      if (gLogCategory_APEndpointManager <= 90
        && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      manager_removeCluster((uint64_t)a2, v10);
      goto LABEL_27;
    }
  }
  else if (!Value)
  {
    goto LABEL_27;
  }
  if (gLogCategory_APEndpointManager <= 50
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (manager_updateEndpointClusterMembershipIfNeeded(a2, a4, 0, 1)) {
    APSLogErrorAt();
  }
LABEL_27:
  if (*(unsigned char *)(DerivedStorage + 160))
  {
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(DerivedStorage + 160) = 0;
    uint64_t v12 = CMBaseObjectGetDerivedStorage();
    CFIndex v13 = CFDictionaryGetValue(*(CFDictionaryRef *)(v12 + 216), *(const void **)(v12 + 256));
    CFDictionaryGetValue(*(CFDictionaryRef *)(v12 + 224), v13);
    CFArrayRef v14 = (const __CFArray *)FigCFDictionaryCopyArrayOfValues();
    if (CFArrayGetCount(v14) < 1) {
      goto LABEL_61;
    }
    int v15 = 0;
    CFIndex v16 = 0;
    do
    {
      CFDictionaryRef ValueAtIndex = CFArrayGetValueAtIndex(v14, v16);
      uint64_t v18 = APSGetFBOPropertyInt64();
      int v19 = FigCFEqual();
      if (v18)
      {
        if (!v19)
        {
          if (gLogCategory_APEndpointManager <= 90
            && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          manager_removeCluster((uint64_t)a2, ValueAtIndex);
          int v15 = -71790;
        }
      }
      else if (v19)
      {
        int v15 = -71790;
        if (gLogCategory_APEndpointManager <= 90
          && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
      ++v16;
    }
    while (v16 < CFArrayGetCount(v14));
    if (!v15)
    {
LABEL_61:
      if (gLogCategory_APEndpointManager <= 30
        && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    if (v14) {
      CFRelease(v14);
    }
  }
  CFRetain(a2);
  dispatch_async_f(*(dispatch_queue_t *)(DerivedStorage + 8), a2, (dispatch_function_t)manager_notifyAvailableEndpointsChanged);
  JUMPOUT(0x1D25EB390);
}

BOOL manager_exposedLocalEndpointIsPersistentlyConnectedCluster()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  if (!*(void *)(DerivedStorage + 256)) {
    return 0;
  }
  uint64_t v1 = DerivedStorage;
  if (FigCFEqual())
  {
LABEL_12:
    BOOL v8 = 0;
    goto LABEL_14;
  }
  uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
  uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = *(void (**)(uint64_t, void, void, CFTypeRef *))(v4 + 48);
  if (v5)
  {
    v5(CMBaseObject, *MEMORY[0x1E4F20D80], *MEMORY[0x1E4F1CF80], &cf);
    CFTypeRef v6 = cf;
  }
  else
  {
    CFTypeRef v6 = 0;
  }
  int v7 = APEndpointFigEndpointClusterTypeToAPSClusterType(v6);
  if (v7 != 1)
  {
    if (v7 == 2)
    {
      BOOL v8 = *(_DWORD *)(v1 + 348) == 4;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  BOOL v8 = *(unsigned char *)(v1 + 352) != 0;
LABEL_14:
  if (cf) {
    CFRelease(cf);
  }
  return v8;
}

void manager_handleClusterChangeDeactivationRequired(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t Int64 = CFDictionaryGetInt64();
  if (gLogCategory_APEndpointManager <= 50
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
  if (Int64 && !*(unsigned char *)(DerivedStorage + 160))
  {
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(DerivedStorage + 160) = Int64 != 0;
    CFRetain(a2);
    dispatch_async_f(*(dispatch_queue_t *)(DerivedStorage + 8), a2, (dispatch_function_t)manager_notifyAvailableEndpointsChanged);
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 64));
  manager_deactivateLocalCluster((uint64_t)a2, a4, 0);
}

void manager_handleNonPersistentReceiverSessionStartedOnLocalHTSecondary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a5)
  {
    CFMutableDictionaryRef v6 = 0;
LABEL_5:
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    APSXPCServerPostEvent();
    if (v6)
    {
      CFRelease(v6);
    }
    return;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    CFMutableDictionaryRef v6 = Mutable;
    FigCFDictionarySetValueFromKeyInDict();
    FigCFDictionarySetValueFromKeyInDict();
    goto LABEL_5;
  }
  APSLogErrorAt();
}

void __manager_asyncRegisterAirPlayHALDriverInternal_block_invoke(uint64_t a1)
{
  if (gLogCategory_APEndpointManager <= 50
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v2 = *(const void **)(a1 + 32);
  manager_AudioServerPluginInterruptionHandler(v2);
}

void manager_AudioServerPluginInterruptionHandler(const void *a1)
{
  uint64_t v2 = FigCFWeakReferenceHolderCopyReferencedObject();
  if (v2)
  {
    uint64_t v3 = (const void *)v2;
    uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (a1) {
      CFRetain(a1);
    }
    dispatch_time_t v5 = dispatch_time(0, 1000000000);
    CFMutableDictionaryRef v6 = *(NSObject **)(DerivedStorage + 8);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __manager_AudioServerPluginInterruptionHandler_block_invoke;
    block[3] = &__block_descriptor_40_e5_v8__0l;
    block[4] = a1;
    dispatch_after(v5, v6, block);
    CFRelease(v3);
  }
}

void __manager_asyncStartNetworkClock_block_invoke(uint64_t a1)
{
  for (uint64_t i = *(void *)(a1 + 32); !*(unsigned char *)(i + 1); uint64_t i = *(void *)(a1 + 32))
  {
    if (gLogCategory_APEndpointManager <= 30)
    {
      if (gLogCategory_APEndpointManager != -1 || (int v3 = _LogCategory_Initialize(), i = *(void *)(a1 + 32), v3))
      {
        LogPrintF();
        uint64_t i = *(void *)(a1 + 32);
      }
    }
    uint64_t v4 = *(void *)(i + 264);
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v6) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 0;
    }
    BOOL v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 80);
    if (v8) {
      int v9 = v8(v4, v5);
    }
    else {
      int v9 = -12782;
    }
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (!v9) {
      break;
    }
    sleep(2u);
  }
  uint64_t v10 = *(const void **)(a1 + 40);
  CFRelease(v10);
}

void __manager_initAndStartDeviceMetricsTimer_block_invoke()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (APSRTCReportingAgentCreate())
  {
    APSLogErrorAt();
  }
  else
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (Mutable)
    {
      uint64_t v2 = Mutable;
      MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
      CFSetRef v3 = *(const __CFSet **)(DerivedStorage + 248);
      if (v3)
      {
        unsigned int Count = CFSetGetCount(v3);
        uint64_t v5 = 5;
        do
        {
          if (v5 == -1) {
            break;
          }
          unsigned int v6 = dword_1D0B886A0[v5--];
        }
        while (v6 > Count);
        FigCFDictionarySetInt32();
        FigCFDictionarySetInt32();
        CFDictionarySetValue(v2, @"sessionType", @"Discovery");
        APSRTCReportingAgentSendEvent();
        if (gLogCategory_APEndpointManager <= 30
          && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        CFSetRemoveAllValues(*(CFMutableSetRef *)(DerivedStorage + 248));
        if (gLogCategory_APEndpointManager <= 50
          && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        *(void *)(DerivedStorage + 320) = 0;
      }
      MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 64));
      CFRelease(v2);
    }
  }
}

uint64_t manager_setAVDevicePresence(uint64_t a1, char a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int v4 = manager_areEndpointsPresent();
  *(unsigned char *)(DerivedStorage + 96) = a2;
  uint64_t result = manager_areEndpointsPresent();
  if (v4 != result)
  {
    if (gLogCategory_APEndpointManager <= 40
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return manager_postEndpointPresentChangedNotification();
  }
  return result;
}

uint64_t manager_postEndpointPresentChangedNotification()
{
  CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointManager <= 40
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CMNotificationCenterGetDefaultLocalCenter();
  return FigDispatchAsyncPostNotification();
}

uint64_t manager_injectEndpoint(void *a1, const __CFDictionary *a2, const void *a3, const void *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 64));
  if (CFDictionaryGetValue(*(CFDictionaryRef *)(DerivedStorage + 168), a3))
  {
    if (gLogCategory_APEndpointManager <= 90
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    manager_removeEndpointForTransportDeviceIfNeeded(a1, a3, *(const __CFDictionary **)(DerivedStorage + 168), 1);
  }
  uint64_t Int64 = CFDictionaryGetInt64();
  uint64_t Value = CFDictionaryGetValue(a2, @"AuthString");
  if (Int64)
  {
    uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
    uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v12) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    CFArrayRef v14 = *(uint64_t (**)(uint64_t, __CFString *, void))(v13 + 56);
    if (!v14)
    {
      uint64_t v18 = 4294954514;
      goto LABEL_34;
    }
    uint64_t v15 = v14(CMBaseObject, @"ScreenUsageMode", *MEMORY[0x1E4F35008]);
    if (v15)
    {
      uint64_t v18 = v15;
      goto LABEL_34;
    }
  }
  else if (!CFDictionaryGetInt64())
  {
    goto LABEL_21;
  }
  uint64_t v16 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v16) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = 0;
  }
  int v19 = *(uint64_t (**)(const void *, __CFString *, void))(v17 + 56);
  if (!v19)
  {
    uint64_t v18 = 4294954514;
    goto LABEL_34;
  }
  uint64_t v20 = v19(a4, @"StartSilentAudio", *MEMORY[0x1E4F1CFD0]);
  if (v20)
  {
    uint64_t v18 = v20;
    goto LABEL_34;
  }
LABEL_21:
  if (Value)
  {
    uint64_t v21 = FigEndpointGetCMBaseObject();
    uint64_t v22 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v22) {
      uint64_t v23 = v22;
    }
    else {
      uint64_t v23 = 0;
    }
    CFTypeRef v24 = *(uint64_t (**)(uint64_t, void, const void *))(v23 + 56);
    if (v24)
    {
      uint64_t v25 = v24(v21, *MEMORY[0x1E4F20F58], Value);
      if (!v25) {
        goto LABEL_28;
      }
      uint64_t v18 = v25;
    }
    else
    {
      uint64_t v18 = 4294954514;
    }
LABEL_34:
    APSLogErrorAt();
    goto LABEL_48;
  }
LABEL_28:
  if (CFDictionaryGetInt64()) {
    uint64_t v27 = (void *)MEMORY[0x1E4F1CFC8];
  }
  else {
    uint64_t v27 = (void *)MEMORY[0x1E4F1CFD0];
  }
  uint64_t v28 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v28) {
    uint64_t v29 = v28;
  }
  else {
    uint64_t v29 = 0;
  }
  CFMutableSetRef v30 = *(void (**)(const void *, void, void))(v29 + 56);
  if (v30) {
    v30(a4, *MEMORY[0x1E4F20D10], *v27);
  }
  if (gLogCategory_APEndpointManager <= 50
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  manager_addEndpoint(a1, a3, a4, *(__CFDictionary **)(DerivedStorage + 168));
  manager_postEndpointPresentChangedNotification();
  if (gLogCategory_APEndpointManager <= 50
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CMNotificationCenterGetDefaultLocalCenter();
  uint64_t v31 = FigDispatchAsyncPostNotification();
  uint64_t v18 = 0;
  if (v31)
  {
    uint64_t v33 = v31;
    APSLogErrorAt();
    uint64_t v18 = v33;
  }
LABEL_48:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 64));
  return v18;
}

void manager_handleEndpointEvent(void *a1, const void *a2, int a3, int a4, int a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a5)
  {
    uint64_t v11 = CMBaseObjectGetDerivedStorage();
    uint64_t v12 = v11;
    CFTypeRef cf = 0;
    uint64_t v13 = 168;
    if (a3) {
      uint64_t v13 = 176;
    }
    CFDictionaryRef v14 = *(const __CFDictionary **)(v11 + v13);
    CFSetRemoveValue(*(CFMutableSetRef *)(v11 + 184), a2);
    if (CFDictionaryContainsKey(v14, a2))
    {
      uint64_t Value = CFDictionaryGetValue(v14, a2);
      int v16 = APEndpointUpdateWithTransportDevice((uint64_t)Value, a2);
      if (v16)
      {
        int updated = v16;
      }
      else
      {
        int updated = manager_updateEndpointClusterMembershipIfNeeded(a1, Value, 0, 0);
        if (!updated)
        {
LABEL_7:
          uint64_t v18 = 0;
LABEL_36:
          if (cf) {
            CFRelease(cf);
          }
          if (v18) {
            CFRelease(v18);
          }
          if (updated) {
            APSLogErrorAt();
          }
          return;
        }
      }
      APSLogErrorAt();
      goto LABEL_7;
    }
    uint64_t v21 = *MEMORY[0x1E4F1CF80];
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    uint64_t v18 = Mutable;
    if (!Mutable)
    {
      APSLogErrorAt();
      int updated = -16711;
      goto LABEL_36;
    }
    uint64_t v23 = *(const void **)(v12 + 296);
    if (v23) {
      CFDictionaryAddValue(Mutable, @"EventRecorder", v23);
    }
    CFTypeRef v24 = (const void *)*MEMORY[0x1E4F1CFD0];
    uint64_t v25 = (const void *)*MEMORY[0x1E4F1CFC8];
    if (a3) {
      CFTypeRef v26 = (const void *)*MEMORY[0x1E4F1CFD0];
    }
    else {
      CFTypeRef v26 = (const void *)*MEMORY[0x1E4F1CFC8];
    }
    CFDictionarySetValue(v18, @"IsRemoteControlOnly", v26);
    if (a4) {
      uint64_t v27 = v24;
    }
    else {
      uint64_t v27 = v25;
    }
    CFDictionarySetValue(v18, @"RepresentsLocalDevice", v27);
    int v28 = APEndpointCreateWithTransportDevice(v21, a2, *(const void **)(v12 + 272), (uint64_t)a1, v18, &cf);
    if (v28)
    {
      int updated = v28;
    }
    else
    {
      if (!a3 || !a4) {
        goto LABEL_32;
      }
      uint64_t v29 = *(void *)(v12 + 232);
      uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
      uint64_t v31 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v31) {
        uint64_t v32 = v31;
      }
      else {
        uint64_t v32 = 0;
      }
      uint64_t v33 = *(uint64_t (**)(uint64_t, void, uint64_t))(v32 + 56);
      if (v33)
      {
        int v34 = v33(CMBaseObject, *MEMORY[0x1E4F20F58], v29);
        if (!v34)
        {
LABEL_32:
          manager_addEndpoint(a1, a2, cf, v14);
          int v35 = manager_updateEndpointClusterMembershipIfNeeded(a1, cf, 0, 0);
          if (v35)
          {
            int v36 = v35;
            APSLogErrorAt();
            int updated = v36;
          }
          else
          {
            int updated = 0;
          }
          goto LABEL_36;
        }
        int updated = v34;
      }
      else
      {
        int updated = -12782;
      }
    }
    APSLogErrorAt();
    goto LABEL_36;
  }
  uint64_t v19 = 176;
  if (!a3) {
    uint64_t v19 = 168;
  }
  CFDictionaryRef v20 = *(const __CFDictionary **)(DerivedStorage + v19);
  if (CFDictionaryGetValue(v20, a2) && !APSGetFBOPropertyInt64())
  {
    manager_removeEndpointForTransportDevice(a1, v20, a2);
  }
}

void manager_gatherDeviceMetrics(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int64_t value = 0;
  if (*(void *)(DerivedStorage + 248))
  {
    uint64_t v4 = DerivedStorage;
    uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(a2);
    uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v6) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 0;
    }
    BOOL v8 = *(void (**)(uint64_t, __CFString *, void, void **))(v7 + 48);
    if (v8 && (v8(CMBaseObject, @"DeviceID", *MEMORY[0x1E4F1CF80], &value), value))
    {
      if (!CFSetContainsValue(*(CFSetRef *)(v4 + 248), value))
      {
        if (APSGetFBOPropertyInt64()) {
          ++*(_DWORD *)(v4 + 320);
        }
        else {
          ++*(_DWORD *)(v4 + 324);
        }
        CFSetAddValue(*(CFMutableSetRef *)(v4 + 248), value);
      }
    }
    else
    {
      APSLogErrorAt();
    }
    if (value) {
      CFRelease(value);
    }
  }
}

void manager_removeAllEndpointsForTransportDeviceIfNeeded(void *a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  manager_removeEndpointForTransportDeviceIfNeeded(a1, a2, *(const __CFDictionary **)(DerivedStorage + 168), 1);
  CFDictionaryRef v5 = *(const __CFDictionary **)(DerivedStorage + 176);
  manager_removeEndpointForTransportDeviceIfNeeded(a1, a2, v5, 1);
}

void manager_addEndpoint(void *a1, const void *a2, const void *a3, __CFDictionary *a4)
{
  CMBaseObjectGetDerivedStorage();
  CFDictionarySetValue(a4, a2, a3);
  manager_updateEndpointPSGInfoIfNeeded();
  CMNotificationCenterGetDefaultLocalCenter();
  FigNotificationCenterAddWeakListener();
  CMNotificationCenterGetDefaultLocalCenter();
  FigNotificationCenterAddWeakListener();
  CMNotificationCenterGetDefaultLocalCenter();
  FigNotificationCenterAddWeakListener();
  manager_notifyAvailableEndpointsChangedWithThrottleIfNeeded(a1, 1);
}

uint64_t manager_deviceIsAllowed(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
  {
    APSLogErrorAt();
    return 0;
  }
  uint64_t v4 = DerivedStorage;
  CFDictionaryRef v5 = (uint64_t *)MEMORY[0x1E4F1CF80];
  if (*(void *)(DerivedStorage + 104))
  {
    uint64_t v6 = CMBaseObjectGetDerivedStorage();
    CFTypeRef v47 = 0;
    CFTypeRef cf = 0;
    if (*(void *)(v6 + 104))
    {
      uint64_t v7 = v6;
      uint64_t v8 = *v5;
      uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(a2);
      uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v10) {
        uint64_t v11 = v10;
      }
      else {
        uint64_t v11 = 0;
      }
      uint64_t v12 = *(void (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v11 + 48);
      if (v12) {
        v12(CMBaseObject, @"DeviceID", v8, &cf);
      }
      uint64_t v13 = APEndpointDescriptionGetCMBaseObject(a2);
      uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v14) {
        uint64_t v15 = v14;
      }
      else {
        uint64_t v15 = 0;
      }
      int v16 = *(void (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v15 + 48);
      if (v16) {
        v16(v13, @"Name", v8, &v47);
      }
      uint64_t v17 = CFGetHardwareAddress();
      if (v17)
      {
        uint64_t v18 = v17;
        CFTypeID v19 = CFGetTypeID(*(CFTypeRef *)(v7 + 104));
        if (v19 == CFArrayGetTypeID())
        {
          CFIndex Count = CFArrayGetCount(*(CFArrayRef *)(v7 + 104));
          CFIndex v21 = Count - 1;
          if (Count < 1)
          {
            BOOL v24 = 0;
          }
          else
          {
            CFIndex v22 = 0;
            do
            {
              CFArrayGetValueAtIndex(*(CFArrayRef *)(v7 + 104), v22);
              uint64_t v23 = CFGetHardwareAddress();
              BOOL v24 = v23 == v18;
            }
            while (v23 != v18 && v21 != v22++);
          }
        }
        else
        {
          BOOL v24 = v18 == CFGetHardwareAddress();
        }
      }
      else
      {
        BOOL v24 = 0;
      }
    }
    else
    {
      BOOL v24 = 1;
    }
    if (gLogCategory_APEndpointManager <= 20
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (cf) {
      CFRelease(cf);
    }
    if (v47) {
      CFRelease(v47);
    }
    if (v24) {
      return 1;
    }
    CFDictionaryRef v5 = (uint64_t *)MEMORY[0x1E4F1CF80];
    if (*(void *)(v4 + 112)) {
      goto LABEL_40;
    }
    return 0;
  }
  if (!*(void *)(DerivedStorage + 112)) {
    return 1;
  }
LABEL_40:
  uint64_t v27 = CMBaseObjectGetDerivedStorage();
  CFTypeRef v47 = 0;
  CFTypeRef cf = 0;
  uint64_t v28 = *v5;
  if (*(void *)(v27 + 112))
  {
    uint64_t v29 = v27;
    uint64_t v30 = APEndpointDescriptionGetCMBaseObject(a2);
    uint64_t v31 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v31) {
      uint64_t v32 = v31;
    }
    else {
      uint64_t v32 = 0;
    }
    uint64_t v33 = *(void (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v32 + 48);
    if (v33 && (v33(v30, @"Name", v28, &cf), cf))
    {
      CFTypeID v34 = CFGetTypeID(*(CFTypeRef *)(v29 + 112));
      if (v34 != CFArrayGetTypeID())
      {
        uint64_t v26 = CFEqual(cf, *(CFTypeRef *)(v29 + 112));
        goto LABEL_59;
      }
      CFIndex v35 = CFArrayGetCount(*(CFArrayRef *)(v29 + 112));
      if (v35 >= 1)
      {
        CFIndex v36 = v35;
        CFDictionaryRef ValueAtIndex = CFArrayGetValueAtIndex(*(CFArrayRef *)(v29 + 112), 0);
        if (!CFEqual(cf, ValueAtIndex))
        {
          CFIndex v38 = 1;
          do
          {
            CFIndex v39 = v38;
            if (v36 == v38) {
              break;
            }
            uint64_t v40 = CFArrayGetValueAtIndex(*(CFArrayRef *)(v29 + 112), v38);
            int v41 = CFEqual(cf, v40);
            CFIndex v38 = v39 + 1;
          }
          while (!v41);
          uint64_t v26 = v39 < v36;
          goto LABEL_59;
        }
        goto LABEL_49;
      }
    }
    else
    {
      APSLogErrorAt();
    }
    uint64_t v26 = 0;
    goto LABEL_59;
  }
LABEL_49:
  uint64_t v26 = 1;
LABEL_59:
  uint64_t v42 = APEndpointDescriptionGetCMBaseObject(a2);
  uint64_t v43 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v43) {
    uint64_t v44 = v43;
  }
  else {
    uint64_t v44 = 0;
  }
  uint64_t v45 = *(void (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v44 + 48);
  if (v45) {
    v45(v42, @"DeviceID", v28, &v47);
  }
  if (gLogCategory_APEndpointManager <= 20
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (v47) {
    CFRelease(v47);
  }
  if (cf) {
    CFRelease(cf);
  }
  return v26;
}

void __manager_registerForNotifications_block_invoke(uint64_t a1)
{
}

uint64_t __manager_registerForNotifications_block_invoke_2()
{
  if (gLogCategory_APEndpointManager <= 50
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CMNotificationCenterGetDefaultLocalCenter();
  return CMNotificationCenterPostNotification();
}

uint64_t __manager_registerForNotifications_block_invoke_3(uint64_t a1, int token)
{
  uint64_t state64 = 0;
  int v2 = *(_DWORD *)(*(void *)(a1 + 32) + 348);
  uint64_t result = notify_get_state(token, &state64);
  if (gLogCategory_APEndpointManager <= 50)
  {
    if (gLogCategory_APEndpointManager != -1 || (uint64_t result = _LogCategory_Initialize(), result)) {
      uint64_t result = LogPrintF();
    }
  }
  BOOL v5 = v2 != 4 || state64 == 1;
  if (state64) {
    BOOL v6 = !v5;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CMNotificationCenterGetDefaultLocalCenter();
    return CMNotificationCenterPostNotification();
  }
  return result;
}

void __manager_registerForNotifications_block_invoke_4(uint64_t a1)
{
  MEMORY[0x1D25EB370](*(void *)(*(void *)(a1 + 32) + 64));
  if (*(void *)(*(void *)(a1 + 32) + 136))
  {
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
  }
  JUMPOUT(0x1D25EB390);
}

void manager_updateAllowedDevices(uint64_t a1)
{
  CFArrayRef v2 = (const __CFArray *)FigCFDictionaryCopyArrayOfValues();
  CFTypeRef cf = 0;
  CFIndex Count = CFArrayGetCount(v2);
  if (Count >= 1)
  {
    CFIndex v4 = Count;
    CFIndex v5 = 0;
    while (1)
    {
      CFDictionaryRef ValueAtIndex = CFArrayGetValueAtIndex(v2, v5);
      uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
      uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v9 = v8 ? v8 : 0;
      uint64_t v10 = *(unsigned int (**)(uint64_t, __CFString *, void, CFTypeRef *))(v9 + 48);
      if (!v10 || v10(CMBaseObject, @"EndpointDescription", 0, &cf)) {
        break;
      }
      if (!manager_deviceIsAllowed(a1, (uint64_t)cf)) {
        manager_removeEndpointIfNeeded(a1, (uint64_t)ValueAtIndex, 1);
      }
      if (cf)
      {
        CFRelease(cf);
        CFTypeRef cf = 0;
      }
      if (v4 == ++v5) {
        goto LABEL_16;
      }
    }
    APSLogErrorAt();
    if (cf) {
      CFRelease(cf);
    }
  }
LABEL_16:
  if (v2) {
    CFRelease(v2);
  }
}

uint64_t __manager_endpointCreateWithEndpointInfo_block_invoke()
{
  return APAdvertiserInfoSetProperty();
}

uint64_t __manager_handleClearEndpointWithEndpointIDNotification_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  APTransportDeviceGetDiscoveryID();
  uint64_t result = CFGetInt64();
  if (result == *(void *)(a1 + 40)) {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a3;
  }
  return result;
}

void __manager_handleDiscoveryBrokerRequest_block_invoke(uint64_t a1)
{
  int v2 = gLogCategory_APEndpointManager;
  if (gLogCategory_APEndpointManager <= 50)
  {
    if (gLogCategory_APEndpointManager == -1)
    {
      if (!_LogCategory_Initialize()) {
        goto LABEL_13;
      }
      int v2 = gLogCategory_APEndpointManager;
    }
    if (v2 <= 30)
    {
      if (v2 != -1
        || (_LogCategory_Initialize(), int v2 = gLogCategory_APEndpointManager, gLogCategory_APEndpointManager <= 30))
      {
        if (v2 == -1) {
          _LogCategory_Initialize();
        }
      }
    }
    LogPrintF();
  }
LABEL_13:
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    CFIndex v4 = Mutable;
    CFDictionarySetValue(Mutable, @"RequestType", @"Authenticate");
    CFDictionarySetInt64();
    FigCFDictionarySetValue();
    FigCFDictionarySetValueFromKeyInDict();
    if (gLogCategory_APEndpointManager <= 30
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    APSXPCServerPostEvent();
    CFRelease(v4);
  }
  else
  {
    APSLogErrorAt();
    if (gLogCategory_APEndpointManager <= 90
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  CFIndex v5 = *(const void **)(a1 + 32);
  CFRelease(v5);
}

void __manager_handleDiscoveryBrokerRequest_block_invoke_2(uint64_t a1)
{
  int v2 = gLogCategory_APEndpointManager;
  if (gLogCategory_APEndpointManager <= 50)
  {
    if (gLogCategory_APEndpointManager == -1)
    {
      if (!_LogCategory_Initialize()) {
        goto LABEL_13;
      }
      int v2 = gLogCategory_APEndpointManager;
    }
    if (v2 <= 30)
    {
      if (v2 != -1
        || (_LogCategory_Initialize(), int v2 = gLogCategory_APEndpointManager, gLogCategory_APEndpointManager <= 30))
      {
        if (v2 == -1) {
          _LogCategory_Initialize();
        }
      }
    }
    LogPrintF();
  }
LABEL_13:
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    CFIndex v4 = Mutable;
    CFDictionarySetValue(Mutable, @"RequestType", @"GetInfo");
    CFDictionarySetInt64();
    FigCFDictionarySetValue();
    FigCFDictionarySetValueFromKeyInDict();
    if (gLogCategory_APEndpointManager <= 30
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    APSXPCServerPostEvent();
    CFRelease(v4);
  }
  else
  {
    APSLogErrorAt();
    if (gLogCategory_APEndpointManager <= 90
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  CFIndex v5 = *(const void **)(a1 + 32);
  CFRelease(v5);
}

uint64_t __introspector_getCollectionOfEndpointManagers_block_invoke()
{
  uint64_t result = IsAppleInternalBuild();
  if (result)
  {
    introspector_getCollectionOfEndpointManagers_coll = (uint64_t)malloc_type_calloc(1uLL, 0x18uLL, 0xF00401F3BCE50uLL);
    *(void *)introspector_getCollectionOfEndpointManagers_coll = dispatch_queue_create("CollectionOfEndpointManagers", 0);
    CFMutableSetRef Mutable = CFSetCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, 0);
    uint64_t v2 = introspector_getCollectionOfEndpointManagers_coll;
    *(void *)(introspector_getCollectionOfEndpointManagers_coll + 8) = Mutable;
    *(void *)(v2 + 16) = "EndpointManagers";
    return APSIntrospectorAddCommand();
  }
  return result;
}

void manager_introspector_showEndpointInfo(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  CFTypeRef v19 = 0;
  CFTypeRef v20 = 0;
  CFTypeRef v18 = 0;
  uint64_t v5 = *MEMORY[0x1E4F1CF80];
  uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
  uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = *(void (**)(uint64_t, void, uint64_t, CFTypeRef *))(v8 + 48);
  if (v9) {
    v9(CMBaseObject, *MEMORY[0x1E4F20E38], v5, &v20);
  }
  uint64_t v10 = FigEndpointGetCMBaseObject();
  uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v11) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = 0;
  }
  uint64_t v13 = *(void (**)(uint64_t, void, uint64_t, CFTypeRef *))(v12 + 48);
  if (v13) {
    v13(v10, *MEMORY[0x1E4F20F28], v5, &v19);
  }
  uint64_t v14 = FigEndpointGetCMBaseObject();
  uint64_t v15 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v15) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = 0;
  }
  uint64_t v17 = *(void (**)(uint64_t, void, uint64_t, CFTypeRef *))(v16 + 48);
  if (v17) {
    v17(v14, *MEMORY[0x1E4F20F18], v5, &v18);
  }
  APSGetFBOPropertyInt64();
  APSGetFBOPropertyInt64();
  APSGetFBOPropertyInt64();
  FPrintF();
  if (a4) {
    FPrintF();
  }
  FPrintF();
  if (v20) {
    CFRelease(v20);
  }
  if (v19) {
    CFRelease(v19);
  }
  if (v18) {
    CFRelease(v18);
  }
}

CFTypeRef manager_introspector_copyMatchingEndpoint(uint64_t a1, uint64_t a2, int a3)
{
  CFTypeRef v28 = 0;
  CFTypeRef cf = 0;
  CFIndex v4 = manager_copyEndpoints(a1, 0);
  uint64_t v5 = v4;
  if (!v4 || (CFTypeID v6 = CFGetTypeID(v4), v6 != CFArrayGetTypeID()))
  {
    APSLogErrorAt();
LABEL_34:
    CFIndex v21 = 0;
    CFIndex v22 = 0;
    CFTypeRef v23 = 0;
    if (!v5) {
      goto LABEL_57;
    }
LABEL_56:
    CFRelease(v5);
    goto LABEL_57;
  }
  CFIndex Count = CFArrayGetCount(v5);
  if (Count < 1)
  {
    CFTypeRef v23 = 0;
    CFIndex v22 = 0;
    CFIndex v21 = 0;
    goto LABEL_56;
  }
  CFIndex v8 = Count;
  CFIndex v9 = 0;
  uint64_t v26 = *MEMORY[0x1E4F20E38];
  uint64_t v27 = *MEMORY[0x1E4F1CF80];
  uint64_t v25 = *MEMORY[0x1E4F20F28];
  while (1)
  {
    CFDictionaryRef ValueAtIndex = CFArrayGetValueAtIndex(v5, v9);
    uint64_t v11 = APSGetFBOPropertyInt64();
    uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
    uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v13) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, CFTypeRef *))(v14 + 48);
    if (v15) {
      v15(CMBaseObject, v26, v27, &cf);
    }
    int v16 = v11 != 0;
    if (FigCFEqual() && v16 == a3)
    {
      if (gLogCategory_APEndpointManager <= 50
        && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
      {
        goto LABEL_42;
      }
LABEL_52:
      CFTypeRef v23 = CFRetain(ValueAtIndex);
      CFIndex v21 = 0;
LABEL_55:
      CFIndex v22 = 0;
      if (!v5) {
        goto LABEL_57;
      }
      goto LABEL_56;
    }
    uint64_t v17 = FigEndpointGetCMBaseObject();
    uint64_t v18 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v18) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    CFTypeRef v20 = *(void (**)(uint64_t, uint64_t, uint64_t, CFTypeRef *))(v19 + 48);
    if (v20) {
      v20(v17, v25, v27, &v28);
    }
    if (FigCFEqual() && v16 == a3)
    {
      if (gLogCategory_APEndpointManager > 50
        || gLogCategory_APEndpointManager == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_52;
      }
LABEL_42:
      LogPrintF();
      goto LABEL_52;
    }
    CFIndex v21 = (const void *)CFStringCreateF();
    if (FigCFEqual())
    {
      if (gLogCategory_APEndpointManager <= 50
        && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFTypeRef v23 = CFRetain(ValueAtIndex);
      goto LABEL_55;
    }
    CFIndex v22 = (const void *)CFStringCreateF();
    if (FigCFEqual()) {
      break;
    }
    if (gLogCategory_APEndpointManager <= 50
      && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (cf)
    {
      CFRelease(cf);
      CFTypeRef cf = 0;
    }
    if (v28)
    {
      CFRelease(v28);
      CFTypeRef v28 = 0;
    }
    if (v21) {
      CFRelease(v21);
    }
    if (v22) {
      CFRelease(v22);
    }
    if (v8 == ++v9) {
      goto LABEL_34;
    }
  }
  if (gLogCategory_APEndpointManager <= 50
    && (gLogCategory_APEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFTypeRef v23 = CFRetain(ValueAtIndex);
  if (v5) {
    goto LABEL_56;
  }
LABEL_57:
  if (cf) {
    CFRelease(cf);
  }
  if (v28) {
    CFRelease(v28);
  }
  if (v21) {
    CFRelease(v21);
  }
  if (v22) {
    CFRelease(v22);
  }
  return v23;
}

void __manager_handlePSGDataSourceGroupInfoChanged_block_invoke()
{
}

uint64_t AirPlayDebugIPCEnableForEndpointManager(const void *a1)
{
  if (a1)
  {
    CFTypeID v2 = CFGetTypeID(a1);
    if (v2 == FigEndpointManagerGetTypeID())
    {
      if (!IsAppleInternalBuild())
      {
        if (gLogCategory_AirPlayDebugIPCUtilities > 40
          || gLogCategory_AirPlayDebugIPCUtilities == -1 && !_LogCategory_Initialize())
        {
          return 0;
        }
LABEL_14:
        LogPrintF();
        return 0;
      }
      if (AirPlayDebugIPCEnableForEndpointManager_initOnce != -1) {
        dispatch_once_f(&AirPlayDebugIPCEnableForEndpointManager_initOnce, &sEndpointManagers, (dispatch_function_t)airPlayDebugIPC_initEndpointManagerArray);
      }
      if (sEndpointManagers)
      {
        uint64_t Count = CFArrayGetCount((CFArrayRef)sEndpointManagers);
        v6.locatioCFIndex n = 0;
        v6.length = Count;
        if (!CFArrayContainsValue((CFArrayRef)sEndpointManagers, v6, a1))
        {
          CFArrayAppendValue((CFMutableArrayRef)sEndpointManagers, a1);
          if (Count > 0) {
            return 0;
          }
          DebugIPC_EnsureInitialized();
          if (gLogCategory_AirPlayDebugIPCUtilities > 30
            || gLogCategory_AirPlayDebugIPCUtilities == -1 && !_LogCategory_Initialize())
          {
            return 0;
          }
          goto LABEL_14;
        }
      }
    }
  }
  APSLogErrorAt();
  return APSSignalErrorAt();
}

CFMutableArrayRef airPlayDebugIPC_initEndpointManagerArray(CFMutableArrayRef *a1)
{
  CFMutableArrayRef result = CFArrayCreateMutable(0, 0, MEMORY[0x1E4F1D510]);
  *a1 = result;
  return result;
}

uint64_t airPlayDebugIPC_handleEvent(const __CFDictionary *a1, CFMutableDictionaryRef *a2)
{
  uint64_t v83 = 0;
  long long v81 = 0u;
  long long v82 = 0u;
  long long v80 = 0u;
  uint64_t v78 = 0;
  uint64_t v79 = 0;
  CFTypeRef cf = 0;
  CFMutableDictionaryRef v77 = 0;
  uint64_t v74 = 0;
  CFTypeRef v75 = 0;
  if (!sEndpointManagers) {
    goto LABEL_107;
  }
  uint64_t v4 = 4294895275;
  DataBuffer_Init();
  uint64_t Value = CFDictionaryGetValue(a1, @"command");
  if (!Value) {
    goto LABEL_59;
  }
  CFRange v6 = Value;
  CFTypeID v7 = CFGetTypeID(Value);
  if (v7 != CFStringGetTypeID()) {
    goto LABEL_107;
  }
  if (CFEqual(v6, @"logging"))
  {
    CFIndex v8 = CFDictionaryGetValue(a1, @"value");
    if (!v8) {
      goto LABEL_8;
    }
    CFTypeID v9 = CFGetTypeID(v8);
    if (v9 == CFStringGetTypeID())
    {
      uint64_t v10 = LogControlCF();
      if (v10)
      {
        uint64_t v4 = v10;
        goto LABEL_122;
      }
LABEL_8:
      uint64_t v11 = LogShow();
      if (v11)
      {
        uint64_t v4 = v11;
        goto LABEL_122;
      }
      uint64_t Formatted = CFPropertyListCreateFormatted();
      if (Formatted)
      {
        uint64_t v4 = Formatted;
LABEL_122:
        APSLogErrorAt();
        goto LABEL_59;
      }
      goto LABEL_55;
    }
    goto LABEL_107;
  }
  if (CFEqual(v6, @"show"))
  {
    CFIndex Count = CFArrayGetCount((CFArrayRef)sEndpointManagers);
    if (Count >= 1)
    {
      CFIndex v14 = Count;
      CFIndex v15 = 0;
      uint64_t v16 = *MEMORY[0x1E4F1CF80];
      do
      {
        CFDictionaryRef ValueAtIndex = CFArrayGetValueAtIndex((CFArrayRef)sEndpointManagers, v15);
        DataBuffer_AppendF();
        theDict[0] = 0;
        if (ValueAtIndex && (CFTypeID v18 = CFGetTypeID(ValueAtIndex), v18 == FigEndpointManagerGetTypeID()))
        {
          uint64_t CMBaseObject = FigEndpointManagerGetCMBaseObject();
          uint64_t v20 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v20) {
            uint64_t v21 = v20;
          }
          else {
            uint64_t v21 = 0;
          }
          CFIndex v22 = *(unsigned int (**)(uint64_t, __CFString *, uint64_t, CFDictionaryRef *))(v21 + 48);
          if (v22
            && !v22(CMBaseObject, @"ShowInfo", v16, theDict)
            && CFDictionaryGetValue(theDict[0], @"DetailedDescription"))
          {
            DataBuffer_AppendF();
          }
          else
          {
            APSLogErrorAt();
          }
        }
        else
        {
          APSLogErrorAt();
          APSSignalErrorAt();
        }
        if (theDict[0]) {
          CFRelease(theDict[0]);
        }
        DataBuffer_AppendF();
        ++v15;
      }
      while (v14 != v15);
    }
    DataBuffer_AppendF();
    uint64_t v23 = DataBuffer_Commit();
    if (v23)
    {
      uint64_t v4 = v23;
      goto LABEL_122;
    }
    uint64_t v24 = CFPropertyListCreateFormatted();
    if (v24)
    {
      uint64_t v4 = v24;
      goto LABEL_122;
    }
    goto LABEL_55;
  }
  if (CFEqual(v6, @"hierarchy"))
  {
    int v69 = v6;
    CFIndex v25 = CFArrayGetCount((CFArrayRef)sEndpointManagers);
    if (v25 >= 1)
    {
      CFIndex v26 = v25;
      CFIndex v27 = 0;
      uint64_t v28 = *MEMORY[0x1E4F1CF80];
      while (1)
      {
        uint64_t v29 = CFArrayGetValueAtIndex((CFArrayRef)sEndpointManagers, v27);
        theDict[0] = 0;
        if (!v29 || (CFTypeID v30 = CFGetTypeID(v29), v30 != FigEndpointManagerGetTypeID()))
        {
          APSLogErrorAt();
          int v35 = APSSignalErrorAt();
          goto LABEL_46;
        }
        uint64_t v31 = FigEndpointManagerGetCMBaseObject();
        uint64_t v32 = *(void *)(CMBaseObjectGetVTable() + 8);
        uint64_t v33 = v32 ? v32 : 0;
        CFTypeID v34 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t, CFDictionaryRef *))(v33 + 48);
        if (!v34) {
          break;
        }
        int v35 = v34(v31, @"HierarchyDump", v28, theDict);
        if (v35) {
          goto LABEL_45;
        }
        DataBuffer_AppendF();
LABEL_46:
        if (theDict[0]) {
          CFRelease(theDict[0]);
        }
        if (!v35) {
          DataBuffer_AppendF();
        }
        if (v26 == ++v27) {
          goto LABEL_53;
        }
      }
      int v35 = -12782;
LABEL_45:
      APSLogErrorAt();
      goto LABEL_46;
    }
LABEL_53:
    uint64_t v36 = DataBuffer_Commit();
    if (v36)
    {
      uint64_t v4 = v36;
      goto LABEL_122;
    }
    uint64_t v37 = CFPropertyListCreateFormatted();
    CFRange v6 = v69;
    if (v37)
    {
      uint64_t v4 = v37;
      goto LABEL_122;
    }
LABEL_55:
    if (v77)
    {
      CFDictionarySetValue(v77, @"responseType", v6);
      CFMutableDictionaryRef v38 = v77;
    }
    else
    {
      CFMutableDictionaryRef v38 = 0;
    }
    uint64_t v4 = 0;
    *a2 = v38;
    CFMutableDictionaryRef v77 = 0;
    goto LABEL_59;
  }
  if (CFEqual(v6, @"activate"))
  {
    uint64_t v40 = CFDictionaryGetValue(a1, @"value");
    uint64_t Int64 = CFDictionaryGetInt64();
    if (v40)
    {
      uint64_t v42 = Int64;
      CFIndex v43 = CFArrayGetCount((CFArrayRef)sEndpointManagers);
      if (v43 >= 1)
      {
        CFIndex v44 = v43;
        CFIndex v45 = 0;
        while (1)
        {
          uint64_t v67 = CFArrayGetValueAtIndex((CFArrayRef)sEndpointManagers, v45);
          DataBuffer_AppendF();
          uint64_t v46 = airPlayDebugIPC_copyEndpointWithID((uint64_t)v67, v40, &cf);
          if (v46)
          {
            uint64_t v4 = v46;
            goto LABEL_122;
          }
          if (cf) {
            break;
          }
          if (v44 == ++v45) {
            goto LABEL_81;
          }
        }
        DataBuffer_AppendF();
        uint64_t EndpointActivationDictionary = airPlayDebugIPC_createEndpointActivationDictionary((CFMutableDictionaryRef *)&v75);
        if (EndpointActivationDictionary)
        {
          uint64_t v4 = EndpointActivationDictionary;
        }
        else
        {
          if (!v42)
          {
            DataBuffer_AppendF();
            goto LABEL_82;
          }
          CFTypeRef v54 = v75;
          uint64_t v55 = FigEndpointActivateSync();
          if (v55)
          {
            uint64_t v4 = v55;
          }
          else
          {
            if (v54)
            {
              CFRelease(v54);
              CFTypeRef v75 = 0;
            }
            DataBuffer_AppendF();
            uint64_t v56 = DataBuffer_Commit();
            if (v56)
            {
              uint64_t v4 = v56;
            }
            else
            {
              *(_OWORD *)CFDictionaryRef theDict = v80;
              long long v71 = v81;
              long long v72 = v82;
              uint64_t v73 = v83;
              uint64_t v57 = CFPropertyListCreateFormatted();
              if (!v57) {
                goto LABEL_55;
              }
              uint64_t v4 = v57;
            }
          }
        }
        goto LABEL_122;
      }
      goto LABEL_81;
    }
    goto LABEL_107;
  }
  if (CFEqual(v6, @"deactivate"))
  {
    CFTypeRef v47 = CFDictionaryGetValue(a1, @"value");
    if (v47)
    {
      CFTypeRef v48 = v47;
      CFIndex v49 = CFArrayGetCount((CFArrayRef)sEndpointManagers);
      if (v49 >= 1)
      {
        CFIndex v50 = v49;
        CFIndex v51 = 0;
        while (1)
        {
          BOOL v68 = CFArrayGetValueAtIndex((CFArrayRef)sEndpointManagers, v51);
          DataBuffer_AppendF();
          uint64_t v52 = airPlayDebugIPC_copyEndpointWithID((uint64_t)v68, v48, &cf);
          if (v52)
          {
            uint64_t v4 = v52;
            goto LABEL_122;
          }
          if (cf) {
            break;
          }
          if (v50 == ++v51) {
            goto LABEL_81;
          }
        }
        DataBuffer_AppendF();
        uint64_t v60 = FigEndpointDeactivate();
        if (v60)
        {
          uint64_t v4 = v60;
        }
        else
        {
          DataBuffer_AppendF();
          uint64_t v61 = DataBuffer_Commit();
          if (v61)
          {
            uint64_t v4 = v61;
          }
          else
          {
            *(_OWORD *)CFDictionaryRef theDict = v80;
            long long v71 = v81;
            long long v72 = v82;
            uint64_t v73 = v83;
            uint64_t v62 = CFPropertyListCreateFormatted();
            if (!v62) {
              goto LABEL_55;
            }
            uint64_t v4 = v62;
          }
        }
        goto LABEL_122;
      }
LABEL_81:
      DataBuffer_AppendF();
LABEL_82:
      uint64_t v4 = APSSignalErrorAt();
      goto LABEL_59;
    }
LABEL_107:
    APSLogErrorAt();
    goto LABEL_82;
  }
  if (CFEqual(v6, @"disable"))
  {
    uint64_t v58 = CFDictionaryGetValue(a1, (const void *)*MEMORY[0x1E4F20620]);
    if (!v58) {
      goto LABEL_55;
    }
    int v59 = 0;
LABEL_102:
    airPlayDebugIPC_overrideEndpointManagerEnabled(v58, v59);
    goto LABEL_55;
  }
  if (CFEqual(v6, @"enable"))
  {
    uint64_t v58 = CFDictionaryGetValue(a1, (const void *)*MEMORY[0x1E4F20620]);
    if (!v58) {
      goto LABEL_55;
    }
    int v59 = 1;
    goto LABEL_102;
  }
  if (CFEqual(v6, @"stats"))
  {
    uint64_t v63 = CFDictionaryGetValue(a1, @"value");
    CFStringRef v64 = (const __CFString *)CFDictionaryGetValue(a1, @"filePath");
    uint64_t v65 = airPlayDebugIPC_showStats(v63, v64);
    if (v65)
    {
      uint64_t v4 = v65;
      goto LABEL_122;
    }
    uint64_t v66 = CFPropertyListCreateFormatted();
    if (v66)
    {
      uint64_t v4 = v66;
      goto LABEL_122;
    }
    goto LABEL_55;
  }
  uint64_t v4 = 4294895272;
  if (gLogCategory_AirPlayDebugIPCUtilities <= 50
    && (gLogCategory_AirPlayDebugIPCUtilities != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_59:
  DataBuffer_Free();
  if (v77) {
    CFRelease(v77);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v75) {
    CFRelease(v75);
  }
  free(v74);
  return v4;
}

uint64_t AirPlayDebugIPCDisableForEndpointManager(const void *a1)
{
  CFTypeRef cf = 0;
  if (a1
    && (CFTypeID v2 = CFGetTypeID(a1), v2 == FigEndpointManagerGetTypeID())
    && sEndpointManagers
    && (uint64_t Count = CFArrayGetCount((CFArrayRef)sEndpointManagers),
        v12.locatioCFIndex n = 0,
        v12.length = Count,
        FirstIndexOfuint64_t Value = CFArrayGetFirstIndexOfValue((CFArrayRef)sEndpointManagers, v12, a1),
        FirstIndexOfValue != -1))
  {
    CFArrayRemoveValueAtIndex((CFMutableArrayRef)sEndpointManagers, FirstIndexOfValue);
    if (Count <= 1)
    {
      DebugIPC_EnsureFinalized();
      if (gLogCategory_AirPlayDebugIPCUtilities <= 30
        && (gLogCategory_AirPlayDebugIPCUtilities != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    uint64_t CMBaseObject = FigEndpointManagerGetCMBaseObject();
    uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v6) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 0;
    }
    CFIndex v8 = *(void (**)(uint64_t, void, void, CFTypeRef *))(v7 + 48);
    if (v8)
    {
      v8(CMBaseObject, *MEMORY[0x1E4F20620], *MEMORY[0x1E4F1CF80], &cf);
      if (cf) {
        CFRelease(cf);
      }
    }
    return 0;
  }
  else
  {
    APSLogErrorAt();
    return APSSignalErrorAt();
  }
}

uint64_t airPlayDebugIPC_copyEndpointWithID(uint64_t a1, const void *a2, CFTypeRef *a3)
{
  CFTypeRef cf1 = 0;
  CFArrayRef theArray = 0;
  uint64_t CMBaseObject = FigEndpointManagerGetCMBaseObject();
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  CFIndex v8 = *(uint64_t (**)(uint64_t, void, void, CFArrayRef *))(v7 + 48);
  if (!v8)
  {
    uint64_t v19 = 4294954514;
LABEL_21:
    APSLogErrorAt();
    goto LABEL_27;
  }
  uint64_t v9 = *MEMORY[0x1E4F1CF80];
  uint64_t v10 = v8(CMBaseObject, *MEMORY[0x1E4F20608], *MEMORY[0x1E4F1CF80], &theArray);
  if (v10)
  {
    uint64_t v19 = v10;
    goto LABEL_21;
  }
  if (!theArray)
  {
    uint64_t v19 = 0;
LABEL_26:
    *a3 = 0;
    goto LABEL_27;
  }
  CFIndex Count = CFArrayGetCount(theArray);
  if (Count < 1)
  {
    CFIndex v12 = 0;
    uint64_t v19 = 0;
  }
  else
  {
    CFIndex v12 = 0;
    uint64_t v13 = *MEMORY[0x1E4F20E38];
    while (1)
    {
      CFDictionaryRef ValueAtIndex = CFArrayGetValueAtIndex(theArray, v12);
      uint64_t v15 = FigEndpointGetCMBaseObject();
      uint64_t v16 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v17 = v16 ? v16 : 0;
      CFTypeID v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, CFTypeRef *))(v17 + 48);
      uint64_t v19 = v18 ? v18(v15, v13, v9, &cf1) : 4294954514;
      if (CFEqual(cf1, a2)) {
        break;
      }
      if (cf1)
      {
        CFRelease(cf1);
        CFTypeRef cf1 = 0;
      }
      if (Count == ++v12) {
        goto LABEL_26;
      }
    }
    *a3 = CFRetain(ValueAtIndex);
  }
  if (v12 == Count) {
    goto LABEL_26;
  }
LABEL_27:
  if (theArray) {
    CFRelease(theArray);
  }
  if (cf1) {
    CFRelease(cf1);
  }
  return v19;
}

uint64_t airPlayDebugIPC_createEndpointActivationDictionary(CFMutableDictionaryRef *a1)
{
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    *a1 = Mutable;
    return 0;
  }
  else
  {
    APSLogErrorAt();
    return APSSignalErrorAt();
  }
}

void airPlayDebugIPC_overrideEndpointManagerEnabled(const void *a1, int a2)
{
  CFTypeRef cf2 = 0;
  if (sEndpointManagers)
  {
    CFIndex Count = CFArrayGetCount((CFArrayRef)sEndpointManagers);
    if (Count >= 1)
    {
      CFIndex v5 = Count;
      CFIndex v6 = 0;
      uint64_t v7 = *MEMORY[0x1E4F20620];
      uint64_t v8 = *MEMORY[0x1E4F1CF80];
      while (1)
      {
        CFArrayGetValueAtIndex((CFArrayRef)sEndpointManagers, v6);
        uint64_t CMBaseObject = FigEndpointManagerGetCMBaseObject();
        uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 8);
        if (v10) {
          uint64_t v11 = v10;
        }
        else {
          uint64_t v11 = 0;
        }
        CFIndex v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, CFTypeRef *))(v11 + 48);
        if (!v12 || v12(CMBaseObject, v7, v8, &cf2))
        {
          APSLogErrorAt();
          return;
        }
        if (CFEqual(a1, cf2)) {
          break;
        }
        if (cf2)
        {
          CFRelease(cf2);
          CFTypeRef cf2 = 0;
        }
        if (v5 == ++v6) {
          return;
        }
      }
      if (a2) {
        uint64_t v13 = (void *)MEMORY[0x1E4F1CFD0];
      }
      else {
        uint64_t v13 = (void *)MEMORY[0x1E4F1CFC8];
      }
      uint64_t v14 = FigEndpointManagerGetCMBaseObject();
      uint64_t v15 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v15) {
        uint64_t v16 = v15;
      }
      else {
        uint64_t v16 = 0;
      }
      uint64_t v17 = *(void (**)(uint64_t, __CFString *, void))(v16 + 56);
      if (v17) {
        v17(v14, @"OverrideEndpointManagerEnabled", *v13);
      }
      if (cf2) {
        CFRelease(cf2);
      }
    }
  }
}

uint64_t airPlayDebugIPC_showStats(const void *a1, const __CFString *a2)
{
  CFArrayRef theArray = 0;
  CFTypeRef cf2 = 0;
  CFTypeRef cf = 0;
  if (sEndpointManagers)
  {
    CFIndex Count = CFArrayGetCount((CFArrayRef)sEndpointManagers);
    if (Count >= 1)
    {
      CFIndex v5 = Count;
      CFIndex v6 = 0;
      uint64_t v7 = *MEMORY[0x1E4F20620];
      uint64_t v8 = *MEMORY[0x1E4F1CF80];
      while (1)
      {
        CFArrayGetValueAtIndex((CFArrayRef)sEndpointManagers, v6);
        uint64_t CMBaseObject = FigEndpointManagerGetCMBaseObject();
        uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 8);
        uint64_t v11 = v10 ? v10 : 0;
        CFIndex v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, CFTypeRef *))(v11 + 48);
        if (!v12) {
          break;
        }
        uint64_t v13 = v12(CMBaseObject, v7, v8, &cf2);
        if (v13)
        {
          uint64_t v14 = v13;
          goto LABEL_24;
        }
        if (CFEqual(a1, cf2))
        {
          uint64_t v15 = FigEndpointManagerGetCMBaseObject();
          uint64_t v16 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v16) {
            uint64_t v17 = v16;
          }
          else {
            uint64_t v17 = 0;
          }
          CFTypeID v18 = *(uint64_t (**)(uint64_t, void, uint64_t, CFArrayRef *))(v17 + 48);
          if (v18)
          {
            uint64_t v19 = v18(v15, *MEMORY[0x1E4F20608], v8, &theArray);
            if (v19)
            {
              uint64_t v14 = v19;
            }
            else
            {
              if (CFArrayGetCount(theArray) < 1) {
                goto LABEL_13;
              }
              CFArrayGetValueAtIndex(theArray, 0);
              uint64_t v20 = FigEndpointGetCMBaseObject();
              uint64_t v21 = *(void *)(CMBaseObjectGetVTable() + 8);
              if (v21) {
                uint64_t v22 = v21;
              }
              else {
                uint64_t v22 = 0;
              }
              CFIndex v25 = *(uint64_t (**)(uint64_t, __CFString *, void, CFTypeRef *))(v22 + 48);
              if (v25)
              {
                uint64_t v26 = v25(v20, @"Statistics", 0, &cf);
                if (!v26)
                {
                  CFIndex v27 = CFStringGetLength(a2) + 1;
                  uint64_t v23 = (char *)malloc_type_malloc(v27, 0x1A7489AAuLL);
                  if (CFStringGetCString(a2, v23, v27, 0x8000100u))
                  {
                    uint64_t v14 = CFPropertyListWriteToFilePath();
                    if (v14) {
                      APSLogErrorAt();
                    }
                  }
                  else
                  {
                    APSLogErrorAt();
                    uint64_t v14 = 0;
                  }
                  goto LABEL_26;
                }
                uint64_t v14 = v26;
              }
              else
              {
                uint64_t v14 = 4294954514;
              }
            }
          }
          else
          {
            uint64_t v14 = 4294954514;
          }
LABEL_24:
          APSLogErrorAt();
          goto LABEL_25;
        }
        if (cf2)
        {
          CFRelease(cf2);
          CFTypeRef cf2 = 0;
        }
        if (v5 == ++v6) {
          goto LABEL_13;
        }
      }
      uint64_t v14 = 4294954514;
      goto LABEL_24;
    }
  }
LABEL_13:
  uint64_t v14 = 0;
LABEL_25:
  uint64_t v23 = 0;
LABEL_26:
  if (cf2)
  {
    CFRelease(cf2);
    CFTypeRef cf2 = 0;
  }
  if (theArray) {
    CFRelease(theArray);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v23) {
    free(v23);
  }
  return v14;
}

uint64_t APMessageRingGetTypeID()
{
  if (APMessageRingGetTypeID_sInitOnce != -1) {
    dispatch_once_f(&APMessageRingGetTypeID_sInitOnce, &APMessageRingGetTypeID_sTypeID, (dispatch_function_t)ring_getTypeID);
  }
  return APMessageRingGetTypeID_sTypeID;
}

uint64_t ring_getTypeID(uint64_t *a1)
{
  uint64_t result = _CFRuntimeRegisterClass();
  *a1 = result;
  return result;
}

uint64_t APMessageRingCreate(uint64_t a1, size_t a2, __int16 a3, const void *a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  if (a4)
  {
    if (APMessageRingGetTypeID_sInitOnce != -1) {
      dispatch_once_f(&APMessageRingGetTypeID_sInitOnce, &APMessageRingGetTypeID_sTypeID, (dispatch_function_t)ring_getTypeID);
    }
    uint64_t Instance = _CFRuntimeCreateInstance();
    if (Instance)
    {
      uint64_t v12 = Instance;
      *(void *)(Instance + 96) = 0;
      *(_OWORD *)(Instance + 64) = 0u;
      *(_OWORD *)(Instance + 80) = 0u;
      *(_OWORD *)(Instance + 32) = 0u;
      *(_OWORD *)(Instance + 48) = 0u;
      *(_OWORD *)(Instance + 16) = 0u;
      uint64_t v13 = FigSimpleMutexCreate();
      *(void *)(v12 + 16) = v13;
      if (!v13) {
        goto LABEL_23;
      }
      *(_WORD *)(v12 + 24) = a3;
      *(_WORD *)(v12 + 26) = a3;
      uint64_t v14 = malloc_type_calloc(a2, 8uLL, 0x2004093837F09uLL);
      *(void *)(v12 + 40) = v14;
      if (!v14
        || (uint64_t v15 = malloc_type_calloc(a2, 8uLL, 0x2004093837F09uLL), (*(void *)(v12 + 48) = v15) == 0)
        || (uint64_t v16 = malloc_type_calloc(a2, 4uLL, 0x100004052888210uLL), (*(void *)(v12 + 56) = v16) == 0)
        || (uint64_t v17 = malloc_type_calloc(a2, 0x18uLL, 0x1000040504FFAC1uLL), (*(void *)(v12 + 72) = v17) == 0))
      {
LABEL_23:
        APSLogErrorAt();
        uint64_t v21 = 4294960568;
LABEL_24:
        CFRelease((CFTypeRef)v12);
        return v21;
      }
      *(void *)(v12 + 32) = a2;
      *(void *)(v12 + 96) = CFRetain(a4);
      if (a2)
      {
        uint64_t v18 = 0;
        size_t v19 = a2;
        while (1)
        {
          uint64_t v20 = APTransportStreamSendBackingProviderAcquireBBuf();
          if (v20) {
            break;
          }
          v18 += 8;
          if (!--v19) {
            goto LABEL_14;
          }
        }
        uint64_t v21 = v20;
        APSLogErrorAt();
        goto LABEL_24;
      }
LABEL_14:
      if (gLogCategory_APMessageRing <= 50
        && (gLogCategory_APMessageRing != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v21 = 0;
      *a7 = v12;
    }
    else
    {
      APSLogErrorAt();
      return 4294960568;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960591;
  }
  return v21;
}

uint64_t APMessageRingGetUsedCount(uint64_t a1)
{
  MEMORY[0x1D25EB370](*(void *)(a1 + 16));
  uint64_t v2 = (unsigned __int16)(*(_WORD *)(a1 + 26) - *(_WORD *)(a1 + 24));
  MEMORY[0x1D25EB390](*(void *)(a1 + 16));
  return v2;
}

uint64_t APMessageRingGetNextFreeBacking(uint64_t a1)
{
  MEMORY[0x1D25EB370](*(void *)(a1 + 16));
  unint64_t v2 = *(void *)(a1 + 32);
  unint64_t v3 = *(unsigned __int16 *)(a1 + 26);
  if (v2 == (unsigned __int16)(v3 - *(_WORD *)(a1 + 24))) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8 * (v3 % v2));
  }
  MEMORY[0x1D25EB390](*(void *)(a1 + 16));
  return v4;
}

uint64_t APMessageRingGetNextEnqueueSequenceNumber(uint64_t a1)
{
  MEMORY[0x1D25EB370](*(void *)(a1 + 16));
  uint64_t v2 = *(unsigned __int16 *)(a1 + 26);
  MEMORY[0x1D25EB390](*(void *)(a1 + 16));
  return v2;
}

uint64_t APMessageRingEnqueueMessageForSending(uint64_t a1, OpaqueCMBlockBuffer *a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)a3;
  uint64_t v5 = *(void *)(a3 + 16);
  return APMessageRingEnqueueMessageForSendingWithPayloadCount(a1, a2, &v4, 1);
}

uint64_t APMessageRingEnqueueMessageForSendingWithPayloadCount(uint64_t a1, OpaqueCMBlockBuffer *a2, long long *a3, int a4)
{
  size_t v19 = 0;
  dataPointerOut = 0;
  MEMORY[0x1D25EB370](*(void *)(a1 + 16));
  if (*(void *)(a1 + 32) == (unsigned __int16)(*(_WORD *)(a1 + 26) - *(_WORD *)(a1 + 24)))
  {
    APSLogErrorAt();
    uint64_t v17 = 4294960587;
  }
  else
  {
    if (!a4 || -65536 * a4 >= 0x10000) {
      goto LABEL_18;
    }
    CMBlockBufferGetDataPointer(a2, 0, 0, 0, &dataPointerOut);
    uint64_t v8 = 0;
    unint64_t v9 = *(void *)(a1 + 32);
    unint64_t v10 = *(unsigned __int16 *)(a1 + 26);
    if (v9 != (unsigned __int16)(v10 - *(_WORD *)(a1 + 24))) {
      uint64_t v8 = *(OpaqueCMBlockBuffer **)(*(void *)(a1 + 48) + 8 * (v10 % v9));
    }
    CMBlockBufferGetDataPointer(v8, 0, 0, 0, &v19);
    if (dataPointerOut == v19)
    {
      APSTransportMessageSetAudioDataSequenceNumber();
      if (gLogCategory_APMessageRing <= 10
        && (gLogCategory_APMessageRing != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v11 = *(void *)(a1 + 40);
      unint64_t v12 = (unint64_t)*(unsigned __int16 *)(a1 + 26) % *(void *)(a1 + 32);
      uint64_t v13 = *(const void **)(v11 + 8 * v12);
      if (a2) {
        CFRetain(a2);
      }
      *(void *)(v11 + 8 * v12) = a2;
      if (v13) {
        CFRelease(v13);
      }
      unint64_t v14 = (unint64_t)*(unsigned __int16 *)(a1 + 26) % *(void *)(a1 + 32);
      *(_DWORD *)(*(void *)(a1 + 56) + 4 * v14) = a4;
      uint64_t v15 = *(void *)(a1 + 72) + 24 * v14;
      long long v16 = *a3;
      *(void *)(v15 + 16) = *((void *)a3 + 2);
      *(_OWORD *)uint64_t v15 = v16;
      APTransportStreamSendBackingProviderUpdateAcquiredBBuf();
      uint64_t v17 = 0;
      ++*(_WORD *)(a1 + 26);
    }
    else
    {
LABEL_18:
      APSLogErrorAt();
      uint64_t v17 = 4294960591;
    }
  }
  MEMORY[0x1D25EB390](*(void *)(a1 + 16));
  return v17;
}

uint64_t APMessageRingGetNextUnsentMessage(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1D25EB370](*(void *)(a1 + 16));
  unint64_t v4 = *(unsigned __int16 *)(a1 + 24);
  if (*(unsigned __int16 *)(a1 + 26) == v4)
  {
    uint64_t v5 = 0;
  }
  else
  {
    unint64_t v6 = v4 % *(void *)(a1 + 32);
    uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8 * v6);
    if (a2)
    {
      uint64_t v7 = *(void *)(a1 + 72) + 24 * v6;
      long long v8 = *(_OWORD *)v7;
      *(void *)(a2 + 16) = *(void *)(v7 + 16);
      *(_OWORD *)a2 = v8;
    }
  }
  MEMORY[0x1D25EB390](*(void *)(a1 + 16));
  return v5;
}

uint64_t APMessageRingMarkMessageAsSent(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1D25EB370](*(void *)(a1 + 16));
  unint64_t v4 = *(unsigned __int16 *)(a1 + 24);
  if (*(unsigned __int16 *)(a1 + 26) == v4) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8 * (v4 % *(void *)(a1 + 32)));
  }
  if (v5 == a2)
  {
    *(_WORD *)(a1 + 24) = v4 + 1;
    unint64_t v6 = *(const void **)(a1 + 80);
    if (v6)
    {
      CFRelease(v6);
      uint64_t v7 = 0;
      *(void *)(a1 + 80) = 0;
    }
    else
    {
      uint64_t v7 = 0;
    }
  }
  else
  {
    APSLogErrorAt();
    uint64_t v7 = 4294960591;
  }
  MEMORY[0x1D25EB390](*(void *)(a1 + 16));
  return v7;
}

uint64_t APMessageRingGetMessageAtSequenceNumber(void *a1, unsigned int a2, uint64_t a3, _DWORD *a4)
{
  MEMORY[0x1D25EB370](a1[2]);
  uint64_t v8 = *(void *)(a1[5] + 8 * ((unint64_t)a2 % a1[4]));
  if (!v8)
  {
LABEL_9:
    int v10 = 0;
    goto LABEL_12;
  }
  int AudioDataSequenceNumber = APSTransportMessageGetAudioDataSequenceNumber();
  if (AudioDataSequenceNumber)
  {
    int v10 = AudioDataSequenceNumber;
    APSLogErrorAt();
  }
  else
  {
    if (!a2)
    {
      if (a3)
      {
        int v10 = 0;
        unint64_t v11 = a1[9] + 24 * ((unint64_t)a2 % a1[4]);
        long long v12 = *(_OWORD *)v11;
        *(void *)(a3 + 16) = *(void *)(v11 + 16);
        *(_OWORD *)a3 = v12;
        goto LABEL_12;
      }
      goto LABEL_9;
    }
    if (gLogCategory_APMessageRing <= 30
      && (gLogCategory_APMessageRing != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    int v10 = 0;
    uint64_t v8 = 0;
  }
LABEL_12:
  MEMORY[0x1D25EB390](a1[2]);
  if (a4) {
    *a4 = v10;
  }
  return v8;
}

uint64_t APMessageRingFlush(uint64_t a1, _WORD *a2)
{
  if (a1)
  {
    MEMORY[0x1D25EB370](*(void *)(a1 + 16));
    if (gLogCategory_APMessageRing <= 50
      && (gLogCategory_APMessageRing != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    __int16 v4 = *(_WORD *)(a1 + 26);
    *(_WORD *)(a1 + 24) = v4;
    uint64_t v5 = *(const void **)(a1 + 80);
    if (v5)
    {
      CFRelease(v5);
      *(void *)(a1 + 80) = 0;
      __int16 v4 = *(_WORD *)(a1 + 26);
    }
    *a2 = v4;
    MEMORY[0x1D25EB390](*(void *)(a1 + 16));
  }
  return 0;
}

void APMessageRingSetMaxPacketRedundancy(uint64_t a1, int a2)
{
  MEMORY[0x1D25EB370](*(void *)(a1 + 16));
  *(_DWORD *)(a1 + 64) = a2;
  JUMPOUT(0x1D25EB390);
}

uint64_t APMessageRingGetMaxPacketRedundancy(uint64_t a1)
{
  MEMORY[0x1D25EB370](*(void *)(a1 + 16));
  uint64_t v2 = *(unsigned int *)(a1 + 64);
  MEMORY[0x1D25EB390](*(void *)(a1 + 16));
  return v2;
}

void APMessageRingSetTargetPayloadRedundancy(uint64_t a1, int a2)
{
  MEMORY[0x1D25EB370](*(void *)(a1 + 16));
  *(_DWORD *)(a1 + 68) = a2;
  JUMPOUT(0x1D25EB390);
}

uint64_t APMessageRingGetTargetPayloadRedundancy(uint64_t a1)
{
  MEMORY[0x1D25EB370](*(void *)(a1 + 16));
  uint64_t v2 = *(unsigned int *)(a1 + 68);
  MEMORY[0x1D25EB390](*(void *)(a1 + 16));
  return v2;
}

uint64_t APMessageRingCopyNextBurst(uint64_t a1, const __CFAllocator *a2, CFTypeRef *a3)
{
  MEMORY[0x1D25EB370](*(void *)(a1 + 16));
  if (*(unsigned __int16 *)(a1 + 26) == *(unsigned __int16 *)(a1 + 24))
  {
    uint64_t v14 = 4294960546;
LABEL_15:
    APSLogErrorAt();
    MEMORY[0x1D25EB390](*(void *)(a1 + 16));
    return v14;
  }
  CFMutableArrayRef Mutable = CFArrayCreateMutable(a2, (*(_DWORD *)(a1 + 64) + 1), MEMORY[0x1E4F1D510]);
  if (!Mutable)
  {
    uint64_t v14 = 4294960568;
    goto LABEL_15;
  }
  uint64_t v7 = Mutable;
  unsigned int v8 = 0;
  unsigned int v9 = 0;
  unsigned __int16 v10 = *(_WORD *)(a1 + 24);
  do
  {
    if (v8 > *(_DWORD *)(a1 + 68)) {
      break;
    }
    unint64_t v11 = *(const void **)(*(void *)(a1 + 40) + 8 * ((unint64_t)v10 % *(void *)(a1 + 32)));
    if (!v11) {
      break;
    }
    if (APSTransportMessageGetAudioDataSequenceNumber()) {
      break;
    }
    if (v10) {
      break;
    }
    CFArrayAppendValue(v7, v11);
    ++v9;
    int v12 = *(_DWORD *)(*(void *)(a1 + 56) + 4 * (0uLL % *(void *)(a1 + 32)));
    v8 += v12;
    unsigned __int16 v10 = -(__int16)v12;
  }
  while (v9 <= *(_DWORD *)(a1 + 64));
  APSCFArrayReverse();
  uint64_t v13 = *(const void **)(a1 + 80);
  *(void *)(a1 + 80) = v7;
  CFRetain(v7);
  if (v13) {
    CFRelease(v13);
  }
  *a3 = CFRetain(v7);
  MEMORY[0x1D25EB390](*(void *)(a1 + 16));
  CFRelease(v7);
  return 0;
}

uint64_t APMessageRingMarkBurstAsSent(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1D25EB370](*(void *)(a1 + 16));
  if (!a2) {
    goto LABEL_9;
  }
  __int16 v4 = *(const void **)(a1 + 80);
  if (v4 != (const void *)a2)
  {
    if (v4 && CFEqual((CFTypeRef)a2, v4))
    {
      a2 = *(void *)(a1 + 80);
      ++*(_WORD *)(a1 + 24);
      if (!a2) {
        goto LABEL_10;
      }
      goto LABEL_8;
    }
LABEL_9:
    APSLogErrorAt();
    a2 = 4294960591;
    goto LABEL_10;
  }
  ++*(_WORD *)(a1 + 24);
LABEL_8:
  CFRelease((CFTypeRef)a2);
  a2 = 0;
  *(void *)(a1 + 80) = 0;
LABEL_10:
  MEMORY[0x1D25EB390](*(void *)(a1 + 16));
  return a2;
}

uint64_t ring_Finalize(void *a1)
{
  if (gLogCategory_APMessageRing <= 50 && (gLogCategory_APMessageRing != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  if (a1[4])
  {
    unint64_t v2 = 0;
    do
    {
      unint64_t v3 = *(const void **)(a1[5] + 8 * v2);
      if (v3)
      {
        CFRelease(v3);
        *(void *)(a1[5] + 8 * v2) = 0;
      }
      APTransportStreamSendBackingProviderRelinquishBBuf();
      ++v2;
    }
    while (v2 < a1[4]);
  }
  __int16 v4 = (void *)a1[5];
  if (v4)
  {
    free(v4);
    a1[5] = 0;
  }
  uint64_t v5 = (void *)a1[6];
  if (v5)
  {
    free(v5);
    a1[6] = 0;
  }
  unint64_t v6 = (void *)a1[7];
  if (v6)
  {
    free(v6);
    a1[7] = 0;
  }
  uint64_t v7 = (void *)a1[9];
  if (v7)
  {
    free(v7);
    a1[9] = 0;
  }
  unsigned int v8 = (const void *)a1[12];
  if (v8) {
    CFRelease(v8);
  }
  unsigned int v9 = (const void *)a1[10];
  if (v9) {
    CFRelease(v9);
  }
  return FigSimpleMutexDestroy();
}

uint64_t SPEndpointManagerCreate(void *a1)
{
  if (SPEndpointManagerGetShared_once != -1) {
    dispatch_once(&SPEndpointManagerGetShared_once, &__block_literal_global_3);
  }
  CFTypeRef v2 = (CFTypeRef)SPEndpointManagerGetShared_sSPEndpointManager;
  if (SPEndpointManagerGetShared_sSPEndpointManager) {
    CFTypeRef v2 = CFRetain((CFTypeRef)SPEndpointManagerGetShared_sSPEndpointManager);
  }
  *a1 = v2;
  return gCreationErr_0;
}

uint64_t SPEndpointManagerGetShared()
{
  if (SPEndpointManagerGetShared_once != -1) {
    dispatch_once(&SPEndpointManagerGetShared_once, &__block_literal_global_3);
  }
  return SPEndpointManagerGetShared_sSPEndpointManager;
}

void __SPEndpointManagerGetShared_block_invoke()
{
  uint64_t v42 = 0;
  long long v0 = *(_OWORD *)(MEMORY[0x1E4F1D530] + 16);
  *(_OWORD *)&keyCallBacks.versioCFIndex n = *MEMORY[0x1E4F1D530];
  *(_OWORD *)&keyCallBacks.release = v0;
  long long v1 = *(_OWORD *)(MEMORY[0x1E4F1D548] + 16);
  *(_OWORD *)&callBacks.versioCFIndex n = *MEMORY[0x1E4F1D548];
  *(_OWORD *)&callBacks.release = v1;
  keyCallBacks.equal = (CFDictionaryEqualCallBack)spmanager_transportDeviceEqual;
  keyCallBacks.hash = (CFDictionaryHashCallBack)spmanager_transportDeviceHash;
  callBacks.equal = (CFSetEqualCallBack)spmanager_transportDeviceEqual;
  callBacks.hash = (CFSetHashCallBack)spmanager_transportDeviceHash;
  LogSetAppID();
  CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  FigEndpointManagerGetClassID();
  int v3 = CMDerivedObjectCreate();
  if (v3)
  {
    int v33 = v3;
    APSLogErrorAt();
  }
  else
  {
    uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
    dispatch_queue_t v5 = dispatch_queue_create("com.apple.airplay.endpointManager.notification", 0);
    *(void *)(DerivedStorage + 8) = v5;
    if (v5)
    {
      uint64_t v6 = FigSimpleMutexCreate();
      *(void *)(DerivedStorage + 24) = v6;
      if (v6)
      {
        *(unsigned char *)(DerivedStorage + 32) = 0;
        *(_WORD *)(DerivedStorage + 34) = 0;
        CFMutableDictionaryRef v7 = CFDictionaryCreateMutable(v2, 0, &keyCallBacks, MEMORY[0x1E4F1D540]);
        *(void *)(DerivedStorage + 48) = v7;
        if (v7)
        {
          CFMutableSetRef v8 = CFSetCreateMutable(v2, 0, &callBacks);
          *(void *)(DerivedStorage + 56) = v8;
          if (v8)
          {
            CFMutableSetRef Mutable = CFSetCreateMutable(v2, 0, MEMORY[0x1E4F1D548]);
            *(void *)(DerivedStorage + 64) = Mutable;
            if (Mutable)
            {
              uint64_t v10 = MEMORY[0x1E4F1F9F8];
              *(_OWORD *)(DerivedStorage + 72) = *MEMORY[0x1E4F1F9F8];
              *(void *)(DerivedStorage + 88) = *(void *)(v10 + 16);
              *(void *)(DerivedStorage + 128) = (int)APSSettingsGetIntWithDefault();
              *(void *)(DerivedStorage + 136) = (int)APSSettingsGetIntWithDefault();
              *(void *)(DerivedStorage + 144) = (int)APSSettingsGetIntWithDefault();
              CFMutableDictionaryRef v11 = CFDictionaryCreateMutable(v2, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
              if (v11)
              {
                int v12 = v11;
                APSEventRecorderCreate();
                uint64_t v13 = *(const void **)(DerivedStorage + 160);
                if (v13) {
                  CFDictionarySetValue(v12, (const void *)*MEMORY[0x1E4F475A0], v13);
                }
                uint64_t v14 = (const void *)*MEMORY[0x1E4F1CFC8];
                CFDictionarySetValue(v12, (const void *)*MEMORY[0x1E4F475A8], (const void *)*MEMORY[0x1E4F1CFC8]);
                CFDictionarySetValue(v12, (const void *)*MEMORY[0x1E4F475B8], v14);
                CFDictionarySetValue(v12, (const void *)*MEMORY[0x1E4F475B0], v14);
                CFDictionarySetValue(v12, (const void *)*MEMORY[0x1E4F475D0], v14);
                uint64_t v15 = (const void *)*MEMORY[0x1E4F475C8];
                if (APSSettingsGetInt64()) {
                  long long v16 = v14;
                }
                else {
                  long long v16 = (const void *)*MEMORY[0x1E4F1CFD0];
                }
                CFDictionarySetValue(v12, v15, v16);
                int v17 = APBrowserCreate();
                if (v17)
                {
                  int v33 = v17;
                }
                else
                {
                  uint64_t v18 = *(void *)(DerivedStorage + 152);
                  size_t v19 = v42;
                  uint64_t v20 = *(void *)(CMBaseObjectGetVTable() + 16);
                  if (v20) {
                    uint64_t v21 = v20;
                  }
                  else {
                    uint64_t v21 = 0;
                  }
                  uint64_t v22 = *(uint64_t (**)(uint64_t, void (*)(uint64_t, int, uint64_t, void *), const void *))(v21 + 24);
                  if (v22)
                  {
                    int v23 = v22(v18, spmanager_browserEventHandler, v19);
                    if (v23)
                    {
                      int v33 = v23;
                    }
                    else
                    {
                      int v24 = AirPlayDebugIPCEnableForEndpointManager(v42);
                      if (v24)
                      {
                        int v33 = v24;
                      }
                      else
                      {
                        *(_DWORD *)(DerivedStorage + 16) = -1;
                        uint64_t v25 = (uint64_t)v42;
                        uint64_t v26 = CMBaseObjectGetDerivedStorage();
                        CFIndex v27 = *(NSObject **)(v26 + 8);
                        uint64_t handler = MEMORY[0x1E4F143A8];
                        uint64_t v35 = 0x40000000;
                        uint64_t v36 = __spmanager_registerForNotifications_block_invoke;
                        uint64_t v37 = &__block_descriptor_tmp_225;
                        uint64_t v38 = v25;
                        notify_register_dispatch("com.apple.airplay.prefsChanged", (int *)(v26 + 16), v27, &handler);
                        *(unsigned char *)(DerivedStorage + 112) = APSSettingsGetInt64() != 0;
                        uint64_t v28 = (CFTypeRef *)(DerivedStorage + 104);
                        int v29 = SPHubbedDevicesProviderCreate(v28);
                        if (v29)
                        {
                          int v33 = v29;
                        }
                        else
                        {
                          int v30 = SPHubbedDevicesProviderAddListener((uint64_t)*v28, (uint64_t)v42, (uint64_t)spmanager_handleHubbedDevicesChanged);
                          if (v30)
                          {
                            int v33 = v30;
                          }
                          else
                          {
                            int started = SPHubbedDevicesProviderStartAsync(*v28);
                            if (!started)
                            {
                              spmanager_handlePreferencesChanged((uint64_t)v42);
                              if (introspector_getCollectionOfSPEndpointManagers_once != -1) {
                                dispatch_once(&introspector_getCollectionOfSPEndpointManagers_once, &__block_literal_global_234);
                              }
                              if (introspector_getCollectionOfSPEndpointManagers_coll)
                              {
                                uint64_t v32 = *(NSObject **)introspector_getCollectionOfSPEndpointManagers_coll;
                                uint64_t handler = MEMORY[0x1E4F143A8];
                                uint64_t v35 = 0x40000000;
                                uint64_t v36 = __spmanager_create_block_invoke;
                                uint64_t v37 = &__block_descriptor_tmp_24;
                                uint64_t v38 = introspector_getCollectionOfSPEndpointManagers_coll;
                                CFIndex v39 = v42;
                                dispatch_sync(v32, &handler);
                              }
                              APSIntrospectorAddCommand();
                              APSIntrospectorAddCommand();
                              APSIntrospectorAddCommand();
                              APSIntrospectorAddCommand();
                              APSIntrospectorAddCommand();
                              APSIntrospectorAddCommand();
                              if (gLogCategory_SPEndpointManager <= 50
                                && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
                              {
                                LogPrintF();
                              }
                              int v33 = 0;
                              SPEndpointManagerGetShared_sSPEndpointManager = (uint64_t)v42;
                              uint64_t v42 = 0;
                              goto LABEL_34;
                            }
                            int v33 = started;
                          }
                        }
                      }
                    }
                  }
                  else
                  {
                    int v33 = -12782;
                  }
                }
                APSLogErrorAt();
LABEL_34:
                CFRelease(v12);
                goto LABEL_35;
              }
            }
          }
        }
      }
    }
    APSLogErrorAt();
    int v33 = -16711;
  }
LABEL_35:
  if (v42) {
    CFRelease(v42);
  }
  gCreationErr_0 = v33;
}

CFHashCode spmanager_transportDeviceHash()
{
  DiscoveryID = (const void *)APTransportDeviceGetDiscoveryID();
  return CFHash(DiscoveryID);
}

void spmanager_browserEventHandler(uint64_t a1, int a2, uint64_t a3, void *a4)
{
  if (gLogCategory_SPEndpointManager <= 30
    && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
  {
    uint64_t v40 = a3;
    LogPrintF();
  }
  if ((a2 - 3) < 2)
  {
    if (!a3) {
      goto LABEL_118;
    }
    CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    if (APTransportDeviceCreate()) {
      goto LABEL_119;
    }
    uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
    CFTypeRef v42 = 0;
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 24));
    if (gLogCategory_SPEndpointManager <= 30
      && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
    {
      uint64_t v40 = *(unsigned __int16 *)(DerivedStorage + 34);
      LogPrintF();
    }
    if (!*(_WORD *)(DerivedStorage + 34)) {
      goto LABEL_132;
    }
    if (APSSettingsGetInt64() && IsAppleInternalBuild())
    {
      if (gLogCategory_SPEndpointManager <= 50
        && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (APEndpointDescriptionAirPlayCreateWithTransportDevice((uint64_t)v8, 0, 0, &v42)) {
        goto LABEL_52;
      }
    }
    else if (SPEndpointDescriptionCreateWithTransportDevice((uint64_t)v8, 0, &v42))
    {
LABEL_52:
      APSLogErrorAt();
      goto LABEL_132;
    }
    CFTypeRef v10 = v42;
    CMBaseObjectGetDerivedStorage();
    if (!spmanager_deviceIsAllowlisted((uint64_t)a4, (BOOL)v10))
    {
      if (gLogCategory_SPEndpointManager <= 30
        && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      goto LABEL_132;
    }
    int IsSelf = APTransportDeviceIsSelf();
    int IsPresentOnInfra = APTransportDeviceIsPresentOnInfra();
    if (IsSelf)
    {
LABEL_132:
      MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 24));
      if (v42) {
        CFRelease(v42);
      }
      return;
    }
    int v13 = IsPresentOnInfra;
    CFTypeRef v14 = v42;
    uint64_t v15 = CMBaseObjectGetDerivedStorage();
    if (!v13)
    {
      CFDictionaryRef v19 = *(const __CFDictionary **)(v15 + 48);
      if (CFDictionaryGetValue(v19, 0))
      {
        if (gLogCategory_SPEndpointManager <= 50
          && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        if (!APSGetFBOPropertyInt64()) {
          spmanager_removeEndpointForTransportDevice((uint64_t)a4, v19, 0);
        }
      }
      goto LABEL_132;
    }
    uint64_t v16 = CMBaseObjectGetDerivedStorage();
    CFTypeRef cf = 0;
    CFDictionaryRef v17 = *(const __CFDictionary **)(v16 + 48);
    if (gLogCategory_SPEndpointManager <= 30
      && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (CFSetContainsValue(*(CFSetRef *)(v16 + 56), 0))
    {
      if (gLogCategory_SPEndpointManager <= 50
        && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
      {
        APTransportDeviceGetDiscoveryID();
        LogPrintF();
      }
      CFSetRemoveValue(*(CFMutableSetRef *)(v16 + 56), 0);
    }
    if (CFDictionaryContainsKey(v17, 0))
    {
      if (gLogCategory_SPEndpointManager <= 50
        && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
      {
        APTransportDeviceGetDiscoveryID();
        LogPrintF();
      }
      goto LABEL_126;
    }
    CFDictionaryRef theDict = v17;
    uint64_t v20 = CMBaseObjectGetDerivedStorage();
    if (APTransportDeviceGetAdvertiserInfo())
    {
      uint64_t v21 = (const void *)APAdvertiserInfoCopyProperty();
      if (v21)
      {
        uint64_t v22 = v21;
        int v23 = CFSetContainsValue(*(CFSetRef *)(v20 + 96), v21);
LABEL_69:
        if (gLogCategory_SPEndpointManager <= 50
          && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        if (v22) {
          CFRelease(v22);
        }
        if (!v23) {
          goto LABEL_126;
        }
        CFMutableSetRef Mutable = CFDictionaryCreateMutable(v8, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
        CFDictionaryRef v25 = Mutable;
        if (Mutable)
        {
          uint64_t v26 = *(const void **)(v16 + 160);
          if (v26) {
            CFDictionarySetValue(Mutable, @"EventRecorder", v26);
          }
          int v27 = SPEndpointCreateWithEndpointDescription((uint64_t)v8, v14, v25, &cf);
          if (!v27)
          {
            CFTypeRef v28 = cf;
            CMBaseObjectGetDerivedStorage();
            if (APTransportDeviceGetAdvertiserInfo())
            {
              int v29 = (const void *)APAdvertiserInfoCopyProperty();
              if (!v29) {
                int v29 = (const void *)APAdvertiserInfoCopyProperty();
              }
              int v30 = (const void *)APAdvertiserInfoCopyProperty();
              CFStringRef v31 = CFStringCreateWithFormat(v8, 0, @"%@ ('%@')", v29, v30);
              if (v29) {
                CFRelease(v29);
              }
              if (v30) {
                CFRelease(v30);
              }
            }
            else
            {
              if (gLogCategory_SPEndpointManager <= 90
                && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              CFStringRef v31 = CFStringCreateWithFormat(v8, 0, @"%@ ('%@')", 0, 0, v40);
            }
            if (gLogCategory_SPEndpointManager <= 50
              && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
            {
              APTransportDeviceGetDiscoveryID();
              LogPrintF();
            }
            CFDictionarySetValue(theDict, 0, v28);
            CMNotificationCenterGetDefaultLocalCenter();
            FigNotificationCenterAddWeakListener();
            CMNotificationCenterGetDefaultLocalCenter();
            FigNotificationCenterAddWeakListener();
            if (!APSGetFBOPropertyInt64())
            {
              CFStringRef v32 = v31;
              spmanager_activationAttemptsClearIfExpired();
              uint64_t v33 = CMBaseObjectGetDerivedStorage();
              int64_t value = 0;
              uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
              uint64_t v35 = *(void *)(CMBaseObjectGetVTable() + 8);
              if (v35) {
                uint64_t v36 = v35;
              }
              else {
                uint64_t v36 = 0;
              }
              uint64_t v37 = *(void (**)(uint64_t, void, const __CFAllocator *, void **))(v36 + 48);
              if (v37 && (v37(CMBaseObject, *MEMORY[0x1E4F20E38], v8, &value), value))
              {
                int v38 = CFSetContainsValue(*(CFSetRef *)(v33 + 64), value);
                if (value) {
                  CFRelease(value);
                }
                CFStringRef v31 = v32;
                if (v38)
                {
                  if (gLogCategory_SPEndpointManager <= 50
                    && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
                  {
                    LogPrintF();
                  }
                  spmanager_checkHubbedDevices(a4, 0);
                  if (!v32) {
                    goto LABEL_112;
                  }
                  goto LABEL_111;
                }
              }
              else
              {
                CFStringRef v31 = v32;
              }
              spmanager_activateEndpoint(a4, (uint64_t)v28);
            }
            if (!v31)
            {
LABEL_112:
              int v39 = 0;
              goto LABEL_127;
            }
LABEL_111:
            CFRelease(v31);
            goto LABEL_112;
          }
          int v39 = v27;
          APSLogErrorAt();
        }
        else
        {
          APSLogErrorAt();
          int v39 = -16711;
        }
LABEL_127:
        if (cf) {
          CFRelease(cf);
        }
        if (v25) {
          CFRelease(v25);
        }
        if (!v39) {
          goto LABEL_132;
        }
        goto LABEL_52;
      }
      if (gLogCategory_SPEndpointManager <= 90)
      {
        if (gLogCategory_SPEndpointManager == -1 && !_LogCategory_Initialize()) {
          goto LABEL_144;
        }
        goto LABEL_125;
      }
    }
    else if (gLogCategory_SPEndpointManager <= 90)
    {
      if (gLogCategory_SPEndpointManager == -1 && !_LogCategory_Initialize()) {
        goto LABEL_144;
      }
LABEL_125:
      LogPrintF();
LABEL_144:
      uint64_t v22 = 0;
      int v23 = 0;
      goto LABEL_69;
    }
LABEL_126:
    int v39 = 0;
    CFDictionaryRef v25 = 0;
    goto LABEL_127;
  }
  if ((a2 - 7) < 2) {
    return;
  }
  if (a2 == 5)
  {
    if (a3)
    {
      if (!APTransportDeviceCreate())
      {
        uint64_t v7 = CMBaseObjectGetDerivedStorage();
        MEMORY[0x1D25EB370](*(void *)(v7 + 24));
        if (gLogCategory_SPEndpointManager <= 50
          && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
        {
          APTransportDeviceGetDiscoveryID();
          LogPrintF();
        }
        uint64_t v18 = CMBaseObjectGetDerivedStorage();
        if (gLogCategory_SPEndpointManager <= 50
          && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
        {
          APTransportDeviceGetDiscoveryID();
          LogPrintF();
        }
        spmanager_removeEndpointForTransportDeviceIfNeeded((uint64_t)a4, 0, *(const __CFDictionary **)(v18 + 48), 1, 0);
        MEMORY[0x1D25EB390](*(void *)(v7 + 24));
        return;
      }
LABEL_119:
      APSLogErrorAt();
      return;
    }
LABEL_118:
    APSSignalErrorAt();
    return;
  }
  if (gLogCategory_SPEndpointManager <= 60
    && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

void spmanager_handleHubbedDevicesChanged(uint64_t a1, void *a2)
{
  if (gLogCategory_SPEndpointManager <= 40
    && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  MEMORY[0x1D25EB370](DerivedStorage[3]);
  uint64_t CMBaseObject = SPHubbedDevicesProviderGetCMBaseObject(DerivedStorage[13]);
  uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(unsigned int (**)(uint64_t, __CFString *, void, CFTypeRef *))(v6 + 48);
  if (v7 && !v7(CMBaseObject, @"HubbedDevices", *MEMORY[0x1E4F1CF80], &cf) && !FigCFEqual())
  {
    if (gLogCategory_SPEndpointManager <= 50
      && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFAllocatorRef v8 = (const void *)DerivedStorage[12];
    CFTypeRef v9 = cf;
    DerivedStorage[12] = cf;
    if (v9) {
      CFRetain(v9);
    }
    if (v8) {
      CFRelease(v8);
    }
    if (DerivedStorage[12]) {
      spmanager_checkHubbedDevices(a2, 1);
    }
  }
  MEMORY[0x1D25EB390](DerivedStorage[3]);
  if (cf) {
    CFRelease(cf);
  }
}

void spmanager_handlePreferencesChanged(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  APSSettingsSynchronize();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 24));
  int v3 = (const void *)APSSettingsCopyValue();
  if (!FigCFEqual())
  {
    if (gLogCategory_SPEndpointManager <= 40
      && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    __int16 v4 = *(const void **)(DerivedStorage + 40);
    *(void *)(DerivedStorage + 40) = v3;
    if (v3) {
      CFRetain(v3);
    }
    if (v4) {
      CFRelease(v4);
    }
    if (*(void *)(DerivedStorage + 40))
    {
      CFArrayRef v5 = (const __CFArray *)FigCFDictionaryCopyArrayOfValues();
      CFTypeRef cf = 0;
      CFIndex Count = CFArrayGetCount(v5);
      if (Count >= 1)
      {
        CFIndex v7 = Count;
        CFIndex v8 = 0;
        while (1)
        {
          CFDictionaryRef ValueAtIndex = CFArrayGetValueAtIndex(v5, v8);
          uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
          uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 8);
          uint64_t v12 = v11 ? v11 : 0;
          int v13 = *(unsigned int (**)(uint64_t, __CFString *, void, CFTypeRef *))(v12 + 48);
          if (!v13 || v13(CMBaseObject, @"EndpointDescription", 0, &cf)) {
            break;
          }
          if (!spmanager_deviceIsAllowlisted(a1, (BOOL)cf)) {
            spmanager_removeEndpointIfNeeded(a1, (uint64_t)ValueAtIndex, 1, 0);
          }
          if (cf)
          {
            CFRelease(cf);
            CFTypeRef cf = 0;
          }
          if (v7 == ++v8) {
            goto LABEL_29;
          }
        }
        APSLogErrorAt();
        if (cf) {
          CFRelease(cf);
        }
      }
LABEL_29:
      if (v5) {
        CFRelease(v5);
      }
    }
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 24));
  if (v3) {
    CFRelease(v3);
  }
}

void __spmanager_create_block_invoke(uint64_t a1)
{
}

uint64_t spmanager_introspector_setDiscoveryMode(const void *a1, uint64_t a2, int a3, uint64_t a4)
{
  if (!a1 || a3 < 2) {
    return FPrintF();
  }
  BOOL v5 = strcmp(*(const char **)(a4 + 8), "1") == 0;
  FPrintF();
  return spmanager_setDiscoveryNeeded(a1, v5, 0, 0);
}

void spmanager_introspector_activateEndpoint(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  if (!a1 || a3 < 2)
  {
LABEL_15:
    FPrintF();
    return;
  }
  CFStringRef v7 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x1E4F1CF80], *(const char **)(a4 + 8), 0x8000100u);
  if (a3 == 2 || (uint64_t v8 = atol(*(const char **)(a4 + 16))) == 0)
  {
    uint64_t v9 = 10;
  }
  else
  {
    uint64_t v9 = v8;
    if (gLogCategory_SPEndpointManager <= 50
      && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  CFTypeRef v10 = spmanager_introspector_copyMatchingEndpoint(a1);
  if (!v10)
  {
    FPrintF();
    if (v7) {
      CFRelease(v7);
    }
    goto LABEL_15;
  }
  uint64_t v11 = v10;
  uint64_t v12 = malloc_type_calloc(1uLL, 8uLL, 0x10000404A09149AuLL);
  *(unsigned char *)uint64_t v12 = 1;
  v12[1] = ++spmanager_introspector_getNextIndex_sIndex;
  FPrintF();
  if (gLogCategory_SPEndpointManager <= 50
    && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v13) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  uint64_t v15 = *(void (**)(const void *, uint64_t, void, void, _DWORD *))(v14 + 8);
  if (v15) {
    v15(v11, v9, 0, spmanager_introspector_activateEndpointCallback, v12);
  }
  FPrintF();
  if (v7) {
    CFRelease(v7);
  }
  CFRelease(v11);
}

void spmanager_introspector_deactivateEndpoint(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  keys[1] = *(void **)MEMORY[0x1E4F143B8];
  if (!a1 || a3 < 2)
  {
LABEL_9:
    FPrintF();
    return;
  }
  CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFStringRef v6 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x1E4F1CF80], *(const char **)(a4 + 8), 0x8000100u);
  CFTypeRef v7 = spmanager_introspector_copyMatchingEndpoint(a1);
  if (!v7)
  {
    FPrintF();
    if (v6) {
      CFRelease(v6);
    }
    goto LABEL_9;
  }
  uint64_t v8 = v7;
  uint64_t v9 = malloc_type_calloc(1uLL, 8uLL, 0x10000404A09149AuLL);
  CFTypeRef v10 = (void *)*MEMORY[0x1E4F20538];
  values = @"Introspector deactivation request";
  keys[0] = v10;
  *(unsigned char *)uint64_t v9 = 0;
  v9[1] = ++spmanager_introspector_getNextIndex_sIndex;
  CFDictionaryRef v11 = CFDictionaryCreate(v5, (const void **)keys, (const void **)&values, 1, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  FPrintF();
  if (gLogCategory_SPEndpointManager <= 50
    && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v12) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  uint64_t v14 = *(void (**)(const void *, CFDictionaryRef, void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void *), _DWORD *))(v13 + 16);
  if (v14) {
    v14(v8, v11, spmanager_introspector_activateEndpointCallback, v9);
  }
  FPrintF();
  if (v6) {
    CFRelease(v6);
  }
  CFRelease(v8);
  if (v11) {
    CFRelease(v11);
  }
}

void spmanager_introspector_listEndpoints(uint64_t a1, uint64_t a2)
{
  if (a1) {
    introspector_listEndpoints(a1, a2);
  }
}

uint64_t spmanager_introspector_toggleListenForAvailable()
{
  int v0 = spmanager_introspector_toggleListenForAvailable_listening;
  spmanager_introspector_toggleListenForAvailable_listening = spmanager_introspector_toggleListenForAvailable_listening == 0;
  CMNotificationCenterGetDefaultLocalCenter();
  if (v0) {
    CMNotificationCenterRemoveListener();
  }
  else {
    CMNotificationCenterAddListener();
  }
  return FPrintF();
}

void spmanager_introspector_homeHubInfo()
{
  CFTypeRef cf = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t CMBaseObject = SPHubbedDevicesProviderGetCMBaseObject(*(void *)(DerivedStorage + 104));
  uint64_t v2 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  __int16 v4 = *(void (**)(uint64_t, __CFString *, void, CFTypeRef *))(v3 + 48);
  if (v4) {
    v4(CMBaseObject, @"HubbedDevices", *MEMORY[0x1E4F1CF80], &cf);
  }
  FigServer_IsAirplayd();
  FPrintF();
  FPrintF();
  FPrintF();
  FPrintF();
  if (cf) {
    CFRelease(cf);
  }
}

uint64_t spmanager_Invalidate(void *a1)
{
  if (*(unsigned char *)(CMBaseObjectGetDerivedStorage() + 1))
  {
    uint64_t v2 = dispatch_queue_create("com.apple.airplay.spendpointManager.invalidatequeue", 0);
    dispatch_sync_f(v2, a1, (dispatch_function_t)spmanager_invalidateInternal);
    if (v2) {
      dispatch_release(v2);
    }
  }
  return 0;
}

void spmanager_Finalize(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 1)
    && gLogCategory_SPEndpointManager <= 50
    && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)DerivedStorage)
  {
    if (introspector_getCollectionOfSPEndpointManagers_once != -1) {
      dispatch_once(&introspector_getCollectionOfSPEndpointManagers_once, &__block_literal_global_234);
    }
    if (introspector_getCollectionOfSPEndpointManagers_coll)
    {
      uint64_t v3 = *(NSObject **)introspector_getCollectionOfSPEndpointManagers_coll;
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 0x40000000;
      block[2] = __spmanager_Finalize_block_invoke;
      block[3] = &__block_descriptor_tmp_120;
      block[4] = introspector_getCollectionOfSPEndpointManagers_coll;
      void block[5] = a1;
      dispatch_sync(v3, block);
    }
    __int16 v4 = *(NSObject **)(DerivedStorage + 8);
    if (v4)
    {
      dispatch_release(v4);
      *(void *)(DerivedStorage + 8) = 0;
    }
    FigSimpleMutexDestroy();
    CFAllocatorRef v5 = *(const void **)(DerivedStorage + 40);
    if (v5)
    {
      CFRelease(v5);
      *(void *)(DerivedStorage + 40) = 0;
    }
    CFStringRef v6 = *(const void **)(DerivedStorage + 48);
    if (v6)
    {
      CFRelease(v6);
      *(void *)(DerivedStorage + 48) = 0;
    }
    CFTypeRef v7 = *(const void **)(DerivedStorage + 56);
    if (v7)
    {
      CFRelease(v7);
      *(void *)(DerivedStorage + 56) = 0;
    }
    uint64_t v8 = *(const void **)(DerivedStorage + 64);
    if (v8)
    {
      CFRelease(v8);
      *(void *)(DerivedStorage + 64) = 0;
    }
    uint64_t v9 = *(const void **)(DerivedStorage + 96);
    if (v9)
    {
      CFRelease(v9);
      *(void *)(DerivedStorage + 96) = 0;
    }
    CFTypeRef v10 = *(const void **)(DerivedStorage + 104);
    if (v10)
    {
      CFRelease(v10);
      *(void *)(DerivedStorage + 104) = 0;
    }
    CFDictionaryRef v11 = *(const void **)(DerivedStorage + 160);
    if (v11)
    {
      CFRelease(v11);
      *(void *)(DerivedStorage + 160) = 0;
    }
    uint64_t v12 = *(const void **)(DerivedStorage + 152);
    if (v12)
    {
      CFRelease(v12);
      *(void *)(DerivedStorage + 152) = 0;
    }
  }
  else
  {
    if (gLogCategory_SPEndpointManager <= 100) {
      spmanager_Finalize_cold_1(gLogCategory_SPEndpointManager);
    }
    __break(1u);
  }
}

__CFString *spmanager_CopyDebugDescription(uint64_t a1)
{
  uint64_t v2 = *MEMORY[0x1E4F1CF80];
  CFMutableSetRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFTypeRef cf = 0;
  CFStringAppendFormat(Mutable, 0, @"<SPEndpointManager %p>", a1);
  uint64_t CMBaseObject = FigEndpointManagerGetCMBaseObject();
  uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  CFTypeRef v7 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v6 + 48);
  if (v7)
  {
    int v8 = v7(CMBaseObject, @"ShowInfo", v2, &cf);
    CFTypeRef v9 = cf;
    if (!v8)
    {
      ASPrintF();
      size_t v10 = strlen(0);
      if (v10 && *(unsigned char *)(v10 - 1) == 10) {
        *(unsigned char *)(v10 - 1) = 0;
      }
      CFStringAppendFormat(Mutable, 0, @"%s", 0);
      free(0);
      CFTypeRef v9 = cf;
    }
    if (v9) {
      CFRelease(v9);
    }
  }
  return Mutable;
}

uint64_t spmanager_CopyProperty(uint64_t a1, const void *a2, const __CFAllocator *a3, void *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_SPEndpointManager <= 10
    && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
  {
    uint64_t v52 = "OSStatus spmanager_CopyProperty(CMBaseObjectRef, CFStringRef, CFAllocatorRef, void *)";
    CFTypeRef v54 = a2;
    LogPrintF();
  }
  if (*(unsigned char *)DerivedStorage)
  {
    APSLogErrorAt();
    return 4294950584;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20620]))
  {
    uint64_t v9 = 0;
    *a4 = CFRetain((CFTypeRef)*MEMORY[0x1E4F20658]);
    return v9;
  }
  if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20630]))
  {
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 24));
    CMBaseObjectGetDerivedStorage();
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F20608]))
    {
      uint64_t v9 = 0;
      *a4 = spmanager_copyAvailableEndpoints(a1, a3);
LABEL_13:
      MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 24));
      return v9;
    }
    if (!CFEqual(a2, @"ShowInfo"))
    {
      if (gLogCategory_SPEndpointManager <= 30
        && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v9 = 4294954512;
      goto LABEL_13;
    }
    CMBaseObjectGetDerivedStorage();
    uint64_t v60 = 0;
    value[0] = 0;
    memset(valuePtr, 0, sizeof(valuePtr));
    DataBuffer_Init();
    uint64_t v12 = CMBaseObjectGetDerivedStorage();
    v62[0] = 0;
    CFMutableStringRef Mutable = CFStringCreateMutable(a3, 0);
    if (!Mutable)
    {
      APSLogErrorAt();
      CFTypeRef v47 = 0;
      uint64_t v9 = 4294960568;
      goto LABEL_97;
    }
    uint64_t v14 = Mutable;
    uint64_t CMBaseObject = APBrowserGetCMBaseObject();
    uint64_t v16 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v16) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = 0;
    }
    uint64_t v18 = *(uint64_t (**)(uint64_t, void, const __CFAllocator *, CFDictionaryRef *))(v17 + 48);
    if (v18)
    {
      uint64_t v19 = v18(CMBaseObject, *MEMORY[0x1E4F47618], a3, v62);
      if (!v19)
      {
        uint64_t v20 = CFDictionaryGetValue(v62[0], (const void *)*MEMORY[0x1E4F47620]);
        CFStringAppendFormat(v14, 0, @"\n%@", v20);
        CFStringAppend(v14, @"\n");
        CFStringAppend(v14, @"+-+ SPEndpointManager state +-+\n");
        CFStringAppend(v14, @"\n");
        uint64_t v21 = 116;
        if (!*(unsigned char *)(v12 + 32)) {
          uint64_t v21 = 102;
        }
        CFStringAppendFormat(v14, 0, @"DiscoveryNeeded: %c\n", v21, v52, v54);
        uint64_t ModeString = APBrowserGetModeString();
        CFStringAppendFormat(v14, 0, @"DiscoveryMode: %s\n", ModeString);
        CFStringAppend(v14, @"\n");
        CFSetRef v23 = *(const __CFSet **)(v12 + 40);
        if (v23
          && (CFTypeID v24 = CFGetTypeID(v23), TypeID = CFArrayGetTypeID(), v23 = *(const __CFSet **)(v12 + 40), v24 == TypeID))
        {
          CFIndex Count = CFSetGetCount(v23);
          CFStringAppendFormat(v14, 0, @"AllowlistedDevices: (%ld)\n", Count);
          CFArrayGetCount(*(CFArrayRef *)(v12 + 40));
          value[6] = (void *)MEMORY[0x1E4F143A8];
          value[7] = (void *)0x40000000;
          value[8] = __spmanager_copyDescription_block_invoke;
          value[9] = &__block_descriptor_tmp_158;
          value[10] = v14;
          CFArrayApplyBlock();
        }
        else
        {
          CFStringAppendFormat(v14, 0, @"AllowlistedDevices: %@\n", v23);
        }
        CFStringAppend(v14, @"\n");
        CFSetRef v27 = *(const __CFSet **)(v12 + 96);
        if (v27 && (v28 = CFGetTypeID(v27), v29 = CFSetGetTypeID(), CFSetRef v27 = *(const __CFSet **)(v12 + 96), v28 == v29))
        {
          CFIndex v30 = CFSetGetCount(v27);
          CFStringAppendFormat(v14, 0, @"HubbedDeviceIDs: (%ld)\n", v30);
          value[1] = (void *)MEMORY[0x1E4F143A8];
          value[2] = (void *)0x40000000;
          value[3] = __spmanager_copyDescription_block_invoke_2;
          value[4] = &__block_descriptor_tmp_165;
          value[5] = v14;
          CFSetApplyBlock();
        }
        else
        {
          CFStringAppendFormat(v14, 0, @"HubbedDeviceIDs: %@\n", v27);
        }
        uint64_t v9 = 0;
        goto LABEL_38;
      }
      uint64_t v9 = v19;
    }
    else
    {
      uint64_t v9 = 4294954514;
    }
    APSLogErrorAt();
    CFRelease(v14);
    uint64_t v14 = 0;
LABEL_38:
    if (v62[0]) {
      CFRelease(v62[0]);
    }
    if (!v9)
    {
      CFDictionaryRef theDict = CFDictionaryCreateMutable(a3, 1, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      if (theDict)
      {
        CFStringRef theString = CFStringCreateMutable(a3, 0);
        uint64_t v56 = v14;
        CFStringAppend(theString, v14);
        CFAllocatorRef v31 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
        CFArrayRef v32 = spmanager_copyAvailableEndpoints(a1, (const __CFAllocator *)*MEMORY[0x1E4F1CF80]);
        CFArrayRef theArray = v32;
        if (v32)
        {
          uint64_t v33 = CFArrayGetCount(v32);
          if (v33 >= 1)
          {
            uint64_t v34 = 0;
            uint64_t v35 = 0;
            CFIndex v36 = 0;
            uint64_t v37 = 0;
            int v38 = 0;
            do
            {
              CFArrayGetValueAtIndex(theArray, v36);
              value[0] = 0;
              uint64_t v39 = FigEndpointGetCMBaseObject();
              uint64_t v40 = *(void *)(CMBaseObjectGetVTable() + 8);
              if (v40) {
                uint64_t v41 = v40;
              }
              else {
                uint64_t v41 = 0;
              }
              CFTypeRef v42 = *(void (**)(uint64_t, __CFString *, const __CFAllocator *, void **))(v41 + 48);
              if (v42) {
                v42(v39, @"EndpointShowInfo", v31, value);
              }
              CFIndex v43 = value[0];
              if (value[0])
              {
                if (!v38)
                {
                  int v38 = CFArrayCreateMutable(v31, v33, MEMORY[0x1E4F1D510]);
                  CFIndex v43 = value[0];
                }
                CFArrayAppendValue(v38, v43);
                if (CFDictionaryGetInt64())
                {
                  if (!v37) {
                    uint64_t v37 = CFArrayCreateMutable(v31, v33, MEMORY[0x1E4F1D510]);
                  }
                  CFArrayAppendValue(v37, value[0]);
                  ++v34;
                }
                ++v35;
                if (value[0])
                {
                  CFRelease(value[0]);
                  value[0] = 0;
                }
              }
              ++v36;
            }
            while (v33 != v36);
            if (v34 == 1)
            {
              DataBuffer_AppendF();
LABEL_67:
              for (CFIndex i = 0; i != v34; ++i)
              {
                value[0] = (void *)CFArrayGetValueAtIndex(v37, i);
                spmanager_AppendEndpointShowInfo((const __CFDictionary *)value[0], 1);
              }
LABEL_69:
              CFIndex v44 = theDict;
              CFDictionarySetValue(theDict, @"ActivatedEndpointShowInfos", v37);
              if (v37)
              {
                CFRelease(v37);
                uint64_t v37 = 0;
              }
LABEL_71:
              if (v33 == 1) {
                uint64_t v46 = "";
              }
              else {
                uint64_t v46 = "s";
              }
              dispatch_time_t v53 = v46;
              DataBuffer_AppendF();
              CFTypeRef v47 = v56;
              if (v38)
              {
                if (v35 >= 1)
                {
                  for (CFIndex j = 0; j != v35; ++j)
                  {
                    value[0] = (void *)CFArrayGetValueAtIndex(v38, j);
                    spmanager_AppendEndpointShowInfo((const __CFDictionary *)value[0], 0);
                  }
                }
                CFDictionarySetValue(v44, @"EndpointShowInfos", v38);
                CFRelease(v38);
              }
              uint64_t v49 = DataBuffer_Append();
              if (v49)
              {
                uint64_t v9 = v49;
              }
              else
              {
                uint64_t v9 = DataBuffer_Commit();
                CFIndex v50 = theString;
                CFArrayRef v51 = theArray;
                if (!v9)
                {
                  CFStringAppendFormat(theString, 0, @"%s", 0, v53);
                  CFDictionarySetValue(v44, @"DetailedDescription", theString);
                  goto LABEL_82;
                }
              }
              APSLogErrorAt();
              CFRelease(theDict);
              CFIndex v44 = 0;
              CFIndex v50 = theString;
              CFTypeRef v47 = v56;
              CFArrayRef v51 = theArray;
LABEL_82:
              DataBuffer_Free();
              if (v51) {
                CFRelease(v51);
              }
              if (v50) {
                CFRelease(v50);
              }
              if (!v47) {
                goto LABEL_88;
              }
LABEL_87:
              CFRelease(v47);
LABEL_88:
              if (v37) {
                CFRelease(v37);
              }
              if (!v9) {
                *a4 = v44;
              }
              goto LABEL_13;
            }
            DataBuffer_AppendF();
            if (v34)
            {
              if (v34 < 1) {
                goto LABEL_69;
              }
              goto LABEL_67;
            }
LABEL_64:
            CFIndex v44 = theDict;
            goto LABEL_71;
          }
        }
        else
        {
          uint64_t v33 = 0;
        }
        DataBuffer_AppendF();
        int v38 = 0;
        uint64_t v35 = 0;
        uint64_t v37 = 0;
        goto LABEL_64;
      }
      CFTypeRef v47 = v14;
      APSLogErrorAt();
      uint64_t v9 = 4294950585;
LABEL_99:
      DataBuffer_Free();
      CFIndex v44 = 0;
      uint64_t v37 = 0;
      if (!v47) {
        goto LABEL_88;
      }
      goto LABEL_87;
    }
    CFTypeRef v47 = v14;
LABEL_97:
    APSLogErrorAt();
    goto LABEL_99;
  }
  *(void *)&valuePtr[0] = 8;
  CFNumberRef v10 = CFNumberCreate(a3, kCFNumberSInt64Type, valuePtr);
  *a4 = v10;
  if (v10) {
    return 0;
  }
  APSLogErrorAt();
  return 4294950585;
}

uint64_t spmanager_SetProperty(uint64_t a1, const void *a2, uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_SPEndpointManager <= 10
    && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)DerivedStorage)
  {
    APSLogErrorAt();
    return 4294950584;
  }
  else if (CFEqual(a2, @"SPEndpointManagerProperty_HubbedDeviceIDs"))
  {
    uint64_t CMBaseObject = SPHubbedDevicesProviderGetCMBaseObject(*(void *)(DerivedStorage + 104));
    uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v7) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 0;
    }
    uint64_t v9 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t))(v8 + 56);
    if (v9)
    {
      return v9(CMBaseObject, @"HubbedDevices", a3);
    }
    else
    {
      return 4294954514;
    }
  }
  else
  {
    if (gLogCategory_SPEndpointManager <= 30
      && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return 4294954512;
  }
}

unsigned char *spmanager_invalidateInternal(void *a1)
{
  uint64_t result = (unsigned char *)CMBaseObjectGetDerivedStorage();
  if (!*result)
  {
    uint64_t v3 = result;
    if (gLogCategory_SPEndpointManager <= 50
      && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    AirPlayDebugIPCDisableForEndpointManager(a1);
    int v4 = *((_DWORD *)v3 + 4);
    if (v4 != -1)
    {
      notify_cancel(v4);
      *((_DWORD *)v3 + 4) = -1;
    }
    MEMORY[0x1D25EB370](*((void *)v3 + 3));
    uint64_t v5 = (const void *)*((void *)v3 + 12);
    if (v5) {
      CFRelease(v5);
    }
    *((void *)v3 + 12) = CFSetCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, 0, MEMORY[0x1E4F1D548]);
    spmanager_checkHubbedDevices(a1, 0);
    MEMORY[0x1D25EB390](*((void *)v3 + 3));
    *uint64_t v3 = 1;
    SPHubbedDevicesProviderRemoveListener(*((void *)v3 + 13), (uint64_t)a1);
    uint64_t CMBaseObject = SPHubbedDevicesProviderGetCMBaseObject(*((void *)v3 + 13));
    if (CMBaseObject)
    {
      uint64_t v7 = CMBaseObject;
      uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v9 = v8 ? v8 : 0;
      CFNumberRef v10 = *(void (**)(uint64_t))(v9 + 24);
      if (v10) {
        v10(v7);
      }
    }
    uint64_t result = (unsigned char *)*((void *)v3 + 19);
    if (result)
    {
      uint64_t v11 = APBrowserGetCMBaseObject();
      if (!v11
        || ((v12 = v11, (uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 8)) == 0) ? (v14 = 0) : (v14 = v13),
            (uint64_t v15 = *(uint64_t (**)(uint64_t))(v14 + 24)) == 0 || (result = (unsigned char *)v15(v12), result)))
      {
        uint64_t result = (unsigned char *)APSLogErrorAt();
      }
    }
  }
  if (gLogCategory_SPEndpointManager <= 50)
  {
    if (gLogCategory_SPEndpointManager != -1) {
      return (unsigned char *)LogPrintF();
    }
    uint64_t result = (unsigned char *)_LogCategory_Initialize();
    if (result) {
      return (unsigned char *)LogPrintF();
    }
  }
  return result;
}

void spmanager_checkHubbedDevices(void *a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  long long context = 0u;
  *(_OWORD *)theSet = 0u;
  if (gLogCategory_SPEndpointManager <= 50
    && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)DerivedStorage
    || (theSet[0] = 0,
        long long context = (unint64_t)a1,
        (theSet[1] = CFSetCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D548])) == 0))
  {
    APSLogErrorAt();
  }
  else
  {
    spmanager_activationAttemptsClearIfExpired();
    CFDictionaryApplyFunction(*(CFDictionaryRef *)(DerivedStorage + 48), (CFDictionaryApplierFunction)checkEndpointHubbedState, &context);
    CFSetRef Count = (const __CFSet *)CFSetGetCount(*(CFSetRef *)(DerivedStorage + 96));
    if (CFSetGetCount(theSet[1]) >= 1)
    {
      if (gLogCategory_SPEndpointManager <= 40
        && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFSetApplyFunction(theSet[1], (CFSetApplierFunction)removeNonHubbedEndpoint, a1);
    }
    if (gLogCategory_SPEndpointManager <= 50
      && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    spmanager_setDiscoveryNeeded(a1, *((void *)&context + 1) < (uint64_t)Count, (CFSetRef)((char *)theSet[0] + *((void *)&context + 1)) == Count, a2);
    if (theSet[1]) {
      CFRelease(theSet[1]);
    }
  }
  if (gLogCategory_SPEndpointManager <= 50
    && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

__n128 spmanager_activationAttemptsClearIfExpired()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 84))
  {
    uint64_t v2 = DerivedStorage;
    uint64_t v3 = (CMTime *)(DerivedStorage + 72);
    HostTimeClocCFIndex k = CMClockGetHostTimeClock();
    CMClockGetTime(&lhs, HostTimeClock);
    CMTime rhs = *v3;
    CMTimeSubtract(&time, &lhs, &rhs);
    result.n128_f64[0] = CMTimeGetSeconds(&time);
    if (result.n128_f64[0] >= (double)*(unint64_t *)(v2 + 144))
    {
      if (gLogCategory_SPEndpointManager <= 50
        && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFSetRemoveAllValues(*(CFMutableSetRef *)(v2 + 64));
      uint64_t v5 = MEMORY[0x1E4F1F9F8];
      __n128 result = *(__n128 *)MEMORY[0x1E4F1F9F8];
      *(_OWORD *)&v3->int64_t value = *MEMORY[0x1E4F1F9F8];
      v3->epoch = *(void *)(v5 + 16);
    }
  }
  return result;
}

void checkEndpointHubbedState(uint64_t a1, const void *a2, uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int64_t value = 0;
  uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
  uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = *(unsigned int (**)(uint64_t, void, void, void **))(v8 + 48);
  if (!v9 || v9(CMBaseObject, *MEMORY[0x1E4F20E38], *MEMORY[0x1E4F1CF80], &value))
  {
    APSLogErrorAt();
  }
  else
  {
    int v10 = CFSetContainsValue(*(CFSetRef *)(DerivedStorage + 96), value);
    uint64_t v11 = APSGetFBOPropertyInt64();
    if (gLogCategory_SPEndpointManager <= 30
      && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (v10)
    {
      if (v11)
      {
        if (gLogCategory_SPEndpointManager <= 50
          && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        ++*(void *)(a3 + 8);
      }
      else if (CFSetContainsValue(*(CFSetRef *)(DerivedStorage + 64), value))
      {
        if (gLogCategory_SPEndpointManager <= 50
          && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        ++*(void *)(a3 + 16);
      }
      else
      {
        if (gLogCategory_SPEndpointManager <= 50
          && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t v15 = *(const void **)a3;
        ++*(void *)(a3 + 8);
        spmanager_activateEndpoint(v15, (uint64_t)a2);
      }
    }
    else if (v11)
    {
      if (gLogCategory_SPEndpointManager <= 50
        && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v12 = value;
      uint64_t v13 = CMBaseObjectGetDerivedStorage();
      CFSetRemoveValue(*(CFMutableSetRef *)(v13 + 64), v12);
      if (gLogCategory_SPEndpointManager <= 50
        && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (!CFSetGetCount(*(CFSetRef *)(v13 + 64)))
      {
        uint64_t v14 = MEMORY[0x1E4F1F9F8];
        *(_OWORD *)(v13 + 72) = *MEMORY[0x1E4F1F9F8];
        *(void *)(v13 + 88) = *(void *)(v14 + 16);
      }
      spmanager_deactivateEndpoint(*(const void **)a3, (uint64_t)a2, @"NoLongerHubbed");
    }
    else
    {
      if (gLogCategory_SPEndpointManager <= 50
        && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFSetAddValue(*(CFMutableSetRef *)(a3 + 24), a2);
    }
  }
  if (value) {
    CFRelease(value);
  }
}

uint64_t removeNonHubbedEndpoint(uint64_t a1, uint64_t a2)
{
  char v3 = 0;
  uint64_t result = spmanager_removeEndpointIfNeeded(a2, a1, 1, &v3);
  if (gLogCategory_SPEndpointManager <= 50)
  {
    if (gLogCategory_SPEndpointManager != -1) {
      return LogPrintF();
    }
    uint64_t result = _LogCategory_Initialize();
    if (result) {
      return LogPrintF();
    }
  }
  return result;
}

uint64_t spmanager_setDiscoveryNeeded(const void *a1, int a2, int a3, int a4)
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  uint64_t v9 = result;
  if (!a2)
  {
    int v10 = *(_DWORD *)(result + 36) > 0;
    if (!a3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  int v10 = 1;
  if (a3) {
LABEL_3:
  }
    LOBYTE(a3) = *(_DWORD *)(result + 36) == 0;
LABEL_4:
  if (*(unsigned __int8 *)(result + 32) != v10
    || (a4 ? (int v11 = v10) : (int v11 = 0), (v10 & a3 & 1) != 0 || v11))
  {
    if (gLogCategory_SPEndpointManager <= 50
      && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(v9 + 32) = v10;
    CFRetain(a1);
    return APSDispatchAsyncFHelper();
  }
  else if (gLogCategory_SPEndpointManager <= 50)
  {
    if (gLogCategory_SPEndpointManager != -1) {
      return LogPrintF();
    }
    uint64_t result = _LogCategory_Initialize();
    if (result) {
      return LogPrintF();
    }
  }
  return result;
}

void spmanager_activateEndpoint(const void *a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFMutableStringRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    uint64_t v6 = Mutable;
    CFDictionarySetValue(Mutable, @"SupportsMultipleStreams", (const void *)*MEMORY[0x1E4F1CFD0]);
    uint64_t v7 = malloc_type_calloc(1uLL, 0x10uLL, 0x10200405F07FB98uLL);
    *(void *)uint64_t v7 = CFRetain(a1);
    v7[8] = 1;
    ++*(_DWORD *)(DerivedStorage + 36);
    if (gLogCategory_SPEndpointManager <= 50
      && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v8) {
      uint64_t v9 = v8;
    }
    else {
      uint64_t v9 = 0;
    }
    int v10 = *(unsigned int (**)(uint64_t, uint64_t, __CFDictionary *, void, unsigned char *))(v9 + 8);
    if (!v10 || v10(a2, 8, v6, spmanager_activateEndpointCallback, v7)) {
      APSLogErrorAt();
    }
    CFRelease(v6);
  }
  else
  {
    APSLogErrorAt();
  }
}

void spmanager_deactivateEndpoint(const void *a1, uint64_t a2, const void *a3)
{
  uint64_t v6 = malloc_type_calloc(1uLL, 0x10uLL, 0x10200405F07FB98uLL);
  *(void *)uint64_t v6 = CFRetain(a1);
  v6[8] = 0;
  if (gLogCategory_SPEndpointManager <= 50
    && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a3)
  {
    CFMutableStringRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 1, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    uint64_t v8 = Mutable;
    if (Mutable) {
      CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F20538], a3);
    }
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v9) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = 0;
  }
  int v11 = *(unsigned int (**)(uint64_t, __CFDictionary *, uint64_t (*)(), unsigned char *))(v10 + 16);
  if (!v11 || v11(a2, v8, spmanager_activateEndpointCallback, v6))
  {
    APSLogErrorAt();
    if (!v8) {
      return;
    }
  }
  else if (!v8)
  {
    return;
  }
  CFRelease(v8);
}

void spmanager_activateEndpointCallback(uint64_t a1, uint64_t a2, uint64_t a3, int a4, void *a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  if (gLogCategory_SPEndpointManager <= 50
    && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!a4)
  {
    uint64_t v9 = CMBaseObjectGetDerivedStorage();
    if (gLogCategory_SPEndpointManager <= 40
      && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
    if (*(unsigned char *)(v9 + 112)) {
      dispatch_async(*(dispatch_queue_t *)(v9 + 8), &__block_literal_global_87);
    }
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 24));
  if (*((unsigned char *)a5 + 8))
  {
    --*(_DWORD *)(DerivedStorage + 36);
    uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
    uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v11) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    uint64_t v13 = *(void (**)(uint64_t, void, void, CFTypeRef *))(v12 + 48);
    if (v13 && (v13(CMBaseObject, *MEMORY[0x1E4F20E38], *MEMORY[0x1E4F1CF80], &cf), (CFTypeRef v14 = cf) != 0))
    {
      uint64_t v15 = CMBaseObjectGetDerivedStorage();
      if (gLogCategory_SPEndpointManager <= 50
        && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFSetAddValue(*(CFMutableSetRef *)(v15 + 64), v14);
      if ((*(unsigned char *)(v15 + 84) & 1) == 0)
      {
        if (gLogCategory_SPEndpointManager <= 50
          && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        HostTimeClocCFIndex k = CMClockGetHostTimeClock();
        CMClockGetTime(&v19, HostTimeClock);
        *(CMTime *)(v15 + 72) = v19;
      }
    }
    else if (gLogCategory_SPEndpointManager <= 90 {
           && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
    }
    {
      LogPrintF();
    }
  }
  if (a4 || (int v17 = *((unsigned __int8 *)a5 + 8), !*((unsigned char *)a5 + 8)))
  {
    spmanager_removeEndpointIfNeeded(*a5, a1, 0, 0);
    int v17 = *((unsigned __int8 *)a5 + 8);
  }
  spmanager_checkHubbedDevices(*a5, v17 == 0);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 24));
  if (*a5) {
    CFRelease((CFTypeRef)*a5);
  }
  free(a5);
  if (cf) {
    CFRelease(cf);
  }
}

uint64_t spmanager_removeEndpointIfNeeded(uint64_t a1, uint64_t a2, int a3, char *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
  uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v9) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = *(uint64_t (**)(uint64_t, __CFString *, void, CFTypeRef *))(v10 + 48);
  if (v11) {
    uint64_t v12 = v11(CMBaseObject, @"TransportDevice", *MEMORY[0x1E4F1CF80], &cf);
  }
  else {
    uint64_t v12 = 4294954514;
  }
  if (gLogCategory_SPEndpointManager <= 50
    && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
  {
    if (cf) {
      APTransportDeviceGetDiscoveryID();
    }
    LogPrintF();
  }
  if (v12) {
    APSLogErrorAt();
  }
  else {
    spmanager_removeEndpointForTransportDeviceIfNeeded(a1, cf, *(const __CFDictionary **)(DerivedStorage + 48), a3, a4);
  }
  if (cf) {
    CFRelease(cf);
  }
  return v12;
}

void __spmanager_notifyAvailableEndpointsChanged_block_invoke()
{
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterPostNotification(DarwinNotifyCenter, @"TestOnly_ActiveSidePlayEndpointsChanged", 0, 0, 1u);
}

uint64_t spmanager_removeEndpointForTransportDeviceIfNeeded(uint64_t a1, const void *a2, const __CFDictionary *a3, int a4, char *a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
  {
    uint64_t result = APSLogErrorAt();
    goto LABEL_15;
  }
  uint64_t v11 = DerivedStorage;
  if (gLogCategory_SPEndpointManager <= 50
    && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a4 && !CFSetContainsValue(*(CFSetRef *)(v11 + 56), a2))
  {
    if (gLogCategory_SPEndpointManager <= 50
      && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
    {
      APTransportDeviceGetDiscoveryID();
      LogPrintF();
    }
    CFSetAddValue(*(CFMutableSetRef *)(v11 + 56), a2);
  }
  uint64_t result = (uint64_t)CFDictionaryGetValue(a3, a2);
  if (!result
    || (uint64_t result = APSGetFBOPropertyInt64()) != 0
    || (uint64_t result = CFSetContainsValue(*(CFSetRef *)(v11 + 56), a2), !result))
  {
LABEL_15:
    char v13 = 0;
    if (!a5) {
      return result;
    }
    goto LABEL_16;
  }
  uint64_t result = (uint64_t)spmanager_removeEndpointForTransportDevice(a1, a3, a2);
  char v13 = 1;
  if (a5) {
LABEL_16:
  }
    *a5 = v13;
  return result;
}

const void *spmanager_removeEndpointForTransportDevice(uint64_t a1, const __CFDictionary *a2, const void *a3)
{
  CMBaseObjectGetDerivedStorage();
  uint64_t result = CFDictionaryGetValue(a2, a3);
  if (result)
  {
    uint64_t v7 = result;
    if (gLogCategory_SPEndpointManager <= 50
      && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
    {
      APTransportDeviceGetDiscoveryID();
      LogPrintF();
    }
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
    uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v8) {
      uint64_t v9 = v8;
    }
    else {
      uint64_t v9 = 0;
    }
    uint64_t v10 = *(void (**)(const void *))(v9 + 32);
    if (v10) {
      v10(v7);
    }
    CFDictionaryRemoveValue(a2, a3);
    return (const void *)spmanager_checkHubbedDevices(a1, 0);
  }
  return result;
}

void spmanager_handleEndpointFailed(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = APSGetFBOPropertyInt64();
  if (gLogCategory_SPEndpointManager <= 50)
  {
    if (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
    if (gLogCategory_SPEndpointManager <= 50
      && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  if (v6)
  {
    spmanager_deactivateEndpoint(a2, a4, @"ConnectionFailed");
  }
}

void spmanager_handleEndpointDissociated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_SPEndpointManager <= 50)
  {
    if (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
    if (gLogCategory_SPEndpointManager <= 50
      && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 24));
  spmanager_removeEndpointIfNeeded(a2, a4, 0, 0);
  JUMPOUT(0x1D25EB390);
}

void spmanager_deferredHandleDiscoveryStateChanged(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 24));
  if (gLogCategory_SPEndpointManager <= 50
    && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(a1 + 8))
  {
    if (*(unsigned char *)(a1 + 9))
    {
      if (*(_WORD *)(DerivedStorage + 34))
      {
        char v3 = *(NSObject **)(DerivedStorage + 120);
        if (v3)
        {
          int64_t v4 = 0;
LABEL_20:
          dispatch_time_t v8 = dispatch_time(0, v4);
          dispatch_source_set_timer(v3, v8, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
          goto LABEL_25;
        }
      }
    }
    if (*(unsigned char *)(a1 + 10))
    {
      char v3 = *(NSObject **)(DerivedStorage + 120);
      if (v3)
      {
        if (*(_WORD *)(DerivedStorage + 34)) {
          int64_t v4 = 1000000000 * *(void *)(DerivedStorage + 128);
        }
        else {
          int64_t v4 = 0;
        }
        goto LABEL_20;
      }
    }
    uint64_t v6 = *(void **)a1;
    uint64_t v7 = CMBaseObjectGetDerivedStorage();
    if (gLogCategory_SPEndpointManager <= 50
      && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v9 = *(NSObject **)(v7 + 120);
    if (v9)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(v7 + 120));
      dispatch_release(v9);
      *(void *)(v7 + 120) = 0;
    }
    *(void *)(v7 + 120) = dispatch_source_create(MEMORY[0x1E4F14490], 0, 0, *(dispatch_queue_t *)(v7 + 8));
    CFRetain(v6);
    dispatch_set_context(*(dispatch_object_t *)(v7 + 120), v6);
    dispatch_source_set_event_handler_f(*(dispatch_source_t *)(v7 + 120), (dispatch_function_t)spmanager_discoveryTimerFired);
    dispatch_source_set_cancel_handler_f(*(dispatch_source_t *)(v7 + 120), (dispatch_function_t)spmanager_discoveryTimerCancelled);
    uint64_t v10 = *(NSObject **)(v7 + 120);
    dispatch_time_t v11 = dispatch_time(0, 0);
    dispatch_source_set_timer(v10, v11, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
    dispatch_resume(*(dispatch_object_t *)(v7 + 120));
  }
  else
  {
    uint64_t v5 = *(NSObject **)(DerivedStorage + 120);
    if (v5)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(DerivedStorage + 120));
      dispatch_release(v5);
      *(void *)(DerivedStorage + 120) = 0;
    }
  }
LABEL_25:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 24));
  uint64_t v12 = *(const void **)a1;
  CFRelease(v12);
}

void spmanager_discoveryTimerFired(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 24));
  if (*(_WORD *)(DerivedStorage + 34) && !*(_DWORD *)(DerivedStorage + 36))
  {
    uint64_t v4 = 0;
    char v3 = (uint64_t *)(DerivedStorage + 136);
  }
  else
  {
    char v3 = (uint64_t *)(DerivedStorage + 128);
    uint64_t v4 = 2;
  }
  uint64_t v5 = *v3;
  if (gLogCategory_SPEndpointManager <= 50
    && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  spmanager_setDiscoveryMode(a1, v4);
  uint64_t v6 = *(NSObject **)(DerivedStorage + 120);
  dispatch_time_t v7 = dispatch_time(0, 1000000000 * v5);
  dispatch_source_set_timer(v6, v7, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
  JUMPOUT(0x1D25EB390);
}

void spmanager_discoveryTimerCancelled(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_SPEndpointManager <= 50
    && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 24));
  spmanager_setDiscoveryMode((uint64_t)a1, 0);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 24));
  CFRelease(a1);
}

uint64_t spmanager_setDiscoveryMode(uint64_t a1, uint64_t a2)
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  uint64_t v5 = result;
  if (gLogCategory_SPEndpointManager <= 50)
  {
    if (gLogCategory_SPEndpointManager != -1 || (uint64_t result = _LogCategory_Initialize(), result))
    {
      APBrowserGetModeString();
      APBrowserGetModeString();
      uint64_t result = LogPrintF();
    }
  }
  if (*(unsigned __int16 *)(v5 + 34) != a2)
  {
    *(_WORD *)(v5 + 34) = a2;
    if (!a2)
    {
      CFDictionaryRef v6 = *(const __CFDictionary **)(v5 + 48);
      CMBaseObjectGetDerivedStorage();
      if (gLogCategory_SPEndpointManager <= 50
        && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFArrayRef v7 = (const __CFArray *)FigCFDictionaryCopyArrayOfKeys();
      if (v7)
      {
        CFArrayRef v8 = v7;
        if (CFArrayGetCount(v7) >= 1)
        {
          CFIndex v9 = 0;
          do
          {
            CFDictionaryRef ValueAtIndex = CFArrayGetValueAtIndex(v8, v9);
            spmanager_removeEndpointForTransportDeviceIfNeeded(a1, ValueAtIndex, v6, 1, 0);
            ++v9;
          }
          while (v9 < CFArrayGetCount(v8));
        }
        CFRelease(v8);
      }
    }
    uint64_t v11 = *(void *)(v5 + 152);
    uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v12) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    CFTypeRef v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 16);
    if (!v14 || (uint64_t result = v14(v11, a2), result))
    {
      return APSLogErrorAt();
    }
  }
  return result;
}

CFMutableArrayRef spmanager_copyAvailableEndpoints(uint64_t a1, const __CFAllocator *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFMutableArrayRef Mutable = CFArrayCreateMutable(a2, 0, MEMORY[0x1E4F1D510]);
  if (*(void *)(DerivedStorage + 48)) {
    CFDictionaryApplyBlock();
  }
  return Mutable;
}

void __spmanager_copyAvailableEndpoints_block_invoke(uint64_t a1, uint64_t a2, const void *a3)
{
  if (APSGetFBOPropertyInt64())
  {
    uint64_t v5 = *(__CFArray **)(a1 + 32);
    CFArrayAppendValue(v5, a3);
  }
}

CFDictionaryRef spmanager_AppendEndpointShowInfo(const __CFDictionary *result, int a2)
{
  if (result)
  {
    CFDictionaryRef v3 = result;
    CFDictionaryGetValue(result, @"EndpointHash");
    DataBuffer_AppendF();
    CFDictionaryGetValue(v3, @"Name");
    DataBuffer_AppendF();
    if (CFDictionaryGetValue(v3, @"DiscoveryID")) {
      DataBuffer_AppendF();
    }
    CFDictionaryGetValue(v3, @"DeviceID");
    DataBuffer_AppendF();
    CFDictionaryGetValue(v3, @"Model");
    DataBuffer_AppendF();
    CFDictionaryGetValue(v3, @"SourceVersion");
    DataBuffer_AppendF();
    CFDictionaryGetValue(v3, @"AirPlayFeatures");
    APSFeaturesCopyStringRepresentation();
    DataBuffer_AppendF();
    CFDictionaryGetInt64();
    DataBuffer_AppendF();
    CFDictionaryGetInt64();
    DataBuffer_AppendF();
    CFDictionaryRef Value = (const __CFDictionary *)CFDictionaryGetValue(v3, @"SenderSessionInfo");
    if (Value)
    {
      CFDictionaryRef v5 = (const __CFDictionary *)CFDictionaryGetValue(Value, @"TransportSessionInfo");
      if (v5)
      {
        if (CFDictionaryGetValue(v5, (const void *)*MEMORY[0x1E4F476D8])) {
          DataBuffer_AppendF();
        }
      }
    }
    uint64_t result = (const __CFDictionary *)DataBuffer_AppendF();
    if (a2)
    {
      uint64_t result = (const __CFDictionary *)CFDictionaryGetValue(v3, @"StreamInfo_BufferedAudio");
      if (result)
      {
        CFDictionaryRef v6 = result;
        CFDictionaryGetInt64();
        DataBuffer_AppendF();
        CFDictionaryGetInt64();
        DataBuffer_AppendF();
        CFDictionaryGetValue(v6, @"Type");
        DataBuffer_AppendF();
        if (CFDictionaryGetValue(v6, @"Subtype")) {
          DataBuffer_AppendF();
        }
        CFDictionaryGetValue(v6, @"Name");
        DataBuffer_AppendF();
        return (const __CFDictionary *)DataBuffer_AppendF();
      }
    }
  }
  return result;
}

void __spmanager_copyDescription_block_invoke(uint64_t a1, uint64_t a2)
{
}

void __spmanager_copyDescription_block_invoke_2(uint64_t a1, uint64_t a2)
{
}

BOOL spmanager_deviceIsAllowlisted(uint64_t a1, BOOL a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef v24 = 0;
  CFTypeRef cf = 0;
  if (!a2)
  {
    APSLogErrorAt();
    goto LABEL_30;
  }
  uint64_t v4 = DerivedStorage;
  if (!*(void *)(DerivedStorage + 40))
  {
    a2 = 1;
    goto LABEL_30;
  }
  uint64_t v5 = *MEMORY[0x1E4F1CF80];
  uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(a2);
  uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  CFIndex v9 = *(void (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v8 + 48);
  if (v9) {
    v9(CMBaseObject, @"DeviceID", v5, &cf);
  }
  uint64_t v10 = APEndpointDescriptionGetCMBaseObject(a2);
  uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v11) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = 0;
  }
  uint64_t v13 = *(void (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v12 + 48);
  if (v13) {
    v13(v10, @"Name", v5, &v24);
  }
  uint64_t v14 = CFGetHardwareAddress();
  uint64_t v15 = *(const void **)(v4 + 40);
  if (!v15 || !v14) {
    goto LABEL_28;
  }
  CFTypeID v16 = CFGetTypeID(v15);
  if (v16 != CFArrayGetTypeID())
  {
    a2 = v14 == CFGetHardwareAddress();
    goto LABEL_30;
  }
  CFIndex Count = CFArrayGetCount(*(CFArrayRef *)(v4 + 40));
  CFIndex v18 = Count - 1;
  if (Count >= 1)
  {
    CFIndex v19 = 0;
    do
    {
      CFDictionaryRef ValueAtIndex = CFArrayGetValueAtIndex(*(CFArrayRef *)(v4 + 40), v19);
      uint64_t v21 = CFGetHardwareAddress();
      if (gLogCategory_SPEndpointManager <= 30
        && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
      {
        CFGetTypeID(ValueAtIndex);
        CFGetTypeID(cf);
        LogPrintF();
      }
      BOOL v22 = v21 == v14;
      a2 = v21 == v14;
      BOOL v22 = v22 || v18 == v19++;
    }
    while (!v22);
  }
  else
  {
LABEL_28:
    a2 = 0;
  }
LABEL_30:
  if (gLogCategory_SPEndpointManager <= 30
    && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v24) {
    CFRelease(v24);
  }
  return a2;
}

void __spmanager_registerForNotifications_block_invoke(uint64_t a1)
{
}

uint64_t __introspector_getCollectionOfSPEndpointManagers_block_invoke()
{
  uint64_t result = IsAppleInternalBuild();
  if (result)
  {
    introspector_getCollectionOfSPEndpointManagers_coll = (uint64_t)malloc_type_calloc(1uLL, 0x18uLL, 0x70040EA3A3B56uLL);
    *(void *)introspector_getCollectionOfSPEndpointManagers_coll = dispatch_queue_create("CollectionOfSPEndpointManagers", 0);
    CFMutableSetRef Mutable = CFSetCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, 0);
    uint64_t v2 = introspector_getCollectionOfSPEndpointManagers_coll;
    *(void *)(introspector_getCollectionOfSPEndpointManagers_coll + 8) = Mutable;
    *(void *)(v2 + 16) = "SPEndpointManagers";
    return APSIntrospectorAddCommand();
  }
  return result;
}

CFTypeRef spmanager_introspector_copyMatchingEndpoint(uint64_t a1)
{
  CFTypeRef v20 = 0;
  CFTypeRef cf = 0;
  uint64_t v1 = *MEMORY[0x1E4F1CF80];
  CFArrayRef v2 = spmanager_copyAvailableEndpoints(a1, (const __CFAllocator *)*MEMORY[0x1E4F1CF80]);
  if (v2)
  {
    CFArrayRef v3 = v2;
    CFIndex Count = CFArrayGetCount(v2);
    if (Count < 1)
    {
LABEL_25:
      CFTypeRef v17 = 0;
    }
    else
    {
      CFIndex v5 = Count;
      CFIndex v6 = 0;
      uint64_t v7 = *MEMORY[0x1E4F20E38];
      uint64_t v19 = *MEMORY[0x1E4F20F28];
      while (1)
      {
        CFDictionaryRef ValueAtIndex = CFArrayGetValueAtIndex(v3, v6);
        uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
        uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 8);
        if (v10) {
          uint64_t v11 = v10;
        }
        else {
          uint64_t v11 = 0;
        }
        uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, CFTypeRef *))(v11 + 48);
        if (v12) {
          v12(CMBaseObject, v7, v1, &cf);
        }
        if (FigCFEqual()) {
          break;
        }
        uint64_t v13 = FigEndpointGetCMBaseObject();
        uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 8);
        if (v14) {
          uint64_t v15 = v14;
        }
        else {
          uint64_t v15 = 0;
        }
        CFTypeID v16 = *(void (**)(uint64_t, uint64_t, uint64_t, CFTypeRef *))(v15 + 48);
        if (v16) {
          v16(v13, v19, v1, &v20);
        }
        if (FigCFEqual())
        {
          if (gLogCategory_SPEndpointManager > 50
            || gLogCategory_SPEndpointManager == -1 && !_LogCategory_Initialize())
          {
            goto LABEL_36;
          }
LABEL_32:
          LogPrintF();
          goto LABEL_36;
        }
        if (gLogCategory_SPEndpointManager <= 50
          && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        if (cf)
        {
          CFRelease(cf);
          CFTypeRef cf = 0;
        }
        if (v20)
        {
          CFRelease(v20);
          CFTypeRef v20 = 0;
        }
        if (v5 == ++v6) {
          goto LABEL_25;
        }
      }
      if (gLogCategory_SPEndpointManager <= 50
        && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
      {
        goto LABEL_32;
      }
LABEL_36:
      CFTypeRef v17 = CFRetain(ValueAtIndex);
    }
    CFRelease(v3);
  }
  else
  {
    CFTypeRef v17 = 0;
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v20) {
    CFRelease(v20);
  }
  return v17;
}

void spmanager_introspector_activateEndpointCallback(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (gLogCategory_SPEndpointManager <= 50
    && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  else if (!a5)
  {
    return;
  }
  free(a5);
}

void introspector_listEndpoints(uint64_t a1, uint64_t a2)
{
  cf[65] = *(CFTypeRef *)MEMORY[0x1E4F143B8];
  cf[0] = 0;
  uint64_t CMBaseObject = FigEndpointManagerGetCMBaseObject();
  uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  CFIndex v6 = *(void (**)(uint64_t, void, void, CFTypeRef *))(v5 + 48);
  if (v6
    && (v6(CMBaseObject, *MEMORY[0x1E4F20608], *MEMORY[0x1E4F1CF80], cf), cf[0])
    && (CFTypeID v7 = CFGetTypeID(cf[0]), v7 == CFArrayGetTypeID()))
  {
    CFIndex Count = CFArrayGetCount((CFArrayRef)cf[0]);
    if (a2)
    {
      FPrintF();
    }
    else if (gLogCategory_SPEndpointManager <= 50 {
           && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
    }
    {
      LogPrintF();
    }
    if (Count >= 1)
    {
      for (CFIndex i = 0; i != Count; ++i)
      {
        CFArrayGetValueAtIndex((CFArrayRef)cf[0], i);
        __strlcpy_chk();
        APSGetFBOPropertyCString();
        __strlcpy_chk();
        APSGetFBOPropertyCString();
        APSGetFBOPropertyInt64();
        APSGetFBOPropertyInt64();
        if (a2)
        {
          FPrintF();
        }
        else if (gLogCategory_SPEndpointManager <= 50 {
               && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
        }
        {
          LogPrintF();
        }
      }
    }
  }
  else if (a2)
  {
    FPrintF();
  }
  else if (gLogCategory_SPEndpointManager <= 50 {
         && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
  }
  {
    LogPrintF();
  }
  if (cf[0]) {
    CFRelease(cf[0]);
  }
}

void spmanager_introspector_handleAvailableEndpointNotification(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (gLogCategory_SPEndpointManager <= 50
    && (gLogCategory_SPEndpointManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  introspector_listEndpoints(a4, 0);
}

uint64_t APEndpointStreamScreenUDPCreate(int a1, const __CFDictionary *a2, CFTypeRef cf, const void *a4, const void *a5, const void *a6, const void *a7, int a8, CFTypeRef *a9)
{
  uint64_t v107 = *MEMORY[0x1E4F143B8];
  CFArrayRef theArray = 0;
  CFTypeRef v99 = 0;
  CFTypeRef v96 = 0;
  CFTypeRef v97 = 0;
  char v95 = 0;
  if (!cf || (CFTypeID v15 = CFGetTypeID(cf), v15 != CFStringGetTypeID()))
  {
    unsigned int v100 = -16760;
LABEL_175:
    APSLogErrorAt();
    goto LABEL_158;
  }
  if (!a5 || (CFTypeID v16 = CFGetTypeID(a5), v16 != APEndpointDescriptionGetTypeID()))
  {
    unsigned int v100 = -16760;
    goto LABEL_175;
  }
  if (!a9)
  {
    unsigned int v100 = -16760;
    goto LABEL_175;
  }
  if (!a7)
  {
    unsigned int v100 = -16760;
    goto LABEL_175;
  }
  FigEndpointStreamGetClassID();
  unsigned int v100 = CMDerivedObjectCreate();
  if (v100) {
    goto LABEL_39;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(_DWORD *)(DerivedStorage + 260) = 60;
  *(_WORD *)(DerivedStorage + 250) = 256;
  *(unsigned char *)(DerivedStorage + 255) = 0;
  *(unsigned char *)(DerivedStorage + 252) = APSSettingsGetInt64() == 0;
  *(unsigned char *)(DerivedStorage + 113) = FigGetCFPreferenceNumberWithDefault();
  *(unsigned char *)(DerivedStorage + 112) = FigGetCFPreferenceNumberWithDefault();
  *(unsigned char *)(DerivedStorage + 251) = FigGetCFPreferenceNumberWithDefault();
  if (gLogCategory_APEndpointStreamScreenUDP <= 40
    && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  *(unsigned char *)(DerivedStorage + 252) = FigGetCFPreferenceNumberWithDefault();
  if (gLogCategory_APEndpointStreamScreenUDP <= 40
    && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  *(_DWORD *)(DerivedStorage + 264) = FigGetCFPreferenceNumberWithDefault();
  if (gLogCategory_APEndpointStreamScreenUDP <= 40
    && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  *(unsigned char *)(DerivedStorage + 268) = FigGetCFPreferenceNumberWithDefault();
  if (gLogCategory_APEndpointStreamScreenUDP <= 40
    && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  SNPrintF();
  *(void *)uint64_t DerivedStorage = dispatch_queue_create(label, 0);
  *(void *)(DerivedStorage + 16) = os_transaction_create();
  SNPrintF();
  *(void *)(DerivedStorage + 64) = dispatch_queue_create(label, 0);
  CFTypeRef v81 = v99;
  SNPrintF();
  dispatch_queue_t v18 = dispatch_queue_create(label, 0);
  *(void *)(DerivedStorage + 128) = v18;
  if (v18)
  {
    *(void *)(DerivedStorage + 8) = CFRetain(cf);
    CFTypeRef v19 = CFRetain(a5);
    *(void *)(DerivedStorage + 72) = v19;
    uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(v19);
    uint64_t v21 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v21) {
      uint64_t v22 = v21;
    }
    else {
      uint64_t v22 = 0;
    }
    CFSetRef v23 = *(uint64_t (**)(uint64_t, __CFString *, void, CFArrayRef *))(v22 + 48);
    if (!v23)
    {
      unsigned int v100 = -12782;
      goto LABEL_39;
    }
    CFAllocatorRef v24 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    unsigned int v100 = v23(CMBaseObject, @"DisplayDescriptionArray", *MEMORY[0x1E4F1CF80], &theArray);
    if (v100)
    {
LABEL_39:
      APSLogErrorAt();
      goto LABEL_157;
    }
    if (theArray && CFArrayGetCount(theArray) > 0)
    {
      CFDictionaryRef ValueAtIndex = CFArrayGetValueAtIndex(theArray, 0);
      if (!ValueAtIndex)
      {
        unsigned int v100 = -16760;
        goto LABEL_39;
      }
      uint64_t v26 = (uint64_t)ValueAtIndex;
      if (a6)
      {
        *(void *)(DerivedStorage + 80) = CFRetain(a6);
        APEndpointDisplayDescriptionCopyProperty(v26, @"UUID", (uint64_t)v24, (uint64_t)&v97);
        if (!v97)
        {
          unsigned int v100 = -16760;
          goto LABEL_39;
        }
        APEndpointDisplayDescriptionCopyProperty(*(void *)(DerivedStorage + 80), @"UUID", (uint64_t)v24, (uint64_t)&v96);
        if (FigCFEqual()) {
          int v27 = 110;
        }
        else {
          int v27 = 111;
        }
      }
      else
      {
        *(void *)(DerivedStorage + 80) = CFRetain(ValueAtIndex);
        int v27 = 110;
      }
      *(_DWORD *)(DerivedStorage + 96) = v27;
      if (a4) {
        CFTypeRef v29 = CFRetain(a4);
      }
      else {
        CFTypeRef v29 = 0;
      }
      *(void *)(DerivedStorage + 48) = v29;
      *(void *)(DerivedStorage + 56) = CFRetain(a7);
      if (!a2)
      {
        uint64_t v34 = CMBaseObjectGetDerivedStorage();
        CFAllocatorRef v31 = 0;
        goto LABEL_60;
      }
      CFDictionaryRef Value = CFDictionaryGetValue(a2, @"clientPID");
      CFAllocatorRef v31 = Value;
      if (!Value || (CFTypeID v32 = CFGetTypeID(Value), v32 == CFNumberGetTypeID()))
      {
        FigCFDictionaryGetBooleanIfPresent();
        FigCFDictionaryGetBooleanIfPresent();
        if (gLogCategory_APEndpointStreamScreenUDP <= 50
          && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
        {
          if (*(unsigned char *)(DerivedStorage + 249)) {
            uint64_t v33 = "";
          }
          else {
            uint64_t v33 = "not ";
          }
          CFTypeRef v81 = v33;
          LogPrintF();
        }
        FigCFDictionaryGetBooleanIfPresent();
        if (!*(unsigned char *)(DerivedStorage + 248) || CFGetInt64() > 0)
        {
          uint64_t v34 = CMBaseObjectGetDerivedStorage();
          CFDictionaryGetValue(a2, @"EventRecorder");
LABEL_60:
          uint64_t v35 = *(const void **)(v34 + 272);
          if (v35)
          {
            CFRelease(v35);
            *(void *)(v34 + 272) = 0;
          }
          unsigned int v36 = APSEventRecorderCreate();
          if (v36)
          {
            unsigned int v80 = v36;
            APSLogErrorAt();
            unsigned int v100 = v80;
            goto LABEL_39;
          }
          APSEventRecorderAddSignPostForEvent();
          unsigned int v100 = 0;
          uint64_t v37 = *(void *)(DerivedStorage + 80);
          dict[0] = 0;
          CFTypeRef v103 = 0;
          CFDictionaryRef v104 = 0;
          CFTypeRef v102 = 0;
          CFTypeRef cfa = 0;
          int v38 = *(const void **)(DerivedStorage + 192);
          if (v38)
          {
            CFRelease(v38);
            *(void *)(DerivedStorage + 192) = 0;
          }
          uint64_t v39 = APEndpointDescriptionGetCMBaseObject(*(void *)(DerivedStorage + 72));
          uint64_t v40 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v40) {
            uint64_t v41 = v40;
          }
          else {
            uint64_t v41 = 0;
          }
          CFTypeRef v42 = *(uint64_t (**)(uint64_t, __CFString *, const __CFAllocator *, uint64_t))(v41 + 48);
          if (!v42)
          {
            int v105 = -12782;
            goto LABEL_93;
          }
          int v105 = v42(v39, @"Name", v24, DerivedStorage + 192);
          if (v105) {
            goto LABEL_93;
          }
          CFIndex v43 = *(const void **)(DerivedStorage + 144);
          if (v43)
          {
            CFRelease(v43);
            *(void *)(DerivedStorage + 144) = 0;
          }
          int v105 = APEndpointDisplayDescriptionCopyProperty(v37, @"EDID", (uint64_t)v24, DerivedStorage + 144);
          if (v105) {
            goto LABEL_93;
          }
          CFIndex v45 = (CFDictionaryRef *)(DerivedStorage + 208);
          CFIndex v44 = *(const void **)(DerivedStorage + 208);
          if (v44)
          {
            CFRelease(v44);
            *CFIndex v45 = 0;
          }
          char v46 = *(unsigned char *)(DerivedStorage + 251);
          if (v46)
          {
            int v105 = APEndpointDisplayDescriptionCopyProperty(v37, @"HDRInfo", (uint64_t)v24, DerivedStorage + 208);
            if (v105) {
              goto LABEL_93;
            }
            if (!*v45
              || (CFTypeRef v47 = (const void *)*MEMORY[0x1E4F34D90],
                  (CFTypeRef v48 = CFDictionaryGetValue(*v45, (const void *)*MEMORY[0x1E4F34D90])) == 0))
            {
              char v46 = 0;
              goto LABEL_81;
            }
            uint64_t v49 = v48;
            CFIndex v50 = (const void *)*MEMORY[0x1E4F34D80];
            if (!CFEqual(v48, (CFTypeRef)*MEMORY[0x1E4F34D80]))
            {
              if (!CFEqual(v49, (CFTypeRef)*MEMORY[0x1E4F34D78]))
              {
                char v46 = 0;
                goto LABEL_81;
              }
              if (!*(unsigned char *)(DerivedStorage + 252))
              {
                CFMutableSetRef Mutable = CFDictionaryCreateMutable(v24, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
                CFDictionarySetValue(Mutable, v47, v50);
                CFDictionaryRef v57 = *v45;
                *CFIndex v45 = Mutable;
                if (Mutable) {
                  CFRetain(Mutable);
                }
                if (v57) {
                  CFRelease(v57);
                }
                CFRelease(Mutable);
              }
            }
            char v46 = APSHasHDRSenderSupport() != 0;
          }
LABEL_81:
          *(unsigned char *)(DerivedStorage + 250) = v46;
          int v105 = APEndpointDisplayDescriptionCopyProperty(v37, @"PixelSizeMax", (uint64_t)v24, (uint64_t)dict);
          if (!v105)
          {
            CGSizeMakeWithDictionaryRepresentation(dict[0], (CGSize *)(DerivedStorage + 152));
            int v105 = APEndpointDisplayDescriptionCopyProperty(v37, @"PhysicalSize", (uint64_t)v24, (uint64_t)&v104);
            if (!v105)
            {
              CGSizeMakeWithDictionaryRepresentation(v104, (CGSize *)(DerivedStorage + 168));
              CFArrayRef v51 = (const void **)(DerivedStorage + 184);
              int v105 = APEndpointDescriptionCopyProperty(*(void *)(DerivedStorage + 72), @"receiverHDRCapability", (uint64_t)v24, DerivedStorage + 184);
              if (!v105)
              {
                uint64_t v52 = (const void *)APSSettingsCopyValue();
                dispatch_time_t v53 = v52;
                if (!v105)
                {
                  if (v52)
                  {
                    CFTypeID v54 = CFGetTypeID(v52);
                    if (v54 == CFStringGetTypeID())
                    {
                      uint64_t v55 = *v51;
                      *CFArrayRef v51 = v53;
                      CFRetain(v53);
                      if (v55) {
                        CFRelease(v55);
                      }
                      if (gLogCategory_APEndpointStreamScreenUDP <= 50
                        && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
                      {
                        CFTypeRef v81 = *v51;
                        LogPrintF();
                      }
                    }
                  }
                }
                int v105 = 0;
                *(unsigned char *)(DerivedStorage + 256) = APSGetFBOPropertyInt64() != 0;
                if (v105) {
                  goto LABEL_194;
                }
                int v59 = (void *)(DerivedStorage + 200);
                uint64_t v58 = *(const void **)(DerivedStorage + 200);
                if (v58)
                {
                  CFRelease(v58);
                  *int v59 = 0;
                }
                int v105 = APEndpointDisplayDescriptionCopyProperty(v37, @"UUID", (uint64_t)v24, DerivedStorage + 200);
                if (v105)
                {
LABEL_194:
                  APSLogErrorAt();
                  goto LABEL_131;
                }
                uint64_t v60 = *(void *)(DerivedStorage + 200);
                uint64_t v61 = *MEMORY[0x1E4F21488];
                uint64_t UpTimeNanoseconds = FigGetUpTimeNanoseconds();
                *(void *)(DerivedStorage + 88) = CFStringCreateWithFormat(v24, 0, @"%@-%@-%llx", v60, v61, UpTimeNanoseconds);
                APEndpointDisplayDescriptionCopyProperty(v37, @"MaxFPS", (uint64_t)v24, (uint64_t)&v103);
                if (v103) {
                  *(_DWORD *)(DerivedStorage + 260) = CFGetInt64();
                }
                APEndpointDisplayDescriptionCopyProperty(v37, @"IsOverscanned", (uint64_t)v24, (uint64_t)&v102);
                CFTypeRef v63 = (CFTypeRef)*MEMORY[0x1E4F1CFD0];
                *(unsigned char *)(DerivedStorage + 253) = v102 == (CFTypeRef)*MEMORY[0x1E4F1CFD0];
                APEndpointDisplayDescriptionCopyProperty(v37, @"SupportsRotation", (uint64_t)v24, (uint64_t)&cfa);
                int v64 = cfa == v63;
                *(unsigned char *)(DerivedStorage + 254) = v64;
                double v65 = *(double *)(DerivedStorage + 152);
                double v66 = *(double *)(DerivedStorage + 160);
                uint64_t v67 = *(unsigned int *)(DerivedStorage + 260);
                *(double *)(DerivedStorage + 232) = v65 * v66 * (double)(int)v67;
                if (gLogCategory_APEndpointStreamScreenUDP <= 50)
                {
                  if (gLogCategory_APEndpointStreamScreenUDP != -1)
                  {
LABEL_111:
                    if (*(void *)(DerivedStorage + 144)) {
                      BOOL v68 = "present";
                    }
                    else {
                      BOOL v68 = "none";
                    }
                    int v69 = "yes";
                    if (*(unsigned char *)(DerivedStorage + 250)) {
                      uint64_t v70 = "yes";
                    }
                    else {
                      uint64_t v70 = "no";
                    }
                    if (*(unsigned char *)(DerivedStorage + 253)) {
                      long long v71 = "yes";
                    }
                    else {
                      long long v71 = "no";
                    }
                    if (v64) {
                      long long v72 = "yes";
                    }
                    else {
                      long long v72 = "no";
                    }
                    if (*(unsigned char *)(DerivedStorage + 256)) {
                      uint64_t v73 = "yes";
                    }
                    else {
                      uint64_t v73 = "no";
                    }
                    if (!*(unsigned char *)(DerivedStorage + 255)) {
                      int v69 = "no";
                    }
                    long long v92 = v73;
                    long long v93 = v69;
                    long long v90 = v71;
                    long long v91 = v72;
                    long long v88 = v70;
                    uint64_t v89 = v67;
                    uint64_t v86 = *(void *)(DerivedStorage + 200);
                    CFTypeRef v87 = v68;
                    uint64_t v84 = *(void *)(DerivedStorage + 168);
                    uint64_t v85 = *(void *)(DerivedStorage + 176);
                    double v82 = v65;
                    double v83 = v66;
                    CFTypeRef v81 = *(CFTypeRef *)(DerivedStorage + 192);
                    LogPrintF();
                    goto LABEL_130;
                  }
                  if (_LogCategory_Initialize())
                  {
                    double v65 = *(double *)(DerivedStorage + 152);
                    double v66 = *(double *)(DerivedStorage + 160);
                    uint64_t v67 = *(unsigned int *)(DerivedStorage + 260);
                    int v64 = *(unsigned __int8 *)(DerivedStorage + 254);
                    goto LABEL_111;
                  }
                }
LABEL_130:
                if (!*v59)
                {
                  APSLogErrorAt();
                  if (gLogCategory_APEndpointStreamScreenUDP <= 90
                    && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
                  {
                    LogPrintF();
                  }
                  int v105 = -16760;
                }
LABEL_131:
                if (dict[0]) {
                  CFRelease(dict[0]);
                }
                if (v104) {
                  CFRelease(v104);
                }
                if (v103) {
                  CFRelease(v103);
                }
                if (v102) {
                  CFRelease(v102);
                }
                if (cfa) {
                  CFRelease(cfa);
                }
                if (v53) {
                  CFRelease(v53);
                }
                unsigned int v100 = v105;
                if (!v105)
                {
                  if (*(unsigned char *)(DerivedStorage + 249) && v95)
                  {
                    if (gLogCategory_APEndpointStreamScreenUDP <= 50
                      && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
                    {
                      CFTypeRef v81 = v99;
                      LogPrintF();
                    }
                    *(void *)(DerivedStorage + 240) = 1;
                  }
                  CFDictionaryRef v74 = (const __CFDictionary *)v99;
                  CFTypeRef v75 = [APEndpointStreamScreenAVCWrapper alloc];
                  CFDictionaryRef DisplayHDRMode = screenstreamudp_getDisplayHDRMode(DerivedStorage);
                  BOOL v77 = *(void *)(DerivedStorage + 240) == 1;
                  BOOL v78 = *(unsigned char *)(DerivedStorage + 255) != 0;
                  dict[0] = v74;
                  dict[1] = (CFDictionaryRef)screenstreamudp_handleResumed;
                  dict[2] = (CFDictionaryRef)screenstreamudp_handleSuspended;
                  dict[3] = (CFDictionaryRef)screenstreamudp_handleFailed;
                  dict[4] = (CFDictionaryRef)screenstreamudp_handleClearScreen;
                  *(void *)(DerivedStorage + 40) = -[APEndpointStreamScreenAVCWrapper initWithClientPID:hdrMode:presentationMode:hdrMirroringSupported:eventHandlers:error:](v75, "initWithClientPID:hdrMode:presentationMode:hdrMirroringSupported:eventHandlers:error:", v31, DisplayHDRMode, v77, v78, dict, &v100, v81, *(void *)&v82, *(void *)&v83, v84, v85, v86, v87, v88, v89, v90,
                                                       v91,
                                                       v92,
                                                       v93);
                  if (!v100)
                  {
                    *(unsigned char *)(DerivedStorage + 25) = 1;
                    if (gLogCategory_APEndpointStreamScreenUDP <= 50
                      && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
                    {
                      LogPrintF();
                    }
                    *a9 = v99;
                    CFTypeRef v99 = 0;
LABEL_157:
                    if (!v100) {
                      goto LABEL_162;
                    }
                    goto LABEL_158;
                  }
                }
                goto LABEL_39;
              }
            }
          }
LABEL_93:
          APSLogErrorAt();
          dispatch_time_t v53 = 0;
          goto LABEL_131;
        }
      }
    }
    APSLogErrorAt();
    int v28 = -16760;
  }
  else
  {
    APSLogErrorAt();
    int v28 = -16761;
  }
  unsigned int v100 = v28;
LABEL_158:
  if (gLogCategory_APEndpointStreamScreenUDP <= 90
    && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_162:
  if (theArray) {
    CFRelease(theArray);
  }
  if (v96) {
    CFRelease(v96);
  }
  if (v97) {
    CFRelease(v97);
  }
  if (v99) {
    CFRelease(v99);
  }
  return v100;
}

void screenstreamudp_handleResumed(const void *a1, void *a2, int a3)
{
  CMBaseObjectGetDerivedStorage();
  if (!a3) {
    screenstreamudp_setResumedAndNotifyObservers(a1, 1);
  }
  screenstreamudp_dispatchCallback(a1, a2, a3);
}

void screenstreamudp_handleSuspended(const void *a1, void *a2, int a3)
{
  CMBaseObjectGetDerivedStorage();
  screenstreamudp_setResumedAndNotifyObservers(a1, 0);
  screenstreamudp_dispatchCallback(a1, a2, a3);
}

void screenstreamudp_handleFailed(const void *a1, int a2, const void *a3)
{
  CMBaseObjectGetDerivedStorage();
  screenstreamudp_handleFatalError(a1, a2, a3);
}

void screenstreamudp_handleClearScreen(uint64_t a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 24)) {
    screenstreamudp_handleClearScreen_cold_1();
  }
  uint64_t v4 = DerivedStorage;
  CFMutableSetRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    CFIndex v6 = Mutable;
    if (!*(unsigned char *)(v4 + 112) || !*(void *)(v4 + 120))
    {
LABEL_12:
      CFRelease(v6);
      return;
    }
    CFTypeID v7 = (const void **)MEMORY[0x1E4F1CFD0];
    if (!a2) {
      CFTypeID v7 = (const void **)MEMORY[0x1E4F1CFC8];
    }
    CFDictionarySetValue(Mutable, @"isScreenCleared", *v7);
    if (!APTransportStreamSendPlistMessageCreatingPlistReply())
    {
      if (gLogCategory_APEndpointStreamScreenUDP <= 40
        && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      goto LABEL_12;
    }
    APSLogErrorAt();
    CFRelease(v6);
  }
  else
  {
    APSLogErrorAt();
  }
  if (gLogCategory_APEndpointStreamScreenUDP <= 90
    && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

CFDictionaryRef screenstreamudp_getDisplayHDRMode(uint64_t a1)
{
  if (APSHasHDRSenderSupport())
  {
    CFDictionaryRef result = *(const __CFDictionary **)(a1 + 208);
    if (result) {
      CFDictionaryRef result = (const __CFDictionary *)CFDictionaryGetValue(result, (const void *)*MEMORY[0x1E4F34D90]);
    }
  }
  else
  {
    CFDictionaryRef result = 0;
  }
  if (!result) {
    return (const __CFDictionary *)*MEMORY[0x1E4F34D88];
  }
  return result;
}

void sub_1D09A8CD8()
{
}

void screenstreamudp_Finalize()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamScreenUDP <= 50
    && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }

  uint64_t v1 = *(const void **)(DerivedStorage + 144);
  if (v1)
  {
    CFRelease(v1);
    *(void *)(DerivedStorage + 144) = 0;
  }
  CFArrayRef v2 = *(const void **)(DerivedStorage + 192);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(DerivedStorage + 192) = 0;
  }
  CFArrayRef v3 = *(const void **)(DerivedStorage + 200);
  if (v3)
  {
    CFRelease(v3);
    *(void *)(DerivedStorage + 200) = 0;
  }
  uint64_t v4 = *(const void **)(DerivedStorage + 184);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(DerivedStorage + 184) = 0;
  }
  uint64_t v5 = *(const void **)(DerivedStorage + 208);
  if (v5)
  {
    CFRelease(v5);
    *(void *)(DerivedStorage + 208) = 0;
  }
  CFIndex v6 = *(const void **)(DerivedStorage + 224);
  if (v6)
  {
    CFRelease(v6);
    *(void *)(DerivedStorage + 224) = 0;
  }
  long long v7 = *MEMORY[0x1E4F1DB30];
  *(_OWORD *)(DerivedStorage + 152) = *MEMORY[0x1E4F1DB30];
  *(_OWORD *)(DerivedStorage + 168) = v7;
  uint64_t v8 = *(const void **)(DerivedStorage + 8);
  if (v8)
  {
    CFRelease(v8);
    *(void *)(DerivedStorage + 8) = 0;
  }
  CFIndex v9 = *(const void **)(DerivedStorage + 272);
  if (v9)
  {
    CFRelease(v9);
    *(void *)(DerivedStorage + 272) = 0;
  }
  uint64_t v10 = *(const void **)(DerivedStorage + 48);
  if (v10)
  {
    CFRelease(v10);
    *(void *)(DerivedStorage + 48) = 0;
  }
  uint64_t v11 = *(const void **)(DerivedStorage + 88);
  if (v11)
  {
    CFRelease(v11);
    *(void *)(DerivedStorage + 88) = 0;
  }
  uint64_t v12 = *(const void **)(DerivedStorage + 80);
  if (v12)
  {
    CFRelease(v12);
    *(void *)(DerivedStorage + 80) = 0;
  }
  uint64_t v13 = *(const void **)(DerivedStorage + 72);
  if (v13)
  {
    CFRelease(v13);
    *(void *)(DerivedStorage + 72) = 0;
  }
  uint64_t v14 = *(const void **)(DerivedStorage + 56);
  if (v14)
  {
    CFRelease(v14);
    *(void *)(DerivedStorage + 56) = 0;
  }
  CFTypeID v15 = *(const void **)(DerivedStorage + 32);
  if (v15)
  {
    CFRelease(v15);
    *(void *)(DerivedStorage + 32) = 0;
  }
  if (*(void *)DerivedStorage)
  {
    dispatch_release(*(dispatch_object_t *)DerivedStorage);
    *(void *)uint64_t DerivedStorage = 0;
  }
  CFTypeID v16 = *(NSObject **)(DerivedStorage + 64);
  if (v16)
  {
    dispatch_release(v16);
    *(void *)(DerivedStorage + 64) = 0;
  }
  CFTypeRef v17 = *(NSObject **)(DerivedStorage + 128);
  if (v17)
  {
    dispatch_release(v17);
    *(void *)(DerivedStorage + 128) = 0;
  }
  dispatch_queue_t v18 = *(void **)(DerivedStorage + 16);
  if (v18)
  {

    *(void *)(DerivedStorage + 16) = 0;
  }
}

__CFString *screenstreamudp_CopyDebugDescription(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFMutableSetRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  uint64_t v4 = Mutable;
  uint64_t v5 = "yes";
  if (*(unsigned char *)(DerivedStorage + 25)) {
    CFIndex v6 = "yes";
  }
  else {
    CFIndex v6 = "no";
  }
  if (!*(unsigned char *)(DerivedStorage + 26)) {
    uint64_t v5 = "no";
  }
  CFStringAppendFormat(Mutable, 0, @"<APEndpointStreamScreenUDP %p '%@', activated: %s resumed: %s >", a1, *(void *)(DerivedStorage + 8), v6, v5);
  return v4;
}

uint64_t screenstreamudp_CopyProperty(uint64_t a1, const void *a2, uint64_t a3, __CFDictionary **a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamScreenUDP <= 30
    && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21408]))
  {
    long long v7 = (__CFString **)MEMORY[0x1E4F21488];
LABEL_7:
    uint64_t v8 = *v7;
LABEL_14:
    CFIndex v9 = (__CFDictionary *)CFRetain(v8);
LABEL_15:
    uint64_t v10 = v9;
LABEL_16:
    uint64_t result = 0;
    *a4 = v10;
    return result;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F213B0]))
  {
    if (*(_DWORD *)(DerivedStorage + 96) == 110) {
      uint64_t v8 = (__CFString *)*MEMORY[0x1E4F21458];
    }
    else {
      uint64_t v8 = @"ScreenAlt";
    }
    goto LABEL_14;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21368]))
  {
    uint64_t v8 = *(__CFString **)(DerivedStorage + 88);
    goto LABEL_14;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34F68]))
  {
    CFMutableSetRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (*(void *)(DerivedStorage + 240) == 1)
    {
      uint64_t v13 = (double *)MEMORY[0x1E4F1DB30];
      APSScreenGetMediaPresentationParams();
      if (gLogCategory_APEndpointStreamScreenUDP <= 50
        && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      FigCFDictionarySetCGSize();
      if (*(unsigned char *)(DerivedStorage + 250)) {
        CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34ED0], *(const void **)(DerivedStorage + 208));
      }
      FigCFDictionarySetInt32();
      double v15 = *v13;
      double v14 = v13[1];
    }
    else
    {
      FigCFDictionarySetInt32();
      double v15 = *MEMORY[0x1E4F1DB30];
      double v14 = *(double *)(MEMORY[0x1E4F1DB30] + 8);
      if (*(double *)(DerivedStorage + 152) != *MEMORY[0x1E4F1DB30] || *(double *)(DerivedStorage + 160) != v14) {
        FigCFDictionarySetCGSize();
      }
    }
    if (*(double *)(DerivedStorage + 168) != v15 || *(double *)(DerivedStorage + 176) != v14) {
      FigCFDictionarySetCGSize();
    }
    CFTypeRef v17 = *(const void **)(DerivedStorage + 192);
    if (v17) {
      CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34EB0], v17);
    }
    dispatch_queue_t v18 = *(const void **)(DerivedStorage + 144);
    if (v18) {
      CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34EA8], v18);
    }
    CFTypeRef v19 = *(const void **)(DerivedStorage + 200);
    if (v19) {
      CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34EC8], v19);
    }
    CFTypeRef v20 = (const void *)*MEMORY[0x1E4F1CFD0];
    uint64_t v21 = (const void *)*MEMORY[0x1E4F1CFC8];
    if (*(unsigned char *)(DerivedStorage + 253)) {
      uint64_t v22 = (const void *)*MEMORY[0x1E4F1CFD0];
    }
    else {
      uint64_t v22 = (const void *)*MEMORY[0x1E4F1CFC8];
    }
    CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34ED8], v22);
    if (*(unsigned char *)(DerivedStorage + 254)) {
      CFSetRef v23 = v20;
    }
    else {
      CFSetRef v23 = v21;
    }
    CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F34EE8], v23);
    uint64_t result = 0;
    *a4 = Mutable;
  }
  else if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34F98]))
  {
    return 0;
  }
  else
  {
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21370]) || CFEqual(a2, @"IsPlaying"))
    {
      long long v7 = (__CFString **)MEMORY[0x1E4F1CFD0];
      if (!*(unsigned char *)(DerivedStorage + 26)) {
        long long v7 = (__CFString **)MEMORY[0x1E4F1CFC8];
      }
      goto LABEL_7;
    }
    if (CFEqual(a2, @"EndpointStreamShowInfo"))
    {
      CFIndex v9 = screenstreamudp_copyShowInfo(DerivedStorage);
      goto LABEL_15;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21398]))
    {
      CFIndex v9 = screenstreamudp_copyOutputLatency();
      goto LABEL_15;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21410]))
    {
      uint64_t v8 = *(__CFString **)(DerivedStorage + 224);
      if (!v8)
      {
        uint64_t v10 = 0;
        goto LABEL_16;
      }
      goto LABEL_14;
    }
    if (CFEqual(a2, @"screenStreamType"))
    {
      uint64_t v8 = @"screenStreamUDP";
      goto LABEL_14;
    }
    if (gLogCategory_APEndpointStreamScreenUDP <= 30
      && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return 4294954512;
  }
  return result;
}

uint64_t screenstreamudp_SetProperty(uint64_t a1, const void *a2, const void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamScreenUDP <= 30
    && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34F80]) || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34F78])) {
    return 0;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21410]))
  {
    long long v7 = *(const void **)(DerivedStorage + 224);
    *(void *)(DerivedStorage + 224) = a3;
    if (a3) {
      CFRetain(a3);
    }
    if (v7) {
      CFRelease(v7);
    }
    return 0;
  }
  if (gLogCategory_APEndpointStreamScreenUDP <= 30
    && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 4294954512;
}

__CFDictionary *screenstreamudp_copyShowInfo(uint64_t a1)
{
  CFMutableSetRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  CFArrayRef v3 = Mutable;
  uint64_t v4 = (const void *)*MEMORY[0x1E4F1CFD0];
  uint64_t v5 = (const void *)*MEMORY[0x1E4F1CFC8];
  if (*(unsigned char *)(a1 + 25)) {
    CFIndex v6 = (const void *)*MEMORY[0x1E4F1CFD0];
  }
  else {
    CFIndex v6 = (const void *)*MEMORY[0x1E4F1CFC8];
  }
  CFDictionarySetValue(Mutable, @"Activated", v6);
  if (*(unsigned char *)(a1 + 26)) {
    long long v7 = v4;
  }
  else {
    long long v7 = v5;
  }
  CFDictionarySetValue(v3, @"Resumed", v7);
  CFDictionarySetValue(v3, @"Type", (const void *)*MEMORY[0x1E4F21488]);
  CFDictionarySetValue(v3, @"Name", *(const void **)(a1 + 8));
  return v3;
}

CFDictionaryRef screenstreamudp_copyOutputLatency()
{
  CMTime v4 = *(CMTime *)*(void *)&MEMORY[0x1E4F1FA48];
  int v0 = APSScreenLatencyMs();
  CMTimeMake(&v4, v0, 1000);
  CFAllocatorRef v1 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CMTime v3 = v4;
  return CMTimeCopyAsDictionary(&v3, v1);
}

uint64_t screenstreamudp_Suspend(const void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t DerivedStorage = (NSObject **)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamScreenUDP <= 50
    && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFIndex v9 = *(const void **)(CMBaseObjectGetDerivedStorage() + 120);
  if (v9)
  {
    CFTypeRef v10 = CFRetain(v9);
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v12) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = 0;
      }
      double v14 = *(void (**)(const void *, void, void, void))(v13 + 24);
      if (v14) {
        v14(v11, 0, 0, 0);
      }
      uint64_t CMBaseObject = FigTransportStreamGetCMBaseObject();
      if (CMBaseObject)
      {
        uint64_t v16 = CMBaseObject;
        uint64_t v17 = *(void *)(CMBaseObjectGetVTable() + 8);
        uint64_t v18 = v17 ? v17 : 0;
        CFTypeRef v19 = *(void (**)(uint64_t))(v18 + 24);
        if (v19) {
          v19(v16);
        }
      }
      CFRelease(v11);
    }
  }
  CFRetain(a1);
  if (a2) {
    CFRetain(a2);
  }
  CFTypeRef v20 = *DerivedStorage;
  block[0] = MEMORY[0x1E4F143A8];
  if (a3) {
    uint64_t v21 = a4;
  }
  else {
    uint64_t v21 = 0;
  }
  block[1] = 3221225472;
  block[2] = __screenstreamudp_Suspend_block_invoke;
  block[3] = &__block_descriptor_80_e5_v8__0l;
  block[4] = a1;
  void block[5] = a2;
  void block[6] = a3;
  void block[7] = a3;
  void block[8] = v21;
  void block[9] = 0;
  dispatch_async(v20, block);
  return 0;
}

uint64_t screenstreamudp_Resume(const void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t DerivedStorage = (NSObject **)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamScreenUDP <= 50
    && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFRetain(a1);
  if (a2) {
    CFRetain(a2);
  }
  CFIndex v9 = *DerivedStorage;
  block[0] = MEMORY[0x1E4F143A8];
  if (a3) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = 0;
  }
  block[1] = 3221225472;
  block[2] = __screenstreamudp_Resume_block_invoke;
  block[3] = &__block_descriptor_80_e5_v8__0l;
  block[4] = a1;
  void block[5] = a2;
  void block[6] = a3;
  void block[7] = a3;
  void block[8] = v10;
  void block[9] = 0;
  dispatch_async(v9, block);
  return 0;
}

uint64_t screenstreamudp_Dissociate(uint64_t a1)
{
  CFArrayRef v2 = *(NSObject **)CMBaseObjectGetDerivedStorage();
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __screenstreamudp_Dissociate_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  block[4] = a1;
  dispatch_sync(v2, block);
  return 0;
}

uint64_t screenstreamudp_Control(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = 0;
  uint64_t v11 = &v10;
  uint64_t v12 = 0x2020000000;
  int v13 = 0;
  uint64_t DerivedStorage = (NSObject **)CMBaseObjectGetDerivedStorage();
  if (FigCFEqual())
  {
    CFIndex v6 = *DerivedStorage;
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __screenstreamudp_Control_block_invoke;
    block[3] = &unk_1E6891F48;
    block[4] = &v10;
    void block[5] = a1;
    void block[6] = a3;
    dispatch_sync(v6, block);
    uint64_t v7 = *((unsigned int *)v11 + 6);
  }
  else
  {
    if (gLogCategory_APEndpointStreamScreenUDP <= 90
      && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v7 = 4294950536;
    *((_DWORD *)v11 + 6) = -16760;
  }
  _Block_object_dispose(&v10, 8);
  return v7;
}

void sub_1D09AB04C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void screenstreamudp_teardownStream()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamScreenUDP <= 40
    && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(void *)(DerivedStorage + 120))
  {
    uint64_t CMBaseObject = FigTransportStreamGetCMBaseObject();
    if (CMBaseObject)
    {
      uint64_t v2 = CMBaseObject;
      uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v4 = v3 ? v3 : 0;
      uint64_t v5 = *(void (**)(uint64_t))(v4 + 24);
      if (v5) {
        v5(v2);
      }
    }
    CFIndex v6 = *(const void **)(DerivedStorage + 120);
    if (v6)
    {
      CFRelease(v6);
      *(void *)(DerivedStorage + 120) = 0;
    }
  }
  if (*(void *)(DerivedStorage + 48))
  {
    uint64_t v7 = FigTransportStreamGetCMBaseObject();
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v10 = v9 ? v9 : 0;
      uint64_t v11 = *(void (**)(uint64_t))(v10 + 24);
      if (v11) {
        v11(v8);
      }
    }
    uint64_t v12 = *(void *)(DerivedStorage + 48);
    uint64_t v13 = *(unsigned int *)(DerivedStorage + 96);
    uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v14) {
      uint64_t v15 = v14;
    }
    else {
      uint64_t v15 = 0;
    }
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, void))(v15 + 48);
    if (v16) {
      v16(v12, v13, 0);
    }
  }
  uint64_t v17 = *(const void **)(DerivedStorage + 104);
  if (v17)
  {
    CFRelease(v17);
    *(void *)(DerivedStorage + 104) = 0;
  }
}

void screenstreamudp_dispatchCallback(const void *a1, void *a2, int a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2)
  {
    if (*a2)
    {
      uint64_t v7 = DerivedStorage;
      CFRetain(a1);
      uint64_t v8 = *(NSObject **)(v7 + 64);
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 3221225472;
      block[2] = __screenstreamudp_dispatchCallback_block_invoke;
      block[3] = &__block_descriptor_52_e5_v8__0l;
      block[4] = a2;
      void block[5] = a1;
      int v10 = a3;
      dispatch_async(v8, block);
    }
  }
}

void screenstreamudp_handleFatalError(const void *a1, int a2, const void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamScreenUDP <= 90
    && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFRetain(a1);
  if (a3) {
    CFRetain(a3);
  }
  uint64_t v7 = *(NSObject **)(DerivedStorage + 64);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __screenstreamudp_handleFatalError_block_invoke;
  block[3] = &__block_descriptor_60_e5_v8__0l;
  int v11 = a2;
  block[4] = a3;
  void block[5] = DerivedStorage;
  void block[6] = a1;
  dispatch_async(v7, block);
  CFRetain(a1);
  uint64_t v8 = *(NSObject **)DerivedStorage;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = __screenstreamudp_handleFatalError_block_invoke_2;
  v9[3] = &__block_descriptor_40_e5_v8__0l;
  v9[4] = a1;
  dispatch_async(v8, v9);
}

void __screenstreamudp_dispatchCallback_block_invoke(uint64_t a1)
{
  (**(void (***)(void, void, void))(a1 + 32))(*(void *)(a1 + 40), *(unsigned int *)(a1 + 48), *(void *)(*(void *)(a1 + 32) + 8));
  uint64_t v2 = *(const void **)(a1 + 40);
  CFRelease(v2);
}

void __screenstreamudp_handleFatalError_block_invoke(void *a1)
{
  CFMutableSetRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  FigCFDictionarySetInt32();
  uint64_t v3 = (const void *)a1[4];
  if (v3)
  {
    CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F212C8], v3);
    uint64_t v4 = (const void *)a1[4];
    if (v4)
    {
      if (!*(unsigned char *)(a1[5] + 27) && CFEqual(v4, @"Resume failed")) {
        CFDictionarySetValue(Mutable, @"APEndpointStream_IsStartupFailure", (const void *)*MEMORY[0x1E4F1CFD0]);
      }
    }
  }
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterPostNotification();
  if (Mutable) {
    CFRelease(Mutable);
  }
  uint64_t v5 = (const void *)a1[4];
  if (v5) {
    CFRelease(v5);
  }
  CFIndex v6 = (const void *)a1[6];
  CFRelease(v6);
}

void __screenstreamudp_handleFatalError_block_invoke_2(uint64_t a1)
{
  screenstreamudp_dissociateInternal(*(const void **)(a1 + 32));
  uint64_t v2 = *(const void **)(a1 + 32);
  CFRelease(v2);
}

void screenstreamudp_dissociateInternal(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(unsigned char *)(DerivedStorage + 24))
  {
    uint64_t v3 = DerivedStorage;
    if (*(unsigned char *)(DerivedStorage + 25))
    {
      if (gLogCategory_APEndpointStreamScreenUDP <= 50
        && (gLogCategory_APEndpointStreamScreenUDP != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (*(unsigned char *)(v3 + 26))
      {
        [*(id *)(v3 + 40) stopWithCompletion:0];
        screenstreamudp_teardownStream();
      }
      *(unsigned char *)(v3 + 26) = 0;
      *(_WORD *)(v3 + 24) = 1;
      CFRetain(a1);
      uint64_t v4 = *(NSObject **)(v3 + 64);
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 3221225472;
      block[2] = __screenstreamudp_dissociateInternal_block_invoke;
      block[3] = &__block_descriptor_40_e5_v8__0l;
      block[4] = a1;
      dispatch_async(v4, block);
    }
  }
}

void __screenstreamudp_dissociateInternal_block_invoke(uint64_t a1)
{
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterPostNotification();
  uint64_t v2 = *(const void **)(a1 + 32);
  CFRelease(v2);
}

void screenstreamudp_setResumedAndNotifyObservers(const void *a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  BOOL v5 = *(unsigned __int8 *)(DerivedStorage + 26) != a2;
  *(unsigned char *)(DerivedStorage + 26) = a2;
  APSEventRecorderRecordEvent();
  CFRetain(a1);
  CFIndex v6 = *(NSObject **)(DerivedStorage + 64);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __screenstreamudp_setResumedAndNotifyObservers_block_invoke;
  block[3] = &__block_descriptor_50_e5_v8__0l;
  char v8 = a2;
  BOOL v9 = v5;
  block[4] = a1;
  void block[5] = DerivedStorage;
  dispatch_async(v6, block);
}

void __screenstreamudp_setResumedAndNotifyObservers_block_invoke(uint64_t a1)
{
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterPostNotification();
  if (*(unsigned char *)(a1 + 49))
  {
    APEndpointStreamUpdateNowPlayingTransaction(*(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 48), &gLogCategory_APEndpointStreamScreenUDP, (const void **)(*(void *)(a1 + 40) + 32));
    CFMutableSetRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    uint64_t v3 = Mutable;
    uint64_t v4 = (const void **)MEMORY[0x1E4F1CFD0];
    if (!*(unsigned char *)(a1 + 48)) {
      uint64_t v4 = (const void **)MEMORY[0x1E4F1CFC8];
    }
    CFDictionarySetValue(Mutable, @"IsPlaying", *v4);
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterPostNotification();
    CFRelease(v3);
  }
  BOOL v5 = *(const void **)(a1 + 32);
  CFRelease(v5);
}

uint64_t initValAVCMediaStreamNegotiatorHDRMode()
{
  if (AVConferenceLibrary_sOnce != -1) {
    dispatch_once(&AVConferenceLibrary_sOnce, &__block_literal_global_4);
  }
  int v0 = (uint64_t *)dlsym((void *)AVConferenceLibrary_sLib, "AVCMediaStreamNegotiatorHDRMode");
  if (v0)
  {
    uint64_t result = *v0;
    constantValAVCMediaStreamNegotiatorHDRMode = result;
  }
  else
  {
    uint64_t result = constantValAVCMediaStreamNegotiatorHDRMode;
  }
  getAVCMediaStreamNegotiatorHDRMode = AVCMediaStreamNegotiatorHDRModeFunction;
  return result;
}

uint64_t AVCMediaStreamNegotiatorHDRModeFunction()
{
  return constantValAVCMediaStreamNegotiatorHDRMode;
}

void *__AVConferenceLibrary_block_invoke()
{
  uint64_t result = dlopen("/System/Library/PrivateFrameworks/AVConference.framework/AVConference", 2);
  AVConferenceLibrary_sLib = (uint64_t)result;
  return result;
}

Class initAVCMediaStreamNegotiator()
{
  if (AVConferenceLibrary_sOnce != -1) {
    dispatch_once(&AVConferenceLibrary_sOnce, &__block_literal_global_4);
  }
  Class result = objc_getClass("AVCMediaStreamNegotiator");
  classAVCMediaStreamNegotiator = (uint64_t)result;
  getAVCMediaStreamNegotiatorClass = AVCMediaStreamNegotiatorFunction;
  return result;
}

uint64_t AVCMediaStreamNegotiatorFunction()
{
  return classAVCMediaStreamNegotiator;
}

Class initAVCScreenCaptureConfiguration()
{
  if (AVConferenceLibrary_sOnce != -1) {
    dispatch_once(&AVConferenceLibrary_sOnce, &__block_literal_global_4);
  }
  Class result = objc_getClass("AVCScreenCaptureConfiguration");
  classAVCScreenCaptureConfiguratioCFIndex n = (uint64_t)result;
  getAVCScreenCaptureConfigurationClass[0] = AVCScreenCaptureConfigurationFunction;
  return result;
}

uint64_t AVCScreenCaptureConfigurationFunction()
{
  return classAVCScreenCaptureConfiguration;
}

Class initAVCScreenCapture()
{
  if (AVConferenceLibrary_sOnce != -1) {
    dispatch_once(&AVConferenceLibrary_sOnce, &__block_literal_global_4);
  }
  Class result = objc_getClass("AVCScreenCapture");
  classAVCScreenCapture = (uint64_t)result;
  getAVCScreenCaptureClass[0] = AVCScreenCaptureFunction;
  return result;
}

uint64_t AVCScreenCaptureFunction()
{
  return classAVCScreenCapture;
}

uint64_t initValkAVCMediaStreamOptionCallID()
{
  if (AVConferenceLibrary_sOnce != -1) {
    dispatch_once(&AVConferenceLibrary_sOnce, &__block_literal_global_4);
  }
  int v0 = (uint64_t *)dlsym((void *)AVConferenceLibrary_sLib, "kAVCMediaStreamOptionCallID");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkAVCMediaStreamOptionCallID = result;
  }
  else
  {
    uint64_t result = constantValkAVCMediaStreamOptionCallID;
  }
  getkAVCMediaStreamOptionCallID[0] = kAVCMediaStreamOptionCallIDFunction;
  return result;
}

uint64_t kAVCMediaStreamOptionCallIDFunction()
{
  return constantValkAVCMediaStreamOptionCallID;
}

uint64_t initValkAVCMediaStreamOptionRunInProcess()
{
  if (AVConferenceLibrary_sOnce != -1) {
    dispatch_once(&AVConferenceLibrary_sOnce, &__block_literal_global_4);
  }
  int v0 = (uint64_t *)dlsym((void *)AVConferenceLibrary_sLib, "kAVCMediaStreamOptionRunInProcess");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkAVCMediaStreamOptionRunInProcess = result;
  }
  else
  {
    uint64_t result = constantValkAVCMediaStreamOptionRunInProcess;
  }
  getkAVCMediaStreamOptionRunInProcess[0] = kAVCMediaStreamOptionRunInProcessFunction;
  return result;
}

uint64_t kAVCMediaStreamOptionRunInProcessFunction()
{
  return constantValkAVCMediaStreamOptionRunInProcess;
}

uint64_t initValkAVCMediaStreamOptionClientPID()
{
  if (AVConferenceLibrary_sOnce != -1) {
    dispatch_once(&AVConferenceLibrary_sOnce, &__block_literal_global_4);
  }
  int v0 = (uint64_t *)dlsym((void *)AVConferenceLibrary_sLib, "kAVCMediaStreamOptionClientPID");
  if (v0)
  {
    uint64_t result = *v0;
    constantValkAVCMediaStreamOptionClientPID = result;
  }
  else
  {
    uint64_t result = constantValkAVCMediaStreamOptionClientPID;
  }
  getkAVCMediaStreamOptionClientPID[0] = kAVCMediaStreamOptionClientPIDFunction;
  return result;
}

uint64_t kAVCMediaStreamOptionClientPIDFunction()
{
  return constantValkAVCMediaStreamOptionClientPID;
}

Class initAVCVideoStream()
{
  if (AVConferenceLibrary_sOnce != -1) {
    dispatch_once(&AVConferenceLibrary_sOnce, &__block_literal_global_4);
  }
  Class result = objc_getClass("AVCVideoStream");
  classAVCVideoStreaCFIndex m = (uint64_t)result;
  getAVCVideoStreamClass[0] = AVCVideoStreamFunction;
  return result;
}

uint64_t AVCVideoStreamFunction()
{
  return classAVCVideoStream;
}

Class initAVCDaemonProcessInfo()
{
  if (AVConferenceLibrary_sOnce != -1) {
    dispatch_once(&AVConferenceLibrary_sOnce, &__block_literal_global_4);
  }
  Class result = objc_getClass("AVCDaemonProcessInfo");
  classAVCDaemonProcessuint64_t Info = (uint64_t)result;
  getAVCDaemonProcessInfoClass[0] = AVCDaemonProcessInfoFunction;
  return result;
}

uint64_t AVCDaemonProcessInfoFunction()
{
  return classAVCDaemonProcessInfo;
}

uint64_t initValAVCKeyDaemonProcessInfoUniquePID()
{
  if (AVConferenceLibrary_sOnce != -1) {
    dispatch_once(&AVConferenceLibrary_sOnce, &__block_literal_global_4);
  }
  int v0 = (uint64_t *)dlsym((void *)AVConferenceLibrary_sLib, "AVCKeyDaemonProcessInfoUniquePID");
  if (v0)
  {
    uint64_t result = *v0;
    constantValAVCKeyDaemonProcessInfoUniquePID = result;
  }
  else
  {
    uint64_t result = constantValAVCKeyDaemonProcessInfoUniquePID;
  }
  getAVCKeyDaemonProcessInfoUniquePID = AVCKeyDaemonProcessInfoUniquePIDFunction;
  return result;
}

uint64_t AVCKeyDaemonProcessInfoUniquePIDFunction()
{
  return constantValAVCKeyDaemonProcessInfoUniquePID;
}

uint64_t APEndpointCarPlayRemote_ServerDied()
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  *(unsigned char *)(result + 16) = 0;
  return result;
}

uint64_t APEndpointCarPlayRemoteCreate(uint64_t a1, uint64_t a2, void *a3)
{
  if (!a3)
  {
    APSLogErrorAt();
    return 4294950576;
  }
  FigEndpointExtendedGetClassID();
  uint64_t v5 = CMDerivedObjectCreate();
  if (v5)
  {
    uint64_t v10 = v5;
    goto LABEL_19;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(void *)(DerivedStorage + 8) = a2;
  *(unsigned char *)(DerivedStorage + 16) = 0;
  CMBaseObjectGetDerivedStorage();
  uint64_t v7 = FigXPCCreateBasicMessage();
  if (v7)
  {
    uint64_t v10 = v7;
LABEL_22:
    APSLogErrorAt();
    goto LABEL_6;
  }
  uint64_t v8 = FigXPCRemoteClientSendSyncMessageCreatingReply();
  if (!v8)
  {
    APSLogErrorAt();
    uint64_t v10 = 0;
    goto LABEL_6;
  }
  uint64_t v10 = v8;
  if (v8 != -6720) {
    goto LABEL_22;
  }
LABEL_6:
  if (v10)
  {
    if (v10 == -6720) {
      return v10;
    }
LABEL_19:
    APSLogErrorAt();
    return v10;
  }
  if (gLogCategory_APEndpointCarPlayRemote <= 50
    && (gLogCategory_APEndpointCarPlayRemote != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v10 = 0;
  *a3 = 0;
  return v10;
}

uint64_t carEndpointRemote_Finalize()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointCarPlayRemote <= 30
    && (gLogCategory_APEndpointCarPlayRemote != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t result = FigXPCRemoteClientDisassociateObject();
  *(void *)uint64_t DerivedStorage = 0;
  *(unsigned char *)(DerivedStorage + 16) = 0;
  return result;
}

CFMutableStringRef carEndpointRemote_CopyDebugDescription()
{
  CMBaseObjectGetDerivedStorage();
  CFMutableStringRef Mutable = CFStringCreateMutable(0, 0);
  CFStringAppendF();
  CFStringAppendF();
  CFStringAppendF();
  return Mutable;
}

uint64_t carEndpointRemote_CopyProperty()
{
  CMBaseObjectGetDerivedStorage();
  uint64_t v0 = FigXPCSendStdCopyPropertyMessage();
  if (v0) {
    APSLogErrorAt();
  }
  return v0;
}

uint64_t carEndpointRemote_SetProperty()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(void *)DerivedStorage)
  {
    if (*(unsigned char *)(DerivedStorage + 16))
    {
      uint64_t v1 = FigXPCSendStdSetPropertyMessage();
      if (v1) {
        APSLogErrorAt();
      }
    }
    else
    {
      APSLogErrorAt();
      return 4294960587;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960578;
  }
  return v1;
}

uint64_t APEndpointPlaybackSessionCreatePlayParamsWithTimesInSeconds(const __CFDictionary *a1, CFMutableDictionaryRef *a2)
{
  if (a1)
  {
    CFDictionaryGetTypeID();
    TypedCFDictionaryRef Value = CFDictionaryGetTypedValue();
    if (TypedValue)
    {
      CFDictionaryRef v5 = (const __CFDictionary *)TypedValue;
      CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, a1);
      if (MutableCopy)
      {
        CFMutableDictionaryRef v7 = MutableCopy;
        CMTimeMakeFromDictionary(&time, v5);
        CMTimeGetSeconds(&time);
        CFDictionarySetDouble();
        uint64_t result = 0;
        *a2 = v7;
      }
      else
      {
        APSLogErrorAt();
        return 4294950555;
      }
    }
    else
    {
      BOOL v9 = (__CFDictionary *)CFRetain(a1);
      uint64_t result = 0;
      *a2 = v9;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294950556;
  }
  return result;
}

uint64_t APEndpointPlaybackSessionCreatePlayPlaybackInfoTimesInCMTime(CFDictionaryRef theDict, __CFDictionary **a2)
{
  if (theDict)
  {
    CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, theDict);
    if (MutableCopy)
    {
      uint64_t v4 = MutableCopy;
      apPlaybackUtil_convertRangeSecondsToCMTime(MutableCopy, (const void *)*MEMORY[0x1E4F20B28]);
      apPlaybackUtil_convertRangeSecondsToCMTime(v4, (const void *)*MEMORY[0x1E4F20AF0]);
      CFDictionaryRef Value = CFDictionaryGetValue(v4, @"positionCMTime");
      if (Value)
      {
        CFDictionarySetValue(v4, (const void *)*MEMORY[0x1E4F20B10], Value);
        CFDictionaryRemoveValue(v4, @"positionCMTime");
      }
      else
      {
        apPlaybackUtil_convertSecondsToCMTime();
      }
      CFIndex v6 = CFDictionaryGetValue(v4, @"durationCMTime");
      if (v6)
      {
        CFDictionarySetValue(v4, (const void *)*MEMORY[0x1E4F20AD8], v6);
        CFDictionaryRemoveValue(v4, @"durationCMTime");
      }
      else
      {
        apPlaybackUtil_convertSecondsToCMTime();
      }
      uint64_t result = 0;
      *a2 = v4;
    }
    else
    {
      APSLogErrorAt();
      return 4294950555;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294950556;
  }
  return result;
}

void apPlaybackUtil_convertRangeSecondsToCMTime(__CFDictionary *a1, const void *a2)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  CFArrayGetTypeID();
  TypedCFDictionaryRef Value = (const __CFArray *)CFDictionaryGetTypedValue();
  if (TypedValue)
  {
    uint64_t Count = CFArrayGetCount(TypedValue);
    CFAllocatorRef v6 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], Count, MEMORY[0x1E4F1D510]);
    if (Mutable)
    {
      CFMutableArrayRef v8 = Mutable;
      uint64_t v16 = a1;
      uint64_t v17 = a2;
      if (Count < 1)
      {
LABEL_10:
        CFDictionarySetValue(v16, v17, v8);
      }
      else
      {
        uint64_t v9 = 0;
        uint64_t v10 = (const void *)*MEMORY[0x1E4F20C38];
        int v11 = (const void *)*MEMORY[0x1E4F20C30];
        while (1)
        {
          CFDictionaryGetTypeID();
          TypedCFDictionaryRef ValueAtIndex = CFArrayGetTypedValueAtIndex();
          if (!TypedValueAtIndex
            || (CFDictionaryRef v13 = (const __CFDictionary *)TypedValueAtIndex,
                (CFMutableDictionaryRef v14 = CFDictionaryCreateMutable(v6, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540])) == 0))
          {
            APSLogErrorAt();
            goto LABEL_11;
          }
          CFMutableDictionaryRef v15 = v14;
          apPlaybackUtil_getCMTimeFromRangeForKeys(v13, @"startCMTime", v10, &v18);
          CMTimeValue value = v18.value;
          CMTimeScale timescale = v18.timescale;
          if ((v18.flags & 1) == 0) {
            break;
          }
          v18.CMTimeValue value = value;
          v18.CMTimeScale timescale = timescale;
          FigCFDictionarySetCMTime();
          apPlaybackUtil_getCMTimeFromRangeForKeys(v13, @"durationCMTime", v11, &v18);
          CMTimeValue value = v18.value;
          CMTimeScale timescale = v18.timescale;
          if ((v18.flags & 1) == 0) {
            break;
          }
          v18.CMTimeValue value = value;
          v18.CMTimeScale timescale = timescale;
          FigCFDictionarySetCMTime();
          CFArrayAppendValue(v8, v15);
          CFRelease(v15);
          if (Count == ++v9) {
            goto LABEL_10;
          }
        }
        APSLogErrorAt();
        CFRelease(v15);
      }
LABEL_11:
      CFRelease(v8);
    }
    else
    {
      APSLogErrorAt();
    }
  }
}

uint64_t apPlaybackUtil_convertSecondsToCMTime()
{
  int v3 = 0;
  CFDictionaryGetDouble();
  CMTimeMakeWithSeconds(&v2, v0, 1000);
  uint64_t result = FigCFDictionarySetCMTime();
  int v3 = result;
  if (result) {
    return APSLogErrorAt();
  }
  return result;
}

uint64_t APEndpointPlaybackSessionGetMediaTypeFromPlayParams(const __CFDictionary *a1)
{
  if (CFDictionaryContainsKey(a1, (const void *)*MEMORY[0x1E4F209E8])) {
    BOOL v2 = 1;
  }
  else {
    BOOL v2 = CFDictionaryContainsKey(a1, @"IsTLSEnabled") != 0;
  }
  int v3 = CFDictionaryContainsKey(a1, (const void *)*MEMORY[0x1E4F20910]);
  int v4 = CFDictionaryContainsKey(a1, (const void *)*MEMORY[0x1E4F20800]);
  unsigned int v5 = 2 * ((v3 | v4 | CFDictionaryContainsKey(a1, (const void *)*MEMORY[0x1E4F20808])) != 0);
  if (v3 | v4) {
    unsigned int v6 = 3;
  }
  else {
    unsigned int v6 = 1;
  }
  if (v2) {
    return v5;
  }
  else {
    return v6;
  }
}

__CFString *APEndpointPlaybackSessionGetRTCMediaTypeFromPlayParams(const __CFDictionary *a1)
{
  int MediaTypeFromPlayParams = APEndpointPlaybackSessionGetMediaTypeFromPlayParams(a1);
  CFDictionaryGetValue(a1, (const void *)*MEMORY[0x1E4F209B8]);
  uint64_t result = @"LocalFileNonEncrypted";
  switch(MediaTypeFromPlayParams)
  {
    case 1:
      int v4 = FigCFEqual();
      unsigned int v5 = @"HLSNonEncrypted";
      unsigned int v6 = @"RemoteFileNonEncrypted";
      goto LABEL_5;
    case 2:
      uint64_t result = @"LocalFileEncrypted";
      break;
    case 3:
      int v4 = FigCFEqual();
      unsigned int v5 = @"HLSEncrypted";
      unsigned int v6 = @"RemoteFileEncrypted";
LABEL_5:
      if (v4) {
        uint64_t result = v5;
      }
      else {
        uint64_t result = v6;
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t APEndpointPlaybackSessionCreateVideoSyncTimeHistogram(uint64_t *a1)
{
  if (APEndpointPlaybackSessionCreateVideoSyncTimeHistogram_once != -1) {
    dispatch_once(&APEndpointPlaybackSessionCreateVideoSyncTimeHistogram_once, &__block_literal_global_5);
  }
  uint64_t result = APEndpointPlaybackSessionCreateVideoSyncTimeHistogram_histogramCreationOptions;
  if (APEndpointPlaybackSessionCreateVideoSyncTimeHistogram_histogramCreationOptions)
  {
    uint64_t v3 = APSStatsHistogramCreate();
    *a1 = v3;
    if (v3)
    {
      return 0;
    }
    else
    {
      APSLogErrorAt();
      return 4294950555;
    }
  }
  return result;
}

uint64_t APEndpointPlaybackSessionStatsCreate(const void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v12 = 0;
  if (!a4)
  {
    APSLogErrorAt();
    uint64_t v10 = 4294960591;
    goto LABEL_9;
  }
  CFMutableDictionaryRef v7 = malloc_type_calloc(1uLL, 0x38uLL, 0x10200409E74B7CDuLL);
  uint64_t v12 = v7;
  uint64_t v8 = FigSimpleMutexCreate();
  *CFMutableDictionaryRef v7 = v8;
  if (!v8) {
    goto LABEL_14;
  }
  CFMutableArrayRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  v7[1] = Mutable;
  if (!Mutable) {
    goto LABEL_14;
  }
  if (!a1) {
    goto LABEL_15;
  }
  CFDictionarySetValue(Mutable, @"videoSessionType", a1);
  FigCFDictionaryGetDoubleIfPresent();
  APEndpointPlaybackSessionCreateVideoSyncTimeHistogram(v7 + 5);
  if (!v7[5])
  {
LABEL_14:
    APSLogErrorAt();
    uint64_t v10 = 4294950555;
    goto LABEL_9;
  }
  if (!a2)
  {
LABEL_15:
    APSLogErrorAt();
    uint64_t v10 = 4294950556;
    goto LABEL_9;
  }
  uint64_t v10 = APSEventRecorderCreate();
  if (v10)
  {
    APSLogErrorAt();
  }
  else
  {
    *a4 = v7;
    uint64_t v12 = 0;
  }
LABEL_9:
  APEndpointPlaybackSessionStatsDestroy((uint64_t *)&v12);
  return v10;
}

void APEndpointPlaybackSessionStatsDestroy(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    uint64_t v3 = *(const void **)(v1 + 40);
    if (v3)
    {
      CFRelease(v3);
      *(void *)(*a1 + 40) = 0;
      uint64_t v1 = *a1;
    }
    int v4 = *(const void **)(v1 + 8);
    if (v4)
    {
      CFRelease(v4);
      *(void *)(*a1 + 8) = 0;
    }
    FigSimpleMutexDestroy();
    unsigned int v5 = (void *)*a1;
    if (!*(void *)(*a1 + 48)
      || (CFRelease(*(CFTypeRef *)(*a1 + 48)), *(void *)(*a1 + 48) = 0, (unsigned int v5 = (void *)*a1) != 0))
    {
      *a1 = 0;
      free(v5);
    }
  }
}

void APEndpointPlaybackSessionStatsUpdateAtPlay(uint64_t a1, const __CFDictionary *a2)
{
  FigSimpleMutexCheckIsNotLockedOnThisThread();
  MEMORY[0x1D25EB370](*(void *)a1);
  APSEventRecorderRecordEvent();
  APSEventRecorderGetTimeBetweenCFAbsoluteTimeAndEventInMilliSecond();
  CFStringGetTypeID();
  CFDictionaryGetTypedValue();
  APEndpointPlaybackSessionGetRTCMediaTypeFromPlayParams(a2);
  CFDictionarySetInt64();
  FigCFDictionarySetValue();
  FigCFDictionarySetValue();
  if (CFDictionaryContainsKey(a2, (const void *)*MEMORY[0x1E4F20958])) {
    CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 8), @"storeHLSProvided", (const void *)*MEMORY[0x1E4F1CFD0]);
  }
  if (*(unsigned char *)(a1 + 32)) {
    APSEventRecorderRecordEvent();
  }
  JUMPOUT(0x1D25EB390);
}

void APEndpointPlaybackSessionStatsUpdateAtInvalidate(uint64_t a1)
{
  FigSimpleMutexCheckIsNotLockedOnThisThread();
  MEMORY[0x1D25EB370](*(void *)a1);
  if (!*(unsigned char *)(a1 + 33))
  {
    APSEventRecorderRecordEvent();
    APSEventRecorderGetEventTime();
    if (v2 != 0.0)
    {
      APSEventRecorderGetTimeBetweenEventsInMilliSecond();
      CFDictionarySetInt64();
    }
    APSEventRecorderGetEventTime();
    if (v3 != 0.0)
    {
      if (*(unsigned char *)(a1 + 32)) {
        *(void *)(a1 + 24) += APSEventRecorderGetTimeBetweenEventsInMilliSecond();
      }
      CFDictionarySetInt64();
      if (*(void *)(a1 + 40))
      {
        int v4 = (const void *)APSStatsHistogramCopyValuesAsRTCString();
        FigCFDictionarySetValue();
        if (v4) {
          CFRelease(v4);
        }
      }
    }
    *(unsigned char *)(a1 + 33) = 1;
  }
  JUMPOUT(0x1D25EB390);
}

void APEndpointPlaybackSessionStatsUpdateAtStartUpComplete(uint64_t a1)
{
  FigSimpleMutexCheckIsNotLockedOnThisThread();
  MEMORY[0x1D25EB370](*(void *)a1);
  if (!CFDictionaryContainsKey(*(CFDictionaryRef *)(a1 + 8), @"videoStartupTimeMs"))
  {
    APSEventRecorderRecordEvent();
    APSEventRecorderGetTimeBetweenEventsInMilliSecond();
    CFDictionarySetInt64();
  }
  JUMPOUT(0x1D25EB390);
}

void APEndpointPlaybackSessionStatsSetLastError(void *a1)
{
  FigSimpleMutexCheckIsNotLockedOnThisThread();
  MEMORY[0x1D25EB370](*a1);
  CFDictionarySetInt64();
  JUMPOUT(0x1D25EB390);
}

void APEndpointPlaybackSessionSetIsParticipatingInCoordinatedPlayback(uint64_t a1, int a2)
{
  FigSimpleMutexCheckIsNotLockedOnThisThread();
  MEMORY[0x1D25EB370](*(void *)a1);
  if (*(unsigned __int8 *)(a1 + 32) != a2)
  {
    *(unsigned char *)(a1 + 32) = a2;
    if (a2)
    {
      APSEventRecorderGetEventTime();
      if (v4 != 0.0) {
        APSEventRecorderRecordEvent();
      }
    }
    else
    {
      APSEventRecorderRecordEvent();
      APSEventRecorderGetEventTime();
      if (v5 != 0.0) {
        *(void *)(a1 + 24) += APSEventRecorderGetTimeBetweenEventsInMilliSecond();
      }
    }
  }
  JUMPOUT(0x1D25EB390);
}

uint64_t APEndpointPlaybackSessionSetVideoSyncTime(void *a1, uint64_t a2)
{
  FigSimpleMutexCheckIsNotLockedOnThisThread();
  MEMORY[0x1D25EB370](*a1);
  if ((*(unsigned char *)(a2 + 12) & 1) != 0 && a1[5])
  {
    CMTime v5 = *(CMTime *)a2;
    CMTimeGetSeconds(&v5);
    APSStatsHistogramAddValue();
  }
  return MEMORY[0x1D25EB390](*a1);
}

void APEndpointPlaybackSessionCopyRTCStats(uint64_t a1, CFDictionaryRef *a2)
{
  FigSimpleMutexCheckIsNotLockedOnThisThread();
  MEMORY[0x1D25EB370](*(void *)a1);
  *a2 = CFDictionaryCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], *(CFDictionaryRef *)(a1 + 8));
  JUMPOUT(0x1D25EB390);
}

void APEndpointPlaybackSessionUpdateNowPlayingTransaction(uint64_t a1, int a2, int *a3, const void **a4)
{
  if (*a3 <= 50 && (*a3 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  if (a4)
  {
    uint64_t v8 = *a4;
    if (a2)
    {
      if (!v8)
      {
        MEMORY[0x1F4108058](1, a1, a3, a4);
      }
    }
    else if (v8)
    {
      CFRelease(v8);
      *a4 = 0;
    }
  }
  else
  {
    APSLogErrorAt();
  }
}

void APEndpointPlaybackSessionSetV2Item(uint64_t a1, __CFDictionary *a2)
{
  uint64_t Value = FigCFDictionaryGetValue();
  if (Value)
  {
    double v4 = (const void *)Value;
    CFMutableArrayRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    CFDictionarySetValue(Mutable, @"uuid", v4);
    CFDictionarySetValue(a2, @"item", Mutable);
    if (Mutable)
    {
      CFRelease(Mutable);
    }
  }
}

CMTime *apPlaybackUtil_getCMTimeFromRangeForKeys@<X0>(const __CFDictionary *a1@<X0>, const void *a2@<X1>, const void *a3@<X2>, CMTime *a4@<X8>)
{
  uint64_t v7 = MEMORY[0x1E4F1F9F8];
  *(_OWORD *)&a4->CMTimeValue value = *MEMORY[0x1E4F1F9F8];
  a4->epoch = *(void *)(v7 + 16);
  CFDictionaryRef Value = (const __CFDictionary *)CFDictionaryGetValue(a1, a2);
  if (Value)
  {
    uint64_t v9 = a4;
LABEL_9:
    return CMTimeMakeFromDictionary(v9, Value);
  }
  CFNumberRef v10 = (const __CFNumber *)CFDictionaryGetValue(a1, a3);
  CFNumberRef v11 = v10;
  if (!v10 || (CFTypeID v12 = CFGetTypeID(v10), v12 != CFNumberGetTypeID()))
  {
    uint64_t v9 = a4;
    CFDictionaryRef Value = v11;
    goto LABEL_9;
  }
  Float64 valuePtr = 0.0;
  uint64_t result = (CMTime *)CFNumberGetValue(v11, kCFNumberFloat64Type, &valuePtr);
  if (result) {
    return CMTimeMakeWithSeconds(a4, valuePtr, 1000);
  }
  return result;
}

uint64_t APAudioSinkSharedMemCreate(uint64_t a1, long long *a2, void *a3)
{
  if (a3 && a2)
  {
    FigEndpointAudioSinkGetClassID();
    uint64_t v5 = CMDerivedObjectCreate();
    if (v5)
    {
      uint64_t v11 = v5;
      APSLogErrorAt();
    }
    else
    {
      uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
      uint64_t v7 = *((void *)a2 + 4);
      long long v8 = a2[1];
      *(_OWORD *)(DerivedStorage + 48) = *a2;
      *(_OWORD *)(DerivedStorage + 64) = v8;
      *(void *)(DerivedStorage + 80) = v7;
      long long v10 = *a2;
      long long v9 = a2[1];
      *(void *)(DerivedStorage + 40) = *((void *)a2 + 4);
      *(_OWORD *)(DerivedStorage + 8) = v10;
      *(_OWORD *)(DerivedStorage + 24) = v9;
      if (gLogCategory_APAudioSinkSharedMem <= 30
        && (gLogCategory_APAudioSinkSharedMem != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v11 = 0;
      *a3 = 0;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294950504;
  }
  return v11;
}

void sharedMemSink_Finalize()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioSinkSharedMem <= 30
    && (gLogCategory_APAudioSinkSharedMem != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v1 = *(const void **)(DerivedStorage + 96);
  if (v1)
  {
    CFRelease(v1);
    *(void *)(DerivedStorage + 96) = 0;
  }
}

__CFString *sharedMemSink_CopyDebugDescription()
{
  CFMutableArrayRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppendFormat(Mutable, 0, @"<APAudioSinkSharedMem>");
  return Mutable;
}

uint64_t sharedMemSink_CopyProperty(uint64_t a1, const void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (CFEqual(a2, @"SharedMemoryBuffer"))
  {
    if (*(void *)(DerivedStorage + 96)) {
      APSSharedRingBuffer_GetSharedMemoryBuffer();
    }
LABEL_7:
    uint64_t v7 = FigXPCRetain();
    uint64_t result = 0;
    *a4 = v7;
    return result;
  }
  if (CFEqual(a2, @"SharedMemoryBufferState"))
  {
    if (*(void *)(DerivedStorage + 96)) {
      APSSharedRingBuffer_GetSharedMemoryState();
    }
    goto LABEL_7;
  }
  return 4294954512;
}

uint64_t sharedMemSink_GetInputFormat(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v4 = *(void *)(DerivedStorage + 40);
  long long v5 = *(_OWORD *)(DerivedStorage + 24);
  *(_OWORD *)a2 = *(_OWORD *)(DerivedStorage + 8);
  *(_OWORD *)(a2 + 16) = v5;
  *(void *)(a2 + 32) = v4;
  return 0;
}

uint64_t sharedMemSink_SetInputFormat(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v4 = DerivedStorage + 48;
  if (a2) {
    uint64_t v4 = a2;
  }
  uint64_t v5 = *(void *)(v4 + 32);
  long long v6 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)(DerivedStorage + 8) = *(_OWORD *)v4;
  *(_OWORD *)(DerivedStorage + 24) = v6;
  *(void *)(DerivedStorage + 40) = v5;
  return 0;
}

uint64_t sharedMemSink_Resume()
{
  uint64_t DerivedStorage = (unsigned char *)CMBaseObjectGetDerivedStorage();
  if (*DerivedStorage) {
    return 0;
  }
  uint64_t v1 = DerivedStorage;
  if (gLogCategory_APAudioSinkSharedMem <= 30
    && (gLogCategory_APAudioSinkSharedMem != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*((_DWORD *)v1 + 4) == *((_DWORD *)v1 + 14))
  {
    uint64_t v2 = APSSharedRingBuffer_Create();
    if (v2)
    {
      APSLogErrorAt();
    }
    else
    {
      APSSharedRingBuffer_ClearDataInBuffer();
      unsigned char *v1 = 1;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960587;
  }
  return v2;
}

uint64_t sharedMemSink_Suspend()
{
  uint64_t DerivedStorage = (unsigned char *)CMBaseObjectGetDerivedStorage();
  if (!*DerivedStorage) {
    return 4294950503;
  }
  uint64_t v1 = DerivedStorage;
  if (gLogCategory_APAudioSinkSharedMem <= 30
    && (gLogCategory_APAudioSinkSharedMem != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  unsigned char *v1 = 0;
  uint64_t result = *((void *)v1 + 12);
  if (result)
  {
    CFRelease((CFTypeRef)result);
    uint64_t result = 0;
    *((void *)v1 + 12) = 0;
  }
  return result;
}

uint64_t sharedMemSink_AcquireBuffer(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(void *)(DerivedStorage + 104) || (uint64_t v6 = DerivedStorage, !APSSharedRingBuffer_IsSpaceAvailable()))
  {
    APSLogErrorAt();
    return 4294960568;
  }
  else
  {
    uint64_t v7 = APSSharedRingBuffer_GetWritePointer();
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t result = 0;
      v8 += 4;
      *a2 = v8;
      *a3 = 1440;
      *(void *)(v6 + 104) = v8;
    }
    else
    {
      APSLogErrorAt();
      return 4294960587;
    }
  }
  return result;
}

uint64_t sharedMemSink_CommitBuffer(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v4 = *(void *)(DerivedStorage + 104);
  if (!v4 || v4 != a2)
  {
    APSLogErrorAt();
    return 4294960591;
  }
  uint64_t v5 = DerivedStorage;
  uint64_t v6 = APSSharedRingBuffer_WriteData();
  if (v6)
  {
    uint64_t v7 = v6;
    goto LABEL_9;
  }
  uint64_t v7 = APSSharedRingBuffer_UpdateWriteState();
  if (v7)
  {
LABEL_9:
    APSLogErrorAt();
    return v7;
  }
  *(void *)(v5 + 104) = 0;
  return v7;
}

void APDemoManagerStart()
{
  if (demoManagerGetShared_once != -1) {
    dispatch_once(&demoManagerGetShared_once, &__block_literal_global_50);
  }
  if (demoManagerGetShared_manager)
  {
    Float64 v0 = *(NSObject **)demoManagerGetShared_manager;
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 0x40000000;
    block[2] = __APDemoManagerStart_block_invoke;
    block[3] = &__block_descriptor_tmp_7;
    block[4] = demoManagerGetShared_manager;
    dispatch_async(v0, block);
  }
}

void __APDemoManagerStart_block_invoke(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  sleep(1u);
  CFStringGetTypeID();
  *(void *)(*(void *)(a1 + 32) + 32) = APSSettingsCopyValueEx();
  uint64_t v2 = *(SCDynamicStoreRef **)(a1 + 32);
  memset(&context, 0, sizeof(context));
  CFTypeRef v12 = 0;
  if (gLogCategory_APDemoManager <= 50 && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  CFAllocatorRef v3 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  values = (void *)SCDynamicStoreKeyCreateNetworkInterfaceEntity((CFAllocatorRef)*MEMORY[0x1E4F1CF80], (CFStringRef)*MEMORY[0x1E4F41AC8], @"en[0-9]+", (CFStringRef)*MEMORY[0x1E4F41B18]);
  CFArrayRef v4 = CFArrayCreate(v3, (const void **)&values, 1, MEMORY[0x1E4F1D510]);
  context.info = v2;
  uint64_t v5 = SCDynamicStoreCreate(v3, @"APDemoManager", (SCDynamicStoreCallBack)callback_ipAddressChanged, &context);
  v2[5] = v5;
  if (v5
    && SCDynamicStoreSetNotificationKeys(v5, 0, v4)
    && SCDynamicStoreSetDispatchQueue(v2[5], (dispatch_queue_t)*v2))
  {
    uint64_t v6 = *v2;
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 0x40000000;
    block[2] = __demoManagerStartLinkDiscovery_block_invoke;
    block[3] = &__block_descriptor_tmp_60;
    block[4] = v2;
    dispatch_async(v6, block);
  }
  else
  {
    APSLogErrorAt();
    int v7 = SCError();
    if (v7) {
      int v8 = v7;
    }
    else {
      int v8 = 1001;
    }
    if (gLogCategory_APDemoManager <= 90
      && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize()))
    {
      SCErrorString(v8);
      LogPrintF();
    }
  }
  if (values) {
    CFRelease(values);
  }
  if (v12) {
    CFRelease(v12);
  }
  if (v4) {
    CFRelease(v4);
  }
}

uint64_t APDemoManagerIsDemoSession(uint64_t a1, uint64_t a2)
{
  CFTypeRef v15 = 0;
  CFTypeRef cf = 0;
  if (demoManagerGetShared_once != -1) {
    dispatch_once(&demoManagerGetShared_once, &__block_literal_global_50);
  }
  uint64_t v4 = 0;
  if (a2 && a1 && demoManagerGetShared_manager)
  {
    if (APSGetFBOPropertyInt64() && !APSGetFBOPropertyInt64())
    {
      uint64_t CMBaseObject = APSenderSessionGetCMBaseObject(a2);
      uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v6) {
        uint64_t v7 = v6;
      }
      else {
        uint64_t v7 = 0;
      }
      int v8 = *(unsigned int (**)(uint64_t, __CFString *, void, CFTypeRef *))(v7 + 48);
      if (v8)
      {
        uint64_t v9 = *MEMORY[0x1E4F1CF80];
        if (!v8(CMBaseObject, @"TransportControlStream", *MEMORY[0x1E4F1CF80], &cf))
        {
          if (cf)
          {
            uint64_t v10 = FigTransportStreamGetCMBaseObject();
            uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 8);
            uint64_t v12 = v11 ? v11 : 0;
            uint64_t v13 = *(void (**)(uint64_t, void, uint64_t, CFTypeRef *))(v12 + 48);
            if (v13)
            {
              v13(v10, *MEMORY[0x1E4F47660], v9, &v15);
              if (v15)
              {
                uint64_t v4 = APSIsDirectLinkInterface();
                goto LABEL_23;
              }
            }
          }
        }
      }
      APSLogErrorAt();
    }
    uint64_t v4 = 0;
  }
LABEL_23:
  if (cf) {
    CFRelease(cf);
  }
  if (v15) {
    CFRelease(v15);
  }
  return v4;
}

CFTypeRef APDemoManagerCopyDeviceInfo()
{
  if (APDemoManagerCopyDeviceInfo_once != -1) {
    dispatch_once(&APDemoManagerCopyDeviceInfo_once, &__block_literal_global_6);
  }
  CFTypeRef result = (CFTypeRef)APDemoManagerCopyDeviceInfo_deviceInfo;
  if (APDemoManagerCopyDeviceInfo_deviceInfo)
  {
    return CFRetain(result);
  }
  return result;
}

void __APDemoManagerCopyDeviceInfo_block_invoke()
{
  if (demoManagerGetShared_once != -1) {
    dispatch_once(&demoManagerGetShared_once, &__block_literal_global_50);
  }
  if (demoManagerGetShared_manager)
  {
    APDemoManagerCopyDeviceInfo_deviceuint64_t Info = (uint64_t)CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    Float64 v0 = (const void *)MGCopyAnswer();
    if (v0)
    {
      uint64_t v1 = v0;
      CFDictionarySetValue((CFMutableDictionaryRef)APDemoManagerCopyDeviceInfo_deviceInfo, @"DeviceUniqueID", v0);
      CFRelease(v1);
    }
    uint64_t v2 = (const void *)MGCopyAnswer();
    if (v2)
    {
      CFAllocatorRef v3 = v2;
      CFDictionarySetValue((CFMutableDictionaryRef)APDemoManagerCopyDeviceInfo_deviceInfo, @"DeviceColor", v2);
      CFRelease(v3);
    }
    uint64_t v4 = (const void *)MGCopyAnswer();
    if (v4)
    {
      uint64_t v5 = v4;
      CFDictionarySetValue((CFMutableDictionaryRef)APDemoManagerCopyDeviceInfo_deviceInfo, @"DeviceEnclosureColor", v4);
      CFRelease(v5);
    }
    uint64_t v6 = (const void *)MGCopyAnswer();
    if (v6)
    {
      uint64_t v7 = v6;
      CFDictionarySetValue((CFMutableDictionaryRef)APDemoManagerCopyDeviceInfo_deviceInfo, @"iOS Build", v6);
      CFRelease(v7);
    }
    ModelSpecificName = (const void *)CelestialGetModelSpecificName();
    if (ModelSpecificName) {
      CFDictionarySetValue((CFMutableDictionaryRef)APDemoManagerCopyDeviceInfo_deviceInfo, @"DeviceModel", ModelSpecificName);
    }
    uint64_t v9 = (const void *)MGCopyAnswer();
    if (v9)
    {
      uint64_t v10 = v9;
      CFDictionarySetValue((CFMutableDictionaryRef)APDemoManagerCopyDeviceInfo_deviceInfo, @"DeviceCornerRadius", v9);
      CFRelease(v10);
    }
    uint64_t v11 = (const void *)MGCopyAnswer();
    if (v11)
    {
      uint64_t v12 = v11;
      CFDictionarySetValue((CFMutableDictionaryRef)APDemoManagerCopyDeviceInfo_deviceInfo, @"DeviceScreenScale", v11);
      CFRelease(v12);
    }
    uint64_t v13 = (const void *)MGCopyAnswer();
    if (v13)
    {
      CFMutableDictionaryRef v14 = v13;
      CFDictionarySetValue((CFMutableDictionaryRef)APDemoManagerCopyDeviceInfo_deviceInfo, @"DeviceScreenWidth", v13);
      CFRelease(v14);
    }
    CFTypeRef v15 = (const void *)MGCopyAnswer();
    if (v15)
    {
      uint64_t v16 = v15;
      CFDictionarySetValue((CFMutableDictionaryRef)APDemoManagerCopyDeviceInfo_deviceInfo, @"DeviceScreenHeight", v15);
      CFRelease(v16);
    }
    if (gLogCategory_APDemoManager <= 50
      && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
}

uint64_t __demoManagerGetShared_block_invoke()
{
  uint64_t result = APSIsDemoModeEnabled();
  if (result)
  {
    demoManagerGetShared_manager = (uint64_t)malloc_type_calloc(1uLL, 0x38uLL, 0x1060040781CD4F9uLL);
    uint64_t result = (uint64_t)dispatch_queue_create("com.apple.airplay.demomanager", 0);
    *(void *)demoManagerGetShared_manager = result;
    if (gLogCategory_APDemoManager <= 50)
    {
      if (gLogCategory_APDemoManager != -1 || (uint64_t result = _LogCategory_Initialize(), result))
      {
        return LogPrintF();
      }
    }
  }
  return result;
}

void callback_ipAddressChanged(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (gLogCategory_APDemoManager <= 50 && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  demoManagerDiscoverLink(a3);
}

void __demoManagerStartLinkDiscovery_block_invoke(uint64_t a1)
{
}

void demoManagerDiscoverLink(uint64_t a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  if (gLogCategory_APDemoManager <= 50 && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  uint64_t v21 = 0;
  if (getifaddrs(&v21) < 0)
  {
    int v8 = __error();
    if (gLogCategory_APDemoManager > 90)
    {
LABEL_42:
      demoManagerStopEndpointDiscovery(a1);
      uint64_t v10 = *(const void **)(a1 + 8);
      if (v10)
      {
        CFRelease(v10);
        *(void *)(a1 + 8) = 0;
      }
      return;
    }
    int v9 = *v8;
    if (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize())
    {
      strerror(v9);
      LogPrintF();
    }
LABEL_38:
    if (gLogCategory_APDemoManager <= 50
      && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_42;
  }
  uint64_t v2 = v21;
  if (!v21)
  {
    MEMORY[0x1D25EC2B0](0);
    goto LABEL_38;
  }
  CFAllocatorRef v3 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  do
  {
    ifa_addr = v2->ifa_addr;
    if (ifa_addr)
    {
      if (ifa_addr->sa_family == 30
        && (v2->ifa_flags & 9) == 1
        && (ifa_name = v2->ifa_name, !strncmp(ifa_name, "en", 2uLL)))
      {
        CFStringRef v6 = CFStringCreateWithCString(v3, ifa_name, 0x8000100u);
        if (!APSIsDirectLinkInterface())
        {
          LODWORD(ifa_addr) = 0;
          if (!v6) {
            goto LABEL_13;
          }
LABEL_24:
          CFRelease(v6);
          goto LABEL_13;
        }
        if (gLogCategory_APDemoManager <= 50
          && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize()))
        {
          inet_ntop(30, &ifa_addr->sa_data[6], v22, 0x2Eu);
          LogPrintF();
        }
        LODWORD(ifa_addr) = 1;
        if (v6) {
          goto LABEL_24;
        }
      }
      else
      {
        LODWORD(ifa_addr) = 0;
      }
    }
LABEL_13:
    if (ifa_addr) {
      break;
    }
    uint64_t v2 = v2->ifa_next;
  }
  while (v2);
  MEMORY[0x1D25EC2B0](v21);
  if (!ifa_addr) {
    goto LABEL_38;
  }
  if (*(void *)(a1 + 24)) {
    goto LABEL_29;
  }
  if (FigRoutingContextCopySystemMirroringContext()) {
    goto LABEL_65;
  }
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterAddListener();
LABEL_29:
  uint64_t v7 = (uint64_t *)(a1 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (gLogCategory_APDemoManager <= 50
      && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v3, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    FigCFDictionarySetInt32();
    int v12 = FigRouteDiscovererCreate();
    if (v12)
    {
      APSLogErrorAt();
      if (Mutable) {
        goto LABEL_52;
      }
    }
    else
    {
      uint64_t v13 = *v7;
      uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v14) {
        uint64_t v15 = v14;
      }
      else {
        uint64_t v15 = 0;
      }
      uint64_t v16 = *(void (**)(uint64_t, void, __CFString *))(v15 + 56);
      if (v16) {
        v16(v13, *MEMORY[0x1E4F75580], @"APDemoManager");
      }
      if (Mutable) {
LABEL_52:
      }
        CFRelease(Mutable);
    }
    if (v12) {
      goto LABEL_65;
    }
  }
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterRemoveListener();
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterAddListener();
  if (*(unsigned char *)(a1 + 48)) {
    goto LABEL_55;
  }
  if (gLogCategory_APDemoManager <= 50 && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  uint64_t v17 = *v7;
  uint64_t v18 = *(void *)(CMBaseObjectGetVTable() + 8);
  uint64_t v19 = v18 ? v18 : 0;
  CFTypeRef v20 = *(unsigned int (**)(uint64_t, void, void))(v19 + 56);
  if (v20 && !v20(v17, *MEMORY[0x1E4F75588], *MEMORY[0x1E4F75530]))
  {
LABEL_55:
    *(unsigned char *)(a1 + 48) = 1;
    demoManagerActivateEndpointIfNeeded((void *)a1);
  }
  else
  {
LABEL_65:
    APSLogErrorAt();
    if (gLogCategory_APDemoManager <= 90
      && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    demoManagerStopEndpointDiscovery(a1);
  }
}

uint64_t demoManagerStopEndpointDiscovery(uint64_t a1)
{
  if (*(void *)(a1 + 16) && *(unsigned char *)(a1 + 48))
  {
    if (gLogCategory_APDemoManager <= 50
      && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v2 = *(void *)(a1 + 16);
    uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v3) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    uint64_t v5 = *(void (**)(uint64_t, void, void))(v4 + 56);
    if (v5) {
      v5(v2, *MEMORY[0x1E4F75588], *MEMORY[0x1E4F75540]);
    }
  }
  CMNotificationCenterGetDefaultLocalCenter();
  uint64_t result = CMNotificationCenterRemoveListener();
  *(unsigned char *)(a1 + 48) = 0;
  return result;
}

void callback_currentRouteChanged(uint64_t a1, NSObject **a2)
{
  if (gLogCategory_APDemoManager <= 50 && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  uint64_t v3 = *a2;
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __callback_currentRouteChanged_block_invoke;
  block[3] = &__block_descriptor_tmp_71;
  block[4] = a2;
  dispatch_async(v3, block);
}

void callback_availableEndpointsChanged(uint64_t a1, NSObject **a2)
{
  if (gLogCategory_APDemoManager <= 50 && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  uint64_t v3 = *a2;
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __callback_availableEndpointsChanged_block_invoke;
  block[3] = &__block_descriptor_tmp_79;
  block[4] = a2;
  dispatch_async(v3, block);
}

void demoManagerActivateEndpointIfNeeded(void *a1)
{
  CFArrayRef theArray = 0;
  CFTypeRef v31 = 0;
  CFTypeRef cf = 0;
  if (!a1[2]) {
    goto LABEL_15;
  }
  if (gLogCategory_APDemoManager <= 50 && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  uint64_t v2 = a1[2];
  uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 8);
  uint64_t v4 = v3 ? v3 : 0;
  uint64_t v5 = *(unsigned int (**)(uint64_t, void, void, CFArrayRef *))(v4 + 48);
  if (!v5 || (uint64_t v6 = *MEMORY[0x1E4F1CF80], v5(v2, *MEMORY[0x1E4F75578], *MEMORY[0x1E4F1CF80], &theArray)))
  {
LABEL_15:
    APSLogErrorAt();
    goto LABEL_28;
  }
  if (theArray)
  {
    CFIndex Count = CFArrayGetCount(theArray);
    if (gLogCategory_APDemoManager <= 50
      && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (Count < 1) {
      goto LABEL_25;
    }
    CFIndex v8 = 0;
    while (1)
    {
      CFDictionaryRef ValueAtIndex = CFArrayGetValueAtIndex(theArray, v8);
      if (APSGetFBOPropertyInt64()) {
        break;
      }
      if (Count == ++v8) {
        goto LABEL_25;
      }
    }
    if (ValueAtIndex)
    {
      uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
      uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v11) {
        uint64_t v12 = v11;
      }
      else {
        uint64_t v12 = 0;
      }
      uint64_t v15 = *(void (**)(uint64_t, void, uint64_t, CFTypeRef *))(v12 + 48);
      if (v15) {
        v15(CMBaseObject, *MEMORY[0x1E4F20F28], v6, &v31);
      }
      if (gLogCategory_APDemoManager <= 50
        && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v16 = FigEndpointGetCMBaseObject();
      uint64_t v17 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v17) {
        uint64_t v18 = v17;
      }
      else {
        uint64_t v18 = 0;
      }
      uint64_t v19 = *(void (**)(uint64_t, void, uint64_t, CFTypeRef *))(v18 + 48);
      if (v19) {
        v19(v16, *MEMORY[0x1E4F20E40], v6, &cf);
      }
      if (cf == (CFTypeRef)*MEMORY[0x1E4F1CFD0])
      {
        if (gLogCategory_APDemoManager <= 50
          && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        demoManagerStopEndpointDiscovery((uint64_t)a1);
      }
      else if (ValueAtIndex == (const void *)a1[1])
      {
        if (gLogCategory_APDemoManager <= 50
          && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
      else
      {
        if (a1[4])
        {
          if (gLogCategory_APDemoManager <= 50
            && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          uint64_t v20 = a1[4];
          uint64_t v21 = FigEndpointGetCMBaseObject();
          uint64_t v22 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v22) {
            uint64_t v23 = v22;
          }
          else {
            uint64_t v23 = 0;
          }
          CFAllocatorRef v24 = *(void (**)(uint64_t, void, uint64_t))(v23 + 56);
          if (v24) {
            v24(v21, *MEMORY[0x1E4F20F58], v20);
          }
        }
        if (gLogCategory_APDemoManager <= 50
          && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t v25 = a1[3];
        uint64_t v26 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v26) {
          uint64_t v27 = v26;
        }
        else {
          uint64_t v27 = 0;
        }
        int v28 = *(unsigned int (**)(uint64_t, const void *, void))(v27 + 8);
        if (!v28 || v28(v25, ValueAtIndex, 0))
        {
          if (gLogCategory_APDemoManager <= 90
            && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize()))
          {
            goto LABEL_30;
          }
          goto LABEL_32;
        }
      }
      uint64_t v13 = (const void *)a1[1];
      a1[1] = ValueAtIndex;
      CFRetain(ValueAtIndex);
      int v14 = 0;
      if (!v13) {
        goto LABEL_27;
      }
    }
    else
    {
LABEL_25:
      uint64_t v13 = (const void *)a1[1];
      a1[1] = 0;
      int v14 = 1;
      if (!v13) {
        goto LABEL_27;
      }
    }
    CFRelease(v13);
LABEL_27:
    if (!v14) {
      goto LABEL_32;
    }
  }
LABEL_28:
  if (gLogCategory_APDemoManager <= 50 && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize())) {
LABEL_30:
  }
    LogPrintF();
LABEL_32:
  if (cf) {
    CFRelease(cf);
  }
  if (theArray) {
    CFRelease(theArray);
  }
  if (v31) {
    CFRelease(v31);
  }
}

void __callback_currentRouteChanged_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(NSObject ***)(a1 + 32);
  uint64_t v17 = 0;
  uint64_t v2 = v1[3];
  if (!v2
    || ((uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16)) == 0 ? (v4 = 0) : (v4 = v3),
        (uint64_t v5 = *(unsigned int (**)(NSObject *, NSObject **))(v4 + 24)) == 0 || v5(v2, &v17)))
  {
    APSLogErrorAt();
    goto LABEL_26;
  }
  if (v17)
  {
    uint64_t v6 = APSGetFBOPropertyInt64();
    uint64_t v7 = v17;
    if (v6) {
      BOOL v8 = 1;
    }
    else {
      BOOL v8 = v17 == 0;
    }
    if (!v8)
    {
      CFRelease(v17);
      uint64_t v7 = 0;
      uint64_t v17 = 0;
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  int v9 = v1[1];
  if (!v9)
  {
    if (v7)
    {
      v1[1] = v7;
      CFRetain(v7);
      if (gLogCategory_APDemoManager <= 50
        && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      goto LABEL_33;
    }
LABEL_26:
    demoManagerStopEndpointDiscovery((uint64_t)v1);
    uint64_t v10 = v1[1];
    if (v10)
    {
      CFRelease(v10);
      v1[1] = 0;
    }
    uint64_t v11 = *v1;
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 0x40000000;
    block[2] = __demoManagerCheckCurrentRoute_block_invoke;
    block[3] = &__block_descriptor_tmp_76_0;
    block[4] = v1;
    dispatch_async(v11, block);
    goto LABEL_29;
  }
  if (gLogCategory_APDemoManager <= 50 && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  if (v7 != v9)
  {
    usleep(0x186A0u);
    goto LABEL_26;
  }
LABEL_33:
  demoManagerStopEndpointDiscovery((uint64_t)v1);
  uint64_t v12 = v17;
  if (!v17 || (FigEndpointExtendedGetClassID(), !CMBaseObjectIsMemberOfClass())) {
    uint64_t v12 = 0;
  }
  uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 24);
  if (v13) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  uint64_t v15 = *(void (**)(NSObject *, __CFString *, void, void, void))(v14 + 72);
  if (v15) {
    v15(v12, @"CreateAPDemoHIDChannel", 0, 0, 0);
  }
LABEL_29:
  if (v17) {
    CFRelease(v17);
  }
}

uint64_t __demoManagerCheckCurrentRoute_block_invoke(uint64_t a1)
{
  return demoManagerDiscoverLink(*(void *)(a1 + 32));
}

void __callback_availableEndpointsChanged_block_invoke(uint64_t a1)
{
}

uint64_t APEndpointRemoteControlSessionCreate(const __CFAllocator *a1, const void *a2, uint64_t a3, CFDictionaryRef theDict, uint64_t a5, void *a6)
{
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  long long v37 = 0u;
  long long v38 = 0u;
  *(_OWORD *)label = 0u;
  long long v36 = 0u;
  if (!a2 || !a3 || !theDict || (CFDictionaryRef Value = CFDictionaryGetValue(theDict, (const void *)*MEMORY[0x1E4F210F8])) == 0)
  {
    APSLogErrorAt();
    return 4294949866;
  }
  uint64_t v13 = Value;
  uint64_t v34 = a5;
  uint64_t v14 = CFDictionaryGetValue(theDict, (const void *)*MEMORY[0x1E4F21100]);
  uint64_t v15 = CFDictionaryGetValue(theDict, (const void *)*MEMORY[0x1E4F204B8]);
  uint64_t Int64 = CFDictionaryGetInt64();
  FigEndpointRemoteControlSessionGetClassID();
  uint64_t v17 = CMDerivedObjectCreate();
  if (v17)
  {
    uint64_t v31 = v17;
LABEL_35:
    APSLogErrorAt();
    return v31;
  }
  uint64_t v33 = a6;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  unsigned int add = atomic_fetch_add(APEndpointRemoteControlSessionCreate_sSessionCounter, 1u);
  if (v15)
  {
    CFTypeRef v20 = CFRetain(v15);
    *(void *)uint64_t DerivedStorage = v20;
    if (!v20) {
      goto LABEL_36;
    }
  }
  else
  {
    CFStringRef v21 = CFStringCreateWithFormat(a1, 0, @"%@-RCS-%d", a3, add + 1);
    *(void *)uint64_t DerivedStorage = v21;
    if (!v21)
    {
LABEL_36:
      APSLogErrorAt();
      return 4294949865;
    }
  }
  *(unsigned char *)(DerivedStorage + 8) = CFDictionaryGetInt64() != 0;
  *(unsigned char *)(DerivedStorage + 9) = CFDictionaryGetInt64() != 0;
  *(unsigned char *)(DerivedStorage + 10) = CFDictionaryGetInt64() != 0;
  BOOL v22 = CFDictionaryGetInt64() != 0;
  *(_DWORD *)(DerivedStorage + 104) = 50;
  *(unsigned char *)(DerivedStorage + 11) = v22;
  FigCFDictionaryGetInt32IfPresent();
  uint64_t v23 = FigSimpleMutexCreate();
  *(void *)(DerivedStorage + 112) = v23;
  if (!v23) {
    goto LABEL_36;
  }
  SNPrintF();
  *(void *)(DerivedStorage + 80) = os_transaction_create();
  SNPrintF();
  dispatch_queue_t v24 = dispatch_queue_create(label, 0);
  *(void *)(DerivedStorage + 160) = v24;
  if (!v24) {
    goto LABEL_36;
  }
  SNPrintF();
  dispatch_queue_t v25 = dispatch_queue_create(label, 0);
  *(void *)(DerivedStorage + 24) = v25;
  if (!v25) {
    goto LABEL_36;
  }
  SNPrintF();
  dispatch_queue_t v26 = dispatch_queue_create(label, 0);
  *(void *)(DerivedStorage + 32) = v26;
  if (!v26) {
    goto LABEL_36;
  }
  *(void *)(DerivedStorage + 40) = CFRetain(v13);
  if (v14)
  {
    *(void *)(DerivedStorage + 48) = CFRetain(v14);
  }
  else
  {
    CFAllocatorRef v27 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    CFUUIDRef v28 = CFUUIDCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80]);
    if (v28)
    {
      CFUUIDRef v29 = v28;
      *(void *)(DerivedStorage + 48) = CFUUIDCreateString(v27, v28);
      CFRelease(v29);
    }
  }
  if (!*(void *)(DerivedStorage + 48)) {
    goto LABEL_36;
  }
  *(void *)(DerivedStorage + 56) = v34;
  *(void *)(DerivedStorage + 16) = CFRetain(a2);
  *(unsigned char *)(DerivedStorage + 120) = 0;
  if (Int64)
  {
    *(void *)(DerivedStorage + 168) = Int64;
    uint64_t v30 = apEndpointRemoteControlSession_ensureAndCopyTransportStreams(0, 0);
    if (v30)
    {
      uint64_t v31 = v30;
      goto LABEL_35;
    }
  }
  *(void *)(DerivedStorage + 64) = 0;
  FigCFDictionaryGetInt64IfPresent();
  *(_DWORD *)(DerivedStorage + 72) = 0;
  FigCFDictionaryGetInt32IfPresent();
  if (gLogCategory_APEndpointRemoteControlSession <= 50
    && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
  {
    IsAppleInternalBuild();
    LogPrintF();
  }
  uint64_t v31 = 0;
  *uint64_t v33 = 0;
  return v31;
}

uint64_t apEndpointRemoteControlSession_ensureAndCopyTransportStreams(uint64_t a1, void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 112));
  if (*(unsigned char *)(DerivedStorage + 120))
  {
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 112));
    return 4294949864;
  }
  uint64_t v5 = *(const void **)(DerivedStorage + 144);
  if (v5) {
    uint64_t v6 = CFRetain(v5);
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(const void **)(DerivedStorage + 152);
  if (v7) {
    CFTypeRef v8 = CFRetain(v7);
  }
  else {
    CFTypeRef v8 = 0;
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 112));
  if (v6) {
    goto LABEL_124;
  }
  unsigned int v97 = 0;
  uint64_t v9 = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  CFTypeRef v96 = 0;
  uint64_t v10 = *(void *)(v9 + 168);
  CFTypeRef v93 = 0;
  CFTypeRef v94 = 0;
  if (apEndpointRemoteControlSession_isInvalidated())
  {
    uint64_t v6 = 0;
    CFMutableDictionaryRef v14 = 0;
    CFMutableDictionaryRef v31 = 0;
    uint64_t v11 = 0;
    CFStringRef v40 = 0;
    goto LABEL_140;
  }
  if (*(void *)(v9 + 168))
  {
    uint64_t v11 = 0;
LABEL_13:
    int v12 = 0;
    goto LABEL_14;
  }
  if (gLogCategory_APEndpointRemoteControlSession <= 50
    && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  uint64_t v11 = Mutable;
  if (!Mutable)
  {
    APSLogErrorAt();
    uint64_t v6 = 0;
    CFMutableDictionaryRef v14 = 0;
    goto LABEL_218;
  }
  CFDictionarySetValue(Mutable, @"clientTypeUUID", *(const void **)(v9 + 40));
  CFDictionarySetValue(v11, @"clientUUID", *(const void **)(v9 + 48));
  CFDictionarySetValue(v11, @"channelID", *(const void **)v9);
  CFDictionarySetInt64();
  dispatch_queue_t v25 = (const void **)MEMORY[0x1E4F1CFD0];
  if (*(unsigned char *)(v9 + 8))
  {
    CFDictionarySetValue(v11, @"wantsDedicatedSocket", (const void *)*MEMORY[0x1E4F1CFD0]);
    unsigned int v97 = RandomBytes();
    if (v97)
    {
      APSLogErrorAt();
      goto LABEL_65;
    }
    CFDictionarySetInt64();
  }
  if (*(unsigned char *)(v9 + 10)) {
    CFDictionarySetValue(v11, @"sendMessageAsIs", *v25);
  }
  uint64_t v26 = *(void *)(v9 + 16);
  uint64_t v27 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v27) {
    uint64_t v28 = v27;
  }
  else {
    uint64_t v28 = 0;
  }
  CFUUIDRef v29 = *(uint64_t (**)(uint64_t, uint64_t, __CFDictionary *, CFTypeRef *, void, void))(v28 + 40);
  if (!v29)
  {
    unsigned int v97 = -12782;
    goto LABEL_58;
  }
  unsigned int v97 = v29(v26, 130, v11, &v96, 0, 0);
  if (v97)
  {
LABEL_58:
    if (gLogCategory_APEndpointRemoteControlSession > 90
      || gLogCategory_APEndpointRemoteControlSession == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_65;
    }
LABEL_60:
    LogPrintF();
LABEL_65:
    uint64_t v6 = 0;
    CFMutableDictionaryRef v14 = 0;
LABEL_93:
    CFMutableDictionaryRef v31 = 0;
    goto LABEL_94;
  }
  *(void *)(v9 + 168) = CFDictionaryGetInt64();
  if (v97)
  {
    if (gLogCategory_APEndpointRemoteControlSession > 90
      || gLogCategory_APEndpointRemoteControlSession == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_65;
    }
    goto LABEL_60;
  }
  uint64_t Int64 = CFDictionaryGetInt64();
  if (!*(unsigned char *)(v9 + 8) || !(Int64 << 32))
  {
    if (gLogCategory_APEndpointRemoteControlSession <= 50
      && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_13;
  }
  if (gLogCategory_APEndpointRemoteControlSession <= 50
    && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  int v12 = 1;
LABEL_14:
  CFAllocatorRef v13 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFMutableDictionaryRef v14 = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!v14)
  {
    APSLogErrorAt();
    uint64_t v6 = 0;
LABEL_218:
    CFMutableDictionaryRef v31 = 0;
LABEL_219:
    CFStringRef v40 = 0;
    int v56 = -17431;
    goto LABEL_141;
  }
  uint64_t v92 = v10;
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt32();
  char v91 = v12;
  if (v12)
  {
    FigCFDictionarySetInt32();
    uint64_t v15 = *(void *)(v9 + 16);
    uint64_t v16 = APTransportStreamIDMakeWithPort();
    uint64_t v17 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v17) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    BOOL v22 = *(uint64_t (**)(uint64_t, uint64_t, CFMutableDictionaryRef, CFTypeRef *))(v18 + 64);
    if (v22)
    {
      unsigned int v97 = v22(v15, v16, v14, &cf);
      if (!v97)
      {
        if (gLogCategory_APEndpointRemoteControlSession <= 50
          && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        CFTypeRef v94 = CFRetain(cf);
        if (gLogCategory_APEndpointRemoteControlSession <= 50
          && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t CMBaseObject = APSenderSessionGetCMBaseObject(*(void *)(v9 + 16));
        uint64_t v37 = *(void *)(CMBaseObjectGetVTable() + 8);
        if (v37) {
          uint64_t v38 = v37;
        }
        else {
          uint64_t v38 = 0;
        }
        uint64_t v39 = *(uint64_t (**)(uint64_t, __CFString *, const __CFAllocator *, CFTypeRef *))(v38 + 48);
        if (v39)
        {
          unsigned int v97 = v39(CMBaseObject, @"KeyHolder", v13, &v93);
          if (!v97)
          {
            CFStringRef v40 = APKeyHolderCoreUtilsEncryptionContextDataStreamCreateWithSeed(v13, 0);
            if (!v40)
            {
              APSLogErrorAt();
              uint64_t v6 = 0;
              CFMutableDictionaryRef v31 = 0;
              int v56 = -6728;
              goto LABEL_141;
            }
            CFTypeRef v41 = cf;
            CFTypeRef v42 = v93;
            uint64_t v43 = *(void *)(CMBaseObjectGetVTable() + 16);
            if (v43) {
              uint64_t v44 = v43;
            }
            else {
              uint64_t v44 = 0;
            }
            uint64_t v55 = *(uint64_t (**)(CFTypeRef, CFTypeRef, CFStringRef))(v44 + 80);
            if (v55)
            {
              unsigned int v97 = v55(v41, v42, v40);
              if (!v97)
              {
                CFMutableDictionaryRef v31 = 0;
                goto LABEL_138;
              }
            }
            else
            {
              unsigned int v97 = -12782;
            }
            APSLogErrorAt();
            uint64_t v6 = 0;
            CFMutableDictionaryRef v31 = 0;
            goto LABEL_95;
          }
        }
        else
        {
          unsigned int v97 = -12782;
        }
      }
    }
    else
    {
      unsigned int v97 = -12782;
    }
    goto LABEL_92;
  }
  CFDictionarySetInt64();
  CFDictionarySetInt64();
  uint64_t v19 = *(void *)(v9 + 16);
  uint64_t v20 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v20) {
    uint64_t v21 = v20;
  }
  else {
    uint64_t v21 = 0;
  }
  uint64_t v23 = *(uint64_t (**)(uint64_t, CFMutableDictionaryRef, CFTypeRef *))(v21 + 56);
  if (!v23)
  {
    unsigned int v97 = -12782;
    goto LABEL_92;
  }
  unsigned int v97 = v23(v19, v14, &cf);
  if (v97)
  {
LABEL_92:
    APSLogErrorAt();
    uint64_t v6 = 0;
    goto LABEL_93;
  }
  if (gLogCategory_APEndpointRemoteControlSession <= 50
    && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFMutableDictionaryRef v31 = CFDictionaryCreateMutable(v13, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!v31)
  {
    APSLogErrorAt();
    uint64_t v6 = 0;
    goto LABEL_219;
  }
  CFDictionarySetInt64();
  CFDictionarySetInt64();
  uint64_t v32 = *(void *)(v9 + 16);
  uint64_t v33 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v33) {
    uint64_t v34 = v33;
  }
  else {
    uint64_t v34 = 0;
  }
  uint64_t v35 = *(uint64_t (**)(uint64_t, CFMutableDictionaryRef, CFTypeRef *))(v34 + 56);
  if (!v35)
  {
    unsigned int v97 = -12782;
    goto LABEL_81;
  }
  unsigned int v97 = v35(v32, v31, &v94);
  if (v97)
  {
LABEL_81:
    APSLogErrorAt();
    uint64_t v6 = 0;
LABEL_94:
    CFStringRef v40 = 0;
    goto LABEL_95;
  }
  if (gLogCategory_APEndpointRemoteControlSession <= 50
    && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFStringRef v40 = 0;
LABEL_138:
  MEMORY[0x1D25EB370](*(void *)(v9 + 112));
  if (*(unsigned char *)(v9 + 120))
  {
    MEMORY[0x1D25EB390](*(void *)(v9 + 112));
    uint64_t v6 = 0;
LABEL_140:
    int v56 = -17432;
LABEL_141:
    unsigned int v97 = v56;
    goto LABEL_95;
  }
  CFDictionaryRef v57 = *(const void **)(v9 + 144);
  CFTypeRef v58 = cf;
  *(void *)(v9 + 144) = cf;
  if (v58) {
    CFRetain(v58);
  }
  if (v57) {
    CFRelease(v57);
  }
  int v59 = *(const void **)(v9 + 152);
  CFTypeRef v60 = v94;
  *(void *)(v9 + 152) = v94;
  if (v60) {
    CFRetain(v60);
  }
  if (v59) {
    CFRelease(v59);
  }
  MEMORY[0x1D25EB390](*(void *)(v9 + 112));
  uint64_t v6 = (const void *)FigCFWeakReferenceHolderCreateWithReferencedObject();
  *(void *)(v9 + 176) = v6;
  if (v6)
  {
    CFTypeRef v61 = v94;
    uint64_t v62 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v62) {
      uint64_t v63 = v62;
    }
    else {
      uint64_t v63 = 0;
    }
    int v64 = *(uint64_t (**)(CFTypeRef, void, uint64_t (*)(uint64_t, int, uint64_t, uint64_t, void *), const void *))(v63 + 24);
    if (v64)
    {
      unsigned int v97 = v64(v61, apEndpointRemoteControlSession_handleMessage, apEndpointRemoteControlSession_handleMessageCreatingReply, v6);
      if (!v97)
      {
        CFTypeRef v65 = cf;
        uint64_t v66 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v66) {
          uint64_t v67 = v66;
        }
        else {
          uint64_t v67 = 0;
        }
        BOOL v68 = *(void (**)(CFTypeRef))(v67 + 8);
        if (v68) {
          v68(v65);
        }
        CFTypeRef v69 = v94;
        uint64_t v70 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v70) {
          uint64_t v71 = v70;
        }
        else {
          uint64_t v71 = 0;
        }
        long long v72 = *(void (**)(CFTypeRef))(v71 + 8);
        if (v72) {
          v72(v69);
        }
        CFTypeRef v73 = cf;
        uint64_t v74 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v74) {
          uint64_t v75 = v74;
        }
        else {
          uint64_t v75 = 0;
        }
        uint64_t v76 = *(void (**)(CFTypeRef))(v75 + 16);
        if (v76) {
          v76(v73);
        }
        if (v92) {
          char v77 = 1;
        }
        else {
          char v77 = v91;
        }
        if ((v77 & 1) == 0) {
          FigTransportStreamWaitUntilConnected_0((uint64_t)v94);
        }
        uint64_t v78 = CMBaseObjectGetDerivedStorage();
        v102[0] = 0;
        int v101 = 0;
        uint64_t v99 = 0;
        uint64_t v100 = 0;
        *(void *)buffer = 0;
        if (*(unsigned char *)(v78 + 11))
        {
          uint64_t v79 = v78;
          uint64_t v80 = FigTransportStreamGetCMBaseObject();
          uint64_t v81 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v81) {
            uint64_t v82 = v81;
          }
          else {
            uint64_t v82 = 0;
          }
          double v83 = *(void (**)(uint64_t, void, const __CFAllocator *, CFTypeRef *))(v82 + 48);
          if (v83
            && (v83(v80, *MEMORY[0x1E4F47758], v13, v102), v102[0])
            && (v103.locatioCFIndex n = 0,
                v103.length = 28,
                CFDataGetBytes((CFDataRef)v102[0], v103, buffer),
                SockAddrGetPort(),
                (CFMutableDictionaryRef v84 = CFDictionaryCreateMutable(v13, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540])) != 0))
          {
            uint64_t v85 = v84;
            CFDictionarySetInt64();
            CFDictionarySetInt64();
            CFDictionarySetValue(v85, @"localSendsWithReadKey", (const void *)*MEMORY[0x1E4F1CFC8]);
            if (gLogCategory_APEndpointRemoteControlSession <= 50
              && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            uint64_t v86 = *(void *)(v79 + 16);
            uint64_t v87 = *(void *)(CMBaseObjectGetVTable() + 16);
            if (v87) {
              uint64_t v88 = v87;
            }
            else {
              uint64_t v88 = 0;
            }
            uint64_t v89 = *(unsigned int (**)(uint64_t, CFStringRef, __CFDictionary *))(v88 + 120);
            if ((!v89 || v89(v86, v40, v85))
              && gLogCategory_APEndpointRemoteControlSession <= 90
              && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            CFRelease(v85);
          }
          else
          {
            APSLogErrorAt();
          }
        }
        else if (IsAppleInternalBuild() {
               && gLogCategory_APEndpointRemoteControlSession <= 60
        }
               && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        if (v102[0]) {
          CFRelease(v102[0]);
        }
        CFTypeRef v8 = v94;
        uint64_t v6 = cf;
        CFTypeRef v94 = 0;
        CFTypeRef cf = 0;
        goto LABEL_95;
      }
    }
    else
    {
      unsigned int v97 = -12782;
    }
    APSLogErrorAt();
    uint64_t v6 = 0;
  }
LABEL_95:
  if (v96) {
    CFRelease(v96);
  }
  if (v14) {
    CFRelease(v14);
  }
  if (v31) {
    CFRelease(v31);
  }
  if (v11) {
    CFRelease(v11);
  }
  if (v93) {
    CFRelease(v93);
  }
  if (v40) {
    CFRelease(v40);
  }
  if (cf)
  {
    uint64_t v45 = FigTransportStreamGetCMBaseObject();
    if (v45)
    {
      uint64_t v46 = v45;
      uint64_t v47 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v48 = v47 ? v47 : 0;
      uint64_t v49 = *(void (**)(uint64_t))(v48 + 24);
      if (v49) {
        v49(v46);
      }
    }
    CFRelease(cf);
    CFTypeRef cf = 0;
  }
  if (v94)
  {
    uint64_t v50 = FigTransportStreamGetCMBaseObject();
    if (v50)
    {
      uint64_t v51 = v50;
      uint64_t v52 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v53 = v52 ? v52 : 0;
      CFTypeID v54 = *(void (**)(uint64_t))(v53 + 24);
      if (v54) {
        v54(v51);
      }
    }
    CFRelease(v94);
  }
  uint64_t v4 = v97;
  if (v97)
  {
    APSLogErrorAt();
LABEL_206:
    if (v6) {
      CFRelease(v6);
    }
    goto LABEL_208;
  }
LABEL_124:
  uint64_t v4 = 0;
  if (!a2) {
    goto LABEL_206;
  }
  *a2 = v6;
LABEL_208:
  if (v8) {
    CFRelease(v8);
  }
  return v4;
}

uint64_t apEndpointRemoteControlSession_Invalidate(const void *a1)
{
  if (gLogCategory_APEndpointRemoteControlSession <= 50
    && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  apEndpointRemoteControlSession_invalidateInternal(a1);
  return 0;
}

uint64_t apEndpointRemoteControlSession_Finalize()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointRemoteControlSession <= 50
    && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  *(void *)(DerivedStorage + 128) = 0;
  uint64_t v1 = *(const void **)(DerivedStorage + 136);
  if (v1)
  {
    CFRelease(v1);
    *(void *)(DerivedStorage + 136) = 0;
  }
  uint64_t v2 = *(const void **)(DerivedStorage + 40);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(DerivedStorage + 40) = 0;
  }
  uint64_t v3 = *(const void **)(DerivedStorage + 176);
  if (v3)
  {
    CFRelease(v3);
    *(void *)(DerivedStorage + 176) = 0;
  }
  if (*(void *)DerivedStorage)
  {
    CFRelease(*(CFTypeRef *)DerivedStorage);
    *(void *)uint64_t DerivedStorage = 0;
  }
  uint64_t v4 = *(const void **)(DerivedStorage + 16);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(DerivedStorage + 16) = 0;
  }
  uint64_t v5 = *(const void **)(DerivedStorage + 48);
  if (v5)
  {
    CFRelease(v5);
    *(void *)(DerivedStorage + 48) = 0;
  }
  uint64_t v6 = *(NSObject **)(DerivedStorage + 160);
  if (v6)
  {
    dispatch_release(v6);
    *(void *)(DerivedStorage + 160) = 0;
  }
  uint64_t v7 = *(NSObject **)(DerivedStorage + 24);
  if (v7)
  {
    dispatch_release(v7);
    *(void *)(DerivedStorage + 24) = 0;
  }
  CFTypeRef v8 = *(NSObject **)(DerivedStorage + 32);
  if (v8)
  {
    dispatch_release(v8);
    *(void *)(DerivedStorage + 32) = 0;
  }
  uint64_t v9 = *(void **)(DerivedStorage + 80);
  if (v9)
  {
    os_release(v9);
    *(void *)(DerivedStorage + 80) = 0;
  }
  return FigSimpleMutexDestroy();
}

CFStringRef apEndpointRemoteControlSession_CopyDebugDesc()
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  return CFStringCreateWithFormat(0, 0, @"<APEndpointRemoteControlSession '%@'>", *DerivedStorage);
}

uint64_t apEndpointRemoteControlSession_CopyProperty(uint64_t a1, const void *a2, uint64_t a3, void *a4)
{
  uint64_t DerivedStorage = (CFTypeRef *)CMBaseObjectGetDerivedStorage();
  if (CFEqual(a2, @"SessionID")) {
    goto LABEL_6;
  }
  if (CFEqual(a2, @"clientUUID"))
  {
    DerivedStorage += 6;
LABEL_6:
    CFTypeRef v7 = CFRetain(*DerivedStorage);
    uint64_t result = 0;
    *a4 = v7;
    return result;
  }
  if (CFEqual(a2, @"clientTypeUUID"))
  {
    DerivedStorage += 5;
    goto LABEL_6;
  }
  return 4294949862;
}

void apEndpointRemoteControlSession_invalidateInternal(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef v32 = 0;
  uint64_t v33 = 0;
  CFTypeRef v34 = 0;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 112));
  if (*(unsigned char *)(DerivedStorage + 120))
  {
    JUMPOUT(0x1D25EB390);
  }
  *(unsigned char *)(DerivedStorage + 120) = 1;
  uint64_t v4 = *(void *)(DerivedStorage + 128);
  uint64_t v3 = *(const void **)(DerivedStorage + 136);
  if (v3) {
    CFTypeRef v5 = CFRetain(v3);
  }
  else {
    CFTypeRef v5 = 0;
  }
  uint64_t v6 = *(const void **)(DerivedStorage + 144);
  if (v6)
  {
    CFTypeRef v7 = CFRetain(v6);
    CFTypeRef v8 = *(const void **)(DerivedStorage + 144);
    if (v8)
    {
      CFRelease(v8);
      *(void *)(DerivedStorage + 144) = 0;
    }
  }
  else
  {
    CFTypeRef v7 = 0;
  }
  uint64_t v9 = *(const void **)(DerivedStorage + 152);
  if (v9)
  {
    CFTypeRef v10 = CFRetain(v9);
    uint64_t v11 = *(const void **)(DerivedStorage + 152);
    if (v11)
    {
      CFRelease(v11);
      *(void *)(DerivedStorage + 152) = 0;
    }
  }
  else
  {
    CFTypeRef v10 = 0;
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 112));
  if (gLogCategory_APEndpointRemoteControlSession <= 50
    && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (v7)
  {
    uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v12) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    CFMutableDictionaryRef v14 = *(void (**)(CFTypeRef, void, void, void))(v13 + 24);
    if (v14) {
      v14(v7, 0, 0, 0);
    }
    uint64_t CMBaseObject = FigTransportStreamGetCMBaseObject();
    if (CMBaseObject)
    {
      uint64_t v16 = CMBaseObject;
      uint64_t v17 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v18 = v17 ? v17 : 0;
      uint64_t v19 = *(void (**)(uint64_t))(v18 + 24);
      if (v19) {
        v19(v16);
      }
    }
  }
  if (v10)
  {
    uint64_t v20 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v20) {
      uint64_t v21 = v20;
    }
    else {
      uint64_t v21 = 0;
    }
    BOOL v22 = *(void (**)(CFTypeRef, void, void, void))(v21 + 24);
    if (v22) {
      v22(v10, 0, 0, 0);
    }
    uint64_t v23 = FigTransportStreamGetCMBaseObject();
    if (v23)
    {
      uint64_t v24 = v23;
      uint64_t v25 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v26 = v25 ? v25 : 0;
      uint64_t v27 = *(void (**)(uint64_t))(v26 + 24);
      if (v27) {
        v27(v24);
      }
    }
  }
  if (!v4) {
    goto LABEL_56;
  }
  if (v5)
  {
    uint64_t v28 = (const void *)FigCFWeakReferenceHolderCopyReferencedObject();
    if (!v28)
    {
      if (gLogCategory_APEndpointRemoteControlSession <= 60
        && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
LABEL_56:
      uint64_t v28 = 0;
      goto LABEL_57;
    }
  }
  else
  {
    uint64_t v28 = 0;
  }
  CFTypeRef v32 = CFRetain(a1);
  uint64_t v33 = v4;
  if (v28) {
    CFTypeRef v29 = CFRetain(v28);
  }
  else {
    CFTypeRef v29 = 0;
  }
  CFTypeRef v34 = v29;
  APSDispatchAsyncFHelper();
LABEL_57:
  CFRetain(a1);
  uint64_t v30 = *(NSObject **)(DerivedStorage + 24);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __apEndpointRemoteControlSession_invalidateInternal_block_invoke;
  block[3] = &__block_descriptor_tmp_8;
  block[4] = a1;
  dispatch_async(v30, block);
  if (gLogCategory_APEndpointRemoteControlSession <= 50
    && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (v5) {
    CFRelease(v5);
  }
  if (v28) {
    CFRelease(v28);
  }
  if (v7) {
    CFRelease(v7);
  }
  if (v10) {
    CFRelease(v10);
  }
}

void apEndpointRemoteControlSession_callEventHandlerAboutInvalidation(uint64_t a1)
{
  if (gLogCategory_APEndpointRemoteControlSession <= 50
    && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  else if (!a1)
  {
    goto LABEL_18;
  }
  if (*(void *)(a1 + 16))
  {
    (*(void (**)(void, void, void))(a1 + 8))(*(void *)a1, *MEMORY[0x1E4F21140], 0);
    char v2 = 1;
    goto LABEL_8;
  }
LABEL_18:
  APSLogErrorAt();
  char v2 = 0;
LABEL_8:
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
  uint64_t v3 = *(const void **)(a1 + 16);
  if (v3) {
    CFRelease(v3);
  }
  if ((v2 & 1) == 0
    && gLogCategory_APEndpointRemoteControlSession <= 90
    && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

void __apEndpointRemoteControlSession_invalidateInternal_block_invoke(uint64_t a1)
{
  CMBaseObjectGetDerivedStorage();
  CMNotificationCenterGetDefaultLocalCenter();
  if (CMNotificationCenterPostNotification())
  {
    APSLogErrorAt();
    if (gLogCategory_APEndpointRemoteControlSession <= 90
      && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  v6[0] = 0;
  v6[1] = v6;
  v6[2] = 0x2000000000;
  v6[3] = 0;
  v5[0] = 0;
  v5[1] = v5;
  v5[2] = 0x2000000000;
  v5[3] = 0;
  uint64_t v3 = DerivedStorage[20];
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __apEndpointRemoteControlSession_logSummaryAndResetCounters_block_invoke;
  block[3] = &unk_1E68921A0;
  void block[5] = v5;
  void block[6] = DerivedStorage;
  block[4] = v6;
  dispatch_sync(v3, block);
  if (gLogCategory_APEndpointRemoteControlSession <= 50
    && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
  {
    IsAppleInternalBuild();
    LogPrintF();
  }
  DerivedStorage[11] = 0;
  DerivedStorage[12] = 0;
  _Block_object_dispose(v5, 8);
  _Block_object_dispose(v6, 8);
  CFRelease(*(CFTypeRef *)(a1 + 32));
}

void *__apEndpointRemoteControlSession_logSummaryAndResetCounters_block_invoke(void *result)
{
  uint64_t v1 = result[6];
  *(void *)(*(void *)(result[4] + 8) + 24) = *(void *)(v1 + 184);
  *(void *)(*(void *)(result[5] + 8) + 24) = *(void *)(v1 + 192);
  *(void *)(v1 + 184) = 0;
  *(void *)(v1 + 192) = 0;
  return result;
}

uint64_t apEndpointRemoteControlSession_SendMessage(const void *a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v7 = DerivedStorage;
  if (!a2)
  {
    char v2 = 0;
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (*(unsigned char *)(DerivedStorage + 10))
  {
    char v2 = 0;
    uint64_t v3 = 0;
    CFRetain(a2);
LABEL_8:
    MEMORY[0x1D25EB370](*(void *)(v7 + 112));
    MEMORY[0x1D25EB390](*(void *)(v7 + 112));
    goto LABEL_9;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    char v2 = Mutable;
    CFDictionarySetValue(Mutable, @"data", a2);
    uint64_t v9 = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    uint64_t v3 = v9;
    if (v9)
    {
      CFDictionarySetValue(v9, @"params", v2);
      CFRetain(v3);
      goto LABEL_8;
    }
  }
  else
  {
    CUFatalErrorF();
  }
  APSLogErrorAt();
LABEL_9:
  CFRetain(a1);
  if (a2) {
    CFDataGetLength((CFDataRef)a2);
  }
  APSDispatchAsyncFHelper();
  if (v2) {
    CFRelease(v2);
  }
  if (v3) {
    CFRelease(v3);
  }
  return 0;
}

uint64_t apEndpointRemoteControlSession_SetEventHandler(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](DerivedStorage[14]);
  uint64_t v6 = (const void *)DerivedStorage[17];
  if (v6)
  {
    CFRelease(v6);
    DerivedStorage[17] = 0;
  }
  DerivedStorage[16] = 0;
  if (a2)
  {
    DerivedStorage[16] = a2;
    if (a3) {
      DerivedStorage[17] = FigCFWeakReferenceHolderCreateWithReferencedObject();
    }
  }
  MEMORY[0x1D25EB390](DerivedStorage[14]);
  return 0;
}

uint64_t apEndpointRemoteControlSession_Teardown(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointRemoteControlSession <= 50
    && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!apEndpointRemoteControlSession_isInvalidated())
  {
    CFRetain(a1);
    uint64_t v3 = *(NSObject **)(DerivedStorage + 32);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 0x40000000;
    block[2] = __apEndpointRemoteControlSession_Teardown_block_invoke;
    block[3] = &__block_descriptor_tmp_65_0;
    block[4] = a1;
    dispatch_async(v3, block);
  }
  return 0;
}

uint64_t apEndpointRemoteControlSession_Start(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointRemoteControlSession <= 50
    && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 112));
  if (*(unsigned char *)(DerivedStorage + 120))
  {
    APSLogErrorAt();
    uint64_t v4 = 4294949863;
  }
  else
  {
    CFRetain(a1);
    uint64_t v3 = *(NSObject **)(DerivedStorage + 160);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 0x40000000;
    block[2] = __apEndpointRemoteControlSession_Start_block_invoke;
    block[3] = &__block_descriptor_tmp_73;
    block[4] = a1;
    dispatch_async(v3, block);
    uint64_t v4 = 0;
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 112));
  return v4;
}

void apEndpointRemoteControlSession_sendMessageInternal(unsigned int *a1)
{
  uint64_t v2 = *((void *)a1 + 1);
  CFTypeRef v14 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef v12 = 0;
  CFTypeRef cf = 0;
  if (*a1)
  {
    APSLogErrorAt();
    uint64_t v5 = *a1;
  }
  else
  {
    uint64_t v4 = apEndpointRemoteControlSession_ensureAndCopyTransportStreams(v2, &cf);
    if (v4 == -17432)
    {
      if (gLogCategory_APEndpointRemoteControlSession <= 30
        && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v5 = 4294949864;
    }
    else
    {
      uint64_t v5 = v4;
      if (v4)
      {
        APSLogErrorAt();
      }
      else if (cf)
      {
        ++*(void *)(DerivedStorage + 184);
        if (gLogCategory_APEndpointRemoteControlSession <= *(_DWORD *)(DerivedStorage + 104)
          && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        *(void *)(DerivedStorage + 192) += *((void *)a1 + 4);
        if (*((unsigned char *)a1 + 56))
        {
          if (*(unsigned char *)(DerivedStorage + 10)) {
            uint64_t v6 = APTransportStreamSendData();
          }
          else {
            uint64_t v6 = APTransportStreamSendPlistMessage();
          }
        }
        else if (*(unsigned char *)(DerivedStorage + 10))
        {
          uint64_t v6 = APTransportStreamSendDataCreatingReplyData();
        }
        else
        {
          uint64_t v6 = APTransportStreamSendPlistMessageCreatingPlistReply();
        }
        uint64_t v5 = v6;
        if (v6
          && gLogCategory_APEndpointRemoteControlSession <= 90
          && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
      else
      {
        APSLogErrorAt();
        uint64_t v5 = 4294949863;
      }
    }
  }
  uint64_t v7 = (void (*)(uint64_t, CFTypeRef, void))*((void *)a1 + 5);
  if (v7)
  {
    CFTypeRef v8 = &v12;
    if (!*(unsigned char *)(DerivedStorage + 10)) {
      CFTypeRef v8 = &v14;
    }
    v7(v5, *v8, *((void *)a1 + 6));
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v14) {
    CFRelease(v14);
  }
  uint64_t v9 = (const void *)*((void *)a1 + 1);
  if (v9) {
    CFRelease(v9);
  }
  CFTypeRef v10 = (const void *)*((void *)a1 + 2);
  if (v10) {
    CFRelease(v10);
  }
  uint64_t v11 = (const void *)*((void *)a1 + 3);
  if (v11) {
    CFRelease(v11);
  }
  if (v12) {
    CFRelease(v12);
  }
}

uint64_t apEndpointRemoteControlSession_isInvalidated()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 112));
  uint64_t v1 = *(unsigned __int8 *)(DerivedStorage + 120);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 112));
  return v1;
}

void __apEndpointRemoteControlSession_teardownInternal_block_invoke(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!apEndpointRemoteControlSession_isInvalidated())
  {
    if (gLogCategory_APEndpointRemoteControlSession <= 50
      && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (Mutable)
    {
      CFMutableDictionaryRef v4 = Mutable;
      CFDictionarySetInt64();
      uint64_t v5 = *(void *)(DerivedStorage + 16);
      uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v6) {
        uint64_t v7 = v6;
      }
      else {
        uint64_t v7 = 0;
      }
      CFTypeRef v8 = *(void (**)(uint64_t, uint64_t, CFMutableDictionaryRef))(v7 + 48);
      if (v8) {
        v8(v5, 130, v4);
      }
      CFRelease(v4);
    }
    else
    {
      APSLogErrorAt();
    }
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
  CFRelease(*(CFTypeRef *)(a1 + 32));
  uint64_t v9 = *(NSObject **)(a1 + 40);
  dispatch_release(v9);
}

uint64_t apEndpointRemoteControlSession_handleMessage(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return apEndpointRemoteControlSession_startMessageHandling(a2, a3, a4, 0);
}

uint64_t apEndpointRemoteControlSession_handleMessageCreatingReply(uint64_t a1, int a2, uint64_t a3, uint64_t a4, void *a5)
{
  return apEndpointRemoteControlSession_startMessageHandling(a2, a3, a4, a5);
}

uint64_t FigTransportStreamWaitUntilConnected_0(uint64_t a1)
{
  uint64_t VTable = CMBaseObjectGetVTable();
  uint64_t v5 = *(void *)(VTable + 16);
  uint64_t result = VTable + 16;
  uint64_t v4 = v5;
  if (v5) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v6 + 16);
  if (v7)
  {
    return v7(a1);
  }
  return result;
}

uint64_t apEndpointRemoteControlSession_startMessageHandling(int a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a1 != 1668116068) {
    return 0;
  }
  uint64_t v5 = FigCFWeakReferenceHolderCopyReferencedObject();
  if (!v5) {
    return 0;
  }
  uint64_t v6 = (const void *)v5;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 112));
  if (*(unsigned char *)(DerivedStorage + 120))
  {
    CFTypeRef v8 = 0;
    uint64_t v9 = 4294949863;
    goto LABEL_16;
  }
  CFDataWithBlockBufferNoCFDictionaryRef Copy = FigCreateCFDataWithBlockBufferNoCopy();
  if (!CFDataWithBlockBufferNoCopy)
  {
    if (*(void *)(DerivedStorage + 136))
    {
      CFTypeRef v8 = (const void *)FigCFWeakReferenceHolderCopyReferencedObject();
      if (!v8)
      {
        if (gLogCategory_APEndpointRemoteControlSession <= 60
          && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t v9 = 0;
        goto LABEL_23;
      }
    }
    else
    {
      CFTypeRef v8 = 0;
    }
    CFRetain(v6);
    if (v8) {
      CFRetain(v8);
    }
    APSDispatchAsyncFHelper();
    uint64_t v9 = 0;
    if (a4) {
      *a4 = 0;
    }
    goto LABEL_16;
  }
  uint64_t v9 = CFDataWithBlockBufferNoCopy;
  APSLogErrorAt();
LABEL_23:
  CFTypeRef v8 = 0;
LABEL_16:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 112));
  CFRelease(v6);
  if (v8) {
    CFRelease(v8);
  }
  return v9;
}

void apEndpointRemoteControlSession_handleMessageInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(void *)(a1 + 8))
  {
    APSLogErrorAt();
    CFDataRef v5 = 0;
    CFDictionaryRef v4 = 0;
    goto LABEL_21;
  }
  uint64_t v3 = DerivedStorage;
  if (apEndpointRemoteControlSession_isInvalidated())
  {
    if (gLogCategory_APEndpointRemoteControlSession > 60
      || gLogCategory_APEndpointRemoteControlSession == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_20;
    }
LABEL_9:
    LogPrintF();
LABEL_20:
    CFDataRef v5 = 0;
    CFDictionaryRef v4 = 0;
    goto LABEL_21;
  }
  if (!*(void *)(a1 + 16))
  {
    if (gLogCategory_APEndpointRemoteControlSession > 90
      || gLogCategory_APEndpointRemoteControlSession == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_20;
    }
    goto LABEL_9;
  }
  CFDataGetLength(*(CFDataRef *)(a1 + 8));
  CFDataGetBytePtr(*(CFDataRef *)(a1 + 8));
  if (!*(unsigned char *)(v3 + 10))
  {
    CFDictionaryGetTypeID();
    CFDictionaryRef v4 = (const __CFDictionary *)CFCreateWithPlistBytes();
    CFDictionaryRef Value = (const __CFDictionary *)CFDictionaryGetValue(v4, @"params");
    if (!Value || (CFTypeRef v8 = CFDictionaryGetValue(Value, @"data")) == 0)
    {
      APSLogErrorAt();
      CFDataRef v5 = 0;
      goto LABEL_21;
    }
    uint64_t v6 = v8;
    goto LABEL_13;
  }
  CFDictionaryRef v4 = 0;
  CFDataRef v5 = 0;
  uint64_t v6 = *(const void **)(a1 + 8);
  if (v6)
  {
LABEL_13:
    CFRetain(v6);
    CFDataRef v5 = (const __CFData *)v6;
  }
  ++*(void *)(v3 + 88);
  if (gLogCategory_APEndpointRemoteControlSession <= *(_DWORD *)(v3 + 104)
    && (gLogCategory_APEndpointRemoteControlSession != -1 || _LogCategory_Initialize()))
  {
    CFDataGetLength(v5);
    LogPrintF();
  }
  *(void *)(v3 + 96) += CFDataGetLength(v5);
  (*(void (**)(void, void, const __CFData *, void))(a1 + 16))(*(void *)a1, *MEMORY[0x1E4F21138], v5, *(void *)(a1 + 24));
LABEL_21:
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
  uint64_t v9 = *(const void **)(a1 + 8);
  if (v9) {
    CFRelease(v9);
  }
  CFTypeRef v10 = *(const void **)(a1 + 24);
  if (v10) {
    CFRelease(v10);
  }
  if (v4) {
    CFRelease(v4);
  }
  if (v5) {
    CFRelease(v5);
  }
}

uint64_t APVirtualDisplayTestSinkCreate(int a1, const void *a2, const void *a3, CFTypeRef *a4)
{
  CFTypeRef cf = 0;
  if ((a1 - 4) <= 0xFFFFFFFC)
  {
    APSLogErrorAt();
    return 4294954516;
  }
  if (a2 && a3 && a4)
  {
    CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    FigVirtualDisplaySinkGetClassID();
    uint64_t v9 = CMDerivedObjectCreate();
    if (v9)
    {
      uint64_t v19 = v9;
      APSLogErrorAt();
      goto LABEL_32;
    }
    uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
    *(_DWORD *)uint64_t DerivedStorage = a1;
    *(_DWORD *)(DerivedStorage + 4) = 0;
    CMTimeMake(&v34, 2, 30);
    *(CMTime *)(DerivedStorage + 32) = v34;
    *(void *)(DerivedStorage + 8) = CFRetain(a2);
    *(void *)(DerivedStorage + 16) = CFRetain(a3);
    *(void *)(DerivedStorage + 120) = SecondsToUpTicks();
    *(void *)(DerivedStorage + 280) = -1;
    if (*(_DWORD *)DerivedStorage != 2)
    {
      uint64_t v19 = 0;
      *a4 = cf;
      return v19;
    }
    CFStringGetTypeID();
    uint64_t v11 = (const void *)CFPrefs_CopyTypedValue();
    if (v11)
    {
      CFTypeRef v12 = v11;
      LODWORD(v34.CFDictionarySetValue(theDict, key, value) = 0;
      *(void *)(DerivedStorage + 160) = CFRetain(v11);
      *(void *)(DerivedStorage + 144) = dispatch_queue_create("FigVirtualDisplayTestSinkQueue", 0);
      *(void *)(DerivedStorage + 152) = dispatch_semaphore_create(0);
      CFURLRef v13 = CFURLCreateWithFileSystemPath(v8, *(CFStringRef *)(DerivedStorage + 160), kCFURLPOSIXPathStyle, 0);
      if (!v13)
      {
        APSLogErrorAt();
        uint64_t v19 = 4294954510;
        goto LABEL_21;
      }
      CFURLRef v14 = v13;
      CFRunLoopGetCurrent();
      uint64_t v15 = FigAssetReaderCreateWithURLAndFormatReader();
      if (v15)
      {
        uint64_t v19 = v15;
      }
      else
      {
        uint64_t v16 = *(void *)(DerivedStorage + 168);
        uint64_t v17 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v17) {
          uint64_t v18 = v17;
        }
        else {
          uint64_t v18 = 0;
        }
        uint64_t v20 = *(uint64_t (**)(uint64_t, CMTime *))(v18 + 16);
        if (v20)
        {
          uint64_t v21 = v20(v16, &v34);
          if (!v21)
          {
            if (LODWORD(v34.value))
            {
              BOOL v22 = (const CFDictionaryKeyCallBacks *)MEMORY[0x1E4F1D530];
              uint64_t v23 = (const CFDictionaryValueCallBacks *)MEMORY[0x1E4F1D540];
              CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v8, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
              CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F32368], (const void *)*MEMORY[0x1E4F32388]);
              CFMutableDictionaryRef v25 = CFDictionaryCreateMutable(v8, 0, v22, v23);
              FigCFDictionarySetInt32();
              FigCFDictionarySetInt32();
              FigCFDictionarySetInt32();
              uint64_t v26 = *(void *)(DerivedStorage + 168);
              uint64_t value_low = LODWORD(v34.value);
              uint64_t v28 = *(void *)(CMBaseObjectGetVTable() + 16);
              if (v28) {
                uint64_t v29 = v28;
              }
              else {
                uint64_t v29 = 0;
              }
              uint64_t v30 = *(void (**)(uint64_t, uint64_t, void, uint64_t))(v29 + 24);
              if (v30) {
                v30(v26, value_low, 0, DerivedStorage + 176);
              }
              uint64_t v31 = MEMORY[0x1E4F1FA48];
              *(_OWORD *)(DerivedStorage + 180) = *MEMORY[0x1E4F1FA48];
              *(void *)(DerivedStorage + 196) = *(void *)(v31 + 16);
              uint64_t v32 = MEMORY[0x1E4F1FA10];
              *(_OWORD *)(DerivedStorage + 204) = *MEMORY[0x1E4F1FA10];
              *(void *)(DerivedStorage + 220) = *(void *)(v32 + 16);
              if (v25) {
                CFRelease(v25);
              }
              if (Mutable) {
                CFRelease(Mutable);
              }
              CFRelease(v14);
              goto LABEL_30;
            }
            APSLogErrorAt();
            uint64_t v19 = FigSignalErrorAt();
            CFRelease(v14);
            if (!v19)
            {
LABEL_30:
              uint64_t v19 = 0;
              *a4 = cf;
              CFTypeRef cf = 0;
              goto LABEL_31;
            }
LABEL_21:
            APSLogErrorAt();
LABEL_31:
            CFRelease(v12);
            goto LABEL_32;
          }
          uint64_t v19 = v21;
        }
        else
        {
          uint64_t v19 = 4294954514;
        }
      }
      APSLogErrorAt();
      CFRelease(v14);
      goto LABEL_21;
    }
  }
  APSLogErrorAt();
  uint64_t v19 = 4294954516;
LABEL_32:
  if (cf) {
    CFRelease(cf);
  }
  return v19;
}

void vdsink_Finalize()
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  vdsink_networkStop();
  uint64_t v1 = DerivedStorage[19];
  if (v1) {
    dispatch_release(v1);
  }
  uint64_t v2 = DerivedStorage[18];
  if (v2) {
    dispatch_release(v2);
  }
  uint64_t v3 = (const void *)DerivedStorage[20];
  if (v3)
  {
    CFRelease(v3);
    DerivedStorage[20] = 0;
  }
  CFDictionaryRef v4 = (const void *)DerivedStorage[21];
  if (v4)
  {
    CFRelease(v4);
    DerivedStorage[21] = 0;
  }
  CFDataRef v5 = (const void *)DerivedStorage[30];
  if (v5)
  {
    CFRelease(v5);
    DerivedStorage[30] = 0;
  }
  uint64_t v6 = (const void *)DerivedStorage[31];
  if (v6)
  {
    CFRelease(v6);
    DerivedStorage[31] = 0;
  }
  uint64_t v7 = (const void *)DerivedStorage[32];
  if (v7)
  {
    CFRelease(v7);
    DerivedStorage[32] = 0;
  }
  CFAllocatorRef v8 = (const void *)DerivedStorage[1];
  if (v8)
  {
    CFRelease(v8);
    DerivedStorage[1] = 0;
  }
  uint64_t v9 = (const void *)DerivedStorage[2];
  if (v9)
  {
    CFRelease(v9);
    DerivedStorage[2] = 0;
  }
  CFTypeRef v10 = (const void *)DerivedStorage[12];
  if (v10)
  {
    CFRelease(v10);
    DerivedStorage[12] = 0;
  }
  uint64_t v11 = (const void *)DerivedStorage[13];
  if (v11)
  {
    CFRelease(v11);
    DerivedStorage[13] = 0;
  }
  CFTypeRef v12 = (const void *)DerivedStorage[14];
  if (v12)
  {
    CFRelease(v12);
    DerivedStorage[14] = 0;
  }
  CFURLRef v13 = (const void *)DerivedStorage[11];
  if (v13)
  {
    _Block_release(v13);
    DerivedStorage[11] = 0;
  }
  CFURLRef v14 = DerivedStorage[3];
  if (v14)
  {
    dispatch_release(v14);
    DerivedStorage[3] = 0;
  }
  if (gLogCategory_APVirtualDisplayTestSink <= 30
    && (gLogCategory_APVirtualDisplayTestSink != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

CFStringRef vdsink_CopyDebugDesc(uint64_t a1)
{
  return CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, @"[APVirtualDisplayTestSink %p]", a1);
}

uint64_t vdsink_CopyProperty(int a1, CFTypeRef cf1, uint64_t a3, void *a4)
{
  if (gLogCategory_APVirtualDisplayTestSink <= 30
    && (gLogCategory_APVirtualDisplayTestSink != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E4F34FB8])) {
    return 4294954512;
  }
  CFTypeRef v6 = CFRetain(@"AirPlay");
  uint64_t result = 0;
  *a4 = v6;
  return result;
}

uint64_t vdsink_SetProperty(uint64_t a1, const void *a2, const void *a3)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  int v6 = gLogCategory_APVirtualDisplayTestSink;
  if (gLogCategory_APVirtualDisplayTestSink <= 30)
  {
    if (gLogCategory_APVirtualDisplayTestSink == -1)
    {
      if (!_LogCategory_Initialize()) {
        goto LABEL_13;
      }
      int v6 = gLogCategory_APVirtualDisplayTestSink;
    }
    if (v6 <= 20)
    {
      if (v6 != -1
        || (_LogCategory_Initialize(),
            int v6 = gLogCategory_APVirtualDisplayTestSink,
            gLogCategory_APVirtualDisplayTestSink <= 20))
      {
        if (v6 == -1) {
          _LogCategory_Initialize();
        }
      }
    }
    LogPrintF();
  }
LABEL_13:
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34F88]))
  {
    uint64_t v7 = (const void *)DerivedStorage[14];
    DerivedStorage[14] = a3;
    if (!a3) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34FB0]))
  {
    uint64_t v7 = (const void *)DerivedStorage[12];
    DerivedStorage[12] = a3;
    if (!a3) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34FA0]))
  {
    uint64_t v7 = (const void *)DerivedStorage[13];
    DerivedStorage[13] = a3;
    if (!a3)
    {
LABEL_16:
      if (v7) {
        CFRelease(v7);
      }
      return 0;
    }
LABEL_15:
    CFRetain(a3);
    goto LABEL_16;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34F60]) || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34FA8])) {
    return 0;
  }
  uint64_t v9 = DerivedStorage[1];
  return FigEndpointStreamSetProperty(v9, (uint64_t)a2, (uint64_t)a3);
}

uint64_t vdsink_networkStop()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v1 = DerivedStorage;
  if (*(void *)(DerivedStorage + 272))
  {
    int v2 = *(_DWORD *)(DerivedStorage + 280);
    if ((v2 & 0x80000000) == 0)
    {
      if (close(v2) && *__error()) {
        __error();
      }
      *(_DWORD *)(v1 + 280) = -1;
    }
    SendSelfConnectedLoopbackMessage();
    int v3 = pthread_join(*(pthread_t *)(v1 + 264), 0);
    *(void *)(v1 + 272) = 0;
  }
  else
  {
    int v3 = 0;
  }
  CFDictionaryRef v4 = *(const void **)(v1 + 320);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(v1 + 320) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 280);
  if ((v5 & 0x80000000) == 0)
  {
    if (close(v5) && *__error()) {
      __error();
    }
    *(_DWORD *)(v1 + 280) = -1;
  }
  uint64_t result = *(unsigned int *)(v1 + 284);
  if ((result & 0x80000000) == 0)
  {
    uint64_t result = close(result);
    if (result)
    {
      uint64_t result = (uint64_t)__error();
      if (*(_DWORD *)result) {
        uint64_t result = (uint64_t)__error();
      }
    }
    *(_DWORD *)(v1 + 284) = -1;
  }
  if (v3)
  {
    if (gLogCategory_APVirtualDisplayTestSink <= 60)
    {
      if (gLogCategory_APVirtualDisplayTestSink != -1) {
        return LogPrintF();
      }
      uint64_t result = _LogCategory_Initialize();
      if (result) {
        return LogPrintF();
      }
    }
  }
  return result;
}

uint64_t FigEndpointStreamSetProperty(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t CMBaseObject = FigEndpointStreamGetCMBaseObject();
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  CFAllocatorRef v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 56);
  if (!v8) {
    return 4294954514;
  }
  return v8(CMBaseObject, a2, a3);
}

uint64_t vdsink_Start(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APVirtualDisplayTestSink <= 30
    && (gLogCategory_APVirtualDisplayTestSink != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(_DWORD *)(DerivedStorage + 4))
  {
    APSLogErrorAt();
    uint64_t v5 = 4294954516;
    if (!a3) {
      return v5;
    }
    goto LABEL_7;
  }
  uint64_t v5 = 0;
  *(_DWORD *)(DerivedStorage + 4) = 2;
  if (a3)
  {
LABEL_7:
    uint64_t v6 = *(NSObject **)(DerivedStorage + 24);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 0x40000000;
    block[2] = __vdsink_Start_block_invoke;
    block[3] = &unk_1E6892228;
    block[4] = a3;
    int v9 = v5;
    dispatch_async(v6, block);
  }
  return v5;
}

uint64_t vdsink_Stop(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APVirtualDisplayTestSink <= 30
    && (gLogCategory_APVirtualDisplayTestSink != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(_DWORD *)(DerivedStorage + 4) != 2)
  {
    APSLogErrorAt();
    uint64_t v4 = 4294954516;
    if (!a2) {
      return v4;
    }
    goto LABEL_12;
  }
  *(_DWORD *)(DerivedStorage + 4) = 0;
  if (*(_DWORD *)DerivedStorage == 3)
  {
    vdsink_networkStop();
  }
  else
  {
    uint64_t v4 = 0;
    if (*(_DWORD *)DerivedStorage != 2) {
      goto LABEL_11;
    }
    dispatch_semaphore_wait(*(dispatch_semaphore_t *)(DerivedStorage + 152), 0xFFFFFFFFFFFFFFFFLL);
  }
  uint64_t v4 = 0;
LABEL_11:
  if (a2)
  {
LABEL_12:
    uint64_t v5 = *(NSObject **)(DerivedStorage + 24);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 0x40000000;
    block[2] = __vdsink_Stop_block_invoke;
    block[3] = &unk_1E6892250;
    block[4] = a2;
    dispatch_async(v5, block);
  }
  return v4;
}

uint64_t vdsink_PushFrame(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, uint64_t a9, void *a10, int a11)
{
  int valuePtr = a11;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  double v22 = *(double *)(DerivedStorage + 72);
  double v21 = *(double *)(DerivedStorage + 80);
  double v24 = *(double *)(DerivedStorage + 56);
  double v23 = *(double *)(DerivedStorage + 64);
  if (v22 != v24 || v21 != v23)
  {
    double v26 = v24 / v22;
    if (v24 / v22 >= v23 / v21) {
      double v26 = v23 / v21;
    }
    a7 = a7 * v26;
    a8 = a8 * v26;
    a5 = (v24 - v22 * v26) * 0.5 + a5 * v26;
    a6 = (v23 - v21 * v26) * 0.5 + a6 * v26;
  }
  v56.origin.x = a1;
  v56.origin.y = a2;
  v56.size.width = a3;
  v56.size.height = a4;
  DictionaryRepresentatioCFIndex n = CGRectCreateDictionaryRepresentation(v56);
  v57.origin.x = a5;
  v57.origin.y = a6;
  v57.size.width = a7;
  v57.size.height = a8;
  CFDictionaryRef v28 = CGRectCreateDictionaryRepresentation(v57);
  CFAllocatorRef v29 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFNumberRef v30 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], kCFNumberSInt32Type, &valuePtr);
  CMSetAttachment(a10, (CFStringRef)*MEMORY[0x1E4F21A58], DictionaryRepresentation, 0);
  CMSetAttachment(a10, (CFStringRef)*MEMORY[0x1E4F21A10], v28, 0);
  CMSetAttachment(a10, (CFStringRef)*MEMORY[0x1E4F21A70], v30, 0);
  uint64_t v31 = *(const void **)(DerivedStorage + 96);
  if (v31)
  {
    CMSetAttachment(a10, @"APTimestamps", v31, 0);
    uint64_t v32 = *(const void **)(DerivedStorage + 96);
    if (v32)
    {
      CFRelease(v32);
      *(void *)(DerivedStorage + 96) = 0;
    }
  }
  uint64_t v33 = *(const void **)(DerivedStorage + 104);
  if (v33)
  {
    CMSetAttachment(a10, @"APSubmitSurfaceTimestamp", v33, 0);
    CMTime v34 = *(const void **)(DerivedStorage + 104);
    if (v34)
    {
      CFRelease(v34);
      *(void *)(DerivedStorage + 104) = 0;
    }
  }
  uint64_t v35 = *(const void **)(DerivedStorage + 112);
  if (v35)
  {
    CMSetAttachment(a10, @"APInterestingFrame", v35, 0);
    long long v36 = *(const void **)(DerivedStorage + 112);
    if (v36)
    {
      CFRelease(v36);
      *(void *)(DerivedStorage + 112) = 0;
    }
  }
  if (*(_DWORD *)DerivedStorage == 1) {
    CMBufferQueueEnqueue(*(CMBufferQueueRef *)(DerivedStorage + 16), a10);
  }
  if (gLogCategory_APVirtualDisplayTestSink <= 10
    && (gLogCategory_APVirtualDisplayTestSink != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v37 = CMBaseObjectGetDerivedStorage();
  if (*(void *)(v37 + 88))
  {
    uint64_t v38 = v37;
    CFArrayRef SampleAttachmentsArray = CMSampleBufferGetSampleAttachmentsArray((CMSampleBufferRef)a10, 0);
    if (SampleAttachmentsArray)
    {
      CFArrayRef v40 = SampleAttachmentsArray;
      CFIndex Count = CFArrayGetCount(SampleAttachmentsArray);
      if (Count >= 1)
      {
        CFIndex v42 = Count;
        CFNumberRef v52 = v30;
        CFDictionaryRef v53 = DictionaryRepresentation;
        CFIndex v43 = 0;
        CFMutableDictionaryRef Mutable = 0;
        uint64_t v45 = (const void *)*MEMORY[0x1E4F453B8];
        do
        {
          CFDictionaryRef ValueAtIndex = (const __CFDictionary *)CFArrayGetValueAtIndex(v40, v43);
          if (ValueAtIndex)
          {
            CFDictionaryRef Value = CFDictionaryGetValue(ValueAtIndex, v45);
            if (Value)
            {
              uint64_t v48 = Value;
              if (!Mutable) {
                CFMutableDictionaryRef Mutable = CFArrayCreateMutable(v29, 0, MEMORY[0x1E4F1D510]);
              }
              if (gLogCategory_APVirtualDisplayTestSink <= 10
                && (gLogCategory_APVirtualDisplayTestSink != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              CFArrayAppendValue(Mutable, v48);
            }
          }
          ++v43;
        }
        while (v42 != v43);
        DictionaryRepresentatioCFIndex n = v53;
        CFNumberRef v30 = v52;
        if (Mutable)
        {
          uint64_t v49 = CFDictionaryCreateMutable(v29, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
          CFDictionarySetValue(v49, (const void *)*MEMORY[0x1E4F34F10], Mutable);
          uint64_t v50 = *(NSObject **)(v38 + 24);
          block[0] = MEMORY[0x1E4F143A8];
          block[1] = 0x40000000;
          block[2] = __vdsink_handleFrameAcknowledgements_block_invoke;
          block[3] = &__block_descriptor_tmp_24_0;
          block[4] = v38;
          void block[5] = v49;
          dispatch_async(v50, block);
          CFRelease(Mutable);
        }
      }
    }
  }
  if (DictionaryRepresentation) {
    CFRelease(DictionaryRepresentation);
  }
  if (v28) {
    CFRelease(v28);
  }
  if (v30) {
    CFRelease(v30);
  }
  return 0;
}

uint64_t vdsink_Suspend()
{
  uint64_t DerivedStorage = (_DWORD *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APVirtualDisplayTestSink <= 30
    && (gLogCategory_APVirtualDisplayTestSink != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (DerivedStorage[1] == 2)
  {
    DerivedStorage[1] = 1;
    if (*DerivedStorage == 3) {
      vdsink_networkStop();
    }
    return 0;
  }
  else
  {
    APSLogErrorAt();
    return 4294954516;
  }
}

uint64_t vdsink_Resume(void *a1)
{
  uint64_t DerivedStorage = (_DWORD *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APVirtualDisplayTestSink <= 30
    && (gLogCategory_APVirtualDisplayTestSink != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!DerivedStorage[1])
  {
    APSLogErrorAt();
    return 4294954516;
  }
  if (*DerivedStorage != 3)
  {
    if (*DerivedStorage == 2)
    {
      global_queue = dispatch_get_global_queue(2, 0);
      dispatch_async_f(global_queue, DerivedStorage, (dispatch_function_t)vdsink_fileSubmitFrames);
    }
    goto LABEL_50;
  }
  uint64_t v4 = CMBaseObjectGetDerivedStorage();
  if (!*(void *)(v4 + 272))
  {
    uint64_t v5 = v4;
    int v6 = *(_DWORD *)(v4 + 280);
    if ((v6 & 0x80000000) == 0)
    {
      if (close(v6) && *__error()) {
        __error();
      }
      *(_DWORD *)(v5 + 280) = -1;
    }
    *(void *)&v15.sa_leCFIndex n = 0;
    *(void *)&v15.sa_data[6] = 0;
    int v17 = 0;
    uint64_t v16 = 0;
    int v7 = socket(2, 1, 6);
    if (v7 < 0)
    {
      if (*__error())
      {
        uint64_t v8 = *__error();
        if (!v8) {
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v8 = 4294960596;
      }
      APSLogErrorAt();
LABEL_37:
      APSLogErrorAt();
      goto LABEL_38;
    }
LABEL_18:
    int v14 = 1;
    setsockopt(v7, 0xFFFF, 4130, &v14, 4u);
    int v18 = 1;
    if (!setsockopt(v7, 0xFFFF, 4, &v18, 4u)) {
      goto LABEL_21;
    }
    if (*__error())
    {
      uint64_t v8 = *__error();
      if (!v8)
      {
LABEL_21:
        *(void *)&v15.sa_leCFIndex n = 0x100007F28230210;
        *(void *)&v15.sa_data[6] = 0;
        uint64_t v9 = bind(v7, &v15, 0x10u);
        if (v9)
        {
          uint64_t v8 = v9;
        }
        else
        {
          if (!listen(v7, 5))
          {
LABEL_25:
            *(_DWORD *)(v5 + 280) = v7;
            if (gLogCategory_APVirtualDisplayTestSink <= 30
              && (gLogCategory_APVirtualDisplayTestSink != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            int v10 = *(_DWORD *)(v5 + 284);
            if ((v10 & 0x80000000) == 0)
            {
              if (close(v10) && *__error()) {
                __error();
              }
              *(_DWORD *)(v5 + 284) = -1;
            }
            uint64_t v11 = OpenSelfConnectedLoopbackSocket();
            if (v11)
            {
              uint64_t v8 = v11;
            }
            else
            {
              uint64_t v12 = pthread_create((pthread_t *)(v5 + 264), 0, (void *(__cdecl *)(void *))vdsink_networkThread, a1);
              if (!v12)
              {
                *(void *)(v5 + 272) = v5 + 264;
LABEL_50:
                uint64_t v8 = 0;
                DerivedStorage[1] = 2;
                return v8;
              }
              uint64_t v8 = v12;
            }
            goto LABEL_37;
          }
          if (*__error())
          {
            uint64_t v8 = *__error();
            if (!v8) {
              goto LABEL_25;
            }
          }
          else
          {
            uint64_t v8 = 4294960596;
          }
        }
      }
    }
    else
    {
      uint64_t v8 = 4294960596;
    }
    APSLogErrorAt();
    if ((v7 & 0x80000000) == 0 && close(v7) && *__error()) {
      __error();
    }
    goto LABEL_37;
  }
  APSLogErrorAt();
  uint64_t v8 = 4294960577;
LABEL_38:
  if (gLogCategory_APVirtualDisplayTestSink <= 60
    && (gLogCategory_APVirtualDisplayTestSink != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  APSLogErrorAt();
  return v8;
}

uint64_t vdsink_GetPropertyAsync(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int v7 = CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34F70]);
  uint64_t v8 = (const __CFAllocator **)MEMORY[0x1E4F1CF80];
  if (!v7)
  {
    uint64_t CMBaseObject = FigEndpointStreamGetCMBaseObject();
    uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v13) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    uint64_t v27 = *(uint64_t (**)(uint64_t, const void *, const __CFAllocator *, __CFDictionary **))(v14 + 48);
    if (v27)
    {
      uint64_t v25 = v27(CMBaseObject, a2, *v8, &v35);
      CFMutableDictionaryRef MutableCopy = v35;
    }
    else
    {
      CFMutableDictionaryRef MutableCopy = 0;
      uint64_t v25 = 4294954514;
    }
    goto LABEL_45;
  }
  CFTypeRef v34 = 0;
  uint64_t v9 = FigEndpointStreamGetCMBaseObject();
  uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v10) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0;
  }
  sockaddr v15 = *(uint64_t (**)(uint64_t, void, const __CFAllocator *, CFTypeRef *))(v11 + 48);
  if (!v15)
  {
    uint64_t v25 = 4294954514;
LABEL_19:
    APSLogErrorAt();
    CFMutableDictionaryRef MutableCopy = 0;
    goto LABEL_45;
  }
  CFAllocatorRef v16 = *v8;
  uint64_t v17 = v15(v9, *MEMORY[0x1E4F34F68], *v8, &v34);
  if (v17)
  {
    uint64_t v25 = v17;
    goto LABEL_19;
  }
  CFDictionaryRef v18 = (const __CFDictionary *)v34;
  uint64_t v19 = CMBaseObjectGetDerivedStorage();
  CFArrayRef v40 = 0;
  CFTypeRef cf = 0;
  CMTimeValue value = 0;
  CFTypeRef v37 = 0;
  char v36 = 0;
  if (vdsink_getVirtualDisplaySizeOverrideFromPrefs_sCheckPrefsOnce != -1) {
    dispatch_once(&vdsink_getVirtualDisplaySizeOverrideFromPrefs_sCheckPrefsOnce, &__block_literal_global_7);
  }
  double v20 = *(double *)&vdsink_getVirtualDisplaySizeOverrideFromPrefs_prefScreenSize_0;
  double v21 = *(double *)&vdsink_getVirtualDisplaySizeOverrideFromPrefs_prefScreenSize_1;
  double v23 = *MEMORY[0x1E4F1DB30];
  double v22 = *(double *)(MEMORY[0x1E4F1DB30] + 8);
  if ((*(double *)&vdsink_getVirtualDisplaySizeOverrideFromPrefs_prefScreenSize_0 != *MEMORY[0x1E4F1DB30]
     || *(double *)&vdsink_getVirtualDisplaySizeOverrideFromPrefs_prefScreenSize_1 != v22)
    && gLogCategory_APVirtualDisplayTestSink <= 50)
  {
    if (gLogCategory_APVirtualDisplayTestSink != -1
      || (int v28 = _LogCategory_Initialize(),
          double v20 = *(double *)&vdsink_getVirtualDisplaySizeOverrideFromPrefs_prefScreenSize_0,
          double v21 = *(double *)&vdsink_getVirtualDisplaySizeOverrideFromPrefs_prefScreenSize_1,
          v28))
    {
      LogPrintF();
      double v20 = *(double *)&vdsink_getVirtualDisplaySizeOverrideFromPrefs_prefScreenSize_0;
      double v21 = *(double *)&vdsink_getVirtualDisplaySizeOverrideFromPrefs_prefScreenSize_1;
    }
  }
  FigCFDictionaryGetBooleanIfPresent();
  FigCFDictionaryGetCGSizeIfPresent();
  if (v20 == v23 && v21 == v22)
  {
    *(_OWORD *)(v19 + 72) = *(_OWORD *)(v19 + 56);
  }
  else
  {
    *(double *)(v19 + 72) = v20;
    *(double *)(v19 + 80) = v21;
  }
  FigDisplayModes_BuildColorAndTimingModes();
  CFTypeRef v29 = cf;
  if (cf)
  {
    if (v37)
    {
      FigDisplayModes_CreateColorAndTimingModesArraysWithPreferredMode();
      CFMutableDictionaryRef MutableCopy = 0;
      if (v40 && value)
      {
        CFMutableDictionaryRef MutableCopy = CFDictionaryCreateMutableCopy(v16, 0, v18);
        CFDictionarySetValue(MutableCopy, (const void *)*MEMORY[0x1E4F34EA0], v40);
        CFDictionarySetValue(MutableCopy, (const void *)*MEMORY[0x1E4F34EF0], value);
      }
      CFTypeRef v29 = cf;
      if (!cf) {
        goto LABEL_36;
      }
    }
    else
    {
      CFMutableDictionaryRef MutableCopy = 0;
    }
    CFRelease(v29);
  }
  else
  {
    CFMutableDictionaryRef MutableCopy = 0;
  }
LABEL_36:
  if (v37) {
    CFRelease(v37);
  }
  if (v40) {
    CFRelease(v40);
  }
  if (value) {
    CFRelease(value);
  }
  uint64_t v35 = MutableCopy;
  if (v34) {
    CFRelease(v34);
  }
  uint64_t v25 = 0;
LABEL_45:
  CFNumberRef v30 = *(NSObject **)(DerivedStorage + 24);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __vdsink_GetPropertyAsync_block_invoke;
  block[3] = &unk_1E68922C0;
  int v33 = v25;
  block[4] = a4;
  void block[5] = MutableCopy;
  dispatch_async(v30, block);
  return v25;
}

uint64_t vdsink_Perform(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
  {
    APSLogErrorAt();
LABEL_17:
    uint64_t v7 = 4294954516;
    goto LABEL_18;
  }
  if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34E98]))
  {
    if (gLogCategory_APVirtualDisplayTestSink <= 50
      && (gLogCategory_APVirtualDisplayTestSink != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_17;
  }
  CMSampleBufferRef v13 = 0;
  *(_OWORD *)&sampleTimingArray.duration.CMTimeValue value = *MEMORY[0x1E4F1FA48];
  sampleTimingArray.duration.epoch = *(void *)(MEMORY[0x1E4F1FA48] + 16);
  sampleTimingArray.presentationTimeStamp = *(CMTime *)*(void *)&MEMORY[0x1E4F1F9F8];
  sampleTimingArray.decodeTimeStamp = sampleTimingArray.presentationTimeStamp;
  uint64_t v7 = CMSampleBufferCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, 1u, 0, 0, 0, 0, 1, &sampleTimingArray, 0, 0, &v13);
  if (v7)
  {
    APSLogErrorAt();
    if (!a4) {
      return v7;
    }
    goto LABEL_19;
  }
  CMSetAttachment(v13, @"APClearScreen", (CFTypeRef)*MEMORY[0x1E4F1CFD0], 0);
  if (*(_DWORD *)DerivedStorage == 1) {
    CMBufferQueueEnqueue(*(CMBufferQueueRef *)(DerivedStorage + 16), v13);
  }
  if (gLogCategory_APVirtualDisplayTestSink <= 30
    && (gLogCategory_APVirtualDisplayTestSink != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (v13)
  {
    CFRelease(v13);
    if (!a4) {
      return v7;
    }
    goto LABEL_19;
  }
LABEL_18:
  if (a4)
  {
LABEL_19:
    uint64_t v8 = *(NSObject **)(DerivedStorage + 24);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 0x40000000;
    block[2] = __vdsink_Perform_block_invoke;
    block[3] = &unk_1E6892308;
    block[4] = a4;
    int v11 = v7;
    dispatch_async(v8, block);
  }
  return v7;
}

uint64_t vdsink_SetDispatchQueue(uint64_t a1, NSObject *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v4 = *(NSObject **)(DerivedStorage + 24);
  if (v4) {
    dispatch_release(v4);
  }
  if (a2) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = MEMORY[0x1E4F14428];
  }
  *(void *)(DerivedStorage + 24) = v5;
  dispatch_retain(v5);
  return 0;
}

uint64_t vdsink_SetEventHandler(uint64_t a1, void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2) {
    a2 = _Block_copy(a2);
  }
  uint64_t v4 = *(const void **)(DerivedStorage + 88);
  if (v4) {
    _Block_release(v4);
  }
  *(void *)(DerivedStorage + 88) = a2;
  return 0;
}

uint64_t vdsink_ShouldDropFrame()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  memset(&v8, 0, sizeof(v8));
  CMBufferQueueGetDuration(&v8, *(CMBufferQueueRef *)(DerivedStorage + 16));
  CMTime time1 = v8;
  CMTime time2 = *(CMTime *)(DerivedStorage + 32);
  if (CMTimeCompare(&time1, &time2) < 0)
  {
    uint64_t v1 = 0;
    int v2 = *(_DWORD *)(DerivedStorage + 136);
  }
  else
  {
    if (gLogCategory_APVirtualDisplayTestSink <= 40
      && (gLogCategory_APVirtualDisplayTestSink != -1 || _LogCategory_Initialize()))
    {
      CMTime time1 = v8;
      CMTimeGetSeconds(&time1);
      LogPrintF();
    }
    int v2 = *(_DWORD *)(DerivedStorage + 136) + 1;
    *(_DWORD *)(DerivedStorage + 136) = v2;
    uint64_t v1 = 1;
  }
  if (v2 >= 1)
  {
    uint64_t v3 = mach_absolute_time();
    if (v3 - *(void *)(DerivedStorage + 128) >= *(void *)(DerivedStorage + 120))
    {
      uint64_t v4 = v3;
      if (gLogCategory_APVirtualDisplayTestSink <= 60
        && (gLogCategory_APVirtualDisplayTestSink != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(_DWORD *)(DerivedStorage + 136) = 0;
      *(void *)(DerivedStorage + 128) = v4;
    }
  }
  return v1;
}

void __vdsink_handleFrameAcknowledgements_block_invoke(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(*(void *)(a1 + 32) + 88) + 16))();
  int v2 = *(const void **)(a1 + 40);
  CFRelease(v2);
}

void vdsink_fileSubmitFrames(uint64_t a1)
{
  uint64_t v31 = 0;
  uint64_t v32 = &v31;
  uint64_t v33 = 0x2000000000;
  int v34 = 0;
  uint64_t v27 = 0;
  int v28 = &v27;
  uint64_t v29 = 0x2000000000;
  char v30 = 0;
  CFTypeRef cf = 0;
  memset(&v25, 0, sizeof(v25));
  memset(&v24, 0, sizeof(v24));
  uint64_t v2 = *(void *)(a1 + 168);
  CMTime v35 = *(CMTime *)(a1 + 180);
  CMTime v23 = *(CMTime *)(a1 + 204);
  uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = *(uint64_t (**)(uint64_t, CMTime *, CMTime *))(v4 + 96);
  if (!v5)
  {
    *((_DWORD *)v32 + 6) = -12782;
    goto LABEL_11;
  }
  CMTime lhs = v35;
  CMTime v36 = v23;
  int v6 = v5(v2, &lhs, &v36);
  *((_DWORD *)v32 + 6) = v6;
  if (v6)
  {
LABEL_11:
    APSLogErrorAt();
    goto LABEL_12;
  }
  HostTimeClocCFIndex k = CMClockGetHostTimeClock();
  CMClockGetTime(&v25, HostTimeClock);
  CMTimeMake(&v24, 1, 2);
  if (!*((unsigned char *)v28 + 24))
  {
    while (1)
    {
      memset(&v23, 0, sizeof(v23));
      if (gLogCategory_APVirtualDisplayTestSink <= 30
        && (gLogCategory_APVirtualDisplayTestSink != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v8 = *(void *)(a1 + 168);
      uint64_t v9 = *(unsigned int *)(a1 + 176);
      uint64_t v10 = v28;
      uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 16);
      uint64_t v12 = v11 ? v11 : 0;
      CMSampleBufferRef v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t *, CFTypeRef *))(v12 + 104);
      if (!v13) {
        break;
      }
      int v14 = v13(v8, v9, 1, v10 + 3, &cf);
      *((_DWORD *)v32 + 6) = v14;
      if (v14) {
        goto LABEL_11;
      }
      if (!*((unsigned char *)v28 + 24))
      {
        CMSampleBufferGetPresentationTimeStamp(&rhs, (CMSampleBufferRef)cf);
        CMTime lhs = v25;
        CMTimeAdd(&v23, &lhs, &rhs);
        CMTime v21 = v23;
        while (1)
        {
          sockaddr v15 = CMClockGetHostTimeClock();
          CMClockGetTime(&v36, v15);
          CMTime v35 = v21;
          CMTimeSubtract(&lhs, &v35, &v36);
          signed int v16 = (int)(CMTimeGetSeconds(&lhs) * 1000000.0);
          if (v16 < 1) {
            break;
          }
          usleep(v16);
        }
        uint64_t v17 = *(NSObject **)(a1 + 144);
        block[0] = MEMORY[0x1E4F143A8];
        block[1] = 0x40000000;
        block[2] = __vdsink_fileSubmitFrames_block_invoke;
        block[3] = &unk_1E6892298;
        void block[6] = a1;
        void block[7] = cf;
        CMTime v19 = v23;
        CMTime v20 = v24;
        block[4] = &v31;
        void block[5] = &v27;
        dispatch_sync(v17, block);
        if (*((_DWORD *)v32 + 6)) {
          goto LABEL_11;
        }
        if (cf)
        {
          CFRelease(cf);
          CFTypeRef cf = 0;
        }
        if (!*((unsigned char *)v28 + 24)) {
          continue;
        }
      }
      goto LABEL_7;
    }
    *((_DWORD *)v32 + 6) = -12782;
    goto LABEL_11;
  }
LABEL_7:
  if (gLogCategory_APVirtualDisplayTestSink <= 50
    && (gLogCategory_APVirtualDisplayTestSink != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_12:
  if (cf) {
    CFRelease(cf);
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 152));
  _Block_object_dispose(&v27, 8);
  _Block_object_dispose(&v31, 8);
}

void __vdsink_fileSubmitFrames_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  if (*(_DWORD *)(v2 + 4) == 2)
  {
    uint64_t v3 = *(opaqueCMSampleBuffer **)(a1 + 56);
    CMTime lhs = *(CMTime *)(a1 + 64);
    CMTime v7 = *(CMTime *)(a1 + 88);
    CMTimeAdd(&v9, &lhs, &v7);
    if (!*(unsigned char *)(v2 + 232))
    {
      LODWORD(lhs.CFDictionarySetValue(theDict, key, value) = 1;
      FormatDescriptioCFIndex n = CMSampleBufferGetFormatDescription(v3);
      CGFloat width = (double)CMVideoFormatDescriptionGetDimensions(FormatDescription).width;
      CGFloat height = (double)CMVideoFormatDescriptionGetDimensions(FormatDescription).height;
      v10.origin.x = 0.0;
      v10.origin.y = 0.0;
      v10.size.CGFloat width = width;
      v10.size.CGFloat height = height;
      *(void *)(v2 + 240) = CGRectCreateDictionaryRepresentation(v10);
      v11.origin.x = 0.0;
      v11.origin.y = 0.0;
      v11.size.CGFloat width = width;
      v11.size.CGFloat height = height;
      *(void *)(v2 + 248) = CGRectCreateDictionaryRepresentation(v11);
      *(void *)(v2 + 256) = CFNumberCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], kCFNumberSInt32Type, &lhs);
      *(unsigned char *)(v2 + 232) = 1;
    }
    CMSetAttachment(v3, (CFStringRef)*MEMORY[0x1E4F21A58], *(CFTypeRef *)(v2 + 240), 0);
    CMSetAttachment(v3, (CFStringRef)*MEMORY[0x1E4F21A10], *(CFTypeRef *)(v2 + 248), 0);
    CMSetAttachment(v3, (CFStringRef)*MEMORY[0x1E4F21A70], *(CFTypeRef *)(v2 + 256), 0);
    if (*(_DWORD *)(v2 + 4) == 2) {
      CMBufferQueueEnqueue(*(CMBufferQueueRef *)(v2 + 16), v3);
    }
    *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 0;
    if (!*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      ++*(_DWORD *)(*(void *)(a1 + 48) + 228);
    }
  }
  else
  {
    if (gLogCategory_APVirtualDisplayTestSink <= 50
      && (gLogCategory_APVirtualDisplayTestSink != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  }
}

uint64_t vdsink_networkThread()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  unint64_t v1 = *(int *)(DerivedStorage + 284);
  int v44 = -1;
  uint64_t v43 = 0;
  uint64_t v2 = &unk_1EA628000;
  if (gLogCategory_APVirtualDisplayTestSink <= 30
    && (gLogCategory_APVirtualDisplayTestSink != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  memset(&v42, 0, sizeof(v42));
  pthread_setname_np("APVirtualDisplayTestSink");
  if (!SocketAccept())
  {
    int v3 = *(_DWORD *)(DerivedStorage + 280);
    if ((v3 & 0x80000000) == 0)
    {
      if (close(v3) && *__error()) {
        __error();
      }
      *(_DWORD *)(DerivedStorage + 280) = -1;
    }
    if (!NetSocket_CreateWithNative())
    {
      int v4 = v44;
      if (v44 <= (int)v1) {
        int v5 = v1;
      }
      else {
        int v5 = v44;
      }
      if (v5 < 0) {
        int v5 = -1;
      }
      int v6 = v5 + 1;
      memset(&v42, 0, sizeof(v42));
      int v41 = 1 << v1;
      unint64_t v7 = v1 >> 5;
      CFArrayRef v40 = (unsigned int *)(DerivedStorage + 288);
      CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
      CFAllocatorRef blockAllocator = (const __CFAllocator *)*MEMORY[0x1E4F1CF90];
      CFStringRef v37 = (const __CFString *)*MEMORY[0x1E4F21A10];
      CFStringRef key = (const __CFString *)*MEMORY[0x1E4F21A58];
      CFStringRef v36 = (const __CFString *)*MEMORY[0x1E4F21A70];
      while (1)
      {
        if (__darwin_check_fd_set_overflow(v4, &v42, 0)) {
          *(__int32_t *)((char *)v42.fds_bits + (((unint64_t)v4 >> 3) & 0x1FFFFFFFFFFFFFFCLL)) |= 1 << v4;
        }
        if (__darwin_check_fd_set_overflow(v1, &v42, 0)) {
          v42.fds_bits[v7] |= v41;
        }
        int v9 = select(v6, &v42, 0, 0, 0);
        if (v9 <= 0 && (!v9 || !*__error() || *__error())) {
          goto LABEL_80;
        }
        int v10 = v44;
        if (!__darwin_check_fd_set_overflow(v44, &v42, 0)
          || ((*(unsigned int *)((char *)v42.fds_bits + (((unint64_t)v10 >> 3) & 0x1FFFFFFFFFFFFFFCLL)) >> v10) & 1) == 0)
        {
          goto LABEL_70;
        }
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, unsigned int *, void, void, uint64_t))(v43 + 24))(v43, 32, 32, v40, 0, 0, 0xFFFFFFFFLL))
        {
          goto LABEL_81;
        }
        uint64_t v11 = *v40;
        if (v11)
        {
          uint64_t v12 = (char *)malloc_type_malloc(*v40, 0xFDC179ADuLL);
          if (!v12) {
            goto LABEL_72;
          }
          CMSampleBufferRef v13 = v12;
          int v35 = v6;
          int v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, void, void, uint64_t))(v43 + 24))(v43, v11, v11, v12, 0, 0, 0xFFFFFFFFLL);
          if (v14)
          {
            int v34 = v14;
            free(v13);
            if (v34 == -6753) {
              goto LABEL_81;
            }
            goto LABEL_80;
          }
        }
        else
        {
          int v35 = v6;
          CMSampleBufferRef v13 = 0;
        }
        int v15 = v2[60];
        if (v15 <= 30 && (v15 != -1 || _LogCategory_Initialize())) {
          LogPrintF();
        }
        uint64_t v16 = CMBaseObjectGetDerivedStorage();
        CMSampleBufferRef sampleBufferOut = 0;
        CMBlockBufferRef blockBufferOut = 0;
        memset(&sampleTimingArray, 0, sizeof(sampleTimingArray));
        size_t v17 = *v40;
        size_t sampleSizeArray = v17;
        if (!v17) {
          goto LABEL_76;
        }
        uint64_t v18 = v16;
        if (!*(unsigned char *)(DerivedStorage + 292)) {
          break;
        }
        if (*(unsigned char *)(DerivedStorage + 292) == 1)
        {
          uint64_t v19 = *(unsigned __int8 *)(DerivedStorage + 294) + 8 * *(unsigned __int8 *)(DerivedStorage + 293);
          uint64_t v46 = 0;
          if (gLogCategory_APVirtualDisplayTestSink <= 40
            && (gLogCategory_APVirtualDisplayTestSink != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          if (!FigVideoFormatDescriptionCreateWithSampleDescriptionExtensionAtom())
          {
            uint64_t v27 = *(const void **)(v18 + 320);
            int v28 = v46;
            *(void *)(v18 + 320) = v46;
            if (v28) {
              CFRetain(v28);
            }
            if (v27) {
              CFRelease(v27);
            }
            v17 -= v19;
            size_t sampleSizeArray = v17;
            LOWORD(v22) = *(_WORD *)(DerivedStorage + 308);
            v51.origin.x = (double)v22;
            LOWORD(v23) = *(_WORD *)(DerivedStorage + 310);
            v51.origin.y = (double)v23;
            LOWORD(v24) = *(_WORD *)(DerivedStorage + 312);
            v51.size.CGFloat width = (double)v24;
            LOWORD(v25) = *(_WORD *)(DerivedStorage + 314);
            v51.size.CGFloat height = (double)v25;
            LOWORD(v26) = *(_WORD *)(DerivedStorage + 304);
            CGFloat v29 = (double)v26;
            LOWORD(v26) = *(_WORD *)(DerivedStorage + 306);
            CGFloat v30 = (double)v26;
            int valuePtr = 1;
            *(void *)(v18 + 240) = CGRectCreateDictionaryRepresentation(v51);
            v52.origin.x = 0.0;
            v52.origin.y = 0.0;
            v52.size.CGFloat width = v29;
            v52.size.CGFloat height = v30;
            *(void *)(v18 + 248) = CGRectCreateDictionaryRepresentation(v52);
            uint64_t v31 = *(const void **)(v18 + 256);
            if (v31) {
              CFRelease(v31);
            }
            CMTime v20 = &v13[v19];
            *(void *)(v18 + 256) = CFNumberCreate(v8, kCFNumberSInt32Type, &valuePtr);
            *(unsigned char *)(v18 + 232) = 1;
            goto LABEL_58;
          }
LABEL_76:
          APSLogErrorAt();
          CMTime v20 = v13;
LABEL_77:
          uint64_t v2 = (_DWORD *)&unk_1EA628000;
          if (!v20) {
            goto LABEL_66;
          }
LABEL_65:
          free(v13);
          goto LABEL_66;
        }
        uint64_t v2 = &unk_1EA628000;
        CMTime v21 = v13;
        if (gLogCategory_APVirtualDisplayTestSink <= 90)
        {
          if (gLogCategory_APVirtualDisplayTestSink != -1 || (CMTime v21 = v13, _LogCategory_Initialize()))
          {
            LogPrintF();
            if (!v13) {
              goto LABEL_66;
            }
            goto LABEL_65;
          }
        }
        if (v21) {
          goto LABEL_65;
        }
LABEL_66:
        if (blockBufferOut) {
          CFRelease(blockBufferOut);
        }
        int v6 = v35;
        if (sampleBufferOut) {
          CFRelease(sampleBufferOut);
        }
LABEL_70:
        if (__darwin_check_fd_set_overflow(v1, &v42, 0) && (v42.fds_bits[v7] & v41) != 0) {
          goto LABEL_81;
        }
LABEL_72:
        int v4 = v44;
      }
      CMTime v20 = v13;
LABEL_58:
      if (v17)
      {
        if (!CMBlockBufferCreateWithMemoryBlock(v8, v13, *v40, blockAllocator, 0, v20 - v13, v17, 0, &blockBufferOut))
        {
          *(_OWORD *)&sampleTimingArray.duration.CMTimeValue value = *MEMORY[0x1E4F1F9F8];
          sampleTimingArray.duration.epoch = *(void *)(MEMORY[0x1E4F1F9F8] + 16);
          sampleTimingArray.decodeTimeStamp = sampleTimingArray.duration;
          CMClockMakeHostTimeFromSystemUnits(&sampleTimingArray.presentationTimeStamp, *(void *)(DerivedStorage + 296));
          if (CMSampleBufferCreate(v8, blockBufferOut, 1u, 0, 0, *(CMFormatDescriptionRef *)(v18 + 320), 1, 1, &sampleTimingArray, 1, &sampleSizeArray, &sampleBufferOut))
          {
            APSLogErrorAt();
            uint64_t v2 = (_DWORD *)&unk_1EA628000;
          }
          else
          {
            CMSetAttachment(sampleBufferOut, key, *(CFTypeRef *)(v18 + 240), 0);
            CMSetAttachment(sampleBufferOut, v37, *(CFTypeRef *)(v18 + 248), 0);
            CMSetAttachment(sampleBufferOut, v36, *(CFTypeRef *)(v18 + 256), 0);
            uint64_t v2 = (_DWORD *)&unk_1EA628000;
            if (*(_DWORD *)(v18 + 4) == 2) {
              CMBufferQueueEnqueue(*(CMBufferQueueRef *)(v18 + 16), sampleBufferOut);
            }
          }
          goto LABEL_66;
        }
        APSLogErrorAt();
      }
      goto LABEL_77;
    }
  }
LABEL_80:
  APSLogErrorAt();
LABEL_81:
  if (v43)
  {
    NetSocket_Delete();
    uint64_t v43 = 0;
  }
  else if ((v44 & 0x80000000) == 0)
  {
    if (close(v44) && *__error()) {
      __error();
    }
    int v44 = -1;
  }
  int v32 = v2[60];
  if (v32 <= 30 && (v32 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  return 0;
}

void __vdsink_getVirtualDisplaySizeOverrideFromPrefs_block_invoke()
{
  CFArrayRef v0 = (const __CFArray *)CFPreferencesCopyValue(@"mirroring_resolution", @"com.apple.coremedia", (CFStringRef)*MEMORY[0x1E4F1D3F0], (CFStringRef)*MEMORY[0x1E4F1D3C8]);
  if (v0)
  {
    CFArrayRef v1 = v0;
    CFTypeID v2 = CFGetTypeID(v0);
    IntCFDictionaryRef Value = 0.0;
    if (v2 == CFArrayGetTypeID())
    {
      if (gLogCategory_APVirtualDisplayTestSink <= 50
        && (gLogCategory_APVirtualDisplayTestSink != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      double v4 = 0.0;
      if (CFArrayGetCount(v1) >= 2)
      {
        CFStringRef ValueAtIndex = (const __CFString *)CFArrayGetValueAtIndex(v1, 0);
        if (ValueAtIndex)
        {
          CFStringRef v6 = ValueAtIndex;
          CFTypeID v7 = CFGetTypeID(ValueAtIndex);
          if (v7 == CFStringGetTypeID()) {
            IntCFDictionaryRef Value = (double)CFStringGetIntValue(v6);
          }
        }
        CFStringRef v8 = (const __CFString *)CFArrayGetValueAtIndex(v1, 1);
        if (v8)
        {
          CFStringRef v9 = v8;
          CFTypeID v10 = CFGetTypeID(v8);
          if (v10 == CFStringGetTypeID()) {
            double v4 = (double)CFStringGetIntValue(v9);
          }
        }
      }
    }
    else
    {
      double v4 = 0.0;
    }
    CFRelease(v1);
    if (IntValue > 0.0 && v4 > 0.0)
    {
      if (IntValue <= v4) {
        *(double *)&uint64_t v11 = v4;
      }
      else {
        *(double *)&uint64_t v11 = IntValue;
      }
      vdsink_getVirtualDisplaySizeOverrideFromPrefs_prefScreenSize_0 = v11;
      if (IntValue >= v4) {
        *(double *)&uint64_t v12 = v4;
      }
      else {
        *(double *)&uint64_t v12 = IntValue;
      }
      vdsink_getVirtualDisplaySizeOverrideFromPrefs_prefScreenSize_1 = v12;
    }
  }
}

uint64_t APEndpointStreamBufferedAudioCreate(const __CFAllocator *a1, CFTypeRef cf, const void *a3, const void *a4, const void *a5, const void *a6, const void *a7, CFTypeRef *a8)
{
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  BOOLeaCFIndex n = 0;
  CFTypeRef v42 = 0;
  if (!cf
    || (CFTypeID v16 = CFGetTypeID(cf), v16 != CFStringGetTypeID())
    || a4 && (CFTypeID v17 = CFGetTypeID(a4), v17 != CFDictionaryGetTypeID())
    || !a5
    || (CFTypeID v18 = CFGetTypeID(a5), v18 != APSenderSessionGetTypeID())
    || !a7
    || (CFTypeID v19 = CFGetTypeID(a7), v19 != APEndpointDescriptionGetTypeID())
    || !a8
    || !a6)
  {
LABEL_69:
    APSLogErrorAt();
    int v39 = -16760;
    goto LABEL_70;
  }
  FigEndpointStreamAirPlayGetClassID();
  unsigned int SupportedAudioFormatList = CMDerivedObjectCreate();
  if (SupportedAudioFormatList)
  {
LABEL_68:
    APSLogErrorAt();
    goto LABEL_53;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(void *)(DerivedStorage + 32) = CFRetain(cf);
  SNPrintF();
  *(void *)(DerivedStorage + 24) = os_transaction_create();
  *(void *)(DerivedStorage + 88) = CFRetain(a5);
  *(void *)(DerivedStorage + 80) = CFRetain(a7);
  *(void *)(DerivedStorage + 72) = CFRetain(a6);
  uint64_t v21 = FigSimpleMutexCreate();
  *(void *)(DerivedStorage + 168) = v21;
  if (v21)
  {
    SNPrintF();
    unint64_t v22 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_USER_INITIATED, 0);
    dispatch_queue_t v23 = dispatch_queue_create(label, v22);
    *(void *)(DerivedStorage + 296) = v23;
    if (v23)
    {
      SNPrintF();
      uint64_t v24 = FigDispatchQueueCreateWithPriority();
      *(void *)(DerivedStorage + 304) = v24;
      if (v24)
      {
        SNPrintF();
        dispatch_queue_t v25 = dispatch_queue_create(label, 0);
        *(void *)(DerivedStorage + 8) = v25;
        if (v25)
        {
          SNPrintF();
          uint64_t v26 = FigDispatchQueueCreateWithPriority();
          *(void *)(DerivedStorage + 16) = v26;
          if (v26)
          {
            if (a4)
            {
              CFDictionaryRef Value = CFDictionaryGetValue((CFDictionaryRef)a4, @"ClusterInfo");
              if (Value) {
                CFDictionaryRef Value = CFRetain(Value);
              }
              *(void *)(DerivedStorage + 56) = Value;
              unsigned int SupportedAudioFormatList = audioStream_createSupportedAudioFormatList((uint64_t)v42, (void *)(DerivedStorage + 184));
              if (!SupportedAudioFormatList)
              {
                uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(DerivedStorage + 80));
                uint64_t v29 = *(void *)(CMBaseObjectGetVTable() + 8);
                if (v29) {
                  uint64_t v30 = v29;
                }
                else {
                  uint64_t v30 = 0;
                }
                uint64_t v31 = *(void (**)(uint64_t, __CFString *, void, CFBooleanRef *))(v30 + 48);
                if (v31) {
                  v31(CMBaseObject, @"SupportsBufferedAPAP", *MEMORY[0x1E4F1CF80], &BOOLean);
                }
                Boolean v32 = BOOLean;
                if (BOOLean) {
                  Boolean v32 = CFBooleanGetValue(BOOLean);
                }
                *(unsigned char *)(DerivedStorage + 96) = v32;
                uint64_t UpTimeNanoseconds = FigGetUpTimeNanoseconds();
                *(void *)(DerivedStorage + 40) = CFStringCreateWithFormat(a1, 0, @"%@-%llu-airplay", a3, UpTimeNanoseconds);
                uint64_t v34 = CMBaseObjectGetDerivedStorage();
                CFDictionaryGetValue((CFDictionaryRef)a4, @"EventRecorder");
                int v35 = *(const void **)(v34 + 160);
                if (v35)
                {
                  CFRelease(v35);
                  *(void *)(v34 + 160) = 0;
                }
                unsigned int v36 = APSEventRecorderCreate();
                if (v36)
                {
                  unsigned int v40 = v36;
                  APSLogErrorAt();
                  unsigned int SupportedAudioFormatList = v40;
                }
                else
                {
                  unsigned int SupportedAudioFormatList = 0;
                  if (a3) {
                    CFTypeRef v37 = CFRetain(a3);
                  }
                  else {
                    CFTypeRef v37 = 0;
                  }
                  *(void *)(DerivedStorage + 48) = v37;
                  *(void *)(DerivedStorage + 104) = CFRetain((CFTypeRef)*MEMORY[0x1E4F212A0]);
                  *(unsigned char *)(DerivedStorage + 112) = APSGetFBOPropertyInt64() != 0;
                  if (!SupportedAudioFormatList)
                  {
                    *(unsigned char *)(DerivedStorage + 113) = APSGetFBOPropertyInt64() != 0;
                    if (!SupportedAudioFormatList)
                    {
                      CFDictionaryGetInt64();
                      *(unsigned char *)(DerivedStorage + 115) = APSSettingsGetIntWithDefault();
                      *(unsigned char *)(DerivedStorage + 116) = APSSettingsIsFeatureEnabled();
                      *(_OWORD *)(DerivedStorage + 120) = 0u;
                      *(_OWORD *)(DerivedStorage + 136) = 0u;
                      *(void *)(DerivedStorage + 152) = 0;
                      *(void *)(DerivedStorage + 280) = 0;
                      *(void *)(DerivedStorage + 288) = 0;
                      if (APSIsEndpointClusteringEnabled() && APSGetFBOPropertyInt64()) {
                        APSIsFBOPropertyNonNull();
                      }
                      if (APSSettingsGetIntWithDefault())
                      {
                        if (gLogCategory_APEndpointStreamBufferedAudio <= 50
                          && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
                        {
                          LogPrintF();
                        }
                        *(unsigned char *)(DerivedStorage + 114) = 1;
                      }
                      APSAudioFormatDescriptionListCopyDebugString();
                      if (gLogCategory_APEndpointStreamBufferedAudio <= 50
                        && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
                      {
                        LogPrintF();
                      }
                      if (APSSettingsIsFeatureEnabled())
                      {
                        CMNotificationCenterGetDefaultLocalCenter();
                        FigNotificationCenterAddWeakListener();
                      }
                      unsigned int SupportedAudioFormatList = APCarPlayAnalyticsCreate((uint64_t)a1, (uint64_t *)(DerivedStorage + 320));
                      if (!SupportedAudioFormatList)
                      {
                        *a8 = v42;
                        CFTypeRef v42 = 0;
                        goto LABEL_53;
                      }
                    }
                  }
                }
              }
              goto LABEL_68;
            }
            goto LABEL_69;
          }
        }
      }
    }
  }
  APSLogErrorAt();
  int v39 = -16761;
LABEL_70:
  unsigned int SupportedAudioFormatList = v39;
LABEL_53:
  if (BOOLean) {
    CFRelease(BOOLean);
  }
  if (v42) {
    CFRelease(v42);
  }
  return SupportedAudioFormatList;
}

uint64_t audioStream_createSupportedAudioFormatList(uint64_t a1, void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(DerivedStorage + 80));
  uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  CFTypeID v7 = *(uint64_t (**)(uint64_t, __CFString *, void, CFTypeRef *))(v6 + 48);
  if (!v7)
  {
    uint64_t v13 = 4294954514;
    goto LABEL_17;
  }
  uint64_t v8 = *MEMORY[0x1E4F1CF80];
  uint64_t v9 = v7(CMBaseObject, @"SupportedAudioFormatsExtended", *MEMORY[0x1E4F1CF80], &cf);
  if (v9 != -12784 && v9 != 0)
  {
    uint64_t v13 = v9;
LABEL_17:
    APSLogErrorAt();
    goto LABEL_18;
  }
  if (cf)
  {
    if (FigCFDictionaryGetValue())
    {
      uint64_t v11 = APSAudioFormatDescriptionListCreateWithAdvertisementArray();
      if (v11)
      {
        uint64_t v13 = v11;
        goto LABEL_17;
      }
    }
    if (cf)
    {
      CFRelease(cf);
      CFTypeRef cf = 0;
    }
  }
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v14 = APEndpointDescriptionGetCMBaseObject(*(void *)(DerivedStorage + 80));
  uint64_t v15 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v15) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = 0;
  }
  CFTypeID v17 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v16 + 48);
  if (!v17)
  {
    uint64_t v13 = 4294954514;
    goto LABEL_17;
  }
  uint64_t v18 = v17(v14, @"SupportedAudioFormats", v8, &cf);
  if (v18)
  {
    uint64_t v13 = v18;
    goto LABEL_17;
  }
  FigCFDictionaryGetValue();
  FigCFNumberGetUInt64();
  uint64_t v19 = APSAudioFormatDescriptionListCreateWithLegacyAudioFormatMask();
  if (v19)
  {
    uint64_t v13 = v19;
    goto LABEL_17;
  }
  uint64_t v13 = 0;
  *a2 = 0;
LABEL_18:
  if (cf) {
    CFRelease(cf);
  }
  return v13;
}

void audioStream_handleEndpointDescriptionChanged(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = (unsigned char *)CMBaseObjectGetDerivedStorage();
  CFTypeID v7 = 0;
  if (!*DerivedStorage)
  {
    double v4 = DerivedStorage;
    if (!DerivedStorage[114])
    {
      if (audioStream_createSupportedAudioFormatList(a2, &v7))
      {
        APSLogErrorAt();
        uint64_t v5 = v7;
        if (!v7) {
          return;
        }
        goto LABEL_19;
      }
      MEMORY[0x1D25EB370](*((void *)v4 + 21));
      uint64_t v5 = v7;
      if (!FigCFEqual())
      {
        APSAudioFormatDescriptionListCopyDebugString();
        if (gLogCategory_APEndpointStreamBufferedAudio <= 50
          && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        APSAudioFormatDescriptionListCopyDebugString();
        if (gLogCategory_APEndpointStreamBufferedAudio <= 50
          && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t v6 = (const void *)*((void *)v4 + 23);
        *((void *)v4 + 23) = v5;
        if (v5) {
          CFRetain(v5);
        }
        if (v6) {
          CFRelease(v6);
        }
        CMNotificationCenterGetDefaultLocalCenter();
        FigDispatchAsyncPostNotification();
      }
      MEMORY[0x1D25EB390](*((void *)v4 + 21));
      if (v5) {
LABEL_19:
      }
        CFRelease(v5);
    }
  }
}

uint64_t audioStream_Finalize()
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (APSSettingsIsFeatureEnabled())
  {
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
  }
  CFArrayRef v1 = DerivedStorage[1];
  if (v1)
  {
    dispatch_release(v1);
    DerivedStorage[1] = 0;
  }
  if (DerivedStorage[15]) {
    FigPKDStopAirPlaySenderSession();
  }
  CFTypeID v2 = (const void *)DerivedStorage[16];
  if (v2)
  {
    CFRelease(v2);
    DerivedStorage[16] = 0;
  }
  int v3 = (const void *)DerivedStorage[17];
  if (v3)
  {
    CFRelease(v3);
    DerivedStorage[17] = 0;
  }
  double v4 = (const void *)DerivedStorage[18];
  if (v4)
  {
    CFRelease(v4);
    DerivedStorage[18] = 0;
  }
  uint64_t v5 = (const void *)DerivedStorage[19];
  if (v5)
  {
    CFRelease(v5);
    DerivedStorage[19] = 0;
  }
  audioStream_dissociateInternal();
  uint64_t v6 = (const void *)DerivedStorage[20];
  if (v6)
  {
    CFRelease(v6);
    DerivedStorage[20] = 0;
  }
  CFTypeID v7 = (const void *)DerivedStorage[39];
  if (v7)
  {
    CFRelease(v7);
    DerivedStorage[39] = 0;
  }
  uint64_t v8 = (const void *)DerivedStorage[40];
  if (v8)
  {
    CFRelease(v8);
    DerivedStorage[40] = 0;
  }
  uint64_t v9 = (const void *)DerivedStorage[11];
  if (v9)
  {
    CFRelease(v9);
    DerivedStorage[11] = 0;
  }
  CFTypeID v10 = (const void *)DerivedStorage[10];
  if (v10)
  {
    CFRelease(v10);
    DerivedStorage[10] = 0;
  }
  uint64_t v11 = (const void *)DerivedStorage[23];
  if (v11)
  {
    CFRelease(v11);
    DerivedStorage[23] = 0;
  }
  uint64_t v12 = (const void *)DerivedStorage[13];
  if (v12)
  {
    CFRelease(v12);
    DerivedStorage[13] = 0;
  }
  uint64_t v13 = (const void *)DerivedStorage[9];
  if (v13)
  {
    CFRelease(v13);
    DerivedStorage[9] = 0;
  }
  uint64_t v14 = (const void *)DerivedStorage[4];
  if (v14)
  {
    CFRelease(v14);
    DerivedStorage[4] = 0;
  }
  uint64_t v15 = (const void *)DerivedStorage[5];
  if (v15)
  {
    CFRelease(v15);
    DerivedStorage[5] = 0;
  }
  uint64_t v16 = (const void *)DerivedStorage[6];
  if (v16)
  {
    CFRelease(v16);
    DerivedStorage[6] = 0;
  }
  CFTypeID v17 = (const void *)DerivedStorage[7];
  if (v17)
  {
    CFRelease(v17);
    DerivedStorage[7] = 0;
  }
  uint64_t v18 = (void *)DerivedStorage[3];
  if (v18)
  {
    os_release(v18);
    DerivedStorage[3] = 0;
  }
  uint64_t v19 = DerivedStorage[2];
  if (v19)
  {
    dispatch_release(v19);
    DerivedStorage[2] = 0;
  }
  CMTime v20 = DerivedStorage[37];
  if (v20)
  {
    dispatch_release(v20);
    DerivedStorage[37] = 0;
  }
  uint64_t v21 = DerivedStorage[38];
  if (v21)
  {
    dispatch_release(v21);
    DerivedStorage[38] = 0;
  }
  unint64_t v22 = (const void *)DerivedStorage[35];
  if (v22)
  {
    CFRelease(v22);
    DerivedStorage[35] = 0;
  }
  dispatch_queue_t v23 = (const void *)DerivedStorage[27];
  if (v23)
  {
    CFRelease(v23);
    DerivedStorage[27] = 0;
  }
  return FigSimpleMutexDestroy();
}

__CFString *audioStream_CopyDebugDescription(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppendFormat(Mutable, 0, @"<APEndpointStreamBufferedAudio %p '%@'>", a1, *(void *)(DerivedStorage + 32));
  return Mutable;
}

uint64_t audioStream_CopyProperty(uint64_t a1, const void *a2, const __CFAllocator *a3, CFDictionaryRef *a4)
{
  keys[1] = *(void **)MEMORY[0x1E4F143B8];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef v42 = 0;
  CFTypeRef cf = 0;
  CFTypeRef v41 = 0;
  if (gLogCategory_APEndpointStreamBufferedAudio <= 30
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)DerivedStorage && !FigCFEqual() && !FigCFEqual())
  {
    APSLogErrorAt();
    CFTypeRef v10 = 0;
    uint64_t SupportedPCMFormatArray = 4294950534;
    goto LABEL_33;
  }
  if (!a4)
  {
    APSLogErrorAt();
    CFTypeRef v10 = 0;
    uint64_t SupportedPCMFormatArray = 4294950536;
    goto LABEL_33;
  }
  if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F49FE0]))
  {
    if (CFEqual(a2, @"IsTimelineEstablished"))
    {
      uint64_t v14 = (const void **)MEMORY[0x1E4F1CFD0];
      int v15 = *(unsigned __int8 *)(DerivedStorage + 224);
      goto LABEL_17;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21408]))
    {
      uint64_t v14 = (const void **)MEMORY[0x1E4F21470];
LABEL_30:
      StringCFDictionaryRef Value = *v14;
LABEL_31:
      StringCFDictionaryRef Value = CFRetain(StringValue);
LABEL_32:
      CFTypeRef v10 = 0;
      uint64_t SupportedPCMFormatArray = 0;
      *a4 = (CFDictionaryRef)StringValue;
      goto LABEL_33;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21370]))
    {
      uint64_t v14 = (const void **)MEMORY[0x1E4F1CFD0];
      int v15 = *(unsigned __int8 *)(DerivedStorage + 208);
      goto LABEL_17;
    }
    if (CFEqual(a2, @"IsPlaying"))
    {
      uint64_t v14 = (const void **)MEMORY[0x1E4F1CFD0];
      int v15 = *(unsigned __int8 *)(DerivedStorage + 209);
      goto LABEL_17;
    }
    if (CFEqual(a2, @"IsLocalStream"))
    {
LABEL_47:
      uint64_t v14 = (const void **)MEMORY[0x1E4F1CFC8];
      goto LABEL_30;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21358]))
    {
LABEL_49:
      uint64_t v14 = (const void **)MEMORY[0x1E4F1CFD0];
      goto LABEL_30;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F213C8]))
    {
      uint64_t SupportedPCMFormatArray = audioStream_createSupportedPCMFormatArray(a1, (uint64_t)a3, a4);
LABEL_52:
      CFTypeRef v10 = 0;
      goto LABEL_33;
    }
    if (CFEqual(a2, @"EndpointStreamShowInfo"))
    {
      StringCFDictionaryRef Value = audioStream_copyShowInfo();
      goto LABEL_32;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21368]))
    {
      StringCFDictionaryRef Value = *(const void **)(DerivedStorage + 40);
      goto LABEL_31;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F49F90]))
    {
      uint64_t Int64 = CFNumberCreateInt64();
      *a4 = (CFDictionaryRef)Int64;
      if (Int64) {
        goto LABEL_62;
      }
      goto LABEL_84;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F49FA8]))
    {
      StringCFDictionaryRef Value = (const void *)FigCFDictionaryGetStringValue();
      if (!StringValue) {
        goto LABEL_32;
      }
      goto LABEL_31;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F49FC0]))
    {
      StringCFDictionaryRef Value = (const void *)FigCFDictionaryGetBooleanValue();
      if (!StringValue) {
        goto LABEL_32;
      }
      goto LABEL_31;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F49FA0]) || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F49F98]))
    {
      StringCFDictionaryRef Value = (const void *)FigCFDictionaryGetNumberValue();
      if (!StringValue) {
        goto LABEL_32;
      }
      goto LABEL_31;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F49FD0]))
    {
      if (APSGetFBOPropertyInt64()
        || APEndpointDescriptionHasFeature(*(void *)(DerivedStorage + 80), 89))
      {
        goto LABEL_49;
      }
LABEL_79:
      uint64_t v21 = APSGetFBOPropertyInt64();
      uint64_t v14 = (const void **)MEMORY[0x1E4F1CFD0];
      if (!v21) {
        uint64_t v14 = (const void **)MEMORY[0x1E4F1CFC8];
      }
      goto LABEL_30;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F49FB8]) || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F4A000])) {
      goto LABEL_79;
    }
    if (CFEqual(a2, @"Manufacturer"))
    {
      uint64_t v22 = *(void *)(DerivedStorage + 80);
      dispatch_queue_t v23 = kAPEndpointDescriptionProperty_Manufacturer;
      goto LABEL_92;
    }
    if (CFEqual(a2, @"Model"))
    {
      uint64_t v22 = *(void *)(DerivedStorage + 80);
      dispatch_queue_t v23 = kAPEndpointDescriptionProperty_Model;
      goto LABEL_92;
    }
    if (CFEqual(a2, @"OSVersion"))
    {
      uint64_t v22 = *(void *)(DerivedStorage + 80);
      dispatch_queue_t v23 = kAPEndpointDescriptionProperty_OSVersion;
      goto LABEL_92;
    }
    if (CFEqual(a2, @"OSBuildVersion"))
    {
      uint64_t v22 = *(void *)(DerivedStorage + 80);
      dispatch_queue_t v23 = kAPEndpointDescriptionProperty_OSBuildVersion;
LABEL_92:
      if (APEndpointDescriptionCopyProperty(v22, (uint64_t)*v23, (uint64_t)a3, (uint64_t)a4))
      {
        CFTypeRef v10 = 0;
        uint64_t SupportedPCMFormatArray = 0;
        *a4 = 0;
        goto LABEL_33;
      }
      goto LABEL_62;
    }
    if (CFEqual(a2, @"StreamID"))
    {
      uint64_t v24 = CFNumberCreateInt64();
      *a4 = (CFDictionaryRef)v24;
      if (v24) {
        goto LABEL_62;
      }
      goto LABEL_84;
    }
    if (FigCFEqual())
    {
      MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
      APSAudioFormatDescriptionListGetMaxChannelCount();
      MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
      goto LABEL_99;
    }
    if (CFEqual(a2, @"SupportedAPAudioFormats"))
    {
      MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
      uint64_t valuePtr = APSAudioFormatDescriptionListGetLegacyFormatMask();
      MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
      CFNumberRef v25 = CFNumberCreate(a3, kCFNumberSInt64Type, &valuePtr);
      *a4 = v25;
      if (v25)
      {
        uint64_t SupportedPCMFormatArray = 0;
      }
      else
      {
        APSLogErrorAt();
        uint64_t SupportedPCMFormatArray = 4294950535;
      }
      goto LABEL_52;
    }
    if (CFEqual(a2, @"SupportedAudioFormatList"))
    {
      MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
      APSAudioFormatDescriptionListGetForBufferedSender();
      uint64_t IntersectionList = APSAudioFormatDescriptionListCreateIntersectionList();
      MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
      if (!IntersectionList)
      {
        StringCFDictionaryRef Value = cf;
        goto LABEL_32;
      }
      uint64_t SupportedPCMFormatArray = IntersectionList;
      goto LABEL_145;
    }
    if (FigCFEqual())
    {
      MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
      APSAudioFormatDescriptionListGetForBufferedSender();
      uint64_t v27 = APSAudioFormatDescriptionListCreateIntersectionList();
      MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
      if (v27)
      {
        uint64_t SupportedPCMFormatArray = v27;
      }
      else
      {
        uint64_t FigEndpointStreamAudioFormatDescriptionArray = APSAudioFormatDescriptionListCreateFigEndpointStreamAudioFormatDescriptionArray();
        if (!FigEndpointStreamAudioFormatDescriptionArray)
        {
          StringCFDictionaryRef Value = v42;
          goto LABEL_32;
        }
        uint64_t SupportedPCMFormatArray = FigEndpointStreamAudioFormatDescriptionArray;
      }
      goto LABEL_145;
    }
    if (FigCFEqual())
    {
      MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
      APSAudioFormatDescriptionListGetForBufferedSender();
      uint64_t v29 = APSAudioFormatDescriptionListCreateIntersectionList();
      MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
      if (v29)
      {
        uint64_t SupportedPCMFormatArray = v29;
      }
      else
      {
        uint64_t SupportedPCMFormatArray = APSAudioFormatDescriptionListCopyRichestFormatAsFigEndpointStreamAudioFormatDescription();
        if (!SupportedPCMFormatArray)
        {
          CFTypeRef v10 = 0;
          *a4 = (CFDictionaryRef)v41;
          CFTypeRef v41 = 0;
          goto LABEL_33;
        }
      }
      goto LABEL_145;
    }
    if (FigCFEqual())
    {
      uint64_t SupportedPCMFormatArray = audioStream_copySupportedAudioCapabilities(a1, a4);
      if (!SupportedPCMFormatArray) {
        goto LABEL_52;
      }
LABEL_145:
      APSLogErrorAt();
      goto LABEL_52;
    }
    if (FigCFEqual())
    {
      MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
      CFTypeRef v30 = *(CFTypeRef *)(DerivedStorage + 280);
      if (v30) {
        CFTypeRef v30 = CFRetain(v30);
      }
      *a4 = (CFDictionaryRef)v30;
      MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
      goto LABEL_62;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F49FE8]))
    {
      StringCFDictionaryRef Value = *(const void **)(DerivedStorage + 32);
      if (!StringValue) {
        goto LABEL_32;
      }
      goto LABEL_31;
    }
    if (CFEqual(a2, @"RTCStats"))
    {
      CFAllocatorRef v31 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
      keys[0] = @"sessionType";
      values = @"AudioBuffered";
      CFDictionaryRef v32 = CFDictionaryCreate(v31, (const void **)keys, (const void **)&values, 1, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      CFTypeRef v10 = v32;
      if (!v32)
      {
        APSLogErrorAt();
        goto LABEL_85;
      }
      int v44 = v32;
      CFArrayRef v33 = CFArrayCreate(v31, (const void **)&v44, 1, MEMORY[0x1E4F1D510]);
      CFRelease(v10);
      if (v33)
      {
        CFTypeRef v10 = 0;
        uint64_t SupportedPCMFormatArray = 0;
        *a4 = v33;
        goto LABEL_33;
      }
LABEL_84:
      APSLogErrorAt();
      CFTypeRef v10 = 0;
LABEL_85:
      uint64_t SupportedPCMFormatArray = 4294950535;
      goto LABEL_33;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21328]))
    {
      uint64_t SupportedPCMFormatArray = APAudioEngineVendorVend(*(void **)(DerivedStorage + 72), (uint64_t)a4);
      if (!SupportedPCMFormatArray) {
        goto LABEL_52;
      }
      goto LABEL_145;
    }
    if (CFEqual(a2, @"HoseRegistrar"))
    {
      StringCFDictionaryRef Value = *(const void **)(DerivedStorage + 248);
      if (!StringValue) {
        goto LABEL_32;
      }
      goto LABEL_31;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F49FF8]))
    {
      uint64_t v34 = *(void *)(DerivedStorage + 80);
      int v35 = kAPEndpointDescriptionProperty_SupportsReceiverChoosesAnchor;
      goto LABEL_142;
    }
    if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F213E0]))
    {
      uint64_t v34 = *(void *)(DerivedStorage + 80);
      int v35 = kAPEndpointDescriptionProperty_SupportsReceiverSideSoundCheck;
      goto LABEL_142;
    }
    if (CFEqual(a2, @"SupportAPAP"))
    {
      uint64_t v14 = (const void **)MEMORY[0x1E4F1CFD0];
      int v15 = *(unsigned __int8 *)(DerivedStorage + 96);
    }
    else
    {
      if (CFEqual(a2, @"EndpointIDs"))
      {
        uint64_t v37 = *(void *)(DerivedStorage + 48);
        unsigned int v36 = (const void **)(DerivedStorage + 48);
        if (v37)
        {
          CFDictionaryRef v38 = CFArrayCreate(a3, v36, 1, MEMORY[0x1E4F1D510]);
        }
        else
        {
          Empty = (const void *)APSCFArrayGetEmpty();
          CFDictionaryRef v38 = (const __CFDictionary *)CFRetain(Empty);
        }
        *a4 = v38;
        if (v38) {
          goto LABEL_62;
        }
        goto LABEL_84;
      }
      if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F213D8]))
      {
        if (!APSSettingsIsFeatureEnabled()) {
          goto LABEL_47;
        }
        uint64_t v34 = *(void *)(DerivedStorage + 80);
        int v35 = kAPEndpointDescriptionProperty_SupportsMixedSampleRates;
LABEL_142:
        if (APEndpointDescriptionCopyProperty(v34, (uint64_t)*v35, (uint64_t)a3, (uint64_t)a4)) {
          goto LABEL_47;
        }
LABEL_62:
        CFTypeRef v10 = 0;
        uint64_t SupportedPCMFormatArray = 0;
        goto LABEL_33;
      }
      if (!CFEqual(a2, @"IsSidePlayStream"))
      {
        if (!CFEqual(a2, @"NumberOfSubStreams"))
        {
          if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21320]))
          {
            if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F213B0]))
            {
              if (gLogCategory_APEndpointStreamBufferedAudio <= 30
                && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              CFTypeRef v10 = 0;
              uint64_t SupportedPCMFormatArray = 4294954512;
              goto LABEL_33;
            }
            uint64_t v14 = (const void **)MEMORY[0x1E4F21430];
            goto LABEL_30;
          }
          goto LABEL_49;
        }
LABEL_99:
        StringCFDictionaryRef Value = (const void *)FigCFNumberCreateUInt32();
        goto LABEL_32;
      }
      uint64_t v14 = (const void **)MEMORY[0x1E4F1CFD0];
      int v15 = *(unsigned __int8 *)(DerivedStorage + 115);
    }
LABEL_17:
    if (!v15) {
      uint64_t v14 = (const void **)MEMORY[0x1E4F1CFC8];
    }
    goto LABEL_30;
  }
  if (*(unsigned char *)(DerivedStorage + 114))
  {
    CFTypeRef v10 = 0;
    uint64_t SupportedPCMFormatArray = 4294954509;
    goto LABEL_33;
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
  uint64_t v9 = *(const void **)(DerivedStorage + 192);
  if (!v9)
  {
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
    CFTypeRef v10 = 0;
    goto LABEL_21;
  }
  CFTypeRef v10 = CFRetain(v9);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
  if (!v10)
  {
LABEL_21:
    uint64_t SupportedPCMFormatArray = 4294954513;
    goto LABEL_33;
  }
  uint64_t CMBaseObject = FigTransportStreamGetCMBaseObject();
  uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v12) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  CFTypeID v17 = *(uint64_t (**)(uint64_t, void, void, CFDictionaryRef *))(v13 + 48);
  if (v17)
  {
    uint64_t SupportedPCMFormatArray = v17(CMBaseObject, *MEMORY[0x1E4F47740], *MEMORY[0x1E4F1CF80], a4);
    if (!SupportedPCMFormatArray) {
      goto LABEL_33;
    }
  }
  else
  {
    uint64_t SupportedPCMFormatArray = 4294954514;
  }
  APSLogErrorAt();
LABEL_33:
  if (cf) {
    CFRelease(cf);
  }
  if (v42) {
    CFRelease(v42);
  }
  if (v10) {
    CFRelease(v10);
  }
  if (v41) {
    CFRelease(v41);
  }
  return SupportedPCMFormatArray;
}

uint64_t audioStream_SetProperty(const void *a1, uint64_t a2, const void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamBufferedAudio <= 30
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)DerivedStorage)
  {
    APSLogErrorAt();
    return 4294950534;
  }
  if (FigCFEqual() || FigCFEqual())
  {
    if (a3)
    {
      CFTypeID v6 = CFGetTypeID(a3);
      if (v6 == CFBooleanGetTypeID())
      {
        MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
        if (*(unsigned char *)(DerivedStorage + 208))
        {
          int Value = CFBooleanGetValue((CFBooleanRef)a3);
          if (*(unsigned __int8 *)(DerivedStorage + 224) != Value)
          {
            *(unsigned char *)(DerivedStorage + 224) = Value;
            if (Value)
            {
              CMNotificationCenterGetDefaultLocalCenter();
              FigDispatchAsyncPostNotification();
            }
          }
          uint64_t v8 = 0;
        }
        else
        {
          uint64_t v8 = APSSignalErrorAt();
        }
        MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
        return v8;
      }
    }
LABEL_41:
    APSLogErrorAt();
    return 4294950536;
  }
  if (FigCFEqual())
  {
    if (!a3) {
      goto LABEL_41;
    }
    CFTypeID v10 = CFGetTypeID(a3);
    if (v10 != CFStringGetTypeID()) {
      goto LABEL_41;
    }
    CMBaseObjectGetDerivedStorage();
    if (a1) {
      CFRetain(a1);
    }
    CFRetain(a3);
    APSDispatchAsyncFHelper();
    return 0;
  }
  if (FigCFEqual())
  {
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
    uint64_t v11 = *(const void **)(DerivedStorage + 264);
    *(void *)(DerivedStorage + 264) = a3;
    if (a3) {
      CFRetain(a3);
    }
    if (v11) {
      CFRelease(v11);
    }
LABEL_29:
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
    return 0;
  }
  if (FigCFEqual() || FigCFEqual()) {
    return 0;
  }
  if (FigCFEqual())
  {
    if (!a3) {
      goto LABEL_41;
    }
    CFTypeID v12 = CFGetTypeID(a3);
    if (v12 != CFStringGetTypeID()) {
      goto LABEL_41;
    }
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
    audioStream_updateBadgingFormatInfoAndPostNotification((uint64_t)a1, a3);
    goto LABEL_29;
  }
  if (FigCFEqual())
  {
    if (!a3) {
      goto LABEL_41;
    }
    CFTypeID v13 = CFGetTypeID(a3);
    if (v13 != CFBooleanGetTypeID()) {
      goto LABEL_41;
    }
    int v14 = CFBooleanGetValue((CFBooleanRef)a3);
    audioStream_setIsCritical((uint64_t)a1, v14);
    return 0;
  }
  if (FigCFEqual())
  {
    if (!a3) {
      goto LABEL_41;
    }
    CFTypeID v15 = CFGetTypeID(a3);
    if (v15 != CFBooleanGetTypeID()) {
      goto LABEL_41;
    }
    CFBooleanGetValue((CFBooleanRef)a3);
    audioStream_setEchoCancellationIsEnabled(a1);
    return 0;
  }
  if (gLogCategory_APEndpointStreamBufferedAudio <= 30
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 4294954512;
}

unsigned char *audioStream_dissociateInternal()
{
  uint64_t result = (unsigned char *)CMBaseObjectGetDerivedStorage();
  if (!*result)
  {
    CFArrayRef v1 = result;
    audioStream_invalidateTransportMDCStream();
    APSDispatchSyncTask();
    APSDispatchSyncFlush();
    audioStream_invalidateTransportAudioDataStream();
    MEMORY[0x1D25EB370](v1[21]);
    CFTypeID v2 = (const void *)v1[24];
    if (v2)
    {
      CFRelease(v2);
      v1[24] = 0;
    }
    int v3 = (const void *)v1[25];
    if (v3)
    {
      CFRelease(v3);
      v1[25] = 0;
    }
    double v4 = (const void *)v1[29];
    if (v4)
    {
      CFRelease(v4);
      v1[29] = 0;
    }
    uint64_t v5 = (const void *)v1[33];
    if (v5)
    {
      CFRelease(v5);
      v1[33] = 0;
    }
    uint64_t result = (unsigned char *)MEMORY[0x1D25EB390](v1[21]);
    if (v1[1])
    {
      CMNotificationCenterGetDefaultLocalCenter();
      return (unsigned char *)FigDispatchAsyncPostNotification();
    }
  }
  return result;
}

void audioStream_invalidateTransportMDCStream()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
  CFArrayRef v1 = *(const void **)(DerivedStorage + 200);
  if (!v1)
  {
    JUMPOUT(0x1D25EB390);
  }
  CFTypeRef v2 = CFRetain(v1);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
  if (v2)
  {
    uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v3) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    uint64_t v5 = *(void (**)(CFTypeRef, void, void, void))(v4 + 24);
    if (v5) {
      v5(v2, 0, 0, 0);
    }
    uint64_t CMBaseObject = FigTransportStreamGetCMBaseObject();
    if (CMBaseObject)
    {
      uint64_t v7 = CMBaseObject;
      uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v9 = v8 ? v8 : 0;
      CFTypeID v10 = *(void (**)(uint64_t))(v9 + 24);
      if (v10) {
        v10(v7);
      }
    }
    CFRelease(v2);
  }
}

uint64_t audioStream_suspendAndDissociateInternal(uint64_t a1)
{
  uint64_t DerivedStorage = (unsigned char *)CMBaseObjectGetDerivedStorage();
  audioStream_suspendInternal(a1, 0);
  *uint64_t DerivedStorage = 1;
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 0;
}

void audioStream_invalidateTransportAudioDataStream()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
  CFArrayRef v1 = *(const void **)(DerivedStorage + 192);
  if (!v1)
  {
    JUMPOUT(0x1D25EB390);
  }
  CFTypeRef v2 = CFRetain(v1);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
  if (v2)
  {
    uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v3) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    uint64_t v5 = *(void (**)(CFTypeRef, void, void, void))(v4 + 24);
    if (v5) {
      v5(v2, 0, 0, 0);
    }
    int IsFeatureEnabled = APSSettingsIsFeatureEnabled();
    uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (IsFeatureEnabled)
    {
      if (v7) {
        uint64_t v8 = v7;
      }
      else {
        uint64_t v8 = 0;
      }
      CFTypeID v10 = *(void (**)(CFTypeRef, void, void))(v8 + 104);
      if (!v10) {
        goto LABEL_23;
      }
    }
    else
    {
      if (v7) {
        uint64_t v9 = v7;
      }
      else {
        uint64_t v9 = 0;
      }
      CFTypeID v10 = *(void (**)(CFTypeRef, void, void))(v9 + 64);
      if (!v10) {
        goto LABEL_23;
      }
    }
    v10(v2, 0, 0);
LABEL_23:
    uint64_t CMBaseObject = FigTransportStreamGetCMBaseObject();
    if (CMBaseObject)
    {
      uint64_t v12 = CMBaseObject;
      uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v14 = v13 ? v13 : 0;
      CFTypeID v15 = *(void (**)(uint64_t))(v14 + 24);
      if (v15) {
        v15(v12);
      }
    }
    CFRelease(v2);
  }
}

uint64_t FigTransportStreamSetMessageCallbacks(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t))(v7 + 24);
  if (!v8) {
    return 4294954514;
  }
  return v8(a1, a2, 0, a3);
}

uint64_t audioStream_suspendInternal(uint64_t a1, const __CFDictionary *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)DerivedStorage) {
    return 0;
  }
  if (APSGetFBOPropertyInt64())
  {
    uint64_t v5 = *(void *)(DerivedStorage + 320);
    if (v5)
    {
      APCarPlayAnalyticsStopCollections(v5);
      APCarPlayAnalyticsSubmitToCarPlay(*(NSObject ***)(DerivedStorage + 320));
    }
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
  }
  uint64_t v6 = CMBaseObjectGetDerivedStorage();
  if (!*(unsigned char *)v6)
  {
    uint64_t v7 = v6;
    if (*(unsigned char *)(v6 + 208))
    {
      if (*(void *)(v6 + 312))
      {
        if (APSThreadSafeDictionaryCopyValueIfPresent()
          && APSThreadSafeDictionaryGetInt64IfPresent())
        {
          APSThreadSafeDictionaryGetInt32IfPresent();
          mach_absolute_time();
          UpTicksToSeconds();
          APSThreadSafeDictionarySetInt32();
          APSThreadSafeDictionaryRemoveValue();
        }
        uint64_t v8 = *(const void **)(v7 + 312);
        if (v8)
        {
          CFRelease(v8);
          *(void *)(v7 + 312) = 0;
        }
      }
    }
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
  uint64_t v9 = *(const void **)(DerivedStorage + 248);
  if (v9) {
    CFTypeRef v10 = CFRetain(v9);
  }
  else {
    CFTypeRef v10 = 0;
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
  if (a2)
  {
    int Value = CFDictionaryGetValue(a2, @"HoseRegistrar");
    if (v10)
    {
      if (Value && !CFEqual(v10, Value))
      {
        if (gLogCategory_APEndpointStreamBufferedAudio <= 50
          && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t v29 = 0;
        goto LABEL_57;
      }
    }
  }
  if (*(void *)(DerivedStorage + 120))
  {
    FigPKDStopAirPlaySenderSession();
    *(void *)(DerivedStorage + 120) = 0;
    uint64_t v12 = *(const void **)(DerivedStorage + 128);
    if (v12)
    {
      CFRelease(v12);
      *(void *)(DerivedStorage + 128) = 0;
    }
  }
  uint64_t v13 = *(const void **)(DerivedStorage + 136);
  if (v13)
  {
    CFRelease(v13);
    *(void *)(DerivedStorage + 136) = 0;
  }
  uint64_t v14 = *(const void **)(DerivedStorage + 144);
  if (v14)
  {
    CFRelease(v14);
    *(void *)(DerivedStorage + 144) = 0;
  }
  CFTypeID v15 = *(const void **)(DerivedStorage + 152);
  if (v15)
  {
    CFRelease(v15);
    *(void *)(DerivedStorage + 152) = 0;
  }
  audioStream_invalidateTransportMDCStream();
  audioStream_invalidateTransportAudioDataStream();
  APSEndpointStreamAudioHoseRegistrarProtocolGetProtocolID();
  Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
  if (ProtocolVTable)
  {
    uint64_t v17 = *(void *)(ProtocolVTable + 16);
    if (v17)
    {
      uint64_t v18 = *(void (**)(CFTypeRef, uint64_t, void))(v17 + 16);
      if (v18) {
        v18(v10, a1, 0);
      }
    }
  }
  if (*(unsigned char *)(DerivedStorage + 274))
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 1, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (!Mutable)
    {
      APSLogErrorAt();
      uint64_t v29 = 4294950535;
      if (!v10) {
        return v29;
      }
      goto LABEL_57;
    }
    CFMutableDictionaryRef v20 = Mutable;
    CFDictionarySetInt64();
    uint64_t v21 = *(void *)(DerivedStorage + 88);
    uint64_t v22 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v22) {
      uint64_t v23 = v22;
    }
    else {
      uint64_t v23 = 0;
    }
    uint64_t v24 = *(void (**)(uint64_t, uint64_t, CFMutableDictionaryRef))(v23 + 48);
    if (v24) {
      v24(v21, 103, v20);
    }
  }
  else
  {
    CFMutableDictionaryRef v20 = 0;
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
  *(void *)(DerivedStorage + 176) = 0;
  *(unsigned char *)(DerivedStorage + 274) = 0;
  CFNumberRef v25 = *(const void **)(DerivedStorage + 192);
  if (v25)
  {
    CFRelease(v25);
    *(void *)(DerivedStorage + 192) = 0;
  }
  uint64_t v26 = *(const void **)(DerivedStorage + 200);
  if (v26)
  {
    CFRelease(v26);
    *(void *)(DerivedStorage + 200) = 0;
  }
  *(unsigned char *)(DerivedStorage + 208) = 0;
  *(unsigned char *)(DerivedStorage + 224) = 0;
  uint64_t v27 = *(const void **)(DerivedStorage + 232);
  if (v27)
  {
    CFRelease(v27);
    *(void *)(DerivedStorage + 232) = 0;
  }
  int v28 = *(const void **)(DerivedStorage + 248);
  if (v28)
  {
    CFRelease(v28);
    *(void *)(DerivedStorage + 248) = 0;
  }
  *(void *)(DerivedStorage + 288) = 0;
  audioStream_updateIsPlayingAndPostNotification(a1, 0);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
  APSEventRecorderRecordEvent();
  CMNotificationCenterGetDefaultLocalCenter();
  FigDispatchAsyncPostNotification();
  if (v20) {
    CFRelease(v20);
  }
  uint64_t v29 = 0;
  if (v10) {
LABEL_57:
  }
    CFRelease(v10);
  return v29;
}

uint64_t audioStream_handleFeedbackReceivedNotification(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t result = APCarPlayAnalyticsCollectFromFeedbackResponse(*(void **)(DerivedStorage + 320), a5, 0);
  if (result)
  {
    if (gLogCategory_APEndpointStreamBufferedAudio <= 60)
    {
      if (gLogCategory_APEndpointStreamBufferedAudio != -1) {
        return LogPrintF();
      }
      uint64_t result = _LogCategory_Initialize();
      if (result) {
        return LogPrintF();
      }
    }
  }
  return result;
}

void audioStream_updateIsPlayingAndPostNotification(uint64_t a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned __int8 *)(DerivedStorage + 209) != a2)
  {
    uint64_t v5 = DerivedStorage;
    APEndpointStreamUpdateNowPlayingTransaction(a1, a2, &gLogCategory_APEndpointStreamBufferedAudio, (const void **)(DerivedStorage + 216));
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    uint64_t v7 = Mutable;
    uint64_t v8 = (const void **)MEMORY[0x1E4F1CFC8];
    if (a2) {
      uint64_t v8 = (const void **)MEMORY[0x1E4F1CFD0];
    }
    CFDictionarySetValue(Mutable, @"IsPlaying", *v8);
    *(unsigned char *)(v5 + 209) = a2;
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
    CFRelease(v7);
  }
}

uint64_t FigTransportStreamSetReadyToSendBatchCallback(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 104);
  if (!v8) {
    return 4294954514;
  }
  return v8(a1, a2, a3);
}

uint64_t FigTransportStreamSetReadyToSendCallback(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 64);
  if (!v8) {
    return 4294954514;
  }
  return v8(a1, a2, a3);
}

uint64_t audioStream_createSupportedPCMFormatArray(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
  uint64_t ASRDArrayPCM = APSAudioFormatDescriptionListCreateASRDArrayPCM();
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
  if (ASRDArrayPCM)
  {
    APSLogErrorAt();
  }
  else if (a3)
  {
    *a3 = 0;
  }
  return ASRDArrayPCM;
}

__CFDictionary *audioStream_copyShowInfo()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  CFTypeRef v2 = Mutable;
  uint64_t v3 = (const void **)MEMORY[0x1E4F1CFD0];
  if (!*(unsigned char *)(DerivedStorage + 208)) {
    uint64_t v3 = (const void **)MEMORY[0x1E4F1CFC8];
  }
  CFDictionarySetValue(Mutable, @"Resumed", *v3);
  CFDictionarySetValue(v2, @"Type", (const void *)*MEMORY[0x1E4F21470]);
  CFDictionarySetValue(v2, @"Name", *(const void **)(DerivedStorage + 32));
  return v2;
}

uint64_t APEndpointDescriptionHasFeature(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 16);
  if (!v6) {
    return 0;
  }
  return v6(a1, a2);
}

uint64_t audioStream_copySupportedAudioCapabilities(uint64_t a1, CFDictionaryRef *a2)
{
  keys[1] = *(void **)MEMORY[0x1E4F143B8];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
  uint64_t FilteredListWithTranscodeFormats = APSAudioFormatDescriptionListCreateFilteredListWithTranscodeFormats();
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
  if (FilteredListWithTranscodeFormats) {
    goto LABEL_13;
  }
  uint64_t v5 = APSAudioFormatDescriptionListCopyChannelLayoutTags();
  if (v5)
  {
    uint64_t FilteredListWithTranscodeFormats = v5;
LABEL_13:
    APSLogErrorAt();
    return FilteredListWithTranscodeFormats;
  }
  uint64_t v6 = (void *)FigCFDictionaryCopyArrayOfValues();
  CFAllocatorRef v7 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  uint64_t v8 = (void *)*MEMORY[0x1E4F21460];
  values = v6;
  keys[0] = v8;
  CFDictionaryRef v9 = CFDictionaryCreate(v7, (const void **)keys, (const void **)&values, 1, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!v9)
  {
    APSLogErrorAt();
    uint64_t FilteredListWithTranscodeFormats = 4294951816;
    if (!v6) {
      return FilteredListWithTranscodeFormats;
    }
    goto LABEL_9;
  }
  CFDictionaryRef v10 = v9;
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t FilteredListWithTranscodeFormats = 0;
  *a2 = v10;
  if (v6) {
LABEL_9:
  }
    CFRelease(v6);
  return FilteredListWithTranscodeFormats;
}

void audioStream_updateBadgingFormatInfoAndPostNotification(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2) {
    goto LABEL_13;
  }
  uint64_t v4 = DerivedStorage;
  if (FigCFEqual()) {
    return;
  }
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    uint64_t v6 = Mutable;
    CFDictionarySetValue(Mutable, @"ActiveBadgingFormatInfo", a2);
    CFAllocatorRef v7 = *(const void **)(v4 + 280);
    *(void *)(v4 + 280) = a2;
    CFRetain(a2);
    if (v7) {
      CFRelease(v7);
    }
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
    CFRelease(v6);
  }
  else
  {
LABEL_13:
    APSLogErrorAt();
  }
}

uint64_t audioStream_setIsCritical(uint64_t a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
  if (*(unsigned __int8 *)(DerivedStorage + 272) != a2)
  {
    uint64_t v4 = *(const void **)(DerivedStorage + 192);
    if (v4)
    {
      if (gLogCategory_APEndpointStreamBufferedAudio >= 51)
      {
        *(unsigned char *)(DerivedStorage + 272) = a2;
      }
      else
      {
        if (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()) {
          LogPrintF();
        }
        uint64_t v4 = *(const void **)(DerivedStorage + 192);
        *(unsigned char *)(DerivedStorage + 272) = a2;
        if (!v4) {
          goto LABEL_10;
        }
      }
      CFRetain(v4);
LABEL_10:
      APSDispatchAsyncFHelper();
    }
  }
  return MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
}

uint64_t audioStream_setEchoCancellationIsEnabled(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
  if (a1) {
    CFRetain(a1);
  }
  APSDispatchAsyncFHelper();
  return MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
}

void audioStream_setAudioModeInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v3 = *(const void **)(DerivedStorage + 104);
  uint64_t v4 = *(const void **)(a1 + 8);
  *(void *)(DerivedStorage + 104) = v4;
  if (v4) {
    CFRetain(v4);
  }
  if (v3) {
    CFRelease(v3);
  }
  AudioModeForEndpointStreaCFIndex m = APSenderSessionUtilityGetAudioModeForEndpointStream();
  if (*(unsigned char *)(DerivedStorage + 208))
  {
    uint64_t v6 = AudioModeForEndpointStream;
    RequestDictionary = audioStream_createRequestDictionary(*(CFMutableDictionaryRef *)a1);
    if (RequestDictionary)
    {
      uint64_t v8 = RequestDictionary;
      CFDictionarySetValue(RequestDictionary, @"audioMode", v6);
      if (*(unsigned char *)(DerivedStorage + 113))
      {
        CFDictionaryRef v9 = *(const void **)(DerivedStorage + 200);
        if (v9)
        {
          CFTypeRef v10 = CFRetain(v9);
          if (v10)
          {
            uint64_t v11 = v10;
            if (APTransportStreamSendPlistMessageCreatingPlistReply()) {
              APSLogErrorAt();
            }
            CFRelease(v11);
            goto LABEL_20;
          }
        }
      }
      else
      {
        uint64_t v12 = *(void *)(DerivedStorage + 88);
        uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v13) {
          uint64_t v14 = v13;
        }
        else {
          uint64_t v14 = 0;
        }
        CFTypeID v15 = *(unsigned int (**)(uint64_t, __CFDictionary *))(v14 + 88);
        if (v15 && !v15(v12, v8)) {
          goto LABEL_20;
        }
      }
      APSLogErrorAt();
LABEL_20:
      CFRelease(v8);
      goto LABEL_21;
    }
    APSLogErrorAt();
  }
LABEL_21:
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
  uint64_t v16 = *(const void **)(a1 + 8);
  if (v16)
  {
    CFRelease(v16);
  }
}

CFMutableDictionaryRef audioStream_createRequestDictionary(CFMutableDictionaryRef Mutable)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (Mutable
    && (uint64_t v3 = DerivedStorage,
        (CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540])) != 0))
  {
    if (*(unsigned char *)(v3 + 115)) {
      CFDictionarySetInt64();
    }
  }
  else
  {
    APSLogErrorAt();
  }
  return Mutable;
}

void audioStream_setIsCriticalInternal(uint64_t a1)
{
  if (*(unsigned char *)a1) {
    APSSetFBOPropertyInt64();
  }
  APSSetFBOPropertyInt64();
  CFTypeRef v2 = *(const void **)(a1 + 8);
  if (v2)
  {
    CFRelease(v2);
  }
}

void audioStream_setEchoCancellationIsEnabledInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)DerivedStorage) {
    goto LABEL_22;
  }
  if (*(unsigned char *)(DerivedStorage + 113))
  {
    uint64_t v3 = *(const void **)(DerivedStorage + 200);
    if (!v3)
    {
      CFTypeRef cf = 0;
LABEL_22:
      APSLogErrorAt();
      CFDictionaryRef v9 = 0;
      goto LABEL_23;
    }
    CFTypeRef cf = CFRetain(v3);
    if (!cf) {
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t CMBaseObject = APSenderSessionGetCMBaseObject(*(void *)(DerivedStorage + 88));
    uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v5) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = 0;
    }
    CFAllocatorRef v7 = *(unsigned int (**)(uint64_t, __CFString *, void, CFTypeRef *))(v6 + 48);
    if (!v7 || v7(CMBaseObject, @"TransportControlStream", *MEMORY[0x1E4F1CF80], &cf)) {
      goto LABEL_22;
    }
  }
  RequestDictionary = audioStream_createRequestDictionary(*(CFMutableDictionaryRef *)a1);
  CFDictionaryRef v9 = RequestDictionary;
  if (RequestDictionary)
  {
    CFTypeRef v10 = (const void **)MEMORY[0x1E4F1CFD0];
    if (!*(unsigned char *)(a1 + 8)) {
      CFTypeRef v10 = (const void **)MEMORY[0x1E4F1CFC8];
    }
    CFDictionarySetValue(RequestDictionary, @"MuteForStream", *v10);
    mach_absolute_time();
    APTransportStreamSendPlistMessageCreatingPlistReply();
    mach_absolute_time();
    if (gLogCategory_APEndpointStreamBufferedAudio <= 50
      && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
    {
      UpTicksToMilliseconds();
      LogPrintF();
    }
  }
  else
  {
    APSLogErrorAt();
  }
LABEL_23:
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
  if (v9) {
    CFRelease(v9);
  }
  if (cf) {
    CFRelease(cf);
  }
}

__CFString *audioStream_audioHoseBufferedProtocolCopyDebugDescription(uint64_t a1)
{
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppendFormat(Mutable, 0, @"APEndpointStreamBuffered <APEndpointStreamBufferedHoseStreamingProtocol> on <%p>", a1);
  return Mutable;
}

uint64_t audioStream_audioHoseFlush(const void *a1)
{
  if (a1) {
    CFRetain(a1);
  }
  APSDispatchAsyncFHelper();
  return 0;
}

uint64_t audioStream_audioHoseFlushWithinSampleRange(const void *a1)
{
  if (a1) {
    CFRetain(a1);
  }
  APSDispatchAsyncFHelper();
  return 0;
}

uint64_t audioStream_audioHoseNotifyAudioAvailable(const void *a1)
{
  uint64_t v1 = audioStream_audioHoseNotifyAudioAvailableInternal(a1);
  if (v1) {
    APSLogErrorAt();
  }
  return v1;
}

uint64_t audioStream_audioHoseSetRateAndAnchorTime(const void *a1)
{
  if (a1) {
    CFRetain(a1);
  }
  APSDispatchAsyncFHelper();
  return 0;
}

uint64_t audioStream_audioHoseApplyVolumeFade(const void *a1, int a2, CMTime *a3)
{
  CMBaseObjectGetDerivedStorage();
  *(void *)&v13[4] = 0;
  if ((a2 - 3) <= 0xFFFFFFFD)
  {
    uint64_t v6 = 4294894965;
LABEL_9:
    APSLogErrorAt();
    return v6;
  }
  CMTime time1 = *a3;
  CMTime v8 = *(CMTime *)*(void *)&MEMORY[0x1E4F1FA48];
  if (CMTimeCompare(&time1, &v8) <= 0)
  {
    uint64_t v6 = 4294894965;
    goto LABEL_9;
  }
  CFTypeRef v10 = a1;
  int v11 = a2;
  long long v12 = *(_OWORD *)&a3->value;
  *(void *)uint64_t v13 = a3->epoch;
  if (a1) {
    CFRetain(a1);
  }
  APSDispatchAsyncFHelper();
  return 0;
}

uint64_t audioStream_audioHoseSetRate(const void *a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a1) {
    CFRetain(a1);
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
  if (a2 == 1) {
    ++*(void *)(DerivedStorage + 288);
  }
  APSDispatchAsyncFHelper();
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
  return 0;
}

uint64_t audioStream_audioHoseGetAnchor(const void *a1)
{
  if (a1) {
    CFRetain(a1);
  }
  APSDispatchAsyncFHelper();
  return 0;
}

uint64_t audioStream_audioHoseSetCryptor(const void *a1, uint64_t a2, const void *a3)
{
  if (a3) {
    CFRetain(a3);
  }
  if (a1) {
    CFRetain(a1);
  }
  APSDispatchAsyncFHelper();
  return 0;
}

uint64_t audioStream_audioHoseSetMagicCookie(const void *a1, uint64_t a2, const void *a3)
{
  if (a3) {
    CFRetain(a3);
  }
  if (a1) {
    CFRetain(a1);
  }
  APSDispatchAsyncFHelper();
  return 0;
}

uint64_t audioStream_audioHoseEnableLoudnessNormalization(const void *a1)
{
  if (a1) {
    CFRetain(a1);
  }
  APSDispatchAsyncFHelper();
  return 0;
}

uint64_t audioStream_audioHoseEnableMATAtmosPlayback(const void *a1)
{
  if (a1) {
    CFRetain(a1);
  }
  APSDispatchAsyncFHelper();
  return 0;
}

void audioStream_audioHoseFlushInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  v19[0] = *(_OWORD *)(a1 + 12);
  *(_OWORD *)((char *)v19 + 12) = *(_OWORD *)(a1 + 24);
  uint64_t v3 = (const void *)APSAudioTransportTimeCopyDebugDesc();
  CFTypeRef cf = 0;
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v4 = (_OWORD *)(a1 + 12);
  if (*(unsigned char *)DerivedStorage)
  {
    APSLogErrorAt();
    CFMutableDictionaryRef RequestDictionary = 0;
    uint64_t v11 = 4294950534;
    goto LABEL_26;
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
  uint64_t v5 = *(const void **)(DerivedStorage + 232);
  if (v5)
  {
    CFRelease(v5);
    *(void *)(DerivedStorage + 232) = 0;
  }
  audioStream_updateIsPlayingAndPostNotification(*(void *)a1, 0);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
  if (*(unsigned char *)(DerivedStorage + 113))
  {
    uint64_t v6 = *(const void **)(DerivedStorage + 200);
    if (!v6)
    {
      CFTypeRef cf = 0;
LABEL_15:
      APSLogErrorAt();
      CFMutableDictionaryRef RequestDictionary = 0;
      uint64_t v11 = 4294960578;
      goto LABEL_26;
    }
    CFTypeRef cf = CFRetain(v6);
    if (!cf) {
      goto LABEL_15;
    }
    goto LABEL_19;
  }
  uint64_t CMBaseObject = APSenderSessionGetCMBaseObject(*(void *)(DerivedStorage + 88));
  uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  long long v12 = *(uint64_t (**)(uint64_t, __CFString *, void, CFTypeRef *))(v9 + 48);
  if (!v12)
  {
    uint64_t v11 = 4294954514;
LABEL_24:
    APSLogErrorAt();
    CFMutableDictionaryRef RequestDictionary = 0;
    goto LABEL_26;
  }
  uint64_t v13 = v12(CMBaseObject, @"TransportControlStream", *MEMORY[0x1E4F1CF80], &cf);
  if (v13)
  {
    uint64_t v11 = v13;
    goto LABEL_24;
  }
LABEL_19:
  CFMutableDictionaryRef RequestDictionary = audioStream_createRequestDictionary(*(CFMutableDictionaryRef *)a1);
  if (RequestDictionary)
  {
    CFDictionarySetInt64();
    v19[0] = *v4;
    *(_OWORD *)((char *)v19 + 12) = *(_OWORD *)(a1 + 24);
    APSAudioTransportTimeUtilsEncodeToRequestResponseDictionary();
    mach_absolute_time();
    uint64_t v11 = APTransportStreamSendPlistMessageCreatingPlistReply();
    mach_absolute_time();
    if (gLogCategory_APEndpointStreamBufferedAudio <= 50
      && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
    {
      UpTicksToMilliseconds();
      LogPrintF();
    }
  }
  else
  {
    APSLogErrorAt();
    uint64_t v11 = 4294950535;
  }
LABEL_26:
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, _OWORD *, uint64_t, uint64_t))(a1 + 40);
  if (v14)
  {
    uint64_t v15 = *(void *)a1;
    uint64_t v16 = *(unsigned int *)(a1 + 8);
    uint64_t v17 = *(void *)(a1 + 48);
    v19[0] = *v4;
    *(_OWORD *)((char *)v19 + 12) = *(_OWORD *)(a1 + 24);
    v14(v15, v16, v19, v11, v17);
  }
  if (v3) {
    CFRelease(v3);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (RequestDictionary) {
    CFRelease(RequestDictionary);
  }
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
}

void audioStream_audioHoseFlushWithinSampleRangeInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef v22 = 0;
  v21[0] = *(_OWORD *)(a1 + 12);
  *(_OWORD *)((char *)v21 + 12) = *(_OWORD *)(a1 + 24);
  uint64_t v3 = (const void *)APSAudioTransportTimeCopyDebugDesc();
  v21[0] = *(_OWORD *)(a1 + 44);
  *(_OWORD *)((char *)v21 + 12) = *(_OWORD *)(a1 + 56);
  uint64_t v4 = (const void *)APSAudioTransportTimeCopyDebugDesc();
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v5 = (_DWORD *)(a1 + 12);
  uint64_t v6 = (_DWORD *)(a1 + 44);
  if (*(unsigned char *)DerivedStorage)
  {
    APSLogErrorAt();
    CFMutableDictionaryRef RequestDictionary = 0;
    uint64_t v12 = 4294950534;
    goto LABEL_27;
  }
  if (*v5 != *v6)
  {
    APSLogErrorAt();
    CFMutableDictionaryRef RequestDictionary = 0;
    uint64_t v12 = 4294960591;
    goto LABEL_27;
  }
  if (*(unsigned char *)(DerivedStorage + 113))
  {
    CFAllocatorRef v7 = *(const void **)(DerivedStorage + 200);
    if (!v7)
    {
      CFTypeRef v22 = 0;
LABEL_14:
      APSLogErrorAt();
      CFMutableDictionaryRef RequestDictionary = 0;
      uint64_t v12 = 4294960578;
      goto LABEL_27;
    }
    CFTypeRef v22 = CFRetain(v7);
    if (!v22) {
      goto LABEL_14;
    }
    goto LABEL_18;
  }
  uint64_t CMBaseObject = APSenderSessionGetCMBaseObject(*(void *)(DerivedStorage + 88));
  uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v9) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v13 = *(uint64_t (**)(uint64_t, __CFString *, void, CFTypeRef *))(v10 + 48);
  if (!v13)
  {
    uint64_t v12 = 4294954514;
LABEL_23:
    APSLogErrorAt();
    CFMutableDictionaryRef RequestDictionary = 0;
    goto LABEL_27;
  }
  uint64_t v14 = v13(CMBaseObject, @"TransportControlStream", *MEMORY[0x1E4F1CF80], &v22);
  if (v14)
  {
    uint64_t v12 = v14;
    goto LABEL_23;
  }
LABEL_18:
  CFMutableDictionaryRef RequestDictionary = audioStream_createRequestDictionary(*(CFMutableDictionaryRef *)a1);
  if (RequestDictionary)
  {
    CFDictionarySetInt64();
    v21[0] = *(_OWORD *)v5;
    *(_OWORD *)((char *)v21 + 12) = *(_OWORD *)(a1 + 24);
    APSAudioTransportTimeUtilsEncodeToRequestResponseDictionary();
    CFDictionarySetInt64();
    v21[0] = *(_OWORD *)v6;
    *(_OWORD *)((char *)v21 + 12) = *(_OWORD *)(a1 + 56);
    APSAudioTransportTimeUtilsEncodeToRequestResponseDictionary();
    mach_absolute_time();
    uint64_t v12 = APTransportStreamSendPlistMessageCreatingPlistReply();
    mach_absolute_time();
    if (gLogCategory_APEndpointStreamBufferedAudio <= 50
      && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
    {
      UpTicksToMilliseconds();
      LogPrintF();
    }
    if (v12) {
      APSLogErrorAt();
    }
  }
  else
  {
    APSLogErrorAt();
    uint64_t v12 = 4294950535;
  }
LABEL_27:
  uint64_t v15 = *(void (**)(CFMutableDictionaryRef, uint64_t, _OWORD *, uint64_t, _OWORD *, uint64_t, uint64_t))(a1 + 72);
  if (v15)
  {
    CFMutableDictionaryRef v16 = *(CFMutableDictionaryRef *)a1;
    uint64_t v17 = *(unsigned int *)(a1 + 8);
    uint64_t v18 = *(unsigned int *)(a1 + 40);
    uint64_t v19 = *(void *)(a1 + 80);
    v21[0] = *(_OWORD *)v5;
    *(_OWORD *)((char *)v21 + 12) = *(_OWORD *)(a1 + 24);
    v20[0] = *(_OWORD *)v6;
    *(_OWORD *)((char *)v20 + 12) = *(_OWORD *)(a1 + 56);
    v15(v16, v17, v21, v18, v20, v12, v19);
  }
  if (v3) {
    CFRelease(v3);
  }
  if (v4) {
    CFRelease(v4);
  }
  if (v22) {
    CFRelease(v22);
  }
  if (RequestDictionary) {
    CFRelease(RequestDictionary);
  }
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
}

uint64_t audioStream_audioHoseNotifyAudioAvailableInternal(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v3 = DerivedStorage;
  if (*(unsigned char *)(DerivedStorage + 114))
  {
    uint64_t v4 = *(NSObject **)(DerivedStorage + 304);
    uint64_t v5 = (void *)CFRetain(a1);
    dispatch_async_f(v4, v5, (dispatch_function_t)audioStream_audioDataDrain);
    return 0;
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
  uint64_t v8 = *(const void **)(v3 + 192);
  if (!v8)
  {
    MEMORY[0x1D25EB390](*(void *)(v3 + 168));
    return 0;
  }
  CFTypeRef v9 = CFRetain(v8);
  MEMORY[0x1D25EB390](*(void *)(v3 + 168));
  if (v9)
  {
    kdebug_trace();
    uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v10) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    uint64_t v12 = *(uint64_t (**)(CFTypeRef))(v11 + 72);
    if (v12)
    {
      uint64_t v6 = v12(v9);
      if (!v6)
      {
LABEL_16:
        CFRelease(v9);
        return v6;
      }
    }
    else
    {
      uint64_t v6 = 4294954514;
    }
    APSLogErrorAt();
    goto LABEL_16;
  }
  return 0;
}

void audioStream_audioDataDrain(void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  CFArrayRef v3 = (const __CFArray *)audioStream_audioDataBatchCallback((uint64_t)a1, 0, &cf);
  if (v3)
  {
    CFArrayRef v4 = v3;
    if (CFArrayGetCount(v3) < 1) {
      CFRelease(a1);
    }
    else {
      dispatch_async_f(*(dispatch_queue_t *)(DerivedStorage + 304), a1, (dispatch_function_t)audioStream_audioDataDrain);
    }
    CFArrayRef v5 = v4;
  }
  else
  {
    CFArrayRef v5 = (const __CFArray *)a1;
  }
  CFRelease(v5);
  if (cf) {
    CFRelease(cf);
  }
}

CFTypeRef audioStream_audioDataBatchCallback(uint64_t a1, int a2, CFTypeRef *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  char v19 = 0;
  if (audioStream_audioDataBatchCallback_sBatchMessageTypesOnce != -1)
  {
    dispatch_once_f(&audioStream_audioDataBatchCallback_sBatchMessageTypesOnce, &audioStream_audioDataBatchCallback_sBatchMessageTypes, (dispatch_function_t)audioStream_batchMessageTypesInit);
    if (!a2) {
      goto LABEL_3;
    }
LABEL_21:
    int v18 = APSSignalErrorAt();
    CFTypeRef v8 = 0;
    goto LABEL_27;
  }
  if (a2) {
    goto LABEL_21;
  }
LABEL_3:
  if (a3)
  {
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
    CFAllocatorRef v7 = *(const void **)(DerivedStorage + 248);
    CFTypeRef v8 = v7 ? CFRetain(v7) : 0;
    uint64_t v9 = *(void *)(DerivedStorage + 256);
    int v10 = *(unsigned __int8 *)(DerivedStorage + 273);
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
    if (v8)
    {
      if (!v9)
      {
        if (gLogCategory_APEndpointStreamBufferedAudio <= 50
          && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        CFTypeRef v15 = 0;
        goto LABEL_16;
      }
      int v11 = (*(uint64_t (**)(CFTypeRef, uint64_t, CFTypeRef *, char *))(v9 + 8))(v8, a1, &cf, &v19);
      if (!v11)
      {
        uint64_t v12 = (CFTypeRef *)&audioStream_audioDataBatchCallback_sBatchMessageTypes;
        uint64_t v13 = (CFTypeRef *)&unk_1EA63FCC0;
        if (v10)
        {
          uint64_t v13 = (CFTypeRef *)&unk_1EA63FCD0;
          uint64_t v12 = (CFTypeRef *)&unk_1EA63FCC8;
        }
        if (v19) {
          uint64_t v14 = v13;
        }
        else {
          uint64_t v14 = v12;
        }
        *a3 = CFRetain(*v14);
        CFTypeRef v15 = cf;
        CFTypeRef cf = 0;
        goto LABEL_16;
      }
      int v18 = v11;
      APSLogErrorAt();
LABEL_27:
      if (v18 == -72095 || !v18) {
        goto LABEL_35;
      }
      goto LABEL_29;
    }
  }
  APSLogErrorAt();
  CFTypeRef v8 = 0;
LABEL_29:
  if (gLogCategory_APEndpointStreamBufferedAudio <= 90
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a2) {
    audioStream_handleFatalError();
  }
LABEL_35:
  CFTypeRef v15 = 0;
  CFTypeRef v16 = 0;
  if (v8)
  {
LABEL_16:
    CFRelease(v8);
    CFTypeRef v16 = v15;
  }
  if (cf) {
    CFRelease(cf);
  }
  return v16;
}

uint64_t audioStream_batchMessageTypesInit(CFMutableArrayRef *a1)
{
  CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 1, MEMORY[0x1E4F1D510]);
  if (!Mutable) {
    goto LABEL_14;
  }
  CFMutableArrayRef v4 = Mutable;
  if (FigCFArrayAppendInt32()) {
    goto LABEL_14;
  }
  *a1 = v4;
  CFMutableArrayRef v5 = CFArrayCreateMutable(v2, 3, MEMORY[0x1E4F1D510]);
  if (!v5) {
    goto LABEL_14;
  }
  CFMutableArrayRef v6 = v5;
  if (FigCFArrayAppendInt32()
    || FigCFArrayAppendInt32()
    || FigCFArrayAppendInt32()
    || (a1[1] = v6, (CFMutableArrayRef v7 = CFArrayCreateMutable(v2, 1, MEMORY[0x1E4F1D510])) == 0)
    || (CFMutableArrayRef v8 = v7, FigCFArrayAppendInt32())
    || (a1[2] = v8, (CFMutableArrayRef v9 = CFArrayCreateMutable(v2, 3, MEMORY[0x1E4F1D510])) == 0)
    || (CFMutableArrayRef v10 = v9, FigCFArrayAppendInt32())
    || FigCFArrayAppendInt32()
    || (uint64_t result = FigCFArrayAppendInt32(), result))
  {
LABEL_14:
    APSLogErrorAt();
    uint64_t v12 = CUFatalErrorF();
    return audioStream_handleFatalError(v12);
  }
  else
  {
    a1[3] = v10;
  }
  return result;
}

void audioStream_handleFatalError()
{
  CMBaseObjectGetDerivedStorage();
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    uint64_t v1 = Mutable;
    FigCFDictionarySetInt32();
    CFDictionarySetValue(v1, (const void *)*MEMORY[0x1E4F212C8], @"audio data buffer processing failed");
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
    CFRelease(v1);
  }
  else
  {
    APSLogErrorAt();
  }
}

void audioStream_audioHoseSetRateAndAnchorTimeInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef v23 = 0;
  v24[0] = 0;
  v22[0] = *MEMORY[0x1E4F49F28];
  *(_OWORD *)((char *)v22 + 12) = *(_OWORD *)(MEMORY[0x1E4F49F28] + 12);
  v21[0] = *(_OWORD *)(a1 + 12);
  *(_OWORD *)((char *)v21 + 12) = *(_OWORD *)(a1 + 24);
  CFArrayRef v3 = (const void *)APSAudioTransportTimeCopyDebugDesc();
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFMutableArrayRef v4 = (_OWORD *)(a1 + 12);
  if (*(unsigned char *)DerivedStorage)
  {
    APSLogErrorAt();
    CFMutableDictionaryRef RequestDictionary = 0;
    uint64_t v13 = 0;
    uint64_t v12 = 4294950534;
    goto LABEL_24;
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
  audioStream_updateIsPlayingAndPostNotification(*(void *)a1, *(_DWORD *)(a1 + 8) != 0);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
  CFMutableArrayRef v5 = *(const void **)(DerivedStorage + 200);
  if (v5)
  {
    v24[0] = CFRetain(v5);
    if (v24[0]) {
      goto LABEL_15;
    }
  }
  else
  {
    v24[0] = 0;
  }
  uint64_t CMBaseObject = APSenderSessionGetCMBaseObject(*(void *)(DerivedStorage + 88));
  uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  CFMutableArrayRef v9 = *(uint64_t (**)(uint64_t, __CFString *, void, CFTypeRef *))(v8 + 48);
  if (!v9)
  {
    uint64_t v12 = 4294954514;
LABEL_22:
    APSLogErrorAt();
    CFMutableDictionaryRef RequestDictionary = 0;
    uint64_t v13 = 0;
    goto LABEL_24;
  }
  uint64_t v10 = v9(CMBaseObject, @"TransportControlStream", *MEMORY[0x1E4F1CF80], v24);
  if (v10)
  {
    uint64_t v12 = v10;
    goto LABEL_22;
  }
LABEL_15:
  CFMutableDictionaryRef RequestDictionary = audioStream_createRequestDictionary(*(CFMutableDictionaryRef *)a1);
  if (RequestDictionary)
  {
    CFDictionarySetInt64();
    if (*(_DWORD *)(a1 + 8) == 1)
    {
      v21[0] = *v4;
      *(_OWORD *)((char *)v21 + 12) = *(_OWORD *)(a1 + 24);
      APSAudioTransportTimeUtilsEncodeToRequestResponseDictionary();
      v21[0] = *(_OWORD *)(a1 + 64);
      *(_OWORD *)((char *)v21 + 12) = *(_OWORD *)(a1 + 76);
      APSAudioTransportTimeUtilsEncodeToRequestResponseDictionary();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
    }
    mach_absolute_time();
    uint64_t v12 = APTransportStreamSendPlistMessageCreatingPlistReply();
    mach_absolute_time();
    v21[0] = v22[0];
    *(_OWORD *)((char *)v21 + 12) = *(_OWORD *)((char *)v22 + 12);
    uint64_t v13 = (const void *)APSAudioTransportTimeCopyDebugDesc();
    if (gLogCategory_APEndpointStreamBufferedAudio <= 50
      && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
    {
      UpTicksToMilliseconds();
      LogPrintF();
    }
  }
  else
  {
    APSLogErrorAt();
    uint64_t v13 = 0;
    uint64_t v12 = 4294950535;
  }
LABEL_24:
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, _OWORD *, long long *, _OWORD *, uint64_t, uint64_t))(a1 + 96);
  if (v14)
  {
    uint64_t v15 = *(void *)a1;
    uint64_t v16 = *(unsigned int *)(a1 + 8);
    uint64_t v17 = *(void *)(a1 + 104);
    v21[0] = *v4;
    *(_OWORD *)((char *)v21 + 12) = *(_OWORD *)(a1 + 24);
    long long v19 = *(_OWORD *)(a1 + 40);
    uint64_t v20 = *(void *)(a1 + 56);
    v18[0] = v22[0];
    *(_OWORD *)((char *)v18 + 12) = *(_OWORD *)((char *)v22 + 12);
    v14(v15, v16, v21, &v19, v18, v12, v17);
  }
  if (v12)
  {
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
    audioStream_updateIsPlayingAndPostNotification(*(void *)a1, 0);
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
  }
  kdebug_trace();
  if (v3) {
    CFRelease(v3);
  }
  if (v13) {
    CFRelease(v13);
  }
  if (v24[0]) {
    CFRelease(v24[0]);
  }
  if (RequestDictionary) {
    CFRelease(RequestDictionary);
  }
  if (v23) {
    CFRelease(v23);
  }
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
}

void audioStream_audioHoseApplyVolumeFadeInternal(uint64_t a1)
{
  uint64_t DerivedStorage = (unsigned char *)CMBaseObjectGetDerivedStorage();
  if (*DerivedStorage) {
    goto LABEL_13;
  }
  CFArrayRef v3 = DerivedStorage;
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    APSGetVolumeFadeTypeName();
    CMTime time = *(CMTime *)(a1 + 12);
    CMTimeGetSeconds(&time);
    LogPrintF();
  }
  CFMutableArrayRef v4 = (const void *)*((void *)v3 + 25);
  if (v4 && (CFTypeRef v5 = CFRetain(v4)) != 0)
  {
    CFMutableArrayRef v6 = (void *)v5;
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 2, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (Mutable)
    {
      CFMutableDictionaryRef v8 = Mutable;
      CFDictionarySetInt64();
      CMTime time = *(CMTime *)(a1 + 12);
      CMTimeGetSeconds(&time);
      CFDictionarySetDouble();
      if (APTransportStreamSendPlistMessage()) {
        APSLogErrorAt();
      }
      CFRelease(v6);
      CFMutableDictionaryRef v9 = v8;
    }
    else
    {
      APSLogErrorAt();
      CFMutableDictionaryRef v9 = (CFMutableDictionaryRef)v6;
    }
    CFRelease(v9);
  }
  else
  {
LABEL_13:
    APSLogErrorAt();
  }
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
}

void audioStream_audioHoseSetRateInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef v28 = 0;
  v29[0] = 0;
  v27[0] = *MEMORY[0x1E4F49F28];
  *(_OWORD *)((char *)v27 + 12) = *(_OWORD *)(MEMORY[0x1E4F49F28] + 12);
  v26[0] = *(_OWORD *)(a1 + 12);
  *(_OWORD *)((char *)v26 + 12) = *(_OWORD *)(a1 + 24);
  CFArrayRef v3 = (const void *)APSAudioTransportTimeCopyDebugDesc();
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)DerivedStorage)
  {
    APSLogErrorAt();
    uint64_t v16 = 0;
    uint64_t v15 = 0;
    int Int64 = 0;
    int v17 = 0;
    CFMutableDictionaryRef RequestDictionary = 0;
    long long v19 = 0;
    uint64_t v13 = 4294950534;
    goto LABEL_37;
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
  int v4 = *(_DWORD *)(a1 + 8);
  if (v4 == 1)
  {
    uint64_t v5 = *(void *)(DerivedStorage + 288) - 1;
    *(void *)(DerivedStorage + 288) = v5;
    if (v5)
    {
      if (gLogCategory_APEndpointStreamBufferedAudio <= 50
        && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
      uint64_t v13 = 4294949716;
      goto LABEL_36;
    }
  }
  audioStream_updateIsPlayingAndPostNotification(*(void *)a1, v4 != 0);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
  CFMutableArrayRef v6 = *(const void **)(DerivedStorage + 200);
  if (v6)
  {
    v29[0] = CFRetain(v6);
    if (v29[0]) {
      goto LABEL_20;
    }
  }
  else
  {
    v29[0] = 0;
  }
  uint64_t CMBaseObject = APSenderSessionGetCMBaseObject(*(void *)(DerivedStorage + 88));
  uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = *(uint64_t (**)(uint64_t, __CFString *, void, CFTypeRef *))(v9 + 48);
  if (!v10)
  {
    uint64_t v13 = 4294954514;
LABEL_36:
    APSLogErrorAt();
    uint64_t v16 = 0;
    uint64_t v15 = 0;
    int Int64 = 0;
    int v17 = 0;
    CFMutableDictionaryRef RequestDictionary = 0;
    long long v19 = 0;
    goto LABEL_37;
  }
  uint64_t v11 = v10(CMBaseObject, @"TransportControlStream", *MEMORY[0x1E4F1CF80], v29);
  if (v11)
  {
    uint64_t v13 = v11;
    goto LABEL_36;
  }
LABEL_20:
  CFMutableDictionaryRef RequestDictionary = audioStream_createRequestDictionary(*(CFMutableDictionaryRef *)a1);
  if (RequestDictionary)
  {
    CFDictionarySetInt64();
    if (*(_DWORD *)(a1 + 8) == 1)
    {
      v26[0] = *(_OWORD *)(a1 + 12);
      *(_OWORD *)((char *)v26 + 12) = *(_OWORD *)(a1 + 24);
      APSAudioTransportTimeUtilsEncodeToRequestResponseDictionary();
    }
    mach_absolute_time();
    uint64_t v13 = APTransportStreamSendPlistMessageCreatingPlistReply();
    mach_absolute_time();
    if (v28)
    {
      APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
      int Int64 = CFDictionaryGetInt64();
      uint64_t v15 = CFDictionaryGetInt64();
      uint64_t v16 = CFDictionaryGetInt64();
      int v17 = CFDictionaryGetInt64();
      unsigned int v18 = CFDictionaryGetInt64();
      if (v18) {
        uint64_t v13 = v18;
      }
      else {
        uint64_t v13 = v13;
      }
    }
    else
    {
      uint64_t v16 = 0;
      uint64_t v15 = 0;
      int Int64 = 0;
      int v17 = 0;
    }
    v26[0] = v27[0];
    *(_OWORD *)((char *)v26 + 12) = *(_OWORD *)((char *)v27 + 12);
    long long v19 = (const void *)APSAudioTransportTimeCopyDebugDesc();
    if (gLogCategory_APEndpointStreamBufferedAudio <= 50
      && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
    {
      UpTicksToMilliseconds();
      LogPrintF();
    }
  }
  else
  {
    APSLogErrorAt();
    uint64_t v16 = 0;
    uint64_t v15 = 0;
    int Int64 = 0;
    int v17 = 0;
    long long v19 = 0;
    uint64_t v13 = 4294950535;
  }
LABEL_37:
  uint64_t v20 = *(void (**)(uint64_t, _OWORD *, void *, uint64_t, uint64_t))(a1 + 40);
  if (v20)
  {
    uint64_t v21 = *(void *)a1;
    uint64_t v22 = *(void *)(a1 + 48);
    v26[0] = v27[0];
    *(_OWORD *)((char *)v26 + 12) = *(_OWORD *)((char *)v27 + 12);
    v23[0] = v16;
    v23[1] = v15;
    int v24 = Int64;
    int v25 = v17;
    v20(v21, v26, v23, v13, v22);
  }
  if (v13 != -17580 && v13)
  {
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
    audioStream_updateIsPlayingAndPostNotification(*(void *)a1, 0);
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
  }
  if (v3) {
    CFRelease(v3);
  }
  if (v19) {
    CFRelease(v19);
  }
  if (v29[0]) {
    CFRelease(v29[0]);
  }
  if (RequestDictionary) {
    CFRelease(RequestDictionary);
  }
  if (v28) {
    CFRelease(v28);
  }
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
}

void audioStream_audioHoseGetAnchorInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef v20 = 0;
  v21[0] = 0;
  v19[0] = *MEMORY[0x1E4F49F28];
  *(_OWORD *)((char *)v19 + 12) = *(_OWORD *)(MEMORY[0x1E4F49F28] + 12);
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)DerivedStorage)
  {
    APSLogErrorAt();
    CFMutableDictionaryRef RequestDictionary = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 4294950534;
    goto LABEL_23;
  }
  CFArrayRef v3 = *(const void **)(DerivedStorage + 200);
  if (v3)
  {
    v21[0] = CFRetain(v3);
    if (v21[0]) {
      goto LABEL_15;
    }
  }
  else
  {
    v21[0] = 0;
  }
  uint64_t CMBaseObject = APSenderSessionGetCMBaseObject(*(void *)(DerivedStorage + 88));
  uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t, __CFString *, void, CFTypeRef *))(v6 + 48);
  if (!v7)
  {
    uint64_t v11 = 4294954514;
LABEL_18:
    APSLogErrorAt();
    CFMutableDictionaryRef RequestDictionary = 0;
    uint64_t v10 = 0;
    goto LABEL_23;
  }
  uint64_t v8 = v7(CMBaseObject, @"TransportControlStream", *MEMORY[0x1E4F1CF80], v21);
  if (v8)
  {
    uint64_t v11 = v8;
    goto LABEL_18;
  }
LABEL_15:
  CFMutableDictionaryRef RequestDictionary = audioStream_createRequestDictionary(*(CFMutableDictionaryRef *)a1);
  if (RequestDictionary)
  {
    CFDictionarySetInt64();
    mach_absolute_time();
    APTransportStreamSendPlistMessageCreatingPlistReply();
    mach_absolute_time();
    uint64_t v11 = 4294894965;
    v18[0] = v19[0];
    *(_OWORD *)((char *)v18 + 12) = *(_OWORD *)((char *)v19 + 12);
    uint64_t v10 = (const void *)APSAudioTransportTimeCopyDebugDesc();
    if (gLogCategory_APEndpointStreamBufferedAudio <= 50
      && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
    {
      UpTicksToMilliseconds();
      LogPrintF();
    }
  }
  else
  {
    APSLogErrorAt();
    uint64_t v10 = 0;
    uint64_t v11 = 4294950535;
  }
LABEL_23:
  uint64_t v12 = *(void (**)(CFMutableDictionaryRef, _OWORD *, void *, uint64_t, uint64_t))(a1 + 16);
  if (v12)
  {
    CFMutableDictionaryRef v13 = *(CFMutableDictionaryRef *)a1;
    uint64_t v14 = *(void *)(a1 + 24);
    v18[0] = v19[0];
    *(_OWORD *)((char *)v18 + 12) = *(_OWORD *)((char *)v19 + 12);
    v15[0] = 0;
    v15[1] = 0;
    int v16 = 0;
    int v17 = 0;
    v12(v13, v18, v15, v11, v14);
  }
  if (v10) {
    CFRelease(v10);
  }
  if (v21[0]) {
    CFRelease(v21[0]);
  }
  if (RequestDictionary) {
    CFRelease(RequestDictionary);
  }
  if (v20) {
    CFRelease(v20);
  }
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
}

void audioStream_audioHoseSetCryptorInternal(void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef v42 = 0;
  CFTypeRef v43 = 0;
  CFTypeRef cf = 0;
  CFTypeRef v41 = 0;
  CFTypeRef v39 = 0;
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)DerivedStorage)
  {
    APSLogErrorAt();
    CFMutableDictionaryRef RequestDictionary = 0;
    CFTypeRef v23 = 0;
    uint64_t Int64 = 4294950534;
    goto LABEL_37;
  }
  if (!*(unsigned char *)(DerivedStorage + 208))
  {
    APSLogErrorAt();
    CFMutableDictionaryRef RequestDictionary = 0;
    CFTypeRef v23 = 0;
    uint64_t Int64 = 4294950533;
    goto LABEL_37;
  }
  if (!*(void *)(DerivedStorage + 120))
  {
    APSLogErrorAt();
    CFMutableDictionaryRef RequestDictionary = 0;
    CFTypeRef v23 = 0;
LABEL_103:
    uint64_t Int64 = 4294950536;
    goto LABEL_37;
  }
  CFArrayRef v3 = *(const void **)(DerivedStorage + 200);
  int v4 = (uint64_t *)MEMORY[0x1E4F1CF80];
  if (v3)
  {
    CFTypeRef v43 = CFRetain(v3);
    if (v43)
    {
      uint64_t v5 = *v4;
      goto LABEL_17;
    }
  }
  else
  {
    CFTypeRef v43 = 0;
  }
  uint64_t CMBaseObject = APSenderSessionGetCMBaseObject(*(void *)(DerivedStorage + 88));
  uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v8 + 48);
  if (!v9)
  {
    uint64_t Int64 = 4294954514;
LABEL_36:
    APSLogErrorAt();
    CFMutableDictionaryRef RequestDictionary = 0;
    CFTypeRef v23 = 0;
    goto LABEL_37;
  }
  uint64_t v5 = *v4;
  uint64_t v10 = v9(CMBaseObject, @"TransportControlStream", v5, &v43);
  if (v10)
  {
    uint64_t Int64 = v10;
    goto LABEL_36;
  }
LABEL_17:
  uint64_t v11 = a1[2];
  uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v12) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  uint64_t v15 = *(uint64_t (**)(uint64_t, void, uint64_t, CFTypeRef *))(v13 + 48);
  if (!v15)
  {
    uint64_t Int64 = 4294954514;
    goto LABEL_36;
  }
  uint64_t v16 = v15(v11, *MEMORY[0x1E4F1FD88], v5, &cf);
  if (v16)
  {
    uint64_t Int64 = v16;
    goto LABEL_36;
  }
  uint64_t v17 = a1[2];
  uint64_t v18 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v18) {
    uint64_t v19 = v18;
  }
  else {
    uint64_t v19 = 0;
  }
  CFTypeRef v20 = *(uint64_t (**)(uint64_t, void, uint64_t, CFTypeRef *))(v19 + 48);
  if (!v20)
  {
    uint64_t Int64 = 4294954514;
    goto LABEL_36;
  }
  uint64_t v21 = v20(v17, *MEMORY[0x1E4F1FDE8], v5, &v39);
  if (v21)
  {
    uint64_t Int64 = v21;
    goto LABEL_36;
  }
  if (!*(void *)(DerivedStorage + 136))
  {
    if (FigCFEqual())
    {
      if (FigCFEqual())
      {
        CFTypeRef v23 = 0;
        goto LABEL_78;
      }
      APSLogErrorAt();
      if (gLogCategory_APEndpointStreamBufferedAudio > 90
        || gLogCategory_APEndpointStreamBufferedAudio == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_120;
      }
    }
    else
    {
      APSLogErrorAt();
      if (gLogCategory_APEndpointStreamBufferedAudio > 90
        || gLogCategory_APEndpointStreamBufferedAudio == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_120;
      }
    }
    LogPrintF();
LABEL_120:
    CFMutableDictionaryRef RequestDictionary = 0;
    goto LABEL_121;
  }
  CFMutableDictionaryRef RequestDictionary = audioStream_createRequestDictionary((CFMutableDictionaryRef)*a1);
  if (!RequestDictionary)
  {
    APSLogErrorAt();
LABEL_121:
    CFTypeRef v23 = 0;
    goto LABEL_122;
  }
  FigCFDictionarySetValue();
  FigCFDictionarySetValue();
  mach_absolute_time();
  APTransportStreamSendPlistMessageCreatingPlistReply();
  mach_absolute_time();
  if (v42)
  {
    uint64_t Int64 = CFDictionaryGetInt64();
    CFTypeRef v23 = 0;
    if (!Int64)
    {
      int v24 = *(const void **)(DerivedStorage + 136);
      if (v24) {
        CFTypeRef v23 = CFRetain(v24);
      }
      else {
        CFTypeRef v23 = 0;
      }
      uint64_t v27 = *(const void **)(DerivedStorage + 144);
      CFTypeRef v28 = cf;
      *(void *)(DerivedStorage + 144) = cf;
      if (v28) {
        CFRetain(v28);
      }
      if (v27) {
        CFRelease(v27);
      }
      uint64_t Int64 = *(void *)(DerivedStorage + 152);
      CFTypeRef v29 = v39;
      *(void *)(DerivedStorage + 152) = v39;
      if (v29) {
        CFRetain(v29);
      }
      if (Int64)
      {
        CFRelease((CFTypeRef)Int64);
        uint64_t Int64 = 0;
      }
    }
  }
  else
  {
    CFTypeRef v23 = 0;
    uint64_t Int64 = 4294894965;
  }
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    UpTicksToMilliseconds();
    LogPrintF();
  }
  if (Int64) {
    goto LABEL_116;
  }
  CFRelease(RequestDictionary);
  if (v42)
  {
    CFRelease(v42);
    CFTypeRef v42 = 0;
  }
LABEL_78:
  uint64_t v30 = a1[2];
  uint64_t v31 = *(void *)(DerivedStorage + 120);
  CFDictionaryRef v32 = *(void **)(CMBaseObjectGetVTable() + 16);
  if (v32) {
    CFArrayRef v33 = v32;
  }
  else {
    CFArrayRef v33 = 0;
  }
  if (*v33 < 8uLL || (uint64_t v34 = (uint64_t (*)(uint64_t, uint64_t, CFTypeRef, CFTypeRef *))v33[27]) == 0)
  {
    uint64_t Int64 = 4294954514;
LABEL_93:
    APSLogErrorAt();
    CFMutableDictionaryRef RequestDictionary = 0;
    goto LABEL_37;
  }
  uint64_t v35 = v34(v30, v31, v23, &v41);
  if (v35)
  {
    uint64_t Int64 = v35;
    goto LABEL_93;
  }
  if (!v41)
  {
    APSLogErrorAt();
    CFMutableDictionaryRef RequestDictionary = 0;
    goto LABEL_103;
  }
  unsigned int v36 = *(const void **)(DerivedStorage + 136);
  if (v36)
  {
    CFRelease(v36);
    *(void *)(DerivedStorage + 136) = 0;
  }
  CFMutableDictionaryRef RequestDictionary = audioStream_createRequestDictionary((CFMutableDictionaryRef)*a1);
  if (!RequestDictionary)
  {
    APSLogErrorAt();
LABEL_122:
    uint64_t Int64 = 4294950535;
    goto LABEL_37;
  }
  uint64_t v37 = CFDictionarySetInt64();
  if (v37)
  {
    uint64_t Int64 = v37;
LABEL_116:
    APSLogErrorAt();
    goto LABEL_37;
  }
  CFDataGetBytePtr((CFDataRef)v41);
  CFDataGetLength((CFDataRef)v41);
  uint64_t v38 = CFDictionarySetData();
  if (v38)
  {
    uint64_t Int64 = v38;
    goto LABEL_116;
  }
  mach_absolute_time();
  APTransportStreamSendPlistMessageCreatingPlistReply();
  mach_absolute_time();
  if (v42) {
    uint64_t Int64 = CFDictionaryGetInt64();
  }
  else {
    uint64_t Int64 = 4294894965;
  }
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    UpTicksToMilliseconds();
    LogPrintF();
  }
LABEL_37:
  int v25 = (void (*)(void, void, uint64_t, void))a1[3];
  if (v25) {
    v25(*a1, a1[1], Int64, a1[4]);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v39) {
    CFRelease(v39);
  }
  if (v23) {
    CFRelease(v23);
  }
  if (v41) {
    CFRelease(v41);
  }
  if (v43) {
    CFRelease(v43);
  }
  if (RequestDictionary) {
    CFRelease(RequestDictionary);
  }
  if (v42) {
    CFRelease(v42);
  }
  uint64_t v26 = (const void *)a1[2];
  if (v26) {
    CFRelease(v26);
  }
  if (*a1) {
    CFRelease((CFTypeRef)*a1);
  }
}

void audioStream_audioHoseSetMagicCookieInternal(void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)DerivedStorage)
  {
    APSLogErrorAt();
    CFMutableDictionaryRef RequestDictionary = 0;
    uint64_t v12 = 4294950534;
    goto LABEL_25;
  }
  if (!*(unsigned char *)(DerivedStorage + 208))
  {
    APSLogErrorAt();
    CFMutableDictionaryRef RequestDictionary = 0;
    uint64_t v12 = 4294950533;
    goto LABEL_25;
  }
  CFArrayRef v3 = *(const void **)(DerivedStorage + 200);
  if (v3)
  {
    CFTypeRef cf = CFRetain(v3);
    if (cf) {
      goto LABEL_16;
    }
  }
  else
  {
    CFTypeRef cf = 0;
  }
  uint64_t CMBaseObject = APSenderSessionGetCMBaseObject(*(void *)(DerivedStorage + 88));
  uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t, __CFString *, void, CFTypeRef *))(v6 + 48);
  if (!v7)
  {
    uint64_t v12 = 4294954514;
LABEL_23:
    APSLogErrorAt();
    CFMutableDictionaryRef RequestDictionary = 0;
    goto LABEL_25;
  }
  uint64_t v8 = v7(CMBaseObject, @"TransportControlStream", *MEMORY[0x1E4F1CF80], &cf);
  if (v8)
  {
    uint64_t v12 = v8;
    goto LABEL_23;
  }
LABEL_16:
  CFMutableDictionaryRef RequestDictionary = audioStream_createRequestDictionary((CFMutableDictionaryRef)*a1);
  if (!RequestDictionary)
  {
    APSLogErrorAt();
    uint64_t v12 = 4294950535;
    goto LABEL_25;
  }
  uint64_t v10 = CFDictionarySetInt64();
  if (v10)
  {
    uint64_t v12 = v10;
LABEL_41:
    APSLogErrorAt();
    goto LABEL_25;
  }
  CFDataGetBytePtr((CFDataRef)a1[2]);
  CFDataGetLength((CFDataRef)a1[2]);
  uint64_t v11 = CFDictionarySetData();
  if (v11)
  {
    uint64_t v12 = v11;
    goto LABEL_41;
  }
  mach_absolute_time();
  uint64_t v12 = APTransportStreamSendPlistMessageCreatingPlistReply();
  mach_absolute_time();
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    UpTicksToMilliseconds();
    LogPrintF();
  }
LABEL_25:
  uint64_t v13 = (void (*)(void, void, uint64_t, void))a1[3];
  if (v13) {
    v13(*a1, a1[1], v12, a1[4]);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (RequestDictionary) {
    CFRelease(RequestDictionary);
  }
  uint64_t v14 = (const void *)a1[2];
  if (v14) {
    CFRelease(v14);
  }
  if (*a1) {
    CFRelease((CFTypeRef)*a1);
  }
}

void audioStream_audioHoseEnableLoudnessNormalizationInternal(uint64_t a1)
{
  uint64_t DerivedStorage = (unsigned char *)CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  if (*DerivedStorage)
  {
    APSLogErrorAt();
  }
  else
  {
    CFArrayRef v3 = DerivedStorage;
    if (gLogCategory_APEndpointStreamBufferedAudio <= 50
      && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t CMBaseObject = APSenderSessionGetCMBaseObject(*((void *)v3 + 11));
    uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v5) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = 0;
    }
    uint64_t v7 = *(unsigned int (**)(uint64_t, __CFString *, void, CFTypeRef *))(v6 + 48);
    if (!v7 || v7(CMBaseObject, @"TransportControlStream", *MEMORY[0x1E4F1CF80], &cf))
    {
      APSLogErrorAt();
      uint64_t v9 = 0;
    }
    else
    {
      CFMutableDictionaryRef RequestDictionary = audioStream_createRequestDictionary(*(CFMutableDictionaryRef *)a1);
      uint64_t v9 = RequestDictionary;
      if (!RequestDictionary) {
        goto LABEL_25;
      }
      uint64_t v10 = (const void **)MEMORY[0x1E4F1CFD0];
      if (!*(unsigned char *)(a1 + 8)) {
        uint64_t v10 = (const void **)MEMORY[0x1E4F1CFC8];
      }
      CFDictionarySetValue(RequestDictionary, @"loudnessNormalizationEnabled", *v10);
      if (APTransportStreamSendPlistMessage()) {
LABEL_25:
      }
        APSLogErrorAt();
    }
    if (cf) {
      CFRelease(cf);
    }
    if (v9) {
      CFRelease(v9);
    }
  }
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
}

void audioStream_audioHoseEnableMATAtmosPlaybackInternal(uint64_t a1)
{
  uint64_t DerivedStorage = (unsigned char *)CMBaseObjectGetDerivedStorage();
  if (*DerivedStorage) {
    goto LABEL_15;
  }
  CFArrayRef v3 = DerivedStorage;
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  int v4 = (const void *)*((void *)v3 + 25);
  if (v4 && (CFTypeRef v5 = CFRetain(v4)) != 0)
  {
    uint64_t v6 = (void *)v5;
    CFMutableDictionaryRef RequestDictionary = audioStream_createRequestDictionary(*(CFMutableDictionaryRef *)a1);
    if (RequestDictionary)
    {
      uint64_t v8 = RequestDictionary;
      uint64_t v9 = (const void **)MEMORY[0x1E4F1CFD0];
      if (!*(unsigned char *)(a1 + 8)) {
        uint64_t v9 = (const void **)MEMORY[0x1E4F1CFC8];
      }
      CFDictionarySetValue(RequestDictionary, @"matAtmosPlaybackEnabled", *v9);
      if (APTransportStreamSendPlistMessage()) {
        APSLogErrorAt();
      }
      CFRelease(v6);
      uint64_t v10 = v8;
    }
    else
    {
      APSLogErrorAt();
      uint64_t v10 = (__CFDictionary *)v6;
    }
    CFRelease(v10);
  }
  else
  {
LABEL_15:
    APSLogErrorAt();
  }
  CFMutableDictionaryRef v11 = *(CFMutableDictionaryRef *)a1;
  if (*(void *)a1)
  {
    CFRelease(v11);
  }
}

uint64_t audioStream_Suspend(const void *a1, const void *a2)
{
  if (a2) {
    CFRetain(a2);
  }
  APSDispatchAsyncFHelper();
  return 0;
}

uint64_t audioStream_Resume(const void *a1, const void *a2)
{
  if (a2) {
    CFRetain(a2);
  }
  APSDispatchAsyncFHelper();
  return 0;
}

uint64_t audioStream_Dissociate()
{
  if (!*(unsigned char *)CMBaseObjectGetDerivedStorage()) {
    audioStream_dissociateInternal();
  }
  return 0;
}

uint64_t audioStream_Control()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (FigCFEqual())
  {
    if (*(unsigned char *)(DerivedStorage + 115)) {
      goto LABEL_10;
    }
LABEL_11:
    APSLogErrorAt();
    return 4294950536;
  }
  if (FigCFEqual())
  {
    if (*(unsigned char *)(DerivedStorage + 115))
    {
LABEL_10:
      CMNotificationCenterGetDefaultLocalCenter();
      FigDispatchAsyncPostNotification();
      return 0;
    }
    goto LABEL_11;
  }
  return 4294950536;
}

void audioStream_suspendAsync(uint64_t a1)
{
  CMBaseObjectGetDerivedStorage();
  audioStream_suspendInternal(*(void *)a1, *(const __CFDictionary **)(a1 + 8));
  if (*(void *)(a1 + 16))
  {
    CFRetain(*(CFTypeRef *)a1);
    APSDispatchAsyncFHelper();
  }
  CFRelease(*(CFTypeRef *)a1);
  CFAllocatorRef v2 = *(const void **)(a1 + 8);
  if (v2) {
    CFRelease(v2);
  }
}

void audioStream_suspendOrResumeCompletionCallback(uint64_t a1)
{
  (*(void (**)(void, void, void))(a1 + 16))(*(void *)a1, *(unsigned int *)(a1 + 8), *(void *)(a1 + 24));
  CFAllocatorRef v2 = *(const void **)a1;
  CFRelease(v2);
}

void audioStream_resumeAsync(uint64_t a1)
{
  CMBaseObjectGetDerivedStorage();
  audioStream_resumeInternal(*(const void **)a1, *(const __CFDictionary **)(a1 + 8));
  if (*(void *)(a1 + 16))
  {
    CFRetain(*(CFTypeRef *)a1);
    APSDispatchAsyncFHelper();
  }
  CFRelease(*(CFTypeRef *)a1);
  CFAllocatorRef v2 = *(const void **)(a1 + 8);
  if (v2) {
    CFRelease(v2);
  }
}

uint64_t audioStream_resumeInternal(const void *a1, const __CFDictionary *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v157 = 0;
  uint64_t v158 = 0;
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)DerivedStorage || *(unsigned char *)(DerivedStorage + 208)) {
    return 0;
  }
  if (!a2)
  {
    char v7 = 0;
    theuint64_t Data = 0;
    CFTypeRef v5 = 0;
LABEL_38:
    int v151 = 1;
    goto LABEL_39;
  }
  CFTypeRef v5 = CFDictionaryGetValue(a2, @"HoseRegistrar");
  theuint64_t Data = (const __CFData *)CFDictionaryGetValue(a2, @"EncryptionKey");
  CFDictionaryGetValue(a2, @"InitialTransportAudioFormatDescription");
  uint64_t Int64 = CFDictionaryGetInt64();
  if (*(unsigned char *)(DerivedStorage + 115))
  {
    CFDictionaryGetValue(a2, @"AudioSessionID");
    CFDictionaryGetValue(a2, @"AudioSessionCategory");
    CFDictionaryGetValue(a2, @"AudioSessionMode");
    if (gLogCategory_APEndpointStreamBufferedAudio <= 50
      && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  uint64_t v8 = (unsigned char *)CMBaseObjectGetDerivedStorage();
  CFTypeRef v163 = 0;
  v164[0] = 0;
  CFTypeRef v161 = 0;
  CFTypeRef v162 = 0;
  CFTypeRef v159 = 0;
  CFTypeRef v160 = 0;
  if (!*v8)
  {
    uint64_t v9 = v8;
    if (!v8[208])
    {
      uint64_t v10 = FigCFDictionaryGetValue();
      if (v10)
      {
        CFMutableDictionaryRef v11 = (const void *)v10;
        if (APSThreadSafeDictionaryCopyValueIfPresent())
        {
          mach_absolute_time();
          APSThreadSafeDictionarySetInt64();
          uint64_t v12 = (const void *)*((void *)v9 + 39);
          *((void *)v9 + 39) = v11;
          CFRetain(v11);
          if (v12) {
            CFRelease(v12);
          }
        }
        else
        {
          APSThreadSafeDictionaryCreate();
          APSLogErrorAt();
        }
      }
    }
  }
  if (v164[0]) {
    CFRelease(v164[0]);
  }
  if (v163) {
    CFRelease(v163);
  }
  if (v162) {
    CFRelease(v162);
  }
  if (v161) {
    CFRelease(v161);
  }
  if (v160) {
    CFRelease(v160);
  }
  if (v159) {
    CFRelease(v159);
  }
  if (!Int64)
  {
    char v7 = 0;
    goto LABEL_38;
  }
  if (!*(unsigned char *)(DerivedStorage + 96))
  {
    if (gLogCategory_APEndpointStreamBufferedAudio <= 50
      && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v48 = 4294960561;
    goto LABEL_316;
  }
  int v151 = 0;
  char v7 = 1;
LABEL_39:
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
  uint64_t v13 = *(const void **)(DerivedStorage + 184);
  if (v13) {
    CFTypeRef v14 = CFRetain(v13);
  }
  else {
    CFTypeRef v14 = 0;
  }
  uint64_t v15 = *(const void **)(DerivedStorage + 264);
  if (v15) {
    CFTypeRef v16 = CFRetain(v15);
  }
  else {
    CFTypeRef v16 = 0;
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
  CMTimeValue value = (void *)v16;
  if (!APSAudioFormatDescriptionListContainsFormat())
  {
    APSLogErrorAt();
    uint64_t v48 = APSSignalErrorAt();
LABEL_131:
    CFDictionaryRef v49 = 0;
    CFDictionaryRef v50 = 0;
    CFTypeRef v43 = 0;
    goto LABEL_292;
  }
  if (*(unsigned char *)(DerivedStorage + 113))
  {
    uint64_t v17 = RandomBytes();
    if (v17)
    {
      uint64_t v48 = v17;
      APSLogErrorAt();
      goto LABEL_131;
    }
  }
  char v146 = v7;
  uint64_t v155 = APSGetFBOPropertyInt64();
  uint64_t v18 = APSGetFBOPropertyInt64();
  BOOL v147 = v5;
  if (APSSettingsIsFeatureEnabled())
  {
    uint64_t v19 = *(void *)(DerivedStorage + 80);
    uint64_t v20 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v20) {
      uint64_t v21 = v20;
    }
    else {
      uint64_t v21 = 0;
    }
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 16);
    if (v22) {
      int v23 = v22(v19, 84);
    }
    else {
      int v23 = 0;
    }
    BOOL v144 = v23 != 0;
  }
  else
  {
    BOOL v144 = 0;
  }
  uint64_t v148 = *(void *)(DerivedStorage + 88);
  int v153 = *(unsigned __int8 *)(DerivedStorage + 112);
  int v150 = *(unsigned __int8 *)(DerivedStorage + 114);
  int v145 = *(unsigned __int8 *)(DerivedStorage + 113);
  CFTypeRef cf = *(__CFDictionary **)(DerivedStorage + 128);
  v164[0] = 0;
  kdebug_trace();
  AudioModeForEndpointStreaCFIndex m = APSenderSessionUtilityGetAudioModeForEndpointStream();
  APSAudioFormatDescriptionGetCompressionType();
  APSAudioFormatDescriptionGetLegacyFormatMask();
  APSAudioFormatDescriptionGetAudioFormatIndex();
  CFAllocatorRef allocator = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  uint64_t v26 = Mutable;
  if (!Mutable)
  {
    APSLogErrorAt();
    LODWORD(v163) = -6728;
    goto LABEL_107;
  }
  uint64_t v27 = (const void *)*MEMORY[0x1E4F1CFD0];
  CFDictionarySetValue(Mutable, @"supportsDynamicStreamID", (const void *)*MEMORY[0x1E4F1CFD0]);
  CFDictionarySetInt64();
  APSAudioFormatDescriptionGetFramesPerPacket();
  CFDictionarySetInt64();
  CFDictionarySetInt64();
  CFDictionarySetInt64();
  if (v155)
  {
    CFDictionarySetValue(v26, @"audioType", @"media");
    if (v151) {
      CFTypeRef v28 = (const void *)*MEMORY[0x1E4F1CFC8];
    }
    else {
      CFTypeRef v28 = v27;
    }
    CFDictionarySetValue(v26, @"packetFormatAPAP", v28);
  }
  CFDictionarySetValue(v26, @"audioMode", AudioModeForEndpointStream);
  FigCFDictionarySetValue();
  FigCFDictionarySetValue();
  FigCFDictionarySetValue();
  if (theData)
  {
    CFDataGetBytePtr(theData);
    CFDataGetLength(theData);
    CFDictionarySetData();
  }
  if (v18)
  {
    CFAllocatorRef v29 = allocator;
    CFMutableDictionaryRef v30 = CFDictionaryCreateMutable(allocator, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (!v30)
    {
      APSLogErrorAt();
      uint64_t v31 = 0;
LABEL_142:
      CFMutableDictionaryRef v36 = 0;
      goto LABEL_143;
    }
    CFDictionarySetInt64();
    CFDictionarySetValue(v26, @"soundCheckMediaKind", v30);
  }
  else
  {
    CFMutableDictionaryRef v30 = 0;
    CFAllocatorRef v29 = allocator;
  }
  if (!v153)
  {
    uint64_t v31 = 0;
LABEL_87:
    CFMutableDictionaryRef v36 = cf;
    if (value) {
      CFDictionarySetValue(v26, @"clientID", value);
    }
    if (cf)
    {
      CFDictionarySetValue(v26, @"pkdDeviceContext", cf);
      CFMutableDictionaryRef v36 = 0;
    }
    int v38 = 0;
    if (v31) {
      goto LABEL_92;
    }
    goto LABEL_93;
  }
  uint64_t v31 = CFDictionaryCreateMutable(v29, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!v31) {
    goto LABEL_141;
  }
  if (v150) {
    goto LABEL_81;
  }
  CFDictionaryRef v32 = CFDictionaryCreateMutable(v29, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!v32)
  {
LABEL_141:
    APSLogErrorAt();
    goto LABEL_142;
  }
  CFArrayRef v33 = v32;
  if (theData) {
    uint64_t v34 = v27;
  }
  else {
    uint64_t v34 = (const void *)*MEMORY[0x1E4F1CFC8];
  }
  CFDictionarySetValue(v32, @"streamConnectionKeyUseStreamEncryptionKey", v34);
  if (v144) {
    CFDictionarySetValue(v33, @"streamConnectionKeyTransportProtocol", @"QUIC");
  }
  uint64_t v35 = kAPEndpointStreamConnectionType_APAP;
  if (v151) {
    uint64_t v35 = kAPEndpointStreamConnectionType_RTP;
  }
  CFDictionarySetValue(v31, *v35, v33);
  CFRelease(v33);
LABEL_81:
  if (!v145)
  {
LABEL_85:
    CFDictionarySetValue(v26, @"streamConnections", v31);
    goto LABEL_87;
  }
  CFMutableDictionaryRef v36 = CFDictionaryCreateMutable(v29, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!v36)
  {
    APSLogErrorAt();
LABEL_143:
    int v38 = -6728;
    goto LABEL_144;
  }
  int v37 = CFDictionarySetInt64();
  if (!v37)
  {
    CFDictionarySetValue(v31, @"streamConnectionTypeMediaDataControl", v36);
    CFRelease(v36);
    goto LABEL_85;
  }
  int v38 = v37;
  APSLogErrorAt();
LABEL_144:
  CFRelease(v26);
  uint64_t v26 = 0;
  if (v31) {
LABEL_92:
  }
    CFRelease(v31);
LABEL_93:
  if (v36) {
    CFRelease(v36);
  }
  if (v30) {
    CFRelease(v30);
  }
  LODWORD(v163) = v38;
  if (v38) {
    goto LABEL_107;
  }
  mach_absolute_time();
  uint64_t v39 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v39) {
    uint64_t v40 = v39;
  }
  else {
    uint64_t v40 = 0;
  }
  CFTypeRef v41 = *(uint64_t (**)(uint64_t, uint64_t, __CFDictionary *, CFDictionaryRef *, void, void))(v40 + 40);
  if (!v41)
  {
    LODWORD(v163) = -12782;
    goto LABEL_107;
  }
  LODWORD(v163) = v41(v148, 103, v26, v164, 0, 0);
  if (v163)
  {
LABEL_107:
    APSLogErrorAt();
    uint64_t v42 = 0;
    CFTypeRef v43 = 0;
    uint64_t v44 = 0;
    char v45 = 0;
    uint64_t v46 = (_DWORD *)&unk_1EA628000;
    goto LABEL_149;
  }
  mach_absolute_time();
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    UpTicksToMilliseconds();
    LogPrintF();
  }
  uint64_t v42 = CFDictionaryGetInt64();
  uint64_t v44 = CFDictionaryGetInt64();
  if (v153)
  {
    CFDictionaryGetTypeID();
    CFDictionaryGetTypedValue();
    uint64_t v46 = &unk_1EA628000;
    if (v163) {
      goto LABEL_146;
    }
    if (!v150)
    {
      CFDictionaryGetTypeID();
      CFDictionaryGetTypedValue();
      if (v163) {
        goto LABEL_146;
      }
      CFDictionaryGetInt64();
      if (v163) {
        goto LABEL_146;
      }
    }
    if (v145)
    {
      CFDictionaryGetTypeID();
      CFDictionaryGetTypedValue();
      if (v163) {
        goto LABEL_146;
      }
      CFDictionaryGetInt64();
      if (v163) {
        goto LABEL_146;
      }
    }
  }
  else
  {
    CFDictionaryGetInt64();
    uint64_t v46 = (_DWORD *)&unk_1EA628000;
    if (v163) {
      goto LABEL_146;
    }
  }
  if (v150)
  {
    *(_DWORD *)(DerivedStorage + 64) = 5000000;
    goto LABEL_123;
  }
  *(_DWORD *)(DerivedStorage + 64) = CFDictionaryGetInt64();
  if (v163)
  {
LABEL_146:
    APSLogErrorAt();
    goto LABEL_147;
  }
LABEL_123:
  if (cf)
  {
    uint64_t v47 = CFDictionaryGetValue(v164[0], @"pkdDeviceContext");
    if (v47)
    {
      CFTypeRef v43 = CFRetain(v47);
    }
    else
    {
      APSLogErrorAt();
      CFTypeRef v43 = 0;
      LODWORD(v163) = -16765;
    }
    goto LABEL_148;
  }
LABEL_147:
  CFTypeRef v43 = 0;
LABEL_148:
  char v45 = 1;
LABEL_149:
  kdebug_trace();
  if (v26) {
    CFRelease(v26);
  }
  if (v164[0]) {
    CFRelease(v164[0]);
  }
  uint64_t v48 = v163;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
  *(void *)(DerivedStorage + 176) = v42;
  *(unsigned char *)(DerivedStorage + 274) = v45;
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
  if (v48)
  {
    APSLogErrorAt();
    CFDictionaryRef v49 = 0;
LABEL_343:
    CFDictionaryRef v50 = 0;
    goto LABEL_292;
  }
  if (v155)
  {
    if (APSGetFBOPropertyInt64())
    {
      int v51 = v46[88];
      if (v51 > 60 || v51 == -1 && !_LogCategory_Initialize()) {
        goto LABEL_167;
      }
    }
    else
    {
      uint64_t v52 = *(void *)(DerivedStorage + 320);
      APSAudioFormatDescriptionGetSampleRate();
      if (!APCarPlayAnalyticsInitASRCollection(v52, v53)) {
        goto LABEL_167;
      }
      int v54 = v46[88];
      if (v54 > 60 || v54 == -1 && !_LogCategory_Initialize()) {
        goto LABEL_167;
      }
      APSAudioFormatDescriptionGetSampleRate();
    }
    LogPrintF();
LABEL_167:
    if (APCarPlayAnalyticsInitAudioAnomaliesCollection(*(void *)(DerivedStorage + 320)))
    {
      int v55 = v46[88];
      if (v55 <= 60 && (v55 != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
    }
    if (APCarPlayAnalyticsInitAudioFormatsCollection(*(void *)(DerivedStorage + 320)))
    {
      int v56 = v46[88];
      if (v56 <= 60 && (v56 != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
    }
    APCarPlayAnalyticsStartCollections(*(void *)(DerivedStorage + 320), 103, v44, 0);
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterAddWeakListener();
  }
  int v57 = v46[88];
  if (v57 <= 50 && (v57 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 114))
  {
    CFDictionaryRef v49 = 0;
    goto LABEL_238;
  }
  uint64_t v58 = *(void *)(DerivedStorage + 88);
  v164[0] = 0;
  uint64_t v59 = APTransportStreamIDMakeWithPort();
  int v60 = v46[88];
  if (v60 <= 30 && (v60 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  kdebug_trace();
  CFMutableDictionaryRef v61 = CFDictionaryCreateMutable(allocator, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!v61)
  {
    APSLogErrorAt();
    kdebug_trace();
    CFDictionaryRef v49 = 0;
    uint64_t v48 = 4294895476;
LABEL_342:
    APSLogErrorAt();
    goto LABEL_343;
  }
  uint64_t v62 = v61;
  CFDictionarySetInt64();
  CFDictionarySetInt64();
  uint64_t v63 = (const void *)*MEMORY[0x1E4F1CFD0];
  CFDictionarySetValue(v62, @"AllowMessageAggregation", (const void *)*MEMORY[0x1E4F1CFD0]);
  CFDictionarySetInt64();
  if (v144) {
    int v64 = v63;
  }
  else {
    int v64 = (const void *)*MEMORY[0x1E4F1CFC8];
  }
  CFDictionarySetValue(v62, @"UseQUIC", v64);
  uint64_t v65 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v65) {
    uint64_t v66 = v65;
  }
  else {
    uint64_t v66 = 0;
  }
  uint64_t v67 = *(uint64_t (**)(uint64_t, uint64_t, __CFDictionary *, CFDictionaryRef *))(v66 + 64);
  if (!v67)
  {
    uint64_t v48 = 4294954514;
LABEL_201:
    APSLogErrorAt();
LABEL_202:
    kdebug_trace();
    CFDictionaryRef v49 = 0;
    goto LABEL_225;
  }
  uint64_t v68 = v67(v58, v59, v62, v164);
  if (v68)
  {
    uint64_t v48 = v68;
    goto LABEL_201;
  }
  uint64_t v69 = CFNumberCreateInt64();
  if (!v69)
  {
    APSLogErrorAt();
    uint64_t v48 = 4294960568;
    goto LABEL_202;
  }
  uint64_t v70 = (const void *)v69;
  uint64_t CMBaseObject = FigTransportStreamGetCMBaseObject();
  uint64_t v72 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v72) {
    uint64_t v73 = v72;
  }
  else {
    uint64_t v73 = 0;
  }
  uint64_t v74 = *(uint64_t (**)(uint64_t, void, const void *))(v73 + 56);
  if (v74)
  {
    uint64_t v75 = v74(CMBaseObject, *MEMORY[0x1E4F47770], v70);
    if (v75)
    {
      uint64_t v48 = v75;
      goto LABEL_223;
    }
    CFDictionaryRef v76 = v164[0];
    uint64_t v77 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v77) {
      uint64_t v78 = v77;
    }
    else {
      uint64_t v78 = 0;
    }
    uint64_t v79 = *(uint64_t (**)(CFDictionaryRef, void, void, const void *))(v78 + 24);
    if (v79)
    {
      uint64_t v80 = v79(v76, audioStream_receivedAudioDataMessage, 0, a1);
      if (v80)
      {
        uint64_t v48 = v80;
        goto LABEL_223;
      }
      CFDictionaryRef v81 = v164[0];
      uint64_t v82 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v82) {
        uint64_t v83 = v82;
      }
      else {
        uint64_t v83 = 0;
      }
      CFMutableDictionaryRef v84 = *(uint64_t (**)(CFDictionaryRef))(v83 + 8);
      if (!v84)
      {
        uint64_t v48 = 4294954514;
        goto LABEL_223;
      }
      uint64_t v85 = v84(v81);
      if (v85)
      {
        uint64_t v48 = v85;
        goto LABEL_223;
      }
      uint64_t v86 = FigTransportStreamWaitUntilConnected((uint64_t)v164[0]);
      if (v86)
      {
        uint64_t v48 = v86;
        goto LABEL_223;
      }
      if (APSSettingsIsFeatureEnabled())
      {
        uint64_t v87 = FigTransportStreamSetReadyToSendBatchCallback((uint64_t)v164[0], (uint64_t)audioStream_audioDataBatchCallback, (uint64_t)a1);
        if (v87)
        {
          uint64_t v48 = v87;
          goto LABEL_223;
        }
      }
      else
      {
        uint64_t v143 = FigTransportStreamSetReadyToSendCallback((uint64_t)v164[0], (uint64_t)audioStream_audioDataCallback, (uint64_t)a1);
        if (v143)
        {
          uint64_t v48 = v143;
          goto LABEL_223;
        }
      }
      uint64_t v48 = 0;
      CFDictionaryRef v49 = v164[0];
      v164[0] = 0;
      goto LABEL_224;
    }
    uint64_t v48 = 4294954514;
  }
  else
  {
    uint64_t v48 = 4294954514;
  }
LABEL_223:
  APSLogErrorAt();
  CFDictionaryRef v49 = 0;
LABEL_224:
  kdebug_trace();
  CFRelease(v70);
LABEL_225:
  CFRelease(v62);
  if (v164[0])
  {
    uint64_t v88 = FigTransportStreamGetCMBaseObject();
    if (v88)
    {
      uint64_t v89 = v88;
      uint64_t v90 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v91 = v90 ? v90 : 0;
      uint64_t v92 = *(void (**)(uint64_t))(v91 + 24);
      if (v92) {
        v92(v89);
      }
    }
    CFRelease(v164[0]);
  }
  if (v48) {
    goto LABEL_342;
  }
  int v93 = v46[88];
  if (v93 <= 50 && (v93 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
LABEL_238:
  if (!*(unsigned char *)(DerivedStorage + 113))
  {
    CFDictionaryRef v50 = 0;
    uint64_t v98 = v147;
    goto LABEL_279;
  }
  uint64_t v94 = *(void *)(DerivedStorage + 88);
  v164[0] = 0;
  uint64_t v95 = APTransportStreamIDMakeWithPort();
  CFTypeRef v163 = 0;
  kdebug_trace();
  uint64_t v96 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v96) {
    uint64_t v97 = v96;
  }
  else {
    uint64_t v97 = 0;
  }
  uint64_t v99 = *(uint64_t (**)(uint64_t))(v97 + 24);
  if (!v99)
  {
    uint64_t v48 = 4294954514;
LABEL_249:
    APSLogErrorAt();
    CFDictionaryRef v50 = 0;
    CFMutableDictionaryRef v101 = 0;
LABEL_258:
    CFStringRef v110 = 0;
    goto LABEL_259;
  }
  uint64_t v100 = v99(v94);
  if (v100)
  {
    uint64_t v48 = v100;
    goto LABEL_249;
  }
  CFMutableDictionaryRef v101 = CFDictionaryCreateMutable(allocator, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!v101)
  {
    APSLogErrorAt();
    CFDictionaryRef v50 = 0;
    CFStringRef v110 = 0;
    uint64_t v48 = 4294960568;
    goto LABEL_259;
  }
  CFDictionarySetInt64();
  CFDictionarySetInt64();
  CFDictionarySetInt64();
  uint64_t v102 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v102) {
    uint64_t v103 = v102;
  }
  else {
    uint64_t v103 = 0;
  }
  CFDictionaryRef v104 = *(uint64_t (**)(uint64_t, uint64_t, CFMutableDictionaryRef, CFDictionaryRef *))(v103 + 64);
  if (!v104)
  {
    uint64_t v48 = 4294954514;
LABEL_257:
    APSLogErrorAt();
    CFDictionaryRef v50 = 0;
    goto LABEL_258;
  }
  uint64_t v105 = v104(v94, v95, v101, v164);
  if (v105)
  {
    uint64_t v48 = v105;
    goto LABEL_257;
  }
  uint64_t v106 = APSSetFBOPropertyInt64();
  if (v106)
  {
    uint64_t v48 = v106;
    goto LABEL_257;
  }
  uint64_t v107 = APSenderSessionGetCMBaseObject(v94);
  uint64_t v108 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v108) {
    uint64_t v109 = v108;
  }
  else {
    uint64_t v109 = 0;
  }
  uint64_t v132 = *(uint64_t (**)(uint64_t, __CFString *, const __CFAllocator *, CFTypeRef *))(v109 + 48);
  if (v132)
  {
    uint64_t v133 = v132(v107, @"KeyHolder", allocator, &v163);
    if (!v133)
    {
      CFStringRef v110 = APKeyHolderCoreUtilsEncryptionContextDataStreamCreateWithSeed(allocator, v158);
      if (!v110)
      {
        APSLogErrorAt();
        CFDictionaryRef v50 = 0;
        uint64_t v48 = 4294960568;
        goto LABEL_259;
      }
      CFTypeRef v135 = v163;
      CFDictionaryRef v134 = v164[0];
      uint64_t v136 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v136) {
        uint64_t v137 = v136;
      }
      else {
        uint64_t v137 = 0;
      }
      uint64_t v138 = *(uint64_t (**)(CFDictionaryRef, CFTypeRef, CFStringRef))(v137 + 80);
      if (v138)
      {
        uint64_t v139 = v138(v134, v135, v110);
        if (v139)
        {
          uint64_t v48 = v139;
        }
        else
        {
          uint64_t v140 = APSSetFBOPropertyInt64();
          if (v140)
          {
            uint64_t v48 = v140;
          }
          else
          {
            uint64_t v141 = FigTransportStreamSetMessageCallbacks((uint64_t)v164[0], (uint64_t)audioStream_receivedMediaDataControlMessage, (uint64_t)a1);
            if (v141)
            {
              uint64_t v48 = v141;
            }
            else
            {
              uint64_t v142 = FigTransportStreamResume((uint64_t)v164[0]);
              if (v142)
              {
                uint64_t v48 = v142;
              }
              else
              {
                uint64_t v48 = FigTransportStreamWaitUntilConnected((uint64_t)v164[0]);
                if (!v48)
                {
                  CFDictionaryRef v50 = v164[0];
                  v164[0] = 0;
                  goto LABEL_259;
                }
              }
            }
          }
        }
      }
      else
      {
        uint64_t v48 = 4294954514;
      }
      APSLogErrorAt();
      CFDictionaryRef v50 = 0;
      goto LABEL_259;
    }
    uint64_t v48 = v133;
  }
  else
  {
    uint64_t v48 = 4294954514;
  }
  APSLogErrorAt();
  CFDictionaryRef v50 = 0;
  CFStringRef v110 = 0;
LABEL_259:
  kdebug_trace();
  if (v164[0])
  {
    uint64_t v111 = FigTransportStreamGetCMBaseObject();
    if (v111)
    {
      uint64_t v112 = v111;
      uint64_t v113 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v114 = v113 ? v113 : 0;
      uint64_t v115 = *(void (**)(uint64_t))(v114 + 24);
      if (v115) {
        v115(v112);
      }
    }
    CFRelease(v164[0]);
    v164[0] = 0;
  }
  if (v101) {
    CFRelease(v101);
  }
  if (v163) {
    CFRelease(v163);
  }
  if (v110) {
    CFRelease(v110);
  }
  if (v48)
  {
    APSLogErrorAt();
    goto LABEL_292;
  }
  if (gLogCategory_APEndpointStreamBufferedAudio > 50)
  {
    uint64_t v98 = v147;
  }
  else
  {
    uint64_t v98 = v147;
    if (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
  }
LABEL_279:
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
  *(unsigned char *)(DerivedStorage + 273) = v146;
  *(void *)(DerivedStorage + 192) = v49;
  *(void *)(DerivedStorage + 200) = v50;
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
  APSEndpointStreamAudioHoseRegistrarProtocolGetProtocolID();
  Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
  if (!ProtocolVTable || (uint64_t v117 = *(void *)(ProtocolVTable + 16)) == 0)
  {
    uint64_t v48 = 4294954508;
LABEL_290:
    APSLogErrorAt();
LABEL_291:
    CFDictionaryRef v49 = 0;
    CFDictionaryRef v50 = 0;
    goto LABEL_292;
  }
  uint64_t v118 = *(uint64_t (**)(const void *, const void *, void, uint64_t *))(v117 + 8);
  if (!v118)
  {
    uint64_t v48 = 4294954514;
    goto LABEL_290;
  }
  uint64_t v119 = v118(v98, a1, 0, &v157);
  if (v119)
  {
    uint64_t v48 = v119;
    goto LABEL_290;
  }
  if (*(void *)(v157 + 8))
  {
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
    uint64_t v120 = *(const void **)(DerivedStorage + 248);
    *(void *)(DerivedStorage + 248) = v98;
    if (v98) {
      CFRetain(v98);
    }
    if (v120) {
      CFRelease(v120);
    }
    *(void *)(DerivedStorage + 256) = v157;
    *(unsigned char *)(DerivedStorage + 208) = 1;
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
    uint64_t v48 = APSEventRecorderRecordEvent();
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
    audioStream_audioHoseNotifyAudioAvailableInternal(a1);
    goto LABEL_291;
  }
  APSLogErrorAt();
  CFDictionaryRef v49 = 0;
  CFDictionaryRef v50 = 0;
  uint64_t v48 = 4294950536;
LABEL_292:
  if (v14) {
    CFRelease(v14);
  }
  if (v43) {
    CFRelease(v43);
  }
  if (v49)
  {
    uint64_t v121 = FigTransportStreamGetCMBaseObject();
    if (v121)
    {
      uint64_t v122 = v121;
      uint64_t v123 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v124 = v123 ? v123 : 0;
      uint64_t v125 = *(void (**)(uint64_t))(v124 + 24);
      if (v125) {
        v125(v122);
      }
    }
    CFRelease(v49);
  }
  if (v50)
  {
    uint64_t v126 = FigTransportStreamGetCMBaseObject();
    if (v126)
    {
      uint64_t v127 = v126;
      uint64_t v128 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v129 = v128 ? v128 : 0;
      uint64_t v130 = *(void (**)(uint64_t))(v129 + 24);
      if (v130) {
        v130(v127);
      }
    }
    CFRelease(v50);
  }
  if (value) {
    CFRelease(value);
  }
  if (v48) {
LABEL_316:
  }
    audioStream_suspendInternal((uint64_t)a1, 0);
  return v48;
}

void audioStream_receivedAudioDataMessage(uint64_t a1, int a2, uint64_t a3, const void *a4)
{
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a2 == 1684628836)
  {
    if (gLogCategory_APEndpointStreamBufferedAudio <= 50
      && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    Empty = (const void *)CFDictionaryGetEmpty();
    audioStream_Suspend(a4, Empty);
  }
}

uint64_t FigTransportStreamResume(uint64_t a1)
{
  uint64_t v2 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  int v4 = *(uint64_t (**)(uint64_t))(v3 + 8);
  if (!v4) {
    return 4294954514;
  }
  return v4(a1);
}

CFTypeRef audioStream_audioDataCallback(uint64_t a1, int a2, int *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  unsigned __int8 v21 = 0;
  CFArrayRef theArray = 0;
  if (a2)
  {
    int v19 = APSSignalErrorAt();
    CFTypeRef v9 = 0;
    CFArrayRef MutableCopy = 0;
    goto LABEL_37;
  }
  uint64_t v7 = DerivedStorage;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
  uint64_t v8 = *(const void **)(v7 + 248);
  if (v8) {
    CFTypeRef v9 = CFRetain(v8);
  }
  else {
    CFTypeRef v9 = 0;
  }
  unsigned __int8 v21 = *(_DWORD *)(v7 + 240);
  int v10 = *(unsigned __int8 *)(v7 + 273);
  CFArrayRef MutableCopy = *(const __CFArray **)(v7 + 232);
  *(void *)(v7 + 232) = 0;
  uint64_t v12 = *(void *)(v7 + 256);
  MEMORY[0x1D25EB390](*(void *)(v7 + 168));
  if (v9)
  {
    if (!v12)
    {
      if (gLogCategory_APEndpointStreamBufferedAudio <= 50
        && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFTypeRef v15 = 0;
      goto LABEL_25;
    }
    if (MutableCopy && CFArrayGetCount(MutableCopy))
    {
LABEL_13:
      if (CFArrayGetCount(MutableCopy))
      {
        CFStringRef ValueAtIndex = CFArrayGetValueAtIndex(MutableCopy, 0);
        CFTypeRef v15 = CFRetain(ValueAtIndex);
        CFArrayRemoveValueAtIndex(MutableCopy, 0);
        if (v21 && !CFArrayGetCount(MutableCopy))
        {
          if (v10) {
            int v16 = 1634754917;
          }
          else {
            int v16 = 1650814818;
          }
        }
        else if (v10)
        {
          int v16 = 1634754914;
        }
        else
        {
          int v16 = 1651861089;
        }
        *a3 = v16;
        goto LABEL_24;
      }
LABEL_19:
      CFTypeRef v15 = 0;
LABEL_24:
      MEMORY[0x1D25EB370](*(void *)(v7 + 168));
      *(_DWORD *)(v7 + 240) = v21;
      *(void *)(v7 + 232) = MutableCopy;
      MEMORY[0x1D25EB390](*(void *)(v7 + 168));
      CFArrayRef MutableCopy = 0;
LABEL_25:
      CFRelease(v9);
      CFTypeRef v17 = v15;
      goto LABEL_26;
    }
    int v13 = (*(uint64_t (**)(CFTypeRef, uint64_t, CFArrayRef *, unsigned __int8 *))(v12 + 8))(v9, a1, &theArray, &v21);
    if (!v13)
    {
      if (MutableCopy) {
        CFRelease(MutableCopy);
      }
      CFArrayRef MutableCopy = CFArrayCreateMutableCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, theArray);
      if (!MutableCopy) {
        goto LABEL_19;
      }
      goto LABEL_13;
    }
    int v19 = v13;
    APSLogErrorAt();
LABEL_37:
    if (v19 == -72095 || !v19) {
      goto LABEL_45;
    }
    goto LABEL_39;
  }
  APSLogErrorAt();
LABEL_39:
  if (gLogCategory_APEndpointStreamBufferedAudio <= 90
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a2) {
    audioStream_handleFatalError();
  }
LABEL_45:
  CFTypeRef v15 = 0;
  CFTypeRef v17 = 0;
  if (v9) {
    goto LABEL_25;
  }
LABEL_26:
  if (theArray) {
    CFRelease(theArray);
  }
  if (MutableCopy) {
    CFRelease(MutableCopy);
  }
  return v17;
}

void audioStream_receivedMediaDataControlMessage(uint64_t a1, int a2, uint64_t a3, const void *a4)
{
  if (gLogCategory_APEndpointStreamBufferedAudio <= 50
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a2 == 1684628836)
  {
    if (gLogCategory_APEndpointStreamBufferedAudio <= 50
      && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    Empty = (const void *)CFDictionaryGetEmpty();
    audioStream_Suspend(a4, Empty);
  }
}

uint64_t audioStream_copyTransportFormatDescriptionForSourceContentFormatDescription()
{
  FigEndpointStreamAirPlayGetFigEndpointStream();
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
  APSAudioFormatDescriptionListGetForBufferedSender();
  uint64_t IntersectionList = APSAudioFormatDescriptionListCreateIntersectionList();
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
  if (IntersectionList
    || (uint64_t IntersectionList = APSAudioFormatDescriptionListCopyTransportFormatDescriptionForSourceFormatDescription(),
        IntersectionList))
  {
    APSLogErrorAt();
  }
  return IntersectionList;
}

uint64_t audioStream_isPassthroughSupportedForFormatDescription(uint64_t a1, uint64_t a2, BOOL *a3)
{
  FigEndpointStreamAirPlayGetFigEndpointStream();
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamBufferedAudio <= 10
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 168));
  if (!a3)
  {
    APSLogErrorAt();
    uint64_t v9 = 4294950536;
    goto LABEL_18;
  }
  if (!APSSettingsIsFeatureEnabled())
  {
    uint64_t v9 = 0;
    *a3 = 0;
    goto LABEL_18;
  }
  uint64_t v5 = APSAudioFormatDescriptionCreateWithFigEndpointStreamAudioFormatDescription();
  if (v5)
  {
    uint64_t v9 = v5;
LABEL_24:
    APSLogErrorAt();
    goto LABEL_18;
  }
  uint64_t v6 = APSAudioFormatDescriptionListCreate();
  if (v6)
  {
    uint64_t v9 = v6;
    goto LABEL_24;
  }
  APAudioFormatAtmosIsAllowedForCurrentDeviceAsSender();
  uint64_t v7 = APSAudioFormatDescriptionListAddSupportedFormatsForPassthrough();
  if (v7)
  {
    uint64_t v9 = v7;
    goto LABEL_24;
  }
  if (APSAudioFormatDescriptionListContainsFormat()) {
    BOOL v8 = APSAudioFormatDescriptionListContainsFormat() != 0;
  }
  else {
    BOOL v8 = 0;
  }
  APSAudioFormatDescriptionListCopyDebugString();
  if (gLogCategory_APEndpointStreamBufferedAudio <= 10
    && (gLogCategory_APEndpointStreamBufferedAudio != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v9 = 0;
  *a3 = v8;
LABEL_18:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 168));
  return v9;
}

uint64_t APMessageRingBufferedGetTypeID()
{
  if (APMessageRingBufferedGetTypeID_sInitOnce != -1) {
    dispatch_once_f(&APMessageRingBufferedGetTypeID_sInitOnce, &APMessageRingBufferedGetTypeID_sTypeID, (dispatch_function_t)ring_getTypeID_0);
  }
  return APMessageRingBufferedGetTypeID_sTypeID;
}

uint64_t ring_getTypeID_0(uint64_t *a1)
{
  uint64_t result = _CFRuntimeRegisterClass();
  *a1 = result;
  return result;
}

uint64_t APMessageRingBufferedCreate(uint64_t a1, size_t a2, malloc_zone_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  if (0x10000 % a2 || !a4 || !a6)
  {
    APSLogErrorAt();
    return 4294960591;
  }
  if (APMessageRingBufferedGetTypeID_sInitOnce != -1) {
    dispatch_once_f(&APMessageRingBufferedGetTypeID_sInitOnce, &APMessageRingBufferedGetTypeID_sTypeID, (dispatch_function_t)ring_getTypeID_0);
  }
  uint64_t Instance = (_OWORD *)_CFRuntimeCreateInstance();
  if (!Instance)
  {
    APSLogErrorAt();
    return 4294960568;
  }
  int v16 = Instance;
  Instance[3] = 0u;
  Instance[4] = 0u;
  Instance[1] = 0u;
  Instance[2] = 0u;
  *((_DWORD *)Instance + 4) = 0;
  RandomBytes();
  *((_DWORD *)v16 + 5) &= 0xFFFFFFu;
  if (!a3) {
    a3 = malloc_default_zone();
  }
  *((void *)v16 + 5) = a3;
  CFTypeRef v17 = malloc_type_zone_calloc(a3, a2, 0x50uLL, 0x102004088E31008uLL);
  *((void *)v16 + 4) = v17;
  if (!v17)
  {
    APSLogErrorAt();
    CFRelease(v16);
    return 4294960568;
  }
  *((void *)v16 + 3) = a2;
  *((void *)v16 + 6) = a4;
  *((void *)v16 + 7) = a5;
  *((void *)v16 + 8) = a6;
  *((void *)v16 + 9) = a7;
  if (gLogCategory_APMessageRingBuffered <= 50
    && (gLogCategory_APMessageRingBuffered != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t result = 0;
  *a8 = v16;
  return result;
}

uint64_t APMessageRingBufferedGetUsedCount(uint64_t a1)
{
  return (unsigned __int16)(*(_WORD *)(a1 + 18) - *(_WORD *)(a1 + 16));
}

uint64_t APMessageRingBufferedGetByteCountAtIndex(uint64_t a1, unsigned int a2, int *a3)
{
  if (a3)
  {
    unint64_t v3 = *(unsigned __int16 *)(a1 + 16);
    if (v3 == a2)
    {
      uint64_t result = 0;
      *a3 = 0;
    }
    else
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 80 * ((unint64_t)a2 % *(void *)(a1 + 24)) + 72)
         - *(_DWORD *)(*(void *)(a1 + 32) + 80 * (v3 % *(void *)(a1 + 24)) + 72);
      *a3 = v5;
      if (v5 <= 0)
      {
        APSLogErrorAt();
        return 4294960584;
      }
      else
      {
        return 0;
      }
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960591;
  }
  return result;
}

uint64_t APMessageRingBufferedGetTotalByteCount(uint64_t a1, int *a2)
{
  if (!a2)
  {
    uint64_t v3 = 4294960591;
LABEL_7:
    APSLogErrorAt();
    return v3;
  }
  int v2 = *(_DWORD *)(*(void *)(a1 + 32)
                 + 80 * ((unint64_t)*(unsigned __int16 *)(a1 + 18) % *(void *)(a1 + 24))
                 + 72)
     - *(_DWORD *)(*(void *)(a1 + 32)
                 + 80 * ((unint64_t)*(unsigned __int16 *)(a1 + 16) % *(void *)(a1 + 24))
                 + 72);
  *a2 = v2;
  if (v2 < 0)
  {
    uint64_t v3 = 4294960584;
    goto LABEL_7;
  }
  return 0;
}

unint64_t APMessageRingBufferedGetFirstValidReadIndex(uint64_t a1, _DWORD *a2)
{
  unint64_t result = *(unsigned __int16 *)(a1 + 16);
  if (a2) {
    *a2 = *(_DWORD *)(*(void *)(a1 + 32) + 80 * (result % *(void *)(a1 + 24)) + 64);
  }
  return result;
}

uint64_t APMessageRingBufferedGetLastValidReadIndexAndTimestamp(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  unsigned __int16 v3 = *(_WORD *)(a1 + 18) - 1;
  if (a2) {
    *a2 = *(_DWORD *)(*(void *)(a1 + 32)
  }
                    + 80 * ((unint64_t)(unsigned __int16)(*(_WORD *)(a1 + 18) - 1) % *(void *)(a1 + 24))
                    + 64);
  if (a3)
  {
    unint64_t v4 = *(void *)(a1 + 32) + 80 * ((unint64_t)v3 % *(void *)(a1 + 24));
    long long v5 = *(_OWORD *)(v4 + 16);
    *(void *)(a3 + 16) = *(void *)(v4 + 32);
    *(_OWORD *)a3 = v5;
  }
  return v3;
}

uint64_t APMessageRingBufferedPruneMessagesUntilTimestamp(uint64_t a1, uint64_t a2, _WORD *a3)
{
  if (*(unsigned char *)(a2 + 12))
  {
    if (gLogCategory_APMessageRingBuffered <= 20
      && (gLogCategory_APMessageRingBuffered != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    int v6 = *(unsigned __int16 *)(a1 + 16);
    if (v6 != *(unsigned __int16 *)(a1 + 18))
    {
      unint64_t v7 = *(void *)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 32);
      do
      {
        uint64_t v9 = v8 + 80 * ((unsigned __int16)v6 % v7);
        long long v10 = *(_OWORD *)(v9 + 16);
        time1.epoch = *(void *)(v9 + 32);
        *(_OWORD *)&time1.CMTimeValue value = v10;
        CMTime time2 = *(CMTime *)a2;
        if (CMTimeCompare(&time1, &time2) != -1) {
          break;
        }
        if (gLogCategory_APMessageRingBuffered <= 10
          && (gLogCategory_APMessageRingBuffered != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        unint64_t v7 = *(void *)(a1 + 24);
        uint64_t v8 = *(void *)(a1 + 32);
        unint64_t v11 = (unsigned __int16)v6 % v7;
        uint64_t v12 = v8 + 80 * v11;
        *(_DWORD *)(v12 + 64) = -1;
        if (*(void *)v12)
        {
          CFRelease(*(CFTypeRef *)v12);
          unint64_t v7 = *(void *)(a1 + 24);
          uint64_t v8 = *(void *)(a1 + 32);
          unint64_t v11 = (unsigned __int16)v6 % v7;
          *(void *)(v8 + 80 * v11) = 0;
        }
        int v13 = *(const void **)(v8 + 80 * v11 + 8);
        if (v13)
        {
          CFRelease(v13);
          unint64_t v7 = *(void *)(a1 + 24);
          uint64_t v8 = *(void *)(a1 + 32);
          *(void *)(v8 + 80 * ((unsigned __int16)v6 % v7) + 8) = 0;
        }
        ++*(_WORD *)(a1 + 16);
        LOWORD(v6) = v6 + 1;
      }
      while (*(unsigned __int16 *)(a1 + 18) != (unsigned __int16)v6);
    }
    uint64_t result = 0;
    if (a3) {
      *a3 = *(_WORD *)(a1 + 16);
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960591;
  }
  return result;
}

uint64_t APMessageRingBufferedPruneMessagesFromTimestamp(uint64_t a1, uint64_t a2, _WORD *a3, _DWORD *a4, _DWORD *a5)
{
  if ((*(unsigned char *)(a2 + 12) & 1) == 0)
  {
LABEL_45:
    APSLogErrorAt();
    return 4294960591;
  }
  int v10 = *(unsigned __int16 *)(a1 + 18);
  if (gLogCategory_APMessageRingBuffered <= 50
    && (gLogCategory_APMessageRingBuffered != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  int v11 = *(unsigned __int16 *)(a1 + 16);
  if (v11 == v10)
  {
    int v12 = 0;
LABEL_26:
    if (gLogCategory_APMessageRingBuffered <= 90
      && (gLogCategory_APMessageRingBuffered != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_30;
  }
  int v13 = 0;
  int v12 = 0;
  do
  {
    unint64_t v14 = *(void *)(a1 + 32) + 80 * ((unint64_t)(unsigned __int16)v11 % *(void *)(a1 + 24));
    long long v15 = *(_OWORD *)(v14 + 16);
    time1.epoch = *(void *)(v14 + 32);
    *(_OWORD *)&time1.CMTimeValue value = v15;
    CMTime time2 = *(CMTime *)a2;
    if (CMTimeCompare(&time1, &time2) == 1)
    {
      unint64_t v17 = *(void *)(a1 + 24);
      uint64_t v16 = *(void *)(a1 + 32);
      uint64_t v18 = (int *)(v16 + 80 * ((unsigned __int16)v11 % v17) + 64);
      if (v13)
      {
        *uint64_t v18 = -1;
      }
      else
      {
        int v12 = *v18;
        *uint64_t v18 = -1;
        *(_WORD *)(a1 + 18) = v11;
        if ((__int16)(*(_WORD *)(a1 + 16) - v11) >= 1) {
          goto LABEL_45;
        }
        if (gLogCategory_APMessageRingBuffered <= 50)
        {
          if (gLogCategory_APMessageRingBuffered != -1
            || (v19 = _LogCategory_Initialize(), v17 = *(void *)(a1 + 24), uint64_t v16 = *(void *)(a1 + 32), v19))
          {
            LogPrintF();
            unint64_t v17 = *(void *)(a1 + 24);
            uint64_t v16 = *(void *)(a1 + 32);
          }
        }
      }
      unint64_t v20 = (unsigned __int16)v11 % v17;
      unsigned __int8 v21 = *(const void **)(v16 + 80 * v20);
      if (v21)
      {
        CFRelease(v21);
        uint64_t v16 = *(void *)(a1 + 32);
        unint64_t v20 = (unint64_t)(unsigned __int16)v11 % *(void *)(a1 + 24);
        *(void *)(v16 + 80 * v20) = 0;
      }
      uint64_t v22 = *(const void **)(v16 + 80 * v20 + 8);
      if (v22)
      {
        CFRelease(v22);
        *(void *)(*(void *)(a1 + 32) + 80 * ((unint64_t)(unsigned __int16)v11 % *(void *)(a1 + 24)) + 8) = 0;
      }
      int v13 = 1;
    }
    LOWORD(v11) = v11 + 1;
  }
  while (v10 != (unsigned __int16)v11);
  if (!v13) {
    goto LABEL_26;
  }
LABEL_30:
  if (a3) {
    *a3 = *(_WORD *)(a1 + 18);
  }
  if (a4)
  {
    *a4 = v12;
    if (gLogCategory_APMessageRingBuffered <= 50
      && (gLogCategory_APMessageRingBuffered != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  if (!a5) {
    return 0;
  }
  *a5 = *(_DWORD *)(a1 + 20);
  if (gLogCategory_APMessageRingBuffered > 50) {
    return 0;
  }
  if (gLogCategory_APMessageRingBuffered != -1 || (uint64_t result = _LogCategory_Initialize(), result))
  {
    LogPrintF();
    return 0;
  }
  return result;
}

uint64_t APMessageRingBufferedGetNextFreeBacking(uint64_t a1, size_t a2)
{
  unint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(unsigned __int16 *)(a1 + 18);
  if (v2 == (unsigned __int16)(v3 - *(_WORD *)(a1 + 16)) + 1) {
    return 0;
  }
  unint64_t v7 = v3 % v2;
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = v8 + 80 * v7;
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t v10 = v9 + 8;
  if (!v11)
  {
    if ((*(unsigned int (**)(void, size_t, uint64_t))(a1 + 48))(*(void *)(a1 + 56), a2, v10))
    {
LABEL_16:
      APSLogErrorAt();
      return 0;
    }
    uint64_t v8 = *(void *)(a1 + 32);
    unint64_t v7 = (unint64_t)*(unsigned __int16 *)(a1 + 18) % *(void *)(a1 + 24);
  }
  DataCFIndex Length = CMBlockBufferGetDataLength(*(CMBlockBufferRef *)(v8 + 80 * v7 + 8));
  if (a2 && DataLength < a2)
  {
    if (gLogCategory_APMessageRingBuffered <= 50
      && (gLogCategory_APMessageRingBuffered != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v13 = *(void *)(a1 + 32);
    unint64_t v14 = (unint64_t)*(unsigned __int16 *)(a1 + 18) % *(void *)(a1 + 24);
    long long v15 = *(const void **)(v13 + 80 * v14 + 8);
    if (v15)
    {
      CFRelease(v15);
      uint64_t v13 = *(void *)(a1 + 32);
      unint64_t v14 = (unint64_t)*(unsigned __int16 *)(a1 + 18) % *(void *)(a1 + 24);
      *(void *)(v13 + 80 * v14 + 8) = 0;
    }
    if ((*(unsigned int (**)(void, size_t, unint64_t))(a1 + 48))(*(void *)(a1 + 56), a2, v13 + 80 * v14 + 8))
    {
      goto LABEL_16;
    }
  }
  return *(void *)(*(void *)(a1 + 32)
                   + 80 * ((unint64_t)*(unsigned __int16 *)(a1 + 18) % *(void *)(a1 + 24))
                   + 8);
}

uint64_t APMessageRingBufferedEnqueueMessageForSending(uint64_t a1, CMBlockBufferRef theBuffer, long long *a3, long long *a4)
{
  int v25 = 0;
  dataPointerOut = 0;
  size_t totalLengthOut = 0;
  if (*(void *)(a1 + 24) == (unsigned __int16)(*(_WORD *)(a1 + 18) - *(_WORD *)(a1 + 16)) + 1)
  {
    APSLogErrorAt();
    return 4294960587;
  }
  else
  {
    CMBlockBufferGetDataPointer(theBuffer, 0, 0, &totalLengthOut, &dataPointerOut);
    NextFreeBacking = (OpaqueCMBlockBuffer *)APMessageRingBufferedGetNextFreeBacking(a1, 0);
    CMBlockBufferGetDataPointer(NextFreeBacking, 0, 0, 0, &v25);
    if (dataPointerOut == v25)
    {
      uint64_t v9 = (*(uint64_t (**)(CMBlockBufferRef, void, void))(a1 + 64))(theBuffer, *(unsigned int *)(a1 + 20), *(void *)(a1 + 72));
      if (v9)
      {
        uint64_t v12 = v9;
        APSLogErrorAt();
      }
      else
      {
        if (gLogCategory_APMessageRingBuffered <= 10
          && (gLogCategory_APMessageRingBuffered != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        if (gLogCategory_APMessageRingBufferedFullness <= 50
          && (gLogCategory_APMessageRingBufferedFullness != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t v10 = (const void **)(*(void *)(a1 + 32)
                            + 80 * ((unint64_t)*(unsigned __int16 *)(a1 + 18) % *(void *)(a1 + 24)));
        uint64_t v11 = *v10;
        if (theBuffer) {
          CFRetain(theBuffer);
        }
        *uint64_t v10 = theBuffer;
        if (v11) {
          CFRelease(v11);
        }
        uint64_t v12 = 0;
        unint64_t v13 = *(void *)(a1 + 32) + 80 * ((unint64_t)*(unsigned __int16 *)(a1 + 18) % *(void *)(a1 + 24));
        long long v14 = *a3;
        *(void *)(v13 + 32) = *((void *)a3 + 2);
        *(_OWORD *)(v13 + 16) = v14;
        unint64_t v15 = *(void *)(a1 + 32) + 80 * ((unint64_t)*(unsigned __int16 *)(a1 + 18) % *(void *)(a1 + 24));
        long long v16 = *a4;
        *(void *)(v15 + 56) = *((void *)a4 + 2);
        *(_OWORD *)(v15 + 40) = v16;
        unint64_t v17 = *(unsigned __int16 *)(a1 + 18);
        unint64_t v18 = *(void *)(a1 + 24);
        uint64_t v19 = *(void *)(a1 + 32);
        unint64_t v20 = v17 % v18;
        LOWORD(v17) = v17 + 1;
        int v21 = *(_DWORD *)(a1 + 20);
        uint64_t v22 = v19 + 80 * v20;
        *(_DWORD *)(v22 + 64) = v21;
        *(void *)(v19 + 80 * ((unsigned __int16)v17 % v18) + 72) = totalLengthOut
                                                                   + *(void *)(v22 + 72);
        *(_DWORD *)(a1 + 20) = (v21 + 1) & 0xFFFFFF;
        *(_WORD *)(a1 + 18) = v17;
      }
    }
    else
    {
      APSLogErrorAt();
      return 4294960591;
    }
  }
  return v12;
}

uint64_t APMessageRingBufferedGetMessageAtIndex(uint64_t a1, unsigned int a2, _DWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 32);
  unint64_t v6 = (unint64_t)a2 % *(void *)(a1 + 24);
  int v7 = *(_DWORD *)(v5 + 80 * v6 + 64);
  if (v7 == -1)
  {
    if (gLogCategory_APMessageRingBuffered <= 30
      && (gLogCategory_APMessageRingBuffered != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return 0;
  }
  else
  {
    uint64_t result = *(void *)(v5 + 80 * v6);
    if (result)
    {
      if (a3) {
        *a3 = v7;
      }
      if (a4)
      {
        uint64_t v10 = v5 + 80 * v6;
        long long v11 = *(_OWORD *)(v10 + 16);
        *(void *)(a4 + 16) = *(void *)(v10 + 32);
        *(_OWORD *)a4 = v11;
      }
      if (a5)
      {
        unint64_t v12 = *(void *)(a1 + 32) + 80 * ((unint64_t)a2 % *(void *)(a1 + 24));
        long long v13 = *(_OWORD *)(v12 + 40);
        *(void *)(a5 + 16) = *(void *)(v12 + 56);
        *(_OWORD *)a5 = v13;
      }
    }
  }
  return result;
}

uint64_t APMessageRingBufferedFlush(uint64_t a1, _WORD *a2, _DWORD *a3)
{
  if (a1)
  {
    if (gLogCategory_APMessageRingBuffered <= 50
      && (gLogCategory_APMessageRingBuffered != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    int v6 = *(unsigned __int16 *)(a1 + 16);
    if (v6 != *(unsigned __int16 *)(a1 + 18))
    {
      unint64_t v7 = *(void *)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 32);
      do
      {
        unint64_t v9 = (unsigned __int16)v6;
        unint64_t v10 = (unsigned __int16)v6 % v7;
        uint64_t v11 = v8 + 80 * v10;
        *(_DWORD *)(v11 + 64) = -1;
        if (*(void *)v11)
        {
          CFRelease(*(CFTypeRef *)v11);
          unint64_t v7 = *(void *)(a1 + 24);
          uint64_t v8 = *(void *)(a1 + 32);
          unint64_t v10 = v9 % v7;
          *(void *)(v8 + 80 * (v9 % v7)) = 0;
        }
        unint64_t v12 = *(const void **)(v8 + 80 * v10 + 8);
        if (v12)
        {
          CFRelease(v12);
          unint64_t v7 = *(void *)(a1 + 24);
          uint64_t v8 = *(void *)(a1 + 32);
          *(void *)(v8 + 80 * (v9 % v7) + 8) = 0;
        }
        LOWORD(v6) = v9 + 1;
      }
      while (*(unsigned __int16 *)(a1 + 18) != (unsigned __int16)(v9 + 1));
    }
    *(_WORD *)(a1 + 16) = v6;
    if (a2) {
      *a2 = v6;
    }
    if (a3) {
      *a3 = *(_DWORD *)(a1 + 20);
    }
  }
  return 0;
}

BOOL APMessageRingBufferedIsFull(uint64_t a1)
{
  return *(void *)(a1 + 24) == (unsigned __int16)(*(_WORD *)(a1 + 18) - *(_WORD *)(a1 + 16)) + 1;
}

void ring_Finalize_0(uint64_t a1)
{
  if (gLogCategory_APMessageRingBuffered <= 30
    && (gLogCategory_APMessageRingBuffered != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  unint64_t v2 = *(char **)(a1 + 32);
  if (*(void *)(a1 + 24))
  {
    uint64_t v3 = 0;
    unint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const void **)&v2[v3];
      if (v5)
      {
        CFRelease(v5);
        unint64_t v2 = *(char **)(a1 + 32);
        *(void *)&v2[v3] = 0;
      }
      int v6 = *(const void **)&v2[v3 + 8];
      if (v6)
      {
        CFRelease(v6);
        unint64_t v2 = *(char **)(a1 + 32);
        *(void *)&v2[v3 + 8] = 0;
      }
      ++v4;
      v3 += 80;
    }
    while (v4 < *(void *)(a1 + 24));
  }
  else if (!v2)
  {
    return;
  }
  malloc_zone_free(*(malloc_zone_t **)(a1 + 40), v2);
  *(void *)(a1 + 32) = 0;
}

uint64_t __APSenderStatsCollectorGetTypeID_block_invoke()
{
  uint64_t result = _CFRuntimeRegisterClass();
  APSenderStatsCollectorGetTypeID_typeID = result;
  return result;
}

uint64_t APSenderStatsCollectorGetShared()
{
  if (APSenderStatsCollectorGetShared_once != -1) {
    dispatch_once(&APSenderStatsCollectorGetShared_once, &__block_literal_global_5);
  }
  return APSenderStatsCollectorGetShared_collector;
}

uint64_t __APSenderStatsCollectorGetShared_block_invoke()
{
  CFAllocatorRef v0 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  if (APSenderStatsCollectorGetTypeID_once != -1) {
    dispatch_once(&APSenderStatsCollectorGetTypeID_once, &__block_literal_global_8);
  }
  uint64_t Instance = _CFRuntimeCreateInstance();
  uint64_t v2 = Instance;
  if (Instance)
  {
    *(void *)(Instance + 112) = 0;
    *(_OWORD *)(Instance + 80) = 0u;
    *(_OWORD *)(Instance + 96) = 0u;
    *(_OWORD *)(Instance + 48) = 0u;
    *(_OWORD *)(Instance + 64) = 0u;
    *(_OWORD *)(Instance + 16) = 0u;
    *(_OWORD *)(Instance + 32) = 0u;
    *(void *)(Instance + 16) = dispatch_queue_create("APSenderStatsCollectorQueue", 0);
    *(void *)(v2 + 24) = CFDictionaryCreateMutable(v0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    *(void *)(v2 + 32) = NanosecondsToUpTicks();
    *(void *)(v2 + 48) = NanosecondsToUpTicks();
    *(double *)(v2 + 64) = (double)(unint64_t)UpTicksPerSecond();
    *(_OWORD *)(v2 + 72) = xmmword_1D0B887F0;
    *(unsigned char *)(v2 + 88) = 0;
    *(unsigned char *)(v2 + 112) = 1;
    uint64_t result = IsAppleInternalBuild();
    *(unsigned char *)(v2 + 112) = result;
  }
  else
  {
    uint64_t result = APSLogErrorAt();
  }
  APSenderStatsCollectorGetShared_collector = v2;
  return result;
}

uint64_t APSenderStatsCollectorCopySystemStats(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = 0;
  unint64_t v7 = &v6;
  uint64_t v8 = 0x2000000000;
  int v9 = 0;
  if (a1 && a2)
  {
    uint64_t v2 = *(NSObject **)(a1 + 16);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 0x40000000;
    block[2] = __APSenderStatsCollectorCopySystemStats_block_invoke;
    block[3] = &unk_1E6892380;
    block[4] = &v6;
    void block[5] = a1;
    void block[6] = a2;
    dispatch_sync(v2, block);
    uint64_t v3 = *((unsigned int *)v7 + 6);
  }
  else
  {
    APSLogErrorAt();
    uint64_t v3 = 4294960591;
    *((_DWORD *)v7 + 6) = -6705;
  }
  _Block_object_dispose(&v6, 8);
  return v3;
}

CFDictionaryRef __APSenderStatsCollectorCopySystemStats_block_invoke(void *a1)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = a1[5];
  uint64_t v2 = (CFDictionaryRef *)a1[6];
  uint64_t v4 = mach_absolute_time();
  uint64_t v5 = (CFAllocatorRef *)MEMORY[0x1E4F1CF80];
  if (*(unsigned char *)(v3 + 112))
  {
    uint64_t v6 = v4;
    unint64_t v7 = v4 - *(void *)(v3 + 40);
    if (v7 > *(void *)(v3 + 32))
    {
      *(void *)(v3 + 40) = v4;
      double v8 = (double)v7 / *(double *)(v3 + 64);
      memset(&v28, 0, sizeof(v28));
      if (getrusage(0, &v28))
      {
        APSLogErrorAt();
      }
      else
      {
        double v9 = (double)v28.ru_utime.tv_usec / 1000000.0
           + (double)v28.ru_utime.tv_sec
           + (double)v28.ru_stime.tv_usec / 1000000.0
           + (double)v28.ru_stime.tv_sec;
        double v10 = v9 - *(double *)(v3 + 96);
        *(double *)(v3 + 96) = v9;
        double v11 = v10 / v8;
        if (*(unsigned char *)(v3 + 88))
        {
          *(double *)(v3 + 80) = *(double *)(v3 + 80) + *(double *)(v3 + 72) * (v11 - *(double *)(v3 + 80));
        }
        else
        {
          *(double *)(v3 + 80) = v11;
          *(unsigned char *)(v3 + 88) = 1;
        }
      }
      FigCFDictionarySetDouble();
      CFAllocatorRef v29 = 0;
      v28.ru_utime.int tv_sec = 0;
      v28.ru_utime.tv_usec = 0;
      int Statistics = CARenderServerGetStatistics();
      int tv_sec = (int)v29;
      if (v29)
      {
        int v14 = Statistics;
        if (Statistics >= 3) {
          int v15 = 3;
        }
        else {
          int v15 = Statistics;
        }
        if (Statistics >= 1)
        {
          uint64_t v26 = v6;
          uint64_t v16 = 0;
          if (v15 <= 1) {
            uint64_t v17 = 1;
          }
          else {
            uint64_t v17 = v15;
          }
          do
          {
            LODWORD(cf) = 0;
            unint64_t v18 = strchr(v29[v16], 10);
            if (v18 && sscanf(v18 + 1, " Total Frames: %d", &cf) == 1) {
              *((_DWORD *)&v28.ru_utime.tv_sec + v16) = cf;
            }
            free(v29[v16++]);
          }
          while (v17 != v16);
          uint64_t v6 = v26;
          uint64_t v5 = (CFAllocatorRef *)MEMORY[0x1E4F1CF80];
          if (v14 >= 4)
          {
            uint64_t v19 = 3;
            do
              free(v29[v19++]);
            while (v14 != v19);
          }
        }
        free(v29);
        int tv_sec = v28.ru_utime.tv_sec;
        int v20 = *((_DWORD *)&v28.ru_utime.tv_sec + v15 - (v14 > 0));
      }
      else
      {
        int v20 = 0;
      }
      *(_DWORD *)(v3 + 104) = tv_sec;
      *(_DWORD *)(v3 + 108) = v20;
      FigCFDictionarySetInt32();
      FigCFDictionarySetInt32();
      FigCFDictionarySetInt32();
      if (v6 - *(void *)(v3 + 56) > *(void *)(v3 + 48))
      {
        CFTypeRef cf = 0;
        APTransportGetSharedTransport();
        uint64_t CMBaseObject = FigTransportGetCMBaseObject();
        uint64_t v22 = *(void *)(CMBaseObjectGetVTable() + 8);
        if (v22) {
          uint64_t v23 = v22;
        }
        else {
          uint64_t v23 = 0;
        }
        int v24 = *(unsigned int (**)(uint64_t, void, CFAllocatorRef, CFTypeRef *))(v23 + 48);
        if (!v24 || v24(CMBaseObject, *MEMORY[0x1E4F47670], *v5, &cf))
        {
          if (gLogCategory_APSenderStatsCollector <= 50
            && (gLogCategory_APSenderStatsCollector != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
        }
        else
        {
          APTransportTrafficRegistrarGetRegistration();
          if (!CFPropertyListCreateFormatted()) {
            CFDictionarySetValue(*(CFMutableDictionaryRef *)(v3 + 24), @"trafficRegistration", 0);
          }
          if (!APTransportTrafficRegistrarGetRSSI()) {
            FigCFDictionarySetInt32();
          }
          if (!APTransportTrafficRegistrarGetWifiChannel()) {
            FigCFDictionarySetInt32();
          }
          APTransportTrafficRegistrarGetAWDLChannelSequence();
          CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(v3 + 24), @"awdlChannelLength");
          CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(v3 + 24), @"awdlChannelSeq");
          CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(v3 + 24), @"awdlChannelFlags");
        }
        if (cf) {
          CFRelease(cf);
        }
        *(void *)(v3 + 56) = v6;
      }
      if (gLogCategory_APSenderStatsCollector <= 20
        && (gLogCategory_APSenderStatsCollector != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
  }
  CFDictionaryRef result = CFDictionaryCreateCopy(*v5, *(CFDictionaryRef *)(v3 + 24));
  *uint64_t v2 = result;
  *(_DWORD *)(*(void *)(a1[4] + 8) + 24) = 0;
  return result;
}

void collector_finalize()
{
  if (gLogCategory_APSenderStatsCollector <= 100
    && (gLogCategory_APSenderStatsCollector != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1C8] = 7;
}

uint64_t APAudioEngineAVCCreate(uint64_t a1, const void *a2, void *a3)
{
  if (a2 && a3)
  {
    FigEndpointStreamAudioEngineGetClassID();
    uint64_t v5 = CMDerivedObjectCreate();
    if (v5)
    {
      uint64_t v7 = v5;
      APSLogErrorAt();
    }
    else
    {
      uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
      *uint64_t DerivedStorage = CFRetain(a2);
      DerivedStorage[6] = FigSimpleMutexCreate();
      if (gLogCategory_APAudioEngineAVC <= 50
        && (gLogCategory_APAudioEngineAVC != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v7 = 0;
      *a3 = 0;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294951815;
  }
  return v7;
}

void audioEngineAVC_Finalize()
{
  uint64_t DerivedStorage = (const void **)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioEngineAVC <= 50
    && (gLogCategory_APAudioEngineAVC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  audioEngineAVC_suspendInternal();
  FigSimpleMutexDestroy();
  uint64_t v1 = *DerivedStorage;
  if (*DerivedStorage)
  {
    CFRelease(v1);
  }
}

__CFString *audioEngineAVC_CopyDebugDescription()
{
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppendFormat(Mutable, 0, @"<APAudioEngineAVC>");
  return Mutable;
}

uint64_t audioEngineAVC_CopyProperty(int a1, CFTypeRef cf2, const __CFAllocator *a3, CFDictionaryRef *a4)
{
  if (gLogCategory_APAudioEngineAVC <= 30
    && (gLogCategory_APAudioEngineAVC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (cf2 && a4)
  {
    if (CFEqual(@"outputLatency", cf2))
    {
      CMTime time = *(CMTime *)*(void *)&MEMORY[0x1E4F1FA48];
      CFDictionaryRef v7 = CMTimeCopyAsDictionary(&time, a3);
      *a4 = v7;
      if (v7)
      {
        return 0;
      }
      else
      {
        APSLogErrorAt();
        return 4294951816;
      }
    }
    else
    {
      return 4294954512;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294951815;
  }
}

uint64_t audioEngineAVC_SetProperty(uint64_t a1, const void *a2, uint64_t a3)
{
  if (a2 && a3)
  {
    if (CFEqual(@"audioSourceFirstFrameAnchorTime", a2)) {
      return 0;
    }
    else {
      return 4294954512;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294951815;
  }
}

uint64_t audioEngineAVC_suspendInternal()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  UpTicksPerSecond();
  FigSimpleMutexCheckIsLockedOnThisThread();
  mach_absolute_time();
  if (*(unsigned char *)(DerivedStorage + 9))
  {
    FigHALAudioConduitDeviceHALStopStream();
    *(unsigned char *)(DerivedStorage + 9) = 0;
  }
  mach_absolute_time();
  if (*(unsigned char *)(DerivedStorage + 8))
  {
    FigHALAudioConduitDeviceHALStopIO();
    *(unsigned char *)(DerivedStorage + 8) = 0;
  }
  mach_absolute_time();
  uint64_t v1 = *(void *)(DerivedStorage + 16);
  if (v1)
  {
    uint64_t v2 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v2) {
      uint64_t v3 = v2;
    }
    else {
      uint64_t v3 = 0;
    }
    uint64_t v4 = *(unsigned int (**)(uint64_t))(v3 + 16);
    if ((!v4 || v4(v1))
      && gLogCategory_APAudioEngineAVC <= 90
      && (gLogCategory_APAudioEngineAVC != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v5 = *(void *)(DerivedStorage + 16);
    uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v6) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 0;
    }
    double v8 = *(uint64_t (**)(uint64_t, void, void))(v7 + 120);
    if (v8)
    {
      uint64_t v1 = v8(v5, 0, 0);
      if (!v1)
      {
LABEL_26:
        double v9 = *(const void **)(DerivedStorage + 16);
        if (v9)
        {
          CFRelease(v9);
          *(void *)(DerivedStorage + 16) = 0;
        }
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v1 = 4294954514;
    }
    if (gLogCategory_APAudioEngineAVC <= 90
      && (gLogCategory_APAudioEngineAVC != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_26;
  }
LABEL_28:
  double v10 = *(void **)(DerivedStorage + 40);
  if (v10)
  {
    CFAllocatorDeallocate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v10);
    *(void *)(DerivedStorage + 40) = 0;
  }
  mach_absolute_time();
  if (gLogCategory_APAudioEngineAVC <= 50
    && (gLogCategory_APAudioEngineAVC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v1;
}

uint64_t audioEngineAVC_Resume(uint64_t a1, const __CFDictionary *a2, void (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  UpTicksPerSecond();
  double v9 = &unk_1EA628000;
  if (gLogCategory_APAudioEngineAVC <= 50
    && (gLogCategory_APAudioEngineAVC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  mach_absolute_time();
  if (a2 && (int Value = CFDictionaryGetValue(a2, (const void *)*MEMORY[0x1E4F32978])) != 0)
  {
    double v11 = Value;
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 48));
    if (gLogCategory_APAudioEngineAVC <= 50
      && (gLogCategory_APAudioEngineAVC != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    long long v13 = *(const void **)(DerivedStorage + 16);
    *(void *)(DerivedStorage + 16) = v11;
    CFRetain(v11);
    if (v13) {
      CFRelease(v13);
    }
    CFAllocatorGetDefault();
    uint64_t v14 = FigHALAudioConduitDeviceCopyProperty();
    if (v14)
    {
      uint64_t v12 = v14;
      APSLogErrorAt();
    }
    else
    {
      BytePtr = CFDataGetBytePtr(0);
      long long v37 = *(_OWORD *)BytePtr;
      int v16 = *((_DWORD *)BytePtr + 5);
      int v38 = *((_DWORD *)BytePtr + 4);
      int v17 = *((_DWORD *)BytePtr + 6);
      uint64_t v35 = *(void *)(BytePtr + 28);
      int v36 = *((_DWORD *)BytePtr + 9);
      CFAllocatorGetDefault();
      uint64_t v18 = FigHALAudioConduitDeviceCopyProperty();
      if (v18)
      {
        uint64_t v12 = v18;
        APSLogErrorAt();
        double v9 = (_DWORD *)&unk_1EA628000;
      }
      else
      {
        unsigned int v19 = v17 * v16 * FigCFNumberGetUInt32();
        *(_DWORD *)(DerivedStorage + 24) = v19;
        if (!v19) {
          goto LABEL_52;
        }
        if (gLogCategory_APAudioEngineAVC <= 50)
        {
          if (gLogCategory_APAudioEngineAVC != -1
            || (int v20 = _LogCategory_Initialize(), v19 = *(_DWORD *)(DerivedStorage + 24), v20))
          {
            LogPrintF();
            unsigned int v19 = *(_DWORD *)(DerivedStorage + 24);
          }
        }
        int v21 = CFAllocatorAllocate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v19, 0);
        *(void *)(DerivedStorage + 40) = v21;
        if (!v21)
        {
LABEL_52:
          APSLogErrorAt();
          uint64_t v12 = APSSignalErrorAt();
          MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 48));
          double v9 = (_DWORD *)&unk_1EA628000;
          if (!v12) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }
        *(_DWORD *)(DerivedStorage + 120) = *(_DWORD *)(DerivedStorage + 24);
        uint64_t v22 = *(void *)DerivedStorage;
        *(void *)(DerivedStorage + 104) = v11;
        *(void *)(DerivedStorage + 112) = v22;
        uint64_t v23 = *(void *)(DerivedStorage + 48);
        *(void *)(DerivedStorage + 128) = v21;
        *(void *)(DerivedStorage + 136) = v23;
        *(void *)(DerivedStorage + 152) = 0;
        *(_OWORD *)(DerivedStorage + 64) = v37;
        *(_DWORD *)(DerivedStorage + 80) = v38;
        *(_DWORD *)(DerivedStorage + 84) = v16;
        *(_DWORD *)(DerivedStorage + 88) = v17;
        *(void *)(DerivedStorage + 92) = v35;
        *(_DWORD *)(DerivedStorage + 100) = v36;
        uint64_t v24 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v24) {
          uint64_t v25 = v24;
        }
        else {
          uint64_t v25 = 0;
        }
        uint64_t v26 = *(uint64_t (**)(const void *, void, uint64_t))(v25 + 120);
        double v9 = &unk_1EA628000;
        if (v26)
        {
          uint64_t v27 = v26(v11, audioEngineAVC_audioSourceWriteDataCallback, DerivedStorage + 56);
          if (v27)
          {
            uint64_t v12 = v27;
          }
          else
          {
            uint64_t v28 = *(void *)(CMBaseObjectGetVTable() + 16);
            if (v28) {
              uint64_t v29 = v28;
            }
            else {
              uint64_t v29 = 0;
            }
            uint64_t v30 = *(uint64_t (**)(const void *))(v29 + 8);
            if (v30)
            {
              uint64_t v31 = v30(v11);
              if (!v31)
              {
                mach_absolute_time();
                FigHALAudioConduitDeviceHALStartIO();
                mach_absolute_time();
                *(unsigned char *)(DerivedStorage + 8) = 1;
                FigHALAudioConduitDeviceHALStartStream();
                mach_absolute_time();
                *(unsigned char *)(DerivedStorage + 9) = 1;
                MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 48));
                uint64_t v12 = 0;
                double v9 = (_DWORD *)&unk_1EA628000;
                if (!a3) {
                  goto LABEL_45;
                }
                goto LABEL_44;
              }
              uint64_t v12 = v31;
            }
            else
            {
              uint64_t v12 = 4294954514;
            }
          }
        }
        else
        {
          uint64_t v12 = 4294954514;
        }
        APSLogErrorAt();
      }
    }
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 48));
  }
  else
  {
    APSLogErrorAt();
    uint64_t v12 = 4294951813;
  }
LABEL_39:
  int v32 = v9[204];
  if (v32 <= 90 && (v32 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
LABEL_43:
  if (a3) {
LABEL_44:
  }
    a3(a1, v12, a4);
LABEL_45:
  uint64_t result = mach_absolute_time();
  int v34 = v9[204];
  if (v34 <= 50)
  {
    if (v34 != -1) {
      return LogPrintF();
    }
    uint64_t result = _LogCategory_Initialize();
    if (result) {
      return LogPrintF();
    }
  }
  return result;
}

uint64_t audioEngineAVC_Suspend(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioEngineAVC <= 50
    && (gLogCategory_APAudioEngineAVC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  mach_absolute_time();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 48));
  uint64_t v8 = audioEngineAVC_suspendInternal();
  uint64_t result = MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 48));
  if (a3) {
    uint64_t result = a3(a1, v8, a4);
  }
  if (gLogCategory_APAudioEngineAVC <= 50)
  {
    if (gLogCategory_APAudioEngineAVC != -1 || (uint64_t result = _LogCategory_Initialize(), result))
    {
      mach_absolute_time();
      UpTicksPerSecond();
      return LogPrintF();
    }
  }
  return result;
}

uint64_t audioEngineAVC_SetEndpointStream(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, uint64_t), uint64_t a4)
{
  uint64_t v5 = a3;
  if (gLogCategory_APAudioEngineAVC <= 50)
  {
    if (gLogCategory_APAudioEngineAVC != -1 || (v7 = _LogCategory_Initialize(), uint64_t v5 = a3, v7))
    {
      LogPrintF();
      uint64_t v5 = a3;
    }
  }
  return v5(a1, 0, a4);
}

uint64_t audioEngineAVC_Flush()
{
  if (gLogCategory_APAudioEngineAVC <= 50
    && (gLogCategory_APAudioEngineAVC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 0;
}

uint64_t audioEngineAVC_audioSourceWriteDataCallback(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = 0;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  unint64_t v27 = 0;
  uint64_t result = FigSimpleMutexTryLock();
  if (result)
  {
    uint64_t v5 = (double *)(a3 + 8);
    do
    {
      uint64_t v6 = *(void *)(a3 + 48);
      uint64_t v7 = *(unsigned int *)(a3 + 64);
      uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v8) {
        uint64_t v9 = v8;
      }
      else {
        uint64_t v9 = 0;
      }
      double v10 = *(unsigned int (**)(uint64_t, uint64_t))(v9 + 32);
      if (!v10 || !v10(v6, v7)) {
        break;
      }
      uint64_t v25 = 0;
      uint64_t v11 = *(void *)(a3 + 48);
      uint64_t v12 = *(void *)(a3 + 72);
      uint64_t v13 = *(unsigned int *)(a3 + 64);
      uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 16);
      uint64_t v15 = v14 ? v14 : 0;
      int v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, uint64_t *, unint64_t *, uint64_t *, uint64_t))(v15 + 48);
      if (!v16 || v16(v11, v12, v13, &v25, &v27, &v32, a3 + 8) || !v25) {
        break;
      }
      double v17 = *(double *)(a3 + 96);
      if (v17 == 0.0)
      {
        uint64_t v18 = mach_absolute_time();
        *((void *)&v28 + 1) = v18;
        int32_t v19 = UpTicksPerSecond();
        CMTimeMake(&v24, v18, v19);
        long long v26 = *(_OWORD *)&v24.timescale;
        int32_t v20 = (int)*v5;
        CMTime time = v24;
        CMTimeConvertScale(&v24, &time, v20, kCMTimeRoundingMethod_RoundHalfAwayFromZero);
        CMTimeValue value = v24.value;
        long long v26 = *(_OWORD *)&v24.timescale;
        *(double *)&long long v28 = (double)v24.value;
      }
      else
      {
        *(void *)&long long v28 = *(void *)(a3 + 96);
        CMTimeMake(&v24, (uint64_t)v17, (int)*v5);
        CMTimeValue value = v24.value;
        long long v26 = *(_OWORD *)&v24.timescale;
      }
      int32_t v22 = UpTicksPerSecond();
      time.CMTimeValue value = value;
      *(_OWORD *)&time.CMTimeScale timescale = v26;
      CMTimeConvertScale(&v24, &time, v22, kCMTimeRoundingMethod_RoundHalfAwayFromZero);
      *((void *)&v28 + 1) = v24.value;
      *(double *)(a3 + 96) = *(double *)&v28 + (double)v27;
      DWORD2(v31) = 3;
    }
    while (!FigHALAudioConduitDeviceHALSendAudio());
    return MEMORY[0x1D25EB390](*(void *)(a3 + 80));
  }
  return result;
}

uint64_t APEndpointStreamAudioAVCCreate(uint64_t a1, const void *a2, const void *a3, uint64_t a4, void *a5)
{
  if (a2 && a3 && a5)
  {
    FigEndpointStreamAirPlayGetClassID();
    uint64_t v8 = CMDerivedObjectCreate();
    if (v8)
    {
      uint64_t v10 = v8;
      APSLogErrorAt();
    }
    else
    {
      uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
      *uint64_t DerivedStorage = CFRetain(a3);
      DerivedStorage[1] = CFRetain(a2);
      CMNotificationCenterGetDefaultLocalCenter();
      FigNotificationCenterAddWeakListener();
      uint64_t v10 = 0;
      *a5 = 0;
      if (gLogCategory_APEndpointStreamAudioAVC <= 50)
      {
        if (gLogCategory_APEndpointStreamAudioAVC != -1 || _LogCategory_Initialize()) {
          LogPrintF();
        }
        return 0;
      }
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294950536;
  }
  return v10;
}

uint64_t apesoavc_suspendedNotificationCallbackPostEndpointStreamDissociated()
{
  if (gLogCategory_APEndpointStreamAudioAVC <= 50
    && (gLogCategory_APEndpointStreamAudioAVC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CMNotificationCenterGetDefaultLocalCenter();
  return CMNotificationCenterPostNotification();
}

void endpointStreamAudioAVC_Finalize()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CMNotificationCenterGetDefaultLocalCenter();
  FigNotificationCenterRemoveWeakListener();
  if (*(void *)DerivedStorage) {
    CFRelease(*(CFTypeRef *)DerivedStorage);
  }
  uint64_t v1 = *(const void **)(DerivedStorage + 8);
  if (v1)
  {
    CFRelease(v1);
  }
}

uint64_t endpointStreamAudioAVC_CopyProperty(uint64_t a1, const void *a2, uint64_t a3, CFTypeRef *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2 || !a4)
  {
    APSLogErrorAt();
    return 4294950536;
  }
  uint64_t v8 = (const void **)DerivedStorage;
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21408]))
  {
    uint64_t v9 = (const void *)*MEMORY[0x1E4F21468];
LABEL_7:
    uint64_t ASRDArrayPCM = 0;
    *a4 = CFRetain(v9);
    return ASRDArrayPCM;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21368]))
  {
    uint64_t v9 = *v8;
    goto LABEL_7;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F213C8]))
  {
    CMBaseObjectGetDerivedStorage();
    uint64_t v12 = FigHALAudioConduitDeviceCopyProperty();
    if (v12)
    {
      uint64_t ASRDArrayPCM = v12;
    }
    else
    {
      CFDataGetBytePtr(0);
      if (gLogCategory_APEndpointStreamAudioAVC <= 50
        && (gLogCategory_APEndpointStreamAudioAVC != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (APSSettingsGetIntWithDefault()
        && gLogCategory_APEndpointStreamAudioAVC <= 50
        && (gLogCategory_APEndpointStreamAudioAVC != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v13 = APSAudioFormatDescriptionCreateWithASBD();
      if (v13)
      {
        uint64_t ASRDArrayPCM = v13;
      }
      else
      {
        uint64_t v14 = APSAudioFormatDescriptionListCreate();
        if (v14)
        {
          uint64_t ASRDArrayPCM = v14;
        }
        else
        {
          uint64_t v15 = APSAudioFormatDescriptionListAddFormat();
          if (v15)
          {
            uint64_t ASRDArrayPCM = v15;
          }
          else
          {
            uint64_t ASRDArrayPCM = APSAudioFormatDescriptionListCreateASRDArrayPCM();
            if (!ASRDArrayPCM)
            {
              *a4 = 0;
              goto LABEL_29;
            }
          }
        }
      }
    }
    APSLogErrorAt();
LABEL_29:
    if (!ASRDArrayPCM) {
      return ASRDArrayPCM;
    }
    goto LABEL_30;
  }
  if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21328])) {
    return 4294954512;
  }
  uint64_t ASRDArrayPCM = APAudioEngineAVCCreate(a3, v8[1], a4);
  if (ASRDArrayPCM) {
LABEL_30:
  }
    APSLogErrorAt();
  return ASRDArrayPCM;
}

uint64_t endpointStreamAudioAVC_SetProperty(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return 4294954512;
  }
  APSLogErrorAt();
  return 4294950536;
}

uint64_t endpointStreamAudioAVC_Suspend(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, void, uint64_t), uint64_t a4)
{
  if (gLogCategory_APEndpointStreamAudioAVC <= 50
    && (gLogCategory_APEndpointStreamAudioAVC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a3) {
    a3(a1, 0, a4);
  }
  return 0;
}

uint64_t endpointStreamAudioAVC_Resume(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, void, uint64_t), uint64_t a4)
{
  if (gLogCategory_APEndpointStreamAudioAVC <= 50
    && (gLogCategory_APEndpointStreamAudioAVC != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a3) {
    a3(a1, 0, a4);
  }
  return 0;
}

uint64_t APLocalPlaybackServerMake(_OWORD *a1, char a2, const void *a3, void *a4)
{
  uint64_t v8 = (char *)malloc_type_calloc(1uLL, 0xA0uLL, 0x1060040E913FD94uLL);
  long long v9 = *(_OWORD *)((char *)a1 + 12);
  *(_OWORD *)(v8 + 28) = *a1;
  *(_OWORD *)(v8 + 40) = v9;
  UUIDGet();
  v8[24] = a2;
  dispatch_semaphore_t v10 = dispatch_semaphore_create(1);
  *((void *)v8 + 8) = v10;
  if (!v10)
  {
    APSLogErrorAt();
    uint64_t v15 = 4294960596;
LABEL_19:
    APLocalPlaybackServerDestroy((uint64_t)v8);
    return v15;
  }
  *((void *)v8 + 9) = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  v8[152] = 0;
  if (a3) {
    CFTypeRef v11 = CFRetain(a3);
  }
  else {
    CFTypeRef v11 = 0;
  }
  *((void *)v8 + 7) = v11;
  uint64_t v12 = HTTPServerCreate();
  if (v12)
  {
    uint64_t v15 = v12;
LABEL_18:
    APSLogErrorAt();
    goto LABEL_19;
  }
  uint64_t v13 = *(void *)v8;
  *(_DWORD *)(v13 + 236) = -7001;
  *(void *)(v13 + 24) = &gLogCategory_APLocalPlaybackServer;
  if (v8[24]) {
    *(_DWORD *)(v13 + 232) = 1;
  }
  uint64_t v14 = CFObjectSetProperty();
  if (v14)
  {
    uint64_t v15 = v14;
    goto LABEL_18;
  }
  if (gLogCategory_APLocalPlaybackServer <= 40
    && (gLogCategory_APLocalPlaybackServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v15 = 0;
  *a4 = v8;
  return v15;
}

uint64_t APLocalPlaybackServer_connectionInit(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  *(void *)buffer = 0;
  uint64_t v9 = 0;
  CFDataRef v2 = *(const __CFData **)(a2 + 56);
  if (v2)
  {
    if (CFDataGetLength(v2) != 16)
    {
      APSLogErrorAt();
      return 4294960553;
    }
    if (gLogCategory_APLocalPlaybackServer <= 30
      && (gLogCategory_APLocalPlaybackServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFDataRef v4 = *(const __CFData **)(a2 + 56);
    v11.length = CFDataGetLength(v4);
    v11.locatioCFIndex n = 0;
    CFDataGetBytes(v4, v11, buffer);
    uint64_t v5 = NetTransportTLSPSKConfigure();
    if (v5)
    {
      uint64_t v6 = v5;
      APSLogErrorAt();
      return v6;
    }
    HTTPConnectionSetTransportDelegate();
    if (gLogCategory_APLocalPlaybackServer <= 30
      && (gLogCategory_APLocalPlaybackServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  return 0;
}

uint64_t APLocalPlaybackServer_handleMessage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (gLogCategory_APLocalPlaybackServer <= 10
    && (gLogCategory_APLocalPlaybackServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (strnicmpx())
  {
    unsigned int v19 = -6711;
    if (gLogCategory_APLocalPlaybackServer <= 50
      && (gLogCategory_APLocalPlaybackServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFStringRef v11 = 0;
    int v17 = 0;
    uint64_t v15 = 0;
    uint64_t v18 = 405;
    goto LABEL_80;
  }
  if (!HTTPConnectionGetNextURLSegmentEx() || strnicmpx())
  {
    unsigned int v19 = -6711;
    if (gLogCategory_APLocalPlaybackServer > 50
      || gLogCategory_APLocalPlaybackServer == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_71;
    }
LABEL_46:
    LogPrintF();
LABEL_71:
    CFStringRef v11 = 0;
    int v17 = 0;
    uint64_t v15 = 0;
LABEL_79:
    uint64_t v18 = 400;
    goto LABEL_80;
  }
  if (!HTTPConnectionGetNextURLSegmentEx())
  {
    unsigned int v19 = -6711;
    if (gLogCategory_APLocalPlaybackServer > 50
      || gLogCategory_APLocalPlaybackServer == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_71;
    }
    goto LABEL_46;
  }
  dispatch_semaphore_wait(*(dispatch_semaphore_t *)(a3 + 64), 0xFFFFFFFFFFFFFFFFLL);
  int v6 = strnicmpx();
  uint64_t v7 = (CFAllocatorRef *)MEMORY[0x1E4F1CF80];
  if (v6)
  {
    CFIndex v8 = 0;
    uint64_t v9 = memrchr();
    if (v9) {
      CFIndex v8 = v9;
    }
    CFStringRef v10 = CFStringCreateWithBytes(*v7, 0, v8, 0x8000100u, 0);
    if (!v10)
    {
      unsigned int v19 = -6742;
      if (gLogCategory_APLocalPlaybackServer <= 50
        && (gLogCategory_APLocalPlaybackServer != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFStringRef v11 = 0;
      goto LABEL_78;
    }
    CFStringRef v11 = v10;
    if (!FigCFDictionaryGetValue())
    {
      unsigned int v19 = -6742;
      if (gLogCategory_APLocalPlaybackServer > 50
        || gLogCategory_APLocalPlaybackServer == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_78;
      }
      goto LABEL_66;
    }
    FigCFDictionaryGetBooleanIfPresent();
    CFStringGetTypeID();
    Typedint Value = CFDictionaryGetTypedValue();
    if (!TypedValue)
    {
      unsigned int v19 = -6742;
      if (gLogCategory_APLocalPlaybackServer > 50
        || gLogCategory_APLocalPlaybackServer == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_78;
      }
      goto LABEL_66;
    }
    CFStringRef v13 = (const __CFString *)TypedValue;
LABEL_25:
    if (*(void *)(a2 + 8392) == *(void *)(a2 + 8400))
    {
      uint64_t v15 = 0;
      goto LABEL_28;
    }
    unsigned int v19 = -6711;
    if (gLogCategory_APLocalPlaybackServer > 50
      || gLogCategory_APLocalPlaybackServer == -1 && !_LogCategory_Initialize())
    {
LABEL_78:
      uint64_t v15 = 0;
      int v17 = 1;
      goto LABEL_79;
    }
LABEL_66:
    LogPrintF();
    goto LABEL_78;
  }
  CFStringRef v11 = 0;
  CFStringRef v13 = *(const __CFString **)(a3 + 80);
  if (!*(unsigned char *)(a3 + 152)) {
    goto LABEL_25;
  }
  CFMutableStringRef MutableCopy = CFStringCreateMutableCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, v13);
  uint64_t v15 = MutableCopy;
  if (*(void *)(a2 + 8392) == *(void *)(a2 + 8400))
  {
    CFStringRef v13 = MutableCopy;
LABEL_28:
    dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a3 + 64));
    if (v13)
    {
      APSHTTPOpenLocalFile();
      unsigned int v19 = -6711;
      if (gLogCategory_APLocalPlaybackServer > 50
        || gLogCategory_APLocalPlaybackServer == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_75;
      }
    }
    else
    {
      unsigned int v19 = -6711;
      if (gLogCategory_APLocalPlaybackServer > 50
        || gLogCategory_APLocalPlaybackServer == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_75;
      }
    }
    LogPrintF();
LABEL_75:
    int v17 = 0;
    goto LABEL_79;
  }
  while (HTTPConnectionGetNextURLSegmentEx())
  {
    CFStringAppendFormat(v15, 0, @"/%.*s", 0, 0);
    if (gLogCategory_APLocalPlaybackServer <= 50
      && (gLogCategory_APLocalPlaybackServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (*(void *)(a2 + 8392) == *(void *)(a2 + 8400))
    {
      CFStringRef v13 = v15;
      CFStringRef v11 = 0;
      goto LABEL_28;
    }
  }
  unsigned int v19 = -6711;
  int v17 = 1;
  uint64_t v18 = 400;
  CFStringRef v11 = 0;
LABEL_80:
  unsigned int v20 = MEMORY[0x1D25EB6D0](a1, v18, v19, 0, 0, 0);
  if (v20) {
    APSLogErrorAt();
  }
  if (v11) {
    CFRelease(v11);
  }
  if (v15) {
    CFRelease(v15);
  }
  if (v17) {
    dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a3 + 64));
  }
  return v20;
}

void APLocalPlaybackServerDestroy(uint64_t a1)
{
  CFObjectSetProperty();
  if (*(void *)a1)
  {
    CFRelease(*(CFTypeRef *)a1);
    *(void *)a1 = 0;
  }
  CFDataRef v2 = *(NSObject **)(a1 + 64);
  if (v2)
  {
    dispatch_release(v2);
    *(void *)(a1 + 64) = 0;
  }
  uint64_t v3 = *(const void **)(a1 + 72);
  if (v3)
  {
    CFRelease(v3);
    *(void *)(a1 + 72) = 0;
  }
  CFDataRef v4 = *(const void **)(a1 + 56);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(a1 + 56) = 0;
  }
  uint64_t v5 = *(const void **)(a1 + 80);
  if (v5) {
    CFRelease(v5);
  }
  free((void *)a1);
}

uint64_t APLocalPlaybackServerRegisterPathCreatingHostAndURL(uint64_t a1, const __CFString *a2, const __CFString *a3, CFTypeRef *a4, CFStringRef *a5)
{
  CFStringRef theString = 0;
  CFTypeRef cf = 0;
  if (a2)
  {
    BOOL v10 = a3 != 0;
    *(unsigned char *)(a1 + 152) = v10;
    uint64_t v11 = apLocalPlaybackServer_createURLAndHostForPath(a1, a2, v10, 0, (CFStringRef *)&cf, &theString);
    if (v11)
    {
      uint64_t RelativePath = v11;
      APSLogErrorAt();
      CFStringRef v14 = theString;
    }
    else
    {
      dispatch_semaphore_wait(*(dispatch_semaphore_t *)(a1 + 64), 0xFFFFFFFFFFFFFFFFLL);
      uint64_t v12 = *(const void **)(a1 + 80);
      if (a3) {
        CFStringRef v13 = a3;
      }
      else {
        CFStringRef v13 = a2;
      }
      *(void *)(a1 + 80) = v13;
      CFRetain(v13);
      if (v12) {
        CFRelease(v12);
      }
      CFStringRef v14 = theString;
      CFStringGetCString(theString, (char *)(a1 + 88), 64, 0x8000100u);
      dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 64));
      if (gLogCategory_APLocalPlaybackServer <= 40
        && (gLogCategory_APLocalPlaybackServer != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *a4 = cf;
      CFTypeRef cf = 0;
      if (*(unsigned char *)(a1 + 152))
      {
        uint64_t v18 = 0;
        uint64_t RelativePath = apLocalPlaybackServer_getRelativePath(a3, a2, &v18);
        if (RelativePath)
        {
          APSLogErrorAt();
        }
        else
        {
          int v16 = v18;
          *a5 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, @"/1/%@%@", v14, v18);
          if (v16) {
            CFRelease(v16);
          }
        }
      }
      else
      {
        uint64_t RelativePath = 0;
        *a5 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, @"/1/%@", v14);
      }
    }
    if (v14) {
      CFRelease(v14);
    }
  }
  else
  {
    APSLogErrorAt();
    uint64_t RelativePath = 4294960591;
  }
  if (cf) {
    CFRelease(cf);
  }
  return RelativePath;
}

uint64_t apLocalPlaybackServer_createURLAndHostForPath(uint64_t a1, const __CFString *a2, int a3, const __CFString *a4, CFStringRef *a5, CFStringRef *a6)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  long long v38 = 0u;
  long long v39 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  *(_OWORD *)cStr = 0u;
  long long v33 = 0u;
  long long v31 = 0u;
  long long v30 = 0u;
  long long v29 = 0u;
  *(_OWORD *)long long v28 = 0u;
  bzero(buffer, 0x401uLL);
  if (!a2) {
    goto LABEL_15;
  }
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  *(_DWORD *)uint64_t v25 = 0;
  uint64_t v24 = 0;
  memset(&c, 0, sizeof(c));
  if (!CFStringGetCString(a2, buffer, 1025, 0x8000100u)) {
    goto LABEL_15;
  }
  SockAddrCopy();
  SockAddrSetPort();
  uint64_t v12 = SockAddrToString();
  if (v12)
  {
    uint64_t v19 = v12;
    APSLogErrorAt();
    return v19;
  }
  if (a4)
  {
    if (!CFStringGetCString(a4, v28, 64, 0x8000100u))
    {
LABEL_15:
      APSLogErrorAt();
      return 4294960591;
    }
  }
  else
  {
    CC_SHA1_Init(&c);
    CC_SHA1_Update(&c, "\xD9\x1D\xC0\x69_\x1AH\v\x94\x95\xBC\xB5\x84O\xF1\x76pLocalPlaybackServer_getRelativePath", 0x10u);
    CC_SHA1_Update(&c, (const void *)(a1 + 8), 0x10u);
    CC_LONG v13 = strlen(buffer);
    CC_SHA1_Update(&c, buffer, v13);
    CC_SHA1_Final(&v25[4], &c);
    long long v26 = *(_OWORD *)&v25[4];
    BYTE6(v26) = v25[10] & 0xF | 0x50;
    BYTE8(v26) = v25[12] & 0x3F | 0x80;
    if (SNPrintF() - 64 < 0xFFFFFFC1)
    {
      APSLogErrorAt();
      return 4294960553;
    }
  }
  FileExtensionFromString = (const char *)GetFileExtensionFromString();
  int v15 = *(unsigned __int8 *)FileExtensionFromString;
  CFAllocatorRef v16 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  *a5 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x1E4F1CF80], cStr, 0x8000100u);
  if (a3)
  {
    CFStringRef v17 = CFStringCreateWithCString(v16, v28, 0x8000100u);
  }
  else
  {
    uint64_t v18 = "m4v";
    if (v15) {
      uint64_t v18 = FileExtensionFromString;
    }
    CFStringRef v17 = CFStringCreateWithFormat(v16, 0, @"%s.%s", v28, v18, *(void *)&c.h0, *(void *)&c.h2, *(void *)&c.h4, *(void *)&c.Nh, *(void *)&c.data[1], *(void *)&c.data[3], *(void *)&c.data[5], *(void *)&c.data[7], *(void *)&c.data[9], *(void *)&c.data[11], *(void *)&c.data[13], *(void *)&c.data[15], v22, v23,
            v24,
            *(void *)v25);
  }
  uint64_t v19 = 0;
  *a6 = v17;
  return v19;
}

uint64_t apLocalPlaybackServer_getRelativePath(const __CFString *a1, CFStringRef theString, void *a3)
{
  if (!a1 || !theString)
  {
    APSLogErrorAt();
    return 4294960591;
  }
  CFAllocatorRef v6 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFIndex Length = CFStringGetLength(theString);
  uint64_t result = (uint64_t)CFStringCreateMutableCopy(v6, Length, theString);
  *a3 = result;
  if (result)
  {
    CFStringTrim((CFMutableStringRef)result, a1);
    if (gLogCategory_APLocalPlaybackServer > 40) {
      return 0;
    }
    if (gLogCategory_APLocalPlaybackServer != -1 || (uint64_t result = _LogCategory_Initialize(), result))
    {
      LogPrintF();
      return 0;
    }
  }
  return result;
}

uint64_t APLocalPlaybackServerRegisterPathWithUUIDCreatingHostAndURL(uint64_t a1, const __CFString *a2, const __CFString *a3, const __CFString *a4, CFTypeRef *a5, CFStringRef *a6)
{
  CFTypeRef cf = 0;
  CFTypeRef v20 = 0;
  if (!a2)
  {
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
    uint64_t RelativePath = 4294960591;
    goto LABEL_19;
  }
  if (a3)
  {
    uint64_t URLAndHostForPath = apLocalPlaybackServer_createURLAndHostForPath(a1, a3, a4 != 0, a2, (CFStringRef *)&v20, (CFStringRef *)&cf);
    if (URLAndHostForPath)
    {
      uint64_t RelativePath = URLAndHostForPath;
      APSLogErrorAt();
      CFMutableDictionaryRef Mutable = 0;
    }
    else
    {
      CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      if (Mutable)
      {
        dispatch_semaphore_wait(*(dispatch_semaphore_t *)(a1 + 64), 0xFFFFFFFFFFFFFFFFLL);
        if (a4) {
          CFDictionarySetValue(Mutable, @"IsLocalMovPkgHLSURL", (const void *)*MEMORY[0x1E4F1CFD0]);
        }
        FigCFDictionarySetValue();
        FigCFDictionarySetValue();
        dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 64));
        if (gLogCategory_APLocalPlaybackServer <= 40
          && (gLogCategory_APLocalPlaybackServer != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        *a5 = v20;
        CFTypeRef v20 = 0;
        if (!a4)
        {
          CFTypeRef v16 = cf;
          uint64_t RelativePath = 0;
          *a6 = CFStringCreateWithFormat(v12, 0, @"/1/%@", cf);
          if (!v16) {
            goto LABEL_19;
          }
          goto LABEL_18;
        }
        uint64_t v18 = 0;
        uint64_t RelativePath = apLocalPlaybackServer_getRelativePath(a4, a3, &v18);
        if (RelativePath)
        {
          APSLogErrorAt();
        }
        else
        {
          int v15 = v18;
          *a6 = CFStringCreateWithFormat(v12, 0, @"/1/%@%@", cf, v18);
          if (v15) {
            CFRelease(v15);
          }
        }
      }
      else
      {
        APSLogErrorAt();
        uint64_t RelativePath = 0;
      }
    }
  }
  else
  {
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
    uint64_t RelativePath = 4294960591;
  }
  CFTypeRef v16 = cf;
  if (cf) {
LABEL_18:
  }
    CFRelease(v16);
LABEL_19:
  if (v20) {
    CFRelease(v20);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  return RelativePath;
}

uint64_t APLocalPlaybackServerUnRegisterUUID(uint64_t a1, const void *a2)
{
  if (!a2)
  {
    APSLogErrorAt();
    return 4294960591;
  }
  dispatch_semaphore_wait(*(dispatch_semaphore_t *)(a1 + 64), 0xFFFFFFFFFFFFFFFFLL);
  CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(a1 + 72), a2);
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 64));
  if (gLogCategory_APLocalPlaybackServer > 40) {
    return 0;
  }
  if (gLogCategory_APLocalPlaybackServer != -1 || (uint64_t result = _LogCategory_Initialize(), result))
  {
    LogPrintF();
    return 0;
  }
  return result;
}

uint64_t APPairingClientGetClassID()
{
  if (APPairingClientGetClassID_sRegisterOnce != -1) {
    dispatch_once_f(&APPairingClientGetClassID_sRegisterOnce, &APPairingClientGetClassID_sClassID, (dispatch_function_t)pairingSession_registerBaseClass);
  }
  return APPairingClientGetClassID_sClassID;
}

uint64_t pairingSession_registerBaseClass(uint64_t a1)
{
  uint64_t ClassID = CMBaseGetClassID();
  return MEMORY[0x1F40DC658](&pairingSession_registerBaseClass_sClassDesc, ClassID, 1, a1);
}

CFStringRef pairingSession_copyFormattingDesc(uint64_t a1)
{
  return CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, @"[APPairingClient %p]", a1);
}

uint64_t APEndpointManagerCarPlayCreate(uint64_t a1, CFTypeRef cf, CFTypeRef *a3)
{
  CFTypeRef cfa = 0;
  if (cf && (CFTypeID v6 = CFGetTypeID(cf), v6 != CFDictionaryGetTypeID()) || !a3)
  {
    APSLogErrorAt();
    uint64_t v32 = 4294950586;
    goto LABEL_56;
  }
  LogSetAppID();
  FigEndpointManagerGetClassID();
  uint64_t v7 = CMDerivedObjectCreate();
  if (v7)
  {
    uint64_t v32 = v7;
    APSLogErrorAt();
    goto LABEL_56;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (cf) {
    *(unsigned char *)(DerivedStorage + 360) = CFDictionaryGetInt64() != 0;
  }
  dispatch_queue_t v9 = dispatch_queue_create("com.apple.APEndpointManagerCarPlay.state", 0);
  *(void *)(DerivedStorage + 8) = v9;
  if (v9)
  {
    BOOL v10 = dispatch_queue_create("com.apple.APEndpointManagerCarPlay.notification", 0);
    *(void *)(DerivedStorage + 16) = v10;
    dispatch_retain(v10);
    dispatch_queue_t v11 = dispatch_queue_create("com.apple.APEndpointManagerCarPlay.carkitPreferenceInit", 0);
    *(void *)(DerivedStorage + 24) = v11;
    if (v11)
    {
      if (!APSIsRemoteHALPluginLoadingEnabled())
      {
LABEL_34:
        CFRetain(cfa);
        long long v31 = *(NSObject **)(DerivedStorage + 8);
        block[0] = MEMORY[0x1E4F143A8];
        block[1] = 3221225472;
        block[2] = __APEndpointManagerCarPlayCreate_block_invoke;
        block[3] = &__block_descriptor_56_e5_v8__0l;
        block[4] = DerivedStorage;
        void block[5] = a1;
        void block[6] = cfa;
        dispatch_async(v31, block);
        if (gLogCategory_APEndpointManagerCarPlay <= 50
          && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t v32 = 0;
        *a3 = cfa;
        return v32;
      }
      uint64_t v36 = 0;
      if (carManager_getWeakRefTable_once != -1) {
        dispatch_once(&carManager_getWeakRefTable_once, &__block_literal_global_9);
      }
      if (FigCFWeakReferenceTableAddValueAndGetKey()) {
        APSLogErrorAt();
      }
      *(void *)(DerivedStorage + 344) = v36;
      dispatch_queue_t v12 = dispatch_queue_create("com.apple.airplay.apendpointManagerCarPlay.pluginregister", 0);
      *(void *)(DerivedStorage + 328) = v12;
      if (v12)
      {
        CFMutableStringRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
        uint64_t v36 = 0;
        CFStringAppendFormat(Mutable, 0, @"/System/Library/Audio/Plug-Ins/HAL/%@", @"CarPlayHalogen.driver");
        CFURLRef v14 = CFURLCreateWithFileSystemPath(0, Mutable, kCFURLPOSIXPathStyle, 1u);
        if (v14)
        {
          CFURLRef v15 = v14;
          CFPlugInRef v16 = CFPlugInCreate(0, v14);
          if (v16)
          {
            CFStringRef v17 = v16;
            CFUUIDRef v18 = CFUUIDGetConstantUUIDWithBytes(0, 0x44u, 0x3Au, 0xBAu, 0xB8u, 0xE7u, 0xB3u, 0x49u, 0x1Au, 0xB9u, 0x85u, 0xBEu, 0xB9u, 0x18u, 0x70u, 0x30u, 0xDBu);
            FactoriesForPlugInTypeInPlugICFIndex n = CFPlugInFindFactoriesForPlugInTypeInPlugIn(v18, v17);
            if (FactoriesForPlugInTypeInPlugIn)
            {
              CFArrayRef v20 = FactoriesForPlugInTypeInPlugIn;
              if (CFArrayGetCount(FactoriesForPlugInTypeInPlugIn) <= 0)
              {
                if (gLogCategory_APEndpointManagerCarPlay <= 90
                  && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
                {
                  LogPrintF();
                }
              }
              else
              {
                CFUUIDRef ValueAtIndex = (const __CFUUID *)CFArrayGetValueAtIndex(v20, 0);
                if (ValueAtIndex
                  && (CFUUIDRef v22 = ValueAtIndex,
                      v23 = CFUUIDGetConstantUUIDWithBytes(0, 0x44u, 0x3Au, 0xBAu, 0xB8u, 0xE7u, 0xB3u, 0x49u, 0x1Au, 0xB9u, 0x85u, 0xBEu, 0xB9u, 0x18u, 0x70u, 0x30u, 0xDBu), (uint64_t v24 = CFPlugInInstanceCreate(0, v22, v23)) != 0))
                {
                  uint64_t v25 = v24;
                  long long v26 = *(unsigned int (**)(void *, void, void, uint64_t *))(*(void *)v24 + 8);
                  CFUUIDRef v27 = CFUUIDGetConstantUUIDWithBytes(0, 0xEEu, 0xA5u, 0x77u, 0x3Du, 0xCCu, 0x43u, 0x49u, 0xF1u, 0x8Eu, 0, 0x8Fu, 0x96u, 0xE7u, 0xD2u, 0x3Bu, 0x17u);
                  CFUUIDBytes v28 = CFUUIDGetUUIDBytes(v27);
                  if (v26(v25, *(void *)&v28.byte0, *(void *)&v28.byte8, &v36) || !v36) {
                    APSLogErrorAt();
                  }
                  (*(void (**)(void *))(*(void *)v25 + 24))(v25);
                }
                else
                {
                  APSLogErrorAt();
                }
              }
              CFRelease(v15);
            }
            else
            {
              APSLogErrorAt();
              CFArrayRef v20 = v15;
            }
            CFRelease(v20);
            long long v29 = v17;
          }
          else
          {
            APSLogErrorAt();
            long long v29 = v15;
          }
          CFRelease(v29);
          if (Mutable) {
            goto LABEL_27;
          }
        }
        else
        {
          APSLogErrorAt();
          if (Mutable) {
LABEL_27:
          }
            CFRelease(Mutable);
        }
        uint64_t v30 = v36;
        *(void *)(DerivedStorage + 336) = v36;
        if (v30)
        {
          if (gLogCategory_APEndpointManagerCarPlay <= 50
            && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          carManager_asyncRegisterCarPlayHALDriver(cfa, 0);
          goto LABEL_34;
        }
      }
    }
  }
  APSLogErrorAt();
  uint64_t v32 = 4294950585;
LABEL_56:
  if (cfa) {
    CFRelease(cfa);
  }
  return v32;
}

void carManager_asyncRegisterCarPlayHALDriver(const void *a1, unsigned int a2)
{
  if (a1)
  {
    CFRetain(a1);
    uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
    if (gLogCategory_APEndpointManagerCarPlay <= 50
      && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    dispatch_time_t v6 = dispatch_time(0, 1000000000 * a2);
    uint64_t v7 = *(NSObject **)(DerivedStorage + 328);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __carManager_asyncRegisterCarPlayHALDriver_block_invoke;
    block[3] = &__block_descriptor_48_e5_v8__0l;
    block[4] = DerivedStorage;
    void block[5] = a1;
    dispatch_after(v6, v7, block);
  }
  else
  {
    APSLogErrorAt();
  }
}

void __APEndpointManagerCarPlayCreate_block_invoke(uint64_t a1)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  int v37 = 0;
  *(void *)(*(void *)(a1 + 32) + 48) = APSPowerAssertionCreate();
  if (*(void *)(*(void *)(a1 + 32) + 48))
  {
    long long v38 = xmmword_1D0B88820;
    long long v39 = unk_1D0B88830;
    long long v40 = xmmword_1D0B88840;
    uint64_t v41 = 0x2B8D08DC2B8D0800;
    uint64_t v2 = (CFTypeRef *)(CMBaseObjectGetDerivedStorage() + 352);
    if (*v2)
    {
      CFRelease(*v2);
      *uint64_t v2 = 0;
    }
    int v3 = APSEventRecorderCreate();
    if (v3)
    {
      int v35 = v3;
      APSLogErrorAt();
      int v37 = v35;
      APSLogErrorAt();
      goto LABEL_47;
    }
    int v37 = 0;
    uint64_t v4 = MGCopyAnswer();
    if (v4)
    {
      uint64_t v5 = (const void *)v4;
      CFAllocatorRef v6 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
      CFMutableStringRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      if (!Mutable)
      {
        APSLogErrorAt();
        int v37 = -16711;
        goto LABEL_46;
      }
      CFIndex v8 = Mutable;
      CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F47628], *(const void **)(*(void *)(a1 + 32) + 352));
      CFAllocatorRef v9 = *(const __CFAllocator **)(a1 + 40);
      ShortVersionCFIndex Length = APSVersionUtilsGetShortVersionLength();
      CFStringRef v11 = CFStringCreateWithBytesNoCopy(v9, (const UInt8 *)"835.19.1.1", ShortVersionLength, 0x600u, 0, (CFAllocatorRef)*MEMORY[0x1E4F1CFA0]);
      if (!v11)
      {
        APSLogErrorAt();
        int v37 = -6728;
        long long v31 = v8;
        goto LABEL_45;
      }
      CFStringRef v12 = v11;
      int v37 = APCarPlayControlServerCreate();
      if (v37)
      {
        APSLogErrorAt();
        CC_LONG v13 = 0;
        goto LABEL_43;
      }
      CC_LONG v13 = CFDictionaryCreateMutable(v6, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      CFDictionarySetValue(v13, (const void *)*MEMORY[0x1E4F475C0], *(const void **)(*(void *)(a1 + 32) + 48));
      CFDictionarySetValue(v13, (const void *)*MEMORY[0x1E4F475A0], *(const void **)(*(void *)(a1 + 32) + 352));
      if (!*(unsigned char *)(*(void *)(a1 + 32) + 360) && (!CFPrefs_GetInt64() ? (BOOL v14 = v37 == -6727) : (BOOL v14 = 1), v14)) {
        CFURLRef v15 = (const void **)MEMORY[0x1E4F1CFD0];
      }
      else {
        CFURLRef v15 = (const void **)MEMORY[0x1E4F1CFC8];
      }
      CFDictionarySetValue(v13, @"enableNewDiscoveryMode", *v15);
      *(void *)(*(void *)(a1 + 32) + 256) = *(void *)(a1 + 48);
      uint64_t v16 = *(void *)(a1 + 32);
      *(_WORD *)(v16 + 224) = 2;
      *(void *)(v16 + 232) = "USB";
      int v37 = APBrowserCarBonjourCreate();
      if (!v37)
      {
        uint64_t v17 = *(void *)(a1 + 32);
        uint64_t v18 = *(void *)(v17 + 240);
        uint64_t v19 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v19) {
          uint64_t v20 = v19;
        }
        else {
          uint64_t v20 = 0;
        }
        int v21 = *(uint64_t (**)(uint64_t, void (*)(uint64_t, int, uint64_t, uint64_t), uint64_t))(v20 + 24);
        if (v21)
        {
          int v37 = v21(v18, carManager_browserEventHandler, v17 + 224);
          if (!v37)
          {
            if (APSIsVirtualMachine())
            {
              if (gLogCategory_APEndpointManagerCarPlay <= 50
                && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
LABEL_32:
              *(void *)(*(void *)(a1 + 32) + 112) = *(void *)(a1 + 48);
              uint64_t v23 = *(void *)(a1 + 32);
              *(_WORD *)(v23 + 80) = 0;
              *(void *)(v23 + 88) = "Session";
              int v37 = APBrowserCarSessionCreate();
              if (!v37)
              {
                uint64_t v24 = *(void *)(a1 + 32);
                uint64_t v25 = *(void *)(v24 + 96);
                uint64_t v26 = *(void *)(CMBaseObjectGetVTable() + 16);
                if (v26) {
                  uint64_t v27 = v26;
                }
                else {
                  uint64_t v27 = 0;
                }
                CFUUIDBytes v28 = *(uint64_t (**)(uint64_t, void (*)(uint64_t, int, uint64_t, uint64_t), uint64_t))(v27 + 24);
                if (v28)
                {
                  int v37 = v28(v25, carManager_browserEventHandler, v24 + 80);
                  if (!v37)
                  {
                    FigCFWeakReferenceInit();
                    int v37 = AirPlayDebugIPCEnableForEndpointManager(*(const void **)(a1 + 48));
                    if (!v37)
                    {
                      long long v29 = *(const void **)(a1 + 48);
                      if (v29)
                      {
                        CFRetain(v29);
                        uint64_t v30 = *(void *)(a1 + 48);
                      }
                      else
                      {
                        uint64_t v30 = 0;
                      }
                      uint64_t v32 = *(void *)(a1 + 32);
                      long long v33 = *(NSObject **)(v32 + 24);
                      block[0] = MEMORY[0x1E4F143A8];
                      block[1] = 3221225472;
                      block[2] = __APEndpointManagerCarPlayCreate_block_invoke_2;
                      block[3] = &__block_descriptor_48_e5_v8__0l;
                      block[4] = v32;
                      void block[5] = v30;
                      dispatch_async(v33, block);
                      goto LABEL_43;
                    }
                  }
                }
                else
                {
                  int v37 = -12782;
                }
              }
              goto LABEL_42;
            }
            *(void *)(*(void *)(a1 + 32) + 184) = *(void *)(a1 + 48);
            uint64_t v22 = *(void *)(a1 + 32);
            *(_WORD *)(v22 + 152) = 1;
            *(void *)(v22 + 160) = "WiFi";
            int v37 = APBrowserCarBonjourCreate();
            if (!v37)
            {
              int v37 = APBrowserSetEventHandler(*(void *)(*(void *)(a1 + 32) + 168), *(void *)(a1 + 32) + 152);
              if (!v37) {
                goto LABEL_32;
              }
            }
          }
        }
        else
        {
          int v37 = -12782;
        }
      }
LABEL_42:
      APSLogErrorAt();
LABEL_43:
      CFRelease(v12);
      CFRelease(v8);
      if (!v13)
      {
LABEL_46:
        CFRelease(v5);
        goto LABEL_47;
      }
      long long v31 = v13;
LABEL_45:
      CFRelease(v31);
      goto LABEL_46;
    }
    APSLogErrorAt();
    int v34 = -6762;
  }
  else
  {
    APSLogErrorAt();
    int v34 = -16711;
  }
  int v37 = v34;
LABEL_47:
  CFRelease(*(CFTypeRef *)(a1 + 48));
  if (v37)
  {
    if (gLogCategory_APEndpointManagerCarPlay <= 50
      && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
    {
LABEL_53:
      LogPrintF();
    }
  }
  else if (gLogCategory_APEndpointManagerCarPlay <= 50 {
         && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
  }
  {
    goto LABEL_53;
  }
}

uint64_t carManager_handleControlServerEvent(uint64_t a1, uint64_t a2, const char *a3, size_t a4, const void *a5)
{
  uint64_t v17 = a2;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointManagerCarPlay <= 50
    && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!strncmp(a3, "connect", a4))
  {
    if (*(void *)(DerivedStorage + 352)) {
      APSEventRecorderRecordEvent();
    }
    uint64_t v9 = LogCategoryCopyOSLogHandle();
    BOOL v10 = (void *)v9;
    if (v9) {
      CFStringRef v11 = v9;
    }
    else {
      CFStringRef v11 = MEMORY[0x1E4F14500];
    }
    if (os_signpost_enabled(v11))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl(&dword_1D0945000, v11, OS_SIGNPOST_EVENT, 0x2B8D07E0uLL, "AP_SIGNPOST_CAR_CONTROLCOMMAND_CONNECT", (const char *)&unk_1D0B9874E, buf, 2u);
    }
    if (v10) {

    }
    APSPowerAssertionRaiseTemporary();
    if (a5) {
      CFRetain(a5);
    }
    CFStringRef v12 = *(NSObject **)(DerivedStorage + 8);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __carManager_handleControlServerEvent_block_invoke;
    block[3] = &__block_descriptor_56_e5_v8__0l;
    block[4] = DerivedStorage;
    void block[5] = a5;
    void block[6] = v17;
    dispatch_async(v12, block);
    return 0;
  }
  else
  {
    if (gLogCategory_APEndpointManagerCarPlay <= 90
      && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v13 = 4294960582;
    APSLogErrorAt();
  }
  return v13;
}

uint64_t APBrowserSetEventHandler(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  CFAllocatorRef v6 = *(uint64_t (**)(uint64_t, void (*)(uint64_t, int, uint64_t, uint64_t), uint64_t))(v5 + 24);
  if (!v6) {
    return 4294954514;
  }
  return v6(a1, carManager_browserEventHandler, a2);
}

void carManager_browserEventHandler(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  v10[0] = 0;
  v10[1] = v10;
  _OWORD v10[2] = 0x2020000000;
  int v11 = 0;
  uint64_t v7 = *(NSObject **)(CMBaseObjectGetDerivedStorage() + 8);
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  void v8[2] = __carManager_browserEventHandler_block_invoke;
  v8[3] = &unk_1E6892490;
  int v9 = a2;
  void v8[5] = a4;
  v8[6] = a3;
  v8[4] = v10;
  dispatch_sync(v7, v8);
  _Block_object_dispose(v10, 8);
}

void sub_1D09C99A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __APEndpointManagerCarPlayCreate_block_invoke_2(uint64_t a1)
{
  uint64_t v14 = 0;
  CFURLRef v15 = &v14;
  uint64_t v16 = 0x2020000000;
  int v17 = 0;
  if (gLogCategory_APEndpointManagerCarPlay <= 50
    && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v2 = [[APEndpointManagerCarPlayDelegate alloc] initWithEndpointManager:*(void *)(a1 + 40)];
  *(void *)(*(void *)(a1 + 32) + 40) = v2;
  if (v2
    && (int v3 = objc_alloc_init(APCarPlayPreferences),
        uint64_t v4 = *(void *)(a1 + 32),
        (*(void *)(v4 + 32) = v3) != 0))
  {
    [(APCarPlayPreferences *)v3 setDelegate:*(void *)(v4 + 40)];
    if ([*(id *)(*(void *)(a1 + 32) + 32) isCarPlayEnabled])
    {
      block[0] = MEMORY[0x1E4F143A8];
      long long v5 = *(_OWORD *)(a1 + 32);
      CFAllocatorRef v6 = *(NSObject **)(*(void *)(a1 + 32) + 8);
      block[1] = 3221225472;
      block[2] = __APEndpointManagerCarPlayCreate_block_invoke_3;
      block[3] = &unk_1E6891F48;
      block[4] = &v14;
      long long v13 = v5;
      dispatch_sync(v6, block);
    }
    CMBaseObjectGetDerivedStorage();
    unint64_t v7 = APSGetAirPlayNonSystemPeersCount();
    uint64_t Int64 = APSSettingsGetInt64();
    if (gLogCategory_APEndpointManagerCarPlay <= 50
      && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (v7 >= 0x1F5 && !Int64)
    {
      mach_absolute_time();
      int v9 = APSRemoveAirPlayNonSystemPeers();
      mach_absolute_time();
      if (v9) {
        int v10 = 90;
      }
      else {
        int v10 = 50;
      }
      if (v10 >= gLogCategory_APEndpointManagerCarPlay
        && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
      {
        UpTicksToMilliseconds();
        LogPrintF();
      }
      if (!v9) {
        CFPrefs_SetValue();
      }
    }
  }
  else
  {
    APSLogErrorAt();
    *((_DWORD *)v15 + 6) = -16711;
  }
  if (*((_DWORD *)v15 + 6))
  {
    if (gLogCategory_APEndpointManagerCarPlay <= 50
      && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
    {
LABEL_27:
      LogPrintF();
    }
  }
  else if (gLogCategory_APEndpointManagerCarPlay <= 50 {
         && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
  }
  {
    goto LABEL_27;
  }
  int v11 = *(const void **)(a1 + 40);
  if (v11) {
    CFRelease(v11);
  }
  _Block_object_dispose(&v14, 8);
}

void sub_1D09C9DC4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t __APEndpointManagerCarPlayCreate_block_invoke_3(uint64_t a1)
{
  APSPowerAssertionRaise();
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = carManager_startDiscovery();
  return APSPowerAssertionRelease();
}

uint64_t carManager_startDiscovery()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointManagerCarPlay <= 50
    && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v1 = 0;
  while (1)
  {
    uint64_t v2 = *(void *)(DerivedStorage + v1 + 96);
    if (v2) {
      break;
    }
LABEL_13:
    v1 += 72;
    if (v1 == 216) {
      return 0;
    }
  }
  uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 16);
  if (!v5)
  {
    uint64_t v7 = 4294954514;
    goto LABEL_16;
  }
  uint64_t v6 = v5(v2, 3);
  if (!v6)
  {
    *(unsigned char *)(DerivedStorage + v1 + 104) = 1;
    goto LABEL_13;
  }
  uint64_t v7 = v6;
LABEL_16:
  APSLogErrorAt();
  carManager_stopDiscovery();
  return v7;
}

uint64_t carManager_getBrowserContextForEndpoint(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  unint64_t v4 = 0;
  for (uint64_t i = DerivedStorage + 80; !*(void *)(i + 16); i += 72)
  {
    uint64_t result = 0;
LABEL_9:
    if (v4++ >= 2) {
      return result;
    }
  }
  if (*(void *)(i + 40) == a2) {
    uint64_t result = i;
  }
  else {
    uint64_t result = 0;
  }
  if (!result) {
    goto LABEL_9;
  }
  return result;
}

void carManager_updateBrowserContext(const void *a1, uint64_t a2, const void *a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFURLRef v15 = *(const void **)(a2 + 40);
  if (gLogCategory_APEndpointManagerCarPlay <= 30)
  {
    if (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize())
    {
      uint64_t v16 = "y";
      int v17 = "n";
      if (a4) {
        uint64_t v18 = "y";
      }
      else {
        uint64_t v18 = "n";
      }
      if (a5) {
        uint64_t v19 = "y";
      }
      else {
        uint64_t v19 = "n";
      }
      if (a6) {
        uint64_t v20 = "-";
      }
      else {
        uint64_t v20 = "n";
      }
      if (a6 == 1) {
        uint64_t v20 = "y";
      }
      if (a7) {
        int v21 = "-";
      }
      else {
        int v21 = "n";
      }
      if (a7 == 1) {
        int v21 = "y";
      }
      if (a8) {
        int v17 = "-";
      }
      if (a8 != 1) {
        uint64_t v16 = v17;
      }
      CFDictionaryRef v49 = v21;
      CFDictionaryRef v50 = v16;
      uint64_t v47 = v19;
      uint64_t v48 = v20;
      char v45 = a3;
      uint64_t v46 = v18;
      uint64_t v44 = *(void *)(a2 + 8);
      LogPrintF();
    }
    if (gLogCategory_APEndpointManagerCarPlay <= 30
      && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
    {
      uint64_t v47 = (const char *)*(unsigned __int8 *)(a2 + 50);
      uint64_t v48 = (const char *)*(unsigned __int8 *)(a2 + 64);
      char v45 = (const void *)*(unsigned __int8 *)(a2 + 48);
      uint64_t v46 = (const char *)*(unsigned __int8 *)(a2 + 49);
      uint64_t v44 = *(void *)(a2 + 40);
      LogPrintF();
    }
  }
  if (a5 && v15 == a3)
  {
    *(unsigned char *)(a2 + 50) = 0;
  }
  else if (!a6 && *(unsigned char *)(a2 + 50))
  {
    if (gLogCategory_APEndpointManagerCarPlay <= 50
      && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
    {
      uint64_t v44 = *(void *)(a2 + 8);
      char v45 = *(const void **)(a2 + 40);
      LogPrintF();
    }
    *(unsigned char *)(a2 + 50) = 0;
    if (!v15)
    {
      BOOL v22 = 0;
      a3 = 0;
      goto LABEL_61;
    }
    goto LABEL_49;
  }
  BOOL v22 = v15 != 0;
  if (a3 || !v15) {
    goto LABEL_61;
  }
  if (!a4)
  {
    if (*(unsigned char *)(a2 + 48))
    {
      if (gLogCategory_APEndpointManagerCarPlay <= 50
        && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(unsigned char *)(a2 + 50) = 1;
      goto LABEL_80;
    }
    if (gLogCategory_APEndpointManagerCarPlay > 50
      || gLogCategory_APEndpointManagerCarPlay == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_55;
    }
    uint64_t v44 = *(void *)(a2 + 8);
    char v45 = v15;
    goto LABEL_52;
  }
LABEL_49:
  if (gLogCategory_APEndpointManagerCarPlay <= 50
    && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
  {
    uint64_t v44 = *(void *)(a2 + 8);
    char v45 = v15;
LABEL_52:
    LogPrintF();
  }
LABEL_55:
  uint64_t v23 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v23) {
    uint64_t v24 = v23;
  }
  else {
    uint64_t v24 = 0;
  }
  uint64_t v25 = *(void (**)(const void *))(v24 + 32);
  if (v25) {
    v25(v15);
  }
  a3 = 0;
  BOOL v22 = 1;
LABEL_61:
  if (a3 != v15)
  {
    if (gLogCategory_APEndpointManagerCarPlay <= 50
      && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
    {
      char v45 = v15;
      uint64_t v46 = (const char *)a3;
      uint64_t v44 = *(void *)(a2 + 8);
      LogPrintF();
    }
    if (v22)
    {
      CMNotificationCenterGetDefaultLocalCenter();
      FigNotificationCenterRemoveWeakListener();
      CMNotificationCenterGetDefaultLocalCenter();
      FigNotificationCenterRemoveWeakListener();
      CMNotificationCenterGetDefaultLocalCenter();
      FigNotificationCenterRemoveWeakListener();
      if (*(unsigned char *)(a2 + 48))
      {
        *(unsigned char *)(a2 + 48) = 0;
        carManager_handleEndpointActivationChanged(a1, a2);
      }
      objc_msgSend(*(id *)(a2 + 56), "setDelegate:", 0, v44, v45, v46, v47, v48, v49, v50);

      *(void *)(a2 + 56) = 0;
    }
    uint64_t v26 = *(const void **)(a2 + 40);
    *(void *)(a2 + 40) = a3;
    if (a3) {
      CFRetain(a3);
    }
    if (v26) {
      CFRelease(v26);
    }
    if (a3)
    {
      if (carManager_isEndpointWireless())
      {
        uint64_t v27 = [[APCarPlayPolicyMonitor alloc] initWithEndpoint:a3];
        *(void *)(a2 + 56) = v27;
        [(APCarPlayPolicyMonitor *)v27 setDelegate:*(void *)(DerivedStorage + 40)];
      }
      CMNotificationCenterGetDefaultLocalCenter();
      FigNotificationCenterAddWeakListener();
      CMNotificationCenterGetDefaultLocalCenter();
      FigNotificationCenterAddWeakListener();
      CMNotificationCenterGetDefaultLocalCenter();
      FigNotificationCenterAddWeakListener();
    }
    *(unsigned char *)(a2 + 50) = 0;
  }
  CFURLRef v15 = a3;
  if (a3)
  {
LABEL_80:
    if (a6 != -1) {
      *(unsigned char *)(a2 + 48) = a6 == 1;
    }
    if (APSGetFBOPropertyInt64())
    {
      if (a7 == -1)
      {
LABEL_88:
        if (a8 != -1) {
          *(unsigned char *)(a2 + 64) = a8 == 1;
        }
        if (*(unsigned char *)(a2 + 49)) {
          BOOL v29 = *(unsigned char *)(a2 + 64) == 0;
        }
        else {
          BOOL v29 = 0;
        }
        if (*(unsigned char *)(a2 + 48))
        {
          LODWORD(a3) = 0;
        }
        else
        {
          uint64_t v30 = *MEMORY[0x1E4F20D10];
          uint64_t v31 = APSGetFBOPropertyInt64();
          BOOL v32 = v29;
          if (v29) {
            long long v33 = (void *)MEMORY[0x1E4F1CFD0];
          }
          else {
            long long v33 = (void *)MEMORY[0x1E4F1CFC8];
          }
          if (v31) {
            LODWORD(a3) = 0;
          }
          else {
            LODWORD(a3) = v32;
          }
          uint64_t v34 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v34) {
            uint64_t v35 = v34;
          }
          else {
            uint64_t v35 = 0;
          }
          uint64_t v42 = *(void (**)(const void *, uint64_t, void))(v35 + 56);
          if (v42) {
            v42(v15, v30, *v33);
          }
        }
        goto LABEL_95;
      }
      BOOL v28 = a7 == 1;
    }
    else
    {
      BOOL v28 = 1;
    }
    *(unsigned char *)(a2 + 49) = v28;
    goto LABEL_88;
  }
  *(_WORD *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 64) = 0;
LABEL_95:
  if (gLogCategory_APEndpointManagerCarPlay <= 30
    && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v36 = CMBaseObjectGetDerivedStorage();
  uint64_t v37 = 0;
  while (1)
  {
    if (!*(void *)(v36 + v37 + 96) || !*(void *)(v36 + v37 + 120)) {
      goto LABEL_117;
    }
    uint64_t v38 = v36 + v37;
    if (!*(unsigned char *)(v36 + v37 + 144))
    {
      if (*(unsigned char *)(v38 + 129)) {
        break;
      }
    }
    if (*(unsigned char *)(v38 + 128))
    {
      uint64_t v39 = v36 + v37 + 80;
      int v40 = gLogCategory_APEndpointManagerCarPlay;
      if (gLogCategory_APEndpointManagerCarPlay <= 30)
      {
        if (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()) {
          goto LABEL_135;
        }
        goto LABEL_120;
      }
      goto LABEL_121;
    }
    if (gLogCategory_APEndpointManagerCarPlay <= 30
      && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
LABEL_117:
    v37 += 72;
    if (v37 == 216)
    {
      uint64_t v39 = 0;
      goto LABEL_120;
    }
  }
  uint64_t v39 = v36 + v37 + 80;
  int v40 = gLogCategory_APEndpointManagerCarPlay;
  if (gLogCategory_APEndpointManagerCarPlay <= 30)
  {
    if (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()) {
LABEL_135:
    }
      LogPrintF();
LABEL_120:
    int v40 = gLogCategory_APEndpointManagerCarPlay;
  }
LABEL_121:
  if (((v39 == *(void *)(v36 + 296)) & ~a3) != 0)
  {
    if (v40 <= 30 && (v40 != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  else
  {
    if (v40 <= 50 && (v40 != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    CFRetain(a1);
    uint64_t v41 = *(NSObject **)(v36 + 16);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __carManager_updateCurrentEndpoint_block_invoke;
    block[3] = &__block_descriptor_48_e5_v8__0l;
    block[4] = v36;
    void block[5] = a1;
    dispatch_async(v41, block);
    if (!v39 || !*(void *)(v36 + 296))
    {
      if (gLogCategory_APEndpointManagerCarPlay <= 50
        && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFRetain(a1);
      CFTypeRef v43 = *(NSObject **)(v36 + 16);
      v53[0] = MEMORY[0x1E4F143A8];
      v53[1] = 3221225472;
      v53[2] = __carManager_updateCurrentEndpoint_block_invoke_258;
      v53[3] = &__block_descriptor_40_e5_v8__0l;
      v53[4] = a1;
      dispatch_async(v43, v53);
    }
    if (gLogCategory_APEndpointManagerCarPlay <= 30
      && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(void *)(v36 + 296) = v39;
  }
}

void sub_1D09CAF14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t carManager_stopDiscovery()
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  uint64_t v1 = result;
  if (gLogCategory_APEndpointManagerCarPlay <= 50)
  {
    if (gLogCategory_APEndpointManagerCarPlay != -1 || (uint64_t result = _LogCategory_Initialize(), result)) {
      uint64_t result = LogPrintF();
    }
  }
  for (uint64_t i = 0; i != 216; i += 72)
  {
    uint64_t v3 = *(void *)(v1 + i + 96);
    if (v3)
    {
      uint64_t VTable = CMBaseObjectGetVTable();
      uint64_t v6 = *(void *)(VTable + 16);
      uint64_t result = VTable + 16;
      uint64_t v5 = v6;
      if (v6) {
        uint64_t v7 = v5;
      }
      else {
        uint64_t v7 = 0;
      }
      CFIndex v8 = *(uint64_t (**)(uint64_t, void))(v7 + 16);
      if (v8) {
        uint64_t result = v8(v3, 0);
      }
      *(unsigned char *)(v1 + i + 104) = 0;
    }
  }
  return result;
}

uint64_t carManager_invalidate(uint64_t a1)
{
  uint64_t v2 = *(NSObject **)(CMBaseObjectGetDerivedStorage() + 8);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __carManager_invalidate_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  block[4] = a1;
  dispatch_sync(v2, block);
  return 0;
}

void carManager_finalize(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointManagerCarPlay <= 50
    && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  carManager_invalidateInternal(a1);
  MEMORY[0x1D25EAD70](DerivedStorage + 304);
  uint64_t v3 = *(void **)(DerivedStorage + 320);
  if (v3)
  {
    [v3 invalidate];

    *(void *)(DerivedStorage + 320) = 0;
  }
  unint64_t v4 = *(NSObject **)(DerivedStorage + 328);
  if (v4)
  {
    dispatch_release(v4);
    *(void *)(DerivedStorage + 328) = 0;
  }
  if (*(void *)(DerivedStorage + 344))
  {
    if (carManager_getWeakRefTable_once != -1) {
      dispatch_once(&carManager_getWeakRefTable_once, &__block_literal_global_9);
    }
    FigCFWeakReferenceTableRemoveValue();
    *(void *)(DerivedStorage + 344) = 0;
  }
  uint64_t v5 = *(void *)(DerivedStorage + 336);
  if (v5)
  {
    (*(void (**)(uint64_t))(*(void *)v5 + 24))(v5);
    *(void *)(DerivedStorage + 336) = 0;
  }
  uint64_t v6 = *(const void **)(DerivedStorage + 352);
  if (v6)
  {
    CFRelease(v6);
    *(void *)(DerivedStorage + 352) = 0;
  }
  uint64_t v7 = *(const void **)(DerivedStorage + 48);
  if (v7)
  {
    CFRelease(v7);
    *(void *)(DerivedStorage + 48) = 0;
  }
  CFIndex v8 = *(const void **)(DerivedStorage + 56);
  if (v8)
  {
    CFRelease(v8);
    *(void *)(DerivedStorage + 56) = 0;
  }
  int v9 = *(const void **)(DerivedStorage + 64);
  if (v9)
  {
    CFRelease(v9);
    *(void *)(DerivedStorage + 64) = 0;
  }
  for (uint64_t i = 0; i != 216; i += 72)
  {
    uint64_t v11 = DerivedStorage + i;
    CFStringRef v12 = *(const void **)(DerivedStorage + i + 96);
    if (v12)
    {
      CFRelease(v12);
      *(void *)(v11 + 96) = 0;
      long long v13 = *(const void **)(v11 + 120);
      if (v13)
      {
        CFRelease(v13);
        *(void *)(v11 + 120) = 0;
      }
      [*(id *)(DerivedStorage + i + 136) setDelegate:0];

      *(void *)(DerivedStorage + i + 136) = 0;
    }
  }
  uint64_t v14 = *(NSObject **)(DerivedStorage + 8);
  if (v14)
  {
    dispatch_release(v14);
    *(void *)(DerivedStorage + 8) = 0;
  }
  CFURLRef v15 = *(NSObject **)(DerivedStorage + 16);
  if (v15)
  {
    dispatch_release(v15);
    *(void *)(DerivedStorage + 16) = 0;
  }
  uint64_t v16 = *(NSObject **)(DerivedStorage + 24);
  if (v16)
  {
    dispatch_release(v16);
    *(void *)(DerivedStorage + 24) = 0;
  }
  [*(id *)(DerivedStorage + 32) setDelegate:0];

  *(void *)(DerivedStorage + 32) = 0;
  *(void *)(DerivedStorage + 40) = 0;
  if (gLogCategory_APEndpointManagerCarPlay <= 50
    && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

__CFString *carManager_copyDebugDescription(uint64_t a1)
{
  uint64_t v2 = *MEMORY[0x1E4F1CF80];
  CFMutableStringRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFTypeRef cf = 0;
  CFStringAppendFormat(Mutable, 0, @"<APEndpointManagerCarPlay %p>", a1);
  uint64_t CMBaseObject = FigEndpointManagerGetCMBaseObject();
  uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(unsigned int (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v6 + 48);
  if (!v7 || v7(CMBaseObject, @"ShowInfo", v2, &cf))
  {
    APSLogErrorAt();
  }
  else
  {
    int v8 = ASPrintF();
    if (v8)
    {
      int v9 = (unsigned char *)(v8 - 1);
      if (*v9 == 10) {
        *int v9 = 0;
      }
    }
    CFStringAppendFormat(Mutable, 0, @"%s", 0);
  }
  if (cf) {
    CFRelease(cf);
  }
  free(0);
  if (!Mutable) {
    return (__CFString *)CFRetain(@"<APEndpointManagerCarPlay>");
  }
  return Mutable;
}

uint64_t carManager_copyProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = 0;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x2020000000;
  int v16 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointManagerCarPlay <= 10
    && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  int v9 = *(NSObject **)(DerivedStorage + 8);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __carManager_copyProperty_block_invoke;
  block[3] = &unk_1E6892440;
  block[4] = &v13;
  void block[5] = DerivedStorage;
  void block[6] = a2;
  void block[7] = a1;
  void block[8] = a3;
  void block[9] = a4;
  dispatch_sync(v9, block);
  uint64_t v10 = *((unsigned int *)v14 + 6);
  _Block_object_dispose(&v13, 8);
  return v10;
}

void sub_1D09CB6E0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t carManager_setProperty(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v11 = 0;
  CFStringRef v12 = &v11;
  uint64_t v13 = 0x2020000000;
  int v14 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointManagerCarPlay <= 10
    && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v7 = *(NSObject **)(DerivedStorage + 8);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __carManager_setProperty_block_invoke;
  block[3] = &unk_1E6892468;
  block[4] = &v11;
  void block[5] = DerivedStorage;
  void block[6] = a2;
  void block[7] = a3;
  void block[8] = a1;
  dispatch_sync(v7, block);
  uint64_t v8 = *((unsigned int *)v12 + 6);
  _Block_object_dispose(&v11, 8);
  return v8;
}

void sub_1D09CB824(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

unsigned char *__carManager_invalidate_block_invoke(uint64_t a1)
{
  return carManager_invalidateInternal(*(const void **)(a1 + 32));
}

unsigned char *carManager_invalidateInternal(const void *a1)
{
  uint64_t result = (unsigned char *)CMBaseObjectGetDerivedStorage();
  if (!*result)
  {
    uint64_t v3 = result;
    if (gLogCategory_APEndpointManagerCarPlay <= 30
      && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *uint64_t v3 = 1;
    unint64_t v4 = v3 + 96;
    AirPlayDebugIPCDisableForEndpointManager(a1);
    for (uint64_t i = 0; i != 216; i += 72)
    {
      uint64_t result = *(unsigned char **)&v4[i];
      if (result)
      {
        uint64_t result = (unsigned char *)APBrowserGetCMBaseObject();
        if (result)
        {
          uint64_t v6 = result;
          uint64_t VTable = CMBaseObjectGetVTable();
          uint64_t v9 = *(void *)(VTable + 8);
          uint64_t result = (unsigned char *)(VTable + 8);
          uint64_t v8 = v9;
          if (v9) {
            uint64_t v10 = v8;
          }
          else {
            uint64_t v10 = 0;
          }
          uint64_t v11 = *(uint64_t (**)(unsigned char *))(v10 + 24);
          if (v11) {
            uint64_t result = (unsigned char *)v11(v6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t __carManager_getWeakRefTable_block_invoke()
{
  uint64_t result = FigCFWeakReferenceTableCreate();
  if (result)
  {
    uint64_t result = gLogCategory_APEndpointManagerCarPlay;
    if (gLogCategory_APEndpointManagerCarPlay <= 50) {
      uint64_t result = __carManager_getWeakRefTable_block_invoke_cold_1(gLogCategory_APEndpointManagerCarPlay);
    }
    __break(1u);
  }
  return result;
}

uint64_t __carManager_copyProperty_block_invoke(uint64_t a1)
{
  if (**(unsigned char **)(a1 + 40))
  {
    uint64_t result = APSLogErrorAt();
    *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = -16712;
    return result;
  }
  if (CFEqual(*(CFTypeRef *)(a1 + 48), (CFTypeRef)*MEMORY[0x1E4F20608]))
  {
    CFAllocatorRef v2 = *(const __CFAllocator **)(a1 + 64);
    uint64_t v3 = *(CFArrayRef **)(a1 + 72);
    uint64_t v4 = *(void *)(CMBaseObjectGetDerivedStorage() + 296);
    if (v4)
    {
      uint64_t v5 = (const void **)(v4 + 40);
      uint64_t v6 = (const CFArrayCallBacks *)MEMORY[0x1E4F1D510];
      CFAllocatorRef v7 = v2;
      CFIndex v8 = 1;
    }
    else
    {
      uint64_t v6 = (const CFArrayCallBacks *)MEMORY[0x1E4F1D510];
      CFAllocatorRef v7 = v2;
      uint64_t v5 = 0;
      CFIndex v8 = 0;
    }
    CFArrayRef v13 = CFArrayCreate(v7, v5, v8, v6);
    if (v13)
    {
      int v14 = 0;
      *uint64_t v3 = v13;
    }
    else
    {
      APSLogErrorAt();
      int v14 = -16711;
    }
    *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v14;
    uint64_t result = *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
    if (!result) {
      return result;
    }
LABEL_58:
    return APSLogErrorAt();
  }
  if (!CFEqual(*(CFTypeRef *)(a1 + 48), (CFTypeRef)*MEMORY[0x1E4F20610]))
  {
    if (CFEqual(*(CFTypeRef *)(a1 + 48), (CFTypeRef)*MEMORY[0x1E4F20620]))
    {
      uint64_t result = (uint64_t)CFRetain((CFTypeRef)*MEMORY[0x1E4F20648]);
      **(void **)(a1 + 72) = result;
      return result;
    }
    if (!CFEqual(*(CFTypeRef *)(a1 + 48), @"ShowInfo"))
    {
      if (gLogCategory_APEndpointManagerCarPlay <= 60
        && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = -12784;
      goto LABEL_58;
    }
    CFAllocatorRef v15 = *(const __CFAllocator **)(a1 + 64);
    int v16 = *(__CFDictionary ***)(a1 + 72);
    char v45 = *(const void **)(a1 + 56);
    uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v15, 1, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (Mutable)
    {
      CFDictionaryRef theDict = Mutable;
      CFMutableStringRef v19 = CFStringCreateMutable(v15, 0);
      if (v19)
      {
        uint64_t v20 = v19;
        uint64_t v21 = 0;
        uint64_t v44 = *MEMORY[0x1E4F47618];
        CFStringRef key = (void *)*MEMORY[0x1E4F47620];
        uint64_t v41 = (void *)*MEMORY[0x1E4F476D8];
        do
        {
          v47[0] = 0;
          if (*(void *)(DerivedStorage + v21 + 96))
          {
            uint64_t CMBaseObject = APBrowserGetCMBaseObject();
            uint64_t v23 = *(void *)(CMBaseObjectGetVTable() + 8);
            if (v23) {
              uint64_t v24 = v23;
            }
            else {
              uint64_t v24 = 0;
            }
            uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, const __CFAllocator *, CFDictionaryRef *))(v24 + 48);
            if (v25)
            {
              if (!v25(CMBaseObject, v44, v15, v47))
              {
                int Value = CFDictionaryGetValue(v47[0], key);
                CFStringAppendFormat(v20, 0, @"\n%@", Value);
                if (v47[0]) {
                  CFRelease(v47[0]);
                }
              }
            }
            CFStringAppend(v20, @"\n");
            CFStringAppendFormat(v20, 0, @"+-+ Car browser %s state +-+\n", *(void *)(DerivedStorage + v21 + 88));
            CFStringAppend(v20, @"\n");
            if (*(unsigned char *)(DerivedStorage + v21 + 104)) {
              uint64_t v27 = 89;
            }
            else {
              uint64_t v27 = 78;
            }
            CFStringAppendFormat(v20, 0, @"browsing %c", v27);
            CFStringAppend(v20, @"\n");
            if (*(void *)(DerivedStorage + v21 + 120))
            {
              CFDictionaryRef v46 = 0;
              CFStringAppend(v20, @"\n");
              CFStringAppend(v20, @"+-+ Endpoint state +-+\n");
              CFStringAppend(v20, @"\n");
              uint64_t v28 = APSGetFBOPropertyInt64() ? 89 : 78;
              CFStringAppendFormat(v20, 0, @"Connected: %c\n", v28);
              CFAllocatorRef v29 = CFGetAllocator(v45);
              uint64_t v30 = FigEndpointGetCMBaseObject();
              uint64_t v31 = *(void *)(CMBaseObjectGetVTable() + 8);
              uint64_t v32 = v31 ? v31 : 0;
              long long v33 = *(unsigned int (**)(uint64_t, __CFString *, CFAllocatorRef, CFDictionaryRef *))(v32 + 48);
              if (v33)
              {
                if (!v33(v30, @"EndpointShowInfo", v29, &v46))
                {
                  CFDictionaryRef v34 = v46;
                  if (v46)
                  {
                    CFDictionaryGetValue(v46, @"Name");
                    CFStringAppendF();
                    CFDictionaryGetValue(v34, @"DeviceID");
                    CFStringAppendF();
                    CFDictionaryGetValue(v34, @"Model");
                    CFStringAppendF();
                    CFDictionaryGetValue(v34, @"SourceVersion");
                    CFStringAppendF();
                    CFDictionaryGetValue(v34, @"AirPlayFeatures");
                    CFStringAppendF();
                    CFDictionaryGetInt64();
                    CFStringAppendF();
                    CFDictionaryGetTypeID();
                    if (CFDictionaryGetTypedValue())
                    {
                      CFDictionaryGetTypeID();
                      Typedint Value = (const __CFDictionary *)CFDictionaryGetTypedValue();
                      if (TypedValue)
                      {
                        if (CFDictionaryGetValue(TypedValue, v41)) {
                          CFStringAppendF();
                        }
                      }
                    }
                    CFDictionaryGetInt64();
                    CFStringAppendF();
                    CFStringAppendF();
                    CFDictionaryRef v36 = (const __CFDictionary *)CFDictionaryGetValue(v34, @"StreamInfo_MainAudio");
                    carManager_appendEndpointStreamShowInfo(v36);
                    CFDictionaryRef v37 = (const __CFDictionary *)CFDictionaryGetValue(v34, @"StreamInfo_AltAudio");
                    carManager_appendEndpointStreamShowInfo(v37);
                    CFDictionaryRef v38 = (const __CFDictionary *)CFDictionaryGetValue(v34, @"StreamInfo_Screen");
                    carManager_appendEndpointStreamShowInfo(v38);
                    CFDictionaryRef v39 = v46;
                  }
                  else
                  {
                    CFDictionaryRef v39 = 0;
                  }
                  CFRelease(v39);
                }
              }
            }
          }
          v21 += 72;
        }
        while (v21 != 216);
        CFDictionarySetValue(theDict, @"DetailedDescription", v20);
        *int v16 = theDict;
        CFRelease(v20);
        int v40 = 0;
        goto LABEL_51;
      }
      APSLogErrorAt();
      CFRetain(theDict);
    }
    else
    {
      APSLogErrorAt();
    }
    int v40 = -6728;
LABEL_51:
    *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v40;
    uint64_t result = *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
    if (result) {
      return APSLogErrorAt();
    }
    return result;
  }
  uint64_t v9 = *(CFTypeRef **)(a1 + 72);
  uint64_t v10 = CMBaseObjectGetDerivedStorage();
  uint64_t v11 = (CFTypeRef *)MEMORY[0x1E4F1CFD0];
  if (!*(void *)(v10 + 296)) {
    uint64_t v11 = (CFTypeRef *)MEMORY[0x1E4F1CFC8];
  }
  *uint64_t v9 = CFRetain(*v11);
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 0;
  uint64_t result = *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  if (result) {
    goto LABEL_58;
  }
  return result;
}

CFDictionaryRef carManager_appendEndpointStreamShowInfo(const __CFDictionary *result)
{
  if (result)
  {
    CFDictionaryRef v1 = result;
    CMTimeValue value = (void *)CFDictionaryGetValue(result, @"Subtype");
    CFDictionaryGetValue(v1, @"Type");
    CFDictionaryGetInt64();
    CFStringAppendF();
    if (CFDictionaryGetValueIfPresent(v1, @"ScreenInfo", (const void **)&value) && value)
    {
      CFAllocatorRef v2 = (const void *)FigCFCopyCompactDescription();
      CFStringAppendF();
      if (v2) {
        CFRelease(v2);
      }
    }
    return (const __CFDictionary *)CFStringAppendF();
  }
  return result;
}

uint64_t __carManager_setProperty_block_invoke(uint64_t a1)
{
  if (**(unsigned char **)(a1 + 40))
  {
    uint64_t result = APSLogErrorAt();
    uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
    int v7 = -16712;
    goto LABEL_21;
  }
  if (!CFEqual(*(CFTypeRef *)(a1 + 48), @"OverrideEndpointManagerEnabled"))
  {
    if (gLogCategory_APEndpointManagerCarPlay <= 60
      && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = -12784;
LABEL_16:
    return APSLogErrorAt();
  }
  CFAllocatorRef v2 = *(const void **)(a1 + 56);
  if (!v2 || (CFTypeID v3 = CFGetTypeID(v2), v3 != CFBooleanGetTypeID()))
  {
    uint64_t result = APSLogErrorAt();
    uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
    int v7 = -16710;
LABEL_21:
    *(_DWORD *)(v6 + 24) = v7;
    return result;
  }
  int Value = CFBooleanGetValue(*(CFBooleanRef *)(a1 + 56));
  *(unsigned char *)(*(void *)(a1 + 40) + 312) = Value;
  if (Value)
  {
    *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = carManager_startDiscovery();
    uint64_t result = *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
    if (!result) {
      return result;
    }
    goto LABEL_16;
  }
  return carManager_stopDiscovery();
}

uint64_t carManager_setDiscoveryMode()
{
  return 0;
}

void __carManager_asyncRegisterCarPlayHALDriver_block_invoke(uint64_t a1)
{
  int v2 = AudioServerPlugInRegisterRemote();
  if (v2) {
    int v3 = 60;
  }
  else {
    int v3 = 50;
  }
  if (v3 >= gLogCategory_APEndpointManagerCarPlay
    && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (v2)
  {
    if (gLogCategory_APEndpointManagerCarPlay <= 50
      && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    carManager_asyncRegisterCarPlayHALDriver(*(void *)(a1 + 40), 1);
  }
  CFRelease(*(CFTypeRef *)(a1 + 40));
}

void __carManager_asyncRegisterCarPlayHALDriver_block_invoke_2()
{
  if (carManager_getWeakRefTable_once != -1) {
    dispatch_once(&carManager_getWeakRefTable_once, &__block_literal_global_9);
  }
  uint64_t v0 = FigCFWeakReferenceTableCopyValue();
  if (v0)
  {
    CFDictionaryRef v1 = (const void *)v0;
    if (gLogCategory_APEndpointManagerCarPlay <= 50
      && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    carManager_asyncRegisterCarPlayHALDriver(v1, 1);
    CFRelease(v1);
  }
  else if (gLogCategory_APEndpointManagerCarPlay <= 90 {
         && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
  }
  {
    LogPrintF();
  }
}

void __carManager_handleControlServerEvent_block_invoke(uint64_t a1)
{
  int v2 = *(const void **)(*(void *)(a1 + 32) + 64);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(*(void *)(a1 + 32) + 64) = 0;
  }
  CFGetAllocator(*(CFTypeRef *)(a1 + 40));
  *(void *)(*(void *)(a1 + 32) + 64) = FigCFNumberCreateUInt64();
  *(CFAbsoluteTime *)(*(void *)(a1 + 32) + 72) = CFAbsoluteTimeGetCurrent();
  if (gLogCategory_APEndpointManagerCarPlay <= 50
    && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  carManager_handlePendingAutoconnect(*(const void **)(a1 + 40));
  int v3 = *(const void **)(a1 + 40);
  if (v3)
  {
    CFRelease(v3);
  }
}

void carManager_handlePendingAutoconnect(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  double Current = CFAbsoluteTimeGetCurrent();
  if (*(void *)(DerivedStorage + 64))
  {
    double v4 = Current - *(double *)(DerivedStorage + 72);
    Uuint64_t Int64 = FigCFNumberGetUInt64();
    uint64_t v18 = UInt64;
    if (v4 >= 0.0 && v4 <= 5.0)
    {
      uint64_t v7 = *(void *)(DerivedStorage + 296);
      if (v7)
      {
        if (carManager_getDiscoveryIDForEndpoint(*(const void **)(v7 + 40)) == UInt64)
        {
          int v8 = *(unsigned __int8 *)(*(void *)(DerivedStorage + 296) + 48);
          BOOL v9 = APSGetFBOPropertyInt64() != 0;
        }
        else
        {
          int v8 = 0;
          BOOL v9 = 0;
        }
        if (gLogCategory_APEndpointManagerCarPlay <= 50
          && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
      else
      {
        int v8 = 0;
        BOOL v9 = 0;
      }
      if (!v8 && !v9)
      {
        for (uint64_t i = 0; i != 216; i += 72)
        {
          uint64_t v15 = DerivedStorage + i;
          if (*(void *)(DerivedStorage + i + 96))
          {
            int v16 = *(const void **)(v15 + 120);
            if (v16)
            {
              uint64_t DiscoveryIDForEndpoint = carManager_getDiscoveryIDForEndpoint(*(const void **)(v15 + 120));
              if (gLogCategory_APEndpointManagerCarPlay <= 50
                && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              if (DiscoveryIDForEndpoint == v18)
              {
                carManager_updateBrowserContext(a1, DerivedStorage + i + 80, v16, 0, 0, -1, 1, -1);
                int v17 = *(const void **)(DerivedStorage + 64);
                if (v17)
                {
                  CFRelease(v17);
                  *(void *)(DerivedStorage + 64) = 0;
                }
                return;
              }
            }
          }
        }
        if (gLogCategory_APEndpointManagerCarPlay <= 50
          && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
        {
          goto LABEL_13;
        }
      }
    }
    else
    {
      if (gLogCategory_APEndpointManagerCarPlay <= 50
        && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = DerivedStorage + v10;
        if (*(void *)(DerivedStorage + v10 + 96))
        {
          CFStringRef v12 = *(const void **)(v11 + 120);
          if (v12)
          {
            if (carManager_getDiscoveryIDForEndpoint(*(const void **)(v11 + 120)) == v18) {
              break;
            }
          }
        }
        v10 += 72;
        if (v10 == 216) {
          goto LABEL_32;
        }
      }
      carManager_updateBrowserContext(a1, DerivedStorage + v10 + 80, v12, 0, 0, -1, 0, -1);
LABEL_32:
      CFArrayRef v13 = *(const void **)(DerivedStorage + 64);
      if (v13)
      {
        CFRelease(v13);
        *(void *)(DerivedStorage + 64) = 0;
      }
      *(void *)(DerivedStorage + 72) = 0;
    }
  }
  else if (gLogCategory_APEndpointManagerCarPlay <= 50 {
         && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
  }
  {
LABEL_13:
    LogPrintF();
  }
}

uint64_t carManager_getDiscoveryIDForEndpoint(const void *a1)
{
  CFTypeRef cf = 0;
  CFTypeRef v15 = 0;
  uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
  uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = *(unsigned int (**)(uint64_t, __CFString *, void, CFTypeRef *))(v4 + 48);
  if (v5
    && !v5(CMBaseObject, @"EndpointDescription", 0, &v15)
    && ((CFTypeRef v6 = v15,
         CFAllocatorRef v7 = CFGetAllocator(a1),
         uint64_t v8 = APEndpointDescriptionGetCMBaseObject(v6),
         (uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 8)) == 0)
      ? (uint64_t v10 = 0)
      : (uint64_t v10 = v9),
        (uint64_t v11 = *(unsigned int (**)(uint64_t, __CFString *, CFAllocatorRef, CFTypeRef *))(v10 + 48)) != 0
     && !v11(v8, @"TransportDevice", v7, &cf)
     && APTransportDeviceGetDiscoveryID()))
  {
    Uuint64_t Int64 = FigCFNumberGetUInt64();
  }
  else
  {
    APSLogErrorAt();
    Uuint64_t Int64 = 0;
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v15) {
    CFRelease(v15);
  }
  return UInt64;
}

uint64_t __carManager_browserEventHandler_block_invoke(uint64_t a1)
{
  if (gLogCategory_APEndpointManagerCarPlay <= 30
    && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
  {
    APBrowserGetEventString();
    LogPrintF();
  }
  uint64_t result = *(unsigned int *)(a1 + 56);
  switch((int)result)
  {
    case 3:
    case 4:
      uint64_t v3 = *(void *)(a1 + 40);
      CFDictionaryRef v4 = *(const __CFDictionary **)(a1 + 48);
      uint64_t v5 = *(const void **)(v3 + 32);
      uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
      CFAllocatorRef v7 = CFGetAllocator(v5);
      CFTypeRef v33 = 0;
      CFTypeRef v34 = 0;
      if (!v4)
      {
        APSLogErrorAt();
        int v32 = -6762;
        goto LABEL_74;
      }
      uint64_t v8 = (uint64_t)v7;
      int v9 = APTransportDeviceCreate();
      if (v9)
      {
        int v32 = v9;
        goto LABEL_82;
      }
      uint64_t v10 = *(const void **)(v3 + 40);
      if (v10)
      {
        CFTypeRef v33 = CFRetain(v10);
        CFTypeRef cf = 0;
        uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
        uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 8);
        if (v12) {
          uint64_t v13 = v12;
        }
        else {
          uint64_t v13 = 0;
        }
        BOOL v22 = *(void (**)(uint64_t, __CFString *, void, CFTypeRef *))(v13 + 48);
        if (!v22) {
          goto LABEL_85;
        }
        v22(CMBaseObject, @"EndpointDescription", 0, &cf);
        CFTypeRef v23 = cf;
        if (!cf) {
          goto LABEL_85;
        }
        uint64_t v24 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v24) {
          uint64_t v25 = v24;
        }
        else {
          uint64_t v25 = 0;
        }
        uint64_t v30 = *(unsigned int (**)(CFTypeRef, CFTypeRef))(v25 + 40);
        if (v30) {
          BOOL v31 = v30(v23, v34) == 0;
        }
        else {
          BOOL v31 = 1;
        }
        if (cf) {
          CFRelease(cf);
        }
        if (!v31)
        {
          if (gLogCategory_APEndpointManagerCarPlay > 50
            || gLogCategory_APEndpointManagerCarPlay == -1 && !_LogCategory_Initialize())
          {
            goto LABEL_70;
          }
        }
        else
        {
LABEL_85:
          if (gLogCategory_APEndpointManagerCarPlay > 90
            || gLogCategory_APEndpointManagerCarPlay == -1 && !_LogCategory_Initialize())
          {
            goto LABEL_70;
          }
        }
        LogPrintF();
LABEL_70:
        char v29 = -1;
LABEL_71:
        carManager_updateBrowserContext(v5, v3, v33, 1, 1, v29, -1, -1);
        carManager_handlePendingAutoconnect(v5);
        int v32 = 0;
        goto LABEL_72;
      }
      if (*(unsigned char *)(DerivedStorage + 360))
      {
        CFAllocatorRef v18 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
        CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
        CFDictionarySetValue(Mutable, @"carPlayTestControlMode", (const void *)*MEMORY[0x1E4F1CFD0]);
        uint64_t v20 = *(const void **)(DerivedStorage + 352);
        if (!v20) {
          goto LABEL_37;
        }
        if (Mutable) {
          goto LABEL_36;
        }
        uint64_t v21 = (const void **)(DerivedStorage + 352);
LABEL_35:
        CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v18, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
        uint64_t v20 = *v21;
LABEL_36:
        CFDictionarySetValue(Mutable, @"EventRecorder", v20);
        goto LABEL_37;
      }
      if (*(void *)(DerivedStorage + 352))
      {
        uint64_t v21 = (const void **)(DerivedStorage + 352);
        CFAllocatorRef v18 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
        goto LABEL_35;
      }
      CFMutableDictionaryRef Mutable = 0;
LABEL_37:
      uint64_t v26 = (const void *)*MEMORY[0x1E4F47600];
      if (CFDictionaryContainsKey(v4, (const void *)*MEMORY[0x1E4F47600]))
      {
        if (!Mutable) {
          CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
        }
        int Value = CFDictionaryGetValue(v4, v26);
        CFDictionarySetValue(Mutable, @"sessionHostInfo", Value);
      }
      int v28 = APEndpointCarPlayCreateWithTransportDevice(v8, v34, Mutable, &v33);
      if (!v28)
      {
        if (!*(_WORD *)v3) {
          carManager_isEndpointWireless();
        }
        if (gLogCategory_APEndpointManagerCarPlay <= 50
          && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
        {
          APSGetFBOPropertyInt64();
          LogPrintF();
        }
        if (Mutable) {
          CFRelease(Mutable);
        }
        char v29 = 0;
        goto LABEL_71;
      }
      int v32 = v28;
LABEL_82:
      APSLogErrorAt();
LABEL_72:
      if (v33) {
        CFRelease(v33);
      }
LABEL_74:
      if (v34) {
        CFRelease(v34);
      }
      *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v32;
      uint64_t result = *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
      if (result) {
        return APSLogErrorAt();
      }
      return result;
    case 5:
    case 6:
      uint64_t v14 = *(void *)(a1 + 40);
      CFTypeRef v15 = *(const void **)(v14 + 32);
      uint64_t v16 = *(void *)(v14 + 40);
      CMBaseObjectGetDerivedStorage();
      if (v16) {
        carManager_updateBrowserContext(v15, v14, 0, 1, 0, -1, -1, -1);
      }
      *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 0;
      uint64_t result = *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
      if (result) {
        goto LABEL_21;
      }
      return result;
    case 7:
      uint64_t v17 = *(void *)(a1 + 40);
      CMBaseObjectGetDerivedStorage();
      if (*(void *)(v17 + 40)) {
        carManager_updateBrowserContext(*(const void **)(v17 + 32), v17, 0, 1, 0, -1, -1, -1);
      }
      *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 0;
      uint64_t result = *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
      if (result)
      {
LABEL_21:
        return APSLogErrorAt();
      }
      return result;
    case 8:
      return result;
    default:
      if (gLogCategory_APEndpointManagerCarPlay <= 90)
      {
        if (gLogCategory_APEndpointManagerCarPlay != -1 || (uint64_t result = _LogCategory_Initialize(), result))
        {
          APBrowserGetEventString();
          return LogPrintF();
        }
      }
      return result;
  }
}

BOOL carManager_isEndpointWireless()
{
  CFTypeRef cf = 0;
  uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
  uint64_t v1 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v1) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = 0;
  }
  uint64_t v3 = *(void (**)(uint64_t, void, void, CFTypeRef *))(v2 + 48);
  BOOL v4 = 0;
  if (v3)
  {
    v3(CMBaseObject, *MEMORY[0x1E4F21040], 0, &cf);
    if (cf)
    {
      if (FigCFEqual()) {
        BOOL v4 = 1;
      }
    }
  }
  if (cf) {
    CFRelease(cf);
  }
  return v4;
}

void carManager_handleEndpointActivated(uint64_t a1, const void *a2, const void *a3, const void *a4, const void *a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFRetain(a2);
  if (a4) {
    CFRetain(a4);
  }
  if (a3) {
    CFRetain(a3);
  }
  if (a5) {
    CFRetain(a5);
  }
  uint64_t v10 = *(NSObject **)(DerivedStorage + 8);
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  v11[2] = __carManager_handleEndpointActivated_block_invoke;
  v11[3] = &__block_descriptor_64_e5_v8__0l;
  v11[4] = a2;
  void v11[5] = a4;
  v11[6] = a5;
  void v11[7] = a3;
  dispatch_async(v10, v11);
}

void carManager_handleEndpointDeactivatedOrDissociated(uint64_t a1, const void *a2, const void *a3, const void *a4, const void *a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  v12[0] = 0;
  v12[1] = v12;
  v12[2] = 0x2020000000;
  v12[3] = 0;
  if (gLogCategory_APEndpointManagerCarPlay <= 50
    && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFEqual(a3, (CFTypeRef)*MEMORY[0x1E4F20720]);
  CFRetain(a2);
  if (a4) {
    CFRetain(a4);
  }
  if (a3) {
    CFRetain(a3);
  }
  if (a5) {
    CFRetain(a5);
  }
  uint64_t v10 = *(NSObject **)(DerivedStorage + 8);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __carManager_handleEndpointDeactivatedOrDissociated_block_invoke;
  block[3] = &unk_1E6892468;
  block[4] = v12;
  void block[5] = a2;
  void block[6] = a4;
  void block[7] = a5;
  void block[8] = a3;
  dispatch_async(v10, block);
  _Block_object_dispose(v12, 8);
}

void sub_1D09CDA68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void carManager_handleEndpointActivationChanged(const void *a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFAbsoluteTimeGetCurrent();
  if (*(unsigned char *)(a2 + 48))
  {
    CFDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (!*(void *)(DerivedStorage + 320)) {
      *(void *)(DerivedStorage + 320) = objc_alloc_init(getCRSSessionControllerClass());
    }
    double Current = CFAbsoluteTimeGetCurrent();
    CMTimeValue value = 0;
    if (carManager_getEndpointActivationStateFilePath_once != -1) {
      dispatch_once(&carManager_getEndpointActivationStateFilePath_once, &__block_literal_global_238);
    }
    uint64_t v7 = CFPropertyListCreateFromFilePath();
    if (v7)
    {
      uint64_t v8 = (const void *)v7;
      FigCFDictionaryGetDoubleIfPresent();
      if (gLogCategory_APEndpointManagerCarPlay <= 50
        && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFRelease(v8);
      double v10 = *(double *)&value;
    }
    else
    {
      double v10 = 0.0;
    }
    double v11 = Current - v10;
    if (v11 <= 0.0 || v11 >= 15.0)
    {
      pid_t v13 = getpid();
      LODWORD(CFDictionarySetValue(theDict, key, value) = 0;
      if (carManager_getEndpointActivationStateFilePath_once != -1) {
        dispatch_once(&carManager_getEndpointActivationStateFilePath_once, &__block_literal_global_238);
      }
      uint64_t v14 = CFPropertyListCreateFromFilePath();
      if (!v14) {
        goto LABEL_71;
      }
      CFDictionaryRef v15 = (const __CFDictionary *)v14;
      FigCFDictionaryGetInt32IfPresent();
      if (value == v13 || CFDictionaryContainsKey(v15, @"deactivation_time"))
      {
        uint64_t v16 = v15;
LABEL_67:
        CFRelease(v16);
LABEL_71:
        if (CFDictionaryGetCount(Mutable) >= 1)
        {
          if (gLogCategory_APEndpointManagerCarPlay <= 40
            && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          APSSetFBOPropertyDictionary();
        }
        FigCFWeakReferenceStore();
        if (Mutable) {
          CFRelease(Mutable);
        }
        goto LABEL_79;
      }
      if (gLogCategory_APEndpointManagerCarPlay <= 60
        && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFRelease(v15);
      uint64_t v25 = (const void *)*MEMORY[0x1E4F1CFD0];
      uint64_t v26 = @"APCarPlay_sessionCrash";
LABEL_70:
      CFDictionarySetValue(Mutable, v26, v25);
      goto LABEL_71;
    }
    CMTimeValue value = 0;
    uint64_t v17 = MEMORY[0x1D25EADB0](DerivedStorage + 304);
    CFAllocatorRef v18 = (const void **)MEMORY[0x1E4F1CFD0];
    if (!v17)
    {
      int v24 = FigCFEqual();
      uint64_t v25 = *v18;
      if (v24) {
        uint64_t v26 = @"APCarPlay_sessionSoftReset";
      }
      else {
        uint64_t v26 = @"APCarPlay_sessionHardReset";
      }
      goto LABEL_70;
    }
    BOOL isEndpointWireless = carManager_isEndpointWireless();
    uint64_t v20 = (const void **)MEMORY[0x1E4F1CFC8];
    if (isEndpointWireless) {
      uint64_t v20 = v18;
    }
    CFDictionarySetValue(Mutable, @"APCarPlay_wasWireless", *v20);
    uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
    uint64_t v22 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v22) {
      uint64_t v23 = v22;
    }
    else {
      uint64_t v23 = 0;
    }
    uint64_t v27 = *(uint64_t (**)(uint64_t, void, void, void **))(v23 + 48);
    if (v27)
    {
      int v28 = v27(CMBaseObject, *MEMORY[0x1E4F20F18], 0, &value);
      char v29 = value;
      if (v28 || !value)
      {
LABEL_41:
        if (v29)
        {
          CFRelease(v29);
          CMTimeValue value = 0;
        }
        uint64_t v30 = FigEndpointGetCMBaseObject();
        uint64_t v31 = *(void *)(CMBaseObjectGetVTable() + 8);
        if (v31) {
          uint64_t v32 = v31;
        }
        else {
          uint64_t v32 = 0;
        }
        CFTypeRef v33 = *(uint64_t (**)(uint64_t, void, void, void **))(v32 + 48);
        if (v33)
        {
          int v34 = v33(v30, *MEMORY[0x1E4F20EF8], 0, &value);
          uint64_t v35 = value;
          if (v34 || !value)
          {
LABEL_51:
            if (v35)
            {
              CFRelease(v35);
              CMTimeValue value = 0;
            }
            uint64_t v36 = FigEndpointGetCMBaseObject();
            uint64_t v37 = *(void *)(CMBaseObjectGetVTable() + 8);
            if (v37) {
              uint64_t v38 = v37;
            }
            else {
              uint64_t v38 = 0;
            }
            CFDictionaryRef v39 = *(uint64_t (**)(uint64_t, void, void, void **))(v38 + 48);
            if (v39)
            {
              int v40 = v39(v36, *MEMORY[0x1E4F20DF0], 0, &value);
              uint64_t v41 = value;
              if (v40 || !value) {
                goto LABEL_61;
              }
              CFDictionarySetValue(Mutable, @"APCarPlay_wasFirmwareVersion", value);
            }
            uint64_t v41 = value;
LABEL_61:
            if (v41)
            {
              CFRelease(v41);
              CMTimeValue value = 0;
            }
            if (FigCFEqual()) {
              uint64_t v42 = @"APCarPlay_sessionSoftReset";
            }
            else {
              uint64_t v42 = @"APCarPlay_sessionHardReset";
            }
            CFDictionarySetValue(Mutable, v42, *v18);
            uint64_t v16 = (const void *)v17;
            goto LABEL_67;
          }
          CFDictionarySetValue(Mutable, @"APCarPlay_wasManufacturer", value);
        }
        uint64_t v35 = value;
        goto LABEL_51;
      }
      CFDictionarySetValue(Mutable, @"APCarPlay_wasModel", value);
    }
    char v29 = value;
    goto LABEL_41;
  }
  int v9 = *(void **)(DerivedStorage + 320);
  if (v9)
  {
    [v9 invalidate];

    *(void *)(DerivedStorage + 320) = 0;
  }
LABEL_79:
  getpid();
  CFMutableDictionaryRef v43 = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (v43)
  {
    CFMutableDictionaryRef v44 = v43;
    if (gLogCategory_APEndpointManagerCarPlay <= 50
      && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    FigCFDictionarySetInt32();
    FigCFDictionarySetDouble();
    if (carManager_getEndpointActivationStateFilePath_once != -1) {
      dispatch_once(&carManager_getEndpointActivationStateFilePath_once, &__block_literal_global_238);
    }
    if (CFPropertyListWriteToFilePath()) {
      APSLogErrorAt();
    }
    CFRelease(v44);
  }
  else
  {
    APSLogErrorAt();
  }
  if (gLogCategory_APEndpointManagerCarPlay <= 50
    && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFRetain(a1);
  char v45 = *(NSObject **)(DerivedStorage + 16);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __carManager_handleEndpointActivationChanged_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  block[4] = a1;
  dispatch_async(v45, block);
}

void __carManager_handleEndpointActivated_block_invoke(uint64_t *a1)
{
  uint64_t BrowserContextForEndpoint = carManager_getBrowserContextForEndpoint(a1[4], a1[5]);
  if (BrowserContextForEndpoint)
  {
    uint64_t v3 = BrowserContextForEndpoint;
    carManager_updateBrowserContext(a1[4], BrowserContextForEndpoint, a1[5], 0, 0, 1, 0, 0xFFFFFFFFLL);
    carManager_handleEndpointActivationChanged((const void *)a1[4], v3);
  }
  BOOL v4 = (const void *)a1[6];
  if (v4) {
    CFRelease(v4);
  }
  uint64_t v5 = (const void *)a1[7];
  if (v5) {
    CFRelease(v5);
  }
  CFTypeRef v6 = (const void *)a1[5];
  if (v6) {
    CFRelease(v6);
  }
  uint64_t v7 = (const void *)a1[4];
  CFRelease(v7);
}

void __carManager_handleEndpointDeactivatedOrDissociated_block_invoke(void *a1)
{
  *(void *)(*(void *)(a1[4] + 8) + 24) = carManager_getBrowserContextForEndpoint(a1[5], a1[6]);
  uint64_t v2 = *(void *)(*(void *)(a1[4] + 8) + 24);
  if (v2)
  {
    carManager_updateBrowserContext(a1[5], v2, a1[6], 0, 0, 0, 0xFFFFFFFFLL, 0xFFFFFFFFLL);
    carManager_handleEndpointActivationChanged((const void *)a1[5], *(void *)(*(void *)(a1[4] + 8) + 24));
    carManager_handlePendingAutoconnect(a1[5]);
  }
  uint64_t v3 = (const void *)a1[7];
  if (v3) {
    CFRelease(v3);
  }
  BOOL v4 = (const void *)a1[8];
  if (v4) {
    CFRelease(v4);
  }
  uint64_t v5 = (const void *)a1[6];
  if (v5) {
    CFRelease(v5);
  }
  CFTypeRef v6 = (const void *)a1[5];
  CFRelease(v6);
}

void __carManager_handleEndpointActivationChanged_block_invoke(uint64_t a1)
{
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterPostNotification();
  uint64_t v2 = *(const void **)(a1 + 32);
  CFRelease(v2);
}

Class initCRSSessionController()
{
  if (CarPlayServicesLibrary_sOnce != -1) {
    dispatch_once(&CarPlayServicesLibrary_sOnce, &__block_literal_global_231);
  }
  Class result = objc_getClass("CRSSessionController");
  classCRSSessionController = (uint64_t)result;
  getCRSSessionControllerClass = CRSSessionControllerFunction;
  return result;
}

uint64_t CRSSessionControllerFunction()
{
  return classCRSSessionController;
}

void *__CarPlayServicesLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/CarPlayServices.framework/CarPlayServices", 2);
  CarPlayServicesLibrary_sLib = (uint64_t)result;
  return result;
}

void __carManager_getEndpointActivationStateFilePath_block_invoke()
{
  uint64_t v0 = (void *)MEMORY[0x1D25EC4D0]();
  NSTemporaryDirectory();
  SNPrintF();
  if (gLogCategory_APEndpointManagerCarPlay <= 40
    && (gLogCategory_APEndpointManagerCarPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

void __carManager_updateCurrentEndpoint_block_invoke(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 352)) {
    APSEventRecorderRecordEvent();
  }
  uint64_t v2 = LogCategoryCopyOSLogHandle();
  uint64_t v3 = (void *)v2;
  if (v2) {
    BOOL v4 = v2;
  }
  else {
    BOOL v4 = MEMORY[0x1E4F14500];
  }
  if (os_signpost_enabled(v4))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_signpost_emit_with_name_impl(&dword_1D0945000, v4, OS_SIGNPOST_EVENT, 0x2B160190uLL, "AP_SIGNPOST_SETAUTOCONNECTENDPOINT", (const char *)&unk_1D0B9874E, v5, 2u);
  }
  if (v3) {

  }
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterPostNotification();
  CFRelease(*(CFTypeRef *)(a1 + 40));
}

void __carManager_updateCurrentEndpoint_block_invoke_258(uint64_t a1)
{
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterPostNotification();
  uint64_t v2 = *(const void **)(a1 + 32);
  CFRelease(v2);
}

uint64_t APEndpointDisplayDescriptionGetTypeID()
{
  if (APEndpointDisplayDescriptionGetTypeID_sAPEndpointDisplayDescriptionOnce != -1) {
    dispatch_once(&APEndpointDisplayDescriptionGetTypeID_sAPEndpointDisplayDescriptionOnce, &__block_literal_global_10);
  }
  return sAPEndpointDisplayDescriptionTypeID;
}

uint64_t __APEndpointDisplayDescriptionGetTypeID_block_invoke()
{
  sAPEndpointDisplayDescriptionClass = 0;
  *(void *)algn_1EA640148 = "APEndpointDisplayDescription";
  qword_1EA640150 = 0;
  unk_1EA640158 = 0;
  qword_1EA640168 = 0;
  unk_1EA640170 = 0;
  qword_1EA640160 = (uint64_t)bonjourDisplayDescription_Finalize;
  qword_1EA640178 = (uint64_t)bonjourDisplayDescription_CopyFormattingDesc;
  qword_1EA640180 = (uint64_t)bonjourDisplayDescription_CopyDebugDescription;
  uint64_t result = _CFRuntimeRegisterClass();
  sAPEndpointDisplayDescriptionCFTypeID TypeID = result;
  return result;
}

uint64_t APEndpointDisplayDescriptionCreateWithDisplayInfo(uint64_t a1, const void *a2, void *a3)
{
  if (!a3)
  {
    uint64_t v10 = 4294895515;
LABEL_13:
    APSLogErrorAt();
    return v10;
  }
  if (!a2)
  {
    uint64_t v10 = 4294895515;
    goto LABEL_13;
  }
  CFTypeID TypeID = CFDictionaryGetTypeID();
  if (TypeID != CFGetTypeID(a2))
  {
    uint64_t v10 = 4294895515;
    goto LABEL_13;
  }
  if (APEndpointDisplayDescriptionGetTypeID_sAPEndpointDisplayDescriptionOnce != -1) {
    dispatch_once(&APEndpointDisplayDescriptionGetTypeID_sAPEndpointDisplayDescriptionOnce, &__block_literal_global_10);
  }
  uint64_t Instance = _CFRuntimeCreateInstance();
  if (!Instance)
  {
    APSLogErrorAt();
    return 4294895516;
  }
  uint64_t v7 = (void *)Instance;
  *(void *)(Instance + 16) = 0;
  *(void *)(Instance + 24) = 0;
  dispatch_queue_t v8 = dispatch_queue_create("com.apple.AirPlay.APEndpointDisplayDescription", 0);
  v7[2] = v8;
  if (!v8)
  {
    APSLogErrorAt();
    CFRelease(v7);
    return 4294895516;
  }
  CFTypeRef v9 = CFRetain(a2);
  uint64_t v10 = 0;
  void v7[3] = v9;
  *a3 = v7;
  return v10;
}

uint64_t APEndpointDisplayDescriptionCreateDefaultWithEndpointFeatures(const __CFAllocator *a1, uint64_t a2, void *a3)
{
  APSFeaturesHasFeature();
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(a1, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    CFTypeRef v6 = Mutable;
    CFDictionarySetInt64();
    CFDictionarySetInt64();
    CFDictionarySetValue(v6, @"uuid", @"86E62046-B752-490D-AF0B-6D7672A89101");
    uint64_t v7 = APEndpointDisplayDescriptionCreateWithDisplayInfo((uint64_t)a1, v6, a3);
    if (v7) {
      APSLogErrorAt();
    }
    CFRelease(v6);
  }
  else
  {
    APSLogErrorAt();
    return 4294895516;
  }
  return v7;
}

uint64_t APEndpointDisplayDescriptionCopyProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = 0;
  pid_t v13 = &v12;
  uint64_t v14 = 0x2000000000;
  int v15 = 0;
  if (gLogCategory_APEndpointDisplayDescription <= 30
    && (gLogCategory_APEndpointDisplayDescription != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!a2)
  {
    uint64_t v9 = 4294895515;
LABEL_11:
    APSLogErrorAt();
    *((_DWORD *)v13 + 6) = -71781;
    goto LABEL_8;
  }
  if (!a4)
  {
    uint64_t v9 = 4294895515;
    goto LABEL_11;
  }
  dispatch_queue_t v8 = *(NSObject **)(a1 + 16);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __APEndpointDisplayDescriptionCopyProperty_block_invoke;
  block[3] = &unk_1E68925F8;
  block[4] = &v12;
  void block[5] = a1;
  void block[6] = a2;
  void block[7] = a3;
  void block[8] = a4;
  dispatch_sync(v8, block);
  uint64_t v9 = *((unsigned int *)v13 + 6);
LABEL_8:
  _Block_object_dispose(&v12, 8);
  return v9;
}

uint64_t __APEndpointDisplayDescriptionCopyProperty_block_invoke(void *a1)
{
  uint64_t v3 = a1[5];
  uint64_t v2 = (const void *)a1[6];
  BOOL v4 = (uint64_t *)a1[8];
  if (CFEqual(v2, @"EDID"))
  {
    CFDictionaryRef v5 = *(const __CFDictionary **)(v3 + 24);
    CFTypeRef v6 = @"edid";
LABEL_15:
    uint64_t result = (uint64_t)CFDictionaryGetValue(v5, v6);
    if (result) {
      uint64_t result = (uint64_t)CFRetain((CFTypeRef)result);
    }
    int v8 = 0;
    *BOOL v4 = result;
    goto LABEL_18;
  }
  if (CFEqual(v2, @"UUID"))
  {
    CFDictionaryRef v5 = *(const __CFDictionary **)(v3 + 24);
    CFTypeRef v6 = @"uuid";
    goto LABEL_15;
  }
  if (CFEqual(v2, @"ViewAreas"))
  {
    CFDictionaryRef v5 = *(const __CFDictionary **)(v3 + 24);
    CFTypeRef v6 = @"viewAreas";
    goto LABEL_15;
  }
  if (CFEqual(v2, @"InitialViewArea"))
  {
    CFDictionaryRef v5 = *(const __CFDictionary **)(v3 + 24);
    CFTypeRef v6 = @"initialViewArea";
    goto LABEL_15;
  }
  if (CFEqual(v2, @"AdjacentViewAreas"))
  {
    CFDictionaryRef v5 = *(const __CFDictionary **)(v3 + 24);
    CFTypeRef v6 = @"adjacentViewAreas";
    goto LABEL_15;
  }
  if (CFEqual(v2, @"PrimaryInputDevice"))
  {
    CFDictionaryRef v5 = *(const __CFDictionary **)(v3 + 24);
    CFTypeRef v6 = @"primaryInputDevice";
    goto LABEL_15;
  }
  if (CFEqual(v2, @"MaxFPS"))
  {
LABEL_14:
    CFDictionaryRef v5 = *(const __CFDictionary **)(v3 + 24);
    CFTypeRef v6 = @"maxFPS";
    goto LABEL_15;
  }
  if (CFEqual(v2, @"SupportsRotation"))
  {
    CFDictionaryRef v9 = *(const __CFDictionary **)(v3 + 24);
    uint64_t v10 = @"rotation";
    goto LABEL_21;
  }
  if (CFEqual(v2, @"HDRInfo"))
  {
    CFDictionaryRef v5 = *(const __CFDictionary **)(v3 + 24);
    CFTypeRef v6 = @"HDRInfo";
    goto LABEL_15;
  }
  if (CFEqual(v2, @"receiverSupports444"))
  {
    CFDictionaryRef v9 = *(const __CFDictionary **)(v3 + 24);
    uint64_t v10 = @"receiverSupports444";
    goto LABEL_21;
  }
  if (CFEqual(v2, @"receiverSupportsHDRMirroring"))
  {
    CFDictionaryRef v9 = *(const __CFDictionary **)(v3 + 24);
    uint64_t v10 = @"receiverSupportsHDRMirroring";
    goto LABEL_21;
  }
  if (CFEqual(v2, @"IsOverscanned"))
  {
    CFDictionaryRef v9 = *(const __CFDictionary **)(v3 + 24);
    uint64_t v10 = @"overscanned";
LABEL_21:
    uint64_t result = (uint64_t)CFDictionaryGetValue(v9, v10);
    if (!result) {
      uint64_t result = *MEMORY[0x1E4F1CFC8];
    }
    goto LABEL_23;
  }
  if (CFEqual(v2, @"RefreshRate")) {
    goto LABEL_14;
  }
  if (CFEqual(v2, @"PhysicalSize"))
  {
    CGFloat Int64 = (double)CFDictionaryGetInt64();
    v23.CGFloat height = (double)CFDictionaryGetInt64();
    v23.CGFloat width = Int64;
    uint64_t result = (uint64_t)CGSizeCreateDictionaryRepresentation(v23);
    *BOOL v4 = result;
    if (!result)
    {
      int v8 = -71780;
LABEL_44:
      uint64_t result = APSLogErrorAt();
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  if (CFEqual(v2, @"PixelSize"))
  {
    CGFloat v12 = (double)CFDictionaryGetInt64();
    v24.CGFloat height = (double)CFDictionaryGetInt64();
    v24.CGFloat width = v12;
    uint64_t result = (uint64_t)CGSizeCreateDictionaryRepresentation(v24);
    *BOOL v4 = result;
    if (!result)
    {
      int v8 = -71780;
      goto LABEL_44;
    }
LABEL_25:
    int v8 = 0;
    goto LABEL_18;
  }
  if (CFEqual(v2, @"PixelSizeMax"))
  {
    CGFloat v13 = (double)CFDictionaryGetInt64();
    v25.CGFloat height = (double)CFDictionaryGetInt64();
    v25.CGFloat width = v13;
    uint64_t result = (uint64_t)CGSizeCreateDictionaryRepresentation(v25);
    *BOOL v4 = result;
    if (!result)
    {
      int v8 = -71780;
      goto LABEL_44;
    }
    goto LABEL_25;
  }
  if (CFEqual(v2, @"SupportsKnobInput"))
  {
    char v14 = CFDictionaryGetInt64();
    int v15 = (uint64_t *)MEMORY[0x1E4F1CFD0];
    uint64_t v16 = (uint64_t *)MEMORY[0x1E4F1CFC8];
    BOOL v17 = (v14 & 2) == 0;
    goto LABEL_53;
  }
  if (CFEqual(v2, @"SupportsLowFidelityTouch"))
  {
    char v18 = CFDictionaryGetInt64();
    int v15 = (uint64_t *)MEMORY[0x1E4F1CFD0];
    uint64_t v16 = (uint64_t *)MEMORY[0x1E4F1CFC8];
    BOOL v17 = (v18 & 4) == 0;
    goto LABEL_53;
  }
  if (CFEqual(v2, @"SupportsHighFidelityTouch"))
  {
    char v19 = CFDictionaryGetInt64();
    int v15 = (uint64_t *)MEMORY[0x1E4F1CFD0];
    uint64_t v16 = (uint64_t *)MEMORY[0x1E4F1CFC8];
    BOOL v17 = (v19 & 8) == 0;
    goto LABEL_53;
  }
  if (CFEqual(v2, @"SupportsTouchpadInput"))
  {
    char v20 = CFDictionaryGetInt64();
    int v15 = (uint64_t *)MEMORY[0x1E4F1CFD0];
    uint64_t v16 = (uint64_t *)MEMORY[0x1E4F1CFC8];
    BOOL v17 = (v20 & 0x10) == 0;
LABEL_53:
    if (v17) {
      int v15 = v16;
    }
    goto LABEL_55;
  }
  if (CFEqual(v2, @"cornerMasks") || CFEqual(v2, @"IsNightMode") || CFEqual(v2, @"IsLimitedUI"))
  {
    FigCFDictionaryGetBooleanIfPresent();
    int v15 = (uint64_t *)MEMORY[0x1E4F1CFC8];
LABEL_55:
    uint64_t result = *v15;
LABEL_23:
    *BOOL v4 = result;
    if (result) {
      uint64_t result = (uint64_t)CFRetain((CFTypeRef)result);
    }
    goto LABEL_25;
  }
  if (CFEqual(v2, @"LimitedUIElements"))
  {
    int Value = CFDictionaryGetValue(*(CFDictionaryRef *)(v3 + 24), @"limitedUIElements");
    if (Value)
    {
      uint64_t v22 = (uint64_t)Value;
      uint64_t result = (uint64_t)CFRetain(Value);
    }
    else
    {
      uint64_t result = (uint64_t)CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D510]);
      uint64_t v22 = result;
      if (!result)
      {
        int v8 = -71780;
        goto LABEL_44;
      }
    }
    int v8 = 0;
    *BOOL v4 = v22;
    goto LABEL_18;
  }
  if (CFEqual(v2, @"Url"))
  {
    CFDictionaryRef v5 = *(const __CFDictionary **)(v3 + 24);
    CFTypeRef v6 = @"url";
    goto LABEL_15;
  }
  uint64_t result = CFEqual(v2, @"InitialUrl");
  if (result)
  {
    CFDictionaryRef v5 = *(const __CFDictionary **)(v3 + 24);
    CFTypeRef v6 = @"initialURL";
    goto LABEL_15;
  }
  int v8 = -71782;
  if (gLogCategory_APEndpointDisplayDescription <= 30)
  {
    if (gLogCategory_APEndpointDisplayDescription != -1 || (uint64_t result = _LogCategory_Initialize(), result)) {
      uint64_t result = LogPrintF();
    }
  }
LABEL_18:
  *(_DWORD *)(*(void *)(a1[4] + 8) + 24) = v8;
  return result;
}

void bonjourDisplayDescription_Finalize(uint64_t a1)
{
  uint64_t v2 = *(const void **)(a1 + 24);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(a1 + 24) = 0;
  }
  uint64_t v3 = *(NSObject **)(a1 + 16);
  if (v3)
  {
    dispatch_release(v3);
    *(void *)(a1 + 16) = 0;
  }
}

CFStringRef bonjourDisplayDescription_CopyFormattingDesc(uint64_t a1)
{
  return CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, @"[APEndpointDisplayDescription %p]", a1);
}

__CFString *bonjourDisplayDescription_CopyDebugDescription(uint64_t a1)
{
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppendFormat(Mutable, 0, @"<APEndpointDisplayDescription %p>", a1);
  return Mutable;
}

uint64_t APSenderSessionLegacyAudioCreate(uint64_t a1, const void *a2, const void *a3, const void *a4, CFTypeRef *a5)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  CFTypeRef cf = 0;
  CFTypeRef v29 = 0;
  APSenderSessionGetClassID();
  uint64_t v9 = CMDerivedObjectCreate();
  if (v9)
  {
    uint64_t v24 = v9;
    goto LABEL_23;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v11 = FigSimpleMutexCreate();
  *(void *)(DerivedStorage + 72) = v11;
  if (!v11
    || (SNPrintF(), dispatch_queue_t v12 = dispatch_queue_create(label, 0), (*(void *)(DerivedStorage + 40) = v12) == 0)
    || (SNPrintF(), dispatch_queue_t v13 = dispatch_queue_create(label, 0), (*(void *)(DerivedStorage + 8) = v13) == 0))
  {
    APSLogErrorAt();
    uint64_t v24 = 4294895476;
    goto LABEL_24;
  }
  if (!a2)
  {
    uint64_t v24 = 4294895475;
    goto LABEL_23;
  }
  *(void *)uint64_t DerivedStorage = CFRetain(a2);
  if (!a3)
  {
    uint64_t v24 = 4294895475;
    goto LABEL_23;
  }
  *(void *)(DerivedStorage + 24) = CFRetain(a3);
  if (!a4)
  {
    uint64_t v24 = 4294895475;
    goto LABEL_23;
  }
  *(void *)(DerivedStorage + 32) = CFRetain(a4);
  *(int32x2_t *)(DerivedStorage + 124) = vdup_n_s32(0xC479C000);
  uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(*(void *)(DerivedStorage + 24));
  uint64_t v15 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v15) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = 0;
  }
  BOOL v17 = *(uint64_t (**)(uint64_t, __CFString *, void, CFTypeRef *))(v16 + 48);
  if (!v17)
  {
    uint64_t v24 = 4294954514;
LABEL_23:
    APSLogErrorAt();
    goto LABEL_24;
  }
  uint64_t v18 = *MEMORY[0x1E4F1CF80];
  uint64_t v19 = v17(CMBaseObject, @"TransportDevice", *MEMORY[0x1E4F1CF80], &cf);
  if (v19)
  {
    uint64_t v24 = v19;
    goto LABEL_23;
  }
  uint64_t SharedTransport = APTransportGetSharedTransport();
  CFTypeRef v21 = cf;
  uint64_t v22 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v22) {
    uint64_t v23 = v22;
  }
  else {
    uint64_t v23 = 0;
  }
  CGSize v25 = *(uint64_t (**)(uint64_t, uint64_t, const void *, CFTypeRef, void, uint64_t))(v23 + 24);
  if (!v25)
  {
    uint64_t v24 = 4294954514;
    goto LABEL_23;
  }
  uint64_t v26 = v25(SharedTransport, v18, a2, v21, 0, DerivedStorage + 16);
  if (v26)
  {
    uint64_t v24 = v26;
    goto LABEL_23;
  }
  if (gLogCategory_APSenderSessionSDP <= 50)
  {
    if (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
    if (gLogCategory_APSenderSessionSDP <= 30
      && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  uint64_t v24 = 0;
  *a5 = v29;
  CFTypeRef v29 = 0;
LABEL_24:
  if (cf) {
    CFRelease(cf);
  }
  if (v29) {
    CFRelease(v29);
  }
  return v24;
}

uint64_t sdpsession_Invalidate(void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  sdpsession_invalidateTransportControlStream((uint64_t)a1, 1);
  dispatch_sync_f(*(dispatch_queue_t *)(DerivedStorage + 40), a1, (dispatch_function_t)sdpsession_cleanup);
  return 0;
}

void sdpsession_Finalize()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionSDP <= 30
    && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(void *)(DerivedStorage + 88))
  {
    if (gLogCategory_APSenderSessionSDP <= 100) {
      sdpsession_Finalize_cold_1(gLogCategory_APSenderSessionSDP);
    }
    __break(1u);
  }
  else
  {
    uint64_t v1 = *(const void **)(DerivedStorage + 24);
    if (v1)
    {
      CFRelease(v1);
      *(void *)(DerivedStorage + 24) = 0;
    }
    uint64_t v2 = *(const void **)(DerivedStorage + 32);
    if (v2)
    {
      CFRelease(v2);
      *(void *)(DerivedStorage + 32) = 0;
    }
    uint64_t v3 = *(NSObject **)(DerivedStorage + 8);
    if (v3)
    {
      dispatch_release(v3);
      *(void *)(DerivedStorage + 8) = 0;
    }
    FigSimpleMutexDestroy();
    BOOL v4 = *(NSObject **)(DerivedStorage + 40);
    if (v4)
    {
      dispatch_release(v4);
      *(void *)(DerivedStorage + 40) = 0;
    }
    if (*(void *)DerivedStorage)
    {
      CFRelease(*(CFTypeRef *)DerivedStorage);
      *(void *)uint64_t DerivedStorage = 0;
    }
    CFDictionaryRef v5 = *(const void **)(DerivedStorage + 16);
    if (v5)
    {
      CFRelease(v5);
      *(void *)(DerivedStorage + 16) = 0;
    }
  }
}

__CFString *sdpsession_CopyDebugDescription(uint64_t a1)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppendFormat(Mutable, 0, @"<APSenderSessionSDP %p %@>", a1, *DerivedStorage);
  return Mutable;
}

uint64_t sdpsession_CopyProperty(uint64_t a1, const void *a2, const __CFAllocator *a3, void *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionSDP <= 10
    && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!a4)
  {
    APSLogErrorAt();
    return 4294960591;
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  uint64_t v9 = CMBaseObjectGetDerivedStorage();
  if (!CFEqual(a2, @"TransportControlStream"))
  {
    if (CFEqual(a2, @"InitialVolumeDB"))
    {
      CFNumberRef v12 = CFNumberCreate(a3, kCFNumberFloat32Type, (const void *)(v9 + 124));
      *a4 = v12;
      if (v12)
      {
LABEL_12:
        uint64_t v10 = 0;
        goto LABEL_13;
      }
      uint64_t v10 = 4294895476;
LABEL_28:
      APSLogErrorAt();
      goto LABEL_13;
    }
    if (CFEqual(a2, @"IsConnectedOnPeerToPeerInterface"))
    {
      uint64_t v11 = (void *)CFRetain((CFTypeRef)*MEMORY[0x1E4F1CFC8]);
    }
    else
    {
      if (CFEqual(a2, @"ControlConnectionInterfaceLatencyHint"))
      {
        if (!*(void *)(v9 + 88))
        {
          APSLogErrorAt();
          uint64_t v10 = 4294895466;
          goto LABEL_13;
        }
        uint64_t Int64 = CFNumberCreateInt64();
        *a4 = Int64;
        if (Int64) {
          goto LABEL_12;
        }
        uint64_t v10 = 4294895476;
        goto LABEL_28;
      }
      if (!CFEqual(a2, @"ShowInfo"))
      {
        uint64_t v10 = 4294954512;
        goto LABEL_13;
      }
      uint64_t v11 = sdpsession_copyShowInfo();
    }
    uint64_t v10 = 0;
    goto LABEL_9;
  }
  uint64_t v10 = sdpsession_ensureTransportControlStreamCreated(a1);
  if (v10) {
    goto LABEL_28;
  }
  uint64_t v11 = (void *)CFRetain(*(CFTypeRef *)(v9 + 88));
LABEL_9:
  *a4 = v11;
LABEL_13:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  return v10;
}

uint64_t sdpsession_SetProperty(uint64_t a1, const void *a2, const void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionSDP <= 30
    && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a2)
  {
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
    uint64_t v6 = CMBaseObjectGetDerivedStorage();
    if (!CFEqual(a2, @"AuthorizationString"))
    {
      if (CFEqual(a2, @"DACPID"))
      {
        *(void *)(v6 + 112) = CFGetInt64();
      }
      else if (CFEqual(a2, @"DACPRemoteID"))
      {
        *(_DWORD *)(v6 + 120) = CFGetInt64();
      }
      else if (CFEqual(a2, @"PendingVolumeDB"))
      {
        CFGetDouble();
        *(float *)&double v15 = v15;
        *(_DWORD *)(v6 + 128) = LODWORD(v15);
      }
      goto LABEL_25;
    }
    if (a3)
    {
      CFTypeID v7 = CFGetTypeID(a3);
      if (v7 != CFStringGetTypeID())
      {
        APSLogErrorAt();
LABEL_25:
        MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
        return 0;
      }
      uint64_t v9 = (uint64_t *)(v6 + 104);
      int v8 = *(const void **)(v6 + 104);
      *(void *)(v6 + 104) = a3;
      CFRetain(a3);
      if (v8) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v9 = (uint64_t *)(v6 + 104);
      int v8 = *(const void **)(v6 + 104);
      *(void *)(v6 + 104) = 0;
      if (v8) {
LABEL_10:
      }
        CFRelease(v8);
    }
    if (*(void *)(v6 + 88))
    {
      uint64_t v10 = *v9;
      uint64_t CMBaseObject = FigTransportStreamGetCMBaseObject();
      uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v12) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = 0;
      }
      char v14 = *(void (**)(uint64_t, void, uint64_t))(v13 + 56);
      if (v14) {
        v14(CMBaseObject, *MEMORY[0x1E4F47798], v10);
      }
    }
    goto LABEL_25;
  }
  APSLogErrorAt();
  return 4294895475;
}

void sdpsession_invalidateTransportControlStream(uint64_t a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  if (*(unsigned char *)(DerivedStorage + 132))
  {
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
    *(_WORD *)(DerivedStorage + 132) = 0;
  }
  uint64_t v4 = *(void *)(DerivedStorage + 88);
  if (v4)
  {
    uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v5) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = 0;
    }
    CFTypeID v7 = *(void (**)(uint64_t, void, void, void))(v6 + 24);
    if (v7) {
      v7(v4, 0, 0, 0);
    }
    uint64_t CMBaseObject = FigTransportStreamGetCMBaseObject();
    if (CMBaseObject)
    {
      uint64_t v9 = CMBaseObject;
      uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 8);
      uint64_t v11 = v10 ? v10 : 0;
      uint64_t v12 = *(void (**)(uint64_t))(v11 + 24);
      if (v12) {
        v12(v9);
      }
    }
    uint64_t v13 = *(const void **)(DerivedStorage + 88);
    if (v13)
    {
      CFRelease(v13);
      *(void *)(DerivedStorage + 88) = 0;
    }
  }
  if (a2) {
    *(unsigned char *)(DerivedStorage + 80) = 1;
  }
  JUMPOUT(0x1D25EB390);
}

void sdpsession_cleanup(uint64_t a1)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  uint64_t v3 = (const void *)DerivedStorage[7];
  if (v3)
  {
    CFRelease(v3);
    DerivedStorage[7] = 0;
  }
  sdpsession_stopNetworkClock(a1);
  uint64_t v4 = DerivedStorage[2];
  uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  CFTypeID v7 = *(void (**)(uint64_t))(v6 + 56);
  if (v7) {
    v7(v4);
  }
  uint64_t CMBaseObject = FigTransportSessionGetCMBaseObject();
  if (CMBaseObject)
  {
    uint64_t v9 = CMBaseObject;
    uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 8);
    uint64_t v11 = v10 ? v10 : 0;
    uint64_t v12 = *(void (**)(uint64_t))(v11 + 24);
    if (v12) {
      v12(v9);
    }
  }
  MEMORY[0x1D25EB370](DerivedStorage[9]);
  uint64_t v13 = (const void *)DerivedStorage[13];
  if (v13)
  {
    CFRelease(v13);
    DerivedStorage[13] = 0;
  }
  char v14 = (const void *)DerivedStorage[12];
  if (v14)
  {
    CFRelease(v14);
    DerivedStorage[12] = 0;
  }
  JUMPOUT(0x1D25EB390);
}

uint64_t sdpsession_handleTransportSessionDisconnected(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  if (gLogCategory_APSenderSessionSDP <= 50
    && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  sdpsession_invalidateTransportControlStream(a2, 1);
  return sdpsession_postFailedNotificationAsync(a2);
}

uint64_t sdpsession_postFailedNotificationAsync(const void *a1)
{
  return APSDispatchAsyncFHelper();
}

void sdpsession_postFailedNotificationCallback(uint64_t a1)
{
  uint64_t v2 = *(const void **)a1;
  uint64_t v3 = *(const void **)(a1 + 16);
  CMBaseObjectGetDerivedStorage();
  CFAllocatorRef v4 = CFGetAllocator(v2);
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v4, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    uint64_t v6 = Mutable;
    CFDictionarySetInt64();
    CFDictionarySetValue(v6, @"SessionState", v3);
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterPostNotification();
    CFRelease(v6);
  }
  else
  {
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterPostNotification();
  }
  CFTypeID v7 = *(const void **)a1;
  CFRelease(v7);
}

uint64_t sdpsession_stopNetworkClock(uint64_t a1)
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(result + 49))
  {
    uint64_t v3 = result;
    *(_DWORD *)(result + 64) = 0;
    uint64_t v4 = *(void *)(result + 32);
    if (v4)
    {
      if (gLogCategory_APSenderSessionSDP <= 40)
      {
        if (gLogCategory_APSenderSessionSDP != -1 || (v5 = _LogCategory_Initialize(), uint64_t v4 = *(void *)(v3 + 32), v5))
        {
          LogPrintF();
          uint64_t v4 = *(void *)(v3 + 32);
        }
      }
      uint64_t VTable = CMBaseObjectGetVTable();
      uint64_t v8 = *(void *)(VTable + 16);
      uint64_t result = VTable + 16;
      uint64_t v7 = v8;
      if (v8) {
        uint64_t v9 = v7;
      }
      else {
        uint64_t v9 = 0;
      }
      uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 88);
      if (v10) {
        uint64_t result = v10(v4, a1);
      }
      *(unsigned char *)(v3 + 49) = 0;
    }
    else
    {
      return APSLogErrorAt();
    }
  }
  return result;
}

uint64_t sdpsession_ensureTransportControlStreamCreated(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 80))
  {
    APSLogErrorAt();
    return 4294895467;
  }
  uint64_t v3 = DerivedStorage;
  uint64_t v4 = (uint64_t *)(DerivedStorage + 88);
  if (*(void *)(DerivedStorage + 88)) {
    return 0;
  }
  uint64_t v6 = *(void *)(DerivedStorage + 16);
  uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t *))(v8 + 32);
  if (!v9)
  {
    uint64_t v5 = 4294954514;
LABEL_19:
    APSLogErrorAt();
    return v5;
  }
  uint64_t v10 = v9(v6, 1668575852, 0, v4);
  if (v10)
  {
    uint64_t v5 = v10;
    goto LABEL_19;
  }
  uint64_t v11 = *v4;
  uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v12) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  char v14 = *(uint64_t (**)(uint64_t, void, void, uint64_t))(v13 + 24);
  if (!v14)
  {
    uint64_t v5 = 4294954514;
    goto LABEL_19;
  }
  uint64_t v15 = v14(v11, sdpsession_controlStreamMessageCallback, 0, a1);
  if (v15)
  {
    uint64_t v5 = v15;
    goto LABEL_19;
  }
  CFAllocatorRef v16 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  ShortVersionCFIndex Length = APSVersionUtilsGetShortVersionLength();
  CFStringRef v18 = CFStringCreateWithFormat(v16, 0, @"AirPlay/%.*s", ShortVersionLength, "835.19.1.1");
  if (!v18)
  {
    APSLogErrorAt();
    return 4294960568;
  }
  CFStringRef v19 = v18;
  uint64_t v20 = APSGetFBOPropertyInt64();
  uint64_t CMBaseObject = FigTransportStreamGetCMBaseObject();
  uint64_t v22 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v22) {
    uint64_t v23 = v22;
  }
  else {
    uint64_t v23 = 0;
  }
  CGSize v25 = *(void (**)(uint64_t, void, CFStringRef))(v23 + 56);
  if (v25) {
    v25(CMBaseObject, *MEMORY[0x1E4F477D8], v19);
  }
  uint64_t v26 = FigTransportStreamGetCMBaseObject();
  uint64_t v27 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v27) {
    uint64_t v28 = v27;
  }
  else {
    uint64_t v28 = 0;
  }
  CFTypeRef v29 = *(void (**)(uint64_t, void, __CFString *))(v28 + 56);
  if (v29) {
    v29(v26, *MEMORY[0x1E4F477E0], @"iTunes");
  }
  uint64_t v30 = *(void *)(v3 + 104);
  uint64_t v31 = FigTransportStreamGetCMBaseObject();
  uint64_t v32 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v32) {
    uint64_t v33 = v32;
  }
  else {
    uint64_t v33 = 0;
  }
  int v34 = *(void (**)(uint64_t, void, uint64_t))(v33 + 56);
  if (v34) {
    v34(v31, *MEMORY[0x1E4F47798], v30);
  }
  uint64_t v35 = *v4;
  if (v20) {
    uint64_t v36 = (void *)MEMORY[0x1E4F1CFD0];
  }
  else {
    uint64_t v36 = (void *)MEMORY[0x1E4F1CFC8];
  }
  uint64_t v37 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v37) {
    uint64_t v38 = v37;
  }
  else {
    uint64_t v38 = 0;
  }
  CFDictionaryRef v39 = *(void (**)(uint64_t, void, void))(v38 + 56);
  if (v39) {
    v39(v35, *MEMORY[0x1E4F477D0], *v36);
  }
  APSenderSessionMessageSendTimeout();
  APSSetFBOPropertyInt64();
  if ((!*(void *)(v3 + 112) || !*(_DWORD *)(v3 + 120))
    && gLogCategory_APSenderSessionSDP <= 60
    && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  APSSetFBOPropertyInt64();
  APSSetFBOPropertyInt64();
  CFRelease(v19);
  return 0;
}

__CFDictionary *sdpsession_copyShowInfo()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CMTimeValue value = 0;
  uint64_t v1 = *MEMORY[0x1E4F1CF80];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  uint64_t v3 = Mutable;
  uint64_t v4 = (const void *)*MEMORY[0x1E4F1CFD0];
  uint64_t v5 = (const void *)*MEMORY[0x1E4F1CFC8];
  if (*(unsigned char *)(DerivedStorage + 132)) {
    uint64_t v6 = (const void *)*MEMORY[0x1E4F1CFD0];
  }
  else {
    uint64_t v6 = (const void *)*MEMORY[0x1E4F1CFC8];
  }
  CFDictionarySetValue(Mutable, @"isConnected", v6);
  if (*(unsigned char *)(DerivedStorage + 133)) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = v5;
  }
  CFDictionarySetValue(v3, @"isSessionStarted", v7);
  if (*(void *)(DerivedStorage + 16))
  {
    uint64_t CMBaseObject = FigTransportSessionGetCMBaseObject();
    uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v9) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    uint64_t v11 = *(unsigned int (**)(uint64_t, void, uint64_t, void **))(v10 + 48);
    if (!v11 || v11(CMBaseObject, *MEMORY[0x1E4F476C8], v1, &value)) {
      APSLogErrorAt();
    }
    else {
      CFDictionarySetValue(v3, @"TransportSessionInfo", value);
    }
  }
  if (value) {
    CFRelease(value);
  }
  return v3;
}

uint64_t sdpsession_controlStreamMessageCallback(const void *a1, uint64_t a2, uint64_t a3, const void *a4)
{
  return APSDispatchAsyncFHelper();
}

void sdpsession_controlStreamMessageCallbackInternal(uint64_t a1)
{
  CMBaseObjectGetDerivedStorage();
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2 != 1651470958)
  {
    if (v2 == 1684628836)
    {
      if (*(void *)a1) {
        CFRetain(*(CFTypeRef *)a1);
      }
      uint64_t v3 = *(const void **)(a1 + 8);
      if (v3) {
        CFRetain(v3);
      }
      APSDispatchAsyncFHelper();
    }
    else if (gLogCategory_APSenderSessionSDP <= 50 {
           && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
    }
    {
      LogPrintF();
    }
  }
  CFRelease(*(CFTypeRef *)a1);
  uint64_t v4 = *(const void **)(a1 + 8);
  CFRelease(v4);
}

void sdpsession_handleTransportStreamDisconnected(uint64_t *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionSDP <= 90
    && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  if (a1[1] == *(void *)(DerivedStorage + 88))
  {
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
    sdpsession_invalidateTransportControlStream(*a1, 1);
    sdpsession_postFailedNotificationAsync((const void *)*a1);
  }
  else
  {
    if (gLogCategory_APSenderSessionSDP <= 50
      && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
    APSLogErrorAt();
  }
  if (*a1) {
    CFRelease((CFTypeRef)*a1);
  }
  uint64_t v3 = (const void *)a1[1];
  if (v3)
  {
    CFRelease(v3);
  }
}

uint64_t sdpsession_IsConnected()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionSDP <= 30
    && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  uint64_t v1 = *(unsigned __int8 *)(DerivedStorage + 132);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  return v1;
}

uint64_t sdpsession_IsActive()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionSDP <= 30
    && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  uint64_t v1 = *(unsigned __int8 *)(DerivedStorage + 133);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  return v1;
}

uint64_t sdpsession_EnsureStarted()
{
  CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionSDP <= 30
    && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return APSDispatchSyncTask();
}

uint64_t sdpsession_UpdateSession()
{
  return 0;
}

uint64_t sdpsession_SetupStreamCreatingResponse()
{
  return APSDispatchSyncTask();
}

uint64_t sdpsession_TeardownStream()
{
  return APSDispatchSyncTask();
}

uint64_t sdpsession_CreateTransportStream(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(CMBaseObjectGetDerivedStorage() + 16);
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  if (!v8)
  {
    uint64_t v9 = 4294954514;
LABEL_8:
    APSLogErrorAt();
    return v9;
  }
  uint64_t v9 = v8(v5, a2, a3);
  if (v9) {
    goto LABEL_8;
  }
  return v9;
}

uint64_t sdpsession_CreateTransportStreamWithID(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(CMBaseObjectGetDerivedStorage() + 16);
  uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 32);
  if (!v10)
  {
    uint64_t v11 = 4294954514;
LABEL_8:
    APSLogErrorAt();
    return v11;
  }
  uint64_t v11 = v10(v7, a2, a3, a4);
  if (v11) {
    goto LABEL_8;
  }
  return v11;
}

uint64_t sdpsession_EnsureStopped()
{
  return APSDispatchSyncTask();
}

uint64_t sdpsession_ensureStartedInternal(uint64_t a1)
{
  CMBaseObjectGetDerivedStorage();
  BOOL v17 = 0;
  uint64_t v2 = sdpsession_ensureTransportControlStreamResumedSync(a1);
  if (v2)
  {
    uint64_t v10 = v2;
    APSLogErrorAt();
    return v10;
  }
  sdpsession_copyTransportControlStream(a1, &v17);
  uint64_t v3 = v17;
  if (!v17)
  {
    APSLogErrorAt();
    return 4294895475;
  }
  uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *(uint64_t (**)(const void *, uint64_t, void, void))(v5 + 56);
  if (v6)
  {
    uint64_t v7 = v6(v3, 1635087464, 0, 0);
    if (!v7)
    {
      uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
      if (*(unsigned char *)(DerivedStorage + 49)) {
        goto LABEL_30;
      }
      uint64_t v9 = DerivedStorage;
      if (gLogCategory_APSenderSessionSDP <= 40
        && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v11 = *(void *)(v9 + 32);
      uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v12) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = 0;
      }
      char v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 80);
      if (v14)
      {
        unsigned int v18 = v14(v11, a1);
        if (!v18)
        {
          *(unsigned char *)(v9 + 49) = 1;
          int v15 = APSGetFBOPropertyInt64();
          if (!v18)
          {
            *(_DWORD *)(v9 + 64) = v15;
            if (gLogCategory_APSenderSessionSDP <= 50
              && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
LABEL_26:
            if (v18)
            {
              if (gLogCategory_APSenderSessionSDP <= 90
                && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              sdpsession_stopNetworkClock(a1);
              uint64_t v10 = v18;
              if (!v18) {
                goto LABEL_33;
              }
              goto LABEL_13;
            }
LABEL_30:
            uint64_t v10 = 0;
            goto LABEL_33;
          }
        }
      }
      else
      {
        unsigned int v18 = -12782;
      }
      APSLogErrorAt();
      goto LABEL_26;
    }
    uint64_t v10 = v7;
  }
  else
  {
    uint64_t v10 = 4294954514;
  }
LABEL_13:
  APSLogErrorAt();
LABEL_33:
  CFRelease(v3);
  return v10;
}

uint64_t sdpsession_ensureTransportControlStreamResumedSync(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  int v3 = *(unsigned __int8 *)(DerivedStorage + 132);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  if (v3) {
    return 0;
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  uint64_t v4 = sdpsession_ensureTransportControlStreamCreated(a1);
  if (!v4)
  {
    uint64_t v6 = *(const void **)(DerivedStorage + 88);
    if (v6)
    {
      CFTypeRef v7 = CFRetain(v6);
      MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
      if (v7)
      {
        uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v8) {
          uint64_t v9 = v8;
        }
        else {
          uint64_t v9 = 0;
        }
        uint64_t v10 = *(uint64_t (**)(CFTypeRef))(v9 + 8);
        if (v10)
        {
          uint64_t v11 = v10(v7);
          if (v11)
          {
            uint64_t v5 = v11;
          }
          else
          {
            uint64_t v12 = *(void *)(CMBaseObjectGetVTable() + 16);
            if (v12) {
              uint64_t v13 = v12;
            }
            else {
              uint64_t v13 = 0;
            }
            char v14 = *(uint64_t (**)(CFTypeRef))(v13 + 16);
            if (v14)
            {
              uint64_t v5 = v14(v7);
              if (!v5)
              {
                MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
                *(unsigned char *)(DerivedStorage + 132) = 1;
                CMNotificationCenterGetDefaultLocalCenter();
                FigNotificationCenterAddWeakListener();
                MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
                CMNotificationCenterGetDefaultLocalCenter();
                FigDispatchAsyncPostNotification();
LABEL_22:
                CFRelease(v7);
                return v5;
              }
            }
            else
            {
              uint64_t v5 = 4294954514;
            }
          }
        }
        else
        {
          uint64_t v5 = 4294954514;
        }
        APSLogErrorAt();
        goto LABEL_22;
      }
    }
    else
    {
      MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
    }
    APSLogErrorAt();
    return 4294895475;
  }
  uint64_t v5 = v4;
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  APSLogErrorAt();
  return v5;
}

void sdpsession_copyTransportControlStream(uint64_t a1, void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  CFTypeRef v4 = *(CFTypeRef *)(DerivedStorage + 88);
  if (v4) {
    CFTypeRef v4 = CFRetain(v4);
  }
  *a2 = v4;
  JUMPOUT(0x1D25EB390);
}

uint64_t sdpsession_setupStreamCreatingResponseInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionSDP <= 30
    && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(_DWORD *)(a1 + 8) != 96)
  {
    uint64_t v24 = 4294895471;
    goto LABEL_109;
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  int v3 = *(unsigned __int8 *)(DerivedStorage + 133);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  if (!v3)
  {
    uint64_t v4 = sdpsession_ensureTransportControlStreamResumedSync(*(void *)a1);
    if (v4)
    {
      uint64_t v24 = v4;
      goto LABEL_109;
    }
    uint64_t v5 = *(void *)a1;
    LODWORD(v46) = 0;
    uint64_t v6 = (void *)CMBaseObjectGetDerivedStorage();
    CFTypeRef v48 = 0;
    CFTypeRef v49 = 0;
    MEMORY[0x1D25EB370](v6[9]);
    CFTypeRef v7 = (const void *)v6[12];
    if (v7) {
      CFTypeRef v8 = CFRetain(v7);
    }
    else {
      CFTypeRef v8 = 0;
    }
    CFTypeRef cf = v8;
    MEMORY[0x1D25EB390](v6[9]);
    uint64_t v9 = (uint64_t *)MEMORY[0x1E4F1CF80];
    if (v8)
    {
LABEL_47:
      CFRelease(v8);
LABEL_48:
      if (v49) {
        CFRelease(v49);
      }
      if (v48) {
        CFRelease(v48);
      }
      uint64_t v24 = v46;
      if (v46) {
        goto LABEL_109;
      }
      uint64_t v25 = CMBaseObjectGetDerivedStorage();
      CFTypeRef v48 = 0;
      CFTypeRef v49 = 0;
      CFTypeRef v46 = 0;
      CFTypeRef cf = 0;
      if (*(void *)(v25 + 56))
      {
        uint64_t v24 = 0;
        goto LABEL_72;
      }
      uint64_t v26 = (void *)v25;
      MEMORY[0x1D25EB370](*(void *)(v25 + 72));
      uint64_t v27 = (const void *)v26[12];
      if (v27) {
        CFTypeRef v28 = CFRetain(v27);
      }
      else {
        CFTypeRef v28 = 0;
      }
      MEMORY[0x1D25EB390](v26[9]);
      uint64_t v29 = *v9;
      uint64_t v30 = APKeyHolderSharedKeyCreate(*v9, 0, 0, 0, &v48);
      if (v30)
      {
        uint64_t v24 = v30;
      }
      else
      {
        CFTypeRef v31 = v48;
        uint64_t v32 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v32) {
          uint64_t v33 = v32;
        }
        else {
          uint64_t v33 = 0;
        }
        int v34 = *(uint64_t (**)(CFTypeRef, CFTypeRef *, CFTypeRef *))(v33 + 16);
        if (v34)
        {
          uint64_t v35 = v34(v31, &cf, &v46);
          if (v35)
          {
            uint64_t v24 = v35;
          }
          else
          {
            uint64_t v36 = APKeyHolderSharedKeyCreate(v29, v28, (const __CFData *)cf, (const __CFData *)v46, &v49);
            if (!v36)
            {
              uint64_t v24 = v26[7];
              CFTypeRef v37 = v49;
              v26[7] = v49;
              if (v37) {
                CFRetain(v37);
              }
              if (v24)
              {
                CFRelease((CFTypeRef)v24);
                uint64_t v24 = 0;
              }
              goto LABEL_70;
            }
            uint64_t v24 = v36;
          }
        }
        else
        {
          uint64_t v24 = 4294954514;
        }
      }
      APSLogErrorAt();
LABEL_70:
      if (v28) {
        CFRelease(v28);
      }
LABEL_72:
      if (v49) {
        CFRelease(v49);
      }
      if (v48) {
        CFRelease(v48);
      }
      if (cf) {
        CFRelease(cf);
      }
      if (v46) {
        CFRelease(v46);
      }
      if (!v24)
      {
        uint64_t v38 = sdpsession_sendAnnounce(*(void *)a1);
        if (v38)
        {
          uint64_t v24 = v38;
        }
        else
        {
          uint64_t v39 = sdpsession_sendSetup(*(void *)a1, *(void *)(a1 + 16), *(CFMutableDictionaryRef **)(a1 + 24));
          if (v39)
          {
            uint64_t v24 = v39;
          }
          else
          {
            uint64_t v40 = sdpsession_ensureInitialVolumeFetched(*(void *)a1);
            if (v40)
            {
              uint64_t v24 = v40;
            }
            else
            {
              uint64_t started = sdpsession_startSession(*(void *)a1);
              if (started)
              {
                uint64_t v24 = started;
              }
              else
              {
                uint64_t v42 = sdpsession_sendPendingSetVolumeCommand(*(void *)a1);
                if (v42)
                {
                  uint64_t v24 = v42;
                }
                else
                {
                  uint64_t v43 = sdpsession_copyCryptor(*(void *)a1, *(void **)(a1 + 32));
                  if (v43)
                  {
                    uint64_t v24 = v43;
                  }
                  else
                  {
                    uint64_t v44 = sdpsession_ensureKeepAliveResumed();
                    if (!v44)
                    {
                      if (gLogCategory_APSenderSessionSDP <= 40
                        && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
                      {
                        LogPrintF();
                      }
                      CMNotificationCenterGetDefaultLocalCenter();
                      FigDispatchAsyncPostNotification();
                      return 0;
                    }
                    uint64_t v24 = v44;
                  }
                }
              }
            }
          }
        }
      }
LABEL_109:
      APSLogErrorAt();
      sdpsession_postFailedNotificationAsync(*(const void **)a1);
      sdpsession_teardownTransportControlStream(*(void *)a1);
      return v24;
    }
    sdpsession_copyTransportControlStream(v5, &v48);
    LODWORD(v46) = 0;
    CFTypeRef v10 = v48;
    if (v48)
    {
      int v11 = APSGetFBOPropertyInt64();
      switch(v11)
      {
        case 8:
          LODWORD(v46) = APAuthenticationClientMFiCreate(*v9, v10, &cf);
          if (v46) {
            goto LABEL_42;
          }
          goto LABEL_29;
        case 4:
          LODWORD(v46) = APAuthenticationClientFairPlayCreate(*v9, v10, &cf);
          if (v46) {
            goto LABEL_42;
          }
          goto LABEL_29;
        case 1:
          uint64_t CMBaseObject = APEndpointDescriptionGetCMBaseObject(v6[3]);
          uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v13) {
            uint64_t v14 = v13;
          }
          else {
            uint64_t v14 = 0;
          }
          int v15 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v14 + 48);
          if (!v15)
          {
            LODWORD(v46) = -12782;
            goto LABEL_42;
          }
          uint64_t v16 = *v9;
          LODWORD(v46) = v15(CMBaseObject, @"MACAddress", *v9, &v49);
          if (v46) {
            goto LABEL_42;
          }
          LODWORD(v46) = APAuthenticationClientRSACreate(v16, v10, (CFDataRef)v49, &cf);
          if (v46) {
            goto LABEL_42;
          }
LABEL_29:
          CFTypeRef v17 = cf;
          uint64_t v18 = *(void *)(CMBaseObjectGetVTable() + 16);
          if (v18) {
            uint64_t v19 = v18;
          }
          else {
            uint64_t v19 = 0;
          }
          uint64_t v20 = *(uint64_t (**)(CFTypeRef))(v19 + 16);
          if (v20)
          {
            LODWORD(v46) = v20(v17);
            if (!v46)
            {
              MEMORY[0x1D25EB370](v6[9]);
              CFTypeRef v21 = (const void *)v6[12];
              CFTypeRef v22 = cf;
              v6[12] = cf;
              if (v22) {
                CFRetain(v22);
              }
              if (v21) {
                CFRelease(v21);
              }
              MEMORY[0x1D25EB390](v6[9]);
LABEL_46:
              CFTypeRef v8 = cf;
              if (!cf) {
                goto LABEL_48;
              }
              goto LABEL_47;
            }
          }
          else
          {
            LODWORD(v46) = -12782;
          }
LABEL_42:
          APSLogErrorAt();
          goto LABEL_46;
      }
      if (gLogCategory_APSenderSessionSDP <= 90
        && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      int v23 = -71824;
    }
    else
    {
      APSLogErrorAt();
      int v23 = -71821;
    }
    LODWORD(v46) = v23;
    goto LABEL_46;
  }
  return 0;
}

uint64_t sdpsession_sendAnnounce(uint64_t a1)
{
  uint64_t v49 = *MEMORY[0x1E4F143B8];
  unsigned int Base64EncodedKeyAndIV = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFUUIDRef uuid = 0;
  long long v3 = 0uLL;
  memset(v48, 0, sizeof(v48));
  long long v46 = 0u;
  long long v47 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  *(_OWORD *)cStr = 0u;
  long long v41 = 0u;
  unsigned int v29 = 0;
  uint64_t v27 = 0;
  CFTypeRef v28 = 0;
  uint64_t v26 = 0;
  if (gLogCategory_APSenderSessionSDP <= 30)
  {
    if (gLogCategory_APSenderSessionSDP != -1 || (v4 = _LogCategory_Initialize(), long long v3 = 0uLL, v4))
    {
      LogPrintF();
      long long v3 = 0uLL;
    }
  }
  theuint64_t Data = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v32 = 0;
  *(void *)buffer = 0;
  int v36 = 0;
  long long v30 = v3;
  long long v31 = v3;
  sdpsession_copyTransportControlStream(a1, &v26);
  unsigned int Base64EncodedKeyAndIV = 0;
  uint64_t v5 = v26;
  if (!v26)
  {
    APSLogErrorAt();
    CFMutableDictionaryRef Mutable = 0;
    goto LABEL_62;
  }
  uint64_t v6 = *MEMORY[0x1E4F1CF80];
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  if (!Mutable)
  {
    APSLogErrorAt();
    int v25 = -71820;
    goto LABEL_63;
  }
  uint64_t CMBaseObject = FigTransportSessionGetCMBaseObject();
  uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v9) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = 0;
  }
  int v11 = *(uint64_t (**)(uint64_t, void, uint64_t, CFUUIDRef *))(v10 + 48);
  if (!v11)
  {
    unsigned int Base64EncodedKeyAndIV = -12782;
    goto LABEL_25;
  }
  unsigned int Base64EncodedKeyAndIV = v11(CMBaseObject, *MEMORY[0x1E4F22020], v6, &uuid);
  if (Base64EncodedKeyAndIV) {
    goto LABEL_25;
  }
  unint64_t v12 = *(_OWORD *)&CFUUIDGetUUIDBytes(uuid);
  uint64_t v13 = FigTransportStreamGetCMBaseObject();
  uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v14) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  uint64_t v16 = *(uint64_t (**)(uint64_t, void, uint64_t, CFDataRef *))(v15 + 48);
  if (!v16)
  {
    unsigned int Base64EncodedKeyAndIV = -12782;
    goto LABEL_25;
  }
  unsigned int Base64EncodedKeyAndIV = v16(v13, *MEMORY[0x1E4F47758], v6, &theData);
  if (Base64EncodedKeyAndIV) {
    goto LABEL_25;
  }
  if (CFDataGetLength(theData) != 28)
  {
    APSLogErrorAt();
    goto LABEL_62;
  }
  CFDataRef v17 = theData;
  v50.length = CFDataGetLength(theData);
  v50.locatioCFIndex n = 0;
  CFDataGetBytes(v17, v50, buffer);
  unsigned int Base64EncodedKeyAndIV = SockAddrToString();
  if (Base64EncodedKeyAndIV) {
    goto LABEL_25;
  }
  if (buffer[1] == 2)
  {
    uint64_t v18 = "IP4";
  }
  else
  {
    if (buffer[1] != 30) {
      goto LABEL_62;
    }
    uint64_t v18 = "IP6";
  }
  APSGetDeviceNameCString();
  CFStringAppendCString(Mutable, "v=0\r\n", 0x8000100u);
  CFStringAppendFormat(Mutable, 0, @"o=AirTunes %llu 0 IN %s %s\r\n", bswap64(v12), v18, v48);
  CFStringAppendCString(Mutable, "s=AirTunes\r\n", 0x8000100u);
  CFStringAppendCString(Mutable, "i=", 0x8000100u);
  CFStringAppendCString(Mutable, cStr, 0x600u);
  CFStringAppendCString(Mutable, "\r\n", 0x8000100u);
  CFStringAppendFormat(Mutable, 0, @"c=IN %s %s\r\n", v18, v48);
  CFStringAppendCString(Mutable, "t=0 0\r\n", 0x8000100u);
  CFStringAppendFormat(Mutable, 0, @"m=audio 0 RTP/AVP %u\r\n", 96);
  CFDictionaryGetInt64();
  if (Base64EncodedKeyAndIV || (unsigned int Base64EncodedKeyAndIV = APAudioFormatToASBD()) != 0)
  {
LABEL_25:
    APSLogErrorAt();
    goto LABEL_26;
  }
  if (DWORD2(v30) != 1634492771)
  {
    if (DWORD2(v30) == 1819304813)
    {
      CFStringAppendFormat(Mutable, 0, @"a=rtpmap:%u L%u/%u/%u\r\n", 96, v29, *(double *)&v30, HIDWORD(v31));
      goto LABEL_44;
    }
LABEL_62:
    int v25 = -71821;
    goto LABEL_63;
  }
  CFStringAppendFormat(Mutable, 0, @"a=rtpmap:%u AppleLossless\r\n", 96);
  CFStringAppendFormat(Mutable, 0, @"a=fmtp:%u %u 0 %u 40 10 14 %u 255 0 0 %u\r\n", 96, DWORD1(v31), v29, HIDWORD(v31), *(double *)&v30);
LABEL_44:
  int AuthenticationType = APSKeyHolderGetAuthenticationType(*(void *)(DerivedStorage + 56));
  if (AuthenticationType == 8)
  {
    CFTypeRef v21 = "mfiaeskey";
    goto LABEL_50;
  }
  if (AuthenticationType == 4)
  {
    CFTypeRef v21 = "fpaeskey";
    goto LABEL_50;
  }
  if (AuthenticationType != 1)
  {
    int v25 = -71824;
LABEL_63:
    unsigned int Base64EncodedKeyAndIV = v25;
    goto LABEL_26;
  }
  CFTypeRef v21 = "rsaaeskey";
LABEL_50:
  unsigned int Base64EncodedKeyAndIV = sdpsession_makeBase64EncodedKeyAndIV(*(void *)(DerivedStorage + 56), &v28, &v27);
  if (Base64EncodedKeyAndIV)
  {
    APSLogErrorAt();
    CFTypeRef v22 = v28;
  }
  else
  {
    CFTypeRef v22 = v28;
    CFStringAppendFormat(Mutable, 0, @"a=%s:%s\r\n", v21, v28);
    CFStringAppendFormat(Mutable, 0, @"a=aesiv:%s\r\n", v27);
    uint64_t Int64 = CFDictionaryGetInt64();
    if (Base64EncodedKeyAndIV) {
      goto LABEL_70;
    }
    uint64_t v24 = CFDictionaryGetInt64();
    if (Base64EncodedKeyAndIV) {
      goto LABEL_70;
    }
    CFStringAppendFormat(Mutable, 0, @"a=min-latency:%u\r\n", Int64);
    CFStringAppendFormat(Mutable, 0, @"a=max-latency:%u\r\n", v24);
    if (gLogCategory_APSenderSessionSDP <= 30
      && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    unsigned int Base64EncodedKeyAndIV = sdpsession_sendMessageCreatingReply((uint64_t)v5, 1634627171, (uint64_t)Mutable, 0);
    if (Base64EncodedKeyAndIV) {
LABEL_70:
    }
      APSLogErrorAt();
  }
  if (v22) {
    free(v22);
  }
LABEL_26:
  if (v27) {
    free(v27);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  if (uuid) {
    CFRelease(uuid);
  }
  if (theData) {
    CFRelease(theData);
  }
  if (v5) {
    CFRelease(v5);
  }
  return Base64EncodedKeyAndIV;
}

uint64_t sdpsession_sendSetup(uint64_t a1, uint64_t a2, CFMutableDictionaryRef *a3)
{
  unsigned int v20 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v18 = 0;
  CMBlockBufferRef theBuffer = 0;
  if (gLogCategory_APSenderSessionSDP <= 30
    && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  sdpsession_copyTransportControlStream(a1, &v18);
  unsigned int v20 = 0;
  uint64_t v6 = v18;
  if (v18)
  {
    CFAllocatorRef v7 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
    if (Mutable)
    {
      uint64_t v9 = Mutable;
      CFStringAppendFormat(Mutable, 0, @"%s;unicast;mode=record;timing_port=%d",
        "RTP/AVP/UDP",
        *(unsigned int *)(DerivedStorage + 64));
      uint64_t Int64 = CFDictionaryGetInt64();
      if (v20) {
        goto LABEL_45;
      }
      CFStringAppendFormat(v9, 0, @";control_port=%d", Int64);
      unsigned int v20 = sdpsession_sendMessageCreatingReply((uint64_t)v6, 1936942192, (uint64_t)v9, (uint64_t)&theBuffer);
      if (v20) {
        goto LABEL_45;
      }
      size_t totalLengthOut = 0;
      uint64_t v28 = 0;
      size_t lengthAtOffsetOut = 0;
      uint64_t v24 = 0;
      dataPointerOut = 0;
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      uint64_t v21 = 0;
      OSStatus DataPointer = CMBlockBufferGetDataPointer(theBuffer, 0, &lengthAtOffsetOut, &totalLengthOut, &dataPointerOut);
      if (DataPointer)
      {
        int v13 = DataPointer;
      }
      else if (totalLengthOut == lengthAtOffsetOut)
      {
        int v12 = HTTPParseParameter();
        if (v12)
        {
          int v13 = v12;
        }
        else
        {
          if (strnicmpx())
          {
            int v13 = -71826;
            if (gLogCategory_APSenderSessionSDP <= 90
              && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            goto LABEL_44;
          }
          if (HTTPParseParameter())
          {
LABEL_17:
            int v13 = -71821;
          }
          else
          {
            do
            {
              if (strnicmpx())
              {
                if (strnicmpx())
                {
                  if (strnicmpx()
                    && strnicmpx()
                    && strnicmpx()
                    && strnicmpx()
                    && strnicmpx()
                    && strnicmpx()
                    && gLogCategory_APSenderSessionSDP <= 40
                    && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
                  {
                    LogPrintF();
                  }
                }
                else
                {
                  if (SNScanF() != 1)
                  {
LABEL_52:
                    APSLogErrorAt();
                    int v13 = -71827;
                    goto LABEL_44;
                  }
                  if ((int)v28 <= 0)
                  {
LABEL_53:
                    APSLogErrorAt();
                    int v13 = -71828;
                    goto LABEL_44;
                  }
                }
              }
              else
              {
                if (SNScanF() != 1) {
                  goto LABEL_52;
                }
                if (SHIDWORD(v28) <= 0) {
                  goto LABEL_53;
                }
              }
            }
            while (!HTTPParseParameter());
            if (SHIDWORD(v28) <= 0) {
              goto LABEL_17;
            }
            if ((int)v28 > 0)
            {
              unsigned int v20 = 0;
              CFMutableDictionaryRef v14 = CFDictionaryCreateMutable(v7, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
              if (v14)
              {
                CFMutableDictionaryRef v15 = v14;
                CFDictionarySetInt64();
                CFDictionarySetInt64();
                *a3 = v15;
              }
              else
              {
                APSLogErrorAt();
                unsigned int v20 = -71820;
              }
              goto LABEL_46;
            }
            int v13 = -71821;
          }
        }
      }
      else
      {
        int v13 = -71821;
      }
      APSLogErrorAt();
LABEL_44:
      unsigned int v20 = v13;
LABEL_45:
      APSLogErrorAt();
LABEL_46:
      CFRelease(v9);
      goto LABEL_47;
    }
    APSLogErrorAt();
    int v17 = -71820;
  }
  else
  {
    APSLogErrorAt();
    int v17 = -71821;
  }
  unsigned int v20 = v17;
LABEL_47:
  if (theBuffer) {
    CFRelease(theBuffer);
  }
  if (v6) {
    CFRelease(v6);
  }
  return v20;
}

uint64_t sdpsession_ensureInitialVolumeFetched(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int v7 = 0;
  uint64_t v6 = 0;
  if (gLogCategory_APSenderSessionSDP <= 30
    && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)(DerivedStorage + 48)) {
    return 0;
  }
  if (!APSGetFBOPropertyInt64())
  {
    if (gLogCategory_APSenderSessionSDP <= 50
      && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(DerivedStorage + 48) = 1;
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
    *(_DWORD *)(DerivedStorage + 124) = -998653952;
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
    return 0;
  }
  sdpsession_copyTransportControlStream(a1, &v6);
  int v4 = v6;
  if (v6)
  {
    uint64_t InitialVolume = APSenderSessionUtilityFetchInitialVolume(v6, &v7);
    if (InitialVolume)
    {
      APSLogErrorAt();
    }
    else
    {
      if (gLogCategory_APSenderSessionSDP <= 50
        && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
      *(_DWORD *)(DerivedStorage + 124) = v7;
      MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
      *(unsigned char *)(DerivedStorage + 48) = 1;
    }
    CFRelease(v4);
  }
  else
  {
    APSLogErrorAt();
    return 4294895475;
  }
  return InitialVolume;
}

uint64_t sdpsession_startSession(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v9 = 0;
  if (gLogCategory_APSenderSessionSDP <= 30
    && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  sdpsession_copyTransportControlStream(a1, &v9);
  long long v3 = v9;
  if (!v9)
  {
    APSLogErrorAt();
    return 4294895475;
  }
  uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *(uint64_t (**)(const void *, uint64_t, void, void))(v5 + 56);
  if (!v6)
  {
    uint64_t v7 = 4294954514;
    goto LABEL_13;
  }
  uint64_t v7 = v6(v3, 1919119972, 0, 0);
  if (v7)
  {
LABEL_13:
    APSLogErrorAt();
    goto LABEL_14;
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  *(unsigned char *)(DerivedStorage + 133) = 1;
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
LABEL_14:
  CFRelease(v3);
  return v7;
}

uint64_t sdpsession_sendPendingSetVolumeCommand(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFMutableDictionaryRef v14 = 0;
  CFTypeRef cf = 0;
  sdpsession_copyTransportControlStream(a1, &v14);
  long long v3 = v14;
  if (!v14)
  {
    uint64_t v12 = 4294895475;
    APSLogErrorAt();
    return v12;
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  float v4 = *(float *)(DerivedStorage + 128);
  *(_DWORD *)(DerivedStorage + 128) = -998653952;
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  if (APSVolumeDBValuesAreNoticeablyDifferent())
  {
    if (gLogCategory_APSenderSessionSDP <= 50
      && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
    if (Mutable)
    {
      uint64_t v6 = Mutable;
      CFStringAppendFormat(Mutable, 0, @"volume: %f\r\n", v4);
      uint64_t BlockBufferWithCFString = FigCreateBlockBufferWithCFString();
      if (BlockBufferWithCFString)
      {
        uint64_t v12 = BlockBufferWithCFString;
      }
      else
      {
        CFTypeRef v8 = cf;
        uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v9) {
          uint64_t v10 = v9;
        }
        else {
          uint64_t v10 = 0;
        }
        int v11 = *(uint64_t (**)(const void *, uint64_t, CFTypeRef, void))(v10 + 56);
        if (v11)
        {
          uint64_t v12 = v11(v3, 1937141612, v8, 0);
          if (!v12) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v12 = 4294954514;
        }
      }
      APSLogErrorAt();
LABEL_17:
      CFRelease(v6);
      if (cf) {
        CFRelease(cf);
      }
      goto LABEL_19;
    }
    APSLogErrorAt();
    uint64_t v12 = 4294895476;
  }
  else
  {
    uint64_t v12 = 0;
  }
LABEL_19:
  CFRelease(v3);
  return v12;
}

uint64_t sdpsession_copyCryptor(uint64_t a1, void *a2)
{
  CFTypeRef v11 = 0;
  CFTypeRef cf = 0;
  uint64_t v3 = *(void *)(CMBaseObjectGetDerivedStorage() + 56);
  uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *(uint64_t (**)(uint64_t, CFTypeRef *, CFTypeRef *))(v5 + 16);
  if (!v6)
  {
    uint64_t v9 = 4294954514;
LABEL_11:
    APSLogErrorAt();
    goto LABEL_15;
  }
  uint64_t v7 = v6(v3, &cf, &v11);
  if (v7)
  {
    uint64_t v9 = v7;
    goto LABEL_11;
  }
  uint64_t v8 = APSCryptorCBCCreate();
  if (v8)
  {
    uint64_t v9 = v8;
    goto LABEL_11;
  }
  if (gLogCategory_APSenderSessionSDP <= 40
    && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v9 = 0;
  if (a2) {
    *a2 = 0;
  }
LABEL_15:
  if (cf) {
    CFRelease(cf);
  }
  if (v11) {
    CFRelease(v11);
  }
  return v9;
}

uint64_t sdpsession_ensureKeepAliveResumed()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v1 = APSSetFBOPropertyInt64();
  if (v1)
  {
    uint64_t v6 = v1;
    goto LABEL_9;
  }
  uint64_t v2 = *(void *)(DerivedStorage + 16);
  uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 48);
  if (!v5)
  {
    uint64_t v6 = 4294954514;
LABEL_9:
    APSLogErrorAt();
    return v6;
  }
  uint64_t v6 = v5(v2);
  if (v6) {
    goto LABEL_9;
  }
  return v6;
}

void sdpsession_teardownTransportControlStream(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  sdpsession_stopNetworkClock(a1);
  uint64_t v3 = *(void *)(DerivedStorage + 16);
  uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *(void (**)(uint64_t))(v5 + 56);
  if (v6) {
    v6(v3);
  }
  sdpsession_invalidateTransportControlStream(a1, 0);
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  uint64_t v7 = *(const void **)(DerivedStorage + 96);
  if (v7)
  {
    CFRelease(v7);
    *(void *)(DerivedStorage + 96) = 0;
  }
  *(unsigned char *)(DerivedStorage + 133) = 0;
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  uint64_t v8 = *(const void **)(DerivedStorage + 56);
  if (v8)
  {
    CFRelease(v8);
    *(void *)(DerivedStorage + 56) = 0;
  }
  *(unsigned char *)(DerivedStorage + 48) = 0;
}

uint64_t APSKeyHolderGetAuthenticationType(uint64_t a1)
{
  uint64_t v2 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v3 + 8);
  if (!v4) {
    return 0;
  }
  return v4(a1);
}

uint64_t sdpsession_makeBase64EncodedKeyAndIV(uint64_t a1, void *a2, void *a3)
{
  CFDataRef v15 = 0;
  theuint64_t Data = 0;
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, CFDataRef *, CFDataRef *))(v7 + 24);
  if (!v8)
  {
    uint64_t v13 = 4294954514;
LABEL_11:
    APSLogErrorAt();
    uint64_t v12 = 0;
    goto LABEL_12;
  }
  uint64_t v9 = v8(a1, &theData, &v15);
  if (v9)
  {
    uint64_t v13 = v9;
    goto LABEL_11;
  }
  CFDataGetBytePtr(theData);
  CFDataGetLength(theData);
  uint64_t v10 = Base64EncodeCopyEx();
  if (v10)
  {
    uint64_t v13 = v10;
    goto LABEL_11;
  }
  CFIndex Length = CFDataGetLength(v15);
  uint64_t v12 = malloc_type_malloc((4 * ((Length + 2) / 3)) | 1, 0xE84E1BC4uLL);
  if (v12)
  {
    CFDataGetBytePtr(v15);
    CFDataGetLength(v15);
    CFDataGetLength(v15);
    uint64_t v13 = Base64EncodeEx();
    if (!v13)
    {
      *uint64_t v12 = 0;
      *a2 = 0;
      *a3 = v12;
      goto LABEL_14;
    }
    APSLogErrorAt();
  }
  else
  {
    APSLogErrorAt();
    uint64_t v13 = 4294895476;
  }
LABEL_12:
  if (v12) {
    free(v12);
  }
LABEL_14:
  if (theData) {
    CFRelease(theData);
  }
  if (v15) {
    CFRelease(v15);
  }
  return v13;
}

uint64_t sdpsession_sendMessageCreatingReply(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t BlockBufferWithCFString = FigCreateBlockBufferWithCFString();
    if (BlockBufferWithCFString)
    {
      uint64_t v11 = BlockBufferWithCFString;
      goto LABEL_10;
    }
  }
  uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t))(v9 + 56);
  if (!v10)
  {
    uint64_t v11 = 4294954514;
LABEL_10:
    APSLogErrorAt();
    return v11;
  }
  uint64_t v11 = v10(a1, a2, 0, a4);
  if (v11) {
    goto LABEL_10;
  }
  return v11;
}

uint64_t sdpsession_teardownStreamInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APSenderSessionSDP <= 30
    && (gLogCategory_APSenderSessionSDP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 72));
  uint64_t v3 = *(const void **)(DerivedStorage + 88);
  if (v3) {
    CFTypeRef v4 = CFRetain(v3);
  }
  else {
    CFTypeRef v4 = 0;
  }
  int v5 = *(unsigned __int8 *)(DerivedStorage + 133);
  int v6 = *(unsigned __int8 *)(DerivedStorage + 80);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 72));
  if (*(_DWORD *)(a1 + 8) != 96)
  {
    APSLogErrorAt();
    uint64_t v9 = 4294895471;
LABEL_18:
    if (!v4) {
      return v9;
    }
    goto LABEL_26;
  }
  if (v6) {
    BOOL v7 = 1;
  }
  else {
    BOOL v7 = v5 == 0;
  }
  if (v7 || v4 == 0)
  {
    uint64_t v9 = 0;
    goto LABEL_18;
  }
  uint64_t VTable = CMBaseObjectGetVTable();
  if (*(void *)(VTable + 16)) {
    uint64_t v11 = *(void *)(VTable + 16);
  }
  else {
    uint64_t v11 = 0;
  }
  uint64_t v12 = *(void (**)(CFTypeRef, uint64_t, void, void))(v11 + 56);
  if (v12) {
    v12(v4, 1953719408, 0, 0);
  }
  sdpsession_teardownTransportControlStream(*(void *)a1);
  uint64_t v9 = 0;
LABEL_26:
  CFRelease(v4);
  return v9;
}

uint64_t APAuthenticationClientTokenCreate(uint64_t a1, const void *a2, void *a3)
{
  if (a2)
  {
    APAuthenticationClientGetClassID();
    uint64_t v5 = CMDerivedObjectCreate();
    if (v5)
    {
      uint64_t v6 = v5;
      APSLogErrorAt();
    }
    else
    {
      *(void *) CMBaseObjectGetDerivedStorage() = a2;
      CFRetain(a2);
      if (gLogCategory_APAuthenticationClientToken <= 50
        && (gLogCategory_APAuthenticationClientToken != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v6 = 0;
      *a3 = 0;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895495;
  }
  return v6;
}

void tokenAuthentication_Finalize()
{
  uint64_t DerivedStorage = (CFTypeRef *)CMBaseObjectGetDerivedStorage();
  if (*DerivedStorage)
  {
    CFRelease(*DerivedStorage);
    *uint64_t DerivedStorage = 0;
  }
  if (gLogCategory_APAuthenticationClientToken <= 50
    && (gLogCategory_APAuthenticationClientToken != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

__CFString *tokenAuthentication_CopyDebugDescription(uint64_t a1)
{
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppendFormat(Mutable, 0, @"<APAuthenticationClientToken %p>", a1);
  return Mutable;
}

uint64_t tokenAuthentication_GetAuthenticationType()
{
  return 16;
}

uint64_t tokenAuthentication_AuthenticateEndpoint()
{
  uint64_t result = tokenAuthentication_authenticateEndpointInternal();
  if (result == 409)
  {
    if (gLogCategory_APAuthenticationClientToken <= 50
      && (gLogCategory_APAuthenticationClientToken != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return tokenAuthentication_authenticateEndpointInternal();
  }
  return result;
}

uint64_t tokenAuthentication_authenticateEndpointInternal()
{
  uint64_t v47 = *MEMORY[0x1E4F143B8];
  CFTypeRef v32 = 0;
  uint64_t DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAuthenticationClientToken <= 50
    && (gLogCategory_APAuthenticationClientToken != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v1 = *DerivedStorage;
  *(_OWORD *)values = xmmword_1E68926E0;
  long long v42 = @"uuid";
  CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFArrayRef v3 = CFArrayCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], (const void **)values, 3, MEMORY[0x1E4F1D510]);
  if (!v3)
  {
    APSLogErrorAt();
    CFTypeRef v13 = 0;
    CFTypeRef v12 = 0;
    uint64_t v14 = 4294895496;
    goto LABEL_65;
  }
  CFTypeRef cf = 0;
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v2, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (!Mutable)
  {
    APSLogErrorAt();
    LODWORD(v33) = -71800;
LABEL_68:
    APSLogErrorAt();
    CFTypeRef v12 = 0;
    CFTypeRef v13 = 0;
    goto LABEL_14;
  }
  FigCFDictionarySetInt();
  CFDictionarySetValue(Mutable, @"tkrd", v3);
  int v5 = tokenAuthentication_sendAuthSetupRequestCreatingReply(v1, Mutable);
  if (v5)
  {
    APSLogErrorAt();
    CFDictionaryRef v6 = 0;
  }
  else
  {
    CFDictionaryRef v6 = (const __CFDictionary *)cf;
    CFTypeRef cf = 0;
  }
  CFRelease(Mutable);
  LODWORD(v33) = v5;
  if (v5) {
    goto LABEL_68;
  }
  CFStringGetTypeID();
  Typedint Value = (const void *)CFDictionaryGetTypedValue();
  CFDataGetTypeID();
  uint64_t v8 = (const void *)CFDictionaryGetTypedValue();
  int Value = CFDictionaryGetValue(v6, @"pair");
  uint64_t v10 = Value;
  if (Value && (CFTypeID v11 = CFGetTypeID(Value), v11 != CFDataGetTypeID()))
  {
    APSLogErrorAt();
    CFTypeRef v12 = 0;
    CFTypeRef v13 = 0;
    LODWORD(v33) = -71803;
  }
  else
  {
    CFTypeRef v12 = CFRetain(TypedValue);
    CFTypeRef v13 = CFRetain(v8);
    CFTypeRef v32 = v10;
    if (v10) {
      CFRetain(v10);
    }
  }
LABEL_14:
  CFRelease(v3);
  uint64_t v14 = v33;
  if (v33)
  {
LABEL_65:
    APSLogErrorAt();
    CFTypeRef v20 = 0;
    goto LABEL_66;
  }
  CFTypeRef v15 = v32;
  CFTypeRef cf = 0;
  p_CFTypeRef cf = &cf;
  uint64_t v39 = 0x2020000000;
  LOBYTE(v40) = 0;
  if (v32)
  {
    dispatch_semaphore_t v16 = dispatch_semaphore_create(0);
    if (v16)
    {
      int v17 = v16;
      uint64_t v18 = (void *)[MEMORY[0x1E4F73378] sharedManager];
      values[0] = (void *)MEMORY[0x1E4F143A8];
      values[1] = (void *)3221225472;
      long long v42 = (__CFString *)__tokenAuthentication_verifyPairing_block_invoke;
      long long v43 = &unk_1E6892700;
      long long v44 = v17;
      long long v45 = &cf;
      [v18 verifyPairingWithToken:v32 completionHandler:values];
      dispatch_semaphore_wait(v17, 0xFFFFFFFFFFFFFFFFLL);
      dispatch_release(v17);
    }
    else
    {
      APSLogErrorAt();
      *((unsigned char *)p_cf + 24) = 0;
    }
  }
  if (gLogCategory_APAuthenticationClientToken <= 50
    && (gLogCategory_APAuthenticationClientToken != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  int v19 = *((unsigned __int8 *)p_cf + 24);
  _Block_object_dispose(&cf, 8);
  if (!v19)
  {
    if (!v13 || ([MEMORY[0x1E4F73380] isTokenValidForFeatures:2 token:v13] & 1) == 0)
    {
      APSLogErrorAt();
      CFTypeRef v20 = 0;
      CFTypeRef v21 = 0;
      uint64_t v14 = 4294895494;
      goto LABEL_53;
    }
    CFTypeRef cf = 0;
    p_CFTypeRef cf = &cf;
    uint64_t v39 = 0x2020000000;
    uint64_t v40 = 0;
    uint64_t v33 = 0;
    uint64_t v34 = &v33;
    uint64_t v35 = 0x2020000000;
    int v36 = 0;
    dispatch_semaphore_t v22 = dispatch_semaphore_create(0);
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v24 = (void *)[MEMORY[0x1E4F73380] sharedManager];
      values[0] = (void *)MEMORY[0x1E4F143A8];
      values[1] = (void *)3221225472;
      long long v42 = (__CFString *)__tokenAuthentication_rollAuthToken_block_invoke;
      long long v43 = &unk_1E6892728;
      long long v45 = (CFTypeRef *)&v33;
      long long v46 = &cf;
      long long v44 = v23;
      [v24 requestActivationForAuthToken:v13 withUUID:v12 completionHandler:values];
      dispatch_semaphore_wait(v23, 0xFFFFFFFFFFFFFFFFLL);
      CFTypeRef v20 = p_cf[3];
      dispatch_release(v23);
      uint64_t v14 = *((unsigned int *)v34 + 6);
    }
    else
    {
      APSLogErrorAt();
      CFTypeRef v20 = 0;
      uint64_t v14 = 4294895496;
      *((_DWORD *)v34 + 6) = -71800;
    }
    _Block_object_dispose(&v33, 8);
    _Block_object_dispose(&cf, 8);
    if (v14)
    {
      APSLogErrorAt();
    }
    else
    {
      if (!v20)
      {
        APSLogErrorAt();
        CFTypeRef v20 = 0;
        goto LABEL_85;
      }
      if (v15)
      {
        CFTypeRef v25 = 0;
        goto LABEL_35;
      }
      uint64_t v14 = tokenAuthentication_generatePairingToken(&v32);
      if (!v14)
      {
        CFTypeRef v25 = v32;
        if (v32)
        {
LABEL_35:
          uint64_t v26 = *DerivedStorage;
          values[0] = 0;
          uint64_t v27 = CFDictionaryCreateMutable(v2, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
          uint64_t v28 = v27;
          if (!v27)
          {
            APSLogErrorAt();
            CFTypeRef v21 = 0;
            uint64_t v14 = 4294895496;
            goto LABEL_76;
          }
          CFDictionarySetValue(v27, @"auth", v20);
          if (v25) {
            CFDictionarySetValue(v28, @"pair", v25);
          }
          unsigned int v29 = CFDictionaryCreateMutable(v2, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
          if (!v29)
          {
            APSLogErrorAt();
            CFTypeRef v21 = 0;
            LODWORD(cf) = -71800;
            goto LABEL_44;
          }
          FigCFDictionarySetInt();
          CFDictionarySetValue(v29, @"tkwr", v28);
          LODWORD(cf) = tokenAuthentication_sendAuthSetupRequestCreatingReply(v26, v29);
          if (!cf)
          {
            if (!values[0])
            {
              APSLogErrorAt();
              CFTypeRef v21 = 0;
              LODWORD(cf) = -71803;
              goto LABEL_43;
            }
            CFDataGetTypeID();
            long long v30 = (const void *)CFDictionaryGetTypedValue();
            if (!cf)
            {
              CFTypeRef v21 = CFRetain(v30);
              goto LABEL_43;
            }
          }
          APSLogErrorAt();
          CFTypeRef v21 = 0;
LABEL_43:
          CFRelease(v28);
          CFRelease(v29);
          uint64_t v28 = (__CFDictionary *)values[0];
          if (!values[0])
          {
LABEL_45:
            uint64_t v14 = cf;
            if (!cf)
            {
              uint64_t v14 = tokenAuthentication_confirmAuthTokenActivation((uint64_t)v21, (uint64_t)v12);
              if (!v14)
              {
                uint64_t v14 = tokenAuthentication_savePairingToken((uint64_t)v32);
                if (!v14) {
                  goto LABEL_48;
                }
              }
            }
LABEL_76:
            APSLogErrorAt();
            goto LABEL_53;
          }
LABEL_44:
          CFRelease(v28);
          goto LABEL_45;
        }
        APSLogErrorAt();
LABEL_85:
        CFTypeRef v21 = 0;
        uint64_t v14 = 4294895493;
        goto LABEL_53;
      }
      APSLogErrorAt();
    }
LABEL_66:
    CFTypeRef v21 = 0;
    goto LABEL_53;
  }
  CFTypeRef v20 = 0;
  CFTypeRef v21 = 0;
LABEL_48:
  if (gLogCategory_APAuthenticationClientToken <= 50
    && (gLogCategory_APAuthenticationClientToken != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v14 = 0;
LABEL_53:
  if (v12) {
    CFRelease(v12);
  }
  if (v32) {
    CFRelease(v32);
  }
  if (v13) {
    CFRelease(v13);
  }
  if (v20) {
    CFRelease(v20);
  }
  if (v21) {
    CFRelease(v21);
  }
  return v14;
}

void sub_1D09D5170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t tokenAuthentication_generatePairingToken(void *a1)
{
  uint64_t v12 = 0;
  CFTypeRef v13 = &v12;
  uint64_t v14 = 0x2020000000;
  uint64_t v15 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = &v8;
  uint64_t v10 = 0x2020000000;
  int v11 = 0;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  if (v2)
  {
    CFArrayRef v3 = v2;
    uint64_t v4 = (void *)[MEMORY[0x1E4F73378] sharedManager];
    v7[0] = MEMORY[0x1E4F143A8];
    v7[1] = 3221225472;
    v7[2] = __tokenAuthentication_generatePairingToken_block_invoke;
    void v7[3] = &unk_1E6892728;
    v7[5] = &v8;
    void v7[6] = &v12;
    v7[4] = v3;
    [v4 generatePairingTokenWithCompletionHandler:v7];
    dispatch_semaphore_wait(v3, 0xFFFFFFFFFFFFFFFFLL);
    *a1 = v13[3];
    dispatch_release(v3);
    uint64_t v5 = *((unsigned int *)v9 + 6);
  }
  else
  {
    APSLogErrorAt();
    uint64_t v5 = 4294895496;
    *((_DWORD *)v9 + 6) = -71800;
  }
  _Block_object_dispose(&v8, 8);
  _Block_object_dispose(&v12, 8);
  return v5;
}

void sub_1D09D52D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 48), 8);
  _Unwind_Resume(a1);
}

uint64_t tokenAuthentication_confirmAuthTokenActivation(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = 0;
  int v11 = &v10;
  uint64_t v12 = 0x2020000000;
  int v13 = 0;
  dispatch_semaphore_t v4 = dispatch_semaphore_create(0);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = (void *)[MEMORY[0x1E4F73380] sharedManager];
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 3221225472;
    v9[2] = __tokenAuthentication_confirmAuthTokenActivation_block_invoke;
    v9[3] = &unk_1E6892750;
    v9[4] = v5;
    void v9[5] = &v10;
    [v6 confirmActivationForAuthToken:a1 withUUID:a2 completionHandler:v9];
    dispatch_semaphore_wait(v5, 0xFFFFFFFFFFFFFFFFLL);
    dispatch_release(v5);
    uint64_t v7 = *((unsigned int *)v11 + 6);
  }
  else
  {
    APSLogErrorAt();
    uint64_t v7 = 4294895496;
    *((_DWORD *)v11 + 6) = -71800;
  }
  _Block_object_dispose(&v10, 8);
  return v7;
}

void sub_1D09D5414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t tokenAuthentication_savePairingToken(uint64_t a1)
{
  uint64_t v8 = 0;
  uint64_t v9 = &v8;
  uint64_t v10 = 0x2020000000;
  int v11 = 0;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  if (v2)
  {
    CFArrayRef v3 = v2;
    dispatch_semaphore_t v4 = (void *)[MEMORY[0x1E4F73378] sharedManager];
    v7[0] = MEMORY[0x1E4F143A8];
    v7[1] = 3221225472;
    v7[2] = __tokenAuthentication_savePairingToken_block_invoke;
    void v7[3] = &unk_1E6892750;
    v7[4] = v3;
    v7[5] = &v8;
    [v4 addPairingWithToken:a1 completionHandler:v7];
    dispatch_semaphore_wait(v3, 0xFFFFFFFFFFFFFFFFLL);
    dispatch_release(v3);
    uint64_t v5 = *((unsigned int *)v9 + 6);
  }
  else
  {
    APSLogErrorAt();
    uint64_t v5 = 4294895496;
    *((_DWORD *)v9 + 6) = -71800;
  }
  _Block_object_dispose(&v8, 8);
  return v5;
}

void sub_1D09D5534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t tokenAuthentication_sendAuthSetupRequestCreatingReply(uint64_t a1, const void *a2)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  CFAllocatorRef v3 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    CFMutableDictionaryRef v5 = Mutable;
    CFDataRef Data = CFPropertyListCreateData(v3, a2, kCFPropertyListBinaryFormat_v1_0, 0, 0);
    if (Data)
    {
      CFDataRef v7 = Data;
      CFDataGetBytePtr(Data);
      CFDataGetLength(v7);
      CFDictionarySetData();
      snprintf(__str, 0x20uLL, "%d", 16);
      CFDictionarySetCString();
      uint64_t v8 = APTransportStreamSendPlistMessageCreatingPlistReply();
      if (v8) {
        APSLogErrorAt();
      }
      CFRelease(v7);
    }
    else
    {
      uint64_t v8 = 4294895496;
      APSLogErrorAt();
    }
    CFRelease(v5);
  }
  else
  {
    uint64_t v8 = 4294895496;
    APSLogErrorAt();
  }
  return v8;
}

intptr_t __tokenAuthentication_verifyPairing_block_invoke(uint64_t a1, char a2, uint64_t a3)
{
  if (a3
    && gLogCategory_APAuthenticationClientToken <= 90
    && (gLogCategory_APAuthenticationClientToken != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a2;
  CFMutableDictionaryRef v5 = *(NSObject **)(a1 + 32);
  return dispatch_semaphore_signal(v5);
}

intptr_t __tokenAuthentication_rollAuthToken_block_invoke(void *a1, void *a2, void *a3)
{
  if (a3)
  {
    if (gLogCategory_APAuthenticationClientToken <= 90
      && (gLogCategory_APAuthenticationClientToken != -1 || _LogCategory_Initialize()))
    {
      CFDataRef v7 = a3;
      LogPrintF();
    }
    *(_DWORD *)(*(void *)(a1[5] + 8) + 24) = objc_msgSend(a3, "code", v7);
  }
  else
  {
    *(void *)(*(void *)(a1[6] + 8) + 24) = a2;
  }
  CFMutableDictionaryRef v5 = a1[4];
  return dispatch_semaphore_signal(v5);
}

intptr_t __tokenAuthentication_generatePairingToken_block_invoke(void *a1, void *a2, void *a3)
{
  if (a3)
  {
    if (gLogCategory_APAuthenticationClientToken <= 90
      && (gLogCategory_APAuthenticationClientToken != -1 || _LogCategory_Initialize()))
    {
      CFDataRef v7 = a3;
      LogPrintF();
    }
    *(_DWORD *)(*(void *)(a1[5] + 8) + 24) = objc_msgSend(a3, "code", v7);
  }
  else
  {
    *(void *)(*(void *)(a1[6] + 8) + 24) = a2;
  }
  CFMutableDictionaryRef v5 = a1[4];
  return dispatch_semaphore_signal(v5);
}

intptr_t __tokenAuthentication_confirmAuthTokenActivation_block_invoke(uint64_t a1, void *a2)
{
  if (a2)
  {
    if (gLogCategory_APAuthenticationClientToken <= 90
      && (gLogCategory_APAuthenticationClientToken != -1 || _LogCategory_Initialize()))
    {
      uint64_t v6 = a2;
      LogPrintF();
    }
    *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = objc_msgSend(a2, "code", v6);
  }
  dispatch_semaphore_t v4 = *(NSObject **)(a1 + 32);
  return dispatch_semaphore_signal(v4);
}

intptr_t __tokenAuthentication_savePairingToken_block_invoke(uint64_t a1, void *a2)
{
  if (a2)
  {
    if (gLogCategory_APAuthenticationClientToken <= 90
      && (gLogCategory_APAuthenticationClientToken != -1 || _LogCategory_Initialize()))
    {
      uint64_t v6 = a2;
      LogPrintF();
    }
    *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = objc_msgSend(a2, "code", v6);
  }
  dispatch_semaphore_t v4 = *(NSObject **)(a1 + 32);
  return dispatch_semaphore_signal(v4);
}

uint64_t APAudioEngineCarPlayCreate(uint64_t a1, uint64_t a2, void *a3)
{
  APAudioEngineGetClassID();
  uint64_t v4 = CMDerivedObjectCreate();
  if (v4)
  {
    uint64_t v8 = v4;
LABEL_13:
    APSLogErrorAt();
    return v8;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v6 = FigDispatchQueueCreateWithPriority();
  *(void *)(DerivedStorage + 16) = v6;
  if (!v6)
  {
    uint64_t v8 = 4294895226;
    goto LABEL_13;
  }
  uint64_t v7 = FigDispatchQueueCreateWithPriority();
  *(void *)(DerivedStorage + 128) = v7;
  if (!v7)
  {
    uint64_t v8 = 4294895226;
    goto LABEL_13;
  }
  *(_DWORD *)uint64_t DerivedStorage = CFDictionaryGetInt64Ranged();
  *(unsigned char *)(DerivedStorage + 8) = 0;
  if (gLogCategory_APAudioEngineCarPlay <= 40
    && (gLogCategory_APAudioEngineCarPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  *a3 = 0;
  return 0;
}

void audioEngineCarPlay_Finalize()
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  uint64_t v1 = (const void *)DerivedStorage[9];
  if (v1)
  {
    CFRelease(v1);
    DerivedStorage[9] = 0;
  }
  dispatch_semaphore_t v2 = (const void *)DerivedStorage[10];
  if (v2)
  {
    CFRelease(v2);
    DerivedStorage[10] = 0;
  }
  CFAllocatorRef v3 = (const void *)DerivedStorage[11];
  if (v3)
  {
    CFRelease(v3);
    DerivedStorage[11] = 0;
  }
  uint64_t v4 = (const void *)DerivedStorage[12];
  if (v4)
  {
    CFRelease(v4);
    DerivedStorage[12] = 0;
  }
  CFMutableDictionaryRef v5 = DerivedStorage[2];
  if (v5)
  {
    dispatch_release(v5);
    DerivedStorage[2] = 0;
  }
  uint64_t v6 = (const void *)DerivedStorage[23];
  if (v6)
  {
    CFRelease(v6);
    DerivedStorage[23] = 0;
  }
  uint64_t v7 = (const void *)DerivedStorage[24];
  if (v7)
  {
    CFRelease(v7);
    DerivedStorage[24] = 0;
  }
  uint64_t v8 = (const void *)DerivedStorage[25];
  if (v8)
  {
    CFRelease(v8);
    DerivedStorage[25] = 0;
  }
  uint64_t v9 = (const void *)DerivedStorage[26];
  if (v9)
  {
    CFRelease(v9);
    DerivedStorage[26] = 0;
  }
  uint64_t v10 = DerivedStorage[16];
  if (v10)
  {
    dispatch_release(v10);
    DerivedStorage[16] = 0;
  }
}

__CFString *audioEngineCarPlay_CopyDebugDescription()
{
  return @"<APAudioEngineRealTime>";
}

uint64_t audioEngineCarPlay_CopyProperty(int a1, CFTypeRef cf1, uint64_t a3, uint64_t a4)
{
  if (!cf1)
  {
    uint64_t v7 = 4294895225;
LABEL_9:
    APSLogErrorAt();
    return v7;
  }
  if (!a4)
  {
    uint64_t v7 = 4294895225;
    goto LABEL_9;
  }
  if (!CFEqual(cf1, @"audioSource")) {
    return 4294954509;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v6 = *(NSObject **)(DerivedStorage + 16);
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 0x40000000;
  v9[2] = __audioEngineCarPlay_copyAudioSource_block_invoke;
  v9[3] = &__block_descriptor_tmp_12;
  v9[4] = a4;
  void v9[5] = DerivedStorage;
  dispatch_sync(v6, v9);
  return 0;
}

uint64_t audioEngineCarPlay_SetProperty(const void *a1, const void *a2, const void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (CFEqual(a2, @"ForceZeroBasedSampleTimes"))
  {
    *(unsigned char *)(DerivedStorage + 8) = CFGetInt64() != 0;
    return 0;
  }
  if (!CFEqual(a2, @"cryptor"))
  {
    if (CFEqual(a2, @"audioSource"))
    {
      if (a3 && (CFTypeID v11 = CFGetTypeID(a3), v11 != FigEndpointAudioSourceGetTypeID()))
      {
        uint64_t v10 = 4294895225;
      }
      else
      {
        uint64_t v27 = 0;
        uint64_t v28 = &v27;
        uint64_t v29 = 0x2000000000;
        int v30 = 0;
        uint64_t v12 = CMBaseObjectGetDerivedStorage();
        CFRetain(a1);
        if (a3) {
          CFRetain(a3);
        }
        int v13 = *(NSObject **)(v12 + 16);
        blocCFIndex k = MEMORY[0x1E4F143A8];
        uint64_t v20 = 0x40000000;
        CFTypeRef v21 = __audioEngineCarPlay_setAudioSource_block_invoke;
        dispatch_semaphore_t v22 = &unk_1E68927D0;
        uint64_t v23 = &v27;
        uint64_t v24 = v12;
        CFTypeRef v25 = a3;
        uint64_t v26 = a1;
        dispatch_async(v13, &block);
        if (!*((_DWORD *)v28 + 6)) {
          goto LABEL_15;
        }
        APSLogErrorAt();
        uint64_t v10 = *((unsigned int *)v28 + 6);
        _Block_object_dispose(&v27, 8);
        if (!v10) {
          return v10;
        }
      }
    }
    else
    {
      if (!CFEqual(a2, @"messageRingCapacity")) {
        return 4294954512;
      }
      if (a3)
      {
        CFTypeID v15 = CFGetTypeID(a3);
        if (v15 == CFNumberGetTypeID())
        {
          uint64_t v27 = 0;
          uint64_t v28 = &v27;
          uint64_t v29 = 0x2000000000;
          int v30 = 0;
          uint64_t v16 = CMBaseObjectGetDerivedStorage();
          int v17 = *(NSObject **)(v16 + 16);
          blocCFIndex k = MEMORY[0x1E4F143A8];
          uint64_t v20 = 0x40000000;
          CFTypeRef v21 = __audioEngineCarPlay_setMessageRingCapacity_block_invoke;
          dispatch_semaphore_t v22 = &unk_1E68927F8;
          uint64_t v23 = &v27;
          uint64_t v24 = v16;
          CFTypeRef v25 = a3;
          dispatch_sync(v17, &block);
          uint64_t v18 = *((unsigned int *)v28 + 6);
          _Block_object_dispose(&v27, 8);
          uint64_t v10 = 0;
          if (v18)
          {
            APSLogErrorAt();
            return v18;
          }
          return v10;
        }
      }
      uint64_t v10 = 4294895225;
    }
LABEL_29:
    APSLogErrorAt();
    return v10;
  }
  if (a3)
  {
    CFTypeID v7 = CFGetTypeID(a3);
    if (v7 != APSCryptorGetTypeID())
    {
      uint64_t v10 = 4294895225;
      goto LABEL_29;
    }
  }
  uint64_t v27 = 0;
  uint64_t v28 = &v27;
  uint64_t v29 = 0x2000000000;
  int v30 = 0;
  uint64_t v8 = CMBaseObjectGetDerivedStorage();
  uint64_t v9 = *(NSObject **)(v8 + 16);
  blocCFIndex k = MEMORY[0x1E4F143A8];
  uint64_t v20 = 0x40000000;
  CFTypeRef v21 = __audioEngineCarPlay_setCryptor_block_invoke;
  dispatch_semaphore_t v22 = &unk_1E68927A8;
  uint64_t v23 = &v27;
  uint64_t v24 = v8;
  CFTypeRef v25 = a3;
  dispatch_sync(v9, &block);
  if (!*((_DWORD *)v28 + 6))
  {
LABEL_15:
    _Block_object_dispose(&v27, 8);
    return 0;
  }
  APSLogErrorAt();
  uint64_t v10 = *((unsigned int *)v28 + 6);
  _Block_object_dispose(&v27, 8);
  if (v10) {
    goto LABEL_29;
  }
  return v10;
}

CFTypeRef __audioEngineCarPlay_copyAudioSource_block_invoke(uint64_t a1)
{
  CFTypeRef result = *(CFTypeRef *)(*(void *)(a1 + 40) + 72);
  if (result) {
    CFTypeRef result = CFRetain(result);
  }
  **(void **)(a1 + 32) = result;
  return result;
}

void __audioEngineCarPlay_setCryptor_block_invoke(void *a1)
{
  uint64_t v2 = a1[5];
  if (*(unsigned char *)(v2 + 120))
  {
    APSLogErrorAt();
    *(_DWORD *)(*(void *)(a1[4] + 8) + 24) = -72077;
  }
  else
  {
    CFAllocatorRef v3 = *(const void **)(v2 + 80);
    uint64_t v4 = (const void *)a1[6];
    *(void *)(v2 + 80) = v4;
    if (v4) {
      CFRetain(v4);
    }
    if (v3)
    {
      CFRelease(v3);
    }
  }
}

void __audioEngineCarPlay_setAudioSource_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (*(unsigned char *)(v2 + 120))
  {
    APSLogErrorAt();
    *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = -72077;
  }
  else
  {
    CFAllocatorRef v3 = *(const void **)(v2 + 72);
    uint64_t v4 = *(const void **)(a1 + 48);
    *(void *)(v2 + 72) = v4;
    if (v4) {
      CFRetain(v4);
    }
    if (v3) {
      CFRelease(v3);
    }
  }
  CFRelease(*(CFTypeRef *)(a1 + 56));
  CFMutableDictionaryRef v5 = *(const void **)(a1 + 48);
  if (v5)
  {
    CFRelease(v5);
  }
}

uint64_t __audioEngineCarPlay_setMessageRingCapacity_block_invoke(void *a1)
{
  uint64_t v2 = a1[5];
  if (*(unsigned char *)(v2 + 120))
  {
    uint64_t result = APSLogErrorAt();
    *(_DWORD *)(*(void *)(a1[4] + 8) + 24) = -72077;
  }
  else
  {
    CFNumberRef v3 = (const __CFNumber *)a1[6];
    return CFNumberGetValue(v3, kCFNumberSInt64Type, (void *)(v2 + 64));
  }
  return result;
}

uint64_t audioEngineCarPlay_RegisterStream(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = 0;
  CFTypeID v15 = &v14;
  uint64_t v16 = 0x2000000000;
  int v17 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
  {
    uint64_t v11 = 4294895225;
LABEL_8:
    APSLogErrorAt();
    *((_DWORD *)v15 + 6) = -72071;
    goto LABEL_5;
  }
  if (*(void *)(a6 + 16))
  {
    uint64_t v11 = 4294895225;
    goto LABEL_8;
  }
  uint64_t v10 = *(NSObject **)(DerivedStorage + 16);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __audioEngineCarPlay_RegisterStream_block_invoke;
  block[3] = &unk_1E6892820;
  block[4] = &v14;
  void block[5] = DerivedStorage;
  void block[6] = a3;
  void block[7] = a2;
  void block[8] = a6;
  dispatch_sync(v10, block);
  if (*((_DWORD *)v15 + 6))
  {
    APSLogErrorAt();
    uint64_t v11 = *((unsigned int *)v15 + 6);
  }
  else
  {
    uint64_t v11 = 0;
  }
LABEL_5:
  _Block_object_dispose(&v14, 8);
  return v11;
}

uint64_t audioEngineCarPlay_DeregisterStream(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = 0;
  uint64_t v9 = &v8;
  uint64_t v10 = 0x2000000000;
  int v11 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v4 = *(NSObject **)(DerivedStorage + 16);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __audioEngineCarPlay_DeregisterStream_block_invoke;
  block[3] = &unk_1E6892848;
  block[4] = &v8;
  void block[5] = DerivedStorage;
  void block[6] = a2;
  dispatch_sync(v4, block);
  uint64_t v5 = *((unsigned int *)v9 + 6);
  _Block_object_dispose(&v8, 8);
  return v5;
}

uint64_t audioEngineCarPlay_Resume(const void *a1)
{
  uint64_t v7 = 0;
  uint64_t v8 = &v7;
  uint64_t v9 = 0x2000000000;
  int v10 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFRetain(a1);
  CFNumberRef v3 = *(NSObject **)(DerivedStorage + 16);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __audioEngineCarPlay_Resume_block_invoke;
  block[3] = &unk_1E6892890;
  block[4] = &v7;
  void block[5] = DerivedStorage;
  void block[6] = a1;
  dispatch_async(v3, block);
  uint64_t v4 = *((unsigned int *)v8 + 6);
  _Block_object_dispose(&v7, 8);
  return v4;
}

uint64_t audioEngineCarPlay_Suspend(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFNumberRef v3 = *(NSObject **)(DerivedStorage + 16);
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 0x40000000;
  v5[2] = __audioEngineCarPlay_Suspend_block_invoke;
  v5[3] = &__block_descriptor_tmp_26_0;
  void v5[4] = DerivedStorage;
  v5[5] = a1;
  dispatch_sync(v3, v5);
  return 0;
}

uint64_t audioEngineCarPlay_Flush(const void *a1, int a2, long long *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2)
  {
    APSLogErrorAt();
    return 4294895225;
  }
  else
  {
    uint64_t v7 = DerivedStorage;
    CFRetain(a1);
    uint64_t v8 = *(NSObject **)(v7 + 128);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 0x40000000;
    block[2] = __audioEngineCarPlay_Flush_block_invoke;
    block[3] = &__block_descriptor_tmp_28_0;
    long long v11 = *a3;
    uint64_t v12 = *((void *)a3 + 2);
    block[4] = v7;
    void block[5] = a1;
    dispatch_async(v8, block);
    return 0;
  }
}

uint64_t audioEngineCarPlay_CopyMessageAtSequenceNumber(uint64_t a1, __int16 a2, uint64_t a3)
{
  uint64_t v11 = 0;
  uint64_t v12 = &v11;
  uint64_t v13 = 0x2000000000;
  int v14 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a3)
  {
    uint64_t v6 = *(NSObject **)(DerivedStorage + 16);
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 0x40000000;
    v9[2] = __audioEngineCarPlay_CopyMessageAtSequenceNumber_block_invoke;
    v9[3] = &unk_1E6892918;
    v9[4] = &v11;
    void v9[5] = DerivedStorage;
    __int16 v10 = a2;
    void v9[6] = a3;
    dispatch_sync(v6, v9);
    uint64_t v7 = *((unsigned int *)v12 + 6);
  }
  else
  {
    uint64_t v7 = 4294895225;
    APSLogErrorAt();
    *((_DWORD *)v12 + 6) = -72071;
  }
  _Block_object_dispose(&v11, 8);
  return v7;
}

uint64_t audioEngineCarPlay_HandleDataReady()
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(result + 136))
  {
    uint64_t v1 = result;
    kdebug_trace();
    if (*(_DWORD *)(v1 + 4))
    {
      int v2 = 0;
      while (1)
      {
        uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
        uint64_t v45 = 0;
        long long v46 = 0;
        long long v43 = 0;
        uint64_t v44 = 0;
        uint64_t v41 = 0;
        uint64_t v42 = 0;
        dataPointerOut = 0;
        int v39 = 0;
        memset(v38, 0, sizeof(v38));
        memset(v37, 0, sizeof(v37));
        uint64_t v4 = *(void *)(DerivedStorage + 184);
        uint64_t v5 = *(void **)(CMBaseObjectGetVTable() + 16);
        if (v5) {
          uint64_t v6 = v5;
        }
        else {
          uint64_t v6 = 0;
        }
        if (*v6 < 2uLL) {
          goto LABEL_29;
        }
        uint64_t v7 = (unsigned int (*)(uint64_t, uint64_t))v6[8];
        if (v7)
        {
          if (!v7(v4, 1)) {
            goto LABEL_29;
          }
        }
        APMessageRingGetNextFreeBacking(*(void *)(DerivedStorage + 200));
        if (APSTransportMessageGetAudioDataPointer()) {
          goto LABEL_28;
        }
        uint64_t v8 = *(void *)(DerivedStorage + 192);
        if (v8
          && ((uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 16)) == 0 ? (v10 = 0) : (v10 = v9),
              (uint64_t v11 = *(uint64_t (**)(uint64_t))(v10 + 8)) != 0))
        {
          uint64_t v12 = v11(v8);
        }
        else
        {
          uint64_t v12 = 0;
        }
        uint64_t v13 = *(void *)(DerivedStorage + 184);
        uint64_t v14 = v44;
        uint64_t v15 = v45;
        uint64_t v16 = *(void *)(CMBaseObjectGetVTable() + 16);
        int v17 = v16 ? (void *)v16 : 0;
        if (*v17 < 2uLL) {
          goto LABEL_28;
        }
        uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, unsigned char *, uint64_t, uint64_t *, int *, _OWORD *))v17[9];
        if (!v18) {
          goto LABEL_28;
        }
        int v19 = v18(v13, v15, v14 - v12, v38, 1, &v44, &v39, v37);
        if (v19 != -16774)
        {
          if (v19) {
            goto LABEL_28;
          }
        }
        if (v39) {
          break;
        }
LABEL_29:
        if (v46) {
          CFRelease(v46);
        }
        if (v39)
        {
          if (++v2 < *(_DWORD *)(v1 + 4)) {
            continue;
          }
        }
        goto LABEL_61;
      }
      *(_WORD *)&v38[16] = 0;
      unint64_t v20 = (unint64_t)*(double *)v37;
      *(_DWORD *)&v38[22] = 0;
      if (*(unsigned char *)(DerivedStorage + 236))
      {
        int v21 = *(_DWORD *)(DerivedStorage + 232);
      }
      else
      {
        if (*(unsigned char *)(DerivedStorage + 8)) {
          int v21 = (unint64_t)*(double *)v37;
        }
        else {
          int v21 = 0;
        }
        *(_DWORD *)(DerivedStorage + 232) = v21;
        *(unsigned char *)(DerivedStorage + 236) = 1;
      }
      *(_DWORD *)&v38[18] = v20 - v21;
      if (!APSTransportMessageSetAudioDataHeader()
        && !APSTransportMessageCreateReferencingBBufWithAudioDataLength())
      {
        if (!*(void *)(DerivedStorage + 192)) {
          goto LABEL_52;
        }
        if (!APSTransportMessageGetAudioAADPointer()
          && !CMBlockBufferGetDataPointer(v46, 0xAuLL, 0, 0, &dataPointerOut))
        {
          if (v12)
          {
            if (CMBlockBufferGetDataPointer(v46, v44 + 10, 0, 0, &v43)) {
              goto LABEL_28;
            }
            uint64_t v34 = v43;
          }
          else
          {
            uint64_t v34 = 0;
          }
          uint64_t v22 = *(void *)(DerivedStorage + 192);
          uint64_t v24 = v41;
          uint64_t v23 = v42;
          CFTypeRef v25 = dataPointerOut;
          uint64_t v26 = v44;
          uint64_t v27 = *(void *)(CMBaseObjectGetVTable() + 16);
          if (v27) {
            uint64_t v28 = v27;
          }
          else {
            uint64_t v28 = 0;
          }
          uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, char *, uint64_t, char *, uint64_t))(v28 + 16);
          if (v29 && !v29(v22, v23, v24, v25, v26, v25, v26, v34, v12))
          {
LABEL_52:
            uint64_t v30 = *(void *)(DerivedStorage + 200);
            long long v35 = *MEMORY[0x1E4F1F9F8];
            uint64_t v36 = *(void *)(MEMORY[0x1E4F1F9F8] + 16);
            if (!APMessageRingEnqueueMessageForSending(v30, v46, (uint64_t)&v35)) {
              goto LABEL_29;
            }
          }
        }
      }
LABEL_28:
      APSLogErrorAt();
      goto LABEL_29;
    }
LABEL_61:
    uint64_t v31 = CMBaseObjectGetDerivedStorage();
    if (gLogCategory_APAudioEngineCarPlay <= 30
      && (gLogCategory_APAudioEngineCarPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t NextUnsentMessage = APMessageRingGetNextUnsentMessage(*(void *)(v31 + 200), 0);
    if (NextUnsentMessage)
    {
      uint64_t v33 = NextUnsentMessage;
      do
      {
        (*(void (**)(void, uint64_t, uint64_t))(v31 + 224))(*(void *)(v31 + 208), 1734700576, v33);
        APMessageRingMarkMessageAsSent(*(void *)(v31 + 200), v33);
        uint64_t v33 = APMessageRingGetNextUnsentMessage(*(void *)(v31 + 200), 0);
      }
      while (v33);
    }
    if (gLogCategory_APAudioEngineCarPlay <= 30
      && (gLogCategory_APAudioEngineCarPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return kdebug_trace();
  }
  return result;
}

uint64_t APAudioSourceConduitCreate(uint64_t a1, long long *a2, void *a3)
{
  if (!a3)
  {
    APSLogErrorAt();
    return 4294950525;
  }
  FigEndpointAudioSourceGetClassID();
  uint64_t v5 = CMDerivedObjectCreate();
  if (v5)
  {
    uint64_t v13 = v5;
LABEL_17:
    APSLogErrorAt();
    return v13;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(unsigned char *)(DerivedStorage + 1) = 1;
  uint64_t v7 = *((void *)a2 + 4);
  long long v8 = *a2;
  *(_OWORD *)(DerivedStorage + 24) = a2[1];
  *(void *)(DerivedStorage + 40) = v7;
  *(_OWORD *)(DerivedStorage + 8) = v8;
  uint64_t v9 = MirroredRingBufferInit();
  if (v9)
  {
    uint64_t v13 = v9;
    goto LABEL_17;
  }
  uint64_t v10 = APSRingBufferFlushControllerInit();
  if (v10)
  {
    uint64_t v13 = v10;
    goto LABEL_17;
  }
  dispatch_semaphore_t v11 = dispatch_semaphore_create(1);
  *(void *)(DerivedStorage + 120) = v11;
  if (v11
    && (*(void *)(DerivedStorage + 192) = 0,
        *(void *)(DerivedStorage + 200) = 0,
        uint64_t v12 = FigSimpleMutexCreate(),
        (*(void *)(DerivedStorage + 208) = v12) != 0))
  {
    if (gLogCategory_APAudioSourceConduit <= 30
      && (gLogCategory_APAudioSourceConduit != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v13 = 0;
    *a3 = 0;
  }
  else
  {
    APSLogErrorAt();
    return 4294950526;
  }
  return v13;
}

uint64_t conduitsource_Invalidate()
{
  uint64_t DerivedStorage = (unsigned char *)CMBaseObjectGetDerivedStorage();
  if (!*DerivedStorage)
  {
    uint64_t v1 = DerivedStorage;
    if (gLogCategory_APAudioSourceConduit <= 30
      && (gLogCategory_APAudioSourceConduit != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    unsigned char *v1 = 1;
  }
  return 0;
}

uint64_t conduitsource_Finalize()
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  conduitsource_Invalidate();
  MirroredRingBufferFree();
  DerivedStorage[13] = 0;
  DerivedStorage[14] = 0;
  uint64_t v1 = DerivedStorage[15];
  if (v1)
  {
    dispatch_release(v1);
    DerivedStorage[15] = 0;
  }
  uint64_t result = DerivedStorage[26];
  if (result)
  {
    uint64_t result = FigSimpleMutexDestroy();
    DerivedStorage[26] = 0;
  }
  return result;
}

__CFString *conduitsource_CopyDebugDescription()
{
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppendFormat(Mutable, 0, @"<APAudioSourceConduit>");
  return Mutable;
}

uint64_t conduitsource_Resume()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioSourceConduit <= 30
    && (gLogCategory_APAudioSourceConduit != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  *(unsigned char *)(DerivedStorage + 1) = 0;
  *(void *)(DerivedStorage + 88) = 0;
  *(unsigned char *)(DerivedStorage + 96) = 0;
  *(void *)(DerivedStorage + 192) = 0;
  *(void *)(DerivedStorage + 200) = 0;
  return 0;
}

uint64_t conduitsource_Suspend()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioSourceConduit <= 30
    && (gLogCategory_APAudioSourceConduit != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  *(unsigned char *)(DerivedStorage + 1) = 1;
  return 0;
}

uint64_t conduitsource_Flush()
{
  CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioSourceConduit <= 30
    && (gLogCategory_APAudioSourceConduit != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v0 = APSRingBufferFlushControllerFlush();
  if (v0) {
    APSLogErrorAt();
  }
  return v0;
}

BOOL conduitsource_CanProduceBytes(uint64_t a1, unint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2 <= 1) {
    unint64_t v4 = 1;
  }
  else {
    unint64_t v4 = a2;
  }
  __dmb(0xBu);
  return v4 <= (*(_DWORD *)(DerivedStorage + 76) - *(_DWORD *)(DerivedStorage + 72));
}

uint64_t conduitsource_GetRingBuffer(uint64_t a1, void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2) {
    *a2 = *(void *)(DerivedStorage + 88)
  }
        + (*(_DWORD *)(DerivedStorage + 72) / *(_DWORD *)(DerivedStorage + 32));
  return DerivedStorage + 48;
}

uint64_t conduitsource_FillBuffer(uint64_t a1, void *a2, size_t a3, size_t *a4, void *a5, void *a6, uint64_t a7)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a7)
  {
    uint64_t v14 = DerivedStorage;
    unsigned int v15 = *(_DWORD *)(DerivedStorage + 72);
    size_t v16 = *(_DWORD *)(DerivedStorage + 76) - v15;
    if (v16)
    {
      if (v16 < a3) {
        a3 = *(_DWORD *)(DerivedStorage + 76) - v15;
      }
      memcpy(a2, (const void *)(*(void *)(DerivedStorage + 48) + (*(_DWORD *)(DerivedStorage + 68) & v15)), a3);
      *a4 = a3;
      unsigned int v17 = *(_DWORD *)(v14 + 32);
      uint64_t v18 = a3 / v17;
      *a5 = v18;
      unsigned int v19 = *(_DWORD *)(v14 + 72);
      if (a6) {
        *a6 = *(void *)(v14 + 88) + v19 / v17;
      }
      uint64_t result = 0;
      *(_DWORD *)(v14 + 72) = v19 + a3;
      *(void *)(v14 + 192) += v18;
    }
    else
    {
      APSLogErrorAt();
      return 4294950522;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294950525;
  }
  return result;
}

BOOL conduitsource_CanAcceptBytes()
{
  uint64_t DerivedStorage = (_DWORD *)CMBaseObjectGetDerivedStorage();
  __dmb(0xBu);
  return DerivedStorage[18] - DerivedStorage[19] + DerivedStorage[16] != 0;
}

uint64_t conduitsource_WriteBytes(uint64_t a1, const void *a2, size_t a3, uint64_t a4)
{
  if (a2)
  {
    uint64_t v4 = conduitsource_WriteDataInternal(a1, a2, a3, a4);
    if (v4) {
      APSLogErrorAt();
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294950525;
  }
  return v4;
}

uint64_t conduitsource_AcquireBuffer(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a3)
  {
    uint64_t v6 = DerivedStorage;
    if (*(unsigned char *)(DerivedStorage + 1))
    {
      APSLogErrorAt();
      return 4294950524;
    }
    else
    {
      unsigned int v7 = *(_DWORD *)(DerivedStorage + 76);
      if (*(_DWORD *)(DerivedStorage + 64) - v7 + *(_DWORD *)(DerivedStorage + 72) < a2)
      {
        return 4294950523;
      }
      else
      {
        uint64_t result = 0;
        *a3 = *(void *)(v6 + 48) + (*(_DWORD *)(v6 + 68) & v7);
      }
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294950525;
  }
  return result;
}

BOOL conduitsource_IsAcquiredBuffer(uint64_t a1, unint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
  {
    APSLogErrorAt();
    return 0;
  }
  if (*(void *)(DerivedStorage + 48) > a2) {
    return 0;
  }
  return *(void *)(DerivedStorage + 56) > a2;
}

uint64_t conduitsource_CommitBuffer(uint64_t a1, size_t a2, uint64_t a3)
{
  return conduitsource_WriteDataInternal(a1, 0, a2, a3);
}

uint64_t conduitsource_GetAudioFormat(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioSourceConduit <= 30
    && (gLogCategory_APAudioSourceConduit != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  long long v4 = *(_OWORD *)(DerivedStorage + 8);
  long long v5 = *(_OWORD *)(DerivedStorage + 24);
  *(void *)(a2 + 32) = *(void *)(DerivedStorage + 40);
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v5;
  return 0;
}

BOOL conduitsource_CanProducePackets(uint64_t a1, unint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2 <= 1) {
    uint64_t v4 = 1;
  }
  else {
    uint64_t v4 = a2;
  }
  unint64_t v5 = v4 * *(unsigned int *)(DerivedStorage + 28) * *(unsigned int *)(DerivedStorage + 32);
  uint64_t v6 = CMBaseObjectGetDerivedStorage();
  if (v5 <= 1) {
    unint64_t v7 = 1;
  }
  else {
    unint64_t v7 = v5;
  }
  __dmb(0xBu);
  return v7 <= (*(_DWORD *)(v6 + 76) - *(_DWORD *)(v6 + 72));
}

uint64_t conduitsource_FillComplexBuffer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (*(_DWORD *)(CMBaseObjectGetDerivedStorage() + 16) == 1819304813)
  {
    if (a9)
    {
      CMBaseObjectGetDerivedStorage();
      APSLogErrorAt();
      uint64_t v9 = 4294950525;
      APSLogErrorAt();
    }
    else
    {
      APSLogErrorAt();
      return 4294950525;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294950524;
  }
  return v9;
}

uint64_t conduitsource_SetWriteHandler(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 1))
  {
    uint64_t v6 = (void *)DerivedStorage;
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 208));
    v6[13] = a2;
    v6[14] = a3;
    MEMORY[0x1D25EB390](v6[26]);
    return 0;
  }
  else
  {
    APSLogErrorAt();
    return 4294950524;
  }
}

uint64_t conduitsource_PrepareForFlush()
{
  CMBaseObjectGetDerivedStorage();
  uint64_t v0 = APSRingBufferFlushControllerPrepareForFlush();
  if (v0) {
    APSLogErrorAt();
  }
  return v0;
}

uint64_t conduitsource_WriteDataInternal(uint64_t a1, const void *a2, size_t a3, uint64_t a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned char *)(DerivedStorage + 1))
  {
    APSLogErrorAt();
    return 4294950524;
  }
  uint64_t v8 = DerivedStorage;
  uint64_t v9 = *(void *)(DerivedStorage + 200);
  *(void *)(DerivedStorage + 88) = a4 - v9;
  if (a2)
  {
    unsigned int v10 = *(_DWORD *)(DerivedStorage + 76);
    unsigned int v11 = *(_DWORD *)(DerivedStorage + 64) - v10;
    if (v11 + *(_DWORD *)(DerivedStorage + 72) < a3) {
      a3 = v11 + *(_DWORD *)(DerivedStorage + 72);
    }
    memcpy((void *)(*(void *)(DerivedStorage + 48) + (*(_DWORD *)(DerivedStorage + 68) & v10)), a2, a3);
    __dmb(0xBu);
    uint64_t v9 = *(void *)(v8 + 200);
  }
  *(_DWORD *)(v8 + 76) += a3;
  *(void *)(v8 + 200) = v9 + a3 / *(unsigned int *)(v8 + 32);
  if (*(void *)(v8 + 104))
  {
    uint64_t result = FigSimpleMutexTryLock();
    if (!result) {
      return result;
    }
    (*(void (**)(size_t, uint64_t, void))(v8 + 104))(a3 / *(unsigned int *)(v8 + 32), a4, *(void *)(v8 + 112));
    MEMORY[0x1D25EB390](*(void *)(v8 + 208));
  }
  return 0;
}

uint64_t APAudioEngineRealTimeCreate(const __CFAllocator *a1, const void *a2, const __CFDictionary *a3, CFTypeRef *a4)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  unsigned int LatencyTier = 0;
  CMTimeValue value = 0;
  CFTypeRef cf = 0;
  if (!a4 || !a2) {
    goto LABEL_90;
  }
  CFDictionaryRef v5 = a3;
  if (!a3)
  {
    APSLogErrorAt();
LABEL_91:
    int v27 = -15481;
    goto LABEL_92;
  }
  if (gLogCategory_APAudioEngineRealTime <= 30
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  FigEndpointStreamAudioEngineGetClassID();
  unsigned int LatencyTier = CMDerivedObjectCreate();
  if (LatencyTier) {
    goto LABEL_95;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(_DWORD *)(DerivedStorage + 56) = -1;
  unsigned int LatencyTier = APSDispatchSectionCreate();
  if (LatencyTier) {
    goto LABEL_95;
  }
  uint64_t v9 = FigSimpleMutexCreate();
  *(void *)(DerivedStorage + 552) = v9;
  if (!v9)
  {
LABEL_82:
    APSLogErrorAt();
    CFDictionaryRef v5 = 0;
LABEL_84:
    int v27 = -15480;
LABEL_92:
    unsigned int LatencyTier = v27;
    goto LABEL_96;
  }
  CFDictionaryGetValueIfPresent(v5, @"streamType", (const void **)&value);
  uint64_t Int64 = CFDictionaryGetInt64();
  *(unsigned char *)(DerivedStorage + 16) = Int64 != 0;
  if (Int64)
  {
    *(void *)(DerivedStorage + 432) = @"SCR";
    *(void *)(DerivedStorage + 24) = CFStringCreateF();
    if (LatencyTier) {
      goto LABEL_95;
    }
    unsigned int v11 = "com.apple.airplay.rtae.scr.latencyms";
  }
  else if (FigCFEqual())
  {
    *(void *)(DerivedStorage + 432) = @"LLA";
    *(void *)(DerivedStorage + 24) = CFStringCreateF();
    if (LatencyTier) {
      goto LABEL_95;
    }
    unsigned int v11 = "com.apple.airplay.rtae.lla.latencyms";
  }
  else
  {
    *(void *)(DerivedStorage + 432) = @"HLA";
    *(void *)(DerivedStorage + 24) = CFStringCreateF();
    if (LatencyTier) {
      goto LABEL_95;
    }
    unsigned int v11 = "com.apple.airplay.rtae.hla.latencyms";
  }
  name = (char *)v11;
  SNPrintF();
  uint64_t v12 = FigDispatchQueueCreateWithPriority();
  *(void *)(DerivedStorage + 120) = v12;
  if (!v12
    || (*(unsigned char *)uint64_t DerivedStorage = 0,
        SNPrintF(),
        uint64_t v13 = FigDispatchQueueCreateWithPriority(),
        (*(void *)(DerivedStorage + 72) = v13) == 0))
  {
LABEL_94:
    APSLogErrorAt();
    CFDictionaryRef v5 = 0;
    unsigned int LatencyTier = APSSignalErrorAt();
    goto LABEL_96;
  }
  uint64_t v14 = value;
  if (value) {
    uint64_t v14 = (void *)CFRetain(value);
  }
  *(void *)(DerivedStorage + 8) = v14;
  uint64_t v15 = CFDictionaryGetInt64();
  if (LatencyTier) {
    goto LABEL_95;
  }
  unsigned int LatencyTier = realTimeAudioEngine_setTransportAudioFormatASBDInternal((uint64_t)cf, v15);
  if (LatencyTier) {
    goto LABEL_95;
  }
  if (gLogCategory_APAudioEngineRealTime <= 50
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  *(unsigned char *)(DerivedStorage + 32) = CFDictionaryGetInt64() != 0;
  *(void *)(DerivedStorage + 48) = 512;
  int IntWithDefault = APSSettingsGetIntWithDefault();
  *(_DWORD *)(DerivedStorage + 88) = IntWithDefault;
  *(unsigned char *)(DerivedStorage + 544) = 0;
  if (IntWithDefault)
  {
    SNPrintF();
    unsigned int v17 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_UTILITY, 0);
    dispatch_queue_t v18 = dispatch_queue_create(label, v17);
    *(void *)(DerivedStorage + 96) = v18;
    if (v18)
    {
      unsigned int LatencyTier = APSAudioIOAssertionTimingControllerCreate();
      if (!LatencyTier) {
        goto LABEL_32;
      }
LABEL_95:
      APSLogErrorAt();
      CFDictionaryRef v5 = 0;
      goto LABEL_96;
    }
    goto LABEL_94;
  }
LABEL_32:
  if (FigCFEqual() && !APSSettingsGetInt64())
  {
    LLA = (const void *)APSDynamicLatencyManagerGetLLA();
    if (LLA) {
      LLA = CFRetain(LLA);
    }
    *(void *)(DerivedStorage + 112) = LLA;
    APSGetPersistentGroupModel();
    unsigned int LatencyTier = APSDynamicLatencyManagerSetVariant();
    if (LatencyTier) {
      goto LABEL_95;
    }
    unsigned int LatencyTier = APSDynamicLatencyManagerGetLatencyTier();
    if (LatencyTier) {
      goto LABEL_95;
    }
    if (gLogCategory_APAudioEngineRealTime <= 50
      && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  else if (!FigCFDictionaryGetInt32IfPresent())
  {
LABEL_90:
    APSLogErrorAt();
    CFDictionaryRef v5 = 0;
    goto LABEL_91;
  }
  if (!FigCFDictionaryGetInt32IfPresent()
    || !FigCFDictionaryGetInt32IfPresent()
    || !FigCFDictionaryGetInt32IfPresent())
  {
    goto LABEL_90;
  }
  if (!FigCFDictionaryGetInt32IfPresent()) {
    goto LABEL_95;
  }
  *(_DWORD *)(DerivedStorage + 40) = APSSettingsGetIntWithDefault();
  if (gLogCategory_APAudioEngineRealTime <= 50
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  *(float *)(DerivedStorage + 132) = (float)0 / 1000.0;
  *(float *)(DerivedStorage + 136) = (float)0 / 1000.0;
  *(float *)(DerivedStorage + 140) = (float)0 / 1000.0;
  *(float *)(DerivedStorage + 144) = (float)0 / 1000.0;
  CFMutableSetRef Mutable = CFSetCreateMutable(a1, 0, MEMORY[0x1E4F1D548]);
  *(void *)(DerivedStorage + 152) = Mutable;
  if (!Mutable) {
    goto LABEL_82;
  }
  CFDictionaryRef v21 = (const __CFDictionary *)FigCFWeakReferenceHolderCreateWithReferencedObject();
  CFDictionaryRef v5 = v21;
  if (!v21)
  {
    APSLogErrorAt();
    goto LABEL_84;
  }
  uint64_t v22 = *(NSObject **)(DerivedStorage + 120);
  uint64_t v23 = (const void *)kAPAudioEngineRealTimeDispatchSpecificKey_WeakAudioEngineHolder;
  uint64_t v24 = (void *)CFRetain(v21);
  dispatch_queue_set_specific(v22, v23, v24, MEMORY[0x1E4F1C278]);
  unsigned int LatencyTier = APSRealTimeSignalCreate();
  if (!LatencyTier)
  {
    *(void *)(DerivedStorage + 64) = CFRetain(a2);
    if (*(unsigned char *)(DerivedStorage + 16) || FigCFEqual()) {
      int v25 = 5;
    }
    else {
      int v25 = 30;
    }
    unsigned int LatencyTier = APSRealTimeReadableCreate();
    if (!LatencyTier)
    {
      unsigned int LatencyTier = APSAtomicMessageQueueCreate();
      if (!LatencyTier)
      {
        unsigned int LatencyTier = realTimeAudioEngine_tas_Initialize(a1, DerivedStorage + 576, v25, *(const void **)(DerivedStorage + 352), *(const void **)(DerivedStorage + 360), (uint64_t)cf);
        if (!LatencyTier)
        {
          unsigned int LatencyTier = realTimeAudioEngine_initializeLogging();
          if (!LatencyTier)
          {
            if (IsAppleInternalBuild()) {
              notify_register_dispatch(name, (int *)(DerivedStorage + 56), *(dispatch_queue_t *)(DerivedStorage + 120), &__block_literal_global_11);
            }
            *a4 = cf;
            return LatencyTier;
          }
        }
      }
    }
    goto LABEL_95;
  }
  APSLogErrorAt();
LABEL_96:
  if (cf) {
    CFRelease(cf);
  }
  if (v5) {
    CFRelease(v5);
  }
  return LatencyTier;
}

uint64_t realTimeAudioEngine_setTransportAudioFormatASBDInternal(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2)
  {
    uint64_t v4 = DerivedStorage;
    long long v8 = 0u;
    uint64_t v5 = APAudioFormatToASBD();
    if (v5)
    {
      uint64_t v6 = v5;
      APSLogErrorAt();
    }
    else
    {
      if (FigCFEqual())
      {
        APAudioFormatGetLowLatencyAudioFramesPerPacket();
        DWORD1(v8) = FigGetCFPreferenceNumberWithDefault();
      }
      if (gLogCategory_APAudioEngineRealTime <= 50
        && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v6 = 0;
      *(_OWORD *)(v4 + 160) = 0u;
      *(_OWORD *)(v4 + 176) = v8;
      *(void *)(v4 + 192) = 0;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294951815;
  }
  return v6;
}

void realTimeAudioEngine_timeAnnounceWithResetSignalHandler()
{
  uint64_t v0 = FigCFWeakReferenceHolderCopyReferencedObject();
  if (v0)
  {
    uint64_t v1 = (const void *)v0;
    uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
    if (gLogCategory_APAudioEngineRealTime <= 50
      && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(DerivedStorage + 320) = 1;
    realTimeAudioEngine_handleTimeAnnounce();
    CFRelease(v1);
  }
}

uint64_t realTimeAudioEngine_tas_Initialize(const __CFAllocator *a1, uint64_t a2, int a3, const void *a4, const void *a5, uint64_t a6)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a5 || !a6)
  {
    APSLogErrorAt();
    return 4294950525;
  }
  uint64_t v13 = DerivedStorage;
  *(void *)a2 = a6;
  uint64_t v14 = *(const void **)(DerivedStorage + 24);
  if (!v14)
  {
    *(void *)(a2 + 8) = 0;
LABEL_8:
    APSLogErrorAt();
    return 4294951816;
  }
  CFTypeRef v15 = CFRetain(v14);
  *(void *)(a2 + 8) = v15;
  if (!v15) {
    goto LABEL_8;
  }
  BOOL v16 = FigCFEqual() && *(unsigned char *)(v13 + 16) == 0;
  *(unsigned char *)(a2 + 16) = v16;
  uint64_t v18 = FigSimpleMutexCreate();
  *(void *)(a2 + 88) = v18;
  if (!v18) {
    goto LABEL_8;
  }
  SNPrintF();
  uint64_t v19 = FigDispatchQueueCreateWithPriority();
  *(void *)(a2 + 104) = v19;
  if (!v19
    || (*(void *)(a2 + 264) = -1,
        *(void *)(a2 + 288) = 0,
        SNPrintF(),
        uint64_t v20 = FigDispatchQueueCreateWithPriority(),
        (*(void *)(a2 + 304) = v20) == 0))
  {
    APSLogErrorAt();
    return APSSignalErrorAt();
  }
  CFMutableSetRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 1, 0);
  *(void *)(a2 + 312) = Mutable;
  if (!Mutable) {
    goto LABEL_8;
  }
  CFArrayAppendValue(Mutable, (const void *)a2);
  uint64_t v22 = APSAtomicMessageQueueCreate();
  if (v22)
  {
    uint64_t v17 = v22;
LABEL_38:
    APSLogErrorAt();
    return v17;
  }
  CFRetain(*(CFTypeRef *)(a2 + 312));
  uint64_t v23 = APSRealTimeSignalCreate();
  if (v23)
  {
    uint64_t v17 = v23;
    goto LABEL_38;
  }
  CFMutableDictionaryRef v24 = CFDictionaryCreateMutable(a1, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  *(void *)(a2 + 336) = v24;
  if (!v24) {
    goto LABEL_8;
  }
  uint64_t v25 = APSRealTimeWritableCreate();
  if (v25)
  {
    uint64_t v17 = v25;
    goto LABEL_38;
  }
  CFDictionaryGetEmpty();
  uint64_t v26 = APSCFRealTimeReadableCreate();
  if (v26)
  {
    uint64_t v17 = v26;
    goto LABEL_38;
  }
  uint64_t v27 = APSAtomicMessageQueueCreate();
  if (v27)
  {
    uint64_t v17 = v27;
    goto LABEL_38;
  }
  *(void *)(a2 + 64) = CFRetain(a4);
  *(void *)(a2 + 32) = CFRetain(a5);
  *(_DWORD *)(a2 + 40) = a3;
  *(unsigned char *)(a2 + 80) = FigCFEqual() == 0;
  if (!APSSettingsGetIntWithDefault()) {
    return 0;
  }
  if (gLogCategory_APAudioEngineRealTime <= 50
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v17 = 0;
  *(unsigned char *)(a2 + 80) = 0;
  return v17;
}

uint64_t realTimeAudioEngine_initializeLogging()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFMutableSetRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F4A1F8], @"Histogram_TimeLostOnSenderToTxPacket");
  CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F4A200], @"ms");
  FigCFDictionarySetDouble();
  FigCFDictionarySetDouble();
  FigCFDictionarySetInt32();
  uint64_t v2 = APSStatsHistogramCreate();
  *(void *)(DerivedStorage + 368) = v2;
  if (!v2)
  {
    APSLogErrorAt();
    uint64_t v7 = 4294951816;
    if (!Mutable) {
      return v7;
    }
    goto LABEL_3;
  }
  unsigned int CFPreferenceNumberWithDefault = FigGetCFPreferenceNumberWithDefault();
  CMTimeMake(&v10, CFPreferenceNumberWithDefault, 1000);
  *(CMTime *)(DerivedStorage + 448) = v10;
  uint64_t v4 = MEMORY[0x1E4F1FA08];
  long long v9 = *MEMORY[0x1E4F1FA08];
  *(_OWORD *)(DerivedStorage + 472) = *MEMORY[0x1E4F1FA08];
  uint64_t v5 = *(void *)(v4 + 16);
  *(void *)(DerivedStorage + 488) = v5;
  unsigned int v6 = FigGetCFPreferenceNumberWithDefault();
  CMTimeMake(&v10, v6, 1000);
  uint64_t v7 = 0;
  *(CMTime *)(DerivedStorage + 496) = v10;
  *(_OWORD *)(DerivedStorage + 520) = v9;
  *(void *)(DerivedStorage + 536) = v5;
  if (Mutable) {
LABEL_3:
  }
    CFRelease(Mutable);
  return v7;
}

void __APAudioEngineRealTimeCreate_block_invoke(uint64_t a1, int a2)
{
  specifiCC_SHA1_CTX c = dispatch_get_specific((const void *)kAPAudioEngineRealTimeDispatchSpecificKey_WeakAudioEngineHolder);
  uint64_t state64 = 0;
  notify_get_state(a2, &state64);
  if (specific)
  {
    uint64_t v4 = state64;
    uint64_t v5 = FigCFWeakReferenceHolderCopyReferencedObject();
    if (v5)
    {
      unsigned int v6 = (const void *)v5;
      float v7 = (double)v4 / 1000.0;
      CMBaseObjectGetDerivedStorage();
      if (gLogCategory_APAudioEngineRealTime <= 50
        && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      realTimeAudioEngine_setAudioLatency(v7);
      CFRelease(v6);
    }
  }
  else
  {
    APSLogErrorAt();
  }
}

uint64_t realTimeAudioEngine_setAudioLatency(float a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioEngineRealTime <= 50
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  *(float *)(DerivedStorage + 132) = a1;
  CMNotificationCenterGetDefaultLocalCenter();
  return FigDispatchAsyncPostNotification();
}

void FigCFRelease(CFTypeRef cf)
{
  if (cf) {
    CFRelease(cf);
  }
}

void realTimeAudioEngine_Finalize(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFNumberRef v3 = *(const void **)(DerivedStorage + 24);
  if (v3) {
    CFTypeRef v4 = CFRetain(v3);
  }
  else {
    CFTypeRef v4 = 0;
  }
  uint64_t v5 = *(const void **)(DerivedStorage + 152);
  if (v5)
  {
    CFRelease(v5);
    *(void *)(DerivedStorage + 152) = 0;
  }
  realTimeAudioEngine_removeStreamNotificationListeners(a1, *(void *)(DerivedStorage + 216));
  unsigned int v6 = *(NSObject **)(DerivedStorage + 336);
  if (v6)
  {
    dispatch_source_cancel(v6);
    if (!*(unsigned char *)(DerivedStorage + 344)) {
      dispatch_resume(*(dispatch_object_t *)(DerivedStorage + 336));
    }
    float v7 = *(NSObject **)(DerivedStorage + 336);
    if (v7)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(DerivedStorage + 336));
      dispatch_release(v7);
      *(void *)(DerivedStorage + 336) = 0;
    }
  }
  uint64_t v8 = *(void *)(DerivedStorage + 208);
  if (v8)
  {
    uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v9) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    unsigned int v11 = *(void (**)(uint64_t))(v10 + 16);
    if (v11) {
      v11(v8);
    }
    uint64_t v12 = *(void *)(DerivedStorage + 208);
    uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v13) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    CFTypeRef v15 = *(void (**)(uint64_t, void, void))(v14 + 120);
    if (v15) {
      v15(v12, 0, 0);
    }
  }
  BOOL v16 = *(const void **)(DerivedStorage + 240);
  if (v16)
  {
    CFRelease(v16);
    *(void *)(DerivedStorage + 240) = 0;
  }
  uint64_t v17 = *(const void **)(DerivedStorage + 216);
  if (v17)
  {
    CFRelease(v17);
    *(void *)(DerivedStorage + 216) = 0;
  }
  uint64_t v18 = *(const void **)(DerivedStorage + 224);
  if (v18)
  {
    CFRelease(v18);
    *(void *)(DerivedStorage + 224) = 0;
  }
  uint64_t v19 = *(const void **)(DerivedStorage + 280);
  if (v19)
  {
    CFRelease(v19);
    *(void *)(DerivedStorage + 280) = 0;
  }
  uint64_t v20 = *(const void **)(DerivedStorage + 288);
  if (v20)
  {
    CFRelease(v20);
    *(void *)(DerivedStorage + 288) = 0;
  }
  CFDictionaryRef v21 = *(const void **)(DerivedStorage + 208);
  if (v21)
  {
    CFRelease(v21);
    *(void *)(DerivedStorage + 208) = 0;
  }
  uint64_t v22 = *(const void **)(DerivedStorage + 200);
  if (v22)
  {
    CFRelease(v22);
    *(void *)(DerivedStorage + 200) = 0;
  }
  uint64_t v23 = *(const void **)(DerivedStorage + 232);
  if (v23)
  {
    CFRelease(v23);
    *(void *)(DerivedStorage + 232) = 0;
  }
  CFMutableDictionaryRef v24 = *(const void **)(DerivedStorage + 264);
  if (v24)
  {
    CFRelease(v24);
    *(void *)(DerivedStorage + 264) = 0;
  }
  uint64_t v25 = *(const void **)(DerivedStorage + 272);
  if (v25)
  {
    CFRelease(v25);
    *(void *)(DerivedStorage + 272) = 0;
  }
  uint64_t v26 = *(const void **)(DerivedStorage + 8);
  if (v26)
  {
    CFRelease(v26);
    *(void *)(DerivedStorage + 8) = 0;
  }
  uint64_t v27 = *(const void **)(DerivedStorage + 24);
  if (v27)
  {
    CFRelease(v27);
    *(void *)(DerivedStorage + 24) = 0;
  }
  uint64_t v28 = *(const void **)(DerivedStorage + 64);
  if (v28)
  {
    CFRelease(v28);
    *(void *)(DerivedStorage + 64) = 0;
  }
  uint64_t v29 = *(NSObject **)(DerivedStorage + 96);
  if (v29)
  {
    dispatch_release(v29);
    *(void *)(DerivedStorage + 96) = 0;
  }
  uint64_t v30 = *(const void **)(DerivedStorage + 104);
  if (v30)
  {
    CFRelease(v30);
    *(void *)(DerivedStorage + 104) = 0;
  }
  uint64_t v31 = *(const void **)(DerivedStorage + 112);
  if (v31)
  {
    CFRelease(v31);
    *(void *)(DerivedStorage + 112) = 0;
  }
  CFTypeRef v32 = *(const void **)(DerivedStorage + 352);
  if (v32)
  {
    CFRelease(v32);
    *(void *)(DerivedStorage + 352) = 0;
  }
  uint64_t v33 = *(const void **)(DerivedStorage + 360);
  if (v33)
  {
    CFRelease(v33);
    *(void *)(DerivedStorage + 360) = 0;
  }
  uint64_t v34 = *(const void **)(DerivedStorage + 368);
  if (v34)
  {
    CFRelease(v34);
    *(void *)(DerivedStorage + 368) = 0;
  }
  long long v35 = *(const void **)(DerivedStorage + 328);
  if (v35)
  {
    CFRelease(v35);
    *(void *)(DerivedStorage + 328) = 0;
  }
  uint64_t v36 = *(const void **)(DerivedStorage + 560);
  if (v36)
  {
    CFRelease(v36);
    *(void *)(DerivedStorage + 560) = 0;
  }
  CFTypeRef v37 = *(const void **)(DerivedStorage + 568);
  if (v37)
  {
    CFRelease(v37);
    *(void *)(DerivedStorage + 568) = 0;
  }
  FigSimpleMutexDestroy();
  *(void *)(DerivedStorage + 552) = 0;
  uint64_t v38 = *(const void **)(DerivedStorage + 80);
  if (v38)
  {
    CFRelease(v38);
    *(void *)(DerivedStorage + 80) = 0;
  }
  int v39 = *(_DWORD *)(DerivedStorage + 56);
  if (v39 != -1)
  {
    notify_cancel(v39);
    *(_DWORD *)(DerivedStorage + 56) = -1;
  }
  uint64_t v40 = *(NSObject **)(DerivedStorage + 120);
  if (v40)
  {
    dispatch_release(v40);
    *(void *)(DerivedStorage + 120) = 0;
  }
  uint64_t v41 = *(NSObject **)(DerivedStorage + 72);
  if (v41)
  {
    dispatch_release(v41);
    *(void *)(DerivedStorage + 72) = 0;
  }
  uint64_t v42 = *(const void **)(DerivedStorage + 912);
  if (v42)
  {
    CFRelease(v42);
    *(void *)(DerivedStorage + 912) = 0;
  }
  long long v43 = *(const void **)(DerivedStorage + 640);
  if (v43)
  {
    CFRelease(v43);
    *(void *)(DerivedStorage + 640) = 0;
  }
  uint64_t v44 = *(const void **)(DerivedStorage + 600);
  if (v44)
  {
    CFRelease(v44);
    *(void *)(DerivedStorage + 600) = 0;
  }
  uint64_t v45 = *(const void **)(DerivedStorage + 608);
  if (v45)
  {
    CFRelease(v45);
    *(void *)(DerivedStorage + 608) = 0;
  }
  long long v46 = *(const void **)(DerivedStorage + 584);
  if (v46)
  {
    CFRelease(v46);
    *(void *)(DerivedStorage + 584) = 0;
  }
  if (*(void *)(DerivedStorage + 888))
  {
    dispatch_sync_f(*(dispatch_queue_t *)(DerivedStorage + 880), (void *)(DerivedStorage + 576), (dispatch_function_t)realTimeAudioEngine_tas_hosesInvalidateAllMessages);
    uint64_t v47 = *(const void **)(DerivedStorage + 888);
    if (v47)
    {
      CFRelease(v47);
      *(void *)(DerivedStorage + 888) = 0;
    }
  }
  CFTypeRef v48 = *(const void **)(DerivedStorage + 896);
  if (v48)
  {
    CFRelease(v48);
    *(void *)(DerivedStorage + 896) = 0;
  }
  uint64_t v49 = *(const void **)(DerivedStorage + 904);
  if (v49)
  {
    CFRelease(v49);
    *(void *)(DerivedStorage + 904) = 0;
  }
  CFRange v50 = *(const void **)(DerivedStorage + 856);
  if (v50)
  {
    CFRelease(v50);
    *(void *)(DerivedStorage + 856) = 0;
  }
  int v51 = *(const void **)(DerivedStorage + 712);
  if (v51)
  {
    CFRelease(v51);
    *(void *)(DerivedStorage + 712) = 0;
  }
  uint64_t v52 = *(NSObject **)(DerivedStorage + 880);
  if (v52)
  {
    dispatch_release(v52);
    *(void *)(DerivedStorage + 880) = 0;
  }
  double v53 = *(NSObject **)(DerivedStorage + 680);
  if (v53)
  {
    dispatch_release(v53);
    *(void *)(DerivedStorage + 680) = 0;
  }
  FigSimpleMutexDestroy();
  if (gLogCategory_APAudioEngineRealTime <= 50
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (v4)
  {
    CFRelease(v4);
  }
}

__CFString *realTimeAudioEngine_CopyDebugDescription()
{
  CFMutableSetRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppendFormat(Mutable, 0, @"<APAudioEngineRealTime>");
  return Mutable;
}

uint64_t realTimeAudioEngine_CopyProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioEngineRealTime <= 30
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a2 && a4)
  {
    uint64_t v6 = APSDispatchSyncTask();
    if (v6) {
      APSLogErrorAt();
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294951815;
  }
  return v6;
}

uint64_t realTimeAudioEngine_SetProperty(uint64_t a1, uint64_t a2, const __CFDictionary *a3)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  CFDictionaryRef v22 = a3;
  if (gLogCategory_APAudioEngineRealTime <= 30
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!a2) {
    goto LABEL_16;
  }
  if (FigCFEqual())
  {
    CMTimeMakeFromDictionary(&v18, a3);
    CMTimeValue value = v18.value;
    CMTimeFlags flags = v18.flags;
    CMTimeScale timescale = v18.timescale;
    if ((v18.flags & 0x1D) == 1)
    {
      CMTimeEpoch epoch = v18.epoch;
      uint64_t v9 = *(const void **)(DerivedStorage + 272);
      uint64_t v10 = *(const void **)(DerivedStorage + 280);
      time.CMTimeValue value = value;
      time.CMTimeScale timescale = timescale;
      time.CMTimeFlags flags = v18.flags;
      time.CMTimeEpoch epoch = v18.epoch;
      CMSyncConvertTime(&v18, &time, v9, v10);
      long long v19 = *(_OWORD *)&v18.timescale;
      int32_t v11 = (int)*(double *)(DerivedStorage + 160);
      CMTime time = v18;
      CMTimeConvertScale(&v18, &time, v11, kCMTimeRoundingMethod_RoundHalfAwayFromZero);
      CMTimeValue v12 = v18.value;
      long long v19 = *(_OWORD *)&v18.timescale;
      if (gLogCategory_APAudioEngineRealTime <= 50
        && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
      {
        v18.CMTimeValue value = value;
        v18.CMTimeScale timescale = timescale;
        v18.CMTimeFlags flags = flags;
        v18.CMTimeEpoch epoch = epoch;
        CMTimeGetSeconds(&v18);
        CMTimebaseGetTime(&v16, *(CMTimebaseRef *)(DerivedStorage + 272));
        CMTimeGetSeconds(&v16);
        v18.CMTimeValue value = v12;
        *(_OWORD *)&v18.CMTimeScale timescale = v19;
        CMTimeGetSeconds(&v18);
        CMTimebaseGetTime(&v15, *(CMTimebaseRef *)(DerivedStorage + 280));
        CMTimeGetSeconds(&v15);
        LogPrintF();
      }
      uint64_t v13 = 0;
      *(void *)(DerivedStorage + 840) = v12;
      return v13;
    }
LABEL_16:
    APSLogErrorAt();
    return 4294951815;
  }
  uint64_t v13 = APSDispatchSyncTask();
  if (v13) {
    APSLogErrorAt();
  }
  return v13;
}

uint64_t realTimeAudioEngine_removeStreamNotificationListeners(uint64_t result, uint64_t a2)
{
  if (result && a2)
  {
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
    CMNotificationCenterGetDefaultLocalCenter();
    return FigNotificationCenterRemoveWeakListener();
  }
  return result;
}

uint64_t realTimeAudioEngine_PerformanceReportNotificationListener(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a5)
  {
    uint64_t result = *(void *)(DerivedStorage + 112);
    if (result)
    {
      uint64_t result = APSDynamicLatencyManagerAddPerformanceReport();
      if (result)
      {
        return APSLogErrorAt();
      }
    }
  }
  else
  {
    uint64_t result = APSLogErrorAt();
    if (gLogCategory_APAudioEngineRealTime <= 90)
    {
      if (gLogCategory_APAudioEngineRealTime != -1) {
        return LogPrintF();
      }
      uint64_t result = _LogCategory_Initialize();
      if (result) {
        return LogPrintF();
      }
    }
  }
  return result;
}

void realTimeAudioEngine_GlitchReportNotificationListener(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const __CFDictionary *a5)
{
  CMBaseObjectGetDerivedStorage();
  if (a5)
  {
    int v36 = 0;
    uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
    uint64_t v8 = mach_absolute_time();
    CFTypeRef cf = 0;
    CFStringGetTypeID();
    CFDictionaryGetTypedValue();
    if (!FigCFEqual())
    {
LABEL_62:
      CFMutableDictionaryRef v24 = 0;
      CFStringRef v23 = 0;
      goto LABEL_63;
    }
    uint64_t Int64 = CFDictionaryGetInt64();
    if (FigCFEqual())
    {
      if (Int64)
      {
        if (gLogCategory_APAudioEngineRealTime <= 50
          && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        realTimeAudioEngine_updateDynamicLatencyIfNeeded(a2, 1);
        int IntWithDefault = APSSettingsGetIntWithDefault();
        unsigned int v11 = APSSettingsGetIntWithDefault();
        unint64_t v12 = atomic_load((unint64_t *)&realTimeAudioEngine_maybeTriggerTTRForLowLatencyAudioGlitch_sNextSevereTTRTicks);
        if (!IntWithDefault && v12 > v8)
        {
          if (gLogCategory_APAudioEngineRealTime > 50
            || gLogCategory_APAudioEngineRealTime == -1 && !_LogCategory_Initialize())
          {
            goto LABEL_62;
          }
          UpTicksToSeconds();
          goto LABEL_17;
        }
        if (CFDictionaryContainsKey(a5, (const void *)*MEMORY[0x1E4F4A0B0]) && !CFDictionaryGetInt64())
        {
          if (gLogCategory_APAudioEngineRealTime <= 50
            && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          uint64_t v31 = *(void *)(DerivedStorage + 216);
          uint64_t v32 = *(void *)(CMBaseObjectGetVTable() + 16);
          if (v32) {
            uint64_t v33 = v32;
          }
          else {
            uint64_t v33 = 0;
          }
          uint64_t v34 = *(void (**)(uint64_t, __CFString *, const __CFDictionary *))(v33 + 40);
          if (v34) {
            v34(v31, @"EnableReceiverCoreCapture", a5);
          }
          goto LABEL_62;
        }
        uint64_t v13 = *(void *)(DerivedStorage + 216);
        uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v14) {
          uint64_t v15 = v14;
        }
        else {
          uint64_t v15 = 0;
        }
        CMTime v16 = *(void (**)(uint64_t, __CFString *, const __CFDictionary *))(v15 + 40);
        if (v16) {
          v16(v13, @"TriggerReceiverCoreCapture", a5);
        }
        uint64_t v17 = *(void *)(DerivedStorage + 216);
        uint64_t v18 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v18) {
          uint64_t v19 = v18;
        }
        else {
          uint64_t v19 = 0;
        }
        uint64_t v20 = *(void (**)(uint64_t, __CFString *, const __CFDictionary *))(v19 + 40);
        if (v20) {
          v20(v17, @"TriggerSenderCoreCapture", a5);
        }
        unsigned __int16 Int64Ranged = CFDictionaryGetInt64Ranged();
        uint64_t v22 = *MEMORY[0x1E4F1CF80];
        CFStringRef v23 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, @"TTR: Low Latency Audio %s RTPSeqNum=%u", "SEVERE Glitches", Int64Ranged);
        if (!v23)
        {
          APSLogErrorAt();
          CFMutableDictionaryRef v24 = 0;
          int v36 = -16761;
          goto LABEL_63;
        }
        CFDictionaryGetInt64Ranged();
        CFStringGetTypeID();
        CFDictionaryGetTypedValue();
        CFMutableDictionaryRef v24 = (const void *)CFStringCreateF();
        if (*(void *)(DerivedStorage + 216))
        {
          uint64_t CMBaseObject = FigEndpointStreamGetCMBaseObject();
          uint64_t v26 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v26) {
            uint64_t v27 = v26;
          }
          else {
            uint64_t v27 = 0;
          }
          uint64_t v28 = *(uint64_t (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v27 + 48);
          if (v28)
          {
            int v36 = v28(CMBaseObject, @"EndpointIDs", v22, &cf);
            if (!v36) {
              goto LABEL_44;
            }
          }
          else
          {
            int v36 = -12782;
          }
          APSLogErrorAt();
LABEL_63:
          if (cf) {
            CFRelease(cf);
          }
          if (v24) {
            CFRelease(v24);
          }
          if (v23) {
            CFRelease(v23);
          }
          return;
        }
LABEL_44:
        uint64_t v29 = UpTicksPerSecond();
        unint64_t v30 = v12;
        atomic_compare_exchange_strong(&realTimeAudioEngine_maybeTriggerTTRForLowLatencyAudioGlitch_sNextSevereTTRTicks, &v30, v8 + v29 * v11);
        if (v30 == v12)
        {
          if (!IntWithDefault)
          {
            if (gLogCategory_APAudioEngineRealTime <= 50
              && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            APSTapToRadarInvoke();
          }
        }
        else if (gLogCategory_APAudioEngineRealTime <= 50 {
               && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
        }
        {
          LogPrintF();
        }
        goto LABEL_63;
      }
      if (gLogCategory_APAudioEngineRealTime > 50
        || gLogCategory_APAudioEngineRealTime == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_62;
      }
    }
    else if (gLogCategory_APAudioEngineRealTime > 50 {
           || gLogCategory_APAudioEngineRealTime == -1 && !_LogCategory_Initialize())
    }
    {
      goto LABEL_62;
    }
LABEL_17:
    LogPrintF();
    goto LABEL_62;
  }
  APSLogErrorAt();
  if (gLogCategory_APAudioEngineRealTime <= 90
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

uint64_t realTimeAudioEngine_updateDynamicLatencyIfNeeded(uint64_t a1, int a2)
{
  uint64_t result = *(void *)(CMBaseObjectGetDerivedStorage() + 112);
  if (result)
  {
    if (a2)
    {
      uint64_t result = APSDynamicLatencyManagerReset();
      if (result) {
        return APSLogErrorAt();
      }
    }
    else
    {
      uint64_t result = APSDynamicLatencyManagerUpdate();
      if (result) {
        return APSLogErrorAt();
      }
    }
  }
  return result;
}

uint64_t realTimeAudioEngine_tas_hosesInvalidateAllMessages(uint64_t a1)
{
  CFArrayRemoveAllValues(*(CFMutableArrayRef *)(a1 + 312));
  do
    uint64_t result = APSAtomicMessageQueueReadMessage();
  while (result);
  return result;
}

uint64_t realTimeAudioEngine_copyPropertyDispatch(void *a1)
{
  uint64_t v1 = (const void *)a1[1];
  CFAllocatorRef v2 = (const __CFAllocator *)a1[2];
  CFNumberRef v3 = (void *)a1[3];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!v1 || !v3)
  {
    APSLogErrorAt();
    return 4294951815;
  }
  uint64_t v5 = DerivedStorage;
  if (CFEqual(v1, @"audioLatencyMs"))
  {
    uint64_t SInt32 = FigCFNumberCreateSInt32();
    *CFNumberRef v3 = SInt32;
    if (!SInt32) {
      goto LABEL_17;
    }
    return 0;
  }
  if (!CFEqual(v1, @"outputLatency"))
  {
    if (!CFEqual(v1, @"currentRTPTime")) {
      return 4294954509;
    }
    uint64_t v9 = CMBaseObjectGetDerivedStorage();
    CMTime time = *(CMTime *)*(void *)&MEMORY[0x1E4F1F9F8];
    if (!*(unsigned char *)v9)
    {
      uint64_t v10 = v9;
      double v11 = *(double *)(v9 + 160);
      APSRealTimeWritableRead();
      if (time.value)
      {
        CMTimeMake(&rhs, (uint64_t)(float)(*(float *)(v10 + 132) * (float)(int)v11), (int)v11);
        CMTime v14 = time;
        CMTimeSubtract(&v16, &v14, &rhs);
        CMTime time = v16;
      }
    }
    CMTime v16 = time;
    CFDictionaryRef v12 = CMTimeCopyAsDictionary(&v16, v2);
    if (v12)
    {
      CFDictionaryRef v13 = v12;
      uint64_t result = 0;
      *CFNumberRef v3 = v13;
      return result;
    }
    goto LABEL_17;
  }
  CMTimeMake(&time, (uint64_t)(float)((float)(*(float *)(v5 + 132) + *(float *)(v5 + 144)) * 1000.0), 1000);
  CFDictionaryRef v7 = CMTimeCopyAsDictionary(&time, v2);
  *CFNumberRef v3 = v7;
  if (v7) {
    return 0;
  }
LABEL_17:
  APSLogErrorAt();
  return 4294951816;
}

uint64_t realTimeAudioEngine_setPropertyDispatchSync()
{
  return 4294954509;
}

__CFString *realTimeAudioEngine_audioHoseProtocolCopyDebugDescription(uint64_t a1)
{
  CFMutableSetRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppendFormat(Mutable, 0, @"APAudioEngineRealTime <APSEndpointStreamAudioHoseRegistrarProtocol> on <%p>", a1);
  return Mutable;
}

uint64_t realTimeAudioEngine_audioHoseRegistrarRegisterHose(const void *a1, const void *a2, const void *a3, void *a4)
{
  CMBaseObjectGetDerivedStorage();
  if (a2)
  {
    if (a1) {
      CFRetain(a1);
    }
    CFRetain(a2);
    if (a3) {
      CFRetain(a3);
    }
    APSDispatchAsyncFHelper();
    uint64_t result = 0;
    *a4 = &realTimeAudioEngine_audioHoseRegistrarRegisterHose_callbacks;
  }
  else
  {
    APSLogErrorAt();
    return 4294951815;
  }
  return result;
}

uint64_t realTimeAudioEngine_audioHoseRegistrarDeregisterHose(const void *a1, const void *a2, const void *a3)
{
  if (a2)
  {
    if (a1) {
      CFRetain(a1);
    }
    CFRetain(a2);
    if (a3) {
      CFRetain(a3);
    }
    APSDispatchAsyncFHelper();
    return 0;
  }
  else
  {
    APSLogErrorAt();
    return 4294951815;
  }
}

uint64_t realTimeAudioEngine_CopyMessageAtSequenceNumber(uint64_t a1, unsigned int a2, void *a3)
{
  unsigned int v12 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a3)
  {
    APSLogErrorAt();
    return 4294951815;
  }
  uint64_t v6 = DerivedStorage;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 552));
  CFDictionaryRef v7 = *(const void **)(v6 + 560);
  if (!v7)
  {
    MEMORY[0x1D25EB390](*(void *)(v6 + 552));
    return 0;
  }
  uint64_t v8 = CFRetain(v7);
  MEMORY[0x1D25EB390](*(void *)(v6 + 552));
  if (!v8) {
    return 0;
  }
  MessageAtSequenceNumber = (const void *)APMessageRingGetMessageAtSequenceNumber(v8, a2, 0, &v12);
  uint64_t v10 = MessageAtSequenceNumber;
  if (MessageAtSequenceNumber) {
    CFRetain(MessageAtSequenceNumber);
  }
  *a3 = v10;
  CFRelease(v8);
  return v12;
}

uint64_t realTimeAudioEngine_TriggerTimeAnnounce(const void *a1)
{
  CFAllocatorRef v2 = *(NSObject **)(CMBaseObjectGetDerivedStorage() + 120);
  if (a1) {
    CFNumberRef v3 = (void *)CFRetain(a1);
  }
  else {
    CFNumberRef v3 = 0;
  }
  dispatch_async_f(v2, v3, (dispatch_function_t)realTimeAudioEngine_triggerTimeAnnounceInternal);
  return 0;
}

void realTimeAudioEngine_audioHoseRegistrarRegisterHoseDispatchInternal(uint64_t a1)
{
  CFAllocatorRef v2 = *(const void **)(a1 + 8);
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioEngineRealTime <= 50
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    CFSetGetCount(*(CFSetRef *)(DerivedStorage + 152));
    LogPrintF();
  }
  if (CFSetContainsValue(*(CFSetRef *)(DerivedStorage + 152), v2))
  {
    APSLogErrorAt();
    APSSignalErrorAt();
  }
  else
  {
    if (APSGetFBOPropertyInt64()) {
      APSSettingsGetIntWithDefault();
    }
    if (APSDispatchSyncTask())
    {
      APSLogErrorAt();
      APSLogErrorAt();
    }
    else
    {
      CFSetAddValue(*(CFMutableSetRef *)(DerivedStorage + 152), v2);
      realTimeAudioEngine_updateArrivalToRenderTicks();
      realTimeAudioEngine_updateCryptor();
      *(unsigned char *)(DerivedStorage + 321) = 1;
      realTimeAudioEngine_handleTimeAnnounce();
      if (CFDictionaryGetInt64())
      {
        *(unsigned char *)(DerivedStorage + 544) = 1;
        CFSetApplyFunction(*(CFSetRef *)(DerivedStorage + 152), (CFSetApplierFunction)realTimeAudioEngine_setEchoCancellationIsEnabledToHose, (void *)(DerivedStorage + 544));
      }
      if (*(unsigned char *)(DerivedStorage + 544))
      {
        uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 8);
        uint64_t v5 = v4 ? v4 : 0;
        uint64_t v6 = *(void (**)(const void *, void, void))(v5 + 56);
        if (v6) {
          v6(v2, *MEMORY[0x1E4F49FB0], *MEMORY[0x1E4F1CFD0]);
        }
      }
      if (gLogCategory_APAudioEngineRealTime <= 50
        && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
      {
        CFSetGetCount(*(CFSetRef *)(DerivedStorage + 152));
        LogPrintF();
      }
      unsigned int Count = CFSetGetCount(*(CFSetRef *)(DerivedStorage + 152));
      *(_DWORD *)(DerivedStorage + 408) = Count;
      if (*(_DWORD *)(DerivedStorage + 412) < Count) {
        *(_DWORD *)(DerivedStorage + 412) = Count;
      }
    }
  }
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
  uint64_t v8 = *(const void **)(a1 + 8);
  if (v8) {
    CFRelease(v8);
  }
  uint64_t v9 = *(const void **)(a1 + 16);
  if (v9) {
    CFRelease(v9);
  }
}

void realTimeAudioEngine_triggerTimeAnnounceInternal(const void *a1)
{
  *(unsigned char *)(CMBaseObjectGetDerivedStorage() + 321) = 1;
  realTimeAudioEngine_handleTimeAnnounce();
  if (a1)
  {
    CFRelease(a1);
  }
}

uint64_t realTimeAudioEngine_handleTimeAnnounce()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CMTime v35 = *(CMTime *)*(void *)&MEMORY[0x1E4F1F9F8];
  CMTimeEpoch v32 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  CFTypeRef cf = 0;
  CMBlockBufferRef blockBufferOut = 0;
  uint64_t v29 = 0;
  long long context = 0u;
  long long v28 = 0u;
  kdebug_trace();
  if (!*(unsigned char *)DerivedStorage)
  {
    double v1 = *(double *)(DerivedStorage + 160);
    HostTimeClocCFIndex k = CMClockGetHostTimeClock();
    CMClockGetTime(&v35, HostTimeClock);
    CMTime time1 = v35;
    CMTime time2 = *(CMTime *)(DerivedStorage + 296);
    if (CMTimeCompare(&time1, &time2) > 0 || *(unsigned char *)(DerivedStorage + 320))
    {
      CMTimeMake(&rhs, 1, 1);
      CMTime time2 = v35;
      CMTimeAdd(&time1, &time2, &rhs);
      *(CMTime *)(DerivedStorage + 296) = time1;
    }
    else if (!*(unsigned char *)(DerivedStorage + 321))
    {
      goto LABEL_42;
    }
    CMClockRef v3 = CMClockGetHostTimeClock();
    uint64_t v4 = *(const void **)(DerivedStorage + 288);
    CMTime time2 = v35;
    CMSyncConvertTime(&time1, &time2, v3, v4);
    CMTime time2 = time1;
    CMTimeConvertScale(&time1, &time2, (int)v1, kCMTimeRoundingMethod_RoundHalfAwayFromZero);
    if ((time1.flags & 0x1D) == 1
      && (int v5 = time1.value,
          CFDictionaryRef v7 = *(const void **)(DerivedStorage + 280),
          uint64_t v6 = *(const void **)(DerivedStorage + 288),
          CMTime time2 = time1,
          CMSyncConvertTime(&time1, &time2, v6, v7),
          CMTime time2 = time1,
          CMTimeConvertScale(&time1, &time2, (int)v1, kCMTimeRoundingMethod_RoundHalfAwayFromZero),
          (time1.flags & 0x1D) == 1))
    {
      CMTimeFlags value = time1.value;
      uint64_t v9 = *(void *)(DerivedStorage + 64);
      CMTime time1 = v35;
      uint64_t v10 = CMClockConvertHostTimeToSystemUnits(&time1);
      uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v11) {
        uint64_t v12 = v11;
      }
      else {
        uint64_t v12 = 0;
      }
      CFDictionaryRef v13 = *(unsigned int (**)(uint64_t, uint64_t, CMTimeEpoch *))(v12 + 16);
      if (!v13 || v13(v9, v10, &v32))
      {
        APSLogErrorAt();
        if (gLogCategory_APAudioEngineRealTime <= 90
          && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
      else
      {
        uint64_t CMBaseObject = APSNetworkClockGetCMBaseObject();
        uint64_t v15 = *(void *)(CMBaseObjectGetVTable() + 8);
        if (v15) {
          uint64_t v16 = v15;
        }
        else {
          uint64_t v16 = 0;
        }
        uint64_t v17 = *(unsigned int (**)(uint64_t, void, void, CFTypeRef *))(v16 + 48);
        if (!v17) {
          goto LABEL_27;
        }
        CFAllocatorRef v18 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
        if (v17(CMBaseObject, *MEMORY[0x1E4F4A140], *MEMORY[0x1E4F1CF80], &cf)) {
          goto LABEL_27;
        }
        int v19 = FigCFEqual();
        uint64_t v20 = CMBaseObjectGetDerivedStorage();
        if (v19)
        {
          int v21 = *(unsigned __int8 *)(v20 + 320);
          if (CMBlockBufferCreateWithMemoryBlock(v18, 0, 0x18uLL, v18, 0, 0, 0x18uLL, 1u, &blockBufferOut) {
            || (v21 ? (int v22 = 1951421520) : (int v22 = 1953526896),
          }
                *(CMTimeValue *)((char *)&time1.value + 4) = 1000000000 * (int)v34
                                                           + ((1000000000 * (unint64_t)HIDWORD(v33)) >> 32),
                LODWORD(time1.CFDictionarySetValue(theDict, key, value) = v5,
                time1.CMTimeFlags flags = value,
                time1.CMTimeEpoch epoch = v32,
                APSTransportMessageSetPTPTimeAnnounce()))
          {
LABEL_48:
            APSLogErrorAt();
LABEL_27:
            APSLogErrorAt();
            goto LABEL_42;
          }
        }
        else
        {
          int v23 = *(unsigned __int8 *)(v20 + 320);
          if (CMBlockBufferCreateWithMemoryBlock(v18, 0, 0x10uLL, v18, 0, 0, 0x10uLL, 1u, &blockBufferOut)) {
            goto LABEL_48;
          }
          int v22 = v23 ? 1950436942 : 1952542318;
          LODWORD(time1.CFDictionarySetValue(theDict, key, value) = v5;
          HIDWORD(time1.CFDictionarySetValue(theDict, key, value) = v34 - 2085978496;
          time1.CMTimeScale timescale = HIDWORD(v33);
          time1.CMTimeFlags flags = value;
          if (APSTransportMessageSetTimeAnnounce()) {
            goto LABEL_48;
          }
        }
        APSRealTimeWritableRead();
        BYTE4(v29) = *(unsigned char *)(DerivedStorage + 320);
        *((void *)&v28 + 1) = blockBufferOut;
        LODWORD(v29) = v22;
        CFSetApplyFunction(*(CFSetRef *)(DerivedStorage + 152), (CFSetApplierFunction)realTimeAudioEngine_timeAnnounceHoseApplier, &context);
        if (gLogCategory_APAudioEngineRealTime <= 50
          && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
        {
          CMTime time1 = v35;
          CMTimeGetSeconds(&time1);
          LogPrintF();
        }
        *(_WORD *)(DerivedStorage + 320) = 0;
      }
    }
    else
    {
      APSLogErrorAt();
      APSSignalErrorAt();
    }
  }
LABEL_42:
  if (cf) {
    CFRelease(cf);
  }
  if (blockBufferOut) {
    CFRelease(blockBufferOut);
  }
  return kdebug_trace();
}

uint64_t realTimeAudioEngine_timeAnnounceHoseApplier(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 12);
  int v5 = (void *)MEMORY[0x1E4F49FD8];
  if (*(unsigned char *)(a2 + 36))
  {
    uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 8);
    uint64_t v7 = v6 ? v6 : 0;
    uint64_t v8 = *(void (**)(uint64_t, void, void))(v7 + 56);
    if (v8) {
      v8(a1, *v5, *MEMORY[0x1E4F1CFC8]);
    }
  }
  if (v4)
  {
    uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 8);
    uint64_t v10 = v9 ? v9 : 0;
    uint64_t v11 = *(void (**)(uint64_t, void, void))(v10 + 56);
    if (v11) {
      v11(a1, *v5, *MEMORY[0x1E4F1CFD0]);
    }
  }
  uint64_t v12 = *(unsigned int *)(a2 + 32);
  uint64_t v13 = *(void *)(a2 + 24);
  APSEndpointStreamAudioHoseProtocolGetProtocolID();
  uint64_t result = CMBaseObjectGetProtocolVTable();
  if (result)
  {
    uint64_t v16 = *(void *)(result + 16);
    result += 16;
    uint64_t v15 = v16;
    if (v16)
    {
      uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
      if (v17)
      {
        return v17(a1, v12, v13);
      }
    }
  }
  return result;
}

void realTimeAudioEngine_updateArrivalToRenderTicks()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFSetRef v1 = *(const __CFSet **)(DerivedStorage + 152);
  if (v1 && CFSetGetCount(v1) >= 1)
  {
    uint64_t context = -1;
    CFSetApplyFunction(*(CFSetRef *)(DerivedStorage + 152), (CFSetApplierFunction)realTimeAudioEngine_updateArrivalToRenderTicksApplier, &context);
    uint64_t v2 = context;
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(void *)(DerivedStorage + 648) = v2;
}

void realTimeAudioEngine_updateCryptor()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  if (!*(unsigned char *)(DerivedStorage + 32))
  {
    CFSetRef v1 = (void *)DerivedStorage;
    CFTypeRef v2 = *(CFTypeRef *)(DerivedStorage + 216);
    if (v2)
    {
      uint64_t CMBaseObject = FigEndpointStreamGetCMBaseObject();
      uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v4) {
        uint64_t v5 = v4;
      }
      else {
        uint64_t v5 = 0;
      }
      uint64_t v6 = *(void (**)(uint64_t, __CFString *, void, CFTypeRef *))(v5 + 48);
      if (v6)
      {
        v6(CMBaseObject, @"Cryptor", *MEMORY[0x1E4F1CF80], &cf);
        CFTypeRef v2 = cf;
      }
      else
      {
        CFTypeRef v2 = 0;
      }
    }
    CFTypeRef v7 = (CFTypeRef)v1[29];
    if (v7 != v2)
    {
      if (gLogCategory_APAudioEngineRealTime <= 50)
      {
        if (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()) {
          LogPrintF();
        }
        CFTypeRef v2 = cf;
        CFTypeRef v7 = (CFTypeRef)v1[29];
      }
      v1[29] = v2;
      if (v2) {
        CFRetain(v2);
      }
      if (v7) {
        CFRelease(v7);
      }
      CFTypeRef v8 = cf;
      MEMORY[0x1D25EB370](v1[83]);
      uint64_t v9 = (const void *)v1[97];
      v1[97] = v8;
      if (v8) {
        CFRetain(v8);
      }
      if (v9) {
        CFRelease(v9);
      }
      MEMORY[0x1D25EB390](v1[83]);
      CFTypeRef v2 = cf;
    }
    if (v2) {
      CFRelease(v2);
    }
  }
}

uint64_t realTimeAudioEngine_setEchoCancellationIsEnabledToHose(uint64_t a1, unsigned char *a2)
{
  if (*a2) {
    CMClockRef v3 = (uint64_t *)MEMORY[0x1E4F1CFD0];
  }
  else {
    CMClockRef v3 = (uint64_t *)MEMORY[0x1E4F1CFC8];
  }
  uint64_t VTable = CMBaseObjectGetVTable();
  uint64_t v7 = *(void *)(VTable + 8);
  uint64_t result = VTable + 8;
  uint64_t v6 = v7;
  if (v7) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v9)
  {
    uint64_t v10 = *MEMORY[0x1E4F49FB0];
    uint64_t v11 = *v3;
    return v9(a1, v10, v11);
  }
  return result;
}

uint64_t realTimeAudioEngine_tas_addHoseDispatchInternal(uint64_t *a1)
{
  uint64_t v2 = *a1;
  CFSetRef v1 = (const void *)a1[1];
  int v3 = *((unsigned __int8 *)a1 + 16);
  if (CFDictionaryContainsKey(*(CFDictionaryRef *)(*a1 + 336), v1))
  {
    APSLogErrorAt();
    return APSSignalErrorAt();
  }
  else
  {
    uint64_t v4 = (const void **)MEMORY[0x1E4F1CFD0];
    if (!v3) {
      uint64_t v4 = (const void **)MEMORY[0x1E4F1CFC8];
    }
    CFDictionaryAddValue(*(CFMutableDictionaryRef *)(v2 + 336), v1, *v4);
    CFDictionaryRef Copy = CFDictionaryCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], *(CFDictionaryRef *)(v2 + 336));
    if (Copy)
    {
      CFDictionaryRef v6 = Copy;
      APSCFRealTimeReadableSetValue();
      unint64_t v7 = atomic_load((unint64_t *)(v2 + 288));
      if (*(unsigned char *)(v2 + 16)) {
        BOOL v8 = (unsigned __int16)v7 == 0;
      }
      else {
        BOOL v8 = 1;
      }
      if (!v8)
      {
        unint64_t v9 = v7 >> 16;
        if (gLogCategory_APAudioEngineRealTime <= 50
          && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        APSAudioTransportTimeMakeWithRTPTime();
        APSEndpointStreamAudioHoseProtocolGetProtocolID();
        Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
        if (ProtocolVTable)
        {
          uint64_t v11 = *(void *)(ProtocolVTable + 16);
          if (v11)
          {
            uint64_t v12 = *(void (**)(const void *, void, _OWORD *, void, void))(v11 + 24);
            if (v12)
            {
              v15[0] = *(_OWORD *)v14;
              *(_OWORD *)((char *)v15 + 12) = *(_OWORD *)&v14[12];
              v12(v1, (unsigned __int16)v9, v15, 0, 0);
            }
          }
        }
      }
      CFRelease(v6);
    }
    else
    {
      APSLogErrorAt();
    }
    return 0;
  }
}

unint64_t realTimeAudioEngine_updateArrivalToRenderTicksApplier(uint64_t a1, unint64_t *a2)
{
  unint64_t result = APSGetFBOPropertyInt64();
  unint64_t v4 = *a2;
  if (*a2 >= result) {
    unint64_t v4 = result;
  }
  *a2 = v4;
  return result;
}

void realTimeAudioEngine_audioHoseRegistrarDeregisterHoseDispatchInternal(uint64_t a1)
{
  realTimeAudioEngine_audioHoseRegistrarDeregisterHoseInternal(*(void *)a1, *(const void **)(a1 + 8));
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
  uint64_t v2 = *(const void **)(a1 + 8);
  if (v2) {
    CFRelease(v2);
  }
  int v3 = *(const void **)(a1 + 16);
  if (v3)
  {
    CFRelease(v3);
  }
}

__n128 realTimeAudioEngine_audioHoseRegistrarDeregisterHoseInternal(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioEngineRealTime <= 50
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    CFSetGetCount(*(CFSetRef *)(DerivedStorage + 152));
    LogPrintF();
  }
  if (CFSetContainsValue(*(CFSetRef *)(DerivedStorage + 152), a2))
  {
    if (APSDispatchSyncTask())
    {
      APSLogErrorAt();
      APSLogErrorAt();
    }
    else
    {
      CFSetRemoveValue(*(CFMutableSetRef *)(DerivedStorage + 152), a2);
      realTimeAudioEngine_updateArrivalToRenderTicks();
      if (CFDictionaryGetInt64())
      {
        *(unsigned char *)(DerivedStorage + 544) = 0;
        CFSetApplyFunction(*(CFSetRef *)(DerivedStorage + 152), (CFSetApplierFunction)realTimeAudioEngine_setEchoCancellationIsEnabledToHose, (void *)(DerivedStorage + 544));
      }
      uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v4) {
        uint64_t v5 = v4;
      }
      else {
        uint64_t v5 = 0;
      }
      CFDictionaryRef v6 = *(void (**)(const void *, void, void))(v5 + 56);
      if (v6) {
        v6(a2, *MEMORY[0x1E4F49FD8], *MEMORY[0x1E4F1CFC8]);
      }
      if (gLogCategory_APAudioEngineRealTime <= 50
        && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
      {
        CFSetGetCount(*(CFSetRef *)(DerivedStorage + 152));
        LogPrintF();
      }
      *(_DWORD *)(DerivedStorage + 408) = CFSetGetCount(*(CFSetRef *)(DerivedStorage + 152));
    }
  }
  else if (gLogCategory_APAudioEngineRealTime <= 50 {
         && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  }
  {
    LogPrintF();
  }
  if (!CFSetGetCount(*(CFSetRef *)(DerivedStorage + 152)))
  {
    uint64_t v8 = MEMORY[0x1E4F1FA48];
    __n128 result = *(__n128 *)MEMORY[0x1E4F1FA48];
    *(_OWORD *)(DerivedStorage + 296) = *MEMORY[0x1E4F1FA48];
    *(void *)(DerivedStorage + 312) = *(void *)(v8 + 16);
    *(unsigned char *)(DerivedStorage + 320) = 1;
  }
  return result;
}

uint64_t realTimeAudioEngine_tas_removeHoseDispatchInternal(void *a1)
{
  uint64_t v2 = *a1;
  CFSetRef v1 = (const void *)a1[1];
  if (CFDictionaryContainsKey(*(CFDictionaryRef *)(*a1 + 336), v1))
  {
    CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(v2 + 336), v1);
    CFDictionaryRef Copy = CFDictionaryCreateCopy((CFAllocatorRef)*MEMORY[0x1E4F1CF80], *(CFDictionaryRef *)(v2 + 336));
    if (Copy)
    {
      CFDictionaryRef v4 = Copy;
      APSCFRealTimeReadableSetValue();
      CFRelease(v4);
    }
    else
    {
      APSLogErrorAt();
    }
    return 0;
  }
  else
  {
    APSLogErrorAt();
    return APSSignalErrorAt();
  }
}

void realTimeAudioEngine_Resume(const void *a1, const void *a2, void (*a3)(const void *, uint64_t, uint64_t), uint64_t a4)
{
  CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioEngineRealTime <= 50
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  unint64_t v7 = malloc_type_malloc(0x30uLL, 0x10E004091CD38EAuLL);
  if (v7)
  {
    uint64_t v8 = v7;
    if (a1) {
      CFTypeRef v9 = CFRetain(a1);
    }
    else {
      CFTypeRef v9 = 0;
    }
    void *v8 = v9;
    if (a2) {
      CFTypeRef v10 = CFRetain(a2);
    }
    else {
      CFTypeRef v10 = 0;
    }
    v8[1] = v10;
    void v8[2] = a3;
    v8[4] = a4;
    *((_DWORD *)v8 + 10) = 0;
    uint64_t v11 = APSDispatchSectionEnter();
    if (!v11) {
      return;
    }
    uint64_t v12 = v11;
    APSLogErrorAt();
    if (*v8) {
      CFRelease((CFTypeRef)*v8);
    }
    uint64_t v13 = (const void *)v8[1];
    if (v13) {
      CFRelease(v13);
    }
    free(v8);
  }
  else
  {
    APSLogErrorAt();
    uint64_t v12 = 4294951816;
  }
  if (a3)
  {
    a3(a1, v12, a4);
  }
}

void realTimeAudioEngine_Suspend(const void *a1, const void *a2, void (*a3)(const void *, uint64_t, uint64_t), uint64_t a4)
{
  CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioEngineRealTime <= 50
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  unint64_t v7 = malloc_type_malloc(0x30uLL, 0x10E004091CD38EAuLL);
  if (v7)
  {
    uint64_t v8 = v7;
    if (a1) {
      CFTypeRef v9 = CFRetain(a1);
    }
    else {
      CFTypeRef v9 = 0;
    }
    void *v8 = v9;
    if (a2) {
      CFTypeRef v10 = CFRetain(a2);
    }
    else {
      CFTypeRef v10 = 0;
    }
    v8[1] = v10;
    v8[3] = a3;
    v8[4] = a4;
    *((_DWORD *)v8 + 10) = 0;
    uint64_t v11 = APSDispatchSectionEnter();
    if (!v11) {
      return;
    }
    uint64_t v12 = v11;
    APSLogErrorAt();
    if (*v8) {
      CFRelease((CFTypeRef)*v8);
    }
    uint64_t v13 = (const void *)v8[1];
    if (v13) {
      CFRelease(v13);
    }
    free(v8);
  }
  else
  {
    APSLogErrorAt();
    uint64_t v12 = 4294951816;
  }
  if (a3)
  {
    a3(a1, v12, a4);
  }
}

uint64_t realTimeAudioEngine_SetEndpointStream(const void *a1, const void *a2, uint64_t (*a3)(const void *, uint64_t, uint64_t), uint64_t a4)
{
  CMBaseObjectGetDerivedStorage();
  unint64_t v7 = malloc_type_malloc(0x28uLL, 0x10A0040DE786E1EuLL);
  if (!v7)
  {
    APSLogErrorAt();
    uint64_t v12 = 4294951816;
LABEL_20:
    uint64_t result = (uint64_t)a3;
    if (a3)
    {
      return a3(a1, v12, a4);
    }
    return result;
  }
  uint64_t v8 = v7;
  if (a1) {
    CFTypeRef v9 = CFRetain(a1);
  }
  else {
    CFTypeRef v9 = 0;
  }
  void *v8 = v9;
  if (a2) {
    CFTypeRef v10 = CFRetain(a2);
  }
  else {
    CFTypeRef v10 = 0;
  }
  v8[1] = v10;
  void v8[2] = a3;
  v8[3] = a4;
  *((_DWORD *)v8 + 8) = 0;
  if (gLogCategory_APAudioEngineRealTime <= 50
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t result = APSDispatchSectionEnter();
  if (result)
  {
    uint64_t v12 = result;
    APSLogErrorAt();
    if (*v8) {
      CFRelease((CFTypeRef)*v8);
    }
    uint64_t v13 = (const void *)v8[1];
    if (v13) {
      CFRelease(v13);
    }
    free(v8);
    goto LABEL_20;
  }
  return result;
}

uint64_t realTimeAudioEngine_Flush()
{
  uint64_t DerivedStorage = (unsigned char *)CMBaseObjectGetDerivedStorage();
  if (*DerivedStorage) {
    return 0;
  }
  CFSetRef v1 = DerivedStorage;
  uint64_t Int64 = (const void *)CFDictionaryGetInt64();
  FigCFDictionaryGetCMTimeIfPresent();
  if (gLogCategory_APAudioEngineRealTime <= 50
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (Int64 && (uint64_t Int64 = (const void *)*((void *)v1 + 41)) != 0)
  {
    CFRetain(Int64);
    char v3 = 0;
  }
  else
  {
    char v3 = 1;
  }
  if (APSAtomicMessageQueueSendMessage()) {
    return 0;
  }
  APSLogErrorAt();
  if ((v3 & 1) == 0) {
    CFRelease(Int64);
  }
  uint64_t v4 = 4294951816;
  APSLogErrorAt();
  return v4;
}

void realTimeAudioEngine_resumeInternal(uint64_t a1)
{
  uint64_t v102 = *MEMORY[0x1E4F143B8];
  uint64_t DerivedStorage = (unsigned char *)CMBaseObjectGetDerivedStorage();
  char v3 = DerivedStorage;
  if (*DerivedStorage)
  {
    APSLogErrorAt();
    CFTypeRef v8 = 0;
    CFTypeRef v9 = 0;
    LODWORD(v10) = -15487;
    goto LABEL_145;
  }
  if (DerivedStorage[128])
  {
    LODWORD(v10) = 0;
    goto LABEL_119;
  }
  if (gLogCategory_APAudioEngineRealTime <= 50
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFDictionaryRef v4 = *(const __CFDictionary **)(a1 + 8);
  if (!v4
    || (int Value = CFDictionaryGetValue(v4, (const void *)*MEMORY[0x1E4F32978]),
        CFDataRef v6 = (const __CFData *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 8), (const void *)*MEMORY[0x1E4F32998]),
        !Value))
  {
    APSLogErrorAt();
    CFTypeRef v8 = 0;
    CFTypeRef v9 = 0;
    LODWORD(v10) = -15483;
    goto LABEL_144;
  }
  CFDataRef v7 = v6;
  if (gLogCategory_APAudioEngineRealTime <= 50
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v11 = (const void *)*((void *)v3 + 25);
  *((void *)v3 + 25) = Value;
  CFRetain(Value);
  if (v11) {
    CFRelease(v11);
  }
  uint64_t v12 = (const void *)*((void *)v3 + 26);
  if (v12)
  {
    CFRelease(v12);
    *((void *)v3 + 26) = 0;
  }
  if (v7 && (unint64_t)CFDataGetLength(v7) >= 0x28)
  {
    CFDataGetBytePtr(v7);
    int v13 = ASBDToAPAudioFormat();
    if (v13)
    {
      LODWORD(v10) = v13;
      goto LABEL_118;
    }
    if (gLogCategory_APAudioEngineRealTime <= 50
      && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    int v14 = realTimeAudioEngine_setTransportAudioFormatASBDInternal(*(void *)a1, 0);
    if (v14)
    {
      LODWORD(v10) = v14;
      goto LABEL_118;
    }
  }
  uint64_t v15 = (CFAllocatorRef *)MEMORY[0x1E4F1CF80];
  if (v3[32])
  {
    uint64_t v16 = CMBaseObjectGetDerivedStorage();
    v98.CMTimeFlags value = 0;
    if (FigCFEqual() && APSSettingsGetIntWithDefault())
    {
      Null = (const void *)APSCryptorGetNull();
      v98.CMTimeFlags value = (CMTimeValue)CFRetain(Null);
      if (gLogCategory_APAudioEngineRealTime <= 50
        && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFDataRef v18 = 0;
      uint64_t v20 = *(const void **)(v16 + 224);
      *(void *)(v16 + 224) = 0;
      if (!v20) {
        goto LABEL_44;
      }
    }
    else
    {
      RandomBytes();
      CFDataRef v18 = CFDataCreate(*v15, bytes, 32);
      int v19 = APSCryptorChaCha20Poly1305Create();
      if (v19)
      {
        LODWORD(v10) = v19;
        APSLogErrorAt();
        if (v18) {
LABEL_49:
        }
          CFRelease(v18);
LABEL_50:
        if (v98.value) {
          CFRelease((CFTypeRef)v98.value);
        }
        if (v10) {
          goto LABEL_118;
        }
        goto LABEL_53;
      }
      if (gLogCategory_APAudioEngineRealTime <= 50
        && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v20 = *(const void **)(v16 + 224);
      *(void *)(v16 + 224) = v18;
      if (v18) {
        CFRetain(v18);
      }
      if (!v20)
      {
LABEL_44:
        CFTypeRef v10 = *(const void **)(v16 + 232);
        int v21 = (const void *)v98.value;
        *(void *)(v16 + 232) = v98.value;
        if (v21) {
          CFRetain(v21);
        }
        if (v10)
        {
          CFRelease(v10);
          LODWORD(v10) = 0;
        }
        if (v18) {
          goto LABEL_49;
        }
        goto LABEL_50;
      }
    }
    CFRelease(v20);
    goto LABEL_44;
  }
  if (gLogCategory_APAudioEngineRealTime <= 50
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_53:
  CFAllocatorRef v22 = *v15;
  int v23 = APTransportStreamSendBackingProviderCreateWithStreamID();
  if (v23)
  {
    LODWORD(v10) = v23;
    goto LABEL_118;
  }
  int v24 = APTransportStreamSendBackingProviderAcquireBBuf();
  if (v24)
  {
    LODWORD(v10) = v24;
    goto LABEL_118;
  }
  AudioOSStatus DataPointer = APSTransportMessageGetAudioDataPointer();
  if (AudioDataPointer)
  {
    LODWORD(v10) = AudioDataPointer;
    goto LABEL_118;
  }
  if (gLogCategory_APAudioEngineRealTime <= 50
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*((void *)v3 + 33))
  {
    uint64_t CMBaseObject = APSNetworkClockGetCMBaseObject();
    uint64_t v30 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v30) {
      uint64_t v31 = v30;
    }
    else {
      uint64_t v31 = 0;
    }
    uint64_t v67 = *(uint64_t (**)(uint64_t, void, const __CFAllocator *, unsigned char *))(v31 + 48);
    if (!v67)
    {
      LODWORD(v10) = -12782;
      goto LABEL_118;
    }
    int v68 = v67(CMBaseObject, *MEMORY[0x1E4F4A138], v22, v3 + 264);
    if (v68)
    {
      LODWORD(v10) = v68;
      goto LABEL_118;
    }
  }
  uint64_t v26 = CMBaseObjectGetDerivedStorage();
  v98.CMTimeFlags value = 0;
  v96.CMTimeFlags value = 0;
  cf.CMTimeFlags value = 0;
  __int16 v27 = arc4random();
  int v28 = *(_DWORD *)(v26 + 40);
  if (gLogCategory_APAudioEngineRealTime <= 50
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  unsigned int v32 = *(_DWORD *)(v26 + 40) + 1;
  *(void *)bytes = CFRetain(*(CFTypeRef *)(v26 + 248));
  *(void *)&bytes[8] = realTimeAudioEngine_apsRTPPacketHandlerCleanUp;
  *(void *)&long long v100 = realTimeAudioEngine_createRedundantAudioDataMessageBBuf;
  *((void *)&v100 + 1) = realTimeAudioEngine_relinquishMessageBacking;
  int v33 = APSRTPPacketHandlerCreate(v22, 1, v32, (uint64_t)bytes, &v98.value);
  if (v33)
  {
    LODWORD(v10) = v33;
LABEL_170:
    APSLogErrorAt();
    goto LABEL_86;
  }
  if (FigCFEqual() && APSSettingsGetIntWithDefault()) {
    int v28 = -1;
  }
  int v34 = APMessageRingCreate((uint64_t)v22, *(void *)(v26 + 48), v27, *(const void **)(v26 + 248), 1735550308, 0, &v96.value);
  if (v34)
  {
    LODWORD(v10) = v34;
    goto LABEL_170;
  }
  int v35 = APMessageRingCreate((uint64_t)v22, *(void *)(v26 + 48), v27, *(const void **)(v26 + 248), 1734700576, 0, &cf.value);
  if (v35)
  {
    LODWORD(v10) = v35;
    goto LABEL_170;
  }
  APMessageRingSetMaxPacketRedundancy(cf.value, *(_DWORD *)(v26 + 36));
  APMessageRingSetTargetPayloadRedundancy(cf.value, *(_DWORD *)(v26 + 36));
  APMessageRingSetMaxPacketRedundancy(v96.value, *(_DWORD *)(v26 + 36));
  APMessageRingSetTargetPayloadRedundancy(v96.value, v28);
  int v36 = *(const void **)(v26 + 240);
  CMTimeValue v37 = v98.value;
  if (v98.value) {
    CFRetain((CFTypeRef)v98.value);
  }
  *(void *)(v26 + 240) = v37;
  if (v36) {
    CFRelease(v36);
  }
  MEMORY[0x1D25EB370](*(void *)(v26 + 552));
  uint64_t v38 = *(const void **)(v26 + 560);
  CMTimeValue v39 = cf.value;
  if (cf.value) {
    CFRetain((CFTypeRef)cf.value);
  }
  *(void *)(v26 + 560) = v39;
  if (v38) {
    CFRelease(v38);
  }
  uint64_t v40 = *(const void **)(v26 + 568);
  CMTimeValue v41 = v96.value;
  if (v96.value) {
    CFRetain((CFTypeRef)v96.value);
  }
  *(void *)(v26 + 568) = v41;
  if (v40) {
    CFRelease(v40);
  }
  MEMORY[0x1D25EB390](*(void *)(v26 + 552));
  LODWORD(v10) = 0;
LABEL_86:
  if (v98.value) {
    CFRelease((CFTypeRef)v98.value);
  }
  if (v96.value) {
    CFRelease((CFTypeRef)v96.value);
  }
  if (cf.value) {
    CFRelease((CFTypeRef)cf.value);
  }
  if (v10) {
    goto LABEL_118;
  }
  uint64_t v42 = *(void **)a1;
  uint64_t v43 = CMBaseObjectGetDerivedStorage();
  *(_OWORD *)bytes = *MEMORY[0x1E4F1F9F8];
  *(void *)&long long v100 = *(void *)(MEMORY[0x1E4F1F9F8] + 16);
  *(_OWORD *)&v98.CMTimeFlags value = *(_OWORD *)bytes;
  v98.CMTimeEpoch epoch = v100;
  unsigned int v97 = 0;
  *(_OWORD *)&v96.CMTimeFlags value = *(_OWORD *)bytes;
  v96.CMTimeEpoch epoch = v100;
  if (!*(void *)(v43 + 200))
  {
    APSLogErrorAt();
    int v89 = APSSignalErrorAt();
    if (!v89) {
      goto LABEL_128;
    }
    LODWORD(v10) = v89;
LABEL_118:
    APSLogErrorAt();
LABEL_119:
    CFTypeRef v8 = 0;
    CFTypeRef v9 = 0;
    goto LABEL_144;
  }
  uint64_t v44 = v43;
  RandomBytes();
  int v45 = APAudioSourceCompressionCreate((uint64_t)v22, *(const void **)(v44 + 200), v44 + 160, (void *)(v44 + 208));
  if (v45)
  {
    LODWORD(v10) = v45;
LABEL_180:
    APSLogErrorAt();
    goto LABEL_118;
  }
  double v46 = *(double *)(v44 + 160);
  CFAllocatorRef v47 = CFGetAllocator(v42);
  OSStatus v48 = CMTimebaseCreateWithSourceClock(v47, *(CMClockRef *)(v44 + 264), (CMTimebaseRef *)(v44 + 272));
  if (v48)
  {
    LODWORD(v10) = v48;
    goto LABEL_180;
  }
  FigCFDictionaryGetCMTimeIfPresent();
  if ((bytes[12] & 0x1D) != 1)
  {
    APSLogErrorAt();
    LODWORD(v10) = -15481;
    goto LABEL_118;
  }
  uint64_t v49 = *(OpaqueCMTimebase **)(v44 + 272);
  HostTimeClocCFIndex k = CMClockGetHostTimeClock();
  int v51 = *(const void **)(v44 + 264);
  *(_OWORD *)&time.CMTimeFlags value = *(_OWORD *)bytes;
  time.CMTimeEpoch epoch = v100;
  CMSyncConvertTime(&cf, &time, HostTimeClock, v51);
  long long v90 = *MEMORY[0x1E4F1FA48];
  *(_OWORD *)&time.CMTimeFlags value = *MEMORY[0x1E4F1FA48];
  CMTimeEpoch v52 = *(void *)(MEMORY[0x1E4F1FA48] + 16);
  time.CMTimeEpoch epoch = v52;
  OSStatus v53 = CMTimebaseSetRateAndAnchorTime(v49, 1.0, &time, &cf);
  if (v53)
  {
    LODWORD(v10) = v53;
    goto LABEL_180;
  }
  CFAllocatorRef v54 = CFGetAllocator(v42);
  OSStatus v55 = CMTimebaseCreateWithSourceClock(v54, *(CMClockRef *)(v44 + 264), (CMTimebaseRef *)(v44 + 280));
  if (v55)
  {
    LODWORD(v10) = v55;
    goto LABEL_180;
  }
  int v56 = (int)v46;
  CMTimeMake(&v98, v97, (int)v46);
  int v57 = *(OpaqueCMTimebase **)(v44 + 280);
  CMTime time = v98;
  *(_OWORD *)&immediateSourceTime.CMTimeFlags value = v90;
  immediateSourceTime.CMTimeEpoch epoch = v52;
  OSStatus v58 = CMTimebaseSetRateAndAnchorTime(v57, 1.0, &time, &immediateSourceTime);
  if (v58)
  {
    LODWORD(v10) = v58;
    goto LABEL_180;
  }
  *(_OWORD *)(v44 + 296) = v90;
  *(void *)(v44 + 312) = v52;
  *(_WORD *)(v44 + 320) = 257;
  int v59 = (int)(float)(*(float *)(v44 + 132) * (float)v56);
  int v60 = (int)(float)(*(float *)(v44 + 140) * (float)v56);
  if (gLogCategory_APAudioEngineRealTime <= 50
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CMTimeMake(&v96, v59, (int)v46);
  CMTimeMake(&rhs, v60, (int)v46);
  CMTime immediateSourceTime = v96;
  CMTimeAdd(&time, &immediateSourceTime, &rhs);
  CMTime v96 = time;
  CFAllocatorRef v61 = CFGetAllocator(v42);
  OSStatus v62 = CMTimebaseCreateWithSourceClock(v61, *(CMClockRef *)(v44 + 264), (CMTimebaseRef *)(v44 + 288));
  if (v62)
  {
    LODWORD(v10) = v62;
    goto LABEL_180;
  }
  uint64_t v63 = *(OpaqueCMTimebase **)(v44 + 288);
  CMTime time = v98;
  CMTime immediateSourceTime = v96;
  CMTimeSubtract(&timebaseTime, &time, &immediateSourceTime);
  *(_OWORD *)&time.CMTimeFlags value = v90;
  time.CMTimeEpoch epoch = v52;
  OSStatus v64 = CMTimebaseSetRateAndAnchorTime(v63, 1.0, &timebaseTime, &time);
  if (v64)
  {
    LODWORD(v10) = v64;
    goto LABEL_180;
  }
  realTimeAudioEngine_updateHostRateAndAnchorTimeRelativeToRemoteRTPTimebase();
  uint64_t v65 = dispatch_source_create(MEMORY[0x1E4F14490], 0, 0, *(dispatch_queue_t *)(v44 + 120));
  *(void *)(v44 + 336) = v65;
  dispatch_set_context(v65, v42);
  dispatch_source_set_event_handler_f(*(dispatch_source_t *)(v44 + 336), (dispatch_function_t)realTimeAudioEngine_periodicTasksTimerEntry);
  dispatch_source_set_timer(*(dispatch_source_t *)(v44 + 336), 0, 0x3B9ACA00uLL, 0x2FAF080uLL);
  uint64_t v66 = (void *)CMBaseObjectGetDerivedStorage();
  if (APSRTCReportingAgentCreate())
  {
    if (gLogCategory_APAudioEngineRealTime <= 90
      && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  else
  {
    if (gLogCategory_APAudioEngineRealTime <= 40
      && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v66[51] = 0;
    APSThreadSafeDictionaryCreate();
    if (v66[52])
    {
      CFMutableArrayRef Mutable = CFArrayCreateMutable(v22, 0, MEMORY[0x1E4F1D510]);
      v66[53] = Mutable;
      if (Mutable) {
        APSCopyClusterInfo();
      }
    }
  }
LABEL_128:
  int v70 = realTimeAudioEngine_resumeSubPhase3_Internal();
  if (v70)
  {
    LODWORD(v10) = v70;
    goto LABEL_118;
  }
  MEMORY[0x1D25EB370](*((void *)v3 + 69));
  uint64_t v71 = (const void *)*((void *)v3 + 70);
  if (v71) {
    CFTypeRef v8 = CFRetain(v71);
  }
  else {
    CFTypeRef v8 = 0;
  }
  uint64_t v72 = (const void *)*((void *)v3 + 71);
  if (v72) {
    CFTypeRef v9 = CFRetain(v72);
  }
  else {
    CFTypeRef v9 = 0;
  }
  MEMORY[0x1D25EB390](*((void *)v3 + 69));
  uint64_t v73 = (const void *)*((void *)v3 + 26);
  uint64_t v74 = (const void *)*((void *)v3 + 33);
  uint64_t v75 = (const void *)*((void *)v3 + 34);
  CFDictionaryRef v76 = (const void *)*((void *)v3 + 35);
  uint64_t v77 = (const void *)*((void *)v3 + 29);
  uint64_t v78 = (const void *)*((void *)v3 + 30);
  uint64_t v79 = (const void *)*((void *)v3 + 31);
  long long v80 = *((_OWORD *)v3 + 11);
  *(_OWORD *)bytes = *((_OWORD *)v3 + 10);
  long long v100 = v80;
  uint64_t v101 = *((void *)v3 + 24);
  int v81 = realTimeAudioEngine_tas_Resume((uint64_t)(v3 + 576), (uint64_t)bytes, v73, v77, v74, v75, v76, v78, v79, v8, v9);
  if (v81)
  {
    LODWORD(v10) = v81;
    APSLogErrorAt();
  }
  else
  {
    if (*((_DWORD *)v3 + 22))
    {
      uint64_t v82 = *((void *)v3 + 12);
      if (*(void *)a1) {
        uint64_t v83 = (void *)CFRetain(*(CFTypeRef *)a1);
      }
      else {
        uint64_t v83 = 0;
      }
      dispatch_async_f(v82, v83, (dispatch_function_t)realTimeAudioEngine_renewAudioIOAssertionDispatch);
    }
    if (FigCFEqual()) {
      realTimeAudioEngine_NotifyIsPlayingAmbientAudio(1);
    }
    LODWORD(v10) = 0;
    v3[128] = 1;
  }
LABEL_144:
  if (v10)
  {
LABEL_145:
    realTimeAudioEngine_performSuspensionGutsInternal(*(void *)a1, 0);
    if (*(void *)(CMBaseObjectGetDerivedStorage() + 376))
    {
      CFMutableDictionaryRef v84 = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      if (v84)
      {
        uint64_t v85 = v84;
        CFDictionarySetValue(v84, @"pointOfFailure", @"Session failed to start");
        FigCFDictionarySetInt32();
        FigCFDictionarySetInt32();
        CFDictionarySetValue(v85, @"sessionType", @"AudioRealTime");
        APSRTCReportingAgentSendEvent();
        CFRelease(v85);
        if (!v8) {
          goto LABEL_153;
        }
LABEL_152:
        CFRelease(v8);
        goto LABEL_153;
      }
    }
LABEL_151:
    if (!v8) {
      goto LABEL_153;
    }
    goto LABEL_152;
  }
  uint64_t v86 = CMBaseObjectGetDerivedStorage();
  if (*(void *)(v86 + 376))
  {
    uint64_t v87 = v86;
    uint64_t v88 = CMClockGetHostTimeClock();
    CMClockGetTime((CMTime *)bytes, v88);
    LODWORD(v10) = 0;
    *(_OWORD *)(v87 + 384) = *(_OWORD *)bytes;
    *(void *)(v87 + 400) = v100;
    goto LABEL_151;
  }
  LODWORD(v10) = 0;
  if (v8) {
    goto LABEL_152;
  }
LABEL_153:
  if (v9) {
    CFRelease(v9);
  }
  *(_DWORD *)(a1 + 40) = v10;
  dispatch_async_f(*((dispatch_queue_t *)v3 + 9), (void *)a1, (dispatch_function_t)realTimeAudioEngine_resumeComplete);
}

uint64_t realTimeAudioEngine_resumeSubPhase3_Internal()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioEngineRealTime <= 40
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v1 = ASBDToAPAudioFormat();
  if (v1)
  {
    uint64_t v13 = v1;
    goto LABEL_37;
  }
  if (APSSettingsGetIntWithDefault())
  {
    unsigned int IntWithDefault = APSSettingsGetIntWithDefault();
    if ((IntWithDefault & 0x80000000) != 0)
    {
      uint64_t v13 = 4294895205;
      goto LABEL_37;
    }
    unint64_t v3 = (4 * IntWithDefault) | 1;
    uint64_t v4 = *(void *)(DerivedStorage + 232);
    if (v4)
    {
      uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v5) {
        uint64_t v6 = v5;
      }
      else {
        uint64_t v6 = 0;
      }
      CFTypeRef v8 = *(uint64_t (**)(uint64_t))(v6 + 8);
      if (v8) {
        uint64_t v9 = v8(v4);
      }
      else {
        uint64_t v9 = 0;
      }
      v3 += v9;
    }
    if (*(void *)(DerivedStorage + 256) < v3)
    {
      uint64_t v13 = 4294895205;
LABEL_37:
      APSLogErrorAt();
      return v13;
    }
    if ((int)APSSettingsGetIntWithDefault() <= 0)
    {
      uint64_t v13 = 4294895205;
      goto LABEL_37;
    }
    if (gLogCategory_APAudioEngineRealTime <= 50
      && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v10 = APSSetFBOPropertyInt64();
    if (v10)
    {
      uint64_t v13 = v10;
      goto LABEL_37;
    }
  }
  else
  {
    int CFPreferenceNumberWithDefault = FigGetCFPreferenceNumberWithDefault();
    if (gLogCategory_APAudioEngineRealTime <= 50
      && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (CFPreferenceNumberWithDefault >= 1)
    {
      uint64_t v11 = APSSetFBOPropertyInt64();
      if (v11)
      {
        uint64_t v13 = v11;
        goto LABEL_37;
      }
    }
  }
  dispatch_resume(*(dispatch_object_t *)(DerivedStorage + 336));
  uint64_t v13 = 0;
  *(unsigned char *)(DerivedStorage + 344) = 1;
  return v13;
}

uint64_t realTimeAudioEngine_tas_Resume(uint64_t a1, uint64_t a2, const void *a3, const void *a4, const void *a5, const void *a6, const void *a7, const void *a8, const void *a9, const void *a10, const void *a11)
{
  MEMORY[0x1D25EB370](*(void *)(a1 + 88));
  if (*(unsigned char *)(a1 + 96) || !a3 || !a5 || !a7 || !a8 || !a9 || !a10 || !a11)
  {
    APSLogErrorAt();
    uint64_t v51 = 4294950525;
    goto LABEL_80;
  }
  CFTypeRef v53 = 0;
  uint64_t v19 = *(void *)(a2 + 32);
  long long v20 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 168) = v20;
  *(void *)(a1 + 288) = 0;
  int v21 = *(const void **)(a1 + 192);
  *(void *)(a1 + 184) = v19;
  *(void *)(a1 + 192) = a3;
  CFRetain(a3);
  if (v21) {
    CFRelease(v21);
  }
  CFAllocatorRef v22 = *(const void **)(a1 + 200);
  *(void *)(a1 + 200) = a4;
  if (a4) {
    CFRetain(a4);
  }
  if (v22) {
    CFRelease(v22);
  }
  int v23 = *(const void **)(a1 + 208);
  *(void *)(a1 + 208) = a5;
  CFRetain(a5);
  if (v23) {
    CFRelease(v23);
  }
  int v24 = *(const void **)(a1 + 216);
  *(void *)(a1 + 216) = a6;
  if (a6) {
    CFRetain(a6);
  }
  if (v24) {
    CFRelease(v24);
  }
  uint64_t v25 = *(const void **)(a1 + 224);
  *(void *)(a1 + 224) = a7;
  CFRetain(a7);
  if (v25) {
    CFRelease(v25);
  }
  uint64_t v26 = *(const void **)(a1 + 240);
  *(void *)(a1 + 240) = a8;
  CFRetain(a8);
  if (v26) {
    CFRelease(v26);
  }
  __int16 v27 = *(const void **)(a1 + 232);
  *(void *)(a1 + 232) = a9;
  CFRetain(a9);
  if (v27) {
    CFRelease(v27);
  }
  int v28 = *(const void **)(a1 + 248);
  *(void *)(a1 + 248) = a10;
  CFRetain(a10);
  if (v28) {
    CFRelease(v28);
  }
  uint64_t v29 = *(const void **)(a1 + 256);
  *(void *)(a1 + 256) = a11;
  CFRetain(a11);
  if (v29) {
    CFRelease(v29);
  }
  int IntWithDefault = APSSettingsGetIntWithDefault();
  uint64_t v31 = (CFAllocatorRef *)MEMORY[0x1E4F1CF80];
  if (IntWithDefault)
  {
    if (gLogCategory_APAudioEngineRealTime > 50
      || gLogCategory_APAudioEngineRealTime == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_46;
    }
    goto LABEL_42;
  }
  uint64_t v32 = *(void *)(a1 + 192);
  uint64_t v33 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v33) {
    uint64_t v34 = v33;
  }
  else {
    uint64_t v34 = 0;
  }
  int v35 = *(unsigned int (**)(uint64_t, void, uint64_t))(v34 + 120);
  if (v35 && !v35(v32, realTimeAudioEngine_tas_compressionSourceWriteDataCallback, a1)) {
    goto LABEL_52;
  }
  if (gLogCategory_APAudioEngineRealTime <= 50
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
LABEL_42:
    LogPrintF();
  }
LABEL_46:
  dispatch_source_t v36 = dispatch_source_create(MEMORY[0x1E4F14490], 0, 0, *(dispatch_queue_t *)(a1 + 104));
  *(void *)(a1 + 112) = v36;
  if (!v36 || (CFMutableArrayRef Mutable = CFArrayCreateMutable(*v31, 1, 0), (*(void *)(a1 + 128) = Mutable) == 0))
  {
    APSLogErrorAt();
    unsigned int v54 = -15480;
    goto LABEL_75;
  }
  CFArrayInsertValueAtIndex(Mutable, 0, (const void *)a1);
  uint64_t v38 = *(NSObject **)(a1 + 112);
  CMTimeValue v39 = *(const void **)(a1 + 128);
  if (v39) {
    uint64_t v40 = (void *)CFRetain(v39);
  }
  else {
    uint64_t v40 = 0;
  }
  dispatch_set_context(v38, v40);
  dispatch_source_set_event_handler_f(*(dispatch_source_t *)(a1 + 112), (dispatch_function_t)realTimeAudioEngine_tas_transcodeAndSendTimerEntry);
  dispatch_source_set_cancel_handler_f(*(dispatch_source_t *)(a1 + 112), (dispatch_function_t)FigCFRelease);
  dispatch_source_set_timer(*(dispatch_source_t *)(a1 + 112), 0, 1000000 * *(unsigned int *)(a1 + 40), 0);
  dispatch_resume(*(dispatch_object_t *)(a1 + 112));
  *(unsigned char *)(a1 + 120) = 1;
LABEL_52:
  unsigned int v41 = *(_DWORD *)(a1 + 40) * *(double *)(a1 + 152) / (1000 * *(_DWORD *)(a1 + 172));
  unsigned int v42 = v41 + (v41 >> 2);
  if (v42 <= 0xC) {
    unsigned int v42 = 12;
  }
  *(_DWORD *)(a1 + 144) = v42;
  if (gLogCategory_APAudioEngineRealTime <= 50
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v43 = *(void *)(a1 + 192);
  uint64_t v44 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v44) {
    uint64_t v45 = v44;
  }
  else {
    uint64_t v45 = 0;
  }
  double v46 = *(uint64_t (**)(uint64_t))(v45 + 8);
  if (!v46)
  {
    unsigned int v54 = -12782;
    goto LABEL_74;
  }
  unsigned int v54 = v46(v43);
  if (v54) {
    goto LABEL_74;
  }
  uint64_t CMBaseObject = FigEndpointAudioSourceGetCMBaseObject();
  uint64_t v48 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v48) {
    uint64_t v49 = v48;
  }
  else {
    uint64_t v49 = 0;
  }
  CFRange v50 = *(uint64_t (**)(uint64_t, __CFString *, CFAllocatorRef, CFTypeRef *))(v49 + 48);
  if (!v50)
  {
    unsigned int v54 = -12782;
    goto LABEL_74;
  }
  unsigned int v54 = v50(CMBaseObject, @"AlgorithmicLatency", *v31, &v53);
  if (v54 || (*(_DWORD *)(a1 + 272) = -(int)CFGetInt64Ranged(), v54) || (unsigned int v54 = APSRealTimePTPClockCreate()) != 0)
  {
LABEL_74:
    APSLogErrorAt();
    if (!v54) {
      goto LABEL_76;
    }
LABEL_75:
    realTimeAudioEngine_tas_SuspendInternal(a1);
    goto LABEL_76;
  }
  *(unsigned char *)(a1 + 96) = 1;
LABEL_76:
  if (v53) {
    CFRelease(v53);
  }
  uint64_t v51 = v54;
  if (v54) {
    APSLogErrorAt();
  }
LABEL_80:
  MEMORY[0x1D25EB390](*(void *)(a1 + 88));
  return v51;
}

void realTimeAudioEngine_renewAudioIOAssertionDispatch(const void *a1)
{
  unsigned int v2 = *(_DWORD *)(CMBaseObjectGetDerivedStorage() + 88);
  if (v2 && (dispatch_time(0, 1000000000 * v2), APSAudioIOAssertionTimingControllerAssertUntilTime()))
  {
    APSLogErrorAt();
    if (!a1) {
      return;
    }
  }
  else if (!a1)
  {
    return;
  }
  CFRelease(a1);
}

void realTimeAudioEngine_NotifyIsPlayingAmbientAudio(int a1)
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2000000000;
  int v8 = 0;
  uint64_t v1 = a1 != 0;
  if (IsAppleTV())
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 0x40000000;
    block[2] = __realTimeAudioEngine_NotifyIsPlayingAmbientAudio_block_invoke;
    block[3] = &unk_1E6892960;
    block[4] = &v5;
    if (realTimeAudioEngine_NotifyIsPlayingAmbientAudio_sTokenOnce != -1) {
      dispatch_once(&realTimeAudioEngine_NotifyIsPlayingAmbientAudio_sTokenOnce, block);
    }
    if (*((_DWORD *)v6 + 6))
    {
      APSLogErrorAt();
      if (gLogCategory_APAudioEngineRealTime <= 90
        && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
      {
        goto LABEL_9;
      }
    }
    else
    {
      uint32_t v2 = notify_set_state(realTimeAudioEngine_NotifyIsPlayingAmbientAudio_sToken, v1);
      *((_DWORD *)v6 + 6) = v2;
      if (v2)
      {
        APSLogErrorAt();
        if (gLogCategory_APAudioEngineRealTime <= 90
          && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
        {
          goto LABEL_9;
        }
      }
      else
      {
        uint32_t v3 = notify_post("com.apple.airplay.isPlayingAmbientAudioChanged");
        *((_DWORD *)v6 + 6) = v3;
        if (!v3)
        {
          if (gLogCategory_APAudioEngineRealTime > 50
            || gLogCategory_APAudioEngineRealTime == -1 && !_LogCategory_Initialize())
          {
            goto LABEL_11;
          }
LABEL_9:
          LogPrintF();
          goto LABEL_11;
        }
        APSLogErrorAt();
        if (gLogCategory_APAudioEngineRealTime <= 90
          && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
        {
          goto LABEL_9;
        }
      }
    }
  }
LABEL_11:
  _Block_object_dispose(&v5, 8);
}

void realTimeAudioEngine_performSuspensionGutsInternal(uint64_t a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 664));
  realTimeAudioEngine_tas_SuspendInternal(DerivedStorage + 576);
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 664));
  uint64_t v5 = *(NSObject **)(DerivedStorage + 336);
  if (v5)
  {
    dispatch_source_cancel(v5);
    if (!*(unsigned char *)(DerivedStorage + 344)) {
      dispatch_resume(*(dispatch_object_t *)(DerivedStorage + 336));
    }
    uint64_t v6 = *(NSObject **)(DerivedStorage + 336);
    if (v6)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(DerivedStorage + 336));
      dispatch_release(v6);
      *(void *)(DerivedStorage + 336) = 0;
    }
  }
  *(unsigned char *)(DerivedStorage + 344) = 0;
  if (a2)
  {
    uint64_t v7 = CMBaseObjectGetDerivedStorage();
    CMTime v39 = *(CMTime *)*(void *)&MEMORY[0x1E4F1F9F8];
    CMTime v38 = v39;
    if (*(void *)(v7 + 376))
    {
      uint64_t v8 = v7;
      HostTimeClocCFIndex k = CMClockGetHostTimeClock();
      CMClockGetTime(&v39, HostTimeClock);
      CMTime lhs = v39;
      CMTime rhs = *(CMTime *)(v8 + 384);
      CMTimeSubtract(&v38, &lhs, &rhs);
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      if (Mutable)
      {
        uint64_t v11 = Mutable;
        CMTime lhs = v38;
        CMTimeGetSeconds(&lhs);
        FigCFDictionarySetInt64();
        uint64_t v12 = (const void *)APSStatsHistogramCopyValuesAsRTCString();
        APSStatsHistogramGetTotalSampleCount();
        FigCFDictionarySetInt64();
        CFDictionarySetValue(v11, @"senderRenderDeadlineHistogram", v12);
        uint64_t v13 = CMBaseObjectGetDerivedStorage();
        lhs.CMTimeFlags value = 0;
        LODWORD(rhs.CFDictionarySetValue(theDict, key, value) = 0;
        if (*(void *)(v13 + 376))
        {
          uint64_t v14 = v13;
          CFTypeRef cf = (CFTypeRef)APSThreadSafeDictionaryCopyMutableDictionary();
          CFArrayRef v15 = (const __CFArray *)FigCFDictionaryCopyArrayOfValues();
          CFIndex Count = CFArrayGetCount(v15);
          if (Count >= 1)
          {
            CFIndex v17 = Count;
            for (CFIndex i = 0; i != v17; ++i)
            {
              CFArrayGetValueAtIndex(v15, i);
              uint64_t v19 = APSThreadSafeDictionaryCopyMutableDictionary();
              if (!v19) {
                break;
              }
              long long v20 = (__CFDictionary *)v19;
              if (FigCFDictionaryGetInt64IfPresent())
              {
                FigCFDictionaryGetInt32IfPresent();
                mach_absolute_time();
                UpTicksToSeconds();
                FigCFDictionarySetInt32();
                CFDictionaryRemoveValue(v20, @"AudioStreamLastStartTime");
              }
              CFArrayAppendValue(*(CFMutableArrayRef *)(v14 + 424), v20);
              CFRelease(v20);
            }
          }
          if (v15) {
            CFRelease(v15);
          }
          if (cf) {
            CFRelease(cf);
          }
        }
        if (CFEqual(*(CFTypeRef *)(v8 + 8), (CFTypeRef)*MEMORY[0x1E4F21468]))
        {
          FigCFDictionarySetValue();
          FigCFDictionarySetInt64();
        }
        else if (CFEqual(*(CFTypeRef *)(v8 + 8), (CFTypeRef)*MEMORY[0x1E4F21478]))
        {
          CMTime lhs = v38;
          if (CMTimeGetSeconds(&lhs) < 60.0)
          {
LABEL_29:
            if (v12) {
              CFRelease(v12);
            }
            CFRelease(v11);
            goto LABEL_32;
          }
          FigCFDictionarySetValue();
        }
        FigCFDictionarySetValue();
        CFDictionarySetValue(v11, @"sessionType", @"AudioRealTime");
        FigCFDictionarySetInt32();
        APSRTCReportingAgentSendEvent();
        if (gLogCategory_APAudioEngineRealTime <= 50
          && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
        {
          CMTime lhs = v38;
          CMTimeGetSeconds(&lhs);
          LogPrintF();
        }
        goto LABEL_29;
      }
    }
  }
LABEL_32:
  int v21 = (void *)CMBaseObjectGetDerivedStorage();
  CFAllocatorRef v22 = (const void *)v21[47];
  if (v22)
  {
    CFRelease(v22);
    v21[47] = 0;
  }
  int v23 = (const void *)v21[52];
  if (v23)
  {
    CFRelease(v23);
    v21[52] = 0;
  }
  int v24 = (const void *)v21[53];
  if (v24)
  {
    CFRelease(v24);
    v21[53] = 0;
  }
  uint64_t v25 = *(const void **)(DerivedStorage + 200);
  if (v25)
  {
    CFRelease(v25);
    *(void *)(DerivedStorage + 200) = 0;
  }
  uint64_t v26 = *(const void **)(DerivedStorage + 208);
  if (v26)
  {
    CFRelease(v26);
    *(void *)(DerivedStorage + 208) = 0;
  }
  __int16 v27 = *(const void **)(DerivedStorage + 232);
  if (v27)
  {
    CFRelease(v27);
    *(void *)(DerivedStorage + 232) = 0;
  }
  int v28 = *(const void **)(DerivedStorage + 240);
  if (v28)
  {
    CFRelease(v28);
    *(void *)(DerivedStorage + 240) = 0;
  }
  uint64_t v29 = *(const void **)(DerivedStorage + 248);
  if (v29)
  {
    CFRelease(v29);
    *(void *)(DerivedStorage + 248) = 0;
  }
  *(void *)(DerivedStorage + 256) = 0;
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 552));
  uint64_t v30 = *(const void **)(DerivedStorage + 560);
  if (v30)
  {
    CFRelease(v30);
    *(void *)(DerivedStorage + 560) = 0;
  }
  uint64_t v31 = *(const void **)(DerivedStorage + 568);
  if (v31)
  {
    CFRelease(v31);
    *(void *)(DerivedStorage + 568) = 0;
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 552));
  realTimeAudioEngine_serviceRenderDeadlineMessageQueue();
  if (FigCFEqual()) {
    realTimeAudioEngine_NotifyIsPlayingAmbientAudio(0);
  }
  realTimeAudioEngine_updateDynamicLatencyIfNeeded(a1, 0);
  *(unsigned char *)(DerivedStorage + 128) = 0;
  uint64_t v32 = *(const void **)(DerivedStorage + 272);
  if (v32)
  {
    CFRelease(v32);
    *(void *)(DerivedStorage + 272) = 0;
  }
  uint64_t v33 = *(const void **)(DerivedStorage + 280);
  if (v33)
  {
    CFRelease(v33);
    *(void *)(DerivedStorage + 280) = 0;
  }
  uint64_t v34 = *(const void **)(DerivedStorage + 288);
  if (v34)
  {
    CFRelease(v34);
    *(void *)(DerivedStorage + 288) = 0;
  }
}

void realTimeAudioEngine_resumeComplete(CFTypeRef *a1)
{
  CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioEngineRealTime <= 50
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint32_t v2 = (void (*)(CFTypeRef, void, CFTypeRef))a1[2];
  if (v2) {
    v2(*a1, *((unsigned int *)a1 + 10), a1[4]);
  }
  APSDispatchSectionLeave();
  CFTypeRef v3 = a1[1];
  if (v3) {
    CFRelease(v3);
  }
  if (*a1) {
    CFRelease(*a1);
  }
  free(a1);
}

void realTimeAudioEngine_apsRTPPacketHandlerCleanUp(CFTypeRef cf)
{
  if (cf) {
    CFRelease(cf);
  }
}

uint64_t realTimeAudioEngine_createRedundantAudioDataMessageBBuf(uint64_t a1, void *a2)
{
  uint64_t v3 = APTransportStreamSendBackingProviderAcquireBBuf();
  if (v3) {
    APSLogErrorAt();
  }
  else {
    *a2 = 0;
  }
  return v3;
}

uint64_t realTimeAudioEngine_relinquishMessageBacking()
{
  return 0;
}

uint64_t realTimeAudioEngine_updateHostRateAndAnchorTimeRelativeToRemoteRTPTimebase()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  Float64 outRelativeRate = NAN;
  CMTime v4 = *(CMTime *)*(void *)&MEMORY[0x1E4F1F9F8];
  CMTime v5 = v4;
  HostTimeClocCFIndex k = CMClockGetHostTimeClock();
  if (CMSyncGetRelativeRateAndAnchorTime(HostTimeClock, *(CMClockOrTimebaseRef *)(DerivedStorage + 288), &outRelativeRate, &v4, &v5))
  {
    return APSLogErrorAt();
  }
  uint64_t result = APSRealTimeReadableWrite();
  if (result) {
    return APSLogErrorAt();
  }
  return result;
}

uint64_t realTimeAudioEngine_periodicTasksTimerEntry()
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  kdebug_trace();
  if (!*(unsigned char *)DerivedStorage)
  {
    realTimeAudioEngine_updateCryptor();
    if (CFSetGetCount(*(CFSetRef *)(DerivedStorage + 152)))
    {
      uint64_t v1 = (unsigned char *)CMBaseObjectGetDerivedStorage();
      uint32_t v2 = (CMTimeValue *)MEMORY[0x1E4F1F9F8];
      long long v15 = *(_OWORD *)(MEMORY[0x1E4F1F9F8] + 8);
      CMTime v14 = *(CMTime *)*(void *)&MEMORY[0x1E4F1F9F8];
      CMTime v13 = v14;
      if (!*v1)
      {
        uint64_t v3 = v1;
        APSNetworkClockLogCurrentNetworkTime();
        realTimeAudioEngine_handleTimeAnnounce();
        double v4 = *((double *)v3 + 20);
        HostTimeClocCFIndex k = CMClockGetHostTimeClock();
        CMClockGetTime(&v13, HostTimeClock);
        CMTime time1 = v13;
        CMTime time2 = *(CMTime *)(v3 + 472);
        if (CMTimeCompare(&time1, &time2) >= 1)
        {
          CMTimebaseGetTimeWithTimeScale(&time1, *((CMTimebaseRef *)v3 + 36), (int)v4, kCMTimeRoundingMethod_RoundHalfAwayFromZero);
          CMTimeValue value = time1.value;
          CMTimeFlags flags = time1.flags;
          CMTimeScale timescale = time1.timescale;
          if ((time1.flags & 0x1D) != 1)
          {
            APSLogErrorAt();
            APSSignalErrorAt();
            return kdebug_trace();
          }
          CMTimeEpoch epoch = time1.epoch;
          APSRealTimeWritableRead();
          if (v14.flags)
          {
            CMTime time2 = v14;
            rhs.CMTimeValue value = value;
            rhs.CMTimeScale timescale = timescale;
            rhs.CMTimeFlags flags = flags;
            rhs.CMTimeEpoch epoch = epoch;
            CMTimeSubtract(&time1, &time2, &rhs);
            long long v15 = *(_OWORD *)&time1.timescale;
            CMTime time2 = time1;
            CMTimeConvertScale(&time1, &time2, (int)v4, kCMTimeRoundingMethod_RoundHalfAwayFromZero);
            CMTimeValue v8 = time1.value;
            long long v15 = *(_OWORD *)&time1.timescale;
          }
          else
          {
            CMTimeValue v8 = *v2;
          }
          if (gLogCategory_APAudioEngineRealTime <= 50
            && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
          {
            time1.CMTimeValue value = v8;
            *(_OWORD *)&time1.CMTimeScale timescale = v15;
            CMTimeGetSeconds(&time1);
            LogPrintF();
          }
          CMTime time2 = v13;
          CMTime rhs = *(CMTime *)(v3 + 448);
          CMTimeAdd(&time1, &time2, &rhs);
          *(CMTime *)(v3 + 472) = time1;
        }
        realTimeAudioEngine_serviceRenderDeadlineMessageQueue();
        realTimeAudioEngine_updateArrivalToRenderTicks();
        realTimeAudioEngine_updateHostRateAndAnchorTimeRelativeToRemoteRTPTimebase();
        CMTime time1 = v13;
        CMTime time2 = *(CMTime *)(v3 + 520);
        if (CMTimeCompare(&time1, &time2) >= 1)
        {
          if (gLogCategory_APAudioEngineRealTime <= 50
            && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          CMTime time2 = v13;
          CMTime rhs = *(CMTime *)(v3 + 496);
          CMTimeAdd(&time1, &time2, &rhs);
          *(CMTime *)(v3 + 520) = time1;
        }
      }
    }
  }
  return kdebug_trace();
}

uint64_t realTimeAudioEngine_serviceRenderDeadlineMessageQueue()
{
  CMBaseObjectGetDerivedStorage();
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t result = APSAtomicMessageQueueReadMessage();
  if (result)
  {
    long long v11 = *MEMORY[0x1E4F1F9F8];
    CMTimeEpoch v1 = *(void *)(MEMORY[0x1E4F1F9F8] + 16);
    do
    {
      memset(&v12, 0, sizeof(v12));
      uint64_t v2 = v13;
      int v3 = v14;
      uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
      *(_OWORD *)&v12.CMTimeValue value = v11;
      v12.CMTimeEpoch epoch = v1;
      *(_OWORD *)&v19.CMTimeValue value = v11;
      v19.CMTimeEpoch epoch = v1;
      *(_OWORD *)&v18.CMTimeValue value = v11;
      v18.CMTimeEpoch epoch = v1;
      CMTime v5 = *(OpaqueCMTimebase **)(DerivedStorage + 288);
      if (v5 && CMTimebaseGetRate(v5) != 0.0)
      {
        CMClockMakeHostTimeFromSystemUnits(&time, v2);
        HostTimeClocCFIndex k = CMClockGetHostTimeClock();
        CMSyncConvertTime(&lhs, &time, HostTimeClock, *(CMClockOrTimebaseRef *)(DerivedStorage + 288));
        *(_OWORD *)&rhs.CMTimeScale timescale = *(_OWORD *)&lhs.timescale;
        int32_t v7 = (int)*(double *)(DerivedStorage + 160);
        rhs.CMTimeValue value = lhs.value;
        CMTimeConvertScale(&lhs, &rhs, v7, kCMTimeRoundingMethod_RoundHalfAwayFromZero);
        if (v3 - LODWORD(lhs.value) >= 0) {
          int64_t v8 = (v3 - LODWORD(lhs.value));
        }
        else {
          int64_t v8 = (LODWORD(lhs.value) - v3);
        }
        double v9 = *(double *)(DerivedStorage + 160);
        float v10 = v9;
        CMTimeMake(&v19, (float)((float)(*(float *)(DerivedStorage + 132) + *(float *)(DerivedStorage + 140)) * v10), (int)v9);
        CMTimeMake(&v18, v8, (int)*(double *)(DerivedStorage + 160));
        CMTime lhs = v19;
        CMTime rhs = v18;
        CMTimeSubtract(&v12, &lhs, &rhs);
      }
      if (v12.flags)
      {
        CMTime v19 = v12;
        CMTimeGetSeconds(&v19);
        APSStatsHistogramAddValue();
      }
      uint64_t result = APSAtomicMessageQueueReadMessage();
    }
    while (result);
  }
  return result;
}

uint64_t realTimeAudioEngine_tas_compressionSourceWriteDataCallback(uint64_t a1, uint64_t a2, uint64_t a3)
{
  kdebug_trace();
  if (*(unsigned char *)(a3 + 80))
  {
    APSAtomicMessageQueueSendMessage();
    return APSRealTimeSignalRaise();
  }
  else
  {
    return realTimeAudioEngine_tas_transcodeAndSendEntry(a3);
  }
}

const void *realTimeAudioEngine_tas_transcodeAndSendTimerEntry(const __CFArray *a1)
{
  uint64_t result = CFArrayGetValueAtIndex(a1, 0);
  if (result)
  {
    uint64_t v2 = (uint64_t)result;
    kdebug_trace();
    return (const void *)realTimeAudioEngine_tas_transcodeAndSendEntry(v2);
  }
  return result;
}

void realTimeAudioEngine_tas_SuspendInternal(uint64_t a1)
{
  *(unsigned char *)(a1 + 96) = 0;
  uint64_t v2 = *(NSObject **)(a1 + 112);
  if (v2)
  {
    dispatch_source_cancel(v2);
    if (!*(unsigned char *)(a1 + 120)) {
      dispatch_resume(*(dispatch_object_t *)(a1 + 112));
    }
    int v3 = *(NSObject **)(a1 + 112);
    if (v3)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(a1 + 112));
      dispatch_release(v3);
      *(void *)(a1 + 112) = 0;
    }
    double v4 = *(void **)(a1 + 128);
    if (v4) {
      dispatch_sync_f(*(dispatch_queue_t *)(a1 + 104), v4, (dispatch_function_t)realTimeAudioEngine_tas_transcodeAndSendTimerInvalidate);
    }
  }
  *(unsigned char *)(a1 + 120) = 0;
  uint64_t v5 = *(void *)(a1 + 192);
  if (v5)
  {
    uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v6) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 0;
    }
    int64_t v8 = *(void (**)(uint64_t))(v7 + 16);
    if (v8) {
      v8(v5);
    }
    uint64_t v9 = *(void *)(a1 + 192);
    uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v10) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    CMTime v12 = *(void (**)(uint64_t, void, void))(v11 + 120);
    if (v12) {
      v12(v9, 0, 0);
    }
  }
  *(_DWORD *)(a1 + 272) = 0;
  APSRealTimeWritableWrite();
  while (APSAtomicMessageQueueReadMessage())
    ;
  *(void *)(a1 + 288) = 0;
  uint64_t v13 = *(const void **)(a1 + 192);
  if (v13)
  {
    CFRelease(v13);
    *(void *)(a1 + 192) = 0;
  }
  uint64_t v14 = *(const void **)(a1 + 200);
  if (v14)
  {
    CFRelease(v14);
    *(void *)(a1 + 200) = 0;
  }
  long long v15 = *(const void **)(a1 + 208);
  if (v15)
  {
    CFRelease(v15);
    *(void *)(a1 + 208) = 0;
  }
  uint64_t v16 = *(const void **)(a1 + 216);
  if (v16)
  {
    CFRelease(v16);
    *(void *)(a1 + 216) = 0;
  }
  CFIndex v17 = *(const void **)(a1 + 224);
  if (v17)
  {
    CFRelease(v17);
    *(void *)(a1 + 224) = 0;
  }
  CMTime v18 = *(const void **)(a1 + 240);
  if (v18)
  {
    CFRelease(v18);
    *(void *)(a1 + 240) = 0;
  }
  CMTime v19 = *(const void **)(a1 + 232);
  if (v19)
  {
    CFRelease(v19);
    *(void *)(a1 + 232) = 0;
  }
  long long v20 = *(const void **)(a1 + 248);
  if (v20)
  {
    CFRelease(v20);
    *(void *)(a1 + 248) = 0;
  }
  int v21 = *(const void **)(a1 + 256);
  if (v21)
  {
    CFRelease(v21);
    *(void *)(a1 + 256) = 0;
  }
  CFAllocatorRef v22 = *(const void **)(a1 + 128);
  if (v22)
  {
    CFRelease(v22);
    *(void *)(a1 + 128) = 0;
  }
  int v23 = *(const void **)(a1 + 296);
  if (v23)
  {
    CFRelease(v23);
    *(void *)(a1 + 296) = 0;
  }
}

uint64_t realTimeAudioEngine_tas_transcodeAndSendEntry(uint64_t a1)
{
  uint64_t v130 = *MEMORY[0x1E4F143B8];
  kdebug_trace();
  APSTimeProfilerTaskBegin();
  uint64_t v2 = FigSimpleMutexTryLock();
  if (!v2) {
    goto LABEL_201;
  }
  if (!*(unsigned char *)(a1 + 96)) {
    goto LABEL_200;
  }
  __swp(v2, (unsigned int *)(a1 + 264));
  if ((v2 & 0x8000000000000000) == 0)
  {
    memset(lhs, 0, 24);
    CMTimeMake((CMTime *)lhs, v2, (int)*(double *)(a1 + 152));
    *(void *)lhs += *(int *)(a1 + 272);
    APSRealTimeWritableWrite();
  }
  long long v107 = *MEMORY[0x1E4F1F9F8];
  *(_OWORD *)CMTime lhs = *MEMORY[0x1E4F1F9F8];
  int v3 = (CMTime *)MEMORY[0x1E4F1FA48];
  CMTimeEpoch v4 = *(void *)(MEMORY[0x1E4F1F9F8] + 16);
  *(void *)&lhs[16] = v4;
  *(void *)&lhs[24] = 0;
  while (APSAtomicMessageQueueReadMessage())
  {
    v129.int value = *(void *)lhs;
    CMTimeFlags v5 = *(_DWORD *)&lhs[12];
    v129.uint64_t timescale = *(_DWORD *)&lhs[8];
    CMTimeEpoch v6 = *(void *)&lhs[16];
    uint64_t v7 = *(void *)&lhs[24];
    *(_OWORD *)&hostTime.int value = v107;
    hostTime.CMTimeEpoch epoch = v4;
    CMTime v125 = *v3;
    double v8 = *(double *)(a1 + 152);
    uint64_t v9 = *(void *)(a1 + 192);
    uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v10) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    CMTime v12 = *(uint64_t (**)(uint64_t))(v11 + 24);
    if (v12)
    {
      int v13 = v12(v9);
      if (!v13)
      {
        if ((v5 & 0x1D) == 1)
        {
          uint64_t v14 = *(const void **)(a1 + 216);
          long long v15 = *(const void **)(a1 + 224);
          time.int value = v129.value;
          time.uint64_t timescale = v129.timescale;
          time.CMTimeFlags flags = v5;
          time.CMTimeEpoch epoch = v6;
          CMSyncConvertTime(&v125, &time, v14, v15);
          CMTime v123 = v125;
          CMTimeConvertScale(&time, &v123, (int)v8, kCMTimeRoundingMethod_RoundHalfAwayFromZero);
          CMTime v125 = time;
          if (gLogCategory_APAudioEngineRealTime <= 40
            && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
        }
        else
        {
          CMTimebaseGetTimeWithTimeScale(&v125, *(CMTimebaseRef *)(a1 + 224), (int)v8, kCMTimeRoundingMethod_RoundHalfAwayFromZero);
        }
        if ((v125.flags & 0x1D) != 1)
        {
          APSLogErrorAt();
          int v16 = APSSignalErrorAt();
          goto LABEL_36;
        }
        v125.value += *(int *)(a1 + 272);
        APSRealTimeWritableRead();
        APSRealTimeWritableWrite();
        int value = v125.value;
        if ((int)v8 >= 0) {
          int v18 = (int)v8;
        }
        else {
          int v18 = (int)v8 + 7;
        }
        uint64_t v19 = *(void *)(a1 + 248);
        uint64_t v20 = *(void *)(a1 + 256);
        LOWORD(time.CFDictionarySetValue(theDict, key, value) = 0;
        LOWORD(v123.CFDictionarySetValue(theDict, key, value) = 0;
        if (APMessageRingFlush(v19, &time)) {
          goto LABEL_41;
        }
        if (!v20) {
          goto LABEL_33;
        }
        if (APMessageRingFlush(v20, &v123))
        {
LABEL_41:
          APSLogErrorAt();
          if (v7) {
            goto LABEL_34;
          }
        }
        else
        {
          unsigned int value_low = LOWORD(time.value);
          unsigned int v22 = LOWORD(v123.value);
          if (LOWORD(time.value) != LOWORD(v123.value) && gLogCategory_APAudioEngineRealTime <= 90)
          {
            if (gLogCategory_APAudioEngineRealTime != -1) {
              goto LABEL_29;
            }
            if (_LogCategory_Initialize())
            {
              unsigned int value_low = LOWORD(time.value);
              unsigned int v22 = LOWORD(v123.value);
LABEL_29:
              uint64_t v93 = value_low;
              CMTimeValue v94 = v22;
              LogPrintF();
            }
          }
LABEL_33:
          realTimeAudioEngine_tas_flushHoses(a1, time.value, value + (v18 >> 3));
          if (v7) {
LABEL_34:
          }
            APSRealTimeSignalRaise();
        }
        int v16 = 0;
        goto LABEL_36;
      }
      int v16 = v13;
    }
    else
    {
      int v16 = -12782;
    }
    APSLogErrorAt();
LABEL_36:
    if (*(void *)&lhs[24]) {
      CFRelease(*(CFTypeRef *)&lhs[24]);
    }
    if (v16)
    {
      APSLogErrorAt();
      goto LABEL_202;
    }
  }
  uint64_t v23 = *(void *)(a1 + 192);
  uint64_t v24 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v24) {
    uint64_t v25 = v24;
  }
  else {
    uint64_t v25 = 0;
  }
  uint64_t v26 = *(unsigned int (**)(uint64_t, void))(v25 + 104);
  if (!v26 || !v26(v23, 0)) {
    goto LABEL_200;
  }
  kdebug_trace();
  if (!*(_DWORD *)(a1 + 144)) {
    goto LABEL_161;
  }
  int v27 = 0;
  uint64_t v101 = *MEMORY[0x1E4F47668];
  while (2)
  {
    if (APMessageRingGetNextFreeBacking(*(void *)(a1 + 248)))
    {
      double v28 = *(double *)(a1 + 152);
      int64_t v29 = *(unsigned int *)(a1 + 172);
      uint64_t v121 = 0;
      uint64_t v122 = 0;
      *(_OWORD *)&v129.int value = v107;
      v129.CMTimeEpoch epoch = v4;
      long long v120 = 0uLL;
      unint64_t v30 = *(void *)(a1 + 72);
      v119[4] = 0;
      v118[1] = 0;
      *(void *)uint64_t v119 = 0;
      uint64_t v117 = 0;
      v118[0] = 0;
      CFTypeRef cf = 0;
      uint64_t v116 = 0;
      CFTypeRef v113 = 0;
      CFTypeRef v114 = 0;
      uint64_t v32 = *(void *)(a1 + 240);
      uint64_t v31 = *(void *)(a1 + 248);
      uint64_t v105 = *(void *)(a1 + 256);
      CFTypeRef v112 = 0;
      uint64_t v33 = mach_absolute_time();
      kdebug_trace();
      APSRealTimeWritableRead();
      if (v129.flags)
      {
        CMTimebaseGetTime(&rhs, *(CMTimebaseRef *)(a1 + 224));
        *(CMTime *)CMTime lhs = v129;
        CMTimeSubtract(&time1, (CMTime *)lhs, &rhs);
        CMTimeMake(&time2, 250, 1000);
        if (CMTimeCompare(&time1, &time2) <= 0)
        {
          uint64_t v106 = v31;
          uint64_t v34 = *(void *)(a1 + 192);
          uint64_t v35 = *(void *)(CMBaseObjectGetVTable() + 16);
          uint64_t v36 = v35 ? v35 : 0;
          CMTimeValue v37 = *(unsigned int (**)(uint64_t, void))(v36 + 104);
          if (v37)
          {
            if (v37(v34, 0))
            {
              if (v106 && (uint64_t v38 = APMessageRingGetNextFreeBacking(v106)) != 0)
              {
                uint64_t v39 = v38;
                if (!APSTransportMessageGetAudioDataPointer())
                {
                  uint64_t v102 = v39;
                  uint64_t v40 = *(void *)(a1 + 200);
                  uint64_t v104 = v32;
                  if (v40
                    && ((v41 = *(void *)(CMBaseObjectGetVTable() + 16)) == 0 ? (uint64_t v42 = 0) : (uint64_t v42 = v41),
                        (uint64_t v43 = *(uint64_t (**)(uint64_t))(v42 + 8)) != 0))
                  {
                    uint64_t v103 = v43(v40);
                  }
                  else
                  {
                    uint64_t v103 = 0;
                  }
                  uint64_t v44 = *(void *)(a1 + 192);
                  uint64_t v46 = v121;
                  uint64_t v45 = v122;
                  uint64_t v47 = *(void *)(CMBaseObjectGetVTable() + 16);
                  if (v47) {
                    uint64_t v48 = v47;
                  }
                  else {
                    uint64_t v48 = 0;
                  }
                  uint64_t v49 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t *, uint64_t *, void, void, uint64_t, CMTimeValue, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 112);
                  if (v49)
                  {
                    int v50 = v49(v44, v45, v46 - v103, v118, 1, &v121, &v117, 0, 0, v93, v94, v95, v96, v97, v98);
                    v29 *= v117;
                    if (v50 == -16774)
                    {
                      uint64_t v32 = v104;
                      if (gLogCategory_APAudioEngineRealTime <= 30
                        && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
                      {
                        LogPrintF();
                      }
LABEL_134:
                      uint64_t v51 = 0;
                      EmptyBBuf = 0;
LABEL_135:
                      if (cf) {
                        CFRelease(cf);
                      }
                      if (v114) {
                        CFRelease(v114);
                      }
                      if (v113) {
                        CFRelease(v113);
                      }
                      if (v112) {
                        CFRelease(v112);
                      }
                      if (EmptyBBuf) {
                        APSRTPPacketHandlerReturnComposedBBuf(v32, EmptyBBuf);
                      }
                      if (v51) {
                        APSRTPPacketHandlerReturnBBuf(v32, v51);
                      }
                      if (!v29) {
                        goto LABEL_161;
                      }
                      if (++v27 >= *(_DWORD *)(a1 + 144)) {
                        goto LABEL_161;
                      }
                      continue;
                    }
                    uint64_t v32 = v104;
                    if (!v50)
                    {
                      if (!v121) {
                        goto LABEL_134;
                      }
                      CMTime v108 = v129;
                      *(void *)CMTime lhs = 0x7FF8000000000000;
                      *(_OWORD *)&lhs[8] = v107;
                      *(void *)&lhs[24] = v4;
                      *(_OWORD *)&v128.int value = v107;
                      v128.CMTimeEpoch epoch = v4;
                      APSRealTimeReadableRead();
                      uint64_t v53 = 0;
                      if (fabs(*(double *)lhs) != INFINITY)
                      {
                        if (lhs[20] & 1) != 0 && (v128.flags)
                        {
                          CMTime hostTime = v108;
                          CMTime v125 = v128;
                          CMTimeSubtract(&time, &hostTime, &v125);
                          CMTimeMultiplyByFloat64(&v125, &time, *(Float64 *)lhs);
                          CMTime v123 = *(CMTime *)&lhs[8];
                          CMTimeAdd(&hostTime, &v123, &v125);
                          uint64_t v53 = CMClockConvertHostTimeToSystemUnits(&hostTime);
                        }
                        else
                        {
                          uint64_t v53 = 0;
                        }
                      }
                      uint64_t v54 = v53 - v30;
                      if (v53 < v30 || v53 == 0) {
                        uint64_t v54 = v101;
                      }
                      uint64_t v100 = v54;
                      if (gLogCategory_APAudioEngineRealTime <= 30
                        && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
                      {
                        CMTimeValue v56 = v129.value;
                        uint64_t timescale = v129.timescale;
                        uint64_t v97 = UpTicksToMilliseconds();
                        uint64_t v98 = UpTicksToMilliseconds();
                        uint64_t v95 = timescale;
                        uint64_t v96 = v53;
                        uint64_t v93 = v33;
                        CMTimeValue v94 = v56;
                        LogPrintF();
                      }
                      CMTime hostTime = v129;
                      CMTimeConvertScale((CMTime *)lhs, &hostTime, (int)v28, kCMTimeRoundingMethod_RoundHalfAwayFromZero);
                      uint64_t v58 = *(void *)lhs;
                      long long v120 = *(_OWORD *)&lhs[8];
                      CMTimeMake(&hostTime, v29, (int)v28);
                      CMTime v125 = v129;
                      CMTimeAdd((CMTime *)lhs, &v125, &hostTime);
                      CMTime v129 = *(CMTime *)lhs;
                      APSRealTimeWritableWrite();
                      if (!*(void *)(a1 + 200))
                      {
                        LODWORD(v29) = 0;
                        goto LABEL_80;
                      }
                      v119[0] = APMessageRingGetNextEnqueueSequenceNumber(v106);
                      *(void *)&v119[1] = v58;
                      *(_OWORD *)CMTime lhs = *(_OWORD *)&v3->value;
                      *(void *)&lhs[16] = v3->epoch;
                      CMTime v125 = *(CMTime *)lhs;
                      v123.int value = 0;
                      uint64_t v59 = mach_absolute_time();
                      CMClockMakeHostTimeFromSystemUnits((CMTime *)lhs, v59);
                      CMTime time = *(CMTime *)lhs;
                      APSRealTimePTPClockGetEstimatedPTPTimeForHostTime();
                      CMTime time = *(CMTime *)lhs;
                      CMTimeGetSeconds(&time);
                      CMTime time = v125;
                      CMTimeGetSeconds(&time);
                      kdebug_trace();
                      if (!APSTransportMessageSetAudioDataHeader())
                      {
                        uint64_t v99 = v58;
                        uint64_t NextFreeBacking = APMessageRingGetNextFreeBacking(v105);
                        if (NextFreeBacking)
                        {
                          uint64_t v61 = NextFreeBacking;
                          EmptyBBuf = (int *)APSRTPPacketHandlerGetEmptyBBuf(v104);
                          if (!EmptyBBuf)
                          {
                            APSLogErrorAt();
                            uint64_t v51 = 0;
                            uint64_t v32 = v104;
                            goto LABEL_135;
                          }
                          uint64_t v51 = APSRTPPacketHandlerGetEmptyBBuf(v104);
                          if (!v51
                            || APSTransportMessageCreateReferencingBBufWithAudioDataLength()
                            || (CMBlockBufferGetDataLength((CMBlockBufferRef)v51[2]),
                                APSCMBlockBufferReplace()))
                          {
                            APSLogErrorAt();
                          }
                          else
                          {
                            *(_DWORD *)uint64_t v51 = 96;
                            if (APSRTPPacketHandlerComposeRTPPacketWithBBuf(v104, v51, v103, EmptyBBuf, (_DWORD *)&v116 + 1))goto LABEL_156; {
                            CMBlockBufferGetDataLength(*((CMBlockBufferRef *)EmptyBBuf + 2));
                            }
                            if (APSCMBlockBufferReplace()
                              || APTransportStreamSendBackingProviderCopyPackageForAcquiredBBuf()
                              || APTransportStreamSendBackingProviderCopyPackageForAcquiredBBuf())
                            {
                              goto LABEL_156;
                            }
                            CFTypeRef v62 = v113;
                            uint64_t v63 = *(void *)(CMBaseObjectGetVTable() + 16);
                            if (v63) {
                              uint64_t v64 = v63;
                            }
                            else {
                              uint64_t v64 = 0;
                            }
                            uint64_t v65 = *(void (**)(CFTypeRef, uint64_t))(v64 + 144);
                            if (v65) {
                              v65(v62, v100);
                            }
                            CFTypeRef v66 = v112;
                            uint64_t v67 = *(void *)(CMBaseObjectGetVTable() + 16);
                            if (v67) {
                              uint64_t v68 = v67;
                            }
                            else {
                              uint64_t v68 = 0;
                            }
                            uint64_t v69 = *(void (**)(CFTypeRef, uint64_t))(v68 + 144);
                            if (v69) {
                              v69(v66, v100);
                            }
                            kdebug_trace();
                            DataCFIndex Length = CMBlockBufferGetDataLength(*((CMBlockBufferRef *)EmptyBBuf + 2));
                            if (realTimeAudioEngine_tas_createAndEncryptAudioDataMessage(v61, DataLength - v103 - 10, HIDWORD(v116) - 10, *(void *)(a1 + 200), &v114)|| realTimeAudioEngine_tas_createAndEncryptAudioDataMessage(v102, v121, 0, *(void *)(a1 + 200), &cf))
                            {
                              goto LABEL_156;
                            }
                            if (gLogCategory_APAudioEngineRealTime <= 10
                              && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
                            {
                              uint64_t v93 = HIDWORD(v116);
                              LogPrintF();
                            }
                            *(void *)CMTime lhs = v99;
                            *(_OWORD *)&lhs[8] = v120;
                            if (APMessageRingEnqueueMessageForSending(v106, (OpaqueCMBlockBuffer *)cf, (uint64_t)lhs)|| (*(void *)CMTime lhs = v99, *(_OWORD *)&lhs[8] = v120, APMessageRingEnqueueMessageForSendingWithPayloadCount(v105, (OpaqueCMBlockBuffer *)v114, (long long *)lhs, v116)))
                            {
LABEL_156:
                              APSLogErrorAt();
                              uint64_t v51 = 0;
                            }
                            else
                            {
                              uint64_t v51 = 0;
                              unsigned __int16 v71 = v119[0];
                              int v72 = *(_DWORD *)&v119[1];
                              __int16 v73 = __swp((v119[0] << 16) | 1, (unsigned int *)(a1 + 288));
                              if (*(unsigned char *)(a1 + 16))
                              {
                                uint64_t v32 = v104;
                                if (!v73)
                                {
                                  realTimeAudioEngine_tas_flushHoses(a1, v71, v72);
                                  uint64_t v51 = 0;
                                }
                                goto LABEL_135;
                              }
                            }
                          }
LABEL_81:
                          uint64_t v32 = v104;
                          goto LABEL_135;
                        }
                        APSLogErrorAt();
                        APSSignalErrorAt();
LABEL_80:
                        uint64_t v51 = 0;
                        EmptyBBuf = 0;
                        goto LABEL_81;
                      }
                    }
                  }
                  else
                  {
                    LODWORD(v29) = v117 * v29;
                  }
                  APSLogErrorAt();
                  goto LABEL_80;
                }
                APSLogErrorAt();
              }
              else
              {
                APSLogErrorAt();
                APSSignalErrorAt();
              }
            }
          }
        }
      }
      LODWORD(v29) = 0;
      goto LABEL_134;
    }
    break;
  }
  if (gLogCategory_APAudioEngineRealTime <= 30
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_161:
  uint64_t v74 = *(void *)(a1 + 248);
  uint64_t v75 = *(void *)(a1 + 256);
  v125.int value = 0;
  time.int value = 0;
  memset(lhs, 0, 24);
  CFAllocatorRef Default = (const __CFAllocator *)APSRealTimeAllocatorGetDefault();
  int v77 = *(_DWORD *)(a1 + 144);
  int MaxPacketRedundancy = APMessageRingGetMaxPacketRedundancy(v74);
  CFMutableDictionaryRef Mutable = CFArrayCreateMutable(Default, (v77 + v77 * MaxPacketRedundancy), MEMORY[0x1E4F1D510]);
  if (!Mutable)
  {
    APSLogErrorAt();
    uint64_t v83 = 0;
LABEL_206:
    int v91 = -72090;
    goto LABEL_192;
  }
  CFAllocatorRef v80 = (const __CFAllocator *)APSRealTimeAllocatorGetDefault();
  int v81 = *(_DWORD *)(a1 + 144);
  int v82 = APMessageRingGetMaxPacketRedundancy(v75);
  uint64_t v83 = CFArrayCreateMutable(v80, (v81 + v81 * v82), MEMORY[0x1E4F1D510]);
  if (!v83)
  {
    APSLogErrorAt();
    goto LABEL_206;
  }
  if (gLogCategory_APAudioEngineRealTime <= 30
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(_DWORD *)(a1 + 144))
  {
    int v84 = 0;
    while (APMessageRingGetUsedCount(v74))
    {
      UsedCFIndex Count = APMessageRingGetUsedCount(v75);
      if (UsedCount != APMessageRingGetUsedCount(v74)
        && gLogCategory_APAudioEngineRealTime <= 90
        && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFAllocatorRef v86 = (const __CFAllocator *)APSRealTimeAllocatorGetDefault();
      APMessageRingCopyNextBurst(v74, v86, (CFTypeRef *)&v125);
      CFArrayRef v87 = (const __CFArray *)v125.value;
      if (v125.value)
      {
        v131.length = CFArrayGetCount((CFArrayRef)v125.value);
        v131.locatioCFIndex n = 0;
        CFArrayAppendArray(Mutable, v87, v131);
        APMessageRingMarkBurstAsSent(v74, v125.value);
        if (v125.value)
        {
          CFRelease((CFTypeRef)v125.value);
          v125.int value = 0;
        }
      }
      CFAllocatorRef v88 = (const __CFAllocator *)APSRealTimeAllocatorGetDefault();
      APMessageRingCopyNextBurst(v75, v88, (CFTypeRef *)&v125);
      CFArrayRef v89 = (const __CFArray *)v125.value;
      if (v125.value)
      {
        v132.length = CFArrayGetCount((CFArrayRef)v125.value);
        v132.locatioCFIndex n = 0;
        CFArrayAppendArray(v83, v89, v132);
        APMessageRingMarkBurstAsSent(v75, v125.value);
        if (v125.value)
        {
          CFRelease((CFTypeRef)v125.value);
          v125.int value = 0;
        }
      }
      if (++v84 >= *(_DWORD *)(a1 + 144)) {
        goto LABEL_187;
      }
    }
    if (gLogCategory_APAudioEngineRealTime <= 30
      && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
LABEL_187:
  int v90 = APSCFRealTimeReadableCopyValue();
  if (v90)
  {
    int v91 = v90;
    APSLogErrorAt();
  }
  else
  {
    if (FigCFDictionaryGetCount() >= 1)
    {
      kdebug_trace();
      *(void *)CMTime lhs = Mutable;
      *(void *)&lhs[8] = v83;
      *(_DWORD *)&lhs[16] = 0;
      CFDictionaryApplyFunction((CFDictionaryRef)time.value, (CFDictionaryApplierFunction)realTimeAudioEngine_tas_sendAudioDataDictionaryApplierFunction, lhs);
      kdebug_trace();
      if (*(_DWORD *)&lhs[16])
      {
        *(void *)&hostTime.uint64_t timescale = 0;
        hostTime.int value = mach_absolute_time();
        hostTime.uint64_t timescale = *(_DWORD *)&lhs[16];
        APSAtomicMessageQueueSendMessage();
      }
    }
    int v91 = 0;
  }
LABEL_192:
  if (v125.value) {
    CFRelease((CFTypeRef)v125.value);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  if (v83) {
    CFRelease(v83);
  }
  APSCFRealTimeRelease();
  if (!v91)
  {
    kdebug_trace();
    goto LABEL_200;
  }
LABEL_202:
  APSLogErrorAt();
LABEL_200:
  MEMORY[0x1D25EB390](*(void *)(a1 + 88));
LABEL_201:
  APSTimeProfilerTaskEnd();
  return kdebug_trace();
}

void realTimeAudioEngine_tas_flushHoses(uint64_t a1, unsigned __int16 a2, int a3)
{
  if (*(unsigned char *)(a1 + 80))
  {
    realTimeAudioEngine_tas_hosesFlushHoses(a1, a3, a2);
  }
  else
  {
    APSAtomicMessageQueueSendMessage();
    APSRealTimeSignalRaise();
  }
}

void realTimeAudioEngine_tas_hosesFlushHoses(uint64_t a1, int a2, unsigned __int16 a3)
{
  context[0] = a2;
  context[1] = a3;
  if (gLogCategory_APAudioEngineRealTime <= 50
    && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFDictionaryApplyFunction(*(CFDictionaryRef *)(a1 + 336), (CFDictionaryApplierFunction)realTimeAudioEngine_tas_flushHosesDictionaryCallback, context);
}

uint64_t realTimeAudioEngine_tas_flushHosesDictionaryCallback(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(unsigned __int16 *)(a3 + 4);
  APSAudioTransportTimeMakeWithRTPTime();
  APSEndpointStreamAudioHoseProtocolGetProtocolID();
  uint64_t result = CMBaseObjectGetProtocolVTable();
  if (result)
  {
    uint64_t v7 = *(void *)(result + 16);
    result += 16;
    uint64_t v6 = v7;
    if (v7)
    {
      double v8 = *(uint64_t (**)(uint64_t, uint64_t, _OWORD *, void, void))(v6 + 24);
      if (v8)
      {
        v10[0] = *(_OWORD *)v9;
        *(_OWORD *)((char *)v10 + 12) = *(_OWORD *)&v9[12];
        return v8(a1, v4, v10, 0, 0);
      }
    }
  }
  return result;
}

uint64_t realTimeAudioEngine_tas_createAndEncryptAudioDataMessage(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, CFTypeRef *a5)
{
  uint64_t v32 = 0;
  CMBlockBufferRef theBuffer = 0;
  dataPointerOut = 0;
  uint64_t v31 = 0;
  double v28 = 0;
  size_t lengthAtOffsetOut = 0;
  if (a4
    && ((uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 16)) == 0 ? (v10 = 0) : (v10 = v9),
        (uint64_t v11 = *(uint64_t (**)(uint64_t))(v10 + 8)) != 0))
  {
    uint64_t v12 = v11(a4);
  }
  else
  {
    uint64_t v12 = 0;
  }
  APSRealTimeAllocatorGetDefault();
  ReferencingBBufWithAudioDataCFIndex Length = APSTransportMessageCreateReferencingBBufWithAudioDataLength();
  if (ReferencingBBufWithAudioDataLength)
  {
    uint64_t v26 = ReferencingBBufWithAudioDataLength;
    goto LABEL_24;
  }
  if (!a4) {
    goto LABEL_21;
  }
  uint64_t AudioAADPointer = APSTransportMessageGetAudioAADPointer();
  if (AudioAADPointer)
  {
    uint64_t v26 = AudioAADPointer;
    goto LABEL_24;
  }
  uint64_t v15 = a3;
  uint64_t DataPointer = CMBlockBufferGetDataPointer(theBuffer, a3 + 10, &lengthAtOffsetOut, 0, &dataPointerOut);
  if (DataPointer)
  {
    uint64_t v26 = DataPointer;
    goto LABEL_24;
  }
  if (v12)
  {
    uint64_t v17 = CMBlockBufferGetDataPointer(theBuffer, a2 + 10, 0, 0, &v28);
    if (v17)
    {
      uint64_t v26 = v17;
      goto LABEL_24;
    }
    int v18 = v28;
  }
  else
  {
    int v18 = 0;
  }
  uint64_t v20 = v31;
  uint64_t v19 = v32;
  int v21 = dataPointerOut;
  uint64_t v22 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v22) {
    uint64_t v23 = v22;
  }
  else {
    uint64_t v23 = 0;
  }
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, char *, uint64_t, char *, uint64_t))(v23 + 16);
  if (!v24)
  {
    uint64_t v26 = 4294954514;
LABEL_24:
    APSLogErrorAt();
    goto LABEL_25;
  }
  uint64_t v25 = v24(a4, v19, v20, v21, a2 - v15, v21, a2 - v15, v18, v12);
  if (v25)
  {
    uint64_t v26 = v25;
    goto LABEL_24;
  }
LABEL_21:
  uint64_t v26 = 0;
  if (a5) {
    *a5 = CFRetain(theBuffer);
  }
LABEL_25:
  if (theBuffer) {
    CFRelease(theBuffer);
  }
  return v26;
}

uint64_t realTimeAudioEngine_tas_sendAudioDataDictionaryApplierFunction(uint64_t a1, CFBooleanRef BOOLean, uint64_t *a3)
{
  if (CFBooleanGetValue(BOOLean))
  {
    uint64_t v6 = (CFArrayRef *)(a3 + 1);
    uint64_t result = a3[1];
    if (!result) {
      return result;
    }
    uint64_t result = CFArrayGetCount((CFArrayRef)result);
    if (result < 1) {
      return result;
    }
    CFArrayRef v7 = *v6;
    APSEndpointStreamAudioHoseProtocolGetProtocolID();
    Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
    if (ProtocolVTable)
    {
      uint64_t v9 = *(void *)(ProtocolVTable + 16);
      if (v9)
      {
        uint64_t v10 = *(void (**)(uint64_t, uint64_t, CFArrayRef))(v9 + 64);
        if (v10) {
          v10(a1, 1735550308, v7);
        }
        else {
          APSEndpointStreamAudioHoseSendAudioBatchSlow();
        }
      }
    }
  }
  else
  {
    uint64_t result = *a3;
    if (!*a3) {
      return result;
    }
    uint64_t result = CFArrayGetCount((CFArrayRef)result);
    if (result < 1) {
      return result;
    }
    uint64_t v11 = *a3;
    APSEndpointStreamAudioHoseProtocolGetProtocolID();
    uint64_t v12 = CMBaseObjectGetProtocolVTable();
    uint64_t v6 = (CFArrayRef *)a3;
    if (v12)
    {
      uint64_t v13 = *(void *)(v12 + 16);
      uint64_t v6 = (CFArrayRef *)a3;
      if (v13)
      {
        uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 64);
        if (v14) {
          v14(a1, 1734700576, v11);
        }
        else {
          APSEndpointStreamAudioHoseSendAudioBatchSlow();
        }
        uint64_t v6 = (CFArrayRef *)a3;
      }
    }
  }
  CFArrayRef v15 = *v6;
  CFIndex Count = CFArrayGetCount(*v6);
  CFArrayGetValueAtIndex(v15, Count - 1);
  return APSTransportMessageGetAudioDataTimestamp();
}

void realTimeAudioEngine_tas_transcodeAndSendTimerInvalidate(__CFArray *a1)
{
}

void realTimeAudioEngine_suspendEndpointStreamInternal(_DWORD *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v3 = DerivedStorage;
  if (!*(unsigned char *)(DerivedStorage + 128))
  {
    CFMutableDictionaryRef Mutable = 0;
    uint64_t v6 = 0;
    int v12 = 0;
    goto LABEL_16;
  }
  uint64_t v4 = *(const void **)(DerivedStorage + 216);
  if (v4)
  {
    CFTypeRef v5 = CFRetain(v4);
    if (v5)
    {
      uint64_t v6 = v5;
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      if (Mutable)
      {
        FigCFDictionaryGetValue();
        FigCFDictionarySetValue();
        uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 16);
        if (v8) {
          uint64_t v9 = v8;
        }
        else {
          uint64_t v9 = 0;
        }
        uint64_t v10 = *(uint64_t (**)(const void *, CFMutableDictionaryRef, void (*)(uint64_t, int, _DWORD *), _DWORD *))(v9 + 8);
        if (v10)
        {
          int v11 = v10(v6, Mutable, realTimeAudioEngine_endpointStreamSuspendCallback, a1);
          if (!v11)
          {
LABEL_17:
            CFRelease(v6);
LABEL_18:
            if (Mutable)
            {
              CFRelease(Mutable);
            }
            return;
          }
          int v12 = v11;
        }
        else
        {
          int v12 = -12782;
        }
        APSLogErrorAt();
      }
      else
      {
        APSLogErrorAt();
        int v12 = -72070;
      }
LABEL_16:
      a1[10] = v12;
      dispatch_async_f(*(dispatch_queue_t *)(v3 + 72), a1, (dispatch_function_t)realTimeAudioEngine_suspendComplete);
      if (!v6) {
        goto LABEL_18;
      }
      goto LABEL_17;
    }
  }
  realTimeAudioEngine_suspendInternal((uint64_t)a1);
}

void realTimeAudioEngine_endpointStreamSuspendCallback(uint64_t a1, int a2, _DWORD *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2 && a2 != -16762)
  {
    a3[10] = a2;
    uint64_t v6 = (NSObject **)(DerivedStorage + 72);
    CFArrayRef v7 = (void (__cdecl *)(void *))realTimeAudioEngine_suspendComplete;
  }
  else
  {
    uint64_t v6 = (NSObject **)(DerivedStorage + 120);
    CFArrayRef v7 = (void (__cdecl *)(void *))realTimeAudioEngine_suspendInternal;
  }
  uint64_t v8 = *v6;
  dispatch_async_f(v8, a3, v7);
}

void realTimeAudioEngine_suspendInternal(uint64_t a1)
{
  uint64_t DerivedStorage = (unsigned char *)CMBaseObjectGetDerivedStorage();
  uint64_t v3 = DerivedStorage;
  if (!*DerivedStorage && DerivedStorage[128])
  {
    if (gLogCategory_APAudioEngineRealTime <= 50
      && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
    {
      CFSetGetCount(*((CFSetRef *)v3 + 19));
      LogPrintF();
    }
    if (CFSetGetCount(*((CFSetRef *)v3 + 19)))
    {
      if (gLogCategory_APAudioEngineRealTime <= 60
        && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFSetApplyFunction(*((CFSetRef *)v3 + 19), (CFSetApplierFunction)realTimeAudioEngine_deregisterHoseApplier, *(void **)a1);
    }
    realTimeAudioEngine_performSuspensionGutsInternal(*(void *)a1, 1);
    realTimeAudioEngine_removeStreamNotificationListeners(*(void *)a1, *((void *)v3 + 27));
    uint64_t v4 = (const void *)*((void *)v3 + 27);
    if (v4)
    {
      CFRelease(v4);
      *((void *)v3 + 27) = 0;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  CFTypeRef v5 = *((void *)v3 + 9);
  dispatch_async_f(v5, (void *)a1, (dispatch_function_t)realTimeAudioEngine_suspendComplete);
}

void realTimeAudioEngine_suspendComplete(CFTypeRef *a1)
{
  CMBaseObjectGetDerivedStorage();
  uint64_t v2 = (void (*)(CFTypeRef, void, CFTypeRef))a1[3];
  if (v2) {
    v2(*a1, *((unsigned int *)a1 + 10), a1[4]);
  }
  APSDispatchSectionLeave();
  CFTypeRef v3 = a1[1];
  if (v3) {
    CFRelease(v3);
  }
  if (*a1) {
    CFRelease(*a1);
  }
  free(a1);
}

double realTimeAudioEngine_deregisterHoseApplier(const void *a1, uint64_t a2)
{
  *(void *)&double result = realTimeAudioEngine_audioHoseRegistrarDeregisterHoseInternal(a2, a1).n128_u64[0];
  return result;
}

void realTimeAudioEngine_endpointStreamResumeInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v3 = DerivedStorage;
  if (!*(unsigned char *)(DerivedStorage + 128))
  {
    APSLogErrorAt();
    int v13 = -15485;
    goto LABEL_21;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (*(void *)(DerivedStorage + 216) == v4)
  {
    APSLogErrorAt();
    goto LABEL_20;
  }
  if (!v4)
  {
LABEL_20:
    int v13 = 0;
    goto LABEL_21;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    CFMutableDictionaryRef v6 = Mutable;
    FigCFDictionarySetValue();
    FigCFDictionarySetValue();
    FigCFDictionarySetValue();
    FigCFDictionarySetValue();
    int v7 = FigCFDictionarySetInt32();
    if (v7)
    {
      int v13 = v7;
    }
    else
    {
      int v8 = FigCFDictionarySetInt32();
      if (v8)
      {
        int v13 = v8;
      }
      else
      {
        int v9 = CFDictionarySetData();
        if (v9)
        {
          int v13 = v9;
        }
        else
        {
          int v10 = FigCFDictionarySetFloat();
          if (v10)
          {
            int v13 = v10;
          }
          else
          {
            int v11 = FigCFDictionarySetFloat();
            if (v11)
            {
              int v13 = v11;
            }
            else
            {
              if (gLogCategory_APAudioEngineRealTime <= 50
                && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              int v12 = FigEndpointStreamResumeWithCompletionCallback(*(void *)(a1 + 8), (uint64_t)v6, a1);
              if (!v12)
              {
                FigCFDictionarySetValue();
                CFRelease(v6);
                return;
              }
              int v13 = v12;
            }
          }
        }
      }
    }
    APSLogErrorAt();
    CFRelease(v6);
  }
  else
  {
    APSLogErrorAt();
    int v13 = -15480;
  }
LABEL_21:
  *(_DWORD *)(a1 + 32) = v13;
  uint64_t v14 = *(NSObject **)(v3 + 72);
  dispatch_async_f(v14, (void *)a1, (dispatch_function_t)realTimeAudioEngine_setEndpointStreamCallback);
}

uint64_t FigEndpointStreamResumeWithCompletionCallback(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  int v8 = *(uint64_t (**)(uint64_t, uint64_t, void (*)(uint64_t, int, uint64_t), uint64_t))(v7 + 16);
  if (!v8) {
    return 4294954514;
  }
  return v8(a1, a2, realTimeAudioEngine_endpointStreamResumeCallback, a3);
}

void realTimeAudioEngine_endpointStreamResumeCallback(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2)
  {
    *(_DWORD *)(a3 + 32) = a2;
    uint64_t v6 = *(void *)(a3 + 8);
    uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 16);
    if (v7) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 0;
    }
    int v10 = *(void (**)(uint64_t, void, void (*)(uint64_t, uint64_t, void *), uint64_t))(v8 + 8);
    if (v10)
    {
      v10(v6, 0, realTimeAudioEngine_endpointStreamResumeWithErrorSuspendCallback, a3);
    }
  }
  else
  {
    int v9 = *(NSObject **)(DerivedStorage + 120);
    dispatch_async_f(v9, (void *)a3, (dispatch_function_t)realTimeAudioEngine_setEndpointStreamInternal);
  }
}

void realTimeAudioEngine_setEndpointStreamCallback(uint64_t a1)
{
  CMBaseObjectGetDerivedStorage();
  uint64_t v2 = *(void (**)(void, void, void))(a1 + 16);
  if (v2) {
    v2(*(void *)a1, *(unsigned int *)(a1 + 32), *(void *)(a1 + 24));
  }
  APSDispatchSectionLeave();
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
  uint64_t v3 = *(const void **)(a1 + 8);
  if (v3) {
    CFRelease(v3);
  }
  free((void *)a1);
}

void realTimeAudioEngine_setEndpointStreamInternal(uint64_t *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  realTimeAudioEngine_removeStreamNotificationListeners(*a1, *(void *)(DerivedStorage + 216));
  uint64_t v3 = *(const void **)(DerivedStorage + 216);
  uint64_t v4 = (const void *)a1[1];
  *(void *)(DerivedStorage + 216) = v4;
  if (v4) {
    CFRetain(v4);
  }
  if (v3) {
    CFRelease(v3);
  }
  if (*a1 && *(void *)(DerivedStorage + 216))
  {
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterAddWeakListener();
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterAddWeakListener();
  }
  realTimeAudioEngine_updateCryptor();
  CFTypeRef v5 = *(NSObject **)(DerivedStorage + 72);
  dispatch_async_f(v5, a1, (dispatch_function_t)realTimeAudioEngine_setEndpointStreamCallback);
}

void realTimeAudioEngine_endpointStreamResumeWithErrorSuspendCallback(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(NSObject **)(CMBaseObjectGetDerivedStorage() + 72);
  dispatch_async_f(v4, a3, (dispatch_function_t)realTimeAudioEngine_setEndpointStreamCallback);
}

CFIndex realTimeAudioEngine_tas_serviceHoseMessageQueue(const __CFArray *a1)
{
  CFIndex result = CFArrayGetCount(a1);
  if (result >= 1)
  {
    CFArrayGetValueAtIndex(a1, 0);
    for (CFIndex result = APSAtomicMessageQueueReadMessage(); result; CFIndex result = APSAtomicMessageQueueReadMessage())
    {
      if (gLogCategory_APAudioEngineRealTime <= 90
        && (gLogCategory_APAudioEngineRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
  }
  return result;
}

Class initCRCarPlayPreferences()
{
  if (CarKitLibrary_sOnce != -1) {
    dispatch_once(&CarKitLibrary_sOnce, &__block_literal_global_12);
  }
  Class result = objc_getClass("CRCarPlayPreferences");
  classCRCarPlayPreferences = (uint64_t)result;
  getCRCarPlayPreferencesClass = CRCarPlayPreferencesFunction;
  return result;
}

uint64_t CRCarPlayPreferencesFunction()
{
  return classCRCarPlayPreferences;
}

void *__CarKitLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/CarKit.framework/CarKit", 2);
  CarKitLibrary_sLib = (uint64_t)result;
  return result;
}

uint64_t APKeyHolderLegacyCreate(uint64_t a1, const void *a2, const void *a3, void *a4)
{
  APSKeyHolderGetClassID();
  uint64_t v7 = CMDerivedObjectCreate();
  if (v7)
  {
    uint64_t v12 = v7;
LABEL_18:
    APSLogErrorAt();
    return v12;
  }
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  DerivedStorage[1] = a3;
  if (a3) {
    CFRetain(a3);
  }
  *uint64_t DerivedStorage = a2;
  if (a2) {
    CFRetain(a2);
  }
  uint64_t v9 = RandomBytes();
  if (v9)
  {
    uint64_t v12 = v9;
    goto LABEL_18;
  }
  uint64_t v10 = RandomBytes();
  if (v10)
  {
    uint64_t v12 = v10;
    goto LABEL_18;
  }
  uint64_t v11 = APSCreateSecureMemAllocator();
  DerivedStorage[6] = v11;
  if (v11)
  {
    if (gLogCategory_APKeyHolderLegacy <= 30
      && (gLogCategory_APKeyHolderLegacy != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v12 = 0;
    *a4 = 0;
  }
  else
  {
    APSLogErrorAt();
    return 4294895576;
  }
  return v12;
}

void legacyKeyHolder_Finalize()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APKeyHolderLegacy <= 30
    && (gLogCategory_APKeyHolderLegacy != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  for (uint64_t i = 16; i != 32; ++i)
    *(unsigned char *)(DerivedStorage + i) = 0;
  do
    *(unsigned char *)(DerivedStorage + i++) = 0;
  while (i != 48);
  uint64_t v2 = *(const void **)(DerivedStorage + 8);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(DerivedStorage + 8) = 0;
  }
  if (*(void *)DerivedStorage)
  {
    CFRelease(*(CFTypeRef *)DerivedStorage);
    *(void *)uint64_t DerivedStorage = 0;
  }
  uint64_t v3 = *(const void **)(DerivedStorage + 48);
  if (v3)
  {
    CFRelease(v3);
    *(void *)(DerivedStorage + 48) = 0;
  }
}

__CFString *legacyKeyHolder_CopyDebugDescription(uint64_t a1)
{
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppendFormat(Mutable, 0, @"<APKeyHolder %p>", a1);
  return Mutable;
}

uint64_t legacyKeyHolder_CopyProperty(uint64_t a1, const void *a2, uint64_t a3, void *a4)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APKeyHolderLegacy <= 10
    && (gLogCategory_APKeyHolderLegacy != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(a2, @"HasPairingClient"))
  {
    uint64_t v7 = (CFTypeRef *)MEMORY[0x1E4F1CFD0];
    if (!*DerivedStorage) {
      uint64_t v7 = (CFTypeRef *)MEMORY[0x1E4F1CFC8];
    }
    CFTypeRef v8 = CFRetain(*v7);
    uint64_t result = 0;
    *a4 = v8;
  }
  else
  {
    if (gLogCategory_APKeyHolderLegacy <= 90
      && (gLogCategory_APKeyHolderLegacy != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return 4294954512;
  }
  return result;
}

uint64_t legacyKeyHolder_GetAuthenticationType()
{
  uint64_t v0 = *(void *)(CMBaseObjectGetDerivedStorage() + 8);
  if (!v0) {
    return 0;
  }
  uint64_t v1 = *(void *)(CMBaseObjectGetVTable() + 16);
  uint64_t v2 = v1 ? v1 : 0;
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8);
  if (!v3) {
    return 0;
  }
  return v3(v0);
}

uint64_t legacyKeyHolder_CopyMasterAESKeyAndIV(uint64_t a1, CFDataRef *a2, CFDataRef *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFDataRef v6 = CFDataCreate(*(CFAllocatorRef *)(DerivedStorage + 48), (const UInt8 *)(DerivedStorage + 16), 16);
  if (v6)
  {
    CFDataRef v7 = v6;
    CFDataRef v8 = CFDataCreate(*(CFAllocatorRef *)(DerivedStorage + 48), (const UInt8 *)(DerivedStorage + 32), 16);
    if (v8)
    {
      uint64_t v9 = 0;
      *a2 = v7;
      *a3 = v8;
    }
    else
    {
      uint64_t v9 = 4294895576;
      APSLogErrorAt();
      CFRelease(v7);
    }
  }
  else
  {
    uint64_t v9 = 4294895576;
    APSLogErrorAt();
  }
  return v9;
}

uint64_t legacyKeyHolder_CreateEncryptedMasterAESKeyAndIV(uint64_t a1, CFTypeRef *a2, CFDataRef *a3)
{
  CFTypeRef cf = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFDataRef v6 = CFDataCreate(*(CFAllocatorRef *)(DerivedStorage + 48), (const UInt8 *)(DerivedStorage + 16), 16);
  if (v6)
  {
    CFDataRef v7 = v6;
    uint64_t v8 = *(void *)(DerivedStorage + 8);
    if (v8)
    {
      uint64_t v9 = *(void *)(DerivedStorage + 48);
      uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v10) {
        uint64_t v11 = v10;
      }
      else {
        uint64_t v11 = 0;
      }
      uint64_t v12 = *(void (**)(uint64_t, CFDataRef, uint64_t, CFTypeRef *))(v11 + 24);
      if (v12) {
        v12(v8, v7, v9, &cf);
      }
    }
    else
    {
      CFTypeRef cf = v6;
      CFDataRef v7 = 0;
    }
    CFDataRef v13 = CFDataCreate(*(CFAllocatorRef *)(DerivedStorage + 48), (const UInt8 *)(DerivedStorage + 32), 16);
    if (v13)
    {
      uint64_t v14 = 0;
      *a2 = cf;
      CFTypeRef cf = 0;
      *a3 = v13;
      if (!v7) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
    uint64_t v14 = 4294895576;
    APSLogErrorAt();
    if (v7) {
LABEL_11:
    }
      CFRelease(v7);
  }
  else
  {
    uint64_t v14 = 4294895576;
    APSLogErrorAt();
  }
LABEL_12:
  if (cf) {
    CFRelease(cf);
  }
  return v14;
}

uint64_t legacyKeyHolder_UpdateMasterAESKeyAfterSharing()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v1 = *(void *)(DerivedStorage + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = (uint64_t *)DerivedStorage;
  uint64_t v3 = *(void *)(CMBaseObjectGetVTable() + 16);
  uint64_t v4 = v3 ? v3 : 0;
  CFTypeRef v5 = *(unsigned int (**)(uint64_t))(v4 + 8);
  if (!v5) {
    return 0;
  }
  if (v5(v1) != 4) {
    return 0;
  }
  uint64_t v6 = *v2;
  if (!*v2) {
    return 0;
  }
  uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t *, uint64_t, void, void, uint64_t, uint64_t *))(v8 + 8);
  if (!v11)
  {
    uint64_t v9 = 4294954514;
LABEL_17:
    APSLogErrorAt();
    return v9;
  }
  uint64_t v9 = v11(v6, v2 + 2, 16, 0, 0, 16, v2 + 2);
  if (v9) {
    goto LABEL_17;
  }
  return v9;
}

uint64_t legacyKeyHolder_CreateDerivedAESKeyAndIVForLegacyStream(uint64_t a1, uint64_t a2, CFTypeRef *a3, CFTypeRef *a4)
{
  uint64_t v17 = 0;
  int v18 = 0;
  CFTypeRef v15 = 0;
  CFTypeRef cf = 0;
  uint64_t v7 = (int)ASPrintF();
  uint64_t v8 = (int)ASPrintF();
  uint64_t DerivedKeyLegacy = legacyKeyHolder_createDerivedKeyLegacy(a1, 0, v7, (__CFData **)&cf);
  if (DerivedKeyLegacy)
  {
    uint64_t v11 = DerivedKeyLegacy;
    goto LABEL_24;
  }
  uint64_t v10 = legacyKeyHolder_createDerivedKeyLegacy(a1, v17, v8, (__CFData **)&v15);
  if (v10)
  {
    uint64_t v11 = v10;
LABEL_24:
    APSLogErrorAt();
    if (!v7) {
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  if (a3)
  {
    *a3 = cf;
    CFTypeRef cf = 0;
  }
  uint64_t v11 = 0;
  if (a4)
  {
    *a4 = v15;
    CFTypeRef v15 = 0;
  }
  if (v7)
  {
LABEL_8:
    uint64_t v12 = v18;
    do
    {
      *v12++ = 0;
      --v7;
    }
    while (v7);
  }
LABEL_10:
  if (v8)
  {
    CFDataRef v13 = v17;
    do
    {
      *v13++ = 0;
      --v8;
    }
    while (v8);
  }
  if (v18)
  {
    free(v18);
    int v18 = 0;
  }
  if (v17)
  {
    free(v17);
    uint64_t v17 = 0;
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v15) {
    CFRelease(v15);
  }
  return v11;
}

uint64_t legacyKeyHolder_CreateDerivedKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, CFIndex a6, __CFData **a7)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFMutableDictionaryRef Mutable = CFDataCreateMutable(*(CFAllocatorRef *)(DerivedStorage + 48), a6);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294895576;
  }
  CFTypeRef v15 = Mutable;
  CFDataSetLength(Mutable, a6);
  uint64_t v16 = *(void *)DerivedStorage;
  if (!v16)
  {
    uint64_t v22 = 4294895575;
    goto LABEL_11;
  }
  MutableBytePtr = CFDataGetMutableBytePtr(v15);
  uint64_t v18 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v18) {
    uint64_t v19 = v18;
  }
  else {
    uint64_t v19 = 0;
  }
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, CFIndex, UInt8 *))(v19 + 8);
  if (!v20)
  {
    uint64_t v22 = 4294954514;
LABEL_11:
    APSLogErrorAt();
    goto LABEL_12;
  }
  uint64_t v21 = v20(v16, a2, a3, a4, a5, a6, MutableBytePtr);
  if (v21)
  {
    uint64_t v22 = v21;
    goto LABEL_11;
  }
  uint64_t v22 = 0;
  if (!a7)
  {
LABEL_12:
    CFRelease(v15);
    return v22;
  }
  *a7 = v15;
  return v22;
}

uint64_t legacyKeyHolder_createDerivedKeyLegacy(uint64_t a1, const void *a2, CC_LONG a3, __CFData **a4)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  memset(&v13, 0, sizeof(v13));
  CFMutableDictionaryRef Mutable = CFDataCreateMutable(*(CFAllocatorRef *)(DerivedStorage + 48), 16);
  if (Mutable)
  {
    uint64_t v9 = Mutable;
    CFDataSetLength(Mutable, 16);
    CC_SHA512_Init(&v13);
    CC_SHA512_Update(&v13, a2, a3);
    CC_SHA512_Update(&v13, (const void *)(DerivedStorage + 16), 0x10u);
    CC_SHA512_Final(md, &v13);
    MutableBytePtr = CFDataGetMutableBytePtr(v9);
    uint64_t v11 = 0;
    *(_OWORD *)MutableBytePtr = *(_OWORD *)md;
    do
      md[v11++] = 0;
    while (v11 != 64);
    if (a4)
    {
      uint64_t result = 0;
      *a4 = v9;
    }
    else
    {
      CFRelease(v9);
      return 0;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895576;
  }
  return result;
}

uint64_t APAuthenticationClientGetClassID()
{
  if (APAuthenticationClientGetClassID_sRegisterOnce != -1) {
    dispatch_once_f(&APAuthenticationClientGetClassID_sRegisterOnce, &APAuthenticationClientGetClassID_sClassID, (dispatch_function_t)authenticationClient_registerBaseClass);
  }
  return APAuthenticationClientGetClassID_sClassID;
}

uint64_t authenticationClient_registerBaseClass(uint64_t a1)
{
  uint64_t ClassID = CMBaseGetClassID();
  return MEMORY[0x1F40DC658](&authenticationClient_registerBaseClass_sClassDesc, ClassID, 1, a1);
}

CFStringRef authenticationClient_copyFormattingDesc(uint64_t a1)
{
  return CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, @"[APAuthenticationClient %p]", a1);
}

void APDemoEndpointUIEventChannelInit(uint64_t a1)
{
  _OWORD v26[2] = *MEMORY[0x1E4F143B8];
  if (demoUIEventChannelGetShared_once != -1) {
    dispatch_once(&demoUIEventChannelGetShared_once, &__block_literal_global_13);
  }
  uint64_t v2 = (void *)demoUIEventChannelGetShared_channel;
  CFTypeRef v23 = 0;
  CFTypeRef cf = 0;
  if (demoUIEventChannelGetShared_channel)
  {
    MEMORY[0x1D25EB370](*(void *)demoUIEventChannelGetShared_channel);
    if (!a1) {
      goto LABEL_29;
    }
    FigEndpointExtendedGetClassID();
    if (!CMBaseObjectIsMemberOfClass()) {
      goto LABEL_29;
    }
    if (v2[1])
    {
      uint64_t v3 = FigCFWeakReferenceHolderCopyReferencedObject();
      if (v3)
      {
        uint64_t v4 = (const void *)v3;
        if (gLogCategory_APDemoManager <= 50
          && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t v5 = v2[2];
        uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 24);
        if (v6) {
          uint64_t v7 = v6;
        }
        else {
          uint64_t v7 = 0;
        }
        uint64_t v8 = *(void (**)(const void *, uint64_t))(v7 + 104);
        if (v8) {
          v8(v4, v5);
        }
        CFRelease(v4);
      }
      demoUIEventChannelClear(v2);
    }
    uint64_t CMBaseObject = FigEndpointGetCMBaseObject();
    uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 8);
    uint64_t v11 = v10 ? v10 : 0;
    uint64_t v12 = *(unsigned int (**)(uint64_t, __CFString *, void, CFTypeRef *))(v11 + 48);
    if (v12
      && (CFAllocatorRef v13 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80],
          !v12(CMBaseObject, @"EndpointDescription", *MEMORY[0x1E4F1CF80], &cf))
      && cf)
    {
      if (APSGetFBOPropertyInt64())
      {
        CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v13, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
        CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F210F8], (const void *)*MEMORY[0x1E4F210F0]);
        CFDictionarySetInt64();
        CFDictionarySetInt64();
        uint64_t v15 = *(void *)(CMBaseObjectGetVTable() + 24);
        if (v15) {
          uint64_t v16 = v15;
        }
        else {
          uint64_t v16 = 0;
        }
        uint64_t v17 = *(unsigned int (**)(uint64_t, __CFDictionary *, CFTypeRef *))(v16 + 88);
        if (!v17 || v17(a1, Mutable, &v23))
        {
          APSLogErrorAt();
        }
        else
        {
          uint64_t v18 = FigCFWeakReferenceHolderCreateWithReferencedObject();
          uint64_t v19 = (const void *)v2[2];
          uint64_t v20 = v23;
          v2[1] = v18;
          void v2[2] = v20;
          if (v20) {
            uint64_t v20 = CFRetain(v20);
          }
          if (v19) {
            CFRelease(v19);
          }
          if (gLogCategory_APDemoManager <= 50)
          {
            if (gLogCategory_APDemoManager != -1 || (uint64_t v20 = (const void *)_LogCategory_Initialize(), v20)) {
              uint64_t v20 = (const void *)LogPrintF();
            }
          }
          uint64_t v21 = (void *)MEMORY[0x1D25EC4D0](v20);
          if (demoUIEventChannelGetShared_once != -1) {
            dispatch_once(&demoUIEventChannelGetShared_once, &__block_literal_global_13);
          }
          uint64_t v22 = demoUIEventChannelGetShared_channel;
          if (demoUIEventChannelGetShared_channel)
          {
            if (*(void *)(demoUIEventChannelGetShared_channel + 24))
            {
              if (gLogCategory_APDemoManager <= 90
                && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
            }
            else
            {
              v25[0] = [MEMORY[0x1E4F28ED0] numberWithInteger:65291];
              v26[0] = @"PrimaryUsagePage";
              v25[1] = [MEMORY[0x1E4F28ED0] numberWithInteger:65281];
              v26[1] = @"PrimaryUsagePage";
              [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v26 forKeys:v25 count:2];
              *(void *)(v22 + 24) = IOHIDEventSystemClientCreate();
              IOHIDEventSystemClientSetMatching();
              IOHIDEventSystemClientRegisterEventCallback();
              CFRunLoopGetMain();
              IOHIDEventSystemClientScheduleWithRunLoop();
            }
          }
        }
        goto LABEL_31;
      }
    }
    else
    {
LABEL_29:
      APSLogErrorAt();
    }
    CFMutableDictionaryRef Mutable = 0;
LABEL_31:
    MEMORY[0x1D25EB390](*v2);
    if (cf) {
      CFRelease(cf);
    }
    if (Mutable) {
      CFRelease(Mutable);
    }
    if (v23) {
      CFRelease(v23);
    }
  }
}

void demoUIEventChannelClear(void *a1)
{
  uint64_t v2 = (const void *)a1[1];
  if (v2)
  {
    CFRelease(v2);
    a1[1] = 0;
  }
  uint64_t v3 = (const void *)a1[2];
  if (v3)
  {
    CFRelease(v3);
    a1[2] = 0;
  }
  if (a1[3])
  {
    CFRunLoopGetMain();
    IOHIDEventSystemClientUnscheduleWithRunLoop();
    IOHIDEventSystemClientUnregisterEventCallback();
    uint64_t v4 = (const void *)a1[3];
    if (v4)
    {
      CFRelease(v4);
      a1[3] = 0;
    }
  }
}

uint64_t __demoUIEventChannelGetShared_block_invoke()
{
  uint64_t result = APSIsDemoModeEnabled();
  if (result)
  {
    demoUIEventChannelGetShared_channel = (uint64_t)malloc_type_calloc(1uLL, 0x20uLL, 0x60040CD5974ACuLL);
    uint64_t result = FigSimpleMutexCreate();
    *(void *)demoUIEventChannelGetShared_channel = result;
    if (gLogCategory_APDemoManager <= 50)
    {
      if (gLogCategory_APDemoManager != -1 || (uint64_t result = _LogCategory_Initialize(), result))
      {
        return LogPrintF();
      }
    }
  }
  return result;
}

void demoHIDEventCallback()
{
  uint64_t v0 = (void *)MEMORY[0x1D25EC4D0]();
  uint64_t v15 = 0;
  if (IOHIDEventGetType() == 6) {
    goto LABEL_37;
  }
  if (IOHIDEventGetType() == 3)
  {
    Integerint Value = IOHIDEventGetIntegerValue();
    uint64_t v2 = IOHIDEventGetIntegerValue();
    if (IntegerValue != 45) {
      goto LABEL_37;
    }
    BOOL v3 = v2 == 1;
    uint64_t v4 = (void *)[MEMORY[0x1E4F1CA60] dictionary];
    [v4 setValue:@"BtnRingerPress" forKey:@"DataEventType"];
    objc_msgSend(v4, "setValue:forKey:", objc_msgSend(MEMORY[0x1E4F28ED0], "numberWithBool:", v3), @"DataValue");
    if (gLogCategory_APDemoManager <= 30
      && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize()))
    {
      uint64_t v14 = v4;
      LogPrintF();
    }
    uint64_t v5 = objc_msgSend(MEMORY[0x1E4F28DB0], "archivedDataWithRootObject:requiringSecureCoding:error:", v4, 1, &v15, v14);
    if (v15)
    {
      APSLogErrorAt();
    }
    else
    {
      CFDataRef v6 = (const __CFData *)v5;
      if (!v5) {
        goto LABEL_37;
      }
      if (demoUIEventChannelGetShared_once != -1) {
        dispatch_once(&demoUIEventChannelGetShared_once, &__block_literal_global_13);
      }
      uint64_t v7 = (void *)demoUIEventChannelGetShared_channel;
      if (!demoUIEventChannelGetShared_channel) {
        goto LABEL_32;
      }
      MEMORY[0x1D25EB370](*(void *)demoUIEventChannelGetShared_channel);
      if (v7[1])
      {
        uint64_t v8 = FigCFWeakReferenceHolderCopyReferencedObject();
        if (v8)
        {
          uint64_t v9 = (const void *)v8;
          uint64_t v10 = v7[2];
          if (v10
            && ((uint64_t v11 = *(void *)(CMBaseObjectGetVTable() + 24)) == 0 ? (v12 = 0) : (v12 = v11),
                (CFAllocatorRef v13 = *(unsigned int (**)(const void *, uint64_t, const __CFData *, void, void))(v12 + 96)) != 0
             && !v13(v9, v10, v6, 0, 0)))
          {
            if (gLogCategory_APDemoManager <= 30
              && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize()))
            {
              CFDataGetLength(v6);
              LogPrintF();
            }
          }
          else
          {
            APSLogErrorAt();
          }
          MEMORY[0x1D25EB390](*v7);
          CFRelease(v9);
          goto LABEL_32;
        }
        if (gLogCategory_APDemoManager <= 50
          && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        demoUIEventChannelClear(v7);
      }
      MEMORY[0x1D25EB390](*v7);
    }
  }
LABEL_32:
  if (v15
    && gLogCategory_APDemoManager <= 90
    && (gLogCategory_APDemoManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_37:
}

uint64_t APAirPlayAgentServicesServerStart()
{
  if (gLogCategory_APAirPlayAgentServices <= 50
    && (gLogCategory_APAirPlayAgentServices != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F4A230], @"com.apple.airplay.agent.services.allow");
  uint64_t v1 = APSXPCServerStart();
  if (v1)
  {
    uint64_t v2 = v1;
    if (gLogCategory_APAirPlayAgentServices <= 90
      && (gLogCategory_APAirPlayAgentServices != -1 || _LogCategory_Initialize()))
    {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v2 = APSXPCServerAddCommandHandler();
    if (v2
      && gLogCategory_APAirPlayAgentServices <= 90
      && (gLogCategory_APAirPlayAgentServices != -1 || _LogCategory_Initialize()))
    {
LABEL_15:
      LogPrintF();
    }
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  return v2;
}

uint64_t airplayAgentServicesServer_handleAirPlaySystemSenderProcessLaunched()
{
  if (gLogCategory_APAirPlayAgentServices <= 50
    && (gLogCategory_APAirPlayAgentServices != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  for (uint64_t i = 0; i != 4; ++i)
  {
    uint64_t v1 = (uint64_t (*)(CFTypeRef *))airplayAgentServicesServer_handleAirPlaySystemSenderProcessLaunched_copyManagerFuncs[i];
    CFTypeRef cf = 0;
    int v2 = v1(&cf);
    CFTypeRef v3 = cf;
    if (!v2)
    {
      uint64_t CMBaseObject = FigEndpointManagerGetCMBaseObject();
      uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
      if (v5) {
        uint64_t v6 = v5;
      }
      else {
        uint64_t v6 = 0;
      }
      uint64_t v7 = *(void (**)(uint64_t, __CFString *, void))(v6 + 56);
      if (v7) {
        v7(CMBaseObject, @"UnusedPropertyToForceServerConnection", 0);
      }
      CMNotificationCenterGetDefaultLocalCenter();
      CMNotificationCenterPostNotification();
      CMNotificationCenterGetDefaultLocalCenter();
      CMNotificationCenterPostNotification();
      CFTypeRef v3 = cf;
    }
    if (v3) {
      CFRelease(v3);
    }
  }
  return 0;
}

uint64_t APAirPlayAgentServicesClientSendCommand()
{
  if (APAirPlayAgentServicesClientSendCommand_onceToken != -1) {
    dispatch_once(&APAirPlayAgentServicesClientSendCommand_onceToken, &__block_literal_global_14);
  }
  if (gLogCategory_APAirPlayAgentServices <= 50
    && (gLogCategory_APAirPlayAgentServices != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v0 = APSXPCClientSendCommandCreatingReply();
  if (v0
    && gLogCategory_APAirPlayAgentServices <= 90
    && (gLogCategory_APAirPlayAgentServices != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v0;
}

void __APAirPlayAgentServicesClientSendCommand_block_invoke()
{
  if (gLogCategory_APAirPlayAgentServices <= 50
    && (gLogCategory_APAirPlayAgentServices != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  LocalCenter = CFNotificationCenterGetLocalCenter();
  CFStringRef DisconnectNotificationName = (const __CFString *)APSXPCClientGetDisconnectNotificationName();
  CFNotificationCenterAddObserver(LocalCenter, 0, (CFNotificationCallback)airplayAgentServicesClient_handleServerDisconnect, DisconnectNotificationName, 0, CFNotificationSuspensionBehaviorDeliverImmediately);
}

void airplayAgentServicesClient_handleServerDisconnect()
{
  if (gLogCategory_APAirPlayAgentServices <= 50
    && (gLogCategory_APAirPlayAgentServices != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  _Exit(1);
}

uint64_t APEndpointDescriptionGetClassID()
{
  if (APEndpointDescriptionGetClassID_sRegisterOnce != -1) {
    dispatch_once_f(&APEndpointDescriptionGetClassID_sRegisterOnce, &APEndpointDescriptionGetClassID_sClassID, (dispatch_function_t)endpointDescription_registerClass);
  }
  return APEndpointDescriptionGetClassID_sClassID;
}

uint64_t endpointDescription_registerClass(uint64_t a1)
{
  uint64_t ClassID = CMBaseGetClassID();
  return MEMORY[0x1F40DC658](&endpointDescription_registerClass_sClassDesc, ClassID, 1, a1);
}

uint64_t APEndpointDescriptionGetTypeID()
{
  if (APEndpointDescriptionGetClassID_sRegisterOnce != -1) {
    dispatch_once_f(&APEndpointDescriptionGetClassID_sRegisterOnce, &APEndpointDescriptionGetClassID_sClassID, (dispatch_function_t)endpointDescription_registerClass);
  }
  uint64_t v0 = APEndpointDescriptionGetClassID_sClassID;
  return MEMORY[0x1F40DB8F8](v0);
}

uint64_t APEndpointDescriptionGetDeviceID(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  CFStringRef theString = 0;
  *(_OWORD *)buffer = 0u;
  long long v9 = 0u;
  uint64_t v2 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(unsigned int (**)(uint64_t, __CFString *, void, CFStringRef *))(v3 + 48);
  if (v4
    && !v4(a1, @"DeviceID", *MEMORY[0x1E4F1CF80], &theString)
    && CFStringGetCString(theString, buffer, 32, 0x8000100u))
  {
    uint64_t v5 = TextToHardwareAddressScalar();
  }
  else
  {
    APSLogErrorAt();
    uint64_t v5 = 0;
  }
  if (theString) {
    CFRelease(theString);
  }
  return v5;
}

__CFString *APEndpointDescriptionCopyDebugString(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  int v16 = 0;
  CFTypeRef v14 = 0;
  CFTypeRef cf = 0;
  uint64_t v2 = *MEMORY[0x1E4F1CF80];
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *(void (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v5 + 48);
  if (v6) {
    v6(a1, @"Name", v2, &cf);
  }
  uint64_t v7 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  long long v9 = *(void (**)(uint64_t, __CFString *, uint64_t, CFTypeRef *))(v8 + 48);
  if (v9) {
    v9(a1, @"Model", v2, &v14);
  }
  APSGetFBOPropertyInt64();
  CFTypeRef v11 = v14;
  CFTypeRef v10 = cf;
  uint64_t v12 = SourceVersionToCString();
  CFStringAppendFormat(Mutable, 0, @"'%@' (%@ v%s)", v10, v11, v12);
  if (cf) {
    CFRelease(cf);
  }
  if (v14) {
    CFRelease(v14);
  }
  return Mutable;
}

BOOL APEndpointDescriptionIsSourceVersionOlderThan(uint64_t a1, unsigned int a2)
{
  return APSGetFBOPropertyInt64() < a2;
}

CFStringRef endpointDescription_copyFormattingDesc(uint64_t a1)
{
  return CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, @"[APEndpointDescription %p]", a1);
}

uint64_t APEndpointStreamLocalCreate(const __CFAllocator *a1, const void *a2, const void *a3, uint64_t a4, const void *a5, char a6, CFTypeRef *a7)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  CFTypeRef v27 = 0;
  char v26 = 0;
  int valuePtr = 1;
  if (a5 && a3 && a7)
  {
    FigEndpointStreamAirPlayGetClassID();
    uint64_t v13 = CMDerivedObjectCreate();
    if (v13)
    {
      uint64_t v23 = v13;
      APSLogErrorAt();
    }
    else
    {
      uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
      SNPrintF();
      *(void *)(DerivedStorage + 16) = os_transaction_create();
      SNPrintF();
      uint64_t v15 = FigDispatchQueueCreateWithPriority();
      *(void *)(DerivedStorage + 8) = v15;
      if (v15)
      {
        SNPrintF();
        uint64_t v16 = FigDispatchQueueCreateWithPriority();
        *(void *)(DerivedStorage + 200) = v16;
        if (v16)
        {
          *(void *)(DerivedStorage + 136) = FigSimpleMutexCreate();
          *(void *)(DerivedStorage + 24) = a2;
          if (a2) {
            CFRetain(a2);
          }
          *(void *)(DerivedStorage + 40) = a3;
          CFRetain(a3);
          *(void *)(DerivedStorage + 64) = a5;
          CFRetain(a5);
          int Value = (const void *)FigCFDictionaryGetValue();
          if (Value) {
            int Value = CFRetain(Value);
          }
          *(void *)(DerivedStorage + 48) = Value;
          int valuePtr = 1;
          CFNumberRef v18 = CFNumberCreate(a1, kCFNumberSInt32Type, &valuePtr);
          *(void *)(DerivedStorage + 152) = v18;
          if (v18)
          {
            CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
            *(void *)(DerivedStorage + 176) = Mutable;
            if (Mutable)
            {
              CFDictionaryGetInt64();
              int IntWithDefault = APSSettingsGetIntWithDefault();
              *(unsigned char *)(DerivedStorage + 57) = IntWithDefault != 0;
              if (IntWithDefault)
              {
                uint64_t v21 = APSAudioFormatDescriptionListCreateForBufferedLocalReceiverEchoCancellationReference();
LABEL_15:
                char v22 = 0;
                goto LABEL_18;
              }
              if (CFEqual(*(CFTypeRef *)(DerivedStorage + 40), (CFTypeRef)*MEMORY[0x1E4F21470]))
              {
                uint64_t v21 = localStream_copyBufferedSupportedAudioFormatList((uint64_t)v27, &v26);
                char v22 = v26;
              }
              else
              {
                if (CFEqual(*(CFTypeRef *)(DerivedStorage + 40), (CFTypeRef)*MEMORY[0x1E4F21468]))
                {
                  uint64_t v21 = APSAudioFormatDescriptionListCreateForRealTimeLocalReceiver();
                  goto LABEL_15;
                }
                char v22 = 0;
                uint64_t v21 = 0;
              }
LABEL_18:
              *(void *)(DerivedStorage + 160) = 0;
              *(unsigned char *)(DerivedStorage + 192) = v22;
              *(void *)(DerivedStorage + 184) = v21;
              *(void *)(DerivedStorage + 32) = CFRetain(@"10CA1000-8AFF-4902-9124-F8506138A0D8");
              *(unsigned char *)(DerivedStorage + 56) = a6;
              CFDictionaryGetInt64();
              *(unsigned char *)(DerivedStorage + 57) = APSSettingsGetIntWithDefault() != 0;
              APSAudioFormatDescriptionListCopyDebugString();
              if (gLogCategory_APEndpointStreamLocal <= 50
                && (gLogCategory_APEndpointStreamLocal != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              uint64_t v23 = 0;
              *a7 = v27;
              return v23;
            }
          }
        }
      }
      APSLogErrorAt();
      uint64_t v23 = 4294950535;
    }
  }
  else
  {
    APSLogErrorAt();
    uint64_t v23 = 4294950536;
  }
  if (v27) {
    CFRelease(v27);
  }
  return v23;
}

uint64_t localStream_copyBufferedSupportedAudioFormatList(uint64_t a1, unsigned char *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  FigCFDictionaryGetNumberValue();
  if (FigCFNumberGetUInt64() != 2)
  {
    uint64_t v4 = CMBaseObjectGetDerivedStorage();
    if (IsAppleTV() && !*(void *)(v4 + 128)) {
      APSLocalAudioCapabilityMonitorGetSharedInstance();
    }
    if (*(void *)(DerivedStorage + 128))
    {
      APSLocalAudioCapabilityMonitorCopyProperty();
      APSLocalAudioCapabilityMonitorCopyProperty();
    }
  }
  uint64_t v5 = APSAudioFormatDescriptionListCreateForBufferedReceiverWithAudioCapabilities();
  *a2 = 0;
  return v5;
}

void localStream_Finalize(const void *a1)
{
  uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  uint64_t v3 = DerivedStorage[1];
  if (v3)
  {
    dispatch_release(v3);
    DerivedStorage[1] = 0;
  }
  localStream_dissociateInternal(a1, 0);
  uint64_t v4 = (const void *)DerivedStorage[30];
  if (v4)
  {
    CFRelease(v4);
    DerivedStorage[30] = 0;
  }
  uint64_t v5 = (const void *)DerivedStorage[3];
  if (v5) {
    CFRelease(v5);
  }
  uint64_t v6 = (const void *)DerivedStorage[5];
  if (v6) {
    CFRelease(v6);
  }
  uint64_t v7 = (const void *)DerivedStorage[6];
  if (v7) {
    CFRelease(v7);
  }
  uint64_t v8 = (const void *)DerivedStorage[4];
  if (v8) {
    CFRelease(v8);
  }
  long long v9 = (const void *)DerivedStorage[8];
  if (v9) {
    CFRelease(v9);
  }
  CFTypeRef v10 = (const void *)DerivedStorage[18];
  if (v10) {
    CFRelease(v10);
  }
  CFTypeRef v11 = (const void *)DerivedStorage[22];
  if (v11) {
    CFRelease(v11);
  }
  uint64_t v12 = (const void *)DerivedStorage[20];
  if (v12) {
    CFRelease(v12);
  }
  uint64_t v13 = (const void *)DerivedStorage[23];
  if (v13) {
    CFRelease(v13);
  }
  CFTypeRef v14 = (void *)DerivedStorage[2];
  if (v14)
  {
    os_release(v14);
    DerivedStorage[2] = 0;
  }
  FigSimpleMutexDestroy();
  uint64_t v15 = (const void *)DerivedStorage[27];
  if (v15)
  {
    CFRelease(v15);
    DerivedStorage[27] = 0;
  }
  uint64_t v16 = DerivedStorage[25];
  if (v16)
  {
    dispatch_release(v16);
    DerivedStorage[25] = 0;
  }
}

__CFString *localStream_CopyDebugDescription(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppendFormat(Mutable, 0, @"<APEndpointStreamLocal %p '%@'>", a1, *(void *)(DerivedStorage + 24));
  return Mutable;
}

uint64_t localStream_CopyProperty(uint64_t a1, const void *a2, const __CFAllocator *a3, void *a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  if (gLogCategory_APEndpointStreamLocal <= 30
    && (gLogCategory_APEndpointStreamLocal != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)DerivedStorage)
  {
    APSLogErrorAt();
    return 4294950534;
  }
  if (!a2 || !a4)
  {
    APSLogErrorAt();
    return 4294950536;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21408]))
  {
    long long v9 = *(const void **)(DerivedStorage + 40);
LABEL_19:
    uint64_t UInt32 = (uint64_t)CFRetain(v9);
LABEL_20:
    uint64_t v12 = 0;
    *a4 = UInt32;
    return v12;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21370]))
  {
    CFTypeRef v10 = (const void **)MEMORY[0x1E4F1CFD0];
    if (!*(unsigned char *)(DerivedStorage + 208)) {
      CFTypeRef v10 = (const void **)MEMORY[0x1E4F1CFC8];
    }
    goto LABEL_18;
  }
  if (CFEqual(a2, @"IsLocalStream"))
  {
    CFTypeRef v10 = (const void **)MEMORY[0x1E4F1CFD0];
LABEL_18:
    long long v9 = *v10;
    goto LABEL_19;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21358]))
  {
LABEL_17:
    CFTypeRef v10 = (const void **)MEMORY[0x1E4F1CFC8];
    goto LABEL_18;
  }
  if (CFEqual(a2, @"EndpointStreamShowInfo"))
  {
    uint64_t UInt32 = (uint64_t)localStream_copyShowInfo();
    goto LABEL_20;
  }
  if (CFEqual(a2, @"IsPlaying"))
  {
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 136));
    CFTypeRef v14 = (CFTypeRef *)MEMORY[0x1E4F1CFD0];
    if (!*(unsigned char *)(DerivedStorage + 168)) {
      CFTypeRef v14 = (CFTypeRef *)MEMORY[0x1E4F1CFC8];
    }
    CFTypeRef v15 = *v14;
LABEL_28:
    CFTypeRef v15 = CFRetain(v15);
LABEL_29:
    *a4 = v15;
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 136));
    return 0;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21368]))
  {
    long long v9 = *(const void **)(DerivedStorage + 32);
    goto LABEL_19;
  }
  if (FigCFEqual())
  {
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 136));
    APSAudioFormatDescriptionListGetMaxChannelCount();
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 136));
    goto LABEL_35;
  }
  if (CFEqual(a2, @"SupportedAPAudioFormats"))
  {
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 136));
    uint64_t valuePtr = APSAudioFormatDescriptionListGetLegacyFormatMask();
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 136));
    CFNumberRef v16 = CFNumberCreate(a3, kCFNumberSInt64Type, &valuePtr);
    *a4 = v16;
    if (!v16)
    {
      APSLogErrorAt();
      return 4294950535;
    }
    return 0;
  }
  if (CFEqual(a2, @"SupportedAudioFormatList"))
  {
    if (!CFEqual(*(CFTypeRef *)(DerivedStorage + 40), (CFTypeRef)*MEMORY[0x1E4F21470])
      || (MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 136)),
          uint64_t v17 = *(const void **)(DerivedStorage + 184),
          MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 136)),
          !v17))
    {
      uint64_t UInt32 = 0;
      goto LABEL_20;
    }
    goto LABEL_44;
  }
  if (FigCFEqual())
  {
    if (CFEqual(*(CFTypeRef *)(DerivedStorage + 40), (CFTypeRef)*MEMORY[0x1E4F21470]))
    {
      MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 136));
      MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 136));
      uint64_t v18 = APSAudioFormatDescriptionListCopyRichestFormatAsFigEndpointStreamAudioFormatDescription();
      if (v18)
      {
        uint64_t v12 = v18;
        APSLogErrorAt();
        return v12;
      }
      CFTypeRef v19 = cf;
    }
    else
    {
      CFTypeRef v19 = 0;
    }
    uint64_t v12 = 0;
    goto LABEL_55;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F213C0]))
  {
    if (!CFEqual(*(CFTypeRef *)(DerivedStorage + 40), (CFTypeRef)*MEMORY[0x1E4F21470]))
    {
      uint64_t v12 = 0;
      *a4 = 0;
      return v12;
    }
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 136));
    MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 136));
    APSLogErrorAt();
    return 0;
  }
  if (FigCFEqual())
  {
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 136));
    CFTypeRef v15 = *(CFTypeRef *)(DerivedStorage + 160);
    if (!v15) {
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F21290]))
  {
    MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 136));
    CFTypeRef v15 = *(CFTypeRef *)(DerivedStorage + 144);
    if (!v15) {
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (CFEqual(a2, @"HoseRegistrar"))
  {
    uint64_t valuePtr = a1;
    char v22 = 0;
    dispatch_sync_f(*(dispatch_queue_t *)(DerivedStorage + 200), &valuePtr, (dispatch_function_t)localStream_copyRegistrar);
    uint64_t v12 = 0;
    CFTypeRef v19 = v22;
LABEL_55:
    *a4 = v19;
    return v12;
  }
  if (CFEqual(a2, @"SupportAPAP"))
  {
    int IsFeatureEnabled = FigCFEqual();
    goto LABEL_67;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F213E0]))
  {
    uint64_t v17 = (const void *)*MEMORY[0x1E4F1CFC8];
    if ((APSSettingsGetIntWithDefault() || APSSettingsIsFeatureEnabled())
      && FigCFEqual())
    {
      uint64_t v17 = (const void *)*MEMORY[0x1E4F1CFD0];
    }
LABEL_44:
    long long v9 = v17;
    goto LABEL_19;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F213D8]))
  {
    int IsFeatureEnabled = APSSettingsIsFeatureEnabled();
LABEL_67:
    CFTypeRef v10 = (const void **)MEMORY[0x1E4F1CFD0];
    if (!IsFeatureEnabled) {
      CFTypeRef v10 = (const void **)MEMORY[0x1E4F1CFC8];
    }
    goto LABEL_18;
  }
  if (CFEqual(a2, @"IsSidePlayStream")) {
    goto LABEL_17;
  }
  if (CFEqual(a2, @"NumberOfSubStreams"))
  {
LABEL_35:
    uint64_t UInt32 = FigCFNumberCreateUInt32();
    goto LABEL_20;
  }
  if (gLogCategory_APEndpointStreamLocal <= 30
    && (gLogCategory_APEndpointStreamLocal != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 4294954512;
}

uint64_t localStream_SetProperty(const void *a1, uint64_t a2, const void *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamLocal <= 30
    && (gLogCategory_APEndpointStreamLocal != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(unsigned char *)DerivedStorage)
  {
    APSLogErrorAt();
    return 4294950534;
  }
  if (FigCFEqual())
  {
    if (!FigCFEqual())
    {
      APSLogErrorAt();
      return 4294954509;
    }
    if (a3)
    {
      CFTypeID v6 = CFGetTypeID(a3);
      if (v6 == CFNumberGetTypeID())
      {
        if (a1) {
          CFRetain(a1);
        }
        CFRetain(a3);
        uint64_t v7 = *(NSObject **)(DerivedStorage + 200);
        block[0] = MEMORY[0x1E4F143A8];
        block[1] = 0x40000000;
        block[2] = __localStream_SetProperty_block_invoke;
        block[3] = &__block_descriptor_tmp_36;
        block[4] = DerivedStorage;
        void block[5] = a3;
        void block[6] = a1;
        dispatch_async(v7, block);
        return 0;
      }
    }
LABEL_69:
    APSLogErrorAt();
    return 4294950536;
  }
  if (!FigCFEqual())
  {
    if (FigCFEqual())
    {
      if (a3)
      {
        CFTypeID v10 = CFGetTypeID(a3);
        if (v10 == CFStringGetTypeID())
        {
          MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 136));
          uint64_t v11 = CMBaseObjectGetDerivedStorage();
          if (!FigCFEqual())
          {
            if (gLogCategory_APEndpointStreamLocal <= 50
              && (gLogCategory_APEndpointStreamLocal != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
            if (Mutable)
            {
              uint64_t v17 = Mutable;
              CFDictionarySetValue(Mutable, @"ActiveBadgingFormatInfo", a3);
              uint64_t v18 = *(const void **)(v11 + 160);
              *(void *)(v11 + 160) = a3;
              CFRetain(a3);
              if (v18) {
                CFRelease(v18);
              }
              CMNotificationCenterGetDefaultLocalCenter();
              FigDispatchAsyncPostNotification();
              CFRelease(v17);
            }
            else
            {
              APSLogErrorAt();
            }
          }
          MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 136));
          return 0;
        }
      }
      goto LABEL_69;
    }
    if (FigCFEqual())
    {
      if (a3)
      {
        CFTypeID v12 = CFGetTypeID(a3);
        if (v12 != CFNumberGetTypeID()) {
          goto LABEL_69;
        }
      }
      if (gLogCategory_APEndpointStreamLocal <= 50
        && (gLogCategory_APEndpointStreamLocal != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 136));
      uint64_t v13 = *(const void **)(DerivedStorage + 144);
      *(void *)(DerivedStorage + 144) = a3;
      if (a3) {
        CFRetain(a3);
      }
      if (v13) {
        CFRelease(v13);
      }
      MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 136));
      CFTypeRef v14 = *(NSObject **)(DerivedStorage + 200);
      v21[0] = MEMORY[0x1E4F143A8];
      v21[1] = 0x40000000;
      CFTypeRef v21[2] = __localStream_SetProperty_block_invoke_2;
      v21[3] = &__block_descriptor_tmp_39_0;
      v21[4] = DerivedStorage;
      v21[5] = a3;
      CFTypeRef v15 = v21;
    }
    else if (FigCFEqual())
    {
      if (gLogCategory_APEndpointStreamLocal <= 50
        && (gLogCategory_APEndpointStreamLocal != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFTypeRef v14 = *(NSObject **)(DerivedStorage + 200);
      v20[0] = MEMORY[0x1E4F143A8];
      v20[1] = 0x40000000;
      _OWORD v20[2] = __localStream_SetProperty_block_invoke_3;
      v20[3] = &__block_descriptor_tmp_41;
      v20[4] = a1;
      v20[5] = a3;
      CFTypeRef v15 = v20;
    }
    else
    {
      if (!FigCFEqual())
      {
        if (gLogCategory_APEndpointStreamLocal <= 30
          && (gLogCategory_APEndpointStreamLocal != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        return 4294954512;
      }
      if (gLogCategory_APEndpointStreamLocal <= 50
        && (gLogCategory_APEndpointStreamLocal != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CFTypeRef v14 = *(NSObject **)(DerivedStorage + 200);
      v19[0] = MEMORY[0x1E4F143A8];
      v19[1] = 0x40000000;
      _OWORD v19[2] = __localStream_SetProperty_block_invoke_4;
      v19[3] = &__block_descriptor_tmp_43;
      v19[4] = a1;
      v19[5] = a3;
      CFTypeRef v15 = v19;
    }
    dispatch_sync(v14, v15);
    return 0;
  }
  if (!a3) {
    goto LABEL_69;
  }
  CFTypeID v9 = CFGetTypeID(a3);
  if (v9 != CFStringGetTypeID()) {
    goto LABEL_69;
  }
  if (gLogCategory_APEndpointStreamLocal > 50) {
    return 0;
  }
  if (gLogCategory_APEndpointStreamLocal != -1 || (uint64_t result = _LogCategory_Initialize(), result))
  {
    LogPrintF();
    return 0;
  }
  return result;
}

void localStream_dissociateInternal(const void *a1, int a2)
{
  uint64_t DerivedStorage = (unsigned char *)CMBaseObjectGetDerivedStorage();
  if (!*DerivedStorage)
  {
    uint64_t v5 = DerivedStorage;
    *uint64_t DerivedStorage = 1;
    if (gLogCategory_APEndpointStreamLocal <= 30
      && (gLogCategory_APEndpointStreamLocal != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    localStream_suspendInternal(a1, 0, 0);
    if (*((void *)v5 + 16))
    {
      CMNotificationCenterGetDefaultLocalCenter();
      FigNotificationCenterRemoveWeakListener();
    }
    if (a2 && *((void *)v5 + 1))
    {
      CMNotificationCenterGetDefaultLocalCenter();
      FigDispatchAsyncPostNotification();
    }
  }
}

void localStream_suspendInternal(const void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(unsigned char *)(DerivedStorage + 208)) {
    goto LABEL_35;
  }
  uint64_t v7 = CMBaseObjectGetDerivedStorage();
  CFTypeRef v28 = 0;
  uint64_t v27 = 0;
  int v26 = 0;
  if (*(unsigned char *)(v7 + 208))
  {
    uint64_t v8 = v7;
    if (*(void *)(v7 + 240))
    {
      if (APSThreadSafeDictionaryCopyValueIfPresent()
        && APSThreadSafeDictionaryGetInt64IfPresent())
      {
        APSThreadSafeDictionaryGetInt32IfPresent();
        mach_absolute_time();
        UpTicksToSeconds();
        APSThreadSafeDictionarySetInt32();
        APSThreadSafeDictionaryRemoveValue();
      }
      CFTypeID v9 = *(const void **)(v8 + 240);
      if (v9)
      {
        CFRelease(v9);
        *(void *)(v8 + 240) = 0;
      }
    }
  }
  if (v28) {
    CFRelease(v28);
  }
  localStream_updateResumed((uint64_t)a1, 0);
  if (gLogCategory_APEndpointStreamLocal <= 50
    && (gLogCategory_APEndpointStreamLocal != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v10 = *(void *)(DerivedStorage + 216);
  if (!v10)
  {
    CFTypeID v12 = 0;
LABEL_31:
    char v22 = *(const void **)(DerivedStorage + 232);
    if (v22)
    {
      CFRelease(v22);
      *(void *)(DerivedStorage + 232) = 0;
    }
    if (!v12)
    {
LABEL_36:
      if (!a2) {
        return;
      }
      goto LABEL_37;
    }
    CFRelease(v12);
LABEL_35:
    LODWORD(v12) = 0;
    goto LABEL_36;
  }
  if (!*(unsigned char *)(DerivedStorage + 57))
  {
    CFTypeID v12 = 0;
LABEL_21:
    APSEndpointStreamAudioHoseProtocolGetProtocolID();
    Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
    if (ProtocolVTable)
    {
      uint64_t v14 = *(void *)(ProtocolVTable + 16);
      if (v14)
      {
        CFTypeRef v15 = *(void (**)(uint64_t, void, void))(v14 + 56);
        if (v15) {
          v15(v10, 0, 0);
        }
      }
    }
    uint64_t v16 = *(void *)(DerivedStorage + 232);
    uint64_t v17 = *(void *)(DerivedStorage + 216);
    APSEndpointStreamAudioHoseRegistrarProtocolGetProtocolID();
    uint64_t v18 = CMBaseObjectGetProtocolVTable();
    if (v18)
    {
      uint64_t v19 = *(void *)(v18 + 16);
      if (v19)
      {
        uint64_t v20 = *(void (**)(uint64_t, uint64_t, __CFDictionary *))(v19 + 16);
        if (v20) {
          v20(v16, v17, v12);
        }
      }
    }
    APSEndpointStreamAudioHoseSBARInvalidate();
    CMNotificationCenterGetDefaultLocalCenter();
    FigNotificationCenterRemoveWeakListener();
    localStream_updateHoseSBARRate((uint64_t)a1, 0);
    uint64_t v21 = *(const void **)(DerivedStorage + 216);
    if (v21)
    {
      CFRelease(v21);
      *(void *)(DerivedStorage + 216) = 0;
    }
    goto LABEL_31;
  }
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    CFTypeID v12 = Mutable;
    CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F4A010], (const void *)*MEMORY[0x1E4F1CFD0]);
    uint64_t v10 = *(void *)(DerivedStorage + 216);
    goto LABEL_21;
  }
  APSLogErrorAt();
  LODWORD(v12) = -16761;
  if (!a2) {
    return;
  }
LABEL_37:
  CFRetain(a1);
  uint64_t v23 = *(NSObject **)(DerivedStorage + 8);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __localStream_suspendInternal_block_invoke;
  block[3] = &__block_descriptor_tmp_15;
  block[4] = a2;
  void block[5] = a1;
  int v25 = (int)v12;
  void block[6] = a3;
  dispatch_async(v23, block);
}

void localStream_handleFormatInfoChanged(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  char v6 = 0;
  uint64_t v4 = (const void *)localStream_copyBufferedSupportedAudioFormatList(a2, &v6);
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 136));
  if (!FigCFEqual())
  {
    APSAudioFormatDescriptionListCopyDebugString();
    if (gLogCategory_APEndpointStreamLocal <= 50
      && (gLogCategory_APEndpointStreamLocal != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    APSAudioFormatDescriptionListCopyDebugString();
    if (gLogCategory_APEndpointStreamLocal <= 50
      && (gLogCategory_APEndpointStreamLocal != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(DerivedStorage + 192) = v6;
    uint64_t v5 = *(const void **)(DerivedStorage + 184);
    *(void *)(DerivedStorage + 184) = v4;
    if (v4) {
      CFRetain(v4);
    }
    if (v5) {
      CFRelease(v5);
    }
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
  }
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 136));
  if (v4) {
    CFRelease(v4);
  }
}

void localStream_updateResumed(uint64_t a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned __int8 *)(DerivedStorage + 208) != a2)
  {
    *(unsigned char *)(DerivedStorage + 208) = a2;
    if (gLogCategory_APEndpointStreamLocal <= 50
      && (gLogCategory_APEndpointStreamLocal != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    localStream_updateIsPlaying();
  }
}

void localStream_handleHoseSBARRateChanged(uint64_t a1, uint64_t a2)
{
  CMBaseObjectGetDerivedStorage();
  int Int64Ranged = CFDictionaryGetInt64Ranged();
  localStream_updateHoseSBARRate(a2, Int64Ranged);
}

void localStream_updateHoseSBARRate(uint64_t a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(_DWORD *)(DerivedStorage + 224) != a2)
  {
    *(_DWORD *)(DerivedStorage + 224) = a2;
    if (gLogCategory_APEndpointStreamLocal <= 50
      && (gLogCategory_APEndpointStreamLocal != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    localStream_updateIsPlaying();
  }
}

void __localStream_suspendInternal_block_invoke(uint64_t a1)
{
  (*(void (**)(void, void, void))(a1 + 32))(*(void *)(a1 + 40), *(unsigned int *)(a1 + 56), *(void *)(a1 + 48));
  uint64_t v2 = *(const void **)(a1 + 40);
  CFRelease(v2);
}

void localStream_updateIsPlaying()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 136));
  if (CFEqual(*(CFTypeRef *)(DerivedStorage + 40), (CFTypeRef)*MEMORY[0x1E4F21468]))
  {
    int v1 = *(unsigned __int8 *)(DerivedStorage + 208);
  }
  else if (CFEqual(*(CFTypeRef *)(DerivedStorage + 40), (CFTypeRef)*MEMORY[0x1E4F21470]))
  {
    int v1 = *(_DWORD *)(DerivedStorage + 224) != 0;
  }
  else
  {
    int v1 = 0;
  }
  if (*(unsigned __int8 *)(DerivedStorage + 168) != v1)
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 1, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    *(unsigned char *)(DerivedStorage + 168) = v1;
    if (gLogCategory_APEndpointStreamLocal <= 50)
    {
      if (gLogCategory_APEndpointStreamLocal != -1
        || (int v3 = _LogCategory_Initialize(), v1 = *(unsigned __int8 *)(DerivedStorage + 168), v3))
      {
        LogPrintF();
        int v1 = *(unsigned __int8 *)(DerivedStorage + 168);
      }
    }
    uint64_t v4 = (const void **)MEMORY[0x1E4F1CFC8];
    if (v1) {
      uint64_t v4 = (const void **)MEMORY[0x1E4F1CFD0];
    }
    CFDictionarySetValue(Mutable, @"IsPlaying", *v4);
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
    CFRelease(Mutable);
  }
  JUMPOUT(0x1D25EB390);
}

__CFDictionary *localStream_copyShowInfo()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  uint64_t v2 = Mutable;
  int v3 = (const void **)MEMORY[0x1E4F1CFD0];
  if (!*(unsigned char *)(DerivedStorage + 208)) {
    int v3 = (const void **)MEMORY[0x1E4F1CFC8];
  }
  CFDictionarySetValue(Mutable, @"Resumed", *v3);
  CFDictionarySetValue(v2, @"Type", *(const void **)(DerivedStorage + 40));
  CFDictionarySetValue(v2, @"Name", *(const void **)(DerivedStorage + 24));
  return v2;
}

CFTypeRef localStream_copyRegistrar(uint64_t a1)
{
  CFTypeRef result = *(CFTypeRef *)(CMBaseObjectGetDerivedStorage() + 232);
  if (result) {
    CFTypeRef result = CFRetain(result);
  }
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t localStream_setAndCacheSBARProperty(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(CMBaseObjectGetDerivedStorage() + 216);
  if (v5)
  {
    uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 8);
    uint64_t v7 = v6 ? v6 : 0;
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 56);
    if (v8) {
      v8(v5, a2, a3);
    }
  }
  return FigCFDictionarySetValue();
}

uint64_t localStream_Suspend(const void *a1, const void *a2)
{
  if (a1) {
    CFRetain(a1);
  }
  if (a2) {
    CFRetain(a2);
  }
  APSDispatchAsyncFHelper();
  return 0;
}

uint64_t localStream_Resume(const void *a1, const void *a2)
{
  if (a1) {
    CFRetain(a1);
  }
  if (a2) {
    CFRetain(a2);
  }
  APSDispatchAsyncFHelper();
  return 0;
}

uint64_t localStream_Dissociate(const void *a1)
{
  if (!*(unsigned char *)CMBaseObjectGetDerivedStorage())
  {
    CFRetain(a1);
    APSDispatchAsyncFHelper();
  }
  return 0;
}

void localStream_suspendDispatchInternal(uint64_t a1)
{
  localStream_suspendInternal(*(const void **)a1, *(void *)(a1 + 16), *(void *)(a1 + 24));
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
  uint64_t v2 = *(const void **)(a1 + 8);
  if (v2)
  {
    CFRelease(v2);
  }
}

void localStream_resumeDispatchInternal(uint64_t *a1)
{
  int v1 = a1;
  uint64_t v92 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *a1;
  CFDictionaryRef v2 = (const __CFDictionary *)a1[1];
  uint64_t v4 = a1[2];
  uint64_t v76 = a1[3];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v6 = DerivedStorage;
  CFTypeRef v81 = 0;
  CFTypeRef v82 = 0;
  CFTypeRef v79 = 0;
  uint64_t v80 = 0;
  uint64_t context = (void *)v3;
  if (*(unsigned char *)DerivedStorage)
  {
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    int v25 = 0;
    int v26 = 0;
    CFTypeRef v27 = 0;
    int v22 = -16762;
    goto LABEL_85;
  }
  uint64_t v7 = *(void *)(DerivedStorage + 40);
  if (v7 == *MEMORY[0x1E4F21468] || v7 == *MEMORY[0x1E4F21470] || v7 == *MEMORY[0x1E4F21478])
  {
    if (*(unsigned char *)(DerivedStorage + 208)) {
      goto LABEL_130;
    }
    uint64_t v72 = *MEMORY[0x1E4F21470];
    uint64_t v77 = v4;
    if (gLogCategory_APEndpointStreamLocal <= 50
      && (gLogCategory_APEndpointStreamLocal != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (!v2) {
      goto LABEL_31;
    }
    int Value = CFDictionaryGetValue(v2, @"EncryptionKey");
    uint64_t v11 = CFDictionaryGetValue(v2, @"InitialTransportAudioFormat");
    CFTypeID v12 = CFDictionaryGetValue(v2, @"InitialTransportAudioFormatDescription");
    uint64_t v13 = CFDictionaryGetValue(v2, @"AudioSessionID");
    CFDictionaryGetInt64();
    uint64_t v14 = (unsigned char *)CMBaseObjectGetDerivedStorage();
    CFTypeRef cf = 0;
    long long v90 = 0u;
    long long v91 = 0u;
    long long v88 = 0u;
    long long v89 = 0u;
    long long v86 = 0u;
    long long v87 = 0u;
    *(_OWORD *)cStr = 0u;
    long long v85 = 0u;
    if (*v14)
    {
LABEL_27:
      if (Value)
      {
        CFAllocatorRef v20 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
        int v21 = APSCryptorChaCha20Poly1305Create();
        if (v21)
        {
          int v22 = v21;
        }
        else
        {
          if (v12)
          {
            CFTypeRef v79 = CFRetain(v12);
            goto LABEL_38;
          }
          if (!v11 || (CFTypeID v28 = CFGetTypeID(v11), v28 != CFDataGetTypeID()) || CFDataGetLength((CFDataRef)v11) != 40)
          {
            APSLogErrorAt();
            uint64_t v23 = 0;
            uint64_t v24 = 0;
            int v25 = 0;
            int v26 = 0;
            CFTypeRef v27 = 0;
            int v22 = -16760;
            goto LABEL_33;
          }
          BytePtr = CFDataGetBytePtr((CFDataRef)v11);
          long long v30 = *(_OWORD *)BytePtr;
          long long v31 = *((_OWORD *)BytePtr + 1);
          *(void *)&long long v86 = *((void *)BytePtr + 4);
          *(_OWORD *)cStr = v30;
          long long v85 = v31;
          int v32 = APSAudioFormatDescriptionCreateWithASBD();
          if (!v32)
          {
LABEL_38:
            MEMORY[0x1D25EB370](*(void *)(v6 + 136));
            if (v13) {
              CFTypeRef v33 = CFRetain(v13);
            }
            else {
              CFTypeRef v33 = 0;
            }
            *(void *)(v6 + 144) = v33;
            uint64_t v34 = *(const void **)(v6 + 152);
            if (v34) {
              CFTypeRef v75 = CFRetain(v34);
            }
            else {
              CFTypeRef v75 = 0;
            }
            uint64_t v35 = *(const void **)(v6 + 184);
            if (v35) {
              CFTypeRef v27 = CFRetain(v35);
            }
            else {
              CFTypeRef v27 = 0;
            }
            MEMORY[0x1D25EB390](*(void *)(v6 + 136));
            if (APSAudioFormatDescriptionListContainsFormat())
            {
              uint64_t v36 = *(const void **)(v6 + 216);
              if (v36)
              {
                CFRelease(v36);
                *(void *)(v6 + 216) = 0;
              }
              CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v20, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
              int v25 = Mutable;
              if (!Mutable)
              {
                APSLogErrorAt();
                uint64_t v23 = 0;
                int v26 = 0;
                goto LABEL_127;
              }
              uint64_t v38 = (const void *)*MEMORY[0x1E4F1CFD0];
              uint64_t v39 = (const void *)*MEMORY[0x1E4F1CFC8];
              if (*(unsigned char *)(v6 + 56)) {
                uint64_t v40 = (const void *)*MEMORY[0x1E4F1CFD0];
              }
              else {
                uint64_t v40 = (const void *)*MEMORY[0x1E4F1CFC8];
              }
              CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F4A038], v40);
              CFDictionarySetValue(v25, (const void *)*MEMORY[0x1E4F4A040], *(const void **)(v6 + 32));
              CFDictionarySetValue(v25, (const void *)*MEMORY[0x1E4F4A058], v38);
              CFDictionarySetValue(v25, (const void *)*MEMORY[0x1E4F4A048], v27);
              FigCFDictionarySetValueFromKeyInDict();
              FigCFDictionarySetValueFromKeyInDict();
              CFDictionarySetValue(v25, (const void *)*MEMORY[0x1E4F4A050], v39);
              FigCFDictionarySetValueFromKeyInDict();
              FigCFDictionarySetValue();
              FigCFDictionarySetValue();
              if (!CFDictionaryContainsKey(v2, @"HoseRegistrar"))
              {
                APSLogErrorAt();
                uint64_t v23 = 0;
                int v26 = 0;
                int v22 = -16760;
                goto LABEL_84;
              }
              uint64_t v41 = CFDictionaryGetValue(v2, @"HoseRegistrar");
              if (v41) {
                uint64_t v41 = CFRetain(v41);
              }
              *(void *)(v6 + 232) = v41;
              uint64_t v23 = (const void *)CFStringCreateF();
              int v42 = APSEndpointStreamAudioHoseSBARCreate();
              if (v42)
              {
                int v22 = v42;
              }
              else
              {
                uint64_t v43 = *(void *)(CMBaseObjectGetVTable() + 8);
                if (v43) {
                  uint64_t v44 = v43;
                }
                else {
                  uint64_t v44 = 0;
                }
                uint64_t v45 = *(uint64_t (**)(CFTypeRef, void, CFTypeRef))(v44 + 56);
                if (v45)
                {
                  int v46 = v45(v82, *MEMORY[0x1E4F4A098], v75);
                  if (!v46)
                  {
                    CMNotificationCenterGetDefaultLocalCenter();
                    FigNotificationCenterAddWeakListener();
                    int v47 = APSGetFBOPropertyInt64();
                    localStream_updateHoseSBARRate(v3, v47);
                    if (!*(unsigned char *)(v6 + 57))
                    {
                      uint64_t v49 = v1;
                      int v26 = 0;
                      goto LABEL_70;
                    }
                    uint64_t v48 = CFDictionaryCreateMutable(v20, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
                    int v26 = v48;
                    if (v48)
                    {
                      uint64_t v49 = v1;
                      CFDictionarySetValue(v48, (const void *)*MEMORY[0x1E4F4A010], v38);
LABEL_70:
                      uint64_t v50 = *(void *)(v6 + 232);
                      APSEndpointStreamAudioHoseRegistrarProtocolGetProtocolID();
                      Protocoluint64_t VTable = CMBaseObjectGetProtocolVTable();
                      if (ProtocolVTable && (uint64_t v52 = *(void *)(ProtocolVTable + 16)) != 0)
                      {
                        uint64_t v53 = *(uint64_t (**)(uint64_t, CFTypeRef, __CFDictionary *, uint64_t *))(v52 + 8);
                        if (v53)
                        {
                          int v54 = v53(v50, v82, v26, &v80);
                          if (v54)
                          {
                            int v22 = v54;
                          }
                          else
                          {
                            uint64_t v55 = v80;
                            if (*(void *)(v6 + 40) == v72 && !*(void *)(v80 + 8))
                            {
                              APSLogErrorAt();
                              int v22 = -16760;
                              goto LABEL_83;
                            }
                            CFTypeRef v56 = v82;
                            uint64_t v57 = *(void *)(v6 + 232);
                            APSEndpointStreamAudioHoseProtocolGetProtocolID();
                            uint64_t v58 = CMBaseObjectGetProtocolVTable();
                            if (v58 && (uint64_t v59 = *(void *)(v58 + 16)) != 0)
                            {
                              int v60 = *(uint64_t (**)(CFTypeRef, uint64_t, uint64_t))(v59 + 56);
                              if (v60)
                              {
                                int v22 = v60(v56, v55, v57);
                                if (!v22)
                                {
                                  *(void *)(v6 + 216) = v82;
                                  CFTypeRef v82 = 0;
                                  CFDictionaryApplyFunction(*(CFDictionaryRef *)(v6 + 176), (CFDictionaryApplierFunction)localStream_applyCachedPropertyForSBARDictionaryCallback, context);
                                  ++*(_DWORD *)(v6 + 228);
                                  localStream_updateResumed((uint64_t)context, 1);
LABEL_83:
                                  int v1 = v49;
                                  goto LABEL_84;
                                }
                              }
                              else
                              {
                                int v22 = -12782;
                              }
                            }
                            else
                            {
                              int v22 = -12788;
                            }
                          }
                        }
                        else
                        {
                          int v22 = -12782;
                        }
                      }
                      else
                      {
                        int v22 = -12788;
                      }
                      APSLogErrorAt();
                      goto LABEL_83;
                    }
                    APSLogErrorAt();
LABEL_127:
                    int v22 = -16761;
                    goto LABEL_84;
                  }
                  int v22 = v46;
                }
                else
                {
                  int v22 = -12782;
                }
              }
              APSLogErrorAt();
            }
            else
            {
              APSLogErrorAt();
              int v22 = APSSignalErrorAt();
              uint64_t v23 = 0;
              int v25 = 0;
            }
            int v26 = 0;
LABEL_84:
            uint64_t v4 = v77;
            uint64_t v24 = v75;
            goto LABEL_85;
          }
          int v22 = v32;
        }
        APSLogErrorAt();
LABEL_32:
        uint64_t v23 = 0;
        uint64_t v24 = 0;
        int v25 = 0;
        int v26 = 0;
        CFTypeRef v27 = 0;
LABEL_33:
        uint64_t v4 = v77;
        goto LABEL_85;
      }
LABEL_31:
      APSLogErrorAt();
      int v22 = APSSignalErrorAt();
      goto LABEL_32;
    }
    CFTypeRef v15 = v14;
    if (!v14[208])
    {
      uint64_t v74 = v1;
      uint64_t v16 = FigCFDictionaryGetValue();
      if (v16)
      {
        uint64_t v17 = (const void *)v16;
        __int16 v73 = v11;
        if (APSThreadSafeDictionaryCopyValueIfPresent())
        {
          uint64_t v18 = v13;
          mach_absolute_time();
          APSThreadSafeDictionarySetInt64();
          uint64_t v19 = (const void *)*((void *)v15 + 30);
          *((void *)v15 + 30) = v17;
          CFRetain(v17);
          if (v19) {
            CFRelease(v19);
          }
          int v1 = v74;
          uint64_t v13 = v18;
          uint64_t v11 = v73;
          goto LABEL_25;
        }
        APSThreadSafeDictionaryCreate();
        APSLogErrorAt();
      }
      int v1 = v74;
    }
LABEL_25:
    if (cf) {
      CFRelease(cf);
    }
    goto LABEL_27;
  }
  APSLogErrorAt();
LABEL_130:
  int v22 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  int v25 = 0;
  int v26 = 0;
  CFTypeRef v27 = 0;
LABEL_85:
  if (v4)
  {
    CFRetain(context);
    uint64_t v61 = *(NSObject **)(v6 + 8);
    *(void *)cStr = MEMORY[0x1E4F143A8];
    *(void *)&cStr[8] = 0x40000000;
    *(void *)&long long v85 = __localStream_resumeInternal_block_invoke;
    *((void *)&v85 + 1) = &__block_descriptor_tmp_49;
    *(void *)&long long v86 = v4;
    *((void *)&v86 + 1) = context;
    DWORD2(v87) = v22;
    *(void *)&long long v87 = v76;
    dispatch_async(v61, cStr);
  }
  if (v23) {
    CFRelease(v23);
  }
  if (v81) {
    CFRelease(v81);
  }
  if (v79) {
    CFRelease(v79);
  }
  if (v27) {
    CFRelease(v27);
  }
  if (v24) {
    CFRelease(v24);
  }
  if (v25) {
    CFRelease(v25);
  }
  CFTypeRef v62 = v82;
  if (v82)
  {
    APSEndpointStreamAudioHoseProtocolGetProtocolID();
    uint64_t v63 = CMBaseObjectGetProtocolVTable();
    if (v63)
    {
      uint64_t v64 = *(void *)(v63 + 16);
      if (v64)
      {
        uint64_t v65 = *(void (**)(CFTypeRef, void, void))(v64 + 56);
        if (v65) {
          v65(v62, 0, 0);
        }
      }
    }
    uint64_t v66 = *(void *)(v6 + 232);
    CFTypeRef v67 = v82;
    APSEndpointStreamAudioHoseRegistrarProtocolGetProtocolID();
    uint64_t v68 = CMBaseObjectGetProtocolVTable();
    if (v68)
    {
      uint64_t v69 = *(void *)(v68 + 16);
      if (v69)
      {
        int v70 = *(void (**)(uint64_t, CFTypeRef, __CFDictionary *))(v69 + 16);
        if (v70) {
          v70(v66, v67, v26);
        }
      }
    }
    APSEndpointStreamAudioHoseSBARInvalidate();
    if (v82) {
      CFRelease(v82);
    }
  }
  if (v26) {
    CFRelease(v26);
  }
  if (*v1) {
    CFRelease((CFTypeRef)*v1);
  }
  unsigned __int16 v71 = (const void *)v1[1];
  if (v71) {
    CFRelease(v71);
  }
}

uint64_t localStream_applyCachedPropertyForSBARDictionaryCallback(uint64_t a1, uint64_t a2)
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  uint64_t v5 = *(void *)(result + 216);
  if (v5)
  {
    if (*MEMORY[0x1E4F1D260] == a2) {
      a2 = 0;
    }
    uint64_t VTable = CMBaseObjectGetVTable();
    uint64_t v8 = *(void *)(VTable + 8);
    uint64_t result = VTable + 8;
    uint64_t v7 = v8;
    if (v8) {
      uint64_t v9 = v7;
    }
    else {
      uint64_t v9 = 0;
    }
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 56);
    if (v10)
    {
      return v10(v5, a1, a2);
    }
  }
  return result;
}

void __localStream_resumeInternal_block_invoke(uint64_t a1)
{
  (*(void (**)(void, void, void))(a1 + 32))(*(void *)(a1 + 40), *(unsigned int *)(a1 + 56), *(void *)(a1 + 48));
  CFDictionaryRef v2 = *(const void **)(a1 + 40);
  CFRelease(v2);
}

void localStream_dissociateDispatchInternal(const void **a1)
{
  localStream_dissociateInternal(*a1, 1);
  CFDictionaryRef v2 = *a1;
  CFRelease(v2);
}

uint64_t localStream_isPassthroughSupportedForFormatDescription(uint64_t a1, uint64_t a2, BOOL *a3)
{
  FigEndpointStreamAirPlayGetFigEndpointStream();
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APEndpointStreamLocal <= 10
    && (gLogCategory_APEndpointStreamLocal != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  MEMORY[0x1D25EB370](*(void *)(DerivedStorage + 136));
  if (!a3)
  {
    APSLogErrorAt();
    uint64_t v9 = 4294950536;
    goto LABEL_19;
  }
  if (!CFEqual(*(CFTypeRef *)(DerivedStorage + 40), (CFTypeRef)*MEMORY[0x1E4F21470]))
  {
    APSLogErrorAt();
    uint64_t v9 = 4294954514;
    goto LABEL_19;
  }
  if (!APSSettingsIsFeatureEnabled())
  {
    uint64_t v9 = 0;
    *a3 = 0;
    goto LABEL_19;
  }
  uint64_t v5 = APSAudioFormatDescriptionCreateWithFigEndpointStreamAudioFormatDescription();
  if (v5)
  {
    uint64_t v9 = v5;
LABEL_26:
    APSLogErrorAt();
    goto LABEL_19;
  }
  uint64_t v6 = APSAudioFormatDescriptionListCreate();
  if (v6)
  {
    uint64_t v9 = v6;
    goto LABEL_26;
  }
  APAudioFormatAtmosIsAllowedForCurrentDeviceAsSender();
  uint64_t v7 = APSAudioFormatDescriptionListAddSupportedFormatsForPassthrough();
  if (v7)
  {
    uint64_t v9 = v7;
    goto LABEL_26;
  }
  if (APSAudioFormatDescriptionListContainsFormat()) {
    BOOL v8 = APSAudioFormatDescriptionListContainsFormat() != 0;
  }
  else {
    BOOL v8 = 0;
  }
  APSAudioFormatDescriptionListCopyDebugString();
  if (gLogCategory_APEndpointStreamLocal <= 50
    && (gLogCategory_APEndpointStreamLocal != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v9 = 0;
  *a3 = v8;
LABEL_19:
  MEMORY[0x1D25EB390](*(void *)(DerivedStorage + 136));
  return v9;
}

uint64_t APPairingClientCoreUtilsCreate(uint64_t a1, const void *a2, char a3, char a4, int a5, char a6, char a7, char a8, char a9, char a10, char a11, char a12, const void *a13, const void *a14, const void *a15, const void *a16, const void *a17, void *a18)
{
  if (!a16)
  {
    uint64_t v31 = 4294895525;
    APSLogErrorAt();
    return v31;
  }
  APPairingClientGetClassID();
  uint64_t v22 = CMDerivedObjectCreate();
  if (v22)
  {
    uint64_t v31 = v22;
    goto LABEL_28;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2) {
    CFTypeRef v24 = CFRetain(a2);
  }
  else {
    CFTypeRef v24 = 0;
  }
  *(void *)(DerivedStorage + 16) = v24;
  if (a13) {
    CFTypeRef v25 = CFRetain(a13);
  }
  else {
    CFTypeRef v25 = 0;
  }
  *(void *)(DerivedStorage + 24) = v25;
  if (a14) {
    CFTypeRef v26 = CFRetain(a14);
  }
  else {
    CFTypeRef v26 = 0;
  }
  *(void *)(DerivedStorage + 32) = v26;
  if (a15)
  {
    CFTypeRef v27 = CFRetain(a15);
    CFTypeRef v26 = *(CFTypeRef *)(DerivedStorage + 32);
  }
  else
  {
    CFTypeRef v27 = 0;
  }
  *(void *)(DerivedStorage + 40) = v27;
  if (v26) {
    *(void *)uint64_t DerivedStorage = objc_opt_new();
  }
  *(void *)(DerivedStorage + 56) = CFRetain(a16);
  *(unsigned char *)(DerivedStorage + 64) = a3;
  *(unsigned char *)(DerivedStorage + 67) = a5;
  char v28 = a4;
  if (a5) {
    char v28 = 1;
  }
  *(unsigned char *)(DerivedStorage + 65) = v28;
  *(unsigned char *)(DerivedStorage + 68) = a6;
  *(unsigned char *)(DerivedStorage + 69) = a7;
  *(unsigned char *)(DerivedStorage + 70) = a8;
  *(unsigned char *)(DerivedStorage + 71) = a9;
  *(unsigned char *)(DerivedStorage + 72) = a10;
  *(unsigned char *)(DerivedStorage + 73) = a11;
  *(unsigned char *)(DerivedStorage + 74) = a12;
  if (a17)
  {
    CFStringRef v29 = (const __CFString *)CFRetain(a17);
    int v30 = *(unsigned __int8 *)(DerivedStorage + 74);
    *(void *)(DerivedStorage + 48) = v29;
    if (v30 || v29 && CFStringGetLength(v29) > 0) {
      goto LABEL_23;
    }
    goto LABEL_27;
  }
  *(void *)(DerivedStorage + 48) = 0;
  if (!a12)
  {
LABEL_27:
    uint64_t v31 = 4294895525;
LABEL_28:
    APSLogErrorAt();
    return v31;
  }
LABEL_23:
  if (gLogCategory_APPairingClientCoreUtils <= 50
    && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v31 = 0;
  *a18 = 0;
  return v31;
}

uint64_t APPairingClientCoreUtilsCreatePatchedPairedPeerWithPeerInfo(void *a1, uint64_t a2, void *a3)
{
  CFTypeRef v4 = (CFTypeRef)[a1 patchedPairedPeerWithPeerInfo:a2];
  if (a3)
  {
    if (v4) {
      CFTypeRef v4 = CFRetain(v4);
    }
    *a3 = v4;
  }
  return 0;
}

uint64_t APPairingClientCoreUtilsPairedPeerDescriptionHasWoLInfo(void *a1)
{
  uint64_t result = [a1 info];
  if (result)
  {
    [a1 info];
    CFArrayGetTypeID();
    Typedint Value = CFDictionaryGetTypedValue();
    [a1 info];
    CFDataGetTypeID();
    return (TypedValue | CFDictionaryGetTypedValue()) != 0;
  }
  return result;
}

uint64_t APPairingClientCoreUtilsPerformAddPairing()
{
  uint64_t v0 = PairingSessionCreate();
  if (v0)
  {
    uint64_t v1 = v0;
LABEL_9:
    APSLogErrorAt();
    return v1;
  }
  if (gLogCategory_APPairingClientCoreUtils <= 50
    && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  PairingSessionSetLogging();
  PairingSessionSetProperty();
  PairingSessionSetProperty();
  PairingSessionSetProperty();
  uint64_t v1 = coreUtilsPairing_performAdminPairingOperation();
  if (v1) {
    goto LABEL_9;
  }
  return v1;
}

uint64_t coreUtilsPairing_performAdminPairingOperation()
{
  uint64_t v7 = 0;
  dataPointerOut = 0;
  size_t lengthAtOffsetOut = 0;
  uint64_t v0 = PairingSessionExchange();
  if (v0)
  {
LABEL_24:
    uint64_t v4 = v0;
    goto LABEL_16;
  }
  CFAllocatorRef v1 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  while (1)
  {
    CMBaseObjectGetDerivedStorage();
    uint64_t v9 = 0;
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v1, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (!Mutable) {
      break;
    }
    CFMutableDictionaryRef v3 = Mutable;
    if (!TMIsAutomaticTimeEnabled()) {
      goto LABEL_7;
    }
    CFAbsoluteTimeGetCurrent();
    ASPrintF();
    if (v9)
    {
      CFDictionarySetCString();
LABEL_7:
      CFDictionarySetData();
      uint64_t v4 = APTransportStreamSendPlistMessageCreatingReply();
      goto LABEL_8;
    }
    uint64_t v4 = 4294895526;
    APSLogErrorAt();
LABEL_8:
    CFRelease(v3);
    if (v9) {
      free(v9);
    }
    if (v4) {
      goto LABEL_16;
    }
    if (v7)
    {
      free(v7);
      uint64_t v7 = 0;
    }
    size_t lengthAtOffsetOut = 0;
    dataPointerOut = 0;
    uint64_t v0 = PairingSessionExchange();
    if (v0) {
      goto LABEL_24;
    }
  }
  uint64_t v4 = 4294895526;
  APSLogErrorAt();
LABEL_16:
  if (v7)
  {
    free(v7);
    uint64_t v7 = 0;
  }
  if (v4
    && gLogCategory_APPairingClientCoreUtils <= 90
    && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v4;
}

uint64_t APPairingClientCoreUtilsPerformRemovePairing()
{
  uint64_t v0 = PairingSessionCreate();
  if (v0)
  {
    uint64_t v1 = v0;
LABEL_9:
    APSLogErrorAt();
    return v1;
  }
  if (gLogCategory_APPairingClientCoreUtils <= 50
    && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  PairingSessionSetLogging();
  PairingSessionSetProperty();
  uint64_t v1 = coreUtilsPairing_performAdminPairingOperation();
  if (v1) {
    goto LABEL_9;
  }
  return v1;
}

uint64_t APPairingClientCoreUtilsPerformListPairings(uint64_t a1, uint64_t *a2)
{
  unsigned int v4 = PairingSessionCreate();
  if (v4) {
    goto LABEL_9;
  }
  if (gLogCategory_APPairingClientCoreUtils <= 50
    && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  PairingSessionSetLogging();
  unsigned int v4 = coreUtilsPairing_performAdminPairingOperation();
  if (v4) {
LABEL_9:
  }
    APSLogErrorAt();
  else {
    *a2 = PairingSessionCopyProperty();
  }
  return v4;
}

id *APPairingClientCoreUtilsCopyGroupInfo(uint64_t a1, id **a2)
{
  uint64_t result = (id *)CMBaseObjectGetDerivedStorage();
  if (result[4])
  {
    uint64_t result = (id *)(id)objc_msgSend(*result, "pairingGroupInfoForPairingGroupID:");
    *a2 = result;
  }
  return result;
}

uint64_t APPairingClientCoreUtilsUpdateGroupInfo(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(void *)(DerivedStorage + 32))
  {
    uint64_t v4 = objc_msgSend(*(id *)DerivedStorage, "updatePairingGroupInfo:forPairingGroupID:", a2);
    if (v4) {
      APSLogErrorAt();
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895525;
  }
  return v4;
}

uint64_t APPairingClientCoreUtilsIsValidPairingGroupInfo(const __CFDictionary *a1, const void *a2, CFDataRef theData)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  long long v15 = 0u;
  long long v16 = 0u;
  if (a1 && a2 && theData && CFDataGetLength(theData) == 32)
  {
    if (!CFDictionaryContainsKey(a1, a2)) {
      return 1;
    }
    CFDataGetTypeID();
    Typedint Value = (const __CFData *)CFDictionaryGetTypedValue();
    if (TypedValue)
    {
      CFDataRef v7 = TypedValue;
      BytePtr = CFDataGetBytePtr(TypedValue);
      CC_LONG Length = CFDataGetLength(v7);
      CC_SHA256(BytePtr, Length, (unsigned __int8 *)&v15);
      uint64_t v10 = CFDataGetBytePtr(theData);
      BOOL v11 = *(void *)v10 == (void)v15 && *((void *)v10 + 1) == *((void *)&v15 + 1);
      BOOL v12 = v11 && *((void *)v10 + 2) == (void)v16;
      if (v12 && *((void *)v10 + 3) == *((void *)&v16 + 1)) {
        return 1;
      }
    }
  }
  APSLogErrorAt();
  return 0;
}

uint64_t APPairingClientCoreUtilsCreateCombinedPairingGroupInfo(const __CFDictionary *a1, const __CFDictionary *a2, const void *a3, CFDataRef theData, void *a5)
{
  if (!a1)
  {
    uint64_t v14 = 4294895525;
LABEL_25:
    APSLogErrorAt();
    return v14;
  }
  if (!a2)
  {
    uint64_t v14 = 4294895525;
    goto LABEL_25;
  }
  if (!a3)
  {
    uint64_t v14 = 4294895525;
    goto LABEL_25;
  }
  if (!theData)
  {
    uint64_t v14 = 4294895525;
    goto LABEL_25;
  }
  if (!a5)
  {
    uint64_t v14 = 4294895525;
    goto LABEL_25;
  }
  if (!APPairingClientCoreUtilsIsValidPairingGroupInfo(a1, a3, theData))
  {
    uint64_t v14 = 4294895525;
    goto LABEL_25;
  }
  if (!APPairingClientCoreUtilsIsValidPairingGroupInfo(a2, a3, theData))
  {
    uint64_t v14 = 4294895525;
    goto LABEL_25;
  }
  int Value = CFDictionaryGetValue(a1, @"groupID");
  if (!Value)
  {
    uint64_t v14 = 4294895525;
    goto LABEL_25;
  }
  BOOL v11 = Value;
  BOOL v12 = CFDictionaryGetValue(a2, @"groupID");
  if (v12 && !CFEqual(v11, v12))
  {
    uint64_t v14 = 4294895525;
    goto LABEL_25;
  }
  CFMutableStringRef MutableCopy = (const void *)FigCFDictionaryCreateMutableCopy();
  CFDictionaryMergeDictionary();
  if (APPairingClientCoreUtilsIsValidPairingGroupInfo((const __CFDictionary *)MutableCopy, a3, theData))
  {
    uint64_t v14 = 0;
    *a5 = MutableCopy;
  }
  else
  {
    uint64_t v14 = 4294895525;
    APSLogErrorAt();
    if (MutableCopy) {
      CFRelease(MutableCopy);
    }
  }
  return v14;
}

uint64_t APPairingClientCoreUtilsCreateUnpairedPeersFromGroupInfo(uint64_t a1, const __CFArray *a2, uint64_t *a3)
{
  if (!a1)
  {
    uint64_t v6 = 4294895525;
LABEL_9:
    APSLogErrorAt();
    return v6;
  }
  if (!a3)
  {
    uint64_t v6 = 4294895525;
    goto LABEL_9;
  }
  [MEMORY[0x1E4F1CA80] set];
  if (a2)
  {
    CFArrayGetCount(a2);
    CFArrayApplyBlock();
  }
  uint64_t v5 = [objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:0];
  CFDictionaryApplyBlock();
  uint64_t v6 = 0;
  *a3 = v5;
  return v6;
}

uint64_t __APPairingClientCoreUtilsCreateUnpairedPeersFromGroupInfo_block_invoke(uint64_t a1, void *a2)
{
  CFDictionaryRef v2 = *(void **)(a1 + 32);
  uint64_t v3 = [a2 identifier];
  return [v2 addObject:v3];
}

void __APPairingClientCoreUtilsCreateUnpairedPeersFromGroupInfo_block_invoke_2(uint64_t a1, CFTypeRef cf1, const void *a3)
{
  if (CFEqual(cf1, @"groupID"))
  {
LABEL_25:
    id v13 = 0;
    CFDataRef v7 = 0;
    goto LABEL_18;
  }
  uint64_t v6 = [objc_alloc(MEMORY[0x1E4F29128]) initWithUUIDString:cf1];
  if (!v6)
  {
    if (gLogCategory_APPairingClientCoreUtils <= 90
      && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_25;
  }
  CFDataRef v7 = (void *)v6;
  if (([*(id *)(a1 + 32) containsObject:v6] & 1) == 0)
  {
    if (a3)
    {
      CFTypeID v8 = CFGetTypeID(a3);
      if (v8 == CFDataGetTypeID())
      {
        id v13 = objc_alloc_init(MEMORY[0x1E4F5E180]);
        [v13 setIdentifier:v7];
        [v13 setPublicKey:a3];
        if (gLogCategory_APPairingClientCoreUtils <= 50
          && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
          objc_msgSend(*(id *)(a1 + 40), "addObject:", v13, v13, cf1);
        }
        else
        {
          objc_msgSend(*(id *)(a1 + 40), "addObject:", v13, v11, v12);
        }
        goto LABEL_18;
      }
    }
    CFTypeID v9 = CFGetTypeID(a3);
    CFStringRef v10 = CFCopyTypeIDDescription(v9);
    if (gLogCategory_APPairingClientCoreUtils <= 90
      && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (v10) {
      CFRelease(v10);
    }
  }
  id v13 = 0;
LABEL_18:
}

void sub_1D09EC0B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __Block_byref_object_copy_(uint64_t a1, uint64_t a2)
{
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void sub_1D09EC3C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D09EC698(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void coreUtilsPairing_Finalize()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v1 = *(const void **)(DerivedStorage + 8);
  if (v1)
  {
    CFRelease(v1);
    *(void *)(DerivedStorage + 8) = 0;
  }
  CFDictionaryRef v2 = *(const void **)(DerivedStorage + 16);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(DerivedStorage + 16) = 0;
  }
  uint64_t v3 = *(const void **)(DerivedStorage + 24);
  if (v3)
  {
    CFRelease(v3);
    *(void *)(DerivedStorage + 24) = 0;
  }
  uint64_t v4 = *(const void **)(DerivedStorage + 32);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(DerivedStorage + 32) = 0;
  }
  uint64_t v5 = *(const void **)(DerivedStorage + 40);
  if (v5)
  {
    CFRelease(v5);
    *(void *)(DerivedStorage + 40) = 0;
  }
  uint64_t v6 = *(const void **)(DerivedStorage + 56);
  if (v6)
  {
    CFRelease(v6);
    *(void *)(DerivedStorage + 56) = 0;
  }
  CFDataRef v7 = *(const void **)(DerivedStorage + 48);
  if (v7)
  {
    CFRelease(v7);
    *(void *)(DerivedStorage + 48) = 0;
  }
  [*(id *)DerivedStorage invalidate];

  *(void *)uint64_t DerivedStorage = 0;
}

__CFString *coreUtilsPairing_CopyDebugDescription()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppendFormat(Mutable, 0, @"<APPairingClientCoreUtils for '%@'>", *(void *)(DerivedStorage + 16));
  return Mutable;
}

uint64_t coreUtilsPairing_CopyProperty(uint64_t a1, const void *a2, uint64_t a3, CFDataRef *a4)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
  {
    uint64_t v11 = 4294895525;
LABEL_16:
    APSLogErrorAt();
    return v11;
  }
  if (!a4)
  {
    uint64_t v11 = 4294895525;
    goto LABEL_16;
  }
  uint64_t v7 = DerivedStorage;
  if (!CFEqual(a2, @"PairingTranscriptData")) {
    return 4294954512;
  }
  memset(v13, 0, sizeof(v13));
  if (!*(void *)(v7 + 8))
  {
    APSLogErrorAt();
    return 4294895524;
  }
  uint64_t TranscriptResultMFi4 = PairingSessionGenerateTranscriptResultMFi4();
  if (TranscriptResultMFi4)
  {
    uint64_t v11 = TranscriptResultMFi4;
    goto LABEL_16;
  }
  CFDataRef v9 = CFDataCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], (const UInt8 *)v13, 64);
  if (v9)
  {
    for (uint64_t i = 0; i != 64; ++i)
      *((unsigned char *)v13 + i) = 0;
    uint64_t v11 = 0;
    *a4 = v9;
  }
  else
  {
    APSLogErrorAt();
    return 4294895526;
  }
  return v11;
}

uint64_t coreUtilsPairing_DeriveKey()
{
  if (*(void *)(CMBaseObjectGetDerivedStorage() + 8))
  {
    uint64_t v0 = PairingSessionDeriveKey();
    if (v0) {
      APSLogErrorAt();
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895524;
  }
  return v0;
}

BOOL coreUtilsPairing_IsPeerKnown(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  *(_OWORD *)buffer = 0u;
  long long v8 = 0u;
  CFTypeRef cf = 0;
  CFStringRef v2 = *(const __CFString **)(CMBaseObjectGetDerivedStorage() + 24);
  if (v2)
  {
    CFStringGetCString(v2, buffer, 128, 0x8000100u);
    if (coreUtilsPairing_createAirPlayPairingSession(a1, 0, 0, 0, &cf))
    {
      APSLogErrorAt();
      BOOL v4 = 0;
    }
    else
    {
      mach_absolute_time();
      int Peer = PairingSessionFindPeer();
      mach_absolute_time();
      BOOL v4 = Peer == 0;
    }
  }
  else
  {
    BOOL v4 = 0;
  }
  if (gLogCategory_APPairingClientCoreUtils <= 50
    && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
  {
    UpTicksToMilliseconds();
    LogPrintF();
  }
  if (!CFPrefs_GetInt64())
  {
    if (!CFPrefs_GetInt64()) {
      goto LABEL_23;
    }
    if (gLogCategory_APPairingClientCoreUtils > 60)
    {
      BOOL v4 = 0;
      goto LABEL_23;
    }
    if (gLogCategory_APPairingClientCoreUtils == -1)
    {
      BOOL v4 = 0;
      if (!_LogCategory_Initialize()) {
        goto LABEL_23;
      }
    }
    else
    {
      BOOL v4 = 0;
    }
LABEL_17:
    LogPrintF();
    goto LABEL_23;
  }
  if (gLogCategory_APPairingClientCoreUtils > 60)
  {
    BOOL v4 = 1;
  }
  else
  {
    if (gLogCategory_APPairingClientCoreUtils != -1)
    {
      BOOL v4 = 1;
      goto LABEL_17;
    }
    BOOL v4 = 1;
    if (_LogCategory_Initialize()) {
      goto LABEL_17;
    }
  }
LABEL_23:
  if (cf) {
    CFRelease(cf);
  }
  return v4;
}

uint64_t coreUtilsPairing_PerformSetup(uint64_t a1, const __CFString *a2, int a3, int a4, CFMutableDictionaryRef *a5, void *a6, uint64_t *a7, void *a8)
{
  uint64_t DerivedStorage = (unsigned char *)CMBaseObjectGetDerivedStorage();
  uint64_t v17 = DerivedStorage;
  DerivedStorage[66] = 0;
  if (a4)
  {
    int v18 = 4;
  }
  else if (DerivedStorage[65])
  {
    if (DerivedStorage[67]) {
      int v18 = 5;
    }
    else {
      int v18 = 3;
    }
  }
  else
  {
    int v18 = 2 * (a3 != 0);
  }
  if (a3)
  {
    if (a2
      && ((unsigned int v19 = coreUtilsPairing_performSetupInternal(a1, a2, v18, DerivedStorage[72], a5, a6, a7, a8),
           v19 != 200401)
       || v17[64]))
    {
      BOOL v20 = v19 == 200470;
    }
    else
    {
      unsigned int v19 = coreUtilsPairing_sendShowPairPINRequest(*((void *)v17 + 7), v18);
      BOOL v20 = v19 == 0;
    }
    if (v20) {
      return 200401;
    }
    else {
      return v19;
    }
  }
  else
  {
    unsigned int v21 = coreUtilsPairing_performSetupInternal(a1, @"3939", v18, DerivedStorage[72], a5, a6, a7, a8);
    if (v21 == 200401) {
      uint64_t v22 = 200403;
    }
    else {
      uint64_t v22 = v21;
    }
    if (v22) {
      APSLogErrorAt();
    }
  }
  return v22;
}

uint64_t coreUtilsPairing_PerformVerification(uint64_t a1, void *a2)
{
  v60[1] = *MEMORY[0x1E4F143B8];
  uint64_t DerivedStorage = (unsigned char *)CMBaseObjectGetDerivedStorage();
  if (DerivedStorage[72]) {
    BOOL v4 = DerivedStorage[75] == 0;
  }
  else {
    BOOL v4 = 0;
  }
  if (DerivedStorage[66]) {
    return 0;
  }
  if (DerivedStorage[68])
  {
    int v5 = 8;
  }
  else if (DerivedStorage[69])
  {
    if (DerivedStorage[70]) {
      int v5 = 7;
    }
    else {
      int v5 = 6;
    }
  }
  else if (DerivedStorage[65])
  {
    if (DerivedStorage[67]) {
      int v5 = 5;
    }
    else {
      int v5 = 3;
    }
  }
  else
  {
    int v5 = 2;
  }
  uint64_t v6 = CMBaseObjectGetDerivedStorage();
  uint64_t v44 = 0;
  dataPointerOut = 0;
  *(_OWORD *)buffer = 0u;
  long long v49 = 0u;
  size_t lengthAtOffsetOut = 0;
  char v42 = 0;
  *(void *)uint64_t v40 = 0;
  CFTypeRef cf = 0;
  long long v8 = (uint64_t *)(v6 + 8);
  uint64_t v7 = *(const void **)(v6 + 8);
  if (v7)
  {
    CFRelease(v7);
    uint64_t *v8 = 0;
  }
  if (gLogCategory_APPairingClientCoreUtils <= 50
    && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
  {
    uint64_t v9 = v5 - 6;
    if (v9 > 2) {
      long long v10 = "AP";
    }
    else {
      long long v10 = off_1E68930F0[v9];
    }
    uint64_t v35 = (uint64_t)v10;
    uint64_t Current = a1;
    LogPrintF();
  }
  if (v5 == 8)
  {
    v50[0] = 0;
    uint64_t v11 = PairingSessionCreate();
    if (!v11)
    {
      PairingSessionSetFlags();
      PairingSessionSetLogging();
      PairingSessionSetSignBytesHandler_b();
      PairingSessionSetVerifySignatureHandler_b();
LABEL_32:
      uint64_t *v8 = (uint64_t)v50[0];
      goto LABEL_36;
    }
LABEL_138:
    uint64_t v18 = v11;
    APSLogErrorAt();
LABEL_144:
    APSLogErrorAt();
    goto LABEL_119;
  }
  if ((v5 & 0xE) == 6)
  {
    v50[0] = 0;
    uint64_t v11 = PairingSessionCreate();
    if (!v11)
    {
      PairingSessionSetFlags();
      PairingSessionSetLogging();
      goto LABEL_32;
    }
    goto LABEL_138;
  }
  AirPlayPairingSessioCFIndex n = coreUtilsPairing_createAirPlayPairingSession(a1, 3, 0, v4, v8);
  if (AirPlayPairingSession)
  {
    uint64_t v18 = AirPlayPairingSession;
    goto LABEL_144;
  }
  CFStringGetCString(*(CFStringRef *)(v6 + 16), buffer, 32, 0x8000100u);
  uint64_t v13 = PairingSessionSetIdentifier();
  if (v13)
  {
    uint64_t v18 = v13;
    goto LABEL_144;
  }
  APPairingClientCoreUtilsCopyGroupInfo(a1, (id **)v40);
LABEL_36:
  if (gLogCategory_APPairingClientCoreUtils <= 50
    && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
  {
    uint64_t v14 = v5 - 6;
    if (v14 > 2) {
      long long v15 = "AP";
    }
    else {
      long long v15 = off_1E68930F0[v14];
    }
    uint64_t v35 = (uint64_t)v15;
    uint64_t v36 = *v8;
    uint64_t Current = a1;
    LogPrintF();
  }
  CFDictionaryRef v16 = *(const __CFDictionary **)v40;
  if (*(void *)v40)
  {
    if (APPairingClientCoreUtilsIsValidPairingGroupInfo(*(const __CFDictionary **)v40, *(const void **)(v6 + 24), *(CFDataRef *)(v6 + 40)))
    {
      if (gLogCategory_APPairingClientCoreUtils <= 30
        && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
      {
        uint64_t v35 = *v8;
        uint64_t v36 = (uint64_t)v16;
        uint64_t Current = a1;
        LogPrintF();
      }
      uint64_t v17 = PairingSessionSetProperty();
      if (v17)
      {
        uint64_t v18 = v17;
        if (gLogCategory_APPairingClientCoreUtils <= 90
          && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        goto LABEL_118;
      }
    }
    else
    {
      if (gLogCategory_APPairingClientCoreUtils <= 60
        && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
      {
        uint64_t Current = a1;
        uint64_t v35 = *v8;
        LogPrintF();
      }
      CFRelease(v16);
      CFDictionaryRef v16 = 0;
      *(void *)uint64_t v40 = 0;
    }
  }
  CFDictionaryRef v38 = v16;
  dataPointerOut = 0;
  size_t lengthAtOffsetOut = 0;
  char v42 = 0;
  uint64_t v19 = PairingSessionExchange();
  if (v19)
  {
LABEL_132:
    uint64_t v18 = v19;
    goto LABEL_117;
  }
  CMTimeValue v37 = a2;
  CFAllocatorRef v20 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  while (!v42)
  {
    unsigned int v21 = v8;
    if (cf)
    {
      CFRelease(cf);
      CFTypeRef cf = 0;
    }
    CMBaseObjectGetDerivedStorage();
    int v46 = 0;
    long long v56 = 0u;
    long long v57 = 0u;
    long long v54 = 0u;
    long long v55 = 0u;
    long long v52 = 0u;
    long long v53 = 0u;
    *(_OWORD *)uint64_t v50 = 0u;
    long long v51 = 0u;
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v20, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (!Mutable)
    {
      uint64_t v18 = 4294895526;
      APSLogErrorAt();
      goto LABEL_117;
    }
    uint64_t v23 = Mutable;
    APSGetDeviceNameCString();
    CFDictionarySetCString();
    snprintf(__str, 0x20uLL, "%d", v5);
    CFDictionarySetCString();
    CFDictionarySetValue(v23, @"X-Apple-PD", @"1");
    if (TMIsAutomaticTimeEnabled())
    {
      uint64_t Current = (uint64_t)CFAbsoluteTimeGetCurrent();
      ASPrintF();
      if (!v46)
      {
        uint64_t v18 = 4294895526;
        APSLogErrorAt();
        goto LABEL_73;
      }
      CFDictionarySetCString();
    }
    CFDictionarySetData();
    if (gLogCategory_APPairingClientCoreUtils <= 10
      && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
    {
      uint64_t Current = a1;
      uint64_t v35 = (uint64_t)v23;
      LogPrintF();
    }
    uint64_t v18 = APTransportStreamSendPlistMessageCreatingReply();
LABEL_73:
    CFRelease(v23);
    if (v46) {
      free(v46);
    }
    long long v8 = v21;
    if (v18) {
      goto LABEL_117;
    }
    if (v44)
    {
      free(v44);
      uint64_t v44 = 0;
    }
    size_t lengthAtOffsetOut = 0;
    dataPointerOut = 0;
    if (cf)
    {
      uint64_t DataPointer = CMBlockBufferGetDataPointer((CMBlockBufferRef)cf, 0, &lengthAtOffsetOut, 0, &dataPointerOut);
      if (DataPointer)
      {
        uint64_t v18 = DataPointer;
        APSLogErrorAt();
        goto LABEL_117;
      }
    }
    uint64_t v19 = PairingSessionExchange();
    if (v19) {
      goto LABEL_132;
    }
  }
  if (gLogCategory_APPairingClientCoreUtils <= 50
    && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
  {
    uint64_t v25 = v5 - 6;
    if (v25 > 2) {
      CFTypeRef v26 = "AP";
    }
    else {
      CFTypeRef v26 = off_1E68930F0[v25];
    }
    uint64_t v35 = (uint64_t)v26;
    uint64_t Current = a1;
    LogPrintF();
  }
  CFTypeRef v27 = v8;
  *(unsigned char *)(v6 + 75) = v4;
  CombinedPairingGroupuint64_t Info = 0;
  uint64_t v28 = CMBaseObjectGetDerivedStorage();
  *(void *)__str = 0;
  int v46 = 0;
  if (*(void *)(v28 + 8))
  {
    Pairedint Peer = (void *)PairingSessionGetPairedPeer();
    if (CombinedPairingGroupInfo) {
      goto LABEL_139;
    }
    if (!v16) {
      goto LABEL_94;
    }
    uint64_t v59 = @"groupInfo";
    v60[0] = v16;
    Pairedint Peer = objc_msgSend(PairedPeer, "patchedPairedPeerWithPeerInfo:", objc_msgSend(MEMORY[0x1E4F1C9E8], "dictionaryWithObjects:forKeys:count:", v60, &v59, 1));
    CombinedPairingGroupuint64_t Info = [*(id *)v28 savePairedPeer:PairedPeer];
    if (CombinedPairingGroupInfo)
    {
LABEL_139:
      APSLogErrorAt();
LABEL_94:
      CFDictionaryRef v30 = 0;
    }
    else
    {
      CFDictionaryRef v30 = (const __CFDictionary *)PairingSessionCopyProperty();
      if (v30)
      {
        if (gLogCategory_APPairingClientCoreUtils <= 30
          && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
        {
          uint64_t v35 = *(void *)(v28 + 8);
          uint64_t v36 = (uint64_t)v30;
          uint64_t Current = a1;
          LogPrintF();
        }
        CombinedPairingGroupuint64_t Info = APPairingClientCoreUtilsCreateCombinedPairingGroupInfo(v38, v30, *(const void **)(v28 + 24), *(CFDataRef *)(v28 + 40), __str);
        if (CombinedPairingGroupInfo) {
          goto LABEL_140;
        }
        if (gLogCategory_APPairingClientCoreUtils <= 30
          && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
        {
          uint64_t Current = a1;
          uint64_t v35 = *(void *)__str;
          LogPrintF();
        }
        CFArrayRef v31 = (const __CFArray *)objc_msgSend(*(id *)v28, "peersMatchingPairingGroupID:", *(void *)(v28 + 32), Current, v35, v36);
        APPairingClientCoreUtilsCreateUnpairedPeersFromGroupInfo(*(uint64_t *)__str, v31, (uint64_t *)&v46);
        v50[0] = (CFTypeRef)MEMORY[0x1E4F143A8];
        v50[1] = (CFTypeRef)3221225472;
        *(void *)&long long v51 = __coreUtilsPairing_getPairedPeerFromVerificationPairingSession_block_invoke;
        *((void *)&v51 + 1) = &__block_descriptor_48_e29_v32__0__CUPairedPeer_8Q16_B24l;
        *(void *)&long long v52 = a1;
        *((void *)&v52 + 1) = v28;
        [v46 enumerateObjectsUsingBlock:v50];
        CombinedPairingGroupuint64_t Info = APPairingClientCoreUtilsUpdateGroupInfo(a1, *(uint64_t *)__str);
        if (CombinedPairingGroupInfo) {
LABEL_140:
        }
          APSLogErrorAt();
      }
    }
  }
  else
  {
    APSLogErrorAt();
    CFDictionaryRef v30 = 0;
    Pairedint Peer = 0;
  }
  long long v8 = v27;
  if (*(void *)__str) {
    CFRelease(*(CFTypeRef *)__str);
  }
  if (v30) {
    CFRelease(v30);
  }
  if (v37)
  {
    if (PairedPeer) {
      CFTypeRef v32 = CFRetain(PairedPeer);
    }
    else {
      CFTypeRef v32 = 0;
    }
    uint64_t v18 = 0;
    *CMTimeValue v37 = v32;
  }
  else
  {
    uint64_t v18 = 0;
  }
LABEL_117:
  CFDictionaryRef v16 = v38;
  if (v38) {
LABEL_118:
  }
    CFRelease(v16);
LABEL_119:
  if (cf) {
    CFRelease(cf);
  }
  if (v44)
  {
    free(v44);
    uint64_t v44 = 0;
  }
  if (v18)
  {
    if (gLogCategory_APPairingClientCoreUtils <= 90
      && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (*v8)
    {
      CFRelease((CFTypeRef)*v8);
      uint64_t *v8 = 0;
    }
    APSLogErrorAt();
  }
  return v18;
}

uint64_t coreUtilsPairing_createAirPlayPairingSession(uint64_t a1, uint64_t a2, int a3, int a4, void *a5)
{
  keys[1] = *(void **)MEMORY[0x1E4F143B8];
  uint64_t DerivedStorage = (unsigned char *)CMBaseObjectGetDerivedStorage();
  if (!DerivedStorage[74]
    && gLogCategory_APPairingClientCoreUtils <= 50
    && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v9 = PairingSessionCreate();
  if (v9)
  {
    uint64_t v12 = v9;
LABEL_27:
    APSLogErrorAt();
    return v12;
  }
  if (a3)
  {
    int v10 = 16;
  }
  else if (DerivedStorage[65])
  {
    int v10 = 12;
  }
  else
  {
    int v10 = 0;
  }
  if (v10 | (a4 != 0))
  {
    PairingSessionSetFlags();
    if (gLogCategory_APPairingClientCoreUtils <= 50
      && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  if (DerivedStorage[67])
  {
    keys[0] = @"com.apple.ScreenCapture";
    values = (void *)*MEMORY[0x1E4F1CFD0];
    CFDictionaryRef v11 = CFDictionaryCreate(0, (const void **)keys, (const void **)&values, 1, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    PairingSessionSetACL();
    if (gLogCategory_APPairingClientCoreUtils <= 50
      && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFRelease(v11);
  }
  PairingSessionSetKeychainInfo();
  PairingSessionSetLogging();
  uint64_t v12 = PairingSessionSetTranscriptType();
  if (v12) {
    goto LABEL_27;
  }
  *a5 = 0;
  return v12;
}

uint64_t coreUtilsPairingPeerCache_FindPeer(const char *a1, CFIndex a2, _OWORD *a3)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  CMBaseObjectGetDerivedStorage();
  CFAllocatorRef v6 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  if (a2 == -1) {
    CFStringRef v7 = CFStringCreateWithCString(v6, a1, 0x8000100u);
  }
  else {
    CFStringRef v7 = CFStringCreateWithBytes(v6, (const UInt8 *)a1, a2, 0x8000100u, 0);
  }
  CFStringRef v8 = v7;
  uint64_t v9 = coreUtilsPairing_lockSharedPeerCache();
  if (!FigCFDictionaryGetValue()
    || (CFStringRef Value = (const __CFString *)FigCFDictionaryGetValue(), CFStringCompare(v8, Value, 0)))
  {
    uint64_t v11 = 4294960569;
    if (!v9) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  CFDataRef v13 = (const __CFData *)FigCFDictionaryGetValue();
  v18.locatioCFIndex n = 0;
  v18.length = 32;
  CFDataGetBytes(v13, v18, buffer);
  uint64_t v11 = 0;
  long long v14 = v16;
  *a3 = *(_OWORD *)buffer;
  a3[1] = v14;
  if (v9) {
LABEL_7:
  }
    coreUtilsPairing_unlockSharedPeerCache();
LABEL_8:
  if (v8) {
    CFRelease(v8);
  }
  return v11;
}

uint64_t coreUtilsPairingPeerCache_SavePeer(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  uint64_t v16 = 0;
  uint64_t v17 = &v16;
  uint64_t v18 = 0x2020000000;
  uint64_t v19 = 0;
  v14[0] = 0;
  v14[1] = v14;
  _OWORD v14[2] = 0x2020000000;
  int v15 = 0;
  if (!a1 || !a2)
  {
    APSLogErrorAt();
    uint64_t v12 = 4294960591;
    if (!Mutable) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  CFDictionarySetCString();
  CFDictionarySetData();
  CFDictionaryRef v6 = (const __CFDictionary *)coreUtilsPairing_lockSharedPeerCache();
  if (!CFDictionaryContainsKey(v6, *(const void **)(DerivedStorage + 48)) && FigCFDictionaryGetCount() >= 50)
  {
    FigCFDictionaryApplyBlock();
    CFStringRef v8 = v17;
    uint64_t v9 = (const void *)v17[3];
    if (v9)
    {
      if (gLogCategory_APPairingClientCoreUtils <= 40)
      {
        if (gLogCategory_APPairingClientCoreUtils == -1)
        {
          int v10 = _LogCategory_Initialize();
          CFStringRef v8 = v17;
          if (!v10) {
            goto LABEL_10;
          }
          uint64_t v9 = (const void *)v17[3];
        }
        CFDictionaryGetValue(v6, v9);
        LogPrintF();
        CFStringRef v8 = v17;
      }
LABEL_10:
      CFDictionaryRemoveValue(v6, (const void *)v8[3]);
      v17[3] = 0;
    }
  }
  FigCFDictionarySetValue();
  if (gLogCategory_APPairingClientCoreUtils <= 40)
  {
    if (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
    if (gLogCategory_APPairingClientCoreUtils <= 40)
    {
      if (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize())
      {
        FigCFDictionaryGetCount();
        LogPrintF();
      }
      int v11 = gLogCategory_APPairingClientCoreUtils;
      if (gLogCategory_APPairingClientCoreUtils <= 30)
      {
        if (gLogCategory_APPairingClientCoreUtils != -1) {
          goto LABEL_38;
        }
        if (!_LogCategory_Initialize()) {
          goto LABEL_28;
        }
        int v11 = gLogCategory_APPairingClientCoreUtils;
        if (gLogCategory_APPairingClientCoreUtils <= 30)
        {
LABEL_38:
          if (v11 != -1 || _LogCategory_Initialize()) {
            LogPrintF();
          }
        }
        FigCFDictionaryApplyBlock();
      }
    }
  }
LABEL_28:
  if (v6) {
    coreUtilsPairing_unlockSharedPeerCache();
  }
  uint64_t v12 = 0;
  if (Mutable) {
LABEL_31:
  }
    CFRelease(Mutable);
LABEL_32:
  _Block_object_dispose(v14, 8);
  _Block_object_dispose(&v16, 8);
  return v12;
}

void sub_1D09EE6B0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t coreUtilsPairing_lockSharedPeerCache()
{
  if (coreUtilsPairing_lockSharedPeerCache_sCreatePeerCacheOnce != -1) {
    dispatch_once(&coreUtilsPairing_lockSharedPeerCache_sCreatePeerCacheOnce, &__block_literal_global_15);
  }
  if (coreUtilsPairing_getSharedPeerCacheMutex_sCreatePeerCacheMutexOnce != -1) {
    dispatch_once(&coreUtilsPairing_getSharedPeerCacheMutex_sCreatePeerCacheMutexOnce, &__block_literal_global_96);
  }
  MEMORY[0x1D25EB370](coreUtilsPairing_getSharedPeerCacheMutex_sPeerCacheMutex);
  return coreUtilsPairing_lockSharedPeerCache_sPeersCache;
}

void coreUtilsPairing_unlockSharedPeerCache()
{
  if (coreUtilsPairing_getSharedPeerCacheMutex_sCreatePeerCacheMutexOnce != -1) {
    dispatch_once(&coreUtilsPairing_getSharedPeerCacheMutex_sCreatePeerCacheMutexOnce, &__block_literal_global_96);
  }
  JUMPOUT(0x1D25EB390);
}

CFMutableDictionaryRef __coreUtilsPairing_lockSharedPeerCache_block_invoke()
{
  CFMutableDictionaryRef result = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  coreUtilsPairing_lockSharedPeerCache_sPeersCache = (uint64_t)result;
  return result;
}

uint64_t __coreUtilsPairing_getSharedPeerCacheMutex_block_invoke()
{
  uint64_t result = FigSimpleMutexCreate();
  coreUtilsPairing_getSharedPeerCacheMutex_sPeerCacheMutex = result;
  return result;
}

uint64_t coreUtilsPairing_sendShowPairPINRequest(uint64_t a1, int a2)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (Mutable)
  {
    CFMutableDictionaryRef v4 = Mutable;
    APSGetDeviceNameCString();
    CFDictionarySetCString();
    snprintf(__str, 0x20uLL, "%d", a2);
    CFDictionarySetCString();
    uint64_t v5 = APTransportStreamSendPlistMessageCreatingReply();
    CFRelease(v4);
  }
  else
  {
    APSLogErrorAt();
    return 4294895526;
  }
  return v5;
}

uint64_t coreUtilsPairing_performSetupInternal(uint64_t a1, const __CFString *a2, int a3, int a4, CFMutableDictionaryRef *a5, void *a6, uint64_t *a7, void *a8)
{
  uint64_t v65 = *MEMORY[0x1E4F143B8];
  unsigned int DataPointer = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v44 = 0;
  dataPointerOut = 0;
  size_t lengthAtOffsetOut = 0;
  char v42 = 0;
  long long v54 = 0u;
  long long v55 = 0u;
  long long v52 = 0u;
  long long v53 = 0u;
  long long v50 = 0u;
  long long v51 = 0u;
  *(_OWORD *)buffer = 0u;
  long long v49 = 0u;
  CFTypeRef v40 = 0;
  CFTypeRef cf = 0;
  if (gLogCategory_APPairingClientCoreUtils <= 50
    && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  unsigned int DataPointer = coreUtilsPairing_createAirPlayPairingSession(a1, 1, a3 == 4, a4, &v40);
  if (DataPointer)
  {
LABEL_53:
    APSLogErrorAt();
LABEL_54:
    uint64_t v22 = 0;
    goto LABEL_55;
  }
  if (gLogCategory_APPairingClientCoreUtils <= 50
    && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a2)
  {
    CFStringGetCString(a2, buffer, 128, 0x8000100u);
    CFTypeRef v15 = v40;
    if (buffer[0])
    {
      unsigned int DataPointer = PairingSessionSetSetupCode();
      if (DataPointer) {
        goto LABEL_53;
      }
    }
  }
  else
  {
    CFTypeRef v15 = v40;
  }
  CFStringGetCString(*(CFStringRef *)(DerivedStorage + 16), buffer, 128, 0x8000100u);
  unsigned int DataPointer = PairingSessionSetIdentifier();
  if (DataPointer) {
    goto LABEL_53;
  }
  uint64_t v34 = a5;
  uint64_t v35 = a7;
  uint64_t v36 = DerivedStorage;
  int v37 = a4;
  dataPointerOut = 0;
  size_t lengthAtOffsetOut = 0;
  char v42 = 0;
  CFAllocatorRef v16 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  while (1)
  {
    int v17 = PairingSessionExchange();
    unsigned int DataPointer = v17;
    if (v17 <= -71165)
    {
      if ((v17 + 71775) >= 3) {
        goto LABEL_99;
      }
LABEL_22:
      if (gLogCategory_APPairingClientCoreUtils > 90) {
        goto LABEL_53;
      }
      if (gLogCategory_APPairingClientCoreUtils != -1 || (v19 = _LogCategory_Initialize(), unsigned int v18 = DataPointer, v19))
      {
        LogPrintF();
        unsigned int v18 = DataPointer;
      }
      if (v18) {
        goto LABEL_53;
      }
      goto LABEL_27;
    }
    if (v17 == -71164 || v17 == -71145) {
      goto LABEL_22;
    }
    if (v17)
    {
LABEL_99:
      uint64_t v22 = 0;
      CFMutableDictionaryRef Mutable = 0;
      int v33 = 200401;
LABEL_100:
      unsigned int DataPointer = v33;
      goto LABEL_83;
    }
LABEL_27:
    if (v42) {
      break;
    }
    if (cf)
    {
      CFRelease(cf);
      CFTypeRef cf = 0;
    }
    CMBaseObjectGetDerivedStorage();
    long long v62 = 0u;
    long long v63 = 0u;
    long long v60 = 0u;
    long long v61 = 0u;
    long long v58 = 0u;
    long long v59 = 0u;
    long long v56 = 0u;
    long long v57 = 0u;
    int v47 = 0;
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v16, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (!Mutable)
    {
      APSLogErrorAt();
      uint64_t v22 = 0;
      unsigned int DataPointer = -71770;
      goto LABEL_83;
    }
    APSGetDeviceNameCString();
    CFDictionarySetCString();
    if (TMIsAutomaticTimeEnabled())
    {
      CFAbsoluteTimeGetCurrent();
      ASPrintF();
      if (!v47)
      {
        int v21 = -71770;
        APSLogErrorAt();
        goto LABEL_39;
      }
      CFDictionarySetCString();
    }
    snprintf(__str, 0x20uLL, "%d", a3);
    CFDictionarySetCString();
    CFDictionarySetData();
    if (gLogCategory_APPairingClientCoreUtils <= 10
      && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    int v21 = APTransportStreamSendPlistMessageCreatingReply();
LABEL_39:
    CFRelease(Mutable);
    if (v47) {
      free(v47);
    }
    unsigned int DataPointer = v21;
    if (v21) {
      goto LABEL_54;
    }
    if (v44)
    {
      free(v44);
      uint64_t v44 = 0;
    }
    size_t lengthAtOffsetOut = 0;
    dataPointerOut = 0;
    if (cf)
    {
      unsigned int DataPointer = CMBlockBufferGetDataPointer((CMBlockBufferRef)cf, 0, &lengthAtOffsetOut, 0, &dataPointerOut);
      if (DataPointer) {
        goto LABEL_53;
      }
    }
  }
  if (gLogCategory_APPairingClientCoreUtils <= 50
    && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a3 == 4)
  {
    uint64_t v23 = DerivedStorage;
    CFTypeRef v24 = *(const void **)(DerivedStorage + 8);
    *(void *)(DerivedStorage + 8) = v15;
    if (v15) {
      CFRetain(v15);
    }
    int v25 = v37;
    CFTypeRef v27 = a6;
    CFTypeRef v26 = v35;
    if (v24) {
      CFRelease(v24);
    }
    uint64_t v22 = 0;
    CFMutableDictionaryRef Mutable = 0;
    *(unsigned char *)(v36 + 66) = 1;
    goto LABEL_73;
  }
  uint64_t v22 = (char *)PairingSessionCopyPeerIdentifier();
  if (gLogCategory_APPairingClientCoreUtils <= 50
    && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (DataPointer)
  {
    APSLogErrorAt();
LABEL_55:
    CFMutableDictionaryRef Mutable = 0;
    goto LABEL_83;
  }
  CFStringRef v28 = CFStringCreateWithCString(v16, v22, 0x8000100u);
  CFMutableDictionaryRef Mutable = (CFMutableDictionaryRef)v28;
  if (!v28)
  {
    APSLogErrorAt();
    int v33 = -71770;
    goto LABEL_100;
  }
  uint64_t v23 = DerivedStorage;
  CFStringRef v29 = *(const void **)(DerivedStorage + 24);
  *(void *)(v36 + 24) = v28;
  CFRetain(v28);
  if (v29) {
    CFRelease(v29);
  }
  int v25 = v37;
  CFTypeRef v27 = a6;
  CFTypeRef v26 = v35;
  if (v34)
  {
    *uint64_t v34 = Mutable;
    CFMutableDictionaryRef Mutable = 0;
  }
LABEL_73:
  if (v27) {
    *CFTypeRef v27 = 0;
  }
  if (v25 && v26 && (uint64_t *v26 = PairingSessionCopyProperty(), DataPointer))
  {
    APSLogErrorAt();
  }
  else
  {
    if (a8)
    {
      Pairedint Peer = (const void *)PairingSessionGetPairedPeer();
      if (PairedPeer) {
        Pairedint Peer = CFRetain(PairedPeer);
      }
      *a8 = PairedPeer;
    }
    *(unsigned char *)(v23 + 75) = v25;
  }
LABEL_83:
  if (v40) {
    CFRelease(v40);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  if (v44)
  {
    free(v44);
    uint64_t v44 = 0;
  }
  if (v22) {
    free(v22);
  }
  uint64_t result = DataPointer;
  if (DataPointer)
  {
    if (gLogCategory_APPairingClientCoreUtils <= 90)
    {
      if (gLogCategory_APPairingClientCoreUtils != -1 || (v32 = _LogCategory_Initialize(), uint64_t result = DataPointer, v32))
      {
        LogPrintF();
        return DataPointer;
      }
    }
  }
  return result;
}

uint64_t __coreUtilsPairing_createAccountOwnerPairVerifySession_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4107B58](a3, a4, a5);
}

uint64_t __coreUtilsPairing_createAccountOwnerPairVerifySession_block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4107B60](a3, a4, a5);
}

uint64_t __coreUtilsPairing_getPairedPeerFromVerificationPairingSession_block_invoke(uint64_t a1, void *a2)
{
  if (gLogCategory_APPairingClientCoreUtils <= 50
    && (gLogCategory_APPairingClientCoreUtils != -1 || _LogCategory_Initialize()))
  {
    [a2 identifier];
    LogPrintF();
  }
  CFMutableDictionaryRef v4 = **(void ***)(a1 + 40);
  return [v4 savePairedPeer:a2];
}

uint64_t APKeyHolderSharedKeyCreate(uint64_t a1, const void *a2, const __CFData *a3, const __CFData *a4, void *a5)
{
  APSKeyHolderGetClassID();
  uint64_t v9 = CMDerivedObjectCreate();
  if (v9)
  {
    uint64_t v14 = v9;
LABEL_21:
    APSLogErrorAt();
    return v14;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(void *)uint64_t DerivedStorage = a2;
  if (a2) {
    CFRetain(a2);
  }
  if (a3)
  {
    v16.length = CFDataGetLength(a3);
    v16.locatioCFIndex n = 0;
    CFDataGetBytes(a3, v16, (UInt8 *)(DerivedStorage + 8));
    goto LABEL_7;
  }
  uint64_t v11 = RandomBytes();
  if (v11)
  {
    uint64_t v14 = v11;
    goto LABEL_21;
  }
LABEL_7:
  if (a4)
  {
    v17.length = CFDataGetLength(a4);
    v17.locatioCFIndex n = 0;
    CFDataGetBytes(a4, v17, (UInt8 *)(DerivedStorage + 24));
    goto LABEL_10;
  }
  uint64_t v12 = RandomBytes();
  if (v12)
  {
    uint64_t v14 = v12;
    goto LABEL_21;
  }
LABEL_10:
  uint64_t v13 = APSCreateSecureMemAllocator();
  *(void *)(DerivedStorage + 40) = v13;
  if (v13)
  {
    if (gLogCategory_APKeyHolderSharedKey <= 30
      && (gLogCategory_APKeyHolderSharedKey != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v14 = 0;
    *a5 = 0;
  }
  else
  {
    APSLogErrorAt();
    return 4294895576;
  }
  return v14;
}

void sharedKeyHolder_Finalize()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APKeyHolderSharedKey <= 30
    && (gLogCategory_APKeyHolderSharedKey != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  for (uint64_t i = 8; i != 24; ++i)
    *(unsigned char *)(DerivedStorage + i) = 0;
  do
    *(unsigned char *)(DerivedStorage + i++) = 0;
  while (i != 40);
  if (*(void *)DerivedStorage)
  {
    CFRelease(*(CFTypeRef *)DerivedStorage);
    *(void *)uint64_t DerivedStorage = 0;
  }
  CFStringRef v2 = *(const void **)(DerivedStorage + 40);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(DerivedStorage + 40) = 0;
  }
}

__CFString *sharedKeyHolder_CopyDebugDescription(uint64_t a1)
{
  CFMutableDictionaryRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppendFormat(Mutable, 0, @"<APKeyHolderSharedKey %p>", a1);
  return Mutable;
}

uint64_t sharedKeyHolder_GetAuthenticationType()
{
  uint64_t v0 = *(void *)CMBaseObjectGetDerivedStorage();
  if (!v0) {
    return 0;
  }
  uint64_t v1 = *(void *)(CMBaseObjectGetVTable() + 16);
  uint64_t v2 = v1 ? v1 : 0;
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8);
  if (!v3) {
    return 0;
  }
  return v3(v0);
}

uint64_t sharedKeyHolder_CopyMasterAESKeyAndIV(uint64_t a1, CFDataRef *a2, CFDataRef *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFDataRef v6 = CFDataCreate(*(CFAllocatorRef *)(DerivedStorage + 40), (const UInt8 *)(DerivedStorage + 8), 16);
  if (v6)
  {
    CFDataRef v7 = v6;
    CFDataRef v8 = CFDataCreate(*(CFAllocatorRef *)(DerivedStorage + 40), (const UInt8 *)(DerivedStorage + 24), 16);
    if (v8)
    {
      uint64_t v9 = 0;
      *a2 = v7;
      *a3 = v8;
    }
    else
    {
      uint64_t v9 = 4294895576;
      APSLogErrorAt();
      CFRelease(v7);
    }
  }
  else
  {
    uint64_t v9 = 4294895576;
    APSLogErrorAt();
  }
  return v9;
}

uint64_t sharedKeyHolder_CreateEncryptedMasterAESKeyAndIV(uint64_t a1, CFTypeRef *a2, CFDataRef *a3)
{
  CFTypeRef cf = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFDataRef v6 = CFDataCreate(*(CFAllocatorRef *)(DerivedStorage + 40), (const UInt8 *)(DerivedStorage + 8), 16);
  if (v6)
  {
    CFDataRef v7 = v6;
    uint64_t v8 = *(void *)DerivedStorage;
    if (*(void *)DerivedStorage)
    {
      uint64_t v9 = *(void *)(DerivedStorage + 40);
      uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 16);
      if (v10) {
        uint64_t v11 = v10;
      }
      else {
        uint64_t v11 = 0;
      }
      uint64_t v12 = *(void (**)(uint64_t, CFDataRef, uint64_t, CFTypeRef *))(v11 + 24);
      if (v12) {
        v12(v8, v7, v9, &cf);
      }
    }
    else
    {
      CFTypeRef cf = v6;
      CFDataRef v7 = 0;
    }
    CFDataRef v13 = CFDataCreate(*(CFAllocatorRef *)(DerivedStorage + 40), (const UInt8 *)(DerivedStorage + 24), 16);
    if (v13)
    {
      uint64_t v14 = 0;
      *a2 = cf;
      CFTypeRef cf = 0;
      *a3 = v13;
      if (!v7) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
    uint64_t v14 = 4294895576;
    APSLogErrorAt();
    if (v7) {
LABEL_11:
    }
      CFRelease(v7);
  }
  else
  {
    uint64_t v14 = 4294895576;
    APSLogErrorAt();
  }
LABEL_12:
  if (cf) {
    CFRelease(cf);
  }
  return v14;
}

uint64_t APVirtualDisplaySinkCreate(const void *a1, const void *a2, void *a3)
{
  if (a1 && a2 && a3)
  {
    FigVirtualDisplaySinkGetClassID();
    uint64_t v6 = CMDerivedObjectCreate();
    if (v6)
    {
      APSLogErrorAt();
    }
    else
    {
      uint64_t DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
      *uint64_t DerivedStorage = CFRetain(a1);
      DerivedStorage[2] = CFRetain(a2);
      DerivedStorage[15] = SecondsToUpTicks();
      *a3 = 0;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294954516;
  }
  return v6;
}

void vdsink_Finalize_0()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APVirtualDisplaySink <= 30
    && (gLogCategory_APVirtualDisplaySink != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(void *)DerivedStorage)
  {
    CFRelease(*(CFTypeRef *)DerivedStorage);
    *(void *)uint64_t DerivedStorage = 0;
  }
  uint64_t v1 = *(const void **)(DerivedStorage + 16);
  if (v1)
  {
    CFRelease(v1);
    *(void *)(DerivedStorage + 16) = 0;
  }
  uint64_t v2 = *(const void **)(DerivedStorage + 96);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(DerivedStorage + 96) = 0;
  }
  uint64_t v3 = *(const void **)(DerivedStorage + 104);
  if (v3)
  {
    CFRelease(v3);
    *(void *)(DerivedStorage + 104) = 0;
  }
  CFMutableDictionaryRef v4 = *(const void **)(DerivedStorage + 112);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(DerivedStorage + 112) = 0;
  }
  uint64_t v5 = *(const void **)(DerivedStorage + 8);
  if (v5)
  {
    CFRelease(v5);
    *(void *)(DerivedStorage + 8) = 0;
  }
  uint64_t v6 = *(const void **)(DerivedStorage + 88);
  if (v6)
  {
    _Block_release(v6);
    *(void *)(DerivedStorage + 88) = 0;
  }
  CFDataRef v7 = *(NSObject **)(DerivedStorage + 24);
  if (v7)
  {
    dispatch_release(v7);
    *(void *)(DerivedStorage + 24) = 0;
  }
}

CFStringRef vdsink_CopyDebugDesc_0(uint64_t a1)
{
  return CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, @"[APVirtualDisplaySink %p]", a1);
}

uint64_t vdsink_CopyProperty_0(uint64_t a1, const void *a2, uint64_t a3, void *a4)
{
  CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APVirtualDisplaySink <= 30
    && (gLogCategory_APVirtualDisplaySink != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34FB8])) {
    return 4294954512;
  }
  CFTypeRef v6 = CFRetain(@"AirPlay");
  uint64_t result = 0;
  *a4 = v6;
  return result;
}

uint64_t vdsink_SetProperty_0(uint64_t a1, const void *a2, const void *a3)
{
  uint64_t DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  int v6 = gLogCategory_APVirtualDisplaySink;
  if (gLogCategory_APVirtualDisplaySink <= 30)
  {
    if (gLogCategory_APVirtualDisplaySink == -1)
    {
      if (!_LogCategory_Initialize()) {
        goto LABEL_13;
      }
      int v6 = gLogCategory_APVirtualDisplaySink;
    }
    if (v6 <= 20)
    {
      if (v6 != -1
        || (_LogCategory_Initialize(), int v6 = gLogCategory_APVirtualDisplaySink, gLogCategory_APVirtualDisplaySink <= 20))
      {
        if (v6 == -1) {
          _LogCategory_Initialize();
        }
      }
    }
    LogPrintF();
  }
LABEL_13:
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34F88]))
  {
    CFDataRef v7 = (const void *)DerivedStorage[14];
    DerivedStorage[14] = (uint64_t)a3;
    if (!a3) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34FB0]))
  {
    CFDataRef v7 = (const void *)DerivedStorage[12];
    DerivedStorage[12] = (uint64_t)a3;
    if (!a3) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34FA0]))
  {
    CFDataRef v7 = (const void *)DerivedStorage[13];
    DerivedStorage[13] = (uint64_t)a3;
    if (!a3)
    {
LABEL_16:
      if (v7) {
        CFRelease(v7);
      }
      return 0;
    }
LABEL_15:
    CFRetain(a3);
    goto LABEL_16;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34F90]))
  {
    if (a3)
    {
      CFTypeID v9 = CFGetTypeID(a3);
      if (v9 == CFStringGetTypeID() && !DerivedStorage[1]) {
        DerivedStorage[1] = CFStringCreateF();
      }
    }
    return 0;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34F60]) || CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34FA8])) {
    return 0;
  }
  uint64_t v10 = *DerivedStorage;
  return FigEndpointStreamSetProperty(v10, (uint64_t)a2, (uint64_t)a3);
}

uint64_t vdsink_Start_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int v12 = 0;
  if (gLogCategory_APVirtualDisplaySink <= 50
    && (gLogCategory_APVirtualDisplaySink != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CMTimeMake(&v11, 67, 1000);
  *(CMTime *)(DerivedStorage + 32) = v11;
  FigCFDictionaryGetInt32IfPresent();
  int IntWithDefault = APSSettingsGetIntWithDefault();
  int v12 = IntWithDefault;
  if (IntWithDefault >= 1)
  {
    if (gLogCategory_APVirtualDisplaySink <= 50)
    {
      if (gLogCategory_APVirtualDisplaySink != -1 || (int v6 = _LogCategory_Initialize(), IntWithDefault = v12, v6))
      {
        LogPrintF();
        int IntWithDefault = v12;
      }
    }
    CMTimeMake(&v11, IntWithDefault, 1000);
    *(CMTime *)(DerivedStorage + 32) = v11;
  }
  if (a3)
  {
    CFDataRef v7 = *(NSObject **)(DerivedStorage + 24);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 0x40000000;
    block[2] = __vdsink_Start_block_invoke_0;
    block[3] = &unk_1E6893138;
    block[4] = a3;
    int v10 = 0;
    dispatch_async(v7, block);
  }
  return 0;
}

uint64_t vdsink_Stop_0(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APVirtualDisplaySink <= 50
    && (gLogCategory_APVirtualDisplaySink != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a2)
  {
    CFMutableDictionaryRef v4 = *(NSObject **)(DerivedStorage + 24);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 0x40000000;
    block[2] = __vdsink_Stop_block_invoke_0;
    block[3] = &unk_1E6893160;
    block[4] = a2;
    dispatch_async(v4, block);
  }
  return 0;
}

uint64_t vdsink_PushFrame_0(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, uint64_t a9, void *a10, int a11)
{
  int valuePtr = a11;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  double v22 = *(double *)(DerivedStorage + 72);
  double v21 = *(double *)(DerivedStorage + 80);
  double v24 = *(double *)(DerivedStorage + 56);
  double v23 = *(double *)(DerivedStorage + 64);
  if (v22 != v24 || v21 != v23)
  {
    double v26 = v24 / v22;
    if (v24 / v22 >= v23 / v21) {
      double v26 = v23 / v21;
    }
    a7 = a7 * v26;
    a8 = a8 * v26;
    a5 = (v24 - v22 * v26) * 0.5 + a5 * v26;
    a6 = (v23 - v21 * v26) * 0.5 + a6 * v26;
  }
  v57.origin.x = a1;
  v57.origin.y = a2;
  v57.size.CGFloat width = a3;
  v57.size.CGFloat height = a4;
  DictionaryRepresentatioCFIndex n = CGRectCreateDictionaryRepresentation(v57);
  v58.origin.x = a5;
  v58.origin.y = a6;
  v58.size.CGFloat width = a7;
  v58.size.CGFloat height = a8;
  CFDictionaryRef v28 = CGRectCreateDictionaryRepresentation(v58);
  CFAllocatorRef v29 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFNumberRef v30 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], kCFNumberSInt32Type, &valuePtr);
  CMSetAttachment(a10, (CFStringRef)*MEMORY[0x1E4F21A58], DictionaryRepresentation, 0);
  CMSetAttachment(a10, (CFStringRef)*MEMORY[0x1E4F21A10], v28, 0);
  CMSetAttachment(a10, (CFStringRef)*MEMORY[0x1E4F21A70], v30, 0);
  CFArrayRef v31 = *(const void **)(DerivedStorage + 96);
  if (v31)
  {
    CMSetAttachment(a10, @"APTimestamps", v31, 0);
    int v32 = *(const void **)(DerivedStorage + 96);
    if (v32)
    {
      CFRelease(v32);
      *(void *)(DerivedStorage + 96) = 0;
    }
  }
  int v33 = *(const void **)(DerivedStorage + 104);
  if (v33)
  {
    CMSetAttachment(a10, @"APSubmitSurfaceTimestamp", v33, 0);
    uint64_t v34 = *(const void **)(DerivedStorage + 104);
    if (v34)
    {
      CFRelease(v34);
      *(void *)(DerivedStorage + 104) = 0;
    }
  }
  uint64_t v35 = *(const void **)(DerivedStorage + 112);
  if (v35)
  {
    CMSetAttachment(a10, @"APInterestingFrame", v35, 0);
    uint64_t v36 = *(const void **)(DerivedStorage + 112);
    if (v36)
    {
      CFRelease(v36);
      *(void *)(DerivedStorage + 112) = 0;
    }
  }
  CMBufferQueueEnqueue(*(CMBufferQueueRef *)(DerivedStorage + 16), a10);
  if (gLogCategory_APVirtualDisplaySink <= 10
    && (gLogCategory_APVirtualDisplaySink != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v37 = CMBaseObjectGetDerivedStorage();
  if (*(void *)(v37 + 88))
  {
    uint64_t v38 = v37;
    CFArrayRef SampleAttachmentsArray = CMSampleBufferGetSampleAttachmentsArray((CMSampleBufferRef)a10, 0);
    if (SampleAttachmentsArray)
    {
      CFArrayRef v40 = SampleAttachmentsArray;
      CFIndex Count = CFArrayGetCount(SampleAttachmentsArray);
      if (Count >= 1)
      {
        CFIndex v42 = Count;
        CFNumberRef v52 = v30;
        CFDictionaryRef v53 = DictionaryRepresentation;
        CFDictionaryRef v54 = v28;
        CFIndex v43 = 0;
        CFMutableDictionaryRef Mutable = 0;
        uint64_t v45 = (const void *)*MEMORY[0x1E4F453B8];
        do
        {
          CFDictionaryRef ValueAtIndex = (const __CFDictionary *)CFArrayGetValueAtIndex(v40, v43);
          if (ValueAtIndex)
          {
            CFStringRef Value = CFDictionaryGetValue(ValueAtIndex, v45);
            if (Value)
            {
              uint64_t v48 = Value;
              if (!Mutable) {
                CFMutableDictionaryRef Mutable = CFArrayCreateMutable(v29, 0, MEMORY[0x1E4F1D510]);
              }
              if (gLogCategory_APVirtualDisplaySink <= 10
                && (gLogCategory_APVirtualDisplaySink != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              CFArrayAppendValue(Mutable, v48);
            }
          }
          ++v43;
        }
        while (v42 != v43);
        DictionaryRepresentatioCFIndex n = v53;
        CFDictionaryRef v28 = v54;
        CFNumberRef v30 = v52;
        if (Mutable)
        {
          long long v49 = CFDictionaryCreateMutable(v29, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
          CFDictionarySetValue(v49, (const void *)*MEMORY[0x1E4F34F10], Mutable);
          long long v50 = *(NSObject **)(v38 + 24);
          block[0] = MEMORY[0x1E4F143A8];
          block[1] = 0x40000000;
          block[2] = __vdsink_handleFrameAcknowledgements_block_invoke_0;
          block[3] = &__block_descriptor_tmp_39_1;
          block[4] = v38;
          void block[5] = v49;
          dispatch_async(v50, block);
          CFRelease(Mutable);
        }
      }
    }
  }
  if (DictionaryRepresentation) {
    CFRelease(DictionaryRepresentation);
  }
  if (v28) {
    CFRelease(v28);
  }
  if (v30) {
    CFRelease(v30);
  }
  return 0;
}

uint64_t vdsink_Suspend_0()
{
  if (gLogCategory_APVirtualDisplaySink <= 30
    && (gLogCategory_APVirtualDisplaySink != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 0;
}

uint64_t vdsink_Resume_0()
{
  if (gLogCategory_APVirtualDisplaySink <= 30
    && (gLogCategory_APVirtualDisplaySink != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 0;
}

uint64_t vdsink_GetPropertyAsync_0(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  int v7 = CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34F70]);
  uint64_t v8 = (const __CFAllocator **)MEMORY[0x1E4F1CF80];
  if (!v7)
  {
    uint64_t CMBaseObject = FigEndpointStreamGetCMBaseObject();
    uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v13) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    CFTypeRef v27 = *(uint64_t (**)(uint64_t, const void *, const __CFAllocator *, __CFDictionary **))(v14 + 48);
    if (v27)
    {
      uint64_t v25 = v27(CMBaseObject, a2, *v8, &v36);
      CFMutableStringRef MutableCopy = v36;
    }
    else
    {
      CFMutableStringRef MutableCopy = 0;
      uint64_t v25 = 4294954514;
    }
    goto LABEL_53;
  }
  CFTypeRef v35 = 0;
  uint64_t v9 = FigEndpointStreamGetCMBaseObject();
  uint64_t v10 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v10) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0;
  }
  CFTypeRef v15 = *(uint64_t (**)(uint64_t, void, const __CFAllocator *, CFTypeRef *))(v11 + 48);
  if (!v15)
  {
    uint64_t v25 = 4294954514;
LABEL_19:
    APSLogErrorAt();
    CFMutableStringRef MutableCopy = 0;
    goto LABEL_53;
  }
  CFAllocatorRef v16 = *v8;
  uint64_t v17 = v15(v9, *MEMORY[0x1E4F34F68], *v8, &v35);
  if (v17)
  {
    uint64_t v25 = v17;
    goto LABEL_19;
  }
  CFDictionaryRef v18 = (const __CFDictionary *)v35;
  uint64_t v19 = CMBaseObjectGetDerivedStorage();
  CFIndex v43 = 0;
  uint64_t v44 = 0;
  CFTypeRef v41 = 0;
  CFTypeRef v42 = 0;
  CFTypeRef cf = 0;
  int v38 = 60;
  int v39 = 0;
  char v37 = 0;
  if (vdsink_getVirtualDisplaySizeOverrideFromPrefs_sCheckPrefsOnce_0 != -1) {
    dispatch_once(&vdsink_getVirtualDisplaySizeOverrideFromPrefs_sCheckPrefsOnce_0, &__block_literal_global_16);
  }
  double v20 = *(double *)&vdsink_getVirtualDisplaySizeOverrideFromPrefs_prefScreenSize_0_0;
  double v21 = *(double *)&vdsink_getVirtualDisplaySizeOverrideFromPrefs_prefScreenSize_1_0;
  double v23 = *MEMORY[0x1E4F1DB30];
  double v22 = *(double *)(MEMORY[0x1E4F1DB30] + 8);
  if ((*(double *)&vdsink_getVirtualDisplaySizeOverrideFromPrefs_prefScreenSize_0_0 != *MEMORY[0x1E4F1DB30]
     || *(double *)&vdsink_getVirtualDisplaySizeOverrideFromPrefs_prefScreenSize_1_0 != v22)
    && gLogCategory_APVirtualDisplaySink <= 50)
  {
    if (gLogCategory_APVirtualDisplaySink != -1
      || (int v28 = _LogCategory_Initialize(),
          double v20 = *(double *)&vdsink_getVirtualDisplaySizeOverrideFromPrefs_prefScreenSize_0_0,
          double v21 = *(double *)&vdsink_getVirtualDisplaySizeOverrideFromPrefs_prefScreenSize_1_0,
          v28))
    {
      LogPrintF();
      double v20 = *(double *)&vdsink_getVirtualDisplaySizeOverrideFromPrefs_prefScreenSize_0_0;
      double v21 = *(double *)&vdsink_getVirtualDisplaySizeOverrideFromPrefs_prefScreenSize_1_0;
    }
  }
  FigCFDictionaryGetBooleanIfPresent();
  FigCFDictionaryGetCGSizeIfPresent();
  CFDictionaryRef Value = (const __CFDictionary *)CFDictionaryGetValue(v18, (const void *)*MEMORY[0x1E4F34ED0]);
  FigCFDictionaryGetInt32IfPresent();
  FigCFDictionaryGetInt32IfPresent();
  if (v20 != v23 || v21 != v22)
  {
    *(double *)(v19 + 72) = v20;
    *(double *)(v19 + 80) = v21;
    if (!Value) {
      goto LABEL_28;
    }
LABEL_30:
    CFDictionaryGetValue(Value, (const void *)*MEMORY[0x1E4F34D90]);
    FigDisplayModes_BuildColorAndTimingModes();
    FigDisplayModes_BuildColorModesFromHDRMode();
    goto LABEL_31;
  }
  *(_OWORD *)(v19 + 72) = *(_OWORD *)(v19 + 56);
  if (Value) {
    goto LABEL_30;
  }
LABEL_28:
  FigDisplayModes_BuildColorAndTimingModes();
LABEL_31:
  if (!v42 || !v41) {
    goto LABEL_54;
  }
  if (v39 >= 1)
  {
    FigDisplayModes_CopyTimingModeAppendingPreferredUIScale();
    if (!cf)
    {
LABEL_54:
      APSLogErrorAt();
      CFMutableStringRef MutableCopy = 0;
      goto LABEL_40;
    }
    CFTypeRef v30 = v41;
    CFTypeRef v41 = cf;
    CFRetain(cf);
    if (v30) {
      CFRelease(v30);
    }
  }
  FigDisplayModes_CreateColorAndTimingModesArraysWithPreferredMode();
  if (!v44 || !v43) {
    goto LABEL_54;
  }
  CFMutableStringRef MutableCopy = CFDictionaryCreateMutableCopy(v16, 0, v18);
  CFDictionarySetValue(MutableCopy, (const void *)*MEMORY[0x1E4F34EA0], v44);
  CFDictionarySetValue(MutableCopy, (const void *)*MEMORY[0x1E4F34EF0], v43);
LABEL_40:
  if (v42) {
    CFRelease(v42);
  }
  if (v41) {
    CFRelease(v41);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v44) {
    CFRelease(v44);
  }
  if (v43) {
    CFRelease(v43);
  }
  uint64_t v36 = MutableCopy;
  if (v35) {
    CFRelease(v35);
  }
  uint64_t v25 = 0;
LABEL_53:
  CFArrayRef v31 = *(NSObject **)(DerivedStorage + 24);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 0x40000000;
  block[2] = __vdsink_GetPropertyAsync_block_invoke_0;
  block[3] = &unk_1E68931A8;
  int v34 = v25;
  block[4] = a4;
  void block[5] = MutableCopy;
  dispatch_async(v31, block);
  return v25;
}

uint64_t vdsink_Perform_0(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
  {
    APSLogErrorAt();
LABEL_15:
    uint64_t v7 = 4294954516;
    goto LABEL_16;
  }
  if (!CFEqual(a2, (CFTypeRef)*MEMORY[0x1E4F34E98]))
  {
    if (gLogCategory_APVirtualDisplaySink <= 50
      && (gLogCategory_APVirtualDisplaySink != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_15;
  }
  CMSampleBufferRef v13 = 0;
  *(_OWORD *)&sampleTimingArray.duration.int value = *MEMORY[0x1E4F1FA48];
  sampleTimingArray.duration.CMTimeEpoch epoch = *(void *)(MEMORY[0x1E4F1FA48] + 16);
  sampleTimingArray.presentationTimeStamp = *(CMTime *)*(void *)&MEMORY[0x1E4F1F9F8];
  sampleTimingArray.decodeTimeStamp = sampleTimingArray.presentationTimeStamp;
  uint64_t v7 = CMSampleBufferCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, 1u, 0, 0, 0, 0, 1, &sampleTimingArray, 0, 0, &v13);
  if (v7)
  {
    APSLogErrorAt();
    if (!a4) {
      return v7;
    }
    goto LABEL_17;
  }
  CMSetAttachment(v13, @"APClearScreen", (CFTypeRef)*MEMORY[0x1E4F1CFD0], 0);
  CMBufferQueueEnqueue(*(CMBufferQueueRef *)(DerivedStorage + 16), v13);
  if (gLogCategory_APVirtualDisplaySink <= 30
    && (gLogCategory_APVirtualDisplaySink != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (v13)
  {
    CFRelease(v13);
    if (!a4) {
      return v7;
    }
    goto LABEL_17;
  }
LABEL_16:
  if (a4)
  {
LABEL_17:
    uint64_t v8 = *(NSObject **)(DerivedStorage + 24);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 0x40000000;
    block[2] = __vdsink_Perform_block_invoke_0;
    block[3] = &unk_1E68931F0;
    block[4] = a4;
    int v11 = v7;
    dispatch_async(v8, block);
  }
  return v7;
}

uint64_t vdsink_SetDispatchQueue_0(uint64_t a1, NSObject *global_queue)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFMutableDictionaryRef v4 = *(NSObject **)(DerivedStorage + 24);
  if (v4) {
    dispatch_release(v4);
  }
  if (!global_queue) {
    global_queue = dispatch_get_global_queue(0, 0);
  }
  *(void *)(DerivedStorage + 24) = global_queue;
  dispatch_retain(global_queue);
  return 0;
}

uint64_t vdsink_SetEventHandler_0(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2) {
    CFMutableDictionaryRef v4 = _Block_copy(a2);
  }
  else {
    CFMutableDictionaryRef v4 = 0;
  }
  uint64_t v5 = *(NSObject **)(DerivedStorage + 24);
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 0x40000000;
  v7[2] = __vdsink_SetEventHandler_block_invoke;
  void v7[3] = &unk_1E6893218;
  v7[4] = v4;
  v7[5] = DerivedStorage;
  dispatch_sync(v5, v7);
  return 0;
}

uint64_t vdsink_ShouldDropFrame_0()
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  memset(&v7, 0, sizeof(v7));
  CMBufferQueueGetDuration(&v7, *(CMBufferQueueRef *)(DerivedStorage + 16));
  if ((v7.flags & 0x1D) != 1
    || (time1 = v7, CMTime time2 = *(CMTime *)(DerivedStorage + 32), CMTimeCompare(&time1, &time2) < 0))
  {
    uint64_t v1 = 0;
  }
  else
  {
    if (gLogCategory_APVirtualDisplaySink <= 40
      && (gLogCategory_APVirtualDisplaySink != -1 || _LogCategory_Initialize()))
    {
      CMTime time1 = v7;
      CMTimeGetSeconds(&time1);
      LogPrintF();
    }
    ++*(_DWORD *)(DerivedStorage + 136);
    uint64_t v1 = 1;
  }
  if (*(int *)(DerivedStorage + 136) >= 1)
  {
    uint64_t v2 = mach_absolute_time();
    if (v2 - *(void *)(DerivedStorage + 128) >= *(void *)(DerivedStorage + 120))
    {
      uint64_t v3 = v2;
      if (gLogCategory_APVirtualDisplaySink <= 60
        && (gLogCategory_APVirtualDisplaySink != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(_DWORD *)(DerivedStorage + 136) = 0;
      *(void *)(DerivedStorage + 128) = v3;
    }
  }
  return v1;
}

void __vdsink_handleFrameAcknowledgements_block_invoke_0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 88);
  if (v2) {
    (*(void (**)(uint64_t, void, void))(v2 + 16))(v2, *MEMORY[0x1E4F34F08], *(void *)(a1 + 40));
  }
  uint64_t v3 = *(const void **)(a1 + 40);
  CFRelease(v3);
}

void __vdsink_getVirtualDisplaySizeOverrideFromPrefs_block_invoke_0()
{
  CFArrayRef v0 = (const __CFArray *)CFPreferencesCopyValue(@"mirroring_resolution", @"com.apple.coremedia", (CFStringRef)*MEMORY[0x1E4F1D3F0], (CFStringRef)*MEMORY[0x1E4F1D3C8]);
  if (v0)
  {
    CFArrayRef v1 = v0;
    CFTypeID v2 = CFGetTypeID(v0);
    IntCFDictionaryRef Value = 0.0;
    if (v2 == CFArrayGetTypeID())
    {
      if (gLogCategory_APVirtualDisplaySink <= 50
        && (gLogCategory_APVirtualDisplaySink != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      double v4 = 0.0;
      if (CFArrayGetCount(v1) >= 2)
      {
        CFStringRef ValueAtIndex = (const __CFString *)CFArrayGetValueAtIndex(v1, 0);
        if (ValueAtIndex)
        {
          CFStringRef v6 = ValueAtIndex;
          CFTypeID v7 = CFGetTypeID(ValueAtIndex);
          if (v7 == CFStringGetTypeID()) {
            IntCFDictionaryRef Value = (double)CFStringGetIntValue(v6);
          }
        }
        CFStringRef v8 = (const __CFString *)CFArrayGetValueAtIndex(v1, 1);
        if (v8)
        {
          CFStringRef v9 = v8;
          CFTypeID v10 = CFGetTypeID(v8);
          if (v10 == CFStringGetTypeID()) {
            double v4 = (double)CFStringGetIntValue(v9);
          }
        }
      }
    }
    else
    {
      double v4 = 0.0;
    }
    CFRelease(v1);
    if (IntValue > 0.0 && v4 > 0.0)
    {
      if (IntValue <= v4) {
        *(double *)&uint64_t v11 = v4;
      }
      else {
        *(double *)&uint64_t v11 = IntValue;
      }
      vdsink_getVirtualDisplaySizeOverrideFromPrefs_prefScreenSize_0_0 = v11;
      if (IntValue >= v4) {
        *(double *)&uint64_t v12 = v4;
      }
      else {
        *(double *)&uint64_t v12 = IntValue;
      }
      vdsink_getVirtualDisplaySizeOverrideFromPrefs_prefScreenSize_1_0 = v12;
    }
  }
}

uint64_t APSenderSessionMessageSendTimeout()
{
  if (APSenderSessionMessageSendTimeout_once != -1) {
    dispatch_once(&APSenderSessionMessageSendTimeout_once, &__block_literal_global_17);
  }
  return APSenderSessionMessageSendTimeout_messageTimeout;
}

uint64_t __APSenderSessionMessageSendTimeout_block_invoke()
{
  uint64_t result = APSSettingsGetInt64();
  if ((int)result >= 1)
  {
    int v1 = result;
    if (gLogCategory_APSenderSession <= 50)
    {
      if (gLogCategory_APSenderSession != -1 || (uint64_t result = _LogCategory_Initialize(), result)) {
        uint64_t result = LogPrintF();
      }
    }
    APSenderSessionMessageSendTimeout_messageTimeout = v1;
  }
  return result;
}

uint64_t APSenderSessionGetClassID()
{
  if (APSenderSessionGetClassID_sRegisterOnce != -1) {
    dispatch_once_f(&APSenderSessionGetClassID_sRegisterOnce, &APSenderSessionGetClassID_sClassID, (dispatch_function_t)session_registerBaseClass);
  }
  return APSenderSessionGetClassID_sClassID;
}

uint64_t session_registerBaseClass(uint64_t a1)
{
  uint64_t ClassID = CMBaseGetClassID();
  return MEMORY[0x1F40DC658](&session_registerBaseClass_sClassDesc, ClassID, 1, a1);
}

uint64_t APSenderSessionGetTypeID()
{
  if (APSenderSessionGetClassID_sRegisterOnce != -1) {
    dispatch_once_f(&APSenderSessionGetClassID_sRegisterOnce, &APSenderSessionGetClassID_sClassID, (dispatch_function_t)session_registerBaseClass);
  }
  uint64_t v0 = APSenderSessionGetClassID_sClassID;
  return MEMORY[0x1F40DB8F8](v0);
}

uint64_t APSenderSessionUtilityFetchInitialVolume(const void *a1, int *a2)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  dataPointerOut = 0;
  CFTypeRef cf = 0;
  size_t totalLengthOut = 0;
  CMBlockBufferRef theBuffer = 0;
  uint64_t v15 = 0;
  size_t lengthAtOffsetOut = 0;
  uint64_t v14 = 0;
  long long v23 = 0u;
  long long v24 = 0u;
  *(_OWORD *)double v21 = 0u;
  long long v22 = 0u;
  int v13 = 0;
  if (!a1 || (CFTypeID v4 = CFGetTypeID(a1), v4 != FigTransportStreamGetTypeID()))
  {
    uint64_t v11 = 4294895475;
    goto LABEL_17;
  }
  if (!a2)
  {
    uint64_t v11 = 4294895475;
    goto LABEL_17;
  }
  uint64_t BlockBufferWithCFString = FigCreateBlockBufferWithCFString();
  if (BlockBufferWithCFString)
  {
    uint64_t v11 = BlockBufferWithCFString;
    goto LABEL_17;
  }
  uint64_t v6 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  CFStringRef v8 = *(uint64_t (**)(const void *, uint64_t, CFTypeRef, CMBlockBufferRef *))(v7 + 56);
  if (!v8)
  {
    uint64_t v11 = 4294954514;
LABEL_17:
    APSLogErrorAt();
    goto LABEL_24;
  }
  uint64_t v9 = v8(a1, 1735815020, cf, &theBuffer);
  if (v9)
  {
    uint64_t v11 = v9;
    goto LABEL_17;
  }
  uint64_t DataPointer = CMBlockBufferGetDataPointer(theBuffer, 0, &lengthAtOffsetOut, &totalLengthOut, &dataPointerOut);
  if (DataPointer)
  {
    uint64_t v11 = DataPointer;
    goto LABEL_17;
  }
  if (totalLengthOut != lengthAtOffsetOut)
  {
    uint64_t v11 = 4294895475;
    goto LABEL_17;
  }
  uint64_t v11 = HTTPGetHeaderField();
  __memcpy_chk();
  v21[v14] = 0;
  if (sscanf(v21, "%f", &v13) == 1)
  {
LABEL_19:
    if (gLogCategory_APSenderSession <= 10
      && (gLogCategory_APSenderSession != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_23;
  }
  int v13 = -1046478848;
  if (gLogCategory_APSenderSession <= 50)
  {
    if (gLogCategory_APSenderSession != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
    goto LABEL_19;
  }
LABEL_23:
  *a2 = v13;
LABEL_24:
  if (cf) {
    CFRelease(cf);
  }
  if (theBuffer) {
    CFRelease(theBuffer);
  }
  return v11;
}

__CFString *APSenderSessionUtilityGetAudioModeForEndpointStream()
{
  if (FigCFEqual()) {
    return @"moviePlayback";
  }
  if (FigCFEqual()) {
    return @"spokenAudio";
  }
  return @"default";
}

CFStringRef session_copyFormattingDesc(uint64_t a1)
{
  return CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, @"[APSenderSession %p]", a1);
}

uint64_t APAudioEngineBufferedCreate(const __CFAllocator *a1, const void *a2, uint64_t a3, void *a4)
{
  CFTypeRef v47 = 0;
  if (!a4)
  {
    APSLogErrorAt();
    return 4294951815;
  }
  if (!a2 || !a3)
  {
    APSLogErrorAt();
    uint64_t v16 = 4294951815;
    goto LABEL_22;
  }
  if (gLogCategory_APAudioEngineBuffered <= 30
    && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  FigEndpointStreamAudioEngineGetClassID();
  uint64_t v7 = CMDerivedObjectCreate();
  if (v7)
  {
    uint64_t v16 = v7;
    goto LABEL_200;
  }
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(unsigned char *)(DerivedStorage + 392) = 0;
  *(void *)(DerivedStorage + 408) = (int)APSSettingsGetIntWithDefault();
  *(void *)(DerivedStorage + 8) = CFStringCreateWithCString(a1, "AudioEngineBuffered", 0x8000100u);
  uint64_t v9 = APSDispatchSectionCreate();
  if (v9)
  {
    uint64_t v16 = v9;
    goto LABEL_200;
  }
  *(_DWORD *)(DerivedStorage + 804) = 1852990835;
  *(_DWORD *)(DerivedStorage + 432) = 36;
  dispatch_queue_t v10 = dispatch_queue_create("AudioEngineDataProcessingQueue", 0);
  *(void *)(DerivedStorage + 424) = v10;
  if (!v10) {
    goto LABEL_190;
  }
  uint64_t v11 = APSPriorityDispatcherCreate();
  if (v11)
  {
    uint64_t v16 = v11;
    goto LABEL_200;
  }
  uint64_t v12 = FigDispatchQueueCreateWithPriority();
  *(void *)(DerivedStorage + 344) = v12;
  if (!v12 || (uint64_t v13 = FigDispatchQueueCreateWithPriority(), (*(void *)(DerivedStorage + 352) = v13) == 0))
  {
LABEL_190:
    APSLogErrorAt();
    uint64_t v16 = APSSignalErrorAt();
    goto LABEL_22;
  }
  CFAllocatorRef DefaultAirPlayMallocZoneCFAllocator = (const void *)APSAllocatorGetDefaultAirPlayMallocZoneCFAllocator();
  if (!DefaultAirPlayMallocZoneCFAllocator)
  {
    *(void *)(DerivedStorage + 360) = 0;
    goto LABEL_21;
  }
  CFTypeRef v15 = CFRetain(DefaultAirPlayMallocZoneCFAllocator);
  *(void *)(DerivedStorage + 360) = v15;
  if (!v15)
  {
LABEL_21:
    APSLogErrorAt();
    uint64_t v16 = 4294951816;
    goto LABEL_22;
  }
  *(void *)(DerivedStorage + 416) = CFDictionaryGetInt64() != 0;
  APSSettingsIsFeatureEnabled();
  *(void *)(DerivedStorage + 56) = (int)FigGetCFPreferenceNumberWithDefault();
  if (gLogCategory_APAudioEngineBuffered <= 50
    && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
  {
    if (v47) {
      CMBaseObjectGetDerivedStorage();
    }
    LogPrintF();
  }
  *(_DWORD *)(DerivedStorage + 900) = 0;
  *(void *)(DerivedStorage + 904) = 0;
  *(unsigned char *)(DerivedStorage + 1032) = 0;
  *(_OWORD *)(DerivedStorage + 1064) = 0u;
  uint64_t v17 = MEMORY[0x1E4F1F9F8];
  long long v43 = *MEMORY[0x1E4F1F9F8];
  *(_OWORD *)(DerivedStorage + 1036) = *MEMORY[0x1E4F1F9F8];
  uint64_t v18 = *(void *)(v17 + 16);
  *(void *)(DerivedStorage + 1052) = v18;
  *(_DWORD *)(DerivedStorage + 16) = FigGetCFPreferenceNumberWithDefault();
  *(_DWORD *)(DerivedStorage + 20) = FigGetCFPreferenceNumberWithDefault();
  *(_DWORD *)(DerivedStorage + 336) = FigGetCFPreferenceNumberWithDefault();
  *(_OWORD *)(DerivedStorage + 156) = v43;
  *(void *)(DerivedStorage + 172) = v18;
  *(_OWORD *)(DerivedStorage + 184) = v43;
  *(void *)(DerivedStorage + 200) = v18;
  *(_OWORD *)(DerivedStorage + 208) = v43;
  *(void *)(DerivedStorage + 224) = v18;
  bufferedAudioEngine_updateStartWatermarkTime((uint64_t)v47);
  *(_DWORD *)(DerivedStorage + 180) = FigGetCFPreferenceNumberWithDefault();
  if (gLogCategory_APAudioEngineBuffered <= 50
    && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
  {
    if (v47) {
      CMBaseObjectGetDerivedStorage();
    }
    LogPrintF();
  }
  APSIsSuntoryEnabled();
  FigGetCFPreferenceNumberWithDefault();
  *(void *)(DerivedStorage + 232) = MillisecondsToUpTicks();
  if (gLogCategory_APAudioEngineBuffered <= 50
    && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
  {
    if (v47) {
      CMBaseObjectGetDerivedStorage();
    }
    LogPrintF();
  }
  FigGetCFPreferenceNumberWithDefault();
  *(void *)(DerivedStorage + 240) = MillisecondsToUpTicks();
  if (gLogCategory_APAudioEngineBuffered <= 50
    && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
  {
    if (v47) {
      CMBaseObjectGetDerivedStorage();
    }
    LogPrintF();
  }
  *(_DWORD *)(DerivedStorage + 256) = FigGetCFPreferenceNumberWithDefault();
  if (gLogCategory_APAudioEngineBuffered <= 50
    && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
  {
    if (v47) {
      CMBaseObjectGetDerivedStorage();
    }
    LogPrintF();
  }
  FigGetCFPreferenceNumberWithDefault();
  *(void *)(DerivedStorage + 264) = MillisecondsToUpTicks();
  if (gLogCategory_APAudioEngineBuffered <= 50
    && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
  {
    if (v47) {
      CMBaseObjectGetDerivedStorage();
    }
    LogPrintF();
  }
  FigGetCFPreferenceNumberWithDefault();
  *(void *)(DerivedStorage + 248) = MillisecondsToUpTicks();
  if (gLogCategory_APAudioEngineBuffered <= 50
    && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
  {
    if (v47) {
      CMBaseObjectGetDerivedStorage();
    }
    LogPrintF();
  }
  if (*(void *)(DerivedStorage + 240) < *(void *)(DerivedStorage + 264)
    && gLogCategory_APAudioEngineBuffered <= 110
    && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
  {
    if (v47) {
      CMBaseObjectGetDerivedStorage();
    }
    LogPrintF();
  }
  *(_DWORD *)(DerivedStorage + 112) = FigGetCFPreferenceNumberWithDefault();
  if (gLogCategory_APAudioEngineBuffered <= 50
    && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
  {
    if (v47) {
      CMBaseObjectGetDerivedStorage();
    }
    LogPrintF();
  }
  APSIsAPMSpeaker();
  *(_DWORD *)(DerivedStorage + 148) = FigGetCFPreferenceNumberWithDefault();
  *(_DWORD *)(DerivedStorage + 152) = FigGetCFPreferenceNumberWithDefault();
  *(_DWORD *)(DerivedStorage + 116) = FigGetCFPreferenceNumberWithDefault();
  if (gLogCategory_APAudioEngineBuffered <= 50
    && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
  {
    if (v47) {
      CMBaseObjectGetDerivedStorage();
    }
    LogPrintF();
  }
  *(_DWORD *)(DerivedStorage + 120) = FigGetCFPreferenceNumberWithDefault();
  if (gLogCategory_APAudioEngineBuffered <= 50
    && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
  {
    if (v47) {
      CMBaseObjectGetDerivedStorage();
    }
    LogPrintF();
  }
  int CFPreferenceNumberWithDefault = FigGetCFPreferenceNumberWithDefault();
  CMTimeMake(&time, CFPreferenceNumberWithDefault, 1);
  *(CMTime *)(DerivedStorage + 124) = time;
  if (gLogCategory_APAudioEngineBuffered <= 50
    && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
  {
    if (v47) {
      CMBaseObjectGetDerivedStorage();
    }
    CMTime time = *(CMTime *)(DerivedStorage + 124);
    CMTimeGetSeconds(&time);
    LogPrintF();
  }
  int v20 = FigGetCFPreferenceNumberWithDefault();
  CMTimeMake(&time, v20, 1);
  *(CMTime *)(DerivedStorage + 64) = time;
  int v21 = FigGetCFPreferenceNumberWithDefault();
  CMTimeMake(&time, v21, 1);
  *(CMTime *)(DerivedStorage + 88) = time;
  if (gLogCategory_APAudioEngineBuffered <= 50
    && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
  {
    if (v47) {
      CMBaseObjectGetDerivedStorage();
    }
    CMTime time = *(CMTime *)(DerivedStorage + 64);
    CMTimeGetSeconds(&time);
    CMTime time = *(CMTime *)(DerivedStorage + 88);
    CMTimeGetSeconds(&time);
    LogPrintF();
  }
  *(_DWORD *)(DerivedStorage + 648) = FigGetCFPreferenceNumberWithDefault();
  if (gLogCategory_APAudioEngineBuffered <= 50
    && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
  {
    if (v47) {
      CMBaseObjectGetDerivedStorage();
    }
    LogPrintF();
  }
  *(_DWORD *)(DerivedStorage + 24) = 300;
  if (APSSettingsIsFeatureEnabled())
  {
    int v22 = FigGetCFPreferenceNumberWithDefault();
    CMTimeMake(&time, v22, 1000);
    *(CMTime *)(DerivedStorage + 300) = time;
    if (gLogCategory_APAudioEngineBuffered > 50
      || gLogCategory_APAudioEngineBuffered == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_134;
    }
    if (v47) {
      CMBaseObjectGetDerivedStorage();
    }
    CMTime time = *(CMTime *)(DerivedStorage + 300);
    CMTimeGetSeconds(&time);
  }
  else
  {
    *(_DWORD *)(DerivedStorage + 296) = FigGetCFPreferenceNumberWithDefault();
    if (gLogCategory_APAudioEngineBuffered > 50
      || gLogCategory_APAudioEngineBuffered == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_134;
    }
    if (v47) {
      CMBaseObjectGetDerivedStorage();
    }
  }
  LogPrintF();
LABEL_134:
  *(unsigned char *)(DerivedStorage + 324) = FigGetCFPreferenceNumberWithDefault() != 0;
  int IsFeatureEnabled = APSSettingsIsFeatureEnabled();
  *(unsigned char *)(DerivedStorage + 325) = IsFeatureEnabled;
  if (IsFeatureEnabled) {
    BOOL v24 = APSSettingsGetIntWithDefault() != 0;
  }
  else {
    BOOL v24 = 0;
  }
  *(unsigned char *)(DerivedStorage + 326) = v24;
  if (gLogCategory_APAudioEngineBuffered <= 50
    && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
  {
    if (v47) {
      CMBaseObjectGetDerivedStorage();
    }
    LogPrintF();
  }
  *(_WORD *)(DerivedStorage + 800) = 0;
  *(unsigned char *)(DerivedStorage + 596) = 0;
  *(_OWORD *)(DerivedStorage + 1000) = v43;
  *(void *)(DerivedStorage + 1016) = v18;
  CFAllocatorRef v25 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D510]);
  *(void *)(DerivedStorage + 1024) = Mutable;
  if (!Mutable) {
    goto LABEL_21;
  }
  CFMutableArrayRef v27 = CFArrayCreateMutable(v25, 0, MEMORY[0x1E4F1D510]);
  *(void *)(DerivedStorage + 1168) = v27;
  if (!v27) {
    goto LABEL_21;
  }
  *(unsigned char *)(DerivedStorage + 1080) = 0;
  *(_OWORD *)(DerivedStorage + 1084) = v43;
  *(void *)(DerivedStorage + 1100) = v18;
  *(_DWORD *)(DerivedStorage + 524) = 0;
  CallbacksForUnsortedSampleBuffers = CMBufferQueueGetCallbacksForUnsortedSampleBuffers();
  uint64_t v29 = CMBufferQueueCreate(a1, 0, CallbacksForUnsortedSampleBuffers, (CMBufferQueueRef *)(DerivedStorage + 1112));
  if (v29)
  {
    uint64_t v16 = v29;
  }
  else
  {
    CMTimeMake(&v45, 10000, 1000);
    CMTimeMake(&v44, 2000, 1000);
    uint64_t v30 = FigSampleBufferConsumerCreateForBufferQueue();
    if (!v30)
    {
      *(void *)(DerivedStorage + 1144) = 0;
      CFMutableDictionaryRef v31 = CFDictionaryCreateMutable(v25, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      *(void *)(DerivedStorage + 1136) = v31;
      if (v31)
      {
        *(void *)(DerivedStorage + 968) = 0;
        CFMutableDictionaryRef v32 = CFDictionaryCreateMutable(v25, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
        *(void *)(DerivedStorage + 976) = v32;
        if (v32)
        {
          int v33 = FigGetCFPreferenceNumberWithDefault();
          CMTimeMake(&time, v33, 1);
          *(CMTime *)(DerivedStorage + 272) = time;
          if (gLogCategory_APAudioEngineBuffered <= 50)
          {
            if (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize())
            {
              if (v47) {
                CMBaseObjectGetDerivedStorage();
              }
              CMTime time = *(CMTime *)(DerivedStorage + 272);
              CMTimeGetSeconds(&time);
              LogPrintF();
            }
            if (gLogCategory_APAudioEngineBuffered <= 30
              && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
            {
              if (v47) {
                CMBaseObjectGetDerivedStorage();
              }
              LogPrintF();
            }
          }
          uint64_t v34 = APSOasisCPUFloorRaiserCreate();
          if (v34)
          {
            uint64_t v16 = v34;
          }
          else if (APSSettingsIsFeatureEnabled() {
                 && (uint64_t v35 = APAudioHoseManagerBufferedCreate(a1, (void *)(DerivedStorage + 1680)), v35))
          }
          {
            uint64_t v16 = v35;
          }
          else
          {
            if (gLogCategory_APAudioEngineBuffered <= 30
              && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
            {
              if (v47) {
                CMBaseObjectGetDerivedStorage();
              }
              LogPrintF();
            }
            *(void *)(DerivedStorage + 328) = CFRetain(a2);
            uint64_t v36 = MEMORY[0x1E4F4A160];
            *(_OWORD *)(DerivedStorage + 1424) = *MEMORY[0x1E4F4A160];
            *(void *)(DerivedStorage + 1440) = *(void *)(v36 + 16);
            *(_OWORD *)(DerivedStorage + 1448) = v43;
            *(void *)(DerivedStorage + 1464) = v18;
            *(_OWORD *)(DerivedStorage + 1472) = v43;
            *(void *)(DerivedStorage + 1488) = v18;
            HostTimeClocCFIndex k = CMClockGetHostTimeClock();
            CMClockGetTime(&time, HostTimeClock);
            *(CMTime *)(DerivedStorage + 1496) = time;
            uint64_t v38 = MEMORY[0x1E4F1FA08];
            long long v39 = *MEMORY[0x1E4F1FA08];
            *(_OWORD *)(DerivedStorage + 1544) = *MEMORY[0x1E4F1FA08];
            uint64_t v40 = *(void *)(v38 + 16);
            *(void *)(DerivedStorage + 1560) = v40;
            *(_OWORD *)(DerivedStorage + 1520) = v39;
            *(void *)(DerivedStorage + 1536) = v40;
            *(_OWORD *)(DerivedStorage + 652) = v43;
            *(void *)(DerivedStorage + 668) = v18;
            CMNotificationCenterGetDefaultLocalCenter();
            uint64_t v41 = FigNotificationCenterAddWeakListener();
            if (!v41)
            {
              if (gLogCategory_APAudioEngineBuffered <= 30
                && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
              {
                if (v47) {
                  CMBaseObjectGetDerivedStorage();
                }
                LogPrintF();
              }
              uint64_t v16 = 0;
              *a4 = v47;
              return v16;
            }
            uint64_t v16 = v41;
          }
          goto LABEL_200;
        }
      }
      goto LABEL_21;
    }
    uint64_t v16 = v30;
  }
LABEL_200:
  APSLogErrorAt();
LABEL_22:
  if (v47) {
    CFRelease(v47);
  }
  return v16;
}

double bufferedAudioEngine_updateStartWatermarkTime(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CMTime v12 = *(CMTime *)*(void *)&MEMORY[0x1E4F1F9F8];
  CMTime v11 = v12;
  int CFPreferenceNumberWithDefault = FigGetCFPreferenceNumberWithDefault();
  CMTimeMake(&v12, (uint64_t)(float)CFPreferenceNumberWithDefault, 1000);
  int v4 = FigGetCFPreferenceNumberWithDefault();
  CMTimeMake(&v11, (uint64_t)(float)v4, 1000);
  uint64_t v5 = (_OWORD *)(DerivedStorage + 156);
  CMTime time1 = v12;
  CMTime time2 = *(CMTime *)(DerivedStorage + 156);
  if (CMTimeCompare(&time1, &time2)
    && gLogCategory_APAudioEngineBuffered <= 50
    && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
  {
    if (a1) {
      CMBaseObjectGetDerivedStorage();
    }
    *(_OWORD *)&time1.int value = *v5;
    time1.CMTimeEpoch epoch = *(void *)(DerivedStorage + 172);
    CMTimeGetSeconds(&time1);
    CMTime time1 = v12;
    CMTimeGetSeconds(&time1);
    LogPrintF();
  }
  uint64_t v6 = (_OWORD *)(DerivedStorage + 184);
  CMTime time1 = v11;
  CMTime time2 = *(CMTime *)(DerivedStorage + 184);
  if (CMTimeCompare(&time1, &time2)
    && gLogCategory_APAudioEngineBuffered <= 50
    && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
  {
    if (a1) {
      CMBaseObjectGetDerivedStorage();
    }
    *(_OWORD *)&time1.int value = *v6;
    time1.CMTimeEpoch epoch = *(void *)(DerivedStorage + 200);
    CMTimeGetSeconds(&time1);
    CMTime time1 = v11;
    CMTimeGetSeconds(&time1);
    LogPrintF();
  }
  *uint64_t v5 = *(_OWORD *)&v12.value;
  *(void *)(DerivedStorage + 172) = v12.epoch;
  *uint64_t v6 = *(_OWORD *)&v11.value;
  *(void *)(DerivedStorage + 200) = v11.epoch;
  CMTimeMake(&rhs, 2500, 1000);
  *(_OWORD *)&time2.int value = *v6;
  time2.CMTimeEpoch epoch = *(void *)(DerivedStorage + 200);
  CMTimeAdd(&time1, &time2, &rhs);
  double result = *(double *)&time1.value;
  *(CMTime *)(DerivedStorage + 208) = time1;
  return result;
}

uint64_t bufferedAudioEngine_handleClockLockStateChanged(uint64_t a1, const void *a2)
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  if (a2)
  {
    if (gLogCategory_APAudioEngineBuffered <= 50
      && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
    {
      CMBaseObjectGetDerivedStorage();
      LogPrintF();
    }
    CFRetain(a2);
    return APSPriorityDispatcherAsyncF();
  }
  return result;
}

uint64_t bufferedAudioEngine_Invalidate()
{
  return APSPriorityDispatcherSyncTask();
}

void bufferedAudioEngine_Finalize(const void *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CMNotificationCenterGetDefaultLocalCenter();
  FigNotificationCenterRemoveWeakListener();
  CMNotificationCenterGetDefaultLocalCenter();
  FigNotificationCenterRemoveWeakListeners();
  if (!APSSettingsIsFeatureEnabled())
  {
    uint64_t v3 = *(void **)(DerivedStorage + 584);
    if (v3)
    {
      uint64_t v4 = *MEMORY[0x1E4F49FD8];
      uint64_t v5 = *MEMORY[0x1E4F1CFC8];
      do
      {
        uint64_t v6 = (void *)*v3;
        uint64_t v7 = v3[2];
        uint64_t v8 = *(void *)(CMBaseObjectGetVTable() + 8);
        if (v8) {
          uint64_t v9 = v8;
        }
        else {
          uint64_t v9 = 0;
        }
        dispatch_queue_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 56);
        if (v10) {
          v10(v7, v4, v5);
        }
        CMTime v11 = (const void *)v3[2];
        if (v11) {
          CFRelease(v11);
        }
        CMTime v12 = (const void *)v3[31];
        if (v12) {
          CFRelease(v12);
        }
        free(v3);
        --*(_DWORD *)(DerivedStorage + 592);
        uint64_t v3 = v6;
      }
      while (v6);
    }
  }
  uint64_t v13 = *(const void **)(DerivedStorage + 368);
  if (v13)
  {
    CFRelease(v13);
    *(void *)(DerivedStorage + 368) = 0;
  }
  uint64_t v14 = *(const void **)(DerivedStorage + 440);
  if (v14)
  {
    CFRelease(v14);
    *(void *)(DerivedStorage + 440) = 0;
  }
  CFTypeRef v15 = *(NSObject **)(DerivedStorage + 424);
  if (v15)
  {
    dispatch_release(v15);
    *(void *)(DerivedStorage + 424) = 0;
  }
  uint64_t v16 = *(NSObject **)(DerivedStorage + 344);
  if (v16)
  {
    dispatch_release(v16);
    *(void *)(DerivedStorage + 344) = 0;
  }
  uint64_t v17 = *(NSObject **)(DerivedStorage + 352);
  if (v17)
  {
    dispatch_release(v17);
    *(void *)(DerivedStorage + 352) = 0;
  }
  bufferedAudioEngine_tearDownResumedStateAndStructuresInternal(a1, 0);
  uint64_t v18 = *(void *)(DerivedStorage + 328);
  if (v18)
  {
    uint64_t v19 = *(void *)(CMBaseObjectGetVTable() + 16);
    uint64_t v20 = v19 ? v19 : 0;
    int v21 = *(void (**)(uint64_t, const void *))(v20 + 88);
    if (v21) {
      v21(v18, a1);
    }
  }
  if (*(void *)(DerivedStorage + 456))
  {
    APSTimedInfoManagerSuspend();
    int v22 = *(const void **)(DerivedStorage + 456);
    if (v22)
    {
      CFRelease(v22);
      *(void *)(DerivedStorage + 456) = 0;
    }
  }
  long long v23 = *(const void **)(DerivedStorage + 952);
  if (v23)
  {
    CFRelease(v23);
    *(void *)(DerivedStorage + 952) = 0;
  }
  BOOL v24 = *(const void **)(DerivedStorage + 960);
  if (v24)
  {
    CFRelease(v24);
    *(void *)(DerivedStorage + 960) = 0;
  }
  CFAllocatorRef v25 = *(const void **)(DerivedStorage + 536);
  if (v25)
  {
    CFRelease(v25);
    *(void *)(DerivedStorage + 536) = 0;
  }
  double v26 = *(const void **)(DerivedStorage + 448);
  if (v26)
  {
    CFRelease(v26);
    *(void *)(DerivedStorage + 448) = 0;
  }
  CFMutableArrayRef v27 = *(const void **)(DerivedStorage + 560);
  if (v27)
  {
    CFRelease(v27);
    *(void *)(DerivedStorage + 560) = 0;
  }
  int v28 = *(const void **)(DerivedStorage + 568);
  if (v28)
  {
    CFRelease(v28);
    *(void *)(DerivedStorage + 568) = 0;
  }
  uint64_t v29 = *(const void **)(DerivedStorage + 792);
  if (v29)
  {
    CFRelease(v29);
    *(void *)(DerivedStorage + 792) = 0;
  }
  uint64_t v30 = *(const void **)(DerivedStorage + 544);
  if (v30)
  {
    CFRelease(v30);
    *(void *)(DerivedStorage + 544) = 0;
  }
  CFMutableDictionaryRef v31 = *(const void **)(DerivedStorage + 552);
  if (v31)
  {
    CFRelease(v31);
    *(void *)(DerivedStorage + 552) = 0;
  }
  CFMutableDictionaryRef v32 = *(const void **)(DerivedStorage + 360);
  if (v32)
  {
    CFRelease(v32);
    *(void *)(DerivedStorage + 360) = 0;
  }
  int v33 = *(const void **)(DerivedStorage + 376);
  if (v33)
  {
    CFRelease(v33);
    *(void *)(DerivedStorage + 376) = 0;
  }
  uint64_t v34 = *(const void **)(DerivedStorage + 384);
  if (v34)
  {
    CFRelease(v34);
    *(void *)(DerivedStorage + 384) = 0;
  }
  uint64_t v35 = *(const void **)(DerivedStorage + 1024);
  if (v35)
  {
    CFRelease(v35);
    *(void *)(DerivedStorage + 1024) = 0;
  }
  uint64_t v36 = *(const void **)(DerivedStorage + 1168);
  if (v36)
  {
    CFRelease(v36);
    *(void *)(DerivedStorage + 1168) = 0;
  }
  char v37 = *(const void **)(DerivedStorage + 488);
  if (v37)
  {
    CFRelease(v37);
    *(void *)(DerivedStorage + 488) = 0;
  }
  uint64_t v38 = *(const void **)(DerivedStorage + 496);
  if (v38)
  {
    CFRelease(v38);
    *(void *)(DerivedStorage + 496) = 0;
  }
  long long v39 = *(const void **)(DerivedStorage + 504);
  if (v39)
  {
    CFRelease(v39);
    *(void *)(DerivedStorage + 504) = 0;
  }
  uint64_t v40 = *(const void **)(DerivedStorage + 512);
  if (v40)
  {
    CFRelease(v40);
    *(void *)(DerivedStorage + 512) = 0;
  }
  uint64_t v41 = *(const void **)(DerivedStorage + 1120);
  if (v41)
  {
    CFRelease(v41);
    *(void *)(DerivedStorage + 1120) = 0;
  }
  CFTypeRef v42 = *(const void **)(DerivedStorage + 1112);
  if (v42)
  {
    CFRelease(v42);
    *(void *)(DerivedStorage + 1112) = 0;
  }
  if (APSSettingsIsFeatureEnabled())
  {
    long long v43 = *(const void **)(DerivedStorage + 1680);
    if (v43)
    {
      CFRelease(v43);
      *(void *)(DerivedStorage + 1680) = 0;
    }
  }
  bufferedAudioEngine_releaseCryptors((uint64_t)a1, 0);
  CMTime v44 = *(const void **)(DerivedStorage + 1136);
  if (v44)
  {
    CFRelease(v44);
    *(void *)(DerivedStorage + 1136) = 0;
  }
  bufferedAudioEngine_releaseMagicCookies((uint64_t)a1, 0);
  CMTime v45 = *(const void **)(DerivedStorage + 976);
  if (v45)
  {
    CFRelease(v45);
    *(void *)(DerivedStorage + 976) = 0;
  }
  int v46 = *(const void **)(DerivedStorage + 576);
  if (v46)
  {
    CFRelease(v46);
    *(void *)(DerivedStorage + 576) = 0;
  }
  CFTypeRef v47 = *(const void **)(DerivedStorage + 944);
  if (v47)
  {
    CFRelease(v47);
    *(void *)(DerivedStorage + 944) = 0;
  }
  uint64_t v48 = *(const void **)(DerivedStorage + 888);
  if (v48)
  {
    CFRelease(v48);
    *(void *)(DerivedStorage + 888) = 0;
  }
  long long v49 = *(const void **)(DerivedStorage + 328);
  if (v49)
  {
    CFRelease(v49);
    *(void *)(DerivedStorage + 328) = 0;
  }
  long long v50 = *(const void **)(DerivedStorage + 8);
  if (v50)
  {
    CFRelease(v50);
    *(void *)(DerivedStorage + 8) = 0;
  }
  if (gLogCategory_APAudioEngineBuffered <= 50
    && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
  {
    if (a1) {
      CMBaseObjectGetDerivedStorage();
    }
    LogPrintF();
  }
}

__CFString *bufferedAudioEngine_CopyDebugDescription()
{
  CFMutableArrayRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0);
  CFStringAppendFormat(Mutable, 0, @"<APAudioEngineBuffered>");
  return Mutable;
}

uint64_t bufferedAudioEngine_CopyProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioEngineBuffered <= 30
    && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
  {
    if (a1) {
      CMBaseObjectGetDerivedStorage();
    }
    LogPrintF();
  }
  if (a2 && a4)
  {
    uint64_t v7 = APSPriorityDispatcherSyncTask();
    if (v7) {
      APSLogErrorAt();
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294951815;
  }
  return v7;
}

uint64_t bufferedAudioEngine_SetProperty(uint64_t a1, uint64_t a2)
{
  CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioEngineBuffered <= 30
    && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
  {
    if (a1) {
      CMBaseObjectGetDerivedStorage();
    }
    LogPrintF();
  }
  if (a2)
  {
    uint64_t v4 = APSPriorityDispatcherSyncTask();
    if (v4) {
      APSLogErrorAt();
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294951815;
  }
  return v4;
}

uint64_t bufferedAudioEngine_invalidateInternal(uint64_t *a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioEngineBuffered <= 40
    && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
  {
    if (*a1) {
      CMBaseObjectGetDerivedStorage();
    }
    LogPrintF();
  }
  if (!APSSettingsIsFeatureEnabled())
  {
    while (*(void *)(DerivedStorage + 584))
      bufferedAudioEngine_removeHose(*a1);
  }
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 16);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *(void (**)(uint64_t, void, unsigned char *(*)(), void))(v5 + 16);
  if (v6) {
    v6(v3, 0, bufferedAudioEngine_invalidateInternalCompletion, 0);
  }
  else {
    *(unsigned char *) CMBaseObjectGetDerivedStorage() = 1;
  }
  return 0;
}

uint64_t bufferedAudioEngine_removeHose(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(void *)(DerivedStorage + 584)) {
    goto LABEL_31;
  }
  HoseDecriptorFromHose = bufferedAudioEngine_getHoseDecriptorFromHose();
  if (!HoseDecriptorFromHose)
  {
    if (gLogCategory_APAudioEngineBuffered <= 50
      && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
    {
      if (a1) {
        CMBaseObjectGetDerivedStorage();
      }
      LogPrintF();
    }
LABEL_59:
    uint64_t v29 = 0;
    goto LABEL_60;
  }
  uint64_t v4 = HoseDecriptorFromHose;
  bufferedAudioEngine_reportAndResetRTCBufferLevelAndUnderrunDataForAllExistingHoses(a1);
  uint64_t v5 = CFStringCopyUTF8CString();
  if (!v5)
  {
    uint64_t v7 = *v4;
    uint64_t v6 = (void *)v4[1];
    if (v6)
    {
      *uint64_t v6 = v7;
      uint64_t v7 = *v4;
      if (!*v4)
      {
LABEL_7:
        uint64_t v8 = v4[2];
        uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 8);
        if (v9) {
          uint64_t v10 = v9;
        }
        else {
          uint64_t v10 = 0;
        }
        CMTime v11 = *(void (**)(uint64_t, void, void))(v10 + 56);
        if (v11) {
          v11(v8, *MEMORY[0x1E4F49FD8], *MEMORY[0x1E4F1CFC8]);
        }
        if (*((unsigned char *)v4 + 24)) {
          *(unsigned char *)(DerivedStorage + 1080) = 0;
        }
        CMTime v12 = (const void *)v4[35];
        if (v12)
        {
          CFRelease(v12);
          v4[35] = 0;
        }
        uint64_t v13 = (const void *)v4[36];
        if (v13)
        {
          CFRelease(v13);
          v4[36] = 0;
        }
        uint64_t v14 = (const void *)v4[2];
        if (v14)
        {
          CFRelease(v14);
          void v4[2] = 0;
        }
        CFTypeRef v15 = (const void *)v4[31];
        if (v15) {
          CFRelease(v15);
        }
        free(v4);
        --*(_DWORD *)(DerivedStorage + 592);
        if (gLogCategory_APAudioEngineBuffered <= 40
          && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
        {
          if (a1) {
            CMBaseObjectGetDerivedStorage();
          }
          LogPrintF();
        }
LABEL_31:
        bufferedAudioEngine_updateStartWatermarkTime(a1);
        uint64_t v16 = (unsigned char *)CMBaseObjectGetDerivedStorage();
        CFTypeRef cf = 0;
        unsigned int valuePtr = 0;
        if (!*v16)
        {
          uint64_t v17 = v16;
          unsigned int CFPreferenceNumberWithDefault = FigGetCFPreferenceNumberWithDefault();
          uint64_t v19 = (void *)*((void *)v17 + 73);
          if (v19)
          {
            uint64_t v20 = *MEMORY[0x1E4F49F90];
            do
            {
              uint64_t v21 = v19[2];
              uint64_t v22 = *(void *)(CMBaseObjectGetVTable() + 8);
              if (v22) {
                uint64_t v23 = v22;
              }
              else {
                uint64_t v23 = 0;
              }
              BOOL v24 = *(uint64_t (**)(uint64_t, uint64_t, void, CFTypeRef *))(v23 + 48);
              if (v24)
              {
                int v25 = v24(v21, v20, 0, &cf);
                CFTypeRef v26 = cf;
                if (v25 || !cf) {
                  goto LABEL_44;
                }
                CFTypeID v27 = CFGetTypeID(cf);
                if (v27 == CFNumberGetTypeID())
                {
                  CFNumberGetValue((CFNumberRef)cf, kCFNumberSInt32Type, &valuePtr);
                  if (CFPreferenceNumberWithDefault <= valuePtr) {
                    unsigned int CFPreferenceNumberWithDefault = valuePtr;
                  }
                }
              }
              CFTypeRef v26 = cf;
LABEL_44:
              if (v26)
              {
                CFRelease(v26);
                CFTypeRef cf = 0;
              }
              unsigned int valuePtr = 0;
              uint64_t v19 = (void *)*v19;
            }
            while (v19);
          }
          if (CFPreferenceNumberWithDefault >= 0x753000) {
            int v28 = 7680000;
          }
          else {
            int v28 = CFPreferenceNumberWithDefault;
          }
          *((_DWORD *)v17 + 162) = v28;
          if (gLogCategory_APAudioEngineBuffered <= 50
            && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
          {
            if (a1) {
              CMBaseObjectGetDerivedStorage();
            }
            LogPrintF();
          }
          if (cf) {
            CFRelease(cf);
          }
        }
        goto LABEL_59;
      }
    }
    else
    {
      *(void *)(DerivedStorage + 584) = v7;
      if (!v7) {
        goto LABEL_7;
      }
    }
    *(void *)(v7 + 8) = v6;
    goto LABEL_7;
  }
  uint64_t v29 = v5;
  APSLogErrorAt();
LABEL_60:
  if (!*(_DWORD *)(DerivedStorage + 592))
  {
    *(_WORD *)(DerivedStorage + 800) = 0;
    *(unsigned char *)(DerivedStorage + 596) = 0;
  }
  return v29;
}

unsigned char *bufferedAudioEngine_invalidateInternalCompletion()
{
  uint64_t result = (unsigned char *)CMBaseObjectGetDerivedStorage();
  *uint64_t result = 1;
  return result;
}

void *bufferedAudioEngine_getHoseDecriptorFromHose()
{
  uint64_t v0 = (void *)(CMBaseObjectGetDerivedStorage() + 584);
  do
    uint64_t v0 = (void *)*v0;
  while (v0 && !FigCFEqual());
  return v0;
}

void bufferedAudioEngine_reportAndResetRTCBufferLevelAndUnderrunDataForAllExistingHoses(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v3 = *(void *)(DerivedStorage + 584);
  if (*(void *)(DerivedStorage + 1176)) {
    BOOL v4 = v3 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    uint64_t v22 = a1;
    while (!*(void *)(v3 + 304))
    {
LABEL_87:
      uint64_t v3 = *(void *)v3;
      if (!v3) {
        return;
      }
    }
    bufferedAudioEngine_cancelRTCUnderrunForHose(a1, v3);
    *(void *)(v3 + 360) = mach_absolute_time();
    if (gLogCategory_APAudioEngineBuffered <= 30
      && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
    {
      if (a1) {
        CMBaseObjectGetDerivedStorage();
      }
      LogPrintF();
    }
    if (*(void *)(CMBaseObjectGetDerivedStorage() + 1176) && (unint64_t)UpTicksToSeconds() >= 6)
    {
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v5, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
      if (Mutable)
      {
        CFMutableDictionaryRef v7 = Mutable;
        if (!*(void *)(v3 + 304) || (uint64_t v8 = APSStatsHistogramCopyValuesAsRTCString()) == 0)
        {
          APSLogErrorAt();
          uint64_t v20 = v7;
LABEL_76:
          CFRelease(v20);
          goto LABEL_77;
        }
        uint64_t v9 = (const void *)v8;
        uint64_t v10 = (const void *)UpTicksToMilliseconds();
        if (v10)
        {
          Uuint64_t Int64 = (const void *)FigCFNumberCreateUInt64();
          if (UInt64)
          {
            CMTime time = *(CMTime *)(v3 + 396);
            CMTimeGetSeconds(&time);
            CFTypeRef cf = (CFTypeRef)FigCFNumberCreateFloat64();
            if (cf)
            {
              if (*(unsigned char *)(v3 + 432))
              {
                *(_OWORD *)&time.int value = *(_OWORD *)(v3 + 420);
                CMTimeEpoch v12 = *(void *)(v3 + 436);
              }
              else
              {
                *(_OWORD *)&time.int value = *MEMORY[0x1E4F1FA48];
                CMTimeEpoch v12 = *(void *)(MEMORY[0x1E4F1FA48] + 16);
              }
              time.CMTimeEpoch epoch = v12;
              CMTimeGetSeconds(&time);
              uint64_t Float64 = FigCFNumberCreateFloat64();
              if (Float64)
              {
                CFTypeRef v25 = (CFTypeRef)Float64;
                CMTime v28 = *(CMTime *)(v3 + 444);
                CMTimeGetSeconds(&v28);
                uint64_t v14 = FigCFNumberCreateFloat64();
                if (v14)
                {
                  CFTypeRef v27 = (CFTypeRef)v14;
                  uint64_t v15 = FigCFNumberCreateFloat64();
                  if (v15)
                  {
                    CFTypeRef v26 = (CFTypeRef)v15;
                    uint64_t v16 = FigCFNumberCreateFloat64();
                    if (v16)
                    {
                      CFTypeRef v24 = (CFTypeRef)v16;
                      uint64_t v17 = (const void *)FigCFNumberCreateFloat64();
                      if (v17)
                      {
                        uint64_t v18 = (const void *)FigCFNumberCreateFloat64();
                        if (v18)
                        {
                          uint64_t v19 = FigCFNumberCreateFloat64();
                          if (v19)
                          {
                            uint64_t v10 = (const void *)FigCFNumberCreateFloat64();
                            if (v10)
                            {
                              CMTime v28 = *(CMTime *)(v3 + 396);
                              CMTimeGetSeconds(&v28);
                              FigCFDictionarySetUInt32();
                              FigCFDictionarySetValue();
                              FigCFDictionarySetValue();
                              FigCFDictionarySetValue();
                              FigCFDictionarySetValue();
                              FigCFDictionarySetValue();
                              FigCFDictionarySetValue();
                              FigCFDictionarySetUInt32();
                              FigCFDictionarySetValue();
                              FigCFDictionarySetValue();
                              FigCFDictionarySetValue();
                              FigCFDictionarySetValue();
                              FigCFDictionarySetValue();
                              FigCFDictionarySetValue();
                              FigCFDictionarySetValue();
                              FigCFDictionarySetValue();
                              FigCFDictionarySetValue();
                              a1 = v22;
                              if (gLogCategory_APAudioEngineBuffered <= 50)
                              {
                                if (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize())
                                {
                                  if (v22) {
                                    CMBaseObjectGetDerivedStorage();
                                  }
                                  LogPrintF();
                                }
                                if (gLogCategory_APAudioEngineBuffered <= 50)
                                {
                                  if (gLogCategory_APAudioEngineBuffered != -1
                                    || _LogCategory_Initialize())
                                  {
                                    if (v22) {
                                      CMBaseObjectGetDerivedStorage();
                                    }
                                    LogPrintF();
                                  }
                                  if (gLogCategory_APAudioEngineBuffered <= 50
                                    && (gLogCategory_APAudioEngineBuffered != -1
                                     || _LogCategory_Initialize()))
                                  {
                                    if (v22) {
                                      CMBaseObjectGetDerivedStorage();
                                    }
                                    LogPrintF();
                                  }
                                }
                              }
                              APSRTCReportingAgentSendEvent();
                              goto LABEL_56;
                            }
                            APSLogErrorAt();
                          }
                          else
                          {
                            APSLogErrorAt();
                            uint64_t v10 = 0;
                          }
                          goto LABEL_105;
                        }
                        APSLogErrorAt();
LABEL_104:
                        uint64_t v10 = 0;
                        uint64_t v19 = 0;
LABEL_105:
                        a1 = v22;
                        goto LABEL_56;
                      }
                      APSLogErrorAt();
LABEL_103:
                      uint64_t v18 = 0;
                      goto LABEL_104;
                    }
                    APSLogErrorAt();
LABEL_102:
                    CFTypeRef v24 = 0;
                    uint64_t v17 = 0;
                    goto LABEL_103;
                  }
                  APSLogErrorAt();
LABEL_100:
                  CFTypeRef v26 = 0;
                  goto LABEL_102;
                }
                APSLogErrorAt();
LABEL_98:
                CFTypeRef v27 = 0;
                goto LABEL_100;
              }
              APSLogErrorAt();
            }
            else
            {
              APSLogErrorAt();
              CFTypeRef cf = 0;
            }
            CFTypeRef v25 = 0;
            goto LABEL_98;
          }
          APSLogErrorAt();
          CFTypeRef cf = 0;
          CFTypeRef v24 = 0;
          CFTypeRef v25 = 0;
          CFTypeRef v26 = 0;
          CFTypeRef v27 = 0;
          uint64_t v17 = 0;
          uint64_t v18 = 0;
          uint64_t v10 = 0;
        }
        else
        {
          APSLogErrorAt();
          Uuint64_t Int64 = 0;
          CFTypeRef cf = 0;
          CFTypeRef v24 = 0;
          CFTypeRef v25 = 0;
          CFTypeRef v26 = 0;
          CFTypeRef v27 = 0;
          uint64_t v17 = 0;
          uint64_t v18 = 0;
        }
        uint64_t v19 = 0;
LABEL_56:
        CFRelease(v7);
        CFRelease(v9);
        if (UInt64) {
          CFRelease(UInt64);
        }
        if (cf) {
          CFRelease(cf);
        }
        if (v25) {
          CFRelease(v25);
        }
        if (v27) {
          CFRelease(v27);
        }
        if (v26) {
          CFRelease(v26);
        }
        if (v24) {
          CFRelease(v24);
        }
        if (v17) {
          CFRelease(v17);
        }
        if (v18) {
          CFRelease(v18);
        }
        if (v10) {
          CFRelease(v10);
        }
        if (!v19) {
          goto LABEL_77;
        }
        uint64_t v20 = (const void *)v19;
        goto LABEL_76;
      }
      APSLogErrorAt();
    }
LABEL_77:
    if (gLogCategory_APAudioEngineBuffered <= 30
      && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
    {
      if (a1) {
        CMBaseObjectGetDerivedStorage();
      }
      LogPrintF();
    }
    uint64_t v21 = *(const void **)(v3 + 304);
    if (v21)
    {
      CFRelease(v21);
      *(void *)(v3 + 304) = 0;
    }
    bufferedAudioEngine_resetAllRTCDataForHose(a1, v3);
    goto LABEL_87;
  }
}

void bufferedAudioEngine_cancelRTCUnderrunForHose(uint64_t a1, uint64_t a2)
{
  int v12 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CMTime v11 = *(CMTime *)*(void *)&MEMORY[0x1E4F1FA48];
  long long v5 = *MEMORY[0x1E4F1F9F8];
  *(_OWORD *)&v10.int value = *MEMORY[0x1E4F1F9F8];
  CMTimeEpoch v6 = *(void *)(MEMORY[0x1E4F1F9F8] + 16);
  v10.CMTimeEpoch epoch = v6;
  if (a2 && *(void *)(DerivedStorage + 1176) && (*(unsigned char *)(a2 + 380) & 1) != 0)
  {
    long long v7 = v5;
    bufferedAudioEngine_getCurrentRemoteMediaTimeInternal(&v12, &v10);
    if (v12)
    {
      APSLogErrorAt();
    }
    else
    {
      CMTime lhs = v10;
      CMTime rhs = *(CMTime *)(a2 + 368);
      CMTimeSubtract(&v11, &lhs, &rhs);
      if (gLogCategory_APAudioEngineBuffered <= 50
        && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
      {
        if (a1) {
          CMBaseObjectGetDerivedStorage();
        }
        CMTime lhs = v10;
        CMTimeGetSeconds(&lhs);
        CMTime lhs = v11;
        CMTimeGetSeconds(&lhs);
        LogPrintF();
      }
      CMTime lhs = v11;
      bufferedAudioEngine_updateRTCUnderrunStatisticsForHose(a1, a2, &lhs);
      *(_OWORD *)(a2 + 368) = v7;
      *(void *)(a2 + 384) = v6;
    }
  }
}

double bufferedAudioEngine_resetAllRTCDataForHose(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2)
  {
    if (*(void *)(DerivedStorage + 1176))
    {
      *(void *)(a2 + 352) = mach_absolute_time();
      *(void *)(a2 + 296) = mach_absolute_time();
      *(_DWORD *)(a2 + 392) = 0;
      uint64_t v5 = MEMORY[0x1E4F1F9F8];
      long long v6 = *MEMORY[0x1E4F1F9F8];
      *(_OWORD *)(a2 + 368) = *MEMORY[0x1E4F1F9F8];
      uint64_t v7 = *(void *)(v5 + 16);
      *(void *)(a2 + 384) = v7;
      uint64_t v8 = MEMORY[0x1E4F1FA48];
      long long v9 = *MEMORY[0x1E4F1FA48];
      *(_OWORD *)(a2 + 396) = *MEMORY[0x1E4F1FA48];
      uint64_t v10 = *(void *)(v8 + 16);
      *(void *)(a2 + 412) = v10;
      *(_OWORD *)(a2 + 420) = v6;
      *(void *)(a2 + 436) = v7;
      *(_OWORD *)(a2 + 444) = v9;
      *(void *)(a2 + 460) = v10;
      *(void *)(a2 + 472) = 0;
      *(void *)(a2 + 480) = 0;
      *(void *)(a2 + 312) = 0x7FF0000000000000;
      double result = 0.0;
      *(_OWORD *)(a2 + 320) = 0u;
      *(_OWORD *)(a2 + 336) = 0u;
    }
  }
  return result;
}

void bufferedAudioEngine_getCurrentRemoteMediaTimeInternal(int *a1@<X1>, CMTime *a2@<X8>)
{
  uint64_t v4 = MEMORY[0x1E4F1F9F8];
  *(_OWORD *)&a2->int value = *MEMORY[0x1E4F1F9F8];
  a2->CMTimeEpoch epoch = *(void *)(v4 + 16);
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CMBaseObjectGetDerivedStorage();
  if (*(_DWORD *)(DerivedStorage + 804) == 1937011316)
  {
    long long v6 = *(OpaqueCMTimebase **)(DerivedStorage + 792);
    if (!v6 || (CMTimebaseGetTime(a2, v6), (a2->flags & 0x1D) != 1))
    {
LABEL_20:
      APSLogErrorAt();
      int IsFeatureEnabled = APSSignalErrorAt();
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v7 = DerivedStorage + 724;
    if ((*(_DWORD *)(DerivedStorage + 736) & 1) == 0) {
      uint64_t v7 = DerivedStorage + 700;
    }
    CMTimeEpoch v8 = *(void *)(v7 + 16);
    *(_OWORD *)&a2->int value = *(_OWORD *)v7;
    a2->CMTimeEpoch epoch = v8;
    if ((a2->flags & 0x1D) != 1) {
      goto LABEL_20;
    }
  }
  int IsFeatureEnabled = APSSettingsIsFeatureEnabled();
  if (IsFeatureEnabled)
  {
    CFAllocatorRef v10 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    CMTime v16 = *a2;
    CFDictionaryRef v11 = CMTimeCopyAsDictionary(&v16, v10);
    uint64_t CMBaseObject = APAudioHoseManagerBufferedGetCMBaseObject(*(void *)(DerivedStorage + 1680));
    uint64_t v13 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v13) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    uint64_t v15 = *(uint64_t (**)(uint64_t, __CFString *, CFDictionaryRef))(v14 + 56);
    if (v15)
    {
      int IsFeatureEnabled = v15(CMBaseObject, @"CurrentRemoteMediaTime", v11);
      if (!a1) {
        goto LABEL_17;
      }
    }
    else
    {
      int IsFeatureEnabled = -12782;
      if (!a1) {
        goto LABEL_17;
      }
    }
LABEL_16:
    *a1 = IsFeatureEnabled;
    goto LABEL_17;
  }
LABEL_21:
  CFDictionaryRef v11 = 0;
  if (a1) {
    goto LABEL_16;
  }
LABEL_17:
  if (v11) {
    CFRelease(v11);
  }
}

void bufferedAudioEngine_updateRTCUnderrunStatisticsForHose(uint64_t a1, uint64_t a2, CMTime *a3)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2)
  {
    if (*(void *)(DerivedStorage + 1176))
    {
      CMTime lhs = *(CMTime *)(a2 + 396);
      CMTime v13 = *a3;
      CMTimeAdd(&time, &lhs, &v13);
      *(CMTime *)(a2 + 396) = time;
      CMTime lhs = *(CMTime *)(a2 + 420);
      CMTime v13 = *a3;
      CMTimeMinimum(&time, &lhs, &v13);
      *(CMTime *)(a2 + 420) = time;
      CMTime lhs = *(CMTime *)(a2 + 444);
      CMTime v13 = *a3;
      CMTimeMaximum(&time, &lhs, &v13);
      HIDWORD(v6) = HIDWORD(time.value);
      *(CMTime *)(a2 + 444) = time;
      double v7 = *(double *)(a2 + 480);
      LODWORD(v6) = *(_DWORD *)(a2 + 392);
      double v8 = (double)v6;
      CMTime time = *a3;
      Float64 Seconds = CMTimeGetSeconds(&time);
      LODWORD(v10) = *(_DWORD *)(a2 + 392);
      *(Float64 *)(a2 + 480) = (Seconds + v7 * v8) / (double)v10;
      CMTime time = *a3;
      Float64 v11 = CMTimeGetSeconds(&time);
      LODWORD(v12) = *(_DWORD *)(a2 + 392);
      *(double *)(a2 + 472) = *(double *)(a2 + 472) + (v11 - *(double *)(a2 + 472)) / (double)v12;
    }
  }
}

void bufferedAudioEngine_tearDownResumedStateAndStructuresInternal(const void *a1, int a2)
{
  uint64_t v86 = *MEMORY[0x1E4F143B8];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v5 = CMBaseObjectGetDerivedStorage();
  if (*(void *)(v5 + 1672))
  {
    APSPriorityDispatchSourceCancel();
    CFRelease(*(CFTypeRef *)(v5 + 1672));
    *(void *)(v5 + 1672) = 0;
  }
  uint64_t v6 = CMBaseObjectGetDerivedStorage();
  if (*(void *)(v6 + 472))
  {
    APSPriorityDispatchSourceCancel();
    CFRelease(*(CFTypeRef *)(v6 + 472));
    *(void *)(v6 + 472) = 0;
  }
  *(unsigned char *)(v6 + 480) = 0;
  double v7 = *(opaqueCMBufferQueue **)(DerivedStorage + 1112);
  if (v7)
  {
    CMBufferQueueReset(v7);
    *(void *)(DerivedStorage + 1128) = 0;
  }
  double v8 = *(const void **)(DerivedStorage + 528);
  if (v8)
  {
    CFRelease(v8);
    *(void *)(DerivedStorage + 528) = 0;
  }
  APMessageRingBufferedFlush(*(void *)(DerivedStorage + 560), 0, 0);
  long long v9 = *(const void **)(DerivedStorage + 560);
  if (v9)
  {
    CFRelease(v9);
    *(void *)(DerivedStorage + 560) = 0;
  }
  unint64_t v10 = *(const void **)(DerivedStorage + 568);
  if (v10)
  {
    CFRelease(v10);
    *(void *)(DerivedStorage + 568) = 0;
  }
  uint64_t v11 = MEMORY[0x1E4F1FA48];
  long long v12 = *MEMORY[0x1E4F1FA48];
  *(_OWORD *)(DerivedStorage + 676) = *MEMORY[0x1E4F1FA48];
  uint64_t v13 = *(void *)(v11 + 16);
  *(void *)(DerivedStorage + 692) = v13;
  *(_OWORD *)(DerivedStorage + 700) = v12;
  *(void *)(DerivedStorage + 716) = v13;
  uint64_t v14 = MEMORY[0x1E4F1F9F8];
  long long v15 = *MEMORY[0x1E4F1F9F8];
  *(_OWORD *)(DerivedStorage + 724) = *MEMORY[0x1E4F1F9F8];
  CMTimeEpoch v16 = *(void *)(v14 + 16);
  *(void *)(DerivedStorage + 740) = v16;
  *(_OWORD *)(DerivedStorage + 652) = v15;
  *(void *)(DerivedStorage + 668) = v16;
  *(void *)(DerivedStorage + 1052) = v16;
  long long v77 = v15;
  *(_OWORD *)(DerivedStorage + 1036) = v15;
  bufferedAudioEngine_setTranscodeIsRestingAndUpdateConsumer((uint64_t)a1, 0);
  uint64_t v17 = *(const void **)(DerivedStorage + 920);
  if (v17)
  {
    CFRelease(v17);
    *(void *)(DerivedStorage + 920) = 0;
  }
  uint64_t v18 = *(const void **)(DerivedStorage + 928);
  if (v18)
  {
    CFRelease(v18);
    *(void *)(DerivedStorage + 928) = 0;
  }
  APSTimedInfoManagerSuspend();
  CMNotificationCenterGetDefaultLocalCenter();
  FigNotificationCenterRemoveWeakListener();
  uint64_t v19 = *(const void **)(DerivedStorage + 456);
  if (v19)
  {
    CFRelease(v19);
    *(void *)(DerivedStorage + 456) = 0;
  }
  uint64_t v20 = *(const void **)(DerivedStorage + 952);
  if (v20)
  {
    CFRelease(v20);
    *(void *)(DerivedStorage + 952) = 0;
  }
  uint64_t v21 = *(const void **)(DerivedStorage + 960);
  if (v21)
  {
    CFRelease(v21);
    *(void *)(DerivedStorage + 960) = 0;
  }
  uint64_t v22 = *(const void **)(DerivedStorage + 792);
  if (v22)
  {
    CFRelease(v22);
    *(void *)(DerivedStorage + 792) = 0;
  }
  *(void *)(DerivedStorage + 808) = 0;
  CFArrayRemoveAllValues(*(CFMutableArrayRef *)(DerivedStorage + 1168));
  *(_WORD *)(DerivedStorage + 800) = 0;
  *(unsigned char *)(DerivedStorage + 596) = 0;
  *(_OWORD *)(DerivedStorage + 1000) = v77;
  *(void *)(DerivedStorage + 1016) = v16;
  CFArrayRemoveAllValues(*(CFMutableArrayRef *)(DerivedStorage + 1024));
  *(unsigned char *)(DerivedStorage + 760) = 0;
  *(void *)(DerivedStorage + 816) = 0xBFF0000000000000;
  *(unsigned char *)(DerivedStorage + 802) = 0;
  *(unsigned char *)(DerivedStorage + 856) = 0;
  *(_OWORD *)(DerivedStorage + 1084) = v77;
  *(void *)(DerivedStorage + 1100) = v16;
  *(unsigned char *)(DerivedStorage + 520) = 0;
  bufferedAudioEngine_releaseCryptors((uint64_t)a1, 0);
  *(void *)(DerivedStorage + 1144) = 0;
  bufferedAudioEngine_releaseMagicCookies((uint64_t)a1, 0);
  uint64_t v23 = *(const void **)(DerivedStorage + 968);
  if (v23)
  {
    CFRelease(v23);
    *(void *)(DerivedStorage + 968) = 0;
  }
  bufferedAudioEngine_updatePlaybackState((uint64_t)a1, 1852990835);
  if (*(void *)(DerivedStorage + 872))
  {
    if (gLogCategory_APAudioEngineBuffered <= 50
      && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
    {
      if (a1) {
        CMBaseObjectGetDerivedStorage();
      }
      LogPrintF();
    }
    bufferedAudioEngine_callSetRateAndAnchorTimeClientCompletionCallback(a1, 4294949716, MEMORY[0x1E4F1FA48], MEMORY[0x1E4F1F9F8], 0);
    *(void *)(DerivedStorage + 872) = 0;
    *(void *)(DerivedStorage + 880) = 0;
  }
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveObserver(DarwinNotifyCenter, a1, @"com.apple.mobileipod-prefsChanged", 0);
  if (a2)
  {
    uint64_t v25 = CMBaseObjectGetDerivedStorage();
    *(_OWORD *)&v80.int value = v77;
    v80.CMTimeEpoch epoch = v16;
    if (*(void *)(v25 + 1176))
    {
      uint64_t v26 = v25;
      HostTimeClocCFIndex k = CMClockGetHostTimeClock();
      CMClockGetTime(&v80, HostTimeClock);
      CMTime lhs = v80;
      CMTime rhs = *(CMTime *)(v26 + 1184);
      CMTimeSubtract(&time, &lhs, &rhs);
      lhs.int value = time.value;
      lhs.uint64_t timescale = time.timescale;
      if (time.flags)
      {
        time.int value = lhs.value;
        time.uint64_t timescale = lhs.timescale;
        double Seconds = CMTimeGetSeconds(&time);
        CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
        if (Mutable)
        {
          uint64_t v29 = Mutable;
          if (Seconds != 0.0)
          {
            CMTime time = *(CMTime *)(v26 + 1240);
            CMTimeGetSeconds(&time);
          }
LABEL_44:
          FigCFDictionarySetInt64();
          FigCFDictionarySetInt64();
          FigCFDictionarySetInt64();
          FigCFDictionarySetInt64();
          FigCFDictionarySetInt64();
          FigCFDictionarySetInt64();
          CMTime time = *(CMTime *)(v26 + 1280);
          CMTimeGetSeconds(&time);
          FigCFDictionarySetInt64();
          CMTime time = *(CMTime *)(v26 + 1304);
          CMTimeGetSeconds(&time);
          FigCFDictionarySetInt64();
          CFDictionarySetValue(v29, @"sessionType", @"AudioBuffered");
          uint64_t v32 = CMBaseObjectGetDerivedStorage();
          time.int value = 0;
          LODWORD(rhs.CFDictionarySetValue(theDict, key, value) = 0;
          uint64_t v73 = v26;
          uint64_t v74 = v29;
          if (*(void *)(v32 + 1176))
          {
            uint64_t v33 = v32;
            uint64_t v34 = a1;
            uint64_t v35 = (const void *)APSThreadSafeDictionaryCopyMutableDictionary();
            CFArrayRef v36 = (const __CFArray *)FigCFDictionaryCopyArrayOfValues();
            CFIndex Count = CFArrayGetCount(v36);
            if (Count >= 1)
            {
              CFIndex v38 = Count;
              for (CFIndex i = 0; i != v38; ++i)
              {
                CFArrayGetValueAtIndex(v36, i);
                uint64_t v40 = APSThreadSafeDictionaryCopyMutableDictionary();
                if (!v40) {
                  break;
                }
                uint64_t v41 = (__CFDictionary *)v40;
                if (FigCFDictionaryGetInt64IfPresent())
                {
                  FigCFDictionaryGetInt32IfPresent();
                  mach_absolute_time();
                  UpTicksToSeconds();
                  FigCFDictionarySetInt32();
                  CFDictionaryRemoveValue(v41, @"AudioStreamLastStartTime");
                }
                CFArrayAppendValue(*(CFMutableArrayRef *)(v33 + 1272), v41);
                CFRelease(v41);
              }
            }
            if (v36) {
              CFRelease(v36);
            }
            a1 = v34;
            uint64_t v26 = v73;
            uint64_t v29 = v74;
            if (v35) {
              CFRelease(v35);
            }
          }
          FigCFDictionarySetValue();
          CFAllocatorRef v42 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
          CFMutableArrayRef v43 = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D510]);
          if (v43)
          {
            CFDictionaryApplyFunction(*(CFDictionaryRef *)(v26 + 1328), (CFDictionaryApplierFunction)bufferedAudioEngine_audioFormatDurationDictToArrayForRTC, v43);
            FigCFDictionarySetValue();
            CFMutableArrayRef v44 = CFArrayCreateMutable(v42, 0, MEMORY[0x1E4F1D510]);
            if (v44)
            {
              CFDictionaryApplyFunction(*(CFDictionaryRef *)(v26 + 1336), (CFDictionaryApplierFunction)bufferedAudioEngine_audioFormatDurationDictToArrayForRTC, v44);
              FigCFDictionarySetValue();
              CFMutableArrayRef v45 = CFArrayCreateMutable(v42, 0, MEMORY[0x1E4F1D510]);
              if (v45)
              {
                CFDictionaryApplyFunction(*(CFDictionaryRef *)(v26 + 1344), (CFDictionaryApplierFunction)bufferedAudioEngine_audioFormatDurationDictToArrayForRTC, v45);
                FigCFDictionarySetValue();
                FigCFDictionarySetInt64();
                FigCFDictionarySetInt64();
                FigCFDictionarySetValue();
                CFMutableArrayRef v46 = CFArrayCreateMutable(v42, 0, MEMORY[0x1E4F1D510]);
                if (v46)
                {
                  CFMutableArrayRef v47 = CFArrayCreateMutable(v42, 0, MEMORY[0x1E4F1D510]);
                  if (v47)
                  {
                    int v70 = v45;
                    CFTypeRef v75 = v46;
                    uint64_t v76 = v47;
                    unsigned __int16 v71 = v44;
                    uint64_t v72 = (uint64_t)a1;
                    uint64_t v48 = CMBaseObjectGetDerivedStorage();
                    time.int value = 0;
                    rhs.int value = 0;
                    uint64_t v83 = 0;
                    uint64_t v84 = 0;
                    uint64_t v81 = 0;
                    uint64_t v82 = 0;
                    if (*(void *)(v48 + 1176))
                    {
                      uint64_t v49 = v48;
                      CFIndex v50 = CFArrayGetCount(*(CFArrayRef *)(v48 + 1392));
                      if (v50 >= 1)
                      {
                        CFIndex v51 = v50;
                        for (CFIndex j = 0; v51 != j; ++j)
                        {
                          CFArrayGetValueAtIndex(*(CFArrayRef *)(v49 + 1392), j);
                          if (FigCFDictionaryGetInt64IfPresent()
                            && FigCFDictionaryGetInt64IfPresent()
                            && FigCFDictionaryGetInt64IfPresent())
                          {
                            CFAllocatorRef v53 = v42;
                            CFMutableDictionaryRef v54 = CFDictionaryCreateMutable(v42, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
                            if (!v54)
                            {
                              APSLogErrorAt();
                              break;
                            }
                            CFMutableDictionaryRef v55 = v54;
                            CFDictionaryGetInt64();
                            FigCFDictionarySetInt64();
                            UpTicksToMilliseconds();
                            FigCFDictionarySetInt64();
                            UpTicksToMilliseconds();
                            FigCFDictionarySetInt64();
                            FigCFDictionaryGetValue();
                            FigCFDictionarySetValue();
                            if (FigCFDictionaryGetInt64IfPresent()) {
                              FigCFDictionarySetInt64();
                            }
                            if (FigCFDictionaryGetInt64IfPresent()
                              && FigCFDictionaryGetInt64IfPresent())
                            {
                              UpTicksToMilliseconds();
                              FigCFDictionarySetInt64();
                              UpTicksToMilliseconds();
                              FigCFDictionarySetInt64();
                              long long v56 = v75;
                            }
                            else
                            {
                              long long v56 = v76;
                            }
                            UpTicksToMilliseconds();
                            FigCFDictionarySetInt64();
                            CFArrayAppendValue(v56, v55);
                            CFRelease(v55);
                            CFAllocatorRef v42 = v53;
                          }
                        }
                      }
                    }
                    uint64_t v29 = v74;
                    CFMutableArrayRef v46 = v75;
                    FigCFDictionarySetValue();
                    CGRect v57 = v76;
                    FigCFDictionarySetValue();
                    if (*(void *)(v73 + 1400))
                    {
                      mach_absolute_time();
                      *(void *)(v73 + 1408) += UpTicksToMilliseconds();
                    }
                    CFMutableArrayRef v44 = v71;
                    CFMutableArrayRef v45 = v70;
                    FigCFDictionarySetInt64();
                    FigCFDictionarySetInt32();
                    bufferedAudioEngine_updateActiveAudioEngineCount(v72, 0);
                    APSRTCReportingAgentSendEvent();
                    if (gLogCategory_APAudioEngineBuffered <= 50
                      && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
                    {
                      if (v72) {
                        CMBaseObjectGetDerivedStorage();
                      }
                      LogPrintF();
                    }
                    goto LABEL_84;
                  }
                }
LABEL_122:
                CGRect v57 = 0;
LABEL_84:
                CFRelease(v29);
                if (v43) {
                  CFRelease(v43);
                }
                if (v44) {
                  CFRelease(v44);
                }
                if (v45) {
                  CFRelease(v45);
                }
                if (v46) {
                  CFRelease(v46);
                }
                if (v57) {
                  CFRelease(v57);
                }
                goto LABEL_94;
              }
LABEL_121:
              CFMutableArrayRef v46 = 0;
              goto LABEL_122;
            }
          }
          else
          {
            CFMutableArrayRef v44 = 0;
          }
          CFMutableArrayRef v45 = 0;
          goto LABEL_121;
        }
      }
      else
      {
        CFMutableDictionaryRef v28 = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
        if (v28)
        {
          uint64_t v29 = v28;
          goto LABEL_44;
        }
      }
    }
LABEL_94:
    APSNetworkClockReportRTCMetrics();
  }
  CGRect v58 = (void *)CMBaseObjectGetDerivedStorage();
  long long v59 = (const void *)v58[147];
  if (v59)
  {
    CFRelease(v59);
    v58[147] = 0;
  }
  long long v60 = (const void *)v58[158];
  if (v60)
  {
    CFRelease(v60);
    v58[158] = 0;
  }
  long long v61 = (const void *)v58[159];
  if (v61)
  {
    CFRelease(v61);
    v58[159] = 0;
  }
  long long v62 = (const void *)v58[166];
  if (v62)
  {
    CFRelease(v62);
    v58[166] = 0;
  }
  long long v63 = (const void *)v58[167];
  if (v63)
  {
    CFRelease(v63);
    v58[167] = 0;
  }
  uint64_t v64 = (const void *)v58[168];
  if (v64)
  {
    CFRelease(v64);
    v58[168] = 0;
  }
  uint64_t v65 = (const void *)v58[169];
  if (v65)
  {
    CFRelease(v65);
    v58[169] = 0;
  }
  uint64_t v66 = (const void *)v58[172];
  if (v66)
  {
    CFRelease(v66);
    v58[172] = 0;
  }
  CFTypeRef v67 = (const void *)v58[173];
  if (v67)
  {
    CFRelease(v67);
    v58[173] = 0;
  }
  uint64_t v68 = (const void *)v58[174];
  if (v68)
  {
    CFRelease(v68);
    v58[174] = 0;
  }
  uint64_t v69 = *(const void **)(DerivedStorage + 992);
  if (v69)
  {
    CFRelease(v69);
    *(void *)(DerivedStorage + 992) = 0;
  }
  *(_WORD *)(DerivedStorage + 466) = 0;
}

uint64_t bufferedAudioEngine_releaseCryptors(uint64_t a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CMTime v19 = *(CMTime *)*(void *)&MEMORY[0x1E4F1F9F8];
  CMTime v18 = v19;
  if (*(unsigned char *)DerivedStorage) {
    goto LABEL_27;
  }
  uint64_t v5 = DerivedStorage;
  CFIndex Count = CFDictionaryGetCount(*(CFDictionaryRef *)(DerivedStorage + 1136));
  if (Count < 1) {
    goto LABEL_27;
  }
  size_t v7 = Count;
  if (a2)
  {
    unsigned int Index = APMessageRingBufferedGetFirstValidReadIndex(*(void *)(v5 + 560), 0);
    APMessageRingBufferedGetMessageAtIndex(*(void *)(v5 + 560), Index, 0, (uint64_t)&v19, 0);
    if ((v19.flags & 1) == 0)
    {
      APSLogErrorAt();
LABEL_27:
      uint64_t v13 = 0;
      long long v9 = 0;
      unint64_t v10 = 0;
      goto LABEL_21;
    }
  }
  long long v9 = (const void **)malloc_type_calloc(v7, 8uLL, 0x6004044C4A2DFuLL);
  if (!v9)
  {
    APSLogErrorAt();
    unint64_t v10 = 0;
LABEL_25:
    uint64_t v13 = 4294951816;
    goto LABEL_21;
  }
  unint64_t v10 = (const void **)malloc_type_calloc(v7, 8uLL, 0x6004044C4A2DFuLL);
  if (!v10)
  {
    APSLogErrorAt();
    goto LABEL_25;
  }
  CFDictionaryGetKeysAndValues(*(CFDictionaryRef *)(v5 + 1136), v9, v10);
  uint64_t v11 = 0;
  int v15 = a2;
  while (1)
  {
    CMTimeMakeFromDictionary(&v18, (CFDictionaryRef)v10[v11]);
    if (a2)
    {
      CMTime time1 = v19;
      CMTime time2 = v18;
      if (CMTimeCompare(&time1, &time2) < 1) {
        goto LABEL_19;
      }
    }
    if (gLogCategory_APAudioEngineBuffered <= 50
      && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
    {
      if (a1) {
        CMBaseObjectGetDerivedStorage();
      }
      bufferedAudioEngine_getCryptorIDForCryptor((uint64_t)v9[v11]);
      LogPrintF();
      a2 = v15;
    }
    CMNotificationCenterGetDefaultLocalCenter();
    uint64_t v12 = FigNotificationCenterRemoveWeakListener();
    if (v12) {
      break;
    }
    CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(v5 + 1136), v9[v11]);
LABEL_19:
    if (v7 == ++v11)
    {
      uint64_t v13 = 0;
      goto LABEL_21;
    }
  }
  uint64_t v13 = v12;
  APSLogErrorAt();
LABEL_21:
  free(v9);
  free(v10);
  return v13;
}

uint64_t bufferedAudioEngine_releaseMagicCookies(uint64_t a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CMTime v20 = *(CMTime *)*(void *)&MEMORY[0x1E4F1F9F8];
  CMTime v19 = v20;
  if (*(unsigned char *)DerivedStorage
    || (uint64_t v5 = DerivedStorage, Count = CFDictionaryGetCount(*(CFDictionaryRef *)(DerivedStorage + 976)), Count < 1))
  {
    uint64_t v14 = 0;
    long long v9 = 0;
LABEL_27:
    uint64_t v11 = 0;
    goto LABEL_21;
  }
  size_t v7 = Count;
  if (a2)
  {
    unsigned int Index = APMessageRingBufferedGetFirstValidReadIndex(*(void *)(v5 + 560), 0);
    APMessageRingBufferedGetMessageAtIndex(*(void *)(v5 + 560), Index, 0, (uint64_t)&v20, 0);
    if ((v20.flags & 1) == 0)
    {
      uint64_t v14 = 0;
      long long v9 = 0;
      goto LABEL_26;
    }
  }
  long long v9 = (const void **)malloc_type_calloc(v7, 8uLL, 0x6004044C4A2DFuLL);
  if (!v9)
  {
    uint64_t v14 = 4294951816;
LABEL_26:
    APSLogErrorAt();
    goto LABEL_27;
  }
  unint64_t v10 = (const void **)malloc_type_calloc(v7, 8uLL, 0x6004044C4A2DFuLL);
  if (!v10)
  {
    uint64_t v14 = 4294951816;
    goto LABEL_26;
  }
  uint64_t v11 = v10;
  CFDictionaryGetKeysAndValues(*(CFDictionaryRef *)(v5 + 976), v9, v10);
  uint64_t v12 = 0;
  int v16 = a2;
  do
  {
    CMTimeMakeFromDictionary(&v19, (CFDictionaryRef)v11[v12]);
    if (!a2 || (int v13 = FigCFEqual(), time1 = v20, time2 = v19, CMTimeCompare(&time1, &time2) >= 1) && !v13)
    {
      if (gLogCategory_APAudioEngineBuffered <= 50
        && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
      {
        if (a1) {
          CMBaseObjectGetDerivedStorage();
        }
        bufferedAudioEngine_getMagicCookieIDForMagicCookieData((CFDataRef)v9[v12]);
        LogPrintF();
        a2 = v16;
      }
      CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(v5 + 976), v9[v12]);
    }
    ++v12;
  }
  while (v7 != v12);
  uint64_t v14 = 0;
LABEL_21:
  free(v9);
  free(v11);
  return v14;
}

void bufferedAudioEngine_endpointStreamSuspendedNotification(uint64_t a1, const void *a2, uint64_t a3, const void *a4, const void *a5)
{
  if (a2)
  {
    double v8 = (CFTypeRef *)malloc_type_malloc(0x18uLL, 0x60040149E097CuLL);
    if (v8)
    {
      long long v9 = v8;
      CFTypeRef *v8 = CFRetain(a2);
      if (a4) {
        CFTypeRef v10 = CFRetain(a4);
      }
      else {
        CFTypeRef v10 = 0;
      }
      v9[1] = v10;
      if (a5) {
        CFTypeRef v11 = CFRetain(a5);
      }
      else {
        CFTypeRef v11 = 0;
      }
      v9[2] = v11;
      CMBaseObjectGetDerivedStorage();
      if (APSDispatchSectionEnterWithPriorityDispatcher())
      {
        APSLogErrorAt();
        if (*v9) {
          CFRelease(*v9);
        }
        CFTypeRef v12 = v9[1];
        if (v12) {
          CFRelease(v12);
        }
        CFTypeRef v13 = v9[2];
        if (v13) {
          CFRelease(v13);
        }
        free(v9);
      }
    }
    else
    {
      APSLogErrorAt();
    }
  }
}

uint64_t bufferedAudioEngine_endpointStreamActiveConfigurationDidBecomeInvalidNotification(uint64_t a1, uint64_t a2)
{
  CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APAudioEngineBuffered <= 90
    && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
  {
    if (a2) {
      CMBaseObjectGetDerivedStorage();
    }
    LogPrintF();
  }
  CMNotificationCenterGetDefaultLocalCenter();
  return FigDispatchAsyncPostNotification();
}

void bufferedAudioEngine_endpointStreamSuspendedNotificationInternal(uint64_t a1)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CFTypeRef cf = 0;
  uint64_t v3 = *(void *)(DerivedStorage + 536);
  if (!v3 || v3 != *(void *)(a1 + 8)) {
    goto LABEL_15;
  }
  uint64_t CMBaseObject = FigEndpointStreamGetCMBaseObject();
  uint64_t v5 = *(void *)(CMBaseObjectGetVTable() + 8);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  size_t v7 = *(unsigned int (**)(uint64_t, __CFString *, void, CFTypeRef *))(v6 + 48);
  if (!v7) {
    goto LABEL_14;
  }
  CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  if (v7(CMBaseObject, @"HoseRegistrar", *MEMORY[0x1E4F1CF80], &cf)) {
    goto LABEL_14;
  }
  FigCFDictionaryGetValue();
  long long v9 = (const void *)*MEMORY[0x1E4F1CFD0];
  int v10 = FigCFEqual();
  int v11 = v10;
  if (cf == *(CFTypeRef *)a1 && !v10) {
    goto LABEL_15;
  }
  CMNotificationCenterGetDefaultLocalCenter();
  if (FigNotificationCenterRemoveWeakListeners())
  {
LABEL_14:
    APSLogErrorAt();
LABEL_15:
    CFTypeRef v13 = 0;
    goto LABEL_16;
  }
  if (v11)
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v8, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    CFTypeRef v13 = Mutable;
    if (!Mutable)
    {
      APSLogErrorAt();
      goto LABEL_16;
    }
    CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F328F0], v9);
  }
  else
  {
    CFTypeRef v13 = 0;
  }
  CMNotificationCenterGetDefaultLocalCenter();
  FigDispatchAsyncPostNotification();
  int v16 = *(const void **)(DerivedStorage + 536);
  if (v16)
  {
    CFRelease(v16);
    *(void *)(DerivedStorage + 536) = 0;
  }
LABEL_16:
  APSDispatchSectionLeave();
  if (cf) {
    CFRelease(cf);
  }
  if (*(void *)a1) {
    CFRelease(*(CFTypeRef *)a1);
  }
  uint64_t v14 = *(const void **)(a1 + 8);
  if (v14) {
    CFRelease(v14);
  }
  int v15 = *(const void **)(a1 + 16);
  if (v15) {
    CFRelease(v15);
  }
  if (v13) {
    CFRelease(v13);
  }
  free((void *)a1);
}

void bufferedAudioEngine_setTranscodeIsRestingAndUpdateConsumer(uint64_t a1, int a2)
{
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(unsigned __int8 *)(DerivedStorage + 1032) != a2)
  {
    uint64_t v4 = DerivedStorage;
    *(unsigned char *)(DerivedStorage + 1032) = a2;
    if (*(void *)(DerivedStorage + 1120))
    {
      if (a2)
      {
        CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
        CMTime time = *(CMTime *)*(void *)&MEMORY[0x1E4F1FA48];
        CFDictionaryRef v6 = CMTimeCopyAsDictionary(&time, v5);
        if (v6)
        {
          CFDictionaryRef v7 = v6;
          uint64_t v8 = *(void *)(v4 + 1120);
          uint64_t v9 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v9) {
            uint64_t v10 = v9;
          }
          else {
            uint64_t v10 = 0;
          }
          int v16 = *(unsigned int (**)(uint64_t, void, CFDictionaryRef))(v10 + 56);
          if (v16 && !v16(v8, *MEMORY[0x1E4F34680], v7)) {
            goto LABEL_21;
          }
          goto LABEL_20;
        }
      }
      else
      {
        CMTimeMake(&v26, 10000, 1000);
        CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
        CFDictionaryRef v12 = CMTimeCopyAsDictionary(&v26, (CFAllocatorRef)*MEMORY[0x1E4F1CF80]);
        if (v12)
        {
          CFDictionaryRef v7 = v12;
          uint64_t v13 = *(void *)(v4 + 1120);
          uint64_t v14 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v14) {
            uint64_t v15 = v14;
          }
          else {
            uint64_t v15 = 0;
          }
          uint64_t v17 = *(unsigned int (**)(uint64_t, void, CFDictionaryRef))(v15 + 56);
          if (v17)
          {
            if (!v17(v13, *MEMORY[0x1E4F34680], v7))
            {
              CMTimeMake(&v25, 2000, 1000);
              CFDictionaryRef v18 = CMTimeCopyAsDictionary(&v25, v11);
              if (v18)
              {
                CFDictionaryRef v19 = v18;
                uint64_t v20 = *(void *)(v4 + 1120);
                uint64_t v21 = *(void *)(CMBaseObjectGetVTable() + 8);
                if (v21) {
                  uint64_t v22 = v21;
                }
                else {
                  uint64_t v22 = 0;
                }
                CFTypeRef v24 = *(unsigned int (**)(uint64_t, void, CFDictionaryRef))(v22 + 56);
                if (!v24 || v24(v20, *MEMORY[0x1E4F34688], v19)) {
                  APSLogErrorAt();
                }
                CFRelease(v7);
                CFDictionaryRef v23 = v19;
                goto LABEL_22;
              }
            }
          }
LABEL_20:
          APSLogErrorAt();
LABEL_21:
          CFDictionaryRef v23 = v7;
LABEL_22:
          CFRelease(v23);
          return;
        }
      }
      APSLogErrorAt();
    }
  }
}

uint64_t bufferedAudioEngine_handleTimedInfoManagerNotification(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4, const void *a5)
{
  uint64_t result = CMBaseObjectGetDerivedStorage();
  if (a2)
  {
    bufferedAudioEngine_updateInternalBadgeInfoAndPostNotificationIfNecessary((uint64_t)a2, a5, 1);
    CFRetain(a2);
    if (a5) {
      CFRetain(a5);
    }
    return APSPriorityDispatcherAsync();
  }
  return result;
}

uint64_t bufferedAudioEngine_updatePlaybackState(uint64_t a1, int a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(_DWORD *)(DerivedStorage + 804) != a2)
  {
    uint64_t v5 = DerivedStorage;
    uint64_t v6 = LogCategoryCopyOSLogHandle();
    CFDictionaryRef v7 = (void *)v6;
    if (v6) {
      uint64_t v8 = v6;
    }
    else {
      uint64_t v8 = MEMORY[0x1E4F14500];
    }
    if (os_signpost_enabled(v8))
    {
      *(_DWORD *)buf = 136315138;
      *(void *)&CFTypeRef buf[4] = bufferedAudioEngine_playbackStateGetCString(a2);
      _os_signpost_emit_with_name_impl(&dword_1D0945000, v8, OS_SIGNPOST_EVENT, 0x2B1605B8uLL, "AIRPLAY_SIGNPOST_AUDIOENGINE_PLAY_STATE", "PlaybackState state=%s", buf, 0xCu);
    }
    if (v7) {
      os_release(v7);
    }
    CString = bufferedAudioEngine_playbackStateGetCString(a2);
    strncpy((char *)buf, CString, 8uLL);
    kdebug_trace();
    if (gLogCategory_APAudioEngineBuffered <= 50
      && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
    {
      if (a1) {
        CMBaseObjectGetDerivedStorage();
      }
      bufferedAudioEngine_playbackStateGetCString(*(_DWORD *)(v5 + 804));
      LogPrintF();
    }
    *(_DWORD *)(v5 + 804) = a2;
    bufferedAudioEngine_updateDataProcessingTargetQueueInternal(a1);
    if (!APSSettingsIsFeatureEnabled()) {
      bufferedAudioEngine_updateCriticalBufferingState(a1);
    }
    if (a2 == 1937010544)
    {
      bufferedAudioEngine_updateActiveAudioEngineCount(a1, 0);
    }
    else if (a2 == 1937011316)
    {
      bufferedAudioEngine_updateActiveAudioEngineCount(a1, 1);
      bufferedAudioEngine_reportPlayingAudioEngineEvent(a1);
    }
  }
  return CMBaseObjectGetDerivedStorage();
}

uint64_t bufferedAudioEngine_callSetRateAndAnchorTimeClientCompletionCallback(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5)
{
  if (a5) {
    CFRetain(a5);
  }
  CFRetain(a1);
  return APSDispatchAsyncFHelper();
}

void bufferedAudioEngine_updateInternalBadgeInfoAndPostNotificationIfNecessary(uint64_t a1, const void *a2, int a3)
{
  keys[1] = *(void **)MEMORY[0x1E4F143B8];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  uint64_t v6 = *(void **)(DerivedStorage + 584);
  FigCFDictionaryGetValue();
  if (FigCFEqual() || FigCFEqual())
  {
    if (!v6)
    {
LABEL_6:
      CFAllocatorRef v7 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
      keys[0] = @"ContentType";
      values = (void *)*MEMORY[0x1E4F49F30];
      uint64_t v8 = CFDictionaryCreate(v7, (const void **)keys, (const void **)&values, 1, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
LABEL_9:
      a2 = v8;
      goto LABEL_10;
    }
    while (!APSGetFBOPropertyInt64())
    {
      uint64_t v6 = (void *)*v6;
      if (!v6) {
        goto LABEL_6;
      }
    }
  }
  if (a2)
  {
    uint64_t v8 = (void *)CFRetain(a2);
    goto LABEL_9;
  }
LABEL_10:
  if (a3 || !FigCFEqual())
  {
    CMNotificationCenterGetDefaultLocalCenter();
    FigDispatchAsyncPostNotification();
  }
  uint64_t v9 = *(const void **)(DerivedStorage + 960);
  *(void *)(DerivedStorage + 960) = a2;
  if (a2) {
    CFRetain(a2);
  }
  if (v9) {
    CFRelease(v9);
  }
  if (a2) {
    CFRelease(a2);
  }
}

void __bufferedAudioEngine_handleTimedInfoManagerNotification_block_invoke(void *a1)
{
  if (*(void *)(a1[4] + 536))
  {
    uint64_t Value = FigCFDictionaryGetValue();
    uint64_t CMBaseObject = FigEndpointStreamGetCMBaseObject();
    uint64_t v4 = *(void *)(CMBaseObjectGetVTable() + 8);
    if (v4) {
      uint64_t v5 = v4;
    }
    else {
      uint64_t v5 = 0;
    }
    uint64_t v6 = *(void (**)(uint64_t, __CFString *, uint64_t))(v5 + 56);
    if (v6) {
      v6(CMBaseObject, @"ActiveBadgingFormatInfo", Value);
    }
  }
  else
  {
    APSLogErrorAt();
  }
  CFAllocatorRef v7 = (const void *)a1[5];
  if (v7) {
    CFRelease(v7);
  }
  uint64_t v8 = (const void *)a1[6];
  if (v8)
  {
    CFRelease(v8);
  }
}

const char *bufferedAudioEngine_playbackStateGetCString(int a1)
{
  if (a1 > 1937010792)
  {
    if (a1 > 1937011315)
    {
      if (a1 == 1937011316) {
        return "Started";
      }
      if (a1 == 1937207905) {
        return "Starting With Receiver Anchor";
      }
    }
    else
    {
      if (a1 == 1937010793) {
        return "Stopping";
      }
      if (a1 == 1937011305) {
        return "Starting";
      }
    }
  }
  else if (a1 > 1886614641)
  {
    if (a1 == 1886614642) {
      return "Priming Before Start";
    }
    if (a1 == 1937010544) {
      return "Stopped";
    }
  }
  else
  {
    if (a1 == 1852990835) {
      return "Not Resumed";
    }
    if (a1 == 1886547820) {
      return "Prerolling";
    }
  }
  return "Invalid";
}

void bufferedAudioEngine_updateDataProcessingTargetQueueInternal(uint64_t a1)
{
  keys[1] = *(void **)MEMORY[0x1E4F143B8];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  memset(&v19, 0, sizeof(v19));
  bufferedAudioEngine_getCurrentRemoteMediaTimeInternal(0, &v19);
  memset(&v18, 0, sizeof(v18));
  CMTime lhs = *(CMTime *)(DerivedStorage + 676);
  CMTime rhs = v19;
  CMTimeSubtract(&v18, &lhs, &rhs);
  if (bufferedAudioEngine_updateDataProcessingTargetQueueInternal_onceToken != -1) {
    dispatch_once(&bufferedAudioEngine_updateDataProcessingTargetQueueInternal_onceToken, &__block_literal_global_18);
  }
  if (*(unsigned char *)(DerivedStorage + 324))
  {
    CMBaseObjectGetDerivedStorage();
    if (gLogCategory_APAudioEngineBuffered <= 10
      && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
    {
      if (a1) {
        CMBaseObjectGetDerivedStorage();
      }
      CMTime lhs = v18;
      CMTimeGetSeconds(&lhs);
      CMTime lhs = *(CMTime *)(DerivedStorage + 676);
      CMTimeGetSeconds(&lhs);
      CMTime lhs = v19;
      CMTimeGetSeconds(&lhs);
      LogPrintF();
    }
    int v3 = *(_DWORD *)(DerivedStorage + 804);
    if (v3 == 1886547820
      || v3 == 1886614642
      && (*(unsigned char *)(DerivedStorage + 736) & 1) == 0
      && !bufferedAudioEngine_engineBufferedToStartWaterMark()
      || bufferedAudioEngine_updateDataProcessingTargetQueueInternal_urgentPriorityLimitMs >= 1
      && (CMTime lhs = v18,
          CMTimeGetSeconds(&lhs) < (double)bufferedAudioEngine_updateDataProcessingTargetQueueInternal_urgentPriorityLimitMs
                                 / 1000.0))
    {
      BOOL v4 = 0;
      int v5 = 36;
      int v6 = 1;
      goto LABEL_27;
    }
    if (bufferedAudioEngine_updateDataProcessingTargetQueueInternal_defaultPriorityLimitMs < 1
      || (CMTime lhs = v18,
          CMTimeGetSeconds(&lhs) >= (double)bufferedAudioEngine_updateDataProcessingTargetQueueInternal_defaultPriorityLimitMs
                                  / 1000.0))
    {
      int v5 = 37;
      if (*(_DWORD *)(DerivedStorage + 804) == 1937011316)
      {
        int v7 = APSIsAPMSpeaker();
        int v6 = 0;
        BOOL v4 = v7 == 0;
        if (v7) {
          int v5 = 43;
        }
        else {
          int v5 = 37;
        }
LABEL_27:
        if (*(_DWORD *)(DerivedStorage + 432) == v5) {
          return;
        }
        if (gLogCategory_APAudioEngineBuffered <= 50
          && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
        {
          if (a1) {
            CMBaseObjectGetDerivedStorage();
          }
          bufferedAudioEngine_engineBufferedToStartWaterMark();
          CMTime lhs = v18;
          CMTimeGetSeconds(&lhs);
          bufferedAudioEngine_playbackStateGetCString(*(_DWORD *)(DerivedStorage + 804));
          LogPrintF();
        }
        CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
        keys[0] = *(void **)MEMORY[0x1E4F328E8];
        uint64_t v9 = (void **)MEMORY[0x1E4F328D0];
        uint64_t v10 = (void **)MEMORY[0x1E4F328C0];
        if (!v4) {
          uint64_t v10 = (void **)MEMORY[0x1E4F328C8];
        }
        if (!v6) {
          uint64_t v9 = v10;
        }
        values = *v9;
        CFDictionaryRef v11 = CFDictionaryCreate(v8, (const void **)keys, (const void **)&values, 1, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
        CMNotificationCenterGetDefaultLocalCenter();
        FigDispatchAsyncPostNotification();
        APSPriorityDispatcherSetPriority();
        if (*(void *)(DerivedStorage + 472)) {
          APSPriorityDispatchSourceSetPriority();
        }
        *(_DWORD *)(DerivedStorage + 432) = v5;
        int64_t v12 = bufferedAudioEngine_updateDataProcessingTargetQueueInternal_defaultPriorityLimitMs;
        uint64_t v13 = CMBaseObjectGetDerivedStorage();
        memset(&lhs, 0, sizeof(lhs));
        bufferedAudioEngine_getCurrentRemoteMediaTimeInternal(0, &lhs);
        memset(&rhs, 0, sizeof(rhs));
        CMTime time = *(CMTime *)(v13 + 676);
        CMTime v22 = lhs;
        CMTimeSubtract(&rhs, &time, &v22);
        CMBaseObjectGetDerivedStorage();
        if (!*(void *)(v13 + 1672)) {
          goto LABEL_74;
        }
        int v14 = *(_DWORD *)(v13 + 432);
        if (v14 != 36)
        {
          if (v14 == 43 || v14 == 37)
          {
            if (rhs.flags)
            {
              memset(&time, 0, sizeof(time));
              CMTimeMake(&v22, v12, 1000);
              CMTime time1 = rhs;
              CMTimeSubtract(&time, &time1, &v22);
              CMTime time1 = time;
              CMTime time2 = *(CMTime *)*(void *)&MEMORY[0x1E4F1FA48];
              if (CMTimeCompare(&time1, &time2) < 1)
              {
                unsigned int v15 = 100;
              }
              else
              {
                CMTime time1 = time;
                unsigned int v15 = (CMTimeGetSeconds(&time1) * 1000.0) + 100;
              }
              goto LABEL_57;
            }
          }
          else if (gLogCategory_APAudioEngineBuffered <= 90 {
                 && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
          }
          {
            if (a1) {
              CMBaseObjectGetDerivedStorage();
            }
            LogPrintF();
          }
        }
        unsigned int v15 = 5000;
LABEL_57:
        if (!*(unsigned char *)(v13 + 480))
        {
          CMTime time = rhs;
          if ((int)v12 < (int)(CMTimeGetSeconds(&time) * 1000.0)) {
            unsigned int v15 = 5000;
          }
        }
        if (v15 >= 0x1388) {
          unsigned int v16 = 5000;
        }
        else {
          unsigned int v16 = v15;
        }
        if (v16 <= 0x64) {
          unsigned int v17 = 100;
        }
        else {
          unsigned int v17 = v16;
        }
        if (gLogCategory_APAudioEngineBuffered <= 50
          && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
        {
          if (a1) {
            CMBaseObjectGetDerivedStorage();
          }
          LogPrintF();
        }
        dispatch_time(0, 1000000 * v17);
        APSPriorityDispatchSourceSetTimer();
LABEL_74:
        kdebug_trace();
        if (v11) {
          CFRelease(v11);
        }
        return;
      }
      int v6 = 0;
    }
    else
    {
      int v6 = 0;
      int v5 = 37;
    }
    BOOL v4 = 1;
    goto LABEL_27;
  }
}

uint64_t bufferedAudioEngine_updateCriticalBufferingState(uint64_t a1)
{
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  int v34 = 0;
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  CMTime v33 = *(CMTime *)*(void *)&MEMORY[0x1E4F1FA48];
  long long v29 = *(_OWORD *)&v33.value;
  CMTime v32 = v33;
  CMTimeEpoch epoch = v33.epoch;
  int v3 = *(_DWORD *)(DerivedStorage + 804);
  BOOL v5 = v3 == 1937011305 || v3 == 1937011316;
  if (bufferedAudioEngine_updateCriticalBufferingState_sHoseShouldReportCriticalOnce != -1) {
    dispatch_once(&bufferedAudioEngine_updateCriticalBufferingState_sHoseShouldReportCriticalOnce, &__block_literal_global_213);
  }
  bufferedAudioEngine_getCurrentRemoteMediaTimeInternal(&v34, &v33);
  if (v34)
  {
    uint64_t result = APSLogErrorAt();
    if (gLogCategory_APAudioEngineBuffered <= 50)
    {
      if (gLogCategory_APAudioEngineBuffered != -1 || (uint64_t result = _LogCategory_Initialize(), result))
      {
        if (a1) {
          CMBaseObjectGetDerivedStorage();
        }
        return LogPrintF();
      }
    }
  }
  else
  {
    uint64_t v6 = *(void *)(DerivedStorage + 584);
    if (v6)
    {
      char v27 = 0;
      uint64_t v26 = *MEMORY[0x1E4F49FC8];
      uint64_t v7 = *MEMORY[0x1E4F1CFD0];
      uint64_t v8 = *MEMORY[0x1E4F1CFC8];
      while (1)
      {
        if (*(unsigned char *)(v6 + 25))
        {
          bufferedAudioEngine_getLastDeliveredRemoteMediaTimeForHose(v6, (__n128 *)&lhs);
          CMTimeValue value = lhs.value;
          CMTimeFlags flags = lhs.flags;
          CMTimeScale timescale = lhs.timescale;
          CMTimeEpoch v10 = lhs.epoch;
          if (lhs.flags) {
            goto LABEL_16;
          }
        }
        else
        {
          CMTimeValue value = *(void *)(v6 + 32);
          CMTimeFlags flags = *(_DWORD *)(v6 + 44);
          CMTimeScale timescale = *(_DWORD *)(v6 + 40);
          CMTimeEpoch v10 = *(void *)(v6 + 48);
          if (flags)
          {
LABEL_16:
            lhs.CMTimeValue value = value;
            lhs.CMTimeScale timescale = timescale;
            lhs.CMTimeFlags flags = flags;
            lhs.CMTimeEpoch epoch = v10;
            CMTime rhs = v33;
            CMTimeSubtract(&v32, &lhs, &rhs);
            goto LABEL_17;
          }
        }
        *(_OWORD *)&v32.CMTimeValue value = v29;
        v32.CMTimeEpoch epoch = epoch;
LABEL_17:
        CMTime lhs = v32;
        CMTime rhs = *(CMTime *)(DerivedStorage + 184);
        int32_t v11 = CMTimeCompare(&lhs, &rhs);
        *(CMTime *)(v6 + 112) = v32;
        BOOL v12 = v11 < 0 && v5;
        if (v12 && !*(unsigned char *)(v6 + 24))
        {
          if (APSSettingsIsFeatureEnabled())
          {
            *(unsigned char *)(v6 + 256) = 1;
            if (gLogCategory_APAudioEngineBuffered <= 30
              && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
            {
              if (a1) {
                CMBaseObjectGetDerivedStorage();
              }
              LogPrintF();
            }
            *(_WORD *)(v6 + 56) = 256;
          }
          char v27 = 1;
        }
        if (bufferedAudioEngine_updateCriticalBufferingState_sHoseShouldReportCritical)
        {
          int v13 = bufferedAudioEngine_updateCriticalBufferingState_sHoseShouldReportCritical > 1 && v12;
          if (*(_DWORD *)(DerivedStorage + 804) == 1886614642) {
            int v14 = 1;
          }
          else {
            int v14 = v13;
          }
          uint64_t v15 = *(void *)(v6 + 16);
          if (v14) {
            uint64_t v16 = v7;
          }
          else {
            uint64_t v16 = v8;
          }
          uint64_t v17 = *(void *)(CMBaseObjectGetVTable() + 8);
          if (v17) {
            uint64_t v18 = v17;
          }
          else {
            uint64_t v18 = 0;
          }
          CMTime v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 56);
          if (v19) {
            v19(v15, v26, v16);
          }
          if (gLogCategory_APAudioEngineBuffered <= 30
            && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
          {
            if (a1) {
              CMBaseObjectGetDerivedStorage();
            }
            LogPrintF();
          }
        }
        uint64_t v6 = *(void *)v6;
        if (!v6) {
          goto LABEL_57;
        }
      }
    }
    char v27 = 0;
LABEL_57:
    char v20 = v27;
    *(unsigned char *)(DerivedStorage + 596) = v27;
    if (APSSettingsIsFeatureEnabled())
    {
      uint64_t v21 = *(uint64_t **)(DerivedStorage + 584);
      if (v21)
      {
        int v22 = 0;
        CFDictionaryRef v23 = &unk_1EB9F5000;
        do
        {
          if (v20)
          {
            if (!*((unsigned char *)v21 + 24) && !*((unsigned char *)v21 + 56))
            {
              CMTime lhs = *(CMTime *)(v21 + 14);
              CMTime rhs = *(CMTime *)(DerivedStorage + 208);
              if (CMTimeCompare(&lhs, &rhs) >= 1)
              {
                *((unsigned char *)v21 + 56) = 1;
                int v24 = v23[560];
                if (v24 <= 50 && (v24 != -1 || _LogCategory_Initialize()))
                {
                  if (a1) {
                    CMBaseObjectGetDerivedStorage();
                  }
                  CMTime lhs = *(CMTime *)(v21 + 14);
                  CMTimeGetSeconds(&lhs);
                  LogPrintF();
                  char v20 = v27;
                  CFDictionaryRef v23 = (_DWORD *)&unk_1EB9F5000;
                }
              }
            }
          }
          else
          {
            CMTime lhs = *(CMTime *)(v21 + 14);
            CMTime rhs = *(CMTime *)(DerivedStorage + 184);
            if (CMTimeCompare(&lhs, &rhs) >= 1 && *((unsigned char *)v21 + 256))
            {
              *((unsigned char *)v21 + 256) = 0;
              int v22 = 1;
            }
          }
          uint64_t v21 = (uint64_t *)*v21;
        }
        while (v21);
        if (v22) {
          bufferedAudioEngine_wakeUpHoses();
        }
      }
    }
    uint64_t result = *(void *)(DerivedStorage + 992);
    if (result)
    {
      uint64_t result = APSWirelessCoexManagerNotifyCriticalBuffering();
      int v34 = result;
      if (result)
      {
        uint64_t result = APSLogErrorAt();
        if (gLogCategory_APAudioEngineBuffered <= 50)
        {
          if (gLogCategory_APAudioEngineBuffered != -1 || (uint64_t result = _LogCategory_Initialize(), result))
          {
            if (a1) {
              CMBaseObjectGetDerivedStorage();
            }
            return LogPrintF();
          }
        }
      }
    }
  }
  return result;
}

void bufferedAudioEngine_updateActiveAudioEngineCount(uint64_t a1, int a2)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  uint64_t DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(void *)(DerivedStorage + 1176))
  {
    uint64_t v5 = *(void *)(DerivedStorage + 416);
    if (bufferedAudioEngine_getActiveAudioEngineSet(a1, v5 == 1))
    {
      if (a2) {
        APSThreadSafeSetSetValue();
      }
      else {
        APSThreadSafeSetRemoveValue();
      }
      unsigned int Count = APSThreadSafeSetGetCount();
      uint64_t v7 = LogCategoryCopyOSLogHandle();
      uint64_t v8 = (void *)v7;
      if (v7) {
        uint64_t v9 = v7;
      }
      else {
        uint64_t v9 = MEMORY[0x1E4F14500];
      }
      BOOL v10 = os_signpost_enabled(v9);
      if (v5 == 1)
      {
        if (v10)
        {
          int32_t v11 = "increment";
          if (!a2) {
            int32_t v11 = "decrement";
          }
          *(_DWORD *)buf = 136315394;
          int v14 = v11;
          __int16 v15 = 1024;
          unsigned int v16 = Count;
          _os_signpost_emit_with_name_impl(&dword_1D0945000, v9, OS_SIGNPOST_EVENT, 0x2B1605C0uLL, "AIRPLAY_SIGNPOST_AUDIOENGINE_ACTIVE_COUNT_SIDEPLAY", "Active AudioEngine primary usage for SidePlay %s, now count=%u", buf, 0x12u);
        }
        if (v8) {
          os_release(v8);
        }
        if (gLogCategory_APAudioEngineBuffered <= 30
          && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
        {
          if (!a1) {
            goto LABEL_43;
          }
          goto LABEL_40;
        }
      }
      else
      {
        if (v10)
        {
          BOOL v12 = "increment";
          if (!a2) {
            BOOL v12 = "decrement";
          }
          *(_DWORD *)buf = 136315394;
          int v14 = v12;
          __int16 v15 = 1024;
          unsigned int v16 = Count;
          _os_signpost_emit_with_name_impl(&dword_1D0945000, v9, OS_SIGNPOST_EVENT, 0x2B1605BCuLL, "AIRPLAY_SIGNPOST_AUDIOENGINE_ACTIVE_COUNT_MEDIA", "Active AudioEngine primary usage for Media %s, now count=%u", buf, 0x12u);
        }
        if (v8) {
          os_release(v8);
        }
        if (gLogCategory_APAudioEngineBuffered <= 30
          && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
        {
          if (a1) {
            CMBaseObjectGetDerivedStorage();
          }
          LogPrintF();
        }
        if (Count >= 0x2B1605BD
          && gLogCategory_APAudioEngineBuffered <= 90
          && (gLogCategory_APAudioEngineBuffered != -1 || _LogCategory_Initialize()))
        {
          if (!a1)
          {
LABEL_43:
            LogPrintF();
            return;
          }
LABEL_40:
          CMBaseObjectGetDerivedStorage();
          goto LABEL_43;
        }
      }
    }
  }
}

void bufferedAudioEngine_reportPlayingAudioEngineEvent(uint64_t a1)
{
  if (*(void *)(CMBaseObjectGetDerivedStorage() + 1176))
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (Mutable)
    {
      int v3 = Mutable;
      CFDictionarySetValue(Mutable, @"sessionType", @"AudioBuffered");
      bufferedAudioEngine_getActiveAudioEngineSet(a1, 0);
      APSThreadSafeSetGetCount();
      FigCFDictionarySetInt32();
      bufferedAudioEngine_getActiveAudioEngineSet(a1, 1);
      APSThreadSafeSetGetCount();
      FigCFDictionarySetInt32();
      APSRTCReportingAgentSendEvent();
      CFRelease(v3);
    }
    else
    {
      APSLogErrorAt();
    }
  }
}