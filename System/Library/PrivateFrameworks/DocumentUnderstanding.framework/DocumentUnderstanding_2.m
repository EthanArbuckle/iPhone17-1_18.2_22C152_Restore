void type metadata accessor for FilesDocumentIngester.DocumentUIElement()
{
  sub_2368432F0();
}

unint64_t sub_2368C941C()
{
  unint64_t result = qword_268899DB8;
  if (!qword_268899DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899DB8);
  }
  return result;
}

unint64_t sub_2368C946C()
{
  unint64_t result = qword_268899DC0;
  if (!qword_268899DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899DC0);
  }
  return result;
}

unint64_t sub_2368C94BC()
{
  unint64_t result = qword_268899DC8;
  if (!qword_268899DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899DC8);
  }
  return result;
}

unint64_t sub_2368C950C()
{
  unint64_t result = qword_268899DD0;
  if (!qword_268899DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899DD0);
  }
  return result;
}

unint64_t sub_2368C955C()
{
  unint64_t result = qword_268899DD8;
  if (!qword_268899DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899DD8);
  }
  return result;
}

unint64_t sub_2368C95AC()
{
  unint64_t result = qword_268899DE0;
  if (!qword_268899DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899DE0);
  }
  return result;
}

unint64_t sub_2368C95FC()
{
  unint64_t result = qword_268899DE8;
  if (!qword_268899DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899DE8);
  }
  return result;
}

unint64_t sub_2368C964C()
{
  unint64_t result = qword_268899DF0;
  if (!qword_268899DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899DF0);
  }
  return result;
}

unint64_t sub_2368C969C()
{
  unint64_t result = qword_268899DF8;
  if (!qword_268899DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899DF8);
  }
  return result;
}

unint64_t sub_2368C96EC()
{
  unint64_t result = qword_268899E00;
  if (!qword_268899E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899E00);
  }
  return result;
}

unint64_t sub_2368C973C()
{
  unint64_t result = qword_268899E08;
  if (!qword_268899E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899E08);
  }
  return result;
}

unint64_t sub_2368C978C()
{
  unint64_t result = qword_268899E10;
  if (!qword_268899E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899E10);
  }
  return result;
}

unint64_t sub_2368C97D8()
{
  unint64_t result = qword_268899E20;
  if (!qword_268899E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899E20);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FilesDocumentIngester.DocumentUIElement.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2368C98F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilesDocumentIngester.DocumentUIElement.CodingKeys()
{
  return &type metadata for FilesDocumentIngester.DocumentUIElement.CodingKeys;
}

unint64_t sub_2368C992C()
{
  unint64_t result = qword_268899E28;
  if (!qword_268899E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899E28);
  }
  return result;
}

unint64_t sub_2368C997C()
{
  unint64_t result = qword_268899E30;
  if (!qword_268899E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899E30);
  }
  return result;
}

unint64_t sub_2368C99CC()
{
  unint64_t result = qword_268899E38;
  if (!qword_268899E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899E38);
  }
  return result;
}

uint64_t sub_2368C9A2C()
{
  return v0;
}

uint64_t sub_2368C9A44()
{
  return v0;
}

uint64_t sub_2368C9A5C()
{
  return v0;
}

void sub_2368C9A74(uint64_t a1@<X8>)
{
  *(void *)(v1 - 120) = a1;
  sub_2368C6BE4();
}

uint64_t sub_2368C9A98()
{
  return DUDocument.init(rawDocument:maxLength:)(v0, 5120);
}

uint64_t sub_2368C9AB8(void **a1)
{
  unsigned int v4 = *a1;
  return sub_236906B68(v2, v1, v4);
}

uint64_t sub_2368C9AF0()
{
  return 0;
}

uint64_t sub_2368C9B0C()
{
  return swift_beginAccess();
}

uint64_t sub_2368C9B28()
{
  uint64_t v2 = *(void *)(v0 - 344);
  unint64_t v3 = *(void *)(v0 - 312);
  return sub_2367BAA90(v2, v3);
}

uint64_t sub_2368C9B48()
{
  return sub_23697B88C();
}

uint64_t sub_2368C9BC4(uint64_t a1)
{
  *(void *)(v1 - 240) = a1;
  return v1 - 240;
}

void sub_2368C9BEC()
{
  uint64_t v2 = *(void **)(v0 - 328);
}

uint64_t sub_2368C9C14()
{
  return sub_2367B7028(v1, 0, 1, v0);
}

uint64_t sub_2368C9C34(float a1)
{
  *(void *)(v3 - 112) = v2;
  *uint64_t v1 = a1;
  *(void *)(v3 - 144) = v1 + 1;
  *(void *)(v3 - 136) = v1;
  return sub_23697A12C();
}

void sub_2368C9C60()
{
  *(void *)(v1 - 120) = v0;
}

uint64_t sub_2368C9C84(uint64_t a1)
{
  *(void *)(v1 + 104) = a1;
  return v1 + 104;
}

void sub_2368C9C98(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 336) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_2368C9CB8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  v7 = *(NSObject **)(v5 - 120);
  v8 = *(uint8_t **)(v5 - 136);
  _os_log_impl(a1, v7, v4, a4, v8, 0xCu);
}

uint64_t sub_2368C9CE0(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return sub_23697B50C();
}

uint64_t sub_2368C9D14()
{
  return 0;
}

uint64_t sub_2368C9D30()
{
  return sub_23697AD0C();
}

void sub_2368C9D58()
{
  JUMPOUT(0x237E06BC0);
}

void sub_2368C9D70()
{
  uint64_t v2 = *(void **)(v0 - 376);
}

uint64_t sub_2368C9D88()
{
  return sub_23697B1DC();
}

uint64_t sub_2368C9DA0()
{
  return v0;
}

void sub_2368C9DAC()
{
  *(void *)(v1 + 16) = v0;
  uint64_t v5 = v1 + 16 * v2;
  *(void *)(v5 + 32) = v3;
  *(void *)(v5 + 40) = v4;
}

uint64_t sub_2368C9DC4()
{
  return v0;
}

id sub_2368C9DDC()
{
  uint64_t v3 = *(void **)(v0 + 8 * v1 + 32);
  return v3;
}

void sub_2368C9DF4(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + a1) |= v4;
}

void sub_2368C9E1C()
{
  sub_2368C6BE4();
}

void sub_2368C9E38()
{
  sub_2368C6BE4();
}

uint64_t sub_2368C9E60@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2368C9E7C()
{
  return v0;
}

uint64_t sub_2368C9E88()
{
  return swift_arrayDestroy();
}

uint64_t sub_2368C9EA4()
{
  return swift_arrayDestroy();
}

uint64_t sub_2368C9EC0()
{
  return v0;
}

uint64_t sub_2368C9ED0()
{
  return v0;
}

uint64_t sub_2368C9EE0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2368C9EF8()
{
  return v0;
}

uint64_t sub_2368C9F24()
{
  return v0;
}

uint64_t sub_2368C9F38()
{
  return 0;
}

uint64_t sub_2368C9F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return a17;
}

void sub_2368C9F6C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_2368C9F8C()
{
  return v0;
}

uint64_t sub_2368C9FA0()
{
  return v0;
}

uint64_t sub_2368C9FB4()
{
  return swift_arrayDestroy();
}

void sub_2368C9FCC()
{
  *(void *)(v1 - 120) = v0;
}

void sub_2368C9FEC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_2368CA00C()
{
  return v0;
}

uint64_t sub_2368CA020()
{
  return v0;
}

uint64_t sub_2368CA02C(uint64_t a1)
{
  *(void *)(v1 - 224) = a1;
  return v1 - 224;
}

id DUCalendarEvent.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void DUStructuredEntity.__allocating_init<A>(proto:)()
{
  sub_2368D1790();
  uint64_t v212 = v3;
  uint64_t v213 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v200 = type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo();
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v9);
  sub_2367BB610();
  uint64_t v194 = v10;
  sub_2367D9914();
  MEMORY[0x270FA5388](v11);
  sub_2367E5460();
  uint64_t v193 = v12;
  uint64_t v13 = sub_2367B7DBC(&qword_268898130);
  uint64_t v14 = sub_2367BB430(v13);
  MEMORY[0x270FA5388](v14);
  sub_2367BB610();
  uint64_t v192 = v15;
  sub_2367D9914();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  sub_2368D18B0(v17, v18, v19, v20, v21, v22, v23, v24, v185);
  v198 = (int *)type metadata accessor for DocumentUnderstanding_ClientInterface_DisplayInfo(0);
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v25);
  sub_2367BB260();
  v191 = v26;
  uint64_t v27 = sub_2367B7DBC(&qword_268898128);
  uint64_t v28 = sub_2367BB430(v27);
  MEMORY[0x270FA5388](v28);
  uint64_t v190 = (uint64_t)&v185 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2367D9914();
  MEMORY[0x270FA5388](v30);
  sub_2367E5460();
  uint64_t v197 = v31;
  v196 = (int *)type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent(0);
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v32);
  sub_2367BB260();
  v189 = v33;
  uint64_t v34 = sub_2367B7DBC(&qword_268898140);
  uint64_t v35 = sub_2367BB430(v34);
  MEMORY[0x270FA5388](v35);
  uint64_t v188 = (uint64_t)&v185 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2367D9914();
  MEMORY[0x270FA5388](v37);
  sub_2367E5460();
  uint64_t v195 = v38;
  uint64_t v209 = type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntityLabel(0);
  sub_2367CD744();
  uint64_t v205 = v39;
  uint64_t v41 = MEMORY[0x270FA5388](v40);
  v43 = (char *)&v185 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v41);
  sub_236810108();
  uint64_t v206 = v44;
  sub_2367D9914();
  uint64_t v46 = MEMORY[0x270FA5388](v45);
  sub_2368D189C(v46, v47, v48, v49, v50, v51, v52, v53, v185);
  uint64_t v54 = sub_2367B7DBC(&qword_268899418);
  uint64_t v55 = sub_2367BB430(v54);
  MEMORY[0x270FA5388](v55);
  sub_2367CBF80();
  sub_2367CD744();
  uint64_t v57 = v56;
  MEMORY[0x270FA5388](v58);
  uint64_t v59 = sub_2368C9D14();
  uint64_t v60 = type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntity(v59);
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v61);
  sub_2367D9940();
  id v62 = objc_msgSend(objc_allocWithZone(v0), sel_init);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16))(v2, v8, v6);
  v63 = (char *)v62;
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v68 = sub_2368D15E4();
    sub_2367B7028(v68, v69, v70, v60);

    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v8, v6);
    sub_2367BAA28(v1, &qword_268899418);
LABEL_69:
    sub_236810340();
    return;
  }
  v203 = v63;
  uint64_t v207 = v57;
  uint64_t v186 = v6;
  uint64_t v187 = v8;
  sub_236833624(v1, 0);
  sub_2368D0DD8(v1, (uint64_t)v0, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntity);
  uint64_t v201 = *(int *)(v60 + 20);
  v64 = *(void **)((char *)v0 + v201);
  sub_2367BB188();
  unint64_t v65 = v64[3];
  v202 = v0;
  if (v65)
  {
    uint64_t v66 = v64[2];
    unint64_t v67 = v65;
  }
  else
  {
    uint64_t v66 = 0;
    unint64_t v67 = 0xE000000000000000;
  }
  v71 = &v203[OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_title];
  sub_2367BB248();
  *(void *)v71 = v66;
  *((void *)v71 + 1) = v67;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  if (v64[5])
  {
    uint64_t v72 = v64[4];
    unint64_t v73 = v64[5];
  }
  else
  {
    uint64_t v72 = 0;
    unint64_t v73 = 0xE000000000000000;
  }
  v74 = &v203[OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_type];
  sub_2367BB248();
  *(void *)v74 = v72;
  *((void *)v74 + 1) = v73;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v75 = v64[6];
  uint64_t v211 = MEMORY[0x263F8EE78];
  uint64_t v76 = *(void *)(v75 + 16);
  if (v76)
  {
    uint64_t v77 = v75 + ((*(unsigned __int8 *)(v205 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v205 + 80));
    uint64_t v78 = *(void *)(v205 + 72);
    uint64_t v204 = v75;
    uint64_t v205 = v78;
    swift_bridgeObjectRetain_n();
    do
    {
      uint64_t v79 = (uint64_t)v208;
      sub_2368D0E84(v77, (uint64_t)v208, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntityLabel);
      uint64_t v80 = v79;
      uint64_t v81 = v206;
      sub_2368D0E84(v80, v206, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntityLabel);
      v82 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DUStructuredExtractionLabel()), sel_init);
      sub_2368D0DD8(v81, (uint64_t)v43, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntityLabel);
      v83 = &v43[*(int *)(v209 + 20)];
      if (*((void *)v83 + 1))
      {
        uint64_t v84 = *(void *)v83;
        unint64_t v85 = *((void *)v83 + 1);
      }
      else
      {
        uint64_t v84 = 0;
        unint64_t v85 = 0xE000000000000000;
      }
      v86 = &v82[OBJC_IVAR____TtC21DocumentUnderstanding27DUStructuredExtractionLabel_labelName];
      sub_2367BB248();
      *(void *)v86 = v84;
      *((void *)v86 + 1) = v85;
      v87 = v82;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v88 = &v43[*(int *)(v209 + 24)];
      if (v88[8]) {
        double v89 = 0.0;
      }
      else {
        double v89 = *(double *)v88;
      }
      sub_2368D0E2C((uint64_t)v43, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntityLabel);
      v90 = (double *)&v87[OBJC_IVAR____TtC21DocumentUnderstanding27DUStructuredExtractionLabel_confidenceScore];
      sub_2367BB248();
      double *v90 = v89;

      uint64_t v91 = sub_2368D0E2C((uint64_t)v208, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntityLabel);
      MEMORY[0x237E06690](v91);
      if (*(void *)((v211 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v211 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_23697B20C();
      }
      sub_23697B22C();
      sub_23697B1FC();
      v77 += v205;
      --v76;
    }
    while (v76);
    swift_bridgeObjectRelease();
    uint64_t v92 = v211;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v92 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  v93 = &v203[OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_labels];
  sub_2367BB248();
  *(void *)v93 = v92;
  swift_bridgeObjectRelease();
  uint64_t v94 = *(void *)((char *)v202 + v201);
  sub_2367BB188();
  sub_2367BB248();
  sub_236851CF4();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  sub_2367BB248();
  sub_236851CF4();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  sub_2367BB248();
  sub_236851CF4();
  swift_bridgeObjectRelease();
  v95 = (void *)(v94 + 104);
  sub_2367BB188();
  uint64_t v96 = v207;
  if (!*(void *)(*(void *)(v94 + 104) + 16))
  {
LABEL_50:
    uint64_t v130 = v201;
    uint64_t v131 = (uint64_t)v202;
    uint64_t v132 = *(void *)((char *)v202 + v201)
         + OBJC_IVAR____TtCV21DocumentUnderstanding54DocumentUnderstanding_ClientInterface_StructuredEntityP33_38B59A0C572EFC481874056181C4AC8813_StorageClass__calendarEvent;
    sub_2367BB188();
    uint64_t v133 = v132;
    uint64_t v134 = v195;
    sub_23680A59C(v133, v195, &qword_268898140);
    v135 = v196;
    sub_2367B85F8(v134, 1, (uint64_t)v196);
    sub_2368D174C();
    v136 = 0;
    if (v76 != 1)
    {
      uint64_t v137 = *(void *)(v131 + v130)
           + OBJC_IVAR____TtCV21DocumentUnderstanding54DocumentUnderstanding_ClientInterface_StructuredEntityP33_38B59A0C572EFC481874056181C4AC8813_StorageClass__calendarEvent;
      sub_2367BB188();
      uint64_t v138 = v188;
      sub_23680A59C(v137, v188, &qword_268898140);
      sub_2368100B8(v138, 1, (uint64_t)v135);
      if (v139)
      {
        v140 = v189;
        unsigned char *v189 = 0;
        sub_23697A70C();
        *(_OWORD *)&v140[v135[6]] = xmmword_236985C40;
        sub_23682558C(v135[7]);
        *(_OWORD *)&v140[v135[8]] = v141;
        sub_23682558C(v135[9]);
        sub_2367BAA28(v138, &qword_268898140);
      }
      else
      {
        sub_2368D0DD8(v138, (uint64_t)v189, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent);
      }
      sub_2368CC27C();
      v136 = v142;
    }
    v143 = v203;
    v144 = (void **)&v203[OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_calendarEvent];
    sub_2367BB248();
    v145 = *v144;
    *v144 = v136;

    uint64_t v146 = *(void *)(v131 + v130);
    v147 = (uint64_t *)(v146
                     + OBJC_IVAR____TtCV21DocumentUnderstanding54DocumentUnderstanding_ClientInterface_StructuredEntityP33_38B59A0C572EFC481874056181C4AC8813_StorageClass__homeAutomationID);
    sub_2367BB188();
    uint64_t v149 = *v147;
    uint64_t v148 = v147[1];
    v150 = &v143[OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_homeAutomationID];
    sub_2367BB248();
    uint64_t v151 = *((void *)v150 + 1);
    *(void *)v150 = v149;
    *((void *)v150 + 1) = v148;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v152 = v146
         + OBJC_IVAR____TtCV21DocumentUnderstanding54DocumentUnderstanding_ClientInterface_StructuredEntityP33_38B59A0C572EFC481874056181C4AC8813_StorageClass__displayInfo;
    sub_2367BB188();
    uint64_t v153 = v152;
    uint64_t v154 = v197;
    sub_23680A59C(v153, v197, &qword_268898128);
    uint64_t v155 = v130;
    v156 = v198;
    sub_2367B85F8(v154, 1, (uint64_t)v198);
    sub_2368D174C();
    v157 = 0;
    uint64_t v158 = v187;
    if (v151 != 1)
    {
      uint64_t v159 = *(void *)(v131 + v155)
           + OBJC_IVAR____TtCV21DocumentUnderstanding54DocumentUnderstanding_ClientInterface_StructuredEntityP33_38B59A0C572EFC481874056181C4AC8813_StorageClass__displayInfo;
      sub_2367BB188();
      uint64_t v151 = v190;
      sub_23680A59C(v159, v190, &qword_268898128);
      sub_2368100B8(v151, 1, (uint64_t)v156);
      v160 = v191;
      if (v139)
      {
        _OWORD *v191 = xmmword_236985C50;
        v160[1] = xmmword_236985C50;
        *((unsigned char *)v160 + 32) = 0;
        sub_23697A70C();
        sub_2368D155C(v156[8]);
        sub_2368D155C(v156[9]);
        sub_2368D155C(v156[10]);
        sub_2368D155C(v156[11]);
        sub_2368D155C(v156[12]);
        sub_2368D155C(v156[13]);
        sub_2367BAA28(v151, &qword_268898128);
      }
      else
      {
        sub_2368D0DD8(v151, (uint64_t)v191, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DisplayInfo);
      }
      v157 = sub_2367CC338((uint64_t)v160);
      uint64_t v155 = v201;
    }
    v161 = (void **)&v203[OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_displayInfo];
    sub_2367BB248();
    v162 = *v161;
    *v161 = v157;

    uint64_t v163 = *(void *)(v131 + v155)
         + OBJC_IVAR____TtCV21DocumentUnderstanding54DocumentUnderstanding_ClientInterface_StructuredEntityP33_38B59A0C572EFC481874056181C4AC8813_StorageClass__responseDebugInfo;
    sub_2367BB188();
    uint64_t v164 = v163;
    uint64_t v165 = v199;
    sub_23680A59C(v164, v199, &qword_268898130);
    uint64_t v166 = v200;
    sub_2367B85F8(v165, 1, v200);
    sub_2368D174C();
    v167 = 0;
    if (v151 != 1)
    {
      uint64_t v168 = *(void *)(v131 + v155)
           + OBJC_IVAR____TtCV21DocumentUnderstanding54DocumentUnderstanding_ClientInterface_StructuredEntityP33_38B59A0C572EFC481874056181C4AC8813_StorageClass__responseDebugInfo;
      sub_2367BB188();
      uint64_t v169 = v168;
      uint64_t v170 = v192;
      sub_23680A59C(v169, v192, &qword_268898130);
      sub_2368100B8(v170, 1, v166);
      if (v139)
      {
        uint64_t v171 = v193;
        sub_23697A70C();
        v172 = (void *)(v171 + *(int *)(v166 + 20));
        void *v172 = 0;
        v172[1] = 0;
        sub_2367BAA28(v170, &qword_268898130);
      }
      else
      {
        sub_2368D0DD8(v170, v193, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo);
      }
      uint64_t v173 = v194;
      id v174 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DUDebugInfo()), sel_init);
      uint64_t v175 = sub_2368D16B0();
      sub_2368D0DD8(v175, v176, v177);
      v178 = (uint64_t *)(v173 + *(int *)(v166 + 20));
      if (v178[1])
      {
        uint64_t v179 = *v178;
        unint64_t v180 = v178[1];
      }
      else
      {
        uint64_t v179 = 0;
        unint64_t v180 = 0xE000000000000000;
      }
      v167 = (char *)v174;
      swift_bridgeObjectRetain();
      sub_2368D0E2C(v173, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo);
      v181 = &v167[OBJC_IVAR____TtC21DocumentUnderstanding11DUDebugInfo_debugString];
      sub_2367BB248();
      *(void *)v181 = v179;
      *((void *)v181 + 1) = v180;

      swift_bridgeObjectRelease();
      uint64_t v158 = v187;
      uint64_t v131 = (uint64_t)v202;
    }
    (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v158, v186);
    sub_2368D0E2C(v131, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntity);
    id v182 = v203;
    v183 = (void **)&v203[OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_responseDebugInfo];
    sub_2367BB248();
    v184 = *v183;
    *v183 = v167;

    goto LABEL_69;
  }
  type metadata accessor for NSTextCheckingKey(0);
  uint64_t v98 = v97;
  sub_2368D122C((unint64_t *)&qword_2688981A0, 255, type metadata accessor for NSTextCheckingKey);
  uint64_t v185 = v98;
  uint64_t v99 = sub_23697AE9C();
  v100 = (uint64_t *)&v203[OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_addressComponents];
  LODWORD(v76) = 1;
  sub_2367BB248();
  uint64_t *v100 = v99;
  swift_bridgeObjectRelease();
  uint64_t v204 = *v95 + 64;
  sub_2368D165C();
  uint64_t v205 = v102;
  uint64_t v206 = v101;
  swift_bridgeObjectRetain();
  uint64_t v103 = 0;
  if (v94 == -104) {
    goto LABEL_25;
  }
LABEL_24:
  sub_2368D18FC();
  v208 = v95;
  uint64_t v209 = v104;
  for (uint64_t i = v105 | (v104 << 6); ; uint64_t i = v112 + (v111 << 6))
  {
    v113 = (uint64_t *)(*(void *)(v206 + 56) + 16 * i);
    uint64_t v115 = *v113;
    uint64_t v114 = v113[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v116 = (void *)sub_23697AF3C();
    swift_bridgeObjectRelease();
    sub_2367C0104();
    if (!*v100) {
      break;
    }
    swift_isUniquelyReferenced_nonNull_native();
    v210 = (void *)*v100;
    v117 = v210;
    uint64_t *v100 = 0x8000000000000000;
    uint64_t v118 = sub_2368FE964(v116);
    if (__OFADD__(v117[2], (v119 & 1) == 0))
    {
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
      break;
    }
    unint64_t v120 = v118;
    LODWORD(v76) = v119;
    sub_2367B7DBC(&qword_2688988A0);
    if (sub_23697B78C())
    {
      uint64_t v121 = sub_2368FE964(v116);
      if ((v76 & 1) != (v122 & 1)) {
        goto LABEL_75;
      }
      unint64_t v120 = v121;
    }
    v123 = v210;
    if (v76)
    {
      v124 = (void *)(v210[7] + 16 * v120);
      swift_bridgeObjectRelease();
      void *v124 = v115;
      v124[1] = v114;
    }
    else
    {
      v210[(v120 >> 6) + 8] |= 1 << v120;
      *(void *)(v123[6] + 8 * v120) = v116;
      v125 = (void *)(v123[7] + 16 * v120);
      void *v125 = v115;
      v125[1] = v114;
      uint64_t v126 = v123[2];
      BOOL v127 = __OFADD__(v126, 1);
      uint64_t v128 = v126 + 1;
      if (v127) {
        goto LABEL_71;
      }
      v123[2] = v128;
      id v129 = v116;
    }
    uint64_t *v100 = (uint64_t)v123;

    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v96 = v207;
    v95 = v208;
    uint64_t v103 = v209;
    if (v208) {
      goto LABEL_24;
    }
LABEL_25:
    uint64_t v107 = v103 + 1;
    if (__OFADD__(v103, 1)) {
      goto LABEL_72;
    }
    if (v107 >= v205) {
      goto LABEL_49;
    }
    if (!*(void *)(v204 + 8 * v107))
    {
      if (v103 + 2 >= v205) {
        goto LABEL_49;
      }
      if (!*(void *)(v204 + 8 * (v103 + 2)))
      {
        if (v103 + 3 >= v205) {
          goto LABEL_49;
        }
        if (!*(void *)(v204 + 8 * (v103 + 3)))
        {
          uint64_t v108 = v103 + 4;
          if (v103 + 4 >= v205)
          {
LABEL_49:
            swift_release();
            goto LABEL_50;
          }
          if (!*(void *)(v204 + 8 * v108))
          {
            do
            {
              uint64_t v109 = v108 + 1;
              if (__OFADD__(v108, 1)) {
                goto LABEL_73;
              }
              if (v109 >= v205) {
                goto LABEL_49;
              }
              ++v108;
            }
            while (!*(void *)(v204 + 8 * v109));
          }
        }
      }
    }
    sub_2368D1874();
    v208 = (void *)v110;
    uint64_t v209 = v111;
  }

  __break(1u);
LABEL_75:
  sub_23697B9AC();
  __break(1u);
}

uint64_t DUStructuredEntity.title.getter()
{
  return sub_2368CBA50();
}

uint64_t DUStructuredEntity.title.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_title);
}

uint64_t (*DUStructuredEntity.title.modify())()
{
  return j_j__swift_endAccess;
}

id sub_2368CB164(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  uint64_t v3 = (void *)sub_23697AF3C();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t DUStructuredEntity.type.getter()
{
  return sub_2368CBA50();
}

void sub_2368CB1D8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  sub_23697AF6C();
  id v6 = a1;
  uint64_t v7 = sub_2368D16D4();
  a4(v7);
}

uint64_t DUStructuredEntity.type.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_type);
}

uint64_t (*DUStructuredEntity.type.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUStructuredEntity.labels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DUStructuredEntity.labels.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_labels);
  sub_2367BB248();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*DUStructuredEntity.labels.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUStructuredEntity.phoneNumber.getter()
{
  return sub_2368CBA50();
}

uint64_t DUStructuredEntity.phoneNumber.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_phoneNumber);
}

uint64_t (*DUStructuredEntity.phoneNumber.modify())()
{
  return j_j__swift_endAccess;
}

id sub_2368CB4D8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  if (v3)
  {
    uint64_t v4 = (void *)sub_23697AF3C();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  return v4;
}

uint64_t DUStructuredEntity.email.getter()
{
  return sub_2368CBA50();
}

void sub_2368CB558(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  if (a3) {
    sub_23697AF6C();
  }
  id v6 = a1;
  uint64_t v7 = sub_2368D16D4();
  a4(v7);
}

uint64_t DUStructuredEntity.email.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_email);
}

uint64_t (*DUStructuredEntity.email.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUStructuredEntity.url.getter()
{
  return sub_2368CBA50();
}

uint64_t DUStructuredEntity.url.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_url);
}

uint64_t (*DUStructuredEntity.url.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUStructuredEntity.addressComponents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DUStructuredEntity.addressComponents.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_addressComponents);
  sub_2367BB248();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*DUStructuredEntity.addressComponents.modify())()
{
  return j_j__swift_endAccess;
}

void *DUStructuredEntity.calendarEvent.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_calendarEvent);
  sub_2367BB188();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void DUStructuredEntity.calendarEvent.setter(uint64_t a1)
{
}

uint64_t (*DUStructuredEntity.calendarEvent.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUStructuredEntity.homeAutomationID.getter()
{
  return sub_2368CBA50();
}

uint64_t sub_2368CBA50()
{
  return sub_2368D1958();
}

uint64_t DUStructuredEntity.homeAutomationID.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_homeAutomationID);
}

uint64_t (*DUStructuredEntity.homeAutomationID.modify())()
{
  return j_j__swift_endAccess;
}

void *DUStructuredEntity.displayInfo.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_displayInfo);
  sub_2367BB188();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void DUStructuredEntity.displayInfo.setter(uint64_t a1)
{
}

uint64_t (*DUStructuredEntity.displayInfo.modify())()
{
  return j_j__swift_endAccess;
}

void *DUStructuredEntity.responseDebugInfo.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_responseDebugInfo);
  sub_2367BB188();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void DUStructuredEntity.responseDebugInfo.setter(uint64_t a1)
{
}

void sub_2368CBD14(uint64_t a1, void *a2)
{
  sub_2368D1860(a1, a2);
  sub_2367BB248();
  uint64_t v4 = *v2;
  *uint64_t v2 = (void *)a1;
}

uint64_t (*DUStructuredEntity.responseDebugInfo.modify())()
{
  return j_j__swift_endAccess;
}

void sub_2368CBD98(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntityLabel(0);
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v4);
  sub_2367D9940();
  uint64_t v5 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DUStructuredExtractionLabel()), sel_init);
  sub_2368D0DD8(a1, v1, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntityLabel);
  id v6 = (uint64_t *)(v1 + *(int *)(v3 + 20));
  if (v6[1])
  {
    uint64_t v7 = *v6;
    unint64_t v8 = v6[1];
  }
  else
  {
    uint64_t v7 = 0;
    unint64_t v8 = 0xE000000000000000;
  }
  uint64_t v9 = &v5[OBJC_IVAR____TtC21DocumentUnderstanding27DUStructuredExtractionLabel_labelName];
  sub_2367BB248();
  *(void *)uint64_t v9 = v7;
  *((void *)v9 + 1) = v8;
  uint64_t v10 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  double v11 = sub_2367CBFBC(v1 + *(int *)(v3 + 24));
  if (v13) {
    double v14 = v11;
  }
  else {
    double v14 = v12;
  }
  sub_2368D0E2C(v1, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntityLabel);
  uint64_t v15 = (double *)&v10[OBJC_IVAR____TtC21DocumentUnderstanding27DUStructuredExtractionLabel_confidenceScore];
  sub_2367BB248();
  *uint64_t v15 = v14;

  sub_2368D16BC();
}

char *sub_2368CBEF0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntityLabel(0);
  MEMORY[0x270FA5388](v4);
  id v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = (char *)objc_msgSend(objc_allocWithZone(v2), sel_init);
  sub_2368D0DD8(a1, (uint64_t)v6, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntityLabel);
  unint64_t v8 = (uint64_t *)&v6[*(int *)(v4 + 20)];
  if (v8[1])
  {
    uint64_t v9 = *v8;
    unint64_t v10 = v8[1];
  }
  else
  {
    uint64_t v9 = 0;
    unint64_t v10 = 0xE000000000000000;
  }
  double v11 = &v7[OBJC_IVAR____TtC21DocumentUnderstanding27DUStructuredExtractionLabel_labelName];
  swift_beginAccess();
  *(void *)double v11 = v9;
  *((void *)v11 + 1) = v10;
  double v12 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v13 = (double *)&v6[*(int *)(v4 + 24)];
  if (*((unsigned char *)v13 + 8)) {
    double v14 = 0.0;
  }
  else {
    double v14 = *v13;
  }
  sub_2368D0E2C((uint64_t)v6, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntityLabel);
  uint64_t v15 = (double *)&v12[OBJC_IVAR____TtC21DocumentUnderstanding27DUStructuredExtractionLabel_confidenceScore];
  swift_beginAccess();
  *uint64_t v15 = v14;

  return v12;
}

void DUStructuredExtractionLabel.__allocating_init<A>(proto:)()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_2367B7DBC(&qword_268899EA8);
  uint64_t v4 = sub_2367BB430(v3);
  MEMORY[0x270FA5388](v4);
  sub_2367CAC7C();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntityLabel(0);
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v9);
  sub_2367CBF80();
  unint64_t v10 = (char *)objc_msgSend(objc_allocWithZone(v2), sel_init);
  if (swift_dynamicCast())
  {
    uint64_t v11 = sub_2368D15D4();
    sub_2367B7028(v11, v12, v13, v8);
    sub_2368D0DD8(v7, v1, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntityLabel);
    double v14 = (uint64_t *)(v1 + *(int *)(v8 + 20));
    if (v14[1])
    {
      uint64_t v15 = *v14;
      unint64_t v16 = v14[1];
    }
    else
    {
      uint64_t v15 = 0;
      unint64_t v16 = 0xE000000000000000;
    }
    uint64_t v17 = &v10[OBJC_IVAR____TtC21DocumentUnderstanding27DUStructuredExtractionLabel_labelName];
    sub_2367BB248();
    *(void *)uint64_t v17 = v15;
    *((void *)v17 + 1) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    double v18 = sub_2367CBFBC(v1 + *(int *)(v8 + 24));
    if (v20) {
      double v21 = v18;
    }
    else {
      double v21 = v19;
    }
    sub_2368D0E2C(v1, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntityLabel);
    uint64_t v22 = (double *)&v10[OBJC_IVAR____TtC21DocumentUnderstanding27DUStructuredExtractionLabel_confidenceScore];
    sub_2367BB248();
    *uint64_t v22 = v21;
  }
  else
  {
    sub_2367B7028(v7, 1, 1, v8);

    sub_2367BAA28(v7, &qword_268899EA8);
  }
  sub_2368D16BC();
}

void sub_2368CC27C()
{
  sub_2367CAE08();
  uint64_t v1 = v0;
  uint64_t v2 = sub_2367B7DBC(&qword_26AD89430);
  uint64_t v3 = sub_2367BB430(v2);
  MEMORY[0x270FA5388](v3);
  sub_2367BB610();
  uint64_t v52 = v4;
  sub_2367D9914();
  MEMORY[0x270FA5388](v5);
  sub_2367E5460();
  uint64_t v48 = v6;
  uint64_t v7 = sub_2367B7DBC(&qword_26AD89410);
  uint64_t v8 = sub_2367BB430(v7);
  MEMORY[0x270FA5388](v8);
  sub_2367BB610();
  uint64_t v49 = v9;
  sub_2367D9914();
  MEMORY[0x270FA5388](v10);
  sub_236810108();
  uint64_t v53 = v11;
  sub_2367D9914();
  MEMORY[0x270FA5388](v12);
  double v14 = (char *)&v47 - v13;
  uint64_t v15 = type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent(0);
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v16);
  sub_2367CAC7C();
  double v19 = (char *)(v18 - v17);
  char v20 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DUCalendarEvent()), sel_init);
  uint64_t v51 = v1;
  sub_2368D0E84(v1, (uint64_t)v19, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent);
  char v21 = *v19;
  uint64_t v22 = &v20[OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_isAllDay];
  sub_2367BB248();
  *uint64_t v22 = v21;
  uint64_t v23 = sub_236979EEC();
  sub_236810328();
  uint64_t v24 = v20;
  sub_236979EDC();
  uint64_t v50 = v15;
  uint64_t v25 = (uint64_t *)&v19[*(int *)(v15 + 24)];
  uint64_t v26 = *v25;
  unint64_t v27 = v25[1];
  if (v27 >> 60 == 15) {
    uint64_t v28 = 0;
  }
  else {
    uint64_t v28 = *v25;
  }
  if (v27 >> 60 == 15) {
    unint64_t v29 = 0xC000000000000000;
  }
  else {
    unint64_t v29 = v25[1];
  }
  uint64_t v30 = sub_23697A0AC();
  sub_2367BAA7C(v26, v27);
  uint64_t v47 = sub_2368D122C(&qword_268899EB8, 255, MEMORY[0x263F063B0]);
  sub_236979ECC();
  sub_2367B8A20(v28, v29);
  swift_release();
  sub_2367B7028((uint64_t)v14, 0, 1, v30);
  uint64_t v31 = (uint64_t)&v24[OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_startDateComponents];
  sub_2367C0104();
  sub_23680FE24((uint64_t)v14, v31, &qword_26AD89410);
  swift_endAccess();
  uint64_t v32 = v24;
  uint64_t v33 = v50;
  uint64_t v34 = v48;
  if (*(void *)&v19[*(int *)(v50 + 28) + 8])
  {
    swift_bridgeObjectRetain();
    sub_23697A3CC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v35 = sub_23697A43C();
    sub_2367B7028(v34, 1, 1, v35);
  }
  uint64_t v36 = (uint64_t)&v32[OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_startTimezone];
  sub_2367C0104();
  sub_23680FE24(v34, v36, &qword_26AD89430);
  swift_endAccess();
  swift_allocObject();
  sub_236979EDC();
  uint64_t v37 = sub_2368D1888((uint64_t)&v19[*(int *)(v33 + 32)]);
  if (!v40 & v39) {
    unint64_t v41 = 0xC000000000000000;
  }
  else {
    unint64_t v41 = v38;
  }
  sub_2367BAA7C(v37, v38);
  uint64_t v42 = v49;
  sub_236979ECC();
  sub_2367B8A20(v23, v41);
  swift_release();
  sub_2367B7028(v42, 0, 1, v30);
  uint64_t v43 = (uint64_t)&v32[OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_endDateComponents];
  sub_2367C0104();
  sub_23680FE24(v42, v43, &qword_26AD89410);
  swift_endAccess();
  uint64_t v44 = v52;
  if (*(void *)&v19[*(int *)(v33 + 36) + 8])
  {
    swift_bridgeObjectRetain();
    sub_23697A3CC();
    swift_bridgeObjectRelease();
    sub_2368D0E2C(v51, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent);
    sub_2368D0E2C((uint64_t)v19, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent);
  }
  else
  {
    sub_2368D0E2C(v51, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent);
    sub_2368D0E2C((uint64_t)v19, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent);
    uint64_t v45 = sub_23697A43C();
    sub_2368D1924(v45);
  }
  uint64_t v46 = (uint64_t)&v32[OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_endTimezone];
  sub_2367C0104();
  sub_23680FE24(v44, v46, &qword_26AD89430);
  swift_endAccess();

  sub_2367CAD58();
}

char *sub_2368CC808(uint64_t a1)
{
  uint64_t v3 = sub_2367B7DBC(&qword_26AD89430);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v48 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v44 = (char *)&v43 - v6;
  uint64_t v7 = sub_2367B7DBC(&qword_26AD89410);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v45 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v49 = (char *)&v43 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v43 - v12;
  uint64_t v14 = type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (char *)objc_msgSend(objc_allocWithZone(v1), sel_init);
  uint64_t v47 = a1;
  sub_2368D0E84(a1, (uint64_t)v16, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent);
  char v18 = *v16;
  double v19 = &v17[OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_isAllDay];
  swift_beginAccess();
  *double v19 = v18;
  sub_236979EEC();
  swift_allocObject();
  char v20 = v17;
  sub_236979EDC();
  uint64_t v46 = v14;
  char v21 = (uint64_t *)&v16[*(int *)(v14 + 24)];
  uint64_t v22 = *v21;
  unint64_t v23 = v21[1];
  if (v23 >> 60 == 15) {
    uint64_t v24 = 0;
  }
  else {
    uint64_t v24 = *v21;
  }
  if (v23 >> 60 == 15) {
    unint64_t v25 = 0xC000000000000000;
  }
  else {
    unint64_t v25 = v21[1];
  }
  uint64_t v26 = sub_23697A0AC();
  sub_2367BAA7C(v22, v23);
  uint64_t v43 = sub_2368D122C(&qword_268899EB8, 255, MEMORY[0x263F063B0]);
  sub_236979ECC();
  sub_2367B8A20(v24, v25);
  swift_release();
  sub_2367B7028((uint64_t)v13, 0, 1, v26);
  uint64_t v27 = (uint64_t)&v20[OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_startDateComponents];
  swift_beginAccess();
  sub_23680FE24((uint64_t)v13, v27, &qword_26AD89410);
  swift_endAccess();
  uint64_t v28 = v20;
  uint64_t v29 = v46;
  uint64_t v30 = (uint64_t)v44;
  if (*(void *)&v16[*(int *)(v46 + 28) + 8])
  {
    swift_bridgeObjectRetain();
    sub_23697A3CC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v31 = sub_23697A43C();
    sub_2367B7028(v30, 1, 1, v31);
  }
  uint64_t v32 = (uint64_t)&v28[OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_startTimezone];
  swift_beginAccess();
  sub_23680FE24(v30, v32, &qword_26AD89430);
  swift_endAccess();
  swift_allocObject();
  sub_236979EDC();
  uint64_t v33 = (uint64_t *)&v16[*(int *)(v29 + 32)];
  unint64_t v34 = v33[1];
  if (v34 >> 60 == 15) {
    uint64_t v35 = 0;
  }
  else {
    uint64_t v35 = *v33;
  }
  if (v34 >> 60 == 15) {
    unint64_t v36 = 0xC000000000000000;
  }
  else {
    unint64_t v36 = v33[1];
  }
  sub_2367BAA7C(*v33, v34);
  uint64_t v37 = (uint64_t)v45;
  sub_236979ECC();
  sub_2367B8A20(v35, v36);
  swift_release();
  sub_2367B7028(v37, 0, 1, v26);
  uint64_t v38 = (uint64_t)&v28[OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_endDateComponents];
  swift_beginAccess();
  sub_23680FE24(v37, v38, &qword_26AD89410);
  swift_endAccess();
  uint64_t v39 = (uint64_t)v48;
  if (*(void *)&v16[*(int *)(v29 + 36) + 8])
  {
    swift_bridgeObjectRetain();
    sub_23697A3CC();
    swift_bridgeObjectRelease();
    sub_2368D0E2C(v47, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent);
    sub_2368D0E2C((uint64_t)v16, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent);
  }
  else
  {
    sub_2368D0E2C(v47, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent);
    sub_2368D0E2C((uint64_t)v16, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent);
    uint64_t v40 = sub_23697A43C();
    sub_2367B7028(v39, 1, 1, v40);
  }
  uint64_t v41 = (uint64_t)&v28[OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_endTimezone];
  swift_beginAccess();
  sub_23680FE24(v39, v41, &qword_26AD89430);
  swift_endAccess();

  return v28;
}

void DUCalendarEvent.__allocating_init<A>(proto:)()
{
  sub_2367CAE08();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = sub_2367B7DBC(&qword_26AD89430);
  uint64_t v6 = sub_2367BB430(v5);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  sub_2367E5460();
  uint64_t v69 = v10;
  uint64_t v11 = sub_2367B7DBC(&qword_26AD89410);
  uint64_t v12 = sub_2367BB430(v11);
  MEMORY[0x270FA5388](v12);
  sub_2367BB610();
  uint64_t v71 = v13;
  sub_2367D9914();
  MEMORY[0x270FA5388](v14);
  sub_236810108();
  uint64_t v70 = v15;
  sub_2367D9914();
  MEMORY[0x270FA5388](v16);
  sub_2367E5460();
  uint64_t v68 = v17;
  uint64_t v18 = sub_2367B7DBC(&qword_268898140);
  uint64_t v19 = sub_2367BB430(v18);
  MEMORY[0x270FA5388](v19);
  sub_2367D9940();
  sub_2367CD744();
  uint64_t v21 = v20;
  MEMORY[0x270FA5388](v22);
  sub_2367CAC7C();
  uint64_t v25 = v24 - v23;
  uint64_t v26 = (int *)type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent(0);
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v27);
  sub_2367CAC7C();
  uint64_t v30 = (char *)(v29 - v28);
  id v31 = objc_msgSend(objc_allocWithZone(v0), sel_init);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v25, v4, v2);
  uint64_t v32 = (char *)v31;
  sub_2368D1958();
  if (swift_dynamicCast())
  {
    uint64_t v64 = v21;
    uint64_t v65 = v4;
    uint64_t v66 = v2;
    unint64_t v67 = v9;
    sub_2367B7028((uint64_t)v0, 0, 1, (uint64_t)v26);
    sub_2368D0DD8((uint64_t)v0, (uint64_t)v30, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent);
    char v33 = *v30;
    unint64_t v34 = &v32[OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_isAllDay];
    sub_2367BB248();
    *unint64_t v34 = v33;
    sub_236979EEC();
    sub_236810328();
    sub_236979EDC();
    uint64_t v35 = v26[6];
    v63 = v30;
    unint64_t v36 = (uint64_t *)&v30[v35];
    uint64_t v37 = *v36;
    unint64_t v38 = v36[1];
    if (v38 >> 60 == 15) {
      uint64_t v39 = 0;
    }
    else {
      uint64_t v39 = *v36;
    }
    if (v38 >> 60 == 15) {
      unint64_t v40 = 0xC000000000000000;
    }
    else {
      unint64_t v40 = v36[1];
    }
    sub_23697A0AC();
    sub_2367BAA7C(v37, v38);
    sub_2368D122C(&qword_268899EB8, 255, MEMORY[0x263F063B0]);
    uint64_t v41 = v68;
    sub_2368D1964();
    v62[1] = v42;
    sub_236979ECC();
    sub_2367B8A20(v39, v40);
    swift_release();
    sub_236833624(v41, 0);
    uint64_t v43 = (uint64_t)&v32[OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_startDateComponents];
    sub_2367C0104();
    sub_23680FE24(v41, v43, &qword_26AD89410);
    swift_endAccess();
    uint64_t v44 = (uint64_t)v63;
    uint64_t v45 = v69;
    if (*(void *)&v63[v26[7] + 8])
    {
      swift_bridgeObjectRetain();
      sub_23697A3CC();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v46 = sub_23697A43C();
      sub_2367B7028(v45, 1, 1, v46);
    }
    uint64_t v47 = (uint64_t)&v32[OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_startTimezone];
    sub_2367C0104();
    sub_23680FE24(v45, v47, &qword_26AD89430);
    swift_endAccess();
    swift_allocObject();
    sub_236979EDC();
    uint64_t v48 = sub_2368D1888(v44 + v26[8]);
    if (!v51 & v50) {
      unint64_t v52 = 0xC000000000000000;
    }
    else {
      unint64_t v52 = v49;
    }
    sub_2367BAA7C(v48, v49);
    uint64_t v53 = v70;
    sub_2368D1964();
    sub_236979ECC();
    sub_2367B8A20(v47, v52);
    swift_release();
    sub_236833624(v53, 0);
    uint64_t v54 = (uint64_t)&v32[OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_endDateComponents];
    sub_2367C0104();
    sub_23680FE24(v53, v54, &qword_26AD89410);
    swift_endAccess();
    uint64_t v55 = (uint64_t)v67;
    if (*(void *)(v44 + v26[9] + 8))
    {
      swift_bridgeObjectRetain();
      sub_23697A3CC();
      swift_bridgeObjectRelease();
      uint64_t v56 = sub_2368D1698();
      v57(v56);
      sub_2368D0E2C(v44, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent);
    }
    else
    {
      uint64_t v58 = sub_2368D1698();
      v59(v58);
      sub_2368D0E2C(v44, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent);
      uint64_t v60 = sub_23697A43C();
      sub_2368D1924(v60);
    }
    uint64_t v61 = (uint64_t)&v32[OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_endTimezone];
    sub_2367C0104();
    sub_23680FE24(v55, v61, &qword_26AD89430);
    swift_endAccess();
  }
  else
  {
    sub_2367B7028((uint64_t)v0, 1, 1, (uint64_t)v26);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v4, v2);
    sub_2367BAA28((uint64_t)v0, &qword_268898140);
  }
  sub_2367CAD58();
}

void DUStructuredEntity.protoRepresentation.getter()
{
  sub_2367CAE08();
  uint64_t v2 = v0;
  unint64_t v4 = v3;
  uint64_t v5 = sub_2367B7DBC(&qword_268898130);
  uint64_t v6 = sub_2367BB430(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v214 = (uint64_t)&v209 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2367D9914();
  MEMORY[0x270FA5388](v8);
  sub_236810108();
  uint64_t v213 = v9;
  sub_2367D9914();
  MEMORY[0x270FA5388](v10);
  sub_2367E5460();
  uint64_t v228 = v11;
  uint64_t v229 = type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo();
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v12);
  sub_2367BB610();
  uint64_t v222 = v13;
  sub_2367D9914();
  MEMORY[0x270FA5388](v14);
  sub_236810108();
  v221 = v15;
  sub_2367D9914();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  sub_2368D18B0(v17, v18, v19, v20, v21, v22, v23, v24, v209);
  uint64_t v25 = sub_2367B7DBC(&qword_268898128);
  uint64_t v26 = sub_2367BB430(v25);
  MEMORY[0x270FA5388](v26);
  uint64_t v212 = (uint64_t)&v209 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2367D9914();
  MEMORY[0x270FA5388](v28);
  sub_236810108();
  uint64_t v211 = v29;
  sub_2367D9914();
  MEMORY[0x270FA5388](v30);
  sub_2367E5460();
  uint64_t v225 = v31;
  uint64_t v227 = type metadata accessor for DocumentUnderstanding_ClientInterface_DisplayInfo(0);
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v32);
  sub_2367BB610();
  uint64_t v215 = v33;
  sub_2367D9914();
  MEMORY[0x270FA5388](v34);
  sub_236810108();
  uint64_t v219 = v35;
  sub_2367D9914();
  MEMORY[0x270FA5388](v36);
  sub_2367E5460();
  uint64_t v220 = v37;
  uint64_t v38 = sub_2367B7DBC(&qword_268898140);
  uint64_t v39 = sub_2367BB430(v38);
  MEMORY[0x270FA5388](v39);
  sub_2367BB610();
  uint64_t v210 = v40;
  sub_2367D9914();
  MEMORY[0x270FA5388](v41);
  sub_236810108();
  uint64_t v209 = v42;
  sub_2367D9914();
  MEMORY[0x270FA5388](v43);
  sub_2367E5460();
  uint64_t v224 = v44;
  uint64_t v226 = type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent(0);
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v45);
  sub_2367BB610();
  uint64_t v217 = v46;
  sub_2367D9914();
  MEMORY[0x270FA5388](v47);
  sub_236810108();
  uint64_t v216 = v48;
  sub_2367D9914();
  MEMORY[0x270FA5388](v49);
  sub_2367E5460();
  uint64_t v218 = v50;
  uint64_t v51 = sub_2367B7DBC(&qword_268899EA8);
  uint64_t v52 = sub_2367BB430(v51);
  MEMORY[0x270FA5388](v52);
  uint64_t v53 = sub_2368C9D14();
  uint64_t v238 = type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntityLabel(v53);
  sub_2367CD744();
  v236 = v54;
  MEMORY[0x270FA5388](v55);
  sub_2367BB610();
  v237 = (void *)v56;
  sub_2367D9914();
  uint64_t v58 = MEMORY[0x270FA5388](v57);
  uint64_t v60 = (char *)&v209 - v59;
  uint64_t v61 = MEMORY[0x270FA5388](v58);
  sub_2368D189C(v61, v62, v63, v64, v65, v66, v67, v68, v209);
  sub_23697A70C();
  unint64_t v69 = *(int *)(type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntity(0) + 20);
  if (qword_268897D48 == -1) {
    goto LABEL_2;
  }
  while (1)
  {
    swift_once();
LABEL_2:
    *(void *)(v4 + v69) = qword_268897D50;
    uint64_t v70 = (uint64_t *)(v2 + OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_title);
    sub_2367BB188();
    uint64_t v72 = *v70;
    uint64_t v71 = v70[1];
    swift_retain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntity._StorageClass(0);
      sub_236810328();
      unint64_t v73 = (void *)sub_2368996A8();
      *(void *)(v4 + v69) = sub_2367B11C0(v73);
      swift_release();
    }
    uint64_t v74 = *(void *)(v4 + v69);
    sub_2367BB248();
    *(void *)(v74 + 16) = v72;
    *(void *)(v74 + 24) = v71;
    swift_bridgeObjectRelease();
    uint64_t v75 = (uint64_t *)(v2 + OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_type);
    sub_2367BB188();
    uint64_t v77 = *v75;
    uint64_t v76 = v75[1];
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntity._StorageClass(0);
      sub_236810328();
      uint64_t v78 = (void *)sub_2368996A8();
      *(void *)(v4 + v69) = sub_2367B11C0(v78);
      swift_release();
    }
    uint64_t v235 = v69;
    uint64_t v79 = *(void *)(v4 + v69);
    sub_2367BB248();
    *(void *)(v79 + 32) = v77;
    *(void *)(v79 + 40) = v76;
    swift_bridgeObjectRelease();
    uint64_t v233 = v2;
    uint64_t v80 = (uint64_t *)(v2 + OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_labels);
    sub_2367BB188();
    uint64_t v2 = *v80;
    if ((unint64_t)*v80 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v81 = sub_23697B7FC();
    }
    else
    {
      uint64_t v81 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
    }
    unint64_t v234 = v4;
    if (!v81)
    {
      uint64_t v83 = MEMORY[0x263F8EE78];
      goto LABEL_25;
    }
    if (v81 < 1) {
      break;
    }
    uint64_t v82 = 0;
    uint64_t v83 = MEMORY[0x263F8EE78];
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v84 = (id)MEMORY[0x237E06BC0](v82, v2);
      }
      else {
        id v84 = *(id *)(v2 + 8 * v82 + 32);
      }
      unint64_t v85 = v84;
      DUStructuredExtractionLabel.protoRepresentation.getter((uint64_t)v60);
      sub_2368D0DD8((uint64_t)v60, v1, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntityLabel);
      unint64_t v4 = v238;
      sub_2367B7028(v1, 0, 1, v238);

      sub_2368100B8(v1, 1, v4);
      if (v86)
      {
        sub_2367BAA28(v1, &qword_268899EA8);
      }
      else
      {
        uint64_t v87 = v232;
        sub_2368D0DD8(v1, v232, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntityLabel);
        sub_2368D0DD8(v87, (uint64_t)v237, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntityLabel);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v83 = sub_2367D2E1C(0, *(void *)(v83 + 16) + 1, 1, v83);
        }
        unint64_t v4 = *(void *)(v83 + 16);
        unint64_t v89 = *(void *)(v83 + 24);
        if (v4 >= v89 >> 1) {
          uint64_t v83 = sub_2367D2E1C(v89 > 1, v4 + 1, 1, v83);
        }
        *(void *)(v83 + 16) = v4 + 1;
        sub_2368D0DD8((uint64_t)v237, v83+ ((*((unsigned __int8 *)v236 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v236 + 80))+ v236[9] * v4, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntityLabel);
      }
      ++v82;
    }
    while (v81 != v82);
LABEL_25:
    swift_bridgeObjectRelease_n();
    unint64_t v90 = v234;
    uint64_t v91 = v235;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntity._StorageClass(0);
      sub_236810328();
      uint64_t v92 = (void *)sub_2368D1778();
      *(void *)(v90 + v91) = sub_2367B11C0(v92);
      swift_release();
    }
    uint64_t v93 = *(void *)(v90 + v91);
    sub_2367BB248();
    *(void *)(v93 + 48) = v83;
    swift_bridgeObjectRelease();
    uint64_t v94 = v233;
    uint64_t v95 = v233 + OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_phoneNumber;
    sub_2367BB188();
    uint64_t v96 = *(void *)(v95 + 8);
    unint64_t v69 = v90;
    if (v96)
    {
      uint64_t v1 = v91;
      sub_2368D17EC();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2368D17D4();
        sub_236810328();
        uint64_t v97 = (void *)sub_2368996A8();
        uint64_t v98 = sub_2367B11C0(v97);
        sub_2368D15F4(v98);
      }
      uint64_t v99 = *(void *)(v90 + v91);
      sub_2367BB248();
      *(void *)(v99 + 56) = v91;
      *(void *)(v99 + 64) = v96;
      swift_bridgeObjectRelease();
    }
    uint64_t v100 = v94 + OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_email;
    sub_2367BB188();
    uint64_t v101 = *(void *)(v100 + 8);
    if (v101)
    {
      sub_2368D17EC();
      uint64_t v1 = v235;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2368D17D4();
        sub_236810328();
        uint64_t v102 = (void *)sub_2368996A8();
        uint64_t v103 = sub_2367B11C0(v102);
        sub_2368D15F4(v103);
      }
      uint64_t v104 = *(void *)(v90 + v1);
      sub_2367BB248();
      *(void *)(v104 + 72) = v91;
      *(void *)(v104 + 80) = v101;
      swift_bridgeObjectRelease();
    }
    uint64_t v105 = v94 + OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_url;
    sub_2367BB188();
    uint64_t v60 = *(char **)(v105 + 8);
    if (v60)
    {
      sub_2368D17EC();
      uint64_t v1 = v235;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2368D17D4();
        sub_236810328();
        v106 = (void *)sub_2368996A8();
        uint64_t v107 = sub_2367B11C0(v106);
        sub_2368D15F4(v107);
      }
      uint64_t v108 = *(void *)(v90 + v1);
      sub_2367BB248();
      *(void *)(v108 + 88) = v91;
      *(void *)(v108 + 96) = v60;
      swift_bridgeObjectRelease();
    }
    uint64_t v109 = (void *)(v94 + OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_addressComponents);
    sub_2367BB188();
    uint64_t v110 = v235;
    if (!*v109)
    {
LABEL_68:
      v147 = (id *)(v94 + OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_calendarEvent);
      sub_2367BB188();
      if (*v147)
      {
        id v148 = *v147;
        DUCalendarEvent.protoRepresentation.getter();

        uint64_t v149 = v224;
        sub_2368D16B0();
        uint64_t v150 = v226;
        int v151 = sub_2368D1700();
        sub_2367B7028(v149, v151 ^ 1u, 1, v150);
        sub_2368100B8(v149, 1, v150);
        if (!v86)
        {
          uint64_t v152 = v218;
          sub_2368D0DD8(v149, v218, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent);
          sub_2368D0E84(v152, v217, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2368D18E4();
            sub_236810328();
            uint64_t v153 = (void *)sub_2368D1778();
            uint64_t v154 = sub_2367B11C0(v153);
            sub_2368D1640(v154);
          }
          uint64_t v155 = *(void *)(v69 + v110);
          uint64_t v156 = v209;
          sub_2368D0DD8(v217, v209, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent);
          uint64_t v157 = sub_2368D15D4();
          sub_2367B7028(v157, v158, v159, v226);
          uint64_t v110 = v210;
          sub_23680FDE0(v156, v210, &qword_268898140);
          uint64_t v160 = v155
               + OBJC_IVAR____TtCV21DocumentUnderstanding54DocumentUnderstanding_ClientInterface_StructuredEntityP33_38B59A0C572EFC481874056181C4AC8813_StorageClass__calendarEvent;
          sub_2367C0104();
          swift_retain();
          sub_23680FE24(v110, v160, &qword_268898140);
          swift_endAccess();
          swift_release();
          sub_2368D0E2C(v218, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent);
LABEL_75:
          uint64_t v164 = v94 + OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_homeAutomationID;
          sub_2367BB188();
          uint64_t v165 = *(void *)(v164 + 8);
          if (v165)
          {
            sub_2368D17EC();
            uint64_t v166 = v235;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_2368D17D4();
              sub_236810328();
              v167 = (void *)sub_2368996A8();
              uint64_t v168 = sub_2367B11C0(v167);
              sub_2368D15F4(v168);
            }
            uint64_t v169 = (uint64_t *)(*(void *)(v69 + v166)
                             + OBJC_IVAR____TtCV21DocumentUnderstanding54DocumentUnderstanding_ClientInterface_StructuredEntityP33_38B59A0C572EFC481874056181C4AC8813_StorageClass__homeAutomationID);
            sub_2367BB248();
            *uint64_t v169 = v110;
            v169[1] = v165;
            swift_bridgeObjectRelease();
          }
          uint64_t v170 = (id *)(v94 + OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_displayInfo);
          sub_2367BB188();
          if (*v170)
          {
            id v171 = *v170;
            DUDisplayInfo.protoRepresentation.getter(v219);

            uint64_t v172 = v225;
            sub_2368D16B0();
            uint64_t v173 = v227;
            int v174 = sub_2368D1700();
            sub_2367B7028(v172, v174 ^ 1u, 1, v173);
            uint64_t v175 = v173;
            uint64_t v176 = v172;
            sub_2368100B8(v172, 1, v175);
            uint64_t v177 = v228;
            uint64_t v178 = v235;
            if (!v86)
            {
              uint64_t v179 = v176;
              uint64_t v180 = v220;
              sub_2368D0DD8(v179, v220, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DisplayInfo);
              uint64_t v181 = v215;
              sub_2368D0E84(v180, v215, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DisplayInfo);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_2368D18E4();
                sub_236810328();
                id v182 = (void *)sub_2368D1778();
                uint64_t v181 = v215;
                uint64_t v183 = sub_2367B11C0(v182);
                sub_2368D1640(v183);
              }
              uint64_t v184 = *(void *)(v69 + v178);
              uint64_t v185 = v211;
              sub_2368D0DD8(v181, v211, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DisplayInfo);
              uint64_t v186 = sub_2368D15D4();
              sub_2367B7028(v186, v187, v188, v227);
              uint64_t v189 = v212;
              sub_23680FDE0(v185, v212, &qword_268898128);
              uint64_t v190 = v184
                   + OBJC_IVAR____TtCV21DocumentUnderstanding54DocumentUnderstanding_ClientInterface_StructuredEntityP33_38B59A0C572EFC481874056181C4AC8813_StorageClass__displayInfo;
              sub_2367C0104();
              swift_retain();
              uint64_t v191 = v189;
              uint64_t v178 = v235;
              sub_23680FE24(v191, v190, &qword_268898128);
              swift_endAccess();
              swift_release();
              sub_2368D0E2C(v220, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DisplayInfo);
              uint64_t v177 = v228;
LABEL_86:
              uint64_t v192 = (id *)(v94 + OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_responseDebugInfo);
              sub_2367BB188();
              if (*v192)
              {
                id v193 = *v192;
                DUDebugInfo.protoRepresentation.getter(v221);

                sub_2368D16B0();
                uint64_t v194 = v229;
                int v195 = sub_2368D1700();
                sub_2367B7028(v177, v195 ^ 1u, 1, v194);
                sub_2368100B8(v177, 1, v194);
                if (!v86)
                {
                  uint64_t v196 = v223;
                  sub_2368D0DD8(v177, v223, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo);
                  sub_2368D0E84(v196, v222, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo);
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    sub_2368D18E4();
                    sub_236810328();
                    uint64_t v197 = (void *)sub_2368D1778();
                    uint64_t v198 = sub_2367B11C0(v197);
                    sub_2368D1640(v198);
                  }
                  uint64_t v199 = *(void *)(v69 + v178);
                  uint64_t v200 = v213;
                  sub_2368D0DD8(v222, v213, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo);
                  uint64_t v201 = sub_2368D15D4();
                  sub_2367B7028(v201, v202, v203, v229);
                  uint64_t v204 = v214;
                  sub_23680FDE0(v200, v214, &qword_268898130);
                  uint64_t v205 = v199
                       + OBJC_IVAR____TtCV21DocumentUnderstanding54DocumentUnderstanding_ClientInterface_StructuredEntityP33_38B59A0C572EFC481874056181C4AC8813_StorageClass__responseDebugInfo;
                  sub_2367C0104();
                  swift_retain();
                  sub_23680FE24(v204, v205, &qword_268898130);
                  swift_endAccess();
                  swift_release();
                  sub_2368D0E2C(v223, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo);
                  goto LABEL_93;
                }
              }
              else
              {
                uint64_t v206 = sub_2368D15E4();
                sub_2367B7028(v206, v207, v208, v229);
              }
              sub_2367BAA28(v177, &qword_268898130);
LABEL_93:
              sub_2367CAD58();
              return;
            }
          }
          else
          {
            uint64_t v176 = v225;
            sub_2367B7028(v225, 1, 1, v227);
            uint64_t v177 = v228;
            uint64_t v178 = v235;
          }
          sub_2367BAA28(v176, &qword_268898128);
          goto LABEL_86;
        }
      }
      else
      {
        uint64_t v149 = v224;
        uint64_t v161 = sub_2368D15E4();
        sub_2367B7028(v161, v162, v163, v226);
      }
      sub_2367BAA28(v149, &qword_268898140);
      goto LABEL_75;
    }
    uint64_t v230 = *v109 + 64;
    sub_2368D165C();
    uint64_t v231 = v111;
    uint64_t v112 = swift_bridgeObjectRetain();
    uint64_t v113 = 0;
    uint64_t v232 = v112;
    if (v109)
    {
LABEL_41:
      sub_2368D18FC();
      v237 = v109;
      uint64_t v238 = v115;
      uint64_t v117 = v116 | (v115 << 6);
      goto LABEL_55;
    }
    while (1)
    {
      uint64_t v118 = v113 + 1;
      if (__OFADD__(v113, 1)) {
        goto LABEL_96;
      }
      if (v118 >= v231) {
        goto LABEL_67;
      }
      if (!*(void *)(v230 + 8 * v118))
      {
        if (v113 + 2 >= v231) {
          goto LABEL_67;
        }
        if (!*(void *)(v230 + 8 * (v113 + 2)))
        {
          if (v113 + 3 >= v231) {
            goto LABEL_67;
          }
          if (!*(void *)(v230 + 8 * (v113 + 3)))
          {
            uint64_t v119 = v113 + 4;
            if (v113 + 4 >= v231)
            {
LABEL_67:
              swift_release();
              goto LABEL_68;
            }
            if (!*(void *)(v230 + 8 * v119)) {
              break;
            }
          }
        }
      }
LABEL_54:
      sub_2368D1874();
      v237 = (void *)v121;
      uint64_t v238 = v122;
      uint64_t v117 = v123 + (v122 << 6);
LABEL_55:
      v124 = *(void **)(*(void *)(v114 + 48) + 8 * v117);
      v125 = (uint64_t *)(*(void *)(v114 + 56) + 16 * v117);
      uint64_t v126 = *v125;
      uint64_t v2 = v125[1];
      unint64_t v4 = sub_23697AF6C();
      uint64_t v1 = v127;
      uint64_t v128 = *(void *)(v69 + v110);
      sub_2367BB188();
      id v129 = *(void **)(v128 + 104);
      v236 = v124;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_isUniquelyReferenced_nonNull_native();
      v239 = v129;
      unint64_t v130 = sub_2368FE8EC(v4, v1);
      uint64_t v132 = v129[2];
      BOOL v133 = (v131 & 1) == 0;
      uint64_t v60 = (char *)(v132 + v133);
      if (__OFADD__(v132, v133))
      {
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
        goto LABEL_97;
      }
      unint64_t v69 = v130;
      char v134 = v131;
      sub_2367B7DBC(&qword_268898B78);
      if (sub_23697B78C())
      {
        unint64_t v135 = sub_2368FE8EC(v4, v1);
        if ((v134 & 1) != (v136 & 1)) {
          goto LABEL_101;
        }
        unint64_t v69 = v135;
      }
      uint64_t v137 = v239;
      if (v134)
      {
        uint64_t v138 = (void *)(v239[7] + 16 * v69);
        swift_bridgeObjectRelease();
        *uint64_t v138 = v126;
        v138[1] = v2;
      }
      else
      {
        v239[(v69 >> 6) + 8] |= 1 << v69;
        char v139 = (unint64_t *)(v137[6] + 16 * v69);
        *char v139 = v4;
        v139[1] = v1;
        v140 = (void *)(v137[7] + 16 * v69);
        void *v140 = v126;
        v140[1] = v2;
        uint64_t v141 = v137[2];
        BOOL v142 = __OFADD__(v141, 1);
        uint64_t v143 = v141 + 1;
        if (v142) {
          goto LABEL_95;
        }
        v137[2] = v143;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v69 = v234;
      uint64_t v110 = v235;
      char v144 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v94 = v233;
      if ((v144 & 1) == 0)
      {
        sub_2368D18E4();
        sub_236810328();
        v145 = (void *)sub_2368D1778();
        uint64_t v146 = sub_2367B11C0(v145);
        sub_2368D1640(v146);
      }
      uint64_t v60 = *(char **)(v69 + v110);
      sub_2367BB248();
      *((void *)v60 + 13) = v137;

      swift_bridgeObjectRelease();
      uint64_t v109 = v237;
      uint64_t v113 = v238;
      if (v237) {
        goto LABEL_41;
      }
    }
    while (1)
    {
      uint64_t v120 = v119 + 1;
      if (__OFADD__(v119, 1)) {
        break;
      }
      if (v120 >= v231) {
        goto LABEL_67;
      }
      ++v119;
      if (*(void *)(v230 + 8 * v120)) {
        goto LABEL_54;
      }
    }
LABEL_97:
    __break(1u);
  }
  __break(1u);
LABEL_101:
  sub_23697B9AC();
  __break(1u);
}

uint64_t DUStructuredEntity.copy(with:)@<X0>(void *a1@<X8>)
{
  return sub_2368CFEC0(type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntity, (void (*)(uint64_t))DUStructuredEntity.protoRepresentation.getter, (void (*)(char *))sub_23684F49C, a1);
}

Swift::Void __swiftcall DUStructuredEntity.encode(with:)(NSCoder with)
{
}

void DUStructuredEntity.__allocating_init(coder:)()
{
  id v1 = objc_allocWithZone(v0);
  sub_2368D16F4();
  DUStructuredEntity.init(coder:)();
}

void DUStructuredEntity.init(coder:)()
{
}

id DUStructuredEntity.init()()
{
  id v1 = &v0[OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_title];
  *(void *)id v1 = 0;
  *((void *)v1 + 1) = 0xE000000000000000;
  uint64_t v2 = &v0[OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_type];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0xE000000000000000;
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_labels] = MEMORY[0x263F8EE78];
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_phoneNumber);
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_email);
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_url);
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_addressComponents] = 0;
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_calendarEvent] = 0;
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_homeAutomationID);
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_displayInfo] = 0;
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding18DUStructuredEntity_responseDebugInfo] = 0;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for DUStructuredEntity();
  return objc_msgSendSuper2(&v4, sel_init);
}

id DUStructuredEntity.__deallocating_deinit(uint64_t a1)
{
  return sub_2368D037C(a1, type metadata accessor for DUStructuredEntity);
}

void sub_2368CE958()
{
}

uint64_t sub_2368CE97C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_23685025C();
  *a1 = result;
  return result;
}

uint64_t DUStructuredExtractionLabel.labelName.getter()
{
  return sub_2368CBA50();
}

uint64_t DUStructuredExtractionLabel.labelName.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding27DUStructuredExtractionLabel_labelName);
}

uint64_t (*DUStructuredExtractionLabel.labelName.modify())()
{
  return j_j__swift_endAccess;
}

double DUStructuredExtractionLabel.confidenceScore.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC21DocumentUnderstanding27DUStructuredExtractionLabel_confidenceScore;
  sub_2367BB188();
  return *(double *)v1;
}

uint64_t DUStructuredExtractionLabel.confidenceScore.setter(double a1)
{
  unint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC21DocumentUnderstanding27DUStructuredExtractionLabel_confidenceScore);
  uint64_t result = sub_2367BB248();
  *unint64_t v3 = a1;
  return result;
}

uint64_t (*DUStructuredExtractionLabel.confidenceScore.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUStructuredExtractionLabel.protoRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  sub_23697A70C();
  uint64_t v3 = type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntityLabel(0);
  objc_super v4 = (void *)(a1 + *(int *)(v3 + 20));
  *objc_super v4 = 0;
  v4[1] = 0;
  uint64_t v5 = a1 + *(int *)(v3 + 24);
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 8) = 1;
  uint64_t v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC21DocumentUnderstanding27DUStructuredExtractionLabel_labelName);
  sub_2367BB188();
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  *objc_super v4 = v7;
  v4[1] = v8;
  uint64_t v9 = (void *)(v1 + OBJC_IVAR____TtC21DocumentUnderstanding27DUStructuredExtractionLabel_confidenceScore);
  sub_2367BB188();
  *(void *)uint64_t v5 = *v9;
  *(unsigned char *)(v5 + 8) = 0;
  return swift_bridgeObjectRetain();
}

uint64_t DUStructuredExtractionLabel.copy(with:)@<X0>(void *a1@<X8>)
{
  return sub_2368CFEC0(type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntityLabel, (void (*)(uint64_t))DUStructuredExtractionLabel.protoRepresentation.getter, (void (*)(char *))sub_2368CBD98, a1);
}

uint64_t sub_2368CEC58(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr))
{
  id v5 = a1;
  a4(v8);

  sub_2367CBEE8(v8, v8[3]);
  uint64_t v6 = sub_23697B94C();
  sub_2367CBF2C((uint64_t)v8);
  return v6;
}

Swift::Void __swiftcall DUStructuredExtractionLabel.encode(with:)(NSCoder with)
{
}

void sub_2368CED08(void *a1, void (*a2)(void), unint64_t *a3, void (*a4)(uint64_t))
{
  a2();
  sub_2368D122C(a3, v7, a4);
  uint64_t v8 = (void *)sub_23697AB7C();
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = (void *)sub_2368D18C4();
    objc_msgSend(a1, sel_encodeObject_forKey_, v9, v10);
  }
}

void DUStructuredExtractionLabel.__allocating_init(coder:)()
{
  id v1 = objc_allocWithZone(v0);
  sub_2368D16F4();
  DUStructuredExtractionLabel.init(coder:)();
}

void DUStructuredExtractionLabel.init(coder:)()
{
}

void sub_2368CEE8C()
{
  sub_2368D1790();
  uint64_t v2 = v1;
  objc_super v4 = v3;
  uint64_t v6 = v5;
  swift_getObjectType();
  sub_2367CBCC4();
  id v7 = v0;
  if (sub_23697B47C())
  {
    swift_getObjectType();

    sub_2368D122C(v4, v8, v2);
    sub_23697AB8C();
  }
  else
  {
  }
  swift_getObjectType();
  sub_2367E8A80();
  sub_236883450();
}

id DUStructuredExtractionLabel.init()()
{
  id v1 = &v0[OBJC_IVAR____TtC21DocumentUnderstanding27DUStructuredExtractionLabel_labelName];
  *(void *)id v1 = 0;
  *((void *)v1 + 1) = 0xE000000000000000;
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding27DUStructuredExtractionLabel_confidenceScore] = 0;
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for DUStructuredExtractionLabel();
  return objc_msgSendSuper2(&v3, sel_init);
}

id DUStructuredExtractionLabel.__deallocating_deinit(uint64_t a1)
{
  return sub_2368D037C(a1, type metadata accessor for DUStructuredExtractionLabel);
}

uint64_t sub_2368CF05C@<X0>(uint64_t a1@<X8>)
{
  return DUStructuredExtractionLabel.protoRepresentation.getter(a1);
}

char *sub_2368CF080@<X0>(uint64_t a1@<X0>, char **a2@<X8>)
{
  uint64_t result = sub_2368CBEF0(a1);
  *a2 = result;
  return result;
}

uint64_t DUCalendarEvent.isAllDay.getter()
{
  id v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_isAllDay);
  sub_2367BB188();
  return *v1;
}

uint64_t DUCalendarEvent.isAllDay.setter(char a1)
{
  objc_super v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_isAllDay);
  uint64_t result = sub_2367BB248();
  *objc_super v3 = a1;
  return result;
}

uint64_t (*DUCalendarEvent.isAllDay.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUCalendarEvent.startDateComponents.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2368CF320(&OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_startDateComponents, &qword_26AD89410, a1);
}

uint64_t DUCalendarEvent.startDateComponents.setter(uint64_t a1)
{
  return sub_2368CF3D4(a1, &OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_startDateComponents, &qword_26AD89410);
}

uint64_t (*DUCalendarEvent.startDateComponents.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUCalendarEvent.startTimezone.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2368CF320(&OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_startTimezone, &qword_26AD89430, a1);
}

uint64_t sub_2368CF320@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *a1;
  sub_2367BB188();
  return sub_23680A59C(v6, a3, a2);
}

uint64_t DUCalendarEvent.startTimezone.setter(uint64_t a1)
{
  return sub_2368CF3D4(a1, &OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_startTimezone, &qword_26AD89430);
}

uint64_t sub_2368CF3D4(uint64_t a1, void *a2, uint64_t *a3)
{
  sub_2368D1860(a1, a2);
  sub_2367C0104();
  sub_23680FE24(a1, v3, a3);
  return swift_endAccess();
}

uint64_t (*DUCalendarEvent.startTimezone.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUCalendarEvent.endDateComponents.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2368CF320(&OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_endDateComponents, &qword_26AD89410, a1);
}

uint64_t DUCalendarEvent.endDateComponents.setter(uint64_t a1)
{
  return sub_2368CF3D4(a1, &OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_endDateComponents, &qword_26AD89410);
}

uint64_t (*DUCalendarEvent.endDateComponents.modify())()
{
  return j_j__swift_endAccess;
}

id sub_2368CF5B8(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v10 = sub_2367B7DBC(a3);
  uint64_t v11 = sub_2367BB430(v10);
  MEMORY[0x270FA5388](v11);
  sub_2367CBF80();
  a4();
  uint64_t v12 = a5(0);
  uint64_t v13 = 0;
  if (sub_2367B85F8(v6, 1, v12) != 1)
  {
    uint64_t v13 = (void *)a6();
    uint64_t v14 = sub_2368D16B0();
    v15(v14);
  }
  return v13;
}

uint64_t DUCalendarEvent.endTimezone.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2368CF320(&OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_endTimezone, &qword_26AD89430, a1);
}

void sub_2368CF70C(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(uint64_t), uint64_t (*a6)(void), void (*a7)(uint64_t))
{
  uint64_t v13 = sub_2367B7DBC(a4);
  uint64_t v14 = sub_2367BB430(v13);
  MEMORY[0x270FA5388](v14);
  sub_2367CBF80();
  if (a3)
  {
    a5(a3);
    uint64_t v15 = a6(0);
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v15 = a6(0);
    uint64_t v16 = 1;
  }
  sub_2367B7028(v7, v16, 1, v15);
  id v17 = a1;
  a7(v7);
}

uint64_t DUCalendarEvent.endTimezone.setter(uint64_t a1)
{
  return sub_2368CF3D4(a1, &OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_endTimezone, &qword_26AD89430);
}

uint64_t (*DUCalendarEvent.endTimezone.modify())()
{
  return j__swift_endAccess;
}

void DUCalendarEvent.protoRepresentation.getter()
{
  sub_2367CAE08();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  unint64_t v73 = 0;
  uint64_t v4 = sub_2367B7DBC(&qword_26AD89430);
  uint64_t v5 = sub_2367BB430(v4);
  MEMORY[0x270FA5388](v5);
  sub_2367BB610();
  uint64_t v79 = v6;
  sub_2367D9914();
  MEMORY[0x270FA5388](v7);
  sub_2367E5460();
  uint64_t v74 = v8;
  uint64_t v80 = sub_23697A43C();
  sub_2367CD744();
  uint64_t v78 = v9;
  MEMORY[0x270FA5388](v10);
  sub_2367BB610();
  uint64_t v72 = v11;
  sub_2367D9914();
  MEMORY[0x270FA5388](v12);
  sub_2367E5460();
  uint64_t v70 = v13;
  uint64_t v14 = sub_2367B7DBC(&qword_26AD89410);
  uint64_t v15 = sub_2367BB430(v14);
  MEMORY[0x270FA5388](v15);
  sub_2367BB610();
  uint64_t v75 = v16;
  sub_2367D9914();
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v68 - v18;
  uint64_t v20 = sub_23697A0AC();
  sub_2367CD744();
  uint64_t v22 = v21;
  MEMORY[0x270FA5388](v23);
  sub_2367BB610();
  uint64_t v76 = v24;
  sub_2367D9914();
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v68 - v26;
  uint64_t v28 = (int *)type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent(0);
  sub_23697A70C();
  uint64_t v29 = &v3[v28[6]];
  *(_OWORD *)uint64_t v29 = xmmword_236985C40;
  uint64_t v30 = (uint64_t *)&v3[v28[7]];
  *uint64_t v30 = 0;
  v30[1] = 0;
  unint64_t v69 = (uint64_t *)&v3[v28[8]];
  *(_OWORD *)unint64_t v69 = xmmword_236985C40;
  sub_23682558C(v28[9]);
  uint64_t v71 = v31;
  uint64_t v32 = (unsigned char *)(v1 + OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_isAllDay);
  sub_2367BB188();
  *uint64_t v3 = *v32;
  uint64_t v77 = v1;
  uint64_t v33 = v1 + OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_startDateComponents;
  sub_2367BB188();
  sub_23680A59C(v33, (uint64_t)v19, &qword_26AD89410);
  sub_2368100B8((uint64_t)v19, 1, v20);
  if (v34)
  {
    sub_2367BAA28((uint64_t)v19, &qword_26AD89410);
    uint64_t v35 = v80;
    uint64_t v36 = v73;
  }
  else
  {
    uint64_t v68 = v22;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v27, v19, v20);
    sub_236979F1C();
    sub_236810328();
    sub_236979F0C();
    sub_2368D122C(&qword_268899EE0, 255, MEMORY[0x263F063B0]);
    uint64_t v36 = v73;
    uint64_t v37 = sub_236979EFC();
    if (v36)
    {

      swift_release();
      uint64_t v36 = 0;
    }
    else
    {
      uint64_t v39 = v37;
      uint64_t v40 = v38;
      swift_release();
      *(void *)uint64_t v29 = v39;
      *((void *)v29 + 1) = v40;
    }
    uint64_t v35 = v80;
    uint64_t v22 = v68;
    (*(void (**)(char *, uint64_t))(v68 + 8))(v27, v20);
  }
  uint64_t v41 = v77;
  uint64_t v42 = v77 + OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_startTimezone;
  sub_2367BB188();
  uint64_t v43 = v42;
  uint64_t v44 = v74;
  sub_23680A59C(v43, v74, &qword_26AD89430);
  sub_2368100B8(v44, 1, v35);
  if (v34)
  {
    sub_2367BAA28(v44, &qword_26AD89430);
  }
  else
  {
    uint64_t v45 = v78;
    uint64_t v46 = v70;
    sub_2368D1910();
    v47();
    uint64_t v48 = sub_23697A3DC();
    uint64_t v50 = v49;
    swift_bridgeObjectRelease();
    *uint64_t v30 = v48;
    v30[1] = v50;
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v46, v35);
  }
  uint64_t v51 = v75;
  uint64_t v52 = v41 + OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_endDateComponents;
  sub_2367BB188();
  sub_23680A59C(v52, v51, &qword_26AD89410);
  sub_2368100B8(v51, 1, v20);
  if (v34)
  {
    sub_2367BAA28(v51, &qword_26AD89410);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v76, v51, v20);
    sub_236979F1C();
    sub_236810328();
    sub_236979F0C();
    sub_2368D122C(&qword_268899EE0, 255, MEMORY[0x263F063B0]);
    uint64_t v53 = sub_236979EFC();
    if (v36)
    {

      swift_release();
    }
    else
    {
      uint64_t v55 = v53;
      uint64_t v56 = v54;
      swift_release();
      uint64_t v57 = v69;
      sub_2367BAA90(*v69, v69[1]);
      *uint64_t v57 = v55;
      v57[1] = v56;
    }
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v76, v20);
  }
  uint64_t v58 = v41 + OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_endTimezone;
  sub_2367BB188();
  uint64_t v59 = v58;
  uint64_t v60 = v79;
  sub_23680A59C(v59, v79, &qword_26AD89430);
  sub_2368100B8(v60, 1, v35);
  if (v34)
  {
    sub_2367BAA28(v60, &qword_26AD89430);
  }
  else
  {
    uint64_t v61 = v78;
    uint64_t v62 = v72;
    sub_2368D1910();
    v63();
    uint64_t v64 = sub_23697A3DC();
    uint64_t v66 = v65;
    uint64_t v67 = v71;
    swift_bridgeObjectRelease();
    *uint64_t v67 = v64;
    v67[1] = v66;
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v62, v35);
  }
  sub_2367CAD58();
}

uint64_t DUCalendarEvent.copy(with:)@<X0>(void *a1@<X8>)
{
  return sub_2368CFEC0(type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent, (void (*)(uint64_t))DUCalendarEvent.protoRepresentation.getter, (void (*)(char *))sub_2368CC27C, a1);
}

uint64_t sub_2368CFEC0@<X0>(uint64_t (*a1)(void)@<X1>, void (*a2)(uint64_t)@<X2>, void (*a3)(char *)@<X3>, void *a4@<X8>)
{
  uint64_t v8 = a1(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v14 - v10;
  a2(v9);
  a3(v11);
  uint64_t v12 = (uint64_t *)sub_2368D16F4();
  uint64_t result = sub_2367B7DBC(v12);
  a4[3] = result;
  *a4 = v4;
  return result;
}

Swift::Void __swiftcall DUCalendarEvent.encode(with:)(NSCoder with)
{
  type metadata accessor for DUCalendarEvent();
  sub_2368D122C(&qword_268899EF0, 255, (void (*)(uint64_t))type metadata accessor for DUCalendarEvent);
  uint64_t v2 = (void *)sub_23697AB7C();
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = (void *)sub_2368D18C4();
    [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];
  }
}

uint64_t DUCalendarEvent.__allocating_init(coder:)()
{
  id v1 = objc_allocWithZone(v0);
  uint64_t v2 = (void *)sub_2368D16F4();
  return DUCalendarEvent.init(coder:)(v2);
}

uint64_t DUCalendarEvent.init(coder:)(void *a1)
{
  swift_getObjectType();
  sub_2367CBCC4();
  id v3 = v1;
  if (!sub_23697B47C())
  {

    goto LABEL_5;
  }
  sub_2368D16F4();
  swift_getObjectType();

  sub_2368D122C(&qword_268899EF0, 255, (void (*)(uint64_t))type metadata accessor for DUCalendarEvent);
  sub_23697AB8C();

  uint64_t v4 = v6;
  if (!v6)
  {
LABEL_5:
    swift_getObjectType();
    sub_2368254B0();
    swift_deallocPartialClassInstance();
    return 0;
  }
  swift_getObjectType();
  sub_2368254B0();
  swift_deallocPartialClassInstance();
  return v4;
}

id DUCalendarEvent.init()()
{
  v0[OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_isAllDay] = 0;
  uint64_t v1 = (uint64_t)&v0[OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_startDateComponents];
  uint64_t v2 = sub_23697A0AC();
  sub_2367B7028(v1, 1, 1, v2);
  uint64_t v3 = (uint64_t)&v0[OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_startTimezone];
  sub_23697A43C();
  sub_2368D167C(v3);
  sub_2367B7028((uint64_t)&v0[OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_endDateComponents], 1, 1, v2);
  sub_2368D167C((uint64_t)&v0[OBJC_IVAR____TtC21DocumentUnderstanding15DUCalendarEvent_endTimezone]);
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for DUCalendarEvent();
  return objc_msgSendSuper2(&v5, sel_init);
}

id DUCalendarEvent.__deallocating_deinit()
{
  return sub_2368D037C(0, type metadata accessor for DUCalendarEvent);
}

id sub_2368D037C(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

void sub_2368D043C()
{
}

char *sub_2368D0460@<X0>(uint64_t a1@<X0>, char **a2@<X8>)
{
  uint64_t result = sub_2368CC808(a1);
  *a2 = result;
  return result;
}

void sub_2368D0488()
{
}

uint64_t type metadata accessor for DUStructuredExtractionLabel()
{
  return self;
}

void sub_2368D04E0()
{
  sub_2367CAE08();
  sub_2368D1844();
  sub_2368D1728(v5, v6, v7, v8);
  sub_2368D14DC();
  if (v11)
  {
    __break(1u);
LABEL_12:
    sub_23697B9AC();
    __break(1u);
    return;
  }
  uint64_t v12 = v9;
  char v13 = v10;
  sub_2367B7DBC(&qword_268898B78);
  if (sub_2368D1804())
  {
    sub_2368FE8EC(v3, v2);
    sub_2368D154C();
    if (!v15) {
      goto LABEL_12;
    }
    uint64_t v12 = v14;
  }
  if (v13)
  {
    uint64_t v16 = (void *)(*(void *)(*(void *)v4 + 56) + 16 * v12);
    swift_bridgeObjectRelease();
    *uint64_t v16 = v1;
    v16[1] = v0;
    sub_2367CAD58();
  }
  else
  {
    sub_2368D1944();
    sub_2368D0EF0(v17, v18, v19, v20, v21, v22);
    sub_2367CAD58();
    swift_bridgeObjectRetain();
  }
}

void sub_2368D05B8()
{
  sub_2368D17C0();
  sub_2368D14AC(v4, v5, v6);
  sub_2368D14DC();
  if (v7)
  {
    __break(1u);
LABEL_12:
    sub_23697B9AC();
    __break(1u);
    return;
  }
  sub_2368D171C();
  sub_2367B7DBC(&qword_268899F10);
  if (sub_2368D152C())
  {
    sub_2368D1580();
    sub_2368D154C();
    if (!v9) {
      goto LABEL_12;
    }
    uint64_t v2 = v8;
  }
  if (v3)
  {
    sub_23680FE24(v0, *(void *)(*(void *)v1 + 56) + 40 * v2, &qword_26AD8BC20);
    sub_2368D156C();
  }
  else
  {
    sub_2368D1768();
    sub_2368D1274(v10, v11, v12, v13, v14);
    sub_2368D156C();
    swift_bridgeObjectRetain();
  }
}

void sub_2368D0684()
{
}

void sub_2368D06B8()
{
  sub_2368D1790();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v22 = v13;
  v7(v13);
  sub_2368D14DC();
  if (v14)
  {
    __break(1u);
LABEL_12:
    v4(0);
    sub_23697B9AC();
    __break(1u);
    return;
  }
  sub_2368D171C();
  sub_2367B7DBC(v6);
  if (sub_23697B78C())
  {
    v8(v22);
    sub_2368D154C();
    if (!v16) {
      goto LABEL_12;
    }
    unint64_t v1 = v15;
  }
  unint64_t v17 = *v0;
  if (v2)
  {
    uint64_t v18 = (uint64_t *)(v17[7] + 16 * v1);
    swift_bridgeObjectRelease();
    *uint64_t v18 = v12;
    v18[1] = v10;
    sub_236883450();
  }
  else
  {
    sub_2368D12EC(v1, v22, v12, v10, v17);
    sub_236883450();
    id v21 = v19;
  }
}

void sub_2368D07D0()
{
  sub_2368D17C0();
  sub_2368D14AC(v6, v7, v8);
  sub_2368D14DC();
  if (v9)
  {
    __break(1u);
LABEL_12:
    sub_23697B9AC();
    __break(1u);
    return;
  }
  sub_2368D171C();
  sub_2367B7DBC(&qword_268899110);
  if (sub_2368D152C())
  {
    sub_2368D1580();
    sub_2368D154C();
    if (!v11) {
      goto LABEL_12;
    }
    unint64_t v4 = v10;
  }
  uint64_t v12 = *v3;
  if (v5)
  {
    uint64_t v13 = *(void *)(v12 + 56);

    *(void *)(v13 + 8 * v4) = v0;
    sub_2368D156C();
  }
  else
  {
    sub_2368D0ED8(v4, v2, v1, v0, v12);
    sub_2368D156C();
    swift_bridgeObjectRetain();
  }
}

void sub_2368D0898()
{
  sub_2368D1790();
  sub_2368D1844();
  uint64_t v6 = v5;
  sub_2368D1728(v7, v8, v9, v10);
  sub_2368D14DC();
  if (v13)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v14 = v11;
  char v15 = v12;
  sub_2367B7DBC(&qword_268899A80);
  if ((sub_2368D1804() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v16 = sub_2368FE8EC(v3, v2);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_11:
    sub_23697B9AC();
    __break(1u);
    return;
  }
  unint64_t v14 = v16;
LABEL_5:
  if (v15)
  {
    uint64_t v18 = (void *)(*(void *)(*(void *)v4 + 56) + 24 * v14);
    swift_bridgeObjectRelease();
    *uint64_t v18 = v1;
    v18[1] = v0;
    v18[2] = v6;
    sub_236810340();
  }
  else
  {
    sub_2368D1944();
    sub_2368D13C0(v19, v20, v21, v22, v23, v24);
    sub_236810340();
    swift_bridgeObjectRetain();
  }
}

_OWORD *sub_2368D098C()
{
  sub_2368D17C0();
  sub_2368D14AC(v1, v2, v3);
  sub_2368D14DC();
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v7 = v4;
  char v8 = v5;
  sub_2367B7DBC(&qword_268899F18);
  if ((sub_2368D152C() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v9 = sub_2368D1580();
  if ((v8 & 1) != (v10 & 1))
  {
LABEL_13:
    uint64_t result = (_OWORD *)sub_23697B9AC();
    __break(1u);
    return result;
  }
  unint64_t v7 = v9;
LABEL_5:
  if (v8)
  {
    sub_2367CBF2C(*(void *)(*(void *)v0 + 56) + 32 * v7);
    sub_2368D156C();
    return sub_2367F0F40(v11, v12);
  }
  else
  {
    sub_2368D1768();
    sub_2368D13F4(v15, v16, v17, v18, v19);
    sub_2368D156C();
    return (_OWORD *)swift_bridgeObjectRetain();
  }
}

void sub_2368D0A70()
{
  sub_2368D17C0();
  sub_2368D14AC(v6, v7, v8);
  sub_2368D14DC();
  if (v9)
  {
    __break(1u);
LABEL_12:
    sub_23697B9AC();
    __break(1u);
    return;
  }
  sub_2368D171C();
  sub_2367B7DBC(&qword_268899F20);
  if (sub_2368D152C())
  {
    sub_2368D1580();
    sub_2368D154C();
    if (!v11) {
      goto LABEL_12;
    }
    unint64_t v4 = v10;
  }
  uint64_t v12 = *v3;
  if (v5)
  {
    uint64_t v13 = *(void *)(v12 + 56);
    swift_release();
    *(void *)(v13 + 8 * v4) = v0;
    sub_2368D156C();
  }
  else
  {
    sub_2368D0ED8(v4, v2, v1, v0, v12);
    sub_2368D156C();
    swift_bridgeObjectRetain();
  }
}

void sub_2368D0B38(uint64_t a1, uint64_t a2, double a3)
{
  sub_2368FE8EC(a1, a2);
  sub_2368D14DC();
  if (v9)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v10 = v7;
  char v11 = v8;
  sub_2367B7DBC(&qword_2688996B8);
  if ((sub_2368D1824() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v12 = sub_2368FE8EC(a1, a2);
  if ((v11 & 1) != (v13 & 1))
  {
LABEL_11:
    sub_23697B9AC();
    __break(1u);
    return;
  }
  unint64_t v10 = v12;
LABEL_5:
  uint64_t v14 = *v3;
  if (v11)
  {
    *(double *)(v14[7] + 8 * v10) = a3;
    sub_2368D16BC();
  }
  else
  {
    sub_2368D1460(v10, a1, a2, v14, a3);
    sub_2368D16BC();
    swift_bridgeObjectRetain();
  }
}

void sub_2368D0C30()
{
  sub_2368D17C0();
  sub_2368D14AC(v4, v5, v6);
  sub_2368D14DC();
  if (v7)
  {
    __break(1u);
LABEL_12:
    sub_23697B9AC();
    __break(1u);
    return;
  }
  sub_2368D171C();
  sub_2367B7DBC(&qword_268899F08);
  if (sub_2368D152C())
  {
    sub_2368D1580();
    sub_2368D154C();
    if (!v9) {
      goto LABEL_12;
    }
    uint64_t v2 = v8;
  }
  if (v3)
  {
    uint64_t v10 = *(void *)(*(void *)v1 + 56);
    swift_bridgeObjectRelease();
    *(void *)(v10 + 8 * v2) = v0;
    sub_2368D156C();
  }
  else
  {
    sub_2368D1768();
    sub_2368D0ED8(v11, v12, v13, v14, v15);
    sub_2368D156C();
    swift_bridgeObjectRetain();
  }
}

void sub_2368D0CF0()
{
  sub_2368D17C0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_2368FE968(v1);
  sub_2368D14DC();
  if (v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v8 = v5;
  char v9 = v6;
  sub_2367B7DBC(&qword_268899B28);
  if ((sub_2368D1824() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v10 = sub_2368FE968(v2);
  if ((v9 & 1) != (v11 & 1))
  {
LABEL_11:
    sub_23697B9AC();
    __break(1u);
    return;
  }
  unint64_t v8 = v10;
LABEL_5:
  if (v9)
  {
    uint64_t v12 = *(void *)(*(void *)v0 + 56);
    swift_bridgeObjectRelease();
    *(void *)(v12 + 8 * v8) = v4;
    sub_2368D156C();
  }
  else
  {
    sub_2368D156C();
    sub_2368D1330(v13, v14, v15, v16);
  }
}

uint64_t sub_2368D0DD8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_2367BB1EC();
  uint64_t v4 = sub_2368109B8();
  v5(v4);
  return a2;
}

uint64_t sub_2368D0E2C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_2367BB1EC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_2368D0E84(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_2367BB1EC();
  uint64_t v4 = sub_2368109A4();
  v5(v4);
  return a2;
}

void sub_2368D0ED8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_2368D14F0(a1, a2, a3, a4, a5);
  if (v7) {
    __break(1u);
  }
  else {
    sub_2368D16EC(v5, v6);
  }
}

unint64_t sub_2368D0EF0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t result = sub_2368D1610(a1, a2, a3, a4, a5, a6);
  char v9 = (void *)(v8 + 16 * result);
  *char v9 = v10;
  v9[1] = v11;
  uint64_t v12 = *(void *)(v7 + 16);
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    *(void *)(v7 + 16) = v14;
  }
  return result;
}

uint64_t type metadata accessor for DUStructuredEntity()
{
  return self;
}

uint64_t type metadata accessor for DUCalendarEvent()
{
  uint64_t result = qword_268899EF8;
  if (!qword_268899EF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2368D0F88(uint64_t a1)
{
  return MEMORY[0x270FA03F0](a1, &opaque type descriptor for <<opaque return type of DUStructuredEntity.protoRepresentation>>, 1);
}

uint64_t sub_2368D0FA4(uint64_t a1)
{
  return MEMORY[0x270FA03F0](a1, &opaque type descriptor for <<opaque return type of DUStructuredExtractionLabel.protoRepresentation>>, 1);
}

uint64_t sub_2368D0FC0(uint64_t a1)
{
  return MEMORY[0x270FA03F0](a1, &opaque type descriptor for <<opaque return type of DUCalendarEvent.protoRepresentation>>, 1);
}

uint64_t sub_2368D0FDC()
{
  return type metadata accessor for DUCalendarEvent();
}

void sub_2368D0FE4()
{
  sub_2368D10F4(319, &qword_26AD89418, MEMORY[0x263F063B0]);
  if (v0 <= 0x3F)
  {
    sub_2368D10F4(319, &qword_26AD89438, MEMORY[0x263F079C8]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_2368D10F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_23697B4EC();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2368D1148()
{
  return sub_2368D122C(&qword_268898108, 255, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntity);
}

uint64_t sub_2368D1194()
{
  return sub_2368D122C(&qword_2688980E8, 255, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntityLabel);
}

uint64_t sub_2368D11E0()
{
  return sub_2368D122C(&qword_2688980C8, 255, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_CalendarEvent);
}

uint64_t sub_2368D122C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2368D1274(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_23680FDE0(a4, a5[7] + 40 * a1, &qword_26AD8BC20);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

void sub_2368D12EC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a5[6] + 8 * a1) = a2;
  uint64_t v5 = (void *)(a5[7] + 16 * a1);
  *uint64_t v5 = a3;
  v5[1] = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    sub_2368D16EC((uint64_t)a5, v8);
  }
}

void sub_2368D1330(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2368D159C(a1, a2, a3, a4);
  if (v6) {
    __break(1u);
  }
  else {
    sub_2368D1858(v4, v5);
  }
}

void *sub_2368D134C(unint64_t a1, uint64_t a2, uint64_t a3, void *__src, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  char v6 = (void *)(a5[6] + 16 * a1);
  *char v6 = a2;
  v6[1] = a3;
  uint64_t result = memcpy((void *)(a5[7] + 88 * a1), __src, 0x58uLL);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_2368D13C0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t result = sub_2368D1610(a1, a2, a3, a4, a5, a6);
  BOOL v9 = (void *)(v8 + 24 * result);
  *BOOL v9 = v10;
  v9[1] = v11;
  v9[2] = v12;
  uint64_t v13 = *(void *)(v7 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v7 + 16) = v15;
  }
  return result;
}

_OWORD *sub_2368D13F4(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  char v6 = (void *)(a5[6] + 16 * a1);
  *char v6 = a2;
  v6[1] = a3;
  unint64_t result = sub_2367F0F40(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

void sub_2368D1460(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = (void *)(a4[6] + 16 * a1);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(double *)(a4[7] + 8 * a1) = a5;
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    sub_2368D1858((uint64_t)a4, v8);
  }
}

unint64_t sub_2368D14AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2368FE8EC(a2, a3);
}

unint64_t sub_2368D14F0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(a5 + 8 * (result >> 6) + 64) |= 1 << result;
  uint64_t v5 = (void *)(*(void *)(a5 + 48) + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(*(void *)(a5 + 56) + 8 * result) = a4;
  return result;
}

uint64_t sub_2368D152C()
{
  return sub_23697B78C();
}

void sub_2368D155C(uint64_t a1@<X8>)
{
  uint64_t v3 = v2 + a1;
  *(void *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 8) = v1;
}

unint64_t sub_2368D1580()
{
  return sub_2368FE8EC(v1, v0);
}

unint64_t sub_2368D159C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 8 * (result >> 6) + 64) |= 1 << result;
  *(void *)(*(void *)(a4 + 48) + 8 * result) = a2;
  *(void *)(*(void *)(a4 + 56) + 8 * result) = a3;
  return result;
}

uint64_t sub_2368D15D4()
{
  return v0;
}

uint64_t sub_2368D15E4()
{
  return v0;
}

uint64_t sub_2368D15F4(uint64_t a1)
{
  *(void *)(v2 + v1) = a1;
  return swift_release();
}

unint64_t sub_2368D1610(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(a6 + 8 * (result >> 6) + 64) |= 1 << result;
  uint64_t v6 = (void *)(*(void *)(a6 + 48) + 16 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  return result;
}

uint64_t sub_2368D1640(uint64_t a1)
{
  *(void *)(v2 + v1) = a1;
  return swift_release();
}

uint64_t sub_2368D167C(uint64_t a1)
{
  return sub_2367B7028(a1, 1, 1, v1);
}

uint64_t sub_2368D1698()
{
  return v0;
}

uint64_t sub_2368D16B0()
{
  return v0;
}

uint64_t sub_2368D16D4()
{
  return v0;
}

void sub_2368D16EC(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 16) = a2;
}

uint64_t sub_2368D16F4()
{
  return v0;
}

uint64_t sub_2368D1700()
{
  return swift_dynamicCast();
}

unint64_t sub_2368D1728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2368FE8EC(a3, a4);
}

uint64_t sub_2368D174C()
{
  return sub_2367BAA28(v0, v1);
}

uint64_t sub_2368D1778()
{
  return swift_retain();
}

uint64_t sub_2368D17A8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2368D17D4()
{
  return type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntity._StorageClass(0);
}

uint64_t sub_2368D17EC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2368D1804()
{
  return sub_23697B78C();
}

uint64_t sub_2368D1824()
{
  return sub_23697B78C();
}

void sub_2368D1858(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 16) = a2;
}

uint64_t sub_2368D1860(uint64_t a1, void *a2)
{
  return v2 + *a2;
}

uint64_t sub_2368D1888@<X0>(uint64_t a1@<X8>)
{
  return *(void *)a1;
}

void sub_2368D189C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 + 184) = (char *)&a9 - v9;
}

void sub_2368D18B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 + 112) = (char *)&a9 - v9;
}

uint64_t sub_2368D18C4()
{
  return sub_23697AF3C();
}

uint64_t sub_2368D18E4()
{
  return type metadata accessor for DocumentUnderstanding_ClientInterface_StructuredEntity._StorageClass(0);
}

uint64_t sub_2368D1924(uint64_t a1)
{
  return sub_2367B7028(v1, 1, 1, a1);
}

uint64_t sub_2368D1958()
{
  return v0;
}

uint64_t sub_2368D1964()
{
  return v0;
}

uint64_t sub_2368D1978@<X0>(uint64_t a1@<X8>)
{
  sub_23697A70C();
  uint64_t v2 = *(int *)(type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult(0) + 20);
  if (qword_268897F28 != -1) {
    swift_once();
  }
  *(void *)(a1 + v2) = qword_268899F28;
  return swift_retain();
}

uint64_t sub_2368D19F4()
{
  return sub_23697BA4C();
}

uint64_t sub_2368D1A34(uint64_t a1, uint64_t a2)
{
  return sub_2368D1B40(a1, a2, (void (*)(uint64_t))sub_23682EC1C);
}

uint64_t sub_2368D1A54(char a1)
{
  return sub_23697BA4C();
}

uint64_t sub_2368D1AA0(char a1)
{
  return sub_2368D1DCC(0, a1);
}

uint64_t sub_2368D1AAC(char a1)
{
  return sub_2368D1E60(0, a1);
}

uint64_t sub_2368D1AB8()
{
  return sub_23697BA4C();
}

uint64_t sub_2368D1AF8()
{
  return sub_2368D1EE0();
}

uint64_t sub_2368D1B04()
{
  return sub_23697BA4C();
}

uint64_t sub_2368D1B40(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = sub_2368D89EC();
  a3(v4);
  sub_2368D8A68();
  return sub_23697BA4C();
}

uint64_t sub_2368D1B90(uint64_t a1, char a2)
{
  sub_23683ACB0(a2);
  sub_23697B04C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2368D1BE4()
{
  return sub_23697BA3C();
}

uint64_t sub_2368D1C0C()
{
  sub_23697B04C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2368D1C6C(uint64_t a1, char a2)
{
  if (!a2) {
    sub_2368D8A9C();
  }
  sub_23697B04C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2368D1CD8(uint64_t a1, char a2)
{
  if (!a2) {
    sub_2368D8A88();
  }
  sub_23697B04C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2368D1D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2368D1D78(a1, a2, a3, (void (*)(uint64_t))sub_23682EC1C);
}

uint64_t sub_2368D1D78(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5 = sub_23697BA2C();
  a4(v5);
  sub_2368D8A68();
  return sub_23697BA4C();
}

uint64_t sub_2368D1DCC(uint64_t a1, char a2)
{
  if (!a2) {
    sub_2368D8A88();
  }
  sub_23697B04C();
  swift_bridgeObjectRelease();
  return sub_23697BA4C();
}

uint64_t sub_2368D1E60(uint64_t a1, char a2)
{
  if (!a2) {
    sub_2368D8A9C();
  }
  sub_23697B04C();
  swift_bridgeObjectRelease();
  return sub_23697BA4C();
}

uint64_t sub_2368D1EE0()
{
  return sub_23697BA4C();
}

uint64_t sub_2368D1F58()
{
  return sub_23697BA4C();
}

uint64_t sub_2368D1F9C()
{
  return sub_23697BA4C();
}

uint64_t sub_2368D1FE0(uint64_t a1, char a2)
{
  return sub_23697BA4C();
}

void sub_2368D202C()
{
}

uint64_t sub_2368D2038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2368D22F0(a1, a2, a3, (uint64_t (*)(void))sub_2368D202C);
}

uint64_t sub_2368D2050(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2368D2340(a1, a2, a3, (uint64_t (*)(void))sub_2368D202C);
}

uint64_t sub_2368D2068()
{
  return sub_2368D1B40(*(void *)v0, *(unsigned __int8 *)(v0 + 8), (void (*)(uint64_t))sub_2368D8930);
}

uint64_t sub_2368D20A4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2368D8834();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t sub_2368D20F0(uint64_t a1)
{
  return sub_2368D1D78(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8), (void (*)(uint64_t))sub_2368D8930);
}

BOOL sub_2368D212C(uint64_t a1, uint64_t *a2)
{
  return sub_23682ECB8(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *a2);
}

uint64_t sub_2368D2148@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  uint64_t v1 = MEMORY[0x263F8EE78];
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0xE000000000000000;
  type metadata accessor for DocumentUnderstanding_ClientInterface_TaggedCharacterRange(0);
  return sub_23697A70C();
}

void sub_2368D219C()
{
  qword_26889ABA0 = (uint64_t)&unk_26E9C9D10;
}

uint64_t *sub_2368D21B0()
{
  if (qword_268897F00 != -1) {
    swift_once();
  }
  return &qword_26889ABA0;
}

uint64_t sub_2368D21FC@<X0>(void *a1@<X8>)
{
  sub_2368D21B0();
  *a1 = qword_26889ABA0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2368D223C()
{
  uint64_t v1 = *(int *)(type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult._StorageClass();
    swift_allocObject();
    uint64_t v2 = swift_retain();
    *(void *)(v0 + v1) = sub_2368D3BF0(v2);
    swift_release();
  }
  return swift_retain();
}

void sub_2368D22CC()
{
}

uint64_t sub_2368D22D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2368D22F0(a1, a2, a3, (uint64_t (*)(void))sub_2368D22CC);
}

uint64_t sub_2368D22F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4 = a4();
  return sub_2368D8A54(v4, v5);
}

uint64_t sub_2368D231C()
{
  return nullsub_1(*v0);
}

uint64_t sub_2368D2328(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2368D2340(a1, a2, a3, (uint64_t (*)(void))sub_2368D22CC);
}

uint64_t sub_2368D2340(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4 = a4(*a1);
  return sub_2368D8A54(v4, v5);
}

uint64_t sub_2368D2370@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = nullsub_1(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_2368D23A0()
{
  return sub_2368D1B40(*(void *)v0, *(unsigned __int8 *)(v0 + 8), (void (*)(uint64_t))sub_2368D4C74);
}

uint64_t sub_2368D23DC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2368D8880();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t sub_2368D2428(uint64_t a1)
{
  return sub_2368D1D78(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8), (void (*)(uint64_t))sub_2368D4C74);
}

BOOL sub_2368D2464(uint64_t a1, uint64_t *a2)
{
  return sub_23682DCA0(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *a2);
}

void sub_2368D2480()
{
  qword_26889ABA8 = (uint64_t)&unk_26E9C9DC0;
}

uint64_t *sub_2368D2494()
{
  if (qword_268897F08 != -1) {
    swift_once();
  }
  return &qword_26889ABA8;
}

uint64_t sub_2368D24E0@<X0>(void *a1@<X8>)
{
  sub_2368D2494();
  *a1 = qword_26889ABA8;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2368D2520()
{
  uint64_t v0 = sub_23697A9EC();
  sub_2367BA9C4(v0, qword_26889ABB0);
  sub_2367BA98C(v0, (uint64_t)qword_26889ABB0);
  sub_2367B7DBC(&qword_268898148);
  uint64_t v1 = (int *)(sub_2367B7DBC(&qword_268898150) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_236987E20;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "annotationType";
  *(void *)(v6 + 8) = 14;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_23697A9CC();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "tags";
  *(void *)(v10 + 8) = 4;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "range";
  *((void *)v12 + 1) = 5;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)BOOL v14 = "text";
  *((void *)v14 + 1) = 4;
  v14[16] = 2;
  v9();
  return sub_23697A9DC();
}

uint64_t sub_2368D274C()
{
  uint64_t result = sub_23697A77C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_2368D2854();
          break;
        case 2:
          sub_2367BB5F8();
          sub_23697A83C();
          break;
        case 3:
          sub_2367BB5F8();
          sub_23697A7DC();
          break;
        case 4:
          sub_2367BB5F8();
          sub_23697A87C();
          break;
        default:
          break;
      }
      uint64_t result = sub_23697A77C();
    }
  }
  return result;
}

uint64_t sub_2368D2854()
{
  return sub_23697A7BC();
}

uint64_t sub_2368D28BC()
{
  if (!*v0 || (sub_2368D8834(), uint64_t result = sub_23697A94C(), !v1))
  {
    if (!*(void *)(v0[2] + 16) || (uint64_t result = sub_23697A97C(), !v1))
    {
      if (!*(void *)(v0[3] + 16) || (uint64_t result = sub_23697A91C(), !v1))
      {
        unint64_t v3 = v0[5];
        uint64_t v4 = HIBYTE(v3) & 0xF;
        if ((v3 & 0x2000000000000000) == 0) {
          uint64_t v4 = v0[4] & 0xFFFFFFFFFFFFLL;
        }
        if (!v4 || (uint64_t result = sub_23697A99C(), !v1))
        {
          type metadata accessor for DocumentUnderstanding_ClientInterface_TaggedCharacterRange(0);
          return sub_23697A6FC();
        }
      }
    }
  }
  return result;
}

uint64_t sub_2368D29FC(uint64_t *a1, uint64_t *a2)
{
  sub_23697A71C();
  sub_2367BB1B8();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_2367BB274();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = *a1;
  uint64_t v13 = *a2;
  if (*((unsigned char *)a2 + 8) == 1)
  {
    switch(v13)
    {
      case 1:
        if (v12 != 1) {
          goto LABEL_29;
        }
        goto LABEL_6;
      case 2:
        if (v12 != 2) {
          goto LABEL_29;
        }
        goto LABEL_6;
      case 3:
        if (v12 != 3) {
          goto LABEL_29;
        }
        goto LABEL_6;
      case 4:
        if (v12 != 4) {
          goto LABEL_29;
        }
        goto LABEL_6;
      case 5:
        if (v12 != 5) {
          goto LABEL_29;
        }
        goto LABEL_6;
      case 6:
        if (v12 != 6) {
          goto LABEL_29;
        }
        goto LABEL_6;
      case 7:
        if (v12 != 7) {
          goto LABEL_29;
        }
        goto LABEL_6;
      case 8:
        if (v12 != 8) {
          goto LABEL_29;
        }
        goto LABEL_6;
      default:
        if (!v12) {
          goto LABEL_6;
        }
        goto LABEL_29;
    }
  }
  if (v12 != v13) {
    goto LABEL_29;
  }
LABEL_6:
  if ((sub_2368125B0((void *)a1[2], (void *)a2[2]) & 1) == 0
    || (sub_2368129F8((void *)a1[3], (void *)a2[3]) & 1) == 0)
  {
LABEL_29:
    char v15 = 0;
    return v15 & 1;
  }
  BOOL v14 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v14 || (char v15 = 0, (sub_23697B95C() & 1) != 0))
  {
    uint64_t v16 = type metadata accessor for DocumentUnderstanding_ClientInterface_TaggedCharacterRange(0);
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v17(v11, (char *)a1 + *(int *)(v16 + 32), v3);
    v17(v2, (char *)a2 + *(int *)(v16 + 32), v3);
    sub_2368D85EC(&qword_268898158, MEMORY[0x263F50560]);
    char v15 = sub_2367BB2E8();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
    v18(v2, v3);
    v18(v11, v3);
  }
  return v15 & 1;
}

unint64_t sub_2368D2C60()
{
  return 0xD00000000000003CLL;
}

uint64_t sub_2368D2C7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 32);
  uint64_t v5 = sub_23697A71C();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_2368D2CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 32);
  uint64_t v5 = sub_23697A71C();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*sub_2368D2D5C())(void)
{
  return nullsub_1;
}

uint64_t sub_2368D2D80()
{
  return sub_2368D274C();
}

uint64_t sub_2368D2D98()
{
  return sub_2368D28BC();
}

uint64_t sub_2368D2DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2368D85EC(&qword_268899FC0, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_TaggedCharacterRange);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2368D2E2C@<X0>(uint64_t a1@<X8>)
{
  return sub_2367F0080(&qword_268897F10, (uint64_t)qword_26889ABB0, a1);
}

uint64_t sub_2368D2E50(uint64_t a1)
{
  uint64_t v2 = sub_2368D85EC(&qword_268899F88, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_TaggedCharacterRange);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2368D2EBC()
{
  return sub_2368D8090((void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_TaggedCharacterRange, &qword_268899F90, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_TaggedCharacterRange);
}

uint64_t sub_2368D2F18()
{
  sub_2368D85EC(&qword_268899F88, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_TaggedCharacterRange);
  return sub_23697A8DC();
}

uint64_t sub_2368D2F98()
{
  uint64_t v0 = sub_23697A9EC();
  sub_2367BA9C4(v0, qword_26889ABC8);
  sub_2367BA98C(v0, (uint64_t)qword_26889ABC8);
  sub_2367B7DBC(&qword_268898148);
  uint64_t v1 = (int *)(sub_2367B7DBC(&qword_268898150) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_236985C90;
  unint64_t v4 = v24 + v3 + v1[14];
  *(void *)(v24 + v3) = 0;
  *(void *)unint64_t v4 = "unknown";
  *(void *)(v4 + 8) = 7;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = *MEMORY[0x263F50718];
  uint64_t v6 = sub_23697A9CC();
  uint64_t v7 = *(void (**)(void))(*(void *)(v6 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v7)(v4, v5, v6);
  unint64_t v8 = v24 + v3 + v2 + v1[14];
  *(void *)(v24 + v3 + v2) = 1;
  *(void *)unint64_t v8 = "css";
  *(void *)(v8 + 8) = 3;
  *(unsigned char *)(v8 + 16) = 2;
  v7();
  uint64_t v9 = (void *)(v24 + v3 + 2 * v2);
  uint64_t v10 = (char *)v9 + v1[14];
  *uint64_t v9 = 2;
  *(void *)uint64_t v10 = "cross";
  *((void *)v10 + 1) = 5;
  v10[16] = 2;
  v7();
  uint64_t v11 = (void *)(v24 + v3 + 3 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "dataDetectors";
  *((void *)v12 + 1) = 13;
  v12[16] = 2;
  v7();
  uint64_t v13 = (void *)(v24 + v3 + 4 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)BOOL v14 = "html";
  *((void *)v14 + 1) = 4;
  v14[16] = 2;
  v7();
  char v15 = (void *)(v24 + v3 + 5 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *char v15 = 5;
  *(void *)uint64_t v16 = "human";
  *((void *)v16 + 1) = 5;
  v16[16] = 2;
  v7();
  uint64_t v17 = (void *)(v24 + v3 + 6 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "misc";
  *((void *)v18 + 1) = 4;
  v18[16] = 2;
  v7();
  unint64_t v19 = (void *)(v24 + v3 + 7 * v2);
  uint64_t v20 = (char *)v19 + v1[14];
  *unint64_t v19 = 7;
  *(void *)uint64_t v20 = "modelOutput";
  *((void *)v20 + 1) = 11;
  v20[16] = 2;
  v7();
  uint64_t v21 = (void *)(v24 + v3 + 8 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *uint64_t v21 = 8;
  *(void *)uint64_t v22 = "wordToken";
  *((void *)v22 + 1) = 9;
  v22[16] = 2;
  v7();
  return sub_23697A9DC();
}

uint64_t sub_2368D32EC@<X0>(uint64_t a1@<X8>)
{
  return sub_2367F0080(&qword_268897F18, (uint64_t)qword_26889ABC8, a1);
}

uint64_t sub_2368D3310()
{
  uint64_t v0 = sub_23697A9EC();
  sub_2367BA9C4(v0, qword_26889ABE0);
  sub_2367BA98C(v0, (uint64_t)qword_26889ABE0);
  sub_2367B7DBC(&qword_268898148);
  uint64_t v1 = (int *)(sub_2367B7DBC(&qword_268898150) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_23698CC80;
  unint64_t v4 = v60 + v3 + v1[14];
  *(void *)(v60 + v3) = 1;
  *(void *)unint64_t v4 = "detectedEventPolarity";
  *(void *)(v4 + 8) = 21;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = *MEMORY[0x263F50718];
  uint64_t v6 = sub_23697A9CC();
  uint64_t v7 = *(void (**)(void))(*(void *)(v6 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v7)(v4, v5, v6);
  unint64_t v8 = v60 + v3 + v2 + v1[14];
  *(void *)(v60 + v3 + v2) = 2;
  *(void *)unint64_t v8 = "reservationIdError";
  *(void *)(v8 + 8) = 18;
  *(unsigned char *)(v8 + 16) = 2;
  v7();
  uint64_t v9 = (void *)(v60 + v3 + 2 * v2);
  uint64_t v10 = (char *)v9 + v1[14];
  *uint64_t v9 = 3;
  *(void *)uint64_t v10 = "reservationId";
  *((void *)v10 + 1) = 13;
  v10[16] = 2;
  v7();
  uint64_t v11 = (void *)(v60 + v3 + 3 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 4;
  *(void *)uint64_t v12 = "reservationNameError";
  *((void *)v12 + 1) = 20;
  v12[16] = 2;
  v7();
  uint64_t v13 = (void *)(v60 + v3 + 4 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 5;
  *(void *)BOOL v14 = "reservationName";
  *((void *)v14 + 1) = 15;
  v14[16] = 2;
  v7();
  char v15 = (void *)(v60 + v3 + 5 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *char v15 = 6;
  *(void *)uint64_t v16 = "startAddressError";
  *((void *)v16 + 1) = 17;
  v16[16] = 2;
  v7();
  uint64_t v17 = (void *)(v60 + v3 + 6 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 7;
  *(void *)uint64_t v18 = "startAddress";
  *((void *)v18 + 1) = 12;
  v18[16] = 2;
  v7();
  unint64_t v19 = (void *)(v60 + v3 + 7 * v2);
  uint64_t v20 = (char *)v19 + v1[14];
  *unint64_t v19 = 8;
  *(void *)uint64_t v20 = "startAddressComponents";
  *((void *)v20 + 1) = 22;
  v20[16] = 2;
  v7();
  uint64_t v21 = (void *)(v60 + v3 + 8 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *uint64_t v21 = 9;
  *(void *)uint64_t v22 = "endAddressError";
  *((void *)v22 + 1) = 15;
  v22[16] = 2;
  v7();
  uint64_t v23 = (void *)(v60 + v3 + 9 * v2);
  uint64_t v24 = (char *)v23 + v1[14];
  *uint64_t v23 = 10;
  *(void *)uint64_t v24 = "endAddress";
  *((void *)v24 + 1) = 10;
  v24[16] = 2;
  v7();
  uint64_t v25 = (void *)(v60 + v3 + 10 * v2);
  uint64_t v26 = (char *)v25 + v1[14];
  *uint64_t v25 = 11;
  *(void *)uint64_t v26 = "endAddressComponents";
  *((void *)v26 + 1) = 20;
  v26[16] = 2;
  v7();
  uint64_t v27 = (void *)(v60 + v3 + 11 * v2);
  uint64_t v28 = (char *)v27 + v1[14];
  *uint64_t v27 = 12;
  *(void *)uint64_t v28 = "startPlaceError";
  *((void *)v28 + 1) = 15;
  v28[16] = 2;
  v7();
  uint64_t v29 = (void *)(v60 + v3 + 12 * v2);
  uint64_t v30 = (char *)v29 + v1[14];
  *uint64_t v29 = 13;
  *(void *)uint64_t v30 = "startPlace";
  *((void *)v30 + 1) = 10;
  v30[16] = 2;
  v7();
  uint64_t v31 = (void *)(v60 + v3 + 13 * v2);
  uint64_t v32 = (char *)v31 + v1[14];
  *uint64_t v31 = 14;
  *(void *)uint64_t v32 = "endPlaceError";
  *((void *)v32 + 1) = 13;
  v32[16] = 2;
  v7();
  uint64_t v33 = (void *)(v60 + v3 + 14 * v2);
  char v34 = (char *)v33 + v1[14];
  void *v33 = 15;
  *(void *)char v34 = "endPlace";
  *((void *)v34 + 1) = 8;
  v34[16] = 2;
  v7();
  uint64_t v35 = (void *)(v60 + v3 + 15 * v2);
  uint64_t v36 = (char *)v35 + v1[14];
  *uint64_t v35 = 16;
  *(void *)uint64_t v36 = "startDateError";
  *((void *)v36 + 1) = 14;
  v36[16] = 2;
  v7();
  uint64_t v37 = (void *)(v60 + v3 + 16 * v2);
  uint64_t v38 = (char *)v37 + v1[14];
  *uint64_t v37 = 17;
  *(void *)uint64_t v38 = "startDate";
  *((void *)v38 + 1) = 9;
  v38[16] = 2;
  v7();
  uint64_t v39 = (void *)(v60 + v3 + 17 * v2);
  uint64_t v40 = (char *)v39 + v1[14];
  *uint64_t v39 = 18;
  *(void *)uint64_t v40 = "endDateError";
  *((void *)v40 + 1) = 12;
  v40[16] = 2;
  v7();
  uint64_t v41 = (void *)(v60 + v3 + 18 * v2);
  uint64_t v42 = (char *)v41 + v1[14];
  *uint64_t v41 = 19;
  *(void *)uint64_t v42 = "endDate";
  *((void *)v42 + 1) = 7;
  v42[16] = 2;
  v7();
  uint64_t v43 = (void *)(v60 + v3 + 19 * v2);
  uint64_t v44 = (char *)v43 + v1[14];
  void *v43 = 20;
  *(void *)uint64_t v44 = "hotelNameError";
  *((void *)v44 + 1) = 14;
  v44[16] = 2;
  v7();
  uint64_t v45 = (void *)(v60 + v3 + 20 * v2);
  uint64_t v46 = (char *)v45 + v1[14];
  *uint64_t v45 = 21;
  *(void *)uint64_t v46 = "hotelName";
  *((void *)v46 + 1) = 9;
  v46[16] = 2;
  v7();
  uint64_t v47 = (void *)(v60 + v3 + 21 * v2);
  uint64_t v48 = (char *)v47 + v1[14];
  *uint64_t v47 = 22;
  *(void *)uint64_t v48 = "guestNameError";
  *((void *)v48 + 1) = 14;
  v48[16] = 2;
  v7();
  uint64_t v49 = (void *)(v60 + v3 + 22 * v2);
  uint64_t v50 = (char *)v49 + v1[14];
  *uint64_t v49 = 23;
  *(void *)uint64_t v50 = "guestName";
  *((void *)v50 + 1) = 9;
  v50[16] = 2;
  v7();
  uint64_t v51 = (void *)(v60 + v3 + 23 * v2);
  uint64_t v52 = (char *)v51 + v1[14];
  *uint64_t v51 = 24;
  *(void *)uint64_t v52 = "movieNameError";
  *((void *)v52 + 1) = 14;
  v52[16] = 2;
  v7();
  uint64_t v53 = (void *)(v60 + v3 + 24 * v2);
  uint64_t v54 = (char *)v53 + v1[14];
  *uint64_t v53 = 25;
  *(void *)uint64_t v54 = "movieName";
  *((void *)v54 + 1) = 9;
  v54[16] = 2;
  v7();
  uint64_t v55 = (void *)(v60 + v3 + 25 * v2);
  uint64_t v56 = (char *)v55 + v1[14];
  *uint64_t v55 = 26;
  *(void *)uint64_t v56 = "text";
  *((void *)v56 + 1) = 4;
  v56[16] = 2;
  v7();
  uint64_t v57 = (void *)(v60 + v3 + 26 * v2);
  uint64_t v58 = (char *)v57 + v1[14];
  *uint64_t v57 = 27;
  *(void *)uint64_t v58 = "tags";
  *((void *)v58 + 1) = 4;
  v58[16] = 2;
  v7();
  return sub_23697A9DC();
}

uint64_t sub_2368D3AA8()
{
  type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult._StorageClass();
  swift_allocObject();
  uint64_t result = sub_2368D3AE8();
  qword_268899F28 = result;
  return result;
}

uint64_t sub_2368D3AE8()
{
  *(unsigned char *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(_WORD *)(v0 + 32) = 256;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 40) = 0;
  *(_WORD *)(v0 + 64) = 256;
  *(void *)(v0 + 80) = 0;
  *(void *)(v0 + 88) = 0;
  *(void *)(v0 + 72) = 0;
  *(_WORD *)(v0 + 96) = 256;
  *(void *)(v0 + 104) = 0;
  *(void *)(v0 + 112) = 0;
  uint64_t v1 = MEMORY[0x263F8EE78];
  *(void *)(v0 + 120) = sub_23697AE9C();
  *(void *)(v0 + 128) = 0;
  *(_WORD *)(v0 + 136) = 256;
  *(void *)(v0 + 144) = 0;
  *(void *)(v0 + 152) = 0;
  *(void *)(v0 + 160) = sub_23697AE9C();
  *(void *)(v0 + 168) = 0;
  *(_WORD *)(v0 + 176) = 256;
  *(void *)(v0 + 192) = 0;
  *(void *)(v0 + 200) = 0;
  *(void *)(v0 + 184) = 0;
  *(_WORD *)(v0 + 208) = 256;
  *(void *)(v0 + 224) = 0;
  *(void *)(v0 + 232) = 0;
  *(void *)(v0 + 216) = 0;
  *(_WORD *)(v0 + 240) = 256;
  *(void *)(v0 + 256) = 0;
  *(void *)(v0 + 264) = 0;
  *(void *)(v0 + 248) = 0;
  *(_WORD *)(v0 + 272) = 256;
  *(void *)(v0 + 280) = 0;
  *(void *)(v0 + 288) = 0;
  *(void *)(v0 + 296) = 0;
  *(_WORD *)(v0 + 304) = 256;
  *(void *)(v0 + 312) = 0;
  *(void *)(v0 + 320) = 0;
  *(void *)(v0 + 328) = 0;
  *(_WORD *)(v0 + 336) = 256;
  *(void *)(v0 + 344) = 0;
  *(void *)(v0 + 352) = 0;
  *(void *)(v0 + 360) = 0;
  *(_WORD *)(v0 + 368) = 256;
  *(_OWORD *)(v0 + 376) = 0u;
  *(_OWORD *)(v0 + 392) = 0u;
  *(void *)(v0 + 408) = v1;
  return v0;
}

uint64_t sub_2368D3BF0(uint64_t a1)
{
  *(unsigned char *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(_WORD *)(v1 + 32) = 256;
  uint64_t v48 = (unsigned char *)(a1 + 273);
  *(void *)(v1 + 48) = 0;
  *(_WORD *)(v1 + 64) = 256;
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 40) = 0;
  *(void *)(v1 + 80) = 0;
  *(_WORD *)(v1 + 96) = 256;
  *(void *)(v1 + 88) = 0;
  *(void *)(v1 + 72) = 0;
  *(void *)(v1 + 112) = 0;
  *(void *)(v1 + 104) = 0;
  uint64_t v3 = MEMORY[0x263F8EE78];
  *(void *)(v1 + 120) = sub_2368D8A28();
  *(void *)(v1 + 128) = 0;
  *(_WORD *)(v1 + 136) = 256;
  *(void *)(v1 + 152) = 0;
  *(void *)(v1 + 144) = 0;
  *(void *)(v1 + 160) = sub_2368D8A28();
  *(void *)(v1 + 168) = 0;
  *(_WORD *)(v1 + 176) = 256;
  *(void *)(v1 + 192) = 0;
  *(void *)(v1 + 200) = 0;
  *(void *)(v1 + 184) = 0;
  *(_WORD *)(v1 + 208) = 256;
  *(void *)(v1 + 224) = 0;
  *(_WORD *)(v1 + 240) = 256;
  *(void *)(v1 + 232) = 0;
  *(void *)(v1 + 216) = 0;
  *(void *)(v1 + 256) = 0;
  *(void *)(v1 + 264) = 0;
  *(_WORD *)(v1 + 272) = 256;
  *(void *)(v1 + 248) = 0;
  *(void *)(v1 + 280) = 0;
  *(void *)(v1 + 288) = 0;
  *(void *)(v1 + 296) = 0;
  *(_WORD *)(v1 + 304) = 256;
  *(void *)(v1 + 312) = 0;
  *(void *)(v1 + 320) = 0;
  *(void *)(v1 + 328) = 0;
  *(_WORD *)(v1 + 336) = 256;
  *(void *)(v1 + 344) = 0;
  *(void *)(v1 + 352) = 0;
  *(void *)(v1 + 360) = 0;
  *(_WORD *)(v1 + 368) = 256;
  *(void *)(v1 + 408) = v3;
  *(_OWORD *)(v1 + 376) = 0u;
  *(_OWORD *)(v1 + 392) = 0u;
  sub_2367BB188();
  char v4 = *(unsigned char *)(a1 + 16);
  sub_2367BB248();
  *(unsigned char *)(v1 + 16) = v4;
  sub_2367BB188();
  uint64_t v5 = *(void *)(a1 + 24);
  char v6 = *(unsigned char *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 33);
  sub_2367BB248();
  *(void *)(v1 + 24) = v5;
  *(unsigned char *)(v1 + 32) = v6;
  *(unsigned char *)(v1 + 33) = v7;
  sub_2367BB188();
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  sub_2367BB248();
  *(void *)(v1 + 40) = v9;
  *(void *)(v1 + 48) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v10 = *(void *)(a1 + 56);
  char v11 = *(unsigned char *)(a1 + 64);
  char v12 = *(unsigned char *)(a1 + 65);
  sub_2367BB248();
  *(void *)(v1 + 56) = v10;
  *(unsigned char *)(v1 + 64) = v11;
  *(unsigned char *)(v1 + 65) = v12;
  sub_2367BB188();
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t v13 = *(void *)(a1 + 80);
  sub_2367BB248();
  *(void *)(v1 + 72) = v14;
  *(void *)(v1 + 80) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v15 = *(void *)(a1 + 88);
  LOBYTE(v10) = *(unsigned char *)(a1 + 96);
  LOBYTE(v14) = *(unsigned char *)(a1 + 97);
  sub_2367BB248();
  *(void *)(v1 + 88) = v15;
  *(unsigned char *)(v1 + 96) = v10;
  *(unsigned char *)(v1 + 97) = v14;
  sub_2367BB188();
  uint64_t v17 = *(void *)(a1 + 104);
  uint64_t v16 = *(void *)(a1 + 112);
  sub_2367BB248();
  *(void *)(v1 + 104) = v17;
  *(void *)(v1 + 112) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v18 = *(void *)(a1 + 120);
  sub_2367BB248();
  *(void *)(v1 + 120) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v19 = *(void *)(a1 + 128);
  LOBYTE(v10) = *(unsigned char *)(a1 + 136);
  LOBYTE(v17) = *(unsigned char *)(a1 + 137);
  sub_2367BB248();
  *(void *)(v1 + 128) = v19;
  *(unsigned char *)(v1 + 136) = v10;
  *(unsigned char *)(v1 + 137) = v17;
  sub_2367BB188();
  uint64_t v21 = *(void *)(a1 + 144);
  uint64_t v20 = *(void *)(a1 + 152);
  sub_2367BB248();
  *(void *)(v1 + 144) = v21;
  *(void *)(v1 + 152) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v22 = *(void *)(a1 + 160);
  sub_2367BB248();
  *(void *)(v1 + 160) = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v23 = *(void *)(a1 + 168);
  LOBYTE(v10) = *(unsigned char *)(a1 + 176);
  LOBYTE(v21) = *(unsigned char *)(a1 + 177);
  sub_2367BB248();
  *(void *)(v1 + 168) = v23;
  *(unsigned char *)(v1 + 176) = v10;
  *(unsigned char *)(v1 + 177) = v21;
  sub_2367BB188();
  uint64_t v25 = *(void *)(a1 + 184);
  uint64_t v24 = *(void *)(a1 + 192);
  sub_2367BB248();
  *(void *)(v1 + 184) = v25;
  *(void *)(v1 + 192) = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v26 = *(void *)(a1 + 200);
  LOBYTE(v10) = *(unsigned char *)(a1 + 208);
  LOBYTE(v25) = *(unsigned char *)(a1 + 209);
  sub_2367BB248();
  *(void *)(v1 + 200) = v26;
  *(unsigned char *)(v1 + 208) = v10;
  *(unsigned char *)(v1 + 209) = v25;
  sub_2367BB188();
  uint64_t v28 = *(void *)(a1 + 216);
  uint64_t v27 = *(void *)(a1 + 224);
  sub_2367BB248();
  *(void *)(v1 + 216) = v28;
  *(void *)(v1 + 224) = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v29 = *(void *)(a1 + 232);
  LOBYTE(v10) = *(unsigned char *)(a1 + 240);
  LOBYTE(v28) = *(unsigned char *)(a1 + 241);
  sub_2367BB248();
  *(void *)(v1 + 232) = v29;
  *(unsigned char *)(v1 + 240) = v10;
  *(unsigned char *)(v1 + 241) = v28;
  sub_2367BB188();
  uint64_t v31 = *(void *)(a1 + 248);
  uint64_t v30 = *(void *)(a1 + 256);
  sub_2367BB248();
  *(void *)(v1 + 248) = v31;
  *(void *)(v1 + 256) = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v32 = *(void *)(a1 + 264);
  LOBYTE(v10) = *(unsigned char *)(a1 + 272);
  LOBYTE(v31) = *(unsigned char *)(a1 + 273);
  sub_2367BB248();
  *(void *)(v1 + 264) = v32;
  *(unsigned char *)(v1 + 272) = v10;
  *(unsigned char *)(v1 + 273) = v31;
  sub_2367BB188();
  uint64_t v34 = *(void *)(a1 + 280);
  uint64_t v33 = *(void *)(a1 + 288);
  sub_2367BB248();
  *(void *)(v1 + 280) = v34;
  *(void *)(v1 + 288) = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v35 = *(void *)(a1 + 296);
  LOBYTE(v10) = *(unsigned char *)(a1 + 304);
  LOBYTE(v34) = v48[32];
  sub_2367BB248();
  *(void *)(v1 + 296) = v35;
  *(unsigned char *)(v1 + 304) = v10;
  *(unsigned char *)(v1 + 305) = v34;
  sub_2367BB188();
  uint64_t v37 = *(void *)(a1 + 312);
  uint64_t v36 = *(void *)(a1 + 320);
  sub_2367BB248();
  *(void *)(v1 + 312) = v37;
  *(void *)(v1 + 320) = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v38 = *(void *)(a1 + 328);
  LOBYTE(v10) = *(unsigned char *)(a1 + 336);
  LOBYTE(v37) = v48[64];
  sub_2367BB248();
  *(void *)(v1 + 328) = v38;
  *(unsigned char *)(v1 + 336) = v10;
  *(unsigned char *)(v1 + 337) = v37;
  sub_2367BB188();
  uint64_t v40 = *(void *)(a1 + 344);
  uint64_t v39 = *(void *)(a1 + 352);
  sub_2367BB248();
  *(void *)(v1 + 344) = v40;
  *(void *)(v1 + 352) = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v41 = *(void *)(a1 + 360);
  LOBYTE(v10) = *(unsigned char *)(a1 + 368);
  LOBYTE(v40) = v48[96];
  sub_2367BB248();
  *(void *)(v1 + 360) = v41;
  *(unsigned char *)(v1 + 368) = v10;
  *(unsigned char *)(v1 + 369) = v40;
  sub_2367BB188();
  uint64_t v43 = *(void *)(a1 + 376);
  uint64_t v42 = *(void *)(a1 + 384);
  sub_2367BB248();
  *(void *)(v1 + 376) = v43;
  *(void *)(v1 + 384) = v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v45 = *(void *)(a1 + 392);
  uint64_t v44 = *(void *)(a1 + 400);
  sub_2367BB248();
  *(void *)(v1 + 392) = v45;
  *(void *)(v1 + 400) = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v46 = *(void *)(a1 + 408);
  swift_bridgeObjectRetain();
  swift_release();
  sub_2367BB248();
  *(void *)(v1 + 408) = v46;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_2368D435C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2368D43EC()
{
  uint64_t v0 = sub_2368D435C();
  return MEMORY[0x270FA0228](v0, 416, 7);
}

uint64_t type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult._StorageClass()
{
  return self;
}

ValueMetadata *type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult.FoundInEventResultError()
{
  return &type metadata for DocumentUnderstanding_ClientInterface_FoundInEventResult.FoundInEventResultError;
}

void *sub_2368D4450(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v5 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v5;
    uint64_t v6 = a2[5];
    uint64_t v7 = *(int *)(a3 + 32);
    uint64_t v8 = (uint64_t)a2 + v7;
    uint64_t v9 = a1 + v7;
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v6;
    uint64_t v10 = sub_23697A71C();
    char v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v9, v8, v10);
  }
  return v3;
}

uint64_t sub_2368D4568(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_23697A71C();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_2368D45F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a2 + v6;
  uint64_t v8 = a1 + v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v9 = sub_23697A71C();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v8, v7, v9);
  return a1;
}

uint64_t sub_2368D46B8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t)a2 + v7;
  uint64_t v10 = sub_23697A71C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_2368D4794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_23697A71C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_2368D4820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_23697A71C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_2368D48DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2368D48F0);
}

uint64_t sub_2368D48F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_2367F0550(*(void *)(a1 + 16));
  }
  uint64_t v7 = sub_23697A71C();
  uint64_t v8 = a1 + *(int *)(a3 + 32);
  return sub_2367B85F8(v8, a2, v7);
}

uint64_t sub_2368D496C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2368D4980);
}

uint64_t sub_2368D4980(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_23697A71C();
    uint64_t v8 = v5 + *(int *)(a4 + 32);
    return sub_2367B7028(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DocumentUnderstanding_ClientInterface_TaggedCharacterRange(uint64_t a1)
{
  return sub_2367B965C(a1, (uint64_t *)&unk_268899F30);
}

uint64_t sub_2368D4A20()
{
  uint64_t result = sub_23697A71C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2368D4AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2368D4AE4);
}

uint64_t sub_2368D4AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23697A71C();
  sub_2367BB1A0();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return sub_2367F0550(*(void *)(a1 + *(int *)(a3 + 20)));
  }
  return sub_2367B85F8(a1, a2, v6);
}

uint64_t sub_2368D4B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2368D4B78);
}

void sub_2368D4B78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_23697A71C();
  sub_2367BB1A0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    sub_2367B7028(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult(uint64_t a1)
{
  return sub_2367B965C(a1, (uint64_t *)&unk_268899F40);
}

unint64_t sub_2368D4C24()
{
  unint64_t result = qword_268899F50;
  if (!qword_268899F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899F50);
  }
  return result;
}

unint64_t sub_2368D4C74()
{
  unint64_t result = qword_268899F58;
  if (!qword_268899F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899F58);
  }
  return result;
}

unint64_t sub_2368D4CC4()
{
  unint64_t result = qword_268899F60;
  if (!qword_268899F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899F60);
  }
  return result;
}

uint64_t sub_2368D4D10()
{
  return swift_release();
}

uint64_t sub_2368D4D90()
{
  while (1)
  {
    uint64_t result = sub_23697A77C();
    if (v0 || (v2 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        sub_2368D516C();
        break;
      case 2:
        sub_2368D51EC();
        break;
      case 3:
        sub_2368D527C();
        break;
      case 4:
        sub_2368D52FC();
        break;
      case 5:
        sub_2367B1FA8();
        break;
      case 6:
        sub_2368D538C();
        break;
      case 7:
        sub_2368D541C();
        break;
      case 8:
        sub_2368D549C();
        break;
      case 9:
        sub_2368D553C();
        break;
      case 10:
        sub_2368D55CC();
        break;
      case 11:
        sub_2368D564C();
        break;
      case 12:
        sub_2368D56EC();
        break;
      case 13:
        sub_2368D577C();
        break;
      case 14:
        sub_2368D57FC();
        break;
      case 15:
        sub_2368D588C();
        break;
      case 16:
        sub_2368D590C();
        break;
      case 17:
        sub_2368D599C();
        break;
      case 18:
        sub_2368D5A1C();
        break;
      case 19:
        sub_2368D5AAC();
        break;
      case 20:
        sub_2368D5B2C();
        break;
      case 21:
        sub_2368D5BBC();
        break;
      case 22:
        sub_2368D5C3C();
        break;
      case 23:
        sub_2368D5CCC();
        break;
      case 24:
        sub_2368D5D4C();
        break;
      case 25:
        sub_2368D5DDC();
        break;
      case 26:
        sub_2368D5E5C();
        break;
      case 27:
        sub_2368D5EDC();
        break;
      default:
        continue;
    }
  }
}

uint64_t sub_2368D516C()
{
  return swift_endAccess();
}

uint64_t sub_2368D51EC()
{
  return swift_endAccess();
}

uint64_t sub_2368D527C()
{
  return swift_endAccess();
}

uint64_t sub_2368D52FC()
{
  return swift_endAccess();
}

uint64_t sub_2368D538C()
{
  return swift_endAccess();
}

uint64_t sub_2368D541C()
{
  return swift_endAccess();
}

uint64_t sub_2368D549C()
{
  return swift_endAccess();
}

uint64_t sub_2368D553C()
{
  return swift_endAccess();
}

uint64_t sub_2368D55CC()
{
  return swift_endAccess();
}

uint64_t sub_2368D564C()
{
  return swift_endAccess();
}

uint64_t sub_2368D56EC()
{
  return swift_endAccess();
}

uint64_t sub_2368D577C()
{
  return swift_endAccess();
}

uint64_t sub_2368D57FC()
{
  return swift_endAccess();
}

uint64_t sub_2368D588C()
{
  return swift_endAccess();
}

uint64_t sub_2368D590C()
{
  return swift_endAccess();
}

uint64_t sub_2368D599C()
{
  return swift_endAccess();
}

uint64_t sub_2368D5A1C()
{
  return swift_endAccess();
}

uint64_t sub_2368D5AAC()
{
  return swift_endAccess();
}

uint64_t sub_2368D5B2C()
{
  return swift_endAccess();
}

uint64_t sub_2368D5BBC()
{
  return swift_endAccess();
}

uint64_t sub_2368D5C3C()
{
  return swift_endAccess();
}

uint64_t sub_2368D5CCC()
{
  return swift_endAccess();
}

uint64_t sub_2368D5D4C()
{
  return swift_endAccess();
}

uint64_t sub_2368D5DDC()
{
  return swift_endAccess();
}

uint64_t sub_2368D5E5C()
{
  return swift_endAccess();
}

uint64_t sub_2368D5EDC()
{
  return swift_endAccess();
}

uint64_t sub_2368D5FA4()
{
  type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult(0);
  swift_retain();
  sub_2367BB5F8();
  sub_2368D6034(v1);
  uint64_t result = swift_release();
  if (!v0) {
    return sub_23697A6FC();
  }
  return result;
}

uint64_t sub_2368D6034(uint64_t a1)
{
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 16) != 1 || (uint64_t result = sub_23697A93C(), !v1))
  {
    uint64_t result = sub_2368D6520(a1);
    if (!v1)
    {
      sub_2368D65C8(a1);
      sub_2368D6668(a1);
      sub_2368D6710(a1);
      sub_2368D67B0(a1);
      sub_2368D6858(a1);
      swift_beginAccess();
      if (*(void *)(*(void *)(a1 + 120) + 16))
      {
        sub_23697A6EC();
        swift_bridgeObjectRetain();
        sub_23697A8FC();
        swift_bridgeObjectRelease();
      }
      sub_2368D68F8(a1);
      sub_2368D69A0(a1);
      swift_beginAccess();
      if (*(void *)(*(void *)(a1 + 160) + 16))
      {
        sub_23697A6EC();
        swift_bridgeObjectRetain();
        sub_23697A8FC();
        swift_bridgeObjectRelease();
      }
      sub_2368D6A40(a1);
      sub_2368D6AE8(a1);
      sub_2368D6B88(a1);
      sub_2368D6C30(a1);
      sub_2368D6CD0(a1);
      sub_2368D6D78(a1);
      sub_2368D6E18(a1);
      sub_2368D6EC4(a1);
      sub_2368D6F64(a1);
      sub_2368D7010(a1);
      sub_2368D70B0(a1);
      sub_2368D715C(a1);
      sub_2368D71FC(a1);
      sub_2368D72A8(a1);
      sub_2368D7348(a1);
      uint64_t result = swift_beginAccess();
      if (*(void *)(*(void *)(a1 + 408) + 16))
      {
        type metadata accessor for DocumentUnderstanding_ClientInterface_TaggedCharacterRange(0);
        sub_2368D85EC(&qword_268899F88, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_TaggedCharacterRange);
        swift_bridgeObjectRetain();
        sub_23697A9AC();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_2368D6520(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(a1 + 33) & 1) == 0)
  {
    sub_2368D8880();
    return sub_23697A94C();
  }
  return result;
}

uint64_t sub_2368D65C8(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if (*(void *)(a1 + 48))
  {
    swift_bridgeObjectRetain();
    sub_23697A99C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2368D6668(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(a1 + 65) & 1) == 0)
  {
    sub_2368D8880();
    return sub_23697A94C();
  }
  return result;
}

uint64_t sub_2368D6710(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if (*(void *)(a1 + 80))
  {
    swift_bridgeObjectRetain();
    sub_23697A99C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2368D67B0(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(a1 + 97) & 1) == 0)
  {
    sub_2368D8880();
    return sub_23697A94C();
  }
  return result;
}

uint64_t sub_2368D6858(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if (*(void *)(a1 + 112))
  {
    swift_bridgeObjectRetain();
    sub_23697A99C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2368D68F8(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(a1 + 137) & 1) == 0)
  {
    sub_2368D8880();
    return sub_23697A94C();
  }
  return result;
}

uint64_t sub_2368D69A0(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if (*(void *)(a1 + 152))
  {
    swift_bridgeObjectRetain();
    sub_23697A99C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2368D6A40(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(a1 + 177) & 1) == 0)
  {
    sub_2368D8880();
    return sub_23697A94C();
  }
  return result;
}

uint64_t sub_2368D6AE8(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if (*(void *)(a1 + 192))
  {
    swift_bridgeObjectRetain();
    sub_23697A99C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2368D6B88(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(a1 + 209) & 1) == 0)
  {
    sub_2368D8880();
    return sub_23697A94C();
  }
  return result;
}

uint64_t sub_2368D6C30(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if (*(void *)(a1 + 224))
  {
    swift_bridgeObjectRetain();
    sub_23697A99C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2368D6CD0(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(a1 + 241) & 1) == 0)
  {
    sub_2368D8880();
    return sub_23697A94C();
  }
  return result;
}

uint64_t sub_2368D6D78(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if (*(void *)(a1 + 256))
  {
    swift_bridgeObjectRetain();
    sub_23697A99C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2368D6E18(uint64_t a1)
{
  uint64_t v1 = a1 + 264;
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(v1 + 9) & 1) == 0)
  {
    sub_2368D8880();
    return sub_23697A94C();
  }
  return result;
}

uint64_t sub_2368D6EC4(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if (*(void *)(a1 + 288))
  {
    swift_bridgeObjectRetain();
    sub_23697A99C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2368D6F64(uint64_t a1)
{
  uint64_t v1 = a1 + 296;
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(v1 + 9) & 1) == 0)
  {
    sub_2368D8880();
    return sub_23697A94C();
  }
  return result;
}

uint64_t sub_2368D7010(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if (*(void *)(a1 + 320))
  {
    swift_bridgeObjectRetain();
    sub_23697A99C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2368D70B0(uint64_t a1)
{
  uint64_t v1 = a1 + 328;
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(v1 + 9) & 1) == 0)
  {
    sub_2368D8880();
    return sub_23697A94C();
  }
  return result;
}

uint64_t sub_2368D715C(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if (*(void *)(a1 + 352))
  {
    swift_bridgeObjectRetain();
    sub_23697A99C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2368D71FC(uint64_t a1)
{
  uint64_t v1 = a1 + 360;
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(v1 + 9) & 1) == 0)
  {
    sub_2368D8880();
    return sub_23697A94C();
  }
  return result;
}

uint64_t sub_2368D72A8(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if (*(void *)(a1 + 384))
  {
    swift_bridgeObjectRetain();
    sub_23697A99C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2368D7348(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if (*(void *)(a1 + 400))
  {
    swift_bridgeObjectRetain();
    sub_23697A99C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2368D73E8(uint64_t a1, uint64_t a2)
{
  sub_23697A71C();
  sub_2367BB1B8();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_2367BB274();
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v20 - v10;
  uint64_t v12 = *(int *)(type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult(0) + 20);
  uint64_t v13 = *(void *)(a1 + v12);
  uint64_t v14 = *(void *)(a2 + v12);
  if (v13 == v14
    || (swift_retain(), swift_retain(), char v15 = sub_2368D7584(v13, v14), swift_release(), swift_release(), (v15 & 1) != 0))
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v16(v11, a1, v3);
    v16(v2, a2, v3);
    sub_2368D85EC(&qword_268898158, MEMORY[0x263F50560]);
    char v17 = sub_2367BB2E8();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
    v18(v2, v3);
    v18(v11, v3);
  }
  else
  {
    char v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_2368D7584(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  int v4 = *(unsigned __int8 *)(a1 + 16);
  swift_beginAccess();
  if (v4 != *(unsigned __int8 *)(a2 + 16)) {
    goto LABEL_2;
  }
  swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 32);
  char v9 = *(unsigned char *)(a1 + 33);
  swift_beginAccess();
  if (v9)
  {
    if (!*(unsigned char *)(a2 + 33)) {
      goto LABEL_2;
    }
  }
  else if ((*(unsigned char *)(a2 + 33) & 1) != 0 || !sub_23682DCA0(v7, v8 & 1, *(void *)(a2 + 24)))
  {
    goto LABEL_2;
  }
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  swift_beginAccess();
  uint64_t v12 = *(void *)(a2 + 48);
  if (v11)
  {
    if (!v12) {
      goto LABEL_2;
    }
    if (v10 != *(void *)(a2 + 40) || v11 != v12)
    {
      char v5 = 0;
      if ((sub_23697B95C() & 1) == 0) {
        return v5 & 1;
      }
    }
  }
  else if (v12)
  {
    goto LABEL_2;
  }
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 56);
  char v15 = *(unsigned char *)(a1 + 64);
  char v16 = *(unsigned char *)(a1 + 65);
  swift_beginAccess();
  if (v16)
  {
    if (!*(unsigned char *)(a2 + 65)) {
      goto LABEL_2;
    }
  }
  else if ((*(unsigned char *)(a2 + 65) & 1) != 0 || !sub_23682DCA0(v14, v15 & 1, *(void *)(a2 + 56)))
  {
    goto LABEL_2;
  }
  swift_beginAccess();
  uint64_t v17 = *(void *)(a1 + 72);
  uint64_t v18 = *(void *)(a1 + 80);
  swift_beginAccess();
  uint64_t v19 = *(void *)(a2 + 80);
  if (v18)
  {
    if (!v19) {
      goto LABEL_2;
    }
    if (v17 != *(void *)(a2 + 72) || v18 != v19)
    {
      char v5 = 0;
      if ((sub_23697B95C() & 1) == 0) {
        return v5 & 1;
      }
    }
  }
  else if (v19)
  {
    goto LABEL_2;
  }
  swift_beginAccess();
  uint64_t v21 = *(void *)(a1 + 88);
  char v22 = *(unsigned char *)(a1 + 96);
  char v23 = *(unsigned char *)(a1 + 97);
  swift_beginAccess();
  if (v23)
  {
    if (!*(unsigned char *)(a2 + 97)) {
      goto LABEL_2;
    }
  }
  else if ((*(unsigned char *)(a2 + 97) & 1) != 0 || !sub_23682DCA0(v21, v22 & 1, *(void *)(a2 + 88)))
  {
    goto LABEL_2;
  }
  swift_beginAccess();
  uint64_t v24 = *(void *)(a1 + 104);
  uint64_t v25 = *(void *)(a1 + 112);
  swift_beginAccess();
  uint64_t v26 = *(void *)(a2 + 112);
  if (!v25)
  {
    if (!v26) {
      goto LABEL_46;
    }
LABEL_2:
    char v5 = 0;
    return v5 & 1;
  }
  if (!v26) {
    goto LABEL_2;
  }
  BOOL v27 = v24 == *(void *)(a2 + 104) && v25 == v26;
  if (v27 || (char v5 = 0, (sub_23697B95C() & 1) != 0))
  {
LABEL_46:
    swift_beginAccess();
    uint64_t v28 = *(void *)(a1 + 120);
    swift_beginAccess();
    uint64_t v29 = *(void *)(a2 + 120);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_236824850(v28, v29);
    char v31 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v31)
    {
      swift_beginAccess();
      uint64_t v32 = *(void *)(a1 + 128);
      char v33 = *(unsigned char *)(a1 + 136);
      char v34 = *(unsigned char *)(a1 + 137);
      swift_beginAccess();
      if (v34)
      {
        if (!*(unsigned char *)(a2 + 137)) {
          goto LABEL_169;
        }
      }
      else if ((*(unsigned char *)(a2 + 137) & 1) != 0 || !sub_23682DCA0(v32, v33 & 1, *(void *)(a2 + 128)))
      {
        goto LABEL_169;
      }
      swift_beginAccess();
      uint64_t v35 = *(void *)(a1 + 144);
      uint64_t v36 = *(void *)(a1 + 152);
      swift_beginAccess();
      uint64_t v37 = *(void *)(a2 + 152);
      if (v36)
      {
        if (!v37) {
          goto LABEL_169;
        }
        if (v35 != *(void *)(a2 + 144) || v36 != v37)
        {
          char v5 = 0;
          if ((sub_23697B95C() & 1) == 0) {
            goto LABEL_170;
          }
        }
      }
      else if (v37)
      {
        goto LABEL_169;
      }
      swift_beginAccess();
      uint64_t v39 = *(void *)(a1 + 160);
      swift_beginAccess();
      uint64_t v40 = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_236824850(v39, v40);
      char v42 = v41;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v42)
      {
        swift_beginAccess();
        uint64_t v43 = *(void *)(a1 + 168);
        char v44 = *(unsigned char *)(a1 + 176);
        char v45 = *(unsigned char *)(a1 + 177);
        swift_beginAccess();
        if (v45)
        {
          if (!*(unsigned char *)(a2 + 177)) {
            goto LABEL_169;
          }
        }
        else if ((*(unsigned char *)(a2 + 177) & 1) != 0 || !sub_23682DCA0(v43, v44 & 1, *(void *)(a2 + 168)))
        {
          goto LABEL_169;
        }
        swift_beginAccess();
        uint64_t v46 = *(void *)(a1 + 184);
        uint64_t v47 = *(void *)(a1 + 192);
        swift_beginAccess();
        uint64_t v48 = *(void *)(a2 + 192);
        if (v47)
        {
          if (!v48) {
            goto LABEL_169;
          }
          if (v46 != *(void *)(a2 + 184) || v47 != v48)
          {
            char v5 = 0;
            if ((sub_23697B95C() & 1) == 0) {
              goto LABEL_170;
            }
          }
        }
        else if (v48)
        {
          goto LABEL_169;
        }
        swift_beginAccess();
        uint64_t v50 = *(void *)(a1 + 200);
        char v51 = *(unsigned char *)(a1 + 208);
        char v52 = *(unsigned char *)(a1 + 209);
        swift_beginAccess();
        if (v52)
        {
          if (!*(unsigned char *)(a2 + 209)) {
            goto LABEL_169;
          }
        }
        else if ((*(unsigned char *)(a2 + 209) & 1) != 0 || !sub_23682DCA0(v50, v51 & 1, *(void *)(a2 + 200)))
        {
          goto LABEL_169;
        }
        swift_beginAccess();
        uint64_t v53 = *(void *)(a1 + 216);
        uint64_t v54 = *(void *)(a1 + 224);
        swift_beginAccess();
        uint64_t v55 = *(void *)(a2 + 224);
        if (v54)
        {
          if (!v55) {
            goto LABEL_169;
          }
          if (v53 != *(void *)(a2 + 216) || v54 != v55)
          {
            char v5 = 0;
            if ((sub_23697B95C() & 1) == 0) {
              goto LABEL_170;
            }
          }
        }
        else if (v55)
        {
          goto LABEL_169;
        }
        swift_beginAccess();
        uint64_t v57 = *(void *)(a1 + 232);
        char v58 = *(unsigned char *)(a1 + 240);
        char v59 = *(unsigned char *)(a1 + 241);
        swift_beginAccess();
        if (v59)
        {
          if (!*(unsigned char *)(a2 + 241)) {
            goto LABEL_169;
          }
        }
        else if ((*(unsigned char *)(a2 + 241) & 1) != 0 || !sub_23682DCA0(v57, v58 & 1, *(void *)(a2 + 232)))
        {
          goto LABEL_169;
        }
        swift_beginAccess();
        uint64_t v60 = *(void *)(a1 + 248);
        uint64_t v61 = *(void *)(a1 + 256);
        swift_beginAccess();
        uint64_t v62 = *(void *)(a2 + 256);
        if (v61)
        {
          if (!v62) {
            goto LABEL_169;
          }
          if (v60 != *(void *)(a2 + 248) || v61 != v62)
          {
            char v5 = 0;
            if ((sub_23697B95C() & 1) == 0) {
              goto LABEL_170;
            }
          }
        }
        else if (v62)
        {
          goto LABEL_169;
        }
        swift_beginAccess();
        uint64_t v64 = *(void *)(a1 + 264);
        char v65 = *(unsigned char *)(a1 + 272);
        char v66 = *(unsigned char *)(a1 + 273);
        swift_beginAccess();
        if (v66)
        {
          if (!*(unsigned char *)(a2 + 273)) {
            goto LABEL_169;
          }
        }
        else if ((*(unsigned char *)(a2 + 273) & 1) != 0 || !sub_23682DCA0(v64, v65 & 1, *(void *)(a2 + 264)))
        {
          goto LABEL_169;
        }
        swift_beginAccess();
        uint64_t v67 = *(void *)(a1 + 280);
        uint64_t v68 = *(void *)(a1 + 288);
        swift_beginAccess();
        uint64_t v69 = *(void *)(a2 + 288);
        if (v68)
        {
          if (!v69) {
            goto LABEL_169;
          }
          if (v67 != *(void *)(a2 + 280) || v68 != v69)
          {
            char v5 = 0;
            if ((sub_23697B95C() & 1) == 0) {
              goto LABEL_170;
            }
          }
        }
        else if (v69)
        {
          goto LABEL_169;
        }
        swift_beginAccess();
        uint64_t v71 = *(void *)(a1 + 296);
        char v72 = *(unsigned char *)(a1 + 304);
        char v73 = *(unsigned char *)(a1 + 305);
        swift_beginAccess();
        if (v73)
        {
          if (!*(unsigned char *)(a2 + 305)) {
            goto LABEL_169;
          }
        }
        else if ((*(unsigned char *)(a2 + 305) & 1) != 0 || !sub_23682DCA0(v71, v72 & 1, *(void *)(a2 + 296)))
        {
          goto LABEL_169;
        }
        swift_beginAccess();
        uint64_t v74 = *(void *)(a1 + 312);
        uint64_t v75 = *(void *)(a1 + 320);
        swift_beginAccess();
        uint64_t v76 = *(void *)(a2 + 320);
        if (v75)
        {
          if (!v76) {
            goto LABEL_169;
          }
          if (v74 != *(void *)(a2 + 312) || v75 != v76)
          {
            char v5 = 0;
            if ((sub_23697B95C() & 1) == 0) {
              goto LABEL_170;
            }
          }
        }
        else if (v76)
        {
          goto LABEL_169;
        }
        swift_beginAccess();
        uint64_t v78 = *(void *)(a1 + 328);
        char v79 = *(unsigned char *)(a1 + 336);
        char v80 = *(unsigned char *)(a1 + 337);
        swift_beginAccess();
        if (v80)
        {
          if (!*(unsigned char *)(a2 + 337)) {
            goto LABEL_169;
          }
        }
        else if ((*(unsigned char *)(a2 + 337) & 1) != 0 || !sub_23682DCA0(v78, v79 & 1, *(void *)(a2 + 328)))
        {
          goto LABEL_169;
        }
        swift_beginAccess();
        uint64_t v81 = *(void *)(a1 + 344);
        uint64_t v82 = *(void *)(a1 + 352);
        swift_beginAccess();
        uint64_t v83 = *(void *)(a2 + 352);
        if (v82)
        {
          if (!v83) {
            goto LABEL_169;
          }
          if (v81 != *(void *)(a2 + 344) || v82 != v83)
          {
            char v5 = 0;
            if ((sub_23697B95C() & 1) == 0) {
              goto LABEL_170;
            }
          }
        }
        else if (v83)
        {
          goto LABEL_169;
        }
        swift_beginAccess();
        uint64_t v85 = *(void *)(a1 + 360);
        char v86 = *(unsigned char *)(a1 + 368);
        char v87 = *(unsigned char *)(a1 + 369);
        swift_beginAccess();
        if (v87)
        {
          if (!*(unsigned char *)(a2 + 369)) {
            goto LABEL_169;
          }
        }
        else if ((*(unsigned char *)(a2 + 369) & 1) != 0 || !sub_23682DCA0(v85, v86 & 1, *(void *)(a2 + 360)))
        {
          goto LABEL_169;
        }
        swift_beginAccess();
        uint64_t v88 = *(void *)(a1 + 376);
        uint64_t v89 = *(void *)(a1 + 384);
        swift_beginAccess();
        uint64_t v90 = *(void *)(a2 + 384);
        if (v89)
        {
          if (!v90) {
            goto LABEL_169;
          }
          if (v88 != *(void *)(a2 + 376) || v89 != v90)
          {
            char v5 = 0;
            if ((sub_23697B95C() & 1) == 0) {
              goto LABEL_170;
            }
          }
        }
        else if (v90)
        {
          goto LABEL_169;
        }
        swift_beginAccess();
        uint64_t v92 = *(void *)(a1 + 392);
        uint64_t v93 = *(void *)(a1 + 400);
        swift_beginAccess();
        uint64_t v94 = *(void *)(a2 + 400);
        if (v93)
        {
          if (v94)
          {
            if (v92 != *(void *)(a2 + 392) || v93 != v94)
            {
              char v5 = 0;
              if ((sub_23697B95C() & 1) == 0) {
                goto LABEL_170;
              }
            }
            goto LABEL_171;
          }
        }
        else if (!v94)
        {
LABEL_171:
          swift_beginAccess();
          swift_beginAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_236812D94();
          char v5 = v96;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_170;
        }
      }
    }
LABEL_169:
    char v5 = 0;
LABEL_170:
    swift_release();
    swift_release();
  }
  return v5 & 1;
}

uint64_t sub_2368D8090(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return sub_23697BA4C();
}

unint64_t sub_2368D8114()
{
  return 0xD00000000000003ALL;
}

uint64_t sub_2368D8130()
{
  return sub_2368D4D10();
}

uint64_t sub_2368D8148()
{
  return sub_2368D5FA4();
}

uint64_t sub_2368D8160(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2368D85EC(&qword_268899FD0, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2368D81DC@<X0>(uint64_t a1@<X8>)
{
  return sub_2367F0080(&qword_268897F20, (uint64_t)qword_26889ABE0, a1);
}

uint64_t sub_2368D8200(uint64_t a1)
{
  uint64_t v2 = sub_2368D85EC(&qword_268898388, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2368D826C()
{
  return sub_2368D8090((void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult, &qword_268899F70, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult);
}

uint64_t sub_2368D82C8()
{
  sub_2368D85EC(&qword_268898388, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult);
  return sub_23697A8DC();
}

uint64_t sub_2368D8348()
{
  uint64_t v0 = sub_23697A9EC();
  sub_2367BA9C4(v0, qword_26889ABF8);
  sub_2367BA98C(v0, (uint64_t)qword_26889ABF8);
  sub_2367B7DBC(&qword_268898148);
  uint64_t v1 = (int *)(sub_2367B7DBC(&qword_268898150) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_236987610;
  char v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *char v5 = 0;
  *(void *)unint64_t v6 = "ErrorUnknown";
  *(void *)(v6 + 8) = 12;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_23697A9CC();
  char v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)uint64_t v10 = "ErrorUnableToResolveCandidates";
  *((void *)v10 + 1) = 30;
  v10[16] = 2;
  v9();
  uint64_t v11 = (void *)((char *)v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 2;
  *(void *)uint64_t v12 = "ErrorUnableToPredictCandidates";
  *((void *)v12 + 1) = 30;
  v12[16] = 2;
  v9();
  return sub_23697A9DC();
}

uint64_t sub_2368D8538@<X0>(uint64_t a1@<X8>)
{
  return sub_2367F0080(&qword_268897F30, (uint64_t)qword_26889ABF8, a1);
}

uint64_t sub_2368D855C()
{
  return sub_2368D85EC(&qword_268899F68, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult);
}

uint64_t sub_2368D85A4()
{
  return sub_2368D85EC(&qword_268898388, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult);
}

uint64_t sub_2368D85EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2368D8634()
{
  return sub_2368D85EC(&qword_268899F70, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult);
}

uint64_t sub_2368D867C()
{
  return sub_2368D85EC(&qword_268899F78, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult);
}

uint64_t sub_2368D86C4()
{
  return sub_2368D85EC(&qword_268899F80, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_TaggedCharacterRange);
}

uint64_t sub_2368D870C()
{
  return sub_2368D85EC(&qword_268899F88, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_TaggedCharacterRange);
}

uint64_t sub_2368D8754()
{
  return sub_2368D85EC(&qword_268899F90, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_TaggedCharacterRange);
}

uint64_t sub_2368D879C()
{
  return sub_2368D85EC(&qword_268899F98, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_TaggedCharacterRange);
}

uint64_t sub_2368D87E4()
{
  return sub_23688182C(&qword_268899FA0, &qword_268899FA8);
}

uint64_t sub_2368D880C()
{
  return sub_23688182C(&qword_268899FB0, &qword_268899FB8);
}

unint64_t sub_2368D8834()
{
  unint64_t result = qword_268899FC8;
  if (!qword_268899FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899FC8);
  }
  return result;
}

unint64_t sub_2368D8880()
{
  unint64_t result = qword_268899FD8;
  if (!qword_268899FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899FD8);
  }
  return result;
}

ValueMetadata *type metadata accessor for DocumentUnderstanding_ClientInterface_TaggedCharacterRange.TaggedCharacterRangeAnnotationType()
{
  return &type metadata for DocumentUnderstanding_ClientInterface_TaggedCharacterRange.TaggedCharacterRangeAnnotationType;
}

unint64_t sub_2368D88E0()
{
  unint64_t result = qword_268899FE0;
  if (!qword_268899FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899FE0);
  }
  return result;
}

unint64_t sub_2368D8930()
{
  unint64_t result = qword_268899FE8;
  if (!qword_268899FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899FE8);
  }
  return result;
}

unint64_t sub_2368D8980()
{
  unint64_t result = qword_268899FF0;
  if (!qword_268899FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899FF0);
  }
  return result;
}

uint64_t sub_2368D89EC()
{
  return sub_23697BA2C();
}

uint64_t sub_2368D8A04()
{
  return sub_23697B04C();
}

uint64_t sub_2368D8A28()
{
  return sub_23697AE9C();
}

uint64_t sub_2368D8A54(uint64_t result, __int16 a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2;
  *(unsigned char *)(v2 + 9) = HIBYTE(a2) & 1;
  return result;
}

uint64_t sub_2368D8A68()
{
  return sub_23697AEBC();
}

uint64_t sub_2368D8AB0@<X0>(void *a1@<X8>)
{
  *a1 = MEMORY[0x263F8EE78];
  uint64_t v2 = type metadata accessor for Dutool_TopicVectorEntry();
  uint64_t result = sub_23697A70C();
  uint64_t v4 = (void *)((char *)a1 + *(int *)(v2 + 24));
  *uint64_t v4 = 0;
  v4[1] = 0;
  char v5 = (void *)((char *)a1 + *(int *)(v2 + 28));
  *char v5 = 0;
  v5[1] = 0;
  return result;
}

uint64_t sub_2368D8B0C()
{
  uint64_t v0 = sub_23697A9EC();
  sub_2367BA9C4(v0, qword_26889AC10);
  sub_2367BA98C(v0, (uint64_t)qword_26889AC10);
  sub_2367B7DBC(&qword_268898148);
  uint64_t v1 = (int *)(sub_2367B7DBC(&qword_268898150) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_236987610;
  char v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *char v5 = 1;
  *(void *)unint64_t v6 = "title";
  *(void *)(v6 + 8) = 5;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_23697A9CC();
  char v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "qid";
  *((void *)v10 + 1) = 3;
  v10[16] = 2;
  v9();
  uint64_t v11 = (void *)((char *)v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "vector";
  *((void *)v12 + 1) = 6;
  v12[16] = 2;
  v9();
  return sub_23697A9DC();
}

uint64_t sub_2368D8D00()
{
  if (qword_268897F38 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_23697A9EC();
  return sub_2367BA98C(v0, (uint64_t)qword_26889AC10);
}

uint64_t sub_2368D8D64()
{
  while (1)
  {
    uint64_t result = sub_23697A77C();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    switch(result)
    {
      case 3:
        sub_23697A7CC();
        break;
      case 2:
        sub_2367BB1D8();
        sub_2368D8E68();
        break;
      case 1:
        sub_2367BB1D8();
        sub_2368D8E04();
        break;
    }
  }
  return result;
}

uint64_t sub_2368D8E04()
{
  return sub_23697A86C();
}

uint64_t sub_2368D8E68()
{
  return sub_23697A86C();
}

uint64_t sub_2368D8ECC()
{
  uint64_t result = sub_2368D8F9C(v0);
  if (!v1)
  {
    sub_2368D9014(v0);
    if (*(void *)(*(void *)v0 + 16)) {
      sub_23697A90C();
    }
    type metadata accessor for Dutool_TopicVectorEntry();
    return sub_23697A6FC();
  }
  return result;
}

uint64_t sub_2368D8F9C(uint64_t a1)
{
  uint64_t result = type metadata accessor for Dutool_TopicVectorEntry();
  if (*(void *)(a1 + *(int *)(result + 24) + 8)) {
    return sub_23697A99C();
  }
  return result;
}

uint64_t sub_2368D9014(uint64_t a1)
{
  uint64_t result = type metadata accessor for Dutool_TopicVectorEntry();
  if (*(void *)(a1 + *(int *)(result + 28) + 8)) {
    return sub_23697A99C();
  }
  return result;
}

uint64_t sub_2368D908C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_23697A71C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = type metadata accessor for Dutool_TopicVectorEntry();
  sub_2367BB3B8();
  if (!v12)
  {
    if (v13) {
      goto LABEL_21;
    }
    goto LABEL_10;
  }
  if (!v13) {
    goto LABEL_21;
  }
  BOOL v16 = *v14 == *v15 && v12 == v13;
  if (v16 || (char v17 = 0, (sub_23697B95C() & 1) != 0))
  {
LABEL_10:
    sub_2367BB3B8();
    if (v18)
    {
      if (!v19) {
        goto LABEL_21;
      }
      if (*v20 != *v21 || v18 != v19)
      {
        char v17 = 0;
        if ((sub_23697B95C() & 1) == 0) {
          return v17 & 1;
        }
      }
    }
    else if (v19)
    {
      goto LABEL_21;
    }
    if (sub_23681210C(*a1, *a2))
    {
      char v23 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v23(v10, (char *)a1 + *(int *)(v11 + 20), v4);
      v23(v8, (char *)a2 + *(int *)(v11 + 20), v4);
      sub_2368D96D8(&qword_268898158, MEMORY[0x263F50560]);
      char v17 = sub_23697AF0C();
      uint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
      v24(v8, v4);
      v24(v10, v4);
      return v17 & 1;
    }
LABEL_21:
    char v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_2368D92BC()
{
  return sub_23697BA4C();
}

unint64_t sub_2368D9348()
{
  return 0xD000000000000017;
}

uint64_t sub_2368D9364()
{
  return sub_2368D8D64();
}

uint64_t sub_2368D937C()
{
  return sub_2368D8ECC();
}

uint64_t sub_2368D9394(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2368D96D8(&qword_26889A018, (void (*)(uint64_t))type metadata accessor for Dutool_TopicVectorEntry);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2368D9410@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_2368D8D00();
  uint64_t v3 = sub_23697A9EC();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v2, v3);
}

uint64_t sub_2368D9480(uint64_t a1)
{
  uint64_t v2 = sub_2368D96D8(&qword_26889A000, (void (*)(uint64_t))type metadata accessor for Dutool_TopicVectorEntry);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2368D94F0()
{
  sub_2368D96D8(&qword_26889A000, (void (*)(uint64_t))type metadata accessor for Dutool_TopicVectorEntry);
  return sub_23697A8DC();
}

uint64_t sub_2368D9570()
{
  return sub_2368D96D8(&qword_268899FF8, (void (*)(uint64_t))type metadata accessor for Dutool_TopicVectorEntry);
}

uint64_t type metadata accessor for Dutool_TopicVectorEntry()
{
  uint64_t result = qword_26889A020;
  if (!qword_26889A020) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2368D9600()
{
  return sub_2368D96D8(&qword_26889A000, (void (*)(uint64_t))type metadata accessor for Dutool_TopicVectorEntry);
}

uint64_t sub_2368D9648()
{
  return sub_2368D96D8((unint64_t *)&qword_26889A008, (void (*)(uint64_t))type metadata accessor for Dutool_TopicVectorEntry);
}

uint64_t sub_2368D9690()
{
  return sub_2368D96D8(&qword_26889A010, (void (*)(uint64_t))type metadata accessor for Dutool_TopicVectorEntry);
}

uint64_t sub_2368D96D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_2368D9720(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_23697A71C();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    char v15 = (uint64_t *)((char *)v7 + v13);
    BOOL v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *char v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (uint64_t *)((char *)v7 + v14);
    uint64_t v19 = (uint64_t *)((char *)a2 + v14);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_2368D9844(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_23697A71C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_2368D98E4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_23697A71C();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)((char *)a1 + v11);
  uint64_t v14 = (void *)((char *)a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  BOOL v16 = (void *)((char *)a1 + v12);
  uint64_t v17 = (void *)((char *)a2 + v12);
  uint64_t v18 = v17[1];
  *BOOL v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_2368D99BC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_23697A71C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_2368D9AB0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_23697A71C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  return a1;
}

void *sub_2368D9B50(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_23697A71C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  BOOL v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *BOOL v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2368D9C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2368D9C30);
}

uint64_t sub_2368D9C30(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_23697A71C();
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 20);
    return sub_2367B85F8(v9, a2, v8);
  }
}

uint64_t sub_2368D9CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2368D9CCC);
}

void *sub_2368D9CCC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_23697A71C();
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 20);
    return (void *)sub_2367B7028(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_2368D9D4C()
{
  uint64_t result = sub_23697A71C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_2368D9DF4(void *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v175 = a2;
  uint64_t v191 = a3;
  uint64_t v195 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_2367B7DBC(&qword_26AD89410);
  uint64_t v5 = sub_2367BB430(v4);
  MEMORY[0x270FA5388](v5);
  sub_2367BB610();
  sub_236810048();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v161 - v7;
  uint64_t v9 = type metadata accessor for CalendarEvent(0);
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (BOOL *)&v161 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = sub_23697A0AC();
  sub_2367CAA54();
  uint64_t v179 = v13;
  MEMORY[0x270FA5388](v14);
  sub_2367BB610();
  sub_236810048();
  MEMORY[0x270FA5388](v15);
  sub_2367E5460();
  uint64_t v189 = v16;
  uint64_t v17 = sub_2367B7DBC(&qword_26AD89430);
  uint64_t v18 = sub_2367BB430(v17);
  MEMORY[0x270FA5388](v18);
  sub_2367BB610();
  sub_236810048();
  MEMORY[0x270FA5388](v19);
  sub_2367E5460();
  uint64_t v185 = v20;
  sub_2367E5188();
  uint64_t v184 = sub_23697A43C();
  sub_2367CAA54();
  uint64_t v181 = v21;
  MEMORY[0x270FA5388](v22);
  sub_2367BB610();
  uint64_t v180 = v23;
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v161 - v25;
  sub_23697A3BC();
  sub_2367CAA54();
  uint64_t v177 = v28;
  uint64_t v178 = v27;
  MEMORY[0x270FA5388](v27);
  sub_2367BB260();
  uint64_t v187 = v29;
  uint64_t v30 = sub_2367B7DBC((uint64_t *)&off_26AD89548);
  uint64_t v31 = sub_2367BB430(v30);
  MEMORY[0x270FA5388](v31);
  sub_2367BB610();
  uint64_t v176 = v32;
  uint64_t v34 = MEMORY[0x270FA5388](v33);
  uint64_t v36 = (char *)&v161 - v35;
  MEMORY[0x270FA5388](v34);
  uint64_t v38 = (char *)&v161 - v37;
  uint64_t v192 = sub_23697A2DC();
  sub_2367CAA54();
  uint64_t v190 = v39;
  MEMORY[0x270FA5388](v40);
  sub_2367BB610();
  sub_236810048();
  uint64_t v42 = MEMORY[0x270FA5388](v41);
  char v44 = (char *)&v161 - v43;
  uint64_t v45 = MEMORY[0x270FA5388](v42);
  uint64_t v47 = (char *)&v161 - v46;
  MEMORY[0x270FA5388](v45);
  sub_2367E5460();
  uint64_t v188 = v48;
  id v49 = objc_allocWithZone(MEMORY[0x263F04900]);
  id v183 = a1;
  id v50 = objc_msgSend(v49, sel_initWithDDScannerResult_, a1);
  if (v50)
  {
    uint64_t v170 = v8;
    char v51 = v50;
    id v52 = objc_msgSend(v50, sel_startDate);
    if (v52)
    {
      uint64_t v53 = v52;
      uint64_t v166 = v26;
      uint64_t v165 = v44;
      uint64_t v54 = (uint64_t)v36;
      sub_23697A2BC();

      uint64_t v55 = v47;
      uint64_t v56 = v190 + 32;
      uint64_t v57 = *(void (**)(void))(v190 + 32);
      char v58 = v55;
      uint64_t v59 = v192;
      ((void (*)(char *))v57)(v38);
      sub_2367B7028((uint64_t)v38, 0, 1, v59);
      if (sub_2367B85F8((uint64_t)v38, 1, v59) != 1)
      {
        uint64_t v168 = v12;
        uint64_t v163 = v9;
        uint64_t v164 = v56;
        v167 = v57;
        ((void (*)(uint64_t, char *, uint64_t))v57)(v188, v38, v59);
        id v60 = v183;
        id v61 = objc_msgSend(v183, sel_type);
        uint64_t v62 = sub_23697AF6C();
        uint64_t v64 = v63;

        sub_2368DAF30(v60);
        if (!*MEMORY[0x263F39470])
        {
          __break(1u);
LABEL_105:
          __break(1u);
          goto LABEL_106;
        }
        BOOL v66 = v62 == sub_23697AF6C() && v64 == v65;
        uint64_t v67 = (void *)MEMORY[0x263F39428];
        uint64_t v162 = v58;
        uint64_t v161 = v54;
        id v169 = v51;
        if (v66) {
          goto LABEL_29;
        }
        sub_2368DC528();
        sub_2368DC6C8();
        if (v60)
        {
LABEL_10:
          uint64_t v68 = v67;
          int v69 = 1;
          goto LABEL_32;
        }
        if (!*v67)
        {
LABEL_106:
          __break(1u);
LABEL_107:
          __break(1u);
          goto LABEL_108;
        }
        if (v62 == sub_23697AF6C() && v64 == v79)
        {
LABEL_29:
          uint64_t v68 = v67;
        }
        else
        {
          sub_2368DC528();
          sub_2368DC6C8();
          if (v60) {
            goto LABEL_10;
          }
          if (!*MEMORY[0x263F39468])
          {
LABEL_108:
            __break(1u);
LABEL_109:
            __break(1u);
            return;
          }
          uint64_t v68 = v67;
          if (v62 != sub_23697AF6C() || v64 != v81)
          {
            int v69 = sub_2368DC528();
LABEL_31:
            swift_bridgeObjectRelease();
LABEL_32:
            if (*MEMORY[0x263F39420])
            {
              if (v62 == sub_23697AF6C() && v64 == v83) {
                goto LABEL_52;
              }
              sub_2368DC528();
              sub_2368DC6C8();
              if (v60) {
                goto LABEL_53;
              }
              if (*v68)
              {
                if (v62 != sub_23697AF6C() || v64 != v85)
                {
                  sub_2368DC528();
                  sub_2368DC6C8();
                  if ((v60 & 1) == 0)
                  {
                    if (*MEMORY[0x263F39418])
                    {
                      if (v62 == sub_23697AF6C() && v64 == v87)
                      {
                        swift_bridgeObjectRelease_n();
                      }
                      else
                      {
                        sub_2368DC528();
                        sub_2368DC6C8();
                        swift_bridgeObjectRelease();
                        uint64_t v89 = v163;
                        if ((v60 & 1) == 0)
                        {
                          if (v69)
                          {
                            int v90 = v69;
                            uint64_t v91 = 0;
LABEL_55:
                            sub_2367B7DBC(&qword_26AD89518);
                            sub_2368DC7C4();
                            sub_2367CAA54();
                            uint64_t v93 = v92;
                            *(_OWORD *)(swift_allocObject() + 16) = xmmword_236987610;
                            uint64_t v94 = *(void (**)(void))(v93 + 104);
                            sub_2368DC73C();
                            v94();
                            sub_2368DC73C();
                            v94();
                            sub_2368DC73C();
                            v94();
                            sub_23690BC50();
                            uint64_t v186 = v95;
                            goto LABEL_58;
                          }
                          sub_2367E507C();
                          v160();
                          swift_bridgeObjectRelease();
                          sub_2368DC80C();
                          uint64_t v75 = v191;
                          uint64_t v76 = 1;
                          uint64_t v77 = 1;
                          uint64_t v78 = v89;
LABEL_16:
                          sub_2367B7028(v75, v76, v77, v78);
LABEL_99:
                          sub_2367CAD58();
                          return;
                        }
                      }
                      uint64_t v91 = 1;
                      if ((v69 & 1) == 0)
                      {
                        int v90 = v69;
                        uint64_t v186 = MEMORY[0x263F8EE88];
                        goto LABEL_58;
                      }
                      goto LABEL_54;
                    }
                    goto LABEL_109;
                  }
LABEL_53:
                  swift_bridgeObjectRelease();
                  uint64_t v91 = 1;
                  if ((v69 & 1) == 0)
                  {
                    int v90 = v69;
                    uint64_t v186 = MEMORY[0x263F8EE88];
LABEL_58:
                    if (sub_2367E4F54() & 1) != 0 || (sub_2367E4EC4() & 1) != 0 || (sub_2367E4F14())
                    {
                      if (sub_2367E4F54())
                      {
                        sub_2367B7DBC(&qword_26AD89518);
                        sub_2368DC7C4();
                        sub_2367CAA54();
                        *(_OWORD *)(sub_2368DC598() + 16) = xmmword_236987050;
                        sub_2368DC604();
                        v96();
                        uint64_t v186 = sub_2368DC710();
                      }
                      if (sub_2367E4EC4())
                      {
                        sub_2367B7DBC(&qword_26AD89518);
                        sub_2368DC7C4();
                        sub_2367CAA54();
                        *(_OWORD *)(sub_2368DC598() + 16) = xmmword_236987050;
                        sub_2368DC604();
                        v97();
                        uint64_t v186 = sub_2368DC710();
                      }
                      if (sub_2367E4F14())
                      {
                        sub_2367B7DBC(&qword_26AD89518);
                        sub_2368DC7C4();
                        sub_2367CAA54();
                        *(_OWORD *)(sub_2368DC598() + 16) = xmmword_236987050;
                        sub_2368DC604();
                        v98();
                        uint64_t v186 = sub_2368DC710();
                      }
                      if (sub_2367E4F14() & 1) != 0 && (sub_2367E4EC4()) {
                        char v99 = sub_2367E4F54();
                      }
                      else {
                        char v99 = 0;
                      }
                      swift_bridgeObjectRelease();
                      sub_2367B7DBC(&qword_26AD89518);
                      sub_23697A3AC();
                      sub_2367CAA54();
                      uint64_t v100 = swift_allocObject();
                      *(_OWORD *)(v100 + 16) = xmmword_236987050;
                      sub_2367E5330();
                      v101();
                      uint64_t v186 = sub_2368F9A28(v100, v186);
                    }
                    else
                    {
                      swift_bridgeObjectRelease();
                      if (v91)
                      {
                        sub_2367B7DBC(&qword_26AD89518);
                        sub_23697A3AC();
                        sub_2367CAA54();
                        uint64_t v145 = v144;
                        uint64_t v91 = *(void *)(v146 + 72);
                        uint64_t v147 = swift_allocObject();
                        *(_OWORD *)(v147 + 16) = xmmword_236987610;
                        id v148 = *(void (**)(void))(v145 + 104);
                        sub_2367E5330();
                        v148();
                        sub_2367E5330();
                        v148();
                        sub_2367E5330();
                        v148();
                        uint64_t v186 = sub_2368F9A28(v147, v186);
                      }
                      char v99 = 0;
                    }
                    uint64_t v102 = v163;
                    uint64_t v103 = v182;
                    sub_23697A37C();
                    id v104 = objc_msgSend(v169, sel_startTimeZone);
                    LODWORD(v163) = v90;
                    if (v104)
                    {
                      uint64_t v105 = v104;
                      uint64_t v106 = v180;
                      sub_23697A41C();

                      uint64_t v107 = *(void (**)(uint64_t, uint64_t, uint64_t))(v181 + 32);
                      uint64_t v109 = v184;
                      uint64_t v108 = v185;
                      v107(v185, v106, v184);
                      sub_2367B7028(v108, 0, 1, v109);
                      if (sub_2367B85F8(v108, 1, v109) != 1)
                      {
                        uint64_t v91 = v102;
                        uint64_t v110 = v166;
                        uint64_t v111 = v184;
                        v107((uint64_t)v166, v185, v184);
                        uint64_t v112 = v181;
                        (*(void (**)(uint64_t, char *, uint64_t))(v181 + 16))(v180, v110, v111);
                        sub_23697A39C();
                        uint64_t v113 = v110;
                        uint64_t v102 = v91;
                        (*(void (**)(char *, uint64_t))(v112 + 8))(v113, v111);
                        goto LABEL_77;
                      }
                    }
                    else
                    {
                      sub_2367B7028(v185, 1, 1, v184);
                    }
                    sub_2367E4E08(v185, &qword_26AD89430);
LABEL_77:
                    uint64_t v114 = (uint64_t)v170;
                    sub_23697A34C();
                    uint64_t v115 = v167;
                    if (v99) {
                      goto LABEL_84;
                    }
                    sub_23697A38C();
                    uint64_t v116 = (void *)sub_23697A40C();
                    uint64_t v117 = *(void (**)(void))(v181 + 8);
                    sub_2368DC77C();
                    v117();
                    char v194 = 0;
                    uint64_t v118 = (void *)sub_23697A29C();
                    sub_23697A38C();
                    uint64_t v119 = (void *)sub_23697A40C();
                    sub_2368DC77C();
                    v117();
                    id v193 = v116;
                    id v120 = objc_msgSend(v183, sel_dateFromReferenceDate_referenceTimezone_timezoneRef_allDayRef_, v118, v119, &v193, &v194);

                    id v121 = v193;
                    if (v120)
                    {
                      sub_23697A2BC();

                      uint64_t v122 = v161;
                      sub_2368DC79C();
                      uint64_t v115 = v167;
                      v167();
                      sub_2368DC618();
                      uint64_t v103 = v182;
                      uint64_t v123 = v179;
                      if (!v66)
                      {
                        v124 = v165;
                        sub_2368DC79C();
                        v115();
                        uint64_t v125 = v172;
                        sub_23697A34C();
                        (*(void (**)(char *, uint64_t))(v190 + 8))(v124, v91);
                        uint64_t v126 = v189;
                        (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v189, v103);
                        (*(void (**)(uint64_t, uint64_t, uint64_t))(v123 + 32))(v126, v125, v103);
LABEL_83:
                        uint64_t v114 = (uint64_t)v170;

LABEL_84:
                        uint64_t v127 = v168;
                        (*(void (**)(BOOL *, uint64_t, uint64_t))(v179 + 16))(&v168[*(int *)(v102 + 20)], v189, v103);
                        uint64_t v128 = (uint64_t)&v127[*(int *)(v102 + 24)];
                        sub_2368DC650(v128);
                        *uint64_t v127 = (v163 & 1) == 0;
                        sub_2368DC650(v114);
                        id v129 = objc_msgSend(v169, sel_endDate);
                        if (v129)
                        {
                          unint64_t v130 = v129;
                          char v131 = v162;
                          sub_23697A2BC();

                          uint64_t v132 = v176;
                          ((void (*)(uint64_t, char *, uint64_t))v115)(v176, v131, v192);
                          sub_2368DC618();
                          if (!v66)
                          {
                            uint64_t v133 = v173;
                            ((void (*)(uint64_t, uint64_t, uint64_t))v115)(v173, v132, v192);
                            uint64_t v134 = v174;
                            sub_23697A34C();
                            swift_bridgeObjectRelease();
                            sub_2367B7028(v134, 0, 1, v103);
                            sub_236805FFC(v134, v114);
                            if (sub_2367B85F8(v114, 1, v103))
                            {
                              uint64_t v135 = v102;
                              sub_2368DC80C();
                              char v136 = *(void (**)(void))(v190 + 8);
                              sub_2368DC77C();
                              v136();
                              uint64_t v137 = sub_2368DC5E0();
                              v138(v137);
                              sub_2367E507C();
                              v139();
                              sub_2368DC77C();
                              v136();
                            }
                            else
                            {
                              id v149 = objc_msgSend(v169, sel_endTimeZone);
                              if (v149)
                              {
                                uint64_t v150 = v149;
                                uint64_t v135 = v102;
                                uint64_t v151 = v171;
                                sub_23697A41C();

                                uint64_t v152 = 0;
                              }
                              else
                              {
                                uint64_t v135 = v102;
                                uint64_t v152 = 1;
                                uint64_t v151 = v171;
                              }
                              sub_2367B7028(v151, v152, 1, v184);
                              sub_23697A09C();
                              sub_2368DC80C();
                              uint64_t v153 = *(void (**)(uint64_t, uint64_t))(v190 + 8);
                              uint64_t v154 = v192;
                              v153(v133, v192);
                              uint64_t v155 = sub_2368DC5E0();
                              v156(v155);
                              sub_2367E507C();
                              v157();
                              v153(v188, v154);
                            }
                            sub_2367E4B0C(v114, v128);
                            goto LABEL_98;
                          }
                        }
                        else
                        {
                          uint64_t v132 = v176;
                          sub_2368DC74C(v176);
                        }
                        uint64_t v135 = v102;
                        swift_bridgeObjectRelease();
                        sub_2368DC80C();
                        uint64_t v140 = sub_2368DC5E0();
                        v141(v140);
                        sub_2367E507C();
                        v142();
                        sub_2367E507C();
                        v143();
                        sub_2367E4E08(v132, (uint64_t *)&off_26AD89548);
LABEL_98:
                        uint64_t v158 = (uint64_t)v168;
                        uint64_t v159 = v191;
                        sub_2368DC45C();
                        sub_2367B7028(v159, 0, 1, v135);
                        sub_2367E4E08(v114, &qword_26AD89410);
                        sub_2368DC4B0(v158, (void (*)(void))type metadata accessor for CalendarEvent);
                        goto LABEL_99;
                      }
                    }
                    else
                    {
                      uint64_t v122 = v161;
                      sub_2368DC74C(v161);
                      uint64_t v103 = v182;
                      uint64_t v115 = v167;
                    }
                    sub_2367E4E08(v122, (uint64_t *)&off_26AD89548);
                    goto LABEL_83;
                  }
LABEL_54:
                  int v90 = v69;
                  goto LABEL_55;
                }
LABEL_52:
                swift_bridgeObjectRelease();
                goto LABEL_53;
              }
              goto LABEL_107;
            }
            goto LABEL_105;
          }
        }
        int v69 = 1;
        goto LABEL_31;
      }
    }
    else
    {
      sub_2368DC74C((uint64_t)v38);
    }

    sub_2367E4E08((uint64_t)v38, (uint64_t *)&off_26AD89548);
    uint64_t v75 = sub_2368DC7B0();
    goto LABEL_16;
  }
  sub_2368DC7B0();
  sub_2367CAD58();
  sub_2367B7028(v70, v71, v72, v73);
}

uint64_t sub_2368DAF30(void *a1)
{
  unint64_t v1 = sub_2368FC3E4(a1);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v2 = v1;
  if (v1 >> 62) {
    goto LABEL_37;
  }
  uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v3)
  {
LABEL_38:
    uint64_t v5 = MEMORY[0x263F8EE78];
LABEL_39:
    swift_bridgeObjectRelease();
    return v5;
  }
  while (v3 >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = MEMORY[0x263F8EE78];
    while (1)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x237E06BC0](v4, v2);
      }
      else {
        id v6 = *(id *)(v2 + 8 * v4 + 32);
      }
      uint64_t v7 = v6;
      id v8 = objc_msgSend(v6, sel_type);
      uint64_t v9 = sub_23697AF6C();
      uint64_t v11 = v10;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2367D215C(0, *(void *)(v5 + 16) + 1, 1, v5);
        uint64_t v5 = v26;
      }
      unint64_t v13 = *(void *)(v5 + 16);
      unint64_t v12 = *(void *)(v5 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_2367D215C(v12 > 1, v13 + 1, 1, v5);
        uint64_t v5 = v27;
      }
      *(void *)(v5 + 16) = v13 + 1;
      uint64_t v14 = v5 + 16 * v13;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v11;
      uint64_t v15 = sub_2368DAF30(v7);
      uint64_t v16 = *(void *)(v15 + 16);
      uint64_t v17 = *(void *)(v5 + 16);
      uint64_t v18 = v17 + v16;
      if (__OFADD__(v17, v16)) {
        break;
      }
      uint64_t v19 = v15;
      if (v18 > *(void *)(v5 + 24) >> 1)
      {
        if (v17 <= v18) {
          uint64_t v28 = v17 + v16;
        }
        else {
          uint64_t v28 = *(void *)(v5 + 16);
        }
        sub_2367D215C(1, v28, 1, v5);
        uint64_t v5 = v29;
        if (*(void *)(v19 + 16))
        {
LABEL_16:
          uint64_t v20 = *(void *)(v5 + 16);
          if ((*(void *)(v5 + 24) >> 1) - v20 < v16) {
            goto LABEL_35;
          }
          unint64_t v21 = v5 + 16 * v20 + 32;
          if (v19 + 32 < v21 + 16 * v16 && v21 < v19 + 32 + 16 * v16) {
            goto LABEL_42;
          }
          swift_arrayInitWithCopy();
          if (v16)
          {
            uint64_t v23 = *(void *)(v5 + 16);
            BOOL v24 = __OFADD__(v23, v16);
            uint64_t v25 = v23 + v16;
            if (v24) {
              goto LABEL_36;
            }
            *(void *)(v5 + 16) = v25;
          }
          goto LABEL_30;
        }
      }
      else if (v16)
      {
        goto LABEL_16;
      }
      if (v16) {
        goto LABEL_34;
      }
LABEL_30:
      ++v4;
      swift_bridgeObjectRelease();

      if (v3 == v4) {
        goto LABEL_39;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t v3 = sub_23697B7FC();
    if (!v3) {
      goto LABEL_38;
    }
  }
  __break(1u);
LABEL_42:
  uint64_t result = sub_23697B85C();
  __break(1u);
  return result;
}

id sub_2368DB1C8(uint64_t a1)
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F04930]), sel_initWithDDScannerResult_, a1);
  if (result)
  {
    unint64_t v2 = result;
    uint64_t v3 = MEMORY[0x263F8EE80];
    uint64_t v26 = MEMORY[0x263F8EE80];
    sub_2368FC3A8(result);
    uint64_t v5 = v4;
    swift_bridgeObjectRelease();
    if (v5)
    {
      id v6 = (id)*MEMORY[0x263F08510];
      uint64_t v7 = (void *)sub_2368DC6A0();
      sub_2368FC3A8(v7);
      if (v8)
      {
        swift_isUniquelyReferenced_nonNull_native();
        sub_2368DC550();
        sub_2368DC7F4();
      }
      else
      {
        sub_2368DC6F8();
        uint64_t v3 = v9;
      }
      swift_bridgeObjectRelease();
    }
    sub_2368FC3B4(v2);
    sub_2368DC7DC();
    if (v3)
    {
      id v10 = (id)*MEMORY[0x263F084E0];
      uint64_t v11 = (void *)sub_2368DC6A0();
      sub_2368FC3B4(v11);
      if (v12)
      {
        sub_2368DC5C0();
        sub_2368DC550();
        sub_2368DC7F4();
      }
      else
      {
        sub_2368DC6F8();
        uint64_t v3 = v13;
      }
      swift_bridgeObjectRelease();
    }
    sub_2368FC3C0(v2);
    sub_2368DC7DC();
    if (v3)
    {
      id v14 = (id)*MEMORY[0x263F08508];
      uint64_t v15 = (void *)sub_2368DC6A0();
      sub_2368FC3C0(v15);
      if (v16)
      {
        sub_2368DC5C0();
        sub_2368DC550();
        sub_2368DC7F4();
      }
      else
      {
        sub_2368DC6F8();
        uint64_t v3 = v17;
      }
      swift_bridgeObjectRelease();
    }
    sub_2368FC3CC(v2);
    sub_2368DC7DC();
    if (v3)
    {
      id v18 = (id)*MEMORY[0x263F08518];
      uint64_t v19 = (void *)sub_2368DC6A0();
      sub_2368FC3CC(v19);
      if (v20)
      {
        sub_2368DC5C0();
        sub_2368DC550();
        sub_2368DC7F4();
      }
      else
      {
        sub_2368DC6F8();
        uint64_t v3 = v21;
      }
      swift_bridgeObjectRelease();
    }
    sub_2368FC3D8(v2);
    sub_2368DC7DC();
    if (v3)
    {
      id v22 = (id)*MEMORY[0x263F084E8];
      uint64_t v23 = (void *)sub_2368DC6A0();
      sub_2368FC3D8(v23);
      if (v24)
      {
        sub_2368DC5C0();
        sub_2368DC550();
        uint64_t v26 = v25;
      }
      else
      {
        sub_2368DC6F8();
      }

      swift_bridgeObjectRelease();
    }
    else
    {
    }
    return (id)v26;
  }
  return result;
}

void sub_2368DB400(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8 = sub_2367B7DBC(&qword_26AD89538);
  uint64_t v9 = sub_2367BB430(v8);
  MEMORY[0x270FA5388](v9);
  sub_2367BB260();
  uint64_t v83 = v10;
  sub_2367E5188();
  uint64_t v11 = sub_23697A1CC();
  sub_2367CAA54();
  uint64_t v82 = v12;
  MEMORY[0x270FA5388](v13);
  sub_2367BB610();
  sub_236810048();
  MEMORY[0x270FA5388](v14);
  sub_2367E5460();
  uint64_t v81 = v15;
  uint64_t v16 = sub_2367B7DBC(&qword_26AD89460);
  uint64_t v17 = sub_2367BB430(v16);
  MEMORY[0x270FA5388](v17);
  sub_2367BB260();
  uint64_t v96 = v18;
  uint64_t v19 = sub_2367E5188();
  uint64_t v97 = type metadata accessor for CalendarEvent(v19);
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v20);
  sub_2367BB260();
  uint64_t v94 = v21;
  sub_2367E5188();
  id v22 = (int *)type metadata accessor for FoundInEventDataDetectorsOutput();
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v23);
  sub_2368DC66C();
  uint64_t v24 = sub_23697A0AC();
  sub_2367B7028(v6, 1, 1, v24);
  uint64_t v25 = v6 + v22[5];
  sub_23697A43C();
  sub_2368DC650(v25);
  uint64_t v92 = v6 + v22[6];
  uint64_t v93 = v24;
  sub_2367B7028(v92, 1, 1, v24);
  sub_2368DC650(v6 + v22[7]);
  uint64_t v26 = v22[8];
  *(unsigned char *)(v6 + v26) = 0;
  sub_2368DC5F8(v22[9]);
  uint64_t v89 = v27;
  sub_2368DC5F8(v22[10]);
  int v90 = v28;
  sub_2368DC5F8(v22[11]);
  uint64_t v85 = v29;
  sub_2368DC5F8(v22[12]);
  char v86 = v30;
  sub_2368DC5F8(v22[13]);
  uint64_t v88 = v31;
  sub_2368DC5F8(v22[14]);
  sub_2368DC5F8(v22[15]);
  uint64_t v87 = v32;
  uint64_t v80 = v6 + v22[16];
  uint64_t v84 = v11;
  sub_2367B7028(v80, 1, 1, v11);
  uint64_t v95 = v22[17];
  *(void *)(v6 + v95) = 0;
  uint64_t v33 = (void *)(v6 + v22[18]);
  uint64_t v34 = v6 + v22[19];
  uint64_t v35 = v6 + v22[20];
  id v36 = objc_msgSend(a1, sel_type);
  sub_23697AF6C();

  sub_23697AFEC();
  swift_bridgeObjectRelease();
  void *v33 = a3;
  v33[1] = a4;
  swift_bridgeObjectRetain();
  *(void *)uint64_t v34 = objc_msgSend(a1, sel_range);
  *(unsigned char *)(v34 + 8) = 0;
  objc_msgSend(a1, sel_range);
  *(void *)uint64_t v35 = v37;
  *(unsigned char *)(v35 + 8) = 0;
  sub_2368DC688();
  sub_2367CA700();
  if (sub_23697B59C())
  {
    swift_bridgeObjectRelease();
    *(unsigned char *)(v6 + v26) = 4;
    id v38 = sub_2368DB1C8((uint64_t)a1);
    if (v38)
    {
      *(void *)(v6 + v95) = v38;
LABEL_10:
      uint64_t v40 = a6;
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v102 = v26;
    if ((sub_2368DC578() & 1) == 0 && (sub_2368DC578() & 1) == 0)
    {
      sub_2368DC6E0();
      if (sub_2368DC578())
      {
        swift_bridgeObjectRelease();
        self;
        uint64_t v41 = sub_2368DC6AC();
        uint64_t v40 = a6;
        if (v41)
        {
          uint64_t v42 = (void *)v41;
          *(unsigned char *)(v6 + v26) = 10;
          uint64_t v43 = &selRef_e1723_;
          id v44 = objc_msgSend(v42, sel_trackingNumber);
          uint64_t v45 = sub_23697AF6C();
          uint64_t v47 = v46;

          *uint64_t v89 = v45;
          v89[1] = v47;
          id v48 = objc_msgSend(v42, sel_carrier);
          uint64_t v49 = sub_23697AF6C();
          uint64_t v51 = v50;

          uint64_t *v90 = v49;
          v90[1] = v51;
        }
        goto LABEL_11;
      }
      id v52 = a1;
      uint64_t v40 = a6;
      if (sub_2368DC578())
      {
        swift_bridgeObjectRelease();
        self;
        uint64_t v53 = swift_dynamicCastObjCClass();
        if (!v53) {
          goto LABEL_11;
        }
        uint64_t v54 = (void *)v53;
        *(unsigned char *)(v6 + v102) = 2;
        id v55 = a2;
        id v56 = objc_msgSend(v54, sel_phoneNumber);
        uint64_t v57 = sub_23697AF6C();
        uint64_t v59 = v58;

        id v60 = v88;
      }
      else if (sub_2368DC578())
      {
        swift_bridgeObjectRelease();
        self;
        uint64_t v61 = sub_2368DC6AC();
        if (!v61) {
          goto LABEL_11;
        }
        uint64_t v62 = (void *)v61;
        *(unsigned char *)(v6 + v102) = 8;
        id v63 = (id)0xE500000000000000;
        id v64 = objc_msgSend(v62, sel_emailAddress);
        uint64_t v57 = sub_23697AF6C();
        uint64_t v59 = v65;

        id v60 = v87;
      }
      else
      {
        sub_2368DC788();
        if ((sub_2368DC578() & 1) == 0)
        {
          char v75 = sub_2368DC578();
          swift_bridgeObjectRelease();
          if ((v75 & 1) == 0)
          {
            uint64_t v39 = 1;
            goto LABEL_12;
          }
          id v76 = [v52 url];
          if (v76)
          {
            uint64_t v77 = v76;
            sub_23697A17C();

            uint64_t v78 = *(void (**)(void))(v82 + 32);
            uint64_t v79 = v83;
            sub_2368DC72C();
            v78();
            sub_2367B7028(v83, 0, 1, v84);
            if (sub_2367B85F8(v83, 1, v84) != 1)
            {
              sub_2368DC72C();
              v78();
              if (objc_msgSend(v52, sel_category) == 1)
              {
                *(unsigned char *)(v6 + v102) = 3;
                sub_2367E4E08(v80, &qword_26AD89538);
                sub_2368DC72C();
                v78();
                sub_2367B7028(v80, 0, 1, v84);
              }
              else
              {
                (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v81, v84);
              }
              goto LABEL_11;
            }
          }
          else
          {
            uint64_t v79 = v83;
            sub_2367B7028(v83, 1, 1, v84);
          }
          sub_2367E4E08(v79, &qword_26AD89538);
LABEL_11:
          sub_2368DC45C();
          uint64_t v39 = 0;
          goto LABEL_12;
        }
        swift_bridgeObjectRelease();
        self;
        uint64_t v66 = sub_2368DC6AC();
        if (!v66) {
          goto LABEL_11;
        }
        uint64_t v67 = (void *)v66;
        *(unsigned char *)(v6 + v102) = 9;
        id v68 = (id)0xE500000000000000;
        id v69 = objc_msgSend(v67, sel_flightNumber);
        uint64_t v70 = sub_23697AF6C();
        uint64_t v72 = v71;

        *uint64_t v85 = v70;
        v85[1] = v72;
        id v73 = objc_msgSend(v67, sel_airline);
        uint64_t v57 = sub_23697AF6C();
        uint64_t v59 = v74;

        id v60 = v86;
      }
      *id v60 = v57;
      v60[1] = v59;
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    *(unsigned char *)(v6 + v26) = 5;
    sub_2368D9DF4(a1, a5, v96);
    if (sub_2367B85F8(v96, 1, v97) != 1)
    {
      sub_2368DC408();
      sub_2367E4E08(v6, &qword_26AD89410);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 32))(v6, v94 + *(int *)(v97 + 20), v93);
      sub_2367B7028(v6, 0, 1, v93);
      sub_236805FFC(v94 + *(int *)(v97 + 24), v92);
      goto LABEL_10;
    }
    sub_2367E4E08(v96, &qword_26AD89460);
  }
  uint64_t v39 = 1;
  uint64_t v40 = a6;
LABEL_12:
  sub_2367B7028(v40, v39, 1, (uint64_t)v22);
  sub_2368DC4B0(v6, (void (*)(void))type metadata accessor for FoundInEventDataDetectorsOutput);
  sub_2367CAD58();
}

id sub_2368DBD64(void *a1)
{
  id v2 = objc_msgSend(a1, sel_type);
  sub_23697AF6C();

  uint64_t v3 = sub_23697AFEC();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  uint64_t v17 = v3;
  uint64_t v18 = v5;
  sub_2368DC688();
  uint64_t v15 = v6;
  unint64_t v16 = v7;
  sub_2367CA700();
  if (sub_2368DC504())
  {
    uint64_t v8 = (Class *)0x263F04930;
LABEL_6:
    swift_bridgeObjectRelease();
    return objc_msgSend(objc_allocWithZone(*v8), sel_initWithDDScannerResult_, a1, v15, v16, v17, v18);
  }
  uint64_t v17 = v3;
  uint64_t v18 = v5;
  uint64_t v15 = 1702125924;
  unint64_t v16 = 0xE400000000000000;
  if ((sub_2368DC504() & 1) != 0
    || (v17 = v3, v18 = v5, uint64_t v15 = 1701669236, v16 = 0xE400000000000000, (sub_2368DC504() & 1) != 0))
  {
    uint64_t v8 = (Class *)0x263F04900;
    goto LABEL_6;
  }
  uint64_t v17 = v3;
  uint64_t v18 = v5;
  sub_2368DC6E0();
  uint64_t v15 = v10;
  unint64_t v16 = v11;
  if (sub_2368DC504())
  {
    uint64_t v8 = (Class *)0x263F04938;
    goto LABEL_6;
  }
  uint64_t v17 = v3;
  uint64_t v18 = v5;
  uint64_t v15 = 0x656E6F6870;
  unint64_t v16 = 0xE500000000000000;
  if (sub_2368DC504())
  {
    uint64_t v8 = (Class *)0x263F04928;
    goto LABEL_6;
  }
  uint64_t v17 = v3;
  uint64_t v18 = v5;
  uint64_t v15 = 0x6C69616D65;
  unint64_t v16 = 0xE500000000000000;
  if (sub_2368DC504())
  {
    uint64_t v8 = (Class *)0x263F04908;
    goto LABEL_6;
  }
  uint64_t v17 = v3;
  uint64_t v18 = v5;
  sub_2368DC788();
  uint64_t v15 = v12;
  unint64_t v16 = v13;
  if (sub_2368DC504())
  {
    uint64_t v8 = (Class *)0x263F04910;
    goto LABEL_6;
  }
  uint64_t v17 = v3;
  uint64_t v18 = v5;
  uint64_t v15 = 7107189;
  unint64_t v16 = 0xE300000000000000;
  char v14 = sub_2368DC504();
  swift_bridgeObjectRelease();
  if (v14)
  {
    uint64_t v8 = (Class *)0x263F04918;
    return objc_msgSend(objc_allocWithZone(*v8), sel_initWithDDScannerResult_, a1, v15, v16, v17, v18);
  }
  return 0;
}

void sub_2368DBF74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_2367B7DBC(&qword_26AD89480);
  uint64_t v5 = sub_2367BB430(v4);
  MEMORY[0x270FA5388](v5);
  sub_2368DC66C();
  uint64_t v35 = type metadata accessor for FoundInEventDataDetectorsOutput();
  sub_2367CAA54();
  uint64_t v33 = v6;
  MEMORY[0x270FA5388](v7);
  sub_2367BB610();
  MEMORY[0x270FA5388](v8);
  sub_2367E5460();
  uint64_t v34 = v9;
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F394B8]), sel_initWithScannerType_passiveIntent_, 0, 1);
  unint64_t v11 = self;
  uint64_t v12 = (void *)sub_23697AF3C();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_23697B15C();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v11, sel_scanString_range_configuration_, v12, 0, v13, v10);

  sub_2368DC3C8();
  unint64_t v15 = sub_23697B1DC();

  if (!(v15 >> 62))
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v16) {
      goto LABEL_3;
    }
LABEL_24:

    swift_bridgeObjectRelease();
LABEL_25:
    sub_2367CAD58();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_23697B7FC();
  swift_bridgeObjectRelease();
  if (!v16) {
    goto LABEL_24;
  }
LABEL_3:
  if (v16 >= 1)
  {
    uint64_t v32 = v10;
    uint64_t v17 = 0;
    uint64_t v37 = MEMORY[0x263F8EE78];
    uint64_t v18 = &selRef_e1723_;
    do
    {
      if ((v15 & 0xC000000000000001) != 0) {
        id v19 = (id)MEMORY[0x237E06BC0](v17, v15);
      }
      else {
        id v19 = *(id *)(v15 + 8 * v17 + 32);
      }
      uint64_t v20 = v19;
      objc_msgSend(v19, v18[342], v32, v33);
      sub_23697B2FC();
      if (v21)
      {
      }
      else
      {
        uint64_t v22 = v16;
        uint64_t v23 = sub_23697B1AC();
        uint64_t v24 = MEMORY[0x237E064D0](v23);
        uint64_t v26 = v25;
        swift_bridgeObjectRelease();
        id v27 = sub_2368DBD64(v20);
        if (v27)
        {
          uint64_t v28 = v27;
          sub_2368DB400(v20, v27, v24, v26, a3, v3);
          swift_bridgeObjectRelease();
          if (sub_2367B85F8(v3, 1, v35) == 1)
          {

            sub_2367E4E08(v3, &qword_26AD89480);
          }
          else
          {
            sub_2368DC408();
            sub_2368DC45C();
            if (swift_isUniquelyReferenced_nonNull_native()) {
              uint64_t v29 = v37;
            }
            else {
              uint64_t v29 = sub_2367D230C(0, *(void *)(v37 + 16) + 1, 1, v37);
            }
            unint64_t v31 = *(void *)(v29 + 16);
            unint64_t v30 = *(void *)(v29 + 24);
            if (v31 >= v30 >> 1) {
              uint64_t v29 = sub_2367D230C(v30 > 1, v31 + 1, 1, v29);
            }
            *(void *)(v29 + 16) = v31 + 1;
            uint64_t v37 = v29;
            sub_2368DC408();

            sub_2368DC4B0(v34, (void (*)(void))type metadata accessor for FoundInEventDataDetectorsOutput);
          }
        }
        else
        {

          swift_bridgeObjectRelease();
        }
        uint64_t v16 = v22;
        uint64_t v18 = &selRef_e1723_;
      }
      ++v17;
    }
    while (v16 != v17);

    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  __break(1u);
}

uint64_t type metadata accessor for DUDataDetectors()
{
  return self;
}

unint64_t sub_2368DC3C8()
{
  unint64_t result = qword_26AD894C0;
  if (!qword_26AD894C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AD894C0);
  }
  return result;
}

uint64_t sub_2368DC408()
{
  uint64_t v2 = sub_2368DC768();
  v3(v2);
  sub_2367BB1EC();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t sub_2368DC45C()
{
  uint64_t v2 = sub_2368DC768();
  v3(v2);
  sub_2367BB1EC();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v0, v1);
  return v0;
}

uint64_t sub_2368DC4B0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_2367BB1EC();
  sub_2367E507C();
  v3();
  return a1;
}

uint64_t sub_2368DC504()
{
  return sub_23697B59C();
}

uint64_t sub_2368DC528()
{
  return sub_23697B95C();
}

void sub_2368DC550()
{
  sub_2368D0488();
}

uint64_t sub_2368DC578()
{
  return sub_23697B59C();
}

uint64_t sub_2368DC598()
{
  return swift_allocObject();
}

uint64_t sub_2368DC5C0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_2368DC5E0()
{
  return *(void *)(v0 - 144);
}

void sub_2368DC5F8(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)(v1 + a1);
  *uint64_t v2 = 0;
  v2[1] = 0;
}

uint64_t sub_2368DC618()
{
  sub_2367B7028(v1, 0, 1, v0);
  return sub_2367B85F8(v1, 1, v0);
}

uint64_t sub_2368DC650(uint64_t a1)
{
  return sub_2367B7028(a1, 1, 1, v1);
}

uint64_t sub_2368DC66C()
{
  return 0;
}

uint64_t sub_2368DC6A0()
{
  return v0;
}

uint64_t sub_2368DC6AC()
{
  return swift_dynamicCastObjCClass();
}

uint64_t sub_2368DC6C8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2368DC6F8()
{
  return sub_2368FBFE0();
}

uint64_t sub_2368DC710()
{
  uint64_t v3 = *(void *)(v1 - 168);
  return sub_2368F9A28(v0, v3);
}

uint64_t sub_2368DC74C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 120);
  return sub_2367B7028(a1, 1, 1, v3);
}

uint64_t sub_2368DC768()
{
  return 0;
}

uint64_t sub_2368DC7B0()
{
  return *(void *)(v0 - 128);
}

uint64_t sub_2368DC7C4()
{
  return sub_23697A3AC();
}

uint64_t sub_2368DC7DC()
{
  return swift_bridgeObjectRelease();
}

void sub_2368DC7F4()
{
}

void sub_2368DC80C()
{
  uint64_t v2 = *(void **)(v0 - 304);
}

unint64_t sub_2368DC824()
{
  return 0xD000000000000014;
}

uint64_t type metadata accessor for DUFoundInEventSpecification()
{
  return self;
}

unint64_t sub_2368DC864()
{
  return 0xD000000000000014;
}

uint64_t sub_2368DC884(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  uint64_t v4 = sub_23697AD0C();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2368DC948, 0, 0);
}

uint64_t sub_2368DC948()
{
  uint64_t v16 = v0;
  sub_23697ACFC();
  uint64_t v1 = sub_23697ACDC();
  os_log_type_t v2 = sub_23697B35C();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v4 = v0[7];
    uint64_t v3 = v0[8];
    uint64_t v5 = v0[6];
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v15 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    v0[2] = sub_2367D90DC(0xD000000000000014, 0x8000000236998270, &v15);
    sub_23697B50C();
    _os_log_impl(&dword_2367AD000, v1, v2, "FoundInEvent phase ID: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x237E081F0](v7, -1, -1);
    MEMORY[0x237E081F0](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    uint64_t v9 = v0[7];
    uint64_t v8 = v0[8];
    uint64_t v10 = v0[6];

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  id v14 = (uint64_t (*)(uint64_t))((char *)&dword_268898828 + dword_268898828);
  unint64_t v11 = (void *)swift_task_alloc();
  v0[9] = v11;
  *unint64_t v11 = v0;
  v11[1] = sub_2368DCB5C;
  uint64_t v12 = v0[4];
  return v14(v12);
}

uint64_t sub_2368DCB5C()
{
  sub_2367CAA3C();
  *(void *)(v1 + 80) = v0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2368DCC38, 0, 0);
}

uint64_t sub_2368DCC38()
{
  uint64_t v1 = *(void **)(v0 + 80);
  if (v1)
  {
    id v2 = v1;
    DUResponse.foundInEventResult.setter(v1);
  }
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

id sub_2368DCCC0()
{
  uint64_t v0 = (objc_class *)type metadata accessor for DURequestContentType();
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR____TtC21DocumentUnderstanding20DURequestContentType_rawValue] = 2048;
  v3.receiver = v1;
  v3.super_class = v0;
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t sub_2368DCD1C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_236805EB0;
  return sub_2368DC884(a1, a2);
}

id sub_2368DCDC4()
{
  return sub_2368DCCC0();
}

char *DUTopicDetectionResponse.__allocating_init<A>(proto:)(uint64_t a1, uint64_t a2)
{
  uint64_t v97 = a1;
  uint64_t v95 = type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo();
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v6);
  sub_2368DE820(v7, v85);
  MEMORY[0x270FA5388](v8);
  sub_2367E5460();
  uint64_t v90 = v9;
  uint64_t v10 = sub_2367B7DBC(&qword_268898130);
  uint64_t v11 = sub_2367BB430(v10);
  MEMORY[0x270FA5388](v11);
  sub_2367BB610();
  uint64_t v89 = v12;
  sub_2367D9914();
  MEMORY[0x270FA5388](v13);
  sub_2367E5460();
  uint64_t v94 = v14;
  uint64_t v15 = type metadata accessor for DocumentUnderstanding_ClientInterface_TopicResult();
  uint64_t v96 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15 - 8);
  sub_2368DE840();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  id v19 = (char *)&v85 - v18;
  MEMORY[0x270FA5388](v17);
  char v21 = (char *)&v85 - v20;
  uint64_t v22 = sub_2367B7DBC(&qword_2688983D0);
  uint64_t v23 = sub_2367BB430(v22);
  MEMORY[0x270FA5388](v23);
  sub_2367CAC7C();
  uint64_t v26 = v25 - v24;
  sub_2367CD744();
  uint64_t v28 = v27;
  MEMORY[0x270FA5388](v29);
  sub_2367CAC7C();
  uint64_t v32 = v31 - v30;
  uint64_t v33 = type metadata accessor for DocumentUnderstanding_ClientInterface_TopicDetectionResponse();
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v34);
  sub_2368C9B94();
  id v35 = objc_msgSend(objc_allocWithZone(v2), sel_init);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v32, v97, a2);
  id v36 = (char *)v35;
  uint64_t v37 = v33;
  uint64_t v38 = a2;
  if (swift_dynamicCast())
  {
    uint64_t v39 = v94;
    uint64_t v93 = v36;
    uint64_t v87 = v28;
    uint64_t v86 = v37;
    sub_2367B7028(v26, 0, 1, v37);
    sub_2368DE68C(v26, (uint64_t)v4, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_TopicDetectionResponse);
    uint64_t v92 = v4;
    uint64_t v40 = *v4;
    uint64_t v99 = MEMORY[0x263F8EE78];
    uint64_t v41 = *(void *)(v40 + 16);
    uint64_t v88 = v38;
    if (v41)
    {
      sub_2367E512C();
      uint64_t v44 = v42 + v43;
      uint64_t v46 = *(void *)(v45 + 72);
      uint64_t v85 = v42;
      swift_bridgeObjectRetain();
      uint64_t v47 = v39;
      do
      {
        sub_2368DE6EC(v44, (uint64_t)v21, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_TopicResult);
        sub_2368DE6EC((uint64_t)v21, (uint64_t)v19, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_TopicResult);
        id v48 = sub_2367E72E0((uint64_t)v19);
        uint64_t v49 = sub_2368DD580((uint64_t)v21, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_TopicResult);
        if (v48)
        {
          MEMORY[0x237E06690](v49);
          if (*(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_2368DE88C();
          }
          sub_23697B22C();
          sub_23697B1FC();
          uint64_t v47 = v39;
        }
        v44 += v46;
        --v41;
      }
      while (v41);
      uint64_t v51 = v99;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v51 = MEMORY[0x263F8EE78];
      uint64_t v47 = v39;
    }
    swift_bridgeObjectRelease();
    uint64_t v50 = v93;
    id v52 = &v93[OBJC_IVAR____TtC21DocumentUnderstanding24DUTopicDetectionResponse_globalTopics];
    swift_beginAccess();
    *(void *)id v52 = v51;
    swift_bridgeObjectRelease();
    uint64_t v53 = (uint64_t)v92;
    uint64_t v54 = v92[1];
    uint64_t v98 = MEMORY[0x263F8EE78];
    uint64_t v55 = *(void *)(v54 + 16);
    if (v55)
    {
      sub_2367E512C();
      uint64_t v57 = v54 + v56;
      uint64_t v59 = *(void *)(v58 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_2368DE6EC(v57, v3, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_TopicResult);
        sub_2368DE6EC(v3, (uint64_t)v19, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_TopicResult);
        id v60 = sub_2367E72E0((uint64_t)v19);
        uint64_t v61 = sub_2368DD580(v3, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_TopicResult);
        if (v60)
        {
          MEMORY[0x237E06690](v61);
          if (*(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_2368DE88C();
          }
          sub_23697B22C();
          sub_23697B1FC();
          uint64_t v47 = v39;
        }
        v57 += v59;
        --v55;
      }
      while (v55);
      uint64_t v62 = v98;
      uint64_t v53 = (uint64_t)v92;
      uint64_t v50 = v93;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v62 = MEMORY[0x263F8EE78];
    }
    swift_bridgeObjectRelease();
    id v63 = &v50[OBJC_IVAR____TtC21DocumentUnderstanding24DUTopicDetectionResponse_personalTopics];
    swift_beginAccess();
    *(void *)id v63 = v62;
    swift_bridgeObjectRelease();
    uint64_t v64 = v53 + *(int *)(v86 + 28);
    sub_236816B6C(v64, v47);
    uint64_t v65 = v95;
    int v66 = sub_2367B85F8(v47, 1, v95);
    sub_2367BAA28(v47, &qword_268898130);
    if (v66 == 1)
    {

      uint64_t v67 = sub_2368DE85C();
      v68(v67);
      sub_2368DD580(v53, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_TopicDetectionResponse);
    }
    else
    {
      uint64_t v69 = v64;
      uint64_t v70 = v89;
      sub_236816B6C(v69, v89);
      if (sub_2367B85F8(v70, 1, v65) == 1)
      {
        uint64_t v71 = v90;
        sub_23697A70C();
        uint64_t v72 = (void *)(v71 + *(int *)(v65 + 20));
        *uint64_t v72 = 0;
        v72[1] = 0;
        sub_2367BAA28(v70, &qword_268898130);
      }
      else
      {
        uint64_t v71 = v90;
        sub_2368DE68C(v70, v90, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo);
      }
      uint64_t v73 = v91;
      id v74 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DUDebugInfo()), sel_init);
      sub_2368DE68C(v71, v73, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo);
      char v75 = (uint64_t *)(v73 + *(int *)(v65 + 20));
      if (v75[1])
      {
        uint64_t v76 = *v75;
        unint64_t v77 = v75[1];
      }
      else
      {
        uint64_t v76 = 0;
        unint64_t v77 = 0xE000000000000000;
      }
      uint64_t v78 = (char *)v74;
      swift_bridgeObjectRetain();
      sub_2368DD580(v73, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo);
      uint64_t v79 = &v78[OBJC_IVAR____TtC21DocumentUnderstanding11DUDebugInfo_debugString];
      sub_236817EA4();
      *(void *)uint64_t v79 = v76;
      *((void *)v79 + 1) = v77;

      swift_bridgeObjectRelease();
      uint64_t v80 = sub_2368DE85C();
      v81(v80);
      sub_2368DD580(v53, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_TopicDetectionResponse);
      uint64_t v82 = (void **)&v50[OBJC_IVAR____TtC21DocumentUnderstanding24DUTopicDetectionResponse_responseDebugInfo];
      sub_236817EA4();
      uint64_t v83 = *v82;
      char *v82 = v78;
    }
  }
  else
  {
    sub_236817EF0(v26, 1);

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v97, a2);
    sub_2367BAA28(v26, &qword_2688983D0);
    return 0;
  }
  return v50;
}

uint64_t sub_2368DD580(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_2367BB1EC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

id DUTopicDetectionResponse.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

uint64_t DUTopicDetectionResponse.globalTopics.getter()
{
  return sub_2368DD72C();
}

uint64_t DUTopicDetectionResponse.globalTopics.setter(uint64_t a1)
{
  return sub_2368DD810(a1, &OBJC_IVAR____TtC21DocumentUnderstanding24DUTopicDetectionResponse_globalTopics);
}

uint64_t (*DUTopicDetectionResponse.globalTopics.modify())()
{
  return j__swift_endAccess;
}

id sub_2368DD6B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  if (a3())
  {
    type metadata accessor for DUTopicResult();
    uint64_t v3 = (void *)sub_23697B1CC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  return v3;
}

uint64_t DUTopicDetectionResponse.personalTopics.getter()
{
  return sub_2368DD72C();
}

uint64_t sub_2368DD72C()
{
  return swift_bridgeObjectRetain();
}

void sub_2368DD780(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5 = a3;
  if (a3)
  {
    type metadata accessor for DUTopicResult();
    uint64_t v5 = sub_23697B1DC();
  }
  id v7 = a1;
  a4(v5);
}

uint64_t DUTopicDetectionResponse.personalTopics.setter(uint64_t a1)
{
  return sub_2368DD810(a1, &OBJC_IVAR____TtC21DocumentUnderstanding24DUTopicDetectionResponse_personalTopics);
}

uint64_t sub_2368DD810(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)(v2 + *a2);
  sub_236817EA4();
  *uint64_t v4 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*DUTopicDetectionResponse.personalTopics.modify())()
{
  return j_j__swift_endAccess;
}

void *DUTopicDetectionResponse.responseDebugInfo.getter()
{
  id v1 = (void **)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding24DUTopicDetectionResponse_responseDebugInfo);
  sub_2367C00E8();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void DUTopicDetectionResponse.responseDebugInfo.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC21DocumentUnderstanding24DUTopicDetectionResponse_responseDebugInfo);
  sub_236817EA4();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

uint64_t (*DUTopicDetectionResponse.responseDebugInfo.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUTopicDetectionResponse.protoRepresentation.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v4 = sub_2367B7DBC(&qword_268898928);
  uint64_t v5 = sub_2367BB430(v4);
  MEMORY[0x270FA5388](v5);
  sub_2368DE840();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v84 - v7;
  uint64_t v9 = type metadata accessor for DocumentUnderstanding_ClientInterface_TopicResult();
  sub_2367CD744();
  uint64_t v92 = v10;
  MEMORY[0x270FA5388](v11);
  sub_2367BB610();
  uint64_t v91 = v12;
  sub_2367D9914();
  MEMORY[0x270FA5388](v13);
  uint64_t v89 = (uint64_t)&v84 - v14;
  sub_2367D9914();
  MEMORY[0x270FA5388](v15);
  uint64_t v93 = (uint64_t)&v84 - v16;
  sub_2367D9914();
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (uint64_t *)((char *)&v84 - v19);
  MEMORY[0x270FA5388](v18);
  sub_2367E5460();
  uint64_t v90 = v21;
  uint64_t v22 = sub_2367B7DBC(&qword_268898130);
  uint64_t v23 = sub_2367BB430(v22);
  MEMORY[0x270FA5388](v23);
  sub_2368C9B94();
  uint64_t v24 = type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo();
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v25);
  sub_2368DE820(v26, v84);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v30 = (uint64_t *)((char *)&v84 - v29);
  MEMORY[0x270FA5388](v28);
  sub_2367E5460();
  uint64_t v85 = v31;
  uint64_t v32 = MEMORY[0x263F8EE78];
  *a1 = MEMORY[0x263F8EE78];
  a1[1] = v32;
  uint64_t v33 = type metadata accessor for DocumentUnderstanding_ClientInterface_TopicDetectionResponse();
  sub_23697A70C();
  uint64_t v34 = *(int *)(v33 + 28);
  uint64_t v86 = a1;
  uint64_t v35 = (uint64_t)a1 + v34;
  uint64_t v36 = v87;
  sub_236817EF0(v35, 1);
  uint64_t v37 = (id *)(v36 + OBJC_IVAR____TtC21DocumentUnderstanding24DUTopicDetectionResponse_responseDebugInfo);
  swift_beginAccess();
  if (*v37)
  {
    id v38 = *v37;
    DUDebugInfo.protoRepresentation.getter(v30);

    int v39 = swift_dynamicCast();
    sub_236817EF0(v2, v39 ^ 1u);
    if (sub_2367B85F8(v2, 1, v24) != 1)
    {
      uint64_t v40 = v2;
      uint64_t v41 = v85;
      sub_2368DE68C(v40, v85, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo);
      uint64_t v42 = v84;
      sub_2368DE6EC(v41, v84, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo);
      sub_2367BAA28(v35, &qword_268898130);
      sub_2368DE68C(v42, v35, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo);
      sub_236817EF0(v35, 0);
      sub_2368DD580(v41, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo);
      goto LABEL_6;
    }
  }
  else
  {
    sub_236817EF0(v2, 1);
  }
  sub_2367BAA28(v2, &qword_268898130);
LABEL_6:
  uint64_t v43 = (unint64_t *)(v36 + OBJC_IVAR____TtC21DocumentUnderstanding24DUTopicDetectionResponse_globalTopics);
  sub_2367C00E8();
  unint64_t v44 = *v43;
  if (!*v43) {
    goto LABEL_26;
  }
  if (v44 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = sub_23697B7FC();
    uint64_t v45 = result;
    if (result) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v45 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v45)
    {
LABEL_9:
      if (v45 < 1)
      {
        __break(1u);
        goto LABEL_48;
      }
      uint64_t v47 = 0;
      unint64_t v48 = v44 & 0xC000000000000001;
      uint64_t v49 = MEMORY[0x263F8EE78];
      uint64_t v88 = v20;
      do
      {
        if (v48) {
          id v50 = (id)MEMORY[0x237E06BC0](v47, v44);
        }
        else {
          id v50 = *(id *)(v44 + 8 * v47 + 32);
        }
        uint64_t v51 = v50;
        DUTopicResult.protoRepresentation.getter(v20);
        sub_2368DE68C((uint64_t)v20, (uint64_t)v8, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_TopicResult);
        sub_2367B7028((uint64_t)v8, 0, 1, v9);

        if (sub_2367B85F8((uint64_t)v8, 1, v9) == 1)
        {
          sub_2367BAA28((uint64_t)v8, &qword_268898928);
        }
        else
        {
          unint64_t v52 = v44;
          uint64_t v53 = v9;
          uint64_t v54 = v1;
          unint64_t v55 = v48;
          uint64_t v56 = v45;
          uint64_t v57 = v90;
          sub_2368DE68C((uint64_t)v8, v90, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_TopicResult);
          sub_2368DE68C(v57, v93, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_TopicResult);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v49 = sub_2367D2C6C(0, *(void *)(v49 + 16) + 1, 1, v49);
          }
          unint64_t v59 = *(void *)(v49 + 16);
          unint64_t v58 = *(void *)(v49 + 24);
          if (v59 >= v58 >> 1)
          {
            char v63 = sub_2368DE878(v58);
            uint64_t v49 = sub_2367D2C6C(v63, v64, v65, v49);
          }
          *(void *)(v49 + 16) = v59 + 1;
          sub_2367E512C();
          sub_2368DE68C(v62, v49 + v60 + *(void *)(v61 + 72) * v59, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_TopicResult);
          uint64_t v45 = v56;
          unint64_t v48 = v55;
          uint64_t v1 = v54;
          uint64_t v9 = v53;
          unint64_t v44 = v52;
          uint64_t v20 = v88;
        }
        ++v47;
      }
      while (v45 != v47);
      goto LABEL_25;
    }
  }
  uint64_t v49 = MEMORY[0x263F8EE78];
LABEL_25:
  swift_bridgeObjectRelease_n();
  int v66 = v86;
  swift_bridgeObjectRelease();
  *int v66 = v49;
  uint64_t v36 = v87;
LABEL_26:
  uint64_t v67 = (unint64_t *)(v36 + OBJC_IVAR____TtC21DocumentUnderstanding24DUTopicDetectionResponse_personalTopics);
  uint64_t result = sub_2367C00E8();
  unint64_t v68 = *v67;
  if (!v68) {
    return result;
  }
  if (v68 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = sub_23697B7FC();
    uint64_t v69 = result;
    if (result)
    {
LABEL_29:
      if (v69 >= 1)
      {
        uint64_t v70 = 0;
        uint64_t v71 = MEMORY[0x263F8EE78];
        do
        {
          if ((v68 & 0xC000000000000001) != 0) {
            id v72 = (id)MEMORY[0x237E06BC0](v70, v68);
          }
          else {
            id v72 = *(id *)(v68 + 8 * v70 + 32);
          }
          uint64_t v73 = v72;
          DUTopicResult.protoRepresentation.getter(v20);
          sub_2368DE68C((uint64_t)v20, v1, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_TopicResult);
          sub_2367B7028(v1, 0, 1, v9);

          if (sub_2367B85F8(v1, 1, v9) == 1)
          {
            sub_2367BAA28(v1, &qword_268898928);
          }
          else
          {
            uint64_t v74 = v89;
            sub_2368DE68C(v1, v89, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_TopicResult);
            sub_2368DE68C(v74, v91, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_TopicResult);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v71 = sub_2367D2C6C(0, *(void *)(v71 + 16) + 1, 1, v71);
            }
            unint64_t v76 = *(void *)(v71 + 16);
            unint64_t v75 = *(void *)(v71 + 24);
            if (v76 >= v75 >> 1)
            {
              char v80 = sub_2368DE878(v75);
              uint64_t v71 = sub_2367D2C6C(v80, v81, v82, v71);
            }
            *(void *)(v71 + 16) = v76 + 1;
            sub_2367E512C();
            sub_2368DE68C(v79, v71 + v77 + *(void *)(v78 + 72) * v76, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_TopicResult);
          }
          ++v70;
        }
        while (v69 != v70);
        goto LABEL_45;
      }
LABEL_48:
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v69 = *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v69) {
      goto LABEL_29;
    }
  }
  uint64_t v71 = MEMORY[0x263F8EE78];
LABEL_45:
  swift_bridgeObjectRelease_n();
  uint64_t v83 = v86;
  uint64_t result = swift_bridgeObjectRelease();
  v83[1] = v71;
  return result;
}

uint64_t DUTopicDetectionResponse.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for DocumentUnderstanding_ClientInterface_TopicDetectionResponse();
  uint64_t v3 = sub_2367BB430(v2);
  MEMORY[0x270FA5388](v3);
  sub_2367CAC7C();
  DUTopicDetectionResponse.protoRepresentation.getter((uint64_t *)(v5 - v4));
  sub_23680A5E0();
  uint64_t v7 = v6;
  uint64_t result = sub_2367B7DBC(&qword_26889A058);
  a1[3] = result;
  *a1 = v7;
  return result;
}

Swift::Void __swiftcall DUTopicDetectionResponse.encode(with:)(NSCoder with)
{
  type metadata accessor for DUTopicDetectionResponse();
  sub_2368DE7D8(&qword_26889A060, v2, (void (*)(uint64_t))type metadata accessor for DUTopicDetectionResponse);
  uint64_t v3 = (void *)sub_23697AB7C();
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = (void *)sub_23697AF3C();
    [(objc_class *)with.super.isa encodeObject:v4 forKey:v5];
  }
}

uint64_t DUTopicDetectionResponse.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return DUTopicDetectionResponse.init(coder:)(a1);
}

uint64_t DUTopicDetectionResponse.init(coder:)(void *a1)
{
  swift_getObjectType();
  sub_2367CBCC4();
  id v3 = v1;
  if (!sub_23697B47C())
  {

    goto LABEL_5;
  }
  swift_getObjectType();

  sub_2368DE7D8(&qword_26889A060, v4, (void (*)(uint64_t))type metadata accessor for DUTopicDetectionResponse);
  sub_23697AB8C();

  uint64_t v5 = v7;
  if (!v7)
  {
LABEL_5:
    swift_getObjectType();
    sub_2367CBFD0();
    return 0;
  }
  swift_getObjectType();
  sub_2367CBFD0();
  return v5;
}

id DUTopicDetectionResponse.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding24DUTopicDetectionResponse_globalTopics] = 0;
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding24DUTopicDetectionResponse_personalTopics] = 0;
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding24DUTopicDetectionResponse_responseDebugInfo] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DUTopicDetectionResponse();
  return objc_msgSendSuper2(&v2, sel_init);
}

id DUTopicDetectionResponse.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DUTopicDetectionResponse();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2368DE640@<X0>(uint64_t *a1@<X8>)
{
  return DUTopicDetectionResponse.protoRepresentation.getter(a1);
}

void sub_2368DE664(void *a1@<X8>)
{
  sub_23680ABAC();
  *a1 = v2;
}

uint64_t sub_2368DE68C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_2367BB1EC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_2368DE6EC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_2367BB1EC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for DUTopicDetectionResponse()
{
  return self;
}

uint64_t sub_2368DE770(uint64_t a1)
{
  return MEMORY[0x270FA03F0](a1, &opaque type descriptor for <<opaque return type of DUTopicDetectionResponse.protoRepresentation>>, 1);
}

uint64_t sub_2368DE78C()
{
  return sub_2368DE7D8(&qword_2688983D8, 255, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_TopicDetectionResponse);
}

uint64_t sub_2368DE7D8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2368DE820(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 240) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_2368DE85C()
{
  return v0;
}

BOOL sub_2368DE878@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_2368DE88C()
{
  return sub_23697B20C();
}

uint64_t sub_2368DE8AC@<X0>(uint64_t a1@<X8>)
{
  sub_23697A70C();
  uint64_t v2 = *(int *)(type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document(0) + 20);
  if (qword_26AD89578 != -1) {
    swift_once();
  }
  *(void *)(a1 + v2) = qword_26AD89570;
  return swift_retain();
}

uint64_t sub_2368DE928()
{
  uint64_t v1 = *(int *)(type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document._StorageClass(0);
    swift_allocObject();
    uint64_t v2 = (void *)swift_retain();
    *(void *)(v0 + v1) = sub_2368DF084(v2);
    swift_release();
  }
  return swift_retain();
}

uint64_t sub_2368DE9B8()
{
  uint64_t v0 = sub_23697A9EC();
  sub_2367BA9C4(v0, qword_26889AC28);
  sub_2367BA98C(v0, (uint64_t)qword_26889AC28);
  sub_2367B7DBC(&qword_268898148);
  uint64_t v1 = (int *)(sub_2367B7DBC(&qword_268898150) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_2369882E0;
  unint64_t v4 = v43 + v3;
  unint64_t v5 = v43 + v3 + v1[14];
  *(void *)(v43 + v3) = 1;
  *(void *)unint64_t v5 = "headline";
  *(void *)(v5 + 8) = 8;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = *MEMORY[0x263F50718];
  uint64_t v7 = sub_23697A9CC();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "subHeadline";
  *(void *)(v9 + 8) = 11;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)uint64_t v11 = "version";
  *((void *)v11 + 1) = 7;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  *uint64_t v12 = 4;
  *(void *)uint64_t v13 = "creator";
  *((void *)v13 + 1) = 7;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v4 + 4 * v2);
  uint64_t v15 = (char *)v14 + v1[14];
  *uint64_t v14 = 5;
  *(void *)uint64_t v15 = "abstract";
  *((void *)v15 + 1) = 8;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v4 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  *uint64_t v16 = 6;
  *(void *)uint64_t v17 = "comment";
  *((void *)v17 + 1) = 7;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v4 + 6 * v2);
  uint64_t v19 = (char *)v18 + v1[14];
  *uint64_t v18 = 7;
  *(void *)uint64_t v19 = "text";
  *((void *)v19 + 1) = 4;
  v19[16] = 2;
  v8();
  uint64_t v20 = (void *)(v4 + 7 * v2);
  uint64_t v21 = (char *)v20 + v1[14];
  *uint64_t v20 = 8;
  *(void *)uint64_t v21 = "inLanguage";
  *((void *)v21 + 1) = 10;
  v21[16] = 2;
  v8();
  uint64_t v22 = (void *)(v4 + 8 * v2);
  uint64_t v23 = (char *)v22 + v1[14];
  *uint64_t v22 = 9;
  *(void *)uint64_t v23 = "keywords";
  *((void *)v23 + 1) = 8;
  v23[16] = 2;
  v8();
  uint64_t v24 = (void *)(v4 + 9 * v2);
  uint64_t v25 = (char *)v24 + v1[14];
  *uint64_t v24 = 10;
  *(void *)uint64_t v25 = "identifier";
  *((void *)v25 + 1) = 10;
  v25[16] = 2;
  v8();
  uint64_t v26 = (void *)(v4 + 10 * v2);
  uint64_t v27 = (char *)v26 + v1[14];
  void *v26 = 11;
  *(void *)uint64_t v27 = "url";
  *((void *)v27 + 1) = 3;
  v27[16] = 2;
  v8();
  uint64_t v28 = (void *)(v4 + 11 * v2);
  uint64_t v29 = (char *)v28 + v1[14];
  *uint64_t v28 = 12;
  *(void *)uint64_t v29 = "thumbnailUrl";
  *((void *)v29 + 1) = 12;
  v29[16] = 2;
  v8();
  uint64_t v30 = (void *)(v4 + 12 * v2);
  uint64_t v31 = (char *)v30 + v1[14];
  *uint64_t v30 = 13;
  *(void *)uint64_t v31 = "significantLink";
  *((void *)v31 + 1) = 15;
  v31[16] = 2;
  v8();
  uint64_t v32 = (void *)(v4 + 13 * v2);
  uint64_t v33 = (char *)v32 + v1[14];
  *uint64_t v32 = 14;
  *(void *)uint64_t v33 = "dateCreated";
  *((void *)v33 + 1) = 11;
  v33[16] = 2;
  v8();
  uint64_t v34 = (void *)(v4 + 14 * v2);
  uint64_t v35 = (char *)v34 + v1[14];
  *uint64_t v34 = 15;
  *(void *)uint64_t v35 = "dateModified";
  *((void *)v35 + 1) = 12;
  v35[16] = 2;
  v8();
  uint64_t v36 = (void *)(v4 + 15 * v2);
  uint64_t v37 = (char *)v36 + v1[14];
  *uint64_t v36 = 16;
  *(void *)uint64_t v37 = "documentUIElements";
  *((void *)v37 + 1) = 18;
  v37[16] = 2;
  v8();
  id v38 = (void *)(v4 + 16 * v2);
  int v39 = (char *)v38 + v1[14];
  *id v38 = 17;
  *(void *)int v39 = "documentHTMLData";
  *((void *)v39 + 1) = 16;
  v39[16] = 2;
  v8();
  uint64_t v40 = (void *)(v4 + 17 * v2);
  uint64_t v41 = (char *)v40 + v1[14];
  *uint64_t v40 = 18;
  *(void *)uint64_t v41 = "documentMessageData";
  *((void *)v41 + 1) = 19;
  v41[16] = 2;
  v8();
  return sub_23697A9DC();
}

uint64_t sub_2368DEF2C()
{
  if (qword_268897F40 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_23697A9EC();
  return sub_2367BA98C(v0, (uint64_t)qword_26889AC28);
}

void *sub_2368DEF90()
{
  type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document._StorageClass(0);
  swift_allocObject();
  uint64_t result = sub_2368DEFD0();
  qword_26AD89570 = (uint64_t)result;
  return result;
}

void *sub_2368DEFD0()
{
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  v0[4] = 0;
  v0[5] = 0xE000000000000000;
  v0[6] = 0;
  v0[7] = 0xE000000000000000;
  v0[8] = 0;
  v0[9] = 0xE000000000000000;
  v0[10] = 0;
  v0[11] = 0xE000000000000000;
  v0[12] = 0;
  v0[13] = 0xE000000000000000;
  v0[14] = 0;
  v0[15] = 0xE000000000000000;
  v0[16] = 0;
  v0[17] = 0xE000000000000000;
  uint64_t v1 = MEMORY[0x263F8EE78];
  v0[18] = MEMORY[0x263F8EE78];
  v0[19] = 0;
  v0[20] = 0xE000000000000000;
  v0[21] = 0;
  v0[22] = 0xE000000000000000;
  v0[23] = 0;
  v0[24] = 0xE000000000000000;
  v0[25] = 0;
  v0[26] = 0xE000000000000000;
  v0[27] = 0;
  uint64_t v2 = (uint64_t)v0
     + OBJC_IVAR____TtCV21DocumentUnderstanding53DocumentUnderstanding_DocumentRepresentation_DocumentP33_B25D73F1E23932B4C52C7495EED50DAA13_StorageClass__documentHtmldata;
  v0[28] = 0;
  v0[29] = v1;
  uint64_t v3 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentHTMLData();
  sub_2367B7028(v2, 1, 1, v3);
  uint64_t v4 = (uint64_t)v0
     + OBJC_IVAR____TtCV21DocumentUnderstanding53DocumentUnderstanding_DocumentRepresentation_DocumentP33_B25D73F1E23932B4C52C7495EED50DAA13_StorageClass__documentMessageData;
  uint64_t v5 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentMessageData();
  sub_2367B7028(v4, 1, 1, v5);
  return v0;
}

void *sub_2368DF084(void *a1)
{
  uint64_t v3 = sub_2367B7DBC(&qword_26AD89960);
  MEMORY[0x270FA5388](v3 - 8);
  sub_2367BB260();
  uint64_t v44 = v4;
  uint64_t v5 = sub_2367B7DBC(&qword_26AD89A08);
  MEMORY[0x270FA5388](v5 - 8);
  sub_2367BB260();
  uint64_t v43 = v6;
  v1[2] = 0;
  v1[3] = 0xE000000000000000;
  v1[4] = 0;
  v1[5] = 0xE000000000000000;
  v1[6] = 0;
  v1[7] = 0xE000000000000000;
  v1[8] = 0;
  v1[9] = 0xE000000000000000;
  v1[10] = 0;
  v1[11] = 0xE000000000000000;
  v1[12] = 0;
  v1[13] = 0xE000000000000000;
  v1[14] = 0;
  v1[15] = 0xE000000000000000;
  v1[16] = 0;
  v1[17] = 0xE000000000000000;
  uint64_t v7 = MEMORY[0x263F8EE78];
  v1[18] = MEMORY[0x263F8EE78];
  v1[19] = 0;
  v1[20] = 0xE000000000000000;
  v1[21] = 0;
  v1[23] = 0;
  v1[22] = 0xE000000000000000;
  v1[24] = 0xE000000000000000;
  v1[25] = 0;
  v1[26] = 0xE000000000000000;
  v1[28] = 0;
  v1[29] = v7;
  uint64_t v41 = (uint64_t)v1
      + OBJC_IVAR____TtCV21DocumentUnderstanding53DocumentUnderstanding_DocumentRepresentation_DocumentP33_B25D73F1E23932B4C52C7495EED50DAA13_StorageClass__documentHtmldata;
  v1[27] = 0;
  uint64_t v8 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentHTMLData();
  sub_2368D1924(v8);
  uint64_t v42 = (uint64_t)v1
      + OBJC_IVAR____TtCV21DocumentUnderstanding53DocumentUnderstanding_DocumentRepresentation_DocumentP33_B25D73F1E23932B4C52C7495EED50DAA13_StorageClass__documentMessageData;
  uint64_t v9 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentMessageData();
  sub_2368D1924(v9);
  sub_2367BB188();
  uint64_t v11 = a1[2];
  uint64_t v10 = a1[3];
  sub_2367BB248();
  v1[2] = v11;
  v1[3] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v13 = a1[4];
  uint64_t v12 = a1[5];
  sub_2367BB248();
  v1[4] = v13;
  v1[5] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v15 = a1[6];
  uint64_t v14 = a1[7];
  sub_2367BB248();
  v1[6] = v15;
  v1[7] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v17 = a1[8];
  uint64_t v16 = a1[9];
  sub_2367BB248();
  v1[8] = v17;
  v1[9] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v19 = a1[10];
  uint64_t v18 = a1[11];
  sub_2367BB248();
  v1[10] = v19;
  v1[11] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v21 = a1[12];
  uint64_t v20 = a1[13];
  sub_2367BB248();
  v1[12] = v21;
  v1[13] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v23 = a1[14];
  uint64_t v22 = a1[15];
  sub_2367BB248();
  v1[14] = v23;
  v1[15] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v25 = a1[16];
  uint64_t v24 = a1[17];
  sub_2367BB248();
  v1[16] = v25;
  v1[17] = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v26 = a1[18];
  sub_2367BB248();
  v1[18] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v28 = a1[19];
  uint64_t v27 = a1[20];
  sub_2367BB248();
  v1[19] = v28;
  v1[20] = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v30 = a1[21];
  uint64_t v29 = a1[22];
  sub_2367BB248();
  v1[21] = v30;
  v1[22] = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v32 = a1[23];
  uint64_t v31 = a1[24];
  sub_2367BB248();
  v1[23] = v32;
  v1[24] = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v34 = a1[25];
  uint64_t v33 = a1[26];
  sub_2367BB248();
  v1[25] = v34;
  v1[26] = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v35 = a1[27];
  sub_2367BB248();
  v1[27] = v35;
  sub_2367BB188();
  uint64_t v36 = a1[28];
  sub_2367BB248();
  v1[28] = v36;
  sub_2367BB188();
  uint64_t v37 = a1[29];
  sub_2367BB248();
  v1[29] = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = (uint64_t)a1
      + OBJC_IVAR____TtCV21DocumentUnderstanding53DocumentUnderstanding_DocumentRepresentation_DocumentP33_B25D73F1E23932B4C52C7495EED50DAA13_StorageClass__documentHtmldata;
  sub_2367BB188();
  sub_2367BA938(v38, v43, &qword_26AD89A08);
  swift_beginAccess();
  sub_2367BAB2C(v43, v41, &qword_26AD89A08);
  swift_endAccess();
  uint64_t v39 = (uint64_t)a1
      + OBJC_IVAR____TtCV21DocumentUnderstanding53DocumentUnderstanding_DocumentRepresentation_DocumentP33_B25D73F1E23932B4C52C7495EED50DAA13_StorageClass__documentMessageData;
  sub_2367BB188();
  sub_2367BA938(v39, v44, &qword_26AD89960);
  swift_release();
  swift_beginAccess();
  sub_2367BAB2C(v44, v42, &qword_26AD89960);
  swift_endAccess();
  return v1;
}

uint64_t sub_2368DF6C4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2367BAA28(v0+ OBJC_IVAR____TtCV21DocumentUnderstanding53DocumentUnderstanding_DocumentRepresentation_DocumentP33_B25D73F1E23932B4C52C7495EED50DAA13_StorageClass__documentHtmldata, &qword_26AD89A08);
  sub_2367BAA28(v0+ OBJC_IVAR____TtCV21DocumentUnderstanding53DocumentUnderstanding_DocumentRepresentation_DocumentP33_B25D73F1E23932B4C52C7495EED50DAA13_StorageClass__documentMessageData, &qword_26AD89960);
  return v0;
}

uint64_t sub_2368DF77C()
{
  uint64_t v0 = sub_2368DF6C4();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_2368DF7D0()
{
  return type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document._StorageClass(0);
}

uint64_t type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document._StorageClass(uint64_t a1)
{
  return sub_2367B965C(a1, (uint64_t *)&unk_26AD89590);
}

void sub_2368DF7F8()
{
  sub_2368DF938(319, &qword_26AD89A10, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentHTMLData);
  if (v0 <= 0x3F)
  {
    sub_2368DF938(319, qword_26AD89968, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentMessageData);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_2368DF938(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_23697B4EC();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2368DF98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2368DF9A0);
}

uint64_t sub_2368DF9A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23697A71C();
  sub_2367BB1A0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_2367B85F8(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_2368DFA2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2368DFA40);
}

void sub_2368DFA40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_23697A71C();
  sub_2367BB1A0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    sub_2367B7028(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document(uint64_t a1)
{
  return sub_2367B965C(a1, qword_26AD89880);
}

uint64_t sub_2368DFAE8()
{
  return swift_release();
}

uint64_t sub_2368DFB68()
{
  while (1)
  {
    uint64_t result = sub_23697A77C();
    if (v0 || (v2 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        sub_2367FC7A0();
        break;
      case 2:
        sub_2367FC820();
        break;
      case 3:
        sub_2367FC8A0();
        break;
      case 4:
        sub_2368DFE24();
        break;
      case 5:
        sub_2368DFEA4();
        break;
      case 6:
        sub_2368DFF24();
        break;
      case 7:
        sub_2368DFFA4();
        break;
      case 8:
        sub_2368E0024();
        break;
      case 9:
        sub_2368E00A4();
        break;
      case 10:
        sub_2368E0124();
        break;
      case 11:
        sub_2368E01A4();
        break;
      case 12:
        sub_2368E0224();
        break;
      case 13:
        sub_2368E02A4();
        break;
      case 14:
        sub_2368E0324();
        break;
      case 15:
        sub_2368E03A4();
        break;
      case 16:
        sub_2368E0424();
        break;
      case 17:
        sub_2368E04EC();
        break;
      case 18:
        sub_2368E05BC();
        break;
      default:
        continue;
    }
  }
}

uint64_t sub_2368DFE24()
{
  return swift_endAccess();
}

uint64_t sub_2368DFEA4()
{
  return swift_endAccess();
}

uint64_t sub_2368DFF24()
{
  return swift_endAccess();
}

uint64_t sub_2368DFFA4()
{
  return swift_endAccess();
}

uint64_t sub_2368E0024()
{
  return swift_endAccess();
}

uint64_t sub_2368E00A4()
{
  return swift_endAccess();
}

uint64_t sub_2368E0124()
{
  return swift_endAccess();
}

uint64_t sub_2368E01A4()
{
  return swift_endAccess();
}

uint64_t sub_2368E0224()
{
  return swift_endAccess();
}

uint64_t sub_2368E02A4()
{
  return swift_endAccess();
}

uint64_t sub_2368E0324()
{
  return swift_endAccess();
}

uint64_t sub_2368E03A4()
{
  return swift_endAccess();
}

uint64_t sub_2368E0424()
{
  return swift_endAccess();
}

uint64_t sub_2368E04EC()
{
  return swift_endAccess();
}

uint64_t sub_2368E05BC()
{
  return swift_endAccess();
}

uint64_t sub_2368E068C()
{
  type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document(0);
  uint64_t v1 = swift_retain();
  sub_2368E0720(v1);
  uint64_t result = swift_release();
  if (!v0) {
    return sub_23697A6FC();
  }
  return result;
}

uint64_t sub_2368E0720(uint64_t a1)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0) {
    uint64_t v4 = *(void *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_23697A99C();
    if (v1) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFLL;
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_23697A99C();
    if (v1) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFLL;
  }
  if (v8)
  {
    swift_bridgeObjectRetain();
    sub_23697A99C();
    if (v1) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v9 = *(void *)(a1 + 72);
  uint64_t v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v10 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFLL;
  }
  if (v10)
  {
    swift_bridgeObjectRetain();
    sub_23697A99C();
    if (v1) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v11 = *(void *)(a1 + 88);
  uint64_t v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v12 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFLL;
  }
  if (v12)
  {
    swift_bridgeObjectRetain();
    sub_23697A99C();
    if (v1) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v13 = *(void *)(a1 + 104);
  uint64_t v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0) {
    uint64_t v14 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFLL;
  }
  if (v14)
  {
    swift_bridgeObjectRetain();
    sub_23697A99C();
    if (v1) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v15 = *(void *)(a1 + 120);
  uint64_t v16 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000) == 0) {
    uint64_t v16 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFLL;
  }
  if (v16)
  {
    swift_bridgeObjectRetain();
    sub_23697A99C();
    if (!v1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_36:
  swift_beginAccess();
  unint64_t v17 = *(void *)(a1 + 136);
  uint64_t v18 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0) {
    uint64_t v18 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFLL;
  }
  if (v18)
  {
    swift_bridgeObjectRetain();
    sub_23697A99C();
    if (v1) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(void *)(*(void *)(a1 + 144) + 16)
    || (swift_bridgeObjectRetain(), sub_23697A97C(), uint64_t result = swift_bridgeObjectRelease(), !v1))
  {
    swift_beginAccess();
    unint64_t v20 = *(void *)(a1 + 160);
    uint64_t v21 = HIBYTE(v20) & 0xF;
    if ((v20 & 0x2000000000000000) == 0) {
      uint64_t v21 = *(void *)(a1 + 152) & 0xFFFFFFFFFFFFLL;
    }
    if (!v21 || (swift_bridgeObjectRetain(), sub_23697A99C(), uint64_t result = swift_bridgeObjectRelease(), !v1))
    {
      swift_beginAccess();
      unint64_t v22 = *(void *)(a1 + 176);
      uint64_t v23 = HIBYTE(v22) & 0xF;
      if ((v22 & 0x2000000000000000) == 0) {
        uint64_t v23 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFLL;
      }
      if (!v23 || (swift_bridgeObjectRetain(), sub_23697A99C(), uint64_t result = swift_bridgeObjectRelease(), !v1))
      {
        swift_beginAccess();
        unint64_t v24 = *(void *)(a1 + 192);
        uint64_t v25 = HIBYTE(v24) & 0xF;
        if ((v24 & 0x2000000000000000) == 0) {
          uint64_t v25 = *(void *)(a1 + 184) & 0xFFFFFFFFFFFFLL;
        }
        if (!v25 || (swift_bridgeObjectRetain(), sub_23697A99C(), uint64_t result = swift_bridgeObjectRelease(), !v1))
        {
          swift_beginAccess();
          unint64_t v26 = *(void *)(a1 + 208);
          uint64_t v27 = HIBYTE(v26) & 0xF;
          if ((v26 & 0x2000000000000000) == 0) {
            uint64_t v27 = *(void *)(a1 + 200) & 0xFFFFFFFFFFFFLL;
          }
          if (!v27 || (swift_bridgeObjectRetain(), sub_23697A99C(), uint64_t result = swift_bridgeObjectRelease(), !v1))
          {
            swift_beginAccess();
            if (*(double *)(a1 + 216) == 0.0 || (uint64_t result = sub_23697A98C(), !v1))
            {
              swift_beginAccess();
              if (*(double *)(a1 + 224) == 0.0 || (uint64_t result = sub_23697A98C(), !v1))
              {
                swift_beginAccess();
                if (!*(void *)(*(void *)(a1 + 232) + 16)
                  || (type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentUIElement(),
                      sub_2368E21F8((unint64_t *)&unk_268899970, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentUIElement), swift_bridgeObjectRetain(), sub_23697A9AC(), uint64_t result = swift_bridgeObjectRelease(), !v1))
                {
                  uint64_t result = sub_2368E0DA0(a1);
                  if (!v1) {
                    return sub_2368E0F78(a1);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_2368E0DA0(uint64_t a1)
{
  uint64_t v2 = sub_2367B7DBC(&qword_26AD89A08);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentHTMLData();
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1
     + OBJC_IVAR____TtCV21DocumentUnderstanding53DocumentUnderstanding_DocumentRepresentation_DocumentP33_B25D73F1E23932B4C52C7495EED50DAA13_StorageClass__documentHtmldata;
  swift_beginAccess();
  sub_2367BA938(v8, (uint64_t)v4, &qword_26AD89A08);
  if (sub_2367B85F8((uint64_t)v4, 1, v5) == 1) {
    return sub_2367BAA28((uint64_t)v4, &qword_26AD89A08);
  }
  sub_2368E2328((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentHTMLData);
  sub_2368E21F8(&qword_2688992B0, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentHTMLData);
  sub_23697A9BC();
  return sub_2368E22D0((uint64_t)v7, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentHTMLData);
}

uint64_t sub_2368E0F78(uint64_t a1)
{
  uint64_t v2 = sub_2367B7DBC(&qword_26AD89960);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentMessageData();
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1
     + OBJC_IVAR____TtCV21DocumentUnderstanding53DocumentUnderstanding_DocumentRepresentation_DocumentP33_B25D73F1E23932B4C52C7495EED50DAA13_StorageClass__documentMessageData;
  swift_beginAccess();
  sub_2367BA938(v8, (uint64_t)v4, &qword_26AD89960);
  if (sub_2367B85F8((uint64_t)v4, 1, v5) == 1) {
    return sub_2367BAA28((uint64_t)v4, &qword_26AD89960);
  }
  sub_2368E2328((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentMessageData);
  sub_2368E21F8(&qword_268898D50, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentMessageData);
  sub_23697A9BC();
  return sub_2368E22D0((uint64_t)v7, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentMessageData);
}

uint64_t sub_2368E1150(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23697A71C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document(0) + 20);
  uint64_t v12 = *(void *)(a1 + v11);
  uint64_t v13 = *(void *)(a2 + v11);
  if (v12 == v13
    || (swift_retain(), swift_retain(), BOOL v14 = sub_2368E133C(v12, v13), swift_release(), swift_release(), v14))
  {
    unint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v15(v10, a1, v4);
    v15(v8, a2, v4);
    sub_2368E21F8(&qword_268898158, MEMORY[0x263F50560]);
    char v16 = sub_23697AF0C();
    unint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v8, v4);
    v17(v10, v4);
  }
  else
  {
    char v16 = 0;
  }
  return v16 & 1;
}

BOOL sub_2368E133C(uint64_t a1, uint64_t a2)
{
  uint64_t v93 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentMessageData();
  MEMORY[0x270FA5388](v93);
  uint64_t v90 = &v88[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v92 = sub_2367B7DBC(&qword_26889A080);
  MEMORY[0x270FA5388](v92);
  uint64_t v94 = &v88[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_2367B7DBC(&qword_26AD89960);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v91 = &v88[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v95 = &v88[-v9];
  uint64_t v10 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentHTMLData();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = &v88[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_2367B7DBC(&qword_26889A088);
  MEMORY[0x270FA5388](v13);
  uint64_t v96 = &v88[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_2367B7DBC(&qword_26AD89A08);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = &v88[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v16);
  unint64_t v20 = &v88[-v19];
  swift_beginAccess();
  uint64_t v21 = *(void *)(a1 + 16);
  uint64_t v22 = *(void *)(a1 + 24);
  swift_beginAccess();
  BOOL v23 = v21 == *(void *)(a2 + 16) && v22 == *(void *)(a2 + 24);
  if (v23 || (v24 = sub_23697B95C(), BOOL result = 0, (v24 & 1) != 0))
  {
    swift_beginAccess();
    uint64_t v26 = *(void *)(a1 + 32);
    uint64_t v27 = *(void *)(a1 + 40);
    swift_beginAccess();
    BOOL v28 = v26 == *(void *)(a2 + 32) && v27 == *(void *)(a2 + 40);
    if (v28 || (v29 = sub_23697B95C(), BOOL result = 0, (v29 & 1) != 0))
    {
      swift_beginAccess();
      uint64_t v30 = *(void *)(a1 + 48);
      uint64_t v31 = *(void *)(a1 + 56);
      swift_beginAccess();
      BOOL v32 = v30 == *(void *)(a2 + 48) && v31 == *(void *)(a2 + 56);
      if (v32 || (v33 = sub_23697B95C(), BOOL result = 0, (v33 & 1) != 0))
      {
        swift_beginAccess();
        uint64_t v34 = *(void *)(a1 + 64);
        uint64_t v35 = *(void *)(a1 + 72);
        swift_beginAccess();
        BOOL v36 = v34 == *(void *)(a2 + 64) && v35 == *(void *)(a2 + 72);
        if (v36 || (v37 = sub_23697B95C(), BOOL result = 0, (v37 & 1) != 0))
        {
          swift_beginAccess();
          uint64_t v38 = *(void *)(a1 + 80);
          uint64_t v39 = *(void *)(a1 + 88);
          swift_beginAccess();
          BOOL v40 = v38 == *(void *)(a2 + 80) && v39 == *(void *)(a2 + 88);
          if (v40 || (v41 = sub_23697B95C(), BOOL result = 0, (v41 & 1) != 0))
          {
            swift_beginAccess();
            uint64_t v42 = *(void *)(a1 + 96);
            uint64_t v43 = *(void *)(a1 + 104);
            swift_beginAccess();
            BOOL v44 = v42 == *(void *)(a2 + 96) && v43 == *(void *)(a2 + 104);
            if (v44 || (v45 = sub_23697B95C(), BOOL result = 0, (v45 & 1) != 0))
            {
              swift_beginAccess();
              uint64_t v46 = *(void *)(a1 + 112);
              uint64_t v47 = *(void *)(a1 + 120);
              swift_beginAccess();
              BOOL v48 = v46 == *(void *)(a2 + 112) && v47 == *(void *)(a2 + 120);
              if (v48 || (v49 = sub_23697B95C(), BOOL result = 0, (v49 & 1) != 0))
              {
                swift_beginAccess();
                uint64_t v50 = *(void *)(a1 + 128);
                uint64_t v51 = *(void *)(a1 + 136);
                swift_beginAccess();
                BOOL v52 = v50 == *(void *)(a2 + 128) && v51 == *(void *)(a2 + 136);
                if (v52 || (v53 = sub_23697B95C(), BOOL result = 0, (v53 & 1) != 0))
                {
                  swift_beginAccess();
                  uint64_t v54 = *(void **)(a1 + 144);
                  swift_beginAccess();
                  if ((sub_2368125B0(v54, *(void **)(a2 + 144)) & 1) == 0) {
                    return 0;
                  }
                  swift_beginAccess();
                  uint64_t v55 = *(void *)(a1 + 152);
                  uint64_t v56 = *(void *)(a1 + 160);
                  swift_beginAccess();
                  BOOL v57 = v55 == *(void *)(a2 + 152) && v56 == *(void *)(a2 + 160);
                  if (v57 || (v58 = sub_23697B95C(), BOOL result = 0, (v58 & 1) != 0))
                  {
                    swift_beginAccess();
                    uint64_t v59 = *(void *)(a1 + 168);
                    uint64_t v60 = *(void *)(a1 + 176);
                    swift_beginAccess();
                    BOOL v61 = v59 == *(void *)(a2 + 168) && v60 == *(void *)(a2 + 176);
                    if (v61 || (v62 = sub_23697B95C(), BOOL result = 0, (v62 & 1) != 0))
                    {
                      swift_beginAccess();
                      uint64_t v63 = *(void *)(a1 + 184);
                      uint64_t v64 = *(void *)(a1 + 192);
                      swift_beginAccess();
                      BOOL v65 = v63 == *(void *)(a2 + 184) && v64 == *(void *)(a2 + 192);
                      if (v65 || (v66 = sub_23697B95C(), BOOL result = 0, (v66 & 1) != 0))
                      {
                        swift_beginAccess();
                        uint64_t v67 = *(void *)(a1 + 200);
                        uint64_t v68 = *(void *)(a1 + 208);
                        swift_beginAccess();
                        BOOL v69 = v67 == *(void *)(a2 + 200) && v68 == *(void *)(a2 + 208);
                        if (v69 || (v70 = sub_23697B95C(), BOOL result = 0, (v70 & 1) != 0))
                        {
                          swift_beginAccess();
                          double v71 = *(double *)(a1 + 216);
                          swift_beginAccess();
                          if (v71 != *(double *)(a2 + 216)) {
                            return 0;
                          }
                          swift_beginAccess();
                          double v72 = *(double *)(a1 + 224);
                          swift_beginAccess();
                          if (v72 != *(double *)(a2 + 224)) {
                            return 0;
                          }
                          swift_beginAccess();
                          swift_beginAccess();
                          swift_retain();
                          swift_retain();
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          sub_236813160();
                          int v89 = v73;
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          if ((v89 & 1) == 0) {
                            goto LABEL_71;
                          }
                          uint64_t v74 = a1
                              + OBJC_IVAR____TtCV21DocumentUnderstanding53DocumentUnderstanding_DocumentRepresentation_DocumentP33_B25D73F1E23932B4C52C7495EED50DAA13_StorageClass__documentHtmldata;
                          swift_beginAccess();
                          sub_2367BA938(v74, (uint64_t)v20, &qword_26AD89A08);
                          uint64_t v75 = a2
                              + OBJC_IVAR____TtCV21DocumentUnderstanding53DocumentUnderstanding_DocumentRepresentation_DocumentP33_B25D73F1E23932B4C52C7495EED50DAA13_StorageClass__documentHtmldata;
                          swift_beginAccess();
                          unint64_t v76 = v96;
                          uint64_t v77 = (uint64_t)&v96[*(int *)(v13 + 48)];
                          sub_2367BA938((uint64_t)v20, (uint64_t)v96, &qword_26AD89A08);
                          sub_2367BA938(v75, v77, &qword_26AD89A08);
                          if (sub_2367B85F8((uint64_t)v76, 1, v10) == 1)
                          {
                            sub_2367BAA28((uint64_t)v20, &qword_26AD89A08);
                            if (sub_2367B85F8(v77, 1, v10) == 1)
                            {
                              sub_2367BAA28((uint64_t)v76, &qword_26AD89A08);
LABEL_75:
                              uint64_t v79 = a1
                                  + OBJC_IVAR____TtCV21DocumentUnderstanding53DocumentUnderstanding_DocumentRepresentation_DocumentP33_B25D73F1E23932B4C52C7495EED50DAA13_StorageClass__documentMessageData;
                              swift_beginAccess();
                              char v80 = v95;
                              sub_2367BA938(v79, (uint64_t)v95, &qword_26AD89960);
                              uint64_t v81 = a2
                                  + OBJC_IVAR____TtCV21DocumentUnderstanding53DocumentUnderstanding_DocumentRepresentation_DocumentP33_B25D73F1E23932B4C52C7495EED50DAA13_StorageClass__documentMessageData;
                              swift_beginAccess();
                              char v82 = v94;
                              uint64_t v83 = (uint64_t)&v94[*(int *)(v92 + 48)];
                              sub_2367BA938((uint64_t)v80, (uint64_t)v94, &qword_26AD89960);
                              sub_2367BA938(v81, v83, &qword_26AD89960);
                              uint64_t v84 = v93;
                              if (sub_2367B85F8((uint64_t)v82, 1, v93) == 1)
                              {
                                swift_release();
                                swift_release();
                                sub_2367BAA28((uint64_t)v80, &qword_26AD89960);
                                if (sub_2367B85F8(v83, 1, v84) == 1)
                                {
                                  sub_2367BAA28((uint64_t)v82, &qword_26AD89960);
                                  return 1;
                                }
                              }
                              else
                              {
                                uint64_t v85 = v91;
                                sub_2367BA938((uint64_t)v82, (uint64_t)v91, &qword_26AD89960);
                                if (sub_2367B85F8(v83, 1, v84) != 1)
                                {
                                  uint64_t v86 = v90;
                                  sub_2368E2328(v83, (uint64_t)v90, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentMessageData);
                                  char v87 = sub_23682CD94((uint64_t)v85, (uint64_t)v86);
                                  swift_release();
                                  swift_release();
                                  sub_2368E22D0((uint64_t)v86, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentMessageData);
                                  sub_2367BAA28((uint64_t)v95, &qword_26AD89960);
                                  sub_2368E22D0((uint64_t)v85, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentMessageData);
                                  sub_2367BAA28((uint64_t)v82, &qword_26AD89960);
                                  return (v87 & 1) != 0;
                                }
                                swift_release();
                                swift_release();
                                sub_2367BAA28((uint64_t)v95, &qword_26AD89960);
                                sub_2368E22D0((uint64_t)v85, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentMessageData);
                              }
                              sub_2367BAA28((uint64_t)v82, &qword_26889A080);
                              return 0;
                            }
                          }
                          else
                          {
                            sub_2367BA938((uint64_t)v76, (uint64_t)v18, &qword_26AD89A08);
                            if (sub_2367B85F8(v77, 1, v10) != 1)
                            {
                              sub_2368E2328(v77, (uint64_t)v12, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentHTMLData);
                              char v78 = sub_2368536AC(v18, v12);
                              sub_2368E22D0((uint64_t)v12, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentHTMLData);
                              sub_2367BAA28((uint64_t)v20, &qword_26AD89A08);
                              sub_2368E22D0((uint64_t)v18, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentHTMLData);
                              sub_2367BAA28((uint64_t)v76, &qword_26AD89A08);
                              if (v78) {
                                goto LABEL_75;
                              }
LABEL_71:
                              swift_release();
                              swift_release();
                              return 0;
                            }
                            sub_2367BAA28((uint64_t)v20, &qword_26AD89A08);
                            sub_2368E22D0((uint64_t)v18, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentHTMLData);
                          }
                          sub_2367BAA28((uint64_t)v76, &qword_26889A088);
                          goto LABEL_71;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_2368E1EB4()
{
  return sub_23697BA4C();
}

unint64_t sub_2368E1F40()
{
  return 0xD000000000000037;
}

uint64_t sub_2368E1F5C()
{
  return sub_2368DFAE8();
}

uint64_t sub_2368E1F74()
{
  return sub_2368E068C();
}

uint64_t sub_2368E1F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2368E21F8(&qword_26889A090, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2368E2008@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_2368DEF2C();
  uint64_t v3 = sub_23697A9EC();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v2, v3);
}

uint64_t sub_2368E2078(uint64_t a1)
{
  uint64_t v2 = sub_2368E21F8((unint64_t *)&qword_268899BC8, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2368E20E8()
{
  sub_2368E21F8((unint64_t *)&qword_268899BC8, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document);
  return sub_23697A8DC();
}

uint64_t sub_2368E2168()
{
  return sub_2368E21F8(&qword_26889A068, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document);
}

uint64_t sub_2368E21B0()
{
  return sub_2368E21F8((unint64_t *)&qword_268899BC8, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document);
}

uint64_t sub_2368E21F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2368E2240()
{
  return sub_2368E21F8(&qword_26889A070, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document);
}

uint64_t sub_2368E2288()
{
  return sub_2368E21F8(&qword_26889A078, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document);
}

uint64_t sub_2368E22D0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_2367BB1EC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_2368E2328(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_2367BB1EC();
  uint64_t v4 = sub_2367BB4F4();
  v5(v4);
  return a2;
}

uint64_t sub_2368E2380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2368E2394);
}

uint64_t sub_2368E2394(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_23697A71C();
    sub_2367BB1A0();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v10 = sub_2367B7DBC(&qword_268898130);
      uint64_t v11 = *(int *)(a3 + 24);
    }
    return sub_2367B85F8((uint64_t)a1 + v11, a2, v10);
  }
}

uint64_t sub_2368E2444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2368E2458);
}

void *sub_2368E2458(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_23697A71C();
    sub_2367BB1A0();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = sub_2367B7DBC(&qword_268898130);
      uint64_t v11 = *(int *)(a4 + 24);
    }
    return (void *)sub_2367B7028((uint64_t)v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for DocumentUnderstanding_ClientInterface_UserInterfaceUnderstandingResponse()
{
  uint64_t result = qword_26889A098;
  if (!qword_26889A098) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2368E254C@<X0>(void *a1@<X8>)
{
  *a1 = MEMORY[0x263F8EE78];
  uint64_t v2 = type metadata accessor for DocumentUnderstanding_ClientInterface_UserInterfaceUnderstandingResponse();
  sub_23697A70C();
  uint64_t v3 = (uint64_t)a1 + *(int *)(v2 + 24);
  uint64_t v4 = type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo();
  return sub_2367B7028(v3, 1, 1, v4);
}

uint64_t sub_2368E25C0()
{
  uint64_t v0 = sub_23697A9EC();
  sub_2367BA9C4(v0, qword_26889AC40);
  sub_2367BA98C(v0, (uint64_t)qword_26889AC40);
  sub_2367B7DBC(&qword_268898148);
  uint64_t v1 = (int *)(sub_2367B7DBC(&qword_268898150) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_236985C70;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "foundEntities";
  *(void *)(v6 + 8) = 13;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_23697A9CC();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "responseDebugInfo";
  *((void *)v10 + 1) = 17;
  v10[16] = 2;
  v9();
  return sub_23697A9DC();
}

uint64_t sub_2368E2778()
{
  if (qword_268897F48 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_23697A9EC();
  return sub_2367BA98C(v0, (uint64_t)qword_26889AC40);
}

uint64_t sub_2368E27DC()
{
  while (1)
  {
    uint64_t result = sub_23697A77C();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      sub_2367BB1D8();
      sub_2368E28FC();
    }
    else if (result == 1)
    {
      sub_2367BB1D8();
      sub_2368E285C();
    }
  }
  return result;
}

uint64_t sub_2368E285C()
{
  return sub_23697A88C();
}

uint64_t sub_2368E28FC()
{
  return sub_23697A89C();
}

uint64_t sub_2368E29AC()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for DocumentUnderstanding_ClientInterface_UserInterfaceUnderstandingResult(),
        sub_2368E3488(&qword_268898568, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_UserInterfaceUnderstandingResult), uint64_t result = sub_23697A9AC(), !v1))
  {
    uint64_t result = sub_2368E2AB8(v0);
    if (!v1)
    {
      type metadata accessor for DocumentUnderstanding_ClientInterface_UserInterfaceUnderstandingResponse();
      return sub_23697A6FC();
    }
  }
  return result;
}

uint64_t sub_2368E2AB8(uint64_t a1)
{
  uint64_t v2 = sub_2367B7DBC(&qword_268898130);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DocumentUnderstanding_ClientInterface_UserInterfaceUnderstandingResponse();
  sub_236816B6C(a1 + *(int *)(v8 + 24), (uint64_t)v4);
  if (sub_2367B85F8((uint64_t)v4, 1, v5) == 1) {
    return sub_2367BAA28((uint64_t)v4, &qword_268898130);
  }
  sub_236821A28((uint64_t)v4, (uint64_t)v7);
  sub_2368E3488(&qword_268898138, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo);
  sub_23697A9BC();
  return sub_23682025C((uint64_t)v7);
}

uint64_t sub_2368E2C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = sub_23697A71C();
  uint64_t v46 = *(void *)(v43 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v43);
  char v45 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  BOOL v44 = (char *)&v40 - v6;
  uint64_t v47 = type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo();
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2367B7DBC(&qword_268898160);
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_2367B7DBC(&qword_268898130);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  unint64_t v20 = (char *)&v40 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v40 - v21;
  uint64_t v23 = a1;
  sub_236812174();
  if ((v24 & 1) == 0) {
    goto LABEL_10;
  }
  char v41 = v9;
  uint64_t v42 = v17;
  uint64_t v25 = type metadata accessor for DocumentUnderstanding_ClientInterface_UserInterfaceUnderstandingResponse();
  sub_236816B6C(v23 + *(int *)(v25 + 24), (uint64_t)v22);
  sub_236816B6C(a2 + *(int *)(v25 + 24), (uint64_t)v20);
  uint64_t v26 = (uint64_t)&v13[*(int *)(v10 + 48)];
  sub_236816B6C((uint64_t)v22, (uint64_t)v13);
  sub_236816B6C((uint64_t)v20, v26);
  uint64_t v27 = v47;
  if (sub_2367B85F8((uint64_t)v13, 1, v47) != 1)
  {
    uint64_t v28 = (uint64_t)v42;
    sub_236816B6C((uint64_t)v13, (uint64_t)v42);
    if (sub_2367B85F8(v26, 1, v27) != 1)
    {
      uint64_t v29 = (uint64_t)v41;
      sub_236821A28(v26, (uint64_t)v41);
      char v30 = sub_23684BAFC(v28, v29);
      sub_23682025C(v29);
      sub_2367BAA28((uint64_t)v20, &qword_268898130);
      sub_2367BAA28((uint64_t)v22, &qword_268898130);
      sub_23682025C(v28);
      sub_2367BAA28((uint64_t)v13, &qword_268898130);
      if (v30) {
        goto LABEL_9;
      }
LABEL_10:
      char v37 = 0;
      return v37 & 1;
    }
    sub_2367BAA28((uint64_t)v20, &qword_268898130);
    sub_2367BAA28((uint64_t)v22, &qword_268898130);
    sub_23682025C(v28);
LABEL_7:
    sub_2367BAA28((uint64_t)v13, &qword_268898160);
    goto LABEL_10;
  }
  sub_2367BAA28((uint64_t)v20, &qword_268898130);
  sub_2367BAA28((uint64_t)v22, &qword_268898130);
  if (sub_2367B85F8(v26, 1, v27) != 1) {
    goto LABEL_7;
  }
  sub_2367BAA28((uint64_t)v13, &qword_268898130);
LABEL_9:
  uint64_t v31 = v46;
  BOOL v32 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
  uint64_t v33 = v43;
  uint64_t v34 = v44;
  v32(v44, v23 + *(int *)(v25 + 20), v43);
  uint64_t v35 = a2 + *(int *)(v25 + 20);
  BOOL v36 = v45;
  v32(v45, v35, v33);
  sub_2368E3488(&qword_268898158, MEMORY[0x263F50560]);
  char v37 = sub_23697AF0C();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v31 + 8);
  v38(v36, v33);
  v38(v34, v33);
  return v37 & 1;
}

uint64_t sub_2368E30B4()
{
  return sub_23697BA4C();
}

unint64_t sub_2368E3140()
{
  return 0xD00000000000004ALL;
}

uint64_t sub_2368E315C()
{
  return sub_2368E27DC();
}

uint64_t sub_2368E3174()
{
  return sub_2368E29AC();
}

uint64_t sub_2368E318C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2368E3488(&qword_26889A0C0, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_UserInterfaceUnderstandingResponse);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2368E3208@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_2368E2778();
  uint64_t v3 = sub_23697A9EC();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v2, v3);
}

uint64_t sub_2368E3278(uint64_t a1)
{
  uint64_t v2 = sub_2368E3488(&qword_2688983A8, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_UserInterfaceUnderstandingResponse);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2368E32E8()
{
  sub_2368E3488(&qword_2688983A8, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_UserInterfaceUnderstandingResponse);
  return sub_23697A8DC();
}

uint64_t sub_2368E3368()
{
  return sub_2368E3488(&qword_26889A0A8, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_UserInterfaceUnderstandingResponse);
}

uint64_t sub_2368E33B0()
{
  return sub_2368E3488(&qword_2688983A8, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_UserInterfaceUnderstandingResponse);
}

uint64_t sub_2368E33F8()
{
  return sub_2368E3488(&qword_26889A0B0, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_UserInterfaceUnderstandingResponse);
}

uint64_t sub_2368E3440()
{
  return sub_2368E3488(&qword_26889A0B8, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_UserInterfaceUnderstandingResponse);
}

uint64_t sub_2368E3488(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2368E34D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2368E34E4);
}

uint64_t sub_2368E34E4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_23697A71C();
    sub_2367BB1A0();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v10 = sub_2367B7DBC(&qword_268898130);
      uint64_t v11 = *(int *)(a3 + 24);
    }
    return sub_2367B85F8((uint64_t)a1 + v11, a2, v10);
  }
}

uint64_t sub_2368E3594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2368E35A8);
}

void *sub_2368E35A8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_23697A71C();
    sub_2367BB1A0();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = sub_2367B7DBC(&qword_268898130);
      uint64_t v11 = *(int *)(a4 + 24);
    }
    return (void *)sub_2367B7028((uint64_t)v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for DocumentUnderstanding_ClientInterface_CategoryClassificationResponse()
{
  uint64_t result = qword_26889A0C8;
  if (!qword_26889A0C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2368E369C@<X0>(void *a1@<X8>)
{
  *a1 = MEMORY[0x263F8EE78];
  uint64_t v2 = type metadata accessor for DocumentUnderstanding_ClientInterface_CategoryClassificationResponse();
  sub_23697A70C();
  uint64_t v3 = (uint64_t)a1 + *(int *)(v2 + 24);
  uint64_t v4 = type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo();
  return sub_2367B7028(v3, 1, 1, v4);
}

uint64_t sub_2368E3710()
{
  uint64_t v0 = sub_23697A9EC();
  sub_2367BA9C4(v0, qword_26889AC58);
  sub_2367BA98C(v0, (uint64_t)qword_26889AC58);
  sub_2367B7DBC(&qword_268898148);
  uint64_t v1 = (int *)(sub_2367B7DBC(&qword_268898150) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_236985C70;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "categories";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_23697A9CC();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "responseDebugInfo";
  *((void *)v10 + 1) = 17;
  v10[16] = 2;
  v9();
  return sub_23697A9DC();
}

uint64_t sub_2368E38C8()
{
  if (qword_268897F50 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_23697A9EC();
  return sub_2367BA98C(v0, (uint64_t)qword_26889AC58);
}

uint64_t sub_2368E392C()
{
  while (1)
  {
    uint64_t result = sub_23697A77C();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      sub_2367BB1D8();
      sub_2368E3A4C();
    }
    else if (result == 1)
    {
      sub_2367BB1D8();
      sub_2368E39AC();
    }
  }
  return result;
}

uint64_t sub_2368E39AC()
{
  return sub_23697A88C();
}

uint64_t sub_2368E3A4C()
{
  return sub_23697A89C();
}

uint64_t sub_2368E3AFC()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for DocumentUnderstanding_ClientInterface_CategoryResult(),
        sub_2368E45D8(&qword_268898518, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_CategoryResult), uint64_t result = sub_23697A9AC(), !v1))
  {
    uint64_t result = sub_2368E3C08(v0);
    if (!v1)
    {
      type metadata accessor for DocumentUnderstanding_ClientInterface_CategoryClassificationResponse();
      return sub_23697A6FC();
    }
  }
  return result;
}

uint64_t sub_2368E3C08(uint64_t a1)
{
  uint64_t v2 = sub_2367B7DBC(&qword_268898130);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DocumentUnderstanding_ClientInterface_CategoryClassificationResponse();
  sub_236816B6C(a1 + *(int *)(v8 + 24), (uint64_t)v4);
  if (sub_2367B85F8((uint64_t)v4, 1, v5) == 1) {
    return sub_2367BAA28((uint64_t)v4, &qword_268898130);
  }
  sub_236821A28((uint64_t)v4, (uint64_t)v7);
  sub_2368E45D8(&qword_268898138, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo);
  sub_23697A9BC();
  return sub_23682025C((uint64_t)v7);
}

uint64_t sub_2368E3D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = sub_23697A71C();
  uint64_t v46 = *(void *)(v43 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v43);
  char v45 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  BOOL v44 = (char *)&v40 - v6;
  uint64_t v47 = type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo();
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2367B7DBC(&qword_268898160);
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_2367B7DBC(&qword_268898130);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  unint64_t v20 = (char *)&v40 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v40 - v21;
  uint64_t v23 = a1;
  sub_236812680();
  if ((v24 & 1) == 0) {
    goto LABEL_10;
  }
  char v41 = v9;
  uint64_t v42 = v17;
  uint64_t v25 = type metadata accessor for DocumentUnderstanding_ClientInterface_CategoryClassificationResponse();
  sub_236816B6C(v23 + *(int *)(v25 + 24), (uint64_t)v22);
  sub_236816B6C(a2 + *(int *)(v25 + 24), (uint64_t)v20);
  uint64_t v26 = (uint64_t)&v13[*(int *)(v10 + 48)];
  sub_236816B6C((uint64_t)v22, (uint64_t)v13);
  sub_236816B6C((uint64_t)v20, v26);
  uint64_t v27 = v47;
  if (sub_2367B85F8((uint64_t)v13, 1, v47) != 1)
  {
    uint64_t v28 = (uint64_t)v42;
    sub_236816B6C((uint64_t)v13, (uint64_t)v42);
    if (sub_2367B85F8(v26, 1, v27) != 1)
    {
      uint64_t v29 = (uint64_t)v41;
      sub_236821A28(v26, (uint64_t)v41);
      char v30 = sub_23684BAFC(v28, v29);
      sub_23682025C(v29);
      sub_2367BAA28((uint64_t)v20, &qword_268898130);
      sub_2367BAA28((uint64_t)v22, &qword_268898130);
      sub_23682025C(v28);
      sub_2367BAA28((uint64_t)v13, &qword_268898130);
      if (v30) {
        goto LABEL_9;
      }
LABEL_10:
      char v37 = 0;
      return v37 & 1;
    }
    sub_2367BAA28((uint64_t)v20, &qword_268898130);
    sub_2367BAA28((uint64_t)v22, &qword_268898130);
    sub_23682025C(v28);
LABEL_7:
    sub_2367BAA28((uint64_t)v13, &qword_268898160);
    goto LABEL_10;
  }
  sub_2367BAA28((uint64_t)v20, &qword_268898130);
  sub_2367BAA28((uint64_t)v22, &qword_268898130);
  if (sub_2367B85F8(v26, 1, v27) != 1) {
    goto LABEL_7;
  }
  sub_2367BAA28((uint64_t)v13, &qword_268898130);
LABEL_9:
  uint64_t v31 = v46;
  BOOL v32 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
  uint64_t v33 = v43;
  uint64_t v34 = v44;
  v32(v44, v23 + *(int *)(v25 + 20), v43);
  uint64_t v35 = a2 + *(int *)(v25 + 20);
  BOOL v36 = v45;
  v32(v45, v35, v33);
  sub_2368E45D8(&qword_268898158, MEMORY[0x263F50560]);
  char v37 = sub_23697AF0C();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v31 + 8);
  v38(v36, v33);
  v38(v34, v33);
  return v37 & 1;
}

uint64_t sub_2368E4204()
{
  return sub_23697BA4C();
}

unint64_t sub_2368E4290()
{
  return 0xD000000000000046;
}

uint64_t sub_2368E42AC()
{
  return sub_2368E392C();
}

uint64_t sub_2368E42C4()
{
  return sub_2368E3AFC();
}

uint64_t sub_2368E42DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2368E45D8(&qword_26889A0F0, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_CategoryClassificationResponse);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2368E4358@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_2368E38C8();
  uint64_t v3 = sub_23697A9EC();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v2, v3);
}

uint64_t sub_2368E43C8(uint64_t a1)
{
  uint64_t v2 = sub_2368E45D8(&qword_268898398, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_CategoryClassificationResponse);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2368E4438()
{
  sub_2368E45D8(&qword_268898398, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_CategoryClassificationResponse);
  return sub_23697A8DC();
}

uint64_t sub_2368E44B8()
{
  return sub_2368E45D8(&qword_26889A0D8, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_CategoryClassificationResponse);
}

uint64_t sub_2368E4500()
{
  return sub_2368E45D8(&qword_268898398, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_CategoryClassificationResponse);
}

uint64_t sub_2368E4548()
{
  return sub_2368E45D8(&qword_26889A0E0, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_CategoryClassificationResponse);
}

uint64_t sub_2368E4590()
{
  return sub_2368E45D8(&qword_26889A0E8, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_CategoryClassificationResponse);
}

uint64_t sub_2368E45D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2368E4620(uint64_t a1)
{
  return sub_2368E4660(a1, qword_26AD8C290);
}

uint64_t sub_2368E4640(uint64_t a1)
{
  return sub_2368E4660(a1, qword_26AD8C2B8);
}

uint64_t sub_2368E4660(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_23697AD0C();
  sub_2367BA9C4(v3, a2);
  sub_2367BA98C(v3, (uint64_t)a2);
  return sub_23697ACEC();
}

id SQLiteRetrievalDatabase.database.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding23SQLiteRetrievalDatabase_database);
}

id SQLiteRetrievalDatabase.__allocating_init(dbURL:isFrozen:)(uint64_t a1, char a2)
{
  id v5 = objc_allocWithZone(v2);
  return SQLiteRetrievalDatabase.init(dbURL:isFrozen:)(a1, a2);
}

id SQLiteRetrievalDatabase.init(dbURL:isFrozen:)(uint64_t a1, char a2)
{
  id v5 = v2;
  sub_23697A12C();
  if (qword_268897E80 != -1) {
    swift_once();
  }
  id v6 = objc_allocWithZone((Class)type metadata accessor for SQLiteDatabase());
  swift_bridgeObjectRetain();
  SQLiteDatabase.init(dbPath:migrationsList:isFrozen:)();
  *(void *)&v5[OBJC_IVAR____TtC21DocumentUnderstanding23SQLiteRetrievalDatabase_database] = v7;
  v5[OBJC_IVAR____TtC21DocumentUnderstanding23SQLiteRetrievalDatabase_isFrozen] = a2 & 1;

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for SQLiteRetrievalDatabase();
  id v8 = objc_msgSendSuper2(&v11, sel_init);
  uint64_t v9 = sub_23697A1CC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  return v8;
}

uint64_t type metadata accessor for SQLiteRetrievalDatabase()
{
  return self;
}

Swift::Void __swiftcall SQLiteRetrievalDatabase.insertRecords(records:)(Swift::OpaquePointer records)
{
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC21DocumentUnderstanding23SQLiteRetrievalDatabase_isFrozen) & 1) == 0)
  {
    uint64_t v3 = *((void *)records._rawValue + 2);
    if (v3)
    {
      type metadata accessor for DUVectorUtils();
      swift_bridgeObjectRetain();
      uint64_t v4 = 32;
      do
      {
        long long v5 = *(_OWORD *)((char *)records._rawValue + v4 + 16);
        long long v10 = *(_OWORD *)((char *)records._rawValue + v4);
        long long v11 = v5;
        uint64_t v12 = *(void *)((char *)records._rawValue + v4 + 32);
        uint64_t v6 = v5;
        sub_2368E49EC((uint64_t)&v10);
        uint64_t v7 = sub_2367D9ADC(v6);
        uint64_t v8 = swift_allocObject();
        long long v9 = v11;
        *(_OWORD *)(v8 + 16) = v10;
        *(_OWORD *)(v8 + 32) = v9;
        *(void *)(v8 + 48) = v12;
        *(void *)(v8 + 56) = v7;
        sub_2368E49EC((uint64_t)&v10);
        SQLiteDatabase.executeQuery(query:prep:onRow:)();
        swift_release();
        sub_2368E4AA8((uint64_t)&v10);
        v4 += 40;
        --v3;
      }
      while (v3);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_2368E49EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2367BAA7C(v2, v3);
  return a1;
}

uint64_t sub_2368E4A3C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 48);
  if (v1 >> 60 != 15) {
    sub_2367B8A20(*(void *)(v0 + 40), v1);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

void sub_2368E4A9C(void *a1)
{
  sub_2367E546C(a1, (uint64_t *)(v1 + 16), *(void *)(v1 + 56));
}

uint64_t sub_2368E4AA8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2367BAA90(v2, v3);
  return a1;
}

Swift::Void __swiftcall SQLiteRetrievalDatabase.clearAllRecords()()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding23SQLiteRetrievalDatabase_isFrozen) & 1) == 0) {
    SQLiteDatabase.executeQuery(query:prep:onRow:)();
  }
}

uint64_t SQLiteRetrievalDatabase.fetchNeighborsForVector(vector:distanceLimit:countLimit:)(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = MEMORY[0x263F8EE78];
  *(void *)(v6 + 16) = MEMORY[0x263F8EE78];
  uint64_t v8 = (uint64_t *)(v6 + 16);
  type metadata accessor for DUVectorUtils();
  uint64_t v9 = sub_2367D9ADC(a1);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(float *)(v10 + 24) = a3;
  *(void *)(v10 + 32) = a2;
  swift_retain();
  SQLiteDatabase.executeQuery(query:prep:onRow:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  uint64_t v11 = *v8;
  swift_bridgeObjectRetain();
  swift_release();
  int64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    sub_2368C6CA4(0, v12, 0);
    uint64_t v13 = v7;
    uint64_t v14 = (_DWORD *)(v11 + 64);
    do
    {
      uint64_t v16 = *((void *)v14 - 4);
      uint64_t v15 = *((void *)v14 - 3);
      uint64_t v17 = *((void *)v14 - 2);
      unint64_t v18 = *((void *)v14 - 1);
      int v19 = *v14;
      swift_bridgeObjectRetain();
      sub_2367BAA7C(v17, v18);
      swift_bridgeObjectRetain();
      sub_2367BAA7C(v17, v18);
      sub_2367BAA90(v17, v18);
      swift_bridgeObjectRelease();
      unint64_t v21 = *(void *)(v7 + 16);
      unint64_t v20 = *(void *)(v7 + 24);
      if (v21 >= v20 >> 1) {
        sub_2368C6CA4((void *)(v20 > 1), v21 + 1, 1);
      }
      v14 += 10;
      *(void *)(v7 + 16) = v21 + 1;
      uint64_t v22 = v7 + 40 * v21;
      *(void *)(v22 + 32) = v16;
      *(void *)(v22 + 40) = v15;
      *(void *)(v22 + 48) = v17;
      *(void *)(v22 + 56) = v18;
      *(_DWORD *)(v22 + 64) = v19;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v13;
}

uint64_t sub_2368E4DA0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2368E4DD8()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

id sub_2368E4E10(void *a1)
{
  return sub_2367E554C(a1, *(void *)(v1 + 16), *(void *)(v1 + 32), *(float *)(v1 + 24));
}

uint64_t sub_2368E4E20(void *a1)
{
  return sub_2367E5604(a1, v1);
}

id SQLiteRetrievalDatabase.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SQLiteRetrievalDatabase.init()()
{
}

id SQLiteRetrievalDatabase.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SQLiteRetrievalDatabase();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2368E4EE0(uint64_t a1, uint64_t a2, float a3)
{
  return SQLiteRetrievalDatabase.fetchNeighborsForVector(vector:distanceLimit:countLimit:)(a1, a2, a3);
}

void *DUDocument.__allocating_init<A>(proto:)(uint64_t a1, uint64_t a2)
{
  sub_2367CD744();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DURawDocument();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, a2);
  uint64_t v9 = DURawDocument.__allocating_init<A>(proto:)((uint64_t)v8, a2);
  if (v9)
  {
    id v10 = objc_allocWithZone((Class)type metadata accessor for DUDocument());
    uint64_t v9 = (void *)DUDocument.init(rawDocument:maxLength:)(v9, 0);
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, a2);
  return v9;
}

uint64_t DUDocument.__allocating_init(rawDocument:maxLength:)(void *a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return DUDocument.init(rawDocument:maxLength:)(a1, a2);
}

uint64_t sub_2368E5050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_23697AD0C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  swift_bridgeObjectRetain();
  if (a1 && sub_23697B06C() > a1)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2367DD654(a1);
    uint64_t v11 = MEMORY[0x237E064D0](v10);
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = v11;
    uint64_t v23 = v13;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_23697B06C();
  swift_bridgeObjectRelease();
  if (v14 > 100000)
  {
    sub_23697ACFC();
    uint64_t v15 = sub_23697ACDC();
    os_log_type_t v16 = sub_23697B36C();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 134218240;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_23697B06C();
      swift_bridgeObjectRelease();
      uint64_t v21 = v18;
      sub_23697B50C();
      *(_WORD *)(v17 + 12) = 2048;
      uint64_t v21 = 100000;
      sub_23697B50C();
      _os_log_impl(&dword_2367AD000, v15, v16, "DUDocument: Document length %ld is beyond recommended maximum %ld.", (uint8_t *)v17, 0x16u);
      MEMORY[0x237E081F0](v17, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_beginAccess();
  return v22;
}

uint64_t DUDocument.headline.getter()
{
  return sub_2368E54E0(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_headline);
}

id sub_2368E5310(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  if (v3)
  {
    uint64_t v4 = (void *)sub_23697AF3C();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  return v4;
}

uint64_t DUDocument.subHeadline.getter()
{
  return sub_2368E54E0(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_subHeadline);
}

uint64_t DUDocument.version.getter()
{
  return sub_2368E54E0(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_version);
}

uint64_t DUDocument.creator.getter()
{
  return sub_2368E54E0(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_creator);
}

uint64_t DUDocument.abstract.getter()
{
  return sub_2368E54E0(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_abstract);
}

uint64_t DUDocument.comment.getter()
{
  return sub_2368E54E0(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_comment);
}

uint64_t DUDocument.text.getter()
{
  return sub_2368E54E0(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_text);
}

uint64_t DUDocument.inLanguage.getter()
{
  return sub_2368E54E0(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_inLanguage);
}

uint64_t DUDocument.keywords.getter()
{
  return sub_2368E5920();
}

uint64_t DUDocument.identifier.getter()
{
  return sub_2368E54E0(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_identifier);
}

uint64_t sub_2368E54E0(void *a1)
{
  objc_super v2 = (uint64_t *)(*(void *)(v1 + OBJC_IVAR____TtC21DocumentUnderstanding10DUDocument_rawDocument) + *a1);
  sub_2367C00E8();
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t DUDocument.url.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2368E55EC(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_url, &qword_26AD89538, a1);
}

uint64_t DUDocument.thumbnailUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2368E55EC(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_thumbnailUrl, &qword_26AD89538, a1);
}

uint64_t sub_2368E55EC@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC21DocumentUnderstanding10DUDocument_rawDocument) + *a1;
  swift_beginAccess();
  return sub_236806064(v6, a3, a2);
}

uint64_t DUDocument.significantLink.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2368E55EC(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_significantLink, &qword_26AD89538, a1);
}

uint64_t DUDocument.dateCreated.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2368E55EC(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_dateCreated, (uint64_t *)&off_26AD89548, a1);
}

id sub_2368E5758(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v10 = sub_2367B7DBC(a3);
  MEMORY[0x270FA5388](v10 - 8);
  sub_2367CBF80();
  a4();
  uint64_t v11 = a5(0);
  uint64_t v12 = 0;
  if (sub_2367B85F8(v6, 1, v11) != 1)
  {
    uint64_t v12 = (void *)a6();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v6, v11);
  }
  return v12;
}

uint64_t DUDocument.dateModified.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2368E55EC(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_dateModified, (uint64_t *)&off_26AD89548, a1);
}

void *DUDocument.documentMessageData.getter()
{
  return sub_2368E59A8(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_documentMessageData);
}

uint64_t DUDocument.documentUIElements.getter()
{
  return sub_2368E5920();
}

uint64_t sub_2368E5920()
{
  return swift_bridgeObjectRetain();
}

void *DUDocument.documentHTMLData.getter()
{
  return sub_2368E59A8(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_documentHTMLData);
}

void *sub_2368E59A8(void *a1)
{
  objc_super v2 = (void **)(*(void *)(v1 + OBJC_IVAR____TtC21DocumentUnderstanding10DUDocument_rawDocument) + *a1);
  sub_2367C00E8();
  uint64_t v3 = *v2;
  id v4 = v3;
  return v3;
}

void sub_2368E59F4()
{
}

uint64_t DUDocument.init(rawDocument:maxLength:)(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_23697A30C();
  sub_2367CD744();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = sub_23697AD0C();
  sub_2367CD744();
  uint64_t v13 = v12;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  int v19 = (char *)&v60 - v18;
  char v62 = v2;
  id v63 = a1;
  objc_msgSend(a1, sel_copy);
  sub_23697B5DC();
  swift_unknownObjectRelease();
  type metadata accessor for DURawDocument();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_37;
  }
  int v19 = (char *)v65;
  unint64_t v20 = (void *)(v65 + OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_identifier);
  sub_2367C00E8();
  unint64_t v21 = v20[1];
  if (!v21 || ((v21 & 0x2000000000000000) != 0 ? (uint64_t v22 = HIBYTE(v21) & 0xF) : (uint64_t v22 = *v20 & 0xFFFFFFFFFFFFLL), !v22))
  {
    sub_23697A2FC();
    uint64_t v23 = sub_23697A2EC();
    uint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
    DURawDocument.identifier.setter(v23, v25);
  }
  if (a2 > 100000)
  {
    sub_23697ACFC();
    uint64_t v26 = sub_23697ACDC();
    os_log_type_t v27 = sub_23697B36C();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 134218240;
      uint64_t v65 = a2;
      sub_23697B50C();
      *(_WORD *)(v28 + 12) = 2048;
      uint64_t v65 = 100000;
      sub_23697B50C();
      _os_log_impl(&dword_2367AD000, v26, v27, "DUDocument: Truncation string length %ld is beyond recommended maximum %ld.", (uint8_t *)v28, 0x16u);
      MEMORY[0x237E081F0](v28, -1, -1);
    }

    uint64_t v29 = *(void (**)(char *, unint64_t))(v13 + 8);
    v13 += 8;
    v29(v17, v11);
  }
  char v30 = (uint64_t *)&v19[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_text];
  sub_2367C00E8();
  uint64_t v31 = *v30;
  uint64_t v32 = v30[1];
  if (v32)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_2368E5050(a2, v31, v32);
    uint64_t v34 = v33;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v34 = 0;
  }
  DURawDocument.text.setter(v31, v34);
  uint64_t v35 = (void **)&v19[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_documentHTMLData];
  sub_2367C00E8();
  BOOL v36 = (char *)*v35;
  if (*v35)
  {
    char v37 = (uint64_t *)&v36[OBJC_IVAR____TtC21DocumentUnderstanding18DUDocumentHTMLData_htmlString];
    sub_2367C00E8();
    uint64_t v38 = *v37;
    uint64_t v39 = v37[1];
    uint64_t v40 = v36;
    if (v39)
    {
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_2368E5050(100000, v38, v39);
      uint64_t v42 = v41;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v42 = 0;
    }
    DUDocumentHTMLData.htmlString.setter(v38, v42);
  }
  uint64_t v43 = (unint64_t *)&v19[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_documentUIElements];
  sub_2367C00E8();
  unint64_t v11 = *v43;
  if (!*v43) {
    goto LABEL_33;
  }
  BOOL v61 = v19;
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v44 = sub_23697B7FC();
    if (v44) {
      goto LABEL_23;
    }
LABEL_32:
    swift_bridgeObjectRelease_n();
    int v19 = v61;
LABEL_33:
    char v53 = v62;
    *(void *)&v62[OBJC_IVAR____TtC21DocumentUnderstanding10DUDocument_rawDocument] = v19;

    uint64_t v54 = (objc_class *)type metadata accessor for DUDocument();
    v64.receiver = v53;
    v64.super_class = v54;
    id v55 = objc_msgSendSuper2(&v64, sel_init);

    return (uint64_t)v55;
  }
  uint64_t v44 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v44) {
    goto LABEL_32;
  }
LABEL_23:
  if (v44 >= 1)
  {
    for (uint64_t i = 0; i != v44; ++i)
    {
      if ((v11 & 0xC000000000000001) != 0) {
        uint64_t v46 = (char *)MEMORY[0x237E06BC0](i, v11);
      }
      else {
        uint64_t v46 = (char *)*(id *)(v11 + 8 * i + 32);
      }
      uint64_t v47 = v46;
      BOOL v48 = (uint64_t *)&v46[OBJC_IVAR____TtC21DocumentUnderstanding19DUDocumentUIElement_text];
      sub_2367C00E8();
      uint64_t v50 = *v48;
      uint64_t v49 = v48[1];
      if (v49)
      {
        swift_bridgeObjectRetain();
        uint64_t v50 = sub_2368E5050(a2, v50, v49);
        uint64_t v52 = v51;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v52 = 0;
      }
      DUDocumentUIElement.text.setter(v50, v52);
    }
    goto LABEL_32;
  }
  __break(1u);
LABEL_37:
  sub_23697ACFC();
  BOOL v57 = sub_23697ACDC();
  os_log_type_t v58 = sub_23697B37C();
  if (os_log_type_enabled(v57, v58))
  {
    uint64_t v59 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v59 = 0;
    _os_log_impl(&dword_2367AD000, v57, v58, "Could not create a DURawDocument copy due to mismatched typing.", v59, 2u);
    MEMORY[0x237E081F0](v59, -1, -1);
  }

  (*(void (**)(char *, unint64_t))(v13 + 8))(v19, v11);
  uint64_t result = sub_2368E6728();
  __break(1u);
  return result;
}

id DUDocument.__allocating_init(text:maxLength:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return DUDocument.init(text:maxLength:)(a1, a2, a3);
}

id DUDocument.init(text:maxLength:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  id v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DURawDocument()), sel_init);
  DURawDocument.text.setter(a1, a2);
  id v9 = objc_msgSend(v4, sel_initWithRawDocument_maxLength_, v8, a3);

  return v9;
}

uint64_t DUDocument.rawCopy()()
{
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding10DUDocument_rawDocument), sel_copy);
  sub_23697B5DC();
  swift_unknownObjectRelease();
  type metadata accessor for DURawDocument();
  if (sub_2368E6750()) {
    return v2;
  }
  else {
    return 0;
  }
}

Swift::Void __swiftcall DUDocument.encode(with:)(NSCoder with)
{
}

id DUDocument.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return DUDocument.init(coder:)(a1);
}

id DUDocument.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  objc_allocWithZone((Class)type metadata accessor for DURawDocument());
  id v4 = a1;
  uint64_t v5 = DURawDocument.init(coder:)(v4);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    id v7 = objc_msgSend(v2, sel_initWithRawDocument_maxLength_, v5, 0);
  }
  else
  {

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v7;
}

uint64_t DUDocument.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document(0);
  MEMORY[0x270FA5388](v3 - 8);
  sub_2367CBF80();
  DURawDocument.protoRepresentation.getter(v1);
  id v4 = sub_236831F38(v1);
  uint64_t result = sub_2367B7DBC(&qword_26889A110);
  a1[3] = result;
  *a1 = v4;
  return result;
}

id DUDocument.isEqual(_:)(uint64_t a1)
{
  sub_236806064(a1, (uint64_t)v7, (uint64_t *)&unk_26AD8BC30);
  if (!v8)
  {
    sub_23680067C((uint64_t)v7);
    return 0;
  }
  type metadata accessor for DUDocument();
  if ((sub_2368E6750() & 1) == 0) {
    return 0;
  }
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC21DocumentUnderstanding10DUDocument_rawDocument);
  id v3 = *(id *)&v6[OBJC_IVAR____TtC21DocumentUnderstanding10DUDocument_rawDocument];
  id v4 = objc_msgSend(v2, sel_isEqual_, v3);

  return v4;
}

uint64_t type metadata accessor for DUDocument()
{
  return self;
}

uint64_t DUDocument.protoRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  return DURawDocument.protoRepresentation.getter(a1);
}

id DUDocument.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DUDocument();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2368E666C@<X0>(uint64_t a1@<X8>)
{
  return DUDocument.protoRepresentation.getter(a1);
}

void *sub_2368E6690@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_236831F38(a1);
  *a2 = result;
  return result;
}

uint64_t sub_2368E66B8(uint64_t a1)
{
  return MEMORY[0x270FA03F0](a1, &opaque type descriptor for <<opaque return type of DUDocument.protoRepresentation>>, 1);
}

unint64_t sub_2368E66D8()
{
  unint64_t result = qword_268899BC8;
  if (!qword_268899BC8)
  {
    type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268899BC8);
  }
  return result;
}

uint64_t sub_2368E6728()
{
  return sub_23697B7CC();
}

uint64_t sub_2368E6750()
{
  return swift_dynamicCast();
}

id DUFoundInEventResult.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id static DUFoundInEventResult.getErrorForField(field:errorCode:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for DUFoundInEventResult();
  sub_2368E9E10(a1, a2, a3);
  sub_2368E6850();
  sub_23683AC24();
  swift_bridgeObjectRelease();
  id v6 = objc_allocWithZone(MEMORY[0x263F087E8]);
  return sub_2368EC0AC(0xD000000000000031, 0x8000000236993CC0, a3, a1);
}

uint64_t type metadata accessor for DUFoundInEventResult()
{
  return self;
}

void sub_2368E6850()
{
  sub_2368EC7B8();
  if (v1)
  {
    sub_2367B7DBC(&qword_26AD89510);
    objc_super v2 = (void *)sub_2368EC594();
  }
  else
  {
    objc_super v2 = (void *)MEMORY[0x263F8EE80];
  }
  os_log_type_t v27 = v0 + 8;
  uint64_t v3 = -1 << *((unsigned char *)v0 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  uint64_t v5 = v4 & v0[8];
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  id v6 = &v31;
  id v7 = &v33;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  id v9 = (uint64_t *)(MEMORY[0x263F8EE58] + 8);
  uint64_t v10 = (uint64_t *)MEMORY[0x263F8D310];
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        sub_2368EC6EC();
        uint64_t v28 = v5;
      }
      else
      {
        if (__OFADD__(v8, 1)) {
          goto LABEL_38;
        }
        if ((uint64_t)v8 + 1 >= v26)
        {
LABEL_35:
          sub_236804FAC();
          return;
        }
        sub_2368EC7AC();
        if (!v12)
        {
          sub_2367FB4BC();
          if (v13 == v14) {
            goto LABEL_35;
          }
          uint64_t v12 = *((void *)v27 + v11);
          if (!v12)
          {
            sub_2367FB4BC();
            if (v13 == v14) {
              goto LABEL_35;
            }
            uint64_t v12 = *((void *)v27 + v11);
            if (!v12)
            {
              sub_2367FB4BC();
              if (v13 == v14) {
                goto LABEL_35;
              }
              uint64_t v12 = *((void *)v27 + v11);
              if (!v12)
              {
                int64_t v16 = v15 + 4;
                if (v16 >= v26) {
                  goto LABEL_35;
                }
                uint64_t v12 = *((void *)v27 + v16);
                if (!v12)
                {
                  while (!__OFADD__(v16, 1))
                  {
                    sub_2367FB4BC();
                    if (v13 == v14) {
                      goto LABEL_35;
                    }
                    sub_2368EC794();
                    if (v12) {
                      goto LABEL_29;
                    }
                  }
                  goto LABEL_39;
                }
                int64_t v11 = v16;
              }
            }
          }
        }
LABEL_29:
        uint64_t v28 = (v12 - 1) & v12;
        uint64_t v8 = (uint64_t *)v11;
      }
      uint64_t v17 = sub_2368EC8DC();
      uint64_t v29 = v18;
      uint64_t v30 = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2368EC950();
      sub_2367F0F40(v6, v7);
      sub_2367F0F40(v7, v34);
      sub_2367F0F40(v34, &v32);
      unint64_t v19 = sub_2368FE8EC(v29, v30);
      if ((v20 & 1) == 0) {
        break;
      }
      sub_2368EC728();
      *id v9 = v29;
      v9[1] = v30;
      id v9 = v10;
      uint64_t v10 = v0;
      uint64_t v0 = v6;
      id v6 = v7;
      id v7 = v8;
      unint64_t v21 = (_OWORD *)(v2[7] + 32 * v19);
      sub_2367CBF2C((uint64_t)v21);
      sub_2367F0F40(&v32, v21);
      uint64_t v5 = v28;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    sub_2368EC930();
    sub_2368EC640(v22);
    sub_2367F0F40(&v32, v23);
    uint64_t v24 = v2[2];
    BOOL v14 = __OFADD__(v24, 1);
    uint64_t v25 = v24 + 1;
    if (v14) {
      goto LABEL_37;
    }
    v2[2] = v25;
    uint64_t v5 = v28;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

void sub_2368E6B1C()
{
  sub_2368EC7B8();
  if (v1)
  {
    sub_2367B7DBC(&qword_26889A220);
    uint64_t v2 = sub_2368EC594();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  sub_2368EC4FC();
  uint64_t v5 = v4 & v3;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v31 = 0;
  if (!v5) {
    goto LABEL_6;
  }
LABEL_5:
  sub_2368EC6EC();
  while (1)
  {
    sub_2368EC8C8();
    id v19 = v18;
    swift_bridgeObjectRetain();
    sub_2367B7DBC(&qword_26AD89C00);
    swift_dynamicCast();
    sub_23697AF6C();
    sub_23697BA2C();
    sub_23697B04C();
    sub_23697BA4C();
    swift_bridgeObjectRelease();
    sub_2368EC8B0();
    if (((v22 << v21) & ~*(void *)(v6 + 8 * v20)) == 0)
    {
      sub_2368EC754();
      while (++v25 != v26 || (v24 & 1) == 0)
      {
        BOOL v27 = v25 == v26;
        if (v25 == v26) {
          uint64_t v25 = 0;
        }
        v24 |= v27;
        if (*(void *)(v6 + 8 * v25) != -1)
        {
          sub_2368EC714();
          goto LABEL_36;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    sub_2368EC780();
LABEL_36:
    sub_2368EC664(v23);
    *(void *)(v29 + 8 * v28) = v19;
    uint64_t v30 = (void *)(*(void *)(v2 + 56) + 16 * v28);
    *uint64_t v30 = v32;
    v30[1] = v33;
    sub_2368EC894();
    if (v5) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v31, 1)) {
      goto LABEL_40;
    }
    sub_2368EC7A0();
    if (v7 == v8) {
      goto LABEL_38;
    }
    sub_2368EC7AC();
    if (!v9)
    {
      sub_2368EC51C();
      if (v7 == v8) {
        goto LABEL_38;
      }
      sub_2368EC5E8();
      if (!v10)
      {
        sub_2368EC51C();
        if (v7 == v8) {
          goto LABEL_38;
        }
        sub_2368EC5E8();
        if (!v11)
        {
          sub_2368EC51C();
          if (v7 == v8) {
            goto LABEL_38;
          }
          sub_2368EC5E8();
          if (!v12)
          {
            sub_2368EC7A0();
            if (v7 == v8)
            {
LABEL_38:
              swift_release();
              sub_236804FAC();
              return;
            }
            if (!*(void *)(v0 + 64 + 8 * v13)) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    sub_2368EC810();
    uint64_t v5 = v16 & v15;
    uint64_t v31 = v17;
  }
  while (!__OFADD__(v13, 1))
  {
    sub_2368EC51C();
    if (v7 == v8) {
      goto LABEL_38;
    }
    sub_2368EC794();
    if (v14) {
      goto LABEL_26;
    }
  }
LABEL_41:
  __break(1u);
}

void sub_2368E6DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,long long a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,long long a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  sub_2368EC878();
  a41 = v46;
  a42 = v47;
  sub_2368EC7B8();
  if (v43)
  {
    sub_2367B7DBC(&qword_26AD89510);
    uint64_t v48 = sub_2368EC594();
  }
  else
  {
    uint64_t v48 = MEMORY[0x263F8EE80];
  }
  sub_2368EC5B0();
  uint64_t v51 = v50 & v49;
  sub_2368EC558();
  uint64_t v52 = (uint64_t *)(MEMORY[0x263F8EE58] + 8);
  char v53 = (uint64_t *)MEMORY[0x263F8D538];
  while (v51)
  {
    sub_2368EC6EC();
    a14 = v51;
    uint64_t v55 = v54;
LABEL_27:
    objc_super v64 = (uint64_t *)(*(void *)(v42 + 48) + 16 * v55);
    uint64_t v73 = *v64;
    uint64_t v74 = v64[1];
    swift_bridgeObjectRetain();
    sub_2368EC950();
    sub_2367F0F40(v44, v45);
    sub_2367F0F40(v45, &a27);
    sub_2367F0F40(&a27, &a22);
    unint64_t v65 = sub_2368FE8EC(v73, v74);
    if (v66)
    {
      sub_2368EC728();
      *uint64_t v52 = v73;
      v52[1] = v74;
      uint64_t v52 = v53;
      sub_2368EC7C4();
      uint64_t v68 = (_OWORD *)(v67 + 32 * v65);
      sub_2367CBF2C((uint64_t)v68);
      sub_2367F0F40(&a22, v68);
      uint64_t v51 = a14;
    }
    else
    {
      if (*(void *)(v48 + 16) >= *(void *)(v48 + 24))
      {
        __break(1u);
LABEL_34:
        __break(1u);
        __break(1u);
        goto LABEL_35;
      }
      sub_2368EC930();
      sub_2368EC640(v69);
      sub_2367F0F40(&a22, v70);
      uint64_t v71 = *(void *)(v48 + 16);
      BOOL v57 = __OFADD__(v71, 1);
      uint64_t v72 = v71 + 1;
      if (v57) {
        goto LABEL_34;
      }
      *(void *)(v48 + 16) = v72;
      uint64_t v51 = a14;
    }
  }
  sub_2368EC7A0();
  if (v56 == v57) {
    goto LABEL_32;
  }
  sub_2368EC7AC();
  if (v58) {
    goto LABEL_26;
  }
  sub_2368EC51C();
  if (v56 == v57) {
    goto LABEL_32;
  }
  sub_2368EC5E8();
  if (v59) {
    goto LABEL_26;
  }
  sub_2368EC51C();
  if (v56 == v57) {
    goto LABEL_32;
  }
  sub_2368EC5E8();
  if (v60) {
    goto LABEL_26;
  }
  sub_2368EC51C();
  if (v56 == v57) {
    goto LABEL_32;
  }
  sub_2368EC5E8();
  if (v61) {
    goto LABEL_26;
  }
  sub_2368EC7A0();
  if (v56 == v57)
  {
LABEL_32:
    sub_2368EC83C();
    sub_2368EC820();
    return;
  }
  if (*(void *)(a12 + 8 * v62))
  {
LABEL_26:
    sub_2368EC6B0();
    goto LABEL_27;
  }
  while (!__OFADD__(v62, 1))
  {
    sub_2368EC51C();
    if (v56 == v57) {
      goto LABEL_32;
    }
    sub_2368EC794();
    if (v63) {
      goto LABEL_26;
    }
  }
LABEL_35:
  __break(1u);
}

void sub_2368E6FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,long long a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,long long a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  sub_2368EC878();
  a41 = v46;
  a42 = v47;
  sub_2368EC7B8();
  if (v43)
  {
    sub_2367B7DBC(&qword_26AD89510);
    uint64_t v48 = (void *)sub_2368EC594();
  }
  else
  {
    uint64_t v48 = (void *)MEMORY[0x263F8EE80];
  }
  sub_2368EC5B0();
  unint64_t v51 = v50 & v49;
  sub_2368EC558();
  uint64_t v52 = 0;
  char v53 = &qword_268897F70;
  uint64_t v54 = MEMORY[0x263F8EE58] + 8;
  while (1)
  {
    while (1)
    {
      if (v51)
      {
        a14 = (v51 - 1) & v51;
        unint64_t v55 = __clz(__rbit64(v51)) | ((void)v52 << 6);
      }
      else
      {
        if (__OFADD__(v52, 1)) {
          goto LABEL_36;
        }
        sub_2368EC7A0();
        if (v56 == v57)
        {
LABEL_33:
          sub_2368EC83C();
          sub_2368EC820();
          return;
        }
        sub_2368EC7AC();
        if (!v58)
        {
          sub_2368EC51C();
          if (v56 == v57) {
            goto LABEL_33;
          }
          sub_2368EC5E8();
          if (!v59)
          {
            sub_2368EC51C();
            if (v56 == v57) {
              goto LABEL_33;
            }
            sub_2368EC5E8();
            if (!v60)
            {
              sub_2368EC51C();
              if (v56 == v57) {
                goto LABEL_33;
              }
              sub_2368EC5E8();
              if (!v61)
              {
                sub_2368EC7A0();
                if (v56 == v57) {
                  goto LABEL_33;
                }
                if (!*(void *)(a12 + 8 * v62))
                {
                  while (!__OFADD__(v62, 1))
                  {
                    sub_2368EC51C();
                    if (v56 == v57) {
                      goto LABEL_33;
                    }
                    sub_2368EC794();
                    if (v63) {
                      goto LABEL_27;
                    }
                  }
                  goto LABEL_37;
                }
              }
            }
          }
        }
LABEL_27:
        sub_2368EC6B0();
      }
      objc_super v64 = (uint64_t *)(*(void *)(v42 + 48) + 16 * v55);
      uint64_t v74 = *v64;
      uint64_t v75 = v64[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2367B7DBC(v53);
      swift_dynamicCast();
      sub_2367F0F40(v44, v45);
      sub_2367F0F40(v45, &a27);
      sub_2367F0F40(&a27, &a22);
      unint64_t v65 = sub_2368FE8EC(v74, v75);
      unint64_t v66 = v65;
      if ((v67 & 1) == 0) {
        break;
      }
      uint64_t v52 = v45;
      char v45 = v44;
      uint64_t v44 = (_OWORD *)v42;
      uint64_t v42 = v54;
      uint64_t v54 = (uint64_t)v53;
      uint64_t v68 = (uint64_t *)(v48[6] + 16 * v65);
      swift_bridgeObjectRelease();
      *uint64_t v68 = v74;
      v68[1] = v75;
      char v53 = (uint64_t *)v54;
      sub_2368EC7C4();
      char v70 = (_OWORD *)(v69 + 32 * v66);
      sub_2367CBF2C((uint64_t)v70);
      sub_2367F0F40(&a22, v70);
      unint64_t v51 = a14;
    }
    if (v48[2] >= v48[3]) {
      break;
    }
    *(void *)(a10 + ((v65 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v65;
    uint64_t v71 = (uint64_t *)(v48[6] + 16 * v65);
    uint64_t *v71 = v74;
    v71[1] = v75;
    sub_2367F0F40(&a22, (_OWORD *)(v48[7] + 32 * v65));
    uint64_t v72 = v48[2];
    BOOL v57 = __OFADD__(v72, 1);
    uint64_t v73 = v72 + 1;
    if (v57) {
      goto LABEL_35;
    }
    v48[2] = v73;
    unint64_t v51 = a14;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_2368E722C()
{
  sub_2368EC7B8();
  if (v1)
  {
    sub_2367B7DBC(&qword_26889A218);
    uint64_t v2 = sub_2368EC594();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  sub_2368EC4FC();
  uint64_t v5 = v4 & v3;
  sub_2368EC8F0();
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = 0;
  if (!v5) {
    goto LABEL_6;
  }
LABEL_5:
  v5 &= v5 - 1;
  while (1)
  {
    uint64_t v19 = sub_2368EC8DC();
    *(void *)&v38[0] = v20;
    *((void *)&v38[0] + 1) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    swift_dynamicCast();
    long long v34 = v30;
    long long v35 = v31;
    uint64_t v36 = v32;
    sub_2367F0F40(&v33, v37);
    long long v30 = v34;
    long long v31 = v35;
    uint64_t v32 = v36;
    sub_2367F0F40(v37, v38);
    sub_2367F0F40(v38, &v34);
    unint64_t v21 = sub_23697B61C() & ~(-1 << *(unsigned char *)(v2 + 32));
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) == 0)
    {
      sub_2368EC754();
      while (++v24 != v25 || (v23 & 1) == 0)
      {
        BOOL v26 = v24 == v25;
        if (v24 == v25) {
          uint64_t v24 = 0;
        }
        v23 |= v26;
        if (*(void *)(v6 + 8 * v24) != -1)
        {
          sub_2368EC714();
          goto LABEL_36;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    sub_2368EC780();
LABEL_36:
    sub_2368EC664(v22);
    uint64_t v29 = v28 + 40 * v27;
    *(_OWORD *)uint64_t v29 = v30;
    *(_OWORD *)(v29 + 16) = v31;
    *(void *)(v29 + 32) = v32;
    sub_2367F0F40(&v34, (_OWORD *)(*(void *)(v2 + 56) + 32 * v27));
    sub_2368EC894();
    if (v5) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v7, 1)) {
      goto LABEL_40;
    }
    sub_2368EC904();
    if (v8 == v9) {
      goto LABEL_38;
    }
    sub_2368EC7AC();
    if (!v10)
    {
      sub_2368EC688();
      if (v8 == v9) {
        goto LABEL_38;
      }
      sub_2367FB4B0();
      if (!v11)
      {
        sub_2368EC688();
        if (v8 == v9) {
          goto LABEL_38;
        }
        sub_2367FB4B0();
        if (!v12)
        {
          sub_2368EC688();
          if (v8 == v9) {
            goto LABEL_38;
          }
          sub_2367FB4B0();
          if (!v13)
          {
            sub_2368EC904();
            if (v8 == v9)
            {
LABEL_38:
              swift_release();
              sub_236804FAC();
              return;
            }
            if (!*(void *)(v0 + 64 + 8 * v14)) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    sub_2368EC810();
    uint64_t v5 = v17 & v16;
    uint64_t v7 = v18;
  }
  while (!__OFADD__(v14, 1))
  {
    sub_2368EC688();
    if (v8 == v9) {
      goto LABEL_38;
    }
    sub_2368EC794();
    if (v15) {
      goto LABEL_26;
    }
  }
LABEL_41:
  __break(1u);
}

void sub_2368E7528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, long long a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,long long a22,uint64_t a23,uint64_t a24,long long a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  sub_2368EC878();
  a40 = v43;
  a41 = v44;
  sub_2368EC7B8();
  if (v42)
  {
    sub_2367B7DBC(&qword_26889A210);
    uint64_t v45 = sub_2368EC594();
  }
  else
  {
    uint64_t v45 = MEMORY[0x263F8EE80];
  }
  sub_2368EC4FC();
  uint64_t v48 = v47 & v46;
  sub_2368EC8F0();
  uint64_t v49 = v45 + 64;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v73 = 0;
  if (!v48) {
    goto LABEL_6;
  }
LABEL_5:
  v48 &= v48 - 1;
  while (1)
  {
    sub_2368EC8C8();
    *(void *)&a25 = v61;
    *(void *)&a22 = v62;
    *((void *)&a22 + 1) = v42;
    id v63 = v61;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    uint64_t v64 = a25;
    sub_2367F0F40((long long *)((char *)&a25 + 8), &a15);
    sub_2367F0F40(&a15, &a25);
    sub_2367F0F40(&a25, &a22);
    sub_23697AF6C();
    sub_23697BA2C();
    sub_23697B04C();
    uint64_t v42 = sub_23697BA4C();
    swift_bridgeObjectRelease();
    sub_2368EC8B0();
    if (((v67 << v66) & ~*(void *)(v49 + 8 * v65)) == 0)
    {
      sub_2368EC754();
      while (++v70 != v71 || (v69 & 1) == 0)
      {
        BOOL v72 = v70 == v71;
        if (v70 == v71) {
          uint64_t v70 = 0;
        }
        v69 |= v72;
        if (*(void *)(v49 + 8 * v70) != -1)
        {
          sub_2368EC714();
          goto LABEL_36;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    sub_2368EC780();
LABEL_36:
    *(void *)(v49 + ((v68 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v68;
    *(void *)(*(void *)(v45 + 48) + 8 * v68) = v64;
    sub_2367F0F40(&a22, (_OWORD *)(*(void *)(v45 + 56) + 32 * v68));
    sub_2368EC894();
    if (v48) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v73, 1)) {
      goto LABEL_40;
    }
    sub_2368EC904();
    if (v50 == v51) {
      goto LABEL_38;
    }
    sub_2368EC7AC();
    if (!v52)
    {
      sub_2368EC688();
      if (v50 == v51) {
        goto LABEL_38;
      }
      sub_2367FB4B0();
      if (!v53)
      {
        sub_2368EC688();
        if (v50 == v51) {
          goto LABEL_38;
        }
        sub_2367FB4B0();
        if (!v54)
        {
          sub_2368EC688();
          if (v50 == v51) {
            goto LABEL_38;
          }
          sub_2367FB4B0();
          if (!v55)
          {
            sub_2368EC904();
            if (v50 == v51)
            {
LABEL_38:
              swift_release();
              sub_236804FAC();
              sub_2368EC820();
              return;
            }
            if (!*(void *)(v41 + 64 + 8 * v56)) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    sub_2368EC810();
    uint64_t v48 = v59 & v58;
    uint64_t v73 = v60;
  }
  while (!__OFADD__(v56, 1))
  {
    sub_2368EC688();
    if (v50 == v51) {
      goto LABEL_38;
    }
    sub_2368EC794();
    if (v57) {
      goto LABEL_26;
    }
  }
LABEL_41:
  __break(1u);
}

id sub_2368E77FC(uint64_t a1, unint64_t a2)
{
  sub_23683AC24();
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v5 = (void *)sub_23697A21C();
  id v6 = objc_msgSend(v4, sel_initWithData_, v5);
  sub_2367B8A20(v2, a2);

  return v6;
}

char *DUFoundInEventResult.__allocating_init<A>(proto:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_2367B7DBC(&qword_268898380);
  MEMORY[0x270FA5388](v6 - 8);
  sub_2367CAC7C();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v11);
  sub_2367CAC7C();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult(0);
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v16);
  sub_2367CBF80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v14, a1, a2);
  if (swift_dynamicCast())
  {
    uint64_t v67 = a1;
    sub_2367B7028(v9, 0, 1, v15);
    sub_2368EC2F4(v9, v3, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult);
    uint64_t v17 = (char *)objc_msgSend(objc_allocWithZone(v2), sel_init);
    uint64_t v68 = v3;
    uint64_t v66 = *(int *)(v15 + 20);
    uint64_t v18 = *(void *)(v3 + v66);
    sub_2367BB188();
    char v19 = *(unsigned char *)(v18 + 16);
    uint64_t v20 = &v17[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_detectedEventPolarity];
    sub_2367BB248();
    *uint64_t v20 = v19;
    sub_2367BB188();
    if (*(unsigned char *)(v18 + 33)) {
      uint64_t v21 = 0;
    }
    else {
      uint64_t v21 = *(void *)(v18 + 24);
    }
    unint64_t v22 = v17;
    uint64_t v23 = sub_23681077C();
    sub_2368E9E10(v23, v24 | 0xED000064496E0000, v21);
    sub_2368E6850();
    uint64_t v26 = v25;
    swift_bridgeObjectRelease();
    id v27 = objc_allocWithZone(MEMORY[0x263F087E8]);
    sub_2368EC0AC(0xD000000000000031, 0x8000000236993CC0, v21, v26);
    sub_2367BB248();
    sub_236810728();
    sub_2367BB188();
    uint64_t v28 = *(void *)(v18 + 48);
    if (v28) {
      sub_2368EC86C();
    }
    else {
      sub_2368EC600();
    }
    sub_2367BB248();
    sub_2368EC60C();
    swift_bridgeObjectRelease();
    sub_2367BB188();
    sub_2368EC8A4();
    uint64_t v29 = sub_23681077C();
    sub_2368E9E10(v29, v30 | 0xEF656D614E6E0000, v28);
    sub_2368E6850();
    sub_2368EC7E0();
    id v31 = objc_allocWithZone(MEMORY[0x263F087E8]);
    sub_2368EC474();
    sub_2367BB248();
    sub_236803FC4();
    sub_2367BB188();
    if (*(void *)(v18 + 80))
    {
      uint64_t v32 = *(void *)(v18 + 72);
      unint64_t v33 = *(void *)(v18 + 80);
    }
    else
    {
      uint64_t v32 = 0;
      unint64_t v33 = 0xE000000000000000;
    }
    long long v34 = &v22[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_reservationName];
    sub_2367BB248();
    *(void *)long long v34 = v32;
    *((void *)v34 + 1) = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_2367BB188();
    sub_2368EC8A4();
    sub_2368EC694(0x6D614E6C65746F68);
    sub_2368E6850();
    sub_2368EC7F8();
    id v35 = objc_allocWithZone(MEMORY[0x263F087E8]);
    sub_2368EC4A0();
    sub_2367BB248();
    sub_236810728();
    sub_2367BB188();
    if (*(void *)(v18 + 320)) {
      sub_2368EC86C();
    }
    else {
      sub_2368EC600();
    }
    sub_2367BB248();
    sub_2368EC60C();
    swift_bridgeObjectRelease();
    sub_2367BB188();
    sub_2368EC8A4();
    sub_2368EC694(0x6D614E7473657567);
    sub_2368E6850();
    sub_2368EC7E0();
    id v36 = objc_allocWithZone(MEMORY[0x263F087E8]);
    sub_2368EC474();
    sub_2367BB248();
    sub_236803FC4();
    sub_2367BB188();
    if (*(void *)(v18 + 352)) {
      sub_2368EC944();
    }
    else {
      sub_2368EC600();
    }
    sub_2367BB248();
    sub_2368EC6D0();
    swift_bridgeObjectRelease();
    sub_2367BB188();
    sub_2368EC8A4();
    sub_2368EC694(0x6D614E6569766F6DLL);
    sub_2368E6850();
    sub_2368EC7F8();
    id v37 = objc_allocWithZone(MEMORY[0x263F087E8]);
    sub_2368EC4A0();
    sub_2367BB248();
    sub_236810728();
    sub_2367BB188();
    uint64_t v38 = *(void *)(v18 + 384);
    if (v38) {
      sub_2368EC86C();
    }
    else {
      sub_2368EC600();
    }
    sub_2367BB248();
    sub_2368EC60C();
    swift_bridgeObjectRelease();
    sub_2367BB188();
    unsigned int v39 = sub_2368EC700();
    sub_2368E9E10(v39 | 0x6464417400000000, 0xEC00000073736572, v38);
    sub_2368E6850();
    sub_2368EC7E0();
    id v40 = objc_allocWithZone(MEMORY[0x263F087E8]);
    sub_2368EC474();
    sub_2367BB248();
    sub_236803FC4();
    sub_2367BB188();
    if (*(void *)(v18 + 112)) {
      sub_2368EC944();
    }
    else {
      sub_2368EC600();
    }
    sub_2367BB248();
    sub_2368EC6D0();
    swift_bridgeObjectRelease();
    sub_2367BB188();
    uint64_t v41 = *(void *)(v18 + 120);
    uint64_t v42 = (uint64_t *)&v22[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startAddressComponents];
    sub_2367BB248();
    *uint64_t v42 = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_2367BB188();
    sub_2368EC8A4();
    sub_2368E9E10(0x6572646441646E65, 0xEA00000000007373, v41);
    sub_2368E6850();
    sub_2368EC7F8();
    id v43 = objc_allocWithZone(MEMORY[0x263F087E8]);
    sub_2368EC4A0();
    sub_2367BB248();
    sub_236810728();
    sub_2367BB188();
    if (*(void *)(v18 + 152)) {
      sub_2368EC86C();
    }
    else {
      sub_2368EC600();
    }
    sub_2367BB248();
    sub_2368EC60C();
    swift_bridgeObjectRelease();
    sub_2367BB188();
    uint64_t v44 = *(void *)(v18 + 160);
    uint64_t v45 = (uint64_t *)&v22[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endAddressComponents];
    sub_2367BB248();
    *uint64_t v45 = v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_2367BB188();
    unsigned int v46 = sub_2368EC700();
    sub_2368E9E10(v46 | 0x616C507400000000, 0xEA00000000006563, v44);
    sub_2368E6850();
    sub_2368EC7E0();
    id v47 = objc_allocWithZone(MEMORY[0x263F087E8]);
    sub_2368EC474();
    sub_2367BB248();
    sub_236803FC4();
    sub_2367BB188();
    if (*(void *)(v18 + 192)) {
      sub_2368EC944();
    }
    else {
      sub_2368EC600();
    }
    sub_2367BB248();
    sub_2368EC6D0();
    swift_bridgeObjectRelease();
    sub_2367BB188();
    if (*(unsigned char *)(v18 + 209)) {
      uint64_t v48 = 0;
    }
    else {
      uint64_t v48 = *(void *)(v18 + 200);
    }
    sub_2368E9E10(0x6563616C50646E65, 0xE800000000000000, v48);
    sub_2368E6850();
    sub_2368EC7F8();
    id v49 = objc_allocWithZone(MEMORY[0x263F087E8]);
    sub_2368EC4A0();
    sub_2367BB248();
    sub_236810728();
    sub_2367BB188();
    if (*(void *)(v18 + 224)) {
      sub_2368EC86C();
    }
    else {
      sub_2368EC600();
    }
    sub_2367BB248();
    sub_2368EC60C();
    swift_bridgeObjectRelease();
    sub_2367BB188();
    unsigned int v50 = sub_2368EC700();
    uint64_t v51 = sub_2368EC694(v50 | 0x7461447400000000);
    sub_2368E6850();
    sub_2368EC7E0();
    id v52 = objc_allocWithZone(MEMORY[0x263F087E8]);
    sub_2368EC474();
    sub_2367BB248();
    sub_236803FC4();
    sub_2367BB188();
    if (*(void *)(v18 + 256)) {
      sub_2368EC944();
    }
    else {
      sub_2368EC600();
    }
    sub_2367BB248();
    sub_2368EC6D0();
    swift_bridgeObjectRelease();
    sub_2367BB188();
    if (*(unsigned char *)(v18 + 273)) {
      uint64_t v53 = 0;
    }
    else {
      uint64_t v53 = *(void *)(v18 + 264);
    }
    sub_2368E9E10(0x65746144646E65, 0xE700000000000000, v53);
    sub_2368E6850();
    sub_2368EC7F8();
    id v54 = objc_allocWithZone(MEMORY[0x263F087E8]);
    id v55 = sub_2368EC0AC(0xD000000000000031, 0x8000000236993CC0, v53, v51);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v67, a2);
    uint64_t v56 = (void **)&v22[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endDateError];
    sub_2367BB248();
    uint64_t v57 = *v56;
    *uint64_t v56 = v55;

    uint64_t v58 = *(void **)(v68 + v66);
    sub_2367BB188();
    if (v58[36])
    {
      uint64_t v59 = v58[35];
      unint64_t v60 = v58[36];
    }
    else
    {
      uint64_t v59 = 0;
      unint64_t v60 = 0xE000000000000000;
    }
    uint64_t v61 = &v22[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endDate];
    sub_2367BB248();
    *(void *)uint64_t v61 = v59;
    *((void *)v61 + 1) = v60;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_2367BB188();
    if (v58[50])
    {
      uint64_t v62 = v58[49];
      unint64_t v63 = v58[50];
    }
    else
    {
      uint64_t v62 = 0;
      unint64_t v63 = 0xE000000000000000;
    }
    swift_bridgeObjectRetain();
    sub_2368EC1BC(v68);
    uint64_t v64 = &v22[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_text];
    sub_2367BB248();
    *(void *)uint64_t v64 = v62;
    *((void *)v64 + 1) = v63;

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2367B7028(v9, 1, 1, v15);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, a2);
    sub_2368EC15C(v9);
    return 0;
  }
  return v22;
}

uint64_t sub_2368E8410()
{
  uint64_t result = sub_23697AE9C();
  qword_26889A118 = result;
  return result;
}

uint64_t DUFoundInEventResult.detectedEventPolarity.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_detectedEventPolarity);
  sub_2367BB188();
  return *v1;
}

uint64_t DUFoundInEventResult.detectedEventPolarity.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_detectedEventPolarity);
  uint64_t result = sub_2367BB248();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*DUFoundInEventResult.detectedEventPolarity.modify())()
{
  return j__swift_endAccess;
}

void *DUFoundInEventResult.reservationIdError.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_reservationIdError);
  sub_2367BB188();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void DUFoundInEventResult.reservationIdError.setter(void *a1)
{
}

uint64_t (*DUFoundInEventResult.reservationIdError.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUFoundInEventResult.reservationId.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_reservationId);
}

uint64_t DUFoundInEventResult.reservationId.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_reservationId);
}

uint64_t (*DUFoundInEventResult.reservationId.modify())()
{
  return j_j__swift_endAccess;
}

void *DUFoundInEventResult.reservationNameError.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_reservationNameError);
  sub_2367BB188();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void DUFoundInEventResult.reservationNameError.setter(void *a1)
{
}

uint64_t (*DUFoundInEventResult.reservationNameError.modify())()
{
  return j_j__swift_endAccess;
}

id sub_2368E886C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  if (v3)
  {
    id v4 = (void *)sub_23697AF3C();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v4 = 0;
  }
  return v4;
}

uint64_t DUFoundInEventResult.reservationName.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_reservationName);
}

void sub_2368E88EC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  if (a3)
  {
    uint64_t v6 = sub_23697AF6C();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  id v9 = a1;
  a4(v6, v8);
}

uint64_t DUFoundInEventResult.reservationName.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_reservationName);
}

uint64_t (*DUFoundInEventResult.reservationName.modify())()
{
  return j_j__swift_endAccess;
}

void *DUFoundInEventResult.hotelNameError.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_hotelNameError);
  sub_2367BB188();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void DUFoundInEventResult.hotelNameError.setter(void *a1)
{
}

uint64_t (*DUFoundInEventResult.hotelNameError.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUFoundInEventResult.hotelName.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_hotelName);
}

uint64_t DUFoundInEventResult.hotelName.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_hotelName);
}

uint64_t (*DUFoundInEventResult.hotelName.modify())()
{
  return j_j__swift_endAccess;
}

void *DUFoundInEventResult.guestNameError.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_guestNameError);
  sub_2367BB188();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void DUFoundInEventResult.guestNameError.setter(void *a1)
{
}

uint64_t (*DUFoundInEventResult.guestNameError.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUFoundInEventResult.guestName.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_guestName);
}

uint64_t DUFoundInEventResult.guestName.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_guestName);
}

uint64_t (*DUFoundInEventResult.guestName.modify())()
{
  return j_j__swift_endAccess;
}

void *DUFoundInEventResult.movieNameError.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_movieNameError);
  sub_2367BB188();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void DUFoundInEventResult.movieNameError.setter(void *a1)
{
}

uint64_t (*DUFoundInEventResult.movieNameError.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUFoundInEventResult.movieName.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_movieName);
}

uint64_t DUFoundInEventResult.movieName.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_movieName);
}

uint64_t (*DUFoundInEventResult.movieName.modify())()
{
  return j_j__swift_endAccess;
}

void *DUFoundInEventResult.startAddressError.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startAddressError);
  sub_2367BB188();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void DUFoundInEventResult.startAddressError.setter(void *a1)
{
}

uint64_t (*DUFoundInEventResult.startAddressError.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUFoundInEventResult.startAddress.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startAddress);
}

uint64_t DUFoundInEventResult.startAddress.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startAddress);
}

uint64_t (*DUFoundInEventResult.startAddress.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUFoundInEventResult.startAddressComponents.getter()
{
  return sub_236806B5C();
}

uint64_t DUFoundInEventResult.startAddressComponents.setter(uint64_t a1)
{
  return sub_236806C1C(a1, &OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startAddressComponents);
}

uint64_t (*DUFoundInEventResult.startAddressComponents.modify())()
{
  return j_j__swift_endAccess;
}

void *DUFoundInEventResult.endAddressError.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endAddressError);
  sub_2367BB188();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void DUFoundInEventResult.endAddressError.setter(void *a1)
{
}

uint64_t (*DUFoundInEventResult.endAddressError.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUFoundInEventResult.endAddress.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endAddress);
}

uint64_t DUFoundInEventResult.endAddress.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endAddress);
}

uint64_t (*DUFoundInEventResult.endAddress.modify())()
{
  return j_j__swift_endAccess;
}

id sub_2368E931C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  if (a3())
  {
    id v3 = (void *)sub_23697AE5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v3 = 0;
  }
  return v3;
}

uint64_t DUFoundInEventResult.endAddressComponents.getter()
{
  return sub_236806B5C();
}

void sub_2368E93B0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  if (a3) {
    uint64_t v6 = sub_23697AE7C();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = a1;
  a4(v6);
}

uint64_t DUFoundInEventResult.endAddressComponents.setter(uint64_t a1)
{
  return sub_236806C1C(a1, &OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endAddressComponents);
}

uint64_t (*DUFoundInEventResult.endAddressComponents.modify())()
{
  return j_j__swift_endAccess;
}

void *DUFoundInEventResult.startPlaceError.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startPlaceError);
  sub_2367BB188();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void DUFoundInEventResult.startPlaceError.setter(void *a1)
{
}

uint64_t (*DUFoundInEventResult.startPlaceError.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUFoundInEventResult.startPlace.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startPlace);
}

uint64_t DUFoundInEventResult.startPlace.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startPlace);
}

uint64_t (*DUFoundInEventResult.startPlace.modify())()
{
  return j_j__swift_endAccess;
}

void *DUFoundInEventResult.endPlaceError.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endPlaceError);
  sub_2367BB188();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void DUFoundInEventResult.endPlaceError.setter(void *a1)
{
}

uint64_t (*DUFoundInEventResult.endPlaceError.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUFoundInEventResult.endPlace.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endPlace);
}

uint64_t DUFoundInEventResult.endPlace.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endPlace);
}

uint64_t (*DUFoundInEventResult.endPlace.modify())()
{
  return j_j__swift_endAccess;
}

void *DUFoundInEventResult.startDateError.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startDateError);
  sub_2367BB188();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void DUFoundInEventResult.startDateError.setter(void *a1)
{
}

uint64_t (*DUFoundInEventResult.startDateError.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUFoundInEventResult.startDate.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startDate);
}

uint64_t DUFoundInEventResult.startDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startDate);
}

uint64_t (*DUFoundInEventResult.startDate.modify())()
{
  return j_j__swift_endAccess;
}

void *DUFoundInEventResult.endDateError.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endDateError);
  sub_2367BB188();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void DUFoundInEventResult.endDateError.setter(void *a1)
{
}

uint64_t (*DUFoundInEventResult.endDateError.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUFoundInEventResult.endDate.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endDate);
}

uint64_t DUFoundInEventResult.endDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endDate);
}

uint64_t (*DUFoundInEventResult.endDate.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUFoundInEventResult.text.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_text);
}

uint64_t DUFoundInEventResult.text.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_text);
}

uint64_t (*DUFoundInEventResult.text.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUFoundInEventResult.tags.getter()
{
  return sub_236806B5C();
}

uint64_t DUFoundInEventResult.tags.setter(uint64_t a1)
{
  return sub_236806C1C(a1, &OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_tags);
}

uint64_t (*DUFoundInEventResult.tags.modify())()
{
  return j_j__swift_endAccess;
}

id DUFoundInEventResult.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_reservationIdError] = 0;
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_reservationId);
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_reservationNameError] = 0;
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_reservationName);
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_hotelNameError] = 0;
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_hotelName);
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_guestNameError] = 0;
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_guestName);
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_movieNameError] = 0;
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_movieName);
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startAddressError] = 0;
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startAddress);
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startAddressComponents] = 0;
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endAddressError] = 0;
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endAddress);
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endAddressComponents] = 0;
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startPlaceError] = 0;
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startPlace);
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endPlaceError] = 0;
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endPlace);
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startDateError] = 0;
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startDate);
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endDateError] = 0;
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endDate);
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_text);
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_tags] = 0;
  v0[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_detectedEventPolarity] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DUFoundInEventResult();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t sub_2368E9E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2367B7DBC(&qword_26889A228);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_236987050;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  uint64_t v7 = qword_268897F58;
  swift_bridgeObjectRetain();
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_2367D75E8(a3, qword_26889A118);
  unint64_t v10 = 0xD00000000000001CLL;
  if (v9) {
    unint64_t v10 = v8;
  }
  unint64_t v11 = 0x8000000236998B90;
  if (v9) {
    unint64_t v11 = v9;
  }
  *(void *)(inited + 48) = v10;
  *(void *)(inited + 56) = v11;
  return sub_23697AE9C();
}

uint64_t DUFoundInEventResult.protoRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for DocumentUnderstanding_ClientInterface_TaggedCharacterRange(0);
  uint64_t v131 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  sub_2367CAC7C();
  uint64_t v8 = v7 - v6;
  sub_23697A70C();
  unint64_t v9 = (uint64_t *)(a1
                 + *(int *)(type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult(0) + 20));
  if (qword_268897F28 != -1) {
    swift_once();
  }
  *unint64_t v9 = qword_268899F28;
  unint64_t v10 = (unsigned __int8 *)(v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_detectedEventPolarity);
  sub_2367BB188();
  uint64_t v11 = *v10;
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_2368EC45C();
    unint64_t v10 = (unsigned __int8 *)sub_2368EC444();
    uint64_t v12 = swift_retain();
    uint64_t v13 = sub_2368D3BF0(v12);
    sub_2368EC404(v13);
  }
  uint64_t v14 = *v9;
  sub_2367BB248();
  *(unsigned char *)(v14 + 16) = v11;
  uint64_t v15 = (id *)(v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_reservationIdError);
  sub_2367BB188();
  if (*v15)
  {
    sub_2368EC540(*v15);
    sub_2368D22CC();
    if ((sub_2368EC420() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v16 = sub_236899690();
      uint64_t v17 = sub_2368EC4D4(v16);
      sub_2368EC404(v17);
    }
    sub_2368EC4EC();
    sub_2367BB248();
    *(void *)(v2 + 24) = v11;
    *(unsigned char *)(v2 + 32) = (_BYTE)v15;
    *(unsigned char *)(v2 + 33) = 0;
  }
  uint64_t v18 = v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_reservationId;
  sub_2367BB188();
  char v19 = *(void **)(v18 + 8);
  if (v19)
  {
    sub_2368EC528();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v20 = sub_236899690();
      uint64_t v21 = sub_2368EC4D4(v20);
      sub_2368EC404(v21);
    }
    uint64_t v22 = *v9;
    sub_2367BB248();
    *(void *)(v22 + 40) = v11;
    *(void *)(v22 + 48) = v19;
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = (id *)(v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_reservationNameError);
  sub_2367BB188();
  if (*v23)
  {
    sub_2368EC540(*v23);
    sub_2368D22CC();
    if ((sub_2368EC420() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v24 = sub_236899690();
      uint64_t v25 = sub_2368EC4D4(v24);
      sub_2368EC404(v25);
    }
    sub_2368EC4EC();
    sub_2367BB248();
    *(void *)(v2 + 56) = v11;
    *(unsigned char *)(v2 + 64) = (_BYTE)v23;
    *(unsigned char *)(v2 + 65) = 0;
  }
  uint64_t v26 = v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_reservationName;
  sub_2367BB188();
  id v27 = *(void **)(v26 + 8);
  if (v27)
  {
    sub_2368EC528();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v28 = sub_236899690();
      uint64_t v29 = sub_2368EC4D4(v28);
      sub_2368EC404(v29);
    }
    uint64_t v30 = *v9;
    sub_2367BB248();
    *(void *)(v30 + 72) = v11;
    *(void *)(v30 + 80) = v27;
    swift_bridgeObjectRelease();
  }
  id v31 = (id *)(v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_hotelNameError);
  sub_2367BB188();
  if (*v31)
  {
    sub_2368EC540(*v31);
    sub_2368D22CC();
    if ((sub_2368EC420() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v32 = sub_236899690();
      uint64_t v33 = sub_2368EC4D4(v32);
      sub_2368EC404(v33);
    }
    sub_2368EC4EC();
    sub_2367BB248();
    *(void *)(v2 + 296) = v11;
    *(unsigned char *)(v2 + 304) = (_BYTE)v31;
    *(unsigned char *)(v2 + 305) = 0;
  }
  uint64_t v34 = v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_hotelName;
  sub_2367BB188();
  id v35 = *(void **)(v34 + 8);
  if (v35)
  {
    sub_2368EC528();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v36 = sub_236899690();
      uint64_t v37 = sub_2368EC4D4(v36);
      sub_2368EC404(v37);
    }
    uint64_t v38 = *v9;
    sub_2367BB248();
    *(void *)(v38 + 312) = v11;
    *(void *)(v38 + 320) = v35;
    swift_bridgeObjectRelease();
  }
  unsigned int v39 = (id *)(v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_guestNameError);
  sub_2367BB188();
  if (*v39)
  {
    sub_2368EC540(*v39);
    sub_2368D22CC();
    if ((sub_2368EC420() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v40 = sub_236899690();
      uint64_t v41 = sub_2368EC4D4(v40);
      sub_2368EC404(v41);
    }
    sub_2368EC4EC();
    sub_2367BB248();
    *(void *)(v2 + 328) = v11;
    *(unsigned char *)(v2 + 336) = (_BYTE)v39;
    *(unsigned char *)(v2 + 337) = 0;
  }
  uint64_t v42 = v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_guestName;
  sub_2367BB188();
  id v43 = *(void **)(v42 + 8);
  if (v43)
  {
    sub_2368EC528();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v44 = sub_236899690();
      uint64_t v45 = sub_2368EC4D4(v44);
      sub_2368EC404(v45);
    }
    uint64_t v46 = *v9;
    sub_2367BB248();
    *(void *)(v46 + 344) = v11;
    *(void *)(v46 + 352) = v43;
    swift_bridgeObjectRelease();
  }
  id v47 = (id *)(v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_movieNameError);
  sub_2367BB188();
  if (*v47)
  {
    sub_2368EC540(*v47);
    sub_2368D22CC();
    if ((sub_2368EC420() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v48 = sub_236899690();
      uint64_t v49 = sub_2368EC4D4(v48);
      sub_2368EC404(v49);
    }
    sub_2368EC4EC();
    sub_2367BB248();
    *(void *)(v2 + 360) = v11;
    *(unsigned char *)(v2 + 368) = (_BYTE)v47;
    *(unsigned char *)(v2 + 369) = 0;
  }
  uint64_t v50 = v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_movieName;
  sub_2367BB188();
  uint64_t v51 = *(void **)(v50 + 8);
  if (v51)
  {
    sub_2368EC528();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v52 = sub_236899690();
      uint64_t v53 = sub_2368EC4D4(v52);
      sub_2368EC404(v53);
    }
    uint64_t v54 = *v9;
    sub_2367BB248();
    *(void *)(v54 + 376) = v11;
    *(void *)(v54 + 384) = v51;
    swift_bridgeObjectRelease();
  }
  id v55 = (id *)(v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startAddressError);
  sub_2367BB188();
  if (*v55)
  {
    sub_2368EC540(*v55);
    sub_2368D22CC();
    if ((sub_2368EC420() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v56 = sub_236899690();
      uint64_t v57 = sub_2368EC4D4(v56);
      sub_2368EC404(v57);
    }
    sub_2368EC4EC();
    sub_2367BB248();
    *(void *)(v2 + 88) = v11;
    *(unsigned char *)(v2 + 96) = (_BYTE)v55;
    *(unsigned char *)(v2 + 97) = 0;
  }
  uint64_t v58 = v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startAddress;
  sub_2367BB188();
  uint64_t v59 = *(void *)(v58 + 8);
  if (v59)
  {
    sub_2368EC528();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v60 = sub_236899690();
      uint64_t v61 = sub_2368EC4D4(v60);
      sub_2368EC404(v61);
    }
    uint64_t v62 = *v9;
    sub_2367BB248();
    *(void *)(v62 + 104) = v11;
    *(void *)(v62 + 112) = v59;
    swift_bridgeObjectRelease();
  }
  unint64_t v63 = (void **)(v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startAddressComponents);
  sub_2367BB188();
  uint64_t v64 = *v63;
  if (*v63)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v65 = sub_236899690();
      uint64_t v66 = sub_2368EC4D4(v65);
      sub_2368EC404(v66);
    }
    uint64_t v67 = *v9;
    sub_2367BB248();
    *(void *)(v67 + 120) = v64;
    swift_bridgeObjectRelease();
  }
  uint64_t v68 = (id *)(v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endAddressError);
  sub_2367BB188();
  if (*v68)
  {
    sub_2368EC540(*v68);
    sub_2368D22CC();
    if ((sub_2368EC420() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v69 = sub_236899690();
      uint64_t v70 = sub_2368EC4D4(v69);
      sub_2368EC404(v70);
    }
    sub_2368EC4EC();
    sub_2367BB248();
    *(void *)(v2 + 128) = v11;
    *(unsigned char *)(v2 + 136) = (_BYTE)v68;
    *(unsigned char *)(v2 + 137) = 0;
  }
  uint64_t v71 = v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endAddress;
  sub_2367BB188();
  uint64_t v72 = *(void *)(v71 + 8);
  if (v72)
  {
    sub_2368EC528();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v73 = sub_236899690();
      uint64_t v74 = sub_2368EC4D4(v73);
      sub_2368EC404(v74);
    }
    uint64_t v75 = *v9;
    sub_2367BB248();
    *(void *)(v75 + 144) = v11;
    *(void *)(v75 + 152) = v72;
    swift_bridgeObjectRelease();
  }
  unint64_t v76 = (void **)(v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endAddressComponents);
  sub_2367BB188();
  uint64_t v77 = *v76;
  if (*v76)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v78 = sub_236899690();
      uint64_t v79 = sub_2368EC4D4(v78);
      sub_2368EC404(v79);
    }
    uint64_t v80 = *v9;
    sub_2367BB248();
    *(void *)(v80 + 160) = v77;
    swift_bridgeObjectRelease();
  }
  uint64_t v81 = (id *)(v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startPlaceError);
  sub_2367BB188();
  if (*v81)
  {
    sub_2368EC540(*v81);
    sub_2368D22CC();
    if ((sub_2368EC420() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v82 = sub_236899690();
      uint64_t v83 = sub_2368EC4D4(v82);
      sub_2368EC404(v83);
    }
    sub_2368EC4EC();
    sub_2367BB248();
    *(void *)(v2 + 168) = v11;
    *(unsigned char *)(v2 + 176) = (_BYTE)v81;
    *(unsigned char *)(v2 + 177) = 0;
  }
  uint64_t v84 = v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startPlace;
  sub_2367BB188();
  uint64_t v85 = *(void **)(v84 + 8);
  if (v85)
  {
    sub_2368EC528();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v86 = sub_236899690();
      uint64_t v87 = sub_2368EC4D4(v86);
      sub_2368EC404(v87);
    }
    uint64_t v88 = *v9;
    sub_2367BB248();
    *(void *)(v88 + 184) = v11;
    *(void *)(v88 + 192) = v85;
    swift_bridgeObjectRelease();
  }
  int v89 = (id *)(v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endPlaceError);
  sub_2367BB188();
  if (*v89)
  {
    sub_2368EC540(*v89);
    sub_2368D22CC();
    if ((sub_2368EC420() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v90 = sub_236899690();
      uint64_t v91 = sub_2368EC4D4(v90);
      sub_2368EC404(v91);
    }
    sub_2368EC4EC();
    sub_2367BB248();
    *(void *)(v2 + 200) = v11;
    *(unsigned char *)(v2 + 208) = (_BYTE)v89;
    *(unsigned char *)(v2 + 209) = 0;
  }
  uint64_t v92 = v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endPlace;
  sub_2367BB188();
  uint64_t v93 = *(void **)(v92 + 8);
  if (v93)
  {
    sub_2368EC528();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v94 = sub_236899690();
      uint64_t v95 = sub_2368EC4D4(v94);
      sub_2368EC404(v95);
    }
    uint64_t v96 = *v9;
    sub_2367BB248();
    *(void *)(v96 + 216) = v11;
    *(void *)(v96 + 224) = v93;
    swift_bridgeObjectRelease();
  }
  uint64_t v97 = (id *)(v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startDateError);
  sub_2367BB188();
  if (*v97)
  {
    sub_2368EC540(*v97);
    sub_2368D22CC();
    if ((sub_2368EC420() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v98 = sub_236899690();
      uint64_t v99 = sub_2368EC4D4(v98);
      sub_2368EC404(v99);
    }
    sub_2368EC4EC();
    sub_2367BB248();
    *(void *)(v2 + 232) = v11;
    *(unsigned char *)(v2 + 240) = (_BYTE)v97;
    *(unsigned char *)(v2 + 241) = 0;
  }
  uint64_t v100 = v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startDate;
  sub_2367BB188();
  uint64_t v101 = *(void **)(v100 + 8);
  if (v101)
  {
    sub_2368EC528();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v102 = sub_236899690();
      uint64_t v103 = sub_2368EC4D4(v102);
      sub_2368EC404(v103);
    }
    uint64_t v104 = *v9;
    sub_2367BB248();
    *(void *)(v104 + 248) = v11;
    *(void *)(v104 + 256) = v101;
    swift_bridgeObjectRelease();
  }
  uint64_t v105 = (id *)(v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endDateError);
  sub_2367BB188();
  if (*v105)
  {
    sub_2368EC540(*v105);
    sub_2368D22CC();
    if ((sub_2368EC420() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v106 = sub_236899690();
      uint64_t v107 = sub_2368EC4D4(v106);
      sub_2368EC404(v107);
    }
    sub_2368EC4EC();
    sub_2367BB248();
    *(void *)(v2 + 264) = v11;
    *(unsigned char *)(v2 + 272) = (_BYTE)v105;
    *(unsigned char *)(v2 + 273) = 0;
  }
  uint64_t v108 = v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endDate;
  sub_2367BB188();
  uint64_t v109 = *(void *)(v108 + 8);
  if (v109)
  {
    sub_2368EC528();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v110 = sub_236899690();
      uint64_t v111 = sub_2368EC4D4(v110);
      sub_2368EC404(v111);
    }
    uint64_t v112 = *v9;
    sub_2367BB248();
    *(void *)(v112 + 280) = v11;
    *(void *)(v112 + 288) = v109;
    swift_bridgeObjectRelease();
  }
  uint64_t v113 = v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_text;
  sub_2367BB188();
  uint64_t v114 = *(void *)(v113 + 8);
  if (v114)
  {
    sub_2368EC528();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2368EC45C();
      sub_2368EC444();
      uint64_t v115 = sub_236899690();
      uint64_t v116 = sub_2368EC4D4(v115);
      sub_2368EC404(v116);
    }
    uint64_t v117 = *v9;
    sub_2367BB248();
    *(void *)(v117 + 392) = v11;
    *(void *)(v117 + 400) = v114;
    swift_bridgeObjectRelease();
  }
  uint64_t v118 = (unint64_t *)(v3 + OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_tags);
  uint64_t result = sub_2367BB188();
  unint64_t v120 = *v118;
  if (*v118)
  {
    if (v120 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v121 = sub_23697B7FC();
      if (v121) {
        goto LABEL_108;
      }
    }
    else
    {
      uint64_t v121 = *(void *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v121)
      {
LABEL_108:
        uint64_t v132 = MEMORY[0x263F8EE78];
        uint64_t result = sub_2368C6EC4(0, v121 & ~(v121 >> 63), 0);
        if (v121 < 0)
        {
          __break(1u);
          return result;
        }
        uint64_t v122 = 0;
        uint64_t v123 = v132;
        unint64_t v130 = v120 & 0xC000000000000001;
        unint64_t v124 = v120;
        do
        {
          if (v130)
          {
            uint64_t v125 = MEMORY[0x237E06BC0](v122, v120);
          }
          else
          {
            uint64_t v125 = *(void *)(v120 + 8 * v122 + 32);
            swift_retain();
          }
          v133[0] = v125;
          sub_2368EACE4(v133, v8);
          swift_release();
          unint64_t v127 = *(void *)(v132 + 16);
          unint64_t v126 = *(void *)(v132 + 24);
          if (v127 >= v126 >> 1) {
            sub_2368C6EC4(v126 > 1, v127 + 1, 1);
          }
          ++v122;
          *(void *)(v132 + 16) = v127 + 1;
          sub_2368EC2F4(v8, v132+ ((*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80))+ *(void *)(v131 + 72) * v127, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_TaggedCharacterRange);
          unint64_t v120 = v124;
        }
        while (v121 != v122);
        swift_bridgeObjectRelease();
        goto LABEL_119;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v123 = MEMORY[0x263F8EE78];
LABEL_119:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult._StorageClass();
      sub_2368EC444();
      sub_23683AC24();
      uint64_t v128 = swift_retain();
      *unint64_t v9 = sub_2368D3BF0(v128);
      swift_release();
    }
    uint64_t v129 = *v9;
    sub_2367BB248();
    *(void *)(v129 + 408) = v123;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2368EACE4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for DocumentUnderstanding_ClientInterface_TaggedCharacterRange(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)*a1;
  sub_23697A70C();
  swift_beginAccess();
  sub_2368D202C();
  if ((v10 & 0x100) != 0) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = v9;
  }
  *(void *)uint64_t v7 = v11;
  v7[8] = (v10 & 0x101) != 0;
  swift_beginAccess();
  uint64_t v12 = v8[4];
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (v13)
  {
    uint64_t v21 = a2;
    uint64_t v23 = v2;
    uint64_t v22 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_2368C6F84();
    uint64_t v15 = 0;
    uint64_t v14 = v22;
    unint64_t v16 = *(void *)(v22 + 16);
    do
    {
      uint64_t v17 = *(void *)(v12 + 8 * v15 + 32);
      uint64_t v22 = v14;
      if (v16 >= *(void *)(v14 + 24) >> 1)
      {
        sub_2368C6F84();
        uint64_t v14 = v22;
      }
      ++v15;
      *(void *)(v14 + 16) = v16 + 1;
      *(void *)(v14 + 8 * v16++ + 32) = v17;
    }
    while (v13 != v15);
    swift_bridgeObjectRelease();
    a2 = v21;
  }
  *((void *)v7 + 3) = v14;
  swift_beginAccess();
  *((void *)v7 + 2) = v8[3];
  swift_beginAccess();
  uint64_t v18 = v8[6];
  *((void *)v7 + 4) = v8[5];
  *((void *)v7 + 5) = v18;
  sub_2368EC2F4((uint64_t)v7, a2, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_TaggedCharacterRange);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t DUFoundInEventResult.copy(with:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult(0);
  MEMORY[0x270FA5388](v3 - 8);
  sub_2367CBF80();
  type metadata accessor for DUFoundInEventResult();
  DUFoundInEventResult.protoRepresentation.getter(v1);
  uint64_t v4 = sub_23680D6FC(v1);
  uint64_t result = sub_2367B7DBC(&qword_26889A1F8);
  a1[3] = result;
  *a1 = v4;
  return result;
}

id sub_2368EAFEC()
{
  type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult(0);
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v0);
  sub_2367CAC7C();
  uint64_t v3 = v2 - v1;
  DUFoundInEventResult.protoRepresentation.getter(v2 - v1);
  sub_2368EC3BC(&qword_268898388, 255, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult);
  uint64_t v4 = sub_23697A8BC();
  unint64_t v6 = v5;
  sub_2368EC1BC(v3);
  sub_2367CA9F8(0, (unint64_t *)&qword_2688998A0);
  return sub_2368E77FC(v4, v6);
}

Swift::Void __swiftcall DUFoundInEventResult.encode(with:)(NSCoder with)
{
  id v2 = sub_2368EAFEC();
  if (v2)
  {
    id v3 = v2;
    id v4 = (id)sub_23697AF3C();
    [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];
  }
}

uint64_t DUFoundInEventResult.__allocating_init(coder:)()
{
  id v1 = objc_allocWithZone(v0);
  return DUFoundInEventResult.init(coder:)();
}

uint64_t DUFoundInEventResult.init(coder:)()
{
  sub_23683AC24();
  swift_getObjectType();
  sub_2367CA9F8(0, (unint64_t *)&qword_2688998A0);
  id v2 = v0;
  if (!sub_23697B47C())
  {

    goto LABEL_5;
  }
  swift_getObjectType();

  sub_2368EC3BC(&qword_26889A200, v3, (void (*)(uint64_t))type metadata accessor for DUFoundInEventResult);
  sub_23697AB8C();

  uint64_t v4 = v6;
  if (!v6)
  {
LABEL_5:
    swift_getObjectType();
    sub_2368EC910();
    return 0;
  }
  swift_getObjectType();
  sub_2368EC910();
  return v4;
}

id DUFoundInEventResult.__allocating_init(foundInEventResult:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return DUFoundInEventResult.init(foundInEventResult:)(a1);
}

id DUFoundInEventResult.init(foundInEventResult:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_reservationIdError] = 0;
  id v3 = &v1[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_reservationId];
  *(void *)id v3 = 0;
  *((void *)v3 + 1) = 0;
  uint64_t v4 = (void **)&v1[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_reservationNameError];
  *(void *)&v1[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_reservationNameError] = 0;
  unint64_t v5 = &v1[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_reservationName];
  *(void *)unint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  *(void *)&v1[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_hotelNameError] = 0;
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_hotelName);
  *(void *)&v1[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_guestNameError] = 0;
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_guestName);
  uint64_t v58 = &v1[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_movieNameError];
  *(void *)&v1[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_movieNameError] = 0;
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_movieName);
  uint64_t v59 = v6;
  uint64_t v7 = (void **)&v1[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startAddressError];
  *(void *)&v1[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startAddressError] = 0;
  uint64_t v8 = &v1[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startAddress];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  uint64_t v9 = &v1[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startAddressComponents];
  *(void *)&v1[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startAddressComponents] = 0;
  *(void *)&v1[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endAddressError] = 0;
  __int16 v10 = &v1[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endAddress];
  *(void *)__int16 v10 = 0;
  *((void *)v10 + 1) = 0;
  uint64_t v56 = &v1[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endAddressComponents];
  *(void *)&v1[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endAddressComponents] = 0;
  *(void *)&v1[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startPlaceError] = 0;
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startPlace);
  *(void *)&v1[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endPlaceError] = 0;
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endPlace);
  *(void *)&v1[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startDateError] = 0;
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_startDate);
  *(void *)&v1[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endDateError] = 0;
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_endDate);
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_text);
  *(void *)&v1[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_tags] = 0;
  uint64_t v11 = v1;
  unsigned __int8 v12 = objc_msgSend(a1, sel_detectedEventPolarity);
  uint64_t v57 = v11;
  v11[OBJC_IVAR____TtC21DocumentUnderstanding20DUFoundInEventResult_detectedEventPolarity] = v12;
  id v13 = objc_msgSend(a1, sel_reservationIdError);
  if (v13)
  {
    id v73 = v13;
    sub_2367B7DBC(qword_26AD89030);
    sub_2367CA9F8(0, &qword_26889A208);
    sub_2368EC628();
    sub_2368EC5F4();
  }
  sub_2367BB248();
  sub_2368103B4();
  id v14 = a1;
  uint64_t v15 = sub_2368EC28C(v14, (SEL *)&selRef_reservationId);
  uint64_t v17 = v16;
  sub_2367BB248();
  *(void *)id v3 = v15;
  *((void *)v3 + 1) = v17;
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v14, sel_reservationNameError);
  if (v18)
  {
    id v72 = v18;
    sub_2367B7DBC(qword_26AD89030);
    sub_2367CA9F8(0, &qword_26889A208);
    if (swift_dynamicCast()) {
      char v19 = v71;
    }
    else {
      char v19 = 0;
    }
  }
  else
  {
    char v19 = 0;
  }
  sub_2367BB248();
  uint64_t v20 = *v4;
  *uint64_t v4 = v19;

  id v21 = v14;
  uint64_t v22 = sub_2368EC28C(v21, (SEL *)&selRef_reservationName);
  uint64_t v24 = v23;
  sub_2367BB248();
  *(void *)unint64_t v5 = v22;
  *((void *)v5 + 1) = v24;
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(v21, sel_startAddressError);
  if (v25)
  {
    id v70 = v25;
    sub_2367B7DBC(qword_26AD89030);
    sub_2367CA9F8(0, &qword_26889A208);
    if (swift_dynamicCast()) {
      uint64_t v26 = v69;
    }
    else {
      uint64_t v26 = 0;
    }
  }
  else
  {
    uint64_t v26 = 0;
  }
  sub_2367BB248();
  id v27 = *v7;
  char *v7 = v26;

  id v28 = v21;
  sub_2368EC28C(v28, (SEL *)&selRef_startAddress);
  sub_2368EC5DC();
  sub_2367BB248();
  *(void *)uint64_t v8 = v21;
  *((void *)v8 + 1) = v22;
  swift_bridgeObjectRelease();
  id v29 = v28;
  uint64_t v30 = sub_2368EC218(v29, (SEL *)&selRef_startAddressComponents);
  if (v30)
  {
    sub_2368BFC14(v30);
    uint64_t v32 = v31;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = 0;
  }
  sub_2367BB248();
  *(void *)uint64_t v9 = v32;
  swift_bridgeObjectRelease();
  id v33 = objc_msgSend(v29, sel_endAddressError);
  if (v33)
  {
    id v68 = v33;
    sub_2367B7DBC(qword_26AD89030);
    sub_2367CA9F8(0, &qword_26889A208);
    sub_2368EC628();
    sub_2368EC5F4();
  }
  sub_2367BB248();
  sub_2368103B4();
  id v34 = v29;
  sub_2368EC28C(v34, (SEL *)&selRef_endAddress);
  sub_2368EC5DC();
  sub_2367BB248();
  sub_2368EC768();
  id v35 = v34;
  uint64_t v36 = sub_2368EC218(v35, (SEL *)&selRef_endAddressComponents);
  if (v36)
  {
    sub_2368BFC14(v36);
    uint64_t v38 = v37;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = 0;
  }
  sub_2367BB248();
  *(void *)uint64_t v56 = v38;
  swift_bridgeObjectRelease();
  id v39 = objc_msgSend(v35, sel_startPlaceError);
  if (v39)
  {
    id v67 = v39;
    sub_2367B7DBC(qword_26AD89030);
    sub_2367CA9F8(0, &qword_26889A208);
    sub_2368EC628();
    sub_2368EC5F4();
  }
  sub_2367BB248();
  sub_2368103B4();
  id v40 = v35;
  sub_2368EC28C(v40, (SEL *)&selRef_startPlace);
  sub_2368EC5DC();
  sub_2367BB248();
  sub_2368EC768();
  id v41 = objc_msgSend(v40, sel_endPlaceError);
  if (v41)
  {
    id v66 = v41;
    sub_2367B7DBC(qword_26AD89030);
    sub_2367CA9F8(0, &qword_26889A208);
    sub_2368EC628();
    sub_2368EC5F4();
  }
  sub_2367BB248();
  sub_2368103B4();
  id v42 = v40;
  sub_2368EC28C(v42, (SEL *)&selRef_endPlace);
  sub_2368EC5DC();
  sub_2367BB248();
  sub_2368EC768();
  id v43 = objc_msgSend(v42, sel_startDateError);
  if (v43)
  {
    id v65 = v43;
    sub_2367B7DBC(qword_26AD89030);
    sub_2367CA9F8(0, &qword_26889A208);
    sub_2368EC628();
    sub_2368EC5F4();
  }
  sub_2367BB248();
  sub_2368103B4();
  id v44 = v42;
  sub_2368EC28C(v44, (SEL *)&selRef_startDate);
  sub_2368EC5DC();
  sub_2367BB248();
  sub_2368EC768();
  id v45 = objc_msgSend(v44, sel_endDateError);
  if (v45)
  {
    id v64 = v45;
    sub_2367B7DBC(qword_26AD89030);
    sub_2367CA9F8(0, &qword_26889A208);
    sub_2368EC628();
    sub_2368EC5F4();
  }
  sub_2367BB248();
  sub_2368103B4();
  id v46 = v44;
  sub_2368EC28C(v46, (SEL *)&selRef_endDate);
  sub_2368EC5DC();
  sub_2367BB248();
  sub_2368EC768();
  id v47 = objc_msgSend(v46, sel_hotelNameError);
  if (v47)
  {
    id v63 = v47;
    sub_2367B7DBC(qword_26AD89030);
    sub_2367CA9F8(0, &qword_26889A208);
    sub_2368EC628();
    sub_2368EC5F4();
  }
  sub_2367BB248();
  sub_2368103B4();
  id v48 = v46;
  sub_2368EC28C(v48, (SEL *)&selRef_hotelName);
  sub_2368EC5DC();
  sub_2367BB248();
  sub_2368EC768();
  id v49 = objc_msgSend(v48, sel_guestNameError);
  if (v49)
  {
    id v62 = v49;
    sub_2367B7DBC(qword_26AD89030);
    sub_2367CA9F8(0, &qword_26889A208);
    sub_2368EC628();
    sub_2368EC5F4();
  }
  sub_2367BB248();
  sub_2368103B4();
  id v50 = v48;
  sub_2368EC28C(v50, (SEL *)&selRef_guestName);
  sub_2368EC5DC();
  sub_2367BB248();
  sub_2368EC768();
  id v51 = objc_msgSend(v50, sel_movieNameError);
  if (v51)
  {
    id v61 = v51;
    uint64_t v52 = sub_2367B7DBC(qword_26AD89030);
    sub_2367CA9F8(0, &qword_26889A208);
    sub_2368EC628();
    sub_2368EC5F4();
  }
  else
  {
    uint64_t v52 = 0;
  }
  sub_2367BB248();
  sub_2368103B4();
  id v53 = v50;
  sub_2368EC28C(v53, (SEL *)&selRef_movieName);
  sub_2368EC5DC();
  sub_2367BB248();
  *uint64_t v59 = v52;
  v59[1] = (uint64_t)v58;

  swift_bridgeObjectRelease();
  v60.receiver = v57;
  v60.super_class = (Class)type metadata accessor for DUFoundInEventResult();
  id v54 = objc_msgSendSuper2(&v60, sel_init);

  return v54;
}

id DUFoundInEventResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DUFoundInEventResult();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2368EC060@<X0>(uint64_t a1@<X8>)
{
  return DUFoundInEventResult.protoRepresentation.getter(a1);
}

uint64_t sub_2368EC084@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_23680D6FC();
  *a1 = result;
  return result;
}

id sub_2368EC0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)sub_23697AF3C();
  swift_bridgeObjectRelease();
  if (a4)
  {
    uint64_t v8 = (void *)sub_23697AE5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = 0;
  }
  id v9 = objc_msgSend(v4, sel_initWithDomain_code_userInfo_, v7, a3, v8);

  return v9;
}

uint64_t sub_2368EC15C(uint64_t a1)
{
  uint64_t v2 = sub_2367B7DBC(&qword_268898380);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2368EC1BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2368EC218(void *a1, SEL *a2)
{
  id v3 = [a1 *a2];

  if (!v3) {
    return 0;
  }
  uint64_t v4 = sub_23697AE7C();

  return v4;
}

void *sub_2368EC28C(void *a1, SEL *a2)
{
  uint64_t v2 = a1;
  id v3 = [a1 *a2];

  if (!v3) {
    return 0;
  }
  sub_23697AF6C();
  sub_2368EC5DC();

  return v2;
}

uint64_t sub_2368EC2F4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_2367BB1EC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_2368EC354(uint64_t a1)
{
  return MEMORY[0x270FA03F0](a1, &opaque type descriptor for <<opaque return type of DUFoundInEventResult.protoRepresentation>>, 1);
}

uint64_t sub_2368EC370()
{
  return sub_2368EC3BC(&qword_268898388, 255, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult);
}

uint64_t sub_2368EC3BC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2368EC404(uint64_t a1)
{
  *id v1 = a1;
  return swift_release();
}

uint64_t sub_2368EC420()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_2368EC444()
{
  return swift_allocObject();
}

uint64_t sub_2368EC45C()
{
  return type metadata accessor for DocumentUnderstanding_ClientInterface_FoundInEventResult._StorageClass();
}

id sub_2368EC474()
{
  return sub_2368EC0AC(0xD000000000000031, v1, v0, v2);
}

id sub_2368EC4A0()
{
  unint64_t v4 = *(void *)(v0 + 48) | 0x8000000000000000;
  return sub_2368EC0AC(0xD000000000000031, v4, v1, v2);
}

uint64_t sub_2368EC4D4(uint64_t a1)
{
  return sub_2368D3BF0(a1);
}

uint64_t sub_2368EC528()
{
  return swift_bridgeObjectRetain();
}

id sub_2368EC540(void *a1)
{
  return [a1 (SEL)(v1 + 3119)];
}

uint64_t sub_2368EC558()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2368EC594()
{
  return sub_23697B84C();
}

uint64_t sub_2368EC60C()
{
  *uint64_t v2 = v0;
  v2[1] = v1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2368EC628()
{
  return swift_dynamicCast();
}

void sub_2368EC640(uint64_t a1@<X8>)
{
  *(void *)(v2 + a1) |= v1;
  uint64_t v7 = (void *)(*(void *)(v3 + 48) + 16 * v4);
  void *v7 = v5;
  v7[1] = v6;
}

void sub_2368EC664(unint64_t a1@<X8>)
{
  *(void *)(v1 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
}

uint64_t sub_2368EC694(uint64_t a1)
{
  return sub_2368E9E10(a1, 0xE900000000000065, v1);
}

uint64_t sub_2368EC6D0()
{
  *uint64_t v2 = v0;
  v2[1] = v1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2368EC700()
{
  return 1918989427;
}

uint64_t sub_2368EC728()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2368EC768()
{
  *uint64_t v2 = v0;
  v2[1] = v1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2368EC7E0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2368EC7F8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2368EC83C()
{
  sub_236804FAC();
  return v0;
}

void sub_2368EC894()
{
  ++*(void *)(v0 + 16);
}

uint64_t sub_2368EC8DC()
{
  return *(void *)(*(void *)(v1 + 48) + 16 * v0 + 8);
}

uint64_t sub_2368EC910()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_2368EC950()
{
  return swift_dynamicCast();
}

Swift::String *TextUnderstandingDaemonName.unsafeMutableAddressor()
{
  return &TextUnderstandingDaemonName;
}

void sub_2368EC97C(unint64_t a1, uint64_t *a2)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_23697B7FC())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x237E06BC0](v6 - 4, a1) : *(id *)(a1 + 8 * v6);
      uint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      __int16 v10 = v7;
      sub_2368EDD48(&v10, a2);
      if (v2)
      {
        swift_bridgeObjectRelease();

        return;
      }

      ++v6;
      if (v9 == v5) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
}

uint64_t sub_2368ECA88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for DUPoemSpecification();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_26AD8A148;
  *a1 = result;
  return result;
}

uint64_t sub_2368ECAD0()
{
  sub_2367CAB2C();
  v0[13] = v1;
  uint64_t v2 = sub_236979F7C();
  v0[14] = v2;
  sub_2367CAA70(v2);
  v0[15] = v3;
  v0[16] = swift_task_alloc();
  uint64_t v4 = sub_23697AD0C();
  v0[17] = v4;
  sub_2367CAA70(v4);
  v0[18] = v5;
  v0[19] = swift_task_alloc();
  v0[20] = swift_task_alloc();
  v0[21] = swift_task_alloc();
  v0[22] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2368ECBC8, 0, 0);
}

uint64_t sub_2368ECBC8()
{
  v0[11] = MEMORY[0x263F8EE78];
  v0[5] = &type metadata for IntelligencePlatform;
  v0[6] = sub_2368EEF74();
  char v1 = sub_23697A44C();
  sub_2367CBF2C((uint64_t)(v0 + 2));
  if ((v1 & 1) != 0 && (uint64_t v2 = DUDocument.text.getter(), v3))
  {
    uint64_t v4 = v2;
    uint64_t v5 = v3;
    id v6 = objc_allocWithZone(MEMORY[0x263F4E888]);
    id v7 = sub_2368EEE10(v4, v5, (uint64_t)&unk_26E9C76B8, 0);
    v0[23] = v7;
    id v8 = objc_allocWithZone((Class)sub_23697A6CC());
    v0[24] = sub_23697A6BC();
    id v13 = (uint64_t (*)(id))((int)*MEMORY[0x263F4E850] + MEMORY[0x263F4E850]);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[25] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_2368ECEF0;
    return v13(v7);
  }
  else
  {
    sub_2368EEFC0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = sub_2368EEFE0();
    return v12(v11);
  }
}

uint64_t sub_2368ECEF0()
{
  sub_2367CAB2C();
  sub_2367CAA3C();
  sub_2367CAB20();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 208) = v4;
  *(void *)(v2 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v5 = sub_2368ED948;
  }
  else {
    uint64_t v5 = sub_2368ECFD8;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

void sub_2368ECFD8()
{
  uint64_t v103 = v0;
  char v1 = *(void **)(v0 + 208);
  uint64_t v2 = *(void **)(v0 + 184);

  id v3 = objc_msgSend(v1, sel_rankedResults);
  sub_2367CA9F8(0, &qword_26889A250);
  unint64_t v4 = sub_23697B1DC();

  unint64_t v5 = v4;
  unint64_t v90 = v4;
  if (v4 >> 62) {
    goto LABEL_51;
  }
  uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6)
  {
LABEL_45:
    uint64_t v81 = *(void **)(v0 + 208);
    swift_bridgeObjectRelease();

    sub_2368EEFC0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v82 = sub_2368EEFE0();
    v83(v82);
    return;
  }
LABEL_3:
  unint64_t v7 = 0;
  unint64_t v89 = v5 & 0xC000000000000001;
  unint64_t v86 = v5 + 32;
  uint64_t v87 = v5 & 0xFFFFFFFFFFFFFF8;
  uint64_t v99 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 144) + 8);
  uint64_t v92 = (void (**)(uint64_t))(*(void *)(v0 + 120) + 8);
  uint64_t v88 = v6;
  while (1)
  {
    if (v89)
    {
      unint64_t v8 = v7;
      id v9 = (id)MEMORY[0x237E06BC0](v7, v5);
    }
    else
    {
      if (v7 >= *(void *)(v87 + 16)) {
        goto LABEL_50;
      }
      unint64_t v8 = v7;
      id v9 = *(id *)(v86 + 8 * v7);
    }
    __int16 v10 = v9;
    BOOL v11 = __OFADD__(v8, 1);
    unint64_t v12 = v8 + 1;
    if (v11)
    {
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_23697B7FC();
      swift_bridgeObjectRelease();
      unint64_t v5 = v90;
      if (!v6) {
        goto LABEL_45;
      }
      goto LABEL_3;
    }
    unint64_t v91 = v12;
    id v13 = objc_msgSend(v9, sel_span);
    if (v13) {
      break;
    }
LABEL_44:

    unint64_t v7 = v91;
    unint64_t v5 = v90;
    if (v91 == v88) {
      goto LABEL_45;
    }
  }
  uint64_t v14 = v13;
  objc_msgSend(v13, sel_range);
  id v15 = objc_msgSend(v14, sel_text);
  sub_23697AF6C();

  sub_23697B2FC();
  char v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {

    goto LABEL_44;
  }
  id v93 = v14;
  id v18 = objc_msgSend(v10, sel_rankedItems);
  sub_2367CA9F8(0, &qword_26889A258);
  unint64_t v19 = sub_23697B1DC();

  if (!(v19 >> 62))
  {
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v20) {
      goto LABEL_13;
    }
    goto LABEL_43;
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_23697B7FC();
  swift_bridgeObjectRelease();
  if (!v20)
  {
LABEL_43:

    swift_bridgeObjectRelease();
    __int16 v10 = v93;
    goto LABEL_44;
  }
LABEL_13:
  uint64_t v21 = 0;
  uint64_t v97 = v10;
  unint64_t v98 = v19 & 0xC000000000000001;
  uint64_t v95 = v20;
  unint64_t v96 = v19;
  while (2)
  {
    if (v98) {
      id v22 = (id)MEMORY[0x237E06BC0](v21, v19);
    }
    else {
      id v22 = *(id *)(v19 + 8 * v21 + 32);
    }
    uint64_t v23 = v22;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    uint64_t v100 = v21 + 1;
    sub_23697ACFC();
    uint64_t v24 = v23;
    id v25 = sub_23697ACDC();
    os_log_type_t v26 = sub_23697B35C();
    uint64_t v101 = v21;
    if (!os_log_type_enabled(v25, v26))
    {
      uint64_t v33 = *(void *)(v0 + 176);
      uint64_t v34 = *(void *)(v0 + 136);

      uint64_t v32 = *v99;
      (*v99)(v33, v34);
LABEL_22:
      [v24 score];
      if (v35 <= 0.0)
      {
        sub_23697ACFC();
        uint64_t v24 = v24;
        id v62 = sub_23697ACDC();
        os_log_type_t v63 = sub_23697B35C();
        if (os_log_type_enabled(v62, v63))
        {
          uint64_t v64 = swift_slowAlloc();
          v102[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v64 = 136315394;
          uint64_t v65 = sub_2368EEEEC([v24 entityID]);
          if (!v66) {
            goto LABEL_54;
          }
          uint64_t v67 = *(void *)(v0 + 160);
          uint64_t v68 = *(void *)(v0 + 136);
          *(void *)(v64 + 4) = sub_2367D90DC(v65, v66, v102);
          swift_bridgeObjectRelease();

          *(_WORD *)(v64 + 12) = 2048;
          [v24 score];
          *(void *)(v64 + 14) = v69;

          _os_log_impl(&dword_2367AD000, v62, v63, "Ignoring ecr extraction with id %s and score %f", (uint8_t *)v64, 0x16u);
          swift_arrayDestroy();
          sub_2367CAAA0();
          sub_2367CAAA0();

          uint64_t v70 = v67;
          uint64_t v71 = v68;
        }
        else
        {
          uint64_t v72 = *(void *)(v0 + 160);
          uint64_t v73 = *(void *)(v0 + 136);

          uint64_t v70 = v72;
          uint64_t v71 = v73;
        }
        v32(v70, v71);
      }
      else
      {
        uint64_t v94 = v32;
        id v36 = objc_msgSend(v93, sel_text);
        sub_23697AF6C();

        uint64_t v37 = sub_23697B1AC();
        uint64_t v39 = v38;
        uint64_t v41 = v40;
        uint64_t v43 = v42;
        swift_bridgeObjectRelease();
        uint64_t v44 = MEMORY[0x237E064D0](v37, v39, v41, v43);
        uint64_t v46 = v45;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 56) = v44;
        *(void *)(v0 + 64) = v46;
        sub_236979F4C();
        sub_2367CA700();
        uint64_t v47 = sub_23697B54C();
        uint64_t v49 = v48;
        id v50 = *v92;
        uint64_t v51 = sub_2368EEFF0();
        v50(v51);
        *(void *)(v0 + 72) = v47;
        *(void *)(v0 + 80) = v49;
        sub_236979F5C();
        uint64_t v52 = sub_23697B54C();
        unint64_t v54 = v53;
        uint64_t v55 = sub_2368EEFF0();
        v50(v55);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v56 = HIBYTE(v54) & 0xF;
        if ((v54 & 0x2000000000000000) == 0) {
          uint64_t v56 = v52 & 0xFFFFFFFFFFFFLL;
        }
        if (!v56)
        {
          swift_bridgeObjectRelease();
          sub_23697ACFC();
          uint64_t v75 = sub_23697ACDC();
          os_log_type_t v76 = sub_23697B35C();
          if (os_log_type_enabled(v75, v76))
          {
            uint64_t v77 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v77 = 0;
            _os_log_impl(&dword_2367AD000, v75, v76, "No need to have extractions with empty string", v77, 2u);
            sub_2367CAAA0();
            uint64_t v78 = v24;
          }
          else
          {
            uint64_t v78 = v75;
            uint64_t v75 = v24;
          }
          unint64_t v19 = v96;
          __int16 v10 = v97;
          uint64_t v74 = v95;
          uint64_t v79 = *(void *)(v0 + 168);
          uint64_t v80 = *(void *)(v0 + 136);

          v94(v79, v80);
LABEL_35:
          uint64_t v21 = v101 + 1;
          if (v100 == v74) {
            goto LABEL_43;
          }
          continue;
        }
        uint64_t v57 = sub_2368EEEEC([v24 entityID]);
        uint64_t v59 = v58;
        [v24 score];
        objc_super v60 = (void *)sub_23697B29C();
        sub_2367CA9F8(0, (unint64_t *)&qword_26AD894F0);
        sub_23697B4AC();
        id v61 = objc_allocWithZone(MEMORY[0x263F2A580]);
        sub_2368EF004();
        sub_2368EECF4(0, v52, v54, v57, v59, v60, 0, 0, v84, v85);
        MEMORY[0x237E06690]();
        if (*(void *)((*(void *)(v0 + 88) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 88) & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
          sub_23697B20C();
        sub_23697B22C();
        sub_23697B1FC();
      }
      unint64_t v19 = v96;
      __int16 v10 = v97;
      uint64_t v74 = v95;
      goto LABEL_35;
    }
    break;
  }
  uint64_t v27 = swift_slowAlloc();
  v102[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v27 = 136315138;
  uint64_t v28 = sub_2368EEEEC([v24 entityID]);
  if (v29)
  {
    uint64_t v30 = *(void *)(v0 + 176);
    uint64_t v31 = *(void *)(v0 + 136);
    *(void *)(v27 + 4) = sub_2367D90DC(v28, v29, v102);
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2367AD000, v25, v26, "Found ecr extraction with id %s", (uint8_t *)v27, 0xCu);
    swift_arrayDestroy();
    sub_2367CAAA0();
    sub_2367CAAA0();

    uint64_t v32 = *v99;
    (*v99)(v30, v31);
    goto LABEL_22;
  }

  __break(1u);
LABEL_54:

  __break(1u);
}

uint64_t sub_2368ED948()
{
  char v1 = *(void **)(v0 + 184);

  uint64_t v2 = *(void **)(v0 + 216);
  sub_23697ACFC();
  id v3 = v2;
  id v4 = v2;
  unint64_t v5 = sub_23697ACDC();
  os_log_type_t v6 = sub_23697B36C();
  if (os_log_type_enabled(v5, v6))
  {
    unint64_t v7 = (uint8_t *)swift_slowAlloc();
    unint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v7 = 138412290;
    id v9 = v2;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 96) = v10;
    sub_23697B50C();
    void *v8 = v10;

    _os_log_impl(&dword_2367AD000, v5, v6, "Error while calling ecr: %@", v7, 0xCu);
    sub_2367B7DBC(&qword_26AD8BBC8);
    swift_arrayDestroy();
    sub_2367CAAA0();
    sub_2367CAAA0();
  }
  else
  {
  }
  uint64_t v11 = sub_2368EF018();
  v12(v11);
  sub_2368EEFC0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = sub_2368EEFE0();
  return v14(v13);
}

uint64_t sub_2368EDB24(unint64_t a1)
{
  sub_2367CA9F8(0, &qword_268898618);
  uint64_t v2 = MEMORY[0x263F8EE78];
  uint64_t v16 = sub_23697AE9C();
  sub_2368EC97C(a1, &v16);
  sub_2368B43E4(v16, v17);
  uint64_t v3 = v17[0];
  uint64_t v4 = v17[1];
  int64_t v5 = v17[3];
  unint64_t v6 = v17[4];
  int64_t v7 = (unint64_t)(v17[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  if (!v6) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v10 = v9 | (v5 << 6);
  while (1)
  {
    id v15 = *(id *)(*(void *)(v3 + 56) + 8 * v10);
    MEMORY[0x237E06690]();
    if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_23697B20C();
    }
    sub_23697B22C();
    uint64_t result = sub_23697B1FC();
    if (v6) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v11 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v11 >= v7) {
      goto LABEL_25;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    int64_t v13 = v5 + 1;
    if (!v12)
    {
      int64_t v13 = v5 + 2;
      if (v5 + 2 >= v7) {
        goto LABEL_25;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v5 + 3;
        if (v5 + 3 >= v7) {
          goto LABEL_25;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v5 + 4;
          if (v5 + 4 >= v7) {
            goto LABEL_25;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v5 + 5;
            if (v5 + 5 >= v7) {
              goto LABEL_25;
            }
            unint64_t v12 = *(void *)(v4 + 8 * v13);
            if (!v12)
            {
              int64_t v13 = v5 + 6;
              if (v5 + 6 >= v7) {
                goto LABEL_25;
              }
              unint64_t v12 = *(void *)(v4 + 8 * v13);
              if (!v12)
              {
                int64_t v14 = v5 + 7;
                while (v14 < v7)
                {
                  unint64_t v12 = *(void *)(v4 + 8 * v14++);
                  if (v12)
                  {
                    int64_t v13 = v14 - 1;
                    goto LABEL_20;
                  }
                }
LABEL_25:
                swift_release();
                swift_bridgeObjectRelease_n();
                return v2;
              }
            }
          }
        }
      }
    }
LABEL_20:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v5 = v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_2368EDD48(void **a1, uint64_t *a2)
{
  uint64_t v75 = a2;
  uint64_t v4 = sub_23697AD0C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  int64_t v11 = (char *)&v72 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  int64_t v14 = (char *)&v72 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v72 - v15;
  char v17 = *a1;
  uint64_t result = sub_2367E4CC0(*a1, (SEL *)&selRef_text);
  if (v19)
  {
    uint64_t v20 = HIBYTE(v19) & 0xF;
    if ((v19 & 0x2000000000000000) == 0) {
      uint64_t v20 = result & 0xFFFFFFFFFFFFLL;
    }
    if (!v20)
    {
      swift_bridgeObjectRelease();
      sub_23697ACFC();
      uint64_t v30 = sub_23697ACDC();
      os_log_type_t v31 = sub_23697B36C();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl(&dword_2367AD000, v30, v31, "Found an empty span while filtering", v32, 2u);
        MEMORY[0x237E081F0](v32, -1, -1);
      }

      uint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v28 = v8;
      uint64_t v29 = v4;
      return v27(v28, v29);
    }
    uint64_t v74 = v4;
    uint64_t v21 = sub_23683496C();
    uint64_t v23 = v22;
    swift_bridgeObjectRelease();
    uint64_t v73 = v21;
    if (sub_23697B06C() < 2)
    {
      swift_bridgeObjectRelease();
      sub_23697ACFC();
      uint64_t v24 = sub_23697ACDC();
      os_log_type_t v25 = sub_23697B34C();
      if (os_log_type_enabled(v24, v25))
      {
        os_log_type_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v26 = 0;
        _os_log_impl(&dword_2367AD000, v24, v25, "Discarding span because it's a single character", v26, 2u);
        MEMORY[0x237E081F0](v26, -1, -1);
      }

      uint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v28 = v11;
LABEL_9:
      uint64_t v29 = v74;
      return v27(v28, v29);
    }
    id v33 = objc_allocWithZone(MEMORY[0x263F08770]);
    id v34 = sub_2368EEC40(32);
    if (v2)
    {
      sub_23697ACFC();
      double v35 = sub_23697ACDC();
      os_log_type_t v36 = sub_23697B36C();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v37 = 0;
        _os_log_impl(&dword_2367AD000, v35, v36, "PoemStreamUtilities: Unable to check for URL", v37, 2u);
        MEMORY[0x237E081F0](v37, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v16, v74);
    }
    else
    {
      uint64_t v57 = v34;
      uint64_t v72 = 0;
      uint64_t v58 = (void *)sub_23697AF3C();
      swift_bridgeObjectRetain();
      uint64_t v59 = sub_23697B15C();
      swift_bridgeObjectRelease();
      id v60 = objc_msgSend(v57, sel_matchesInString_options_range_, v58, 0, 0, v59);

      sub_2367CA9F8(0, &qword_26889A248);
      unint64_t v61 = sub_23697B1DC();

      if (v61 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v62 = sub_23697B7FC();

        swift_bridgeObjectRelease_n();
      }
      else
      {
        uint64_t v62 = *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRelease();
      }
      if (v62)
      {
        swift_bridgeObjectRelease();
        sub_23697ACFC();
        os_log_type_t v63 = sub_23697ACDC();
        os_log_type_t v64 = sub_23697B34C();
        if (os_log_type_enabled(v63, v64))
        {
          uint64_t v65 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v65 = 0;
          _os_log_impl(&dword_2367AD000, v63, v64, "Discarding span because it resembles a URL", v65, 2u);
          MEMORY[0x237E081F0](v65, -1, -1);
        }

        uint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
        uint64_t v28 = v14;
        goto LABEL_9;
      }
    }
    uint64_t v38 = v75;
    uint64_t v39 = *v75;
    swift_bridgeObjectRetain();
    uint64_t v40 = v73;
    uint64_t v41 = sub_2367D7820(v73, v23, v39);
    swift_bridgeObjectRelease();

    if (v41)
    {
      uint64_t v42 = *v38;
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_2367D7820(v40, v23, v42);
      swift_bridgeObjectRelease();
      if (v43)
      {
        sub_2367E4CC0(v43, (SEL *)&selRef_identifier);
        uint64_t v45 = v44;
        swift_bridgeObjectRelease();
        if (!v45
          || (sub_2367E4CC0(v17, (SEL *)&selRef_identifier), uint64_t v47 = v46, swift_bridgeObjectRelease(), v47)
          && (objc_msgSend(v17, sel_confidenceScore), double v49 = v48, objc_msgSend(v43, sel_confidenceScore), v50 < v49))
        {
          id v51 = v17;
          sub_236899218((uint64_t)v51, v40, v23, v52, v53, v54, v55, v56, v72, v73);
        }
      }
    }
    else
    {
      id v66 = v17;
      sub_236899218((uint64_t)v66, v40, v23, v67, v68, v69, v70, v71, v72, v73);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2368EE348(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = MEMORY[0x263F8EE78];
  uint64_t v26 = MEMORY[0x263F8EE78];
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_23697B7FC();
    uint64_t v4 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x263F8EE78];
    if ((MEMORY[0x263F8EE78] & 0x8000000000000000) != 0) {
      goto LABEL_30;
    }
LABEL_21:
    if ((v14 & 0x4000000000000000) != 0) {
      goto LABEL_30;
    }
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15) {
      goto LABEL_23;
    }
LABEL_31:
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_20;
  }
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_34;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((a2 & 0xC000000000000001) != 0) {
      uint64_t v7 = (char *)MEMORY[0x237E06BC0](i, a2);
    }
    else {
      uint64_t v7 = (char *)*(id *)(a2 + 8 * i + 32);
    }
    unint64_t v8 = v7;
    uint64_t v10 = *(void *)&v7[OBJC_IVAR____TtC21DocumentUnderstanding16PosTaggingResult_tag];
    uint64_t v9 = *(void *)&v7[OBJC_IVAR____TtC21DocumentUnderstanding16PosTaggingResult_tag + 8];
    if (v10 == sub_23697AF6C() && v9 == v11)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v13 = sub_23697B95C();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {

        continue;
      }
    }
    sub_23697B72C();
    sub_23697B75C();
    sub_23697B76C();
    sub_23697B73C();
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = v26;
  uint64_t v3 = MEMORY[0x263F8EE78];
  if ((v26 & 0x8000000000000000) == 0) {
    goto LABEL_21;
  }
LABEL_30:
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_23697B7FC();
  swift_release();
  if (!v15) {
    goto LABEL_31;
  }
LABEL_23:
  uint64_t result = sub_23697B74C();
  if ((v15 & 0x8000000000000000) == 0)
  {
    sub_2367CA9F8(0, (unint64_t *)&qword_26AD894F0);
    uint64_t v16 = 0;
    do
    {
      if ((v14 & 0xC000000000000001) != 0) {
        char v17 = (char *)MEMORY[0x237E06BC0](v16, v14);
      }
      else {
        char v17 = (char *)*(id *)(v14 + 8 * v16 + 32);
      }
      id v18 = v17;
      ++v16;
      uint64_t v19 = *(void *)&v17[OBJC_IVAR____TtC21DocumentUnderstanding16PosTaggingResult_text];
      uint64_t v20 = *(void *)&v17[OBJC_IVAR____TtC21DocumentUnderstanding16PosTaggingResult_text + 8];
      swift_bridgeObjectRetain();
      uint64_t v21 = (void *)sub_23697B4AC();
      sub_23697B4AC();
      id v22 = objc_allocWithZone(MEMORY[0x263F2A580]);
      sub_2368EF004();
      sub_2368EECF4(1, v19, v20, 0, 0, v21, 0, 0, v24, v25);

      sub_23697B72C();
      sub_23697B75C();
      sub_23697B76C();
      sub_23697B73C();
    }
    while (v15 != v16);
    uint64_t v23 = v3;
    swift_release();
    return v23;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_2368EE658(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x270FA2498](sub_2368EE678, 0, 0);
}

uint64_t sub_2368EE678()
{
  sub_2367CAE2C();
  uint64_t v1 = *(void **)(v0[3] + 24);
  v0[5] = v1;
  if (v1)
  {
    type metadata accessor for DUPosTaggingSpecification();
    v0[6] = swift_allocObject();
    uint64_t v9 = (uint64_t (*)(uint64_t))((char *)&dword_2688987F8 + dword_2688987F8);
    id v2 = v1;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[7] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_2368EE7CC;
    uint64_t v4 = v0[3];
    return v9(v4);
  }
  else
  {
    sub_2367C0470();
    uint64_t v6 = swift_allocError();
    *(void *)uint64_t v7 = 0xD000000000000015;
    *(void *)(v7 + 8) = 0x8000000236991520;
    *(unsigned char *)(v7 + 16) = 0;
    unint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v8(v6, 1);
  }
}

uint64_t sub_2368EE7CC()
{
  sub_2367CAB2C();
  sub_2367CAA3C();
  sub_2367CAB20();
  *id v2 = v1;
  uint64_t v3 = *v0;
  sub_2367CAB20();
  *uint64_t v4 = v3;
  *(void *)(v6 + 64) = v5;
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_2368EE8BC, 0, 0);
}

uint64_t sub_2368EE8BC()
{
  sub_2367CAE2C();
  if (v0[8])
  {
    uint64_t v2 = sub_2368EE348(v1, v0[8]);
    swift_bridgeObjectRelease();
    v0[2] = v2;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[9] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_2368EE9F8;
    return sub_2368ECAD0();
  }
  else
  {
    uint64_t v5 = (void *)v0[5];
    sub_2367C0470();
    uint64_t v6 = swift_allocError();
    *(void *)uint64_t v7 = 0xD000000000000016;
    *(void *)(v7 + 8) = 0x8000000236998CB0;
    *(unsigned char *)(v7 + 16) = 0;

    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v8(v6, 1);
  }
}

uint64_t sub_2368EE9F8()
{
  sub_2367CAB2C();
  sub_2367CAA3C();
  sub_2367CAB20();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 80) = v3;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2368EEACC, 0, 0);
}

uint64_t sub_2368EEACC()
{
  sub_2367CAE2C();
  uint64_t v1 = (void *)v0[5];
  sub_2367D0C2C(v0[10]);
  uint64_t v2 = sub_2368EDB24(v0[2]);

  swift_bridgeObjectRelease();
  uint64_t v3 = (uint64_t (*)(uint64_t, void))v0[1];
  return v3(v2, 0);
}

uint64_t type metadata accessor for DUPoemImplementation()
{
  return self;
}

_UNKNOWN **sub_2368EEB80()
{
  return &off_26AD8A148;
}

uint64_t sub_2368EEB8C@<X0>(uint64_t *a1@<X8>)
{
  return sub_2368ECA88(a1);
}

uint64_t sub_2368EEBA4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_2367C9090;
  return sub_2368EE658(a2);
}

id sub_2368EEC40(uint64_t a1)
{
  v6[1] = *(id *)MEMORY[0x263EF8340];
  v6[0] = 0;
  id v2 = objc_msgSend(v1, sel_initWithTypes_error_, a1, v6);
  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_23697A0FC();

    swift_willThrow();
  }
  return v2;
}

id sub_2368EECF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, unsigned int a9, void *a10)
{
  if (a3)
  {
    uint64_t v15 = (void *)sub_23697AF3C();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = 0;
  }
  if (a5)
  {
    uint64_t v16 = (void *)sub_23697AF3C();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = 0;
  }
  if (a8)
  {
    char v17 = (void *)sub_23697AF3C();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v17 = 0;
  }
  id v18 = objc_msgSend(v10, sel_initWithType_text_identifier_confidenceScore_contactIdentifier_role_isCoref_, a1, v15, v16, a6, v17, a9, a10);

  return v18;
}

id sub_2368EEE10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)sub_23697AF3C();
  swift_bridgeObjectRelease();
  if (!a3)
  {
    uint64_t v8 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v9 = 0;
    goto LABEL_6;
  }
  uint64_t v8 = (void *)sub_23697B1CC();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  sub_2367CA9F8(0, &qword_26889A260);
  uint64_t v9 = (void *)sub_23697B1CC();
  swift_bridgeObjectRelease();
LABEL_6:
  id v10 = objc_msgSend(v4, sel_initWithText_entityClassFilter_spans_, v7, v8, v9);

  return v10;
}

uint64_t sub_2368EEEEC(void *a1)
{
  id v2 = objc_msgSend(a1, sel_stringValue);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_23697AF6C();

  return v3;
}

uint64_t sub_2368EEF5C(void *a1)
{
  return sub_2367E4CC0(a1, (SEL *)&selRef_identifier);
}

uint64_t sub_2368EEF68(void *a1)
{
  return sub_2367E4CC0(a1, (SEL *)&selRef_text);
}

unint64_t sub_2368EEF74()
{
  unint64_t result = qword_26AD8BB58;
  if (!qword_26AD8BB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD8BB58);
  }
  return result;
}

uint64_t sub_2368EEFC0()
{
  return swift_task_dealloc();
}

uint64_t sub_2368EEFE0()
{
  return v0;
}

uint64_t sub_2368EEFF0()
{
  return v0;
}

uint64_t sub_2368EF018()
{
  return *(void *)(v0 + 152);
}

uint64_t VectorRecord.recordID.getter()
{
  return sub_2367BB644();
}

uint64_t VectorRecord.vector.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VectorRecord.associatedData.getter()
{
  sub_2367BAA7C(*(void *)(v0 + 24), *(void *)(v0 + 32));
  return sub_2367BB644();
}

uint64_t VectorRecord.init(recordID:vector:associatedData:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t NeighborRetrievalResult.recordID.getter()
{
  return sub_2367BB644();
}

uint64_t NeighborRetrievalResult.associatedData.getter()
{
  sub_2367BAA7C(*(void *)(v0 + 16), *(void *)(v0 + 24));
  return sub_2367BB644();
}

float NeighborRetrievalResult.distance.getter()
{
  return *(float *)(v0 + 32);
}

uint64_t VectorRetrieval.fetchNeighborsForVector(vector:distanceLimit:countLimit:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t destroy for VectorRecord(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 24);
    return sub_2367B8A20(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for VectorRecord(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = a2[2];
  uint64_t v4 = a2 + 3;
  unint64_t v5 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v4;
  }
  else
  {
    uint64_t v6 = *v4;
    sub_2367B88F0(*v4, v5);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v5;
  }
  return a1;
}

void *assignWithCopy for VectorRecord(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2 + 3;
  unint64_t v5 = a2[4];
  if (a1[4] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_2367B88F0(*v4, v5);
      uint64_t v8 = a1[3];
      unint64_t v9 = a1[4];
      a1[3] = v7;
      a1[4] = v5;
      sub_2367B8A20(v8, v9);
      return a1;
    }
    sub_2367B8D8C((uint64_t)(a1 + 3));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 3) = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  sub_2367B88F0(*v4, v5);
  a1[3] = v6;
  a1[4] = v5;
  return a1;
}

void *assignWithTake for VectorRecord(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  unint64_t v5 = a2 + 3;
  unint64_t v6 = a1[4];
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = a2[4];
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = a1[3];
      a1[3] = *v5;
      a1[4] = v7;
      sub_2367B8A20(v8, v6);
      return a1;
    }
    sub_2367B8D8C((uint64_t)(a1 + 3));
  }
  *(_OWORD *)(a1 + 3) = *(_OWORD *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for VectorRecord(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VectorRecord(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VectorRecord()
{
  return &type metadata for VectorRecord;
}

uint64_t destroy for NeighborRetrievalResult(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 16);
    return sub_2367B8A20(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for NeighborRetrievalResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  unint64_t v5 = (_OWORD *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    uint64_t v7 = *(void *)v5;
    sub_2367B88F0(v7, v6);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v6;
  }
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

uint64_t assignWithCopy for NeighborRetrievalResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t *)(a2 + 16);
  unint64_t v5 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_2367B88F0(*v4, *(void *)(a2 + 24));
      uint64_t v8 = *(void *)(a1 + 16);
      unint64_t v9 = *(void *)(a1 + 24);
      *(void *)(a1 + 16) = v7;
      *(void *)(a1 + 24) = v5;
      sub_2367B8A20(v8, v9);
      goto LABEL_8;
    }
    sub_2367B8D8C(a1 + 16);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  uint64_t v6 = *v4;
  sub_2367B88F0(*v4, *(void *)(a2 + 24));
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v5;
LABEL_8:
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for NeighborRetrievalResult(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for NeighborRetrievalResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  unint64_t v5 = (void *)(a2 + 16);
  unint64_t v6 = *(void *)(a1 + 24);
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = *(void *)(a2 + 24);
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = *v5;
      *(void *)(a1 + 24) = v7;
      sub_2367B8A20(v8, v6);
      goto LABEL_6;
    }
    sub_2367B8D8C(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v5;
LABEL_6:
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for NeighborRetrievalResult(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 36))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NeighborRetrievalResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 36) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 36) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NeighborRetrievalResult()
{
  return &type metadata for NeighborRetrievalResult;
}

uint64_t sub_2368EF6FC(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2367B7DBC(&qword_2688988B8);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for DUStructuredExtractionResult(0);
  uint64_t v22 = *(void *)(v25 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v25);
  uint64_t v24 = (uint64_t)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v21 = (uint64_t)v20 - v9;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; uint64_t v10 = sub_23697B7FC())
  {
    v20[1] = v2;
    unint64_t v23 = a1 & 0xC000000000000001;
    uint64_t v11 = MEMORY[0x263F8EE78];
    uint64_t v12 = 4;
    char v13 = (id *)a1;
    while (1)
    {
      uint64_t v2 = v10;
      uint64_t v14 = v23 ? (id *)MEMORY[0x237E06BC0](v12 - 4, a1) : (id *)*(id *)(a1 + 8 * v12);
      a1 = (unint64_t)v14;
      uint64_t v15 = v12 - 3;
      if (__OFADD__(v12 - 4, 1)) {
        break;
      }
      sub_2368F0348(v14, (uint64_t)v6);

      if (sub_2367B85F8((uint64_t)v6, 1, v25) == 1)
      {
        sub_2367BAA28((uint64_t)v6, &qword_2688988B8);
      }
      else
      {
        uint64_t v16 = v21;
        sub_2368F18DC((uint64_t)v6, v21);
        sub_2368F18DC(v16, v24);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = sub_2367D2354(0, *(void *)(v11 + 16) + 1, 1, v11);
        }
        unint64_t v18 = *(void *)(v11 + 16);
        unint64_t v17 = *(void *)(v11 + 24);
        if (v18 >= v17 >> 1) {
          uint64_t v11 = sub_2367D2354(v17 > 1, v18 + 1, 1, v11);
        }
        *(void *)(v11 + 16) = v18 + 1;
        sub_2368F18DC(v24, v11+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v18);
      }
      a1 = (unint64_t)v13;
      ++v12;
      if (v15 == v10)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return v11;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_2368EF9F4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  return sub_2368EFA34(v3, (uint64_t)a2);
}

uint64_t sub_2368EFA34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  sub_2368F1980((uint64_t)&v3, *(void *)(*(void *)(a1 + 64) + 40), &qword_26889A290);
  return swift_continuation_resume();
}

uint64_t sub_2368EFA90()
{
  sub_2367B7DBC(&qword_26889A228);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23698DD30;
  *(void *)(inited + 32) = sub_23697AF6C();
  *(void *)(inited + 40) = v1;
  *(void *)(inited + 48) = 0x656C746974;
  *(void *)(inited + 56) = 0xE500000000000000;
  *(void *)(inited + 64) = sub_23697AF6C();
  *(void *)(inited + 72) = v2;
  *(void *)(inited + 80) = 0x656E6F6870;
  *(void *)(inited + 88) = 0xE500000000000000;
  *(void *)(inited + 96) = sub_23697AF6C();
  *(void *)(inited + 104) = v3;
  *(void *)(inited + 112) = 0x73736572646461;
  *(void *)(inited + 120) = 0xE700000000000000;
  *(void *)(inited + 128) = sub_23697AF6C();
  *(void *)(inited + 136) = v4;
  *(void *)(inited + 144) = 7107189;
  *(void *)(inited + 152) = 0xE300000000000000;
  *(void *)(inited + 160) = sub_23697AF6C();
  *(void *)(inited + 168) = v5;
  strcpy((char *)(inited + 176), "calendarEvent");
  *(_WORD *)(inited + 190) = -4864;
  *(void *)(inited + 192) = sub_23697AF6C();
  *(void *)(inited + 200) = v6;
  *(void *)(inited + 208) = 0x747865546576696CLL;
  *(void *)(inited + 216) = 0xE800000000000000;
  *(void *)(inited + 224) = sub_23697AF6C();
  *(void *)(inited + 232) = v7;
  *(void *)(inited + 240) = 0x6E6F73726570;
  *(void *)(inited + 248) = 0xE600000000000000;
  *(void *)(inited + 256) = sub_23697AF6C();
  *(void *)(inited + 264) = v8;
  *(void *)(inited + 272) = 0x656D6F486D68;
  *(void *)(inited + 280) = 0xE600000000000000;
  *(void *)(inited + 288) = sub_23697AF6C();
  *(void *)(inited + 296) = v9;
  *(void *)(inited + 304) = 0x6D6F6F526D68;
  *(void *)(inited + 312) = 0xE600000000000000;
  *(void *)(inited + 320) = sub_23697AF6C();
  *(void *)(inited + 328) = v10;
  *(void *)(inited + 336) = 0x7373656363416D68;
  *(void *)(inited + 344) = 0xEB0000000079726FLL;
  uint64_t result = sub_23697AE9C();
  qword_26889A268 = result;
  return result;
}

uint64_t sub_2368EFCA8(uint64_t a1)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = v1;
  return MEMORY[0x270FA2498](sub_2368EFCC8, 0, 0);
}

uint64_t sub_2368EFCC8()
{
  uint64_t v1 = *(void **)(v0[16] + 24);
  v0[18] = v1;
  if (v1)
  {
    type metadata accessor for DUCreateContextRequestSpecification();
    v0[19] = swift_allocObject();
    uint64_t v8 = (uint64_t (*)(uint64_t))((char *)&dword_268898838 + dword_268898838);
    id v2 = v1;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[20] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_2368EFE0C;
    uint64_t v4 = v0[16];
    return v8(v4);
  }
  else
  {
    sub_2367C0470();
    sub_2367CAA88();
    sub_2367CAF08(v6, 0xD000000000000015);
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_2368EFE0C()
{
  sub_2367CAA3C();
  uint64_t v1 = *v0;
  sub_2367E5358();
  *id v2 = v1;
  *(void *)(v4 + 168) = v3;
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_2368EFF00, 0, 0);
}

uint64_t sub_2368EFF00()
{
  uint64_t v1 = (void *)v0[21];
  if (v1)
  {
    id v2 = v1;
    sub_2368F16DC(v2);
    uint64_t v4 = v3;
    swift_bridgeObjectRelease();
    if (v4)
    {
LABEL_5:
      objc_msgSend(v2, sel_setIncludeStructuredExtractionResults_, 1);
      v0[2] = v0;
      v0[7] = v0 + 15;
      v0[3] = sub_2368F014C;
      uint64_t v6 = swift_continuation_init();
      v0[10] = MEMORY[0x263EF8330];
      v0[11] = 0x40000000;
      v0[12] = sub_2368EF9F4;
      v0[13] = &unk_264CB4148;
      v0[14] = v6;
      objc_msgSend(v2, sel_executeWithReply_, v0 + 10);
      return MEMORY[0x270FA23F0](v0 + 2);
    }
    id v5 = objc_msgSend(v2, sel_uiElements);
    if (v5)
    {

      goto LABEL_5;
    }
    DUDocument.text.getter();
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    if (!v12)
    {
      uint64_t v13 = DUDocument.documentUIElements.getter();
      swift_bridgeObjectRelease();
      if (!v13)
      {
        objc_msgSend(v2, sel_setType_, 10);
        goto LABEL_5;
      }
    }
    uint64_t v7 = (void *)v0[18];
    sub_2367C0470();
    uint64_t v8 = sub_2367CAA88();
    sub_2367CAF08(v14, 0xD000000000000037);
  }
  else
  {
    uint64_t v7 = (void *)v0[18];
    sub_2367C0470();
    uint64_t v8 = sub_2367CAA88();
    *(void *)uint64_t v9 = 0xD00000000000002FLL;
    *(void *)(v9 + 8) = 0x8000000236991C30;
    *(unsigned char *)(v9 + 16) = 0;
  }

  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v10(v8, 1);
}

uint64_t sub_2368F014C()
{
  uint64_t v1 = *v0;
  sub_2367E5358();
  *id v2 = v1;
  return MEMORY[0x270FA2498](sub_2368F0224, 0, 0);
}

uint64_t sub_2368F0224()
{
  uint64_t v1 = (void *)v0[15];
  if (v1 && (v2 = v1, (uint64_t v3 = sub_2368F1674(v2)) != 0))
  {
    unint64_t v4 = v3;
    id v5 = (void *)v0[21];
    uint64_t v6 = (void *)v0[18];
    swift_retain();
    uint64_t v7 = sub_2368EF6FC(v4);

    swift_bridgeObjectRelease();
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v9 = (void *)v0[21];
    uint64_t v10 = (void *)v0[18];
    sub_2367C0470();
    uint64_t v7 = sub_2367CAA88();
    *(void *)uint64_t v11 = 0xD000000000000027;
    *(void *)(v11 + 8) = 0x8000000236993FD0;
    uint64_t v8 = 1;
    *(unsigned char *)(v11 + 16) = 1;
  }
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v12(v7, v8);
}

uint64_t sub_2368F0348@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CalendarEvent(0);
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v5);
  sub_2367BB260();
  uint64_t v155 = v6;
  uint64_t v7 = sub_2367B7DBC(&qword_26AD89410);
  MEMORY[0x270FA5388](v7 - 8);
  sub_2367BB610();
  uint64_t v156 = v8;
  sub_2367D9914();
  MEMORY[0x270FA5388](v9);
  uint64_t v154 = (uint64_t)&v145 - v10;
  sub_2367D9914();
  MEMORY[0x270FA5388](v11);
  uint64_t v159 = (char *)&v145 - v12;
  sub_23697A0AC();
  sub_2367CAA54();
  uint64_t v160 = v13;
  uint64_t v161 = v14;
  MEMORY[0x270FA5388](v13);
  sub_2367BB610();
  uint64_t v157 = v15;
  sub_2367D9914();
  MEMORY[0x270FA5388](v16);
  uint64_t v158 = (char *)&v145 - v17;
  uint64_t v167 = sub_23697A1CC();
  sub_2367CAA54();
  uint64_t v164 = v18;
  MEMORY[0x270FA5388](v19);
  sub_2367BB260();
  uint64_t v163 = v20;
  uint64_t v21 = sub_2367B7DBC(&qword_26AD89538);
  MEMORY[0x270FA5388](v21 - 8);
  sub_2367BB610();
  uint64_t v162 = v22;
  sub_2367D9914();
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v145 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v166 = (uint64_t)&v145 - v27;
  uint64_t v28 = (int *)type metadata accessor for DUStructuredExtractionResult(0);
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v29);
  os_log_type_t v31 = (char *)&v145 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_2368F1758(a1);
  if (v32)
  {
    uint64_t v33 = v32;
    if (qword_268897F60 != -1) {
      swift_once();
    }
    uint64_t v34 = swift_bridgeObjectRetain();
    uint64_t v35 = sub_2368F0F58(v34, v33);
    swift_bridgeObjectRelease();
    uint64_t v36 = sub_236906894(v35);
    uint64_t v38 = v37;
    swift_release();
    if (v38)
    {
      uint64_t v39 = sub_2367D7600(v36, v38, qword_26889A268);
      uint64_t v41 = v40;
      swift_bridgeObjectRelease();
      if (v41)
      {
        uint64_t v151 = v26;
        uint64_t v153 = a2;
        id v42 = objc_msgSend(a1, sel_title);
        uint64_t v43 = v4;
        uint64_t v44 = sub_23697AF6C();
        uint64_t v45 = v39;
        uint64_t v47 = v46;

        *((_OWORD *)v31 + 4) = 0u;
        *((_OWORD *)v31 + 5) = 0u;
        *((_OWORD *)v31 + 3) = 0u;
        id v149 = &v31[v28[10]];
        sub_2367E5120();
        sub_2367B7028(v48, v49, v50, v167);
        uint64_t v150 = v28[11];
        *(void *)&v31[v150] = 0;
        uint64_t v146 = &v31[v28[12]];
        sub_2367E5120();
        uint64_t v147 = v43;
        sub_2367B7028(v51, v52, v53, v43);
        uint64_t v54 = &v31[v28[13]];
        *(void *)uint64_t v54 = 0;
        *((void *)v54 + 1) = 0;
        id v148 = (uint64_t *)v54;
        uint64_t v55 = &v31[v28[14]];
        uint64_t v56 = &v31[v28[15]];
        uint64_t v57 = a1;
        uint64_t v152 = v28;
        uint64_t v58 = v28[16];
        *(void *)os_log_type_t v31 = v44;
        *((void *)v31 + 1) = v47;
        *((void *)v31 + 2) = v45;
        *((void *)v31 + 3) = v41;
        swift_bridgeObjectRetain();
        *((void *)v31 + 4) = sub_2367E4CC0(v57, (SEL *)&selRef_category);
        *((void *)v31 + 5) = v59;
        objc_msgSend(v57, sel_frameInWindow);
        *(void *)uint64_t v55 = v60;
        *((void *)v55 + 1) = v61;
        *((void *)v55 + 2) = v62;
        *((void *)v55 + 3) = v63;
        objc_msgSend(v57, sel_absoluteOriginOnScreen);
        *(void *)uint64_t v56 = v64;
        *((void *)v56 + 1) = v65;
        id v66 = v57;
        v31[v58] = objc_msgSend(v57, sel_isOnScreen);
        BOOL v67 = v45 == 0x656E6F6870 && v41 == 0xE500000000000000;
        if (v67 || (sub_2368F19D4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          id v68 = objc_msgSend(v57, sel_title);
          uint64_t v69 = sub_23697AF6C();
          uint64_t v71 = v70;

          *((void *)v31 + 6) = v69;
          *((void *)v31 + 7) = v71;
          uint64_t v72 = (uint64_t)v152;
LABEL_12:
          sub_2368F17B8((uint64_t)v31, v153, (void (*)(void))type metadata accessor for DUStructuredExtractionResult);
          uint64_t v73 = sub_2368F19F0();
          sub_2367B7028(v73, v74, v75, v72);
          uint64_t v76 = (uint64_t)v31;
          return sub_2368F1810(v76, (void (*)(void))type metadata accessor for DUStructuredExtractionResult);
        }
        BOOL v78 = v45 == 7107189 && v41 == 0xE300000000000000;
        uint64_t v79 = (uint64_t)v151;
        if (v78 || (sub_2368F19D4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          id v80 = [v57 url];
          uint64_t v72 = (uint64_t)v152;
          uint64_t v81 = v153;
          if (v80)
          {
            uint64_t v82 = v80;
            sub_23697A17C();

            uint64_t v83 = 0;
          }
          else
          {
            uint64_t v83 = 1;
          }
          uint64_t v84 = v167;
          sub_2367B7028(v79, v83, 1, v167);
          uint64_t v85 = v79;
          uint64_t v86 = v166;
          sub_2368F1980(v85, v166, &qword_26AD89538);
          if (!sub_2367B85F8(v86, 1, v84))
          {
            uint64_t v88 = v163;
            uint64_t v89 = v164;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v164 + 16))(v163, v86, v84);
            sub_2367BAA28(v86, &qword_26AD89538);
            uint64_t v90 = sub_23697A12C();
            uint64_t v92 = v91;
            (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v88, v84);
            uint64_t v170 = v90;
            uint64_t v171 = v92;
            uint64_t v93 = *(void *)(v165 + 24);
            uint64_t v168 = *(void *)(v165 + 16);
            uint64_t v169 = v93;
            sub_2367CA914();
            sub_2367CA960();
            LOBYTE(v88) = sub_23697AECC();
            swift_bridgeObjectRelease();
            if (v88)
            {
              uint64_t v95 = *(void *)v31;
              uint64_t v94 = *((void *)v31 + 1);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *((void *)v31 + 10) = v95;
              *((void *)v31 + 11) = v94;
            }
            else
            {
              id v98 = [v66 url];
              if (v98)
              {
                uint64_t v99 = v98;
                uint64_t v100 = v162;
                sub_23697A17C();

                uint64_t v101 = 0;
              }
              else
              {
                uint64_t v101 = 1;
                uint64_t v100 = v162;
              }
              sub_2367B7028(v100, v101, 1, v84);
              sub_2367BAB2C(v100, (uint64_t)v149, &qword_26AD89538);
            }
            goto LABEL_12;
          }
          sub_2367BAA28(v86, &qword_26AD89538);
          uint64_t v87 = v81;
        }
        else
        {
          BOOL v96 = v45 == 0x73736572646461 && v41 == 0xE700000000000000;
          uint64_t v72 = (uint64_t)v152;
          if (v96 || (sub_2368F19D4() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v97 = sub_2368F1868(v57);
            *(void *)&v31[v150] = v97;
            goto LABEL_12;
          }
          BOOL v102 = v45 == 0x7261646E656C6163 && v41 == 0xED0000746E657645;
          if (!v102 && (sub_2368F19D4() & 1) == 0)
          {
            BOOL v123 = v45 == 0x6D6F6F526D68 && v41 == 0xE600000000000000;
            if (v123
              || ((v124 = sub_2368F19D4(), v45 == 0x656D6F486D68) ? (BOOL v125 = v41 == 0xE600000000000000) : (BOOL v125 = 0),
                  !v125 ? (char v126 = 0) : (char v126 = 1),
                  (v124 & 1) != 0
               || (v126 & 1) != 0
               || (sub_2368F19D4() & 1) != 0
               || (v45 == 0x7373656363416D68 ? (BOOL v127 = v41 == 0xEB0000000079726FLL) : (BOOL v127 = 0), v127)))
            {
              swift_bridgeObjectRelease();
              uint64_t v72 = (uint64_t)v152;
            }
            else
            {
              char v128 = sub_2368F19D4();
              swift_bridgeObjectRelease();
              uint64_t v72 = (uint64_t)v152;
              if ((v128 & 1) == 0) {
                goto LABEL_12;
              }
            }
            uint64_t v129 = sub_2367E4CC0(v57, (SEL *)&selRef_topicId);
            unint64_t v130 = v148;
            *id v148 = v129;
            v130[1] = v131;
            goto LABEL_12;
          }
          swift_bridgeObjectRelease_n();
          strcpy(v31 + 16, "calendarEvent");
          *((_WORD *)v31 + 15) = -4864;
          id v103 = objc_msgSend(v57, sel_extractedStartDateComponents);
          if (v103)
          {
            uint64_t v104 = v103;
            uint64_t v105 = v157;
            sub_236979FEC();

            uint64_t v106 = v160;
            uint64_t v107 = v161 + 32;
            uint64_t v108 = *(void (**)(char *, uint64_t, uint64_t))(v161 + 32);
            uint64_t v109 = (uint64_t)v159;
            v108(v159, v105, v160);
            uint64_t v110 = sub_2368F19F0();
            sub_2367B7028(v110, v111, v112, v106);
            int v113 = sub_2367B85F8(v109, 1, v106);
            uint64_t v72 = (uint64_t)v152;
            if (v113 != 1)
            {
              uint64_t v161 = v107;
              v108(v158, v109, v106);
              id v114 = objc_msgSend(v57, sel_extractedEndDateComponents);
              if (v114)
              {
                uint64_t v115 = v114;
                uint64_t v116 = v156;
                sub_236979FEC();

                uint64_t v117 = 0;
                uint64_t v118 = v147;
              }
              else
              {
                uint64_t v117 = 1;
                uint64_t v118 = v147;
                uint64_t v116 = v156;
              }
              sub_2367B7028(v116, v117, 1, v106);
              uint64_t v132 = v154;
              sub_2368F1980(v116, v154, &qword_26AD89410);
              uint64_t v133 = v158;
              sub_23697A04C();
              char v135 = v134;
              char v136 = v155;
              v108((char *)&v155[*(int *)(v118 + 20)], (uint64_t)v133, v106);
              uint64_t v137 = (uint64_t)&v136[*(int *)(v118 + 24)];
              sub_2367E5120();
              sub_2367B7028(v138, v139, v140, v106);
              BOOL *v136 = (v135 & 1) == 0;
              sub_2367BAB2C(v132, v137, &qword_26AD89410);
              uint64_t v141 = (uint64_t)v146;
              sub_2367BAA28((uint64_t)v146, &qword_26AD89460);
              sub_2368F17B8((uint64_t)v136, v141, (void (*)(void))type metadata accessor for CalendarEvent);
              uint64_t v142 = sub_2368F19F0();
              sub_2367B7028(v142, v143, v144, v118);
              sub_2368F1810((uint64_t)v136, (void (*)(void))type metadata accessor for CalendarEvent);
              goto LABEL_12;
            }
          }
          else
          {
            uint64_t v109 = (uint64_t)v159;
            sub_2367E5120();
            sub_2367B7028(v119, v120, v121, v122);
            uint64_t v72 = (uint64_t)v152;
          }
          sub_2367BAA28(v109, &qword_26AD89410);
          uint64_t v87 = v153;
        }
        sub_2367B7028(v87, 1, 1, v72);
        uint64_t v76 = (uint64_t)v31;
        return sub_2368F1810(v76, (void (*)(void))type metadata accessor for DUStructuredExtractionResult);
      }
    }
  }
  return sub_2367B7028(a2, 1, 1, (uint64_t)v28);
}

uint64_t sub_2368F0E60()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 32, 7);
}

uint64_t type metadata accessor for DUStructuredExtractionContextKitImplementation()
{
  return self;
}

uint64_t sub_2368F0EBC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_2367E3D10;
  return sub_2368EFCA8(a2);
}

uint64_t sub_2368F0F58(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x263EF8340];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    uint64_t v6 = (void *)((char *)v10 - ((8 * v5 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_23690B708(0, v5, v6);
    uint64_t v7 = sub_2368F10EC(v6, v5, v3, a2);
    swift_release();
  }
  else
  {
    uint64_t v8 = (unint64_t *)swift_slowAlloc();
    sub_23690B708(0, v5, v8);
    uint64_t v7 = sub_2368F10EC(v8, v5, v3, a2);
    swift_release();
    MEMORY[0x237E081F0](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_2368F10EC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2368B43E4(a3, v38);
  uint64_t v36 = v38[0];
  int64_t v37 = v38[3];
  unint64_t v5 = v38[4];
  uint64_t v34 = v38[1];
  int64_t v35 = (unint64_t)(v38[2] + 64) >> 6;
  uint64_t v39 = a4 + 56;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v7 = 0;
LABEL_2:
  uint64_t v32 = v7;
  while (1)
  {
    if (v5)
    {
      unint64_t v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v9 = v8 | (v37 << 6);
      goto LABEL_21;
    }
    int64_t v10 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    if (v10 >= v35) {
      goto LABEL_43;
    }
    unint64_t v11 = *(void *)(v34 + 8 * v10);
    int64_t v12 = v37 + 1;
    if (!v11)
    {
      int64_t v12 = v37 + 2;
      if (v37 + 2 >= v35) {
        goto LABEL_43;
      }
      unint64_t v11 = *(void *)(v34 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v37 + 3;
        if (v37 + 3 >= v35) {
          goto LABEL_43;
        }
        unint64_t v11 = *(void *)(v34 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v37 + 4;
          if (v37 + 4 >= v35) {
            goto LABEL_43;
          }
          unint64_t v11 = *(void *)(v34 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v37 + 5;
            if (v37 + 5 >= v35) {
              goto LABEL_43;
            }
            unint64_t v11 = *(void *)(v34 + 8 * v12);
            if (!v11)
            {
              int64_t v13 = v37 + 6;
              while (v13 < v35)
              {
                unint64_t v11 = *(void *)(v34 + 8 * v13++);
                if (v11)
                {
                  int64_t v12 = v13 - 1;
                  goto LABEL_20;
                }
              }
LABEL_43:
              swift_release();
              swift_retain();
              return sub_2368F13E4(a1, a2, v32, a4);
            }
          }
        }
      }
    }
LABEL_20:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    int64_t v37 = v12;
LABEL_21:
    uint64_t v14 = (uint64_t *)(*(void *)(v36 + 48) + 16 * v9);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    sub_23697BA2C();
    swift_bridgeObjectRetain();
    sub_23697B04C();
    uint64_t v17 = sub_23697BA4C();
    uint64_t v18 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v19 = v17 & ~v18;
    unint64_t v20 = v19 >> 6;
    uint64_t v21 = 1 << v19;
    if (((1 << v19) & *(void *)(v39 + 8 * (v19 >> 6))) == 0) {
      goto LABEL_38;
    }
    uint64_t v22 = *(void *)(a4 + 48);
    uint64_t v23 = (void *)(v22 + 16 * v19);
    BOOL v24 = *v23 == v16 && v23[1] == v15;
    if (v24 || (sub_23697B95C() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
LABEL_28:
      unint64_t v25 = a1[v20];
      a1[v20] = v21 | v25;
      if ((v21 & v25) == 0)
      {
        uint64_t v7 = v32 + 1;
        if (!__OFADD__(v32, 1)) {
          goto LABEL_2;
        }
        __break(1u);
        goto LABEL_43;
      }
    }
    else
    {
      uint64_t v26 = ~v18;
      for (unint64_t i = v19 + 1; ; unint64_t i = v28 + 1)
      {
        unint64_t v28 = i & v26;
        if (((*(void *)(v39 + (((i & v26) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v26)) & 1) == 0) {
          break;
        }
        uint64_t v29 = (void *)(v22 + 16 * v28);
        BOOL v30 = *v29 == v16 && v29[1] == v15;
        if (v30 || (sub_23697B95C() & 1) != 0)
        {
          uint64_t result = swift_bridgeObjectRelease();
          unint64_t v20 = v28 >> 6;
          uint64_t v21 = 1 << v28;
          goto LABEL_28;
        }
      }
LABEL_38:
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2368F13E4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x263F8EE88];
LABEL_35:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_2367B7DBC(&qword_26889A280);
  uint64_t result = sub_23697B66C();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_35;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_35;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_35;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_23697BA2C();
    swift_bridgeObjectRetain();
    sub_23697B04C();
    uint64_t result = sub_23697BA4C();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    unint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *unint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      goto LABEL_38;
    }
    if (!v5) {
      goto LABEL_35;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_35;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_35;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_2368F1674(void *a1)
{
  id v2 = objc_msgSend(a1, sel_results);

  if (!v2) {
    return 0;
  }
  sub_2368F1940();
  uint64_t v3 = sub_23697B1DC();

  return v3;
}

uint64_t sub_2368F16DC(void *a1)
{
  id v2 = objc_msgSend(a1, sel_text);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_23697AF6C();

  return v3;
}

uint64_t sub_2368F174C(void *a1)
{
  return sub_2367E4CC0(a1, (SEL *)&selRef_topicId);
}

uint64_t sub_2368F1758(void *a1)
{
  id v1 = objc_msgSend(a1, sel_tags);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = sub_23697B2BC();

  return v3;
}

uint64_t sub_2368F17B8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_2367BB1EC();
  uint64_t v4 = sub_2367BB4F4();
  v5(v4);
  return a2;
}

uint64_t sub_2368F1810(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_2367BB1EC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_2368F1868(void *a1)
{
  id v1 = objc_msgSend(a1, sel_extractedAddressComponents);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  type metadata accessor for NSTextCheckingKey(0);
  sub_2367E4D6C();
  uint64_t v3 = sub_23697AE7C();

  return v3;
}

uint64_t sub_2368F18DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DUStructuredExtractionResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2368F1940()
{
  unint64_t result = qword_26889A288;
  if (!qword_26889A288)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26889A288);
  }
  return result;
}

uint64_t sub_2368F1980(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_2367B7DBC(a3);
  sub_2367BB1EC();
  uint64_t v4 = sub_2367BB4F4();
  v5(v4);
  return a2;
}

uint64_t sub_2368F19D4()
{
  return sub_23697B95C();
}

uint64_t sub_2368F19F0()
{
  return v0;
}

uint64_t *sub_2368F1A00(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_23697A71C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    unint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *unint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (uint64_t *)((char *)a1 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    unint64_t v21 = (uint64_t *)((char *)a1 + v17);
    unint64_t v22 = (uint64_t *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    *unint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[9];
    unint64_t v25 = (uint64_t *)((char *)a1 + v24);
    BOOL v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *unint64_t v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2368F1B48(uint64_t a1)
{
  uint64_t v2 = sub_23697A71C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2368F1C00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_23697A71C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  unint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (void *)(a1 + v16);
  unint64_t v21 = (void *)(a2 + v16);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = (void *)(a1 + v23);
  unint64_t v25 = (void *)(a2 + v23);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2368F1CF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_23697A71C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  uint64_t v20 = (void *)(a1 + v19);
  unint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2368F1E44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_23697A71C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_2368F1EE8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_23697A71C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[9];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2368F1FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2368F1FF8);
}

uint64_t sub_2368F1FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23697A71C();
  sub_2367BB1A0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_2367B85F8(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    int v10 = v9 - 1;
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_2368F2094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2368F20A8);
}

void sub_2368F20A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_23697A71C();
  sub_2367BB1A0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    sub_2367B7028(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
}

uint64_t type metadata accessor for DocumentUnderstanding_DocumentUnderstandingServiceClient_DocumentIdentifier()
{
  uint64_t result = qword_26889A298;
  if (!qword_26889A298) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2368F217C()
{
  uint64_t result = sub_23697A71C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_2368F2218()
{
  sub_23697A70C();
  uint64_t v0 = type metadata accessor for DocumentUnderstanding_DocumentUnderstandingServiceClient_DocumentIdentifier();
  sub_2367F4FE8(*(int *)(v0 + 20));
  sub_2367F4FE8(*(int *)(v1 + 24));
  sub_2367F4FE8(*(int *)(v2 + 28));
  sub_2367F4FE8(*(int *)(v3 + 32));
  sub_2367F4FE8(*(int *)(v4 + 36));
}

uint64_t sub_2368F226C()
{
  uint64_t v0 = sub_23697A9EC();
  sub_2367BA9C4(v0, qword_26889AC70);
  sub_2367BA98C(v0, (uint64_t)qword_26889AC70);
  sub_2367B7DBC(&qword_268898148);
  uint64_t v1 = (int *)(sub_2367B7DBC(&qword_268898150) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_236985C80;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "documentNamespace";
  *(void *)(v6 + 8) = 17;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_23697A9CC();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "documentId";
  *(void *)(v10 + 8) = 10;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "spotlightBundleID";
  *((void *)v12 + 1) = 17;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "spotlightDomainIdentifier";
  *((void *)v14 + 1) = 25;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "spotlightUniqueIdentifier";
  *((void *)v16 + 1) = 25;
  v16[16] = 2;
  v9();
  return sub_23697A9DC();
}

uint64_t sub_2368F24DC()
{
  if (qword_268897F68 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_23697A9EC();
  return sub_2367BA98C(v0, (uint64_t)qword_26889AC70);
}

uint64_t sub_2368F2540()
{
  while (1)
  {
    uint64_t result = sub_23697A77C();
    if (v0 || (v2 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        sub_2367BB1D8();
        sub_2368F2620();
        break;
      case 2:
        sub_2367BB1D8();
        sub_2368F2684();
        break;
      case 3:
        sub_2367BB1D8();
        sub_2368F26E8();
        break;
      case 4:
        sub_2367BB1D8();
        sub_2368F274C();
        break;
      case 5:
        sub_2367BB1D8();
        sub_2368F27B0();
        break;
      default:
        continue;
    }
  }
}

uint64_t sub_2368F2620()
{
  return sub_23697A86C();
}

uint64_t sub_2368F2684()
{
  return sub_23697A86C();
}

uint64_t sub_2368F26E8()
{
  return sub_23697A86C();
}

uint64_t sub_2368F274C()
{
  return sub_23697A86C();
}

uint64_t sub_2368F27B0()
{
  return sub_23697A86C();
}

uint64_t sub_2368F2814()
{
  uint64_t v1 = sub_2367F4FD4();
  uint64_t result = sub_2368F2890(v1);
  if (!v0)
  {
    uint64_t v3 = sub_2367F4FD4();
    sub_2368F2908(v3);
    uint64_t v4 = sub_2367F4FD4();
    sub_2368F2980(v4);
    uint64_t v5 = sub_2367F4FD4();
    sub_2368F29F8(v5);
    uint64_t v6 = sub_2367F4FD4();
    sub_2368F2A70(v6);
    return sub_23697A6FC();
  }
  return result;
}

uint64_t sub_2368F2890(uint64_t a1)
{
  uint64_t result = type metadata accessor for DocumentUnderstanding_DocumentUnderstandingServiceClient_DocumentIdentifier();
  if (*(void *)(a1 + *(int *)(result + 20) + 8)) {
    return sub_23697A99C();
  }
  return result;
}

uint64_t sub_2368F2908(uint64_t a1)
{
  uint64_t result = type metadata accessor for DocumentUnderstanding_DocumentUnderstandingServiceClient_DocumentIdentifier();
  if (*(void *)(a1 + *(int *)(result + 24) + 8)) {
    return sub_23697A99C();
  }
  return result;
}

uint64_t sub_2368F2980(uint64_t a1)
{
  uint64_t result = type metadata accessor for DocumentUnderstanding_DocumentUnderstandingServiceClient_DocumentIdentifier();
  if (*(void *)(a1 + *(int *)(result + 28) + 8)) {
    return sub_23697A99C();
  }
  return result;
}

uint64_t sub_2368F29F8(uint64_t a1)
{
  uint64_t result = type metadata accessor for DocumentUnderstanding_DocumentUnderstandingServiceClient_DocumentIdentifier();
  if (*(void *)(a1 + *(int *)(result + 32) + 8)) {
    return sub_23697A99C();
  }
  return result;
}

uint64_t sub_2368F2A70(uint64_t a1)
{
  uint64_t result = type metadata accessor for DocumentUnderstanding_DocumentUnderstandingServiceClient_DocumentIdentifier();
  if (*(void *)(a1 + *(int *)(result + 36) + 8)) {
    return sub_23697A99C();
  }
  return result;
}

uint64_t sub_2368F2AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23697A71C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v45 - v9;
  type metadata accessor for DocumentUnderstanding_DocumentUnderstandingServiceClient_DocumentIdentifier();
  sub_2367BB3B8();
  if (!v13)
  {
    if (v11) {
      goto LABEL_46;
    }
    goto LABEL_10;
  }
  if (!v11) {
    goto LABEL_46;
  }
  sub_2367BB4E4(v12);
  BOOL v16 = v16 && v14 == v15;
  if (v16 || (char v17 = 0, (sub_23697B95C() & 1) != 0))
  {
LABEL_10:
    sub_2367BB3B8();
    if (v20)
    {
      if (!v18) {
        goto LABEL_46;
      }
      sub_2367BB4E4(v19);
      if (!v16 || v21 != v22)
      {
        char v17 = 0;
        if ((sub_23697B95C() & 1) == 0) {
          return v17 & 1;
        }
      }
    }
    else if (v18)
    {
      goto LABEL_46;
    }
    sub_2367BB3B8();
    if (v26)
    {
      if (!v24) {
        goto LABEL_46;
      }
      sub_2367BB4E4(v25);
      if (!v16 || v27 != v28)
      {
        char v17 = 0;
        if ((sub_23697B95C() & 1) == 0) {
          return v17 & 1;
        }
      }
    }
    else if (v24)
    {
      goto LABEL_46;
    }
    sub_2367BB3B8();
    if (v32)
    {
      if (!v30) {
        goto LABEL_46;
      }
      sub_2367BB4E4(v31);
      if (!v16 || v33 != v34)
      {
        char v17 = 0;
        if ((sub_23697B95C() & 1) == 0) {
          return v17 & 1;
        }
      }
    }
    else if (v30)
    {
      goto LABEL_46;
    }
    sub_2367BB3B8();
    if (v38)
    {
      if (v36)
      {
        sub_2367BB4E4(v37);
        if (!v16 || v39 != v40)
        {
          char v17 = 0;
          if ((sub_23697B95C() & 1) == 0) {
            return v17 & 1;
          }
        }
LABEL_48:
        uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v43(v10, a1, v4);
        v43(v8, a2, v4);
        sub_2368F3160(&qword_268898158, MEMORY[0x263F50560]);
        char v17 = sub_23697AF0C();
        uint64_t v44 = *(void (**)(char *, uint64_t))(v5 + 8);
        v44(v8, v4);
        v44(v10, v4);
        return v17 & 1;
      }
    }
    else if (!v36)
    {
      goto LABEL_48;
    }
LABEL_46:
    char v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_2368F2D8C()
{
  return sub_23697BA4C();
}

unint64_t sub_2368F2E18()
{
  return 0xD00000000000004FLL;
}

uint64_t sub_2368F2E34()
{
  return sub_2368F2540();
}

uint64_t sub_2368F2E4C()
{
  return sub_2368F2814();
}

uint64_t sub_2368F2E64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2368F3160(&qword_26889A2C0, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_DocumentUnderstandingServiceClient_DocumentIdentifier);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2368F2EE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_2368F24DC();
  uint64_t v3 = sub_23697A9EC();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v2, v3);
}

uint64_t sub_2368F2F50(uint64_t a1)
{
  uint64_t v2 = sub_2368F3160((unint64_t *)&unk_268899820, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_DocumentUnderstandingServiceClient_DocumentIdentifier);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2368F2FC0()
{
  sub_2368F3160((unint64_t *)&unk_268899820, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_DocumentUnderstandingServiceClient_DocumentIdentifier);
  return sub_23697A8DC();
}

uint64_t sub_2368F3040()
{
  return sub_2368F3160(&qword_26889A2A8, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_DocumentUnderstandingServiceClient_DocumentIdentifier);
}

uint64_t sub_2368F3088()
{
  return sub_2368F3160((unint64_t *)&unk_268899820, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_DocumentUnderstandingServiceClient_DocumentIdentifier);
}

uint64_t sub_2368F30D0()
{
  return sub_2368F3160(&qword_26889A2B0, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_DocumentUnderstandingServiceClient_DocumentIdentifier);
}

uint64_t sub_2368F3118()
{
  return sub_2368F3160(&qword_26889A2B8, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_DocumentUnderstandingServiceClient_DocumentIdentifier);
}

uint64_t sub_2368F3160(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_2368F31A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_23697A0AC();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (sub_2367B85F8((uint64_t)v14, 1, v10))
    {
      uint64_t v15 = sub_2367B7DBC(&qword_26AD89410);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      v11(v13, v14, v10);
      sub_2367B7028((uint64_t)v13, 0, 1, v10);
    }
  }
  return v4;
}

uint64_t sub_2368F330C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_23697A0AC();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v8(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t result = sub_2367B85F8(v6, 1, v5);
  if (!result)
  {
    return v8(v6, v5);
  }
  return result;
}

unsigned char *sub_2368F33DC(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_23697A0AC();
  uint64_t v10 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  if (sub_2367B85F8((uint64_t)v13, 1, v9))
  {
    uint64_t v14 = sub_2367B7DBC(&qword_26AD89410);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    sub_2367B7028((uint64_t)v12, 0, 1, v9);
  }
  return a1;
}

unsigned char *sub_2368F34F0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_23697A0AC();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  LODWORD(v7) = sub_2367B85F8((uint64_t)&a1[v12], 1, v9);
  int v15 = sub_2367B85F8((uint64_t)v14, 1, v9);
  if (!v7)
  {
    if (!v15)
    {
      v11(v13, v14, v9);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_2367B7DBC(&qword_26AD89410);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v13, v14, v9);
  sub_2367B7028((uint64_t)v13, 0, 1, v9);
  return a1;
}

unsigned char *sub_2368F3678(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_23697A0AC();
  uint64_t v10 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  if (sub_2367B85F8((uint64_t)v13, 1, v9))
  {
    uint64_t v14 = sub_2367B7DBC(&qword_26AD89410);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    sub_2367B7028((uint64_t)v12, 0, 1, v9);
  }
  return a1;
}

unsigned char *sub_2368F378C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_23697A0AC();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  LODWORD(v7) = sub_2367B85F8((uint64_t)&a1[v12], 1, v9);
  int v15 = sub_2367B85F8((uint64_t)v14, 1, v9);
  if (!v7)
  {
    if (!v15)
    {
      v11(v13, v14, v9);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_2367B7DBC(&qword_26AD89410);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v13, v14, v9);
  sub_2367B7028((uint64_t)v13, 0, 1, v9);
  return a1;
}

uint64_t sub_2368F3914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2368F3928);
}

uint64_t sub_2368F3928(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_23697A0AC();
    sub_2367BB1A0();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v12 = v10;
      uint64_t v13 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v12 = sub_2367B7DBC(&qword_26AD89410);
      uint64_t v13 = *(int *)(a3 + 24);
    }
    return sub_2367B85F8((uint64_t)&a1[v13], a2, v12);
  }
}

uint64_t sub_2368F39D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2368F39EC);
}

unsigned char *sub_2368F39EC(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    sub_23697A0AC();
    sub_2367BB1A0();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = sub_2367B7DBC(&qword_26AD89410);
      uint64_t v11 = *(int *)(a4 + 24);
    }
    return (unsigned char *)sub_2367B7028((uint64_t)&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for CalendarEvent(uint64_t a1)
{
  return sub_2367B965C(a1, (uint64_t *)&unk_26AD89450);
}

void sub_2368F3AB4()
{
  sub_23697A0AC();
  if (v0 <= 0x3F)
  {
    sub_2368F5330(319, &qword_26AD89418, MEMORY[0x263F063B0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_2368F3BA4(void *a1, void *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a2[7];
    a1[6] = a2[6];
    a1[7] = v10;
    uint64_t v11 = a2[9];
    a1[8] = a2[8];
    a1[9] = v11;
    uint64_t v12 = a2[11];
    uint64_t v13 = a3[10];
    uint64_t v43 = (char *)a2 + v13;
    __dst = (char *)a1 + v13;
    a1[10] = a2[10];
    a1[11] = v12;
    uint64_t v14 = sub_23697A1CC();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_2367B85F8((uint64_t)v43, 1, v14))
    {
      uint64_t v15 = sub_2367B7DBC(&qword_26AD89538);
      memcpy(__dst, v43, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(__dst, v43, v14);
      sub_2367B7028((uint64_t)__dst, 0, 1, v14);
    }
    uint64_t v17 = a3[12];
    *(void *)((char *)v4 + a3[11]) = *(void *)((char *)a2 + a3[11]);
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = type metadata accessor for CalendarEvent(0);
    swift_bridgeObjectRetain();
    if (sub_2367B85F8((uint64_t)v19, 1, v20))
    {
      uint64_t v21 = sub_2367B7DBC(&qword_26AD89460);
      memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      *uint64_t v18 = *v19;
      uint64_t v22 = *(int *)(v20 + 20);
      uint64_t v23 = &v18[v22];
      uint64_t v24 = &v19[v22];
      uint64_t v25 = sub_23697A0AC();
      uint64_t v26 = (void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 16);
      uint64_t v27 = v24;
      uint64_t v28 = *v26;
      (*v26)(v23, v27, v25);
      uint64_t v29 = *(int *)(v20 + 24);
      uint64_t v30 = &v18[v29];
      uint64_t v31 = &v19[v29];
      if (sub_2367B85F8((uint64_t)v31, 1, v25))
      {
        uint64_t v32 = sub_2367B7DBC(&qword_26AD89410);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        v28(v30, v31, v25);
        sub_2367B7028((uint64_t)v30, 0, 1, v25);
      }
      sub_2367B7028((uint64_t)v18, 0, 1, v20);
    }
    uint64_t v33 = a3[13];
    uint64_t v34 = a3[14];
    int64_t v35 = (void *)((char *)v4 + v33);
    uint64_t v36 = (void *)((char *)a2 + v33);
    uint64_t v37 = v36[1];
    *int64_t v35 = *v36;
    v35[1] = v37;
    uint64_t v38 = (_OWORD *)((char *)v4 + v34);
    uint64_t v39 = (_OWORD *)((char *)a2 + v34);
    long long v40 = v39[1];
    *uint64_t v38 = *v39;
    v38[1] = v40;
    uint64_t v41 = a3[16];
    *(_OWORD *)((char *)v4 + a3[15]) = *(_OWORD *)((char *)a2 + a3[15]);
    *((unsigned char *)v4 + v41) = *((unsigned char *)a2 + v41);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_2368F3EE8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_23697A1CC();
  if (!sub_2367B85F8(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 48);
  uint64_t v7 = type metadata accessor for CalendarEvent(0);
  if (!sub_2367B85F8(v6, 1, v7))
  {
    uint64_t v8 = v6 + *(int *)(v7 + 20);
    uint64_t v9 = sub_23697A0AC();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    v10(v8, v9);
    uint64_t v11 = v6 + *(int *)(v7 + 24);
    if (!sub_2367B85F8(v11, 1, v9)) {
      v10(v11, v9);
    }
  }
  return swift_bridgeObjectRelease();
}

void *sub_2368F4070(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  uint64_t v10 = a2[11];
  uint64_t v11 = a3[10];
  __dst = (char *)a1 + v11;
  uint64_t v12 = (char *)a2 + v11;
  a1[10] = a2[10];
  a1[11] = v10;
  uint64_t v13 = sub_23697A1CC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (sub_2367B85F8((uint64_t)v12, 1, v13))
  {
    uint64_t v14 = sub_2367B7DBC(&qword_26AD89538);
    memcpy(__dst, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(__dst, v12, v13);
    sub_2367B7028((uint64_t)__dst, 0, 1, v13);
  }
  uint64_t v15 = a3;
  uint64_t v16 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = type metadata accessor for CalendarEvent(0);
  swift_bridgeObjectRetain();
  if (sub_2367B85F8((uint64_t)v18, 1, v19))
  {
    uint64_t v20 = sub_2367B7DBC(&qword_26AD89460);
    memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    *uint64_t v17 = *v18;
    uint64_t v21 = *(int *)(v19 + 20);
    uint64_t v22 = &v17[v21];
    uint64_t v23 = &v18[v21];
    uint64_t v24 = sub_23697A0AC();
    uint64_t v25 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v24 - 8) + 16);
    v25(v22, v23, v24);
    uint64_t v26 = *(int *)(v19 + 24);
    uint64_t v27 = &v17[v26];
    uint64_t v28 = &v18[v26];
    if (sub_2367B85F8((uint64_t)v28, 1, v24))
    {
      uint64_t v29 = sub_2367B7DBC(&qword_26AD89410);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      v25(v27, v28, v24);
      sub_2367B7028((uint64_t)v27, 0, 1, v24);
    }
    sub_2367B7028((uint64_t)v17, 0, 1, v19);
    uint64_t v15 = a3;
  }
  uint64_t v30 = v15[13];
  uint64_t v31 = v15[14];
  uint64_t v32 = (void *)((char *)a1 + v30);
  uint64_t v33 = (void *)((char *)a2 + v30);
  uint64_t v34 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v34;
  int64_t v35 = (_OWORD *)((char *)a1 + v31);
  uint64_t v36 = (_OWORD *)((char *)a2 + v31);
  long long v37 = v36[1];
  *int64_t v35 = *v36;
  v35[1] = v37;
  uint64_t v38 = v15[16];
  *(_OWORD *)((char *)a1 + v15[15]) = *(_OWORD *)((char *)a2 + v15[15]);
  *((unsigned char *)a1 + v38) = *((unsigned char *)a2 + v38);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_2368F4360(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[10];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_23697A1CC();
  int v10 = sub_2367B85F8((uint64_t)v7, 1, v9);
  int v11 = sub_2367B85F8((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      sub_2367B7028((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_2367B7DBC(&qword_26AD89538);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[12];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for CalendarEvent(0);
  int v18 = sub_2367B85F8((uint64_t)v15, 1, v17);
  int v19 = sub_2367B85F8((uint64_t)v16, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      *uint64_t v15 = *v16;
      uint64_t v20 = *(int *)(v17 + 20);
      uint64_t v21 = &v15[v20];
      uint64_t v22 = &v16[v20];
      uint64_t v23 = sub_23697A0AC();
      uint64_t v24 = (void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 16);
      uint64_t v25 = v22;
      uint64_t v26 = *v24;
      (*v24)(v21, v25, v23);
      uint64_t v27 = *(int *)(v17 + 24);
      uint64_t v28 = &v15[v27];
      uint64_t v29 = &v16[v27];
      if (sub_2367B85F8((uint64_t)v29, 1, v23))
      {
        uint64_t v30 = sub_2367B7DBC(&qword_26AD89410);
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        v26(v28, v29, v23);
        sub_2367B7028((uint64_t)v28, 0, 1, v23);
      }
      uint64_t v45 = (uint64_t)v15;
      uint64_t v46 = v17;
      goto LABEL_21;
    }
    goto LABEL_13;
  }
  if (v19)
  {
    sub_2368060C8((uint64_t)v15);
LABEL_13:
    size_t v31 = *(void *)(*(void *)(sub_2367B7DBC(&qword_26AD89460) - 8) + 64);
    uint64_t v32 = v15;
    uint64_t v33 = v16;
    goto LABEL_14;
  }
  *uint64_t v15 = *v16;
  uint64_t v34 = *(int *)(v17 + 20);
  int64_t v35 = &v15[v34];
  uint64_t v36 = &v16[v34];
  uint64_t v37 = sub_23697A0AC();
  uint64_t v57 = *(void *)(v37 - 8);
  uint64_t v38 = v35;
  uint64_t v39 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v57 + 24);
  v39(v38, v36, v37);
  uint64_t v40 = *(int *)(v17 + 24);
  uint64_t v41 = (uint64_t)&v15[v40];
  uint64_t v42 = (uint64_t)&v16[v40];
  int v43 = sub_2367B85F8(v41, 1, v37);
  int v44 = sub_2367B85F8(v42, 1, v37);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16))(v41, v42, v37);
      uint64_t v45 = v41;
      uint64_t v46 = v37;
LABEL_21:
      sub_2367B7028(v45, 0, 1, v46);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v44)
    {
      v39((unsigned char *)v41, (unsigned char *)v42, v37);
      goto LABEL_22;
    }
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v41, v37);
  }
  size_t v31 = *(void *)(*(void *)(sub_2367B7DBC(&qword_26AD89410) - 8) + 64);
  uint64_t v32 = (void *)v41;
  uint64_t v33 = (const void *)v42;
LABEL_14:
  memcpy(v32, v33, v31);
LABEL_22:
  uint64_t v47 = a3[13];
  uint64_t v48 = (void *)((char *)a1 + v47);
  uint64_t v49 = (void *)((char *)a2 + v47);
  *uint64_t v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v50 = a3[14];
  uint64_t v51 = (void *)((char *)a1 + v50);
  uint64_t v52 = (void *)((char *)a2 + v50);
  *uint64_t v51 = *v52;
  v51[1] = v52[1];
  v51[2] = v52[2];
  v51[3] = v52[3];
  uint64_t v53 = a3[15];
  uint64_t v54 = (void *)((char *)a1 + v53);
  uint64_t v55 = (void *)((char *)a2 + v53);
  *uint64_t v54 = *v55;
  v54[1] = v55[1];
  *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  return a1;
}

_OWORD *sub_2368F48E0(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  long long v8 = a2[5];
  uint64_t v9 = a3[10];
  int v10 = (char *)a1 + v9;
  int v11 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v12 = sub_23697A1CC();
  if (sub_2367B85F8((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = sub_2367B7DBC(&qword_26AD89538);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    sub_2367B7028((uint64_t)v10, 0, 1, v12);
  }
  uint64_t v14 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for CalendarEvent(0);
  if (sub_2367B85F8((uint64_t)v16, 1, v17))
  {
    uint64_t v18 = sub_2367B7DBC(&qword_26AD89460);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    *uint64_t v15 = *v16;
    uint64_t v19 = *(int *)(v17 + 20);
    uint64_t v20 = &v15[v19];
    uint64_t v21 = &v16[v19];
    uint64_t v22 = sub_23697A0AC();
    uint64_t v23 = (void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 32);
    uint64_t v24 = v21;
    uint64_t v25 = *v23;
    (*v23)(v20, v24, v22);
    uint64_t v26 = *(int *)(v17 + 24);
    uint64_t v27 = &v15[v26];
    uint64_t v28 = &v16[v26];
    if (sub_2367B85F8((uint64_t)v28, 1, v22))
    {
      uint64_t v29 = sub_2367B7DBC(&qword_26AD89410);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      v25(v27, v28, v22);
      sub_2367B7028((uint64_t)v27, 0, 1, v22);
    }
    sub_2367B7028((uint64_t)v15, 0, 1, v17);
  }
  uint64_t v30 = a3[14];
  *(_OWORD *)((char *)a1 + a3[13]) = *(_OWORD *)((char *)a2 + a3[13]);
  size_t v31 = (_OWORD *)((char *)a1 + v30);
  uint64_t v32 = (_OWORD *)((char *)a2 + v30);
  long long v33 = v32[1];
  *size_t v31 = *v32;
  v31[1] = v33;
  uint64_t v34 = a3[16];
  *(_OWORD *)((char *)a1 + a3[15]) = *(_OWORD *)((char *)a2 + a3[15]);
  *((unsigned char *)a1 + v34) = *((unsigned char *)a2 + v34);
  return a1;
}

void *sub_2368F4B64(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[11];
  a1[10] = a2[10];
  a1[11] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[10];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_23697A1CC();
  int v16 = sub_2367B85F8((uint64_t)v13, 1, v15);
  int v17 = sub_2367B85F8((uint64_t)v14, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      sub_2367B7028((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v18 = *(void *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v15);
LABEL_6:
    uint64_t v19 = sub_2367B7DBC(&qword_26AD89538);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 40))(v13, v14, v15);
LABEL_7:
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[12];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = type metadata accessor for CalendarEvent(0);
  int v24 = sub_2367B85F8((uint64_t)v21, 1, v23);
  int v25 = sub_2367B85F8((uint64_t)v22, 1, v23);
  if (v24)
  {
    if (!v25)
    {
      *uint64_t v21 = *v22;
      uint64_t v26 = *(int *)(v23 + 20);
      uint64_t v27 = &v21[v26];
      uint64_t v28 = &v22[v26];
      uint64_t v29 = sub_23697A0AC();
      uint64_t v30 = (void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v29 - 8) + 32);
      size_t v31 = v28;
      uint64_t v32 = *v30;
      (*v30)(v27, v31, v29);
      uint64_t v33 = *(int *)(v23 + 24);
      uint64_t v34 = &v21[v33];
      int64_t v35 = &v22[v33];
      if (sub_2367B85F8((uint64_t)v35, 1, v29))
      {
        uint64_t v36 = sub_2367B7DBC(&qword_26AD89410);
        memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        v32(v34, v35, v29);
        sub_2367B7028((uint64_t)v34, 0, 1, v29);
      }
      uint64_t v51 = (uint64_t)v21;
      uint64_t v52 = v23;
      goto LABEL_21;
    }
    goto LABEL_13;
  }
  if (v25)
  {
    sub_2368060C8((uint64_t)v21);
LABEL_13:
    size_t v37 = *(void *)(*(void *)(sub_2367B7DBC(&qword_26AD89460) - 8) + 64);
    uint64_t v38 = v21;
    uint64_t v39 = v22;
    goto LABEL_14;
  }
  *uint64_t v21 = *v22;
  uint64_t v40 = *(int *)(v23 + 20);
  uint64_t v41 = &v21[v40];
  uint64_t v42 = &v22[v40];
  uint64_t v43 = sub_23697A0AC();
  uint64_t v64 = *(void *)(v43 - 8);
  int v44 = v41;
  uint64_t v45 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v64 + 40);
  v45(v44, v42, v43);
  uint64_t v46 = *(int *)(v23 + 24);
  uint64_t v47 = (uint64_t)&v21[v46];
  uint64_t v48 = (uint64_t)&v22[v46];
  int v49 = sub_2367B85F8(v47, 1, v43);
  int v50 = sub_2367B85F8(v48, 1, v43);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 32))(v47, v48, v43);
      uint64_t v51 = v47;
      uint64_t v52 = v43;
LABEL_21:
      sub_2367B7028(v51, 0, 1, v52);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v50)
    {
      v45((unsigned char *)v47, (unsigned char *)v48, v43);
      goto LABEL_22;
    }
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v47, v43);
  }
  size_t v37 = *(void *)(*(void *)(sub_2367B7DBC(&qword_26AD89410) - 8) + 64);
  uint64_t v38 = (void *)v47;
  uint64_t v39 = (const void *)v48;
LABEL_14:
  memcpy(v38, v39, v37);
LABEL_22:
  uint64_t v53 = a3[13];
  uint64_t v54 = (void *)((char *)a1 + v53);
  uint64_t v55 = (void *)((char *)a2 + v53);
  uint64_t v57 = *v55;
  uint64_t v56 = v55[1];
  *uint64_t v54 = v57;
  v54[1] = v56;
  swift_bridgeObjectRelease();
  uint64_t v58 = a3[14];
  uint64_t v59 = a3[15];
  uint64_t v60 = (_OWORD *)((char *)a1 + v58);
  uint64_t v61 = (_OWORD *)((char *)a2 + v58);
  long long v62 = v61[1];
  *uint64_t v60 = *v61;
  v60[1] = v62;
  *(_OWORD *)((char *)a1 + v59) = *(_OWORD *)((char *)a2 + v59);
  *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  return a1;
}

uint64_t sub_2368F5040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2368F5054);
}

uint64_t sub_2368F5054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_2367B7DBC(&qword_26AD89538);
    sub_2367BB1A0();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 40);
    }
    else
    {
      uint64_t v10 = sub_2367B7DBC(&qword_26AD89460);
      uint64_t v11 = *(int *)(a3 + 48);
    }
    return sub_2367B85F8(a1 + v11, a2, v10);
  }
}

uint64_t sub_2368F5108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2368F511C);
}

uint64_t sub_2368F511C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_2367B7DBC(&qword_26AD89538);
    sub_2367BB1A0();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 40);
    }
    else
    {
      uint64_t v10 = sub_2367B7DBC(&qword_26AD89460);
      uint64_t v11 = *(int *)(a4 + 48);
    }
    return sub_2367B7028(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for DUStructuredExtractionResult(uint64_t a1)
{
  return sub_2367B965C(a1, (uint64_t *)&unk_26889A2C8);
}

void sub_2368F51EC()
{
  sub_2368F5330(319, (unint64_t *)&qword_26AD89540, MEMORY[0x263F06EA8]);
  if (v0 <= 0x3F)
  {
    sub_2368F5330(319, &qword_26889A2D8, (void (*)(uint64_t))type metadata accessor for CalendarEvent);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_2368F5330(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_23697B4EC();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_2368F5384()
{
  return 0xD000000000000021;
}

uint64_t type metadata accessor for DUBackboneEncodingSmolBERToSpecification()
{
  return self;
}

unint64_t sub_2368F53C4()
{
  return 0xD000000000000021;
}

uint64_t sub_2368F53E4()
{
  return MEMORY[0x270FA2498](sub_2368F5400, 0, 0);
}

uint64_t sub_2368F5400()
{
  int v1 = *(unsigned __int8 *)sub_23697AAEC();
  sub_2367C0470();
  uint64_t v2 = swift_allocError();
  unint64_t v4 = 0xD00000000000001ALL;
  if (v1) {
    unint64_t v4 = 0xD000000000000027;
  }
  unint64_t v5 = 0x8000000236998E90;
  if (v1) {
    unint64_t v5 = 0x8000000236998EB0;
  }
  *(void *)uint64_t v3 = v4;
  *(void *)(v3 + 8) = v5;
  *(unsigned char *)(v3 + 16) = 0;
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v6(v2, 1);
}

uint64_t type metadata accessor for DUFoundInEventSmolBERToImplementation()
{
  return self;
}

uint64_t sub_2368F54E4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_2367C034C;
  return sub_2368F53E4();
}

unint64_t sub_2368F5574()
{
  return 0xD000000000000027;
}

uint64_t type metadata accessor for DUFoundInEventEncodingSmolBERToSpecification()
{
  return self;
}

unint64_t sub_2368F55B4()
{
  return 0xD000000000000027;
}

unint64_t sub_2368F55D4()
{
  return 0xD000000000000024;
}

uint64_t type metadata accessor for DUFoundInEventClassificationSpecification()
{
  return self;
}

unint64_t sub_2368F5614()
{
  return 0xD000000000000024;
}

uint64_t sub_2368F5634(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  uint64_t v4 = sub_23697AD0C();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2368F56F8, 0, 0);
}

uint64_t sub_2368F56F8()
{
  int v16 = v0;
  sub_23697ACFC();
  uint64_t v1 = sub_23697ACDC();
  os_log_type_t v2 = sub_23697B35C();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v4 = v0[7];
    uint64_t v3 = v0[8];
    uint64_t v5 = v0[6];
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v15 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    v0[2] = sub_2367D90DC(0xD000000000000024, 0x8000000236998FB0, &v15);
    sub_23697B50C();
    _os_log_impl(&dword_2367AD000, v1, v2, "FoundInEventClassification phase ID: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x237E081F0](v7, -1, -1);
    MEMORY[0x237E081F0](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    uint64_t v9 = v0[7];
    uint64_t v8 = v0[8];
    uint64_t v10 = v0[6];

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v14 = (uint64_t (*)(uint64_t))((char *)&dword_268898830 + dword_268898830);
  uint64_t v11 = (void *)swift_task_alloc();
  v0[9] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_2368F590C;
  uint64_t v12 = v0[4];
  return v14(v12);
}

uint64_t sub_2368F590C()
{
  sub_2367CAA3C();
  *(void *)(v1 + 80) = v0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2368F59E8, 0, 0);
}

uint64_t sub_2368F59E8()
{
  uint64_t v1 = *(void **)(v0 + 80);
  if (v1)
  {
    id v2 = v1;
    DUResponse.foundInEventClassificationResult.setter(v1);
  }
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

id sub_2368F5A70()
{
  uint64_t v0 = (objc_class *)type metadata accessor for DURequestContentType();
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR____TtC21DocumentUnderstanding20DURequestContentType_rawValue] = 4096;
  v3.receiver = v1;
  v3.super_class = v0;
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t sub_2368F5ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_236805EB0;
  return sub_2368F5634(a1, a2);
}

id sub_2368F5B74()
{
  return sub_2368F5A70();
}

char *DULanguageTaggingResponse.__allocating_init<A>(proto:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v60 = type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo();
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v7);
  sub_2367D6170();
  uint64_t v57 = v8 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v58 = (char *)&v54 - v11;
  uint64_t v12 = sub_2367B7DBC(&qword_268898130);
  uint64_t v13 = sub_2367BB430(v12);
  MEMORY[0x270FA5388](v13);
  sub_2367D6170();
  uint64_t v16 = v14 - v15;
  MEMORY[0x270FA5388](v17);
  uint64_t v59 = (uint64_t)&v54 - v18;
  uint64_t v19 = sub_2367B7DBC(&qword_2688983B0);
  uint64_t v20 = sub_2367BB430(v19);
  MEMORY[0x270FA5388](v20);
  sub_2367CAC7C();
  uint64_t v23 = v22 - v21;
  uint64_t v24 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v25);
  sub_2367CBF80();
  uint64_t v26 = type metadata accessor for DocumentUnderstanding_ClientInterface_LanguageTaggingResponse();
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v27);
  sub_2367CAC7C();
  uint64_t v30 = (uint64_t *)(v29 - v28);
  id v31 = objc_msgSend(objc_allocWithZone(v4), sel_init);
  uint64_t v32 = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v3, a1, a2);
  uint64_t v33 = (char *)v31;
  if (swift_dynamicCast())
  {
    uint64_t v54 = v24;
    uint64_t v55 = a2;
    uint64_t v34 = (uint64_t)v58;
    uint64_t v56 = v32;
    sub_2367B7028(v23, 0, 1, v26);
    sub_2368F60CC(v23, (uint64_t)v30, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_LanguageTaggingResponse);
    uint64_t v35 = *v30;
    uint64_t v36 = &v33[OBJC_IVAR____TtC21DocumentUnderstanding25DULanguageTaggingResponse_languageTags];
    swift_beginAccess();
    *(void *)uint64_t v36 = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v37 = (uint64_t)v30 + *(int *)(v26 + 24);
    uint64_t v38 = v59;
    sub_236816B6C(v37, v59);
    uint64_t v39 = v60;
    LODWORD(v35) = sub_2367B85F8(v38, 1, v60);
    sub_2367BAA28(v38, &qword_268898130);
    if (v35 == 1)
    {

      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v56, v55);
      sub_2368F612C((uint64_t)v30, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_LanguageTaggingResponse);
    }
    else
    {
      sub_236816B6C(v37, v16);
      uint64_t v40 = v34;
      if (sub_2367B85F8(v16, 1, v39) == 1)
      {
        sub_23697A70C();
        uint64_t v41 = (void *)(v34 + *(int *)(v39 + 20));
        *uint64_t v41 = 0;
        v41[1] = 0;
        sub_2367BAA28(v16, &qword_268898130);
      }
      else
      {
        sub_2368F60CC(v16, v34, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo);
      }
      uint64_t v42 = v57;
      uint64_t v43 = v54;
      id v44 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DUDebugInfo()), sel_init);
      sub_2368F60CC(v40, v42, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo);
      uint64_t v45 = (uint64_t *)(v42 + *(int *)(v39 + 20));
      if (v45[1])
      {
        uint64_t v46 = *v45;
        unint64_t v47 = v45[1];
      }
      else
      {
        uint64_t v46 = 0;
        unint64_t v47 = 0xE000000000000000;
      }
      uint64_t v48 = v55;
      int v49 = (char *)v44;
      swift_bridgeObjectRetain();
      sub_2368F612C(v42, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo);
      int v50 = &v49[OBJC_IVAR____TtC21DocumentUnderstanding11DUDebugInfo_debugString];
      swift_beginAccess();
      *(void *)int v50 = v46;
      *((void *)v50 + 1) = v47;

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v56, v48);
      sub_2368F612C((uint64_t)v30, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_LanguageTaggingResponse);
      uint64_t v51 = (void **)&v33[OBJC_IVAR____TtC21DocumentUnderstanding25DULanguageTaggingResponse_responseDebugInfo];
      swift_beginAccess();
      uint64_t v52 = *v51;
      *uint64_t v51 = v49;
    }
  }
  else
  {
    sub_2367B7028(v23, 1, 1, v26);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a1, a2);
    sub_2367BAA28(v23, &qword_2688983B0);
    return 0;
  }
  return v33;
}

uint64_t sub_2368F60CC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_2367BB1EC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_2368F612C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_2367BB1EC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

id DULanguageTaggingResponse.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

uint64_t DULanguageTaggingResponse.languageTags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DULanguageTaggingResponse.languageTags.setter(uint64_t a1)
{
  sub_2367E89A4();
  *id v1 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*DULanguageTaggingResponse.languageTags.modify())()
{
  return j__swift_endAccess;
}

void *DULanguageTaggingResponse.responseDebugInfo.getter()
{
  sub_2367CD778();
  id v1 = *v0;
  id v2 = v1;
  return v1;
}

void DULanguageTaggingResponse.responseDebugInfo.setter(void *a1)
{
  sub_2367E89A4();
  uint64_t v3 = *v1;
  *id v1 = a1;
}

uint64_t (*DULanguageTaggingResponse.responseDebugInfo.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DULanguageTaggingResponse.protoRepresentation.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2367B7DBC(&qword_268898130);
  uint64_t v5 = sub_2367BB430(v4);
  MEMORY[0x270FA5388](v5);
  sub_2367CAC7C();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo();
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v10);
  sub_2367D6170();
  uint64_t v13 = v11 - v12;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = &v28[-v16];
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = &v28[-v18];
  *a1 = MEMORY[0x263F8EE78];
  uint64_t v20 = type metadata accessor for DocumentUnderstanding_ClientInterface_LanguageTaggingResponse();
  sub_23697A70C();
  uint64_t v21 = (uint64_t)a1 + *(int *)(v20 + 24);
  sub_2367E8A68(v21, 1);
  uint64_t v22 = (id *)(v2 + OBJC_IVAR____TtC21DocumentUnderstanding25DULanguageTaggingResponse_responseDebugInfo);
  swift_beginAccess();
  if (!*v22)
  {
    sub_2367E8A68(v8, 1);
    goto LABEL_5;
  }
  id v23 = *v22;
  DUDebugInfo.protoRepresentation.getter(v17);

  int v24 = swift_dynamicCast();
  sub_2367E8A68(v8, v24 ^ 1u);
  if (sub_2367B85F8(v8, 1, v9) == 1)
  {
LABEL_5:
    sub_2367BAA28(v8, &qword_268898130);
    goto LABEL_6;
  }
  sub_2368F60CC(v8, (uint64_t)v19, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo);
  sub_2368F6BD8((uint64_t)v19, v13);
  sub_2367BAA28(v21, &qword_268898130);
  sub_2368F60CC(v13, v21, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo);
  sub_2367E8A68(v21, 0);
  sub_2368F612C((uint64_t)v19, (void (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo);
LABEL_6:
  uint64_t v25 = (uint64_t *)(v2 + OBJC_IVAR____TtC21DocumentUnderstanding25DULanguageTaggingResponse_languageTags);
  swift_beginAccess();
  uint64_t v26 = *v25;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v26;
  return result;
}

uint64_t DULanguageTaggingResponse.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DocumentUnderstanding_ClientInterface_LanguageTaggingResponse();
  uint64_t v4 = sub_2367BB430(v3);
  MEMORY[0x270FA5388](v4);
  sub_2367CBF80();
  DULanguageTaggingResponse.protoRepresentation.getter(v1);
  sub_23680BA54();
  uint64_t v6 = v5;
  uint64_t result = sub_2367B7DBC(&qword_26889A310);
  a1[3] = result;
  *a1 = v6;
  return result;
}

Swift::Void __swiftcall DULanguageTaggingResponse.encode(with:)(NSCoder with)
{
  type metadata accessor for DULanguageTaggingResponse();
  sub_2368F6CC8(&qword_26889A318, v2, (void (*)(uint64_t))type metadata accessor for DULanguageTaggingResponse);
  uint64_t v3 = (void *)sub_23697AB7C();
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = (void *)sub_23697AF3C();
    [(objc_class *)with.super.isa encodeObject:v4 forKey:v5];
  }
}

uint64_t DULanguageTaggingResponse.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return DULanguageTaggingResponse.init(coder:)(a1);
}

uint64_t DULanguageTaggingResponse.init(coder:)(void *a1)
{
  swift_getObjectType();
  sub_2367CBCC4();
  id v3 = v1;
  if (!sub_23697B47C())
  {

    goto LABEL_5;
  }
  swift_getObjectType();

  sub_2368F6CC8(&qword_26889A318, v4, (void (*)(uint64_t))type metadata accessor for DULanguageTaggingResponse);
  sub_23697AB8C();

  uint64_t v5 = v7;
  if (!v7)
  {
LABEL_5:
    swift_getObjectType();
    sub_236817F08();
    return 0;
  }
  swift_getObjectType();
  sub_236817F08();
  return v5;
}

id DULanguageTaggingResponse.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding25DULanguageTaggingResponse_languageTags] = MEMORY[0x263F8EE78];
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding25DULanguageTaggingResponse_responseDebugInfo] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DULanguageTaggingResponse();
  return objc_msgSendSuper2(&v2, sel_init);
}

id DULanguageTaggingResponse.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DULanguageTaggingResponse();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2368F6B8C@<X0>(void *a1@<X8>)
{
  return DULanguageTaggingResponse.protoRepresentation.getter(a1);
}

void sub_2368F6BB0(void *a1@<X8>)
{
  sub_23680BDA4();
  *a1 = v2;
}

uint64_t sub_2368F6BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DocumentUnderstanding_ClientInterface_DebugInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for DULanguageTaggingResponse()
{
  return self;
}

uint64_t sub_2368F6C60(uint64_t a1)
{
  return MEMORY[0x270FA03F0](a1, &opaque type descriptor for <<opaque return type of DULanguageTaggingResponse.protoRepresentation>>, 1);
}

uint64_t sub_2368F6C7C()
{
  return sub_2368F6CC8(&qword_2688983B8, 255, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_LanguageTaggingResponse);
}

uint64_t sub_2368F6CC8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for IntelligencePlatform(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2368F6DACLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for IntelligencePlatform()
{
  return &type metadata for IntelligencePlatform;
}

unint64_t sub_2368F6DE8()
{
  unint64_t result = qword_26889A320;
  if (!qword_26889A320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26889A320);
  }
  return result;
}

const char *sub_2368F6E34()
{
  return "IntelligencePlatform";
}

const char *sub_2368F6E48()
{
  return "NERD";
}

uint64_t sub_2368F6E5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for DUUserInterfaceUnderstandingSpecification();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_26B805598;
  *a1 = result;
  return result;
}

uint64_t sub_2368F6EA4(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return MEMORY[0x270FA2498](sub_2368F6EC4, 0, 0);
}

uint64_t sub_2368F6EC4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 24);
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    uint64_t v2 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DUUserInterfaceUnderstandingResult()), sel_init);
    DUUserInterfaceUnderstandingResult.topicIdentifier.setter(0x6564692D74736574, 0xEF7265696669746ELL);
    int v3 = &v2[OBJC_IVAR____TtC21DocumentUnderstanding34DUUserInterfaceUnderstandingResult_topicConfidence];
    swift_beginAccess();
    *(void *)int v3 = 0x3FF0000000000000;
    unsigned int v4 = v2;
    MEMORY[0x237E06690]();
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_23697B20C();
    }
    sub_23697B22C();
    sub_23697B1FC();

    uint64_t v5 = v9;
  }
  else
  {
    sub_2367C0470();
    uint64_t v5 = swift_allocError();
    *(void *)uint64_t v6 = 0xD000000000000015;
    *(void *)(v6 + 8) = 0x8000000236991520;
    *(unsigned char *)(v6 + 16) = 0;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t, BOOL))(v0 + 8);
  return v7(v5, v1 == 0);
}

uint64_t type metadata accessor for DUUserInterfaceUnderstandingDefaultImplementation()
{
  return self;
}

_UNKNOWN **sub_2368F7080()
{
  return &off_26B805598;
}

uint64_t sub_2368F708C@<X0>(uint64_t *a1@<X8>)
{
  return sub_2368F6E5C(a1);
}

uint64_t sub_2368F70A4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_2367C034C;
  return sub_2368F6EA4(a2);
}

uint64_t sub_2368F713C(uint64_t a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_init);
  sub_2368F7D1C(a1, (uint64_t (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_TopicResult);

  return 0;
}

char *DUUserInterfaceUnderstandingResult.__allocating_init<A>(proto:)()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_2367B7DBC(&qword_268898DA0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for DocumentUnderstanding_ClientInterface_UserInterfaceUnderstandingResult();
  MEMORY[0x270FA5388](v6);
  sub_2367CBF80();
  uint64_t v7 = (char *)objc_msgSend(objc_allocWithZone(v2), sel_init);
  if (swift_dynamicCast())
  {
    sub_2367B7028((uint64_t)v5, 0, 1, v6);
    sub_2368F73E0((uint64_t)v5, (uint64_t)v1);
    uint64_t v9 = *v1;
    uint64_t v8 = v1[1];
    uint64_t v10 = &v7[OBJC_IVAR____TtC21DocumentUnderstanding34DUUserInterfaceUnderstandingResult_topicIdentifier];
    sub_2367BB248();
    *(void *)uint64_t v10 = v9;
    *((void *)v10 + 1) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v11 = (double *)((char *)v1 + *(int *)(v6 + 24));
    if (*((unsigned char *)v11 + 8)) {
      double v12 = 0.0;
    }
    else {
      double v12 = *v11;
    }
    sub_2368F7D1C((uint64_t)v1, (uint64_t (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_UserInterfaceUnderstandingResult);
    uint64_t v13 = (double *)&v7[OBJC_IVAR____TtC21DocumentUnderstanding34DUUserInterfaceUnderstandingResult_topicConfidence];
    sub_2367BB248();
    *uint64_t v13 = v12;
  }
  else
  {
    sub_2367B7028((uint64_t)v5, 1, 1, v6);

    sub_2368F7380((uint64_t)v5);
    return 0;
  }
  return v7;
}

uint64_t sub_2368F7380(uint64_t a1)
{
  uint64_t v2 = sub_2367B7DBC(&qword_268898DA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2368F73E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DocumentUnderstanding_ClientInterface_UserInterfaceUnderstandingResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id DUUserInterfaceUnderstandingResult.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

uint64_t DUUserInterfaceUnderstandingResult.topicIdentifier.getter()
{
  id v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding34DUUserInterfaceUnderstandingResult_topicIdentifier);
  sub_2367C00E8();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t DUUserInterfaceUnderstandingResult.topicIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC21DocumentUnderstanding34DUUserInterfaceUnderstandingResult_topicIdentifier);
  sub_2367BB248();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*DUUserInterfaceUnderstandingResult.topicIdentifier.modify())()
{
  return j_j__swift_endAccess;
}

double DUUserInterfaceUnderstandingResult.topicConfidence.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC21DocumentUnderstanding34DUUserInterfaceUnderstandingResult_topicConfidence;
  sub_2367C00E8();
  return *(double *)v1;
}

uint64_t DUUserInterfaceUnderstandingResult.topicConfidence.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC21DocumentUnderstanding34DUUserInterfaceUnderstandingResult_topicConfidence);
  uint64_t result = sub_2367BB248();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*DUUserInterfaceUnderstandingResult.topicConfidence.modify())()
{
  return j__swift_endAccess;
}

uint64_t DUUserInterfaceUnderstandingResult.protoRepresentation.getter@<X0>(void *a1@<X8>)
{
  *a1 = MEMORY[0x263F8EE78];
  uint64_t v3 = (int *)type metadata accessor for DocumentUnderstanding_ClientInterface_TopicResult();
  sub_23697A70C();
  uint64_t v4 = (uint64_t)a1 + v3[6];
  uint64_t v5 = type metadata accessor for DocumentUnderstanding_TopicSetIdentifier();
  sub_2367B7028(v4, 1, 1, v5);
  uint64_t v6 = (void *)((char *)a1 + v3[7]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = (char *)a1 + v3[8];
  *(void *)uint64_t v7 = 0;
  v7[8] = 1;
  uint64_t v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC21DocumentUnderstanding34DUUserInterfaceUnderstandingResult_topicIdentifier);
  sub_2367C00E8();
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  *uint64_t v6 = v9;
  v6[1] = v10;
  uint64_t v11 = (void *)(v1 + OBJC_IVAR____TtC21DocumentUnderstanding34DUUserInterfaceUnderstandingResult_topicConfidence);
  swift_beginAccess();
  *(void *)uint64_t v7 = *v11;
  v7[8] = 0;
  return swift_bridgeObjectRetain();
}

uint64_t DUUserInterfaceUnderstandingResult.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DocumentUnderstanding_ClientInterface_TopicResult();
  MEMORY[0x270FA5388](v3 - 8);
  sub_2367CBF80();
  DUUserInterfaceUnderstandingResult.protoRepresentation.getter(v1);
  id v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DUUserInterfaceUnderstandingResult()), sel_init);
  sub_2368F7D1C((uint64_t)v1, (uint64_t (*)(void))type metadata accessor for DocumentUnderstanding_ClientInterface_TopicResult);

  uint64_t result = sub_2367B7DBC(&qword_26889A348);
  a1[3] = result;
  *a1 = 0;
  return result;
}

Swift::Void __swiftcall DUUserInterfaceUnderstandingResult.encode(with:)(NSCoder with)
{
  type metadata accessor for DUUserInterfaceUnderstandingResult();
  sub_2368F7DE4(&qword_26889A350, v2, (void (*)(uint64_t))type metadata accessor for DUUserInterfaceUnderstandingResult);
  uint64_t v3 = (void *)sub_23697AB7C();
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = (void *)sub_23697AF3C();
    [(objc_class *)with.super.isa encodeObject:v4 forKey:v5];
  }
}

uint64_t DUUserInterfaceUnderstandingResult.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return DUUserInterfaceUnderstandingResult.init(coder:)(a1);
}

uint64_t DUUserInterfaceUnderstandingResult.init(coder:)(void *a1)
{
  swift_getObjectType();
  sub_2367CBCC4();
  id v3 = v1;
  if (!sub_23697B47C())
  {

    goto LABEL_5;
  }
  swift_getObjectType();

  sub_2368F7DE4(&qword_26889A350, v4, (void (*)(uint64_t))type metadata accessor for DUUserInterfaceUnderstandingResult);
  sub_23697AB8C();

  uint64_t v5 = v7;
  if (!v7)
  {
LABEL_5:
    swift_getObjectType();
    sub_2367CBFD0();
    return 0;
  }
  swift_getObjectType();
  sub_2367CBFD0();
  return v5;
}

id DUUserInterfaceUnderstandingResult.init()()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC21DocumentUnderstanding34DUUserInterfaceUnderstandingResult_topicIdentifier];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0xE000000000000000;
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding34DUUserInterfaceUnderstandingResult_topicConfidence] = 0;
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for DUUserInterfaceUnderstandingResult();
  return objc_msgSendSuper2(&v3, sel_init);
}

id DUUserInterfaceUnderstandingResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DUUserInterfaceUnderstandingResult();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2368F7CAC@<X0>(void *a1@<X8>)
{
  return DUUserInterfaceUnderstandingResult.protoRepresentation.getter(a1);
}

uint64_t sub_2368F7CD0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_2368F713C(a1);
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for DUUserInterfaceUnderstandingResult()
{
  return self;
}

uint64_t sub_2368F7D1C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2368F7D7C(uint64_t a1)
{
  return MEMORY[0x270FA03F0](a1, &opaque type descriptor for <<opaque return type of DUUserInterfaceUnderstandingResult.protoRepresentation>>, 1);
}

uint64_t sub_2368F7D98()
{
  return sub_2368F7DE4(&qword_268898950, 255, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_ClientInterface_TopicResult);
}

uint64_t sub_2368F7DE4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_2368F7E30()
{
  ObjectType = (objc_class *)swift_getObjectType();
  objc_super v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding20DURequestContentType_rawValue);
  sub_2367BB188();
  uint64_t v3 = *v2;
  uint64_t v4 = (char *)objc_allocWithZone(ObjectType);
  *(void *)&v4[OBJC_IVAR____TtC21DocumentUnderstanding20DURequestContentType_rawValue] = v3;
  v7.receiver = v4;
  v7.super_class = ObjectType;
  id v5 = objc_msgSendSuper2(&v7, sel_init);
  DURequestContentType.formUnion(_:)();
  return v5;
}

id sub_2368F7EC0(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC21DocumentUnderstanding37SpotlightDocumentTaggingUpdateHandler_client] = a1;
  id v3 = objc_allocWithZone((Class)type metadata accessor for SpotlightOutputSink());
  uint64_t v4 = v1;
  id v5 = a1;
  id v6 = objc_msgSend(v3, sel_init);
  *(void *)&v4[OBJC_IVAR____TtC21DocumentUnderstanding37SpotlightDocumentTaggingUpdateHandler_spotlightOutputSink] = v6;

  v9.receiver = v4;
  v9.super_class = (Class)type metadata accessor for SpotlightDocumentTaggingUpdateHandler();
  id v7 = objc_msgSendSuper2(&v9, sel_init);

  return v7;
}

id sub_2368F7F5C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding37SpotlightDocumentTaggingUpdateHandler_client);
  objc_super v2 = (objc_class *)type metadata accessor for DURequestContentType();
  id v3 = (char *)objc_allocWithZone(v2);
  *(void *)&v3[OBJC_IVAR____TtC21DocumentUnderstanding20DURequestContentType_rawValue] = 2;
  v12.receiver = v3;
  v12.super_class = v2;
  id v4 = v1;
  id v5 = objc_msgSendSuper2(&v12, sel_init);
  id v6 = (char *)objc_allocWithZone(v2);
  *(void *)&v6[OBJC_IVAR____TtC21DocumentUnderstanding20DURequestContentType_rawValue] = 256;
  v11.receiver = v6;
  v11.super_class = v2;
  id v7 = objc_msgSendSuper2(&v11, sel_init);
  id v8 = sub_2368F7E30();

  id v9 = objc_allocWithZone((Class)type metadata accessor for DURequest());
  return DURequest.init(client:contentType:strategies:)((uint64_t)v4, (uint64_t)v8, 0);
}

uint64_t sub_2368F803C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 40) = a5;
  *(void *)(v6 + 48) = v5;
  *(unsigned char *)(v6 + 72) = a4;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 16) = a1;
  return MEMORY[0x270FA2498](sub_2368F8068, 0, 0);
}

uint64_t sub_2368F8068()
{
  sub_2367CAB2C();
  if (*(unsigned char *)(v0 + 72) == 1)
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 56) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_2368F8170;
    sub_2368F9A14();
    return sub_236843B08();
  }
  else
  {
    id v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v3;
    *id v3 = v0;
    v3[1] = sub_2368F8230;
    sub_2368F9A14();
    return sub_236843C80();
  }
}

uint64_t sub_2368F8170()
{
  sub_2367CAB2C();
  sub_2367CAA3C();
  uint64_t v1 = *v0;
  sub_2367E5358();
  *objc_super v2 = v1;
  swift_task_dealloc();
  sub_2367ED6FC();
  return v3();
}

uint64_t sub_2368F8230()
{
  sub_2367CAB2C();
  sub_2367CAA3C();
  uint64_t v1 = *v0;
  sub_2367E5358();
  *objc_super v2 = v1;
  swift_task_dealloc();
  sub_2367ED6FC();
  return v3();
}

uint64_t sub_2368F82F0()
{
  sub_2367CAB2C();
  *(void *)(v1 + 472) = v2;
  *(void *)(v1 + 480) = v0;
  *(unsigned char *)(v1 + 648) = v3;
  *(void *)(v1 + 464) = v4;
  uint64_t v5 = sub_23697AD0C();
  *(void *)(v1 + 488) = v5;
  *(void *)(v1 + 496) = *(void *)(v5 - 8);
  *(void *)(v1 + 504) = swift_task_alloc();
  *(void *)(v1 + 512) = swift_task_alloc();
  *(void *)(v1 + 520) = swift_task_alloc();
  *(void *)(v1 + 528) = swift_task_alloc();
  *(void *)(v1 + 536) = swift_task_alloc();
  *(void *)(v1 + 544) = swift_task_alloc();
  *(void *)(v1 + 552) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2368F8400, 0, 0);
}

uint64_t sub_2368F8400()
{
  uint64_t v1 = (void **)(v0[58] + OBJC_IVAR____TtC21DocumentUnderstanding16DUDocumentUpdate_document);
  sub_2367BB188();
  uint64_t v2 = *v1;
  v0[70] = *v1;
  if (v2)
  {
    id v3 = v2;
    sub_23697ACFC();
    uint64_t v4 = sub_23697ACDC();
    os_log_type_t v5 = sub_23697B34C();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)sub_2367CAB80();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_2367AD000, v4, v5, "(SpotlightDocumentTaggingUpdateHandler) Beginning handleDocumentUpdate", v6, 2u);
      sub_2367CAAA0();
    }
    uint64_t v7 = v0[69];
    uint64_t v8 = v0[61];
    uint64_t v9 = v0[62];

    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v0[71] = v10;
    v0[72] = (v9 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v10(v7, v8);
    v0[73] = sub_2368F7F5C();
    id v11 = v3;
    objc_super v12 = (void *)swift_task_alloc();
    v0[74] = v12;
    *objc_super v12 = v0;
    v12[1] = sub_2368F868C;
    return DURequest.executeWithResult(document:)();
  }
  else
  {
    sub_23697ACFC();
    uint64_t v14 = sub_23697ACDC();
    uint64_t v15 = sub_23697B36C();
    if (os_log_type_enabled(v14, (os_log_type_t)v15))
    {
      uint64_t v16 = (uint8_t *)sub_2367CAB80();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_2367AD000, v14, (os_log_type_t)v15, "There is unexpectedly no document to update", v16, 2u);
      sub_2367CAAA0();
    }
    uint64_t v18 = v0[62];
    uint64_t v17 = v0[63];
    uint64_t v19 = v0[61];

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    sub_2368F99C8();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
}

uint64_t sub_2368F868C()
{
  sub_2367CAB2C();
  sub_2367CAA3C();
  id v3 = *(void **)(v2 + 560);
  uint64_t v4 = *v1;
  sub_2367E5358();
  *os_log_type_t v5 = v4;
  *(void *)(v7 + 600) = v6;
  *(void *)(v7 + 608) = v0;
  swift_task_dealloc();

  if (v0) {
    uint64_t v8 = sub_2368F9744;
  }
  else {
    uint64_t v8 = sub_2368F8790;
  }
  return MEMORY[0x270FA2498](v8, 0, 0);
}

void sub_2368F8790()
{
  uint64_t v138 = v0;
  uint64_t v1 = (void *)(*(void *)(v0 + 600) + OBJC_IVAR____TtC21DocumentUnderstanding10DUResponse_topics);
  sub_2367BB188();
  if (*v1
    && (uint64_t v2 = (unint64_t *)(*v1 + OBJC_IVAR____TtC21DocumentUnderstanding24DUTopicDetectionResponse_globalTopics),
        sub_2367BB188(),
        (unint64_t v3 = *v2) != 0))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_23697ACFC();
    uint64_t v4 = sub_23697ACDC();
    os_log_type_t v5 = sub_23697B34C();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)sub_2367CAB80();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_2367AD000, v4, v5, "Received nil topics. Defaulting to empty list", v6, 2u);
      sub_2367CAAA0();
    }
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    uint64_t v8 = *(void *)(v0 + 544);
    uint64_t v9 = *(void *)(v0 + 488);

    v7(v8, v9);
    swift_bridgeObjectRelease();
    unint64_t v3 = MEMORY[0x263F8EE78];
  }
  *(void *)(v0 + 616) = v3;
  uint64_t v10 = (void *)(*(void *)(v0 + 600) + OBJC_IVAR____TtC21DocumentUnderstanding10DUResponse_documentCategories);
  sub_2367BB188();
  if (*v10)
  {
    sub_2367BB188();
    uint64_t v11 = swift_bridgeObjectRetain();
  }
  else
  {
    sub_23697ACFC();
    objc_super v12 = sub_23697ACDC();
    os_log_type_t v13 = sub_23697B34C();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)sub_2367CAB80();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_2367AD000, v12, v13, "Received nil document classes. Defaulting to empty list", v14, 2u);
      sub_2367CAAA0();
    }
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    uint64_t v16 = *(void *)(v0 + 536);
    uint64_t v17 = *(void *)(v0 + 488);

    v15(v16, v17);
    uint64_t v11 = MEMORY[0x263F8EE78];
  }
  unint64_t v126 = v11;
  *(void *)(v0 + 624) = v11;
  uint64_t v18 = *(void **)(v0 + 560);
  uint64_t v19 = *(void **)(v0 + 464);
  sub_23697ACFC();
  id v20 = v18;
  id v21 = v19;
  uint64_t v22 = sub_23697ACDC();
  os_log_type_t v23 = sub_23697B35C();
  BOOL v127 = (void *)v0;
  uint64_t v125 = v3;
  if (os_log_type_enabled(v22, v23))
  {
    os_log_type_t v131 = v23;
    int v24 = *(char **)(v0 + 464);
    uint64_t v25 = v0;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v137 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136315394;
    uint64_t v27 = &v24[OBJC_IVAR____TtC21DocumentUnderstanding16DUDocumentUpdate_documentID];
    sub_2367BB188();
    uint64_t v28 = (uint64_t *)(*(void *)v27 + OBJC_IVAR____TtC21DocumentUnderstanding20DUDocumentIdentifier_documentID);
    sub_2367BB188();
    uint64_t v30 = *v28;
    unint64_t v29 = v28[1];
    swift_bridgeObjectRetain();
    *(void *)(v25 + 448) = sub_2367D90DC(v30, v29, &v137);
    sub_23697B50C();
    swift_bridgeObjectRelease();

    *(_WORD *)(v26 + 12) = 2080;
    DUDocument.text.getter();
    if (v31) {
      uint64_t v32 = sub_2367DD654(256);
    }
    else {
      uint64_t v32 = MEMORY[0x237E069D0](0x5F747865745F6F6ELL, 0xED0000646E756F66);
    }
    char v128 = (void (*)(uint64_t, uint64_t))v127[71];
    uint64_t v37 = (void *)v127[70];
    uint64_t v124 = v127[66];
    uint64_t v38 = v127[61];
    uint64_t v39 = MEMORY[0x237E064D0](v32);
    unint64_t v41 = v40;
    swift_bridgeObjectRelease();
    v127[57] = sub_2367D90DC(v39, v41, &v137);
    sub_23697B50C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2367AD000, v22, v131, "(SpotlightDocumentTaggingUpdateHandler) For document %s, received content prefix %s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    sub_2367CAAA0();
    sub_2367CAAA0();

    v128(v124, v38);
    unint64_t v3 = v125;
  }
  else
  {
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    uint64_t v34 = *(void **)(v0 + 560);
    uint64_t v35 = *(void *)(v0 + 528);
    uint64_t v36 = *(void *)(v0 + 488);

    v33(v35, v36);
  }
  swift_bridgeObjectRetain();
  sub_2367DD714(5, v3);
  uint64_t v133 = v43;
  int64_t v45 = v44 >> 1;
  uint64_t v46 = (v44 >> 1) - v42;
  if (__OFSUB__(v44 >> 1, v42))
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  uint64_t v47 = MEMORY[0x263F8D310];
  if (v46)
  {
    uint64_t v48 = v42;
    sub_2368F99F0(MEMORY[0x263F8EE78]);
    if ((v46 & 0x8000000000000000) == 0)
    {
      uint64_t v49 = v137;
      while (1)
      {
        if (v48 >= v45)
        {
          __break(1u);
          goto LABEL_53;
        }
        int v50 = *(char **)(v133 + 8 * v48);
        sub_2367B7DBC(&qword_26AD89530);
        uint64_t v51 = swift_allocObject();
        *(_OWORD *)(v51 + 16) = xmmword_236987610;
        uint64_t v52 = &v50[OBJC_IVAR____TtC21DocumentUnderstanding13DUTopicResult_topicIdentifier];
        sub_2367BB188();
        uint64_t v54 = *(void *)v52;
        uint64_t v53 = *((void *)v52 + 1);
        *(void *)(v51 + 56) = v47;
        uint64_t v55 = v47;
        unint64_t v56 = sub_2367E4DBC();
        *(void *)(v51 + 64) = v56;
        *(void *)(v51 + 32) = v54;
        *(void *)(v51 + 40) = v53;
        uint64_t v57 = &v50[OBJC_IVAR____TtC21DocumentUnderstanding13DUTopicResult_topicNames];
        sub_2367BB188();
        if (!*(void *)(*(void *)v57 + 16)) {
          break;
        }
        uint64_t v58 = *(void *)(*(void *)v57 + 32);
        uint64_t v59 = (void *)(v51 + 72);
        *(void *)(v51 + 96) = v55;
        *(void *)(v51 + 104) = v56;
        uint64_t v60 = swift_bridgeObjectRetain();
        if (!v60) {
          goto LABEL_27;
        }
        *uint64_t v59 = v58;
LABEL_28:
        *(void *)(v51 + 80) = v60;
        uint64_t v61 = &v50[OBJC_IVAR____TtC21DocumentUnderstanding13DUTopicResult_topicConfidence];
        sub_2367BB188();
        uint64_t v62 = *(void *)v61;
        *(void *)(v51 + 136) = MEMORY[0x263F8D538];
        *(void *)(v51 + 144) = MEMORY[0x263F8D5B8];
        *(void *)(v51 + 112) = v62;
        uint64_t v63 = v50;
        swift_bridgeObjectRetain();
        uint64_t v64 = sub_23697AF9C();
        uint64_t v66 = v65;

        uint64_t v137 = v49;
        unint64_t v67 = *(void *)(v49 + 16);
        if (v67 >= *(void *)(v49 + 24) >> 1)
        {
          sub_2368C6BE4();
          uint64_t v49 = v137;
        }
        *(void *)(v49 + 16) = v67 + 1;
        uint64_t v68 = v49 + 16 * v67;
        *(void *)(v68 + 32) = v64;
        *(void *)(v68 + 40) = v66;
        ++v48;
        uint64_t v47 = MEMORY[0x263F8D310];
        if (v45 == v48)
        {
          swift_unknownObjectRelease();
          goto LABEL_33;
        }
      }
      uint64_t v59 = (void *)(v51 + 72);
      *(void *)(v51 + 96) = v55;
      *(void *)(v51 + 104) = v56;
LABEL_27:
      *uint64_t v59 = 0;
      uint64_t v60 = 0xE000000000000000;
      goto LABEL_28;
    }
    goto LABEL_56;
  }
  swift_unknownObjectRelease();
  uint64_t v49 = MEMORY[0x263F8EE78];
LABEL_33:
  uint64_t v69 = (void *)v127[58];
  v127[55] = v49;
  sub_2367B7DBC(&qword_26AD89010);
  sub_23681E038();
  uint64_t v132 = sub_23697AEEC();
  unint64_t v71 = v70;
  swift_bridgeObjectRelease();
  sub_23697ACFC();
  id v72 = v69;
  swift_bridgeObjectRetain();
  uint64_t v73 = sub_23697ACDC();
  os_log_type_t v74 = sub_23697B35C();
  BOOL v75 = os_log_type_enabled(v73, v74);
  uint64_t v76 = (void (*)(uint64_t, uint64_t))v127[71];
  uint64_t v77 = v127[65];
  uint64_t v134 = v127[61];
  BOOL v78 = (char *)v127[58];
  if (v75)
  {
    uint64_t v79 = swift_slowAlloc();
    uint64_t v137 = swift_slowAlloc();
    *(_DWORD *)uint64_t v79 = 136315394;
    id v80 = &v78[OBJC_IVAR____TtC21DocumentUnderstanding16DUDocumentUpdate_documentID];
    sub_2367BB188();
    uint64_t v81 = (uint64_t *)(*(void *)v80 + OBJC_IVAR____TtC21DocumentUnderstanding20DUDocumentIdentifier_documentID);
    sub_2367BB188();
    uint64_t v83 = *v81;
    unint64_t v82 = v81[1];
    swift_bridgeObjectRetain();
    v127[52] = sub_2367D90DC(v83, v82, &v137);
    sub_23697B50C();
    swift_bridgeObjectRelease();

    *(_WORD *)(v79 + 12) = 2080;
    swift_bridgeObjectRetain();
    v127[53] = sub_2367D90DC(v132, v71, &v137);
    sub_23697B50C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2367AD000, v73, v74, "(SpotlightDocumentTaggingUpdateHandler) For document %s, received top topics %s", (uint8_t *)v79, 0x16u);
    swift_arrayDestroy();
    sub_2367CAAA0();
    sub_2367CAAA0();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  v76(v77, v134);
  swift_bridgeObjectRetain();
  sub_2367DD72C(5, v126);
  uint64_t v135 = v85;
  int64_t v87 = v86 >> 1;
  uint64_t v88 = (v86 >> 1) - v84;
  if (__OFSUB__(v86 >> 1, v84))
  {
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (v88)
  {
    uint64_t v89 = v84;
    sub_2368F99F0(MEMORY[0x263F8EE78]);
    if (v88 < 0)
    {
LABEL_57:
      __break(1u);
      return;
    }
    uint64_t v90 = v137;
    while (v89 < v87)
    {
      uint64_t v91 = *(char **)(v135 + 8 * v89);
      sub_2367B7DBC(&qword_26AD89530);
      uint64_t v92 = swift_allocObject();
      *(_OWORD *)(v92 + 16) = xmmword_236985C70;
      uint64_t v93 = &v91[OBJC_IVAR____TtC21DocumentUnderstanding16DUCategoryResult_categoryIdentifier];
      sub_2367BB188();
      uint64_t v94 = *(void *)v93;
      uint64_t v95 = *((void *)v93 + 1);
      *(void *)(v92 + 56) = MEMORY[0x263F8D310];
      *(void *)(v92 + 64) = sub_2367E4DBC();
      *(void *)(v92 + 32) = v94;
      *(void *)(v92 + 40) = v95;
      BOOL v96 = &v91[OBJC_IVAR____TtC21DocumentUnderstanding16DUCategoryResult_categoryConfidence];
      sub_2367BB188();
      uint64_t v97 = *(void *)v96;
      *(void *)(v92 + 96) = MEMORY[0x263F8D538];
      *(void *)(v92 + 104) = MEMORY[0x263F8D5B8];
      *(void *)(v92 + 72) = v97;
      id v98 = v91;
      swift_bridgeObjectRetain();
      uint64_t v99 = sub_23697AF9C();
      uint64_t v101 = v100;

      uint64_t v137 = v90;
      unint64_t v102 = *(void *)(v90 + 16);
      if (v102 >= *(void *)(v90 + 24) >> 1)
      {
        sub_2368C6BE4();
        uint64_t v90 = v137;
      }
      *(void *)(v90 + 16) = v102 + 1;
      uint64_t v103 = v90 + 16 * v102;
      *(void *)(v103 + 32) = v99;
      *(void *)(v103 + 40) = v101;
      if (v87 == ++v89)
      {
        swift_unknownObjectRelease();
        goto LABEL_46;
      }
    }
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  swift_unknownObjectRelease();
  uint64_t v90 = MEMORY[0x263F8EE78];
LABEL_46:
  uint64_t v104 = v127;
  uint64_t v105 = (void *)v127[58];
  v127[54] = v90;
  uint64_t v136 = sub_23697AEEC();
  unint64_t v107 = v106;
  swift_bridgeObjectRelease();
  sub_23697ACFC();
  id v108 = v105;
  swift_bridgeObjectRetain();
  uint64_t v109 = sub_23697ACDC();
  os_log_type_t v110 = sub_23697B35C();
  BOOL v111 = os_log_type_enabled(v109, v110);
  uint64_t v112 = (void (*)(uint64_t, uint64_t))v127[71];
  uint64_t v113 = v127[64];
  uint64_t v114 = v127[61];
  uint64_t v115 = (char *)v127[58];
  if (v111)
  {
    unint64_t v130 = (void (*)(uint64_t, uint64_t))v127[71];
    uint64_t v129 = v127[61];
    uint64_t v116 = swift_slowAlloc();
    uint64_t v137 = swift_slowAlloc();
    *(_DWORD *)uint64_t v116 = 136315394;
    uint64_t v117 = &v115[OBJC_IVAR____TtC21DocumentUnderstanding16DUDocumentUpdate_documentID];
    sub_2367BB188();
    uint64_t v118 = (uint64_t *)(*(void *)v117 + OBJC_IVAR____TtC21DocumentUnderstanding20DUDocumentIdentifier_documentID);
    sub_2367BB188();
    uint64_t v119 = *v118;
    unint64_t v120 = v118[1];
    swift_bridgeObjectRetain();
    v127[51] = sub_2367D90DC(v119, v120, &v137);
    sub_23697B50C();
    swift_bridgeObjectRelease();

    *(_WORD *)(v116 + 12) = 2080;
    swift_bridgeObjectRetain();
    v127[50] = sub_2367D90DC(v136, v107, &v137);
    uint64_t v104 = v127;
    sub_23697B50C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2367AD000, v109, v110, "(SpotlightDocumentTaggingUpdateHandler) For document %s, received top categories %s", (uint8_t *)v116, 0x16u);
    swift_arrayDestroy();
    sub_2367CAAA0();
    sub_2367CAAA0();

    v130(v113, v129);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v112(v113, v114);
  }
  uint64_t v121 = (void *)swift_task_alloc();
  v104[79] = v121;
  *uint64_t v121 = v104;
  v121[1] = sub_2368F9564;
  char v122 = *((unsigned char *)v104 + 648);
  uint64_t v123 = v104[59];
  sub_2368F803C(v123, v125, v126, v122, 1);
}

uint64_t sub_2368F9564()
{
  sub_2367CAA3C();
  uint64_t v2 = *v1;
  sub_2367E5358();
  *unint64_t v3 = v2;
  *(void *)(v4 + 640) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0) {
    os_log_type_t v5 = sub_2368F97FC;
  }
  else {
    os_log_type_t v5 = sub_2368F968C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_2368F968C()
{
  uint64_t v1 = *(void **)(v0 + 584);
  uint64_t v2 = *(void **)(v0 + 560);

  sub_2368F99C8();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_2368F9744()
{
  sub_2368F99A0(*(void **)(v0 + 584));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2367ED6FC();
  return v1();
}

uint64_t sub_2368F97FC()
{
  uint64_t v1 = *(void **)(v0 + 560);

  sub_2368F99A0(*(void **)(v0 + 600));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_2367ED6FC();
  return v2();
}

void sub_2368F98BC()
{
}

id sub_2368F98FC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SpotlightDocumentTaggingUpdateHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SpotlightDocumentTaggingUpdateHandler()
{
  return self;
}

void sub_2368F99A0(void *a1@<X8>)
{
}

uint64_t sub_2368F99C8()
{
  return swift_task_dealloc();
}

void sub_2368F99F0(uint64_t a1@<X8>)
{
  *(void *)(v1 - 80) = a1;
  sub_2368C6BE4();
}

uint64_t sub_2368F9A14()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_2368F9A28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2367E52D8();
  sub_2367CAA54();
  uint64_t v6 = v5;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  objc_super v12 = (char *)&v21 - v11;
  uint64_t v22 = a2;
  uint64_t v13 = *(void *)(v2 + 16);
  if (v13)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v14 = v6 + 16;
    uint64_t v15 = v16;
    unint64_t v17 = (*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64);
    uint64_t v21 = v2;
    uint64_t v18 = v2 + v17;
    uint64_t v19 = *(void *)(v14 + 56);
    do
    {
      v15(v10, v18, v4);
      sub_23690C268();
      (*(void (**)(char *, uint64_t))(v14 - 8))(v12, v4);
      v18 += v19;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    return v22;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return a2;
}

uint64_t sub_2368F9B70(uint64_t a1)
{
  v2[11] = a1;
  v2[12] = v1;
  uint64_t v3 = sub_2367B7DBC(&qword_26AD89460);
  sub_2367BB430(v3);
  v2[13] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CalendarEvent(0);
  v2[14] = v4;
  sub_2367BB430(v4);
  v2[15] = swift_task_alloc();
  uint64_t v5 = sub_2367B7DBC(&qword_26AD89538);
  sub_2367BB430(v5);
  v2[16] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DUStructuredExtractionResult(0);
  v2[17] = v6;
  v2[18] = *(void *)(v6 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2368F9CC4, 0, 0);
}

uint64_t sub_2368F9CC4()
{
  uint64_t v134 = *(void **)(*(void *)(isUniquelyReferenced_nonNull_native + 88) + 24);
  if (!v134)
  {
    sub_2367C0470();
    uint64_t v150 = swift_allocError();
    *(void *)uint64_t v127 = 0xD000000000000015;
    *(void *)(v127 + 8) = 0x8000000236991520;
    *(unsigned char *)(v127 + 16) = 0;
    goto LABEL_164;
  }
  unint64_t v1 = DUDocument.documentUIElements.getter();
  if (!v1)
  {
LABEL_163:
    uint64_t v150 = MEMORY[0x263F8EE78];
    goto LABEL_164;
  }
  unint64_t v135 = v1;
  uint64_t v133 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v1 >> 62) {
    goto LABEL_161;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v3 = v134;
  if (!v2)
  {
LABEL_162:
    swift_bridgeObjectRelease();

    goto LABEL_163;
  }
LABEL_5:
  unint64_t v4 = 0;
  uint64_t v5 = *(void **)(isUniquelyReferenced_nonNull_native + 160);
  uint64_t v150 = MEMORY[0x263F8EE78];
  uint64_t v144 = v5 + 4;
  uint64_t v142 = (void *)isUniquelyReferenced_nonNull_native;
  uint64_t v143 = *(int **)(isUniquelyReferenced_nonNull_native + 136);
  uint64_t v141 = (void *)*MEMORY[0x263F08510];
  uint64_t v137 = *MEMORY[0x263F39430];
  uint64_t v6 = &selRef_e1723_;
  uint64_t v136 = v2;
  while (1)
  {
    if ((v135 & 0xC000000000000001) != 0)
    {
      unint64_t v7 = v4;
      uint64_t v8 = (char *)MEMORY[0x237E06BC0](v4, v135);
    }
    else
    {
      if (v4 >= *(void *)(v133 + 16)) {
        goto LABEL_150;
      }
      unint64_t v7 = v4;
      uint64_t v8 = (char *)*(id *)(v135 + 32 + 8 * v4);
    }
    BOOL v9 = __OFADD__(v7, 1);
    unint64_t v10 = v7 + 1;
    if (v9) {
      goto LABEL_149;
    }
    unint64_t v140 = v10;
    uint64_t v11 = &v8[OBJC_IVAR____TtC21DocumentUnderstanding19DUDocumentUIElement_text];
    objc_super v12 = v8;
    swift_beginAccess();
    uint64_t v13 = *((void *)v11 + 1);
    if (!v13) {
      goto LABEL_140;
    }
    uint64_t v138 = v12;
    *(void *)(isUniquelyReferenced_nonNull_native + 40) = *(void *)v11;
    *(void *)(isUniquelyReferenced_nonNull_native + 48) = v13;
    *(void *)(isUniquelyReferenced_nonNull_native + 56) = 10;
    *(void *)(isUniquelyReferenced_nonNull_native + 64) = 0xE100000000000000;
    *(void *)(isUniquelyReferenced_nonNull_native + 72) = 32;
    *(void *)(isUniquelyReferenced_nonNull_native + 80) = 0xE100000000000000;
    unint64_t v132 = sub_2367CA700();
    uint64_t v131 = MEMORY[0x263F8D310];
    char v14 = sub_23697B55C();
    uint64_t v16 = v15;
    id v139 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F394B8]), sel_initWithScannerType_passiveIntent_, 0, 1, v131, v132, v132, v132);
    unint64_t v17 = (void *)sub_23697AF3C();
    uint64_t v18 = (v16 & 0x1000000000000000) != 0 ? sub_23697B13C() : sub_23697B14C();
    id v19 = objc_msgSend(self, sel_scanString_range_configuration_, v17, 0, v18, v139);

    sub_2368DC3C8();
    unint64_t v20 = sub_23697B1DC();

    unint64_t v21 = v20;
    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v22 = sub_23697B7FC();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v22 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v22) {
      break;
    }
LABEL_139:
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    objc_super v12 = v139;
LABEL_140:

    unint64_t v4 = v140;
    if (v140 == v136)
    {
      swift_bridgeObjectRelease();

LABEL_164:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      unint64_t v130 = *(uint64_t (**)(uint64_t, BOOL))(isUniquelyReferenced_nonNull_native + 8);
      return v130(v150, v134 == 0);
    }
  }
  uint64_t v23 = 0;
  unint64_t v151 = v20 & 0xC000000000000001;
  char v148 = v14;
  unint64_t v149 = v22;
  unint64_t v146 = v20;
  while (1)
  {
    if (v151) {
      id v24 = (id)MEMORY[0x237E06BC0](v23, v21);
    }
    else {
      id v24 = *(id *)(v21 + 8 * v23 + 32);
    }
    uint64_t v25 = v24;
    uint64_t v26 = (void *)(v23 + 1);
    if (__OFADD__(v23, 1))
    {
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      id v129 = v134;
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_23697B7FC();
      swift_bridgeObjectRelease();
      if (!v2) {
        goto LABEL_162;
      }
      goto LABEL_5;
    }
    [v24 v6[342]];
    sub_23697B2FC();
    if ((v27 & 1) == 0) {
      break;
    }

LABEL_138:
    ++v23;
    if (v26 == (void *)v22) {
      goto LABEL_139;
    }
  }
  uint64_t v152 = v23;
  uint64_t v153 = (void *)(v23 + 1);
  uint64_t v28 = v5;
  unint64_t v29 = *(uint64_t **)(isUniquelyReferenced_nonNull_native + 160);
  uint64_t v30 = sub_23697B1AC();
  uint64_t v31 = v25;
  uint64_t v32 = MEMORY[0x237E064D0](v30);
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();
  id v35 = objc_msgSend(v31, sel_type);
  uint64_t v147 = sub_23697AF6C();
  uint64_t v37 = v36;

  uint64_t v154 = v31;
  LODWORD(v31) = objc_msgSend(v31, sel_category);
  v28[2] = 0;
  v28[3] = 0xE000000000000000;
  *uint64_t v144 = 0u;
  v144[1] = 0u;
  v144[2] = 0u;
  v144[3] = 0u;
  uint64_t v38 = (char *)v29 + v143[10];
  uint64_t v39 = sub_23697A1CC();
  uint64_t v145 = (uint64_t)v38;
  sub_2367E5120();
  sub_2367B7028(v40, v41, v42, v39);
  *(uint64_t *)((char *)v29 + v143[11]) = 0;
  uint64_t v43 = (uint64_t)v29 + v143[12];
  sub_2368DC650(v43);
  unint64_t v44 = (uint64_t *)((char *)v29 + v143[13]);
  *unint64_t v44 = 0;
  v44[1] = 0;
  int64_t v45 = (_OWORD *)((char *)v29 + v143[14]);
  *int64_t v45 = 0u;
  v45[1] = 0u;
  uint64_t v46 = (uint64_t *)((char *)v29 + v143[15]);
  *uint64_t v46 = 0;
  v46[1] = 0;
  *((unsigned char *)v29 + v143[16]) = 0;
  *unint64_t v29 = v32;
  uint64_t v5 = v28;
  v28[1] = v34;
  unint64_t v22 = v149;
  switch((int)v31)
  {
    case 1:
      v28[2] = 7107189;
      v28[3] = 0xE300000000000000;
      if (!v137)
      {
        __break(1u);
        JUMPOUT(0x2368FAFD0);
      }
      BOOL v48 = v147 == sub_23697AF6C() && v37 == v47;
      uint64_t v23 = v152;
      if (v48)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v49 = sub_23697B95C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v49 & 1) == 0)
        {
          id v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F04918]), sel_initWithDDScannerResult_, v154);
          if (!v50) {
            goto LABEL_54;
          }
          uint64_t v51 = v50;
          uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v142;
          uint64_t v52 = v142[16];
          id v53 = objc_msgSend(v50, sel_URL);
          sub_23697A17C();

          sub_2367E5194();
          sub_2367B7028(v54, v55, v56, v39);
          uint64_t v57 = v52;
          uint64_t v5 = v28;
          sub_2367BAB2C(v57, v145, &qword_26AD89538);
          goto LABEL_130;
        }
      }
      unint64_t v70 = v154;
      id v88 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F04908]), sel_initWithDDScannerResult_, v154);
      uint64_t v26 = v153;
      if (!v88) {
        goto LABEL_53;
      }
      uint64_t v89 = v88;
      id v90 = objc_msgSend(v88, sel_emailAddress);
      uint64_t v91 = sub_23697AF6C();
      uint64_t v93 = v92;

      v5[10] = v91;
      v5[11] = v93;
      goto LABEL_121;
    case 2:
      swift_bridgeObjectRelease();
      v28[2] = 0x656E6F6870;
      v28[3] = 0xE500000000000000;
      id v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F04928]), sel_initWithDDScannerResult_, v154);
      uint64_t v23 = v152;
      if (!v59)
      {
LABEL_54:
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v142;
        uint64_t v95 = v142[20];

        sub_2368FC444(v95, (void (*)(void))type metadata accessor for DUStructuredExtractionResult);
        uint64_t v6 = &selRef_e1723_;
        unint64_t v21 = v146;
        uint64_t v26 = v153;
        goto LABEL_138;
      }
      uint64_t v60 = v59;
      id v61 = objc_msgSend(v59, sel_phoneNumber);
      uint64_t v62 = sub_23697AF6C();
      uint64_t v64 = v63;

      v5[6] = v62;
      v5[7] = v64;
      id v65 = objc_msgSend(v60, sel_label);
      uint64_t v6 = &selRef_e1723_;
      if (v65)
      {
        uint64_t v66 = v65;
        uint64_t v67 = sub_23697AF6C();
        uint64_t v69 = v68;
      }
      else
      {

        uint64_t v67 = 0;
        uint64_t v69 = 0;
      }
      v5[8] = v67;
      v5[9] = v69;
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v142;
      goto LABEL_131;
    case 3:
      swift_bridgeObjectRelease();
      v28[2] = 0x73736572646461;
      v28[3] = 0xE700000000000000;
      unint64_t v70 = v154;
      id v71 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F04930]), sel_initWithDDScannerResult_, v154);
      char v72 = v148;
      uint64_t v23 = v152;
      uint64_t v26 = v153;
      if (!v71)
      {
LABEL_53:
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v142;
        uint64_t v94 = v142[20];

        sub_2368FC444(v94, (void (*)(void))type metadata accessor for DUStructuredExtractionResult);
        uint64_t v6 = &selRef_e1723_;
LABEL_137:
        unint64_t v21 = v146;
        goto LABEL_138;
      }
      uint64_t v73 = v71;
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)&selRef_street;
      sub_2367E4CC0(v71, (SEL *)&selRef_street);
      uint64_t v75 = v74;
      swift_bridgeObjectRelease();
      if (v75)
      {
        id v76 = v141;
        uint64_t v77 = sub_2367E4CC0(v73, (SEL *)&selRef_street);
        if (v78)
        {
          uint64_t isUniquelyReferenced_nonNull_native = v77;
          swift_isUniquelyReferenced_nonNull_native();
          sub_2368FC658();
          sub_2368FC628();
          if (v9) {
            goto LABEL_151;
          }
          sub_2368FC71C();
          sub_2367B7DBC(&qword_2688988A0);
          uint64_t v79 = v155;
          if (sub_2368FC5E8())
          {
            sub_2368FE964(v76);
            sub_2367FAE50();
            if (!v48) {
              goto LABEL_145;
            }
          }
          if (v148)
          {
            sub_2368FC608();
            sub_2368FC7E8();
          }
          else
          {
            sub_2368FC578();
            uint64_t v23 = v152;
            if (v9) {
              goto LABEL_156;
            }
            v155[2] = v98;
            id v99 = v76;
          }
          swift_bridgeObjectRelease();

          char v72 = v148;
          unint64_t v22 = v149;
        }
        else
        {
          BOOL v96 = (void *)MEMORY[0x263F8EE80];
          swift_bridgeObjectRetain();
          sub_2368FE964(v76);
          uint64_t v79 = v97;
          swift_bridgeObjectRelease();
          if (v79)
          {
            uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v155 = v96;
            sub_2367B7DBC(&qword_2688988A0);
            sub_2368FC5B4();
            sub_2368FC63C();
            sub_2367E4EF4();
            sub_2368FC530((unint64_t *)&qword_2688981A0, type metadata accessor for NSTextCheckingKey);
            sub_2368FC5D4();
            sub_23697B7AC();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
          }
          else
          {

            uint64_t v79 = v96;
          }
        }
        uint64_t v26 = v153;
      }
      else
      {
        uint64_t v79 = (void *)MEMORY[0x263F8EE80];
      }
      sub_2367E4CC0(v73, (SEL *)&selRef_city);
      sub_2368FC748();
      if (isUniquelyReferenced_nonNull_native)
      {
        id v100 = v141;
        sub_2368FC674();
        if (v101)
        {
          sub_2368FC700();
          sub_2368FC658();
          sub_2368FC628();
          if (v9) {
            goto LABEL_152;
          }
          sub_2368FC71C();
          sub_2367B7DBC(&qword_2688988A0);
          uint64_t v79 = v155;
          if (sub_2368FC5E8())
          {
            sub_2368FE964(v26);
            sub_2367FAE50();
            if (!v48) {
              goto LABEL_145;
            }
          }
          if (v72)
          {
            sub_2368FC608();
            sub_2368FC7E8();
          }
          else
          {
            sub_2368FC578();
            uint64_t v23 = v152;
            if (v9) {
              goto LABEL_157;
            }
            v155[2] = v102;
            id v103 = v26;
          }
          swift_bridgeObjectRelease();

          char v72 = v148;
          unint64_t v22 = v149;
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_2368FE964(v26);
          sub_2367E514C();
          if (isUniquelyReferenced_nonNull_native)
          {
            swift_isUniquelyReferenced_nonNull_native();
            sub_2368FC690();
            sub_2367B7DBC(&qword_2688988A0);
            sub_2368FC5B4();
            sub_2368FC63C();
            sub_2367E4EF4();
            sub_2368FC530((unint64_t *)&qword_2688981A0, type metadata accessor for NSTextCheckingKey);
            sub_2368FC5D4();
            sub_23697B7AC();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
          }
          else
          {
          }
        }
        uint64_t v26 = v153;
      }
      sub_2367E4CC0(v73, (SEL *)&selRef_state);
      sub_2368FC748();
      if (isUniquelyReferenced_nonNull_native)
      {
        id v104 = v141;
        sub_2368FC674();
        if (v105)
        {
          sub_2368FC700();
          sub_2368FC658();
          sub_2368FC628();
          if (v9) {
            goto LABEL_153;
          }
          sub_2368FC71C();
          sub_2367B7DBC(&qword_2688988A0);
          uint64_t v79 = v155;
          if (sub_2368FC5E8())
          {
            sub_2368FE964(v26);
            sub_2367FAE50();
            if (!v48) {
              goto LABEL_145;
            }
          }
          if (v72)
          {
            sub_2368FC608();
            sub_2368FC7E8();
          }
          else
          {
            sub_2368FC578();
            uint64_t v23 = v152;
            if (v9) {
              goto LABEL_158;
            }
            v155[2] = v106;
            id v107 = v26;
          }
          swift_bridgeObjectRelease();

          char v72 = v148;
          unint64_t v22 = v149;
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_2368FE964(v26);
          sub_2367E514C();
          if (isUniquelyReferenced_nonNull_native)
          {
            swift_isUniquelyReferenced_nonNull_native();
            sub_2368FC690();
            sub_2367B7DBC(&qword_2688988A0);
            sub_2368FC5B4();
            sub_2368FC63C();
            sub_2367E4EF4();
            sub_2368FC530((unint64_t *)&qword_2688981A0, type metadata accessor for NSTextCheckingKey);
            sub_2368FC5D4();
            sub_23697B7AC();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
          }
          else
          {
          }
        }
        uint64_t v26 = v153;
      }
      sub_2367E4CC0(v73, (SEL *)&selRef_postalCode);
      sub_2368FC748();
      if (!isUniquelyReferenced_nonNull_native) {
        goto LABEL_111;
      }
      id v108 = v141;
      sub_2368FC674();
      if (!v109)
      {
        swift_bridgeObjectRetain();
        sub_2368FE964(v26);
        sub_2367E514C();
        if (isUniquelyReferenced_nonNull_native)
        {
          swift_isUniquelyReferenced_nonNull_native();
          sub_2368FC690();
          sub_2367B7DBC(&qword_2688988A0);
          sub_2368FC5B4();
          sub_2368FC63C();
          sub_2367E4EF4();
          sub_2368FC530((unint64_t *)&qword_2688981A0, type metadata accessor for NSTextCheckingKey);
          sub_2368FC5D4();
          sub_23697B7AC();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
        }
        else
        {
        }
LABEL_110:
        uint64_t v26 = v153;
LABEL_111:
        sub_2367E4CC0(v73, (SEL *)&selRef_country);
        sub_2368FC748();
        if (isUniquelyReferenced_nonNull_native)
        {
          id v112 = v141;
          uint64_t v113 = sub_2368FC674();
          if (v114)
          {
            uint64_t isUniquelyReferenced_nonNull_native = v113;
            uint64_t v115 = v114;
            swift_isUniquelyReferenced_nonNull_native();
            sub_2368FC658();
            if (__OFADD__(v79[2], (v116 & 1) == 0)) {
              goto LABEL_155;
            }
            sub_2368FC71C();
            sub_2367B7DBC(&qword_2688988A0);
            if (sub_23697B78C())
            {
              sub_2368FE964(v26);
              sub_2367FAE50();
              if (!v48) {
                goto LABEL_145;
              }
              unint64_t v22 = v117;
            }
            if (v72)
            {
              uint64_t v118 = isUniquelyReferenced_nonNull_native;
              uint64_t v119 = (uint64_t *)(v155[7] + 16 * v22);
              swift_bridgeObjectRelease();
              *uint64_t v119 = v118;
              v119[1] = v115;
              uint64_t v23 = v152;
            }
            else
            {
              v155[(v22 >> 6) + 8] |= 1 << v22;
              *(void *)(v155[6] + 8 * v22) = v26;
              unint64_t v120 = (uint64_t *)(v155[7] + 16 * v22);
              *unint64_t v120 = isUniquelyReferenced_nonNull_native;
              v120[1] = v115;
              uint64_t v121 = v155[2];
              BOOL v9 = __OFADD__(v121, 1);
              uint64_t v122 = v121 + 1;
              uint64_t v23 = v152;
              if (v9) {
                goto LABEL_160;
              }
              v155[2] = v122;
              id v123 = v26;
            }
            swift_bridgeObjectRelease();

            unint64_t v22 = v149;
          }
          else
          {
            swift_bridgeObjectRetain();
            sub_2368FE964(v26);
            sub_2367E514C();
            if (isUniquelyReferenced_nonNull_native)
            {
              swift_isUniquelyReferenced_nonNull_native();
              sub_2368FC690();
              sub_2367B7DBC(&qword_2688988A0);
              sub_2368FC5B4();
              sub_2368FC63C();
              sub_2367E4EF4();
              sub_2368FC530((unint64_t *)&qword_2688981A0, type metadata accessor for NSTextCheckingKey);
              sub_2368FC5D4();
              sub_23697B7AC();
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
            }
            else
            {
            }
          }
          swift_bridgeObjectRelease();
          uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v142;
LABEL_130:
          uint64_t v6 = &selRef_e1723_;
LABEL_131:
          uint64_t v26 = v153;
        }
        else
        {
          swift_bridgeObjectRelease();

LABEL_121:
          uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v142;
          uint64_t v6 = &selRef_e1723_;
        }
        sub_2368FC498();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v150 = sub_2367D2354(0, *(void *)(v150 + 16) + 1, 1, v150);
        }
        unint64_t v125 = *(void *)(v150 + 16);
        unint64_t v124 = *(void *)(v150 + 24);
        if (v125 >= v124 >> 1) {
          uint64_t v150 = sub_2367D2354(v124 > 1, v125 + 1, 1, v150);
        }
        uint64_t v126 = *(void *)(isUniquelyReferenced_nonNull_native + 160);
        *(void *)(v150 + 16) = v125 + 1;
        sub_2368FC4E4();

        sub_2368FC444(v126, (void (*)(void))type metadata accessor for DUStructuredExtractionResult);
        goto LABEL_137;
      }
      sub_2368FC700();
      sub_2368FC658();
      sub_2368FC628();
      if (v9) {
        goto LABEL_154;
      }
      sub_2368FC71C();
      sub_2367B7DBC(&qword_2688988A0);
      uint64_t v79 = v155;
      if ((sub_2368FC5E8() & 1) == 0 || (sub_2368FE964(v26), sub_2367FAE50(), v48))
      {
        if (v72)
        {
          sub_2368FC608();
          sub_2368FC7E8();
        }
        else
        {
          sub_2368FC578();
          uint64_t v23 = v152;
          if (v9) {
            goto LABEL_159;
          }
          v155[2] = v110;
          id v111 = v26;
        }
        swift_bridgeObjectRelease();

        char v72 = v148;
        unint64_t v22 = v149;
        goto LABEL_110;
      }
LABEL_145:
      type metadata accessor for NSTextCheckingKey(0);
      return sub_23697B9AC();
    case 4:
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v142;
      uint64_t v80 = v142[13];
      uint64_t v81 = v142[14];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      strcpy((char *)v5 + 16, "calendarEvent");
      *((_WORD *)v5 + 15) = -4864;
      sub_2368FAFE0(v154, v32, v34, v80);
      swift_bridgeObjectRelease();
      if (sub_2367B85F8(v80, 1, v81) != 1)
      {
        uint64_t v84 = v142[14];
        sub_2368FC4E4();
        sub_2367E4E08(v43, &qword_26AD89460);
        sub_2368FC4E4();
        sub_2367E5194();
        sub_2367B7028(v85, v86, v87, v84);
        uint64_t v6 = &selRef_e1723_;
        uint64_t v23 = v152;
        goto LABEL_131;
      }
      uint64_t v82 = v142[20];
      uint64_t v83 = v142[13];

      sub_2367E4E08(v83, &qword_26AD89460);
      sub_2368FC444(v82, (void (*)(void))type metadata accessor for DUStructuredExtractionResult);
      uint64_t v6 = &selRef_e1723_;
      unint64_t v21 = v146;
LABEL_48:
      uint64_t v23 = v152;
      uint64_t v26 = v153;
      goto LABEL_138;
    default:
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v142;
      uint64_t v58 = v142[20];
      swift_bridgeObjectRelease();

      sub_2368FC444(v58, (void (*)(void))type metadata accessor for DUStructuredExtractionResult);
      uint64_t v6 = &selRef_e1723_;
      unint64_t v21 = v146;
      unint64_t v22 = v149;
      goto LABEL_48;
  }
}

uint64_t sub_2368FAFE0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_2367B7DBC(&qword_26AD89410);
  uint64_t v9 = sub_2367BB430(v8);
  MEMORY[0x270FA5388](v9);
  sub_2367BB610();
  uint64_t v184 = v10;
  sub_2367D9914();
  MEMORY[0x270FA5388](v11);
  sub_2367E5460();
  uint64_t v194 = v12;
  uint64_t v13 = sub_2367E5188();
  uint64_t v14 = type metadata accessor for CalendarEvent(v13);
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v15);
  sub_2367BB260();
  id v193 = v16;
  sub_2367E5188();
  uint64_t v192 = sub_23697A0AC();
  sub_2367CAA54();
  uint64_t v197 = v17;
  MEMORY[0x270FA5388](v18);
  sub_2367BB260();
  uint64_t v200 = v19;
  uint64_t v20 = sub_2367B7DBC(&qword_26AD89430);
  uint64_t v21 = sub_2367BB430(v20);
  MEMORY[0x270FA5388](v21);
  sub_2367BB610();
  uint64_t v182 = v22;
  sub_2367D9914();
  MEMORY[0x270FA5388](v23);
  uint64_t v190 = &v175[-v24];
  sub_2367D9914();
  MEMORY[0x270FA5388](v25);
  sub_2367E5460();
  uint64_t v189 = v26;
  sub_2367E5188();
  uint64_t v198 = sub_23697A43C();
  sub_2367CAA54();
  uint64_t v188 = v27;
  MEMORY[0x270FA5388](v28);
  sub_2367BB610();
  uint64_t v187 = v29;
  sub_2367D9914();
  MEMORY[0x270FA5388](v30);
  sub_2367E5460();
  uint64_t v183 = v31;
  sub_2367E5188();
  sub_23697A3BC();
  sub_2367CAA54();
  uint64_t v195 = v33;
  uint64_t v196 = v32;
  MEMORY[0x270FA5388](v32);
  sub_2367BB260();
  uint64_t v203 = v34;
  uint64_t v35 = sub_2367B7DBC((uint64_t *)&off_26AD89548);
  uint64_t v36 = sub_2367BB430(v35);
  MEMORY[0x270FA5388](v36);
  sub_2367BB610();
  uint64_t v191 = v37;
  sub_2367D9914();
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = &v175[-v39];
  uint64_t v204 = sub_23697A2DC();
  sub_2367CAA54();
  uint64_t v202 = v41;
  MEMORY[0x270FA5388](v42);
  sub_2367BB610();
  uint64_t v185 = v43;
  sub_2367D9914();
  MEMORY[0x270FA5388](v44);
  uint64_t v199 = &v175[-v45];
  sub_2367D9914();
  MEMORY[0x270FA5388](v46);
  sub_2367E5460();
  uint64_t v201 = v47;
  sub_2367E5188();
  uint64_t v48 = sub_236979F7C();
  sub_2367CAA54();
  uint64_t v50 = v49;
  MEMORY[0x270FA5388](v51);
  id v53 = &v175[-((v52 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v205 = a2;
  uint64_t v206 = a3;
  sub_236979F3C();
  sub_2367CA700();
  sub_23697B53C();
  LOBYTE(a3) = v54;
  (*(void (**)(unsigned char *, uint64_t))(v50 + 8))(v53, v48);
  if (a3)
  {
    sub_2367E5120();
    uint64_t v78 = v14;
    return sub_2367B7028(v75, v76, v77, v78);
  }
  uint64_t v186 = v14;
  uint64_t v55 = a4;
  id v56 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F04900]), sel_initWithDDScannerResult_, a1);
  if (!v56)
  {
LABEL_15:
    sub_2367E5120();
    uint64_t v78 = v186;
    return sub_2367B7028(v75, v76, v77, v78);
  }
  uint64_t v57 = v56;
  id v58 = objc_msgSend(v56, sel_startDate);
  if (!v58)
  {
    sub_2367E5120();
    sub_2367B7028(v79, v80, v81, v204);
    goto LABEL_14;
  }
  id v59 = v58;
  sub_23697A2BC();

  uint64_t v61 = v202 + 32;
  uint64_t v60 = *(void (**)(void))(v202 + 32);
  uint64_t v62 = v204;
  sub_2367E5454();
  v60();
  sub_2367E5194();
  sub_2367B7028(v63, v64, v65, v62);
  if (sub_2367B85F8((uint64_t)v40, 1, v62) == 1)
  {
LABEL_14:

    sub_2367E4E08((uint64_t)v40, (uint64_t *)&off_26AD89548);
    goto LABEL_15;
  }
  sub_2367E5454();
  v60();
  id v66 = objc_msgSend(a1, sel_type);
  uint64_t v67 = sub_23697AF6C();
  uint64_t v69 = v68;

  sub_2368DAF30(a1);
  uint64_t result = *MEMORY[0x263F39470];
  if (!*MEMORY[0x263F39470])
  {
    __break(1u);
    goto LABEL_92;
  }
  BOOL v72 = v67 == sub_23697AF6C() && v69 == v71;
  uint64_t v73 = (uint64_t *)MEMORY[0x263F39428];
  if (v72) {
    goto LABEL_29;
  }
  sub_2367E4FFC();
  sub_2367E51D4();
  if (v67)
  {
LABEL_11:
    int v74 = 1;
    goto LABEL_31;
  }
  uint64_t result = *v73;
  if (!*v73)
  {
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  if (v67 == sub_23697AF6C() && v69 == v82) {
    goto LABEL_29;
  }
  sub_2367E4FFC();
  sub_2367E51D4();
  if (v67) {
    goto LABEL_11;
  }
  uint64_t result = *MEMORY[0x263F39468];
  if (!*MEMORY[0x263F39468])
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  if (v67 == sub_23697AF6C() && v69 == v84) {
LABEL_29:
  }
    int v74 = 1;
  else {
    int v74 = sub_2367E4FFC();
  }
  swift_bridgeObjectRelease();
LABEL_31:
  uint64_t result = *MEMORY[0x263F39420];
  if (!*MEMORY[0x263F39420])
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  BOOL v87 = v67 == sub_23697AF6C() && v69 == v86;
  uint64_t v177 = v60;
  int v180 = v74;
  id v181 = v57;
  if (v87) {
    goto LABEL_51;
  }
  sub_2367E4FFC();
  sub_2367E51D4();
  if (v67)
  {
LABEL_52:
    swift_bridgeObjectRelease();
    goto LABEL_53;
  }
  uint64_t result = *MEMORY[0x263F39428];
  if (!*MEMORY[0x263F39428]) {
    goto LABEL_94;
  }
  if (v67 == sub_23697AF6C() && v69 == v88)
  {
LABEL_51:
    swift_bridgeObjectRelease();
    goto LABEL_52;
  }
  sub_2367E4FFC();
  sub_2367E51D4();
  if (v67) {
    goto LABEL_52;
  }
  uint64_t result = *MEMORY[0x263F39418];
  if (*MEMORY[0x263F39418])
  {
    if (v67 == sub_23697AF6C() && v69 == v90)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      sub_2367E4FFC();
      sub_2367E51D4();
      swift_bridgeObjectRelease();
      if ((v67 & 1) == 0)
      {
        if (v74)
        {
          int v176 = 0;
          goto LABEL_55;
        }
        sub_2367E507C();
        v174();
        swift_bridgeObjectRelease();

        goto LABEL_15;
      }
    }
LABEL_53:
    int v92 = 1;
    if ((v74 & 1) == 0)
    {
LABEL_56:
      char v96 = sub_2367E4F54();
      uint64_t v179 = v61;
      uint64_t v178 = v55;
      if (v96 & 1) != 0 || (sub_2367E4EC4() & 1) != 0 || (sub_2367E4F14())
      {
        if (sub_2367E4F54())
        {
          sub_2367B7DBC(&qword_26AD89518);
          sub_2367E52D8();
          sub_2367CAA54();
          *(_OWORD *)(sub_2367E51A0() + 16) = xmmword_236987050;
          sub_2367E5394();
          v97();
          sub_2367E53BC();
        }
        if (sub_2367E4EC4())
        {
          sub_2367B7DBC(&qword_26AD89518);
          sub_2367E52D8();
          sub_2367CAA54();
          *(_OWORD *)(sub_2367E51A0() + 16) = xmmword_236987050;
          sub_2367E5394();
          v98();
          sub_2367E53BC();
        }
        id v99 = v193;
        char v100 = sub_2367E4F14();
        swift_bridgeObjectRelease();
        if (v100)
        {
          sub_2367B7DBC(&qword_26AD89518);
          uint64_t v101 = sub_2367E52D8();
          sub_2367CAA54();
          uint64_t v103 = v102;
          unint64_t v104 = (*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
          uint64_t v105 = swift_allocObject();
          *(_OWORD *)(v105 + 16) = xmmword_236987050;
          (*(void (**)(unint64_t, void, uint64_t))(v103 + 104))(v105 + v104, *MEMORY[0x263F078A0], v101);
          sub_2367E53BC();
        }
        uint64_t v106 = v194;
      }
      else
      {
        swift_bridgeObjectRelease();
        if (v92)
        {
          sub_2367B7DBC(&qword_26AD89518);
          sub_2367E52D8();
          sub_2367CAA54();
          uint64_t v160 = v159;
          *(_OWORD *)(swift_allocObject() + 16) = xmmword_236987610;
          uint64_t v161 = *(void (**)(void))(v160 + 104);
          sub_2367E52C8();
          v161();
          sub_2367E52C8();
          v161();
          sub_2367E52C8();
          v161();
          sub_2367E53BC();
        }
        id v99 = v193;
        uint64_t v106 = v194;
      }
      uint64_t v107 = v187;
      uint64_t v108 = v188;
      uint64_t v109 = sub_23697A37C();
      id v110 = sub_2367E53D4(v109, sel_startTimeZone);
      uint64_t v111 = v189;
      if (v110)
      {
        id v112 = v110;
        sub_23697A41C();

        uint64_t v113 = *(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 32);
        uint64_t v114 = v198;
        v113(v111, v107, v198);
        sub_2367E5194();
        sub_2367B7028(v115, v116, v117, v114);
        if (sub_2367B85F8(v111, 1, v114) != 1)
        {
          uint64_t v118 = v183;
          uint64_t v119 = v111;
          uint64_t v120 = v198;
          v113(v183, v119, v198);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 16))(v107, v118, v120);
          sub_23697A39C();
          (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v118, v120);
          goto LABEL_71;
        }
      }
      else
      {
        sub_2367E5120();
        sub_2367B7028(v121, v122, v123, v198);
      }
      sub_2367E4E08(v111, &qword_26AD89430);
LABEL_71:
      uint64_t v124 = v192;
      uint64_t v125 = sub_23697A34C();
      id v126 = sub_2367E53D4(v125, sel_startTimeZone);
      if (v126)
      {
        uint64_t v127 = v126;
        uint64_t v128 = (uint64_t)v190;
        sub_23697A41C();

        uint64_t v129 = 0;
      }
      else
      {
        uint64_t v129 = 1;
        uint64_t v128 = (uint64_t)v190;
      }
      sub_2367B7028(v128, v129, 1, v198);
      uint64_t v130 = v200;
      sub_23697A09C();
      uint64_t v131 = v186;
      (*(void (**)(BOOL *, uint64_t, uint64_t))(v197 + 16))(&v99[*(int *)(v186 + 20)], v130, v124);
      uint64_t v132 = (uint64_t)&v99[*(int *)(v131 + 24)];
      sub_2368DC650(v132);
      *id v99 = (v180 & 1) == 0;
      uint64_t v133 = sub_2368DC650(v106);
      id v134 = sub_2367E53D4(v133, sel_endDate);
      if (v134)
      {
        unint64_t v135 = v134;
        sub_23697A2BC();

        uint64_t v136 = v191;
        uint64_t v137 = v204;
        uint64_t v138 = v177;
        sub_2367E5454();
        v138();
        sub_2367E5194();
        sub_2367B7028(v139, v140, v141, v137);
        if (sub_2367B85F8(v136, 1, v137) != 1)
        {
          uint64_t v142 = v185;
          sub_2367E5454();
          v138();
          uint64_t v143 = v184;
          sub_23697A34C();
          swift_bridgeObjectRelease();
          sub_2367E5194();
          sub_2367B7028(v144, v145, v146, v124);
          sub_2367BAB2C(v143, v106, &qword_26AD89410);
          uint64_t v147 = sub_2367B85F8(v106, 1, v124);
          if (v147)
          {

            char v148 = *(void (**)(uint64_t, uint64_t))(v202 + 8);
            v148(v142, v137);
            uint64_t v149 = sub_2367E5040();
            v150(v149);
            sub_2367E507C();
            v151();
            v148(v201, v137);
          }
          else
          {
            id v162 = sub_2367E53D4(v147, sel_endTimeZone);
            if (v162)
            {
              uint64_t v163 = v162;
              uint64_t v164 = v182;
              sub_23697A41C();

              uint64_t v165 = 0;
            }
            else
            {
              uint64_t v165 = 1;
              uint64_t v164 = v182;
            }
            sub_2367B7028(v164, v165, 1, v198);
            sub_23697A09C();

            uint64_t v166 = *(void (**)(uint64_t, uint64_t))(v202 + 8);
            uint64_t v167 = v204;
            v166(v185, v204);
            uint64_t v168 = sub_2367E5040();
            v169(v168);
            sub_2367E507C();
            v170();
            v166(v201, v167);
          }
          sub_2367E4B0C(v106, v132);
          goto LABEL_88;
        }
      }
      else
      {
        uint64_t v136 = v191;
        sub_2367E5120();
        sub_2367B7028(v152, v153, v154, v204);
      }
      swift_bridgeObjectRelease();

      uint64_t v155 = sub_2367E5040();
      v156(v155);
      sub_2367E507C();
      v157();
      sub_2367E507C();
      v158();
      sub_2367E4E08(v136, (uint64_t *)&off_26AD89548);
LABEL_88:
      sub_2368FC498();
      sub_2367E5194();
      sub_2367B7028(v171, v172, v173, v186);
      sub_2367E4E08(v106, &qword_26AD89410);
      return sub_2368FC444((uint64_t)v99, (void (*)(void))type metadata accessor for CalendarEvent);
    }
    int v176 = 1;
LABEL_55:
    sub_2367B7DBC(&qword_26AD89518);
    sub_2367E52D8();
    sub_2367CAA54();
    uint64_t v94 = v93;
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_236987610;
    uint64_t v95 = *(void (**)(void))(v94 + 104);
    sub_2367E5330();
    v95();
    sub_2367E5330();
    v95();
    sub_2367E5330();
    v95();
    sub_23690BC50();
    int v92 = v176;
    goto LABEL_56;
  }
LABEL_96:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DUStructuredExtractionLocalImplementation()
{
  return self;
}

uint64_t sub_2368FBF44(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *unint64_t v4 = v2;
  v4[1] = sub_2367C034C;
  return sub_2368F9B70(a2);
}

uint64_t sub_2368FBFE0()
{
  sub_2368FC728();
  uint64_t v2 = sub_2368FE964(v1);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0) {
    return 0;
  }
  swift_isUniquelyReferenced_nonNull_native();
  sub_2368FC6C8();
  sub_2367B7DBC(&qword_2688988A0);
  sub_2368FC774();

  uint64_t v5 = sub_2368FC7D4();
  type metadata accessor for NSTextCheckingKey(v5);
  sub_2368FC530((unint64_t *)&qword_2688981A0, type metadata accessor for NSTextCheckingKey);
  sub_23697B7AC();
  *uint64_t v0 = v7;
  swift_bridgeObjectRelease();
  return v4;
}

double sub_2368FC0E0()
{
  sub_2368FC6A0();
  unint64_t v4 = sub_2368FE8EC(v3, v1);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  if (v6)
  {
    swift_isUniquelyReferenced_nonNull_native();
    sub_2368FC6E4();
    sub_2367B7DBC(&qword_268899F10);
    sub_2368FC794();
    sub_2368FC7B4();
    sub_2367F0ED8(*(void *)(v6 + 56) + 40 * v4, v2);
    sub_2367B7DBC(&qword_26AD8BC20);
    sub_23697B7AC();
    *uint64_t v0 = v6;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
    *(unsigned char *)(v2 + 32) = -1;
  }
  return result;
}

uint64_t sub_2368FC1BC()
{
  sub_2368FC728();
  uint64_t v2 = sub_2368FE964(v1);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0) {
    return 0;
  }
  swift_isUniquelyReferenced_nonNull_native();
  sub_2368FC6C8();
  sub_2367B7DBC(&qword_268899658);
  sub_2368FC774();

  uint64_t v5 = sub_2368FC7D4();
  type metadata accessor for DUExtractionAttributeKey(v5);
  sub_2368FC530((unint64_t *)&qword_268898190, type metadata accessor for DUExtractionAttributeKey);
  sub_23697B7AC();
  *uint64_t v0 = v7;
  swift_bridgeObjectRelease();
  return v4;
}

double sub_2368FC2BC()
{
  sub_2368FC6A0();
  unint64_t v4 = sub_2368FE8EC(v3, v1);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  if (v6)
  {
    swift_isUniquelyReferenced_nonNull_native();
    sub_2368FC6E4();
    sub_2367B7DBC(&qword_268899F18);
    sub_2368FC794();
    sub_2368FC7B4();
    sub_2367F0F40((_OWORD *)(*(void *)(v6 + 56) + 32 * v4), v2);
    sub_23697B7AC();
    *uint64_t v0 = v6;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *uint64_t v2 = 0u;
    v2[1] = 0u;
  }
  return result;
}

uint64_t sub_2368FC3A8(void *a1)
{
  return sub_2367E4CC0(a1, (SEL *)&selRef_street);
}

uint64_t sub_2368FC3B4(void *a1)
{
  return sub_2367E4CC0(a1, (SEL *)&selRef_city);
}

uint64_t sub_2368FC3C0(void *a1)
{
  return sub_2367E4CC0(a1, (SEL *)&selRef_state);
}

uint64_t sub_2368FC3CC(void *a1)
{
  return sub_2367E4CC0(a1, (SEL *)&selRef_postalCode);
}

uint64_t sub_2368FC3D8(void *a1)
{
  return sub_2367E4CC0(a1, (SEL *)&selRef_country);
}

uint64_t sub_2368FC3E4(void *a1)
{
  id v1 = objc_msgSend(a1, sel_subResults);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_2368DC3C8();
  uint64_t v3 = sub_23697B1DC();

  return v3;
}

uint64_t sub_2368FC444(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_2367BB1EC();
  sub_2367E507C();
  v3();
  return a1;
}

uint64_t sub_2368FC498()
{
  uint64_t v1 = sub_2368FC760();
  v2(v1);
  sub_2367BB1EC();
  uint64_t v3 = sub_2367BB4F4();
  v4(v3);
  return v0;
}

uint64_t sub_2368FC4E4()
{
  uint64_t v1 = sub_2368FC760();
  v2(v1);
  sub_2367BB1EC();
  uint64_t v3 = sub_2367BB4F4();
  v4(v3);
  return v0;
}

uint64_t sub_2368FC530(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2368FC578()
{
  *(void *)(v1 + 8 * (v4 >> 6) + 64) |= 1 << v4;
  *(void *)(*(void *)(v1 + 48) + 8 * v4) = v3;
  uint64_t v5 = (void *)(*(void *)(v1 + 56) + 16 * v4);
  *uint64_t v5 = v2;
  v5[1] = v0;
}

uint64_t sub_2368FC5B4()
{
  return sub_23697B78C();
}

uint64_t sub_2368FC5D4()
{
  return v0;
}

uint64_t sub_2368FC5E8()
{
  return sub_23697B78C();
}

uint64_t sub_2368FC608()
{
  return swift_bridgeObjectRelease();
}

void sub_2368FC63C()
{
  uint64_t v3 = *(void **)(*(void *)(*(void *)(v1 - 88) + 48) + 8 * v0);
}

uint64_t sub_2368FC658()
{
  *(void *)(v2 - 88) = v0;
  return sub_2368FE964(v1);
}

uint64_t sub_2368FC674()
{
  return sub_2367E4CC0(v1, v0);
}

void sub_2368FC690()
{
  *(void *)(v1 - 88) = v0;
}

uint64_t sub_2368FC6A0()
{
  return swift_bridgeObjectRetain();
}

void sub_2368FC6C8()
{
  *uint64_t v0 = 0x8000000000000000;
}

void sub_2368FC6E4()
{
  *uint64_t v0 = 0x8000000000000000;
}

uint64_t sub_2368FC700()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_2368FC728()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2368FC748()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2368FC760()
{
  return 0;
}

uint64_t sub_2368FC774()
{
  return sub_23697B78C();
}

uint64_t sub_2368FC794()
{
  return sub_23697B78C();
}

uint64_t sub_2368FC7B4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2368FC7D4()
{
  return 0;
}

void sub_2368FC7E8()
{
  *uint64_t v2 = v1;
  v2[1] = v0;
}

uint64_t FrozenNLEmbeddingVectorRetrieval.init(embeddingAssetURL:embeddingMetadataURL:)(uint64_t a1, uint64_t a2)
{
  uint64_t v179 = a2;
  uint64_t v189 = *MEMORY[0x263EF8340];
  uint64_t v167 = sub_23697AFBC();
  sub_2367CAA54();
  *(void *)&long long v168 = v3;
  MEMORY[0x270FA5388](v4);
  sub_2367BB260();
  uint64_t v175 = v5;
  uint64_t v180 = sub_23697AD0C();
  sub_2367CAA54();
  uint64_t v177 = v6;
  MEMORY[0x270FA5388](v7);
  sub_2367BB610();
  uint64_t v172 = v8;
  sub_2367D9914();
  MEMORY[0x270FA5388](v9);
  sub_236810108();
  uint64_t v178 = v10;
  sub_2367D9914();
  MEMORY[0x270FA5388](v11);
  sub_236810108();
  sub_236810048();
  MEMORY[0x270FA5388](v12);
  sub_236810108();
  sub_236810048();
  MEMORY[0x270FA5388](v13);
  sub_236810108();
  uint64_t v173 = v14;
  sub_2367D9914();
  MEMORY[0x270FA5388](v15);
  sub_236810108();
  sub_236810048();
  MEMORY[0x270FA5388](v16);
  uint64_t v169 = (char *)&v154 - v17;
  uint64_t v18 = sub_2367B7DBC(&qword_26AD89538);
  MEMORY[0x270FA5388](v18 - 8);
  sub_2367BB260();
  uint64_t v174 = v19;
  uint64_t v20 = sub_23697A1CC();
  sub_2367CAA54();
  uint64_t v22 = v21;
  MEMORY[0x270FA5388](v23);
  sub_2367BB610();
  id v181 = (void (*)(void))v24;
  sub_2367D9914();
  MEMORY[0x270FA5388](v25);
  sub_236810108();
  sub_236810048();
  MEMORY[0x270FA5388](v26);
  sub_236810108();
  sub_236810048();
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v154 - v29;
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  uint64_t v33 = (void (**)(char *, void (*)(void)))((char *)&v154 - v32);
  uint64_t v34 = MEMORY[0x270FA5388](v31);
  uint64_t v36 = (char *)&v154 - v35;
  MEMORY[0x270FA5388](v34);
  uint64_t v38 = (char *)&v154 - v37;
  sub_2368FDB3C();
  uint64_t v182 = v22;
  uint64_t v39 = *(void (**)(void))(v22 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v39)(v38, a1, v20);
  id v40 = sub_2368FDB7C((uint64_t)v38);
  uint64_t v164 = v33;
  uint64_t v166 = v30;
  uint64_t v41 = (char *)(v22 + 16);
  id v181 = v39;
  uint64_t v178 = v36;
  uint64_t v176 = a1;
  uint64_t v42 = v179;
  uint64_t v43 = v174;
  sub_2367D5EF4(v179, v174);
  if (sub_2367B85F8(v43, 1, v20) == 1)
  {
    id v165 = v40;
    id v44 = v40;
    sub_23683AACC(v43, &qword_26AD89538);
    sub_2367B7DBC(&qword_2688988C8);
    sub_23697AE9C();
    sub_23683AACC(v42, &qword_26AD89538);
    sub_2367E507C();
    v45();

    return (uint64_t)v165;
  }
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v182 + 32);
  uint64_t v174 = v20;
  v47(v178, v43, v20);
  id v48 = v40;
  sub_2367B7DBC(&qword_2688988C8);
  uint64_t v49 = sub_23697AE9C();
  uint64_t v186 = (void *)v49;
  uint64_t v50 = sub_23697A1EC();
  id v162 = v48;
  uint64_t v64 = v50;
  unint64_t v66 = v65;
  uint64_t v163 = v49;
  id v165 = v40;
  uint64_t v185 = 100;
  uint64_t v67 = self;
  uint64_t v68 = (void *)sub_23697A21C();
  *(void *)&long long v187 = 0;
  id v69 = objc_msgSend(v67, sel_propertyListWithData_options_format_error_, v68, 0, &v185, &v187);

  if (v69)
  {
    id v70 = (id)v187;
    sub_23697B5DC();
    swift_unknownObjectRelease();
    sub_2367B7DBC(&qword_268899300);
    sub_2368FEFE4();
    if (swift_dynamicCast())
    {
      uint64_t v161 = v64;
      unint64_t v159 = v66;
      uint64_t v72 = *(void *)(v183 + 16);
      uint64_t v73 = v174;
      int v74 = v181;
      uint64_t v169 = v41;
      if (!v72)
      {
        swift_bridgeObjectRelease();
        uint64_t v143 = (void *)v163;
LABEL_58:
        sub_23697ACFC();
        swift_bridgeObjectRetain();
        uint64_t v146 = sub_23697ACDC();
        os_log_type_t v147 = sub_23697B34C();
        BOOL v148 = os_log_type_enabled(v146, v147);
        uint64_t v149 = v179;
        uint64_t v150 = v182;
        if (v148)
        {
          unint64_t v151 = (uint8_t *)sub_2367CAEA0();
          *(_DWORD *)unint64_t v151 = 134217984;
          *(void *)&long long v187 = v143[2];
          sub_23697B50C();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_2367AD000, v146, v147, "Done constructing embedding metadata dictionary from plist.  Found %ld items", v151, 0xCu);
          sub_2367CAAA0();
          sub_2368FF084();
        }
        else
        {
          sub_2368FF084();
          swift_bridgeObjectRelease();
        }

        sub_23683AACC(v149, &qword_26AD89538);
        uint64_t v152 = *(void (**)(void))(v150 + 8);
        sub_23682B6D4();
        v152();
        sub_2368FF030();
        sub_2367E507C();
        v153();
        sub_23682B6D4();
        v152();
        swift_beginAccess();

        return (uint64_t)v165;
      }
      uint64_t v158 = v183;
      uint64_t v75 = v183 + 32;
      uint64_t v164 = (void (**)(char *, void (*)(void)))(v182 + 8);
      uint64_t v163 = v177 + 8;
      uint64_t v157 = v168 + 8;
      uint64_t v172 = MEMORY[0x263F8EE58] + 8;
      *(void *)&long long v71 = 136315138;
      long long v168 = v71;
      uint64_t v76 = v176;
      uint64_t v77 = v166;
      while (1)
      {
        sub_2367D98B8(v75, (uint64_t)&v187);
        sub_2367B7DBC(&qword_268898480);
        if ((swift_dynamicCast() & 1) == 0)
        {
          sub_23697ACFC();
          sub_2368FEFB8();
          v74();
          uint64_t v85 = sub_23697ACDC();
          os_log_type_t v86 = sub_23697B36C();
          if (sub_2368FF0A4(v86))
          {
            uint64_t v87 = sub_2367CAEA0();
            uint64_t v88 = sub_236856D80();
            sub_2368FF054(v88);
            uint64_t v89 = sub_23697A12C();
            *(void *)(v87 + 4) = sub_2368FF06C(v89, v90);
            swift_bridgeObjectRelease();
            sub_2367E507C();
            v91();
            _os_log_impl(&dword_2367AD000, v85, (os_log_type_t)v73, "Encountered a malformed metadata record while parsing %s.  Skipping", (uint8_t *)v87, 0xCu);
            sub_2368FEFF4();
            sub_2367CAAA0();
            uint64_t v76 = v176;
            sub_2367CAAA0();
          }
          else
          {
            (*v164)(v77, v74);
          }

          sub_2368FEFD4();
          sub_2367E507C();
          v98();
          uint64_t v73 = (uint64_t)v74;
          int v74 = v181;
          goto LABEL_33;
        }
        uint64_t v78 = v183;
        if (*(void *)(v183 + 16)
          && (unint64_t v79 = sub_2368FE8EC(0x695F64726F636572, 0xE900000000000064), v80 = v170, (v81 & 1) != 0)
          && (sub_2367D98B8(*(void *)(v78 + 56) + 32 * v79, (uint64_t)&v187),
              sub_2368FEFE4(),
              (swift_dynamicCast() & 1) != 0))
        {
          uint64_t v82 = v184;
          uint64_t v160 = v183;
          if (*(void *)(v78 + 16)
            && (unint64_t v83 = sub_2368FE8EC(0x645F64726F636572, 0xEB00000000617461), (v84 & 1) != 0))
          {
            sub_2367D98B8(*(void *)(v78 + 56) + 32 * v83, (uint64_t)&v187);
          }
          else
          {
            long long v187 = 0u;
            long long v188 = 0u;
          }
          swift_bridgeObjectRelease();
          if (*((void *)&v188 + 1))
          {
            sub_2368FEFE4();
            if (swift_dynamicCast())
            {
              sub_23697AFAC();
              uint64_t v155 = sub_23697AF7C();
              uint64_t v156 = v102;
              swift_bridgeObjectRelease();
              sub_2367E507C();
              v103();
              unint64_t v104 = v186;
              swift_isUniquelyReferenced_nonNull_native();
              *(void *)&long long v187 = v104;
              uint64_t v105 = v160;
              unint64_t v106 = sub_2368FE8EC(v160, v82);
              if (__OFADD__(v104[2], (v107 & 1) == 0))
              {
                __break(1u);
LABEL_63:
                __break(1u);
              }
              unint64_t v108 = v106;
              char v109 = v107;
              sub_2367B7DBC(&qword_26889A390);
              char v110 = sub_23697B78C();
              uint64_t v76 = v176;
              uint64_t v73 = v174;
              if (v110)
              {
                unint64_t v111 = sub_2368FE8EC(v105, v82);
                if ((v109 & 1) != (v112 & 1))
                {
                  uint64_t result = sub_23697B9AC();
                  __break(1u);
                  return result;
                }
                unint64_t v108 = v111;
              }
              uint64_t v113 = (void *)v187;
              if (v109)
              {
                uint64_t v114 = *(void *)(v187 + 56) + 16 * v108;
                sub_2367BAA90(*(void *)v114, *(void *)(v114 + 8));
                uint64_t v115 = v156;
                *(void *)uint64_t v114 = v155;
                *(void *)(v114 + 8) = v115;
              }
              else
              {
                *(void *)(v187 + 8 * (v108 >> 6) + 64) |= 1 << v108;
                uint64_t v124 = (uint64_t *)(v113[6] + 16 * v108);
                uint64_t *v124 = v105;
                v124[1] = v82;
                uint64_t v125 = (uint64_t *)(v113[7] + 16 * v108);
                uint64_t v126 = v156;
                uint64_t *v125 = v155;
                v125[1] = v126;
                uint64_t v127 = v113[2];
                BOOL v128 = __OFADD__(v127, 1);
                uint64_t v129 = v127 + 1;
                if (v128) {
                  goto LABEL_63;
                }
                v113[2] = v129;
                swift_bridgeObjectRetain();
              }
              uint64_t v186 = v113;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_32;
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            sub_23683AACC((uint64_t)&v187, (uint64_t *)&unk_26AD8BC30);
          }
          sub_23697ACFC();
          sub_2368FEFB8();
          v74();
          uint64_t v116 = sub_23697ACDC();
          os_log_type_t v117 = sub_23697B36C();
          if (sub_2368FF0A4(v117))
          {
            uint64_t v118 = sub_2367CAEA0();
            uint64_t v119 = sub_236856D80();
            sub_2368FF054(v119);
            uint64_t v120 = sub_23697A12C();
            *(void *)(v118 + 4) = sub_2368FF06C(v120, v121);
            swift_bridgeObjectRelease();
            sub_2367E507C();
            v122();
            _os_log_impl(&dword_2367AD000, v116, (os_log_type_t)v73, "Encountered a malformed metadata record while parsing %s.  Skipping", (uint8_t *)v118, 0xCu);
            sub_2368FEFF4();
            sub_2367CAAA0();
            uint64_t v76 = v176;
            sub_2367CAAA0();
          }
          else
          {
            (*v164)(v80, v74);
          }

          sub_2367E507C();
          v123();
          uint64_t v73 = (uint64_t)v74;
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_23697ACFC();
          ((void (*)(uint64_t, uint64_t, uint64_t))v181)(v171, v76, v73);
          int v92 = sub_23697ACDC();
          os_log_type_t v93 = sub_23697B36C();
          if (os_log_type_enabled(v92, v93))
          {
            uint64_t v94 = sub_2367CAEA0();
            *(void *)&long long v187 = sub_236856D80();
            *(_DWORD *)uint64_t v94 = v168;
            uint64_t v95 = sub_23697A12C();
            *(void *)(v94 + 4) = sub_2368FF06C(v95, v96);
            swift_bridgeObjectRelease();
            sub_2368FEFD4();
            sub_2367E507C();
            v97();
            _os_log_impl(&dword_2367AD000, v92, v93, "Encountered a malformed metadata record while parsing %s.  Skipping", (uint8_t *)v94, 0xCu);
            sub_2368FEFF4();
            sub_2367CAAA0();
            uint64_t v73 = v174;
            sub_2367CAAA0();
          }
          else
          {
            uint64_t v99 = sub_2368FEFD4();
            v100(v99, v73);
          }

          sub_2367E507C();
          v101();
          uint64_t v76 = v176;
        }
        int v74 = v181;
LABEL_32:
        uint64_t v77 = v166;
LABEL_33:
        v75 += 32;
        if (!--v72)
        {
          swift_bridgeObjectRelease();
          uint64_t v143 = v186;
          goto LABEL_58;
        }
      }
    }

    swift_bridgeObjectRelease();
    sub_23697ACFC();
    ((void (*)(void (**)(char *, void (*)(void)), uint64_t, uint64_t))v181)(v164, v176, v174);
    uint64_t v132 = sub_23697ACDC();
    os_log_type_t v133 = sub_23697B36C();
    if (!os_log_type_enabled(v132, v133))
    {
      sub_2367B8A20(v64, v66);

      uint64_t v144 = *(void (**)(void))(v182 + 8);
      sub_2368FF020();
      v144();
      sub_23683AACC(v42, &qword_26AD89538);
      sub_2368FF020();
      v144();
      sub_2368FF030();
      sub_2367E507C();
      v145();
      sub_2368FF020();
      v144();

      return 0;
    }
    id v181 = (void (*)(void))v132;
    id v134 = (uint8_t *)sub_2367CAEA0();
    uint64_t v135 = sub_236856D80();
    uint64_t v161 = v64;
    *(void *)&long long v187 = v135;
    *(_DWORD *)id v134 = 136315138;
    uint64_t v136 = v182;
    uint64_t v137 = sub_23697A12C();
    uint64_t v139 = sub_2368FF06C(v137, v138);
    sub_2368FF03C(v139);
    sub_23697B50C();
    swift_bridgeObjectRelease();
    uint64_t v140 = *(void (**)(void))(v136 + 8);
    sub_2368FF010();
    v140();
    os_log_t v141 = (os_log_t)v181;
    _os_log_impl(&dword_2367AD000, (os_log_t)v181, v133, "Could not read metadata array while parsing %s", v134, 0xCu);
    swift_arrayDestroy();
    sub_2367CAAA0();
    sub_2367CAAA0();
    sub_2367B8A20(v161, v66);

    sub_23683AACC(v179, &qword_26AD89538);
    sub_2368FF010();
    v140();
    sub_2368FF030();
    sub_2367E507C();
    v142();
    sub_2368FF010();
    v140();
  }
  else
  {
    id v130 = (id)v187;

    swift_bridgeObjectRelease();
    uint64_t v131 = (void *)sub_23697A0FC();

    swift_willThrow();
    sub_2367B8A20(v64, v66);
    sub_23697ACFC();
    id v51 = v131;
    id v52 = v131;
    id v53 = sub_23697ACDC();
    os_log_type_t v54 = sub_23697B36C();
    BOOL v55 = os_log_type_enabled(v53, v54);
    uint64_t v56 = v182;
    if (v55)
    {
      uint64_t v57 = (uint8_t *)sub_2367CAEA0();
      id v58 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v57 = 138412290;
      id v59 = v131;
      uint64_t v60 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&long long v187 = v60;
      sub_23697B50C();
      *id v58 = v60;
      uint64_t v56 = v182;

      _os_log_impl(&dword_2367AD000, v53, v54, "Encountered an error reading embedding metadata plist: %@", v57, 0xCu);
      sub_2367B7DBC(&qword_26AD8BBC8);
      swift_arrayDestroy();
      sub_2367CAAA0();
      sub_2367CAAA0();
    }
    else
    {
    }
    sub_23683AACC(v42, &qword_26AD89538);
    uint64_t v61 = *(void (**)(void))(v56 + 8);
    uint64_t v62 = v174;
    sub_23682B6D4();
    v61();
    sub_2368FF030();
    sub_2367E507C();
    v63();
    ((void (*)(char *, uint64_t))v61)(v178, v62);
  }

  return 0;
}

unint64_t sub_2368FDB3C()
{
  unint64_t result = qword_26889A388;
  if (!qword_26889A388)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26889A388);
  }
  return result;
}

id sub_2368FDB7C(uint64_t a1)
{
  v11[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = (void *)sub_23697A15C();
  v11[0] = 0;
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_embeddingWithContentsOfURL_error_, v2, v11);

  id v4 = v11[0];
  if (v3)
  {
    uint64_t v5 = sub_23697A1CC();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    id v7 = v4;
    v6(a1, v5);
  }
  else
  {
    id v8 = v11[0];
    sub_23697A0FC();

    swift_willThrow();
    uint64_t v9 = sub_23697A1CC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

uint64_t FrozenNLEmbeddingVectorRetrieval.fetchNeighborsForVector(vector:distanceLimit:countLimit:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    sub_2368C6C34();
    id v3 = (float *)(a1 + 32);
    unint64_t v4 = *(void *)(v7 + 16);
    do
    {
      float v5 = *v3;
      if (v4 >= *(void *)(v7 + 24) >> 1) {
        sub_2368C6C34();
      }
      *(void *)(v7 + 16) = v4 + 1;
      *(double *)(v7 + 8 * v4 + 32) = v5;
      ++v3;
      ++v4;
      --v1;
    }
    while (v1);
  }
  MEMORY[0x270FA5388](a1);
  sub_23697B30C();
  swift_bridgeObjectRelease();
  return v8;
}

BOOL sub_2368FDE34(uint64_t a1, uint64_t a2, double a3, float a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  float v8 = a3;
  if (v8 <= a4)
  {
    uint64_t v13 = *(void *)(a6 + 16);
    swift_bridgeObjectRetain();
    if (v13)
    {
      swift_bridgeObjectRetain();
      unint64_t v14 = sub_2368FE8EC(a1, a2);
      if (v15)
      {
        uint64_t v16 = (uint64_t *)(*(void *)(a6 + 56) + 16 * v14);
        uint64_t v13 = *v16;
        unint64_t v17 = v16[1];
        sub_2367BAA7C(*v16, v17);
      }
      else
      {
        uint64_t v13 = 0;
        unint64_t v17 = 0xF000000000000000;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v17 = 0xF000000000000000;
    }
    swift_bridgeObjectRetain();
    sub_2367BAA7C(v13, v17);
    sub_2367D1E20();
    uint64_t v18 = *(void *)(*a7 + 16);
    sub_2367D20BC();
    uint64_t v19 = *a7;
    *(void *)(v19 + 16) = v18 + 1;
    uint64_t v20 = v19 + 40 * v18;
    *(void *)(v20 + 32) = a1;
    *(void *)(v20 + 40) = a2;
    *(void *)(v20 + 48) = v13;
    *(void *)(v20 + 56) = v17;
    *(float *)(v20 + 64) = v8;
    swift_bridgeObjectRelease();
    sub_2367BAA90(v13, v17);
  }
  return v8 <= a4;
}

uint64_t static FrozenNLEmbeddingVectorRetrieval.writeMetadataPlistForRecords(records:destinationURL:)(uint64_t a1)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v31 = MEMORY[0x263F8EE78];
    sub_2368C6FD4();
    id v3 = (unint64_t *)(a1 + 64);
    do
    {
      unint64_t v4 = *(v3 - 3);
      uint64_t v5 = *(v3 - 1);
      unint64_t v6 = *v3;
      sub_2367B7DBC(&qword_26889A228);
      if (v6 >> 60 == 15)
      {
        uint64_t inited = (__n128 *)swift_initStackObject();
        sub_2368FEF7C(inited, (__n128)xmmword_236987050)[3].n128_u64[1] = v4;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_2368FEF4C();
        uint64_t v8 = sub_23697AE9C();
      }
      else
      {
        uint64_t v9 = (__n128 *)swift_initStackObject();
        uint64_t v10 = sub_2368FEF7C(v9, (__n128)xmmword_236985C70);
        v10[3].n128_u64[1] = v4;
        v10[4].n128_u64[0] = 0x645F64726F636572;
        v10[4].n128_u64[1] = 0xEB00000000617461;
        uint64_t v11 = v10;
        switch(v6 >> 62)
        {
          case 1uLL:
            if (v5 >> 32 < (int)v5)
            {
              __break(1u);
LABEL_27:
              __break(1u);
LABEL_28:
              __break(1u);
LABEL_29:
              __break(1u);
            }
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_2368FEF4C();
            sub_2367BAA7C(v5, v6);
            if (sub_236979F9C() && __OFSUB__((int)v5, sub_236979FBC())) {
              goto LABEL_29;
            }
            sub_236979FAC();
            uint64_t v14 = sub_23697B00C();
            unint64_t v16 = v15;
LABEL_17:
            v11[5].n128_u64[0] = v14;
            v11[5].n128_u64[1] = v16;
            uint64_t v8 = sub_23697AE9C();
            sub_2367BAA90(v5, v6);
            break;
          case 2uLL:
            uint64_t v12 = *(void *)(v5 + 16);
            uint64_t v29 = *(void *)(v5 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_2368FEF4C();
            sub_2367BAA7C(v5, v6);
            swift_retain();
            swift_retain();
            if (sub_236979F9C() && __OFSUB__(v12, sub_236979FBC())) {
              goto LABEL_28;
            }
            if (__OFSUB__(v29, v12)) {
              goto LABEL_27;
            }
            sub_236979FAC();
            uint64_t v14 = sub_23697B00C();
            unint64_t v16 = v17;
            swift_release();
            swift_release();
            goto LABEL_17;
          case 3uLL:
            memset(v30, 0, 14);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_2368FEF4C();
            goto LABEL_16;
          default:
            v30[0] = (id)v5;
            LOWORD(v30[1]) = v6;
            BYTE2(v30[1]) = BYTE2(v6);
            BYTE3(v30[1]) = BYTE3(v6);
            BYTE4(v30[1]) = BYTE4(v6);
            BYTE5(v30[1]) = BYTE5(v6);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_2368FEF4C();
LABEL_16:
            uint64_t v14 = sub_23697B00C();
            unint64_t v16 = v13;
            sub_2367BAA90(v5, v6);
            goto LABEL_17;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2367BAA90(v5, v6);
      uint64_t v18 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2368C6FD4();
        uint64_t v18 = v31;
      }
      unint64_t v19 = *(void *)(v18 + 16);
      if (v19 >= *(void *)(v18 + 24) >> 1)
      {
        sub_2368C6FD4();
        uint64_t v18 = v31;
      }
      v3 += 5;
      *(void *)(v18 + 16) = v19 + 1;
      *(void *)(v18 + 8 * v19 + 32) = v8;
      --v1;
    }
    while (v1);
  }
  uint64_t v20 = self;
  sub_2367B7DBC(&qword_2688985F8);
  uint64_t v21 = (void *)sub_23697B1CC();
  swift_bridgeObjectRelease();
  v30[0] = 0;
  id v22 = objc_msgSend(v20, sel_dataWithPropertyList_format_options_error_, v21, 100, 0, v30);

  id v23 = v30[0];
  if (v22)
  {
    uint64_t v24 = sub_23697A24C();
    unint64_t v26 = v25;

    sub_23697A25C();
    return sub_2367B8A20(v24, v26);
  }
  else
  {
    uint64_t v28 = v23;
    sub_23697A0FC();

    return swift_willThrow();
  }
}

uint64_t static FrozenNLEmbeddingVectorRetrieval.writeEmbeddingtoolFileForRecords(records:destinationURL:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_23697AFBC();
  sub_2367CAA54();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (v11)
  {
    id v48 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v49 = a2;
    uint64_t v50 = v2;
    uint64_t v51 = v7;
    uint64_t v52 = v5;
    uint64_t v63 = MEMORY[0x263F8EE78];
    uint64_t v55 = v11;
    sub_2368C6BE4();
    uint64_t v13 = 0;
    uint64_t v12 = v63;
    uint64_t v54 = a1 + 32;
    long long v53 = xmmword_236985C70;
    long long v62 = xmmword_236987050;
    do
    {
      uint64_t v61 = v13;
      uint64_t v14 = (uint64_t *)(v54 + 40 * v13);
      uint64_t v15 = v14[1];
      uint64_t v16 = v14[2];
      uint64_t v17 = v14[3];
      unint64_t v18 = v14[4];
      uint64_t v19 = *(void *)(v16 + 16);
      uint64_t v59 = *v14;
      unint64_t v60 = v18;
      if (v19)
      {
        uint64_t v58 = v12;
        uint64_t v56 = v15;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v57 = v17;
        sub_2367BAA7C(v17, v18);
        uint64_t v65 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_2368C6BE4();
        uint64_t v20 = MEMORY[0x263F8D5C8];
        uint64_t v21 = 0;
        uint64_t v22 = v65;
        do
        {
          int v23 = *(_DWORD *)(v16 + 4 * v21 + 32);
          sub_2367B7DBC(&qword_26AD89530);
          uint64_t v24 = swift_allocObject();
          *(_OWORD *)(v24 + 16) = v62;
          *(void *)(v24 + 56) = v20;
          *(void *)(v24 + 64) = MEMORY[0x263F8D648];
          *(_DWORD *)(v24 + 32) = v23;
          uint64_t v25 = sub_23697AF9C();
          uint64_t v27 = v26;
          uint64_t v65 = v22;
          unint64_t v28 = *(void *)(v22 + 16);
          if (v28 >= *(void *)(v22 + 24) >> 1)
          {
            sub_2368C6BE4();
            uint64_t v20 = MEMORY[0x263F8D5C8];
            uint64_t v22 = v65;
          }
          ++v21;
          *(void *)(v22 + 16) = v28 + 1;
          uint64_t v29 = v22 + 16 * v28;
          *(void *)(v29 + 32) = v25;
          *(void *)(v29 + 40) = v27;
        }
        while (v19 != v21);
        swift_bridgeObjectRelease();
        uint64_t v17 = v57;
        uint64_t v30 = v58;
        uint64_t v31 = v56;
      }
      else
      {
        uint64_t v30 = v12;
        uint64_t v31 = v15;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_2367BAA7C(v17, v18);
        uint64_t v22 = MEMORY[0x263F8EE78];
      }
      uint64_t v65 = v22;
      sub_2367B7DBC(&qword_26AD89010);
      sub_23681E038();
      uint64_t v32 = sub_23697AEEC();
      uint64_t v34 = v33;
      swift_bridgeObjectRelease();
      sub_2367B7DBC(&qword_26AD89530);
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = v53;
      uint64_t v36 = MEMORY[0x263F8D310];
      *(void *)(v35 + 56) = MEMORY[0x263F8D310];
      unint64_t v37 = sub_2367E4DBC();
      *(void *)(v35 + 32) = v59;
      *(void *)(v35 + 40) = v31;
      *(void *)(v35 + 96) = v36;
      *(void *)(v35 + 104) = v37;
      *(void *)(v35 + 64) = v37;
      *(void *)(v35 + 72) = v32;
      *(void *)(v35 + 80) = v34;
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_23697AF9C();
      uint64_t v40 = v39;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2367BAA90(v17, v60);
      uint64_t v63 = v30;
      unint64_t v41 = *(void *)(v30 + 16);
      uint64_t v12 = v30;
      if (v41 >= *(void *)(v30 + 24) >> 1)
      {
        sub_2368C6BE4();
        uint64_t v12 = v63;
      }
      uint64_t v13 = v61 + 1;
      *(void *)(v12 + 16) = v41 + 1;
      uint64_t v42 = v12 + 16 * v41;
      *(void *)(v42 + 32) = v38;
      *(void *)(v42 + 40) = v40;
    }
    while (v13 != v55);
    uint64_t v7 = v51;
    uint64_t v5 = v52;
    uint64_t v10 = v48;
  }
  uint64_t v63 = v12;
  sub_2367B7DBC(&qword_26AD89010);
  sub_23681E038();
  uint64_t v43 = sub_23697AEEC();
  uint64_t v45 = v44;
  swift_bridgeObjectRelease();
  uint64_t v63 = v43;
  uint64_t v64 = v45;
  sub_23697AFAC();
  sub_2367CA700();
  sub_23697B58C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2368FE8E4(uint64_t a1)
{
  return FrozenNLEmbeddingVectorRetrieval.fetchNeighborsForVector(vector:distanceLimit:countLimit:)(a1);
}

unint64_t sub_2368FE8EC(uint64_t a1, uint64_t a2)
{
  sub_23697BA2C();
  sub_23697B04C();
  uint64_t v4 = sub_23697BA4C();
  return sub_2368FEA78(a1, a2, v4);
}

unint64_t sub_2368FE968(uint64_t a1)
{
  uint64_t v2 = sub_23697BA1C();
  return sub_2368FEB5C(a1, v2);
}

uint64_t sub_2368FE9A4(uint64_t a1)
{
  sub_23697AF6C();
  sub_23697BA2C();
  sub_23697B04C();
  uint64_t v2 = sub_23697BA4C();
  swift_bridgeObjectRelease();
  return sub_2368FEBF8(a1, v2);
}

unint64_t sub_2368FEA34(uint64_t a1)
{
  uint64_t v2 = sub_23697B61C();
  return sub_2368FED4C(a1, v2);
}

unint64_t sub_2368FEA78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_23697B95C() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_23697B95C() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_2368FEB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_2368FEBF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  uint64_t v4 = a2 & ~v3;
  sub_2368FEFA4();
  if (v5)
  {
    uint64_t v6 = sub_23697AF6C();
    uint64_t v8 = v7;
    if (v6 == sub_23697AF6C() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v4;
    }
    char v11 = sub_23697B95C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v3;
      uint64_t v4 = (v4 + 1) & v12;
      sub_2368FEFA4();
      if (v13)
      {
        while (1)
        {
          uint64_t v14 = sub_23697AF6C();
          uint64_t v16 = v15;
          if (v14 == sub_23697AF6C() && v16 == v17) {
            break;
          }
          char v19 = sub_23697B95C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v19 & 1) == 0)
          {
            uint64_t v4 = (v4 + 1) & v12;
            sub_2368FEFA4();
            if (v20) {
              continue;
            }
          }
          return v4;
        }
        goto LABEL_16;
      }
    }
  }
  return v4;
}

unint64_t sub_2368FED4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_2368C8CE8(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x237E06B00](v9, a1);
      sub_2367FACDC((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

BOOL sub_2368FEE14(uint64_t a1, uint64_t a2, double a3)
{
  return sub_2368FDE34(a1, a2, a3, *(float *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(uint64_t **)(v3 + 40));
}

void *initializeBufferWithCopyOfBuffer for FrozenNLEmbeddingVectorRetrieval(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for FrozenNLEmbeddingVectorRetrieval(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for FrozenNLEmbeddingVectorRetrieval(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for FrozenNLEmbeddingVectorRetrieval(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FrozenNLEmbeddingVectorRetrieval()
{
  return &type metadata for FrozenNLEmbeddingVectorRetrieval;
}

uint64_t sub_2368FEF4C()
{
  sub_2367BAA7C(v1, v0);
  return swift_bridgeObjectRetain();
}

__n128 *sub_2368FEF7C(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x695F64726F636572;
  result[2].n128_u64[1] = 0xE900000000000064;
  result[3].n128_u64[0] = v2;
  return result;
}

uint64_t sub_2368FEFD4()
{
  return v0;
}

uint64_t sub_2368FEFE4()
{
  return v0 - 168;
}

uint64_t sub_2368FEFF4()
{
  return swift_arrayDestroy();
}

uint64_t sub_2368FF03C(uint64_t a1)
{
  *(void *)(v1 - 168) = a1;
  return v1 - 168;
}

__n128 sub_2368FF054(uint64_t a1)
{
  *(void *)(v2 - 128) = a1;
  __n128 result = *(__n128 *)(v2 - 320);
  *uint64_t v1 = result.n128_u32[0];
  return result;
}

uint64_t sub_2368FF06C(uint64_t a1, unint64_t a2)
{
  return sub_2367D90DC(a1, a2, (uint64_t *)(v2 - 128));
}

uint64_t sub_2368FF084()
{
  uint64_t v2 = *(void *)(v0 - 376);
  unint64_t v3 = *(void *)(v0 - 392);
  return sub_2367B8A20(v2, v3);
}

BOOL sub_2368FF0A4(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

id DUDocumentAttribute.__allocating_init<A>(proto:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2367B7DBC(&qword_2688990A0);
  MEMORY[0x270FA5388](v4 - 8);
  sub_2367CAC7C();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v9);
  sub_2367CAC7C();
  uint64_t v12 = v11 - v10;
  char v13 = (int *)type metadata accessor for DocumentUnderstanding_DocumentUnderstandingServiceClient_DocumentAttribute();
  MEMORY[0x270FA5388](v13);
  sub_2367CAC7C();
  uint64_t v16 = v15 - v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v12, a1, a2);
  if (swift_dynamicCast())
  {
    sub_2367B7028(v7, 0, 1, (uint64_t)v13);
    sub_2368FF3F0(v7, v16);
    uint64_t v17 = (uint64_t *)(v16 + v13[5]);
    if (v17[1])
    {
      uint64_t v30 = v17[1];
      uint64_t v31 = *v17;
    }
    else
    {
      uint64_t v30 = 0xE000000000000000;
      uint64_t v31 = 0;
    }
    char v19 = (uint64_t *)(v16 + v13[6]);
    if (v19[1])
    {
      uint64_t v28 = v19[1];
      uint64_t v29 = *v19;
    }
    else
    {
      uint64_t v28 = 0xE000000000000000;
      uint64_t v29 = 0;
    }
    char v20 = (uint64_t *)(v16 + v13[7]);
    if (v20[1])
    {
      uint64_t v26 = v20[1];
      uint64_t v27 = *v20;
    }
    else
    {
      uint64_t v26 = 0xE000000000000000;
      uint64_t v27 = 0;
    }
    uint64_t v21 = (uint64_t *)(v16 + v13[8]);
    if (v21[1])
    {
      uint64_t v22 = *v21;
      uint64_t v23 = v21[1];
    }
    else
    {
      uint64_t v22 = 0;
      uint64_t v23 = 0xE000000000000000;
    }
    id v24 = objc_allocWithZone((Class)type metadata accessor for DUDocumentAttribute());
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v18 = DUDocumentAttribute.init(attributeNamespace:attributeType:attributeID:displayName:)(v31, v30, v29, v28, v27, v26, v22, v23);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, a2);
    sub_2368FF914(v16);
  }
  else
  {
    sub_2367B7028(v7, 1, 1, (uint64_t)v13);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, a2);
    sub_2368FF390(v7);
    return 0;
  }
  return v18;
}

uint64_t sub_2368FF390(uint64_t a1)
{
  uint64_t v2 = sub_2367B7DBC(&qword_2688990A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2368FF3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DocumentUnderstanding_DocumentUnderstandingServiceClient_DocumentAttribute();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t DUDocumentAttribute.attributeNamespace.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding19DUDocumentAttribute_attributeNamespace);
}

uint64_t DUDocumentAttribute.attributeNamespace.setter(uint64_t a1, uint64_t a2)
{
  return sub_2368FF534(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding19DUDocumentAttribute_attributeNamespace);
}

uint64_t (*DUDocumentAttribute.attributeNamespace.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUDocumentAttribute.attributeType.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding19DUDocumentAttribute_attributeType);
}

uint64_t DUDocumentAttribute.attributeType.setter(uint64_t a1, uint64_t a2)
{
  return sub_2368FF534(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding19DUDocumentAttribute_attributeType);
}

uint64_t (*DUDocumentAttribute.attributeType.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DUDocumentAttribute.attributeID.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding19DUDocumentAttribute_attributeID);
}

uint64_t DUDocumentAttribute.attributeID.setter(uint64_t a1, uint64_t a2)
{
  return sub_2368FF534(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding19DUDocumentAttribute_attributeID);
}

uint64_t sub_2368FF534(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (void *)(v3 + *a3);
  sub_236900084();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*DUDocumentAttribute.attributeID.modify())()
{
  return j__swift_endAccess;
}

uint64_t DUDocumentAttribute.displayName.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding19DUDocumentAttribute_displayName);
  sub_2367BB188();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t DUDocumentAttribute.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC21DocumentUnderstanding19DUDocumentAttribute_displayName);
  sub_236900084();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*DUDocumentAttribute.displayName.modify())()
{
  return j_j__swift_endAccess;
}

char *DUDocumentAttribute.supportsSecureCoding.unsafeMutableAddressor()
{
  return &static DUDocumentAttribute.supportsSecureCoding;
}

uint64_t static DUDocumentAttribute.supportsSecureCoding.getter()
{
  return static DUDocumentAttribute.supportsSecureCoding;
}

uint64_t static DUDocumentAttribute.supportsSecureCoding.setter(char a1)
{
  uint64_t result = sub_236900084();
  static DUDocumentAttribute.supportsSecureCoding = a1;
  return result;
}

uint64_t (*static DUDocumentAttribute.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

id DUDocumentAttribute.__allocating_init(attributeNamespace:attributeType:attributeID:displayName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v17 = objc_allocWithZone(v8);
  return DUDocumentAttribute.init(attributeNamespace:attributeType:attributeID:displayName:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t type metadata accessor for DUDocumentAttribute()
{
  return self;
}

id DUDocumentAttribute.init(attributeNamespace:attributeType:attributeID:displayName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = &v8[OBJC_IVAR____TtC21DocumentUnderstanding19DUDocumentAttribute_displayName];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  uint64_t v12 = &v8[OBJC_IVAR____TtC21DocumentUnderstanding19DUDocumentAttribute_attributeNamespace];
  *(void *)uint64_t v12 = a1;
  *((void *)v12 + 1) = a2;
  char v13 = &v8[OBJC_IVAR____TtC21DocumentUnderstanding19DUDocumentAttribute_attributeType];
  *(void *)char v13 = a3;
  *((void *)v13 + 1) = a4;
  uint64_t v14 = &v8[OBJC_IVAR____TtC21DocumentUnderstanding19DUDocumentAttribute_attributeID];
  *(void *)uint64_t v14 = a5;
  *((void *)v14 + 1) = a6;
  swift_beginAccess();
  *(void *)uint64_t v11 = a7;
  *((void *)v11 + 1) = a8;
  swift_bridgeObjectRelease();
  v16.receiver = v8;
  v16.super_class = (Class)type metadata accessor for DUDocumentAttribute();
  return objc_msgSendSuper2(&v16, sel_init);
}

uint64_t sub_2368FF914(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DocumentUnderstanding_DocumentUnderstandingServiceClient_DocumentAttribute();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t DUDocumentAttribute.protoRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = type metadata accessor for DocumentUnderstanding_DocumentUnderstandingServiceClient_DocumentAttribute();
  uint64_t v5 = (int *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  sub_23689D90C();
  sub_23697A70C();
  uint64_t v6 = (void *)(v2 + v5[7]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = (void *)(v2 + v5[8]);
  void *v7 = 0;
  v7[1] = 0;
  uint64_t v8 = (void *)(v2 + v5[9]);
  void *v8 = 0;
  v8[1] = 0;
  uint64_t v9 = (void *)(v2 + v5[10]);
  *uint64_t v9 = 0;
  v9[1] = 0;
  uint64_t v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC21DocumentUnderstanding19DUDocumentAttribute_attributeNamespace);
  sub_2367BB188();
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  *uint64_t v6 = v11;
  v6[1] = v12;
  char v13 = (uint64_t *)(v1 + OBJC_IVAR____TtC21DocumentUnderstanding19DUDocumentAttribute_attributeType);
  sub_2367BB188();
  uint64_t v14 = *v13;
  uint64_t v15 = v13[1];
  void *v7 = v14;
  v7[1] = v15;
  objc_super v16 = (uint64_t *)(v1 + OBJC_IVAR____TtC21DocumentUnderstanding19DUDocumentAttribute_attributeID);
  sub_2367BB188();
  uint64_t v17 = *v16;
  uint64_t v18 = v16[1];
  void *v8 = v17;
  v8[1] = v18;
  char v19 = (void *)(v1 + OBJC_IVAR____TtC21DocumentUnderstanding19DUDocumentAttribute_displayName);
  sub_2367BB188();
  uint64_t v20 = v19[1];
  if (v20)
  {
    *uint64_t v9 = *v19;
    v9[1] = v20;
  }
  sub_2368FF3F0(v2, a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t DUDocumentAttribute.copy(with:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DocumentUnderstanding_DocumentUnderstandingServiceClient_DocumentAttribute();
  MEMORY[0x270FA5388](v3 - 8);
  sub_23689D90C();
  DUDocumentAttribute.protoRepresentation.getter(v4);
  uint64_t v5 = sub_236832028(v1);
  uint64_t result = sub_2367B7DBC(&qword_26889A3C0);
  a1[3] = result;
  *a1 = v5;
  return result;
}

Swift::Void __swiftcall DUDocumentAttribute.encode(with:)(NSCoder with)
{
  type metadata accessor for DUDocumentAttribute();
  sub_23690003C(&qword_26889A3C8, v2, (void (*)(uint64_t))type metadata accessor for DUDocumentAttribute);
  uint64_t v3 = (void *)sub_23697AB7C();
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = (void *)sub_23697AF3C();
    [(objc_class *)with.super.isa encodeObject:v4 forKey:v5];
  }
}

uint64_t DUDocumentAttribute.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return DUDocumentAttribute.init(coder:)(a1);
}

uint64_t DUDocumentAttribute.init(coder:)(void *a1)
{
  swift_getObjectType();
  sub_2367CBCC4();
  id v3 = v1;
  if (!sub_23697B47C())
  {

    goto LABEL_5;
  }
  swift_getObjectType();

  sub_23690003C(&qword_26889A3C8, v4, (void (*)(uint64_t))type metadata accessor for DUDocumentAttribute);
  sub_23697AB8C();

  uint64_t v5 = v7;
  if (!v7)
  {
LABEL_5:
    swift_getObjectType();
    sub_2369000A4();
    return 0;
  }
  swift_getObjectType();
  sub_2369000A4();
  return v5;
}

id DUDocumentAttribute.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void DUDocumentAttribute.init()()
{
}

id DUDocumentAttribute.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DUDocumentAttribute();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2368FFF0C(uint64_t a1)
{
  return MEMORY[0x270FA03F0](a1, &opaque type descriptor for <<opaque return type of DUDocumentAttribute.protoRepresentation>>, 1);
}

uint64_t sub_2368FFFA4@<X0>(uint64_t a1@<X8>)
{
  return DUDocumentAttribute.protoRepresentation.getter(a1);
}

uint64_t sub_2368FFFC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_236832028();
  *a1 = result;
  return result;
}

uint64_t sub_2368FFFF0()
{
  return sub_23690003C(&qword_268898B28, 255, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_DocumentUnderstandingServiceClient_DocumentAttribute);
}

uint64_t sub_23690003C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236900084()
{
  return swift_beginAccess();
}

uint64_t sub_2369000A4()
{
  return swift_deallocPartialClassInstance();
}

id DURawDocument.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

uint64_t DURawDocument.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return DURawDocument.init(coder:)(a1);
}

char *sub_236900130(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentUIElement();
  uint64_t v3 = sub_2367CAA70(v2);
  uint64_t v89 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v89 - v8;
  uint64_t v10 = sub_2367B7DBC(&qword_26AD89960);
  uint64_t v11 = sub_2367BB430(v10);
  MEMORY[0x270FA5388](v11);
  sub_2367BB260();
  uint64_t v97 = v12;
  uint64_t v95 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentMessageData();
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v13);
  sub_2369066B0(v14, v89);
  uint64_t v15 = sub_2367B7DBC(&qword_26AD89A08);
  uint64_t v16 = sub_2367BB430(v15);
  MEMORY[0x270FA5388](v16);
  sub_236906694(v17, v89);
  uint64_t v92 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentHTMLData();
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v18);
  sub_2367BB260();
  os_log_type_t v93 = v19;
  uint64_t v20 = sub_2367B7DBC((uint64_t *)&off_26AD89548);
  uint64_t v21 = sub_2367BB430(v20);
  MEMORY[0x270FA5388](v21);
  sub_2367BB260();
  uint64_t v91 = v22;
  uint64_t v23 = sub_2367B7DBC(&qword_26AD89538);
  uint64_t v24 = sub_2367BB430(v23);
  MEMORY[0x270FA5388](v24);
  sub_2367BB260();
  uint64_t v90 = v25;
  uint64_t v26 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document(0);
  uint64_t v27 = v26 - 8;
  MEMORY[0x270FA5388](v26);
  sub_2367CAC7C();
  uint64_t v30 = v29 - v28;
  uint64_t v100 = v29 - v28;
  uint64_t v31 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DURawDocument()), sel_init);
  uint64_t v98 = a1;
  uint64_t v32 = sub_236906888();
  sub_2369064D0(v32, v33, v34);
  uint64_t v99 = *(int *)(v27 + 28);
  uint64_t v35 = *(void **)(v30 + v99);
  sub_2367BB188();
  uint64_t v37 = v35[2];
  uint64_t v36 = v35[3];
  uint64_t v38 = &v31[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_headline];
  sub_2367BB248();
  *(void *)uint64_t v38 = v37;
  *((void *)v38 + 1) = v36;
  uint64_t v39 = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  sub_2367BB248();
  sub_23690655C();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  sub_2367BB248();
  sub_23690655C();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  sub_2367BB248();
  sub_23690655C();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  sub_2367BB248();
  sub_23690655C();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  sub_2367BB248();
  sub_23690655C();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  sub_2367BB248();
  sub_23690655C();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  sub_2367BB248();
  sub_23690655C();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  uint64_t v40 = v35[18];
  unint64_t v41 = &v39[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_keywords];
  sub_2367BB248();
  *(void *)unint64_t v41 = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  sub_2367BB248();
  sub_23690655C();
  swift_bridgeObjectRelease();
  sub_2367BB188();
  swift_bridgeObjectRetain();
  uint64_t v42 = v90;
  sub_23690675C();
  swift_bridgeObjectRelease();
  uint64_t v43 = (uint64_t)&v39[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_url];
  sub_2367C0104();
  sub_23680FE24(v42, v43, &qword_26AD89538);
  swift_endAccess();
  uint64_t v45 = v99;
  uint64_t v44 = v100;
  sub_2367BB188();
  swift_bridgeObjectRetain();
  sub_23690675C();
  swift_bridgeObjectRelease();
  uint64_t v46 = (uint64_t)&v39[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_thumbnailUrl];
  sub_2367C0104();
  sub_23680FE24(v42, v46, &qword_26AD89538);
  swift_endAccess();
  sub_2367BB188();
  swift_bridgeObjectRetain();
  sub_23690675C();
  swift_bridgeObjectRelease();
  uint64_t v47 = (uint64_t)&v39[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_significantLink];
  sub_2367C0104();
  uint64_t v48 = v42;
  uint64_t v49 = v39;
  sub_23680FE24(v48, v47, &qword_26AD89538);
  swift_endAccess();
  uint64_t v50 = v44;
  sub_2367BB188();
  uint64_t v51 = (uint64_t)v91;
  sub_23697A26C();
  sub_23697A2DC();
  sub_236906830();
  uint64_t v52 = (uint64_t)&v39[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_dateCreated];
  sub_2367C0104();
  sub_23680FE24(v51, v52, (uint64_t *)&off_26AD89548);
  swift_endAccess();
  sub_2367BB188();
  sub_23697A26C();
  sub_236906830();
  uint64_t v53 = (uint64_t)&v39[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_dateModified];
  sub_2367C0104();
  sub_23680FE24(v51, v53, (uint64_t *)&off_26AD89548);
  swift_endAccess();
  uint64_t v54 = *(void *)(v50 + v45);
  sub_2367BB188();
  uint64_t v55 = *(void *)(v54 + 232);
  uint64_t v56 = MEMORY[0x263F8EE78];
  uint64_t v101 = MEMORY[0x263F8EE78];
  uint64_t v57 = *(void *)(v55 + 16);
  if (v57)
  {
    uint64_t v91 = v49;
    sub_2367E512C();
    uint64_t v59 = v55 + v58;
    uint64_t v61 = *(void *)(v60 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_2369064D0(v59, (uint64_t)v9, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentUIElement);
      sub_2369064D0((uint64_t)v9, (uint64_t)v7, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentUIElement);
      long long v62 = sub_23689EA80((uint64_t)v7);
      uint64_t v63 = sub_236906240((uint64_t)v9, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentUIElement);
      if (v62)
      {
        MEMORY[0x237E06690](v63);
        if (*(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_23697B20C();
        }
        sub_23697B22C();
        sub_23697B1FC();
      }
      v59 += v61;
      --v57;
    }
    while (v57);
    uint64_t v64 = v101;
    uint64_t v49 = v91;
    uint64_t v56 = MEMORY[0x263F8EE78];
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v64 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  uint64_t v65 = &v49[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_documentUIElements];
  sub_2367BB248();
  *(void *)uint64_t v65 = v64;
  swift_bridgeObjectRelease();
  uint64_t v67 = v99;
  uint64_t v66 = v100;
  uint64_t v68 = *(void *)(v100 + v99)
      + OBJC_IVAR____TtCV21DocumentUnderstanding53DocumentUnderstanding_DocumentRepresentation_DocumentP33_B25D73F1E23932B4C52C7495EED50DAA13_StorageClass__documentHtmldata;
  sub_2367BB188();
  uint64_t v69 = v94;
  sub_23680A59C(v68, v94, &qword_26AD89A08);
  uint64_t v70 = sub_2369067AC();
  sub_2368100B8(v70, v71, v92);
  uint64_t v72 = v93;
  if (v73)
  {
    void *v93 = 0;
    v72[1] = 0xE000000000000000;
    sub_23697A70C();
    uint64_t v74 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentEmailData();
    sub_236906868(v74);
    sub_2367BAA28(v69, &qword_26AD89A08);
  }
  else
  {
    sub_236906298(v69, (uint64_t)v93, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentHTMLData);
  }
  uint64_t v75 = v95;
  uint64_t v76 = sub_236844704((uint64_t)v72);
  uint64_t v77 = (void **)&v49[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_documentHTMLData];
  sub_2367BB248();
  uint64_t v78 = *v77;
  *uint64_t v77 = v76;

  uint64_t v79 = *(void *)(v66 + v67)
      + OBJC_IVAR____TtCV21DocumentUnderstanding53DocumentUnderstanding_DocumentRepresentation_DocumentP33_B25D73F1E23932B4C52C7495EED50DAA13_StorageClass__documentMessageData;
  sub_2367BB188();
  uint64_t v80 = v79;
  uint64_t v81 = v97;
  sub_23680A59C(v80, v97, &qword_26AD89960);
  uint64_t v82 = sub_236906794();
  sub_2368100B8(v82, v83, v75);
  char v84 = v96;
  if (v73)
  {
    *unint64_t v96 = 0;
    v84[1] = 0xE000000000000000;
    v84[2] = 0;
    v84[3] = 0xE000000000000000;
    v84[4] = v56;
    v84[5] = v56;
    v84[6] = 0;
    v84[7] = 0xE000000000000000;
    v84[8] = 0;
    v84[9] = 0xE000000000000000;
    sub_23697A70C();
    sub_2367BAA28(v81, &qword_26AD89960);
  }
  else
  {
    sub_236906298(v81, (uint64_t)v96, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentMessageData);
  }
  uint64_t v85 = sub_2368113DC((uint64_t)v84);
  sub_236906240(v98, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document);
  sub_236906240(v66, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document);
  os_log_type_t v86 = (void **)&v49[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_documentMessageData];
  sub_2367BB248();
  uint64_t v87 = *v86;
  unsigned char *v86 = v85;

  return v49;
}

char *sub_236900B08(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentUIElement();
  uint64_t v100 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v100 - v8;
  uint64_t v10 = sub_2367B7DBC(&qword_26AD89960);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v108 = (uint64_t)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentMessageData();
  MEMORY[0x270FA5388](v106);
  char v107 = (uint64_t *)((char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_2367B7DBC(&qword_26AD89A08);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v105 = (uint64_t)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentHTMLData();
  MEMORY[0x270FA5388](v103);
  unint64_t v104 = (uint64_t *)((char *)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_2367B7DBC((uint64_t *)&off_26AD89548);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v102 = (char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_2367B7DBC(&qword_26AD89538);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v101 = (char *)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document(0);
  uint64_t v21 = v20 - 8;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v111 = v23;
  uint64_t v24 = (char *)objc_msgSend(objc_allocWithZone(v2), sel_init);
  uint64_t v109 = a1;
  sub_2369064D0(a1, (uint64_t)v23, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document);
  uint64_t v110 = *(int *)(v21 + 28);
  uint64_t v25 = *(void **)&v23[v110];
  swift_beginAccess();
  uint64_t v27 = v25[2];
  uint64_t v26 = v25[3];
  uint64_t v28 = &v24[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_headline];
  swift_beginAccess();
  *(void *)uint64_t v28 = v27;
  *((void *)v28 + 1) = v26;
  uint64_t v29 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v31 = v25[4];
  uint64_t v30 = v25[5];
  uint64_t v32 = &v29[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_subHeadline];
  swift_beginAccess();
  *(void *)uint64_t v32 = v31;
  *((void *)v32 + 1) = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v34 = v25[6];
  uint64_t v33 = v25[7];
  uint64_t v35 = &v29[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_version];
  swift_beginAccess();
  *(void *)uint64_t v35 = v34;
  *((void *)v35 + 1) = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v37 = v25[8];
  uint64_t v36 = v25[9];
  uint64_t v38 = &v29[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_creator];
  swift_beginAccess();
  *(void *)uint64_t v38 = v37;
  *((void *)v38 + 1) = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v40 = v25[10];
  uint64_t v39 = v25[11];
  unint64_t v41 = &v29[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_abstract];
  swift_beginAccess();
  *(void *)unint64_t v41 = v40;
  *((void *)v41 + 1) = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v43 = v25[12];
  uint64_t v42 = v25[13];
  uint64_t v44 = &v29[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_comment];
  swift_beginAccess();
  *(void *)uint64_t v44 = v43;
  *((void *)v44 + 1) = v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v46 = v25[14];
  uint64_t v45 = v25[15];
  uint64_t v47 = &v29[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_text];
  swift_beginAccess();
  *(void *)uint64_t v47 = v46;
  *((void *)v47 + 1) = v45;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v49 = v25[16];
  uint64_t v48 = v25[17];
  uint64_t v50 = &v29[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_inLanguage];
  swift_beginAccess();
  *(void *)uint64_t v50 = v49;
  *((void *)v50 + 1) = v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v51 = v25[18];
  uint64_t v52 = &v29[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_keywords];
  swift_beginAccess();
  *(void *)uint64_t v52 = v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v54 = v25[19];
  uint64_t v53 = v25[20];
  uint64_t v55 = &v29[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_identifier];
  swift_beginAccess();
  *(void *)uint64_t v55 = v54;
  *((void *)v55 + 1) = v53;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v56 = (uint64_t)v101;
  sub_23697A19C();
  swift_bridgeObjectRelease();
  uint64_t v57 = (uint64_t)&v29[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_url];
  swift_beginAccess();
  sub_23680FE24(v56, v57, &qword_26AD89538);
  swift_endAccess();
  uint64_t v59 = v110;
  uint64_t v58 = v111;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23697A19C();
  swift_bridgeObjectRelease();
  uint64_t v60 = (uint64_t)&v29[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_thumbnailUrl];
  swift_beginAccess();
  sub_23680FE24(v56, v60, &qword_26AD89538);
  swift_endAccess();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23697A19C();
  swift_bridgeObjectRelease();
  uint64_t v61 = (uint64_t)&v29[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_significantLink];
  swift_beginAccess();
  uint64_t v62 = v56;
  uint64_t v63 = v29;
  sub_23680FE24(v62, v61, &qword_26AD89538);
  swift_endAccess();
  uint64_t v64 = v58;
  swift_beginAccess();
  uint64_t v65 = (uint64_t)v102;
  sub_23697A26C();
  uint64_t v66 = sub_23697A2DC();
  sub_2367B7028(v65, 0, 1, v66);
  uint64_t v67 = (uint64_t)&v63[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_dateCreated];
  swift_beginAccess();
  sub_23680FE24(v65, v67, (uint64_t *)&off_26AD89548);
  swift_endAccess();
  swift_beginAccess();
  sub_23697A26C();
  sub_2367B7028(v65, 0, 1, v66);
  uint64_t v68 = (uint64_t)&v63[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_dateModified];
  swift_beginAccess();
  sub_23680FE24(v65, v68, (uint64_t *)&off_26AD89548);
  swift_endAccess();
  uint64_t v69 = *(void *)&v64[v59];
  swift_beginAccess();
  uint64_t v70 = *(void *)(v69 + 232);
  uint64_t v71 = MEMORY[0x263F8EE78];
  uint64_t v112 = MEMORY[0x263F8EE78];
  uint64_t v72 = *(void *)(v70 + 16);
  if (v72)
  {
    uint64_t v102 = v63;
    uint64_t v73 = v70 + ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80));
    uint64_t v74 = *(void *)(v100 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_2369064D0(v73, (uint64_t)v9, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentUIElement);
      sub_2369064D0((uint64_t)v9, (uint64_t)v7, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentUIElement);
      uint64_t v75 = sub_23689EA80((uint64_t)v7);
      uint64_t v76 = sub_236906240((uint64_t)v9, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentUIElement);
      if (v75)
      {
        MEMORY[0x237E06690](v76);
        if (*(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_23697B20C();
        }
        sub_23697B22C();
        sub_23697B1FC();
      }
      v73 += v74;
      --v72;
    }
    while (v72);
    uint64_t v77 = v112;
    uint64_t v63 = v102;
    uint64_t v71 = MEMORY[0x263F8EE78];
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v77 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  uint64_t v78 = &v63[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_documentUIElements];
  swift_beginAccess();
  *(void *)uint64_t v78 = v77;
  swift_bridgeObjectRelease();
  uint64_t v80 = v110;
  uint64_t v79 = (uint64_t)v111;
  uint64_t v81 = *(void *)&v111[v110]
      + OBJC_IVAR____TtCV21DocumentUnderstanding53DocumentUnderstanding_DocumentRepresentation_DocumentP33_B25D73F1E23932B4C52C7495EED50DAA13_StorageClass__documentHtmldata;
  swift_beginAccess();
  uint64_t v82 = v105;
  sub_23680A59C(v81, v105, &qword_26AD89A08);
  uint64_t v83 = v103;
  int v84 = sub_2367B85F8(v82, 1, v103);
  uint64_t v85 = v104;
  if (v84 == 1)
  {
    *unint64_t v104 = 0;
    v85[1] = 0xE000000000000000;
    sub_23697A70C();
    uint64_t v86 = (uint64_t)v85 + *(int *)(v83 + 24);
    uint64_t v87 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentEmailData();
    sub_2367B7028(v86, 1, 1, v87);
    sub_2367BAA28(v82, &qword_26AD89A08);
  }
  else
  {
    sub_236906298(v82, (uint64_t)v104, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentHTMLData);
  }
  uint64_t v88 = v106;
  uint64_t v89 = sub_236844704((uint64_t)v85);
  uint64_t v90 = (void **)&v63[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_documentHTMLData];
  swift_beginAccess();
  uint64_t v91 = *v90;
  unsigned char *v90 = v89;

  uint64_t v92 = *(void *)(v79 + v80)
      + OBJC_IVAR____TtCV21DocumentUnderstanding53DocumentUnderstanding_DocumentRepresentation_DocumentP33_B25D73F1E23932B4C52C7495EED50DAA13_StorageClass__documentMessageData;
  swift_beginAccess();
  uint64_t v93 = v92;
  uint64_t v94 = v108;
  sub_23680A59C(v93, v108, &qword_26AD89960);
  if (sub_2367B85F8(v94, 1, v88) == 1)
  {
    uint64_t v95 = v107;
    *char v107 = 0;
    v95[1] = 0xE000000000000000;
    v95[2] = 0;
    v95[3] = 0xE000000000000000;
    v95[4] = v71;
    v95[5] = v71;
    v95[6] = 0;
    v95[7] = 0xE000000000000000;
    v95[8] = 0;
    v95[9] = 0xE000000000000000;
    sub_23697A70C();
    sub_2367BAA28(v94, &qword_26AD89960);
  }
  else
  {
    uint64_t v95 = v107;
    sub_236906298(v94, (uint64_t)v107, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentMessageData);
  }
  unint64_t v96 = sub_2368113DC((uint64_t)v95);
  sub_236906240(v109, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document);
  sub_236906240(v79, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document);
  uint64_t v97 = (void **)&v63[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_documentMessageData];
  swift_beginAccess();
  uint64_t v98 = *v97;
  *uint64_t v97 = v96;

  return v63;
}

char *DURawDocument.__allocating_init<A>(proto:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_2367B7DBC(&qword_26AD89960);
  uint64_t v7 = sub_2367BB430(v6);
  MEMORY[0x270FA5388](v7);
  sub_2367BB260();
  uint64_t v109 = v8;
  uint64_t v107 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentMessageData();
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v9);
  sub_2367BB260();
  uint64_t v108 = v10;
  uint64_t v11 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentUIElement();
  uint64_t v12 = sub_2367CAA70(v11);
  v100[4] = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v100 - v17;
  uint64_t v19 = sub_2367B7DBC(&qword_26AD89A08);
  uint64_t v20 = sub_2367BB430(v19);
  MEMORY[0x270FA5388](v20);
  sub_2367BB260();
  uint64_t v106 = v21;
  uint64_t v104 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentHTMLData();
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v22);
  sub_2367BB260();
  uint64_t v105 = v23;
  uint64_t v24 = sub_2367B7DBC((uint64_t *)&off_26AD89548);
  uint64_t v25 = sub_2367BB430(v24);
  MEMORY[0x270FA5388](v25);
  sub_2369066B0(v26, v100[0]);
  uint64_t v27 = sub_2367B7DBC(&qword_26AD89538);
  uint64_t v28 = sub_2367BB430(v27);
  MEMORY[0x270FA5388](v28);
  sub_2367BB260();
  uint64_t v102 = v29;
  uint64_t v30 = sub_2367B7DBC(&qword_268899088);
  uint64_t v31 = sub_2367BB430(v30);
  MEMORY[0x270FA5388](v31);
  sub_2367CAC7C();
  uint64_t v34 = v33 - v32;
  sub_2367CD744();
  uint64_t v36 = v35;
  MEMORY[0x270FA5388](v37);
  sub_2367CAC7C();
  uint64_t v40 = (void *)(v39 - v38);
  uint64_t v41 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document(0);
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v42);
  sub_2367BB260();
  uint64_t v110 = v43;
  id v44 = objc_msgSend(objc_allocWithZone(v3), sel_init);
  (*(void (**)(void *, uint64_t, uint64_t))(v36 + 16))(v40, a1, a2);
  uint64_t v45 = (char *)v44;
  if (swift_dynamicCast())
  {
    v100[1] = v36;
    v100[2] = a1;
    v100[3] = a2;
    sub_2369065AC(v34, 0);
    uint64_t v46 = v110;
    sub_236906298(v34, v110, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document);
    uint64_t v101 = *(int *)(v41 + 20);
    uint64_t v47 = *(void **)(v46 + v101);
    sub_2367BB188();
    unint64_t v111 = v45;
    sub_2369065E4();
    sub_2367BB248();
    sub_236906578();
    swift_bridgeObjectRelease();
    sub_2367BB188();
    sub_2369065E4();
    sub_2367BB248();
    sub_236906578();
    swift_bridgeObjectRelease();
    sub_2367BB188();
    sub_2369065E4();
    sub_2367BB248();
    sub_236906578();
    swift_bridgeObjectRelease();
    sub_2367BB188();
    sub_2369065E4();
    sub_2367BB248();
    sub_236906578();
    swift_bridgeObjectRelease();
    sub_2367BB188();
    sub_2369065E4();
    sub_2367BB248();
    sub_236906578();
    swift_bridgeObjectRelease();
    sub_2367BB188();
    sub_2369065E4();
    sub_2367BB248();
    sub_236906578();
    swift_bridgeObjectRelease();
    sub_2367BB188();
    sub_2369065E4();
    sub_2367BB248();
    sub_236906578();
    swift_bridgeObjectRelease();
    sub_2367BB188();
    sub_2369065E4();
    sub_2367BB248();
    sub_236906578();
    swift_bridgeObjectRelease();
    sub_2367BB188();
    uint64_t v48 = v47[18];
    sub_2369065E4();
    sub_2367BB248();
    *uint64_t v40 = v48;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_2367BB188();
    uint64_t v50 = v47[19];
    uint64_t v49 = v47[20];
    sub_2369065E4();
    sub_2367BB248();
    *uint64_t v40 = v50;
    v40[1] = v49;
    uint64_t v51 = v111;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_2367BB188();
    swift_bridgeObjectRetain();
    sub_236906778();
    swift_bridgeObjectRelease();
    sub_2367C0104();
    uint64_t v52 = sub_2369067A0();
    sub_23680FE24(v52, v53, v54);
    swift_endAccess();
    uint64_t v55 = v101;
    sub_2367BB188();
    swift_bridgeObjectRetain();
    sub_236906778();
    swift_bridgeObjectRelease();
    sub_2367C0104();
    uint64_t v56 = sub_2369067A0();
    sub_23680FE24(v56, v57, &qword_26AD89538);
    swift_endAccess();
    sub_2367BB188();
    swift_bridgeObjectRetain();
    sub_236906778();
    swift_bridgeObjectRelease();
    sub_2367C0104();
    uint64_t v58 = sub_2369067A0();
    sub_23680FE24(v58, v59, &qword_26AD89538);
    swift_endAccess();
    sub_2367BB188();
    uint64_t v60 = v103;
    sub_23697A26C();
    sub_23697A2DC();
    sub_2369065AC(v60, 0);
    uint64_t v61 = (uint64_t)&v51[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_dateCreated];
    sub_2367C0104();
    sub_23680FE24(v60, v61, (uint64_t *)&off_26AD89548);
    swift_endAccess();
    sub_2367BB188();
    sub_23697A26C();
    sub_2369065AC(v60, 0);
    sub_2367C0104();
    uint64_t v62 = sub_2369067A0();
    sub_23680FE24(v62, v63, (uint64_t *)&off_26AD89548);
    swift_endAccess();
    uint64_t v64 = v46;
    uint64_t v65 = *(void *)(v46 + v55);
    sub_2367BB188();
    uint64_t v66 = *(void *)(v65 + 232);
    uint64_t v112 = MEMORY[0x263F8EE78];
    uint64_t v67 = *(void *)(v66 + 16);
    if (v67)
    {
      sub_2367E512C();
      uint64_t v69 = v66 + v68;
      uint64_t v71 = *(void *)(v70 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_2369064D0(v69, (uint64_t)v18, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentUIElement);
        sub_2369064D0((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentUIElement);
        uint64_t v72 = sub_23689EA80((uint64_t)v16);
        uint64_t v73 = sub_236906240((uint64_t)v18, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentUIElement);
        if (v72)
        {
          MEMORY[0x237E06690](v73);
          if (*(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_23697B20C();
          }
          sub_23697B22C();
          sub_23697B1FC();
        }
        v69 += v71;
        --v67;
      }
      while (v67);
      uint64_t v74 = v112;
      uint64_t v64 = v110;
      uint64_t v51 = v111;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v74 = MEMORY[0x263F8EE78];
    }
    swift_bridgeObjectRelease();
    uint64_t v75 = &v51[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_documentUIElements];
    sub_2367BB248();
    *(void *)uint64_t v75 = v74;
    swift_bridgeObjectRelease();
    uint64_t v76 = v101;
    uint64_t v77 = *(void *)(v64 + v101)
        + OBJC_IVAR____TtCV21DocumentUnderstanding53DocumentUnderstanding_DocumentRepresentation_DocumentP33_B25D73F1E23932B4C52C7495EED50DAA13_StorageClass__documentHtmldata;
    sub_2367BB188();
    uint64_t v78 = v106;
    sub_23680A59C(v77, v106, &qword_26AD89A08);
    uint64_t v79 = sub_2369067AC();
    sub_2368100B8(v79, v80, v104);
    uint64_t v81 = v107;
    int v84 = v105;
    if (v82)
    {
      *uint64_t v105 = 0;
      v84[1] = 0xE000000000000000;
      sub_23697A70C();
      uint64_t v83 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentEmailData();
      sub_236906868(v83);
      sub_2367BAA28(v78, &qword_26AD89A08);
    }
    else
    {
      sub_236906298(v78, (uint64_t)v105, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentHTMLData);
    }
    uint64_t v85 = sub_236844704((uint64_t)v84);
    uint64_t v86 = (void **)&v51[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_documentHTMLData];
    sub_2367BB248();
    uint64_t v87 = *v86;
    unsigned char *v86 = v85;

    uint64_t v88 = *(void *)(v64 + v76)
        + OBJC_IVAR____TtCV21DocumentUnderstanding53DocumentUnderstanding_DocumentRepresentation_DocumentP33_B25D73F1E23932B4C52C7495EED50DAA13_StorageClass__documentMessageData;
    sub_2367BB188();
    uint64_t v89 = v88;
    uint64_t v90 = v109;
    sub_23680A59C(v89, v109, &qword_26AD89960);
    uint64_t v91 = sub_236906794();
    sub_2368100B8(v91, v92, v81);
    uint64_t v94 = v108;
    if (v82)
    {
      *uint64_t v108 = 0;
      v94[1] = 0xE000000000000000;
      v94[2] = 0;
      v94[3] = 0xE000000000000000;
      uint64_t v93 = MEMORY[0x263F8EE78];
      v94[4] = MEMORY[0x263F8EE78];
      v94[5] = v93;
      v94[6] = 0;
      v94[7] = 0xE000000000000000;
      v94[8] = 0;
      v94[9] = 0xE000000000000000;
      sub_23697A70C();
      sub_2367BAA28(v90, &qword_26AD89960);
    }
    else
    {
      sub_236906298(v90, (uint64_t)v108, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentMessageData);
    }
    uint64_t v95 = sub_2368113DC((uint64_t)v94);
    sub_23682B6D4();
    v96();
    sub_236906240(v64, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document);
    uint64_t v97 = (void **)&v51[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_documentMessageData];
    sub_2367BB248();
    uint64_t v98 = *v97;
    *uint64_t v97 = v95;
  }
  else
  {
    sub_2369065AC(v34, 1);

    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(a1, a2);
    sub_2367BAA28(v34, &qword_268899088);
    return 0;
  }
  return v51;
}

uint64_t DURawDocument.headline.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_headline);
}

uint64_t DURawDocument.headline.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_headline);
}

uint64_t (*DURawDocument.headline.modify())()
{
  return j_j__swift_endAccess;
}

id sub_23690231C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  if (v3)
  {
    uint64_t v4 = (void *)sub_23697AF3C();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  return v4;
}

uint64_t DURawDocument.subHeadline.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_subHeadline);
}

void sub_23690239C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  if (a3)
  {
    uint64_t v6 = sub_23697AF6C();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  id v9 = a1;
  a4(v6, v8);
}

uint64_t DURawDocument.subHeadline.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_subHeadline);
}

uint64_t (*DURawDocument.subHeadline.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DURawDocument.version.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_version);
}

uint64_t DURawDocument.version.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_version);
}

uint64_t (*DURawDocument.version.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DURawDocument.creator.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_creator);
}

uint64_t DURawDocument.creator.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_creator);
}

uint64_t (*DURawDocument.creator.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DURawDocument.abstract.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_abstract);
}

uint64_t DURawDocument.abstract.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_abstract);
}

uint64_t (*DURawDocument.abstract.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DURawDocument.comment.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_comment);
}

uint64_t DURawDocument.comment.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_comment);
}

uint64_t (*DURawDocument.comment.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DURawDocument.text.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_text);
}

uint64_t DURawDocument.text.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_text);
}

uint64_t (*DURawDocument.text.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DURawDocument.inLanguage.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_inLanguage);
}

uint64_t DURawDocument.inLanguage.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_inLanguage);
}

uint64_t (*DURawDocument.inLanguage.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DURawDocument.keywords.getter()
{
  return sub_236806B5C();
}

uint64_t DURawDocument.keywords.setter(uint64_t a1)
{
  return sub_236806C1C(a1, &OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_keywords);
}

uint64_t (*DURawDocument.keywords.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DURawDocument.identifier.getter()
{
  return sub_236810E8C(&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_identifier);
}

uint64_t DURawDocument.identifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_236810EFC(a1, a2, &OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_identifier);
}

uint64_t (*DURawDocument.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t DURawDocument.url.getter()
{
  return sub_236902AF8((uint64_t)&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_url, &qword_26AD89538);
}

uint64_t DURawDocument.url.setter(uint64_t a1)
{
  return sub_236902BA8(a1, (uint64_t)&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_url, &qword_26AD89538);
}

uint64_t (*DURawDocument.url.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DURawDocument.thumbnailUrl.getter()
{
  return sub_236902AF8((uint64_t)&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_thumbnailUrl, &qword_26AD89538);
}

uint64_t sub_236902AF8(uint64_t a1, uint64_t *a2)
{
  sub_2367BB188();
  uint64_t v3 = sub_23688CC04();
  return sub_23680A59C(v3, v4, a2);
}

uint64_t DURawDocument.thumbnailUrl.setter(uint64_t a1)
{
  return sub_236902BA8(a1, (uint64_t)&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_thumbnailUrl, &qword_26AD89538);
}

uint64_t sub_236902BA8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_2367C0104();
  uint64_t v4 = sub_236906688();
  sub_23680FE24(v4, v5, a3);
  return swift_endAccess();
}

uint64_t (*DURawDocument.thumbnailUrl.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DURawDocument.significantLink.getter()
{
  return sub_236902AF8((uint64_t)&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_significantLink, &qword_26AD89538);
}

uint64_t DURawDocument.significantLink.setter(uint64_t a1)
{
  return sub_236902BA8(a1, (uint64_t)&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_significantLink, &qword_26AD89538);
}

uint64_t (*DURawDocument.significantLink.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DURawDocument.dateCreated.getter()
{
  return sub_236902AF8((uint64_t)&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_dateCreated, (uint64_t *)&off_26AD89548);
}

uint64_t DURawDocument.dateCreated.setter(uint64_t a1)
{
  return sub_236902BA8(a1, (uint64_t)&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_dateCreated, (uint64_t *)&off_26AD89548);
}

uint64_t (*DURawDocument.dateCreated.modify())()
{
  return j_j__swift_endAccess;
}

id sub_236902E94(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v10 = sub_2367B7DBC(a3);
  uint64_t v11 = sub_2367BB430(v10);
  MEMORY[0x270FA5388](v11);
  sub_23689D90C();
  a4();
  uint64_t v12 = a5(0);
  uint64_t v13 = sub_2369067AC();
  uint64_t v15 = 0;
  if (sub_2367B85F8(v13, v14, v12) != 1)
  {
    uint64_t v15 = (void *)a6();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v6, v12);
  }
  return v15;
}

uint64_t DURawDocument.dateModified.getter()
{
  return sub_236902AF8((uint64_t)&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_dateModified, (uint64_t *)&off_26AD89548);
}

void sub_236902FE4(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(uint64_t), uint64_t (*a6)(void), void (*a7)(uint64_t))
{
  uint64_t v13 = sub_2367B7DBC(a4);
  uint64_t v14 = sub_2367BB430(v13);
  MEMORY[0x270FA5388](v14);
  sub_2367CBF80();
  if (a3)
  {
    a5(a3);
    uint64_t v15 = a6(0);
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v15 = a6(0);
    uint64_t v16 = 1;
  }
  sub_2367B7028(v7, v16, 1, v15);
  id v17 = a1;
  a7(v7);
}

uint64_t DURawDocument.dateModified.setter(uint64_t a1)
{
  return sub_236902BA8(a1, (uint64_t)&OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_dateModified, (uint64_t *)&off_26AD89548);
}

uint64_t (*DURawDocument.dateModified.modify())()
{
  return j_j__swift_endAccess;
}

void *DURawDocument.documentMessageData.getter()
{
  id v1 = (void **)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_documentMessageData);
  sub_2367BB188();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void DURawDocument.documentMessageData.setter(void *a1)
{
}

uint64_t (*DURawDocument.documentMessageData.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t DURawDocument.documentUIElements.getter()
{
  return sub_236806B5C();
}

uint64_t DURawDocument.documentUIElements.setter(uint64_t a1)
{
  return sub_236806C1C(a1, &OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_documentUIElements);
}

uint64_t (*DURawDocument.documentUIElements.modify())()
{
  return j_j__swift_endAccess;
}

void *DURawDocument.documentHTMLData.getter()
{
  id v1 = (void **)(v0 + OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_documentHTMLData);
  sub_2367BB188();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void DURawDocument.documentHTMLData.setter(void *a1)
{
}

uint64_t (*DURawDocument.documentHTMLData.modify())()
{
  return j_j__swift_endAccess;
}

id DURawDocument.init()()
{
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_headline);
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_subHeadline);
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_version);
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_creator);
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_abstract);
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_comment);
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_text);
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_inLanguage);
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_keywords] = 0;
  sub_23682558C(OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_identifier);
  uint64_t v1 = (uint64_t)&v0[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_url];
  sub_23697A1CC();
  sub_2369065AC(v1, 1);
  sub_2369065AC((uint64_t)&v0[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_thumbnailUrl], 1);
  sub_2369065AC((uint64_t)&v0[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_significantLink], 1);
  uint64_t v2 = (uint64_t)&v0[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_dateCreated];
  sub_23697A2DC();
  sub_2369065AC(v2, 1);
  sub_2369065AC((uint64_t)&v0[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_dateModified], 1);
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_documentMessageData] = 0;
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_documentUIElements] = 0;
  *(void *)&v0[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_documentHTMLData] = 0;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for DURawDocument();
  return objc_msgSendSuper2(&v4, sel_init);
}

Swift::Void __swiftcall DURawDocument.encode(with:)(NSCoder with)
{
  type metadata accessor for DURawDocument();
  sub_236906488(&qword_26889A420, (void (*)(uint64_t))type metadata accessor for DURawDocument);
  uint64_t v2 = (void *)sub_23697AB7C();
  if (v2)
  {
    id v3 = v2;
    objc_super v4 = (void *)sub_23697AF3C();
    [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];
  }
}

uint64_t DURawDocument.init(coder:)(void *a1)
{
  swift_getObjectType();
  sub_2367CBCC4();
  id v3 = v1;
  if (!sub_23697B47C())
  {

    goto LABEL_5;
  }
  swift_getObjectType();

  sub_236906488(&qword_26889A420, (void (*)(uint64_t))type metadata accessor for DURawDocument);
  sub_236906888();
  sub_23697AB8C();

  uint64_t v4 = v6;
  if (!v6)
  {
LABEL_5:
    swift_getObjectType();
    sub_2368254B0();
    swift_deallocPartialClassInstance();
    return 0;
  }
  swift_getObjectType();
  sub_2368254B0();
  swift_deallocPartialClassInstance();
  return v4;
}

uint64_t DURawDocument.copy(with:)@<X0>(char **a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document(0);
  uint64_t v4 = sub_2367BB430(v3);
  MEMORY[0x270FA5388](v4);
  sub_23689D90C();
  DURawDocument.protoRepresentation.getter(v5);
  uint64_t v6 = sub_236900130(v1);
  uint64_t result = sub_2367B7DBC(&qword_26AD89568);
  a1[3] = (char *)result;
  *a1 = v6;
  return result;
}

uint64_t DURawDocument.isEqual(_:)(uint64_t a1)
{
  uint64_t v3 = sub_23697A2DC();
  sub_2367CD744();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  sub_236906694(v7, v156);
  uint64_t v166 = sub_2367B7DBC(&qword_268898F10);
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v8);
  sub_2367BB610();
  uint64_t v164 = v9;
  sub_2367D9914();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  sub_2368D18B0(v11, v12, v13, v14, v15, v16, v17, v18, v156);
  uint64_t v19 = sub_2367B7DBC((uint64_t *)&off_26AD89548);
  uint64_t v20 = sub_2367BB430(v19);
  MEMORY[0x270FA5388](v20);
  uint64_t v161 = (uint64_t)&v156 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2367D9914();
  MEMORY[0x270FA5388](v22);
  sub_236810108();
  uint64_t v162 = v23;
  sub_2367D9914();
  MEMORY[0x270FA5388](v24);
  uint64_t v163 = (uint64_t)&v156 - v25;
  sub_2367D9914();
  MEMORY[0x270FA5388](v26);
  sub_236810108();
  uint64_t v165 = v27;
  sub_2367D9914();
  MEMORY[0x270FA5388](v28);
  sub_236810108();
  uint64_t v167 = v29;
  sub_2367D9914();
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v180 = sub_236906738(v31, v32, v33, v34, v35, v36, v37, v38, v156);
  sub_2367CD744();
  uint64_t v177 = v39;
  MEMORY[0x270FA5388](v40);
  sub_2367BB260();
  uint64_t v175 = v41;
  uint64_t v179 = sub_2367B7DBC(&qword_26889A428);
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v42);
  uint64_t v173 = (uint64_t)&v156 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2367D9914();
  MEMORY[0x270FA5388](v44);
  sub_236810108();
  uint64_t v178 = v45;
  sub_2367D9914();
  MEMORY[0x270FA5388](v46);
  uint64_t v48 = (char *)&v156 - v47;
  uint64_t v49 = sub_2367B7DBC(&qword_26AD89538);
  uint64_t v50 = sub_2367BB430(v49);
  MEMORY[0x270FA5388](v50);
  sub_2367BB610();
  uint64_t v170 = v51;
  sub_2367D9914();
  MEMORY[0x270FA5388](v52);
  uint64_t v171 = (uint64_t)&v156 - v53;
  sub_2367D9914();
  MEMORY[0x270FA5388](v54);
  sub_236810108();
  uint64_t v172 = v55;
  sub_2367D9914();
  MEMORY[0x270FA5388](v56);
  sub_236810108();
  uint64_t v174 = v57;
  sub_2367D9914();
  uint64_t v59 = MEMORY[0x270FA5388](v58);
  uint64_t v61 = (char *)&v156 - v60;
  MEMORY[0x270FA5388](v59);
  sub_236810108();
  uint64_t v176 = v62;
  sub_2367D9914();
  uint64_t v64 = MEMORY[0x270FA5388](v63);
  uint64_t v66 = (char *)&v156 - v65;
  uint64_t v67 = MEMORY[0x270FA5388](v64);
  uint64_t v69 = (char *)&v156 - v68;
  MEMORY[0x270FA5388](v67);
  uint64_t v71 = (char *)&v156 - v70;
  sub_23680A59C(a1, (uint64_t)v182, (uint64_t *)&unk_26AD8BC30);
  if (v183)
  {
    type metadata accessor for DURawDocument();
    if (swift_dynamicCast())
    {
      uint64_t v157 = v5;
      uint64_t v158 = v3;
      uint64_t v72 = v181;
      uint64_t v159 = v1;
      uint64_t v73 = v1 + OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_headline;
      sub_2367BB188();
      uint64_t v74 = *(void *)(v73 + 8);
      uint64_t v160 = v72;
      uint64_t v75 = &v72[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_headline];
      sub_2367BB188();
      uint64_t v76 = *((void *)v75 + 1);
      if (v74)
      {
        if (!v76) {
          goto LABEL_140;
        }
        sub_23690663C();
        BOOL v78 = v78 && v74 == v77;
        if (!v78 && (sub_236906540() & 1) == 0) {
          goto LABEL_140;
        }
      }
      else if (v76)
      {
        goto LABEL_140;
      }
      sub_23690666C();
      sub_2367BB188();
      uint64_t v79 = *(void *)(v74 + 8);
      sub_236906660();
      sub_2367BB188();
      if (v79)
      {
        if (!qword_26889A008) {
          goto LABEL_140;
        }
        sub_23690663C();
        BOOL v81 = v78 && v79 == v80;
        if (!v81 && (sub_236906540() & 1) == 0) {
          goto LABEL_140;
        }
      }
      else if (qword_26889A008)
      {
        goto LABEL_140;
      }
      sub_23690666C();
      sub_2367BB188();
      uint64_t v82 = *(void *)(v79 + 8);
      sub_236906660();
      sub_2367BB188();
      if (v82)
      {
        if (!qword_26889A008) {
          goto LABEL_140;
        }
        sub_23690663C();
        BOOL v84 = v78 && v82 == v83;
        if (!v84 && (sub_236906540() & 1) == 0) {
          goto LABEL_140;
        }
      }
      else if (qword_26889A008)
      {
        goto LABEL_140;
      }
      sub_23690666C();
      sub_2367BB188();
      uint64_t v85 = *(void *)(v82 + 8);
      sub_236906660();
      sub_2367BB188();
      if (v85)
      {
        if (!qword_26889A008) {
          goto LABEL_140;
        }
        sub_23690663C();
        BOOL v87 = v78 && v85 == v86;
        if (!v87 && (sub_236906540() & 1) == 0) {
          goto LABEL_140;
        }
      }
      else if (qword_26889A008)
      {
        goto LABEL_140;
      }
      sub_23690666C();
      sub_2367BB188();
      uint64_t v88 = *(void *)(v85 + 8);
      sub_236906660();
      sub_2367BB188();
      if (v88)
      {
        if (!qword_26889A008) {
          goto LABEL_140;
        }
        sub_23690663C();
        BOOL v90 = v78 && v88 == v89;
        if (!v90 && (sub_236906540() & 1) == 0) {
          goto LABEL_140;
        }
      }
      else if (qword_26889A008)
      {
        goto LABEL_140;
      }
      sub_23690666C();
      sub_2367BB188();
      uint64_t v91 = *(void *)(v88 + 8);
      sub_236906660();
      sub_2367BB188();
      if (v91)
      {
        if (!qword_26889A008) {
          goto LABEL_140;
        }
        sub_23690663C();
        BOOL v93 = v78 && v91 == v92;
        if (!v93 && (sub_236906540() & 1) == 0) {
          goto LABEL_140;
        }
      }
      else if (qword_26889A008)
      {
        goto LABEL_140;
      }
      sub_23690666C();
      sub_2367BB188();
      uint64_t v94 = *(void *)(v91 + 8);
      sub_236906660();
      sub_2367BB188();
      if (v94)
      {
        if (!qword_26889A008) {
          goto LABEL_140;
        }
        sub_23690663C();
        BOOL v96 = v78 && v94 == v95;
        if (!v96 && (sub_236906540() & 1) == 0) {
          goto LABEL_140;
        }
      }
      else if (qword_26889A008)
      {
        goto LABEL_140;
      }
      sub_23690666C();
      sub_2367BB188();
      uint64_t v97 = *(void ***)v94;
      uint64_t v98 = *(void *)(v94 + 8);
      sub_236906660();
      sub_2367BB188();
      if (v98)
      {
        if (!qword_26889A008) {
          goto LABEL_140;
        }
        sub_23690663C();
        BOOL v100 = v78 && v98 == v99;
        if (!v100 && (sub_236906540() & 1) == 0) {
          goto LABEL_140;
        }
      }
      else if (qword_26889A008)
      {
        goto LABEL_140;
      }
      sub_236906630();
      sub_2367BB188();
      uint64_t v101 = *v97;
      uint64_t v102 = &v160[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_keywords];
      sub_2367BB188();
      uint64_t v103 = *(void **)v102;
      if (v101)
      {
        if (!v103 || (sub_2368125B0(v101, v103) & 1) == 0) {
          goto LABEL_140;
        }
      }
      else if (v103)
      {
        goto LABEL_140;
      }
      sub_23690666C();
      sub_2367BB188();
      uint64_t v104 = *((void *)v102 + 1);
      sub_236906660();
      sub_2367BB188();
      if (v104)
      {
        if (!qword_26889A008) {
          goto LABEL_140;
        }
        sub_23690663C();
        BOOL v106 = v78 && v104 == v105;
        if (!v106 && (sub_236906540() & 1) == 0) {
          goto LABEL_140;
        }
      }
      else if (qword_26889A008)
      {
        goto LABEL_140;
      }
      sub_236906630();
      sub_2367BB188();
      uint64_t v107 = sub_23688CC04();
      sub_23680A59C(v107, v108, &qword_26AD89538);
      sub_236825444();
      sub_2367BB188();
      uint64_t v109 = sub_236906888();
      sub_23680A59C(v109, v110, &qword_26AD89538);
      uint64_t v111 = (uint64_t)&v48[*(int *)(v179 + 48)];
      sub_23680A59C((uint64_t)v71, (uint64_t)v48, &qword_26AD89538);
      sub_23680A59C((uint64_t)v69, v111, &qword_26AD89538);
      sub_2368100B8((uint64_t)v48, 1, v180);
      if (v78)
      {
        sub_2367BAA28((uint64_t)v69, &qword_26AD89538);
        sub_2367BAA28((uint64_t)v71, &qword_26AD89538);
        sub_2368100B8(v111, 1, v180);
        if (v78)
        {
          sub_2367BAA28((uint64_t)v48, &qword_26AD89538);
          goto LABEL_100;
        }
      }
      else
      {
        sub_23680A59C((uint64_t)v48, (uint64_t)v66, &qword_26AD89538);
        sub_2368100B8(v111, 1, v180);
        if (!v112)
        {
          uint64_t v117 = v177;
          sub_236906608();
          v118();
          sub_236906488(&qword_26889A430, MEMORY[0x263F06EA8]);
          HIDWORD(v156) = sub_23697AF0C();
          uint64_t v111 = *(void *)(v117 + 8);
          sub_23682B6D4();
          ((void (*)(void))v111)();
          sub_2367BAA28((uint64_t)v69, &qword_26AD89538);
          sub_2367BAA28((uint64_t)v71, &qword_26AD89538);
          sub_23682B6D4();
          ((void (*)(void))v111)();
          sub_2367BAA28((uint64_t)v48, &qword_26AD89538);
          if ((v156 & 0x100000000) == 0) {
            goto LABEL_140;
          }
LABEL_100:
          sub_236906630();
          sub_2367BB188();
          sub_236906850(v111);
          sub_236825444();
          sub_2367BB188();
          sub_23680A59C(v111, (uint64_t)v61, &qword_26AD89538);
          uint64_t v119 = v178;
          sub_2369065C4();
          sub_23680A59C((uint64_t)v61, v111, &qword_26AD89538);
          sub_2368100B8(v119, 1, v180);
          if (v78)
          {
            sub_2367BAA28((uint64_t)v61, &qword_26AD89538);
            sub_2367BAA28(v176, &qword_26AD89538);
            sub_2368100B8(v111, 1, v180);
            if (v78)
            {
              sub_2367BAA28(v178, &qword_26AD89538);
              goto LABEL_110;
            }
          }
          else
          {
            sub_23680A59C(v178, v174, &qword_26AD89538);
            sub_2368100B8(v111, 1, v180);
            if (!v120)
            {
              uint64_t v121 = v177;
              sub_236906688();
              sub_236906608();
              v122();
              sub_236906488(&qword_26889A430, MEMORY[0x263F06EA8]);
              uint64_t v111 = sub_2369067F0();
              uint64_t v123 = *(void (**)(void))(v121 + 8);
              sub_236906678();
              v123();
              sub_2367BAA28((uint64_t)v61, &qword_26AD89538);
              sub_2367BAA28(v176, &qword_26AD89538);
              sub_236906678();
              v123();
              sub_2367BAA28(v178, &qword_26AD89538);
              if ((v111 & 1) == 0) {
                goto LABEL_140;
              }
LABEL_110:
              sub_236906630();
              sub_2367BB188();
              sub_236906850(v111);
              sub_236825444();
              sub_2367BB188();
              sub_23680A59C(v111, v171, &qword_26AD89538);
              uint64_t v124 = v173;
              sub_2369065C4();
              sub_2369066CC();
              sub_2368100B8(v124, 1, v180);
              if (v78)
              {
                sub_2367BAA28(v171, &qword_26AD89538);
                sub_2367BAA28(v172, &qword_26AD89538);
                sub_2368100B8(v111, 1, v180);
                if (v78)
                {
                  sub_2367BAA28(v173, &qword_26AD89538);
                  goto LABEL_120;
                }
              }
              else
              {
                sub_23680A59C(v173, v170, &qword_26AD89538);
                sub_2368100B8(v111, 1, v180);
                if (!v125)
                {
                  uint64_t v126 = v177;
                  sub_236906688();
                  sub_236906608();
                  v127();
                  sub_236906488(&qword_26889A430, MEMORY[0x263F06EA8]);
                  uint64_t v111 = sub_236906810();
                  BOOL v128 = *(void (**)(void))(v126 + 8);
                  sub_23682B6D4();
                  v128();
                  sub_2367BAA28(v171, &qword_26AD89538);
                  sub_2367BAA28(v172, &qword_26AD89538);
                  sub_23682B6D4();
                  v128();
                  sub_2367BAA28(v173, &qword_26AD89538);
                  if ((v111 & 1) == 0) {
                    goto LABEL_140;
                  }
LABEL_120:
                  sub_236906630();
                  sub_2367BB188();
                  sub_236906850(v111);
                  sub_236825444();
                  sub_2367BB188();
                  sub_23680A59C(v111, v167, (uint64_t *)&off_26AD89548);
                  uint64_t v129 = v169;
                  sub_2369065C4();
                  sub_2369066CC();
                  sub_2368100B8(v129, 1, v158);
                  if (v78)
                  {
                    sub_2367BAA28(v167, (uint64_t *)&off_26AD89548);
                    sub_2367BAA28(v168, (uint64_t *)&off_26AD89548);
                    sub_2368100B8(v111, 1, v158);
                    if (v78)
                    {
                      sub_2367BAA28(v169, (uint64_t *)&off_26AD89548);
LABEL_130:
                      sub_236906630();
                      sub_2367BB188();
                      sub_236906850(v111);
                      sub_236825444();
                      sub_2367BB188();
                      sub_23680A59C(v111, v162, (uint64_t *)&off_26AD89548);
                      uint64_t v134 = v164;
                      sub_2369065C4();
                      sub_2369066CC();
                      sub_2368100B8(v134, 1, v158);
                      if (v78)
                      {
                        sub_2367BAA28(v162, (uint64_t *)&off_26AD89548);
                        sub_2367BAA28(v163, (uint64_t *)&off_26AD89548);
                        sub_2368100B8(v111, 1, v158);
                        if (v78)
                        {
                          sub_2367BAA28(v164, (uint64_t *)&off_26AD89548);
LABEL_144:
                          sub_236906630();
                          sub_2367BB188();
                          uint64_t v141 = *(void *)v111;
                          uint64_t v142 = (uint64_t *)&v160[OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_documentUIElements];
                          sub_2367BB188();
                          uint64_t v143 = *v142;
                          if (v141)
                          {
                            if (!v143) {
                              goto LABEL_140;
                            }
                            swift_bridgeObjectRetain();
                            uint64_t v144 = swift_bridgeObjectRetain();
                            char v145 = sub_23681332C(v144, v143);
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                            if ((v145 & 1) == 0) {
                              goto LABEL_140;
                            }
                          }
                          else if (v143)
                          {
                            goto LABEL_140;
                          }
                          sub_236906630();
                          sub_2367BB188();
                          uint64_t v146 = *(void **)v141;
                          sub_236825444();
                          sub_2367BB188();
                          os_log_type_t v147 = *(void **)v141;
                          if (v146)
                          {
                            if (v147)
                            {
                              type metadata accessor for DUDocumentHTMLData();
                              id v148 = v147;
                              id v149 = v146;
                              uint64_t v141 = sub_23697B4BC();

                              if (v141) {
                                goto LABEL_154;
                              }
                            }
                          }
                          else if (!v147)
                          {
LABEL_154:
                            sub_236906630();
                            sub_2367BB188();
                            uint64_t v150 = *(void **)v141;
                            sub_236825444();
                            sub_2367BB188();
                            unint64_t v151 = *(void **)v141;
                            if (!v150)
                            {
                              id v155 = v151;

                              if (!v151)
                              {
                                char v136 = 1;
                                return v136 & 1;
                              }

                              goto LABEL_141;
                            }
                            if (v151)
                            {
                              type metadata accessor for DUDocumentMessageData();
                              id v152 = v150;
                              id v153 = v151;
                              id v154 = v152;
                              char v136 = sub_23697B4BC();

                              return v136 & 1;
                            }
                          }
LABEL_140:

                          goto LABEL_141;
                        }
                      }
                      else
                      {
                        sub_23680A59C(v164, v161, (uint64_t *)&off_26AD89548);
                        sub_2368100B8(v111, 1, v158);
                        if (!v135)
                        {
                          uint64_t v138 = v157;
                          sub_236906688();
                          sub_236906608();
                          v139();
                          sub_236906488((unint64_t *)&qword_268898F18, MEMORY[0x263F07490]);
                          uint64_t v111 = sub_236906810();
                          uint64_t v140 = *(void (**)(void))(v138 + 8);
                          sub_23682B6D4();
                          v140();
                          sub_2367BAA28(v162, (uint64_t *)&off_26AD89548);
                          sub_2367BAA28(v163, (uint64_t *)&off_26AD89548);
                          sub_23682B6D4();
                          v140();
                          sub_2367BAA28(v164, (uint64_t *)&off_26AD89548);
                          if ((v111 & 1) == 0) {
                            goto LABEL_140;
                          }
                          goto LABEL_144;
                        }
                        sub_2367BAA28(v162, (uint64_t *)&off_26AD89548);
                        sub_2367BAA28(v163, (uint64_t *)&off_26AD89548);
                        (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v161, v158);
                      }
                      uint64_t v115 = &qword_268898F10;
                      uint64_t v116 = v164;
LABEL_139:
                      sub_2367BAA28(v116, v115);
                      goto LABEL_140;
                    }
                  }
                  else
                  {
                    sub_23680A59C(v169, v165, (uint64_t *)&off_26AD89548);
                    sub_2368100B8(v111, 1, v158);
                    if (!v130)
                    {
                      uint64_t v131 = v157;
                      sub_236906688();
                      sub_236906608();
                      v132();
                      sub_236906488((unint64_t *)&qword_268898F18, MEMORY[0x263F07490]);
                      uint64_t v111 = sub_2369067F0();
                      os_log_type_t v133 = *(void (**)(void))(v131 + 8);
                      sub_236906678();
                      v133();
                      sub_2367BAA28(v167, (uint64_t *)&off_26AD89548);
                      sub_2367BAA28(v168, (uint64_t *)&off_26AD89548);
                      sub_236906678();
                      v133();
                      sub_2367BAA28(v169, (uint64_t *)&off_26AD89548);
                      if ((v111 & 1) == 0) {
                        goto LABEL_140;
                      }
                      goto LABEL_130;
                    }
                    sub_2367BAA28(v167, (uint64_t *)&off_26AD89548);
                    sub_2367BAA28(v168, (uint64_t *)&off_26AD89548);
                    (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v165, v158);
                  }
                  uint64_t v115 = &qword_268898F10;
                  uint64_t v116 = v169;
                  goto LABEL_139;
                }
                sub_2367BAA28(v171, &qword_26AD89538);
                sub_2367BAA28(v172, &qword_26AD89538);
                (*(void (**)(uint64_t, uint64_t))(v177 + 8))(v170, v180);
              }
              uint64_t v115 = &qword_26889A428;
              uint64_t v116 = v173;
              goto LABEL_139;
            }
            sub_2367BAA28((uint64_t)v61, &qword_26AD89538);
            sub_2367BAA28(v176, &qword_26AD89538);
            (*(void (**)(uint64_t, uint64_t))(v177 + 8))(v174, v180);
          }
          uint64_t v115 = &qword_26889A428;
          uint64_t v116 = v178;
          goto LABEL_139;
        }
        sub_2367BAA28((uint64_t)v69, &qword_26AD89538);
        uint64_t v113 = sub_236906688();
        sub_2367BAA28(v113, v114);
        (*(void (**)(char *, uint64_t))(v177 + 8))(v66, v180);
      }
      uint64_t v115 = &qword_26889A428;
      uint64_t v116 = (uint64_t)v48;
      goto LABEL_139;
    }
  }
  else
  {
    sub_2367BAA28((uint64_t)v182, (uint64_t *)&unk_26AD8BC30);
  }
LABEL_141:
  char v136 = 0;
  return v136 & 1;
}

uint64_t DURawDocument.protoRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = v1;
  uint64_t v6 = sub_2367B7DBC(&qword_26AD89960);
  uint64_t v7 = sub_2367BB430(v6);
  MEMORY[0x270FA5388](v7);
  sub_2367BB610();
  uint64_t v234 = v8;
  sub_2367D9914();
  MEMORY[0x270FA5388](v9);
  sub_236810108();
  uint64_t v233 = v10;
  sub_2367D9914();
  MEMORY[0x270FA5388](v11);
  sub_2367E5460();
  uint64_t v241 = v12;
  uint64_t v242 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentMessageData();
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v13);
  uint64_t v236 = (uint64_t)&v230 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2367D9914();
  MEMORY[0x270FA5388](v15);
  sub_236810108();
  uint64_t v239 = v16;
  sub_2367D9914();
  MEMORY[0x270FA5388](v17);
  sub_2367E5460();
  uint64_t v237 = v18;
  uint64_t v19 = sub_2367B7DBC(&qword_26AD89A08);
  uint64_t v20 = sub_2367BB430(v19);
  MEMORY[0x270FA5388](v20);
  sub_2367BB610();
  uint64_t v232 = v21;
  sub_2367D9914();
  MEMORY[0x270FA5388](v22);
  sub_236810108();
  uint64_t v230 = v23;
  sub_2367D9914();
  MEMORY[0x270FA5388](v24);
  sub_2367E5460();
  uint64_t v240 = v25;
  uint64_t v255 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentHTMLData();
  sub_2367BB1EC();
  MEMORY[0x270FA5388](v26);
  sub_2367BB610();
  uint64_t v235 = v27;
  sub_2367D9914();
  MEMORY[0x270FA5388](v28);
  uint64_t v238 = (uint64_t *)((char *)&v230 - v29);
  sub_2367D9914();
  MEMORY[0x270FA5388](v30);
  sub_2367E5460();
  uint64_t v231 = v31;
  uint64_t v32 = sub_2367B7DBC(qword_26AD89B80);
  uint64_t v33 = sub_2367BB430(v32);
  MEMORY[0x270FA5388](v33);
  sub_2367CBF80();
  uint64_t v263 = type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentUIElement();
  sub_2367CD744();
  uint64_t v259 = v34;
  MEMORY[0x270FA5388](v35);
  sub_2367BB610();
  uint64_t v262 = v36;
  sub_2367D9914();
  MEMORY[0x270FA5388](v37);
  sub_236810108();
  uint64_t v261 = v38;
  sub_2367D9914();
  MEMORY[0x270FA5388](v39);
  sub_2367E5460();
  uint64_t v258 = v40;
  uint64_t v41 = sub_2367B7DBC((uint64_t *)&off_26AD89548);
  uint64_t v42 = sub_2367BB430(v41);
  MEMORY[0x270FA5388](v42);
  sub_2367BB610();
  uint64_t v251 = v43;
  sub_2367D9914();
  MEMORY[0x270FA5388](v44);
  sub_2367E5460();
  uint64_t v249 = v45;
  sub_23697A2DC();
  sub_2367CD744();
  uint64_t v253 = v47;
  uint64_t v254 = v46;
  MEMORY[0x270FA5388](v46);
  sub_2367BB610();
  uint64_t v252 = v48;
  sub_2367D9914();
  MEMORY[0x270FA5388](v49);
  sub_2367E5460();
  uint64_t v250 = v50;
  uint64_t v51 = sub_2367B7DBC(&qword_26AD89538);
  uint64_t v52 = sub_2367BB430(v51);
  MEMORY[0x270FA5388](v52);
  sub_2367BB610();
  unint64_t v247 = v53;
  sub_2367D9914();
  MEMORY[0x270FA5388](v54);
  sub_236810108();
  uint64_t v245 = v55;
  sub_2367D9914();
  uint64_t v57 = MEMORY[0x270FA5388](v56);
  uint64_t v257 = sub_236906738(v57, v58, v59, v60, v61, v62, v63, v64, v230);
  sub_2367CD744();
  uint64_t v66 = v65;
  MEMORY[0x270FA5388](v67);
  v248 = (char *)&v230 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2367D9914();
  MEMORY[0x270FA5388](v69);
  v246 = (char *)&v230 - v70;
  sub_2367D9914();
  uint64_t v72 = MEMORY[0x270FA5388](v71);
  sub_2368D18B0(v72, v73, v74, v75, v76, v77, v78, v79, v230);
  sub_23697A70C();
  unint64_t v80 = *(int *)(type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document(0) + 20);
  if (qword_26AD89578 != -1) {
    swift_once();
  }
  *(void *)(a1 + v80) = qword_26AD89570;
  BOOL v81 = (uint64_t *)(v1 + OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_headline);
  sub_2367BB188();
  uint64_t v82 = v81[1];
  unint64_t v260 = v80;
  if (v82)
  {
    uint64_t v3 = *v81;
    swift_retain();
    swift_bridgeObjectRetain();
    unint64_t v83 = v80;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_236906594();
      sub_236810328();
      BOOL v84 = (void *)sub_236899690();
      uint64_t v85 = sub_2369065F0(v84);
      sub_236906524((uint64_t)v85);
    }
    uint64_t v86 = *(void *)(a1 + v80);
    sub_2367BB248();
    *(void *)(v86 + 16) = v3;
    *(void *)(v86 + 24) = v82;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    unint64_t v83 = v80;
  }
  uint64_t v87 = v257;
  uint64_t v88 = v4 + OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_subHeadline;
  sub_2367BB188();
  uint64_t v89 = *(void *)(v88 + 8);
  if (v89)
  {
    sub_236906648();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_236906594();
      sub_236810328();
      BOOL v90 = (void *)sub_236899690();
      uint64_t v91 = sub_2369065F0(v90);
      sub_236906524((uint64_t)v91);
    }
    uint64_t v92 = *(void *)(a1 + v83);
    sub_2367BB248();
    *(void *)(v92 + 32) = v3;
    *(void *)(v92 + 40) = v89;
    swift_bridgeObjectRelease();
  }
  uint64_t v93 = v4 + OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_version;
  sub_2367BB188();
  uint64_t v94 = *(void *)(v93 + 8);
  if (v94)
  {
    sub_236906648();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_236906594();
      sub_236810328();
      uint64_t v95 = (void *)sub_236899690();
      BOOL v96 = sub_2369065F0(v95);
      sub_236906524((uint64_t)v96);
    }
    uint64_t v97 = *(void *)(a1 + v83);
    sub_2367BB248();
    *(void *)(v97 + 48) = v3;
    *(void *)(v97 + 56) = v94;
    swift_bridgeObjectRelease();
  }
  uint64_t v98 = v4 + OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_creator;
  sub_2367BB188();
  uint64_t v99 = *(void *)(v98 + 8);
  if (v99)
  {
    sub_236906648();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_236906594();
      sub_236810328();
      BOOL v100 = (void *)sub_236899690();
      uint64_t v101 = sub_2369065F0(v100);
      sub_236906524((uint64_t)v101);
    }
    uint64_t v102 = *(void *)(a1 + v83);
    sub_2367BB248();
    *(void *)(v102 + 64) = v3;
    *(void *)(v102 + 72) = v99;
    swift_bridgeObjectRelease();
  }
  uint64_t v103 = v4 + OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_abstract;
  sub_2367BB188();
  uint64_t v104 = *(void *)(v103 + 8);
  if (v104)
  {
    sub_236906648();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_236906594();
      sub_236810328();
      uint64_t v105 = (void *)sub_236899690();
      BOOL v106 = sub_2369065F0(v105);
      sub_236906524((uint64_t)v106);
    }
    uint64_t v107 = *(void *)(a1 + v83);
    sub_2367BB248();
    *(void *)(v107 + 80) = v3;
    *(void *)(v107 + 88) = v104;
    swift_bridgeObjectRelease();
  }
  uint64_t v108 = v4 + OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_comment;
  sub_2367BB188();
  uint64_t v109 = *(void *)(v108 + 8);
  if (v109)
  {
    sub_236906648();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_236906594();
      sub_236810328();
      uint64_t v110 = (void *)sub_236899690();
      uint64_t v111 = sub_2369065F0(v110);
      sub_236906524((uint64_t)v111);
    }
    uint64_t v112 = *(void *)(a1 + v83);
    sub_2367BB248();
    *(void *)(v112 + 96) = v3;
    *(void *)(v112 + 104) = v109;
    swift_bridgeObjectRelease();
  }
  uint64_t v113 = v4 + OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_text;
  sub_2367BB188();
  uint64_t v114 = *(void *)(v113 + 8);
  if (v114)
  {
    sub_236906648();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_236906594();
      sub_236810328();
      uint64_t v115 = (void *)sub_236899690();
      uint64_t v116 = sub_2369065F0(v115);
      sub_236906524((uint64_t)v116);
    }
    uint64_t v117 = *(void *)(a1 + v83);
    sub_2367BB248();
    *(void *)(v117 + 112) = v3;
    *(void *)(v117 + 120) = v114;
    swift_bridgeObjectRelease();
  }
  uint64_t v118 = v4 + OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_inLanguage;
  sub_2367BB188();
  uint64_t v119 = *(void *)(v118 + 8);
  if (v119)
  {
    sub_236906648();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_236906594();
      sub_236810328();
      char v120 = (void *)sub_236899690();
      uint64_t v121 = sub_2369065F0(v120);
      sub_236906524((uint64_t)v121);
    }
    uint64_t v122 = *(void *)(a1 + v83);
    sub_2367BB248();
    *(void *)(v122 + 128) = v3;
    *(void *)(v122 + 136) = v119;
    swift_bridgeObjectRelease();
  }
  uint64_t v123 = (uint64_t *)(v4 + OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_keywords);
  sub_2367BB188();
  uint64_t v124 = *v123;
  if (*v123)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_236906594();
      sub_236810328();
      char v125 = (void *)sub_236899690();
      uint64_t v126 = sub_2369065F0(v125);
      sub_236906524((uint64_t)v126);
    }
    uint64_t v127 = *(void *)(a1 + v83);
    sub_2367BB248();
    *(void *)(v127 + 144) = v124;
    swift_bridgeObjectRelease();
  }
  uint64_t v128 = v4 + OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_identifier;
  sub_2367BB188();
  uint64_t v129 = *(void *)(v128 + 8);
  if (v129)
  {
    sub_236906648();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_236906594();
      sub_236810328();
      char v130 = (void *)sub_236899690();
      uint64_t v131 = sub_2369065F0(v130);
      sub_236906524((uint64_t)v131);
    }
    uint64_t v132 = *(void *)(a1 + v83);
    sub_2367BB248();
    *(void *)(v132 + 152) = v3;
    *(void *)(v132 + 160) = v129;
    swift_bridgeObjectRelease();
  }
  uint64_t v133 = v4 + OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_url;
  sub_2367BB188();
  uint64_t v134 = v243;
  sub_23680A59C(v133, v243, &qword_26AD89538);
  sub_2368100B8(v134, 1, v87);
  uint64_t v256 = a1;
  if (v135)
  {
    sub_2367BAA28(v134, &qword_26AD89538);
  }
  else
  {
    sub_236906608();
    v136();
    uint64_t v129 = sub_23697A12C();
    uint64_t v138 = v137;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_236906594();
      sub_236810328();
      uint64_t v140 = (void *)sub_23690671C();
      uint64_t v141 = sub_236906700(v140);
      sub_236906524((uint64_t)v141);
    }
    uint64_t v142 = *(void *)(a1 + v83);
    sub_2367BB248();
    *(void *)(v142 + 168) = v129;
    *(void *)(v142 + 176) = v138;
    swift_bridgeObjectRelease();
    uint64_t v87 = v257;
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v244, v257);
  }
  uint64_t v143 = v4 + OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_thumbnailUrl;
  sub_2367BB188();
  uint64_t v144 = v245;
  sub_23680A59C(v143, v245, &qword_26AD89538);
  sub_2368100B8(v144, 1, v87);
  if (v135)
  {
    sub_2367BAA28(v144, &qword_26AD89538);
  }
  else
  {
    sub_236906608();
    v145();
    sub_23697A12C();
    char v146 = sub_2369067D0();
    if ((v146 & 1) == 0)
    {
      type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document._StorageClass(0);
      sub_236810328();
      os_log_type_t v147 = (void *)sub_23690671C();
      *(void *)(a1 + v87) = sub_236906700(v147);
      swift_release();
    }
    uint64_t v148 = *(void *)(a1 + v87);
    sub_2367BB248();
    *(void *)(v148 + 184) = v129;
    *(void *)(v148 + 192) = v83;
    swift_bridgeObjectRelease();
    uint64_t v87 = v257;
    (*(void (**)(char *, uint64_t))(v66 + 8))(v246, v257);
  }
  unint64_t v149 = v247;
  sub_2367BB188();
  uint64_t v150 = sub_236906888();
  sub_23680A59C(v150, v151, v152);
  sub_2368100B8(v149, 1, v87);
  if (v135)
  {
    sub_2367BAA28(v149, &qword_26AD89538);
  }
  else
  {
    sub_236906608();
    v153();
    sub_23697A12C();
    char v154 = sub_2369067D0();
    if ((v154 & 1) == 0)
    {
      type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document._StorageClass(0);
      sub_236810328();
      id v155 = (void *)sub_23690671C();
      *(void *)(a1 + v87) = sub_236906700(v155);
      swift_release();
    }
    uint64_t v156 = *(void *)(a1 + v87);
    sub_2367BB248();
    *(void *)(v156 + 200) = v129;
    *(void *)(v156 + 208) = v83;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v248, v257);
  }
  uint64_t v157 = v4 + OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_dateCreated;
  sub_2367BB188();
  uint64_t v158 = v157;
  uint64_t v159 = v249;
  sub_23680A59C(v158, v249, (uint64_t *)&off_26AD89548);
  uint64_t v160 = sub_236906794();
  uint64_t v161 = v254;
  sub_2368100B8(v160, v162, v254);
  uint64_t v163 = v253;
  uint64_t v164 = v251;
  if (v135)
  {
    sub_2367BAA28(v159, (uint64_t *)&off_26AD89548);
    unint64_t v149 = v260;
  }
  else
  {
    sub_236906608();
    v165();
    sub_23697A27C();
    uint64_t v167 = v166;
    char v168 = sub_2369067B8();
    if ((v168 & 1) == 0)
    {
      sub_2369066E8();
      sub_236810328();
      uint64_t v169 = (void *)swift_retain();
      uint64_t v170 = sub_2368DF084(v169);
      sub_236906614((uint64_t)v170);
    }
    uint64_t v171 = *(void *)(a1 + v149);
    sub_2367BB248();
    *(void *)(v171 + 216) = v167;
    (*(void (**)(uint64_t, uint64_t))(v163 + 8))(v250, v161);
  }
  uint64_t v172 = v4 + OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_dateModified;
  sub_2367BB188();
  sub_23680A59C(v172, v164, (uint64_t *)&off_26AD89548);
  sub_2368100B8(v164, 1, v161);
  if (v135)
  {
    sub_2367BAA28(v164, (uint64_t *)&off_26AD89548);
  }
  else
  {
    sub_236906608();
    v173();
    sub_23697A27C();
    uint64_t v175 = v174;
    char v176 = swift_isUniquelyReferenced_nonNull_native();
    if ((v176 & 1) == 0)
    {
      sub_2369066E8();
      sub_236810328();
      uint64_t v177 = (void *)swift_retain();
      uint64_t v178 = sub_2368DF084(v177);
      sub_236906614((uint64_t)v178);
    }
    uint64_t v179 = *(void *)(a1 + v149);
    sub_2367BB248();
    *(void *)(v179 + 224) = v175;
    (*(void (**)(uint64_t, uint64_t))(v163 + 8))(v252, v161);
  }
  uint64_t v180 = (unint64_t *)(v4 + OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_documentUIElements);
  sub_2367BB188();
  unint64_t v181 = *v180;
  if (*v180)
  {
    uint64_t v257 = v4;
    if (v181 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = sub_23697B7FC();
      uint64_t v182 = result;
      if (result) {
        goto LABEL_77;
      }
    }
    else
    {
      uint64_t v182 = *(void *)((v181 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (v182)
      {
LABEL_77:
        if (v182 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v184 = 0;
        unint64_t v149 = v181 & 0xC000000000000001;
        uint64_t v185 = MEMORY[0x263F8EE78];
        do
        {
          if (v149) {
            id v186 = (id)MEMORY[0x237E06BC0](v184, v181);
          }
          else {
            id v186 = *(id *)(v181 + 8 * v184 + 32);
          }
          long long v187 = v186;
          uint64_t v188 = v261;
          DUDocumentUIElement.protoRepresentation.getter(v261);
          sub_236906298(v188, v2, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentUIElement);
          uint64_t v189 = v263;
          sub_2367B7028(v2, 0, 1, v263);

          uint64_t v190 = sub_2369067AC();
          sub_2368100B8(v190, v191, v189);
          if (v135)
          {
            sub_2367BAA28(v2, qword_26AD89B80);
          }
          else
          {
            uint64_t v192 = v258;
            sub_236906298(v2, v258, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentUIElement);
            sub_236906298(v192, v262, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentUIElement);
            char v193 = swift_isUniquelyReferenced_nonNull_native();
            if ((v193 & 1) == 0) {
              uint64_t v185 = sub_2367D2D8C(0, *(void *)(v185 + 16) + 1, 1, v185);
            }
            unint64_t v195 = *(void *)(v185 + 16);
            unint64_t v194 = *(void *)(v185 + 24);
            if (v195 >= v194 >> 1) {
              uint64_t v185 = sub_2367D2D8C(v194 > 1, v195 + 1, 1, v185);
            }
            *(void *)(v185 + 16) = v195 + 1;
            sub_2367E512C();
            sub_236906298(v262, v185 + v196 + *(void *)(v197 + 72) * v195, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentUIElement);
          }
          ++v184;
        }
        while (v182 != v184);
        goto LABEL_94;
      }
    }
    uint64_t v185 = MEMORY[0x263F8EE78];
LABEL_94:
    swift_bridgeObjectRelease_n();
    a1 = v256;
    if ((sub_2369067B8() & 1) == 0)
    {
      sub_2369066E8();
      sub_236810328();
      uint64_t v198 = (void *)swift_retain();
      uint64_t v199 = sub_2368DF084(v198);
      sub_236906614((uint64_t)v199);
    }
    uint64_t v200 = *(void *)(a1 + v149);
    sub_2367BB248();
    *(void *)(v200 + 232) = v185;
    swift_bridgeObjectRelease();
    uint64_t v4 = v257;
  }
  uint64_t v201 = (id *)(v4 + OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_documentHTMLData);
  sub_2367BB188();
  if (!*v201)
  {
    uint64_t v203 = v240;
    sub_2367B7028(v240, 1, 1, v255);
    uint64_t v208 = v242;
    goto LABEL_103;
  }
  id v202 = *v201;
  DUDocumentHTMLData.protoRepresentation.getter(v238);

  uint64_t v203 = v240;
  sub_23688CC04();
  uint64_t v204 = v255;
  int v205 = swift_dynamicCast();
  sub_2369065AC(v203, v205 ^ 1u);
  uint64_t v206 = sub_236906794();
  sub_2368100B8(v206, v207, v204);
  uint64_t v208 = v242;
  if (v135)
  {
LABEL_103:
    sub_2367BAA28(v203, &qword_26AD89A08);
    goto LABEL_104;
  }
  uint64_t v209 = v231;
  sub_236906298(v203, v231, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentHTMLData);
  sub_2369064D0(v209, v235, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentHTMLData);
  if ((sub_2369067B8() & 1) == 0)
  {
    sub_2369066E8();
    sub_236810328();
    uint64_t v210 = (void *)swift_retain();
    uint64_t v211 = sub_2368DF084(v210);
    sub_236906614((uint64_t)v211);
  }
  uint64_t v212 = *(void *)(a1 + v149);
  uint64_t v213 = v230;
  sub_236906298(v235, v230, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentHTMLData);
  sub_2369065AC(v213, 0);
  uint64_t v214 = v213;
  unint64_t v149 = v232;
  sub_23680FDE0(v214, v232, &qword_26AD89A08);
  uint64_t v215 = v212
       + OBJC_IVAR____TtCV21DocumentUnderstanding53DocumentUnderstanding_DocumentRepresentation_DocumentP33_B25D73F1E23932B4C52C7495EED50DAA13_StorageClass__documentHtmldata;
  sub_2367C0104();
  swift_retain();
  sub_23680FE24(v149, v215, &qword_26AD89A08);
  swift_endAccess();
  swift_release();
  sub_236906240(v209, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentHTMLData);
LABEL_104:
  uint64_t v216 = (id *)(v4 + OBJC_IVAR____TtC21DocumentUnderstanding13DURawDocument_documentMessageData);
  sub_2367BB188();
  if (!*v216)
  {
    uint64_t v218 = v241;
    sub_2367B7028(v241, 1, 1, v208);
    return sub_2367BAA28(v218, &qword_26AD89960);
  }
  id v217 = *v216;
  DUDocumentMessageData.protoRepresentation.getter();

  uint64_t v218 = v241;
  sub_23688CC04();
  int v219 = swift_dynamicCast();
  sub_2367B7028(v218, v219 ^ 1u, 1, v208);
  uint64_t v220 = sub_236906794();
  sub_2368100B8(v220, v221, v208);
  if (v135) {
    return sub_2367BAA28(v218, &qword_26AD89960);
  }
  uint64_t v222 = v218;
  uint64_t v223 = v237;
  sub_236906298(v222, v237, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentMessageData);
  sub_2369064D0(v223, v236, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentMessageData);
  if ((sub_2369067B8() & 1) == 0)
  {
    sub_2369066E8();
    sub_236810328();
    uint64_t v224 = (void *)swift_retain();
    uint64_t v225 = sub_2368DF084(v224);
    sub_236906614((uint64_t)v225);
  }
  uint64_t v226 = *(void *)(a1 + v149);
  uint64_t v227 = v233;
  sub_236906298(v236, v233, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentMessageData);
  sub_2367B7028(v227, 0, 1, v208);
  uint64_t v228 = v234;
  sub_23680FDE0(v227, v234, &qword_26AD89960);
  uint64_t v229 = v226
       + OBJC_IVAR____TtCV21DocumentUnderstanding53DocumentUnderstanding_DocumentRepresentation_DocumentP33_B25D73F1E23932B4C52C7495EED50DAA13_StorageClass__documentMessageData;
  sub_2367C0104();
  swift_retain();
  sub_23680FE24(v228, v229, &qword_26AD89960);
  swift_endAccess();
  swift_release();
  return sub_236906240(v237, (void (*)(void))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_DocumentMessageData);
}

id DURawDocument.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DURawDocument();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2369061AC@<X0>(uint64_t a1@<X8>)
{
  return DURawDocument.protoRepresentation.getter(a1);
}

char *sub_2369061D0@<X0>(uint64_t a1@<X0>, char **a2@<X8>)
{
  uint64_t result = sub_236900B08(a1);
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for DURawDocument()
{
  uint64_t result = qword_26AD89558;
  if (!qword_26AD89558) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_236906240(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_2367BB1EC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_236906298(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_2367BB1EC();
  uint64_t v4 = sub_2368109B8();
  v5(v4);
  return a2;
}

uint64_t sub_2369062EC(uint64_t a1)
{
  return MEMORY[0x270FA03F0](a1, &opaque type descriptor for <<opaque return type of DURawDocument.protoRepresentation>>, 1);
}

uint64_t sub_236906308()
{
  return type metadata accessor for DURawDocument();
}

void sub_236906310()
{
  sub_23683348C(319, (unint64_t *)&qword_26AD89540, MEMORY[0x263F06EA8]);
  if (v0 <= 0x3F)
  {
    sub_23683348C(319, (unint64_t *)&qword_26AD89550, MEMORY[0x263F07490]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_236906440()
{
  return sub_236906488((unint64_t *)&qword_268899BC8, (void (*)(uint64_t))type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document);
}

uint64_t sub_236906488(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2369064D0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_2367BB1EC();
  uint64_t v4 = sub_2368109A4();
  v5(v4);
  return a2;
}

uint64_t sub_236906524(uint64_t a1)
{
  *(void *)(v1 + v2) = a1;
  return swift_release();
}

uint64_t sub_236906540()
{
  return sub_23697B95C();
}

uint64_t sub_23690655C()
{
  *uint64_t v2 = v1;
  v2[1] = v0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_236906578()
{
  *uint64_t v1 = v2;
  v1[1] = v0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_236906594()
{
  return type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document._StorageClass(0);
}

uint64_t sub_2369065AC(uint64_t a1, uint64_t a2)
{
  return sub_2367B7028(a1, a2, 1, v2);
}

uint64_t sub_2369065C4()
{
  return sub_23680A59C(v2, v1, v0);
}

void *sub_2369065F0(void *a1)
{
  return sub_2368DF084(a1);
}

uint64_t sub_236906614(uint64_t a1)
{
  *(void *)(v2 + v1) = a1;
  return swift_release();
}

uint64_t sub_236906648()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_236906688()
{
  return v0;
}

void sub_236906694(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 40) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_2369066B0(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 56) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_2369066CC()
{
  return sub_23680A59C(v2, v0, v1);
}

uint64_t sub_2369066E8()
{
  return type metadata accessor for DocumentUnderstanding_DocumentRepresentation_Document._StorageClass(0);
}

void *sub_236906700(void *a1)
{
  return sub_2368DF084(a1);
}

uint64_t sub_23690671C()
{
  return swift_retain();
}

uint64_t sub_236906738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 + 104) = (char *)&a9 - v9;
  return sub_23697A1CC();
}

uint64_t sub_23690675C()
{
  return sub_23697A19C();
}

uint64_t sub_236906778()
{
  return sub_23697A19C();
}

uint64_t sub_236906794()
{
  return v0;
}

uint64_t sub_2369067A0()
{
  return v0;
}

uint64_t sub_2369067AC()
{
  return v0;
}

uint64_t sub_2369067B8()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_2369067D0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_2369067F0()
{
  return sub_23697AF0C();
}

uint64_t sub_236906810()
{
  return sub_23697AF0C();
}

uint64_t sub_236906830()
{
  return sub_2367B7028(v1, 0, 1, v0);
}

uint64_t sub_236906850(uint64_t a1)
{
  return sub_23680A59C(a1, v2, v1);
}

uint64_t sub_236906868(uint64_t a1)
{
  return sub_2367B7028(v1, 1, 1, a1);
}

uint64_t sub_236906888()
{
  return v0;
}

uint64_t sub_236906894(uint64_t a1)
{
  uint64_t result = sub_23690E8FC(a1);
  if (v4) {
    goto LABEL_7;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  else {
    return sub_23690E880(result, v3, 0, a1);
  }
}

uint64_t sub_2369068FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = sub_23697A0AC();
  uint64_t v6 = v5;
  if (v4)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1+ ((*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80)), v5);
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 1;
  }
  return sub_2367B7028(a2, v7, 1, v6);
}

void sub_2369069A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1;
    uint64_t v18 = MEMORY[0x263F8EE78];
    sub_2368C6BE4();
    uint64_t v3 = sub_2367FABC0(v2);
    if ((v3 & 0x8000000000000000) == 0)
    {
      unint64_t v5 = v3;
      if (v3 < 1 << *(unsigned char *)(v2 + 32))
      {
        int v6 = v4;
        uint64_t v7 = v2 + 64;
        uint64_t v15 = v2 + 64;
        while ((*(void *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v6 != *(_DWORD *)(v2 + 36)) {
            goto LABEL_18;
          }
          uint64_t v8 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v5);
          uint64_t v9 = v8[1];
          uint64_t v16 = v1;
          uint64_t v17 = *v8;
          uint64_t v10 = v2;
          unint64_t v12 = *(void *)(v18 + 16);
          unint64_t v11 = *(void *)(v18 + 24);
          swift_bridgeObjectRetain();
          if (v12 >= v11 >> 1) {
            sub_2368C6BE4();
          }
          *(void *)(v18 + 16) = v12 + 1;
          uint64_t v13 = v18 + 16 * v12;
          *(void *)(v13 + 32) = v17;
          *(void *)(v13 + 40) = v9;
          if ((uint64_t)v5 >= -(-1 << *(unsigned char *)(v10 + 32))) {
            goto LABEL_19;
          }
          uint64_t v7 = v15;
          if ((*(void *)(v15 + 8 * (v5 >> 6)) & (1 << v5)) == 0) {
            goto LABEL_20;
          }
          uint64_t v2 = v10;
          if (v6 != *(_DWORD *)(v10 + 36)) {
            goto LABEL_21;
          }
          uint64_t v14 = sub_23697B60C();
          uint64_t v1 = v16 - 1;
          if (v16 == 1) {
            return;
          }
          unint64_t v5 = v14;
          if ((v14 & 0x8000000000000000) == 0)
          {
            int v6 = *(_DWORD *)(v2 + 36);
            if (v14 < 1 << *(unsigned char *)(v2 + 32)) {
              continue;
            }
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t sub_236906B68(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_23697B95C();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_23697B95C() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_236906C30(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_236906C3C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  int v6 = *(void **)(v3 + 16);
  if (!v6)
  {
    if (qword_26AD89488 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_23697AD0C();
    int v6 = (void *)sub_23690EC08(v15, (uint64_t)qword_26AD8C290);
    os_log_type_t v16 = sub_23697B36C();
    if (sub_23681BB08(v16))
    {
      uint64_t v17 = (_WORD *)sub_2367CAB80();
      sub_2367CAE20(v17);
      sub_2367D9994(&dword_2367AD000, v18, v19, "Unable to load engine configuration");
      sub_2367CAAA0();
    }
    goto LABEL_35;
  }
  uint64_t v7 = a3;
  BOOL v10 = a2 == 0x7461767265736572 && a3 == 0xED000064496E6F69;
  if (v10 || (sub_23681077C(), (sub_23690EB94() & 1) != 0))
  {
    id v11 = v6;
    sub_23690EE9C();
    sub_23690EB80();
    uint64_t v12 = 0xD00000000000001ALL;
    unint64_t v13 = 0xE400000000000000;
    char v14 = 1;
    uint64_t v7 = 1701998435;
    goto LABEL_25;
  }
  BOOL v20 = a2 == 0x7461767265736572 && v7 == 0xEF656D614E6E6F69;
  if (v20 || (sub_23681077C(), (sub_23690EB94() & 1) != 0))
  {
    sub_23690ECF4();
    char v14 = 0;
    sub_23690EE9C();
    sub_23690EB80();
    unint64_t v13 = 0xE500000000000000;
LABEL_18:
    uint64_t v12 = 0xD000000000000011;
    goto LABEL_25;
  }
  if (a2 == 0xD000000000000013 && v7 == 0x8000000236990E80 || (sub_23690EB94() & 1) != 0)
  {
    sub_23690ECF4();
    sub_23690EE9C();
    sub_23690EB80();
    uint64_t v12 = 0xD00000000000001CLL;
LABEL_23:
    unint64_t v13 = 0xE500000000000000;
LABEL_24:
    char v14 = 1;
    goto LABEL_25;
  }
  BOOL v50 = a2 == 0x6D614E7473657567 && v7 == 0xE900000000000065;
  if (v50 || (sub_23690EB94() & 1) != 0)
  {
    sub_23690ECF4();
    char v14 = 0;
    unint64_t v4 = 0x80000002369994B0;
    unint64_t v13 = 0xE500000000000000;
    BOOL v5 = 1;
    goto LABEL_18;
  }
  BOOL v52 = a2 == 0x6369546569766F6DLL && v7 == 0xEF656D614E74656BLL;
  if (v52 || (sub_23690EB94() & 1) != 0)
  {
    sub_23690ECF4();
    sub_23690EE9C();
    sub_23690EB80();
    uint64_t v12 = 0xD000000000000018;
    goto LABEL_23;
  }
  uint64_t v55 = a2;
  uint64_t v56 = v7;
  sub_2367CA700();
  id v53 = v6;
  unint64_t v4 = 0xE000000000000000;
  BOOL v5 = 0x80000002369994B0 == 0xE000000000000000;
  if (sub_23697B5BC())
  {
    uint64_t v55 = a2;
    uint64_t v56 = v7;
    char v54 = sub_23697B5BC();
    if (v54) {
      uint64_t v12 = 0xD000000000000019;
    }
    else {
      uint64_t v12 = 0xD00000000000001BLL;
    }
    if (v54) {
      BOOL v5 = 0x80000002369994F0 == 0x80000002369994B0;
    }
    else {
      BOOL v5 = 0x80000002369994D0 == 0x80000002369994B0;
    }
    if (v54) {
      unint64_t v4 = 0x80000002369994F0;
    }
    else {
      unint64_t v4 = 0x80000002369994D0;
    }
    unint64_t v13 = 0xE800000000000000;
    uint64_t v7 = 0x6E6F697461636F6CLL;
    goto LABEL_24;
  }
  uint64_t v12 = 0;
  uint64_t v7 = 0;
  char v14 = 1;
  unint64_t v13 = 0xE000000000000000;
LABEL_25:
  uint64_t v21 = a1[4];
  swift_bridgeObjectRetain();
  uint64_t v22 = (void *)sub_2367D7558(v7, v13, v21);
  swift_bridgeObjectRelease();
  if (!v22)
  {
    swift_bridgeObjectRelease();
    if (qword_26AD89488 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_23697AD0C();
    sub_2367BA98C(v31, (uint64_t)qword_26AD8C290);
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_23697ACDC();
    os_log_type_t v33 = sub_23697B36C();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (_DWORD *)sub_2367CAEA0();
      uint64_t v55 = sub_236856D80();
      *uint64_t v34 = 136315138;
      swift_bridgeObjectRetain();
      sub_2367D90DC(v7, v13, &v55);
      sub_23697B50C();
      swift_bridgeObjectRelease_n();
      sub_23690EF2C(&dword_2367AD000, v32, v33, "DUFoundInEventsPostprocessing: Model Output not found for %s!");
      swift_arrayDestroy();
      sub_2367CAAA0();
      sub_2367CAAA0();

      return 0;
    }

    swift_bridgeObjectRelease_n();
LABEL_35:

    return 0;
  }
  swift_bridgeObjectRelease();
  uint64_t v23 = sub_23690EE08();
  if ((sub_236906B68(v23, v24, v22) & 1) == 0)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v25 = a1[7];
  id v26 = v6;
  uint64_t v27 = (void *)sub_236908078((uint64_t)v22, v12, v4, v6);

  swift_bridgeObjectRelease();
  uint64_t v28 = sub_23690ACA8(v25, v27, *a1, a1[1]);
  sub_23690B428(v28);
  if (!v29)
  {
    if (v14 & 1 | !v5 && (sub_23690EE08(), (sub_23697B95C() & 1) == 0))
    {
      if (qword_26AD89488 != -1) {
        swift_once();
      }
      uint64_t v41 = sub_23697AD0C();
      sub_2367BA98C(v41, (uint64_t)qword_26AD8C290);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_23697ACDC();
      os_log_type_t v42 = sub_23697B36C();
      if (os_log_type_enabled(v36, v42))
      {
        uint64_t v43 = swift_slowAlloc();
        uint64_t v55 = swift_slowAlloc();
        *(_DWORD *)uint64_t v43 = 136315394;
        swift_bridgeObjectRetain();
        sub_2367D90DC(v12, v4, &v55);
        sub_23690EC78();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v43 + 12) = 2080;
        uint64_t v44 = swift_bridgeObjectRetain();
        uint64_t v45 = MEMORY[0x237E066C0](v44, MEMORY[0x263F8D310]);
        unint64_t v47 = v46;
        swift_bridgeObjectRelease();
        sub_2367D90DC(v45, v47, &v55);
        sub_23697B50C();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        sub_23684EAA0(&dword_2367AD000, v48, v49, "DUFoundInEventsPostprocessing: Could not resolve a final candidate for %s from %s");
        swift_arrayDestroy();
        sub_2367CAAA0();
        sub_2367CAAA0();

        return 0;
      }
    }
    else
    {
      if (qword_26AD89488 != -1) {
        swift_once();
      }
      uint64_t v35 = sub_23697AD0C();
      sub_2367BA98C(v35, (uint64_t)qword_26AD8C290);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_23697ACDC();
      os_log_type_t v37 = sub_23697B36C();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = swift_slowAlloc();
        uint64_t v55 = sub_236856D80();
        *(_DWORD *)uint64_t v38 = 136315394;
        swift_bridgeObjectRetain();
        sub_2367D90DC(v12, v4, &v55);
        sub_23690EC78();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v38 + 12) = 2048;
        swift_bridgeObjectRelease();
        sub_23697B50C();
        swift_bridgeObjectRelease();
        sub_23684EAA0(&dword_2367AD000, v39, v40, "DUFoundInEventsPostprocessing: Could not resolve a final candidate for %s in %ld candidates");
        swift_arrayDestroy();
        sub_2367CAAA0();
        sub_2367CAAA0();

        return 0;
      }
    }

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_23690B610();

  swift_bridgeObjectRelease();
  return v30;
}

#error "2369076A0: call analysis failed (funcsize=169)"

void sub_2369078AC()
{
  sub_2367CAE08();
  char v2 = v1;
  unint64_t v4 = v3;
  uint64_t v5 = sub_23697A0AC();
  sub_2367CAA54();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_2367D6170();
  id v11 = (char *)(v9 - v10);
  MEMORY[0x270FA5388](v12);
  char v14 = (char *)&v76 - v13;
  uint64_t v15 = sub_2367B7DBC(&qword_26AD89410);
  uint64_t v16 = sub_2367BB430(v15);
  MEMORY[0x270FA5388](v16);
  sub_2367D6170();
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v81 = (uint64_t)&v76 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v76 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  id v26 = (char *)&v76 - v25;
  MEMORY[0x270FA5388](v24);
  sub_2367E5460();
  uint64_t v82 = v29;
  uint64_t v30 = *(void **)(v0 + 16);
  if (v30)
  {
    uint64_t v77 = v7;
    uint64_t v78 = v28;
    uint64_t v79 = v27;
    uint64_t v80 = v5;
    if (v2) {
      uint64_t v31 = 0xD00000000000001ALL;
    }
    else {
      uint64_t v31 = 0xD000000000000018;
    }
    if (v2) {
      uint64_t v32 = 0x8000000236999450;
    }
    else {
      uint64_t v32 = 0x8000000236999430;
    }
    uint64_t v33 = v4[4];
    id v83 = v30;
    uint64_t v34 = (void *)sub_2367D7558(1701669236, 0xE400000000000000, v33);
    if (v34)
    {
      uint64_t v35 = (uint64_t)v34;
      if ((sub_236906B68(v31, v32, v34) & 1) == 0)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_45;
      }
      uint64_t v76 = v4[7];
      id v36 = v83;
      os_log_type_t v37 = v30;
      id v38 = v36;
      uint64_t v39 = (void *)sub_236908078(v35, v31, v32, v37);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v40 = sub_2369093B0(v76, v39, v4[2], v2 & 1);
      uint64_t v41 = v82;
      uint64_t v42 = v80;
      sub_2367B7028(v82, 1, 1, v80);
      uint64_t v43 = *(void *)(v40 + 16);
      if (v43)
      {
        if (v43 == 1)
        {
          sub_2369068FC(v40, (uint64_t)v26);
          swift_bridgeObjectRelease();
          sub_23690ECA4((uint64_t)v26);
          if (v44)
          {
            sub_2367CA5E4((uint64_t)v26, &qword_26AD89410);
            goto LABEL_35;
          }
          uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v77 + 32);
          v67(v14, v26, v42);
          sub_2367CA5E4(v41, &qword_26AD89410);
          v67((char *)v41, v14, v42);
        }
        else
        {
          sub_236908CD0();
          sub_23690ECA4((uint64_t)v23);
          if (v44)
          {
            sub_2367CA5E4((uint64_t)v23, &qword_26AD89410);
            if (qword_26AD89488 != -1) {
              swift_once();
            }
            uint64_t v56 = sub_23697AD0C();
            sub_2367BA98C(v56, (uint64_t)qword_26AD8C290);
            swift_bridgeObjectRetain();
            uint64_t v57 = sub_23697ACDC();
            os_log_type_t v58 = sub_23697B36C();
            if (os_log_type_enabled(v57, v58))
            {
              uint64_t v59 = (_DWORD *)sub_2367CAEA0();
              uint64_t v84 = sub_236856D80();
              *uint64_t v59 = 136315138;
              id v83 = v59 + 1;
              uint64_t v60 = swift_bridgeObjectRetain();
              id v61 = v38;
              uint64_t v62 = MEMORY[0x237E066C0](v60, v80);
              unint64_t v64 = v63;
              swift_bridgeObjectRelease();
              uint64_t v65 = v62;
              id v38 = v61;
              uint64_t v66 = sub_2367D90DC(v65, v64, &v84);
              sub_2367D996C(v66);
              uint64_t v41 = v82;
              uint64_t v42 = v80;
              sub_23697B50C();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              sub_23690EF2C(&dword_2367AD000, v57, v58, "Could not resolve a final candidate from %s");
              swift_arrayDestroy();
              sub_2367CAAA0();
              sub_2367CAAA0();
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            goto LABEL_35;
          }
          swift_bridgeObjectRelease();
          uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v77 + 32);
          v68(v11, v23, v42);
          sub_2367CA5E4(v41, &qword_26AD89410);
          v68((char *)v41, v11, v42);
        }
        sub_23690ED98(v41, 0);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
LABEL_35:
      uint64_t v69 = v78;
      sub_23690E9D0(v41, v78);
      int v70 = sub_2367B85F8(v69, 1, v42);
      sub_2367CA5E4(v69, &qword_26AD89410);
      if (v70 == 1
        || sub_23690EE24()
        || (sub_236979FFC(), (v71 & 1) != 0)
        || sub_23690EE24()
        || (sub_23697A02C(), (v72 & 1) != 0)
        || sub_23690EE24()
        || (sub_23697A01C(), (v73 & 1) != 0))
      {
        uint64_t v74 = v81;
        sub_23690ED98(v81, 1);
      }
      else
      {
        uint64_t v74 = v81;
        sub_23690E9D0(v41, v81);
      }
      sub_236805FFC(v74, v41);
      uint64_t v75 = v79;
      sub_23690E9D0(v41, v79);
      sub_23690831C();
      sub_2367CA5E4(v75, &qword_26AD89410);

      sub_2367CA5E4(v41, &qword_26AD89410);
      goto LABEL_45;
    }
    swift_bridgeObjectRelease();
    if (qword_26AD89488 != -1) {
      swift_once();
    }
    uint64_t v51 = sub_23697AD0C();
    BOOL v52 = sub_23690EC08(v51, (uint64_t)qword_26AD8C290);
    os_log_type_t v53 = sub_23697B36C();
    if (sub_23681BB08(v53))
    {
      char v54 = (_DWORD *)sub_2367CAEA0();
      uint64_t v84 = sub_236856D80();
      *char v54 = 136315138;
      uint64_t v55 = sub_2367D90DC(1701669236, 0xE400000000000000, &v84);
      sub_2367D996C(v55);
      sub_23697B50C();
      sub_23690EF2C(&dword_2367AD000, v52, (os_log_type_t)v32, "Model Output not found for %s!");
      swift_arrayDestroy();
      sub_2367CAAA0();
      sub_2367CAAA0();
    }
    else
    {
    }
  }
  else
  {
    if (qword_26AD89488 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_23697AD0C();
    unint64_t v46 = (void *)sub_23690EC08(v45, (uint64_t)qword_26AD8C290);
    os_log_type_t v47 = sub_23697B36C();
    if (sub_23681BB08(v47))
    {
      uint64_t v48 = (_WORD *)sub_2367CAB80();
      sub_2367CAE20(v48);
      sub_2367D9994(&dword_2367AD000, v49, v50, "Unable to load engine configuration");
      sub_2367CAAA0();
    }
  }
LABEL_45:
  sub_2367CAD58();
}

uint64_t sub_236908078(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  *(void *)&long long v22 = a2;
  *((void *)&v22 + 1) = a3;
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F089C8]), sel_init);
  if (a4)
  {
    *(void *)&v23[0] = 0xD00000000000001ELL;
    *((void *)&v23[0] + 1) = 0x8000000236999410;
    id v7 = objc_msgSend(a4, sel___swift_objectForKeyedSubscript_, sub_23697B98C());
    swift_unknownObjectRelease();
    if (v7)
    {
      sub_23697B5DC();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v23, 0, sizeof(v23));
    }
    sub_23690EA7C((uint64_t)v23, (uint64_t)&v24);
    if (*((void *)&v25 + 1))
    {
      sub_2367B7DBC(&qword_268898468);
      if (swift_dynamicCast())
      {
        uint64_t v8 = *(void *)&v23[0];
        swift_bridgeObjectRetain();
        uint64_t v9 = sub_2367D75A0(v22, *((uint64_t *)&v22 + 1), v8);
        char v11 = v10;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v11 & 1) == 0) {
          goto LABEL_12;
        }
      }
      goto LABEL_11;
    }
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  sub_2367CA5E4((uint64_t)&v24, (uint64_t *)&unk_26AD8BC30);
LABEL_11:
  uint64_t v9 = 0;
LABEL_12:
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return (uint64_t)v6;
  }
  BOOL v13 = __OFADD__(v9, 1);
  BOOL v21 = v13;
  swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  for (uint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
  {
    uint64_t v16 = *(i - 1);
    uint64_t v17 = *i;
    swift_bridgeObjectRetain();
    id v18 = objc_msgSend(v6, sel_lastIndex);
    *(void *)&long long v24 = v16;
    *((void *)&v24 + 1) = v17;
    v23[0] = v22;
    sub_2367CA700();
    LOBYTE(v16) = sub_23697B59C();
    swift_bridgeObjectRelease();
    if (v16) {
      break;
    }
LABEL_26:
    if (v12 == ++v14)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v6;
    }
  }
  if (v9 < 1 || (uint64_t result = sub_236979EBC(), v18 == (id)result))
  {
LABEL_25:
    objc_msgSend(v6, sel_addIndex_, v14);
    goto LABEL_26;
  }
  uint64_t v20 = v14 - (void)v18;
  if (!__OFSUB__(v14, v18))
  {
    if (v20 >= 2)
    {
      if (v21) {
        goto LABEL_30;
      }
      if (v9 + 1 >= (unint64_t)v20) {
        objc_msgSend(v6, sel_addIndexesInRange_, v18);
      }
    }
    goto LABEL_25;
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void sub_23690831C()
{
  sub_2367CAE08();
  uint64_t v5 = v4;
  uint64_t v6 = sub_2367B7DBC(&qword_26AD89430);
  uint64_t v7 = sub_2367BB430(v6);
  MEMORY[0x270FA5388](v7);
  sub_23690ECD4(v8, v71);
  MEMORY[0x270FA5388](v9);
  sub_2367E5460();
  uint64_t v74 = v10;
  sub_23697A3BC();
  sub_2367CAA54();
  uint64_t v77 = v12;
  uint64_t v78 = v11;
  MEMORY[0x270FA5388](v11);
  sub_2367D9940();
  uint64_t v13 = sub_2367B7DBC((uint64_t *)&off_26AD89548);
  uint64_t v14 = sub_2367BB430(v13);
  MEMORY[0x270FA5388](v14);
  sub_2368100D0();
  uint64_t v15 = sub_23697A2DC();
  sub_2367CAA54();
  uint64_t v75 = v16;
  MEMORY[0x270FA5388](v17);
  sub_2367E8A3C();
  uint64_t v18 = sub_2367B7DBC(&qword_26AD89410);
  uint64_t v19 = sub_2367BB430(v18);
  MEMORY[0x270FA5388](v19);
  sub_2368C9B94();
  sub_23697A0AC();
  sub_2367CAA54();
  uint64_t v21 = v20;
  MEMORY[0x270FA5388](v22);
  sub_2367D6170();
  uint64_t v25 = v23 - v24;
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v71 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v71 - v30;
  uint64_t v32 = v5;
  uint64_t v34 = v33;
  sub_23690E9D0(v32, v2);
  if (sub_2367B85F8(v2, 1, v34) == 1)
  {
    uint64_t v35 = &qword_26AD89410;
    uint64_t v36 = v2;
LABEL_5:
    sub_2367CA5E4(v36, v35);
    goto LABEL_6;
  }
  char v72 = v29;
  uint64_t v73 = v25;
  uint64_t v38 = v75;
  uint64_t v37 = v76;
  sub_236906608();
  v39();
  sub_23697A37C();
  sub_23697A35C();
  (*((void (**)(uint64_t, uint64_t))v77 + 1))(v0, v78);
  uint64_t v40 = v31;
  if (sub_2367B85F8(v1, 1, v15) == 1)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v31, v34);
    uint64_t v35 = (uint64_t *)&off_26AD89548;
    uint64_t v36 = v1;
    goto LABEL_5;
  }
  uint64_t v78 = v34;
  uint64_t v41 = v38;
  sub_236906608();
  v42();
  uint64_t v43 = v74;
  sub_23697A08C();
  uint64_t v44 = sub_23697A43C();
  int v45 = sub_2367B85F8(v43, 1, v44);
  sub_2367CA5E4(v43, &qword_26AD89430);
  if (v45 == 1)
  {
    id v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
    sub_23697A00C();
    char v48 = v47;
    uint64_t v49 = *(void (**)(char *))(v21 + 16);
    uint64_t v77 = v40;
    v49(v72);
    uint64_t v71 = v3;
    uint64_t v50 = v15;
    if (v48)
    {
      sub_23697A04C();
      int v51 = v56 & 1;
    }
    else
    {
      int v51 = 0;
    }
    uint64_t v57 = *(void (**)(void))(v21 + 8);
    uint64_t v58 = v78;
    sub_23690EE14();
    v57();
    ((void (*)(uint64_t, char *, uint64_t))v49)(v73, v77, v58);
    if (v51)
    {
      sub_23697A05C();
      char v60 = v59;
      sub_23690EE14();
      v57();
      uint64_t v61 = v50;
      uint64_t v62 = v71;
      if (v60)
      {
        uint64_t v63 = 0x2D4D4D2D79797979;
        uint64_t v64 = 0xEA00000000006464;
LABEL_20:
        sub_2367DE7C8(v63, v64, v46);
        uint64_t v69 = (void *)sub_23697A29C();
        id v70 = objc_msgSend(v46, sel_stringFromDate_, v69);

        sub_23697AF6C();
        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v62, v61);
        ((void (*)(char *, uint64_t))v57)(v77, v78);
        goto LABEL_6;
      }
    }
    else
    {
      sub_23690EE14();
      v57();
      uint64_t v61 = v50;
      uint64_t v62 = v71;
    }
    uint64_t v64 = 0x8000000236994490;
    uint64_t v63 = 0xD000000000000015;
    goto LABEL_20;
  }
  id v52 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F088C0]), sel_init);
  sub_23697A08C();
  int v53 = sub_2367B85F8(v37, 1, v44);
  char v54 = v40;
  if (v53 == 1)
  {
    uint64_t v55 = 0;
  }
  else
  {
    uint64_t v55 = (void *)sub_23697A40C();
    uint64_t v65 = sub_23690EE08();
    v66(v65);
  }
  objc_msgSend(v52, sel_setTimeZone_, v55);

  uint64_t v67 = (void *)sub_23697A29C();
  id v68 = objc_msgSend(v52, sel_stringFromDate_, v67);

  sub_23697AF6C();
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v3, v15);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v54, v78);
LABEL_6:
  sub_23688CC04();
  sub_2367CAD58();
}

void sub_2369088F0()
{
  sub_2367CAE08();
  uint64_t v3 = v2;
  sub_23697A3AC();
  sub_2367CAA54();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  sub_2368100D0();
  uint64_t v7 = sub_23697A0AC();
  sub_2367CAA54();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_2368C9B94();
  uint64_t v11 = sub_23697A03C();
  char v13 = v12;
  uint64_t v14 = sub_23697A03C();
  if (v13)
  {
    uint64_t v20 = sub_23690EB50();
    v21(v20);
    uint64_t v22 = sub_23690EB30();
    v23(v22);
  }
  else
  {
    uint64_t v15 = v14;
    uint64_t v16 = sub_23690EB50();
    v17(v16);
    uint64_t v18 = sub_23690EB30();
    v19(v18);
    if (v11 != v15) {
      sub_23697A03C();
    }
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v7);
  sub_2367CAD58();
}

void sub_236908A6C()
{
  sub_2367CAE08();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = sub_23697A0AC();
  sub_2367CAA54();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_2367CD7C4();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v9(v0, v2, v5);
  sub_23697A03C();
  if (v10) {
    goto LABEL_4;
  }
  sub_2369088F0();
  if (v11)
  {
    sub_23697A07C();
LABEL_4:
    v9(v4, v0, v5);
    uint64_t v12 = 0;
    goto LABEL_5;
  }
  if (qword_26AD89488 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_23697AD0C();
  uint64_t v14 = sub_23690EC08(v13, (uint64_t)qword_26AD8C290);
  os_log_type_t v15 = sub_23697B36C();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)sub_2367CAEA0();
    uint64_t v19 = sub_236856D80();
    *(_DWORD *)uint64_t v16 = 136315138;
    swift_beginAccess();
    uint64_t v17 = sub_236979FDC();
    sub_2367D90DC(v17, v18, &v19);
    sub_23697B50C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2367AD000, v14, v15, "Conflict detected when merging component into %s", v16, 0xCu);
    uint64_t v12 = 1;
    swift_arrayDestroy();
    sub_2367CAAA0();
    sub_2367CAAA0();
  }
  else
  {

    uint64_t v12 = 1;
  }
LABEL_5:
  sub_2367B7028(v4, v12, 1, v5);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0, v5);
  sub_2367CAD58();
}

void sub_236908CD0()
{
  sub_2367CAE08();
  uint64_t v69 = v3;
  uint64_t v70 = v2;
  uint64_t v4 = sub_23697A3AC();
  uint64_t v76 = *(void *)(v4 - 8);
  uint64_t v5 = v76;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2367B7DBC(&qword_26AD89410);
  uint64_t v9 = sub_2367BB430(v8);
  MEMORY[0x270FA5388](v9);
  sub_2367D6170();
  uint64_t v12 = v10 - v11;
  MEMORY[0x270FA5388](v13);
  sub_2367E5460();
  uint64_t v72 = v14;
  uint64_t v15 = sub_2367B7DBC(&qword_26AD89430);
  uint64_t v16 = sub_2367BB430(v15);
  MEMORY[0x270FA5388](v16);
  sub_2367D9940();
  uint64_t v17 = sub_2367B7DBC(&qword_26889A440);
  uint64_t v18 = sub_2367BB430(v17);
  MEMORY[0x270FA5388](v18);
  sub_2367E8A3C();
  uint64_t v19 = sub_23697A0AC();
  sub_2367CAA54();
  uint64_t v71 = v20;
  MEMORY[0x270FA5388](v21);
  sub_23690ECD4(v22, v64[0]);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)v64 - v24;
  uint64_t v26 = sub_23697A3BC();
  sub_2367B7028(v1, 1, 1, v26);
  uint64_t v27 = sub_23697A43C();
  sub_2367B7028(v0, 1, 1, v27);
  sub_23697A06C();
  sub_2367B7DBC(&qword_26AD89518);
  uint64_t v28 = *(void *)(v5 + 72);
  uint64_t v29 = v76;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_236987A20;
  uint64_t v30 = *(void (**)(void))(v29 + 104);
  sub_23690EB70();
  v30();
  sub_23690EB70();
  v30();
  sub_23690EB70();
  v30();
  sub_23690EB70();
  v30();
  sub_23690EB70();
  v30();
  uint64_t v77 = v28;
  uint64_t v78 = v4;
  sub_23690EB70();
  v30();
  sub_23690BC50();
  uint64_t v66 = *(void *)(v70 + 16);
  uint64_t v80 = v31;
  if (!v66)
  {
    swift_bridgeObjectRetain();
    uint64_t v40 = v72;
    goto LABEL_30;
  }
  uint64_t v32 = v71 + 16;
  id v68 = *(void (**)(void))(v71 + 16);
  uint64_t v33 = v70 + ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80));
  uint64_t v79 = (uint64_t *)(v71 + 32);
  uint64_t v34 = *(void *)(v71 + 72);
  uint64_t v73 = v31 + 56;
  uint64_t v35 = (void (**)(char *, unint64_t, uint64_t))(v76 + 16);
  uint64_t v36 = (void (**)(char *, uint64_t))(v76 + 8);
  uint64_t v37 = (void (**)(void))(v71 + 8);
  swift_bridgeObjectRetain();
  uint64_t v38 = v34;
  uint64_t v39 = 0;
  uint64_t v40 = v72;
  uint64_t v75 = v38;
  v64[0] = v33;
  v64[1] = v32;
  uint64_t v67 = v12;
LABEL_3:
  uint64_t v41 = v40;
  uint64_t v42 = v38;
  v68();
  sub_23690ED98(v41, 0);
  sub_23690ECA4(v41);
  uint64_t v43 = v71;
  if (!v44)
  {
    uint64_t v65 = v39 + 1;
    uint64_t v76 = *v79;
    sub_236906608();
    v45();
    uint64_t v46 = 1 << *(unsigned char *)(v80 + 32);
    if (v46 < 64) {
      uint64_t v47 = ~(-1 << v46);
    }
    else {
      uint64_t v47 = -1;
    }
    unint64_t v48 = v47 & *(void *)(v80 + 56);
    int64_t v74 = (unint64_t)(v46 + 63) >> 6;
    swift_bridgeObjectRetain();
    int64_t v49 = 0;
    uint64_t v50 = v67;
    if (v48)
    {
LABEL_8:
      unint64_t v51 = __clz(__rbit64(v48));
      v48 &= v48 - 1;
      unint64_t v52 = v51 | (v49 << 6);
      goto LABEL_23;
    }
    while (1)
    {
      int64_t v53 = v49 + 1;
      if (__OFADD__(v49, 1))
      {
        __break(1u);
LABEL_34:
        __break(1u);
        return;
      }
      if (v53 >= v74) {
        goto LABEL_26;
      }
      ++v49;
      if (!*(void *)(v73 + 8 * v53))
      {
        int64_t v49 = v53 + 1;
        if (v53 + 1 >= v74) {
          goto LABEL_26;
        }
        if (!*(void *)(v73 + 8 * v49))
        {
          int64_t v49 = v53 + 2;
          if (v53 + 2 >= v74) {
            goto LABEL_26;
          }
          if (!*(void *)(v73 + 8 * v49))
          {
            int64_t v54 = v53 + 3;
            if (v54 >= v74)
            {
LABEL_26:
              swift_release();
              sub_2368834E0();
              v61();
              uint64_t v39 = v65;
              uint64_t v40 = v72;
              uint64_t v38 = v42;
              if (v65 != v66) {
                goto LABEL_3;
              }
LABEL_30:
              sub_23690ED98(v40, 1);
              uint64_t v43 = v71;
              break;
            }
            if (!*(void *)(v73 + 8 * v54))
            {
              while (1)
              {
                int64_t v49 = v54 + 1;
                if (__OFADD__(v54, 1)) {
                  goto LABEL_34;
                }
                if (v49 >= v74) {
                  goto LABEL_26;
                }
                ++v54;
                if (*(void *)(v73 + 8 * v49)) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v49 = v54;
          }
        }
      }
LABEL_22:
      sub_2368B453C();
      unint64_t v48 = v56 & v55;
      unint64_t v52 = v57 + (v49 << 6);
LABEL_23:
      uint64_t v58 = v78;
      (*v35)(v7, *(void *)(v80 + 48) + v52 * v77, v78);
      sub_236908A6C();
      (*v36)(v7, v58);
      char v59 = *v37;
      sub_2368834E0();
      v59();
      sub_23690ECA4(v50);
      if (v44)
      {
        swift_bridgeObjectRelease();
        swift_release();
        sub_2368834E0();
        v59();
        swift_bridgeObjectRelease();
        sub_2367CA5E4(v50, &qword_26AD89410);
        uint64_t v62 = 1;
        uint64_t v63 = v69;
        goto LABEL_32;
      }
      sub_236906608();
      v60();
      uint64_t v42 = v75;
      if (v48) {
        goto LABEL_8;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v63 = v69;
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v69, v25, v19);
  uint64_t v62 = 0;
LABEL_32:
  sub_23690ED98(v63, v62);
  sub_2367CAD58();
}

uint64_t sub_2369093B0(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  uint64_t v14 = MEMORY[0x263F8EE78];
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a3;
  *(unsigned char *)(v8 + 32) = a4;
  *(void *)(v8 + 40) = &v14;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_23690E9BC;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_23690EAEC;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236909A14;
  aBlock[3] = &unk_26E9CD458;
  uint64_t v10 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(a2, sel_enumerateRangesUsingBlock_, v10);
  _Block_release(v10);
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (a2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = v14;
    swift_release();
    return v12;
  }
  return result;
}

NSUInteger sub_236909544(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t *a7)
{
  int64_t v54 = a7;
  LODWORD(v7) = a6;
  uint64_t v12 = sub_23697A0AC();
  uint64_t v56 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  char v60 = (char *)v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  char v59 = (char *)v51 - v15;
  uint64_t v16 = sub_2367B7DBC(&qword_26AD89410);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v58 = (uint64_t)v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v51 - v19;
  uint64_t v21 = (int *)type metadata accessor for FoundInEventDataDetectorsOutput();
  uint64_t v22 = *((void *)v21 - 1);
  NSUInteger result = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_33;
  }
  unint64_t v26 = *(void *)(a4 + 16);
  if (v26 <= a1)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v27 = a1 + a2;
  if (__OFADD__(a1, a2))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  BOOL v28 = __OFSUB__(v27, 1);
  unint64_t v29 = v27 - 1;
  if (v28)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v29 >= v26)
  {
LABEL_36:
    __break(1u);
    return result;
  }
  NSRange v30 = NSUnionRange(*(NSRange *)(a4 + 32 + 16 * a1), *(NSRange *)(a4 + 32 + 16 * v29));
  NSUInteger result = v30.location;
  NSUInteger length = v30.length;
  NSUInteger location = v30.location;
  uint64_t v31 = *(void *)(a5 + 16);
  if (v31)
  {
    uint64_t v32 = a5 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    uint64_t v33 = a5;
    uint64_t v34 = *(void *)(v22 + 72);
    uint64_t v57 = (void (**)(char *, uint64_t, uint64_t))(v56 + 32);
    v51[2] = v56 + 8;
    unint64_t v52 = (void (**)(char *, char *, uint64_t))(v56 + 16);
    v51[1] = v33;
    swift_bridgeObjectRetain();
    int v53 = v7;
    while (1)
    {
      sub_2367CA640(v32, (uint64_t)v25);
      if (v25[v21[8]] == 5)
      {
        uint64_t v35 = v21[20];
        uint64_t v36 = &v25[v21[19]];
        if (v36[8]) {
          NSUInteger v37 = 0;
        }
        else {
          NSUInteger v37 = *(void *)v36;
        }
        uint64_t v38 = &v25[v35];
        NSUInteger v39 = *(void *)&v25[v35];
        if (v38[8]) {
          NSUInteger v40 = 0;
        }
        else {
          NSUInteger v40 = v39;
        }
        uint64_t v41 = (uint64_t)v25;
        if ((v7 & 1) == 0) {
          uint64_t v41 = (uint64_t)&v25[v21[6]];
        }
        sub_23690E9D0(v41, (uint64_t)v20);
        if (sub_2367B85F8((uint64_t)v20, 1, v12) == 1
          || (v63.NSUInteger length = length,
              v63.NSUInteger location = location,
              v64.NSUInteger location = v37,
              v64.NSUInteger length = v40,
              (uint64_t)NSIntersectionRange(v63, v64).length < 1))
        {
          sub_2367CA6A4((uint64_t)v25);
          uint64_t v43 = (uint64_t)v20;
        }
        else
        {
          uint64_t v42 = v58;
          sub_23690E9D0((uint64_t)v20, v58);
          if (sub_2367B85F8(v42, 1, v12) != 1)
          {
            char v44 = *v57;
            int v45 = v59;
            (*v57)(v59, v42, v12);
            (*v52)(v60, v45, v12);
            uint64_t v46 = v54;
            uint64_t v47 = *v54;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *uint64_t v46 = v47;
            uint64_t v55 = v44;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              uint64_t v47 = sub_2367D3228(0, *(void *)(v47 + 16) + 1, 1, v47);
              *int64_t v54 = v47;
            }
            unint64_t v7 = *(void *)(v47 + 16);
            unint64_t v49 = *(void *)(v47 + 24);
            if (v7 >= v49 >> 1)
            {
              uint64_t v47 = sub_2367D3228(v49 > 1, v7 + 1, 1, v47);
              *int64_t v54 = v47;
            }
            *(void *)(v47 + 16) = v7 + 1;
            uint64_t v50 = v56;
            v55((char *)(v47+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v7), (uint64_t)v60, v12);
            (*(void (**)(char *, uint64_t))(v50 + 8))(v59, v12);
            sub_2367CA6A4((uint64_t)v25);
            sub_2367CA5E4((uint64_t)v20, &qword_26AD89410);
            LOBYTE(v7) = v53;
            goto LABEL_24;
          }
          sub_2367CA6A4((uint64_t)v25);
          sub_2367CA5E4((uint64_t)v20, &qword_26AD89410);
          uint64_t v43 = v42;
        }
        sub_2367CA5E4(v43, &qword_26AD89410);
      }
      else
      {
        sub_2367CA6A4((uint64_t)v25);
      }
LABEL_24:
      v32 += v34;
      if (!--v31) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_236909A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a1 + 32))(a2, a3, a4);
}

BOOL sub_236909A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!*(void *)(a5 + 16)) {
    return 1;
  }
  swift_bridgeObjectRetain();
  sub_23690EEBC();
  char v9 = v8;
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0) {
    return 1;
  }
  swift_bridgeObjectRetain();
  sub_2367D7600(a1, a2, a5);
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  if (!v11) {
    return 0;
  }
  sub_2367CA700();
  uint64_t v12 = sub_23697B56C();
  swift_bridgeObjectRelease();
  return v12 == 0;
}

uint64_t sub_236909B30(uint64_t a1)
{
  uint64_t v37 = *(void *)(a1 + 16);
  if (v37)
  {
    uint64_t v1 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v2 = 0;
    uint64_t v3 = MEMORY[0x263F8EE80];
    uint64_t v39 = v1;
LABEL_3:
    uint64_t v4 = *(void *)(v1 + 8 * v2);
    uint64_t v38 = v2 + 1;
    uint64_t v40 = v4 + 64;
    uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v4 + 64);
    int64_t v41 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v42 = *(void *)(v1 + 8 * v2);
    swift_bridgeObjectRetain();
    int64_t v8 = 0;
    if (v7)
    {
LABEL_7:
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_22;
    }
    while (1)
    {
      int64_t v11 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_40;
      }
      uint64_t v1 = v39;
      if (v11 >= v41) {
        goto LABEL_33;
      }
      ++v8;
      if (!*(void *)(v40 + 8 * v11))
      {
        int64_t v8 = v11 + 1;
        if (v11 + 1 >= v41) {
          goto LABEL_33;
        }
        if (!*(void *)(v40 + 8 * v8))
        {
          int64_t v8 = v11 + 2;
          if (v11 + 2 >= v41) {
            goto LABEL_33;
          }
          if (!*(void *)(v40 + 8 * v8))
          {
            int64_t v12 = v11 + 3;
            if (v12 >= v41)
            {
LABEL_33:
              swift_release();
              uint64_t v2 = v38;
              if (v38 != v37) {
                goto LABEL_3;
              }
              swift_bridgeObjectRelease();
              return v3;
            }
            if (!*(void *)(v40 + 8 * v12))
            {
              while (1)
              {
                int64_t v8 = v12 + 1;
                if (__OFADD__(v12, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v41) {
                  goto LABEL_33;
                }
                ++v12;
                if (*(void *)(v40 + 8 * v8)) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v12;
          }
        }
      }
LABEL_21:
      sub_2368B453C();
      unint64_t v7 = v14 & v13;
      unint64_t v10 = v15 + (v8 << 6);
LABEL_22:
      uint64_t v16 = (uint64_t *)(*(void *)(v42 + 48) + 16 * v10);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      uint64_t v19 = (uint64_t *)(*(void *)(v42 + 56) + 16 * v10);
      uint64_t v21 = *v19;
      uint64_t v20 = v19[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      BOOL v22 = sub_236909A48(v18, v17, v21, v20, v3);
      swift_bridgeObjectRelease();
      if (!v22)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 0;
      }
      swift_isUniquelyReferenced_nonNull_native();
      unint64_t v23 = sub_2368FE8EC(v18, v17);
      if (__OFADD__(*(void *)(v3 + 16), (v24 & 1) == 0))
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        uint64_t result = sub_23697B9AC();
        __break(1u);
        return result;
      }
      unint64_t v25 = v23;
      char v26 = v24;
      sub_2367B7DBC(&qword_268898B78);
      if (sub_23697B78C())
      {
        unint64_t v27 = sub_2368FE8EC(v18, v17);
        if ((v26 & 1) != (v28 & 1)) {
          goto LABEL_42;
        }
        unint64_t v25 = v27;
      }
      if (v26)
      {
        unint64_t v29 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v25);
        swift_bridgeObjectRelease();
        *unint64_t v29 = v21;
        v29[1] = v20;
      }
      else
      {
        sub_2368B44FC(v3 + 8 * (v25 >> 6));
        uint64_t v31 = (uint64_t *)(v30 + 16 * v25);
        *uint64_t v31 = v18;
        v31[1] = v17;
        uint64_t v32 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v25);
        *uint64_t v32 = v21;
        v32[1] = v20;
        uint64_t v33 = *(void *)(v3 + 16);
        BOOL v34 = __OFADD__(v33, 1);
        uint64_t v35 = v33 + 1;
        if (v34) {
          goto LABEL_39;
        }
        *(void *)(v3 + 16) = v35;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v7) {
        goto LABEL_7;
      }
    }
  }
  return MEMORY[0x263F8EE80];
}

void sub_236909EA0()
{
  sub_2367CAE08();
  v67.NSUInteger length = v1;
  v67.NSUInteger location = v2;
  uint64_t v4 = v3;
  uint64_t v82 = sub_23697AD0C();
  sub_2367CAA54();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_2367CD7C4();
  uint64_t v72 = (int *)type metadata accessor for FoundInEventDataDetectorsOutput();
  sub_2367CAA54();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  id v68 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = (void *)sub_23697AE9C();
  uint64_t v71 = *(NSObject **)(v4 + 16);
  if (!v71) {
    goto LABEL_87;
  }
  unint64_t v70 = v4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v69 = *(void *)(v9 + 72);
  uint64_t v13 = *MEMORY[0x263F08518];
  uint64_t v86 = *MEMORY[0x263F08510];
  uint64_t v14 = *MEMORY[0x263F084E0];
  uint64_t v84 = *MEMORY[0x263F08508];
  uint64_t v85 = v14;
  uint64_t v83 = *MEMORY[0x263F084E8];
  uint64_t v80 = v6 + 1;
  v66[1] = v4;
  swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  *(void *)&long long v16 = 136315138;
  long long v76 = v16;
  uint64_t v75 = MEMORY[0x263F8EE58] + 8;
  uint64_t v81 = v0;
  uint64_t v17 = (uint64_t)v68;
  uint64_t v74 = v13;
  while (1)
  {
    uint64_t v73 = v15;
    sub_2367CA640(v70 + v69 * (void)v15, v17);
    if (*(unsigned char *)(v17 + v72[8]) != 4) {
      goto LABEL_85;
    }
    uint64_t v87 = *(void *)(v17 + v72[17]);
    if (!v87) {
      goto LABEL_85;
    }
    uint64_t v18 = v72[19];
    uint64_t v19 = v17 + v72[20];
    int v20 = *(unsigned __int8 *)(v19 + 8);
    uint64_t v21 = *(void *)v19;
    v22.NSUInteger length = v20 ? 0 : v21;
    v22.NSUInteger location = *(unsigned char *)(v17 + v18 + 8) ? 0 : *(void *)(v17 + v18);
    if ((uint64_t)NSIntersectionRange(v67, v22).length >= 1) {
      break;
    }
LABEL_84:
    uint64_t v17 = (uint64_t)v68;
LABEL_85:
    uint64_t v6 = ((char *)&v73->isa + 1);
    sub_2367CA6A4(v17);
    uint64_t v15 = v6;
    if (v6 == v71)
    {
      swift_bridgeObjectRelease();
LABEL_87:
      sub_2367CAD58();
      return;
    }
  }
  uint64_t v23 = *(void *)(v87 + 64);
  uint64_t v78 = v87 + 64;
  uint64_t v24 = 1 << *(unsigned char *)(v87 + 32);
  if (v24 < 64) {
    uint64_t v25 = ~(-1 << v24);
  }
  else {
    uint64_t v25 = -1;
  }
  unint64_t v26 = v25 & v23;
  int64_t v79 = (unint64_t)(v24 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v27 = 0;
  while (1)
  {
    if (v26)
    {
      uint64_t v88 = (v26 - 1) & v26;
      unint64_t v28 = __clz(__rbit64(v26)) | (v27 << 6);
      goto LABEL_32;
    }
    int64_t v29 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
      goto LABEL_91;
    }
    if (v29 >= v79) {
      goto LABEL_83;
    }
    ++v27;
    if (!*(void *)(v78 + 8 * v29))
    {
      int64_t v27 = v29 + 1;
      if (v29 + 1 >= v79) {
        goto LABEL_83;
      }
      if (!*(void *)(v78 + 8 * v27))
      {
        int64_t v27 = v29 + 2;
        if (v29 + 2 >= v79) {
          goto LABEL_83;
        }
        if (!*(void *)(v78 + 8 * v27)) {
          break;
        }
      }
    }
LABEL_31:
    sub_2368B453C();
    uint64_t v88 = v32 & v31;
    unint64_t v28 = v33 + (v27 << 6);
LABEL_32:
    BOOL v34 = *(void **)(*(void *)(v87 + 48) + 8 * v28);
    uint64_t v35 = (uint64_t *)(*(void *)(v87 + 56) + 16 * v28);
    uint64_t v37 = *v35;
    uint64_t v36 = v35[1];
    sub_23697AF6C();
    if (v4 == sub_23690EBEC() && v6 == v38)
    {
      int64_t v77 = v27;
      id v52 = v34;
      swift_bridgeObjectRetain();

      sub_23690ED10();
      goto LABEL_72;
    }
    uint64_t v4 = sub_23690EAF8();
    uint64_t v0 = v34;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v4)
    {
      int64_t v77 = v27;
      sub_23690ED10();
      goto LABEL_73;
    }
    sub_23697AF6C();
    if (v4 == sub_23690EBEC() && v6 == v40)
    {
      sub_23690EC54();
      goto LABEL_68;
    }
    sub_23690EAF8();
    sub_23690EF00();
    swift_bridgeObjectRelease();
    if (v4)
    {
      sub_23690EC54();
LABEL_70:
      uint64_t v0 = v0 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
      goto LABEL_73;
    }
    sub_23697AF6C();
    if (v4 == sub_23690EBEC() && v6 == v42)
    {
      sub_23690EBC4();
      goto LABEL_72;
    }
    sub_23690EAF8();
    sub_23690EF00();
    swift_bridgeObjectRelease();
    if (v4)
    {
      sub_23690EBC4();
      goto LABEL_73;
    }
    sub_23697AF6C();
    if (v4 == sub_23690EBEC() && v6 == v44)
    {
      sub_23690EC30();
LABEL_68:
      uint64_t v0 = v0 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
LABEL_72:
      swift_bridgeObjectRelease_n();
      goto LABEL_73;
    }
    sub_23690EAF8();
    sub_23690EF00();
    swift_bridgeObjectRelease();
    if (v4)
    {
      sub_23690EC30();
      goto LABEL_70;
    }
    sub_23697AF6C();
    if (v4 == sub_23690EBEC() && v6 == v46)
    {
      sub_23690ED2C();
      goto LABEL_72;
    }
    sub_23690EAF8();
    sub_23690EF00();
    swift_bridgeObjectRelease();
    if ((v4 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v48 = v81;
      sub_23697ACFC();
      uint64_t v4 = (uint64_t)(id)v0;
      uint64_t v6 = sub_23697ACDC();
      os_log_type_t v49 = sub_23697B38C();
      if (os_log_type_enabled(v6, v49))
      {
        uint64_t v0 = sub_2367CAEA0();
        v89[0] = sub_236856D80();
        *(_DWORD *)uint64_t v0 = v76;
        uint64_t v50 = sub_23697AF6C();
        *(void *)(v0 + 4) = sub_2367D90DC(v50, v51, v89);

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2367AD000, v6, v49, "DUFoundInEventPostprocessing: unknown address component key: %s", (uint8_t *)v0, 0xCu);
        swift_arrayDestroy();
        sub_2367CAAA0();
        sub_2367CAAA0();
      }
      else
      {
      }
      ((void (*)(uint64_t, uint64_t))v80->isa)(v48, v82);
      unint64_t v26 = v88;
      continue;
    }
    sub_23690ED2C();
LABEL_73:
    swift_isUniquelyReferenced_nonNull_native();
    v89[0] = (uint64_t)v12;
    unint64_t v53 = sub_2368FE8EC(v4, v0);
    if (__OFADD__(v12[2], (v54 & 1) == 0)) {
      goto LABEL_89;
    }
    unint64_t v55 = v53;
    char v56 = v54;
    sub_2367B7DBC(&qword_268898B78);
    uint64_t v6 = v89;
    char v57 = sub_23697B78C();
    int64_t v27 = v77;
    if (v57)
    {
      uint64_t v6 = v89[0];
      unint64_t v58 = sub_2368FE8EC(v4, v0);
      if ((v56 & 1) != (v59 & 1)) {
        goto LABEL_92;
      }
      unint64_t v55 = v58;
    }
    int64_t v12 = (void *)v89[0];
    if (v56)
    {
      char v60 = (void *)(*(void *)(v89[0] + 56) + 16 * v55);
      swift_bridgeObjectRelease();
      *char v60 = v37;
      v60[1] = v36;
    }
    else
    {
      *(void *)(v89[0] + 8 * (v55 >> 6) + 64) |= 1 << v55;
      uint64_t v61 = (uint64_t *)(v12[6] + 16 * v55);
      *uint64_t v61 = v4;
      v61[1] = v0;
      uint64_t v62 = (void *)(v12[7] + 16 * v55);
      *uint64_t v62 = v37;
      v62[1] = v36;
      uint64_t v63 = v12[2];
      BOOL v64 = __OFADD__(v63, 1);
      uint64_t v65 = v63 + 1;
      if (v64) {
        goto LABEL_90;
      }
      v12[2] = v65;
      swift_bridgeObjectRetain();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v26 = v88;
  }
  int64_t v30 = v29 + 3;
  if (v30 >= v79)
  {
LABEL_83:
    swift_release();
    goto LABEL_84;
  }
  if (*(void *)(v78 + 8 * v30))
  {
    int64_t v27 = v30;
    goto LABEL_31;
  }
  while (1)
  {
    int64_t v27 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v27 >= v79) {
      goto LABEL_83;
    }
    ++v30;
    if (*(void *)(v78 + 8 * v27)) {
      goto LABEL_31;
    }
  }
LABEL_91:
  __break(1u);
LABEL_92:
  sub_23697B9AC();
  __break(1u);
}

void sub_23690A618(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t aBlock, uint64_t a14, uint64_t (*a15)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4), void *a16, uint64_t (*a17)(), uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  sub_23690EE40();
  a31 = v33;
  a32 = v34;
  uint64_t v35 = v32;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v46 = MEMORY[0x263F8EE78];
  uint64_t v47 = sub_23697AE9C();
  a19 = v46;
  a20 = MEMORY[0x263F8EE88];
  uint64_t v48 = (void *)swift_allocObject();
  v48[2] = v45;
  v48[3] = v35;
  v48[4] = v37;
  v48[5] = &a19;
  v48[6] = v41;
  v48[7] = v39;
  v48[8] = &a20;
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = sub_23690E848;
  *(void *)(v49 + 24) = v48;
  a17 = sub_23690EAEC;
  a18 = v49;
  aBlock = MEMORY[0x263EF8330];
  a14 = 1107296256;
  a15 = sub_236909A14;
  a16 = &unk_26E9CD3E0;
  uint64_t v50 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v43, sel_enumerateRangesUsingBlock_, v50);
  _Block_release(v50);
  LOBYTE(v43) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v43)
  {
    __break(1u);
LABEL_28:
    swift_once();
    goto LABEL_8;
  }
  uint64_t v51 = *(void *)(a19 + 16);
  uint64_t v35 = &qword_26AD89000;
  if (!v51) {
    goto LABEL_11;
  }
  if (v51 == 1)
  {
    uint64_t v52 = *(void *)(a19 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v47 = v52;
    goto LABEL_11;
  }
  uint64_t v53 = swift_bridgeObjectRetain();
  uint64_t v54 = sub_236909B30(v53);
  swift_bridgeObjectRelease();
  if (v54)
  {
    swift_bridgeObjectRelease();
    uint64_t v47 = v54;
    goto LABEL_11;
  }
  if (qword_26AD89488 != -1) {
    goto LABEL_28;
  }
LABEL_8:
  uint64_t v55 = sub_23697AD0C();
  char v56 = (void *)sub_23690EC08(v55, (uint64_t)qword_26AD8C290);
  os_log_type_t v57 = sub_23697B36C();
  if (sub_23688C870(v57))
  {
    *(_WORD *)sub_2367CAB80() = 0;
    sub_23688CC54(&dword_2367AD000, v58, v59, "Failed to merge address components successfully");
    sub_2367CAAA0();
  }

LABEL_11:
  if (!*(void *)(v47 + 16))
  {
    uint64_t v60 = *(void *)(a20 + 16);
    if (v60)
    {
      if (v60 == 1)
      {
        sub_236906894(a20);
        goto LABEL_26;
      }
      uint64_t v66 = swift_bridgeObjectRetain();
      sub_23690B724(v66);
      swift_bridgeObjectRelease();
      sub_23690B39C();
      uint64_t v68 = v67;
      swift_release();
      if (v68) {
        goto LABEL_26;
      }
      if (v35[145] != -1) {
        swift_once();
      }
      uint64_t v69 = sub_23697AD0C();
      uint64_t v62 = sub_23690EC08(v69, (uint64_t)qword_26AD8C290);
      os_log_type_t v70 = sub_23697B36C();
      if (!os_log_type_enabled(v62, v70))
      {
LABEL_25:

        goto LABEL_26;
      }
      uint64_t v71 = (uint8_t *)sub_2367CAEA0();
      a12 = sub_236856D80();
      *(_DWORD *)uint64_t v71 = 136315138;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v72 = sub_23697B2CC();
      unint64_t v74 = v73;
      swift_bridgeObjectRelease();
      sub_2367D90DC(v72, v74, &a12);
      sub_23697B50C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2367AD000, v62, v70, "Unable to obtain final candidate in group of %s", v71, 0xCu);
      swift_arrayDestroy();
      sub_2367CAAA0();
    }
    else
    {
      if (v35[145] != -1) {
        swift_once();
      }
      uint64_t v61 = sub_23697AD0C();
      uint64_t v62 = sub_23690EC08(v61, (uint64_t)qword_26AD8C290);
      os_log_type_t v63 = sub_23697B36C();
      if (!sub_23688C870(v63)) {
        goto LABEL_25;
      }
      *(_WORD *)sub_2367CAB80() = 0;
      sub_23688CC54(&dword_2367AD000, v64, v65, "There were no final candidates to be found...");
    }
    sub_2367CAAA0();
    goto LABEL_25;
  }
LABEL_26:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23690EDB0();
}

unint64_t sub_23690AB14(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v7 = *(void *)(a4 + 16);
  if (v7 <= result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v8 = result + a2;
  if (__OFADD__(result, a2))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  BOOL v9 = __OFSUB__(v8, 1);
  unint64_t v10 = v8 - 1;
  if (v9)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v10 >= v7)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  NSUnionRange(*(NSRange *)(a4 + 32 + 16 * result), *(NSRange *)(a4 + 32 + 16 * v10));
  sub_236909EA0();
  uint64_t v13 = v12;
  if (*(void *)(v12 + 16))
  {
    sub_2367D1EA0();
    uint64_t v14 = *(void *)(*a7 + 16);
    sub_2367D2134();
    uint64_t v15 = *a7;
    *(void *)(v15 + 16) = v14 + 1;
    *(void *)(v15 + 8 * v14 + 32) = v13;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_23697B2FC();
  if ((v16 & 1) == 0)
  {
    uint64_t v17 = sub_23697B1AC();
    MEMORY[0x237E064D0](v17);
    swift_bridgeObjectRelease();
    uint64_t v18 = (void *)sub_23697AF3C();
    swift_bridgeObjectRelease();
    id v19 = (id)_PASCollapseWhitespaceAndStrip();

    uint64_t v20 = sub_23697AF6C();
    uint64_t v22 = v21;

    sub_23690C50C(&v23, v20, v22);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23690ACA8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = MEMORY[0x263F8EE78];
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a3;
  void v8[4] = a4;
  v8[5] = &v14;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_23690E7A8;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_23690E7B8;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236909A14;
  aBlock[3] = &unk_26E9CD368;
  unint64_t v10 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(a2, sel_enumerateRangesUsingBlock_, v10);
  _Block_release(v10);
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (a2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = v14;
    swift_release();
    return v12;
  }
  return result;
}

void sub_23690AE38(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v7 = *(void *)(a4 + 16);
  if (v7 <= a1)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = a1 + a2;
  if (__OFADD__(a1, a2))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  BOOL v9 = __OFSUB__(v8, 1);
  unint64_t v10 = v8 - 1;
  if (v9)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v10 >= v7)
  {
LABEL_25:
    __break(1u);
    return;
  }
  NSUnionRange(*(NSRange *)(a4 + 32 + 16 * a1), *(NSRange *)(a4 + 32 + 16 * v10));
  uint64_t v14 = sub_23697B2FC();
  if ((v16 & 1) == 0)
  {
    uint64_t v17 = v14;
    uint64_t v18 = v15;
    swift_bridgeObjectRetain();
    uint64_t v19 = MEMORY[0x237E065F0](v17, v18, a5, a6);
    uint64_t v21 = v20;
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    swift_bridgeObjectRelease();
    uint64_t v26 = MEMORY[0x237E06660](v19, v21, v23, v25);
    if (v27) {
      uint64_t v28 = v26;
    }
    else {
      uint64_t v28 = 0;
    }
    if (v27) {
      unint64_t v29 = v27;
    }
    else {
      unint64_t v29 = 0xE000000000000000;
    }
    uint64_t v30 = HIBYTE(v29) & 0xF;
    if ((v29 & 0x2000000000000000) == 0) {
      uint64_t v30 = v28 & 0xFFFFFFFFFFFFLL;
    }
    if (v30)
    {
      sub_23697B19C();
      uint64_t v31 = (void *)sub_23697AF3C();
      swift_bridgeObjectRelease();
      id v32 = (id)_PASCollapseWhitespaceAndStrip();

      uint64_t v33 = sub_23697AF6C();
      uint64_t v35 = v34;

      sub_2367D1C18();
      uint64_t v36 = *(void *)(*a7 + 16);
      sub_2367D1EC8();
      uint64_t v37 = *a7;
      *(void *)(v37 + 16) = v36 + 1;
      uint64_t v38 = v37 + 16 * v36;
      *(void *)(v38 + 32) = v33;
      *(void *)(v38 + 40) = v35;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

void sub_23690B004()
{
  sub_236883484();
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    NSUInteger v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    uint64_t v3 = MEMORY[0x263F8EE80];
    while (1)
    {
      uint64_t v5 = *(v2 - 1);
      uint64_t v4 = *v2;
      uint64_t v6 = *(void *)(v3 + 16);
      swift_bridgeObjectRetain();
      if (v6 && (unint64_t v7 = sub_23690EEBC(), (v8 & 1) != 0)) {
        uint64_t v9 = *(void *)(*(void *)(v3 + 56) + 8 * v7);
      }
      else {
        uint64_t v9 = 0;
      }
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      swift_isUniquelyReferenced_nonNull_native();
      unint64_t v11 = sub_23690EEBC();
      if (__OFADD__(*(void *)(v3 + 16), (v12 & 1) == 0)) {
        goto LABEL_20;
      }
      unint64_t v13 = v11;
      char v14 = v12;
      sub_2367B7DBC(&qword_268898B80);
      if (sub_23697B78C())
      {
        unint64_t v15 = sub_23690EEBC();
        if ((v14 & 1) != (v16 & 1)) {
          goto LABEL_22;
        }
        unint64_t v13 = v15;
      }
      if (v14)
      {
        *(void *)(*(void *)(v3 + 56) + 8 * v13) = v10;
      }
      else
      {
        sub_2368B44FC(v3 + 8 * (v13 >> 6));
        uint64_t v18 = (void *)(v17 + 16 * v13);
        *uint64_t v18 = v5;
        v18[1] = v4;
        *(void *)(*(void *)(v3 + 56) + 8 * v13) = v10;
        uint64_t v19 = *(void *)(v3 + 16);
        BOOL v20 = __OFADD__(v19, 1);
        uint64_t v21 = v19 + 1;
        if (v20) {
          goto LABEL_21;
        }
        *(void *)(v3 + 16) = v21;
        swift_bridgeObjectRetain();
      }
      v2 += 2;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!--v1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    sub_23697B9AC();
    __break(1u);
  }
  else
  {
LABEL_18:
    sub_236883450();
  }
}

uint64_t sub_23690B190()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = (unint64_t *)sub_2368AF398(v0);
  char v3 = v2;
  swift_bridgeObjectRelease();
  if (v3) {
    uint64_t v1 = 0;
  }
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_23690DC08(v4, v1);
  swift_bridgeObjectRelease();
  sub_2369069A4((uint64_t)v5);
  uint64_t v7 = v6;
  swift_release();
  return v7;
}

void sub_23690B21C()
{
  sub_236883484();
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = swift_bridgeObjectRetain() + 40;
    int64_t v4 = 0x8000000000000000;
    uint64_t v5 = v1;
    do
    {
      swift_bridgeObjectRetain();
      sub_23688CC04();
      uint64_t v6 = sub_23697B06C();
      swift_bridgeObjectRelease();
      if (v6 > v4) {
        int64_t v4 = v6;
      }
      v3 += 16;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v7 = (uint64_t *)(v2 + 40);
    uint64_t v8 = MEMORY[0x263F8EE78];
    do
    {
      uint64_t v10 = *(v7 - 1);
      uint64_t v9 = *v7;
      swift_bridgeObjectRetain();
      if (sub_23697B06C() == v4)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_2368C6BE4();
        }
        unint64_t v11 = *(void *)(v8 + 16);
        if (v11 >= *(void *)(v8 + 24) >> 1) {
          sub_2368C6BE4();
        }
        *(void *)(v8 + 16) = v11 + 1;
        uint64_t v12 = v8 + 16 * v11;
        *(void *)(v12 + 32) = v10;
        *(void *)(v12 + 40) = v9;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v7 += 2;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
    if (*(void *)(v8 + 16) == 1) {
      swift_bridgeObjectRetain();
    }
    swift_release();
  }
  sub_236883450();
}

uint64_t sub_23690B39C()
{
  sub_23690B004();
  uint64_t v0 = sub_23690B190();
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 16);
  if (v1 < 2)
  {
    if (v1) {
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    sub_23690B21C();
  }
  swift_bridgeObjectRelease();
  return sub_23688CC04();
}

uint64_t sub_23690B428(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    if (v1 == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_23690B39C();
      if (!v8)
      {
        if (qword_26AD89488 != -1) {
          swift_once();
        }
        uint64_t v10 = sub_23697AD0C();
        sub_2367BA98C(v10, (uint64_t)qword_26AD8C290);
        swift_bridgeObjectRetain();
        unint64_t v11 = sub_23697ACDC();
        os_log_type_t v12 = sub_23697B36C();
        if (os_log_type_enabled(v11, v12))
        {
          unint64_t v13 = (uint8_t *)sub_2367CAEA0();
          *(_DWORD *)unint64_t v13 = 134217984;
          sub_23697B50C();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_2367AD000, v11, v12, "DUFoundInEventsPostprocessing: Unable to find most frequent longest candidate from %ld candidates", v13, 0xCu);
          sub_2367CAAA0();
        }
        else
        {

          swift_bridgeObjectRelease();
        }
      }
    }
  }
  else
  {
    if (qword_26AD89488 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_23697AD0C();
    uint64_t v3 = (void *)sub_23690EC08(v2, (uint64_t)qword_26AD8C290);
    os_log_type_t v4 = sub_23697B36C();
    if (sub_23681BB08(v4))
    {
      uint64_t v5 = (_WORD *)sub_2367CAB80();
      sub_2367CAE20(v5);
      sub_2367D9994(&dword_2367AD000, v6, v7, "DUFoundInEventsPostprocessing: No finalCandidates.");
      sub_2367CAAA0();
    }
  }
  return sub_23688CC04();
}

uint64_t sub_23690B610()
{
  uint64_t v1 = sub_236979F7C();
  sub_2367CAA54();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  sub_2367CD7C4();
  sub_236979F2C();
  sub_2367CA700();
  uint64_t v5 = sub_23697B54C();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  return v5;
}

uint64_t type metadata accessor for DUFoundInEventsPostprocessing()
{
  return self;
}

uint64_t sub_23690B708(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void *sub_23690B724(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_2367B7DBC(&qword_26AD89C10);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 16);
  uint64_t v5 = sub_23690E168((uint64_t)&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_236804FAC();
  if (v5 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_23690B808(unint64_t a1)
{
  return sub_23690BAA8(a1, (void (*)(void *, uint64_t, unint64_t))sub_2367D5414);
}

const void *sub_23690B820(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return (const void *)MEMORY[0x263F8EE78];
  }
  sub_2367B7DBC(&qword_26AD89C10);
  uint64_t v1 = (const void *)sub_2367D645C();
  size_t v2 = j__malloc_size(v1);
  sub_23690EDCC(2 * ((uint64_t)(v2 - 32) / 16));
  sub_23690E368(v3, v4, v5, v6);
  sub_23690EDE4();
  sub_23690EED4();
  if (!v7)
  {
    __break(1u);
    return (const void *)MEMORY[0x263F8EE78];
  }
  return v1;
}

void sub_23690B8C0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v6 = a4 >> 1;
  uint64_t v7 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  if (v7)
  {
    sub_23690ED88();
    if (!(v9 ^ v10 | v8))
    {
      sub_2367B7DBC(&qword_268898678);
      unint64_t v11 = (void *)sub_2367D645C();
      size_t v12 = j__malloc_size(v11);
      id v11[2] = v7;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 8);
    }
    if (v6 != v4)
    {
      sub_2367D4C44(v5 + 8 * v4, v7);
      return;
    }
    goto LABEL_9;
  }
}

const void *sub_23690B970(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return (const void *)MEMORY[0x263F8EE78];
  }
  sub_2367B7DBC(&qword_2688984B0);
  uint64_t v1 = (const void *)sub_2367D645C();
  j__malloc_size(v1);
  sub_23690EBAC();
  sub_23690EDCC(v2);
  sub_23690E568(v3, v4, v5, v6);
  sub_23690EDE4();
  sub_23690EED4();
  if (!v7)
  {
    __break(1u);
    return (const void *)MEMORY[0x263F8EE78];
  }
  return v1;
}

void sub_23690BA04(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v6 = a4 >> 1;
  uint64_t v7 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  if (v7)
  {
    sub_23690ED88();
    if (!(v9 ^ v10 | v8))
    {
      sub_2367B7DBC(&qword_2688984B0);
      unint64_t v11 = (void *)sub_2367D645C();
      j__malloc_size(v11);
      sub_23690EBAC();
      id v11[2] = v7;
      v11[3] = v12;
    }
    if (v6 != v4)
    {
      sub_2367D5084(v5 + 8 * v4, v7);
      return;
    }
    goto LABEL_9;
  }
}

void *sub_23690BAA8(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_8;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return (void *)MEMORY[0x263F8EE78];
  }
  while (1)
  {
    if (v4 <= 0)
    {
      uint64_t v5 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      sub_2367B7DBC(&qword_2688984B0);
      uint64_t v5 = (void *)sub_2367D645C();
      j__malloc_size(v5);
      sub_23690EBAC();
      v5[2] = v4;
      v5[3] = v6;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v7;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_23697B7FC();
    swift_bridgeObjectRelease();
    if (!v4) {
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  return v5;
}

void sub_23690BB94(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v6 = a4 >> 1;
  uint64_t v7 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  if (v7)
  {
    sub_23690ED88();
    if (v9 ^ v10 | v8)
    {
      uint64_t v11 = MEMORY[0x263F8EE78];
    }
    else
    {
      sub_2367B7DBC(&qword_2688986B8);
      uint64_t v11 = sub_2367D645C();
      size_t v12 = j__malloc_size((const void *)v11);
      *(void *)(v11 + 16) = v7;
      *(void *)(v11 + 24) = 2 * ((uint64_t)(v12 - 32) / 4);
    }
    if (v6 != v4)
    {
      sub_2367D4CE0((char *)(v5 + 4 * v4), v7, (char *)(v11 + 32));
      return;
    }
    goto LABEL_10;
  }
}

void sub_23690BC44()
{
}

void sub_23690BC50()
{
  sub_2367CAE08();
  uint64_t v1 = v0;
  uint64_t v2 = sub_23697A3AC();
  sub_2367CAA54();
  uint64_t v25 = v3;
  MEMORY[0x270FA5388](v4);
  sub_2367D6170();
  MEMORY[0x270FA5388](v5);
  sub_2367E5460();
  uint64_t v28 = v6;
  if (*(void *)(v1 + 16)
    && (sub_2367B7DBC(&qword_26AD894F8), uint64_t v7 = sub_23690EE5C(), v8 = v7, (v24 = *(void *)(v1 + 16)) != 0))
  {
    unint64_t v9 = 0;
    uint64_t v27 = v7 + 56;
    uint64_t v23 = v1;
    while (v9 < *(void *)(v1 + 16))
    {
      uint64_t v10 = *(void *)(v25 + 72);
      uint64_t v11 = *(void (**)(void))(v25 + 16);
      sub_23690EF18();
      v11();
      sub_23690EA38(&qword_26AD89420);
      uint64_t v12 = sub_23697AEAC() & ~(-1 << *(unsigned char *)(v8 + 32));
      sub_23690EE78();
      if ((v15 & v14) != 0)
      {
        unint64_t v26 = v9;
        uint64_t v17 = ~v16;
        while (1)
        {
          sub_23690EF18();
          v11();
          sub_23690EA38(&qword_26AD89428);
          char v18 = sub_23697AF0C();
          uint64_t v19 = *(void (**)(void))(v25 + 8);
          sub_23690ECC4();
          v19();
          if (v18) {
            break;
          }
          uint64_t v12 = (v12 + 1) & v17;
          sub_23690EE78();
          if ((v14 & v15) == 0)
          {
            uint64_t v1 = v23;
            unint64_t v9 = v26;
            goto LABEL_10;
          }
        }
        sub_23690ECC4();
        v19();
        uint64_t v1 = v23;
        unint64_t v9 = v26;
      }
      else
      {
LABEL_10:
        *(void *)(v27 + 8 * v13) = v15 | v14;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(*(void *)(v8 + 48) + v12 * v10, v28, v2);
        uint64_t v20 = *(void *)(v8 + 16);
        BOOL v21 = __OFADD__(v20, 1);
        uint64_t v22 = v20 + 1;
        if (v21) {
          goto LABEL_16;
        }
        *(void *)(v8 + 16) = v22;
      }
      if (++v9 == v24) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    sub_2367CAD58();
  }
}

void sub_23690BEDC()
{
}

void sub_23690BEE8()
{
  sub_23690EE40();
  uint64_t v2 = v1;
  if (!*(void *)(v1 + 16) || (sub_2367B7DBC(v0), uint64_t v3 = sub_23690EE5C(), v4 = v3, (v33 = *(void *)(v2 + 16)) == 0))
  {
LABEL_24:
    swift_bridgeObjectRelease();
    sub_23690EDB0();
    return;
  }
  unint64_t v5 = 0;
  uint64_t v6 = v3 + 56;
  uint64_t v31 = v2;
  uint64_t v32 = v2 + 32;
  while (v5 < *(void *)(v2 + 16))
  {
    uint64_t v7 = *(void **)(v32 + 8 * v5);
    sub_23697AF6C();
    sub_23697BA2C();
    id v8 = v7;
    sub_23697B04C();
    uint64_t v9 = sub_23697BA4C();
    swift_bridgeObjectRelease();
    uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
    uint64_t v11 = v9 & ~v10;
    sub_23690EEA8();
    if ((v14 & v13) != 0)
    {
      uint64_t v15 = sub_23697AF6C();
      uint64_t v17 = v16;
      if (v15 == sub_23697AF6C() && v17 == v18)
      {
LABEL_21:
        swift_bridgeObjectRelease_n();
LABEL_22:

        goto LABEL_23;
      }
      char v20 = sub_23690ED48();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v20) {
        goto LABEL_22;
      }
      uint64_t v21 = ~v10;
      while (1)
      {
        uint64_t v11 = (v11 + 1) & v21;
        sub_23690EEA8();
        if ((v13 & v14) == 0) {
          break;
        }
        uint64_t v22 = sub_23697AF6C();
        uint64_t v24 = v23;
        if (v22 == sub_23697AF6C() && v24 == v25) {
          goto LABEL_21;
        }
        char v27 = sub_23690ED48();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v27) {
          goto LABEL_22;
        }
      }
    }
    *(void *)(v6 + 8 * v12) = v14 | v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v8;
    uint64_t v28 = *(void *)(v4 + 16);
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_26;
    }
    *(void *)(v4 + 16) = v30;
LABEL_23:
    ++v5;
    uint64_t v2 = v31;
    if (v5 == v33) {
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
}

void sub_23690C0D4()
{
  sub_23690EE40();
  uint64_t v1 = v0;
  if (!*(void *)(v0 + 16)
    || (sub_2367B7DBC(&qword_26889A280), v2 = sub_23690EE5C(), uint64_t v3 = v2, (v25 = *(void *)(v1 + 16)) == 0))
  {
LABEL_23:
    swift_bridgeObjectRelease();
    sub_23690EDB0();
    return;
  }
  unint64_t v4 = 0;
  uint64_t v5 = v2 + 56;
  while (v4 < *(void *)(v1 + 16))
  {
    uint64_t v6 = (uint64_t *)(v1 + 32 + 16 * v4);
    uint64_t v8 = *v6;
    uint64_t v7 = v6[1];
    sub_23697BA2C();
    swift_bridgeObjectRetain();
    sub_23697B04C();
    uint64_t v9 = sub_23697BA4C();
    uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v11 = v9 & ~v10;
    unint64_t v12 = v11 >> 6;
    uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
    uint64_t v14 = 1 << v11;
    if (((1 << v11) & v13) != 0)
    {
      uint64_t v15 = *(void *)(v3 + 48);
      sub_23690EE90(v15 + 16 * v11);
      BOOL v17 = v17 && v16 == v7;
      if (v17 || (sub_23690EB94() & 1) != 0)
      {
LABEL_11:
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      uint64_t v18 = ~v10;
      while (1)
      {
        unint64_t v11 = (v11 + 1) & v18;
        unint64_t v12 = v11 >> 6;
        uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
        uint64_t v14 = 1 << v11;
        if ((v13 & (1 << v11)) == 0) {
          break;
        }
        sub_23690EE90(v15 + 16 * v11);
        BOOL v20 = v17 && v19 == v7;
        if (v20 || (sub_23690EB94() & 1) != 0) {
          goto LABEL_11;
        }
      }
    }
    *(void *)(v5 + 8 * v12) = v14 | v13;
    uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
    *uint64_t v21 = v8;
    v21[1] = v7;
    uint64_t v22 = *(void *)(v3 + 16);
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_25;
    }
    *(void *)(v3 + 16) = v24;
LABEL_22:
    if (++v4 == v25) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

void sub_23690C268()
{
  sub_2367CAE08();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = sub_23697A3AC();
  sub_2367CAA54();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_2368C9B94();
  uint64_t v11 = *v0;
  sub_23690EA38(&qword_26AD89420);
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_23697AEAC();
  uint64_t v13 = -1 << *(unsigned char *)(v11 + 32);
  unint64_t v14 = v12 & ~v13;
  uint64_t v28 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
  {
    uint64_t v25 = v6;
    uint64_t v26 = ~v13;
    uint64_t v24 = v9;
    BOOL v17 = *(void (**)(void, void, void))(v9 + 16);
    uint64_t v16 = v9 + 16;
    uint64_t v15 = v17;
    uint64_t v27 = *(void *)(v16 + 56);
    while (1)
    {
      uint64_t v18 = v11;
      unint64_t v19 = *(void *)(v11 + 48) + v27 * v14;
      BOOL v20 = v15;
      v15(v1, v19, v7);
      sub_23690EA38(&qword_26AD89428);
      char v21 = sub_23697AF0C();
      uint64_t v22 = *(void (**)(void))(v16 - 8);
      sub_23690ECC4();
      v22();
      if (v21) {
        break;
      }
      unint64_t v14 = (v14 + 1) & v26;
      uint64_t v15 = v20;
      uint64_t v11 = v18;
      if (((*(void *)(v28 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = v25;
        uint64_t v9 = v24;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_23690ECC4();
    v22();
    v20(v25, *(void *)(*v2 + 48) + v27 * v14, v7);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void (**)(void, void, void))(v9 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15(v1, v4, v7);
    uint64_t v29 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_23690CD4C(v1, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v29;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v6, v4, v7);
  }
  sub_2367CAD58();
}

uint64_t sub_23690C50C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_23697BA2C();
  swift_bridgeObjectRetain();
  sub_23697B04C();
  uint64_t v8 = sub_23697BA4C();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  sub_23681BA68();
  if (v11)
  {
    uint64_t v12 = *(void *)(v7 + 48);
    sub_23690EE90(v12 + 16 * v10);
    BOOL v14 = v14 && v13 == a3;
    if (v14 || (sub_23690EB94() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v18 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v18;
      sub_23681BA68();
      if ((v19 & 1) == 0) {
        break;
      }
      sub_23690EE90(v12 + 16 * v10);
      BOOL v21 = v14 && v20 == a3;
      if (v21 || (sub_23690EB94() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v23 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_23690CFC4(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v23;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_23690C68C()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_23697A3AC();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_2367B7DBC(&qword_26AD894F8);
  uint64_t v5 = sub_23697B65C();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    BOOL v14 = v41;
    uint64_t v15 = v42;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    int64_t v40 = v13;
    for (unint64_t i = v16 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v20 << 6))
    {
      uint64_t v22 = v4;
      uint64_t v23 = *(void *)(v4 + 48);
      uint64_t v24 = *(void *)(v39 + 72);
      uint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v25(v14, v23 + v24 * i, v15);
      uint64_t v6 = v38;
      sub_23690EA38(&qword_26AD89420);
      uint64_t result = sub_23697AEAC();
      uint64_t v26 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) == 0)
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v26) >> 6;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          BOOL v32 = v28 == v31;
          if (v28 == v31) {
            unint64_t v28 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v28);
          if (v33 != -1)
          {
            unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v6 + 48) + v29 * v24, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v22;
      int64_t v13 = v40;
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v18 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_38;
      }
      if (v18 >= v36) {
        goto LABEL_32;
      }
      unint64_t v19 = v37[v18];
      int64_t v20 = v13 + 1;
      if (!v19)
      {
        int64_t v20 = v13 + 2;
        if (v13 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v19 = v37[v20];
        if (!v19)
        {
          int64_t v20 = v13 + 3;
          if (v13 + 3 >= v36) {
            goto LABEL_32;
          }
          unint64_t v19 = v37[v20];
          if (!v19)
          {
            uint64_t v21 = v13 + 4;
            if (v13 + 4 >= v36)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v35;
              uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
              if (v34 > 63) {
                sub_23690B708(0, (unint64_t)(v34 + 63) >> 6, v37);
              }
              else {
                *uint64_t v37 = -1 << v34;
              }
              *(void *)(v4 + 16) = 0;
              break;
            }
            unint64_t v19 = v37[v21];
            if (!v19)
            {
              while (1)
              {
                int64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_39;
                }
                if (v20 >= v36) {
                  goto LABEL_32;
                }
                unint64_t v19 = v37[v20];
                ++v21;
                if (v19) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v20 = v13 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v19 - 1) & v19;
      int64_t v40 = v20;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_23690CA70()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2367B7DBC(&qword_26889A280);
  uint64_t v3 = sub_23697B65C();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      BOOL v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      sub_23697BA2C();
      sub_23697B04C();
      uint64_t result = sub_23697BA4C();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      unint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
      *unint64_t v28 = v18;
      v28[1] = v19;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v30[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v30[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                sub_23690B708(0, (unint64_t)(v29 + 63) >> 6, v30);
              }
              else {
                *char v30 = -1 << v29;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v30[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_23690CD4C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_23697A3AC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_23690C68C();
  }
  else
  {
    if (v11 > v10)
    {
      sub_23690D160();
      goto LABEL_12;
    }
    sub_23690D5C4();
  }
  uint64_t v12 = *v3;
  sub_23690EA38(&qword_26AD89420);
  uint64_t v13 = sub_23697AEAC();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    BOOL v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_23690EA38(&qword_26AD89428);
      char v21 = sub_23697AF0C();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_23697B99C();
  __break(1u);
  return result;
}

uint64_t sub_23690CFC4(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_23690CA70();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_23690D410();
      goto LABEL_22;
    }
    sub_23690D95C();
  }
  uint64_t v11 = *v4;
  sub_23697BA2C();
  sub_23697B04C();
  uint64_t result = sub_23697BA4C();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_23697B95C(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_23697B99C();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_23697B95C();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *char v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_23690D160()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_23697A3AC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2367B7DBC(&qword_26AD894F8);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_23697B64C();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  uint64_t v24 = v1;
  uint64_t v25 = (const void *)(v6 + 56);
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, v25, 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = *(void *)(v6 + 56);
  uint64_t v15 = -1;
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  unint64_t v16 = v15 & v14;
  int64_t v26 = (unint64_t)(v13 + 63) >> 6;
  if ((v15 & v14) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v17 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v17 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v12 << 6))
  {
    unint64_t v22 = *(void *)(v3 + 72) * i;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v22, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v22, v5, v2);
    if (v16) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v19 >= v26) {
      goto LABEL_28;
    }
    unint64_t v20 = *((void *)v25 + v19);
    ++v12;
    if (!v20)
    {
      int64_t v12 = v19 + 1;
      if (v19 + 1 >= v26) {
        goto LABEL_28;
      }
      unint64_t v20 = *((void *)v25 + v12);
      if (!v20)
      {
        int64_t v12 = v19 + 2;
        if (v19 + 2 >= v26) {
          goto LABEL_28;
        }
        unint64_t v20 = *((void *)v25 + v12);
        if (!v20) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v16 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v26)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_30;
  }
  unint64_t v20 = *((void *)v25 + v21);
  if (v20)
  {
    int64_t v12 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v12 >= v26) {
      goto LABEL_28;
    }
    unint64_t v20 = *((void *)v25 + v12);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_23690D410()
{
  uint64_t v1 = v0;
  sub_2367B7DBC(&qword_26889A280);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_23697B64C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    unint64_t v20 = (void *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v21 = v20[1];
    unint64_t v22 = (void *)(*(void *)(v4 + 48) + 16 * i);
    *unint64_t v22 = *v20;
    v22[1] = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23690D5C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_23697A3AC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_2367B7DBC(&qword_26AD894F8);
  uint64_t v7 = sub_23697B65C();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v17 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    uint64_t v22 = v6;
    uint64_t v23 = *(void *)(v6 + 48);
    uint64_t v24 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v23 + v24 * i, v2);
    sub_23690EA38(&qword_26AD89420);
    uint64_t result = sub_23697AEAC();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v13 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v28 * v24, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v22;
    if (v12) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_36;
    }
    if (v19 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v19);
    ++v16;
    if (!v20)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v36) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v16);
      if (!v20)
      {
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v16);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v36)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v35 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23690D95C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2367B7DBC(&qword_26889A280);
  uint64_t v3 = sub_23697B65C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_23697BA2C();
    swift_bridgeObjectRetain();
    sub_23697B04C();
    uint64_t result = sub_23697BA4C();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    unint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
    *unint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t *sub_23690DC08(uint64_t isStackAllocationSafe, unint64_t *a2)
{
  uint64_t v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x263EF8340];
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    uint64_t v7 = (void *)((char *)v11 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_23690B708(0, v6, v7);
    unint64_t v8 = sub_23690DD78(v7, v6, v4, (uint64_t)a2);
    if (v2) {
      swift_willThrow();
    }
    else {
      return v8;
    }
  }
  else
  {
    uint64_t v9 = (unint64_t *)swift_slowAlloc();
    sub_23690B708(0, v6, v9);
    a2 = sub_23690DD78(v9, v6, v4, (uint64_t)a2);
    MEMORY[0x237E081F0](v9, -1, -1);
  }
  return a2;
}

unint64_t *sub_23690DD78(unint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_20;
    }
    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11) {
      return (unint64_t *)sub_23690DEC8(result, a2, v5, a3);
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      int64_t v6 = v14 + 1;
      if (v14 + 1 >= v11) {
        return (unint64_t *)sub_23690DEC8(result, a2, v5, a3);
      }
      unint64_t v15 = *(void *)(v7 + 8 * v6);
      if (!v15)
      {
        int64_t v6 = v14 + 2;
        if (v14 + 2 >= v11) {
          return (unint64_t *)sub_23690DEC8(result, a2, v5, a3);
        }
        unint64_t v15 = *(void *)(v7 + 8 * v6);
        if (!v15) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_20:
    if (*(void *)(*(void *)(a3 + 56) + 8 * v13) == a4)
    {
      *(unint64_t *)((char *)result + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_23690DEC8(result, a2, v5, a3);
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v11) {
    return (unint64_t *)sub_23690DEC8(result, a2, v5, a3);
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v6 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v11) {
      return (unint64_t *)sub_23690DEC8(result, a2, v5, a3);
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23690DEC8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_2367B7DBC(&qword_26889A438);
  uint64_t result = sub_23697B84C();
  uint64_t v8 = result;
  uint64_t v31 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v31) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        uint64_t v10 = v14 + 1;
        if (v14 + 1 >= v31) {
          return v8;
        }
        unint64_t v15 = a1[v10];
        if (!v15)
        {
          uint64_t v10 = v14 + 2;
          if (v14 + 2 >= v31) {
            return v8;
          }
          unint64_t v15 = a1[v10];
          if (!v15)
          {
            uint64_t v16 = v14 + 3;
            if (v16 >= v31) {
              return v8;
            }
            unint64_t v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                uint64_t v10 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_41;
                }
                if (v10 >= v31) {
                  return v8;
                }
                unint64_t v15 = a1[v10];
                ++v16;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v10 = v16;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = *(void *)(*(void *)(v4 + 56) + 8 * v13);
    sub_23697BA2C();
    swift_bridgeObjectRetain();
    sub_23697B04C();
    uint64_t result = sub_23697BA4C();
    uint64_t v21 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v11 + 8 * (v22 >> 6))) == 0) {
      break;
    }
    unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v11 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(void *)(v11 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    int64_t v29 = (void *)(*(void *)(v8 + 48) + 16 * v24);
    *int64_t v29 = v19;
    v29[1] = v18;
    *(void *)(*(void *)(v8 + 56) + 8 * v24) = v20;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      goto LABEL_39;
    }
    if (!v5) {
      return v8;
    }
  }
  char v25 = 0;
  unint64_t v26 = (unint64_t)(63 - v21) >> 6;
  while (++v23 != v26 || (v25 & 1) == 0)
  {
    BOOL v27 = v23 == v26;
    if (v23 == v26) {
      unint64_t v23 = 0;
    }
    v25 |= v27;
    uint64_t v28 = *(void *)(v11 + 8 * v23);
    if (v28 != -1)
    {
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23690E168(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23690E368(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_23690E568(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void **)(*(void *)(a4 + 56) + 8 * v16);
    *uint64_t v11 = v20;
    if (v13 == v10)
    {
      id v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23690E768()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_23690E7A8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23690AE38(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(uint64_t **)(v3 + 40));
}

uint64_t sub_23690E7B8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_23690E7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23690E7F0()
{
  return swift_release();
}

uint64_t sub_23690E7F8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 72, 7);
}

unint64_t sub_23690E848(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23690AB14(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(uint64_t **)(v3 + 40));
}

uint64_t sub_23690E880(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
  {
    uint64_t v4 = *(void *)(*(void *)(a4 + 48) + 16 * result);
    swift_bridgeObjectRetain();
    return v4;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_23690E8FC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 64;
  for (uint64_t i = 9; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_23690E97C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

NSUInteger sub_23690E9BC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236909544(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(unsigned __int8 *)(v3 + 32), *(uint64_t **)(v3 + 40));
}

uint64_t sub_23690E9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2367B7DBC(&qword_26AD89410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23690EA38(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_23697A3AC();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23690EA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2367B7DBC((uint64_t *)&unk_26AD8BC30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23690EAF8()
{
  return sub_23697B95C();
}

uint64_t sub_23690EB20()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23690EB30()
{
  return v0;
}

uint64_t sub_23690EB50()
{
  return v0;
}

uint64_t sub_23690EB94()
{
  return sub_23697B95C();
}

void sub_23690EBC4()
{
  *(void *)(v1 - 192) = v0;
}

uint64_t sub_23690EBEC()
{
  return sub_23697AF6C();
}

uint64_t sub_23690EC08(uint64_t a1, uint64_t a2)
{
  sub_2367BA98C(a1, a2);
  return sub_23697ACDC();
}

void sub_23690EC30()
{
  *(void *)(v1 - 192) = v0;
}

void sub_23690EC54()
{
  *(void *)(v1 - 192) = v0;
}

uint64_t sub_23690EC78()
{
  return sub_23697B50C();
}

uint64_t sub_23690ECA4(uint64_t a1)
{
  return sub_2367B85F8(a1, 1, v1);
}

void sub_23690ECD4(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

id sub_23690ECF4()
{
  return v0;
}

void sub_23690ED2C()
{
  *(void *)(v1 - 192) = v0;
}

uint64_t sub_23690ED48()
{
  return sub_23697B95C();
}

uint64_t sub_23690ED70()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_23690ED98(uint64_t a1, uint64_t a2)
{
  return sub_2367B7028(a1, a2, 1, v2);
}

void sub_23690EDCC(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = a1;
}

uint64_t sub_23690EDE4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23690EE08()
{
  return v0;
}

uint64_t sub_23690EE24()
{
  return sub_2367B85F8(v1, 1, v0);
}

uint64_t sub_23690EE5C()
{
  return sub_23697B66C();
}

uint64_t sub_23690EE90@<X0>(uint64_t a1@<X8>)
{
  return *(void *)a1;
}

unint64_t sub_23690EEBC()
{
  return sub_2368FE8EC(v1, v0);
}

uint64_t sub_23690EED4()
{
  return sub_236804FAC();
}

uint64_t sub_23690EF00()
{
  return swift_bridgeObjectRelease();
}

void sub_23690EF2C(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

void *DUDocumentGlobals.defaultMaxLength.unsafeMutableAddressor()
{
  return &static DUDocumentGlobals.defaultMaxLength;
}

const char *DUDocumentCategory.ticket.unsafeMutableAddressor()
{
  return "ticket";
}

const char *DUDocumentCategory.receipt.unsafeMutableAddressor()
{
  return "receipt";
}

const char *DUDocumentCategory.taxForm.unsafeMutableAddressor()
{
  return "taxForm";
}

const char *DUDocumentCategory.form.unsafeMutableAddressor()
{
  return "form";
}

const char *DUDocumentCategory.identification.unsafeMutableAddressor()
{
  return "identification";
}

const char *DUDocumentCategory.book.unsafeMutableAddressor()
{
  return "book";
}

const char *DUDocumentCategory.recipe.unsafeMutableAddressor()
{
  return "recipe";
}

const char *DUDocumentCategory.medical.unsafeMutableAddressor()
{
  return "medical";
}

const char *DUStructuredExtractionType.title.unsafeMutableAddressor()
{
  return "title";
}

const char *DUStructuredExtractionType.liveText.unsafeMutableAddressor()
{
  return "liveText";
}

const char *DUStructuredExtractionType.person.unsafeMutableAddressor()
{
  return "person";
}

void *DUStructuredExtractionType.url.unsafeMutableAddressor()
{
  return &static DUStructuredExtractionType.url;
}

const char *DUStructuredExtractionType.phone.unsafeMutableAddressor()
{
  return "phone";
}

const char *DUStructuredExtractionType.address.unsafeMutableAddressor()
{
  return "address";
}

const char *DUStructuredExtractionType.calendarEvent.unsafeMutableAddressor()
{
  return "calendarEvent";
}

const char *DUStructuredExtractionType.hmHome.unsafeMutableAddressor()
{
  return "hmHome";
}

const char *DUStructuredExtractionType.hmRoom.unsafeMutableAddressor()
{
  return "hmRoom";
}

const char *DUStructuredExtractionType.hmAccessory.unsafeMutableAddressor()
{
  return "hmAccessory";
}

void *DUDocumentGlobals.warningMaxLength.unsafeMutableAddressor()
{
  return &static DUDocumentGlobals.warningMaxLength;
}

void *DUDocumentGlobals.noMaxLength.unsafeMutableAddressor()
{
  return &static DUDocumentGlobals.noMaxLength;
}

void *DUDocumentGlobals.htmlStringMaxLength.unsafeMutableAddressor()
{
  return &static DUDocumentGlobals.htmlStringMaxLength;
}

void static DUDocumentCategory.ticket.getter()
{
}

void static DUDocumentCategory.receipt.getter()
{
}

void static DUDocumentCategory.taxForm.getter()
{
}

uint64_t static DUDocumentCategory.form.getter()
{
  return 1836216166;
}

uint64_t static DUDocumentCategory.identification.getter()
{
  return 0x696669746E656469;
}

uint64_t static DUDocumentCategory.book.getter()
{
  return 1802465122;
}

const char *DUDocumentCategory.worksheet.unsafeMutableAddressor()
{
  return "worksheet";
}

uint64_t static DUDocumentCategory.worksheet.getter()
{
  return 0x656568736B726F77;
}

void static DUDocumentCategory.recipe.getter()
{
}

void static DUDocumentCategory.medical.getter()
{
}

const char *DUDocumentCategory.presentation.unsafeMutableAddressor()
{
  return "presentation";
}

uint64_t static DUDocumentCategory.presentation.getter()
{
  return 0x61746E6573657270;
}

id DUDocumentCategory.init()()
{
  return sub_23690FA40(type metadata accessor for DUDocumentCategory);
}

uint64_t type metadata accessor for DUDocumentCategory()
{
  return self;
}

id DUDocumentCategory.__deallocating_deinit()
{
  return sub_23690FAD8(type metadata accessor for DUDocumentCategory);
}

unint64_t static DUStructuredExtractionType.title.getter()
{
  return sub_23690FB28(1819568500);
}

unint64_t static DUStructuredExtractionType.phone.getter()
{
  return sub_23690FB28(1852794992);
}

uint64_t static DUStructuredExtractionType.url.getter()
{
  return 7107189;
}

void static DUStructuredExtractionType.address.getter()
{
}

uint64_t static DUStructuredExtractionType.calendarEvent.getter()
{
  return 0x7261646E656C6163;
}

uint64_t static DUStructuredExtractionType.liveText.getter()
{
  return 0x747865546576696CLL;
}

void static DUStructuredExtractionType.person.getter()
{
}

void static DUStructuredExtractionType.hmHome.getter()
{
}

void static DUStructuredExtractionType.hmRoom.getter()
{
}

uint64_t static DUStructuredExtractionType.hmAccessory.getter()
{
  return 0x7373656363416D68;
}

id DUStructuredExtractionType.init()()
{
  return sub_23690FA40(type metadata accessor for DUStructuredExtractionType);
}

uint64_t type metadata accessor for DUStructuredExtractionType()
{
  return self;
}

id DUStructuredExtractionType.__deallocating_deinit()
{
  return sub_23690FAD8(type metadata accessor for DUStructuredExtractionType);
}

uint64_t static DUDocumentGlobals.defaultMaxLength.getter()
{
  return 5120;
}

uint64_t static DUDocumentGlobals.noMaxLength.getter()
{
  return 0;
}

id DUDocumentGlobals.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id DUDocumentGlobals.init()()
{
  return sub_23690FA40(type metadata accessor for DUDocumentGlobals);
}

id sub_23690FA40(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for DUDocumentGlobals()
{
  return self;
}

id DUDocumentGlobals.__deallocating_deinit()
{
  return sub_23690FAD8(type metadata accessor for DUDocumentGlobals);
}

id sub_23690FAD8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

unint64_t sub_23690FB28(uint64_t a1)
{
  return a1 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
}

uint64_t _s21DocumentUnderstanding17DUDocumentGlobalsC19htmlStringMaxLengthSivgZ_0()
{
  return 100000;
}

void *sub_23690FB40(void *a1)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_26E9CD5A0;
  uint64_t v2 = a1[3];
  if (v2)
  {
    MEMORY[0x237E07550](v2, 0x1000C8052888210);
    a1[3] = 0;
  }
  return a1;
}

uint64_t sub_23690FBA4(uint64_t a1, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  *(void *)a1 = &unk_26E9CD490;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &unk_26E9CD5A0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  uint64_t v7 = (uint64_t *)(a1 + 96);
  *(void *)(a1 + 56) = &unk_26E9CD5A0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(_DWORD *)(a1 + 88) = 0;
  sub_236944CDC((void *)(a1 + 96));
  sub_23690FCE4(a1, a3, a4, &v9);
  sub_236944F04(v7, &v9);
  sub_236944CE4(&v9);
  return a1;
}

void sub_23690FC94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_236944CE4((uint64_t *)va);
  sub_236944CE4(v5);
  sub_23690FB40(v4);
  sub_23690FB40(v3);
  uint64_t v7 = *v2;
  *uint64_t v2 = 0;
  if (v7) {
    sub_2369141F4((uint64_t)v2, v7);
  }
  _Unwind_Resume(a1);
}

void *sub_23690FCE4@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = a2;
  unint64_t v9 = a3;
  uint64_t result = sub_23691038C(a2, a3, (_DWORD *)(a1 + 88), a4);
  if (!*a4)
  {
    sub_236944CE4(a4);
    uint64_t result = sub_236942FE0(&v8, 4uLL, a4);
    if (!*a4)
    {
      sub_236944CE4(a4);
      uint64_t result = sub_23691038C(v8, v9, (_DWORD *)(a1 + 92), a4);
      if (!*a4)
      {
        sub_236944CE4(a4);
        uint64_t result = sub_236942FE0(&v8, 4uLL, a4);
        if (!*a4)
        {
          sub_236944CE4(a4);
          int v7 = 0;
          uint64_t result = sub_236910588(v8, v9, &v7, a4);
          if (!*a4)
          {
            sub_236944CE4(a4);
            uint64_t result = sub_236942FE0(&v8, 4uLL, a4);
            if (!*a4)
            {
              sub_236944CE4(a4);
              sub_236910784();
            }
          }
        }
      }
    }
  }
  return result;
}

void sub_23691034C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_23691088C((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_23691038C@<X0>(_DWORD *a1@<X0>, unint64_t a2@<X1>, _DWORD *a3@<X2>, void *a4@<X8>)
{
  if (a2 <= 3)
  {
    unsigned int v7 = 13;
    unsigned int v6 = (void *)sub_236912F84((uint64_t)v8);
    sub_236914270(v6, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/util.h", 62);
    sub_236914270(v8, (uint64_t)"(", 1);
    std::ostream::operator<<();
    sub_236914270(v8, (uint64_t)") [", 3);
    sub_236914270(v8, (uint64_t)"string.size() >= sizeof(T)", 26);
    sub_236914270(v8, (uint64_t)"] ", 2);
    sub_2369107FC(&v7, (uint64_t)a4);
    v8[0] = *MEMORY[0x263F8C2C8];
    *(void *)((char *)v8 + *(void *)(v8[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
    v8[1] = MEMORY[0x263F8C318] + 16;
    if (v9 < 0) {
      operator delete((void *)v8[9]);
    }
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    return (void *)MEMORY[0x237E07510](&v10);
  }
  else
  {
    *a3 = *a1;
    return sub_236944CDC(a4);
  }
}

void sub_236910570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_236910588@<X0>(_DWORD *a1@<X0>, unint64_t a2@<X1>, _DWORD *a3@<X2>, void *a4@<X8>)
{
  if (a2 <= 3)
  {
    unsigned int v7 = 13;
    unsigned int v6 = (void *)sub_236912F84((uint64_t)v8);
    sub_236914270(v6, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/util.h", 62);
    sub_236914270(v8, (uint64_t)"(", 1);
    std::ostream::operator<<();
    sub_236914270(v8, (uint64_t)") [", 3);
    sub_236914270(v8, (uint64_t)"string.size() >= sizeof(T)", 26);
    sub_236914270(v8, (uint64_t)"] ", 2);
    sub_2369107FC(&v7, (uint64_t)a4);
    v8[0] = *MEMORY[0x263F8C2C8];
    *(void *)((char *)v8 + *(void *)(v8[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
    v8[1] = MEMORY[0x263F8C318] + 16;
    if (v9 < 0) {
      operator delete((void *)v8[9]);
    }
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    return (void *)MEMORY[0x237E07510](&v10);
  }
  else
  {
    *a3 = *a1;
    return sub_236944CDC(a4);
  }
}

void sub_23691076C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_236910784()
{
}

void sub_2369107D8(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x20C4093837F09);
  _Unwind_Resume(a1);
}

void sub_2369107FC(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  std::stringbuf::str();
  if ((v7 & 0x80u) == 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if ((v7 & 0x80u) == 0) {
    unint64_t v5 = v7;
  }
  else {
    unint64_t v5 = (unint64_t)__p[1];
  }
  sub_236944E48(a2, v3, v4, v5);
  if ((char)v7 < 0) {
    operator delete(__p[0]);
  }
}

void sub_236910870(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23691088C(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x263F8C2C8];
  uint64_t v3 = *MEMORY[0x263F8C2C8];
  *(void *)(a1 + 8) = *MEMORY[0x263F8C2C8];
  *(void *)(a1 + 8 + *(void *)(v3 - 24)) = *(void *)(v2 + 24);
  *(void *)(a1 + 16) = MEMORY[0x263F8C318] + 16;
  if (*(char *)(a1 + 103) < 0) {
    operator delete(*(void **)(a1 + 80));
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x237E07510](a1 + 120);
  return a1;
}

void *sub_236910994(uint64_t a1)
{
  uint64_t v1 = *(const void **)(a1 + 8);
  if (!v1
    || (uint64_t result = __dynamic_cast(v1, (const struct __class_type_info *)&unk_26E9CD570, (const struct __class_type_info *)&unk_26E9CE508, 16)) == 0)
  {
    char v7 = 1;
    uint64_t v3 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"model_interface.cc", 18);
    sub_236914270(v3, (uint64_t)"(", 1);
    uint64_t v4 = (void *)std::ostream::operator<<();
    unint64_t v5 = sub_236914270(v4, (uint64_t)") [", 3);
    unsigned int v6 = sub_236914270(v5, (uint64_t)"(model_proto = dynamic_cast<const ModelProto *>(model_proto_))", 62);
    sub_236914270(v6, (uint64_t)"] ", 2);
    sub_23691311C(&v7);
    return 0;
  }
  return result;
}

void sub_236910A78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
}

void *sub_236910A8C(void *a1)
{
  *a1 = &unk_26E9CD490;
  sub_236944CE4(a1 + 12);
  a1[8] = 0;
  a1[9] = 0;
  a1[7] = &unk_26E9CD5A0;
  uint64_t v2 = a1[10];
  if (v2)
  {
    MEMORY[0x237E07550](v2, 0x1000C8052888210);
    a1[10] = 0;
  }
  a1[4] = 0;
  a1[5] = 0;
  a1[3] = &unk_26E9CD5A0;
  uint64_t v3 = a1[6];
  if (v3)
  {
    MEMORY[0x237E07550](v3, 0x1000C8052888210);
    a1[6] = 0;
  }
  uint64_t v4 = (uint64_t *)a1[2];
  a1[2] = 0;
  if (v4) {
    sub_2369141F4((uint64_t)(a1 + 2), v4);
  }
  return a1;
}

const char *sub_236910B74(uint64_t a1)
{
  (*(void (**)(void))(**(void **)(a1 + 8) + 32))(*(void *)(a1 + 8));
  if (v2) {
    return (const char *)(*(uint64_t (**)(void))(**(void **)(a1 + 8) + 32))(*(void *)(a1 + 8));
  }
  else {
    return "<unk>";
  }
}

const char *sub_236910BF8(uint64_t a1)
{
  (*(void (**)(void))(**(void **)(a1 + 8) + 40))(*(void *)(a1 + 8));
  if (v2) {
    return (const char *)(*(uint64_t (**)(void))(**(void **)(a1 + 8) + 40))(*(void *)(a1 + 8));
  }
  else {
    return "<s>";
  }
}

const char *sub_236910C7C(uint64_t a1)
{
  (*(void (**)(void))(**(void **)(a1 + 8) + 48))(*(void *)(a1 + 8));
  if (v2) {
    return (const char *)(*(uint64_t (**)(void))(**(void **)(a1 + 8) + 48))(*(void *)(a1 + 8));
  }
  else {
    return "</s>";
  }
}

const char *sub_236910D00(uint64_t a1)
{
  (*(void (**)(void))(**(void **)(a1 + 8) + 56))(*(void *)(a1 + 8));
  if (v2) {
    return (const char *)(*(uint64_t (**)(void))(**(void **)(a1 + 8) + 56))(*(void *)(a1 + 8));
  }
  else {
    return "<pad>";
  }
}

uint64_t sub_236910D84(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  unsigned int v7 = 0;
  sub_236910E08(a1 + 56, a2, (int *)&v7, a3, 0);
  uint64_t result = v7;
  if (v7 == -1)
  {
    sub_236910E08(a1 + 24, a2, (int *)&v7, a3, 0);
    uint64_t result = v7;
    if (v7 == -1) {
      return *(unsigned int *)(a1 + 88);
    }
  }
  return result;
}

uint64_t sub_236910E08(uint64_t result, unsigned char *a2, int *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(result + 16);
  unsigned int v6 = *(_DWORD *)(v5 + 4 * a5);
  if (a4)
  {
    while (1)
    {
      int v7 = *a2++;
      a5 ^= (v6 >> 10 << ((v6 >> 6) & 8)) ^ v7;
      unsigned int v6 = *(_DWORD *)(v5 + 4 * a5);
      if ((v6 & 0x800000FF) != v7) {
        break;
      }
      if (!--a4) {
        goto LABEL_9;
      }
    }
  }
  else
  {
    int v8 = *a2;
    if (*a2)
    {
      char v9 = a2 + 1;
      while (1)
      {
        a5 ^= (v6 >> 10 << ((v6 >> 6) & 8)) ^ v8;
        unsigned int v6 = *(_DWORD *)(v5 + 4 * a5);
        if ((v6 & 0x800000FF) != v8) {
          break;
        }
        int v10 = *v9++;
        int v8 = v10;
        if (!v10) {
          goto LABEL_9;
        }
      }
    }
    else
    {
LABEL_9:
      if ((v6 & 0x100) != 0)
      {
        int v11 = *(_DWORD *)(v5 + 4 * (a5 ^ (v6 >> 10 << ((v6 >> 6) & 8)))) & 0x7FFFFFFF;
        goto LABEL_12;
      }
    }
  }
  int v11 = -1;
LABEL_12:
  *a3 = v11;
  return result;
}

uint64_t sub_236910EB8@<X0>(uint64_t a1@<X8>)
{
  if ((int)sub_236942B98() <= 2)
  {
    char v9 = 0;
    uint64_t v2 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"model_interface.cc", 18);
    sub_236914270(v2, (uint64_t)"(", 1);
    uint64_t v3 = (void *)std::ostream::operator<<();
    uint64_t v4 = sub_236914270(v3, (uint64_t)") ", 2);
    uint64_t v5 = sub_236914270(v4, (uint64_t)"LOG(", 4);
    unsigned int v6 = sub_236914270(v5, (uint64_t)"ERROR", 5);
    int v7 = sub_236914270(v6, (uint64_t)") ", 2);
    sub_236914270(v7, (uint64_t)"Not implemented.", 16);
    sub_23691311C(&v9);
  }
  return sub_236944E48(a1, 12, "Not implemented.", 16);
}

void sub_236910F90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
}

uint64_t sub_236910FA4@<X0>(uint64_t a1@<X8>)
{
  if ((int)sub_236942B98() <= 2)
  {
    char v9 = 0;
    uint64_t v2 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"model_interface.cc", 18);
    sub_236914270(v2, (uint64_t)"(", 1);
    uint64_t v3 = (void *)std::ostream::operator<<();
    uint64_t v4 = sub_236914270(v3, (uint64_t)") ", 2);
    uint64_t v5 = sub_236914270(v4, (uint64_t)"LOG(", 4);
    unsigned int v6 = sub_236914270(v5, (uint64_t)"ERROR", 5);
    int v7 = sub_236914270(v6, (uint64_t)") ", 2);
    sub_236914270(v7, (uint64_t)"Not implemented.", 16);
    sub_23691311C(&v9);
  }
  return sub_236944E48(a1, 12, "Not implemented.", 16);
}

void sub_23691107C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
}

void sub_236911090(uint64_t a1)
{
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  uint64_t v49 = 0;
  uint64_t v50 = &v51;
  uint64_t v47 = &v48;
  uint64_t v48 = 0;
  *(_DWORD *)(a1 + 88) = -1;
  v46[0] = 0;
  v46[1] = 0;
  uint64_t v45 = (uint64_t *)v46;
  LOBYTE(v53) = 0;
  sub_23691469C(&__p, 0x100uLL, (unsigned __int8 *)&v53);
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2) {
    uint64_t v3 = v2 - 16;
  }
  else {
    uint64_t v3 = 0;
  }
  if (*(int *)(v3 + 64) < 1)
  {
LABEL_38:
    if (*(_DWORD *)(a1 + 88) == -1)
    {
      sub_236944E48(&v53, 13, "unk is not defined.", 19);
      sub_236944F04((uint64_t *)(a1 + 96), &v53);
    }
    else
    {
      char v25 = *(unsigned char **)(v3 + 80);
      if (!v25) {
        char v25 = &unk_26889AD60;
      }
      if (!v25[248]
        || (*(void *)&long long v53 = __p,
            DWORD2(v53) = 0,
            sub_236914DC8((uint64_t)&v53, v44, (uint64_t)&v41),
            v41.__r_.__value_.__l.__data_ == (char *)__p + 8 * (v44 >> 6))
        && LODWORD(v41.__r_.__value_.__r.__words[1]) == (v44 & 0x3F))
      {
        if (!v52
          || (sub_236911960(a1 + 24, &v50, (uint64_t)&v53),
              sub_236944F04((uint64_t *)(a1 + 96), &v53),
              sub_236944CE4((uint64_t *)&v53),
              (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)a1 + 16))(&v53, a1),
              uint64_t v26 = v53,
              sub_236944CE4((uint64_t *)&v53),
              !v26))
        {
          if (!v49
            || (sub_236911960(a1 + 56, &v47, (uint64_t)&v53),
                sub_236944F04((uint64_t *)(a1 + 96), &v53),
                sub_236944CE4((uint64_t *)&v53),
                (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)a1 + 16))(&v53, a1),
                uint64_t v27 = v53,
                sub_236944CE4((uint64_t *)&v53),
                !v27))
          {
            sub_236911E44();
          }
        }
        goto LABEL_69;
      }
      sub_236944F04((uint64_t *)(a1 + 96), &v53);
    }
LABEL_68:
    sub_236944CE4((uint64_t *)&v53);
    goto LABEL_69;
  }
  int v4 = 0;
  while (1)
  {
    uint64_t v5 = sub_2369131F8(v3 + 56, v4);
    uint64_t v6 = v5;
    unint64_t v7 = *(void *)(v5 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    if (*(char *)(v7 + 23) < 0)
    {
      if (!*(void *)(v7 + 8))
      {
LABEL_50:
        sub_236944E48(&v53, 13, "piece must not be empty.", 24);
        sub_236944F04((uint64_t *)(a1 + 96), &v53);
        goto LABEL_68;
      }
    }
    else if (!*(unsigned char *)(v7 + 23))
    {
      goto LABEL_50;
    }
    unsigned int v9 = *(_DWORD *)(v5 + 60);
    BOOL v10 = v9 > 5;
    int v11 = (1 << v9) & 0x32;
    BOOL v12 = v10 || v11 == 0;
    uint64_t v13 = (uint64_t **)(v12 ? &v47 : &v50);
    if ((v8 & 0x80) != 0)
    {
      unint64_t v14 = *(void *)v7;
      uint64_t v8 = *(void *)(v7 + 8);
    }
    else
    {
      unint64_t v14 = v7;
    }
    *(void *)&long long v53 = v14;
    *((void *)&v53 + 1) = v8;
    LODWORD(v54) = v4;
    sub_236914954(v13, (uint64_t)&v53, (uint64_t)&v53);
    if ((v15 & 1) == 0) {
      break;
    }
    int v16 = *(_DWORD *)(v6 + 60);
    if (v16 == 4)
    {
      unint64_t v17 = *(void *)(v6 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v17 + 23) < 0)
      {
        unint64_t v19 = *(void *)v17;
        uint64_t v18 = *(void *)(v17 + 8);
      }
      else
      {
        uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
        unint64_t v19 = *(void *)(v6 + 48) & 0xFFFFFFFFFFFFFFFELL;
      }
      *(void *)&long long v53 = v19;
      *((void *)&v53 + 1) = v18;
      sub_236914D44(&v45, (uint64_t)&v53, &v53);
      int v16 = *(_DWORD *)(v6 + 60);
    }
    if (v16 == 6)
    {
      uint64_t v20 = *(unsigned char **)(v3 + 80);
      if (!v20) {
        uint64_t v20 = &unk_26889AD60;
      }
      if (!v20[248])
      {
        std::operator+<char>();
        long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
        int64_t v54 = v35->__r_.__value_.__r.__words[2];
        long long v53 = v36;
        v35->__r_.__value_.__l.__size_ = 0;
        v35->__r_.__value_.__r.__words[2] = 0;
        v35->__r_.__value_.__r.__words[0] = 0;
        if (v54 >= 0) {
          uint64_t v37 = (const char *)&v53;
        }
        else {
          uint64_t v37 = (const char *)v53;
        }
LABEL_78:
        size_t v40 = strlen(v37);
        sub_236944E48(&v42, 13, v37, v40);
        sub_236944F04((uint64_t *)(a1 + 96), &v42);
        sub_236944CE4(&v42);
        if (SHIBYTE(v54) < 0) {
          operator delete((void *)v53);
        }
        if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0)
        {
          uint64_t v34 = (void *)v41.__r_.__value_.__r.__words[0];
          goto LABEL_82;
        }
        goto LABEL_69;
      }
      unint64_t v21 = *(void *)(v6 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v21 + 23) < 0)
      {
        unint64_t v23 = *(void **)v21;
        size_t v22 = *(void *)(v21 + 8);
      }
      else
      {
        size_t v22 = *(unsigned __int8 *)(v21 + 23);
        unint64_t v23 = (void *)(*(void *)(v6 + 48) & 0xFFFFFFFFFFFFFFFELL);
      }
      unsigned int v24 = sub_236911810(v23, v22);
      if ((v24 & 0x80000000) != 0)
      {
        std::operator+<char>();
        uint64_t v38 = std::string::append(&v41, " is invalid.");
        long long v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
        int64_t v54 = v38->__r_.__value_.__r.__words[2];
        long long v53 = v39;
        v38->__r_.__value_.__l.__size_ = 0;
        v38->__r_.__value_.__r.__words[2] = 0;
        v38->__r_.__value_.__r.__words[0] = 0;
        if (v54 >= 0) {
          uint64_t v37 = (const char *)&v53;
        }
        else {
          uint64_t v37 = (const char *)v53;
        }
        goto LABEL_78;
      }
      *(void *)((char *)__p + (((unint64_t)v24 >> 3) & 0x1FFFFFF8)) |= 1 << v24;
    }
    else if (v16 == 2)
    {
      if ((*(_DWORD *)(a1 + 88) & 0x80000000) == 0)
      {
        sub_236944E48(&v53, 13, "unk is already defined.", 23);
        sub_236944F04((uint64_t *)(a1 + 96), &v53);
        goto LABEL_68;
      }
      *(_DWORD *)(a1 + 88) = v4;
    }
    if (++v4 >= *(_DWORD *)(v3 + 64)) {
      goto LABEL_38;
    }
  }
  unint64_t v28 = *(void *)(v6 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v28 + 23) >= 0) {
    size_t v29 = *(unsigned __int8 *)(v28 + 23);
  }
  else {
    size_t v29 = *(void *)(v28 + 8);
  }
  unint64_t v30 = &v53;
  sub_236914CBC((uint64_t)&v53, v29 + 20);
  if (v54 < 0) {
    unint64_t v30 = (long long *)v53;
  }
  if (v29)
  {
    if (*(char *)(v28 + 23) >= 0) {
      uint64_t v31 = (const void *)v28;
    }
    else {
      uint64_t v31 = *(const void **)v28;
    }
    memmove(v30, v31, v29);
  }
  strcpy((char *)v30 + v29, " is already defined.");
  if (v54 >= 0) {
    uint64_t v32 = (const char *)&v53;
  }
  else {
    uint64_t v32 = (const char *)v53;
  }
  size_t v33 = strlen(v32);
  sub_236944E48(&v41, 13, v32, v33);
  sub_236944F04((uint64_t *)(a1 + 96), &v41);
  sub_236944CE4((uint64_t *)&v41);
  if (SHIBYTE(v54) < 0)
  {
    uint64_t v34 = (void *)v53;
LABEL_82:
    operator delete(v34);
  }
LABEL_69:
  if (__p) {
    operator delete(__p);
  }
  sub_236914648((uint64_t)&v45, v46[0]);
  sub_236914648((uint64_t)&v47, v48);
  sub_236914648((uint64_t)&v50, v51);
}

void sub_2369116F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, char a19, void *a20,uint64_t a21,char a22,void *a23,uint64_t a24,char a25,void *a26)
{
  sub_236944CE4(&a15);
  if (*(char *)(v26 - 89) < 0) {
    operator delete(*(void **)(v26 - 112));
  }
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a16) {
    operator delete(a16);
  }
  sub_236914648((uint64_t)&a19, a20);
  sub_236914648((uint64_t)&a22, a23);
  sub_236914648((uint64_t)&a25, a26);
  _Unwind_Resume(a1);
}

uint64_t sub_236911810(void *__src, size_t __len)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2688A6E58, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2688A6E58))
  {
    sub_236912758();
  }
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    sub_236914158();
  }
  int v4 = (void *)qword_2688A6E50;
  if (__len >= 0x17)
  {
    size_t v6 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v6 = __len | 7;
    }
    size_t v7 = v6 + 1;
    uint64_t v5 = (void **)operator new(v6 + 1);
    __dst[1] = (void *)__len;
    unint64_t v12 = v7 | 0x8000000000000000;
    __dst[0] = v5;
    goto LABEL_9;
  }
  HIBYTE(v12) = __len;
  uint64_t v5 = __dst;
  if (__len) {
LABEL_9:
  }
    memmove(v5, __src, __len);
  *((unsigned char *)v5 + __len) = 0;
  uint64_t v8 = sub_236914EF8(v4, (unsigned __int8 *)__dst);
  unsigned int v9 = v8;
  if (SHIBYTE(v12) < 0)
  {
    operator delete(__dst[0]);
    if (v9) {
      return v9[40];
    }
  }
  else if (v8)
  {
    return v9[40];
  }
  return 0xFFFFFFFFLL;
}

void sub_236911930(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

uint64_t sub_236911960@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (a2[2])
  {
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    long long v36 = 0;
    __p = 0;
    uint64_t v32 = 0;
    size_t v33 = 0;
    int v4 = a2 + 1;
    uint64_t v3 = (void *)*a2;
    while (1)
    {
      uint64_t v5 = v3[4];
      size_t v6 = v35;
      if (v35 >= v36)
      {
        uint64_t v8 = (v35 - (unsigned char *)v34) >> 3;
        if ((unint64_t)(v8 + 1) >> 61) {
          sub_236913FC4();
        }
        unint64_t v9 = (v36 - (unsigned char *)v34) >> 2;
        if (v9 <= v8 + 1) {
          unint64_t v9 = v8 + 1;
        }
        if ((unint64_t)(v36 - (unsigned char *)v34) >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v10 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v10 = v9;
        }
        if (v10) {
          int v11 = (char *)sub_2369147B8((uint64_t)&v36, v10);
        }
        else {
          int v11 = 0;
        }
        unint64_t v12 = &v11[8 * v8];
        *(void *)unint64_t v12 = v5;
        size_t v7 = v12 + 8;
        unint64_t v14 = (char *)v34;
        uint64_t v13 = v35;
        if (v35 != v34)
        {
          do
          {
            uint64_t v15 = *((void *)v13 - 1);
            v13 -= 8;
            *((void *)v12 - 1) = v15;
            v12 -= 8;
          }
          while (v13 != v14);
          uint64_t v13 = (char *)v34;
        }
        uint64_t v34 = v12;
        uint64_t v35 = v7;
        long long v36 = &v11[8 * v10];
        if (v13) {
          operator delete(v13);
        }
      }
      else
      {
        *(void *)uint64_t v35 = v5;
        size_t v7 = v6 + 8;
      }
      uint64_t v35 = v7;
      int v16 = v32;
      if (v32 >= v33)
      {
        uint64_t v18 = __p;
        uint64_t v19 = (v32 - __p) >> 2;
        unint64_t v20 = v19 + 1;
        if ((unint64_t)(v19 + 1) >> 62) {
          sub_236913FC4();
        }
        uint64_t v21 = v33 - __p;
        if ((v33 - __p) >> 1 > v20) {
          unint64_t v20 = v21 >> 1;
        }
        if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v22 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v22 = v20;
        }
        if (v22)
        {
          unint64_t v23 = (char *)sub_236914FFC((uint64_t)&v33, v22);
          uint64_t v18 = __p;
          int v16 = v32;
        }
        else
        {
          unint64_t v23 = 0;
        }
        unsigned int v24 = &v23[4 * v19];
        *(_DWORD *)unsigned int v24 = *((_DWORD *)v3 + 12);
        unint64_t v17 = v24 + 4;
        while (v16 != v18)
        {
          int v25 = *((_DWORD *)v16 - 1);
          v16 -= 4;
          *((_DWORD *)v24 - 1) = v25;
          v24 -= 4;
        }
        __p = v24;
        size_t v33 = &v23[4 * v22];
        if (v18) {
          operator delete(v18);
        }
      }
      else
      {
        *(_DWORD *)uint64_t v32 = *((_DWORD *)v3 + 12);
        unint64_t v17 = v32 + 4;
      }
      uint64_t v32 = v17;
      uint64_t v26 = (void *)v3[1];
      if (v26)
      {
        do
        {
          uint64_t v27 = v26;
          uint64_t v26 = (void *)*v26;
        }
        while (v26);
      }
      else
      {
        do
        {
          uint64_t v27 = (void *)v3[2];
          BOOL v28 = *v27 == (void)v3;
          uint64_t v3 = v27;
        }
        while (!v28);
      }
      uint64_t v3 = v27;
      if (v27 == v4) {
        sub_236912840(a1, (v35 - (unsigned char *)v34) >> 3, (unint64_t)v34, 0, (unint64_t)__p, 0);
      }
    }
  }
  return sub_236944E48(a3, 13, "no pieces are loaded.", 21);
}

void sub_236911DEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21)
{
  if (__p) {
    operator delete(__p);
  }
  if (a17) {
    operator delete(a17);
  }
  if (a20) {
    operator delete(a20);
  }
  _Unwind_Resume(exception_object);
}

void sub_236911E44()
{
}

void sub_236911E98(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x20C4093837F09);
  _Unwind_Resume(a1);
}

void sub_236911EBC(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  memset(&v32, 0, sizeof(v32));
  std::string::resize(&v32, 4uLL, 0);
  if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v4 = &v32;
  }
  else {
    int v4 = (std::string *)v32.__r_.__value_.__r.__words[0];
  }
  LODWORD(v4->__r_.__value_.__l.__data_) = *(_DWORD *)(a1 + 88);
  if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v5 = &v32;
  }
  else {
    uint64_t v5 = (std::string *)v32.__r_.__value_.__r.__words[0];
  }
  if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v32.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v32.__r_.__value_.__l.__size_;
  }
  std::string::append(a2, (const std::string::value_type *)v5, size);
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v32.__r_.__value_.__l.__data_);
  }
  memset(&v32, 0, sizeof(v32));
  std::string::resize(&v32, 4uLL, 0);
  if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v7 = &v32;
  }
  else {
    size_t v7 = (std::string *)v32.__r_.__value_.__r.__words[0];
  }
  LODWORD(v7->__r_.__value_.__l.__data_) = *(_DWORD *)(a1 + 92);
  if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v8 = &v32;
  }
  else {
    uint64_t v8 = (std::string *)v32.__r_.__value_.__r.__words[0];
  }
  if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v9 = HIBYTE(v32.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v9 = v32.__r_.__value_.__l.__size_;
  }
  std::string::append(a2, (const std::string::value_type *)v8, v9);
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v32.__r_.__value_.__l.__data_);
  }
  sub_236919A58(*(void *)(a1 + 16), &v32);
  int v10 = HIBYTE(v32.__r_.__value_.__r.__words[2]);
  int v11 = v32.__r_.__value_.__r.__words[1];
  memset(&__p, 0, sizeof(__p));
  std::string::resize(&__p, 4uLL, 0);
  if ((v10 & 0x80u) == 0) {
    int v12 = v10;
  }
  else {
    int v12 = v11;
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  LODWORD(p_p->__r_.__value_.__l.__data_) = v12;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    unint64_t v14 = &__p;
  }
  else {
    unint64_t v14 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v15 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v15 = __p.__r_.__value_.__l.__size_;
  }
  std::string::append(a2, (const std::string::value_type *)v14, v15);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v16 = &v32;
  }
  else {
    int v16 = (std::string *)v32.__r_.__value_.__r.__words[0];
  }
  if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v17 = HIBYTE(v32.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v17 = v32.__r_.__value_.__l.__size_;
  }
  std::string::append(a2, (const std::string::value_type *)v16, v17);
  sub_236942F7C(a2);
  uint64_t v19 = *(void *)(a1 + 32);
  uint64_t v18 = *(const std::string::value_type **)(a1 + 40);
  memset(&__p, 0, sizeof(__p));
  std::string::resize(&__p, 4uLL, 0);
  std::string::size_type v20 = 4 * v19;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v21 = &__p;
  }
  else {
    uint64_t v21 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  LODWORD(v21->__r_.__value_.__l.__data_) = v20;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    unint64_t v22 = &__p;
  }
  else {
    unint64_t v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v23 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v23 = __p.__r_.__value_.__l.__size_;
  }
  std::string::append(a2, (const std::string::value_type *)v22, v23);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::string::append(a2, v18, v20);
  sub_236942F7C(a2);
  uint64_t v26 = a1 + 64;
  uint64_t v24 = *(void *)(a1 + 64);
  int v25 = *(const std::string::value_type **)(v26 + 8);
  memset(&__p, 0, sizeof(__p));
  std::string::resize(&__p, 4uLL, 0);
  std::string::size_type v27 = 4 * v24;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    BOOL v28 = &__p;
  }
  else {
    BOOL v28 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  LODWORD(v28->__r_.__value_.__l.__data_) = v27;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v29 = &__p;
  }
  else {
    size_t v29 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v30 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v30 = __p.__r_.__value_.__l.__size_;
  }
  std::string::append(a2, (const std::string::value_type *)v29, v30);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::string::append(a2, v25, v27);
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v32.__r_.__value_.__l.__data_);
  }
}

void sub_236912184(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v20 + 23) < 0) {
    operator delete(*(void **)v20);
  }
  _Unwind_Resume(exception_object);
}

void sub_2369121FC(unsigned __int8 *__s1@<X0>, uint64_t a2@<X1>, char a3@<W2>, int a4@<W3>, unsigned __int8 ***a5@<X8>)
{
  size_t v6 = __s1;
  uint64_t v8 = &__s1[a2];
  *a5 = 0;
  a5[1] = 0;
  a5[2] = 0;
  if ((a3 & 1) == 0)
  {
    if (a2 < 1) {
      return;
    }
    size_t v40 = 0;
    int v41 = 0;
    uint64_t v42 = a5 + 2;
    uint64_t v43 = __s1;
    while (1)
    {
      int v44 = asc_236999B08[(unint64_t)*v43 >> 4];
      if ((int)v8 - (int)v43 < v44) {
        int v44 = v8 - v43;
      }
      uint64_t v45 = v44;
      if (v44 == 3)
      {
        int v46 = memcmp(v43, "▁", 3uLL);
        int v47 = v46 == 0;
        if (v43 == v6) {
          goto LABEL_62;
        }
        if ((v41 & a4 & 1) == 0 && !v46)
        {
          int v47 = 1;
LABEL_62:
          if ((unint64_t)v40 >= *v42)
          {
            uint64_t v48 = ((char *)v40 - (char *)*a5) >> 4;
            if ((unint64_t)(v48 + 1) >> 60) {
              sub_236913FC4();
            }
            uint64_t v49 = *v42 - (void)*a5;
            uint64_t v50 = v49 >> 3;
            if (v49 >> 3 <= (unint64_t)(v48 + 1)) {
              uint64_t v50 = v48 + 1;
            }
            if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFF0) {
              unint64_t v51 = 0xFFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v51 = v50;
            }
            uint64_t v52 = (char *)sub_236914EC0((uint64_t)(a5 + 2), v51);
            int64_t v54 = (unsigned __int8 **)&v52[16 * v48];
            *int64_t v54 = v43;
            v54[1] = 0;
            char v56 = (char *)*a5;
            uint64_t v55 = (char *)a5[1];
            os_log_type_t v57 = v54;
            if (v55 != (char *)*a5)
            {
              do
              {
                *((_OWORD *)v57 - 1) = *((_OWORD *)v55 - 1);
                v57 -= 2;
                v55 -= 16;
              }
              while (v55 != v56);
              uint64_t v55 = (char *)*a5;
            }
            size_t v40 = v54 + 2;
            *a5 = v57;
            a5[1] = v54 + 2;
            a5[2] = (unsigned __int8 **)&v52[16 * v53];
            if (v55) {
              operator delete(v55);
            }
          }
          else
          {
            *size_t v40 = v43;
            v40[1] = 0;
            v40 += 2;
          }
          a5[1] = v40;
          goto LABEL_76;
        }
        if (v41)
        {
          int v47 = v41 & (v46 == 0);
          goto LABEL_76;
        }
      }
      else if (v43 == v6)
      {
        int v47 = 0;
        goto LABEL_62;
      }
      int v47 = 0;
LABEL_76:
      *(v40 - 1) += v45;
      v43 += v45;
      int v41 = v47;
      if (v43 >= v8) {
        return;
      }
    }
  }
  if (a2 >= 1)
  {
    std::string::size_type v9 = a5 + 2;
    int v10 = sub_236914EC0((uint64_t)(a5 + 2), 1uLL);
    int v12 = (unsigned __int8 **)&v10[2 * v11];
    *int v10 = v6;
    v10[1] = 0;
    uint64_t v13 = (unsigned __int8 **)(v10 + 2);
    std::string::size_type v15 = (char *)*a5;
    unint64_t v14 = (char *)a5[1];
    if (v14 != (char *)*a5)
    {
      do
      {
        *((_OWORD *)v10 - 1) = *((_OWORD *)v14 - 1);
        v10 -= 2;
        v14 -= 16;
      }
      while (v14 != v15);
      unint64_t v14 = (char *)*a5;
    }
    *a5 = (unsigned __int8 **)v10;
    a5[1] = v13;
    a5[2] = v12;
    if (v14) {
      operator delete(v14);
    }
    BOOL v16 = 0;
    a5[1] = v13;
    do
    {
      int v17 = asc_236999B08[(unint64_t)*v6 >> 4];
      if ((int)v8 - (int)v6 < v17) {
        int v17 = v8 - v6;
      }
      uint64_t v18 = v17;
      if (v17 == 3)
      {
        BOOL v19 = memcmp(v6, "▁", 3uLL) == 0;
        if (v19) {
          goto LABEL_18;
        }
      }
      else
      {
        BOOL v19 = 0;
      }
      if ((v16 & a4) != 0)
      {
        if ((unint64_t)v13 >= *v9)
        {
          uint64_t v20 = ((char *)v13 - (char *)*a5) >> 4;
          if ((unint64_t)(v20 + 1) >> 60) {
            sub_236913FC4();
          }
          uint64_t v21 = *v9 - (void)*a5;
          uint64_t v22 = v21 >> 3;
          if (v21 >> 3 <= (unint64_t)(v20 + 1)) {
            uint64_t v22 = v20 + 1;
          }
          if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v23 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v23 = v22;
          }
          uint64_t v24 = (char *)sub_236914EC0((uint64_t)(a5 + 2), v23);
          uint64_t v26 = (unsigned __int8 **)&v24[16 * v20];
          void *v26 = v6;
          v26[1] = 0;
          BOOL v28 = (char *)*a5;
          std::string::size_type v27 = (char *)a5[1];
          size_t v29 = v26;
          if (v27 != (char *)*a5)
          {
            do
            {
              *((_OWORD *)v29 - 1) = *((_OWORD *)v27 - 1);
              v29 -= 2;
              v27 -= 16;
            }
            while (v27 != v28);
            std::string::size_type v27 = (char *)*a5;
          }
          uint64_t v13 = v26 + 2;
          *a5 = v29;
          a5[1] = v26 + 2;
          a5[2] = (unsigned __int8 **)&v24[16 * v25];
          if (v27) {
            operator delete(v27);
          }
        }
        else
        {
          *uint64_t v13 = v6;
          v13[1] = 0;
          v13 += 2;
        }
        BOOL v16 = 0;
        a5[1] = v13;
        goto LABEL_31;
      }
LABEL_18:
      BOOL v16 = v19;
LABEL_31:
      *(v13 - 1) += v18;
      v6 += v18;
      if (v6 < v8 && v19 && (a4 & 1) == 0)
      {
        if ((unint64_t)v13 >= *v9)
        {
          uint64_t v30 = ((char *)v13 - (char *)*a5) >> 4;
          if ((unint64_t)(v30 + 1) >> 60) {
            sub_236913FC4();
          }
          uint64_t v31 = *v9 - (void)*a5;
          uint64_t v32 = v31 >> 3;
          if (v31 >> 3 <= (unint64_t)(v30 + 1)) {
            uint64_t v32 = v30 + 1;
          }
          if ((unint64_t)v31 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v33 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v33 = v32;
          }
          uint64_t v34 = (char *)sub_236914EC0((uint64_t)(a5 + 2), v33);
          long long v36 = (unsigned __int8 **)&v34[16 * v30];
          *long long v36 = v6;
          v36[1] = 0;
          uint64_t v38 = (char *)*a5;
          uint64_t v37 = (char *)a5[1];
          long long v39 = v36;
          if (v37 != (char *)*a5)
          {
            do
            {
              *((_OWORD *)v39 - 1) = *((_OWORD *)v37 - 1);
              v39 -= 2;
              v37 -= 16;
            }
            while (v37 != v38);
            uint64_t v37 = (char *)*a5;
          }
          uint64_t v13 = v36 + 2;
          *a5 = v39;
          a5[1] = v36 + 2;
          a5[2] = (unsigned __int8 **)&v34[16 * v35];
          if (v37) {
            operator delete(v37);
          }
        }
        else
        {
          *uint64_t v13 = v6;
          v13[1] = 0;
          v13 += 2;
        }
        a5[1] = v13;
      }
    }
    while (v6 < v8);
  }
}

void sub_236912644(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_236912678@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  unsigned __int8 v3 = a1;
  return sub_2369126A8("<0x%02X>", &v3, a2);
}

uint64_t sub_2369126A8@<X0>(char *__format@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  int v6 = snprintf(0, 0, __format, *a2);
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)a3 = 0;
  std::string::resize((std::string *)a3, v6, 0);
  uint64_t v7 = *(unsigned __int8 *)(a3 + 23);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = (char *)a3;
  }
  else {
    uint64_t v8 = *(char **)a3;
  }
  if ((v7 & 0x80u) != 0) {
    uint64_t v7 = *(void *)(a3 + 8);
  }
  return snprintf(v8, v7 + 1, __format, *a2);
}

void sub_23691273C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_236912758()
{
}

void sub_236912824(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_236912840(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, void (*a6)(unint64_t, uint64_t))
{
  v12[0] = a2;
  v12[1] = a3;
  v12[2] = a4;
  v12[3] = a5;
  int v6 = a6;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  int v11 = 0;
  sub_236915034(&v6, v12);
}

void sub_236912954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_23691296C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_236944F00(a2, a1 + 96);
}

uint64_t sub_236912978(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_236912980@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_236942B98();
  if ((int)result <= 2)
  {
    char v9 = 0;
    unsigned __int8 v3 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"model_interface.h", 17);
    sub_236914270(v3, (uint64_t)"(", 1);
    int v4 = (void *)std::ostream::operator<<();
    uint64_t v5 = sub_236914270(v4, (uint64_t)") ", 2);
    int v6 = sub_236914270(v5, (uint64_t)"LOG(", 4);
    long long v7 = sub_236914270(v6, (uint64_t)"ERROR", 5);
    long long v8 = sub_236914270(v7, (uint64_t)") ", 2);
    sub_236914270(v8, (uint64_t)"Not implemented.", 16);
    uint64_t result = (uint64_t)sub_23691311C(&v9);
  }
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  return result;
}

void sub_236912A48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
}

uint64_t sub_236912A5C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_236942B98();
  if ((int)result <= 2)
  {
    char v9 = 0;
    unsigned __int8 v3 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"model_interface.h", 17);
    sub_236914270(v3, (uint64_t)"(", 1);
    int v4 = (void *)std::ostream::operator<<();
    uint64_t v5 = sub_236914270(v4, (uint64_t)") ", 2);
    int v6 = sub_236914270(v5, (uint64_t)"LOG(", 4);
    long long v7 = sub_236914270(v6, (uint64_t)"ERROR", 5);
    long long v8 = sub_236914270(v7, (uint64_t)") ", 2);
    sub_236914270(v8, (uint64_t)"Not implemented.", 16);
    uint64_t result = (uint64_t)sub_23691311C(&v9);
  }
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  return result;
}

void sub_236912B24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
}

void sub_236912B38(void *a1@<X8>)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  if ((int)sub_236942B98() <= 2)
  {
    LOBYTE(__p) = 0;
    uint64_t v2 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"model_interface.h", 17);
    sub_236914270(v2, (uint64_t)"(", 1);
    unsigned __int8 v3 = (void *)std::ostream::operator<<();
    int v4 = sub_236914270(v3, (uint64_t)") ", 2);
    uint64_t v5 = sub_236914270(v4, (uint64_t)"LOG(", 4);
    int v6 = sub_236914270(v5, (uint64_t)"ERROR", 5);
    long long v7 = sub_236914270(v6, (uint64_t)") ", 2);
    sub_236914270(v7, (uint64_t)"Not implemented.", 16);
    sub_23691311C(&__p);
  }
  std::string __p = 0;
  long long v10 = 0;
  int v12 = 0;
  uint64_t v11 = 0;
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  long long v8 = (char *)operator new(0x20uLL);
  *a1 = v8;
  a1[1] = v8;
  a1[2] = v8 + 32;
  a1[1] = sub_236913E28((uint64_t)(a1 + 2), (uint64_t)&__p, (uint64_t)&v13, (uint64_t)v8);
  if (__p)
  {
    long long v10 = __p;
    operator delete(__p);
  }
}

void sub_236912C84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **a10, uint64_t a11, void *__p, uint64_t a13)
{
  uint64_t v15 = v14;
  *(void *)(v13 + 8) = v15;
  sub_2369140AC(&a10);
  if (__p)
  {
    a13 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

double sub_236912CC8()
{
  if ((int)sub_236942B98() <= 2)
  {
    char v7 = 0;
    uint64_t v0 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"model_interface.h", 17);
    sub_236914270(v0, (uint64_t)"(", 1);
    uint64_t v1 = (void *)std::ostream::operator<<();
    uint64_t v2 = sub_236914270(v1, (uint64_t)") ", 2);
    unsigned __int8 v3 = sub_236914270(v2, (uint64_t)"LOG(", 4);
    int v4 = sub_236914270(v3, (uint64_t)"ERROR", 5);
    uint64_t v5 = sub_236914270(v4, (uint64_t)") ", 2);
    sub_236914270(v5, (uint64_t)"Not implemented.", 16);
    sub_23691311C(&v7);
  }
  return 0.0;
}

void sub_236912D88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
}

uint64_t sub_236912D9C()
{
  return 0;
}

uint64_t sub_236912DA4()
{
  return 0;
}

uint64_t sub_236912DAC()
{
  return 0;
}

uint64_t sub_236912DB4()
{
  return 0;
}

uint64_t sub_236912DBC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 88))();
}

uint64_t sub_236912DE4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 8);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 16))();
  }
  return result;
}

uint64_t sub_236912E14(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 96))();
}

uint64_t sub_236912E3C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 112))();
}

uint64_t sub_236912E64(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 120))();
}

uint64_t sub_236912E8C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 128))();
}

uint64_t sub_236912EB4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 136))();
}

uint64_t sub_236912EDC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 144))();
}

uint64_t sub_236912F04(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 8);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 64))();
  }
  return result;
}

BOOL sub_236912F34(int a1, void *__s1, size_t a3, void *__s2, uint64_t a5)
{
  return a3 == a5 && memcmp(__s1, __s2, a3) == 0;
}

void sub_236912F70(void *a1)
{
}

uint64_t sub_236912F84(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x263F8C340] + 64;
  *(void *)(a1 + 112) = MEMORY[0x263F8C340] + 64;
  uint64_t v3 = *(void *)(MEMORY[0x263F8C2C8] + 16);
  uint64_t v4 = *(void *)(MEMORY[0x263F8C2C8] + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + *(void *)(v4 - 24)) = v3;
  uint64_t v5 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24));
  std::ios_base::init(v5, (void *)(a1 + 8));
  uint64_t v6 = MEMORY[0x263F8C340] + 24;
  v5[1].__vftable = 0;
  v5[1].__fmtflags_ = -1;
  *(void *)a1 = v6;
  *(void *)(a1 + 112) = v2;
  std::streambuf::basic_streambuf();
  *(void *)(a1 + 8) = MEMORY[0x263F8C318] + 16;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_DWORD *)(a1 + 104) = 16;
  return a1;
}

void sub_2369130F4(_Unwind_Exception *a1)
{
  std::ostream::~ostream();
  MEMORY[0x237E07510](v1);
  _Unwind_Resume(a1);
}

unsigned char *sub_23691311C(unsigned char *a1)
{
  std::ios_base::getloc((const std::ios_base *)(MEMORY[0x263F8C0F8] + *(void *)(*MEMORY[0x263F8C0F8] - 24)));
  uint64_t v2 = std::locale::use_facet(&v4, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v2->__vftable[2].~facet_0)(v2, 10);
  std::locale::~locale(&v4);
  std::ostream::put();
  std::ostream::flush();
  if (*a1) {
    sub_236944B8C();
  }
  return a1;
}

void sub_2369131DC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::locale a10)
{
}

uint64_t sub_2369131F8(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    sub_2369470F4((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1705);
    std::locale v4 = sub_23694710C(v8, "CHECK failed: (index) >= (0): ");
    sub_236947248((uint64_t)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v8);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    sub_2369470F4((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1706);
    uint64_t v5 = sub_23694710C(v8, "CHECK failed: (index) < (current_size_): ");
    sub_236947248((uint64_t)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v8);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_2369132B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_2369132D8(uint64_t a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  long long v8 = (void *)(a1 + 24);
  unint64_t v9 = sub_236913564(a1 + 24, (uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }
    uint64_t v14 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(void **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (sub_236913A10(a1 + 32, (unsigned __int8 *)i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  int v17 = (void *)(a1 + 16);
  uint64_t i = operator new(0x30uLL);
  *(void *)uint64_t i = 0;
  *((void *)i + 1) = v10;
  uint64_t v18 = *a4;
  long long v19 = **a4;
  *((void *)i + 4) = *((void *)*a4 + 2);
  *((_OWORD *)i + 1) = v19;
  *((void *)v18 + 1) = 0;
  *((void *)v18 + 2) = 0;
  *(void *)uint64_t v18 = 0;
  *((unsigned char *)i + 40) = 0;
  float v20 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v21 = *(float *)(a1 + 32);
  if (!v11 || (float)(v21 * (float)v11) < v20)
  {
    BOOL v22 = 1;
    if (v11 >= 3) {
      BOOL v22 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v23 = v22 | (2 * v11);
    unint64_t v24 = vcvtps_u32_f32(v20 / v21);
    if (v23 <= v24) {
      size_t v25 = v24;
    }
    else {
      size_t v25 = v23;
    }
    sub_236913AEC(a1, v25);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  uint64_t v26 = *(void *)a1;
  std::string::size_type v27 = *(void **)(*(void *)a1 + 8 * v4);
  if (v27)
  {
    *(void *)uint64_t i = *v27;
LABEL_38:
    *std::string::size_type v27 = i;
    goto LABEL_39;
  }
  *(void *)uint64_t i = *v17;
  *int v17 = i;
  *(void *)(v26 + 8 * v4) = v17;
  if (*(void *)i)
  {
    unint64_t v28 = *(void *)(*(void *)i + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v28 >= v11) {
        v28 %= v11;
      }
    }
    else
    {
      v28 &= v11 - 1;
    }
    std::string::size_type v27 = (void *)(*(void *)a1 + 8 * v28);
    goto LABEL_38;
  }
LABEL_39:
  ++*v8;
  return i;
}

void sub_236913548(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  sub_236913D38(v11, v10);
  _Unwind_Resume(a1);
}

unint64_t sub_236913564(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v3 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v3 = v2;
  }
  return sub_2369135A4((uint64_t)&v5, (uint64_t *)a2, v3);
}

unint64_t sub_2369135A4(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  if (a3 > 0x20)
  {
    if (a3 > 0x40)
    {
      uint64_t v4 = *(uint64_t *)((char *)a2 + a3 - 48);
      uint64_t v5 = *(uint64_t *)((char *)a2 + a3 - 40);
      uint64_t v6 = *(uint64_t *)((char *)a2 + a3 - 24);
      uint64_t v8 = *(uint64_t *)((char *)a2 + a3 - 64);
      uint64_t v7 = *(uint64_t *)((char *)a2 + a3 - 56);
      uint64_t v9 = *(uint64_t *)((char *)a2 + a3 - 16);
      uint64_t v10 = *(uint64_t *)((char *)a2 + a3 - 8);
      unint64_t v11 = v7 + v9;
      unint64_t v12 = 0x9DDFEA08EB382D69
          * (v6 ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))) >> 47) ^ (0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))));
      unint64_t v13 = 0x9DDFEA08EB382D69 * (v12 ^ (v12 >> 47));
      unint64_t v14 = v8 + a3 + v7 + v4;
      uint64_t v15 = v14 + v5;
      unint64_t v16 = __ROR8__(v14, 44) + v8 + a3 + __ROR8__(v5 + v8 + a3 - 0x622015F714C7D297 * (v12 ^ (v12 >> 47)), 21);
      uint64_t v17 = v7 + v9 + *(uint64_t *)((char *)a2 + a3 - 32) - 0x4B6D499041670D8DLL;
      uint64_t v18 = v17 + v6 + v9;
      uint64_t v19 = __ROR8__(v18, 44);
      uint64_t v20 = v18 + v10;
      uint64_t v21 = v19 + v17 + __ROR8__(v17 + v5 + v10, 21);
      uint64_t v23 = *a2;
      BOOL v22 = a2 + 4;
      unint64_t v24 = v23 - 0x4B6D499041670D8DLL * v5;
      uint64_t v25 = -(uint64_t)((a3 - 1) & 0xFFFFFFFFFFFFFFC0);
      do
      {
        uint64_t v26 = *(v22 - 3);
        uint64_t v27 = v24 + v15 + v11 + v26;
        uint64_t v28 = v22[2];
        uint64_t v29 = v22[3];
        uint64_t v30 = v22[1];
        unint64_t v11 = v30 + v15 - 0x4B6D499041670D8DLL * __ROR8__(v11 + v16 + v28, 42);
        uint64_t v31 = v13 + v20;
        uint64_t v32 = *(v22 - 2);
        uint64_t v33 = *(v22 - 1);
        uint64_t v34 = *(v22 - 4) - 0x4B6D499041670D8DLL * v16;
        uint64_t v35 = v34 + v20 + v33;
        uint64_t v36 = v34 + v26 + v32;
        uint64_t v15 = v36 + v33;
        uint64_t v37 = __ROR8__(v36, 44) + v34;
        unint64_t v38 = (0xB492B66FBE98F273 * __ROR8__(v27, 37)) ^ v21;
        unint64_t v24 = 0xB492B66FBE98F273 * __ROR8__(v31, 33);
        unint64_t v16 = v37 + __ROR8__(v35 + v38, 21);
        unint64_t v39 = v24 + v21 + *v22;
        uint64_t v20 = v39 + v30 + v28 + v29;
        uint64_t v21 = __ROR8__(v39 + v30 + v28, 44) + v39 + __ROR8__(v11 + v32 + v39 + v29, 21);
        v22 += 8;
        unint64_t v13 = v38;
        v25 += 64;
      }
      while (v25);
      unint64_t v40 = v24
          - 0x622015F714C7D297
          * ((0x9DDFEA08EB382D69
            * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) ^ ((0x9DDFEA08EB382D69 * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) >> 47));
      unint64_t v41 = 0x9DDFEA08EB382D69
          * (v40 ^ (v38
                  - 0x4B6D499041670D8DLL * (v11 ^ (v11 >> 47))
                  - 0x622015F714C7D297
                  * ((0x9DDFEA08EB382D69
                    * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) ^ ((0x9DDFEA08EB382D69 * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) >> 47))));
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) ^ ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) >> 47));
    }
    else
    {
      return sub_236913950(a2, a3);
    }
  }
  else if (a3 > 0x10)
  {
    return sub_2369138A4(a2, a3);
  }
  else
  {
    return sub_2369137AC(a2, a3);
  }
}

unint64_t sub_2369137AC(_DWORD *a1, unint64_t a2)
{
  if (a2 < 9)
  {
    if (a2 < 4)
    {
      unint64_t result = 0x9AE16A3B2F90404FLL;
      if (a2)
      {
        unint64_t v8 = (0xC949D7C7509E6557 * (a2 + 4 * *((unsigned __int8 *)a1 + a2 - 1))) ^ (0x9AE16A3B2F90404FLL
                                                                                      * (*(unsigned __int8 *)a1 | ((unint64_t)*((unsigned __int8 *)a1 + (a2 >> 1)) << 8)));
        return 0x9AE16A3B2F90404FLL * (v8 ^ (v8 >> 47));
      }
    }
    else
    {
      uint64_t v6 = *(unsigned int *)((char *)a1 + a2 - 4);
      unint64_t v7 = 0x9DDFEA08EB382D69 * (((8 * *a1) + a2) ^ v6);
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) >> 47));
    }
  }
  else
  {
    uint64_t v3 = *(void *)((char *)a1 + a2 - 8);
    uint64_t v4 = __ROR8__(v3 + a2, a2);
    return (0x9DDFEA08EB382D69
          * ((0x9DDFEA08EB382D69
            * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)))) ^ ((0x9DDFEA08EB382D69 * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)))) >> 47))) ^ v3;
  }
  return result;
}

unint64_t sub_2369138A4(void *a1, uint64_t a2)
{
  uint64_t v2 = a1[1];
  unint64_t v3 = 0xB492B66FBE98F273 * *a1;
  uint64_t v4 = __ROR8__(0x9AE16A3B2F90404FLL * *(void *)((char *)a1 + a2 - 8), 30) + __ROR8__(v3 - v2, 43);
  unint64_t v5 = v3 + a2 + __ROR8__(v2 ^ 0xC949D7C7509E6557, 20) - 0x9AE16A3B2F90404FLL * *(void *)((char *)a1 + a2 - 8);
  unint64_t v6 = 0x9DDFEA08EB382D69 * (v5 ^ (v4 - 0x3C5A37A36834CED9 * *(void *)((char *)a1 + a2 - 16)));
  return 0x9DDFEA08EB382D69
       * ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) ^ ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) >> 47));
}

unint64_t sub_236913950(void *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)((char *)a1 + a2 - 16);
  uint64_t v3 = *a1 - 0x3C5A37A36834CED9 * (v2 + a2);
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = __ROR8__(v3 + v4, 52);
  uint64_t v7 = v3 + a1[1];
  uint64_t v8 = __ROR8__(v7, 7);
  uint64_t v9 = v7 + v5;
  uint64_t v10 = *(void *)((char *)a1 + a2 - 32) + v5;
  uint64_t v11 = v8 + __ROR8__(*a1 - 0x3C5A37A36834CED9 * (v2 + a2), 37) + v6 + __ROR8__(v9, 31);
  uint64_t v12 = *(void *)((char *)a1 + a2 - 24) + v10 + v2;
  unint64_t v13 = 0xC3A5C85C97CB3127 * (v12 + *(void *)((char *)a1 + a2 - 8) + v4 + v11)
      - 0x651E95C4D06FBFB1
      * (v9
       + v4
       + __ROR8__(v10, 37)
       + __ROR8__(*(void *)((char *)a1 + a2 - 24) + v10, 7)
       + __ROR8__(*(void *)((char *)a1 + a2 - 8) + v4 + v10, 52)
       + __ROR8__(v12, 31));
  return 0x9AE16A3B2F90404FLL
       * ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) ^ ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) >> 47));
}

uint64_t sub_236913A10(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2[23];
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = a2[23];
  }
  else {
    uint64_t v5 = *((void *)a2 + 1);
  }
  uint64_t v6 = a3[23];
  int v7 = (char)v6;
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *((void *)a3 + 1);
  }
  if (v5 != v6) {
    return 0;
  }
  if (v7 < 0) {
    uint64_t v3 = *(unsigned __int8 **)a3;
  }
  if ((v4 & 0x80) != 0) {
    return memcmp(*(const void **)a2, v3, *((void *)a2 + 1)) == 0;
  }
  if (!a2[23]) {
    return 1;
  }
  uint64_t v8 = v4 - 1;
  do
  {
    int v10 = *a2++;
    int v9 = v10;
    int v12 = *v3++;
    int v11 = v12;
    BOOL v14 = v8-- != 0;
    uint64_t result = v9 == v11;
  }
  while (v9 == v11 && v14);
  return result;
}

void sub_236913AB8()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x263F8C208], MEMORY[0x263F8C090]);
}

void sub_236913AEC(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      sub_236913BDC(a1, prime);
    }
  }
}

void sub_236913BDC(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      sub_236913AB8();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    uint64_t v7 = *(void **)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v8) = a1 + 16;
      int v11 = (void *)*v7;
      if (*v7)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= a2) {
              v12 %= a2;
            }
          }
          else
          {
            v12 &= a2 - 1;
          }
          if (v12 != v8)
          {
            if (!*(void *)(*(void *)a1 + 8 * v12))
            {
              *(void *)(*(void *)a1 + 8 * v12) = v7;
              goto LABEL_24;
            }
            void *v7 = *v11;
            *int v11 = **(void **)(*(void *)a1 + 8 * v12);
            **(void **)(*(void *)a1 + 8 * v12) = v11;
            int v11 = v7;
          }
          unint64_t v12 = v8;
LABEL_24:
          uint64_t v7 = v11;
          int v11 = (void *)*v11;
          unint64_t v8 = v12;
        }
        while (v11);
      }
    }
  }
  else
  {
    int v10 = *(void **)a1;
    *(void *)a1 = 0;
    if (v10) {
      operator delete(v10);
    }
    *(void *)(a1 + 8) = 0;
  }
}

void sub_236913D38(uint64_t a1, void **__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*((char *)__p + 39) < 0) {
      operator delete(__p[2]);
    }
  }
  else if (!__p)
  {
    return;
  }
  operator delete(__p);
}

void sub_236913D98(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_236913DF4(exception, a1);
  __cxa_throw(exception, (struct type_info *)off_264CB3E98, MEMORY[0x263F8C060]);
}

void sub_236913DE0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_236913DF4(std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C388] + 16);
  return result;
}

uint64_t sub_236913E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  std::string v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      *(void *)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      *(void *)(v4 + 16) = 0;
      sub_236913EF0((char *)v4, *(long long **)v6, *(long long **)(v6 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v6 + 8) - *(void *)v6) >> 3));
      *(_DWORD *)(v4 + 24) = *(_DWORD *)(v6 + 24);
      uint64_t v4 = v11 + 32;
      v11 += 32;
      v6 += 32;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  sub_236914024((uint64_t)v8);
  return v4;
}

void sub_236913EDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

char *sub_236913EF0(char *result, long long *a2, long long *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = sub_236913F70(result, a4);
    uint64_t v7 = *((void *)v6 + 1);
    while (a2 != a3)
    {
      long long v8 = *a2;
      *(void *)(v7 + 16) = *((void *)a2 + 2);
      *(_OWORD *)uint64_t v7 = v8;
      v7 += 24;
      a2 = (long long *)((char *)a2 + 24);
    }
    *((void *)v6 + 1) = v7;
  }
  return result;
}

void sub_236913F54(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_236913F70(void *a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_236913FC4();
  }
  uint64_t result = (char *)sub_236913FDC((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[24 * v4];
  return result;
}

void sub_236913FC4()
{
}

void *sub_236913FDC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_236913AB8();
  }
  return operator new(24 * a2);
}

uint64_t sub_236914024(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_23691405C(a1);
  }
  return a1;
}

void sub_23691405C(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  if (v1 != v2)
  {
    uint64_t v3 = **(void **)(a1 + 16);
    do
    {
      unint64_t v5 = *(void **)(v3 - 32);
      v3 -= 32;
      uint64_t v4 = v5;
      if (v5)
      {
        *(void *)(v1 - 24) = v4;
        operator delete(v4);
      }
      uint64_t v1 = v3;
    }
    while (v3 != v2);
  }
}

void sub_2369140AC(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_236914100((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_236914100(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if (v2 != *a1)
  {
    uint64_t v4 = a1[1];
    do
    {
      uint64_t v6 = *(void **)(v4 - 32);
      v4 -= 32;
      unint64_t v5 = v6;
      if (v6)
      {
        *(void *)(v2 - 24) = v5;
        operator delete(v5);
      }
      uint64_t v2 = v4;
    }
    while (v4 != v3);
  }
  a1[1] = v3;
}

void sub_236914158()
{
}

void sub_236914170(void *a1)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_26E9CD5A0;
  uint64_t v2 = a1[3];
  if (v2)
  {
    MEMORY[0x237E07550](v2, 0x1000C8052888210);
    a1[3] = 0;
  }
  JUMPOUT(0x237E07580);
}

void sub_2369141F4(uint64_t a1, uint64_t *a2)
{
  if (a2)
  {
    uint64_t v2 = *a2;
    *a2 = 0;
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    JUMPOUT(0x237E07580);
  }
}

void *sub_236914270(void *a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x237E07380](v13, a1);
  if (v13[0])
  {
    uint64_t v6 = (uint64_t)a1 + *(void *)(*a1 - 24);
    uint64_t v7 = *(void *)(v6 + 40);
    int v8 = *(_DWORD *)(v6 + 8);
    int v9 = *(_DWORD *)(v6 + 144);
    if (v9 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)));
      uint64_t v10 = std::locale::use_facet(&v14, MEMORY[0x263F8C108]);
      int v9 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32);
      std::locale::~locale(&v14);
      *(_DWORD *)(v6 + 144) = v9;
    }
    if ((v8 & 0xB0) == 0x20) {
      uint64_t v11 = a2 + a3;
    }
    else {
      uint64_t v11 = a2;
    }
    if (!sub_236914414(v7, a2, v11, a2 + a3, v6, (char)v9)) {
      std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 5);
    }
  }
  MEMORY[0x237E07390](v13);
  return a1;
}

void sub_2369143AC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, std::locale a12)
{
  MEMORY[0x237E07390](&a10);
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)v12 + *(void *)(*v12 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x23691438CLL);
}

void sub_236914400(_Unwind_Exception *a1)
{
}

uint64_t sub_236914414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int __c)
{
  uint64_t v6 = a1;
  if (a1)
  {
    uint64_t v11 = *(void *)(a5 + 24);
    if (v11 <= a4 - a2) {
      int64_t v12 = 0;
    }
    else {
      int64_t v12 = v11 - (a4 - a2);
    }
    if (a3 - a2 >= 1 && (*(uint64_t (**)(uint64_t))(*(void *)a1 + 96))(a1) != a3 - a2) {
      return 0;
    }
    if (v12 >= 1)
    {
      sub_23691459C(__p, v12, __c);
      unint64_t v13 = v18 >= 0 ? __p : (void **)__p[0];
      uint64_t v14 = (*(uint64_t (**)(uint64_t, void **, int64_t))(*(void *)v6 + 96))(v6, v13, v12);
      if (v18 < 0) {
        operator delete(__p[0]);
      }
      if (v14 != v12) {
        return 0;
      }
    }
    uint64_t v15 = a4 - a3;
    if (v15 < 1 || (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v6 + 96))(v6, a3, v15) == v15) {
      *(void *)(a5 + 24) = 0;
    }
    else {
      return 0;
    }
  }
  return v6;
}

void sub_236914580(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_23691459C(void *__b, size_t __len, int __c)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    sub_236914158();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    __b[1] = __len;
    __b[2] = v8 | 0x8000000000000000;
    *__b = v6;
  }
  else
  {
    *((unsigned char *)__b + 23) = __len;
    uint64_t v6 = __b;
    if (!__len) {
      goto LABEL_9;
    }
  }
  memset(v6, __c, __len);
LABEL_9:
  *((unsigned char *)v6 + __len) = 0;
  return __b;
}

void sub_236914648(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_236914648(a1, *a2);
    sub_236914648(a1, a2[1]);
    operator delete(a2);
  }
}

void *sub_23691469C(void *a1, unint64_t a2, unsigned __int8 *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_236914770(a1, a2);
    int v6 = *a3;
    unint64_t v7 = a1[1];
    unint64_t v8 = v7 + a2;
    a1[1] = v7 + a2;
    if (v7)
    {
      unint64_t v9 = v8 - 1;
      if (((v8 - 1) ^ (v7 - 1)) < 0x40)
      {
LABEL_10:
        uint64_t v13 = *a1 + 8 * (v7 >> 6);
        int v14 = v7 & 0x3F;
        if (v6) {
          sub_2369147F0(&v13, a2);
        }
        else {
          sub_2369148A4((uint64_t)&v13, a2);
        }
        return a1;
      }
    }
    else
    {
      unint64_t v9 = v8 - 1;
    }
    unint64_t v10 = v9 >> 6;
    if (v8 >= 0x41) {
      unint64_t v11 = v10;
    }
    else {
      unint64_t v11 = 0;
    }
    *(void *)(*a1 + 8 * v11) = 0;
    goto LABEL_10;
  }
  return a1;
}

void *sub_236914770(void *a1, uint64_t a2)
{
  if (a2 < 0) {
    sub_236913FC4();
  }
  uint64_t result = sub_2369147B8((uint64_t)(a1 + 2), ((unint64_t)(a2 - 1) >> 6) + 1);
  *a1 = result;
  a1[1] = 0;
  a1[2] = v4;
  return result;
}

void *sub_2369147B8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_236913AB8();
  }
  return operator new(8 * a2);
}

void *sub_2369147F0(void *result, unint64_t a2)
{
  unint64_t v2 = a2;
  uint64_t v3 = result;
  int v4 = *((_DWORD *)result + 2);
  unint64_t v5 = (void *)*result;
  if (v4)
  {
    if ((64 - v4) >= a2) {
      unint64_t v6 = a2;
    }
    else {
      unint64_t v6 = (64 - v4);
    }
    *v5++ |= (0xFFFFFFFFFFFFFFFFLL >> (64 - v4 - v6)) & (-1 << v4);
    unint64_t v2 = a2 - v6;
    *uint64_t result = v5;
  }
  unint64_t v7 = v2 >> 6;
  if (v2 >= 0x40) {
    uint64_t result = memset(v5, 255, 8 * v7);
  }
  if ((v2 & 0x3F) != 0)
  {
    unint64_t v8 = &v5[v7];
    *uint64_t v3 = v8;
    *v8 |= 0xFFFFFFFFFFFFFFFFLL >> -(v2 & 0x3F);
  }
  return result;
}

void sub_2369148A4(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2;
  int v4 = *(_DWORD *)(a1 + 8);
  unint64_t v5 = *(void **)a1;
  if (v4)
  {
    if ((64 - v4) >= a2) {
      unint64_t v6 = a2;
    }
    else {
      unint64_t v6 = (64 - v4);
    }
    *v5++ &= ~((0xFFFFFFFFFFFFFFFFLL >> (64 - v4 - v6)) & (-1 << v4));
    unint64_t v2 = a2 - v6;
    *(void *)a1 = v5;
  }
  unint64_t v7 = v2 >> 6;
  if (v2 >= 0x40) {
    bzero(v5, 8 * v7);
  }
  if ((v2 & 0x3F) != 0)
  {
    unint64_t v8 = &v5[v7];
    *(void *)a1 = v8;
    *v8 &= ~(0xFFFFFFFFFFFFFFFFLL >> -(v2 & 0x3F));
  }
}

_OWORD *sub_236914954(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = (void **)sub_2369149E0((uint64_t)a1, &v9, a2);
  unint64_t v6 = *v5;
  if (!*v5)
  {
    unint64_t v7 = (uint64_t **)v5;
    unint64_t v6 = operator new(0x38uLL);
    id v6[2] = *(_OWORD *)a3;
    *((void *)v6 + 6) = *(void *)(a3 + 16);
    sub_236914A80(a1, v9, v7, (uint64_t *)v6);
  }
  return v6;
}

void *sub_2369149E0(uint64_t a1, void *a2, uint64_t a3)
{
  unint64_t v5 = (void *)(a1 + 8);
  int v4 = *(void **)(a1 + 8);
  if (v4)
  {
    uint64_t v7 = a1 + 16;
    do
    {
      while (1)
      {
        unint64_t v8 = v4;
        uint64_t v9 = (uint64_t)(v4 + 4);
        if (!sub_236914AD8(v7, a3, (uint64_t)(v4 + 4))) {
          break;
        }
        int v4 = (void *)*v8;
        unint64_t v5 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (!sub_236914AD8(v7, v9, a3)) {
        break;
      }
      unint64_t v5 = v8 + 1;
      int v4 = (void *)v8[1];
    }
    while (v4);
  }
  else
  {
    unint64_t v8 = (void *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

uint64_t *sub_236914A80(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  unint64_t v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  uint64_t result = sub_236914B24(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

uint64_t sub_236914AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(const void **)a2;
  size_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(const void **)a3;
  size_t v6 = *(void *)(a3 + 8);
  if (v6 >= v4) {
    size_t v7 = v4;
  }
  else {
    size_t v7 = *(void *)(a3 + 8);
  }
  int v8 = memcmp(v3, v5, v7);
  if (v4 < v6) {
    unsigned int v9 = -1;
  }
  else {
    unsigned int v9 = 1;
  }
  if (v4 == v6) {
    unsigned int v9 = 0;
  }
  if (v8) {
    unsigned int v9 = v8;
  }
  return v9 >> 31;
}

uint64_t *sub_236914B24(uint64_t *result, uint64_t *a2)
{
  *((unsigned char *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      unint64_t v2 = (uint64_t *)a2[2];
      if (*((unsigned char *)v2 + 24)) {
        return result;
      }
      uint64_t v3 = (uint64_t *)v2[2];
      size_t v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        uint64_t v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), unint64_t v5 = (unsigned char *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            unsigned int v9 = (uint64_t **)a2[2];
          }
          else
          {
            unsigned int v9 = (uint64_t **)v2[1];
            unint64_t v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              void v10[2] = (uint64_t)v2;
              uint64_t v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = v9;
            *unsigned int v9 = v2;
            v2[2] = (uint64_t)v9;
            uint64_t v3 = v9[2];
            unint64_t v2 = (uint64_t *)*v3;
          }
          *((unsigned char *)v9 + 24) = 1;
          *((unsigned char *)v3 + 24) = 0;
          uint64_t v13 = v2[1];
          *uint64_t v3 = v13;
          if (v13) {
            *(void *)(v13 + 16) = v3;
          }
          v2[2] = v3[2];
          *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (v6 = *((unsigned __int8 *)v4 + 24), unint64_t v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          uint64_t v11 = a2[1];
          *unint64_t v2 = v11;
          if (v11)
          {
            *(void *)(v11 + 16) = v2;
            uint64_t v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          uint64_t v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((unsigned char *)a2 + 24) = 1;
        *((unsigned char *)v3 + 24) = 0;
        unint64_t v2 = (uint64_t *)v3[1];
        uint64_t v12 = *v2;
        v3[1] = *v2;
        if (v12) {
          *(void *)(v12 + 16) = v3;
        }
        v2[2] = v3[2];
        *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
        *unint64_t v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((unsigned char *)v2 + 24) = 1;
      a2 = v3;
      *((unsigned char *)v3 + 24) = v3 == result;
      *unint64_t v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

uint64_t sub_236914CBC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x7FFFFFFFFFFFFFF8) {
    sub_236914158();
  }
  if (a2 > 0x16)
  {
    uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a2 | 7) != 0x17) {
      uint64_t v4 = a2 | 7;
    }
    uint64_t v5 = v4 + 1;
    int v6 = operator new(v4 + 1);
    *(void *)(a1 + 8) = a2;
    *(void *)(a1 + 16) = v5 | 0x8000000000000000;
    *(void *)a1 = v6;
  }
  else
  {
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    *(unsigned char *)(a1 + 23) = a2;
  }
  return a1;
}

uint64_t *sub_236914D44(uint64_t **a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v5 = (void **)sub_2369149E0((uint64_t)a1, &v9, a2);
  int v6 = (uint64_t *)*v5;
  if (!*v5)
  {
    uint64_t v7 = (uint64_t **)v5;
    int v6 = (uint64_t *)operator new(0x30uLL);
    *((_OWORD *)v6 + 2) = *a3;
    sub_236914A80(a1, v9, v7, v6);
  }
  return v6;
}

uint64_t sub_236914DC8@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *(unsigned int *)(result + 8);
  uint64_t v4 = *(void **)result;
  if (!v3) {
    goto LABEL_9;
  }
  unint64_t v5 = (64 - v3);
  if (v5 >= a2) {
    unint64_t v6 = a2;
  }
  else {
    unint64_t v6 = (64 - v3);
  }
  if (((0xFFFFFFFFFFFFFFFFLL >> (64 - v3 - v6)) & (-1 << v3) & ~*v4) != 0)
  {
    unint64_t v7 = __rbit64((0xFFFFFFFFFFFFFFFFLL >> (64 - v3 - v6)) & (-1 << v3) & ~*v4);
LABEL_22:
    *(void *)a3 = v4;
    *(_DWORD *)(a3 + 8) = __clz(v7);
    return result;
  }
  if (v5 < a2)
  {
    a2 -= v6;
    *(void *)uint64_t result = ++v4;
LABEL_9:
    if (a2 < 0x40)
    {
LABEL_12:
      if (!a2 || (unint64_t v8 = (0xFFFFFFFFFFFFFFFFLL >> -(char)a2) & ~*v4) == 0)
      {
        *(void *)a3 = v4;
        *(_DWORD *)(a3 + 8) = a2;
        return result;
      }
    }
    else
    {
      while (*v4 == -1)
      {
        *(void *)uint64_t result = ++v4;
        a2 -= 64;
        if (a2 <= 0x3F) {
          goto LABEL_12;
        }
      }
      unint64_t v8 = ~*v4;
    }
    unint64_t v7 = __rbit64(v8);
    goto LABEL_22;
  }
  uint64_t v9 = v3 + a2 - 63;
  if (v9 < 0) {
    uint64_t v9 = v3 + a2;
  }
  uint64_t v10 = v9 >> 6;
  unint64_t v11 = (v3 + a2) >> 6;
  if ((a2 & 0x8000000000000000) != 0) {
    unint64_t v11 = v10;
  }
  *(void *)a3 = &v4[v11];
  *(_DWORD *)(a3 + 8) = ((_BYTE)v3 + (_BYTE)a2) & 0x3F;
  return result;
}

void *sub_236914EC0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60) {
    sub_236913AB8();
  }
  return operator new(16 * a2);
}

unsigned __int8 *sub_236914EF8(void *a1, unsigned __int8 *a2)
{
  unint64_t v4 = sub_236913564((uint64_t)(a1 + 3), (uint64_t)a2);
  int8x8_t v5 = (int8x8_t)a1[1];
  if (!*(void *)&v5) {
    return 0;
  }
  unint64_t v6 = v4;
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  unint64_t v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v9 = v4;
    if (v4 >= *(void *)&v5) {
      unint64_t v9 = v4 % *(void *)&v5;
    }
  }
  else
  {
    unint64_t v9 = (*(void *)&v5 - 1) & v4;
  }
  uint64_t v10 = *(unsigned __int8 ***)(*a1 + 8 * v9);
  if (!v10) {
    return 0;
  }
  unint64_t v11 = *v10;
  if (*v10)
  {
    uint64_t v12 = (uint64_t)(a1 + 4);
    do
    {
      unint64_t v13 = *((void *)v11 + 1);
      if (v6 == v13)
      {
        if (sub_236913A10(v12, v11 + 16, a2)) {
          return v11;
        }
      }
      else
      {
        if (v8 > 1)
        {
          if (v13 >= *(void *)&v5) {
            v13 %= *(void *)&v5;
          }
        }
        else
        {
          v13 &= *(void *)&v5 - 1;
        }
        if (v13 != v9) {
          return 0;
        }
      }
      unint64_t v11 = *(unsigned __int8 **)v11;
    }
    while (v11);
  }
  return v11;
}

void *sub_236914FFC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    sub_236913AB8();
  }
  return operator new(4 * a2);
}

void sub_236915034(void (**a1)(unint64_t, uint64_t), unint64_t *a2)
{
  if (a2[3])
  {
    uint64_t v3 = 0;
    memset(v2, 0, sizeof(v2));
    sub_2369155F4(a1, a2, (uint64_t *)v2);
  }
  sub_236915A3C((uint64_t)a1, a2);
}

void sub_236915114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t *sub_236915128(uint64_t *a1)
{
  if (*a1)
  {
    MEMORY[0x237E07550](*a1, 0x1000C8077774924);
    *a1 = 0;
  }
  return a1;
}

uint64_t sub_236915174(uint64_t *a1)
{
  sub_2369151C0((uint64_t)a1, 0);
  uint64_t result = *a1;
  if (*a1)
  {
    uint64_t result = MEMORY[0x237E07550](result, 0x1000C8077774924);
    *a1 = 0;
  }
  a1[1] = 0;
  a1[2] = 0;
  return result;
}

uint64_t sub_2369151C0(uint64_t result, unint64_t a2)
{
  unint64_t v2 = *(void *)(result + 8);
  if (v2 > a2)
  {
    *(void *)(result + 8) = a2;
    unint64_t v2 = a2;
  }
  if (*(void *)(result + 16) < a2) {
    sub_236915220(result, a2);
  }
  if (v2 < a2) {
    *(void *)(result + 8) = a2;
  }
  return result;
}

void sub_236915220(uint64_t a1, unint64_t a2)
{
  if (a2 < 2 * *(void *)(a1 + 16))
  {
    uint64_t v2 = 1;
    do
    {
      unint64_t v3 = v2;
      v2 *= 2;
    }
    while (v3 < a2);
  }
  operator new[]();
}

void sub_236915360(std::exception *a1)
{
  std::exception::~exception(a1);
  JUMPOUT(0x237E07580);
}

const char *sub_236915398(uint64_t a1)
{
  if (*(void *)(a1 + 8)) {
    return *(const char **)(a1 + 8);
  }
  else {
    return "";
  }
}

uint64_t *sub_2369153B0(uint64_t *a1)
{
  if (*a1)
  {
    MEMORY[0x237E07550](*a1, 0x1000C8077774924);
    *a1 = 0;
  }
  return a1;
}

uint64_t sub_2369153FC(uint64_t *a1)
{
  sub_236915448(a1, 0);
  uint64_t result = *a1;
  if (*a1)
  {
    uint64_t result = MEMORY[0x237E07550](result, 0x1000C8077774924);
    *a1 = 0;
  }
  a1[1] = 0;
  a1[2] = 0;
  return result;
}

void sub_236915448(void *a1, unint64_t a2)
{
  unint64_t v4 = a1[1];
  if (v4 > a2)
  {
    a1[1] = a2;
    unint64_t v4 = a2;
  }
  if (a1[2] < a2) {
    sub_2369154B8((uint64_t)a1, a2);
  }
  if (a2 > v4)
  {
    bzero((void *)(*a1 + 4 * v4), 4 * (a2 - v4));
    a1[1] = a2;
  }
}

void sub_2369154B8(uint64_t a1, unint64_t a2)
{
  if (a2 < 2 * *(void *)(a1 + 16))
  {
    uint64_t v2 = 1;
    do
    {
      unint64_t v3 = v2;
      v2 *= 2;
    }
    while (v3 < a2);
  }
  operator new[]();
}

void sub_2369155F4(void (**a1)(unint64_t, uint64_t), unint64_t *a2, uint64_t *a3)
{
  sub_2369164A4(a3);
  if (*a2)
  {
    unint64_t v6 = 0;
    do
    {
      unint64_t v7 = a2[2];
      uint64_t v8 = *(void *)(a2[1] + 8 * v6);
      if (v7)
      {
        unint64_t v9 = *(void *)(v7 + 8 * v6);
      }
      else
      {
        while (*(unsigned __int8 *)(v8 + v7++))
          ;
        unint64_t v9 = v7 - 1;
      }
      unint64_t v11 = a2[3];
      if (v11) {
        int v12 = *(_DWORD *)(v11 + 4 * v6);
      }
      else {
        int v12 = v6;
      }
      sub_236916578(a3, v8, v9, v12);
      ++v6;
      if (*a1) {
        (*a1)(v6, *a2 + 1);
      }
    }
    while (v6 < *a2);
  }
  sub_2369169B8((uint64_t)a3, 0);
  uint64_t v13 = *a3;
  char v14 = *(unsigned char *)(*a3 + 8);
  int v15 = *(_DWORD *)*a3;
  if (v14) {
    int v16 = (2 * *(unsigned __int8 *)(v13 + 9)) | (4 * v15);
  }
  else {
    int v16 = 2 * v15;
  }
  *(_DWORD *)a3[3] = v16 | *(unsigned __int8 *)(v13 + 10);
  *(unsigned char *)a3[6] = v14;
  sub_236916284(a3);
  sub_236915D20(a3 + 15);
  sub_236915D20(a3 + 18);
  sub_236915D20(a3 + 21);
  sub_236916E10();
}

void sub_23691571C(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 32);
  uint64_t v3 = 1;
  do
  {
    unint64_t v4 = v3;
    v3 *= 2;
  }
  while (v4 < v2);
  if (*(void *)(a1 + 24) < v4) {
    sub_2369154B8(a1 + 8, v4);
  }
  operator new[]();
}

void sub_236915A3C(uint64_t a1, unint64_t *a2)
{
  unint64_t v2 = *a2;
  uint64_t v3 = 1;
  do
  {
    unint64_t v4 = v3;
    v3 *= 2;
  }
  while (v4 < v2);
  if (*(void *)(a1 + 24) < v4) {
    sub_2369154B8(a1 + 8, v4);
  }
  operator new[]();
}

uint64_t *sub_236915CE4(uint64_t *a1)
{
  sub_236915D20(a1);
  return sub_236915F08(a1);
}

uint64_t sub_236915D20(uint64_t *a1)
{
  sub_236915D6C((uint64_t)a1, 0);
  uint64_t result = *a1;
  if (*a1)
  {
    uint64_t result = MEMORY[0x237E07550](result, 0x1000C8077774924);
    *a1 = 0;
  }
  a1[1] = 0;
  a1[2] = 0;
  return result;
}

uint64_t sub_236915D6C(uint64_t result, unint64_t a2)
{
  unint64_t v2 = *(void *)(result + 8);
  if (v2 > a2)
  {
    *(void *)(result + 8) = a2;
    unint64_t v2 = a2;
  }
  if (*(void *)(result + 16) < a2) {
    sub_236915DCC(result, a2);
  }
  if (v2 < a2) {
    *(void *)(result + 8) = a2;
  }
  return result;
}

void sub_236915DCC(uint64_t a1, unint64_t a2)
{
  if (a2 < 2 * *(void *)(a1 + 16))
  {
    uint64_t v2 = 1;
    do
    {
      unint64_t v3 = v2;
      v2 *= 2;
    }
    while (v3 < a2);
  }
  operator new[]();
}

uint64_t *sub_236915F08(uint64_t *a1)
{
  if (*a1)
  {
    MEMORY[0x237E07550](*a1, 0x1000C8077774924);
    *a1 = 0;
  }
  return a1;
}

uint64_t *sub_236915F54(uint64_t *a1)
{
  sub_236915FB0(a1);
  uint64_t v2 = a1[3];
  if (v2)
  {
    MEMORY[0x237E07550](v2, 0x1000C8052888210);
    a1[3] = 0;
  }
  return sub_236915F08(a1);
}

uint64_t sub_236915FB0(uint64_t *a1)
{
  sub_236915D20(a1);
  uint64_t result = a1[3];
  if (result)
  {
    uint64_t result = MEMORY[0x237E07550](result, 0x1000C8052888210);
    a1[3] = 0;
  }
  return result;
}

uint64_t *sub_236915FF4(uint64_t *a1)
{
  if (*a1)
  {
    MEMORY[0x237E07550](*a1, 0x1000C8077774924);
    *a1 = 0;
  }
  return a1;
}

uint64_t sub_236916040(uint64_t *a1)
{
  sub_23691608C(a1, 0);
  uint64_t result = *a1;
  if (*a1)
  {
    uint64_t result = MEMORY[0x237E07550](result, 0x1000C8077774924);
    *a1 = 0;
  }
  a1[1] = 0;
  a1[2] = 0;
  return result;
}

void sub_23691608C(void *a1, unint64_t a2)
{
  unint64_t v4 = a1[1];
  if (v4 > a2)
  {
    a1[1] = a2;
    unint64_t v4 = a2;
  }
  if (a1[2] < a2) {
    sub_2369160FC((uint64_t)a1, a2);
  }
  if (a2 > v4)
  {
    bzero((void *)(*a1 + 4 * v4), 4 * (a2 - v4));
    a1[1] = a2;
  }
}

void sub_2369160FC(uint64_t a1, unint64_t a2)
{
  if (a2 < 2 * *(void *)(a1 + 16))
  {
    uint64_t v2 = 1;
    do
    {
      unint64_t v3 = v2;
      v2 *= 2;
    }
    while (v3 < a2);
  }
  operator new[]();
}

uint64_t *sub_236916238(uint64_t *a1)
{
  if (*a1)
  {
    MEMORY[0x237E07550](*a1, 0x1000C8077774924);
    *a1 = 0;
  }
  return a1;
}

uint64_t sub_236916284(uint64_t *a1)
{
  sub_2369162D0(a1, 0);
  uint64_t result = *a1;
  if (*a1)
  {
    uint64_t result = MEMORY[0x237E07550](result, 0x1000C8077774924);
    *a1 = 0;
  }
  a1[1] = 0;
  a1[2] = 0;
  return result;
}

void *sub_2369162D0(void *result, unint64_t a2)
{
  unint64_t v2 = result[1];
  if (v2 > a2)
  {
    result[1] = a2;
    unint64_t v2 = a2;
  }
  if (result[2] < a2) {
    sub_236916354((uint64_t)result, a2);
  }
  for (; v2 < a2; unint64_t v2 = result[1])
  {
    result[1] = v2 + 1;
    uint64_t v3 = *result + 12 * v2;
    *(_DWORD *)(v3 + 7) = 0;
    *(void *)uint64_t v3 = 0;
  }
  return result;
}

void sub_236916354(uint64_t a1, unint64_t a2)
{
  if (a2 < 2 * *(void *)(a1 + 16))
  {
    uint64_t v2 = 1;
    do
    {
      unint64_t v3 = v2;
      v2 *= 2;
    }
    while (v3 < a2);
  }
  operator new[]();
}

void *sub_2369164A4(uint64_t *a1)
{
  int v7 = 0;
  sub_2369167E8(a1 + 15, 0x400uLL, &v7);
  uint64_t v2 = a1[22];
  if (v2)
  {
    uint64_t v3 = *a1 + 12 * *(unsigned int *)(a1[21] + 4 * v2 - 4);
    *(_DWORD *)(v3 + 7) = 0;
    *(void *)uint64_t v3 = 0;
    --a1[22];
  }
  else
  {
    sub_236916870(a1);
  }
  sub_2369168C8(a1 + 9);
  sub_236916918(a1 + 3);
  uint64_t v4 = a1[7];
  if (v4 == a1[8]) {
    sub_236915220((uint64_t)(a1 + 6), v4 + 1);
  }
  a1[7] = v4 + 1;
  a1[24] = 1;
  *(unsigned char *)(*a1 + 8) = -1;
  int v6 = 0;
  return sub_236916964(a1 + 18, &v6);
}

void *sub_236916578(void *result, uint64_t a2, unint64_t a3, int a4)
{
  if (a4 < 0)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    uint64_t v23 = "/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/darts_clone/darts.h:1106: exception: failed to"
          " insert key: negative value";
    goto LABEL_27;
  }
  if (!a3)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    uint64_t v23 = "/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/darts_clone/darts.h:1108: exception: failed to"
          " insert key: zero-length key";
LABEL_27:
    void *exception = &unk_26E9CD5E8;
    exception[1] = v23;
    __cxa_throw(exception, (struct type_info *)&unk_26E9CD5C0, (void (*)(void *))std::exception::~exception);
  }
  int v5 = a4;
  int v7 = result;
  unint64_t v8 = 0;
  unsigned int v9 = 0;
  uint64_t v10 = *result;
  while (1)
  {
    unsigned int v11 = *(_DWORD *)(v10 + 12 * v9);
    if (!v11) {
      goto LABEL_12;
    }
    unsigned int v12 = *(unsigned __int8 *)(a2 + v8);
    if (v8 < a3 && !*(unsigned char *)(a2 + v8))
    {
      exception = __cxa_allocate_exception(0x10uLL);
      uint64_t v23 = "/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/darts_clone/darts.h:1122: exception: failed "
            "to insert key: invalid null character";
      goto LABEL_27;
    }
    unsigned int v13 = *(unsigned __int8 *)(v10 + 12 * v11 + 8);
    if (v12 < v13)
    {
      exception = __cxa_allocate_exception(0x10uLL);
      uint64_t v23 = "/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/darts_clone/darts.h:1127: exception: failed "
            "to insert key: wrong key order";
      goto LABEL_27;
    }
    if (v12 > v13) {
      break;
    }
    ++v8;
    unsigned int v9 = *(_DWORD *)(v10 + 12 * v9);
    if (v8 > a3) {
      return result;
    }
  }
  *(unsigned char *)(v10 + 12 * v11 + 10) = 1;
  uint64_t result = (void *)sub_2369169B8((uint64_t)result, v11);
LABEL_12:
  if (v8 <= a3)
  {
    int v24 = v5;
    do
    {
      if (v8 >= a3) {
        char v14 = 0;
      }
      else {
        char v14 = *(unsigned char *)(a2 + v8);
      }
      unsigned int v25 = 0;
      uint64_t v15 = v7[22];
      if (v15)
      {
        unsigned int v16 = *(_DWORD *)(v7[21] + 4 * v15 - 4);
        uint64_t v17 = *v7 + 12 * v16;
        *(_DWORD *)(v17 + 7) = 0;
        *(void *)uint64_t v17 = 0;
        --v7[22];
      }
      else
      {
        unsigned int v16 = *((_DWORD *)v7 + 2);
        sub_236916870(v7);
      }
      unsigned int v25 = v16;
      uint64_t v18 = *v7;
      uint64_t v19 = (int *)(*v7 + 12 * v9);
      int v20 = *v19;
      if (!*v19) {
        *(unsigned char *)(v18 + 12 * v16 + 9) = 1;
      }
      *(_DWORD *)(v18 + 12 * v16 + 4) = v20;
      unsigned int v21 = v25;
      *(unsigned char *)(v18 + 12 * v25 + 8) = v14;
      *uint64_t v19 = v21;
      uint64_t result = sub_236916964(v7 + 18, &v25);
      unsigned int v9 = v25;
      ++v8;
    }
    while (v8 <= a3);
    int v5 = v24;
  }
  *(_DWORD *)(*v7 + 12 * v9) = v5;
  return result;
}

uint64_t *sub_2369167E8(uint64_t *result, unint64_t a2, _DWORD *a3)
{
  unint64_t v3 = result[1];
  if (v3 > a2)
  {
    result[1] = a2;
    unint64_t v3 = a2;
  }
  if (result[2] < a2) {
    sub_236915DCC((uint64_t)result, a2);
  }
  if (v3 < a2)
  {
    uint64_t v4 = *result;
    do
      *(_DWORD *)(v4 + 4 * v3++) = *a3;
    while (a2 != v3);
    result[1] = a2;
  }
  return result;
}

void *sub_236916870(void *result)
{
  uint64_t v1 = result[1];
  if (v1 == result[2]) {
    sub_236916354((uint64_t)result, v1 + 1);
  }
  result[1] = v1 + 1;
  uint64_t v2 = *result + 12 * v1;
  *(_DWORD *)(v2 + 7) = 0;
  *(void *)uint64_t v2 = 0;
  return result;
}

void *sub_2369168C8(void *result)
{
  uint64_t v1 = result;
  uint64_t v2 = result[5];
  if ((v2 & 0x1F) == 0)
  {
    int v3 = 0;
    uint64_t result = sub_236916964(result, &v3);
    uint64_t v2 = v1[5];
  }
  v1[5] = v2 + 1;
  return result;
}

void *sub_236916918(void *result)
{
  uint64_t v1 = result[1];
  if (v1 == result[2]) {
    sub_2369160FC((uint64_t)result, v1 + 1);
  }
  result[1] = v1 + 1;
  *(_DWORD *)(*result + 4 * v1) = 0;
  return result;
}

void *sub_236916964(void *result, _DWORD *a2)
{
  uint64_t v2 = result[1];
  if (v2 == result[2]) {
    sub_236915DCC((uint64_t)result, v2 + 1);
  }
  result[1] = v2 + 1;
  *(_DWORD *)(*result + 4 * v2) = *a2;
  return result;
}

uint64_t sub_2369169B8(uint64_t result, int a2)
{
  uint64_t v2 = result;
  uint64_t v3 = *(void *)(result + 152) - 1;
  unsigned int v4 = *(_DWORD *)(*(void *)(result + 144) + 4 * v3);
  if (v4 != a2)
  {
    uint64_t v35 = (uint64_t *)(result + 120);
    int v5 = (void *)(result + 24);
    int v6 = (void *)(result + 72);
    while (1)
    {
      *(void *)(v2 + 152) = v3;
      unint64_t v7 = *(void *)(v2 + 128);
      if (*(void *)(v2 + 192) >= v7 - (v7 >> 2))
      {
        unint64_t v8 = 2 * v7;
        sub_236915D20(v35);
        int v38 = 0;
        sub_2369167E8(v35, v8, &v38);
        unint64_t v9 = *(void *)(v2 + 32);
        if (v9 >= 2)
        {
          uint64_t v10 = *(void *)(v2 + 48);
          for (uint64_t i = 1; i != v9; ++i)
          {
            if (!*(unsigned char *)(v10 + i) || (*(_DWORD *)(*v5 + 4 * i) & 2) != 0)
            {
              unsigned int v12 = 0;
              if (i)
              {
                unsigned int v13 = i;
                do
                {
                  int v14 = *(_DWORD *)(*v5 + 4 * v13);
                  unsigned int v15 = (v14 ^ ~(*(unsigned __int8 *)(v10 + v13) << 24)) + (v14 << 15);
                  unsigned int v16 = 2057 * ((5 * (v15 ^ (v15 >> 12))) ^ ((5 * (v15 ^ (v15 >> 12))) >> 4));
                  v12 ^= HIWORD(v16) ^ v16;
                  BOOL v17 = __CFADD__(v13++, 1);
                }
                while (!v17 && (v14 & 1) != 0);
              }
              uint64_t v18 = *(void *)(v2 + 120);
              do
              {
                unint64_t v19 = (unint64_t)v12 % *(void *)(v2 + 128);
                unsigned int v12 = v19 + 1;
              }
              while (*(_DWORD *)(v18 + 4 * v19));
              *(_DWORD *)(v18 + 4 * v19) = i;
            }
          }
        }
      }
      int v20 = 0;
      if (v4)
      {
        unsigned int v21 = v4;
        do
        {
          ++v20;
          unsigned int v21 = *(_DWORD *)(*(void *)v2 + 12 * v21 + 4);
        }
        while (v21);
      }
      unsigned int v37 = 0;
      uint64_t result = sub_236916CA4((uint64_t *)v2, v4, &v37);
      if (result)
      {
        unsigned int v22 = result;
        *(_DWORD *)(*v6 + 4 * (result >> 5)) |= 1 << result;
        if (v4) {
          goto LABEL_22;
        }
        goto LABEL_23;
      }
      if (!v20) {
        break;
      }
      do
      {
        sub_2369168C8((void *)(v2 + 72));
        uint64_t result = (uint64_t)sub_236916918((void *)(v2 + 24));
        uint64_t v25 = *(void *)(v2 + 56);
        if (v25 == *(void *)(v2 + 64)) {
          sub_236915220(v2 + 48, v25 + 1);
        }
        *(void *)(v2 + 56) = v25 + 1;
        --v20;
      }
      while (v20);
      unsigned int v26 = *(_DWORD *)(v2 + 112) - 1;
      if (v4) {
        goto LABEL_32;
      }
LABEL_37:
      unsigned int v22 = v26 + 1;
      *(_DWORD *)(*(void *)(v2 + 120) + 4 * v37) = v26 + 1;
      ++*(void *)(v2 + 192);
      if (v4)
      {
        do
        {
LABEL_22:
          unsigned int v23 = *(_DWORD *)(*(void *)v2 + 12 * v4 + 4);
          unsigned int v39 = v4;
          uint64_t result = (uint64_t)sub_236916964((void *)(v2 + 168), &v39);
          unsigned int v4 = v23;
        }
        while (v23);
      }
LABEL_23:
      uint64_t v24 = *(void *)(v2 + 144);
      uint64_t v3 = *(void *)(v2 + 152) - 1;
      *(_DWORD *)(*(void *)v2 + 12 * *(unsigned int *)(v24 + 4 * v3)) = v22;
      unsigned int v4 = *(_DWORD *)(v24 + 4 * v3);
      if (v4 == a2) {
        goto LABEL_2;
      }
    }
    unsigned int v26 = 0;
    if (!v4) {
      goto LABEL_37;
    }
LABEL_32:
    uint64_t v27 = *(void *)v2;
    unsigned int v28 = v4;
    do
    {
      uint64_t v29 = v28;
      uint64_t v30 = v27 + 12 * v28;
      int v31 = *(unsigned __int8 *)(v30 + 8);
      int v32 = *(_DWORD *)v30;
      if (v31) {
        int v33 = (2 * *(unsigned __int8 *)(v27 + 12 * v29 + 9)) | (4 * v32);
      }
      else {
        int v33 = 2 * v32;
      }
      uint64_t v34 = 3 * v29;
      *(_DWORD *)(*(void *)(v2 + 24) + 4 * v26) = v33 | *(unsigned __int8 *)(v27 + 4 * v34 + 10);
      *(unsigned char *)(*(void *)(v2 + 48) + v26--) = v31;
      uint64_t v27 = *(void *)v2;
      unsigned int v28 = *(_DWORD *)(*(void *)v2 + 4 * v34 + 4);
    }
    while (v28);
    goto LABEL_37;
  }
LABEL_2:
  *(void *)(v2 + 152) = v3;
  return result;
}

uint64_t sub_236916CA4(uint64_t *a1, unsigned int a2, _DWORD *a3)
{
  uint64_t v3 = a2;
  if (a2)
  {
    LODWORD(v4) = 0;
    uint64_t v5 = *a1;
    uint64_t v6 = a2;
    do
    {
      unint64_t v7 = (int *)(v5 + 12 * v6);
      int v8 = *((unsigned __int8 *)v7 + 8);
      int v9 = *v7;
      if (v8) {
        int v10 = (2 * *(unsigned __int8 *)(v5 + 12 * v6 + 9)) | (4 * v9);
      }
      else {
        int v10 = 2 * v9;
      }
      uint64_t v11 = v5 + 12 * v6;
      unsigned int v12 = ((v10 | *(unsigned __int8 *)(v11 + 10)) ^ ~(v8 << 24)) + ((v10 | *(unsigned __int8 *)(v11 + 10)) << 15);
      unsigned int v13 = 2057 * ((5 * (v12 ^ (v12 >> 12))) ^ ((5 * (v12 ^ (v12 >> 12))) >> 4));
      unint64_t v4 = v4 ^ HIWORD(v13) ^ v13;
      uint64_t v6 = *(unsigned int *)(v11 + 4);
    }
    while (v6);
  }
  else
  {
    unint64_t v4 = 0;
  }
  uint64_t v15 = a1[15];
  unint64_t v14 = a1[16];
  unint64_t v16 = v4 % v14;
  *a3 = v4 % v14;
  uint64_t v17 = *(unsigned int *)(v15 + 4 * (v4 % v14));
  if (v17)
  {
    uint64_t v18 = *a1;
    unint64_t v19 = (unsigned int *)(*a1 + 12 * a2 + 4);
    uint64_t v20 = a1[3];
    do
    {
      uint64_t v21 = *v19;
      unsigned int v22 = v17;
      if (v21)
      {
        unsigned int v22 = v17;
        while ((*(_DWORD *)(v20 + 4 * v22) & 1) != 0)
        {
          ++v22;
          LODWORD(v21) = *(_DWORD *)(v18 + 12 * v21 + 4);
          if (!v21) {
            goto LABEL_15;
          }
        }
      }
      else
      {
LABEL_15:
        if ((*(_DWORD *)(v20 + 4 * v22) & 1) == 0)
        {
          if (!v3) {
            return v17;
          }
          uint64_t v23 = v3;
          while (1)
          {
            uint64_t v24 = (int *)(v18 + 12 * v23);
            int v25 = *((unsigned __int8 *)v24 + 8);
            int v26 = *v24;
            int v27 = v25 ? (2 * *(unsigned __int8 *)(v18 + 12 * v23 + 9)) | (4 * v26) : 2 * v26;
            if ((v27 | *(unsigned __int8 *)(v18 + 12 * v23 + 10)) != *(_DWORD *)(v20 + 4 * v22)
              || v25 != *(unsigned __int8 *)(a1[6] + v22))
            {
              break;
            }
            uint64_t v23 = *(unsigned int *)(v18 + 12 * v23 + 4);
            --v22;
            if (!v23) {
              return v17;
            }
          }
        }
      }
      unint64_t v16 = (v16 + 1) % v14;
      *a3 = v16;
      uint64_t v17 = *(unsigned int *)(v15 + 4 * v16);
    }
    while (v17);
  }
  return v17;
}

void sub_236916E10()
{
}

unsigned int *sub_236916F54(unsigned int *result, unsigned int a2)
{
  if (a2 >> 29)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    void *exception = &unk_26E9CD5E8;
    exception[1] = "/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/darts_clone/darts.h:1339: exception: "
                   "failed to modify unit: too large offset";
    __cxa_throw(exception, (struct type_info *)&unk_26E9CD5C0, (void (*)(void *))std::exception::~exception);
  }
  int v2 = (4 * a2) | 0x200;
  if (a2 < 0x200000) {
    int v2 = a2 << 10;
  }
  *uint64_t result = *result & 0x800001FF | v2;
  return result;
}

unsigned int *sub_236916FDC(uint64_t a1, void *a2, unsigned int a3, unsigned int a4)
{
  int v8 = a2 + 9;
  unint64_t v9 = *(unsigned int *)(a2[3] + 4 * a3);
  unint64_t v10 = v9 >> 2;
  unint64_t v11 = v9 >> 7;
  int v12 = 1 << (v9 >> 2);
  if ((v12 & *(_DWORD *)(a2[9] + 4 * (v9 >> 7))) != 0
    && (int v13 = *(_DWORD *)(*(void *)(a1 + 64) + 4 * (sub_236917618(a2 + 9, v10) - 1))) != 0
    && ((unsigned int v14 = v13 ^ a4, ((v13 ^ a4) & 0x1FE00000) != 0) ? (v15 = (v13 ^ a4) == 0) : (v15 = 1), v15))
  {
    if (*(unsigned char *)(a2[6] + v10))
    {
      uint64_t v16 = *(void *)(a1 + 8);
      uint64_t v17 = a4;
    }
    else
    {
      uint64_t v17 = a4;
      uint64_t v16 = *(void *)(a1 + 8);
      *(_DWORD *)(v16 + 4 * a4) |= 0x100u;
    }
    return sub_236916F54((unsigned int *)(v16 + 4 * v17), v14);
  }
  else
  {
    uint64_t result = (unsigned int *)sub_236917368(a1, (uint64_t)a2, a3, a4);
    int v19 = (int)result;
    if ((*(_DWORD *)(a2[9] + 4 * v11) & v12) != 0)
    {
      uint64_t result = (unsigned int *)sub_236917618(v8, v10);
      *(_DWORD *)(*(void *)(a1 + 64) + 4 * (result - 1)) = v19;
    }
    do
    {
      if (*(unsigned char *)(a2[6] + v10)) {
        uint64_t result = (unsigned int *)sub_236916FDC(a1, a2, v10, v19 ^ *(unsigned __int8 *)(a2[6] + v10));
      }
      if (v10 == -1) {
        break;
      }
      int v20 = *(_DWORD *)(a2[3] + 4 * v10);
      LODWORD(v10) = v10 + 1;
    }
    while ((v20 & 1) != 0);
  }
  return result;
}

void sub_236917154(uint64_t a1)
{
  int v2 = (void *)(a1 + 8);
  unint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = (v3 + 256);
  unsigned int v5 = (v3 >> 8) - 16;
  if (v5 >= 0xFFFFFFEF)
  {
    sub_236915448((void *)(a1 + 8), (v3 + 256));
  }
  else
  {
    int v6 = 0;
    unint64_t v7 = v5 << 8;
    uint64_t v8 = *(void *)(a1 + 32);
    while (1)
    {
      char v9 = v7 + v6;
      if (!*(unsigned char *)(v8 + 12 * ((v7 + v6) & 0xFFF) + 9)) {
        break;
      }
      if (++v6 == 256)
      {
        char v9 = 0;
        break;
      }
    }
    uint64_t v10 = 0;
    uint64_t v11 = 3072 * ((v3 >> 8) & 0xF);
    do
    {
      if (!*(unsigned char *)(v8 + v11 + v10 + 8))
      {
        if (*(void *)(a1 + 16) <= v7)
        {
          sub_236917154(a1);
          uint64_t v8 = *(void *)(a1 + 32);
        }
        int v12 = (int *)(v8 + v11 + v10);
        uint64_t v13 = v12[1];
        if (v7 == *(_DWORD *)(a1 + 72))
        {
          *(_DWORD *)(a1 + 72) = v13;
          if (v7 == v13) {
            *(_DWORD *)(a1 + 72) = *(void *)(a1 + 16);
          }
        }
        int v14 = *v12;
        *(_DWORD *)(v8 + 12 * (*v12 & 0xFFF) + 4) = v13;
        *(_DWORD *)(v8 + 12 * (v12[1] & 0xFFF)) = v14;
        *((unsigned char *)v12 + 8) = 1;
        *(unsigned char *)(*v2 + 4 * v7) = v9 ^ v7;
      }
      ++v7;
      v10 += 12;
    }
    while (v10 != 3072);
    sub_236915448(v2, (v3 + 256));
    uint64_t v15 = v3;
    if (v3 < (unint64_t)v4)
    {
      uint64_t v16 = *(void *)(a1 + 32);
      do
        *(_WORD *)(v16 + 12 * (v15++ & 0xFFF) + 8) = 0;
      while (v4 != v15);
    }
  }
  uint64_t v17 = *(void *)(a1 + 32);
  if ((int)v3 + 1 < v4)
  {
    for (int i = 0; i != 255; ++i)
    {
      int v19 = v3 + i;
      *(_DWORD *)(v17 + 12 * (v19 & 0xFFF) + 4) = v19 + 1;
      *(_DWORD *)(v17 + 12 * ((v19 + 1) & 0xFFF)) = v19;
    }
  }
  uint64_t v20 = 12 * (v3 & 0xFFF);
  *(_DWORD *)(v17 + v20) = v3 + 255;
  int v21 = *(_DWORD *)(a1 + 72);
  uint64_t v22 = 12 * (v21 & 0xFFF);
  *(_DWORD *)(v17 + v20) = *(_DWORD *)(v17 + v22);
  LOWORD(v20) = *(_DWORD *)(v17 + v22);
  *(_DWORD *)(v17 + 12 * ((v3 + 255) & 0xFFF) + 4) = v21;
  *(_DWORD *)(v17 + 12 * (v20 & 0xFFF) + 4) = v3;
  *(_DWORD *)(v17 + v22) = v3 + 255;
}

uint64_t sub_236917368(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4)
{
  uint64_t v8 = (void *)(a1 + 40);
  sub_2369151C0(a1 + 40, 0);
  unsigned int v9 = *(_DWORD *)(*(void *)(a2 + 24) + 4 * a3);
  if (v9 >= 4)
  {
    unsigned int v10 = v9 >> 2;
    do
    {
      char v35 = *(unsigned char *)(*(void *)(a2 + 48) + v10);
      sub_23691767C(v8, &v35);
      int v11 = *(_DWORD *)(*(void *)(a2 + 24) + 4 * v10);
      BOOL v13 = __CFADD__(v10++, 1);
    }
    while ((v11 & 1) != 0 && !v13);
  }
  unint64_t v14 = *(unsigned int *)(a1 + 72);
  unint64_t v15 = *(void *)(a1 + 16);
  if (v15 <= v14)
  {
LABEL_20:
    uint64_t v19 = a4 | v15;
  }
  else
  {
    uint64_t v17 = *(void *)(a1 + 32);
    uint64_t v16 = *(unsigned __int8 **)(a1 + 40);
    int v18 = *(_DWORD *)(a1 + 72);
    while (1)
    {
      uint64_t v19 = v18 ^ *v16;
      int v20 = ((unsigned __int16)v18 ^ *v16) & 0xFFF;
      if (!*(unsigned char *)(v17 + 12 * (((unsigned __int16)v18 ^ *v16) & 0xFFF) + 9)
        && (!((v18 ^ *v16) ^ a4) || ((v19 ^ a4) & 0x1FE00000) == 0))
      {
        unint64_t v21 = *(void *)(a1 + 48);
        if (v21 < 2) {
          goto LABEL_21;
        }
        if (!*(unsigned char *)(v17 + 12 * (v20 ^ v16[1]) + 8)) {
          break;
        }
      }
LABEL_19:
      int v18 = *(_DWORD *)(v17 + 12 * (v18 & 0xFFF) + 4);
      if (v18 == v14) {
        goto LABEL_20;
      }
    }
    uint64_t v22 = 2;
    while (v21 != v22)
    {
      if (*(unsigned __int8 *)(v17 + 12 * (v20 ^ v16[v22++]) + 8))
      {
        if (v22 - 1 >= v21) {
          break;
        }
        goto LABEL_19;
      }
    }
  }
LABEL_21:
  sub_236916F54((unsigned int *)(*(void *)(a1 + 8) + 4 * a4), v19 ^ a4);
  if (*(void *)(a1 + 48))
  {
    unint64_t v24 = 0;
    unsigned int v25 = *(_DWORD *)(*(void *)(a2 + 24) + 4 * a3) >> 2;
    do
    {
      unint64_t v26 = v19 ^ *(unsigned __int8 *)(*(void *)(a1 + 40) + v24);
      if (*(void *)(a1 + 16) <= v26) {
        sub_236917154(a1);
      }
      if (*(_DWORD *)(a1 + 72) == v26)
      {
        unsigned int v27 = v26 & 0xFFF;
        uint64_t v28 = *(void *)(a1 + 32);
        int v29 = *(_DWORD *)(v28 + 12 * (v26 & 0xFFF) + 4);
        *(_DWORD *)(a1 + 72) = v29;
        if (v29 == v26)
        {
          *(_DWORD *)(a1 + 72) = *(void *)(a1 + 16);
          int v29 = v26;
        }
      }
      else
      {
        uint64_t v28 = *(void *)(a1 + 32);
        unsigned int v27 = v26 & 0xFFF;
        int v29 = *(_DWORD *)(v28 + 12 * (v26 & 0xFFF) + 4);
      }
      uint64_t v30 = (int *)(v28 + 12 * v27);
      int v31 = *v30;
      *(_DWORD *)(v28 + 12 * (*v30 & 0xFFF) + 4) = v29;
      *(_DWORD *)(v28 + 12 * (v30[1] & 0xFFF)) = v31;
      *((unsigned char *)v30 + 8) = 1;
      uint64_t v32 = *(void *)(a1 + 8);
      if (*(unsigned char *)(*(void *)(a2 + 48) + v25))
      {
        *(unsigned char *)(v32 + 4 * v26) = *(unsigned char *)(*v8 + v24);
        unsigned int v33 = *(_DWORD *)(*(void *)(a2 + 24) + 4 * v25);
      }
      else
      {
        *(_DWORD *)(v32 + 4 * a4) |= 0x100u;
        unsigned int v33 = *(_DWORD *)(*(void *)(a2 + 24) + 4 * v25);
        *(_DWORD *)(v32 + 4 * v26) = (v33 >> 1) | 0x80000000;
      }
      unsigned int v25 = ((int)(v33 << 31) >> 31) & (v25 + 1);
      ++v24;
    }
    while (v24 < *(void *)(a1 + 48));
  }
  else
  {
    uint64_t v28 = *(void *)(a1 + 32);
  }
  *(unsigned char *)(v28 + 12 * (v19 & 0xFFF) + 9) = 1;
  return v19;
}

uint64_t sub_236917618(void *a1, unint64_t a2)
{
  uint64_t v2 = (a2 >> 3) & 0x1FFFFFFFFFFFFFFCLL;
  int v3 = *(_DWORD *)(a1[3] + v2);
  LODWORD(v2) = *(_DWORD *)(*a1 + v2) & (0xFFFFFFFF >> ~(_BYTE)a2);
  LODWORD(v2) = ((((unint64_t)(((v2 >> 1) & 0x55555555) + (v2 & 0x55555555)) >> 2) & 0x33333333)
               + ((((v2 >> 1) & 0x55555555) + (v2 & 0x55555555)) & 0x33333333)
               + (((((unint64_t)(((v2 >> 1) & 0x55555555) + (v2 & 0x55555555)) >> 2) & 0x33333333)
                 + ((((v2 >> 1) & 0x55555555) + (v2 & 0x55555555)) & 0x33333333)) >> 4)) & 0xF0F0F0F;
  return (((_BYTE)v2 + BYTE1(v2) + ((v2 + (v2 >> 8)) >> 16)) & 0x3Fu) + v3;
}

void *sub_23691767C(void *result, unsigned char *a2)
{
  uint64_t v2 = result[1];
  if (v2 == result[2]) {
    sub_236915220((uint64_t)result, v2 + 1);
  }
  result[1] = v2 + 1;
  *(unsigned char *)(*result + v2) = *a2;
  return result;
}

uint64_t *sub_2369176D0(uint64_t *a1)
{
  sub_236916284(a1);
  sub_236916040(a1 + 3);
  sub_236915174(a1 + 6);
  sub_236915FB0(a1 + 9);
  sub_236915D20(a1 + 15);
  sub_236915D20(a1 + 18);
  sub_236915D20(a1 + 21);
  a1[24] = 0;
  sub_236915CE4(a1 + 21);
  sub_236915CE4(a1 + 18);
  sub_236915F08(a1 + 15);
  sub_236915F54(a1 + 9);
  sub_236915128(a1 + 6);
  sub_236915FF4(a1 + 3);
  return sub_236916238(a1);
}

uint64_t sub_2369177A0(uint64_t a1, void *a2, unint64_t a3, unint64_t a4, unint64_t a5, unsigned int a6)
{
  while (1)
  {
    uint64_t result = sub_236917908(a1, a2, a3, a4, a5, a6);
    int v12 = result;
    if (a3 < a4)
    {
      uint64_t v13 = a2[2];
      while (v13 && *(void *)(v13 + 8 * a3) <= a5 || !*(unsigned char *)(*(void *)(a2[1] + 8 * a3) + a5))
      {
        if (a4 == ++a3) {
          return result;
        }
      }
    }
    if (a3 == a4) {
      break;
    }
    uint64_t v14 = a2[2];
    if (v14 && *(void *)(v14 + 8 * a3) <= a5) {
      unsigned int v15 = 0;
    }
    else {
      unsigned int v15 = *(unsigned __int8 *)(*(void *)(a2[1] + 8 * a3) + a5);
    }
    unint64_t v16 = a3 + 1;
    if (a3 + 1 < a4)
    {
      do
      {
        if (v14 && *(void *)(v14 + 8 * v16) <= a5) {
          int v17 = 0;
        }
        else {
          int v17 = *(unsigned __int8 *)(*(void *)(a2[1] + 8 * v16) + a5);
        }
        if (v17 != v15)
        {
          sub_2369177A0(a1, a2, a3, v16, a5 + 1, v12 ^ v15);
          uint64_t v14 = a2[2];
          if (v14 && *(void *)(v14 + 8 * v16) <= a5) {
            unsigned int v15 = 0;
          }
          else {
            unsigned int v15 = *(unsigned __int8 *)(*(void *)(a2[1] + 8 * v16) + a5);
          }
          a3 = v16;
        }
        ++v16;
      }
      while (a4 != v16);
    }
    a6 = v12 ^ v15;
    ++a5;
  }
  return result;
}

uint64_t sub_236917908(uint64_t a1, void *a2, unint64_t a3, unint64_t a4, unint64_t a5, unsigned int a6)
{
  int v12 = (uint64_t *)(a1 + 40);
  sub_2369151C0(a1 + 40, 0);
  int v13 = -1;
  if (a3 < a4)
  {
    do
    {
      unsigned __int8 v41 = 0;
      uint64_t v14 = a2[2];
      if (v14)
      {
        if (*(void *)(v14 + 8 * a3) > a5)
        {
          unsigned __int8 v41 = *(unsigned char *)(*(void *)(a2[1] + 8 * a3) + a5);
          if (!v41)
          {
            exception = __cxa_allocate_exception(0x10uLL);
            unint64_t v40 = "/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/darts_clone/darts.h:1675: exception: f"
                  "ailed to build double-array: invalid null character";
            goto LABEL_52;
          }
          goto LABEL_17;
        }
      }
      else
      {
        unsigned __int8 v41 = *(unsigned char *)(*(void *)(a2[1] + 8 * a3) + a5);
        if (v41) {
          goto LABEL_17;
        }
      }
      uint64_t v15 = a2[3];
      if (v15)
      {
        if ((*(_DWORD *)(v15 + 4 * a3) & 0x80000000) != 0) {
          goto LABEL_51;
        }
      }
      else if ((a3 & 0x80000000) != 0)
      {
LABEL_51:
        exception = __cxa_allocate_exception(0x10uLL);
        unint64_t v40 = "/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/darts_clone/darts.h:1677: exception: faile"
              "d to build double-array: negative value";
LABEL_52:
        void *exception = &unk_26E9CD5E8;
        exception[1] = v40;
        __cxa_throw(exception, (struct type_info *)&unk_26E9CD5C0, (void (*)(void *))std::exception::~exception);
      }
      if (v13 == -1)
      {
        if (v15) {
          int v13 = *(_DWORD *)(v15 + 4 * a3);
        }
        else {
          int v13 = a3;
        }
      }
      if (*(void *)a1) {
        (*(void (**)(unint64_t, uint64_t))a1)(a3 + 1, *a2 + 1);
      }
LABEL_17:
      uint64_t v16 = *(void *)(a1 + 48);
      if (!v16) {
        goto LABEL_21;
      }
      unsigned int v17 = *(unsigned __int8 *)(v16 + *v12 - 1);
      if (v41 != v17)
      {
        if (v41 < v17)
        {
          exception = __cxa_allocate_exception(0x10uLL);
          unint64_t v40 = "/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/darts_clone/darts.h:1692: exception: fai"
                "led to build double-array: wrong key order";
          goto LABEL_52;
        }
LABEL_21:
        sub_23691767C(v12, &v41);
      }
      ++a3;
    }
    while (a4 != a3);
  }
  unint64_t v18 = *(unsigned int *)(a1 + 72);
  unint64_t v19 = *(void *)(a1 + 16);
  if (v19 <= v18)
  {
LABEL_35:
    uint64_t v23 = a6 | v19;
  }
  else
  {
    uint64_t v21 = *(void *)(a1 + 32);
    int v20 = *(unsigned __int8 **)(a1 + 40);
    int v22 = *(_DWORD *)(a1 + 72);
    while (1)
    {
      uint64_t v23 = v22 ^ *v20;
      int v24 = ((unsigned __int16)v22 ^ *v20) & 0xFFF;
      if (!*(unsigned char *)(v21 + 12 * (((unsigned __int16)v22 ^ *v20) & 0xFFF) + 9)
        && (!((v22 ^ *v20) ^ a6) || ((v23 ^ a6) & 0x1FE00000) == 0))
      {
        unint64_t v25 = *(void *)(a1 + 48);
        if (v25 < 2) {
          goto LABEL_36;
        }
        if (!*(unsigned char *)(v21 + 12 * (v24 ^ v20[1]) + 8)) {
          break;
        }
      }
LABEL_34:
      int v22 = *(_DWORD *)(v21 + 12 * (v22 & 0xFFF) + 4);
      if (v22 == v18) {
        goto LABEL_35;
      }
    }
    uint64_t v26 = 2;
    while (v25 != v26)
    {
      if (*(unsigned __int8 *)(v21 + 12 * (v24 ^ v20[v26++]) + 8))
      {
        if (v26 - 1 >= v25) {
          break;
        }
        goto LABEL_34;
      }
    }
  }
LABEL_36:
  sub_236916F54((unsigned int *)(*(void *)(a1 + 8) + 4 * a6), v23 ^ a6);
  if (*(void *)(a1 + 48))
  {
    unint64_t v28 = 0;
    unsigned int v29 = v13 | 0x80000000;
    uint64_t v30 = *v12;
    do
    {
      unint64_t v31 = v23 ^ *(unsigned __int8 *)(v30 + v28);
      if (*(void *)(a1 + 16) <= v31) {
        sub_236917154(a1);
      }
      if (*(_DWORD *)(a1 + 72) == v31)
      {
        unsigned int v32 = v31 & 0xFFF;
        uint64_t v33 = *(void *)(a1 + 32);
        int v34 = *(_DWORD *)(v33 + 12 * (v31 & 0xFFF) + 4);
        *(_DWORD *)(a1 + 72) = v34;
        if (v34 == v31)
        {
          *(_DWORD *)(a1 + 72) = *(void *)(a1 + 16);
          int v34 = v31;
        }
      }
      else
      {
        uint64_t v33 = *(void *)(a1 + 32);
        unsigned int v32 = v31 & 0xFFF;
        int v34 = *(_DWORD *)(v33 + 12 * (v31 & 0xFFF) + 4);
      }
      char v35 = (int *)(v33 + 12 * v32);
      int v36 = *v35;
      *(_DWORD *)(v33 + 12 * (*v35 & 0xFFF) + 4) = v34;
      *(_DWORD *)(v33 + 12 * (v35[1] & 0xFFF)) = v36;
      *((unsigned char *)v35 + 8) = 1;
      uint64_t v30 = *(void *)(a1 + 40);
      uint64_t v37 = *(void *)(a1 + 8);
      if (*(unsigned char *)(v30 + v28))
      {
        *(unsigned char *)(v37 + 4 * v31) = *(unsigned char *)(v30 + v28);
      }
      else
      {
        *(_DWORD *)(v37 + 4 * a6) |= 0x100u;
        *(_DWORD *)(v37 + 4 * v31) = v29;
      }
      ++v28;
    }
    while (v28 < *(void *)(a1 + 48));
  }
  else
  {
    uint64_t v33 = *(void *)(a1 + 32);
  }
  *(unsigned char *)(v33 + 12 * (v23 & 0xFFF) + 9) = 1;
  return v23;
}

uint64_t sub_236917CB0(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(a1 + 8);
  sub_2369153FC((uint64_t *)(a1 + 8));
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3)
  {
    MEMORY[0x237E07550](v3, 0x1000C80CBA68D63);
    *(void *)(a1 + 32) = 0;
  }
  sub_236915174((uint64_t *)(a1 + 40));
  uint64_t v4 = *(void *)(a1 + 64);
  if (v4)
  {
    MEMORY[0x237E07550](v4, 0x1000C8052888210);
    *(void *)(a1 + 64) = 0;
  }
  *(_DWORD *)(a1 + 72) = 0;
  sub_236915128((uint64_t *)(a1 + 40));
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5)
  {
    MEMORY[0x237E07550](v5, 0x1000C80CBA68D63);
    *(void *)(a1 + 32) = 0;
  }
  sub_2369153B0(v2);
  return a1;
}

void *sub_236917D6C(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_236917DE4(a1, a2);
    uint64_t v4 = (char *)a1[1];
    bzero(v4, 16 * a2);
    a1[1] = &v4[16 * a2];
  }
  return a1;
}

void sub_236917DC8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_236917DE4(void *a1, unint64_t a2)
{
  if (a2 >> 60) {
    sub_236913FC4();
  }
  uint64_t result = (char *)sub_236914EC0((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[16 * v4];
  return result;
}

uint64_t sub_236917E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = &unk_26E9CD610;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = a2 + 16;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a3 + 245);
  sub_236944CDC((void *)(a1 + 56));
  unint64_t v5 = *(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    unint64_t v5 = *(void *)v5;
    unint64_t v6 = *(void *)((*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else
  {
    unint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  sub_236917F0C((uint64_t *)a1, (unsigned int *)v5, v6);
  return a1;
}

void sub_236917EC0(_Unwind_Exception *a1)
{
  sub_236944CE4(v1);
  uint64_t v4 = *v2;
  *uint64_t v2 = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_236917F0C(uint64_t *result, unsigned int *a2, unint64_t a3)
{
  if (a3)
  {
    uint64_t v3 = result;
    v6[0] = 0;
    v6[1] = 0;
    long long v5 = 0uLL;
    sub_23691838C(a2, a3, v6, &v5, &v4);
    sub_236944F04(v3 + 7, &v4);
    uint64_t result = sub_236944CE4(&v4);
    if (!v3[7]) {
      operator new();
    }
  }
  return result;
}

void sub_23691806C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_236944CE4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_236918088(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26E9CD610;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = a2 + 16;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 0;
  sub_236944CDC((void *)(a1 + 56));
  unint64_t v4 = *(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v4 + 23) < 0)
  {
    unint64_t v4 = *(void *)v4;
    unint64_t v5 = *(void *)((*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else
  {
    unint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  }
  sub_236917F0C((uint64_t *)a1, (unsigned int *)v4, v5);
  return a1;
}

void sub_23691811C(_Unwind_Exception *a1)
{
  sub_236944CE4(v1);
  uint64_t v4 = *v2;
  *uint64_t v2 = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_23691816C(uint64_t *a1, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  *a1 = (uint64_t)&unk_26E9CD610;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = a2;
  a1[5] = 0;
  *((unsigned char *)a1 + 48) = 0;
  unint64_t v7 = a1 + 7;
  sub_236944CDC(a1 + 7);
  int v11 = 0;
  sub_236910588(a3, a4, &v11, &v10);
  sub_236944F04(v7, &v10);
  sub_236944CE4(&v10);
  (*(void (**)(uint64_t *__return_ptr, uint64_t *))(*a1 + 24))(&v10, a1);
  uint64_t v8 = v10;
  sub_236944CE4(&v10);
  if (!v8)
  {
    *((unsigned char *)a1 + 48) = v11 != 0;
    sub_236917F0C(a1, a3 + 1, a4 - 4);
  }
  return a1;
}

void sub_236918274(_Unwind_Exception *a1)
{
  sub_236944CE4(v1);
  uint64_t v4 = *v2;
  *uint64_t v2 = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  _Unwind_Resume(a1);
}

void *sub_2369182DC(void *a1)
{
  *a1 = &unk_26E9CD610;
  sub_236944CE4(a1 + 7);
  uint64_t v2 = a1[1];
  a1[1] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_236918354(void *a1)
{
  sub_2369182DC(a1);
  JUMPOUT(0x237E07580);
}

void *sub_23691838C@<X0>(unsigned int *a1@<X0>, unint64_t a2@<X1>, unsigned int **a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  if (a2 < 5 || (unint64_t v7 = (unsigned int *)*a1, a2 <= (unint64_t)v7))
  {
    uint64_t v10 = "Blob for normalization rule is broken.";
    uint64_t v11 = 38;
  }
  else
  {
    if ((unint64_t)(v7 + 1) < a2)
    {
      uint64_t v8 = a1 + 1;
      *a3 = v8;
      a3[1] = v7;
      *a4 = (char *)v7 + (void)v8;
      a4[1] = a2 - (void)v7 - 4;
      return sub_236944CDC(a5);
    }
    uint64_t v10 = "Trie data size exceeds the input blob size.";
    uint64_t v11 = 43;
  }
  return (void *)sub_236944E48(a5, 13, v10, v11);
}

void *sub_2369183F4@<X0>(size_t a1@<X0>, char *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  unint64_t v6 = a3;
  uint64_t v84 = (void **)a5;
  uint64_t v85 = (std::string *)a4;
  *(void *)(a5 + 8) = *(void *)a5;
  if (*(char *)(a4 + 23) < 0)
  {
    **(unsigned char **)a4 = 0;
    *(void *)(a4 + 8) = 0;
    if (a3) {
      goto LABEL_3;
    }
LABEL_10:
    return sub_236944CDC(a6);
  }
  *(unsigned char *)a4 = 0;
  *(unsigned char *)(a4 + 23) = 0;
  if (!a3) {
    goto LABEL_10;
  }
LABEL_3:
  uint64_t result = (void *)(*(uint64_t (**)(size_t))(*(void *)a1 + 24))(a1);
  if (*a6) {
    return result;
  }
  sub_236944CE4(a6);
  int v83 = 0;
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 32) + 24))(*(void *)(a1 + 32)))
  {
    do
    {
      sub_236918D0C(a1, a2, v6, (uint64_t)&v74);
      if (v75 != 1 || *v74 != 32) {
        goto LABEL_13;
      }
      a2 += (int)v76;
      v83 += v76;
      v6 -= (int)v76;
    }
    while (v6);
    uint64_t v11 = a6;
    return sub_236944CDC(v11);
  }
LABEL_13:
  uint64_t v71 = (uint64_t)a6;
  std::string::reserve(v85, 3 * v6);
  sub_236918EF4(v84, 3 * v6);
  uint64_t v81 = "▁";
  std::string::size_type v82 = 3;
  v80[0] = a1;
  v80[1] = &v83;
  v80[2] = &v85;
  v80[3] = &v84;
  v80[4] = &v81;
  if (!*(unsigned char *)(a1 + 48)
    && (*(unsigned int (**)(void))(**(void **)(a1 + 32) + 16))(*(void *)(a1 + 32)))
  {
    sub_236918F9C((uint64_t)v80);
  }
  int v12 = (*(uint64_t (**)(void))(**(void **)(a1 + 32) + 24))(*(void *)(a1 + 32));
  do
  {
    sub_236918D0C(a1, a2, v6, (uint64_t)&v74);
    int v13 = v74;
    uint64_t v14 = v75;
    if (v12)
    {
      if (!v75) {
        goto LABEL_66;
      }
      while (*v13 == 32)
      {
        ++v13;
        if (!--v14) {
          goto LABEL_66;
        }
      }
    }
    else if (!v75)
    {
      int v12 = 0;
      goto LABEL_66;
    }
    uint64_t v72 = a2;
    unint64_t v73 = v6;
    uint64_t v15 = 0;
    do
    {
      int v16 = (*(uint64_t (**)(void))(**(void **)(a1 + 32) + 32))(*(void *)(a1 + 32));
      int v17 = v13[v15];
      if (v16 && v17 == 32)
      {
        std::string::append(v85, v81, v82);
        if (v82)
        {
          for (std::string::size_type i = 0; i < v82; ++i)
          {
            unint64_t v19 = v84;
            uint64_t v20 = v83;
            uint64_t v21 = (char *)v84[1];
            int v22 = (char *)v84[2];
            if (v21 >= v22)
            {
              int v24 = (char *)*v84;
              uint64_t v25 = (v21 - (unsigned char *)*v84) >> 3;
              unint64_t v26 = v25 + 1;
              if ((unint64_t)(v25 + 1) >> 61) {
                goto LABEL_116;
              }
              uint64_t v27 = v22 - v24;
              if (v27 >> 2 > v26) {
                unint64_t v26 = v27 >> 2;
              }
              if ((unint64_t)v27 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v28 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v28 = v26;
              }
              if (v28)
              {
                unsigned int v29 = (char *)sub_2369147B8((uint64_t)(v84 + 2), v28);
                int v24 = (char *)*v19;
                uint64_t v21 = (char *)v19[1];
              }
              else
              {
                unsigned int v29 = 0;
              }
              uint64_t v30 = &v29[8 * v25];
              *(void *)uint64_t v30 = v20;
              uint64_t v23 = v30 + 8;
              while (v21 != v24)
              {
                uint64_t v31 = *((void *)v21 - 1);
                v21 -= 8;
                *((void *)v30 - 1) = v31;
                v30 -= 8;
              }
              *unint64_t v19 = v30;
              v19[1] = v23;
              v19[2] = &v29[8 * v28];
              if (v24) {
                operator delete(v24);
              }
            }
            else
            {
              *(void *)uint64_t v21 = v83;
              uint64_t v23 = v21 + 8;
            }
            v19[1] = v23;
          }
        }
      }
      else
      {
        std::string::push_back(v85, v17);
        unsigned int v32 = v84;
        uint64_t v33 = v83;
        int v34 = (char *)v84[1];
        char v35 = (char *)v84[2];
        if (v34 >= v35)
        {
          uint64_t v37 = (char *)*v84;
          uint64_t v38 = (v34 - (unsigned char *)*v84) >> 3;
          unint64_t v39 = v38 + 1;
          if ((unint64_t)(v38 + 1) >> 61) {
LABEL_116:
          }
            sub_236913FC4();
          uint64_t v40 = v35 - v37;
          if (v40 >> 2 > v39) {
            unint64_t v39 = v40 >> 2;
          }
          if ((unint64_t)v40 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v41 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v41 = v39;
          }
          if (v41)
          {
            uint64_t v42 = (char *)sub_2369147B8((uint64_t)(v84 + 2), v41);
            uint64_t v37 = (char *)*v32;
            int v34 = (char *)v32[1];
          }
          else
          {
            uint64_t v42 = 0;
          }
          uint64_t v43 = &v42[8 * v38];
          *(void *)uint64_t v43 = v33;
          int v36 = v43 + 8;
          while (v34 != v37)
          {
            uint64_t v44 = *((void *)v34 - 1);
            v34 -= 8;
            *((void *)v43 - 1) = v44;
            v43 -= 8;
          }
          *unsigned int v32 = v43;
          v32[1] = v36;
          v32[2] = &v42[8 * v41];
          if (v37) {
            operator delete(v37);
          }
        }
        else
        {
          *(void *)int v34 = v83;
          int v36 = v34 + 8;
        }
        v32[1] = v36;
      }
      ++v15;
    }
    while (v15 != v14);
    int v12 = v13[v14 - 1] == 32;
    a2 = v72;
    unint64_t v6 = v73;
LABEL_66:
    v83 += v76;
    a2 += (int)v76;
    v6 -= (int)v76;
    v12 &= (*(uint64_t (**)(void))(**(void **)(a1 + 32) + 24))(*(void *)(a1 + 32));
  }
  while (v6);
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 32) + 24))(*(void *)(a1 + 32)))
  {
    int v45 = (*(uint64_t (**)(void))(**(void **)(a1 + 32) + 32))(*(void *)(a1 + 32));
    if (v45) {
      size_t v46 = v82;
    }
    else {
      size_t v46 = 1;
    }
    if (v45) {
      int v47 = v81;
    }
    else {
      int v47 = " ";
    }
    while (1)
    {
      uint64_t v48 = v85;
      LODWORD(v49) = HIBYTE(v85->__r_.__value_.__r.__words[2]);
      if (SHIBYTE(v85->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v50 = (std::string *)v85->__r_.__value_.__r.__words[0];
        std::string::size_type size = v85->__r_.__value_.__l.__size_;
        if (!v46) {
          goto LABEL_81;
        }
      }
      else
      {
        uint64_t v50 = v85;
        std::string::size_type size = HIBYTE(v85->__r_.__value_.__r.__words[2]);
        if (!v46) {
          goto LABEL_81;
        }
      }
      BOOL v52 = size >= v46;
      std::string::size_type v53 = size - v46;
      if (!v52 || memcmp((char *)v50 + v53, v47, v46)) {
        break;
      }
LABEL_81:
      if ((v49 & 0x80) != 0) {
        std::string::size_type v49 = v48->__r_.__value_.__l.__size_;
      }
      if (v49 - v46 < 0)
      {
        LODWORD(v74) = 13;
        uint64_t v65 = (void *)sub_236912F84((uint64_t)&v75);
        sub_236914270(v65, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/normalizer.cc", 69);
        sub_236914270(&v75, (uint64_t)"(", 1);
        std::ostream::operator<<();
        sub_236914270(&v75, (uint64_t)") [", 3);
        sub_236914270(&v75, (uint64_t)"(length) >= (0)", 15);
        sub_236914270(&v75, (uint64_t)"] ", 2);
        sub_2369107FC((unsigned int *)&v74, v71);
        goto LABEL_112;
      }
      int v83 = *((void *)*v84 + (v49 - v46));
      std::string::resize(v48, (v49 - v46), 0);
      sub_2369191D0((uint64_t)v84, (v49 - v46));
    }
  }
  if (*(unsigned char *)(a1 + 48)
    && (*(unsigned int (**)(void))(**(void **)(a1 + 32) + 16))(*(void *)(a1 + 32)))
  {
    sub_236918F9C((uint64_t)v80);
  }
  int64_t v54 = v84;
  uint64_t v55 = v83;
  char v56 = (char *)v84[1];
  os_log_type_t v57 = (char *)v84[2];
  if (v56 >= v57)
  {
    uint64_t v59 = (char *)*v84;
    uint64_t v60 = (v56 - (unsigned char *)*v84) >> 3;
    unint64_t v61 = v60 + 1;
    if ((unint64_t)(v60 + 1) >> 61) {
      sub_236913FC4();
    }
    uint64_t v62 = v57 - v59;
    if (v62 >> 2 > v61) {
      unint64_t v61 = v62 >> 2;
    }
    if ((unint64_t)v62 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v63 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v63 = v61;
    }
    if (v63)
    {
      uint64_t v64 = (char *)sub_2369147B8((uint64_t)(v84 + 2), v63);
      uint64_t v59 = (char *)*v54;
      char v56 = (char *)v54[1];
    }
    else
    {
      uint64_t v64 = 0;
    }
    uint64_t v66 = &v64[8 * v60];
    uint64_t v67 = &v64[8 * v63];
    *(void *)uint64_t v66 = v55;
    uint64_t v58 = v66 + 8;
    while (v56 != v59)
    {
      uint64_t v68 = *((void *)v56 - 1);
      v56 -= 8;
      *((void *)v66 - 1) = v68;
      v66 -= 8;
    }
    *int64_t v54 = v66;
    v54[1] = v58;
    v54[2] = v67;
    if (v59) {
      operator delete(v59);
    }
  }
  else
  {
    *(void *)char v56 = v83;
    uint64_t v58 = v56 + 8;
  }
  v54[1] = v58;
  if (SHIBYTE(v85->__r_.__value_.__r.__words[2]) < 0) {
    std::string::size_type v69 = v85->__r_.__value_.__l.__size_;
  }
  else {
    std::string::size_type v69 = HIBYTE(v85->__r_.__value_.__r.__words[2]);
  }
  if (((unsigned char *)v84[1] - (unsigned char *)*v84) >> 3 == v69 + 1)
  {
    uint64_t v11 = (void *)v71;
    return sub_236944CDC(v11);
  }
  LODWORD(v74) = 13;
  os_log_type_t v70 = (void *)sub_236912F84((uint64_t)&v75);
  sub_236914270(v70, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/normalizer.cc", 69);
  sub_236914270(&v75, (uint64_t)"(", 1);
  std::ostream::operator<<();
  sub_236914270(&v75, (uint64_t)") [", 3);
  sub_236914270(&v75, (uint64_t)"(norm_to_orig->size()) == (normalized->size() + 1)", 50);
  sub_236914270(&v75, (uint64_t)"] ", 2);
  sub_2369107FC((unsigned int *)&v74, v71);
LABEL_112:
  uint64_t v75 = *MEMORY[0x263F8C2C8];
  *(uint64_t *)((char *)&v75 + *(void *)(v75 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  uint64_t v76 = MEMORY[0x263F8C318] + 16;
  if (v78 < 0) {
    operator delete(__p);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return (void *)MEMORY[0x237E07510](&v79);
}

void sub_236918CEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_23691088C((uint64_t)va);
  _Unwind_Resume(a1);
}

size_t sub_236918D0C@<X0>(size_t result@<X0>, char *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v27[63] = *MEMORY[0x263EF8340];
  if (a3)
  {
    unint64_t v6 = a2;
    size_t v7 = result;
    uint64_t v8 = *(void *)(result + 40);
    if (v8 && (LOBYTE(v26) = 0, uint64_t result = sub_2369192C4(v8, a2, a3, (BOOL *)&v26), (_BYTE)v26))
    {
      unint64_t v9 = (int)result;
      if (a3 < (int)result) {
        unint64_t v9 = a3;
      }
      *(void *)a4 = v6;
      *(void *)(a4 + 8) = v9;
      *(_DWORD *)(a4 + 16) = result;
    }
    else
    {
      uint64_t v10 = *(void *)(v7 + 8);
      if (!v10) {
        goto LABEL_24;
      }
      uint64_t v11 = 0;
      unint64_t v12 = 0;
      int v13 = *(_DWORD **)(v10 + 16);
      uint64_t v14 = (*v13 >> 10 << ((*v13 >> 6) & 8));
      do
      {
        uint64_t v15 = v6[v11];
        uint64_t v16 = v14 ^ v15;
        unsigned int v17 = v13[v16];
        if ((v17 & 0x800000FF) != v15) {
          break;
        }
        uint64_t v14 = v16 ^ (v17 >> 10 << ((v17 >> 6) & 8));
        if ((v17 & 0x100) != 0)
        {
          if (v12 <= 0x1F)
          {
            unint64_t v18 = &v27[2 * v12 - 1];
            *(_DWORD *)unint64_t v18 = v13[v14] & 0x7FFFFFFF;
            v18[1] = v11 + 1;
          }
          ++v12;
        }
        ++v11;
      }
      while (a3 != v11);
      if (!v12) {
        goto LABEL_24;
      }
      unint64_t v19 = 0;
      int v20 = 0;
      uint64_t v21 = v27;
      int v22 = v27;
      do
      {
        unint64_t v24 = *v22;
        v22 += 2;
        unint64_t v23 = v24;
        if (!v19 || v23 > v19)
        {
          int v20 = *((_DWORD *)v21 - 2);
          unint64_t v19 = v23;
        }
        uint64_t v21 = v22;
        --v12;
      }
      while (v12);
      if (v19)
      {
        unint64_t v6 = (char *)(*(void *)(v7 + 16) + v20);
        uint64_t result = strlen(v6);
      }
      else
      {
LABEL_24:
        uint64_t v26 = 0;
        BOOL v25 = sub_236942BA8((unsigned __int8 *)v6, (uint64_t)&v6[a3], &v26) != 65533 || v26 == 3;
        if (v25) {
          LODWORD(v19) = v26;
        }
        else {
          LODWORD(v19) = 1;
        }
        if (v25) {
          uint64_t result = (int)v26;
        }
        else {
          uint64_t result = 3;
        }
        if (!v25) {
          unint64_t v6 = (char *)&unk_23698E638;
        }
      }
      *(void *)a4 = v6;
      *(void *)(a4 + 8) = result;
      *(_DWORD *)(a4 + 16) = v19;
    }
  }
  else
  {
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(_DWORD *)(a4 + 16) = 0;
  }
  return result;
}

void sub_236918EF4(void **a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 3)
  {
    if (a2 >> 61) {
      sub_236913FC4();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    unint64_t v6 = (char *)sub_2369147B8(v3, a2);
    size_t v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF8];
    unint64_t v9 = &v6[8 * v8];
    uint64_t v10 = (char *)*a1;
    uint64_t v11 = (char *)a1[1];
    unint64_t v12 = v7;
    if (v11 != *a1)
    {
      unint64_t v12 = v7;
      do
      {
        uint64_t v13 = *((void *)v11 - 1);
        v11 -= 8;
        *((void *)v12 - 1) = v13;
        v12 -= 8;
      }
      while (v11 != v10);
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

void sub_236918F9C(uint64_t a1)
{
  int v2 = (*(uint64_t (**)(void))(**(void **)(*(void *)a1 + 32) + 32))(*(void *)(*(void *)a1 + 32));
  uint64_t v3 = **(std::string ***)(a1 + 16);
  if (v2)
  {
    std::string::append(v3, **(const std::string::value_type ***)(a1 + 32), *(void *)(*(void *)(a1 + 32) + 8));
    if (*(void *)(*(void *)(a1 + 32) + 8))
    {
      unint64_t v4 = 0;
      do
      {
        uint64_t v5 = **(void **)(a1 + 24);
        uint64_t v6 = **(int **)(a1 + 8);
        size_t v7 = *(void **)(v5 + 8);
        unint64_t v8 = *(void *)(v5 + 16);
        if ((unint64_t)v7 >= v8)
        {
          uint64_t v10 = *(void **)v5;
          uint64_t v11 = ((uint64_t)v7 - *(void *)v5) >> 3;
          unint64_t v12 = v11 + 1;
          if ((unint64_t)(v11 + 1) >> 61) {
            goto LABEL_40;
          }
          uint64_t v13 = v8 - (void)v10;
          if (v13 >> 2 > v12) {
            unint64_t v12 = v13 >> 2;
          }
          if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v14 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v14 = v12;
          }
          if (v14)
          {
            uint64_t v15 = (char *)sub_2369147B8(v5 + 16, v14);
            uint64_t v10 = *(void **)v5;
            size_t v7 = *(void **)(v5 + 8);
          }
          else
          {
            uint64_t v15 = 0;
          }
          uint64_t v16 = &v15[8 * v11];
          *(void *)uint64_t v16 = v6;
          unint64_t v9 = v16 + 8;
          while (v7 != v10)
          {
            uint64_t v17 = *--v7;
            *((void *)v16 - 1) = v17;
            v16 -= 8;
          }
          *(void *)uint64_t v5 = v16;
          *(void *)(v5 + 8) = v9;
          *(void *)(v5 + 16) = &v15[8 * v14];
          if (v10) {
            operator delete(v10);
          }
        }
        else
        {
          void *v7 = v6;
          unint64_t v9 = v7 + 1;
        }
        *(void *)(v5 + 8) = v9;
        ++v4;
      }
      while (v4 < *(void *)(*(void *)(a1 + 32) + 8));
    }
  }
  else
  {
    std::string::append(v3, " ");
    uint64_t v18 = **(void **)(a1 + 24);
    uint64_t v19 = **(int **)(a1 + 8);
    int v20 = *(void **)(v18 + 8);
    unint64_t v21 = *(void *)(v18 + 16);
    if ((unint64_t)v20 >= v21)
    {
      unint64_t v23 = *(void **)v18;
      uint64_t v24 = ((uint64_t)v20 - *(void *)v18) >> 3;
      unint64_t v25 = v24 + 1;
      if ((unint64_t)(v24 + 1) >> 61) {
LABEL_40:
      }
        sub_236913FC4();
      uint64_t v26 = v21 - (void)v23;
      if (v26 >> 2 > v25) {
        unint64_t v25 = v26 >> 2;
      }
      if ((unint64_t)v26 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v27 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v27 = v25;
      }
      if (v27)
      {
        unint64_t v28 = (char *)sub_2369147B8(v18 + 16, v27);
        unint64_t v23 = *(void **)v18;
        int v20 = *(void **)(v18 + 8);
      }
      else
      {
        unint64_t v28 = 0;
      }
      unsigned int v29 = &v28[8 * v24];
      uint64_t v30 = &v28[8 * v27];
      *(void *)unsigned int v29 = v19;
      int v22 = v29 + 8;
      while (v20 != v23)
      {
        uint64_t v31 = *--v20;
        *((void *)v29 - 1) = v31;
        v29 -= 8;
      }
      *(void *)uint64_t v18 = v29;
      *(void *)(v18 + 8) = v22;
      *(void *)(v18 + 16) = v30;
      if (v23) {
        operator delete(v23);
      }
    }
    else
    {
      *int v20 = v19;
      int v22 = v20 + 1;
    }
    *(void *)(v18 + 8) = v22;
  }
}

void sub_2369191D0(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3;
  if (a2 <= v2)
  {
    if (a2 < v2) {
      *(void *)(a1 + 8) = *(void *)a1 + 8 * a2;
    }
  }
  else
  {
    sub_236919BF4((char **)a1, a2 - v2);
  }
}

void sub_236919200(uint64_t a1@<X0>, void *a2@<X8>)
{
  std::string __p = 0;
  unint64_t v4 = 0;
  uint64_t v5 = 0;
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 32))(&v2);
  nullsub_1(&v2);
  sub_236944CE4(&v2);
  if (__p)
  {
    unint64_t v4 = __p;
    operator delete(__p);
  }
}

void sub_236919288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  sub_236944CE4(&a9);
  if (*(char *)(v11 + 23) < 0) {
    operator delete(*(void **)v11);
  }
  if (__p)
  {
    a11 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2369192C4(uint64_t a1, unsigned char *a2, uint64_t a3, BOOL *a4)
{
  v23[127] = *MEMORY[0x263EF8340];
  if (!*(void *)a1)
  {
    if (a4) {
      *a4 = 0;
    }
    goto LABEL_33;
  }
  unint64_t v4 = *(_DWORD **)(*(void *)a1 + 16);
  uint64_t v5 = (*v4 >> 10 << ((*v4 >> 6) & 8));
  if (a3)
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0;
    do
    {
      uint64_t v8 = a2[v6];
      uint64_t v9 = v5 ^ v8;
      unsigned int v10 = v4[v9];
      if ((v10 & 0x800000FF) != v8) {
        break;
      }
      uint64_t v5 = v9 ^ (v10 >> 10 << ((v10 >> 6) & 8));
      if ((v10 & 0x100) != 0)
      {
        if (v7 <= 0x3F)
        {
          uint64_t v11 = &v22[16 * v7];
          *(_DWORD *)uint64_t v11 = v4[v5] & 0x7FFFFFFF;
          *((void *)v11 + 1) = v6 + 1;
        }
        ++v7;
      }
      ++v6;
    }
    while (a3 != v6);
  }
  else
  {
    unsigned int v12 = *a2;
    if (*a2)
    {
      unint64_t v7 = 0;
      uint64_t v13 = 1;
      do
      {
        uint64_t v14 = v5 ^ v12;
        unsigned int v15 = v4[v14];
        if ((v15 & 0x800000FF) != v12) {
          break;
        }
        uint64_t v5 = v14 ^ (v15 >> 10 << ((v15 >> 6) & 8));
        if ((v15 & 0x100) != 0)
        {
          if (v7 <= 0x3F)
          {
            uint64_t v16 = &v22[16 * v7];
            *(_DWORD *)uint64_t v16 = v4[v5] & 0x7FFFFFFF;
            *((void *)v16 + 1) = v13;
          }
          ++v7;
        }
        unsigned int v12 = a2[v13++];
      }
      while (v12);
    }
    else
    {
      LODWORD(v7) = 0;
    }
  }
  if (a4) {
    *a4 = (int)v7 > 0;
  }
  if (!v7)
  {
LABEL_33:
    int v21 = asc_236999B08[(unint64_t)*a2 >> 4];
    if (v21 >= (int)a3) {
      return a3;
    }
    else {
      return v21;
    }
  }
  if ((int)v7 < 1) {
    return 0;
  }
  LODWORD(result) = 0;
  unint64_t v7 = v7;
  uint64_t v18 = (int *)v23;
  do
  {
    int v20 = *v18;
    v18 += 4;
    unsigned int v19 = v20;
    if ((int)result <= v20) {
      uint64_t result = v19;
    }
    else {
      uint64_t result = result;
    }
    --v7;
  }
  while (v7);
  return result;
}

void sub_236919494(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = *(unsigned __int8 *)(a1 + 48);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  std::string::resize((std::string *)a2, 4uLL, 0);
  if (*(char *)(a2 + 23) >= 0) {
    uint64_t v5 = (_DWORD *)a2;
  }
  else {
    uint64_t v5 = *(_DWORD **)a2;
  }
  *uint64_t v5 = v4;
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    uint64_t v8 = *(void *)(v6 + 8);
    unint64_t v7 = *(const std::string::value_type **)(v6 + 16);
    memset(&v13, 0, sizeof(v13));
    std::string::resize(&v13, 4uLL, 0);
    std::string::size_type v9 = 4 * v8;
    if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unsigned int v10 = &v13;
    }
    else {
      unsigned int v10 = (std::string *)v13.__r_.__value_.__r.__words[0];
    }
    LODWORD(v10->__r_.__value_.__l.__data_) = v9;
    if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v11 = &v13;
    }
    else {
      uint64_t v11 = (std::string *)v13.__r_.__value_.__r.__words[0];
    }
    if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v13.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v13.__r_.__value_.__l.__size_;
    }
    std::string::append((std::string *)a2, (const std::string::value_type *)v11, size);
    if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v13.__r_.__value_.__l.__data_);
    }
    std::string::append((std::string *)a2, v7, v9);
    std::string::append((std::string *)a2, *(const std::string::value_type **)(a1 + 16), *(void *)(a1 + 24));
  }
}

void sub_23691958C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v15 + 23) < 0) {
    operator delete(*(void **)v15);
  }
  _Unwind_Resume(exception_object);
}

void *sub_2369195C8(void *result, void *a2)
{
  *uint64_t result = 0;
  unint64_t v3 = a2[2];
  if (v3)
  {
    std::string __p = 0;
    int v21 = 0;
    int v22 = 0;
    sub_2369198AC(&__p, v3);
    uint64_t v6 = (void *)*a2;
    int v4 = a2 + 1;
    uint64_t v5 = v6;
    if (v6 != v4)
    {
      unint64_t v7 = v21;
      do
      {
        uint64_t v8 = v5[4];
        if (v7 >= v22)
        {
          uint64_t v9 = (v7 - (unsigned char *)__p) >> 3;
          if ((unint64_t)(v9 + 1) >> 61) {
            sub_236913FC4();
          }
          unint64_t v10 = (v22 - (unsigned char *)__p) >> 2;
          if (v10 <= v9 + 1) {
            unint64_t v10 = v9 + 1;
          }
          if ((unint64_t)(v22 - (unsigned char *)__p) >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v11 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v11 = v10;
          }
          if (v11) {
            unsigned int v12 = (char *)sub_2369147B8((uint64_t)&v22, v11);
          }
          else {
            unsigned int v12 = 0;
          }
          std::string v13 = &v12[8 * v9];
          *(void *)std::string v13 = v8;
          unint64_t v7 = v13 + 8;
          uint64_t v15 = (char *)__p;
          uint64_t v14 = v21;
          if (v21 != __p)
          {
            do
            {
              uint64_t v16 = *((void *)v14 - 1);
              v14 -= 8;
              *((void *)v13 - 1) = v16;
              v13 -= 8;
            }
            while (v14 != v15);
            uint64_t v14 = (char *)__p;
          }
          std::string __p = v13;
          int v21 = v7;
          int v22 = &v12[8 * v11];
          if (v14) {
            operator delete(v14);
          }
        }
        else
        {
          *(void *)unint64_t v7 = v8;
          v7 += 8;
        }
        int v21 = v7;
        uint64_t v17 = (void *)v5[1];
        if (v17)
        {
          do
          {
            uint64_t v18 = v17;
            uint64_t v17 = (void *)*v17;
          }
          while (v17);
        }
        else
        {
          do
          {
            uint64_t v18 = (void *)v5[2];
            BOOL v19 = *v18 == (void)v5;
            uint64_t v5 = v18;
          }
          while (!v19);
        }
        uint64_t v5 = v18;
      }
      while (v18 != v4);
    }
    operator new();
  }
  return result;
}

void sub_236919844(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, __int16 a10, char a11, char a12, void *__p, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  uint64_t v16 = *v14;
  *uint64_t v14 = 0;
  if (v16) {
    (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
  }
  _Unwind_Resume(exception_object);
}

void sub_2369198AC(void **a1, unint64_t a2)
{
  int v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 3)
  {
    if (a2 >> 61) {
      sub_236913FC4();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    uint64_t v6 = (char *)sub_2369147B8(v3, a2);
    unint64_t v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF8];
    uint64_t v9 = &v6[8 * v8];
    unint64_t v11 = (char *)*a1;
    unint64_t v10 = (char *)a1[1];
    unsigned int v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        uint64_t v13 = *((void *)v10 - 1);
        v10 -= 8;
        *((void *)v12 - 1) = v13;
        v12 -= 8;
      }
      while (v10 != v11);
      unint64_t v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

void *sub_236919958(void *result, uint64_t a2, uint64_t a3)
{
  *uint64_t result = 0;
  if (a3) {
    operator new();
  }
  return result;
}

void sub_236919A38(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *v1;
  *uint64_t v1 = 0;
  if (v3) {
    sub_236919D10(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_236919A58@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (*(void *)a1) {
    return sub_236919A94(a2, *(void **)(*(void *)a1 + 16), 4 * *(void *)(*(void *)a1 + 8));
  }
  else {
    return sub_236919B40(a2, "");
  }
}

uint64_t sub_236919A80(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = a2;
  return result;
}

uint64_t sub_236919A88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_236944F00(a2, a1 + 56);
}

void *sub_236919A94(void *__dst, void *__src, size_t __len)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    sub_236914158();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    __dst[1] = __len;
    __dst[2] = v8 | 0x8000000000000000;
    char *__dst = v6;
  }
  else
  {
    *((unsigned char *)__dst + 23) = __len;
    uint64_t v6 = __dst;
    if (!__len) {
      goto LABEL_9;
    }
  }
  memmove(v6, __src, __len);
LABEL_9:
  *((unsigned char *)v6 + __len) = 0;
  return __dst;
}

void *sub_236919B40(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_236914158();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    uint64_t v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

void sub_236919BF4(char **a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  size_t v5 = v6;
  uint64_t v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = *a1;
    uint64_t v9 = v7 - *a1;
    unint64_t v10 = a2 + (v9 >> 3);
    if (v10 >> 61) {
      sub_236913FC4();
    }
    uint64_t v11 = v9 >> 3;
    uint64_t v12 = v5 - v8;
    if (v12 >> 2 > v10) {
      unint64_t v10 = v12 >> 2;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v13 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v10;
    }
    if (v13)
    {
      uint64_t v14 = (char *)sub_2369147B8(v4, v13);
      uint64_t v8 = *a1;
      uint64_t v7 = a1[1];
    }
    else
    {
      uint64_t v14 = 0;
    }
    uint64_t v15 = &v14[8 * v11];
    uint64_t v16 = &v14[8 * v13];
    bzero(v15, 8 * a2);
    uint64_t v17 = &v15[8 * a2];
    while (v7 != v8)
    {
      uint64_t v18 = *((void *)v7 - 1);
      v7 -= 8;
      *((void *)v15 - 1) = v18;
      v15 -= 8;
    }
    *a1 = v15;
    a1[1] = v17;
    a1[2] = v16;
    if (v8)
    {
      operator delete(v8);
    }
  }
}

uint64_t sub_236919D10(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 8))();
}

uint64_t sub_236919D34@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (*(void *)(a1 + 80)) {
    uint64_t v3 = *(_DWORD **)(a1 + 80);
  }
  else {
    uint64_t v3 = &unk_26889AD60;
  }
  switch(v3[68])
  {
    case 1:
      sub_236919EA0();
    case 2:
      sub_236919F18();
    case 3:
      sub_236919F90();
    case 4:
      sub_23691A008();
    default:
      uint64_t result = sub_236942B98();
      if ((int)result <= 2)
      {
        LOBYTE(v11) = 0;
        size_t v5 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"model_factory.cc", 16);
        sub_236914270(v5, (uint64_t)"(", 1);
        uint64_t v6 = (void *)std::ostream::operator<<();
        uint64_t v7 = sub_236914270(v6, (uint64_t)") ", 2);
        uint64_t v8 = sub_236914270(v7, (uint64_t)"LOG(", 4);
        uint64_t v9 = sub_236914270(v8, (uint64_t)"ERROR", 5);
        unint64_t v10 = sub_236914270(v9, (uint64_t)") ", 2);
        sub_236914270(v10, (uint64_t)"Unknown model_type: ", 20);
        std::ostream::operator<<();
        uint64_t result = (uint64_t)sub_23691311C(&v11);
      }
      *a2 = 0;
      return result;
  }
}

void sub_236919E7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_23691311C(va);
  _Unwind_Resume(a1);
}

void sub_236919EA0()
{
}

void sub_236919EF4(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x10E1C404363080ALL);
  _Unwind_Resume(a1);
}

void sub_236919F18()
{
}

void sub_236919F6C(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x10E1C4039E95E28);
  _Unwind_Resume(a1);
}

void sub_236919F90()
{
}

void sub_236919FE4(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x10E1C4039E95E28);
  _Unwind_Resume(a1);
}

void sub_23691A008()
{
}

void sub_23691A05C(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x10E1C4039E95E28);
  _Unwind_Resume(a1);
}

uint64_t sub_23691A080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  v14[1] = a2;
  v14[2] = a3;
  int v6 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 80))(a1);
  if (v6 == 1) {
    sub_23691A284();
  }
  if (!v6) {
    sub_23691A204();
  }
  uint64_t result = sub_236942B98();
  if ((int)result <= 2)
  {
    LOBYTE(v14[0]) = 0;
    uint64_t v8 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"model_factory.cc", 16);
    sub_236914270(v8, (uint64_t)"(", 1);
    uint64_t v9 = (void *)std::ostream::operator<<();
    unint64_t v10 = sub_236914270(v9, (uint64_t)") ", 2);
    uint64_t v11 = sub_236914270(v10, (uint64_t)"LOG(", 4);
    uint64_t v12 = sub_236914270(v11, (uint64_t)"ERROR", 5);
    unint64_t v13 = sub_236914270(v12, (uint64_t)") ", 2);
    sub_236914270(v13, (uint64_t)"Unknown model_type: ", 20);
    (*(void (**)(uint64_t))(*(void *)a1 + 80))(a1);
    std::ostream::operator<<();
    uint64_t result = (uint64_t)sub_23691311C(v14);
  }
  *a4 = 0;
  return result;
}

void sub_23691A1EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_23691311C(va);
  _Unwind_Resume(a1);
}

void sub_23691A204()
{
}

void sub_23691A260(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x10E1C404363080ALL);
  _Unwind_Resume(a1);
}

void sub_23691A284()
{
}

void sub_23691A2E0(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x10E1C4039E95E28);
  _Unwind_Resume(a1);
}

void *sub_23691A304(void *a1)
{
  *a1 = &unk_26E9CD668;
  uint64_t v2 = sub_2369367A8();
  a1[2] = 0;
  a1[3] = 0;
  a1[1] = v2;
  return a1;
}

void *sub_23691A350(void *a1)
{
  *a1 = &unk_26E9CD668;
  uint64_t v2 = (std::__shared_weak_count *)a1[3];
  if (v2) {
    sub_236929DC8(v2);
  }
  return a1;
}

void sub_23691A39C(void *a1)
{
  *a1 = &unk_26E9CD668;
  uint64_t v1 = (std::__shared_weak_count *)a1[3];
  if (v1) {
    sub_236929DC8(v1);
  }
  JUMPOUT(0x237E07580);
}

uint64_t sub_23691A408(uint64_t a1)
{
  return *(unsigned int *)(*(void *)a1 + 64);
}

uint64_t sub_23691A414(uint64_t a1)
{
  return *(unsigned int *)(*(void *)a1 + 68);
}

uint64_t sub_23691A420(uint64_t a1)
{
  return *(unsigned int *)(*(void *)a1 + 72);
}

uint64_t sub_23691A42C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (uint64_t)sub_236929F1C(a2, *(int *)(*(void *)(a1 + 8) + 56));
  uint64_t v5 = *(void *)(a1 + 8);
  if (*(int *)(v5 + 56) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t result = sub_2369290DC(v5 + 48, v6);
      *(void *)(*a2 + 8 * v6++) = result;
      uint64_t v5 = *(void *)(a1 + 8);
    }
    while (v6 < *(int *)(v5 + 56));
  }
  return result;
}

void sub_23691A4A4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23691A4C0(uint64_t a1)
{
  return *(int *)(*(void *)(a1 + 8) + 56);
}

uint64_t sub_23691A4CC(void *a1)
{
  uint64_t result = a1[2];
  if (!result)
  {
    sub_236929FEC(&v5);
    long long v3 = v5;
    long long v5 = 0uLL;
    uint64_t v4 = (std::__shared_weak_count *)a1[3];
    *((_OWORD *)a1 + 1) = v3;
    if (v4)
    {
      sub_236929DC8(v4);
      if (*((void *)&v5 + 1)) {
        sub_236929DC8(*((std::__shared_weak_count **)&v5 + 1));
      }
    }
    uint64_t result = a1[2];
    a1[1] = result;
  }
  return result;
}

void *sub_23691A534(void *a1)
{
  *a1 = &unk_26E9CD688;
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2) {
    sub_236929DC8(v2);
  }
  return a1;
}

void sub_23691A580(void *a1)
{
  *a1 = &unk_26E9CD688;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1) {
    sub_236929DC8(v1);
  }
  JUMPOUT(0x237E07580);
}

uint64_t sub_23691A5EC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 8);
  if (!result)
  {
    sub_23692A118(&v5);
    long long v3 = v5;
    long long v5 = 0uLL;
    uint64_t v4 = *(std::__shared_weak_count **)(a1 + 16);
    *(_OWORD *)(a1 + 8) = v3;
    if (v4)
    {
      sub_236929DC8(v4);
      if (*((void *)&v5 + 1)) {
        sub_236929DC8(*((std::__shared_weak_count **)&v5 + 1));
      }
    }
    return *(void *)(a1 + 8);
  }
  return result;
}

void *sub_23691A650@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2) {
    return (void *)sub_23695325C(v2, (uint64_t)a2);
  }
  else {
    return sub_236919B40(a2, "");
  }
}

double sub_23691A66C(uint64_t a1)
{
  *(void *)a1 = &unk_26E9CD6A8;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  return result;
}

uint64_t sub_23691A6AC(uint64_t a1)
{
  *(void *)a1 = &unk_26E9CD6A8;
  if (*(char *)(a1 + 119) < 0) {
    operator delete(*(void **)(a1 + 96));
  }
  uint64_t v2 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  long long v3 = *(void **)(a1 + 64);
  if (v3)
  {
    *(void *)(a1 + 72) = v3;
    operator delete(v3);
  }
  uint64_t v4 = *(void **)(a1 + 40);
  if (v4)
  {
    *(void *)(a1 + 48) = v4;
    operator delete(v4);
  }
  uint64_t v5 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  uint64_t v6 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  uint64_t v7 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  return a1;
}

void sub_23691A810(uint64_t a1)
{
  sub_23691A6AC(a1);
  JUMPOUT(0x237E07580);
}

uint64_t sub_23691A848()
{
  v3[19] = *MEMORY[0x263EF8340];
  sub_23691A9D4(v1);
  if ((v2[*(void *)(v1[0] - 24) + 16] & 5) == 0) {
    std::istream::read();
  }
  v1[0] = *MEMORY[0x263F8C2A8];
  *(uint64_t *)((char *)v1 + *(void *)(v1[0] - 24)) = *(void *)(MEMORY[0x263F8C2A8] + 24);
  MEMORY[0x237E07310](v2);
  std::istream::~istream();
  MEMORY[0x237E07510](v3);
  return 0;
}

void sub_23691A9B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_23691AB98((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_23691A9D4(uint64_t *a1)
{
  uint64_t v2 = MEMORY[0x263F8C308] + 64;
  a1[53] = MEMORY[0x263F8C308] + 64;
  long long v3 = a1 + 2;
  uint64_t v4 = *(void *)(MEMORY[0x263F8C2A8] + 16);
  uint64_t v5 = *(void *)(MEMORY[0x263F8C2A8] + 8);
  *a1 = v5;
  *(uint64_t *)((char *)a1 + *(void *)(v5 - 24)) = v4;
  a1[1] = 0;
  uint64_t v6 = (std::ios_base *)((char *)a1 + *(void *)(*a1 - 24));
  std::ios_base::init(v6, a1 + 2);
  uint64_t v7 = MEMORY[0x263F8C308] + 24;
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  *a1 = v7;
  a1[53] = v2;
  MEMORY[0x237E07300](v3);
  if (!std::filebuf::open()) {
    std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 4);
  }
  return a1;
}

void sub_23691AB60(_Unwind_Exception *a1)
{
  std::istream::~istream();
  MEMORY[0x237E07510](v1);
  _Unwind_Resume(a1);
}

void *sub_23691AB98(void *a1)
{
  uint64_t v2 = MEMORY[0x263F8C2A8];
  uint64_t v3 = *MEMORY[0x263F8C2A8];
  *a1 = *MEMORY[0x263F8C2A8];
  *(void *)((char *)a1 + *(void *)(v3 - 24)) = *(void *)(v2 + 24);
  MEMORY[0x237E07310](a1 + 2);
  std::istream::~istream();
  MEMORY[0x237E07510](a1 + 53);
  return a1;
}

uint64_t sub_23691AC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!sub_23691A848()) {
    sub_23691ADDC();
  }
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 64);
  return v6(a1, a2, a3);
}

void sub_23691ADB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

void sub_23691ADDC()
{
}

void sub_23691AE24(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x10A1C4047CE62CFLL);
  _Unwind_Resume(a1);
}

uint64_t sub_23691AE48@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  if (a1) {
    sub_236941FCC();
  }
  return sub_236944E48(a2, 5, "model file path should not be empty.", 36);
}

void sub_23691B1CC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 - 57) < 0) {
    operator delete(*(void **)(v1 - 80));
  }
  uint64_t v3 = *(void *)(v1 - 56);
  *(void *)(v1 - 56) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_23691B244(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 16))(&v11);
  if (v11)
  {
    char v10 = 1;
    uint64_t v1 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"sentencepiece_processor.cc", 26);
    sub_236914270(v1, (uint64_t)"(", 1);
    uint64_t v2 = (void *)std::ostream::operator<<();
    uint64_t v3 = sub_236914270(v2, (uint64_t)") [", 3);
    uint64_t v4 = sub_236914270(v3, (uint64_t)"_status.ok()", 12);
    uint64_t v5 = sub_236914270(v4, (uint64_t)"] ", 2);
    sub_236945018((uint64_t)&v11, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    sub_236914270(v5, (uint64_t)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    sub_23691311C(&v10);
  }
  return sub_236944CE4(&v11);
}

void sub_23691B354(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_23691311C((unsigned char *)(v15 - 25));
  sub_236944CE4((uint64_t *)(v15 - 24));
  _Unwind_Resume(a1);
}

void sub_23691B38C()
{
}

void sub_23691B458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

void sub_23691B484()
{
}

void sub_23691B6E0(_Unwind_Exception *a1)
{
  sub_23692A244((uint64_t *)(v1 - 56), 0);
  _Unwind_Resume(a1);
}

void sub_23691B724(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *(unsigned char **)(*a2 + 88);
  if (!v5) {
    uint64_t v5 = &unk_26889AEA8;
  }
  if (v5[80])
  {
    if ((int)sub_236942B98() <= 0)
    {
      LOBYTE(v23) = 0;
      uint64_t v6 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"sentencepiece_processor.cc", 26);
      sub_236914270(v6, (uint64_t)"(", 1);
      uint64_t v7 = (void *)std::ostream::operator<<();
      uint64_t v8 = sub_236914270(v7, (uint64_t)") ", 2);
      uint64_t v9 = sub_236914270(v8, (uint64_t)"LOG(", 4);
      char v10 = sub_236914270(v9, (uint64_t)"INFO", 4);
      uint64_t v11 = sub_236914270(v10, (uint64_t)") ", 2);
      sub_236914270(v11, (uint64_t)"Enable Apple addition for backward compatibility", 48);
      sub_23691311C(&v23);
    }
    uint64_t v4 = *a2;
    *(_DWORD *)(v4 + 48) = *(_DWORD *)(*a2 + 48) | 1;
    uint64_t v12 = *(void *)(v4 + 80);
    if (!v12)
    {
      uint64_t v13 = *(void *)(v4 + 8);
      uint64_t v14 = (void *)(v13 & 0xFFFFFFFFFFFFFFFELL);
      if (v13) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v12 = sub_23694070C((uint64_t)v14);
      *(void *)(v4 + 8sub_23692A244(&a9, 0) = v12;
      uint64_t v4 = *a2;
    }
    *(_DWORD *)(v12 + 40) |= 0x4000u;
    *(unsigned char *)(v12 + 245) = 1;
    *(_DWORD *)(v4 + 48) |= 2u;
    uint64_t v15 = *(void *)(v4 + 88);
    if (!v15)
    {
      uint64_t v16 = *(void *)(v4 + 8);
      uint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFELL);
      if (v16) {
        uint64_t v17 = (void *)*v17;
      }
      uint64_t v15 = sub_2369407DC((uint64_t)v17);
      *(void *)(v4 + 88) = v15;
      uint64_t v4 = *a2;
    }
    *(_DWORD *)(v15 + 48) |= 0x10u;
    *(unsigned char *)(v15 + 81) = 1;
  }
  *a2 = 0;
  if (v4) {
    uint64_t v18 = v4 + 16;
  }
  else {
    uint64_t v18 = 0;
  }
  uint64_t v19 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = v18;
  if (v19)
  {
    (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
    uint64_t v18 = *(void *)(a1 + 32);
  }
  sub_236919D34(v18 - 16, &v23);
  uint64_t v20 = v23;
  uint64_t v23 = 0;
  uint64_t v21 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v20;
  if (v21)
  {
    (*(void (**)(uint64_t))(*(void *)v21 + 8))(v21);
    uint64_t v22 = v23;
    uint64_t v23 = 0;
    if (v22) {
      (*(void (**)(uint64_t))(*(void *)v22 + 8))(v22);
    }
  }
  sub_23691C170();
}

void sub_23691C0B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,char a28)
{
}

void sub_23691C170()
{
}

void sub_23691C1CC(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x10F1C40C7D4252BLL);
  _Unwind_Resume(a1);
}

void sub_23691C1F0()
{
}

void sub_23691C244(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x10F1C40C7D4252BLL);
  _Unwind_Resume(a1);
}

void sub_23691C268(void *__src@<X0>, size_t __len@<X1>, char *a3@<X2>, void **a4@<X3>, char *a5@<X4>, void **a6@<X5>, std::string *a7@<X8>)
{
  sub_236919A94(&__dst, __src, __len);
  size_t v12 = strlen(a3);
  sub_23692A294(a3, v12, a4, a5, a6, &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  uint64_t v15 = std::string::append(&__dst, (const std::string::value_type *)p_p, size);
  *a7 = *v15;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
}

void sub_23691C340(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void sub_23691C374(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
}

void sub_23691C37C(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, char **a4@<X3>, uint64_t *a5@<X8>)
{
  v46[19] = *MEMORY[0x263EF8340];
  a4[1] = *a4;
  if (a3)
  {
    (*(void (**)(uint64_t *))(*a1 + 88))(a1);
    if (!*a5)
    {
      sub_236944CE4(a5);
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2688A6E78, memory_order_acquire) & 1) == 0
        && __cxa_guard_acquire(&qword_2688A6E78))
      {
        long long v42 = xmmword_264CB41A0;
        *(_OWORD *)std::string __p = unk_264CB41B0;
        long long v44 = xmmword_264CB41C0;
        uint64_t v45 = 3;
        long long v38 = xmmword_264CB4160;
        long long v39 = unk_264CB4170;
        long long v40 = xmmword_264CB4180;
        long long v41 = *(_OWORD *)&off_264CB4190;
        sub_23692CA6C((uint64_t)&unk_2688A6E60, (uint64_t)&v38, 5);
        __cxa_atexit((void (*)(void *))sub_236926470, &unk_2688A6E60, &dword_2367AD000);
        __cxa_guard_release(&qword_2688A6E78);
      }
      sub_2369294C4((char **)&v36, a2, a3, ":", 1, 0);
      char v10 = (uint64_t *)v36;
      uint64_t v11 = v37;
      if (v36 == v37)
      {
LABEL_29:
        if (v10)
        {
          uint64_t v37 = v10;
          operator delete(v10);
        }
        sub_236944CDC(a5);
      }
      else
      {
        while (1)
        {
          size_t v12 = sub_23692AA58((uint64_t)&unk_2688A6E60, (uint64_t)v10);
          uint64_t v13 = v12;
          if (v12 == (void *)&unk_2688A6E68) {
            break;
          }
          uint64_t v15 = a4[1];
          unint64_t v14 = (unint64_t)a4[2];
          if ((unint64_t)v15 >= v14)
          {
            uint64_t v17 = *a4;
            uint64_t v18 = (v15 - *a4) >> 2;
            unint64_t v19 = v18 + 1;
            if ((unint64_t)(v18 + 1) >> 62) {
              sub_236913FC4();
            }
            uint64_t v20 = v14 - (void)v17;
            if (v20 >> 1 > v19) {
              unint64_t v19 = v20 >> 1;
            }
            if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v21 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v21 = v19;
            }
            if (v21)
            {
              uint64_t v22 = (char *)sub_236914FFC((uint64_t)(a4 + 2), v21);
              uint64_t v17 = *a4;
              uint64_t v15 = a4[1];
            }
            else
            {
              uint64_t v22 = 0;
            }
            uint64_t v23 = &v22[4 * v18];
            *(_DWORD *)uint64_t v23 = *((_DWORD *)v13 + 12);
            uint64_t v16 = v23 + 4;
            while (v15 != v17)
            {
              int v24 = *((_DWORD *)v15 - 1);
              v15 -= 4;
              *((_DWORD *)v23 - 1) = v24;
              v23 -= 4;
            }
            *a4 = v23;
            a4[1] = v16;
            a4[2] = &v22[4 * v21];
            if (v17) {
              operator delete(v17);
            }
          }
          else
          {
            *(_DWORD *)uint64_t v15 = *((_DWORD *)v12 + 12);
            uint64_t v16 = v15 + 4;
          }
          a4[1] = v16;
          int v25 = *((_DWORD *)v13 + 12);
          if (v25 == 1)
          {
            uint64_t v26 = sub_236910BF8(a1[1]);
            size_t v27 = strlen(v26);
            uint64_t v28 = (*(uint64_t (**)(uint64_t *, const char *, size_t))(*a1 + 504))(a1, v26, v27);
            if ((*(uint64_t (**)(uint64_t *, uint64_t))(*a1 + 528))(a1, v28))
            {
              LODWORD(v38) = 13;
              sub_236912F84((uint64_t)&v38 + 8);
              sub_236914270((void *)&v38 + 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
              sub_236914270((void *)&v38 + 1, (uint64_t)"(", 1);
              std::ostream::operator<<();
              sub_236914270((void *)&v38 + 1, (uint64_t)") [", 3);
              sub_236914270((void *)&v38 + 1, (uint64_t)"!IsUnknown(PieceToId(absl::string_view(model_->bos_piece().data())))", 68);
              sub_236914270((void *)&v38 + 1, (uint64_t)"] ", 2);
              unsigned int v32 = sub_236910BF8(a1[1]);
              sub_236914270((void *)&v38 + 1, (uint64_t)v32, v33);
              sub_2369107FC((unsigned int *)&v38, (uint64_t)a5);
              goto LABEL_40;
            }
            int v25 = *((_DWORD *)v13 + 12);
          }
          if (v25 == 2)
          {
            unsigned int v29 = sub_236910C7C(a1[1]);
            size_t v30 = strlen(v29);
            uint64_t v31 = (*(uint64_t (**)(uint64_t *, const char *, size_t))(*a1 + 504))(a1, v29, v30);
            if ((*(uint64_t (**)(uint64_t *, uint64_t))(*a1 + 528))(a1, v31))
            {
              LODWORD(v38) = 13;
              sub_236912F84((uint64_t)&v38 + 8);
              sub_236914270((void *)&v38 + 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
              sub_236914270((void *)&v38 + 1, (uint64_t)"(", 1);
              std::ostream::operator<<();
              sub_236914270((void *)&v38 + 1, (uint64_t)") [", 3);
              sub_236914270((void *)&v38 + 1, (uint64_t)"!IsUnknown(PieceToId(absl::string_view(model_->eos_piece().data())))", 68);
              sub_236914270((void *)&v38 + 1, (uint64_t)"] ", 2);
              int v34 = sub_236910C7C(a1[1]);
              sub_236914270((void *)&v38 + 1, (uint64_t)v34, v35);
              sub_2369107FC((unsigned int *)&v38, (uint64_t)a5);
LABEL_40:
              *((void *)&v38 + 1) = *MEMORY[0x263F8C2C8];
              *(void *)((char *)&v38 + *(void *)(*((void *)&v38 + 1) - 24) + 8) = *(void *)(MEMORY[0x263F8C2C8] + 24);
              *(void *)&long long v39 = MEMORY[0x263F8C318] + 16;
              if (SBYTE7(v44) < 0) {
                operator delete(__p[0]);
              }
              goto LABEL_42;
            }
          }
          v10 += 2;
          if (v10 == v11)
          {
            char v10 = (uint64_t *)v36;
            goto LABEL_29;
          }
        }
        LODWORD(v38) = 13;
        sub_236912F84((uint64_t)&v38 + 8);
        sub_236914270((void *)&v38 + 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
        sub_236914270((void *)&v38 + 1, (uint64_t)"(", 1);
        std::ostream::operator<<();
        sub_236914270((void *)&v38 + 1, (uint64_t)") [", 3);
        sub_236914270((void *)&v38 + 1, (uint64_t)"it != extra_option_map.end()", 28);
        sub_236914270((void *)&v38 + 1, (uint64_t)"] ", 2);
        sub_236914270((void *)&v38 + 1, (uint64_t)"option \"", 8);
        sub_236914270((void *)&v38 + 1, *v10, v10[1]);
        sub_236914270((void *)&v38 + 1, (uint64_t)"\" is not available.", 19);
        sub_2369107FC((unsigned int *)&v38, (uint64_t)a5);
        *((void *)&v38 + 1) = *MEMORY[0x263F8C2C8];
        *(void *)((char *)&v38 + *(void *)(*((void *)&v38 + 1) - 24) + 8) = *(void *)(MEMORY[0x263F8C2C8]
                                                                                              + 24);
        *(void *)&long long v39 = MEMORY[0x263F8C318] + 16;
        if (SBYTE7(v44) < 0) {
          operator delete(__p[0]);
        }
LABEL_42:
        std::streambuf::~streambuf();
        std::ostream::~ostream();
        MEMORY[0x237E07510](v46);
        if (v36)
        {
          uint64_t v37 = (uint64_t *)v36;
          operator delete(v36);
        }
      }
    }
  }
  else
  {
    sub_236944CDC(a5);
  }
}

void sub_23691CBCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, char a13)
{
}

void sub_23691CC48(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
}

void *sub_23691CC50@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    if (*(void *)(a1 + 16))
    {
      double result = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v4 + 16))(v4);
      if (!*a2)
      {
        sub_236944CE4(a2);
        double result = (void *)(*(uint64_t (**)(void))(**(void **)(a1 + 16) + 24))(*(void *)(a1 + 16));
        if (!*a2)
        {
          uint64_t v6 = sub_236944CE4(a2);
          return sub_236944CDC(v6);
        }
      }
      return result;
    }
    unsigned int v9 = 13;
    uint64_t v8 = (void *)sub_236912F84((uint64_t)v10);
    sub_236914270(v8, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
    sub_236914270(v10, (uint64_t)"(", 1);
    std::ostream::operator<<();
    sub_236914270(v10, (uint64_t)") [", 3);
    sub_236914270(v10, (uint64_t)"normalizer_", 11);
    sub_236914270(v10, (uint64_t)"] ", 2);
    sub_236914270(v10, (uint64_t)"Normalizer is not initialized.", 30);
    sub_2369107FC(&v9, (uint64_t)a2);
  }
  else
  {
    unsigned int v9 = 13;
    uint64_t v7 = (void *)sub_236912F84((uint64_t)v10);
    sub_236914270(v7, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
    sub_236914270(v10, (uint64_t)"(", 1);
    std::ostream::operator<<();
    sub_236914270(v10, (uint64_t)") [", 3);
    sub_236914270(v10, (uint64_t)"model_", 6);
    sub_236914270(v10, (uint64_t)"] ", 2);
    sub_236914270(v10, (uint64_t)"Model is not initialized.", 25);
    sub_2369107FC(&v9, (uint64_t)a2);
  }
  v10[0] = *MEMORY[0x263F8C2C8];
  *(void *)((char *)v10 + *(void *)(v10[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  v10[1] = MEMORY[0x263F8C318] + 16;
  if (v11 < 0) {
    operator delete((void *)v10[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return (void *)MEMORY[0x237E07510](&v12);
}

void sub_23691CF68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23691CF88(void *a1@<X0>, _OWORD **a2@<X1>, uint64_t *a3@<X8>)
{
  (*(void (**)(void *))(*a1 + 88))(a1);
  if (*a3) {
    return;
  }
  sub_236944CE4(a3);
  uint64_t v6 = (const void *)a1[4];
  if (!v6
    || (uint64_t v7 = __dynamic_cast(v6, (const struct __class_type_info *)&unk_26E9CD570, (const struct __class_type_info *)&unk_26E9CE508, 16)) == 0)
  {
    unsigned int v23 = 13;
    uint64_t v20 = (void *)sub_236912F84((uint64_t)v24);
    sub_236914270(v20, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
    sub_236914270(v24, (uint64_t)"(", 1);
    std::ostream::operator<<();
    sub_236914270(v24, (uint64_t)") [", 3);
    sub_236914270(v24, (uint64_t)"(model_proto = dynamic_cast<ModelProto *>(model_proto_.get()))", 62);
    sub_236914270(v24, (uint64_t)"] ", 2);
    sub_236914270(v24, (uint64_t)"SetVocabulary is not supported when mmap-based model is loaded.", 63);
    sub_2369107FC(&v23, (uint64_t)a3);
LABEL_27:
    v24[0] = *(void **)MEMORY[0x263F8C2C8];
    *(void **)((char *)v24 + *(v24[0] - 3)) = *(void **)(MEMORY[0x263F8C2C8] + 24);
    v24[1] = (void *)(MEMORY[0x263F8C318] + 16);
    if (v25 < 0) {
      operator delete(v24[9]);
    }
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    MEMORY[0x237E07510](&v26);
    return;
  }
  uint64_t v8 = v7;
  unsigned int v9 = &unk_26889AD60;
  if (v7[10]) {
    unsigned int v9 = (_DWORD *)v7[10];
  }
  if ((v9[68] - 1) >= 2)
  {
    unsigned int v23 = 13;
    unint64_t v21 = (void *)sub_236912F84((uint64_t)v24);
    sub_236914270(v21, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
    sub_236914270(v24, (uint64_t)"(", 1);
    std::ostream::operator<<();
    sub_236914270(v24, (uint64_t)") [", 3);
    sub_236914270(v24, (uint64_t)"type == TrainerSpec::UNIGRAM || type == TrainerSpec::BPE", 56);
    sub_236914270(v24, (uint64_t)"] ", 2);
    sub_236914270(v24, (uint64_t)"Vocabulary constraint is only enabled in subword units.", 55);
    sub_2369107FC(&v23, (uint64_t)a3);
    goto LABEL_27;
  }
  sub_23692A7A0((uint64_t)&v23, *a2, a2[1]);
  if (*((int *)v8 + 16) >= 1)
  {
    int v10 = 0;
    do
    {
      uint64_t v11 = sub_2369293E4((uint64_t)(v8 + 7), v10);
      uint64_t v12 = v11;
      if ((*(_DWORD *)(v11 + 60) - 2) >= 3)
      {
        unint64_t v13 = *(void *)(v11 + 48) & 0xFFFFFFFFFFFFFFFELL;
        if (*(char *)(v13 + 23) < 0)
        {
          unint64_t v15 = *(void *)v13;
          uint64_t v14 = *(void *)(v13 + 8);
        }
        else
        {
          uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
          unint64_t v15 = *(void *)(v11 + 48) & 0xFFFFFFFFFFFFFFFELL;
        }
        v22[0] = v15;
        v22[1] = v14;
        if (v24 == sub_23692AA58((uint64_t)&v23, (uint64_t)v22)
          && ((unint64_t v16 = *(void *)(v12 + 48) & 0xFFFFFFFFFFFFFFFELL, *(char *)(v16 + 23) < 0)
            ? (unsigned __int8 *)(v18 = *(unsigned __int8 **)v16, uint64_t v17 = *(void *)(v16 + 8))
            : (uint64_t v17 = *(unsigned __int8 *)(v16 + 23),
               uint64_t v18 = (unsigned __int8 *)(*(void *)(v12 + 48) & 0xFFFFFFFFFFFFFFFELL)),
              v17 != asc_236999B08[(unint64_t)*v18 >> 4]))
        {
          if (!sub_2369389AC(5)) {
LABEL_32:
          }
            __assert_rtn("_internal_set_type", "sentencepiece_model.pb.h", 4686, "::sentencepiece::ModelProto_SentencePiece_Type_IsValid(value)");
          int v19 = 5;
        }
        else
        {
          if (!sub_2369389AC(1)) {
            goto LABEL_32;
          }
          int v19 = 1;
        }
        *(_DWORD *)(v12 + 40) |= 4u;
        *(_DWORD *)(v12 + 6sub_23692A244(&a9, 0) = v19;
      }
      ++v10;
    }
    while (v10 < *((_DWORD *)v8 + 16));
  }
  sub_236944CDC(a3);
  sub_236914648((uint64_t)&v23, v24[0]);
}

void sub_23691D3EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, void *a12)
{
}

void *sub_23691D42C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  double result = (void *)(*(uint64_t (**)(void *))(*a1 + 88))(a1);
  if (!*a2)
  {
    sub_236944CE4(a2);
    uint64_t v5 = (const void *)a1[4];
    if (v5
      && (uint64_t v6 = (int *)__dynamic_cast(v5, (const struct __class_type_info *)&unk_26E9CD570, (const struct __class_type_info *)&unk_26E9CE508, 16)) != 0)
    {
      uint64_t v7 = *((void *)v6 + 9);
      if (v7) {
        uint64_t v8 = (uint64_t *)(v7 + 8);
      }
      else {
        uint64_t v8 = 0;
      }
      uint64_t v9 = v6[16];
      if (v9)
      {
        uint64_t v10 = 8 * v9;
        do
        {
          uint64_t v11 = *v8;
          if (*(_DWORD *)(*v8 + 60) == 5)
          {
            if (!sub_2369389AC(1)) {
              sub_23692D158();
            }
            *(_DWORD *)(v11 + 40) |= 4u;
            *(_DWORD *)(v11 + 6sub_23692A244(&a9, 0) = 1;
          }
          ++v8;
          v10 -= 8;
        }
        while (v10);
      }
      return sub_236944CDC(a2);
    }
    else
    {
      unsigned int v13 = 13;
      uint64_t v12 = (void *)sub_236912F84((uint64_t)v14);
      sub_236914270(v12, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
      sub_236914270(v14, (uint64_t)"(", 1);
      std::ostream::operator<<();
      sub_236914270(v14, (uint64_t)") [", 3);
      sub_236914270(v14, (uint64_t)"(model_proto = dynamic_cast<ModelProto *>(model_proto_.get()))", 62);
      sub_236914270(v14, (uint64_t)"] ", 2);
      sub_236914270(v14, (uint64_t)"ResetVocabulary is not supported when mmap-based model is loaded.", 65);
      sub_2369107FC(&v13, (uint64_t)a2);
      v14[0] = *MEMORY[0x263F8C2C8];
      *(void *)((char *)v14 + *(void *)(v14[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
      v14[1] = MEMORY[0x263F8C318] + 16;
      if (v15 < 0) {
        operator delete((void *)v14[9]);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      return (void *)MEMORY[0x237E07510](&v16);
    }
  }
  return result;
}

void sub_23691D6F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23691D70C()
{
}

void sub_23691DCF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  std::string __p = (void *)(v10 - 176);
  sub_236929834((void ***)&__p);
  std::string __p = (void *)(v10 - 152);
  sub_236929834((void ***)&__p);
  if (*(char *)(v10 - 105) < 0) {
    operator delete(*(void **)(v10 - 128));
  }
  uint64_t v12 = *(void *)(v10 - 104);
  *(void *)(v10 - 104) = 0;
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
  }
  _Unwind_Resume(a1);
}

BOOL sub_23691DDE4(const char *a1, uint64_t a2, uint64_t a3)
{
  sub_23692AAE8((uint64_t)v11);
  size_t v5 = strlen(a1);
  uint64_t v6 = sub_236914270(v12, (uint64_t)a1, v5);
  if ((*((unsigned char *)v6 + *(void *)(*v6 - 24) + 32) & 5) != 0)
  {
    BOOL v7 = 0;
  }
  else
  {
    uint64_t v8 = (void *)MEMORY[0x237E07350](v11, a3);
    BOOL v7 = (*((unsigned char *)v8 + *(void *)(*v8 - 24) + 32) & 5) == 0;
  }
  v11[0] = *MEMORY[0x263F8C2B8];
  uint64_t v9 = *(void *)(MEMORY[0x263F8C2B8] + 72);
  *(void *)((char *)v11 + *(void *)(v11[0] - 24)) = *(void *)(MEMORY[0x263F8C2B8] + 64);
  v12[0] = v9;
  v12[1] = MEMORY[0x263F8C318] + 16;
  if (v13 < 0) {
    operator delete((void *)v12[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x237E07510](&v14);
  return v7;
}

void sub_23691DFBC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_23692ADC0((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_23691DFD0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  double result = sub_2369298D8(a2, 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3));
  uint64_t v4 = *a1;
  if (a1[1] != *a1)
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    unint64_t v7 = 0;
    do
    {
      uint64_t v8 = (void *)(v4 + v5);
      LODWORD(v4) = *(char *)(v4 + v5 + 23);
      if ((v4 & 0x80000000) != 0)
      {
        uint64_t v9 = (void *)*v8;
        uint64_t v4 = v8[1];
      }
      else
      {
        uint64_t v4 = v4;
        uint64_t v9 = v8;
      }
      uint64_t v10 = (void *)(*result + v6);
      *uint64_t v10 = v9;
      v10[1] = v4;
      ++v7;
      uint64_t v4 = *a1;
      v6 += 16;
      v5 += 24;
    }
    while (0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3) > v7);
  }
  return result;
}

uint64_t sub_23691E074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 88))(a1);
  if (!*a5)
  {
    sub_236944CE4(a5);
    if (a4)
    {
      sub_236929888(a4);
      sub_236936644(&v16, 0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, unsigned int *))(*(void *)a1 + 232))(a1, a2, a3, &v16);
      if (!*a5)
      {
        sub_236944CE4(a5);
        if (v19) {
          uint64_t v11 = v19 + 8;
        }
        else {
          uint64_t v11 = 0;
        }
        if (v18)
        {
          unint64_t v12 = a4[1];
          uint64_t v13 = 8 * v18;
          do
          {
            uint64_t v14 = (long long *)(*(void *)(*(void *)v11 + 48) & 0xFFFFFFFFFFFFFFFELL);
            if (v12 >= a4[2])
            {
              unint64_t v12 = sub_23692AF58(a4, v14);
            }
            else
            {
              sub_23692AEF8(a4, v14);
              v12 += 24;
            }
            a4[1] = v12;
            v11 += 8;
            v13 -= 8;
          }
          while (v13);
        }
        sub_236944CDC(a5);
      }
      return sub_23693676C(&v16);
    }
    else
    {
      unsigned int v16 = 13;
      char v15 = (void *)sub_236912F84((uint64_t)v17);
      sub_236914270(v15, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
      sub_236914270(v17, (uint64_t)"(", 1);
      std::ostream::operator<<();
      sub_236914270(v17, (uint64_t)") [", 3);
      sub_236914270(v17, (uint64_t)"pieces", 6);
      sub_236914270(v17, (uint64_t)"] ", 2);
      sub_236914270(v17, (uint64_t)"output container is null", 24);
      sub_2369107FC(&v16, (uint64_t)a5);
      v17[0] = *MEMORY[0x263F8C2C8];
      *(void *)((char *)v17 + *(void *)(v17[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
      v17[1] = MEMORY[0x263F8C318] + 16;
      if (v21 < 0) {
        operator delete(__p);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      return MEMORY[0x237E07510](&v22);
    }
  }
  return result;
}

void sub_23691E34C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_23691E378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char **a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 88))(a1);
  if (!*a5)
  {
    sub_236944CE4(a5);
    if (a4)
    {
      a4[1] = *a4;
      sub_236936644(&v26, 0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, unsigned int *))(*(void *)a1 + 232))(a1, a2, a3, &v26);
      if (!*a5)
      {
        sub_236944CE4(a5);
        if (v29) {
          uint64_t v11 = v29 + 8;
        }
        else {
          uint64_t v11 = 0;
        }
        if (v28)
        {
          unint64_t v12 = a4 + 2;
          uint64_t v13 = a4[1];
          uint64_t v14 = v11 + 8 * v28;
          do
          {
            int v15 = *(_DWORD *)(*(void *)v11 + 64);
            if ((unint64_t)v13 >= *v12)
            {
              uint64_t v17 = *a4;
              uint64_t v18 = (v13 - *a4) >> 2;
              unint64_t v19 = v18 + 1;
              if ((unint64_t)(v18 + 1) >> 62) {
                sub_236913FC4();
              }
              uint64_t v20 = *v12 - (void)v17;
              if (v20 >> 1 > v19) {
                unint64_t v19 = v20 >> 1;
              }
              if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v21 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v21 = v19;
              }
              if (v21)
              {
                uint64_t v22 = (char *)sub_236914FFC((uint64_t)(a4 + 2), v21);
                uint64_t v17 = *a4;
                uint64_t v13 = a4[1];
              }
              else
              {
                uint64_t v22 = 0;
              }
              unsigned int v23 = &v22[4 * v18];
              *(_DWORD *)unsigned int v23 = v15;
              unsigned int v16 = v23 + 4;
              while (v13 != v17)
              {
                int v24 = *((_DWORD *)v13 - 1);
                v13 -= 4;
                *((_DWORD *)v23 - 1) = v24;
                v23 -= 4;
              }
              *a4 = v23;
              a4[1] = v16;
              a4[2] = &v22[4 * v21];
              if (v17) {
                operator delete(v17);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v13 = v15;
              unsigned int v16 = v13 + 4;
            }
            a4[1] = v16;
            v11 += 8;
            uint64_t v13 = v16;
          }
          while (v11 != v14);
        }
        sub_236944CDC(a5);
      }
      return sub_23693676C(&v26);
    }
    else
    {
      unsigned int v26 = 13;
      char v25 = (void *)sub_236912F84((uint64_t)v27);
      sub_236914270(v25, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
      sub_236914270(v27, (uint64_t)"(", 1);
      std::ostream::operator<<();
      sub_236914270(v27, (uint64_t)") [", 3);
      sub_236914270(v27, (uint64_t)"ids", 3);
      sub_236914270(v27, (uint64_t)"] ", 2);
      sub_236914270(v27, (uint64_t)"output container is null", 24);
      sub_2369107FC(&v26, (uint64_t)a5);
      v27[0] = *MEMORY[0x263F8C2C8];
      *(void *)((char *)v27 + *(void *)(v27[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
      v27[1] = MEMORY[0x263F8C318] + 16;
      if (v31 < 0) {
        operator delete(__p);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      return MEMORY[0x237E07510](&v32);
    }
  }
  return result;
}

void sub_23691E6E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23691E718(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  sub_23691DFD0(a2, __p);
  (*(void (**)(uint64_t, void **, uint64_t))(*(void *)a1 + 160))(a1, __p, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
}

void sub_23691E7A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23691E7BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 88))(a1);
  if (!*a4)
  {
    sub_236944CE4(a4);
    if (a3)
    {
      if (*(char *)(a3 + 23) < 0)
      {
        **(unsigned char **)a3 = 0;
        *(void *)(a3 + 8) = 0;
      }
      else
      {
        *(unsigned char *)a3 = 0;
        *(unsigned char *)(a3 + 23) = 0;
      }
      sub_236936644(&v10, 0);
      (*(void (**)(uint64_t, uint64_t, unsigned int *))(*(void *)a1 + 272))(a1, a2, &v10);
      if (!*a4)
      {
        sub_236944CE4(a4);
        std::string::operator=((std::string *)a3, (const std::string *)(v11[8] & 0xFFFFFFFFFFFFFFFELL));
        sub_236944CDC(a4);
      }
      return sub_23693676C(&v10);
    }
    else
    {
      unsigned int v10 = 13;
      uint64_t v9 = (void *)sub_236912F84((uint64_t)v11);
      sub_236914270(v9, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
      sub_236914270(v11, (uint64_t)"(", 1);
      std::ostream::operator<<();
      sub_236914270(v11, (uint64_t)") [", 3);
      sub_236914270(v11, (uint64_t)"detokenized", 11);
      sub_236914270(v11, (uint64_t)"] ", 2);
      sub_236914270(v11, (uint64_t)"output container is null", 24);
      sub_2369107FC(&v10, (uint64_t)a4);
      v11[0] = *MEMORY[0x263F8C2C8];
      *(void *)((char *)v11 + *(void *)(v11[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
      v11[1] = MEMORY[0x263F8C318] + 16;
      if (v12 < 0) {
        operator delete((void *)v11[9]);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      return MEMORY[0x237E07510](&v13);
    }
  }
  return result;
}

void sub_23691EA58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_23691EA80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 88))(a1);
  if (!*a4)
  {
    sub_236944CE4(a4);
    if (a3)
    {
      if (*(char *)(a3 + 23) < 0)
      {
        **(unsigned char **)a3 = 0;
        *(void *)(a3 + 8) = 0;
      }
      else
      {
        *(unsigned char *)a3 = 0;
        *(unsigned char *)(a3 + 23) = 0;
      }
      sub_236936644(&v10, 0);
      (*(void (**)(uint64_t, uint64_t, unsigned int *))(*(void *)a1 + 280))(a1, a2, &v10);
      if (!*a4)
      {
        sub_236944CE4(a4);
        std::string::operator=((std::string *)a3, (const std::string *)(v11[8] & 0xFFFFFFFFFFFFFFFELL));
        sub_236944CDC(a4);
      }
      return sub_23693676C(&v10);
    }
    else
    {
      unsigned int v10 = 13;
      uint64_t v9 = (void *)sub_236912F84((uint64_t)v11);
      sub_236914270(v9, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
      sub_236914270(v11, (uint64_t)"(", 1);
      std::ostream::operator<<();
      sub_236914270(v11, (uint64_t)") [", 3);
      sub_236914270(v11, (uint64_t)"detokenized", 11);
      sub_236914270(v11, (uint64_t)"] ", 2);
      sub_236914270(v11, (uint64_t)"output container is null", 24);
      sub_2369107FC(&v10, (uint64_t)a4);
      v11[0] = *MEMORY[0x263F8C2C8];
      *(void *)((char *)v11 + *(void *)(v11[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
      v11[1] = MEMORY[0x263F8C318] + 16;
      if (v12 < 0) {
        operator delete((void *)v11[9]);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      return MEMORY[0x237E07510](&v13);
    }
  }
  return result;
}

void sub_23691ED1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_23691ED44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 88))(a1);
  if (!*a6)
  {
    sub_236944CE4(a6);
    if (a5)
    {
      uint64_t v13 = *a5;
      uint64_t v14 = (void **)a5[1];
      while (v14 != (void **)v13)
      {
        v14 -= 3;
        char v31 = v14;
        sub_236929834(&v31);
      }
      a5[1] = v13;
      sub_236937200(&v31, 0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void ***))(*(void *)a1 + 240))(a1, a2, a3, a4, &v31);
      if (!*a6)
      {
        sub_236944CE4(a6);
        if (v34) {
          int v15 = (uint64_t *)(v34 + 8);
        }
        else {
          int v15 = 0;
        }
        if (v33)
        {
          unsigned int v16 = &v15[v33];
          do
          {
            uint64_t v17 = *v15;
            int v28 = 0;
            unint64_t v29 = 0;
            unint64_t v30 = 0;
            uint64_t v18 = *(void *)(v17 + 64);
            if (v18) {
              uint64_t v19 = v18 + 8;
            }
            else {
              uint64_t v19 = 0;
            }
            uint64_t v20 = *(int *)(v17 + 56);
            if (v20)
            {
              unint64_t v21 = 0;
              uint64_t v22 = 8 * v20;
              do
              {
                unint64_t v23 = *(void *)(*(void *)v19 + 48) & 0xFFFFFFFFFFFFFFFELL;
                if (v21 >= v30)
                {
                  unint64_t v21 = sub_23692AF58((uint64_t *)&v28, (long long *)v23);
                }
                else
                {
                  if (*(char *)(v23 + 23) < 0)
                  {
                    sub_23692B07C((unsigned char *)v21, *(void **)v23, *(void *)(v23 + 8));
                  }
                  else
                  {
                    long long v24 = *(_OWORD *)v23;
                    *(void *)(v21 + 16) = *(void *)(v23 + 16);
                    *(_OWORD *)unint64_t v21 = v24;
                  }
                  v21 += 24;
                }
                unint64_t v29 = v21;
                v19 += 8;
                v22 -= 8;
              }
              while (v22);
            }
            unint64_t v25 = a5[1];
            if (v25 >= a5[2])
            {
              uint64_t v26 = sub_23692B17C(a5, &v28);
            }
            else
            {
              sub_23692B11C((uint64_t)a5, &v28);
              uint64_t v26 = v25 + 24;
            }
            a5[1] = v26;
            long long v38 = &v28;
            sub_236929834((void ***)&v38);
            ++v15;
          }
          while (v15 != v16);
        }
        sub_236944CDC(a6);
      }
      return sub_2369372BC(&v31);
    }
    else
    {
      LODWORD(v31) = 13;
      size_t v27 = (void *)sub_236912F84((uint64_t)v32);
      sub_236914270(v27, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
      sub_236914270(v32, (uint64_t)"(", 1);
      std::ostream::operator<<();
      sub_236914270(v32, (uint64_t)") [", 3);
      sub_236914270(v32, (uint64_t)"pieces", 6);
      sub_236914270(v32, (uint64_t)"] ", 2);
      sub_236914270(v32, (uint64_t)"output container is null", 24);
      sub_2369107FC((unsigned int *)&v31, (uint64_t)a6);
      v32[0] = *MEMORY[0x263F8C2C8];
      *(void *)((char *)v32 + *(void *)(v32[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
      v32[1] = MEMORY[0x263F8C318] + 16;
      if (v36 < 0) {
        operator delete(__p);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      return MEMORY[0x237E07510](&v37);
    }
  }
  return result;
}

void sub_23691F0E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_23691088C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23691F138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 88))(a1);
  if (!*a6)
  {
    sub_236944CE4(a6);
    if (a5)
    {
      sub_236929CFC(a5);
      sub_236937200(&v37, 0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, unsigned int *))(*(void *)a1 + 240))(a1, a2, a3, a4, &v37);
      if (!*a6)
      {
        sub_236944CE4(a6);
        if (v40) {
          uint64_t v13 = (uint64_t *)(v40 + 8);
        }
        else {
          uint64_t v13 = 0;
        }
        if (v39)
        {
          int v33 = &v13[v39];
          do
          {
            uint64_t v14 = *v13;
            std::string __p = 0;
            uint64_t v35 = 0;
            char v36 = 0;
            uint64_t v15 = *(void *)(v14 + 64);
            if (v15) {
              uint64_t v16 = v15 + 8;
            }
            else {
              uint64_t v16 = 0;
            }
            uint64_t v17 = *(int *)(v14 + 56);
            if (v17)
            {
              uint64_t v18 = 0;
              uint64_t v19 = v16 + 8 * v17;
              do
              {
                int v20 = *(_DWORD *)(*(void *)v16 + 64);
                if (v18 >= v36)
                {
                  uint64_t v22 = (char *)__p;
                  uint64_t v23 = (v18 - (unsigned char *)__p) >> 2;
                  unint64_t v24 = v23 + 1;
                  if ((unint64_t)(v23 + 1) >> 62) {
                    sub_236913FC4();
                  }
                  uint64_t v25 = v36 - (unsigned char *)__p;
                  if ((v36 - (unsigned char *)__p) >> 1 > v24) {
                    unint64_t v24 = v25 >> 1;
                  }
                  if ((unint64_t)v25 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v26 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v26 = v24;
                  }
                  if (v26)
                  {
                    size_t v27 = (char *)sub_236914FFC((uint64_t)&v36, v26);
                    uint64_t v22 = (char *)__p;
                    uint64_t v18 = v35;
                  }
                  else
                  {
                    size_t v27 = 0;
                  }
                  int v28 = &v27[4 * v23];
                  *(_DWORD *)int v28 = v20;
                  unint64_t v21 = v28 + 4;
                  while (v18 != v22)
                  {
                    int v29 = *((_DWORD *)v18 - 1);
                    v18 -= 4;
                    *((_DWORD *)v28 - 1) = v29;
                    v28 -= 4;
                  }
                  std::string __p = v28;
                  uint64_t v35 = v21;
                  char v36 = &v27[4 * v26];
                  if (v22) {
                    operator delete(v22);
                  }
                }
                else
                {
                  *(_DWORD *)uint64_t v18 = v20;
                  unint64_t v21 = v18 + 4;
                }
                uint64_t v35 = v21;
                v16 += 8;
                uint64_t v18 = v21;
              }
              while (v16 != v19);
            }
            unint64_t v30 = a5[1];
            if (v30 >= a5[2])
            {
              uint64_t v31 = sub_23692B6E4(a5, (uint64_t)&__p);
            }
            else
            {
              sub_23692B690((uint64_t)a5, (uint64_t)&__p);
              uint64_t v31 = v30 + 24;
            }
            a5[1] = v31;
            if (__p)
            {
              uint64_t v35 = (char *)__p;
              operator delete(__p);
            }
            ++v13;
          }
          while (v13 != v33);
        }
        sub_236944CDC(a6);
      }
      return sub_2369372BC(&v37);
    }
    else
    {
      unsigned int v37 = 13;
      uint64_t v32 = (void *)sub_236912F84((uint64_t)v38);
      sub_236914270(v32, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
      sub_236914270(v38, (uint64_t)"(", 1);
      std::ostream::operator<<();
      sub_236914270(v38, (uint64_t)") [", 3);
      sub_236914270(v38, (uint64_t)"ids", 3);
      sub_236914270(v38, (uint64_t)"] ", 2);
      sub_236914270(v38, (uint64_t)"output container is null", 24);
      sub_2369107FC(&v37, (uint64_t)a6);
      v38[0] = *MEMORY[0x263F8C2C8];
      *(void *)((char *)v38 + *(void *)(v38[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
      v38[1] = MEMORY[0x263F8C318] + 16;
      if (v42 < 0) {
        operator delete(v41);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      return MEMORY[0x237E07510](&v43);
    }
  }
  return result;
}

void sub_23691F530(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, char a14)
{
}

uint64_t sub_23691F578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X8>, float a7@<S0>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 88))(a1);
  if (!*a6)
  {
    sub_236944CE4(a6);
    if (a5)
    {
      sub_236929888(a5);
      sub_236936644(&v20, 0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, unsigned int *, float))(*(void *)a1 + 248))(a1, a2, a3, a4, &v20, a7);
      if (!*a6)
      {
        sub_236944CE4(a6);
        if (v23) {
          uint64_t v15 = v23 + 8;
        }
        else {
          uint64_t v15 = 0;
        }
        if (v22)
        {
          unint64_t v16 = a5[1];
          uint64_t v17 = 8 * v22;
          do
          {
            uint64_t v18 = (long long *)(*(void *)(*(void *)v15 + 48) & 0xFFFFFFFFFFFFFFFELL);
            if (v16 >= a5[2])
            {
              unint64_t v16 = sub_23692AF58(a5, v18);
            }
            else
            {
              sub_23692AEF8(a5, v18);
              v16 += 24;
            }
            a5[1] = v16;
            v15 += 8;
            v17 -= 8;
          }
          while (v17);
        }
        sub_236944CDC(a6);
      }
      return sub_23693676C(&v20);
    }
    else
    {
      unsigned int v20 = 13;
      uint64_t v19 = (void *)sub_236912F84((uint64_t)v21);
      sub_236914270(v19, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
      sub_236914270(v21, (uint64_t)"(", 1);
      std::ostream::operator<<();
      sub_236914270(v21, (uint64_t)") [", 3);
      sub_236914270(v21, (uint64_t)"pieces", 6);
      sub_236914270(v21, (uint64_t)"] ", 2);
      sub_236914270(v21, (uint64_t)"output container is null", 24);
      sub_2369107FC(&v20, (uint64_t)a6);
      v21[0] = *MEMORY[0x263F8C2C8];
      *(void *)((char *)v21 + *(void *)(v21[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
      v21[1] = MEMORY[0x263F8C318] + 16;
      if (v25 < 0) {
        operator delete(__p);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      return MEMORY[0x237E07510](&v26);
    }
  }
  return result;
}

void sub_23691F870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_23691F89C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char **a5@<X4>, uint64_t *a6@<X8>, float a7@<S0>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 88))(a1);
  if (!*a6)
  {
    sub_236944CE4(a6);
    if (a5)
    {
      a5[1] = *a5;
      sub_236936644(&v30, 0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, unsigned int *, float))(*(void *)a1 + 248))(a1, a2, a3, a4, &v30, a7);
      if (!*a6)
      {
        sub_236944CE4(a6);
        if (v33) {
          uint64_t v15 = v33 + 8;
        }
        else {
          uint64_t v15 = 0;
        }
        if (v32)
        {
          unint64_t v16 = a5 + 2;
          uint64_t v17 = a5[1];
          uint64_t v18 = v15 + 8 * v32;
          do
          {
            int v19 = *(_DWORD *)(*(void *)v15 + 64);
            if ((unint64_t)v17 >= *v16)
            {
              unint64_t v21 = *a5;
              uint64_t v22 = (v17 - *a5) >> 2;
              unint64_t v23 = v22 + 1;
              if ((unint64_t)(v22 + 1) >> 62) {
                sub_236913FC4();
              }
              uint64_t v24 = *v16 - (void)v21;
              if (v24 >> 1 > v23) {
                unint64_t v23 = v24 >> 1;
              }
              if ((unint64_t)v24 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v25 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v25 = v23;
              }
              if (v25)
              {
                uint64_t v26 = (char *)sub_236914FFC((uint64_t)(a5 + 2), v25);
                unint64_t v21 = *a5;
                uint64_t v17 = a5[1];
              }
              else
              {
                uint64_t v26 = 0;
              }
              size_t v27 = &v26[4 * v22];
              *(_DWORD *)size_t v27 = v19;
              unsigned int v20 = v27 + 4;
              while (v17 != v21)
              {
                int v28 = *((_DWORD *)v17 - 1);
                v17 -= 4;
                *((_DWORD *)v27 - 1) = v28;
                v27 -= 4;
              }
              *a5 = v27;
              a5[1] = v20;
              a5[2] = &v26[4 * v25];
              if (v21) {
                operator delete(v21);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v17 = v19;
              unsigned int v20 = v17 + 4;
            }
            a5[1] = v20;
            v15 += 8;
            uint64_t v17 = v20;
          }
          while (v15 != v18);
        }
        sub_236944CDC(a6);
      }
      return sub_23693676C(&v30);
    }
    else
    {
      unsigned int v30 = 13;
      int v29 = (void *)sub_236912F84((uint64_t)v31);
      sub_236914270(v29, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
      sub_236914270(v31, (uint64_t)"(", 1);
      std::ostream::operator<<();
      sub_236914270(v31, (uint64_t)") [", 3);
      sub_236914270(v31, (uint64_t)"ids", 3);
      sub_236914270(v31, (uint64_t)"] ", 2);
      sub_236914270(v31, (uint64_t)"output container is null", 24);
      sub_2369107FC(&v30, (uint64_t)a6);
      v31[0] = *MEMORY[0x263F8C2C8];
      *(void *)((char *)v31 + *(void *)(v31[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
      v31[1] = MEMORY[0x263F8C318] + 16;
      if (v35 < 0) {
        operator delete(__p);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      return MEMORY[0x237E07510](&v36);
    }
  }
  return result;
}

void sub_23691FC24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_23691FC54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X8>, float a9@<S0>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 88))(a1);
  if (!*a8)
  {
    sub_236944CE4(a8);
    if (a7)
    {
      uint64_t v19 = *a7;
      unsigned int v20 = (void **)a7[1];
      while (v20 != (void **)v19)
      {
        v20 -= 4;
        int v39 = v20;
        sub_236929834(&v39);
      }
      a7[1] = v19;
      sub_236937200(&v39, 0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void ***, float))(*(void *)a1 + 256))(a1, a2, a3, a4, a5, a6, &v39, a9);
      if (!*a8)
      {
        sub_236944CE4(a8);
        unint64_t v21 = (long long *)*a7;
        uint64_t v22 = (long long *)a7[1];
        while (v22 != v21)
        {
          v22 -= 2;
          uint64_t v36 = v22;
          sub_236929834((void ***)&v36);
        }
        a7[1] = (uint64_t)v21;
        sub_2369200CC(a7, v41);
        if (v42) {
          uint64_t v24 = (uint64_t *)(v42 + 8);
        }
        else {
          uint64_t v24 = 0;
        }
        if (v41)
        {
          unint64_t v25 = &v24[v41];
          do
          {
            uint64_t v26 = *v24;
            uint64_t v36 = 0;
            std::string __dst = 0;
            unint64_t v38 = 0;
            sub_236920160((uint64_t *)&v36, *(int *)(v26 + 56));
            uint64_t v27 = *(void *)(v26 + 64);
            if (v27) {
              uint64_t v28 = v27 + 8;
            }
            else {
              uint64_t v28 = 0;
            }
            uint64_t v29 = *(int *)(v26 + 56);
            if (v29)
            {
              unint64_t v30 = (unint64_t)__dst;
              uint64_t v31 = 8 * v29;
              do
              {
                unint64_t v32 = *(void *)(*(void *)v28 + 48) & 0xFFFFFFFFFFFFFFFELL;
                if (v30 >= v38)
                {
                  unint64_t v30 = sub_23692AF58((uint64_t *)&v36, (long long *)v32);
                }
                else
                {
                  if (*(char *)(v32 + 23) < 0)
                  {
                    sub_23692B07C((unsigned char *)v30, *(void **)v32, *(void *)(v32 + 8));
                  }
                  else
                  {
                    long long v33 = *(_OWORD *)v32;
                    *(void *)(v30 + 16) = *(void *)(v32 + 16);
                    *(_OWORD *)unint64_t v30 = v33;
                  }
                  v30 += 24;
                }
                std::string __dst = (void *)v30;
                v28 += 8;
                v31 -= 8;
              }
              while (v31);
            }
            LODWORD(v46[0]) = *(_DWORD *)(v26 + 80);
            unint64_t v34 = a7[1];
            if (v34 >= a7[2])
            {
              uint64_t v35 = sub_23692BD84(a7, &v36, v46);
            }
            else
            {
              sub_23692BD10((uint64_t)a7, &v36, (float *)v46);
              uint64_t v35 = v34 + 32;
            }
            a7[1] = v35;
            v46[0] = (void **)&v36;
            sub_236929834(v46);
            ++v24;
          }
          while (v24 != v25);
        }
        sub_236944CDC(a8);
      }
      return sub_2369372BC(&v39);
    }
    else
    {
      LODWORD(v39) = 13;
      unint64_t v23 = (void *)sub_236912F84((uint64_t)v40);
      sub_236914270(v23, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
      sub_236914270(v40, (uint64_t)"(", 1);
      std::ostream::operator<<();
      sub_236914270(v40, (uint64_t)") [", 3);
      sub_236914270(v40, (uint64_t)"pieces", 6);
      sub_236914270(v40, (uint64_t)"] ", 2);
      sub_236914270(v40, (uint64_t)"output container is null", 24);
      sub_2369107FC((unsigned int *)&v39, (uint64_t)a8);
      v40[0] = *MEMORY[0x263F8C2C8];
      *(void *)((char *)v40 + *(void *)(v40[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
      v40[1] = MEMORY[0x263F8C318] + 16;
      if (v44 < 0) {
        operator delete(__p);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      return MEMORY[0x237E07510](&v45);
    }
  }
  return result;
}

void sub_236920078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_23691088C((uint64_t)va);
  _Unwind_Resume(a1);
}

void **sub_2369200CC(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t result = (void **)(a1 + 2);
  if (a2 > (v4 - *a1) >> 5)
  {
    if (a2 >> 59) {
      sub_236913FC4();
    }
    uint64_t v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = sub_23692BB20((uint64_t)result, a2);
    v7[1] = (char *)v7[0] + v5;
    v7[2] = (char *)v7[0] + v5;
    v7[3] = (char *)v7[0] + 32 * v6;
    sub_23692BAA8(a1, v7);
    return sub_23692BC88(v7);
  }
  return result;
}

void sub_23692014C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_23692BC88((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_236920160(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 3) < a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL) {
      sub_236913FC4();
    }
    uint64_t v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = sub_236913FDC(result, a2);
    v7[1] = v7[0] + v5;
    v7[2] = v7[0] + v5;
    v7[3] = v7[0] + 24 * v6;
    sub_23692A578(a1, v7);
    return sub_23692A710((uint64_t)v7);
  }
  return result;
}

void sub_236920200(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_23692A710((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_236920214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X8>, float a9@<S0>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 88))(a1);
  if (!*a8)
  {
    sub_236944CE4(a8);
    if (a7)
    {
      sub_236914100(a7);
      sub_236937200(&v45, 0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned int *, float))(*(void *)a1 + 256))(a1, a2, a3, a4, a5, a6, &v45, a9);
      if (!*a8)
      {
        int v39 = a8;
        sub_236944CE4(a8);
        sub_236914100(a7);
        sub_2369206C4(a7, v47);
        if (v48) {
          uint64_t v19 = (uint64_t *)(v48 + 8);
        }
        else {
          uint64_t v19 = 0;
        }
        if (v47)
        {
          uint64_t v40 = &v19[v47];
          do
          {
            uint64_t v20 = *v19;
            std::string __p = 0;
            uint64_t v43 = 0;
            char v44 = 0;
            sub_236920758(&__p, *(int *)(v20 + 56));
            uint64_t v21 = *(void *)(v20 + 64);
            if (v21) {
              uint64_t v22 = v21 + 8;
            }
            else {
              uint64_t v22 = 0;
            }
            uint64_t v23 = *(int *)(v20 + 56);
            if (v23)
            {
              uint64_t v24 = v22 + 8 * v23;
              unint64_t v25 = v43;
              do
              {
                int v26 = *(_DWORD *)(*(void *)v22 + 64);
                if (v25 >= v44)
                {
                  uint64_t v28 = (char *)__p;
                  uint64_t v29 = (v25 - (unsigned char *)__p) >> 2;
                  unint64_t v30 = v29 + 1;
                  if ((unint64_t)(v29 + 1) >> 62) {
                    sub_236913FC4();
                  }
                  uint64_t v31 = v44 - (unsigned char *)__p;
                  if ((v44 - (unsigned char *)__p) >> 1 > v30) {
                    unint64_t v30 = v31 >> 1;
                  }
                  if ((unint64_t)v31 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v32 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v32 = v30;
                  }
                  if (v32)
                  {
                    long long v33 = (char *)sub_236914FFC((uint64_t)&v44, v32);
                    uint64_t v28 = (char *)__p;
                    unint64_t v25 = v43;
                  }
                  else
                  {
                    long long v33 = 0;
                  }
                  unint64_t v34 = &v33[4 * v29];
                  *(_DWORD *)unint64_t v34 = v26;
                  uint64_t v27 = v34 + 4;
                  while (v25 != v28)
                  {
                    int v35 = *((_DWORD *)v25 - 1);
                    v25 -= 4;
                    *((_DWORD *)v34 - 1) = v35;
                    v34 -= 4;
                  }
                  std::string __p = v34;
                  uint64_t v43 = v27;
                  char v44 = &v33[4 * v32];
                  if (v28) {
                    operator delete(v28);
                  }
                }
                else
                {
                  *(_DWORD *)unint64_t v25 = v26;
                  uint64_t v27 = v25 + 4;
                }
                uint64_t v43 = v27;
                v22 += 8;
                unint64_t v25 = v27;
              }
              while (v22 != v24);
            }
            int v41 = *(_DWORD *)(v20 + 80);
            unint64_t v36 = a7[1];
            if (v36 >= a7[2])
            {
              uint64_t v37 = sub_23692C134(a7, (uint64_t)&__p, &v41);
            }
            else
            {
              sub_23692C0CC((uint64_t)a7, (uint64_t)&__p, (float *)&v41);
              uint64_t v37 = v36 + 32;
            }
            a7[1] = v37;
            if (__p)
            {
              uint64_t v43 = (char *)__p;
              operator delete(__p);
            }
            ++v19;
          }
          while (v19 != v40);
        }
        sub_236944CDC(v39);
      }
      return sub_2369372BC(&v45);
    }
    else
    {
      unsigned int v45 = 13;
      unint64_t v38 = (void *)sub_236912F84((uint64_t)v46);
      sub_236914270(v38, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
      sub_236914270(v46, (uint64_t)"(", 1);
      std::ostream::operator<<();
      sub_236914270(v46, (uint64_t)") [", 3);
      sub_236914270(v46, (uint64_t)"ids", 3);
      sub_236914270(v46, (uint64_t)"] ", 2);
      sub_236914270(v46, (uint64_t)"output container is null", 24);
      sub_2369107FC(&v45, (uint64_t)a8);
      v46[0] = *MEMORY[0x263F8C2C8];
      *(void *)((char *)v46 + *(void *)(v46[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
      v46[1] = MEMORY[0x263F8C318] + 16;
      if (v50 < 0) {
        operator delete(v49);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      return MEMORY[0x237E07510](&v51);
    }
  }
  return result;
}

void sub_236920678(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, char a16)
{
}

uint64_t sub_2369206C4(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  if (a2 > (v4 - *a1) >> 5)
  {
    if (a2 >> 59) {
      sub_236913FC4();
    }
    uint64_t v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = sub_23692BB20(result, a2);
    v7[1] = v7[0] + v5;
    v7[2] = v7[0] + v5;
    v7[3] = v7[0] + 32 * v6;
    sub_23692BE94(a1, v7);
    return sub_23692C038((uint64_t)v7);
  }
  return result;
}

void sub_236920744(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_23692C038((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_236920758(void **a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 2)
  {
    if (a2 >> 62) {
      sub_236913FC4();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    uint64_t v6 = (char *)sub_236914FFC(v3, a2);
    unint64_t v7 = &v6[v5 & 0xFFFFFFFFFFFFFFFCLL];
    uint64_t v9 = &v6[4 * v8];
    unsigned int v10 = (char *)*a1;
    uint64_t v11 = (char *)a1[1];
    char v12 = v7;
    if (v11 != *a1)
    {
      char v12 = v7;
      do
      {
        int v13 = *((_DWORD *)v11 - 1);
        v11 -= 4;
        *((_DWORD *)v12 - 1) = v13;
        v12 -= 4;
      }
      while (v11 != v10);
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

void *sub_236920800@<X0>(uint64_t *a1@<X0>, char *a2@<X1>, size_t a3@<X2>, uint64_t a4@<X4>, uint64_t *a5@<X5>, uint64_t *a6@<X6>, uint64_t a7@<X7>, uint64_t *a8@<X8>)
{
  uint64_t v10 = *a6;
  uint64_t v110 = a6[1];
  if (*a6 != v110)
  {
    uint64_t v11 = a5;
    unint64_t v12 = 0;
    char v13 = 0;
    uint64_t v112 = a7 + 48;
    while (1)
    {
      size_t v14 = *(void *)(v10 + 8);
      if (!v14)
      {
        LODWORD(__p[0]) = 13;
        uint64_t v97 = (void *)sub_236912F84((uint64_t)&__p[1]);
        sub_236914270(v97, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
        sub_236914270(&__p[1], (uint64_t)"(", 1);
        std::ostream::operator<<();
        sub_236914270(&__p[1], (uint64_t)") [", 3);
        sub_236914270(&__p[1], (uint64_t)"!w.empty()", 10);
        sub_236914270(&__p[1], (uint64_t)"] ", 2);
        sub_236914270(&__p[1], (uint64_t)"Empty piece is not allowed.", 27);
        sub_2369107FC((unsigned int *)__p, (uint64_t)a8);
        goto LABEL_137;
      }
      uint64_t v15 = *(unsigned __int8 **)v10;
      uint64_t v16 = *(unsigned int *)(v10 + 16);
      int v111 = (*(uint64_t (**)(uint64_t *, uint64_t))(*a1 + 528))(a1, v16);
      if ((*(unsigned int (**)(uint64_t *, uint64_t))(*a1 + 536))(a1, v16))
      {
        uint64_t v17 = *(int **)(a7 + 64);
        if (v17)
        {
          uint64_t v18 = *(int *)(a7 + 56);
          int v19 = *v17;
          if ((int)v18 < *v17)
          {
            *(_DWORD *)(a7 + 56) = v18 + 1;
            uint64_t v20 = *(void *)&v17[2 * v18 + 2];
LABEL_58:
            *(_DWORD *)(v20 + 40) |= 1u;
            sub_236919A94(__p, v15, v14);
            uint64_t v53 = *(void *)(v20 + 8);
            int64_t v54 = (void *)(v53 & 0xFFFFFFFFFFFFFFFELL);
            if (v53) {
              int64_t v54 = (void *)*v54;
            }
            sub_236945F2C((uint64_t *)(v20 + 48), (long long *)__p, (uint64_t)v54);
            if (SHIBYTE(v117) < 0) {
              operator delete(__p[0]);
            }
            int v55 = *(_DWORD *)(v20 + 40);
            *(_DWORD *)(v20 + 64) = v16;
            uint64_t v56 = *(void *)(*v11 + 8 * v12);
            *(_DWORD *)(v20 + 68) = v56;
            *(_DWORD *)(v20 + 4sub_23692A244(&a9, 0) = v55 | 0x1C;
            goto LABEL_83;
          }
          if (v19 != *(_DWORD *)(a7 + 60))
          {
LABEL_57:
            *uint64_t v17 = v19 + 1;
            uint64_t v20 = sub_236937A08(*(void *)(a7 + 48));
            uint64_t v51 = *(void *)(a7 + 64);
            uint64_t v52 = *(int *)(a7 + 56);
            *(_DWORD *)(a7 + 56) = v52 + 1;
            *(void *)(v51 + 8 * v52 + 8) = v20;
            goto LABEL_58;
          }
        }
        else
        {
          int v19 = *(_DWORD *)(a7 + 60);
        }
        sub_2369597C8(v112, v19 + 1);
        uint64_t v17 = *(int **)(a7 + 64);
        int v19 = *v17;
        goto LABEL_57;
      }
      uint64_t v21 = *v11;
      uint64_t v22 = v11[1] - *v11;
      if (v12 >= v22 >> 3)
      {
        LODWORD(__p[0]) = 13;
        uint64_t v98 = (void *)sub_236912F84((uint64_t)&__p[1]);
        sub_236914270(v98, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
        sub_236914270(&__p[1], (uint64_t)"(", 1);
        std::ostream::operator<<();
        sub_236914270(&__p[1], (uint64_t)") [", 3);
        sub_236914270(&__p[1], (uint64_t)"(begin) < (norm_to_orig.size())", 31);
        sub_236914270(&__p[1], (uint64_t)"] ", 2);
        sub_2369107FC((unsigned int *)__p, (uint64_t)a8);
        goto LABEL_137;
      }
      size_t v23 = v14 + v12;
      if (v14 + v12 >= v22 >> 3)
      {
        LODWORD(__p[0]) = 13;
        uint64_t v99 = (void *)sub_236912F84((uint64_t)&__p[1]);
        sub_236914270(v99, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
        sub_236914270(&__p[1], (uint64_t)"(", 1);
        std::ostream::operator<<();
        sub_236914270(&__p[1], (uint64_t)") [", 3);
        sub_236914270(&__p[1], (uint64_t)"(end) < (norm_to_orig.size())", 29);
        sub_236914270(&__p[1], (uint64_t)"] ", 2);
        sub_2369107FC((unsigned int *)__p, (uint64_t)a8);
        goto LABEL_137;
      }
      size_t v24 = *(void *)(v21 + 8 * v12);
      if (v24 > a3)
      {
        LODWORD(__p[0]) = 13;
        BOOL v100 = (void *)sub_236912F84((uint64_t)&__p[1]);
        sub_236914270(v100, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
        sub_236914270(&__p[1], (uint64_t)"(", 1);
        std::ostream::operator<<();
        sub_236914270(&__p[1], (uint64_t)") [", 3);
        sub_236914270(&__p[1], (uint64_t)"(orig_begin) <= (input.size())", 30);
        sub_236914270(&__p[1], (uint64_t)"] ", 2);
        sub_2369107FC((unsigned int *)__p, (uint64_t)a8);
        goto LABEL_137;
      }
      size_t v25 = *(void *)(v21 + 8 * v23);
      if (v25 > a3)
      {
        LODWORD(__p[0]) = 13;
        uint64_t v101 = (void *)sub_236912F84((uint64_t)&__p[1]);
        sub_236914270(v101, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
        sub_236914270(&__p[1], (uint64_t)"(", 1);
        std::ostream::operator<<();
        sub_236914270(&__p[1], (uint64_t)") [", 3);
        sub_236914270(&__p[1], (uint64_t)"(orig_end) <= (input.size())", 28);
        sub_236914270(&__p[1], (uint64_t)"] ", 2);
        sub_2369107FC((unsigned int *)__p, (uint64_t)a8);
        goto LABEL_137;
      }
      size_t v26 = v25 - v24;
      if (v25 < v24)
      {
        LODWORD(__p[0]) = 13;
        uint64_t v102 = (void *)sub_236912F84((uint64_t)&__p[1]);
        sub_236914270(v102, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
        sub_236914270(&__p[1], (uint64_t)"(", 1);
        std::ostream::operator<<();
        sub_236914270(&__p[1], (uint64_t)") [", 3);
        sub_236914270(&__p[1], (uint64_t)"(orig_begin) <= (orig_end)", 26);
        sub_236914270(&__p[1], (uint64_t)"] ", 2);
        sub_2369107FC((unsigned int *)__p, (uint64_t)a8);
        goto LABEL_137;
      }
      if (a3 >= v24) {
        size_t v27 = v24;
      }
      else {
        size_t v27 = a3;
      }
      uint64_t v28 = &a2[v27];
      size_t v29 = a3 - v27;
      if (v29 < v26) {
        size_t v26 = v29;
      }
      __src = v28;
      size_t __len = v26;
      if (v111)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)a1[1] + 184))(a1[1]))
        {
          while (1)
          {
            unsigned __int8 v31 = *v15++;
            unsigned __int8 v30 = v31;
            unint64_t v32 = *(int **)(a7 + 64);
            if (!v32) {
              break;
            }
            uint64_t v33 = *(int *)(a7 + 56);
            int v34 = *v32;
            if ((int)v33 >= *v32)
            {
              if (v34 == *(_DWORD *)(a7 + 60))
              {
LABEL_25:
                sub_2369597C8(v112, v34 + 1);
                unint64_t v32 = *(int **)(a7 + 64);
                int v34 = *v32;
              }
              *unint64_t v32 = v34 + 1;
              uint64_t v35 = sub_236937A08(*(void *)(a7 + 48));
              uint64_t v36 = *(void *)(a7 + 64);
              uint64_t v37 = *(int *)(a7 + 56);
              *(_DWORD *)(a7 + 56) = v37 + 1;
              *(void *)(v36 + 8 * v37 + 8) = v35;
              goto LABEL_27;
            }
            *(_DWORD *)(a7 + 56) = v33 + 1;
            uint64_t v35 = *(void *)&v32[2 * v33 + 2];
LABEL_27:
            sub_236912678(v30, (uint64_t)&__dst);
            if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              p_dst = &__dst;
            }
            else {
              p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
            }
            if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::string::size_type size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
            }
            else {
              std::string::size_type size = __dst.__r_.__value_.__l.__size_;
            }
            int v40 = (*(uint64_t (**)(uint64_t, std::string *, std::string::size_type))(*(void *)a1[1] + 112))(a1[1], p_dst, size);
            if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              int v41 = &__dst;
            }
            else {
              int v41 = (std::string *)__dst.__r_.__value_.__r.__words[0];
            }
            if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::string::size_type v42 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
            }
            else {
              std::string::size_type v42 = __dst.__r_.__value_.__l.__size_;
            }
            *(_DWORD *)(v35 + 40) |= 1u;
            sub_236919A94(__p, v41, v42);
            uint64_t v43 = *(void *)(v35 + 8);
            char v44 = (void *)(v43 & 0xFFFFFFFFFFFFFFFELL);
            if (v43) {
              char v44 = (void *)*v44;
            }
            sub_236945F2C((uint64_t *)(v35 + 48), (long long *)__p, (uint64_t)v44);
            if (SHIBYTE(v117) < 0) {
              operator delete(__p[0]);
            }
            int v45 = *(_DWORD *)(v35 + 40);
            *(_DWORD *)(v35 + 4sub_23692A244(&a9, 0) = v45 | 4;
            *(_DWORD *)(v35 + 64) = v40;
            if (v14 == 1)
            {
              *(_DWORD *)(v35 + 4sub_23692A244(&a9, 0) = v45 | 6;
              sub_236919A94(__p, __src, __len);
              uint64_t v46 = *(void *)(v35 + 8);
              int v47 = (void *)(v46 & 0xFFFFFFFFFFFFFFFELL);
              if (v46) {
                int v47 = (void *)*v47;
              }
              sub_236945F2C((uint64_t *)(v35 + 56), (long long *)__p, (uint64_t)v47);
              if (SHIBYTE(v117) < 0) {
                operator delete(__p[0]);
              }
              int v48 = *(_DWORD *)(v35 + 40);
              *(_DWORD *)(v35 + 68) = v24;
              int v49 = v48 | 0x18;
              int v50 = v25;
            }
            else
            {
              *(_DWORD *)(v35 + 68) = v24;
              int v49 = v45 | 0x1C;
              int v50 = v24;
            }
            *(_DWORD *)(v35 + 4sub_23692A244(&a9, 0) = v49;
            *(_DWORD *)(v35 + 72) = v50;
            if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__dst.__r_.__value_.__l.__data_);
            }
            if (!--v14)
            {
              unint64_t v12 = v23;
              uint64_t v11 = a5;
              goto LABEL_84;
            }
          }
          int v34 = *(_DWORD *)(a7 + 60);
          goto LABEL_25;
        }
        if (v13)
        {
          uint64_t v57 = sub_236929E3C(v112, *(_DWORD *)(a7 + 56) - 1);
          if (v14 > 0x7FFFFFFFFFFFFFF7) {
            goto LABEL_141;
          }
          uint64_t v20 = v57;
          uint64_t v58 = *(void *)(v57 + 48);
          uint64_t v104 = (uint64_t *)(v57 + 48);
          if (v14 >= 0x17)
          {
            uint64_t v71 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v14 | 7) != 0x17) {
              uint64_t v71 = v14 | 7;
            }
            uint64_t v103 = v71 + 1;
            uint64_t v59 = (std::string *)operator new(v71 + 1);
            __dst.__r_.__value_.__l.__size_ = v14;
            __dst.__r_.__value_.__r.__words[2] = v103 | 0x8000000000000000;
            __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v59;
          }
          else
          {
            *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v14;
            uint64_t v59 = &__dst;
          }
          unint64_t v72 = v58 & 0xFFFFFFFFFFFFFFFELL;
          memmove(v59, v15, v14);
          v59->__r_.__value_.__s.__data_[v14] = 0;
          int v73 = *(char *)(v72 + 23);
          if (v73 >= 0) {
            unint64_t v74 = (const std::string::value_type *)v72;
          }
          else {
            unint64_t v74 = *(const std::string::value_type **)v72;
          }
          if (v73 >= 0) {
            std::string::size_type v75 = *(unsigned __int8 *)(v72 + 23);
          }
          else {
            std::string::size_type v75 = *(void *)(v72 + 8);
          }
          uint64_t v76 = std::string::insert(&__dst, 0, v74, v75);
          long long v77 = *(_OWORD *)&v76->__r_.__value_.__l.__data_;
          uint64_t v117 = v76->__r_.__value_.__r.__words[2];
          *(_OWORD *)std::string __p = v77;
          v76->__r_.__value_.__l.__size_ = 0;
          v76->__r_.__value_.__r.__words[2] = 0;
          v76->__r_.__value_.__r.__words[0] = 0;
          *(_DWORD *)(v20 + 40) |= 1u;
          uint64_t v78 = *(void *)(v20 + 8);
          uint64_t v79 = (void *)(v78 & 0xFFFFFFFFFFFFFFFELL);
          size_t v80 = __len;
          if (v78) {
            uint64_t v79 = (void *)*v79;
          }
          sub_236945F2C(v104, (long long *)__p, (uint64_t)v79);
          if (SHIBYTE(v117) < 0) {
            operator delete(__p[0]);
          }
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__dst.__r_.__value_.__l.__data_);
          }
          if (__len > 0x7FFFFFFFFFFFFFF7) {
LABEL_141:
          }
            sub_236914158();
          uint64_t v81 = *(void *)(v20 + 56);
          if (__len >= 0x17)
          {
            uint64_t v83 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((__len | 7) != 0x17) {
              uint64_t v83 = __len | 7;
            }
            uint64_t v84 = v83 + 1;
            std::string::size_type v82 = (std::string *)operator new(v83 + 1);
            unint64_t v85 = v84 | 0x8000000000000000;
            size_t v80 = __len;
            __dst.__r_.__value_.__l.__size_ = __len;
            __dst.__r_.__value_.__r.__words[2] = v85;
            __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v82;
          }
          else
          {
            *((unsigned char *)&__dst.__r_.__value_.__s + 23) = __len;
            std::string::size_type v82 = &__dst;
            if (!__len) {
              goto LABEL_109;
            }
          }
          memmove(v82, __src, v80);
LABEL_109:
          v82->__r_.__value_.__s.__data_[v80] = 0;
          int v86 = *(char *)((v81 & 0xFFFFFFFFFFFFFFFELL) + 23);
          if (v86 >= 0) {
            uint64_t v87 = (const std::string::value_type *)(v81 & 0xFFFFFFFFFFFFFFFELL);
          }
          else {
            uint64_t v87 = *(const std::string::value_type **)(v81 & 0xFFFFFFFFFFFFFFFELL);
          }
          if (v86 >= 0) {
            std::string::size_type v88 = *(unsigned __int8 *)((v81 & 0xFFFFFFFFFFFFFFFELL) + 23);
          }
          else {
            std::string::size_type v88 = *(void *)((v81 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          uint64_t v89 = std::string::insert(&__dst, 0, v87, v88);
          long long v90 = *(_OWORD *)&v89->__r_.__value_.__l.__data_;
          uint64_t v117 = v89->__r_.__value_.__r.__words[2];
          *(_OWORD *)std::string __p = v90;
          v89->__r_.__value_.__l.__size_ = 0;
          v89->__r_.__value_.__r.__words[2] = 0;
          v89->__r_.__value_.__r.__words[0] = 0;
          *(_DWORD *)(v20 + 40) |= 2u;
          uint64_t v91 = *(void *)(v20 + 8);
          uint64_t v92 = (void *)(v91 & 0xFFFFFFFFFFFFFFFELL);
          uint64_t v11 = a5;
          if (v91) {
            uint64_t v92 = (void *)*v92;
          }
          sub_236945F2C((uint64_t *)(v20 + 56), (long long *)__p, (uint64_t)v92);
          if (SHIBYTE(v117) < 0) {
            operator delete(__p[0]);
          }
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__dst.__r_.__value_.__l.__data_);
          }
          *(_DWORD *)(v20 + 40) |= 0x10u;
          LODWORD(v56) = v25;
          unint64_t v12 = v23;
          goto LABEL_83;
        }
      }
      uint64_t v60 = *(int **)(a7 + 64);
      if (!v60) {
        break;
      }
      uint64_t v61 = *(int *)(a7 + 56);
      int v62 = *v60;
      if ((int)v61 >= *v60)
      {
        if (v62 == *(_DWORD *)(a7 + 60))
        {
LABEL_72:
          sub_2369597C8(v112, v62 + 1);
          uint64_t v60 = *(int **)(a7 + 64);
          int v62 = *v60;
        }
        *uint64_t v60 = v62 + 1;
        uint64_t v20 = sub_236937A08(*(void *)(a7 + 48));
        uint64_t v63 = *(void *)(a7 + 64);
        uint64_t v64 = *(int *)(a7 + 56);
        *(_DWORD *)(a7 + 56) = v64 + 1;
        *(void *)(v63 + 8 * v64 + 8) = v20;
        goto LABEL_74;
      }
      *(_DWORD *)(a7 + 56) = v61 + 1;
      uint64_t v20 = *(void *)&v60[2 * v61 + 2];
LABEL_74:
      *(_DWORD *)(v20 + 40) |= 1u;
      sub_236919A94(__p, v15, v14);
      uint64_t v65 = *(void *)(v20 + 8);
      uint64_t v66 = (void *)(v65 & 0xFFFFFFFFFFFFFFFELL);
      if (v65) {
        uint64_t v66 = (void *)*v66;
      }
      sub_236945F2C((uint64_t *)(v20 + 48), (long long *)__p, (uint64_t)v66);
      if (SHIBYTE(v117) < 0) {
        operator delete(__p[0]);
      }
      int v67 = *(_DWORD *)(v20 + 40);
      *(_DWORD *)(v20 + 64) = v16;
      *(_DWORD *)(v20 + 4sub_23692A244(&a9, 0) = v67 | 6;
      sub_236919A94(__p, __src, __len);
      uint64_t v68 = *(void *)(v20 + 8);
      std::string::size_type v69 = (void *)(v68 & 0xFFFFFFFFFFFFFFFELL);
      if (v68) {
        std::string::size_type v69 = (void *)*v69;
      }
      sub_236945F2C((uint64_t *)(v20 + 56), (long long *)__p, (uint64_t)v69);
      if (SHIBYTE(v117) < 0) {
        operator delete(__p[0]);
      }
      int v70 = *(_DWORD *)(v20 + 40);
      *(_DWORD *)(v20 + 68) = v24;
      *(_DWORD *)(v20 + 4sub_23692A244(&a9, 0) = v70 | 0x18;
      LODWORD(v56) = v25;
      unint64_t v12 = v23;
      uint64_t v11 = a5;
LABEL_83:
      *(_DWORD *)(v20 + 72) = v56;
      size_t v23 = v12;
LABEL_84:
      v10 += 24;
      char v13 = v111;
      if (v10 == v110) {
        goto LABEL_123;
      }
    }
    int v62 = *(_DWORD *)(a7 + 60);
    goto LABEL_72;
  }
  size_t v23 = 0;
LABEL_123:
  if (v23 == a4)
  {
    uint64_t result = sub_236921674(a1, (uint64_t)(a1 + 5), a7, a8);
    if (!*a8)
    {
      sub_236944CE4(a8);
      *(_DWORD *)(a7 + 40) |= 1u;
      sub_236919A94(__p, a2, a3);
      uint64_t v94 = *(void *)(a7 + 8);
      uint64_t v95 = (void *)(v94 & 0xFFFFFFFFFFFFFFFELL);
      if (v94) {
        uint64_t v95 = (void *)*v95;
      }
      sub_236945F2C((uint64_t *)(a7 + 72), (long long *)__p, (uint64_t)v95);
      if (SHIBYTE(v117) < 0) {
        operator delete(__p[0]);
      }
      return sub_236944CDC(a8);
    }
    return result;
  }
  LODWORD(__p[0]) = 13;
  BOOL v96 = (void *)sub_236912F84((uint64_t)&__p[1]);
  sub_236914270(v96, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
  sub_236914270(&__p[1], (uint64_t)"(", 1);
  std::ostream::operator<<();
  sub_236914270(&__p[1], (uint64_t)") [", 3);
  sub_236914270(&__p[1], (uint64_t)"(consumed) == (normalized.size())", 33);
  sub_236914270(&__p[1], (uint64_t)"] ", 2);
  sub_236914270(&__p[1], (uint64_t)"all normalized characters are not consumed.", 43);
  sub_2369107FC((unsigned int *)__p, (uint64_t)a8);
LABEL_137:
  __p[1] = *(void **)MEMORY[0x263F8C2C8];
  *(void **)((char *)&__p[1] + *((void *)__p[1] - 3)) = *(void **)(MEMORY[0x263F8C2C8] + 24);
  uint64_t v117 = MEMORY[0x263F8C318] + 16;
  if (v119 < 0) {
    operator delete(v118);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return (void *)MEMORY[0x237E07510](&v120);
}

void sub_2369215C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a33 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_236921674@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v6 = *(_DWORD **)a2;
  int64_t v5 = *(_DWORD **)(a2 + 8);
  if (*(_DWORD **)a2 != v5)
  {
    uint64_t v9 = a3 + 48;
    while (1)
    {
      switch(*v6)
      {
        case 0:
          uint64_t v10 = *(void *)(a3 + 64);
          if (v10) {
            unint64_t v11 = v10 + 8;
          }
          else {
            unint64_t v11 = 0;
          }
          uint64_t v12 = *(int *)(a3 + 56);
          char v13 = (uint64_t *)(v11 + 8 * v12 - 8);
          if (v12) {
            BOOL v14 = (unint64_t)v13 > v11;
          }
          else {
            BOOL v14 = 0;
          }
          if (v14)
          {
            unint64_t v15 = v11 + 8;
            do
            {
              uint64_t v16 = *v13--;
              sub_23692CA28(*(void *)(v15 - 8), v16);
              BOOL v17 = v15 >= (unint64_t)v13;
              v15 += 8;
            }
            while (!v17);
          }
          goto LABEL_52;
        case 1:
          uint64_t v18 = *(int **)(a3 + 64);
          if (!v18)
          {
            int v20 = *(_DWORD *)(a3 + 60);
LABEL_34:
            sub_2369597C8(v9, v20 + 1);
            uint64_t v18 = *(int **)(a3 + 64);
            int v20 = *v18;
            goto LABEL_35;
          }
          int v19 = *(_DWORD *)(a3 + 56);
          int v20 = *v18;
          if (v19 < *v18)
          {
            int v21 = v19 + 1;
            *(_DWORD *)(a3 + 56) = v19 + 1;
            goto LABEL_36;
          }
          if (v20 == *(_DWORD *)(a3 + 60)) {
            goto LABEL_34;
          }
LABEL_35:
          *uint64_t v18 = v20 + 1;
          uint64_t v32 = sub_236937A08(*(void *)(a3 + 48));
          uint64_t v33 = *(void *)(a3 + 64);
          uint64_t v34 = *(int *)(a3 + 56);
          int v21 = v34 + 1;
          *(_DWORD *)(a3 + 56) = v34 + 1;
          *(void *)(v33 + 8 * v34 + 8) = v32;
LABEL_36:
          if (v21 > 1)
          {
            unint64_t v35 = v21;
            do
            {
              uint64_t v36 = *(void *)(a3 + 64) + 8;
              uint64_t v37 = *(void *)(v36 + 8 * (v35 - 2));
              *(void *)(v36 + 8 * (v35 - 2)) = *(void *)(v36 + 8 * (v35 - 1));
              *(void *)(v36 + 8 * (v35 - 1)) = v37;
              BOOL v14 = v35-- > 2;
            }
            while (v14);
          }
          if (v21 < 1)
          {
            sub_2369470F4((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1728);
            unint64_t v38 = sub_23694710C(__p, "CHECK failed: (index) < (current_size_): ");
            sub_236947248((uint64_t)&v57, (const char **)&v38->__r_.__value_.__l.__data_);
            sub_236947250((uint64_t)__p);
          }
          uint64_t v39 = *(void *)(*(void *)(a3 + 64) + 8);
          int v40 = sub_236910BF8(a1[1]);
          size_t v41 = strlen(v40);
          int v42 = (*(uint64_t (**)(uint64_t *, const char *, size_t))(*a1 + 504))(a1, v40, v41);
          *(_DWORD *)(v39 + 40) |= 4u;
          *(_DWORD *)(v39 + 64) = v42;
          uint64_t v43 = (char *)sub_236910BF8(a1[1]);
          sub_236910BF8(a1[1]);
          *(_DWORD *)(v39 + 40) |= 1u;
          sub_236919A94(__p, v43, v44);
          uint64_t v45 = *(void *)(v39 + 8);
          uint64_t v46 = (void *)(v45 & 0xFFFFFFFFFFFFFFFELL);
          if (v45) {
            uint64_t v46 = (void *)*v46;
          }
          sub_236945F2C((uint64_t *)(v39 + 48), (long long *)__p, (uint64_t)v46);
          goto LABEL_50;
        case 2:
          uint64_t v22 = *(int **)(a3 + 64);
          if (!v22)
          {
            int v24 = *(_DWORD *)(a3 + 60);
LABEL_45:
            sub_2369597C8(v9, v24 + 1);
            uint64_t v22 = *(int **)(a3 + 64);
            int v24 = *v22;
            goto LABEL_46;
          }
          uint64_t v23 = *(int *)(a3 + 56);
          int v24 = *v22;
          if ((int)v23 < *v22)
          {
            *(_DWORD *)(a3 + 56) = v23 + 1;
            uint64_t v25 = *(void *)&v22[2 * v23 + 2];
            goto LABEL_47;
          }
          if (v24 == *(_DWORD *)(a3 + 60)) {
            goto LABEL_45;
          }
LABEL_46:
          *uint64_t v22 = v24 + 1;
          uint64_t v25 = sub_236937A08(*(void *)(a3 + 48));
          uint64_t v47 = *(void *)(a3 + 64);
          uint64_t v48 = *(int *)(a3 + 56);
          *(_DWORD *)(a3 + 56) = v48 + 1;
          *(void *)(v47 + 8 * v48 + 8) = v25;
LABEL_47:
          int v49 = sub_236910C7C(a1[1]);
          size_t v50 = strlen(v49);
          int v51 = (*(uint64_t (**)(uint64_t *, const char *, size_t))(*a1 + 504))(a1, v49, v50);
          *(_DWORD *)(v25 + 40) |= 4u;
          *(_DWORD *)(v25 + 64) = v51;
          uint64_t v52 = (char *)sub_236910C7C(a1[1]);
          sub_236910C7C(a1[1]);
          *(_DWORD *)(v25 + 40) |= 1u;
          sub_236919A94(__p, v52, v53);
          uint64_t v54 = *(void *)(v25 + 8);
          int v55 = (void *)(v54 & 0xFFFFFFFFFFFFFFFELL);
          if (v54) {
            int v55 = (void *)*v55;
          }
          sub_236945F2C((uint64_t *)(v25 + 48), (long long *)__p, (uint64_t)v55);
LABEL_50:
          if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p[0].__r_.__value_.__l.__data_);
          }
LABEL_52:
          if (++v6 == v5) {
            return sub_236944CDC(a4);
          }
          break;
        case 3:
          if (*(int *)(a3 + 56) >= 1)
          {
            int v26 = 0;
            do
            {
              uint64_t v27 = sub_236929E3C(v9, v26);
              if ((*(unsigned int (**)(uint64_t *, void))(*a1 + 528))(a1, *(unsigned int *)(v27 + 64)))
              {
                uint64_t v28 = (char *)sub_236910B74(a1[1]);
                sub_236910B74(a1[1]);
                *(_DWORD *)(v27 + 40) |= 1u;
                sub_236919A94(__p, v28, v29);
                uint64_t v30 = *(void *)(v27 + 8);
                unsigned __int8 v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFELL);
                if (v30) {
                  unsigned __int8 v31 = (void *)*v31;
                }
                sub_236945F2C((uint64_t *)(v27 + 48), (long long *)__p, (uint64_t)v31);
                if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(__p[0].__r_.__value_.__l.__data_);
                }
              }
              ++v26;
            }
            while (v26 < *(_DWORD *)(a3 + 56));
          }
          goto LABEL_52;
        default:
          return (void *)sub_236944E48(a4, 13, "unknown extra_option type.", 26);
      }
    }
  }
  return sub_236944CDC(a4);
}

void sub_236921B44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void sub_236921B8C(uint64_t *a1@<X0>, char *a2@<X1>, size_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  (*(void (**)(uint64_t *))(*a1 + 88))(a1);
  if (!*a5)
  {
    sub_236944CE4(a5);
    if (a4)
    {
      sub_2369367E4(a4);
      BOOL v17 = 0;
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      BOOL v14 = 0;
      unint64_t v15 = 0;
      uint64_t v16 = 0;
      (*(void (**)(uint64_t, char *, size_t, void **, void **))(*(void *)a1[2] + 32))(a1[2], a2, a3, &v17, &v14);
      if (!*a5)
      {
        sub_236944CE4(a5);
        (*(void (**)(void **__return_ptr))(*(void *)a1[1] + 40))(__p);
        if (v19 >= 0) {
          uint64_t v10 = HIBYTE(v19);
        }
        else {
          uint64_t v10 = v18;
        }
        sub_236920800(a1, a2, a3, v10, (uint64_t *)&v14, (uint64_t *)__p, a4, a5);
        if (!*a5)
        {
          unint64_t v11 = sub_236944CE4(a5);
          sub_236944CDC(v11);
        }
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
      }
      if (v14)
      {
        unint64_t v15 = v14;
        operator delete(v14);
      }
      if (SHIBYTE(v19) < 0) {
        operator delete(v17);
      }
    }
    else
    {
      LODWORD(v17) = 13;
      uint64_t v12 = (void *)sub_236912F84((uint64_t)&v18);
      sub_236914270(v12, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
      sub_236914270(&v18, (uint64_t)"(", 1);
      std::ostream::operator<<();
      sub_236914270(&v18, (uint64_t)") [", 3);
      sub_236914270(&v18, (uint64_t)"spt", 3);
      sub_236914270(&v18, (uint64_t)"] ", 2);
      sub_236914270(&v18, (uint64_t)"output proto is null", 20);
      sub_2369107FC((unsigned int *)&v17, (uint64_t)a5);
      uint64_t v18 = *MEMORY[0x263F8C2C8];
      *(uint64_t *)((char *)&v18 + *(void *)(v18 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
      uint64_t v19 = MEMORY[0x263F8C318] + 16;
      if (v21 < 0) {
        operator delete(v20);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      MEMORY[0x237E07510](&v22);
    }
  }
}

void sub_236921EC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (__p) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void sub_236921F24(uint64_t *a1@<X0>, char *a2@<X1>, size_t a3@<X2>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  (*(void (**)(uint64_t *))(*a1 + 88))(a1);
  if (*a5) {
    return;
  }
  sub_236944CE4(a5);
  if (a4)
  {
    sub_2369372F8(a4);
    int v26 = 0;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v23 = 0;
    int v24 = 0;
    uint64_t v25 = 0;
    (*(void (**)(uint64_t, char *, size_t, void **, void **))(*(void *)a1[2] + 32))(a1[2], a2, a3, &v26, &v23);
    if (!*a5)
    {
      sub_236944CE4(a5);
      if ((*(uint64_t (**)(uint64_t))(*(void *)a1[1] + 88))(a1[1]))
      {
        (*(void (**)(uint64_t *__return_ptr))(*(void *)a1[1] + 48))(&v21);
        uint64_t v10 = v21;
        uint64_t v11 = v22;
        if (v21 != v22)
        {
          while (1)
          {
            uint64_t v12 = *(int **)(a4 + 32);
            if (!v12) {
              break;
            }
            uint64_t v13 = *(int *)(a4 + 24);
            int v14 = *v12;
            if ((int)v13 >= *v12)
            {
              if (v14 == *(_DWORD *)(a4 + 28))
              {
LABEL_12:
                sub_2369597C8(a4 + 16, v14 + 1);
                uint64_t v12 = *(int **)(a4 + 32);
                int v14 = *v12;
              }
              *uint64_t v12 = v14 + 1;
              uint64_t v15 = sub_236937AD8(*(void *)(a4 + 16));
              uint64_t v16 = *(void *)(a4 + 32);
              uint64_t v17 = *(int *)(a4 + 24);
              *(_DWORD *)(a4 + 24) = v17 + 1;
              *(void *)(v16 + 8 * v17 + 8) = v15;
              goto LABEL_14;
            }
            *(_DWORD *)(a4 + 24) = v13 + 1;
            uint64_t v15 = *(void *)&v12[2 * v13 + 2];
LABEL_14:
            int v18 = *(_DWORD *)(v10 + 24);
            *(_DWORD *)(v15 + 40) |= 2u;
            *(_DWORD *)(v15 + 8sub_23692A244(&a9, 0) = v18;
            if (v28 >= 0) {
              uint64_t v19 = HIBYTE(v28);
            }
            else {
              uint64_t v19 = v27;
            }
            sub_236920800(a1, a2, a3, v19, (uint64_t *)&v23, (uint64_t *)v10, v15, a5);
            if (*a5) {
              goto LABEL_29;
            }
            sub_236944CE4(a5);
            v10 += 32;
            if (v10 == v11)
            {
              sub_236944CDC(a5);
              goto LABEL_29;
            }
          }
          int v14 = *(_DWORD *)(a4 + 28);
          goto LABEL_12;
        }
        LODWORD(v29) = 13;
        sub_236912F84((uint64_t)&v30);
        sub_236914270(&v30, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
        sub_236914270(&v30, (uint64_t)"(", 1);
        std::ostream::operator<<();
        sub_236914270(&v30, (uint64_t)") [", 3);
        sub_236914270(&v30, (uint64_t)"!nbests.empty()", 15);
        sub_236914270(&v30, (uint64_t)"] ", 2);
        sub_236914270(&v30, (uint64_t)"NBestEncode returns empty result.", 33);
        sub_2369107FC((unsigned int *)&v29, (uint64_t)a5);
        uint64_t v30 = *MEMORY[0x263F8C2C8];
        *(uint64_t *)((char *)&v30 + *(void *)(v30 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
        uint64_t v31 = MEMORY[0x263F8C318] + 16;
        if (v33 < 0) {
          operator delete(__p);
        }
        std::streambuf::~streambuf();
        std::ostream::~ostream();
        MEMORY[0x237E07510](v34);
LABEL_29:
        size_t v29 = (void **)&v21;
        sub_2369140AC(&v29);
      }
      else
      {
        LODWORD(v29) = 13;
        sub_236912F84((uint64_t)&v30);
        sub_236914270(&v30, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
        sub_236914270(&v30, (uint64_t)"(", 1);
        std::ostream::operator<<();
        sub_236914270(&v30, (uint64_t)") [", 3);
        sub_236914270(&v30, (uint64_t)"model_->IsNBestEncodeAvailable()", 32);
        sub_236914270(&v30, (uint64_t)"] ", 2);
        sub_236914270(&v30, (uint64_t)"NBestEncode is not available for the current model.", 51);
        sub_2369107FC((unsigned int *)&v29, (uint64_t)a5);
        uint64_t v30 = *MEMORY[0x263F8C2C8];
        *(uint64_t *)((char *)&v30 + *(void *)(v30 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
        uint64_t v31 = MEMORY[0x263F8C318] + 16;
        if (v33 < 0) {
          operator delete(__p);
        }
        std::streambuf::~streambuf();
        std::ostream::~ostream();
        MEMORY[0x237E07510](v34);
      }
    }
    if (v23)
    {
      int v24 = v23;
      operator delete(v23);
    }
    if (SHIBYTE(v28) < 0) {
      operator delete(v26);
    }
  }
  else
  {
    LODWORD(v29) = 13;
    int v20 = (void *)sub_236912F84((uint64_t)&v30);
    sub_236914270(v20, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
    sub_236914270(&v30, (uint64_t)"(", 1);
    std::ostream::operator<<();
    sub_236914270(&v30, (uint64_t)") [", 3);
    sub_236914270(&v30, (uint64_t)"nbest_spt", 9);
    sub_236914270(&v30, (uint64_t)"] ", 2);
    sub_236914270(&v30, (uint64_t)"output proto is null", 20);
    sub_2369107FC((unsigned int *)&v29, (uint64_t)a5);
    uint64_t v30 = *MEMORY[0x263F8C2C8];
    *(uint64_t *)((char *)&v30 + *(void *)(v30 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
    uint64_t v31 = MEMORY[0x263F8C318] + 16;
    if (v33 < 0) {
      operator delete(__p);
    }
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    MEMORY[0x237E07510](v34);
  }
}

void sub_236922668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char *a22)
{
  a22 = &a10;
  sub_2369140AC((void ***)&a22);
  if (__p)
  {
    a14 = (uint64_t)__p;
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(a1);
}

void sub_2369226F8(uint64_t *a1@<X0>, char *a2@<X1>, size_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t *a6@<X8>, float a7@<S0>)
{
  (*(void (**)(uint64_t *))(*a1 + 88))(a1);
  if (*a6) {
    return;
  }
  sub_236944CE4(a6);
  if (a5)
  {
    sub_2369367E4(a5);
    if (a4 < 513)
    {
      unint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      std::string __p = 0;
      char v33 = 0;
      uint64_t v34 = 0;
      (*(void (**)(uint64_t, char *, size_t, void **, void **))(*(void *)a1[2] + 32))(a1[2], a2, a3, &v35, &__p);
      if (*a6)
      {
LABEL_5:
        if (__p)
        {
          char v33 = __p;
          operator delete(__p);
        }
        if (SHIBYTE(v37) < 0) {
          operator delete(v35);
        }
        return;
      }
      sub_236944CE4(a6);
      char v16 = (*(uint64_t (**)(uint64_t))(*(void *)a1[1] + 88))(a1[1]);
      if (a4 >= 0) {
        char v17 = v16;
      }
      else {
        char v17 = 0;
      }
      if (v17)
      {
        if (a4 > 1)
        {
          (*(void (**)(uint64_t *__return_ptr))(*(void *)a1[1] + 48))(&v30);
          if (v30 == v31)
          {
            LODWORD(v38) = 13;
            sub_236912F84((uint64_t)v39);
            sub_236914270(v39, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
            sub_236914270(v39, (uint64_t)"(", 1);
            std::ostream::operator<<();
            sub_236914270(v39, (uint64_t)") [", 3);
            sub_236914270(v39, (uint64_t)"!nbests.empty()", 15);
            sub_236914270(v39, (uint64_t)"] ", 2);
            sub_236914270(v39, (uint64_t)"NBestEncode returns empty result.", 33);
            sub_2369107FC((unsigned int *)&v38, (uint64_t)a6);
            sub_23691088C((uint64_t)&v38);
            unint64_t v38 = &v30;
            sub_2369140AC((void ***)&v38);
            goto LABEL_5;
          }
          LODWORD(v29[0]) = 0;
          sub_23692C238(&v38, (v31 - v30) >> 5, v29);
          if (v31 != v30)
          {
            uint64_t v19 = (float *)v38;
            if ((unint64_t)((v31 - v30) >> 5) <= 1) {
              uint64_t v20 = 1;
            }
            else {
              uint64_t v20 = (v31 - v30) >> 5;
            }
            uint64_t v21 = (float *)(v30 + 24);
            do
            {
              float v22 = *v21;
              v21 += 8;
              *v19++ = expf(v22 * a7);
              --v20;
            }
            while (v20);
          }
          uint64_t v23 = sub_236942CF0();
          sub_23692C2BC((uint64_t)v29, (float *)v38, v39[0]);
          uint64_t v24 = HIBYTE(v37);
          uint64_t v25 = v36;
          int v26 = sub_23692C5DC((uint64_t)v29, v23, (double **)v29);
          if ((v24 & 0x80u) == 0) {
            uint64_t v27 = v24;
          }
          else {
            uint64_t v27 = v25;
          }
          sub_236920800(a1, a2, a3, v27, (uint64_t *)&__p, (uint64_t *)(v30 + 32 * v26), a5, a6);
          uint64_t v28 = *a6;
          if (!*a6) {
            sub_236944CE4(a6);
          }
          if (v29[0])
          {
            v29[1] = v29[0];
            operator delete(v29[0]);
          }
          if (v38)
          {
            v39[0] = (float *)v38;
            operator delete(v38);
          }
          unint64_t v38 = &v30;
          sub_2369140AC((void ***)&v38);
          if (v28) {
            goto LABEL_5;
          }
          goto LABEL_51;
        }
        (*(void (**)(void **__return_ptr))(*(void *)a1[1] + 40))(&v38);
        if (v37 >= 0) {
          uint64_t v18 = HIBYTE(v37);
        }
        else {
          uint64_t v18 = v36;
        }
      }
      else
      {
        if (((*(uint64_t (**)(uint64_t))(*(void *)a1[1] + 80))(a1[1]) & 1) == 0)
        {
          LODWORD(v38) = 13;
          sub_236912F84((uint64_t)v39);
          sub_236914270(v39, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
          sub_236914270(v39, (uint64_t)"(", 1);
          std::ostream::operator<<();
          sub_236914270(v39, (uint64_t)") [", 3);
          sub_236914270(v39, (uint64_t)"model_->IsSampleEncodeAvailable()", 33);
          sub_236914270(v39, (uint64_t)"] ", 2);
          sub_236914270(v39, (uint64_t)"SampleEncode is not available for the current model.", 52);
          sub_2369107FC((unsigned int *)&v38, (uint64_t)a6);
          sub_23691088C((uint64_t)&v38);
          goto LABEL_5;
        }
        (*(void (**)(void **__return_ptr, float))(*(void *)a1[1] + 56))(&v38, a7);
        if (v37 >= 0) {
          uint64_t v18 = HIBYTE(v37);
        }
        else {
          uint64_t v18 = v36;
        }
      }
      sub_236920800(a1, a2, a3, v18, (uint64_t *)&__p, (uint64_t *)&v38, a5, a6);
      if (*a6)
      {
        if (v38)
        {
          v39[0] = (float *)v38;
          operator delete(v38);
        }
        goto LABEL_5;
      }
      sub_236944CE4(a6);
      if (v38)
      {
        v39[0] = (float *)v38;
        operator delete(v38);
      }
LABEL_51:
      sub_236944CDC(a6);
      goto LABEL_5;
    }
    LODWORD(v38) = 13;
    uint64_t v15 = (void *)sub_236912F84((uint64_t)v39);
    sub_236914270(v15, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
    sub_236914270(v39, (uint64_t)"(", 1);
    std::ostream::operator<<();
    sub_236914270(v39, (uint64_t)") [", 3);
    sub_236914270(v39, (uint64_t)"(nbest_size) <= (512)", 21);
    sub_236914270(v39, (uint64_t)"] ", 2);
    sub_236914270(v39, (uint64_t)"nbest_size must be nbest_size <= 512", 36);
    sub_2369107FC((unsigned int *)&v38, (uint64_t)a6);
  }
  else
  {
    LODWORD(v38) = 13;
    int v14 = (void *)sub_236912F84((uint64_t)v39);
    sub_236914270(v14, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
    sub_236914270(v39, (uint64_t)"(", 1);
    std::ostream::operator<<();
    sub_236914270(v39, (uint64_t)") [", 3);
    sub_236914270(v39, (uint64_t)"spt", 3);
    sub_236914270(v39, (uint64_t)"] ", 2);
    sub_236914270(v39, (uint64_t)"output proto is null", 20);
    sub_2369107FC((unsigned int *)&v38, (uint64_t)a6);
  }
  v39[0] = *(float **)MEMORY[0x263F8C2C8];
  *(float **)((char *)v39 + *((void *)v39[0] - 3)) = *(float **)(MEMORY[0x263F8C2C8] + 24);
  v39[1] = (float *)(MEMORY[0x263F8C318] + 16);
  if (v40 < 0) {
    operator delete(v39[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x237E07510](&v41);
}

void sub_236922ED8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,char *a24,uint64_t a25)
{
  a24 = &a12;
  sub_2369140AC((void ***)&a24);
  if (__p)
  {
    a16 = (uint64_t)__p;
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(a1);
}

void sub_236922FC4(uint64_t a1@<X0>, char *a2@<X1>, size_t a3@<X2>, uint64_t a4@<X6>, uint64_t *a5@<X8>, float a6@<S0>)
{
  if ((*(uint64_t (**)(void))(**(void **)(a1 + 8) + 96))(*(void *)(a1 + 8)))
  {
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    uint64_t v25 = 0;
    int v26 = 0;
    uint64_t v27 = 0;
    (*(void (**)(void, char *, size_t, void **, void **))(**(void **)(a1 + 16) + 32))(*(void *)(a1 + 16), a2, a3, &v28, &v25);
    if (!*a5)
    {
      sub_236944CE4(a5);
      (*(void (**)(uint64_t *__return_ptr, float))(**(void **)(a1 + 8) + 64))(&v23, a6);
      uint64_t v12 = v23;
      uint64_t v13 = v24;
      if (v23 != v24)
      {
        while (1)
        {
          int v14 = *(int **)(a4 + 32);
          if (!v14) {
            break;
          }
          uint64_t v15 = *(int *)(a4 + 24);
          int v16 = *v14;
          if ((int)v15 >= *v14)
          {
            if (v16 == *(_DWORD *)(a4 + 28))
            {
LABEL_9:
              sub_2369597C8(a4 + 16, v16 + 1);
              int v14 = *(int **)(a4 + 32);
              int v16 = *v14;
            }
            *int v14 = v16 + 1;
            uint64_t v17 = sub_236937AD8(*(void *)(a4 + 16));
            uint64_t v18 = *(void *)(a4 + 32);
            uint64_t v19 = *(int *)(a4 + 24);
            *(_DWORD *)(a4 + 24) = v19 + 1;
            *(void *)(v18 + 8 * v19 + 8) = v17;
            goto LABEL_11;
          }
          *(_DWORD *)(a4 + 24) = v15 + 1;
          uint64_t v17 = *(void *)&v14[2 * v15 + 2];
LABEL_11:
          int v20 = *(_DWORD *)(v12 + 24);
          *(_DWORD *)(v17 + 40) |= 2u;
          *(_DWORD *)(v17 + 8sub_23692A244(&a9, 0) = v20;
          if (v30 >= 0) {
            uint64_t v21 = HIBYTE(v30);
          }
          else {
            uint64_t v21 = v29;
          }
          sub_236920800((uint64_t *)a1, a2, a3, v21, (uint64_t *)&v25, (uint64_t *)v12, v17, a5);
          if (*a5) {
            goto LABEL_23;
          }
          sub_236944CE4(a5);
          v12 += 32;
          if (v12 == v13)
          {
            sub_236944CDC(a5);
            goto LABEL_23;
          }
        }
        int v16 = *(_DWORD *)(a4 + 28);
        goto LABEL_9;
      }
      LODWORD(v31) = 13;
      sub_236912F84((uint64_t)&v32);
      sub_236914270(&v32, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
      sub_236914270(&v32, (uint64_t)"(", 1);
      std::ostream::operator<<();
      sub_236914270(&v32, (uint64_t)") [", 3);
      sub_236914270(&v32, (uint64_t)"!results.empty()", 16);
      sub_236914270(&v32, (uint64_t)"] ", 2);
      sub_236914270(&v32, (uint64_t)"SampleEncodeAndScore returns empty result.", 42);
      sub_2369107FC((unsigned int *)&v31, (uint64_t)a5);
      uint64_t v32 = *MEMORY[0x263F8C2C8];
      *(uint64_t *)((char *)&v32 + *(void *)(v32 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
      uint64_t v33 = MEMORY[0x263F8C318] + 16;
      if (v35 < 0) {
        operator delete(__p);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      MEMORY[0x237E07510](v36);
LABEL_23:
      uint64_t v31 = (void **)&v23;
      sub_2369140AC(&v31);
    }
    if (v25)
    {
      int v26 = v25;
      operator delete(v25);
    }
    if (SHIBYTE(v30) < 0) {
      operator delete(v28);
    }
  }
  else
  {
    LODWORD(v31) = 13;
    float v22 = (void *)sub_236912F84((uint64_t)&v32);
    sub_236914270(v22, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
    sub_236914270(&v32, (uint64_t)"(", 1);
    std::ostream::operator<<();
    sub_236914270(&v32, (uint64_t)") [", 3);
    sub_236914270(&v32, (uint64_t)"model_->IsSampleEncodeAndScoreAvailable()", 41);
    sub_236914270(&v32, (uint64_t)"] ", 2);
    sub_236914270(&v32, (uint64_t)"SampleEncodeAndScore is not available for the current model.", 60);
    sub_2369107FC((unsigned int *)&v31, (uint64_t)a5);
    uint64_t v32 = *MEMORY[0x263F8C2C8];
    *(uint64_t *)((char *)&v32 + *(void *)(v32 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
    uint64_t v33 = MEMORY[0x263F8C318] + 16;
    if (v35 < 0) {
      operator delete(__p);
    }
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    MEMORY[0x237E07510](v36);
  }
}

void sub_236923558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char *a22)
{
  a22 = &a10;
  sub_2369140AC((void ***)&a22);
  if (__p)
  {
    a14 = (uint64_t)__p;
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(a1);
}

void sub_2369235D0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, float *a4@<X3>, uint64_t *a5@<X8>, float a6@<S0>)
{
  if ((*(uint64_t (**)(void))(**(void **)(a1 + 8) + 104))(*(void *)(a1 + 8)))
  {
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    std::string __p = 0;
    int v16 = 0;
    uint64_t v17 = 0;
    (*(void (**)(void, uint64_t, uint64_t, void **, void **))(**(void **)(a1 + 16) + 32))(*(void *)(a1 + 16), a2, a3, &v18, &__p);
    if (!*a5)
    {
      sub_236944CE4(a5);
      if (v20 >= 0) {
        uint64_t v12 = &v18;
      }
      else {
        uint64_t v12 = v18;
      }
      if (v20 >= 0) {
        uint64_t v13 = HIBYTE(v20);
      }
      else {
        uint64_t v13 = v19;
      }
      *a4 = (*(float (**)(void, void *, uint64_t, float))(**(void **)(a1 + 8) + 72))(*(void *)(a1 + 8), v12, v13, a6);
      sub_236944CDC(a5);
    }
    if (__p)
    {
      int v16 = __p;
      operator delete(__p);
    }
    if (SHIBYTE(v20) < 0) {
      operator delete(v18);
    }
  }
  else
  {
    LODWORD(v18) = 13;
    int v14 = (void *)sub_236912F84((uint64_t)&v19);
    sub_236914270(v14, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
    sub_236914270(&v19, (uint64_t)"(", 1);
    std::ostream::operator<<();
    sub_236914270(&v19, (uint64_t)") [", 3);
    sub_236914270(&v19, (uint64_t)"model_->IsCalculateEntropyAvailable()", 37);
    sub_236914270(&v19, (uint64_t)"] ", 2);
    sub_236914270(&v19, (uint64_t)"CalculateEntropy is not available for the current model.", 56);
    sub_2369107FC((unsigned int *)&v18, (uint64_t)a5);
    uint64_t v19 = *MEMORY[0x263F8C2C8];
    *(uint64_t *)((char *)&v19 + *(void *)(v19 - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
    uint64_t v20 = MEMORY[0x263F8C318] + 16;
    if (v22 < 0) {
      operator delete(v21);
    }
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    MEMORY[0x237E07510](&v23);
  }
}

void sub_2369238A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (__p) {
    operator delete(__p);
  }
  if (a18 < 0) {
    operator delete(a13);
  }
  _Unwind_Resume(exception_object);
}

void sub_2369238E8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  sub_23691DFD0(a2, __p);
  (*(void (**)(uint64_t, void **, uint64_t))(*(void *)a1 + 272))(a1, __p, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
}

void sub_236923978(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_236923994(uint64_t *a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4 = a3;
  uint64_t v68 = a3;
  (*(void (**)(uint64_t *))(*a1 + 88))(a1);
  if (*a4) {
    return;
  }
  sub_236944CE4(a4);
  if (v4)
  {
    sub_2369367E4(v4);
    uint64_t v8 = a1[4];
    if (v8 && (*(unsigned int (**)(uint64_t))(*(void *)v8 + 72))(v8)) {
      uint64_t v9 = (char *)(*(uint64_t (**)(uint64_t))(*(void *)a1[4] + 24))(a1[4]);
    }
    else {
      uint64_t v9 = (char *)&unk_23698E6A1;
    }
    uint64_t v10 = *a2;
    uint64_t v11 = a2[1];
    if (*a2 != v11)
    {
      while (1)
      {
        uint64_t v12 = *v10;
        uint64_t v13 = v10[1];
        uint64_t v14 = v68;
        uint64_t v15 = *(int **)(v68 + 64);
        if (!v15) {
          break;
        }
        uint64_t v16 = *(int *)(v68 + 56);
        int v17 = *v15;
        if ((int)v16 >= *v15)
        {
          if (v17 == *(_DWORD *)(v68 + 60))
          {
LABEL_14:
            sub_2369597C8(v68 + 48, v17 + 1);
            uint64_t v15 = *(int **)(v68 + 64);
            int v17 = *v15;
          }
          *uint64_t v15 = v17 + 1;
          uint64_t v18 = sub_236937A08(*(void *)(v14 + 48));
          uint64_t v19 = *(void *)(v14 + 64);
          uint64_t v20 = *(int *)(v14 + 56);
          *(_DWORD *)(v14 + 56) = v20 + 1;
          *(void *)(v19 + 8 * v20 + 8) = v18;
          goto LABEL_16;
        }
        *(_DWORD *)(v68 + 56) = v16 + 1;
        uint64_t v18 = *(void *)&v15[2 * v16 + 2];
LABEL_16:
        *(_DWORD *)(v18 + 40) |= 1u;
        uint64_t v21 = *(void *)(v18 + 8);
        char v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFELL);
        if (v21) {
          char v22 = (void *)*v22;
        }
        uint64_t v23 = sub_236945F50((uint64_t *)(v18 + 48), (uint64_t)v22);
        MEMORY[0x237E07280](v23, v12, v13);
        int v24 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*a1 + 504))(a1, v12, v13);
        *(_DWORD *)(v18 + 40) |= 4u;
        *(_DWORD *)(v18 + 64) = v24;
        v10 += 2;
        if (v10 == v11)
        {
          uint64_t v4 = v68;
          goto LABEL_20;
        }
      }
      int v17 = *(_DWORD *)(v68 + 60);
      goto LABEL_14;
    }
LABEL_20:
    sub_236921674(a1, (uint64_t)(a1 + 8), v4, a4);
    if (*a4) {
      return;
    }
    sub_236944CE4(a4);
    uint64_t v61 = 0;
    *(_DWORD *)(v4 + 40) |= 1u;
    uint64_t v25 = *(void *)(v4 + 8);
    int v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFELL);
    if (v25) {
      int v26 = (void *)*v26;
    }
    v60[1] = &v61;
    uint64_t v61 = sub_236945F50((uint64_t *)(v4 + 72), (uint64_t)v26);
    uint64_t v58 = 0;
    v59[0] = &v68;
    v59[1] = v60;
    v60[0] = &v68;
    __p[0] = 0;
    __p[1] = 0;
    int v27 = *(_DWORD *)(v4 + 56);
    if (v27 >= 1)
    {
      BOOL v28 = 0;
      int v29 = 0;
      int v30 = 0;
      char v31 = 1;
      while (1)
      {
        uint64_t v32 = sub_2369290DC(v4 + 48, v30);
        if (!(*(unsigned int (**)(uint64_t *, void))(*a1 + 552))(a1, *(unsigned int *)(v32 + 64))) {
          break;
        }
        ++v30;
LABEL_68:
        uint64_t v4 = v68;
        int v27 = *(_DWORD *)(v68 + 56);
        if (v30 >= v27) {
          goto LABEL_89;
        }
      }
      sub_236924334((uint64_t)v59, v29, v30, a4);
      if (*a4) {
        goto LABEL_95;
      }
      sub_236944CE4(a4);
      if (!v28)
      {
        if (*((char *)v61 + 23) < 0)
        {
          if (!v61[1])
          {
LABEL_32:
            unint64_t v33 = *(void *)(v32 + 48) & 0xFFFFFFFFFFFFFFFELL;
            if (*(char *)(v33 + 23) < 0)
            {
              char v35 = *(unsigned __int8 **)v33;
              size_t v34 = *(void *)(v33 + 8);
            }
            else
            {
              size_t v34 = *(unsigned __int8 *)(v33 + 23);
              char v35 = (unsigned __int8 *)(*(void *)(v32 + 48) & 0xFFFFFFFFFFFFFFFELL);
            }
            uint64_t v36 = *(unsigned int *)(v32 + 64);
            if ((*(unsigned int (**)(uint64_t *, uint64_t))(*a1 + 536))(a1, v36))
            {
              sub_236919B40(&v62, "");
LABEL_58:
              BOOL v64 = 0;
LABEL_59:
              if (SHIBYTE(v58) < 0) {
                operator delete(__p[0]);
              }
              uint64_t v58 = v63;
              *(_OWORD *)std::string __p = v62;
              BOOL v28 = v64;
              if (v63 >= 0) {
                uint64_t v46 = __p;
              }
              else {
                uint64_t v46 = (void **)v62;
              }
              if (v63 >= 0) {
                size_t v47 = HIBYTE(v63);
              }
              else {
                size_t v47 = *((void *)&v62 + 1);
              }
              sub_2369248CC(v60, v30++, v46, v47);
              int v29 = v30;
              goto LABEL_68;
            }
            if (!(*(unsigned int (**)(uint64_t *, uint64_t))(*a1 + 528))(a1, v36))
            {
              if ((v31 & 1) != 0
                && ((uint64_t v40 = a1[4]) == 0
                 || (uint64_t v41 = (*(uint64_t (**)(uint64_t))(*(void *)v40 + 152))(v40),
                     ((*(uint64_t (**)(uint64_t))(*(void *)v41 + 16))(v41) & 1) != 0)
                 || (uint64_t v42 = (*(uint64_t (**)(uint64_t))(*(void *)a1[4] + 152))(a1[4]),
                     (*(unsigned int (**)(uint64_t))(*(void *)v42 + 24))(v42))))
              {
                if (v34 >= 3)
                {
                  BOOL v49 = *(unsigned __int16 *)v35 != 38626 || v35[2] != 129;
                  if (!v49)
                  {
                    v35 += 3;
                    v34 -= 3;
                  }
                  BOOL v43 = !v49;
                }
                else
                {
                  BOOL v43 = 0;
                }
                uint64_t v50 = a1[4];
                if (v50)
                {
                  uint64_t v51 = (*(uint64_t (**)(uint64_t))(*(void *)v50 + 152))(v50);
                  if ((*(unsigned int (**)(uint64_t))(*(void *)v51 + 24))(v51)) {
                    BOOL v43 = 0;
                  }
                }
              }
              else
              {
                BOOL v43 = 0;
              }
              uint64_t v52 = operator new(0x20uLL);
              int v70 = v52 + 4;
              uint64_t v71 = v52 + 4;
              *uint64_t v52 = &unk_23698E736;
              v52[1] = 3;
              v52[2] = " ";
              v52[3] = 1;
              std::string::size_type v69 = v52;
              sub_236929950(v35, v34, (uint64_t *)&v69, (uint64_t)&__dst);
              long long v62 = __dst;
              uint64_t v63 = v73;
              unint64_t v73 = 0;
              long long __dst = 0uLL;
              BOOL v64 = v43;
              if (v69)
              {
                int v70 = v69;
                operator delete(v69);
              }
              goto LABEL_59;
            }
            uint64_t v37 = (const void *)(*(uint64_t (**)(uint64_t *, uint64_t))(*a1 + 512))(a1, v36);
            if (v38 == v34 && !memcmp(v37, v35, v34))
            {
              sub_236919B40(&v62, v9);
              goto LABEL_58;
            }
            if (v34 >= 0x7FFFFFFFFFFFFFF8) {
              sub_236914158();
            }
            if (v34 >= 0x17)
            {
              uint64_t v44 = (v34 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v34 | 7) != 0x17) {
                uint64_t v44 = v34 | 7;
              }
              uint64_t v45 = v44 + 1;
              p_dst = (long long *)operator new(v44 + 1);
              *((void *)&__dst + 1) = v34;
              unint64_t v73 = v45 | 0x8000000000000000;
              *(void *)&long long __dst = p_dst;
            }
            else
            {
              HIBYTE(v73) = v34;
              p_dst = &__dst;
              if (!v34) {
                goto LABEL_57;
              }
            }
            memmove(p_dst, v35, v34);
LABEL_57:
            *((unsigned char *)p_dst + v34) = 0;
            long long v62 = __dst;
            uint64_t v63 = v73;
            goto LABEL_58;
          }
        }
        else if (!*((unsigned char *)v61 + 23))
        {
          goto LABEL_32;
        }
      }
      char v31 = 0;
      goto LABEL_32;
    }
    int v29 = 0;
LABEL_89:
    sub_236924334((uint64_t)v59, v29, v27, a4);
    if (!*a4)
    {
      sub_236944CE4(a4);
      uint64_t v54 = a1[3];
      if (v54)
      {
        (*(void (**)(long long *__return_ptr))(*(void *)v54 + 40))(&v62);
        int v55 = v61;
        if (*((char *)v61 + 23) < 0) {
          operator delete((void *)*v61);
        }
        long long v56 = v62;
        v55[2] = v63;
        *(_OWORD *)int v55 = v56;
      }
      sub_236944CDC(a4);
    }
LABEL_95:
    if (SHIBYTE(v58) < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    LODWORD(v62) = 13;
    size_t v53 = (void *)sub_236912F84((uint64_t)&v62 + 8);
    sub_236914270(v53, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
    sub_236914270((void *)&v62 + 1, (uint64_t)"(", 1);
    std::ostream::operator<<();
    sub_236914270((void *)&v62 + 1, (uint64_t)") [", 3);
    sub_236914270((void *)&v62 + 1, (uint64_t)"spt", 3);
    sub_236914270((void *)&v62 + 1, (uint64_t)"] ", 2);
    sub_236914270((void *)&v62 + 1, (uint64_t)"output proto is null", 20);
    sub_2369107FC((unsigned int *)&v62, (uint64_t)a4);
    *((void *)&v62 + 1) = *MEMORY[0x263F8C2C8];
    *(void *)((char *)&v62 + *(void *)(*((void *)&v62 + 1) - 24) + 8) = *(void *)(MEMORY[0x263F8C2C8] + 24);
    uint64_t v63 = MEMORY[0x263F8C318] + 16;
    if (v66 < 0) {
      operator delete(v65);
    }
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    MEMORY[0x237E07510](&v67);
  }
}

void sub_2369242DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_236924334(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, void *a4@<X8>)
{
  if (a2 >= a3)
  {
    sub_236944CDC(a4);
  }
  else
  {
    memset(&v37, 0, sizeof(v37));
    int v8 = a2;
    do
    {
      uint64_t v9 = sub_2369290DC(**(void **)a1 + 48, v8);
      unint64_t v10 = *(void *)(v9 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v10 + 23) < 0)
      {
        uint64_t v12 = *(void **)v10;
        size_t v11 = *(void *)(v10 + 8);
      }
      else
      {
        size_t v11 = *(unsigned __int8 *)(v10 + 23);
        uint64_t v12 = (void *)(*(void *)(v9 + 48) & 0xFFFFFFFFFFFFFFFELL);
      }
      int v13 = sub_236911810(v12, v11);
      if (v13 < 0)
      {
        unsigned int v33 = 13;
        sub_236912F84((uint64_t)v34);
        sub_236914270(v34, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
        sub_236914270(v34, (uint64_t)"(", 1);
        std::ostream::operator<<();
        sub_236914270(v34, (uint64_t)") [", 3);
        sub_236914270(v34, (uint64_t)"(0) <= (byte)", 13);
        sub_236914270(v34, (uint64_t)"] ", 2);
        sub_2369107FC(&v33, (uint64_t)a4);
        goto LABEL_52;
      }
      std::string::append(&v37, 1uLL, v13);
      ++v8;
    }
    while (a3 != v8);
    char v31 = a4;
    if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v14 = HIBYTE(v37.__r_.__value_.__r.__words[2]);
    }
    else {
      int v14 = v37.__r_.__value_.__r.__words[1];
    }
    if (v14 >= 1)
    {
      int v15 = 0;
      while (1)
      {
        unint64_t v32 = 0;
        std::string::size_type size = HIBYTE(v37.__r_.__value_.__r.__words[2]);
        if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type size = v37.__r_.__value_.__l.__size_;
        }
        if (size < v15) {
          sub_236929BA4("string_view::substr");
        }
        unint64_t v17 = v15;
        uint64_t v18 = (std::string *)v37.__r_.__value_.__r.__words[0];
        if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v18 = &v37;
        }
        if (sub_236942BA8((unsigned __int8 *)v18 + v17, (uint64_t)v18 + size, (uint64_t *)&v32) != 65533) {
          break;
        }
        int v19 = v17 + a2;
        if (v32 != 1)
        {
          if (v32 != 3)
          {
            unsigned int v33 = 13;
            sub_236912F84((uint64_t)v34);
            sub_236914270(v34, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
            sub_236914270(v34, (uint64_t)"(", 1);
            std::ostream::operator<<();
            sub_236914270(v34, (uint64_t)") [", 3);
            sub_236914270(v34, (uint64_t)"(consumed) == (1)", 17);
            sub_236914270(v34, (uint64_t)"] ", 2);
            sub_2369107FC(&v33, (uint64_t)v31);
            goto LABEL_52;
          }
          goto LABEL_23;
        }
        sub_2369248CC(*(void ***)(a1 + 8), v19, &unk_23698E732, 3uLL);
        LODWORD(v22) = v32;
LABEL_42:
        int v15 = v17 + v22;
        if (v15 >= v14) {
          goto LABEL_49;
        }
      }
      int v19 = v17 + a2;
LABEL_23:
      std::string::size_type v20 = HIBYTE(v37.__r_.__value_.__r.__words[2]);
      if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type v20 = v37.__r_.__value_.__l.__size_;
      }
      unint64_t v21 = v20 - v17;
      if (v20 < v17) {
        sub_236929BA4("string_view::substr");
      }
      unint64_t v22 = v32;
      uint64_t v23 = &v37;
      if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        uint64_t v23 = (std::string *)v37.__r_.__value_.__r.__words[0];
      }
      if (v21 >= v32) {
        unint64_t v24 = v32;
      }
      else {
        unint64_t v24 = v21;
      }
      if (v32)
      {
        unint64_t v25 = 0;
        int v26 = (char *)v23 + v17;
        int v27 = v19;
        do
        {
          unint64_t v28 = v22 - 1;
          if (v25 == v28) {
            int v29 = v26;
          }
          else {
            int v29 = "";
          }
          if (v25 == v28) {
            size_t v30 = v24;
          }
          else {
            size_t v30 = 0;
          }
          sub_2369248CC(*(void ***)(a1 + 8), v27 + v25++, v29, v30);
          unint64_t v22 = v32;
        }
        while (v32 > v25);
      }
      goto LABEL_42;
    }
    int v15 = 0;
LABEL_49:
    if (v15 + a2 == a3)
    {
      sub_236944CDC(v31);
      goto LABEL_55;
    }
    unsigned int v33 = 13;
    sub_236912F84((uint64_t)v34);
    sub_236914270(v34, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
    sub_236914270(v34, (uint64_t)"(", 1);
    std::ostream::operator<<();
    sub_236914270(v34, (uint64_t)") [", 3);
    sub_236914270(v34, (uint64_t)"(token_index_begin + offset) == (token_index_end)", 49);
    sub_236914270(v34, (uint64_t)"] ", 2);
    sub_2369107FC(&v33, (uint64_t)v31);
LABEL_52:
    v34[0] = *MEMORY[0x263F8C2C8];
    *(void *)((char *)v34 + *(void *)(v34[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
    v34[1] = MEMORY[0x263F8C318] + 16;
    if (v35 < 0) {
      operator delete((void *)v34[9]);
    }
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    MEMORY[0x237E07510](&v36);
LABEL_55:
    if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v37.__r_.__value_.__l.__data_);
    }
  }
}

void sub_236924864(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (*(char *)(v11 - 89) < 0) {
    operator delete(*(void **)(v11 - 112));
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_2369248CC(void **a1, int a2, const void *a3, size_t a4)
{
  uint64_t v7 = sub_236929E3C(**a1 + 48, a2);
  if (a4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_236914158();
  }
  uint64_t v8 = v7;
  if (a4 >= 0x17)
  {
    uint64_t v10 = (a4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a4 | 7) != 0x17) {
      uint64_t v10 = a4 | 7;
    }
    uint64_t v11 = v10 + 1;
    p_dst = (long long *)operator new(v10 + 1);
    *((void *)&__dst + 1) = a4;
    unint64_t v20 = v11 | 0x8000000000000000;
    *(void *)&long long __dst = p_dst;
    goto LABEL_8;
  }
  HIBYTE(v2sub_23692A244(&a9, 0) = a4;
  p_dst = &__dst;
  if (a4) {
LABEL_8:
  }
    memmove(p_dst, a3, a4);
  *((unsigned char *)p_dst + a4) = 0;
  *(_DWORD *)(v8 + 40) |= 2u;
  uint64_t v12 = *(void *)(v8 + 8);
  int v13 = (void *)(v12 & 0xFFFFFFFFFFFFFFFELL);
  if (v12) {
    int v13 = (void *)*v13;
  }
  sub_236945F2C((uint64_t *)(v8 + 56), &__dst, (uint64_t)v13);
  if (SHIBYTE(v20) < 0) {
    operator delete((void *)__dst);
  }
  uint64_t v14 = *a1[1];
  if (*(char *)(v14 + 23) < 0) {
    uint64_t v15 = *(void *)(v14 + 8);
  }
  else {
    LODWORD(v15) = *(unsigned __int8 *)(v14 + 23);
  }
  int v16 = *(_DWORD *)(v8 + 40);
  *(_DWORD *)(v8 + 4sub_23692A244(&a9, 0) = v16 | 8;
  *(_DWORD *)(v8 + 68) = v15;
  if (*(char *)(v14 + 23) < 0) {
    uint64_t v17 = *(void *)(v14 + 8);
  }
  else {
    LODWORD(v17) = *(unsigned __int8 *)(v14 + 23);
  }
  *(_DWORD *)(v8 + 4sub_23692A244(&a9, 0) = v16 | 0x18;
  *(_DWORD *)(v8 + 72) = v17 + a4;
  return std::string::append((std::string *)v14, (const std::string::value_type *)a3, a4);
}

void sub_236924A28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_236924A44(uint64_t a1@<X0>, int **a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v19 = 0;
  unint64_t v20 = 0;
  unint64_t v21 = 0;
  int v8 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 496))(a1);
  sub_236920160(&v19, a2[1] - *a2);
  uint64_t v9 = *a2;
  uint64_t v10 = a2[1];
  if (*a2 == v10)
  {
LABEL_8:
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a1 + 264))(a1, &v19, a3);
  }
  else
  {
    while (1)
    {
      int v11 = *v9;
      int v18 = v11;
      if (v11 < 0 || v11 >= v8) {
        break;
      }
      __p.__r_.__value_.__r.__words[0] = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 512))(a1);
      __p.__r_.__value_.__l.__size_ = v12;
      int v13 = v20;
      if ((unint64_t)v20 >= v21)
      {
        uint64_t v14 = (unsigned char *)sub_23692C87C(&v19, (uint64_t)&__p);
      }
      else
      {
        sub_23692C98C((int)&v21, v20, (uint64_t)&__p);
        uint64_t v14 = v13 + 24;
      }
      unint64_t v20 = v14;
      if (++v9 == v10) {
        goto LABEL_8;
      }
    }
    sub_236924C60("Invalid id: ", 0xCuLL, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    sub_236944E48(a4, 11, p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v19;
  sub_236929834((void ***)&__p);
}

void sub_236924C18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  std::string __p = &a17;
  sub_236929834((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_236924C60(void *__src@<X0>, size_t __len@<X1>, std::string *a3@<X8>)
{
  sub_236919A94(&__dst, __src, __len);
  sub_23692C734();
  if ((v8 & 0x80u) == 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if ((v8 & 0x80u) == 0) {
    std::string::size_type v5 = v8;
  }
  else {
    std::string::size_type v5 = (std::string::size_type)__p[1];
  }
  uint64_t v6 = std::string::append(&__dst, (const std::string::value_type *)v4, v5);
  *a3 = *v6;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  if ((char)v8 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
}

void sub_236924D04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_236924D38(void **a1)
{
  ((void (*)(uint64_t *__return_ptr))(*a1)[11])(&v14);
  uint64_t v2 = v14;
  sub_236944CE4(&v14);
  if (!v2) {
    return (*(uint64_t (**)(void *))(*a1[1] + 128))(a1[1]);
  }
  if ((int)sub_236942B98() <= 2)
  {
    char v13 = 0;
    uint64_t v3 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"sentencepiece_processor.cc", 26);
    sub_236914270(v3, (uint64_t)"(", 1);
    uint64_t v4 = (void *)std::ostream::operator<<();
    std::string::size_type v5 = sub_236914270(v4, (uint64_t)") ", 2);
    uint64_t v6 = sub_236914270(v5, (uint64_t)"LOG(", 4);
    uint64_t v7 = sub_236914270(v6, (uint64_t)"ERROR", 5);
    unsigned __int8 v8 = sub_236914270(v7, (uint64_t)") ", 2);
    ((void (*)(uint64_t *__return_ptr, void **))(*a1)[11])(&v14, a1);
    uint64_t v9 = sub_236944FEC(&v14);
    size_t v10 = strlen(v9);
    int v11 = sub_236914270(v8, (uint64_t)v9, v10);
    sub_236914270(v11, (uint64_t)"\nReturns default value ", 23);
    std::ostream::operator<<();
    sub_236944CE4(&v14);
    sub_23691311C(&v13);
  }
  return 0;
}

void sub_236924EC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, __int16 a10, char a11, char a12)
{
}

uint64_t sub_236924EE8(void **a1, uint64_t a2, uint64_t a3)
{
  ((void (*)(uint64_t *__return_ptr))(*a1)[11])(&v18);
  uint64_t v6 = v18;
  sub_236944CE4(&v18);
  if (!v6) {
    return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*a1[1] + 112))(a1[1], a2, a3);
  }
  if ((int)sub_236942B98() <= 2)
  {
    char v17 = 0;
    uint64_t v7 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"sentencepiece_processor.cc", 26);
    sub_236914270(v7, (uint64_t)"(", 1);
    unsigned __int8 v8 = (void *)std::ostream::operator<<();
    uint64_t v9 = sub_236914270(v8, (uint64_t)") ", 2);
    size_t v10 = sub_236914270(v9, (uint64_t)"LOG(", 4);
    int v11 = sub_236914270(v10, (uint64_t)"ERROR", 5);
    std::string::size_type v12 = sub_236914270(v11, (uint64_t)") ", 2);
    ((void (*)(uint64_t *__return_ptr, void **))(*a1)[11])(&v18, a1);
    char v13 = sub_236944FEC(&v18);
    size_t v14 = strlen(v13);
    uint64_t v15 = sub_236914270(v12, (uint64_t)v13, v14);
    sub_236914270(v15, (uint64_t)"\nReturns default value ", 23);
    std::ostream::operator<<();
    sub_236944CE4(&v18);
    sub_23691311C(&v17);
  }
  return 0;
}

void sub_236925088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, __int16 a10, char a11, char a12)
{
}

const char *sub_2369250B0(void **a1, uint64_t a2)
{
  ((void (*)(uint64_t *__return_ptr))(*a1)[11])(&v17);
  uint64_t v4 = v17;
  sub_236944CE4(&v17);
  if (!v4) {
    return (const char *)(*(uint64_t (**)(void *, uint64_t))(*a1[1] + 120))(a1[1], a2);
  }
  if ((int)sub_236942B98() <= 2)
  {
    char v16 = 0;
    std::string::size_type v5 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"sentencepiece_processor.cc", 26);
    sub_236914270(v5, (uint64_t)"(", 1);
    uint64_t v6 = (void *)std::ostream::operator<<();
    uint64_t v7 = sub_236914270(v6, (uint64_t)") ", 2);
    unsigned __int8 v8 = sub_236914270(v7, (uint64_t)"LOG(", 4);
    uint64_t v9 = sub_236914270(v8, (uint64_t)"ERROR", 5);
    size_t v10 = sub_236914270(v9, (uint64_t)") ", 2);
    ((void (*)(uint64_t *__return_ptr, void **))(*a1)[11])(&v17, a1);
    int v11 = sub_236944FEC(&v17);
    size_t v12 = strlen(v11);
    char v13 = sub_236914270(v10, (uint64_t)v11, v12);
    size_t v14 = sub_236914270(v13, (uint64_t)"\nReturns default value ", 23);
    sub_236914270(v14, (uint64_t)"", 0);
    sub_236944CE4(&v17);
    sub_23691311C(&v16);
  }
  return "";
}

void sub_236925258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, __int16 a10, char a11, char a12)
{
}

float sub_236925280(void **a1, uint64_t a2)
{
  ((void (*)(uint64_t *__return_ptr))(*a1)[11])(&v17);
  uint64_t v4 = v17;
  sub_236944CE4(&v17);
  if (!v4) {
    return (*(float (**)(void *, uint64_t))(*a1[1] + 136))(a1[1], a2);
  }
  float v5 = 0.0;
  if ((int)sub_236942B98() <= 2)
  {
    char v16 = 0;
    uint64_t v6 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"sentencepiece_processor.cc", 26);
    sub_236914270(v6, (uint64_t)"(", 1);
    uint64_t v7 = (void *)std::ostream::operator<<();
    unsigned __int8 v8 = sub_236914270(v7, (uint64_t)") ", 2);
    uint64_t v9 = sub_236914270(v8, (uint64_t)"LOG(", 4);
    size_t v10 = sub_236914270(v9, (uint64_t)"ERROR", 5);
    int v11 = sub_236914270(v10, (uint64_t)") ", 2);
    ((void (*)(uint64_t *__return_ptr, void **))(*a1)[11])(&v17, a1);
    size_t v12 = sub_236944FEC(&v17);
    size_t v13 = strlen(v12);
    size_t v14 = sub_236914270(v11, (uint64_t)v12, v13);
    sub_236914270(v14, (uint64_t)"\nReturns default value ", 23);
    std::ostream::operator<<();
    sub_236944CE4(&v17);
    sub_23691311C(&v16);
  }
  return v5;
}

void sub_236925428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, __int16 a10, char a11, char a12)
{
}

uint64_t sub_236925450(void **a1, uint64_t a2)
{
  ((void (*)(uint64_t *__return_ptr))(*a1)[11])(&v16);
  uint64_t v4 = v16;
  sub_236944CE4(&v16);
  if (!v4) {
    return (*(uint64_t (**)(void *, uint64_t))(*a1[1] + 152))(a1[1], a2);
  }
  if ((int)sub_236942B98() <= 2)
  {
    char v15 = 0;
    float v5 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"sentencepiece_processor.cc", 26);
    sub_236914270(v5, (uint64_t)"(", 1);
    uint64_t v6 = (void *)std::ostream::operator<<();
    uint64_t v7 = sub_236914270(v6, (uint64_t)") ", 2);
    unsigned __int8 v8 = sub_236914270(v7, (uint64_t)"LOG(", 4);
    uint64_t v9 = sub_236914270(v8, (uint64_t)"ERROR", 5);
    size_t v10 = sub_236914270(v9, (uint64_t)") ", 2);
    ((void (*)(uint64_t *__return_ptr, void **))(*a1)[11])(&v16, a1);
    int v11 = sub_236944FEC(&v16);
    size_t v12 = strlen(v11);
    size_t v13 = sub_236914270(v10, (uint64_t)v11, v12);
    sub_236914270(v13, (uint64_t)"\nReturns default value ", 23);
    std::ostream::operator<<();
    sub_236944CE4(&v16);
    sub_23691311C(&v15);
  }
  return 0;
}

void sub_2369255E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, __int16 a10, char a11, char a12)
{
}

uint64_t sub_236925610(void **a1, uint64_t a2)
{
  ((void (*)(uint64_t *__return_ptr))(*a1)[11])(&v16);
  uint64_t v4 = v16;
  sub_236944CE4(&v16);
  if (!v4) {
    return (*(uint64_t (**)(void *, uint64_t))(*a1[1] + 144))(a1[1], a2);
  }
  if ((int)sub_236942B98() <= 2)
  {
    char v15 = 0;
    float v5 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"sentencepiece_processor.cc", 26);
    sub_236914270(v5, (uint64_t)"(", 1);
    uint64_t v6 = (void *)std::ostream::operator<<();
    uint64_t v7 = sub_236914270(v6, (uint64_t)") ", 2);
    unsigned __int8 v8 = sub_236914270(v7, (uint64_t)"LOG(", 4);
    uint64_t v9 = sub_236914270(v8, (uint64_t)"ERROR", 5);
    size_t v10 = sub_236914270(v9, (uint64_t)") ", 2);
    ((void (*)(uint64_t *__return_ptr, void **))(*a1)[11])(&v16, a1);
    int v11 = sub_236944FEC(&v16);
    size_t v12 = strlen(v11);
    size_t v13 = sub_236914270(v10, (uint64_t)v11, v12);
    sub_236914270(v13, (uint64_t)"\nReturns default value ", 23);
    std::ostream::operator<<();
    sub_236944CE4(&v16);
    sub_23691311C(&v15);
  }
  return 0;
}

void sub_2369257A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, __int16 a10, char a11, char a12)
{
}

uint64_t sub_2369257D0(void **a1, uint64_t a2)
{
  ((void (*)(uint64_t *__return_ptr))(*a1)[11])(&v16);
  uint64_t v4 = v16;
  sub_236944CE4(&v16);
  if (!v4) {
    return (*(uint64_t (**)(void *, uint64_t))(*a1[1] + 160))(a1[1], a2);
  }
  if ((int)sub_236942B98() <= 2)
  {
    char v15 = 0;
    float v5 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"sentencepiece_processor.cc", 26);
    sub_236914270(v5, (uint64_t)"(", 1);
    uint64_t v6 = (void *)std::ostream::operator<<();
    uint64_t v7 = sub_236914270(v6, (uint64_t)") ", 2);
    unsigned __int8 v8 = sub_236914270(v7, (uint64_t)"LOG(", 4);
    uint64_t v9 = sub_236914270(v8, (uint64_t)"ERROR", 5);
    size_t v10 = sub_236914270(v9, (uint64_t)") ", 2);
    ((void (*)(uint64_t *__return_ptr, void **))(*a1)[11])(&v16, a1);
    int v11 = sub_236944FEC(&v16);
    size_t v12 = strlen(v11);
    size_t v13 = sub_236914270(v10, (uint64_t)v11, v12);
    sub_236914270(v13, (uint64_t)"\nReturns default value ", 23);
    std::ostream::operator<<();
    sub_236944CE4(&v16);
    sub_23691311C(&v15);
  }
  return 0;
}

void sub_236925968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, __int16 a10, char a11, char a12)
{
}

uint64_t sub_236925990(void **a1, uint64_t a2)
{
  ((void (*)(uint64_t *__return_ptr))(*a1)[11])(&v16);
  uint64_t v4 = v16;
  sub_236944CE4(&v16);
  if (!v4) {
    return (*(uint64_t (**)(void *, uint64_t))(*a1[1] + 176))(a1[1], a2);
  }
  if ((int)sub_236942B98() <= 2)
  {
    char v15 = 0;
    float v5 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"sentencepiece_processor.cc", 26);
    sub_236914270(v5, (uint64_t)"(", 1);
    uint64_t v6 = (void *)std::ostream::operator<<();
    uint64_t v7 = sub_236914270(v6, (uint64_t)") ", 2);
    unsigned __int8 v8 = sub_236914270(v7, (uint64_t)"LOG(", 4);
    uint64_t v9 = sub_236914270(v8, (uint64_t)"ERROR", 5);
    size_t v10 = sub_236914270(v9, (uint64_t)") ", 2);
    ((void (*)(uint64_t *__return_ptr, void **))(*a1)[11])(&v16, a1);
    int v11 = sub_236944FEC(&v16);
    size_t v12 = strlen(v11);
    size_t v13 = sub_236914270(v10, (uint64_t)v11, v12);
    sub_236914270(v13, (uint64_t)"\nReturns default value ", 23);
    std::ostream::operator<<();
    sub_236944CE4(&v16);
    sub_23691311C(&v15);
  }
  return 0;
}

void sub_236925B28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, __int16 a10, char a11, char a12)
{
}

uint64_t sub_236925B50(uint64_t *a1)
{
  uint64_t v2 = sub_236910B74(a1[1]);
  size_t v3 = strlen(v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t *, const char *, size_t))(*a1 + 504))(a1, v2, v3);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(*a1 + 528))(a1, v4)) {
    return v4;
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

uint64_t sub_236925C10(uint64_t *a1)
{
  uint64_t v2 = sub_236910BF8(a1[1]);
  size_t v3 = strlen(v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t *, const char *, size_t))(*a1 + 504))(a1, v2, v3);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(*a1 + 536))(a1, v4)) {
    return v4;
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

uint64_t sub_236925CD0(uint64_t *a1)
{
  uint64_t v2 = sub_236910C7C(a1[1]);
  size_t v3 = strlen(v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t *, const char *, size_t))(*a1 + 504))(a1, v2, v3);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(*a1 + 536))(a1, v4)) {
    return v4;
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

uint64_t sub_236925D90(uint64_t *a1)
{
  uint64_t v2 = sub_236910D00(a1[1]);
  size_t v3 = strlen(v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t *, const char *, size_t))(*a1 + 504))(a1, v2, v3);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(*a1 + 536))(a1, v4)) {
    return v4;
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

uint64_t sub_236925E50@<X0>(void **a1@<X0>, uint64_t *a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t result = ((uint64_t (*)(void **))(*a1)[11])(a1);
  if (!*a3)
  {
    sub_236944CE4(a3);
    if (a2)
    {
      sub_236929888(a2);
      uint64_t v7 = *(uint64_t (**)(void))(*a1[1] + 200);
      return v7();
    }
    else
    {
      unsigned int v9 = 13;
      unsigned __int8 v8 = (void *)sub_236912F84((uint64_t)v10);
      sub_236914270(v8, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
      sub_236914270(v10, (uint64_t)"(", 1);
      std::ostream::operator<<();
      sub_236914270(v10, (uint64_t)") [", 3);
      sub_236914270(v10, (uint64_t)"pieces", 6);
      sub_236914270(v10, (uint64_t)"] ", 2);
      sub_236914270(v10, (uint64_t)"output container is null", 24);
      sub_2369107FC(&v9, (uint64_t)a3);
      v10[0] = *MEMORY[0x263F8C2C8];
      *(void *)((char *)v10 + *(void *)(v10[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
      v10[1] = MEMORY[0x263F8C318] + 16;
      if (v11 < 0) {
        operator delete((void *)v10[9]);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      return MEMORY[0x237E07510](&v12);
    }
  }
  return result;
}

void sub_2369260D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_2369260E8@<X0>(void **a1@<X0>, void *a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t result = ((uint64_t (*)(void **))(*a1)[11])(a1);
  if (!*a3)
  {
    sub_236944CE4(a3);
    if (a2)
    {
      a2[1] = *a2;
      uint64_t v7 = *(uint64_t (**)(void))(*a1[1] + 208);
      return v7();
    }
    else
    {
      unsigned int v9 = 13;
      unsigned __int8 v8 = (void *)sub_236912F84((uint64_t)v10);
      sub_236914270(v8, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
      sub_236914270(v10, (uint64_t)"(", 1);
      std::ostream::operator<<();
      sub_236914270(v10, (uint64_t)") [", 3);
      sub_236914270(v10, (uint64_t)"ids", 3);
      sub_236914270(v10, (uint64_t)"] ", 2);
      sub_236914270(v10, (uint64_t)"output container is null", 24);
      sub_2369107FC(&v9, (uint64_t)a3);
      v10[0] = *MEMORY[0x263F8C2C8];
      *(void *)((char *)v10 + *(void *)(v10[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
      v10[1] = MEMORY[0x263F8C318] + 16;
      if (v11 < 0) {
        operator delete((void *)v10[9]);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      return MEMORY[0x237E07510](&v12);
    }
  }
  return result;
}

void sub_236926368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_236926380(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    uint64_t v2 = *(uint64_t (**)(void))(*(void *)(*(uint64_t (**)(uint64_t))(*(void *)result + 152))(result) + 16);
    return v2();
  }
  return result;
}

uint64_t sub_2369263F8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    uint64_t v2 = *(uint64_t (**)(void))(*(void *)(*(uint64_t (**)(uint64_t))(*(void *)result + 152))(result) + 24);
    return v2();
  }
  return result;
}

uint64_t sub_236926470(uint64_t a1)
{
  return a1;
}

void *sub_23692649C@<X0>(_DWORD *a1@<X1>, unint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  size_t v13 = a1;
  unint64_t v14 = a2;
  if (a2 <= 0x13)
  {
    LODWORD(v9) = 13;
    uint64_t v6 = (void *)sub_236912F84((uint64_t)v10);
    sub_236914270(v6, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
    sub_236914270(v10, (uint64_t)"(", 1);
    std::ostream::operator<<();
    sub_236914270(v10, (uint64_t)") [", 3);
    sub_236914270(v10, (uint64_t)"(size) >= (sizeof(MMapHeader))", 30);
    sub_236914270(v10, (uint64_t)"] ", 2);
    sub_2369107FC((unsigned int *)&v9, (uint64_t)a3);
  }
  else if (*a1)
  {
    LODWORD(v9) = 13;
    float v5 = (void *)sub_236912F84((uint64_t)v10);
    sub_236914270(v5, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
    sub_236914270(v10, (uint64_t)"(", 1);
    std::ostream::operator<<();
    sub_236914270(v10, (uint64_t)") [", 3);
    sub_236914270(v10, (uint64_t)"header->sentinel == 0", 21);
    sub_236914270(v10, (uint64_t)"] ", 2);
    sub_236914270(v10, (uint64_t)"This file format is not for mmap-based loading.", 47);
    sub_2369107FC((unsigned int *)&v9, (uint64_t)a3);
  }
  else
  {
    uint64_t result = sub_236942FE0(&v13, 0x14uLL, a3);
    if (*a3) {
      return result;
    }
    sub_236944CE4(a3);
    if (v14 >= a1[1]) {
      operator new();
    }
    LODWORD(v9) = 13;
    unsigned __int8 v8 = (void *)sub_236912F84((uint64_t)v10);
    sub_236914270(v8, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/sentencepiece_processor.cc", 82);
    sub_236914270(v10, (uint64_t)"(", 1);
    std::ostream::operator<<();
    sub_236914270(v10, (uint64_t)") [", 3);
    sub_236914270(v10, (uint64_t)"(blob.size()) >= (header->model_proto_size)", 43);
    sub_236914270(v10, (uint64_t)"] ", 2);
    sub_2369107FC((unsigned int *)&v9, (uint64_t)a3);
  }
  v10[0] = *MEMORY[0x263F8C2C8];
  *(void *)((char *)v10 + *(void *)(v10[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  v10[1] = MEMORY[0x263F8C318] + 16;
  if (v11 < 0) {
    operator delete((void *)v10[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return (void *)MEMORY[0x237E07510](&v12);
}

void sub_236926FF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_23691088C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_236927070()
{
}

void sub_2369270CC(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x10F1C40C7D4252BLL);
  _Unwind_Resume(a1);
}

uint64_t sub_2369270F0(uint64_t a1)
{
  uint64_t v2 = a1 + 96;
  MEMORY[0x237E07280](a1 + 96);
  if (*(char *)(a1 + 119) < 0)
  {
    uint64_t v2 = *(void *)(a1 + 96);
    uint64_t v3 = *(void *)(a1 + 104);
  }
  else
  {
    uint64_t v3 = *(unsigned __int8 *)(a1 + 119);
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 48);
  return v4(a1, v2, v3);
}

void sub_236927178()
{
}

void sub_2369272A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2369272BC(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X8>)
{
  sub_23692CC04(a1);
  if (!a3)
  {
    if (*(char *)(a2 + 23) < 0) {
      sub_23692B07C(__p, *(void **)a2, *(void *)(a2 + 8));
    }
    else {
      __p[0] = *(std::__fs::filesystem::path *)a2;
    }
    if ((__p[0].__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unsigned __int8 v8 = __p;
    }
    else {
      unsigned __int8 v8 = (std::__fs::filesystem::path *)__p[0].__pn_.__r_.__value_.__r.__words[0];
    }
    int v9 = open((const char *)v8, 0, __p[0].__pn_.__r_.__value_.__r.__words[0], __p[0].__pn_.__r_.__value_.__l.__size_, __p[0].__pn_.__r_.__value_.__r.__words[2]);
    int v10 = v9;
    *(_DWORD *)(a1 + 24) = v9;
    if (SHIBYTE(__p[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p[0].__pn_.__r_.__value_.__l.__data_);
      if ((v10 & 0x80000000) == 0) {
        goto LABEL_52;
      }
    }
    else if ((v9 & 0x80000000) == 0)
    {
      goto LABEL_52;
    }
    LODWORD(__p[0].__pn_.__r_.__value_.__l.__data_) = 13;
    char v11 = (void *)sub_236912F84((uint64_t)&__p[0].__pn_.__r_.__value_.__l.__size_);
    sub_236914270(v11, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/mmap.h", 62);
    sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)"(", 1);
    std::ostream::operator<<();
    sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)") [", 3);
    sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)"(fd = ::open(filename.string().data(), mode)) >= 0", 50);
    sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)"] ", 2);
    sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)"open failed: ", 13);
    uint64_t v12 = *(unsigned __int8 *)(a2 + 23);
    if ((v12 & 0x80u) == 0) {
      size_t v13 = (unsigned char *)a2;
    }
    else {
      size_t v13 = *(unsigned char **)a2;
    }
    if ((v12 & 0x80u) != 0) {
      uint64_t v12 = *(void *)(a2 + 8);
    }
LABEL_66:
    sub_23692CDD4(&__p[0].__pn_.__r_.__value_.__l.__size_, v13, &v13[v12], 0x22u, 0x5Cu);
    sub_2369107FC((unsigned int *)__p, (uint64_t)a4);
    __p[0].__pn_.__r_.__value_.__l.__size_ = *MEMORY[0x263F8C2C8];
    *(std::string::size_type *)((char *)&__p[0].__pn_.__r_.__value_.__r.__words[1]
                              + *(void *)(__p[0].__pn_.__r_.__value_.__l.__size_ - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
    __p[0].__pn_.__r_.__value_.__r.__words[2] = MEMORY[0x263F8C318] + 16;
    if (v28 < 0) {
      operator delete(v27);
    }
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    MEMORY[0x237E07510](v29);
    return;
  }
  sub_23692CC4C((const std::__fs::filesystem::path *)a2, (uint64_t)&v31);
  sub_23692CD10((const std::__fs::filesystem::path *)a2, (uint64_t)&v30);
  std::__fs::filesystem::__status(&v31, 0);
  if (__p[0].__pn_.__r_.__value_.__s.__data_[0] != 2) {
    goto LABEL_30;
  }
  if (SHIBYTE(v31.__pn_.__r_.__value_.__r.__words[2]) < 0) {
    sub_23692B07C(__p, v31.__pn_.__r_.__value_.__l.__data_, v31.__pn_.__r_.__value_.__l.__size_);
  }
  else {
    __p[0] = v31;
  }
  if ((__p[0].__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    unint64_t v14 = __p;
  }
  else {
    unint64_t v14 = (std::__fs::filesystem::path *)__p[0].__pn_.__r_.__value_.__r.__words[0];
  }
  int v15 = open((const char *)v14, 0, __p[0].__pn_.__r_.__value_.__r.__words[0], __p[0].__pn_.__r_.__value_.__l.__size_, __p[0].__pn_.__r_.__value_.__r.__words[2]);
  int v16 = v15;
  if (SHIBYTE(__p[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p[0].__pn_.__r_.__value_.__l.__data_);
    if ((v16 & 0x80000000) == 0) {
      goto LABEL_27;
    }
LABEL_30:
    LODWORD(__p[0].__pn_.__r_.__value_.__l.__data_) = 13;
    sub_236912F84((uint64_t)&__p[0].__pn_.__r_.__value_.__l.__size_);
    sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/mmap.h", 62);
    sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)"(", 1);
    std::ostream::operator<<();
    sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)") [", 3);
    sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)"std::filesystem::is_directory(dir) && (dirfd = ::open(dir.string().data(), mode)) >= 0", 86);
    sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)"] ", 2);
    sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)"open failed: ", 13);
    std::string::size_type size = HIBYTE(v31.__pn_.__r_.__value_.__r.__words[2]);
    if ((v31.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v18 = &v31;
    }
    else {
      uint64_t v18 = (std::__fs::filesystem::path *)v31.__pn_.__r_.__value_.__r.__words[0];
    }
    if ((v31.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = v31.__pn_.__r_.__value_.__l.__size_;
    }
    sub_23692CDD4(&__p[0].__pn_.__r_.__value_.__l.__size_, v18, (unsigned char *)v18 + size, 0x22u, 0x5Cu);
    sub_2369107FC((unsigned int *)__p, (uint64_t)a4);
    __p[0].__pn_.__r_.__value_.__l.__size_ = *MEMORY[0x263F8C2C8];
    *(std::string::size_type *)((char *)&__p[0].__pn_.__r_.__value_.__r.__words[1]
                              + *(void *)(__p[0].__pn_.__r_.__value_.__l.__size_ - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
    __p[0].__pn_.__r_.__value_.__r.__words[2] = MEMORY[0x263F8C318] + 16;
    if (v28 < 0) {
      operator delete(v27);
    }
    goto LABEL_37;
  }
  if (v15 < 0) {
    goto LABEL_30;
  }
LABEL_27:
  if (SHIBYTE(v30.__pn_.__r_.__value_.__r.__words[2]) < 0) {
    sub_23692B07C(__p, v30.__pn_.__r_.__value_.__l.__data_, v30.__pn_.__r_.__value_.__l.__size_);
  }
  else {
    __p[0] = v30;
  }
  if ((__p[0].__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v19 = __p;
  }
  else {
    uint64_t v19 = (std::__fs::filesystem::path *)__p[0].__pn_.__r_.__value_.__r.__words[0];
  }
  *(_DWORD *)(a1 + 24) = openat_authenticated_np(v16, (const char *)v19, 0, -1);
  if (SHIBYTE(__p[0].__pn_.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p[0].__pn_.__r_.__value_.__l.__data_);
  }
  close(v16);
  if ((*(_DWORD *)(a1 + 24) & 0x80000000) == 0)
  {
    if (SHIBYTE(v30.__pn_.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v30.__pn_.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v31.__pn_.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v31.__pn_.__r_.__value_.__l.__data_);
    }
LABEL_52:
    if (fstat(*(_DWORD *)(a1 + 24), &v32) < 0)
    {
      LODWORD(__p[0].__pn_.__r_.__value_.__l.__data_) = 13;
      unint64_t v22 = (void *)sub_236912F84((uint64_t)&__p[0].__pn_.__r_.__value_.__l.__size_);
      sub_236914270(v22, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/mmap.h", 62);
      sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)"(", 1);
      std::ostream::operator<<();
      sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)") [", 3);
      sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)"::fstat(fd, &st) >= 0", 21);
      sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)"] ", 2);
      sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)"failed to get file size: ", 25);
      uint64_t v12 = *(unsigned __int8 *)(a2 + 23);
      if ((v12 & 0x80u) == 0) {
        size_t v13 = (unsigned char *)a2;
      }
      else {
        size_t v13 = *(unsigned char **)a2;
      }
      if ((v12 & 0x80u) != 0) {
        uint64_t v12 = *(void *)(a2 + 8);
      }
    }
    else
    {
      st_std::string::size_type size = v32.st_size;
      *(void *)(a1 + 16) = v32.st_size;
      unint64_t v21 = mmap(0, st_size, 1, 1, *(_DWORD *)(a1 + 24), 0);
      if (v21 != (void *)-1)
      {
        *(void *)(a1 + 8) = v21;
        close(*(_DWORD *)(a1 + 24));
        *(_DWORD *)(a1 + 24) = -1;
        sub_236944CDC(a4);
        return;
      }
      LODWORD(__p[0].__pn_.__r_.__value_.__l.__data_) = 13;
      uint64_t v23 = (void *)sub_236912F84((uint64_t)&__p[0].__pn_.__r_.__value_.__l.__size_);
      sub_236914270(v23, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/mmap.h", 62);
      sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)"(", 1);
      std::ostream::operator<<();
      sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)") [", 3);
      sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)"(p = reinterpret_cast<char*>( ::mmap(0, length, PROT_READ, MAP_SHARED, fd, 0))) != MAP_FAILED", 93);
      sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)"] ", 2);
      sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)"mmap() failed: ", 15);
      uint64_t v12 = *(unsigned __int8 *)(a2 + 23);
      if ((v12 & 0x80u) == 0) {
        size_t v13 = (unsigned char *)a2;
      }
      else {
        size_t v13 = *(unsigned char **)a2;
      }
      if ((v12 & 0x80u) != 0) {
        uint64_t v12 = *(void *)(a2 + 8);
      }
    }
    goto LABEL_66;
  }
  LODWORD(__p[0].__pn_.__r_.__value_.__l.__data_) = 13;
  sub_236912F84((uint64_t)&__p[0].__pn_.__r_.__value_.__l.__size_);
  sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/mmap.h", 62);
  sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)"(", 1);
  std::ostream::operator<<();
  sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)") [", 3);
  sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)"fd >= 0", 7);
  sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)"] ", 2);
  sub_236914270(&__p[0].__pn_.__r_.__value_.__l.__size_, (uint64_t)"open failed: ", 13);
  uint64_t v24 = *(unsigned __int8 *)(a2 + 23);
  if ((v24 & 0x80u) == 0) {
    unint64_t v25 = (unsigned char *)a2;
  }
  else {
    unint64_t v25 = *(unsigned char **)a2;
  }
  if ((v24 & 0x80u) != 0) {
    uint64_t v24 = *(void *)(a2 + 8);
  }
  sub_23692CDD4(&__p[0].__pn_.__r_.__value_.__l.__size_, v25, &v25[v24], 0x22u, 0x5Cu);
  sub_2369107FC((unsigned int *)__p, (uint64_t)a4);
  __p[0].__pn_.__r_.__value_.__l.__size_ = *MEMORY[0x263F8C2C8];
  *(std::string::size_type *)((char *)&__p[0].__pn_.__r_.__value_.__r.__words[1]
                            + *(void *)(__p[0].__pn_.__r_.__value_.__l.__size_ - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  __p[0].__pn_.__r_.__value_.__r.__words[2] = MEMORY[0x263F8C318] + 16;
  if (v28 < 0) {
    operator delete(v27);
  }
LABEL_37:
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x237E07510](v29);
  if (SHIBYTE(v30.__pn_.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v30.__pn_.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v31.__pn_.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v31.__pn_.__r_.__value_.__l.__data_);
  }
}

void sub_236927BD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (*(char *)(v14 - 217) < 0) {
    operator delete(*(void **)(v14 - 240));
  }
  if (*(char *)(v14 - 193) < 0) {
    operator delete(*(void **)(v14 - 216));
  }
  _Unwind_Resume(exception_object);
}

void sub_236927C84()
{
}

void sub_236927DAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_236927DC8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 136))(&v3);
  return sub_236944CE4(&v3);
}

void sub_236927E2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_236929834((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_236927E44@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 144))(&v3);
  return sub_236944CE4(&v3);
}

void sub_236927EA8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_236927EC4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 176))(&v3);
  return sub_236944CE4(&v3);
}

void sub_236927F28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_236929C34((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_236927F40@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 184))(&v3);
  return sub_236944CE4(&v3);
}

void sub_236927FA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_236929CA8((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_236927FBC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 192))(&v3);
  return sub_236944CE4(&v3);
}

void sub_236928020(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_236929834((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_236928038@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 200))(&v3);
  return sub_236944CE4(&v3);
}

void sub_23692809C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_2369280B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 208))(&v3);
  return sub_236944CE4(&v3);
}

void sub_23692811C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_236929D54((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_236928134@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 216))(&v3);
  return sub_236944CE4(&v3);
}

void sub_236928198(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2369140AC((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_2369281B0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 152))(&v3);
  return sub_236944CE4(&v3);
}

void sub_236928214(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_236928230@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 160))(&v3);
  return sub_236944CE4(&v3);
}

void sub_236928294(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_2369282B0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 168))(&v3);
  return sub_236944CE4(&v3);
}

void sub_236928314(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

float sub_236928330(uint64_t a1)
{
  float v4 = 0.0;
  (*(void (**)(uint64_t *__return_ptr))(*(void *)a1 + 224))(&v3);
  float v1 = v4;
  sub_236944CE4(&v3);
  return v1;
}

void sub_236928394(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v10 = &unk_26E9CD668;
  uint64_t v12 = 0;
  size_t v13 = 0;
  char v11 = sub_2369367A8();
  uint64_t v8 = sub_23691A4CC(&v10);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 232))(&v9, a1, a2, a3, v8);
  sub_23695325C((uint64_t)v11, a4);
  sub_236944CE4(&v9);
  int v10 = &unk_26E9CD668;
  if (v13) {
    sub_236929DC8(v13);
  }
}

void sub_23692846C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a14) {
    sub_236929DC8(a14);
  }
  _Unwind_Resume(a1);
}

void sub_236928498(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, float a6@<S0>)
{
  uint64_t v14 = &unk_26E9CD668;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  int v15 = sub_2369367A8();
  uint64_t v12 = sub_23691A4CC(&v14);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, float))(*(void *)a1 + 248))(&v13, a1, a2, a3, a4, v12, a6);
  sub_23695325C((uint64_t)v15, a5);
  sub_236944CE4(&v13);
  uint64_t v14 = &unk_26E9CD668;
  if (v17) {
    sub_236929DC8(v17);
  }
}

void sub_236928588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a14) {
    sub_236929DC8(a14);
  }
  _Unwind_Resume(a1);
}

void sub_2369285B4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  v12[1] = 0;
  uint64_t v13 = 0;
  v12[0] = &unk_26E9CD688;
  uint64_t v10 = sub_23691A5EC((uint64_t)v12);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 240))(&v11, a1, a2, a3, a4, v10);
  sub_23691A650((uint64_t)v12, a5);
  sub_236944CE4(&v11);
  v12[0] = &unk_26E9CD688;
  if (v13) {
    sub_236929DC8(v13);
  }
}

void sub_23692868C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_236929DC8(a12);
  }
  _Unwind_Resume(a1);
}

void sub_2369286B8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>, float a8@<S0>)
{
  v18[1] = 0;
  uint64_t v19 = 0;
  v18[0] = &unk_26E9CD688;
  uint64_t v16 = sub_23691A5EC((uint64_t)v18);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, float))(*(void *)a1 + 256))(&v17, a1, a2, a3, a4, a5, a6, v16, a8);
  sub_23691A650((uint64_t)v18, a7);
  sub_236944CE4(&v17);
  v18[0] = &unk_26E9CD688;
  if (v19) {
    sub_236929DC8(v19);
  }
}

void sub_2369287C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_236929DC8(a12);
  }
  _Unwind_Resume(a1);
}

void sub_2369287EC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = &unk_26E9CD668;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v9 = sub_2369367A8();
  uint64_t v6 = sub_23691A4CC(&v8);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 264))(&v7, a1, a2, v6);
  sub_23695325C((uint64_t)v9, a3);
  sub_236944CE4(&v7);
  uint64_t v8 = &unk_26E9CD668;
  if (v11) {
    sub_236929DC8(v11);
  }
}

void sub_2369288BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a14) {
    sub_236929DC8(a14);
  }
  _Unwind_Resume(a1);
}

void sub_2369288E8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = &unk_26E9CD668;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v9 = sub_2369367A8();
  uint64_t v6 = sub_23691A4CC(&v8);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 272))(&v7, a1, a2, v6);
  sub_23695325C((uint64_t)v9, a3);
  sub_236944CE4(&v7);
  uint64_t v8 = &unk_26E9CD668;
  if (v11) {
    sub_236929DC8(v11);
  }
}

void sub_2369289B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a14) {
    sub_236929DC8(a14);
  }
  _Unwind_Resume(a1);
}

void sub_2369289E4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = &unk_26E9CD668;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v9 = sub_2369367A8();
  uint64_t v6 = sub_23691A4CC(&v8);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 280))(&v7, a1, a2, v6);
  sub_23695325C((uint64_t)v9, a3);
  sub_236944CE4(&v7);
  uint64_t v8 = &unk_26E9CD668;
  if (v11) {
    sub_236929DC8(v11);
  }
}

void sub_236928AB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a14) {
    sub_236929DC8(a14);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_236928AE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = &unk_26E9CD668;
  uint64_t v8 = sub_2369367A8();
  a4[2] = 0;
  a4[3] = 0;
  a4[1] = v8;
  uint64_t v9 = sub_23691A4CC(a4);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 232))(&v11, a1, a2, a3, v9);
  return sub_236944CE4(&v11);
}

void sub_236928B98(_Unwind_Exception *exception_object)
{
  *float v1 = v2;
  float v4 = (std::__shared_weak_count *)v1[3];
  if (v4) {
    sub_236929DC8(v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_236928BB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>, float a6@<S0>)
{
  *a5 = &unk_26E9CD668;
  uint64_t v12 = sub_2369367A8();
  a5[2] = 0;
  a5[3] = 0;
  a5[1] = v12;
  uint64_t v13 = sub_23691A4CC(a5);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, float))(*(void *)a1 + 248))(&v15, a1, a2, a3, a4, v13, a6);
  return sub_236944CE4(&v15);
}

void sub_236928C84(_Unwind_Exception *exception_object)
{
  *float v1 = v2;
  float v4 = (std::__shared_weak_count *)v1[3];
  if (v4) {
    sub_236929DC8(v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_236928CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  a5[1] = 0;
  a5[2] = 0;
  *a5 = &unk_26E9CD688;
  uint64_t v9 = sub_23691A5EC((uint64_t)a5);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 240))(&v11, a1, a2, a3, a4, v9);
  return sub_236944CE4(&v11);
}

void sub_236928D58(_Unwind_Exception *exception_object)
{
  *float v1 = v2;
  float v4 = (std::__shared_weak_count *)v1[2];
  if (v4) {
    sub_236929DC8(v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_236928D74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>, float a8@<S0>)
{
  a7[1] = 0;
  a7[2] = 0;
  *a7 = &unk_26E9CD688;
  uint64_t v15 = sub_23691A5EC((uint64_t)a7);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, float))(*(void *)a1 + 256))(&v17, a1, a2, a3, a4, a5, a6, v15, a8);
  return sub_236944CE4(&v17);
}

void sub_236928E5C(_Unwind_Exception *exception_object)
{
  *float v1 = v2;
  float v4 = (std::__shared_weak_count *)v1[2];
  if (v4) {
    sub_236929DC8(v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_236928E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = &unk_26E9CD668;
  uint64_t v6 = sub_2369367A8();
  a3[2] = 0;
  a3[3] = 0;
  a3[1] = v6;
  uint64_t v7 = sub_23691A4CC(a3);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 264))(&v9, a1, a2, v7);
  return sub_236944CE4(&v9);
}

void sub_236928F28(_Unwind_Exception *exception_object)
{
  *float v1 = v2;
  float v4 = (std::__shared_weak_count *)v1[3];
  if (v4) {
    sub_236929DC8(v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_236928F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = &unk_26E9CD668;
  uint64_t v6 = sub_2369367A8();
  a3[2] = 0;
  a3[3] = 0;
  a3[1] = v6;
  uint64_t v7 = sub_23691A4CC(a3);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 272))(&v9, a1, a2, v7);
  return sub_236944CE4(&v9);
}

void sub_236928FF4(_Unwind_Exception *exception_object)
{
  *float v1 = v2;
  float v4 = (std::__shared_weak_count *)v1[3];
  if (v4) {
    sub_236929DC8(v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_236929010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = &unk_26E9CD668;
  uint64_t v6 = sub_2369367A8();
  a3[2] = 0;
  a3[3] = 0;
  a3[1] = v6;
  uint64_t v7 = sub_23691A4CC(a3);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 280))(&v9, a1, a2, v7);
  return sub_236944CE4(&v9);
}

void sub_2369290C0(_Unwind_Exception *exception_object)
{
  *float v1 = v2;
  float v4 = (std::__shared_weak_count *)v1[3];
  if (v4) {
    sub_236929DC8(v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2369290DC(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    sub_2369470F4((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1705);
    float v4 = sub_23694710C(v8, "CHECK failed: (index) >= (0): ");
    sub_236947248((uint64_t)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v8);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    sub_2369470F4((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1706);
    float v5 = sub_23694710C(v8, "CHECK failed: (index) < (current_size_): ");
    sub_236947248((uint64_t)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v8);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_23692919C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_2369291BC(void *a1, unint64_t a2)
{
  if (a2 >> 62) {
    sub_236913FC4();
  }
  uint64_t result = (char *)sub_236914FFC((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

uint64_t sub_236929200(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    sub_2369470F4((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1705);
    uint64_t v4 = sub_23694710C(v8, "CHECK failed: (index) >= (0): ");
    sub_236947248((uint64_t)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v8);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    sub_2369470F4((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1706);
    float v5 = sub_23694710C(v8, "CHECK failed: (index) < (current_size_): ");
    sub_236947248((uint64_t)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v8);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_2369292C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2369292E0(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x263F8C2C8];
  uint64_t v3 = *MEMORY[0x263F8C2C8];
  *(void *)a1 = *MEMORY[0x263F8C2C8];
  *(void *)(a1 + *(void *)(v3 - 24)) = *(void *)(v2 + 24);
  *(void *)(a1 + 8) = MEMORY[0x263F8C318] + 16;
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x237E07510](a1 + 112);
  return a1;
}

uint64_t sub_2369293E4(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    sub_2369470F4((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1727);
    uint64_t v4 = sub_23694710C(v8, "CHECK failed: (index) >= (0): ");
    sub_236947248((uint64_t)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v8);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    sub_2369470F4((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1728);
    float v5 = sub_23694710C(v8, "CHECK failed: (index) < (current_size_): ");
    sub_236947248((uint64_t)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v8);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_2369294A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

char **sub_2369294C4(char **a1, uint64_t a2, unint64_t a3, unsigned __int8 *a4, uint64_t a5, int a6)
{
  uint64_t v9 = 0;
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  uint64_t v10 = 0;
  if (a5)
  {
    int v11 = a6;
    if (a3)
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = (unsigned __int8 *)(a2 + a3);
      uint64_t v15 = a1 + 2;
      while (2)
      {
        uint64_t v16 = &v10[a2];
        uint64_t v17 = &v10[a2];
LABEL_5:
        uint64_t v18 = a5;
        uint64_t v19 = a4;
        while (*v17 != *v19)
        {
          ++v19;
          if (!--v18)
          {
            if (++v17 != v14) {
              goto LABEL_5;
            }
            goto LABEL_37;
          }
        }
        if (v17 != v14)
        {
          unint64_t v20 = &v17[-a2];
          if (&v17[-a2] != (unsigned __int8 *)-1)
          {
            unint64_t v21 = (unsigned __int8 *)(v20 - v10);
            BOOL v22 = v20 >= v10;
            if (!v11) {
              BOOL v22 = v20 > v10;
            }
            if (v22)
            {
              uint64_t v23 = (unsigned __int8 *)(a3 - (void)v10);
              if (v23 >= v21) {
                uint64_t v24 = v21;
              }
              else {
                uint64_t v24 = v23;
              }
              if ((unint64_t)v9 >= *v15)
              {
                uint64_t v25 = ((char *)v9 - *a1) >> 4;
                if ((unint64_t)(v25 + 1) >> 60) {
                  sub_236913FC4();
                }
                uint64_t v26 = *v15 - (void)*a1;
                uint64_t v27 = v26 >> 3;
                if (v26 >> 3 <= (unint64_t)(v25 + 1)) {
                  uint64_t v27 = v25 + 1;
                }
                if ((unint64_t)v26 >= 0x7FFFFFFFFFFFFFF0) {
                  unint64_t v28 = 0xFFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v28 = v27;
                }
                if (v28) {
                  int v29 = (char *)sub_236914EC0((uint64_t)v15, v28);
                }
                else {
                  int v29 = 0;
                }
                std::__fs::filesystem::path v30 = &v29[16 * v25];
                *(void *)std::__fs::filesystem::path v30 = v16;
                *((void *)v30 + 1) = v24;
                stat v32 = *a1;
                std::__fs::filesystem::path v31 = a1[1];
                unsigned int v33 = v30;
                if (v31 != *a1)
                {
                  do
                  {
                    *((_OWORD *)v33 - 1) = *((_OWORD *)v31 - 1);
                    v33 -= 16;
                    v31 -= 16;
                  }
                  while (v31 != v32);
                  std::__fs::filesystem::path v31 = *a1;
                }
                uint64_t v9 = (unsigned __int8 **)(v30 + 16);
                *a1 = v33;
                a1[1] = v30 + 16;
                a1[2] = &v29[16 * v28];
                if (v31) {
                  operator delete(v31);
                }
                int v11 = a6;
                uint64_t v15 = a1 + 2;
              }
              else
              {
                *uint64_t v9 = v16;
                v9[1] = v24;
                v9 += 2;
              }
              a1[1] = (char *)v9;
            }
            uint64_t v10 = v20 + 1;
            if (a3 > (unint64_t)(v20 + 1)) {
              continue;
            }
          }
        }
        break;
      }
    }
  }
LABEL_37:
  BOOL v34 = a3 > (unint64_t)v10;
  unint64_t v35 = a3 - (void)v10;
  if (v34)
  {
    uint64_t v36 = &v10[a2];
    unint64_t v37 = (unint64_t)a1[2];
    if ((unint64_t)v9 >= v37)
    {
      uint64_t v39 = ((char *)v9 - *a1) >> 4;
      if ((unint64_t)(v39 + 1) >> 60) {
        sub_236913FC4();
      }
      uint64_t v40 = v37 - (void)*a1;
      uint64_t v41 = v40 >> 3;
      if (v40 >> 3 <= (unint64_t)(v39 + 1)) {
        uint64_t v41 = v39 + 1;
      }
      if ((unint64_t)v40 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v42 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v42 = v41;
      }
      if (v42) {
        BOOL v43 = (char *)sub_236914EC0((uint64_t)(a1 + 2), v42);
      }
      else {
        BOOL v43 = 0;
      }
      uint64_t v44 = &v43[16 * v39];
      uint64_t v45 = &v43[16 * v42];
      *(void *)uint64_t v44 = v36;
      *((void *)v44 + 1) = v35;
      uint64_t v38 = v44 + 16;
      size_t v47 = *a1;
      uint64_t v46 = a1[1];
      if (v46 != *a1)
      {
        do
        {
          *((_OWORD *)v44 - 1) = *((_OWORD *)v46 - 1);
          v44 -= 16;
          v46 -= 16;
        }
        while (v46 != v47);
        uint64_t v46 = *a1;
      }
      *a1 = v44;
      a1[1] = v38;
      a1[2] = v45;
      if (v46) {
        operator delete(v46);
      }
    }
    else
    {
      *uint64_t v9 = v36;
      v9[1] = (unsigned __int8 *)v35;
      uint64_t v38 = (char *)(v9 + 2);
    }
    a1[1] = v38;
  }
  return a1;
}

void sub_23692976C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_236929790(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_236913F70(a1, a2);
    uint64_t v4 = (char *)a1[1];
    size_t v5 = 24 * ((24 * a2 - 24) / 0x18) + 24;
    bzero(v4, v5);
    a1[1] = &v4[v5];
  }
  return a1;
}

void sub_236929820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void sub_236929834(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_236929888((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_236929888(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 24)
  {
    if (*(char *)(i - 1) < 0) {
      operator delete(*(void **)(i - 24));
    }
  }
  a1[1] = v2;
}

void *sub_2369298D8(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_236917DE4(a1, a2);
    uint64_t v4 = (char *)a1[1];
    bzero(v4, 16 * a2);
    a1[1] = &v4[16 * a2];
  }
  return a1;
}

void sub_236929934(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_236929950(void *__src@<X0>, size_t __len@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  sub_236919A94(&__dst, __src, __len);
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  while (v6 != v7)
  {
    if (*(char *)(a4 + 23) < 0)
    {
      **(unsigned char **)a4 = 0;
      *(void *)(a4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)a4 = 0;
      *(unsigned char *)(a4 + 23) = 0;
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_dst = &__dst;
    }
    else {
      p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __dst.__r_.__value_.__l.__size_;
    }
    uint64_t v10 = *(char **)v6;
    int64_t v11 = *(void *)(v6 + 8);
    uint64_t v12 = *(const std::string::value_type **)(v6 + 16);
    std::string::size_type v13 = *(void *)(v6 + 24);
    uint64_t v18 = p_dst;
    std::string::size_type v19 = size;
    if (v11)
    {
      uint64_t v14 = sub_236929AE8((uint64_t *)&v18, v10, v11, 0);
      if (v14 == -1)
      {
        uint64_t v16 = 0;
      }
      else
      {
        uint64_t v15 = v14;
        uint64_t v16 = 0;
        do
        {
          std::string::append((std::string *)a4, (const std::string::value_type *)v18 + v16, v15 - v16);
          std::string::append((std::string *)a4, v12, v13);
          uint64_t v16 = v15 + v11;
          uint64_t v15 = sub_236929AE8((uint64_t *)&v18, v10, v11, v15 + v11);
        }
        while (v15 != -1);
      }
      p_dst = (std::string *)((char *)v18 + v16);
      std::string::size_type size = v19 - v16;
    }
    std::string::append((std::string *)a4, (const std::string::value_type *)p_dst, size);
    std::string::operator=(&__dst, (const std::string *)a4);
    v6 += 32;
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
}

void sub_236929AB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (*(char *)(v15 + 23) < 0) {
    operator delete(*(void **)v15);
  }
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_236929AE8(uint64_t *a1, char *a2, int64_t a3, unint64_t a4)
{
  unint64_t v4 = a1[1];
  if (v4 < a4) {
    return -1;
  }
  if (a3)
  {
    uint64_t v6 = *a1;
    uint64_t v7 = (void *)(*a1 + a4);
    uint64_t v8 = (char *)(v6 + v4);
    uint64_t v9 = v6 + v4 - (void)v7;
    if (v9 >= a3)
    {
      int v13 = *a2;
      do
      {
        uint64_t v14 = v9 - a3;
        if (v14 == -1) {
          break;
        }
        uint64_t v15 = (char *)memchr(v7, v13, v14 + 1);
        if (!v15) {
          break;
        }
        uint64_t v10 = v15;
        if (!memcmp(v15, a2, a3)) {
          goto LABEL_6;
        }
        uint64_t v7 = v10 + 1;
        uint64_t v9 = v8 - (v10 + 1);
      }
      while (v9 >= a3);
    }
    uint64_t v10 = v8;
LABEL_6:
    if (v10 == v8) {
      return -1;
    }
    else {
      return (uint64_t)&v10[-v6];
    }
  }
  return a4;
}

void sub_236929BA4(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_236929C00(exception, a1);
  __cxa_throw(exception, (struct type_info *)off_264CB3EA0, MEMORY[0x263F8C068]);
}

void sub_236929BEC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_236929C00(std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C390] + 16);
  return result;
}

void sub_236929C34(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void **)**a1;
  if (v2)
  {
    unint64_t v4 = (void **)v1[1];
    size_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 3;
        uint64_t v6 = v4;
        sub_236929834(&v6);
      }
      while (v4 != v2);
      size_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_236929CA8(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_236929CFC((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_236929CFC(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if (v2 != *a1)
  {
    uint64_t v4 = a1[1];
    do
    {
      uint64_t v6 = *(void **)(v4 - 24);
      v4 -= 24;
      size_t v5 = v6;
      if (v6)
      {
        *(void *)(v2 - 16) = v5;
        operator delete(v5);
      }
      uint64_t v2 = v4;
    }
    while (v4 != v3);
  }
  a1[1] = v3;
}

void sub_236929D54(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void **)**a1;
  if (v2)
  {
    uint64_t v4 = (void **)v1[1];
    size_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 4;
        uint64_t v6 = v4;
        sub_236929834(&v6);
      }
      while (v4 != v2);
      size_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_236929DC8(std::__shared_weak_count *a1)
{
  if (!atomic_fetch_add(&a1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }
}

uint64_t sub_236929E3C(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    sub_2369470F4((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1727);
    uint64_t v4 = sub_23694710C(v8, "CHECK failed: (index) >= (0): ");
    sub_236947248((uint64_t)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v8);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    sub_2369470F4((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1728);
    size_t v5 = sub_23694710C(v8, "CHECK failed: (index) < (current_size_): ");
    sub_236947248((uint64_t)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v8);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_236929EFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_236929F1C(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_236929FA8(a1, a2);
    uint64_t v4 = (void **)a1[1];
    size_t v5 = &v4[a2];
    uint64_t v6 = 8 * a2;
    do
    {
      *v4++ = sub_2369357B4();
      v6 -= 8;
    }
    while (v6);
    a1[1] = v5;
  }
  return a1;
}

void sub_236929F80(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_236929FA8(void *a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_236913FC4();
  }
  uint64_t result = (char *)sub_2369147B8((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

void *sub_236929FEC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = operator new(0x70uLL);
  uint64_t result = sub_23692A038(v2);
  *a1 = v2 + 3;
  a1[1] = v2;
  return result;
}

void sub_23692A024(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_23692A038(void *a1)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_26E9CD958;
  sub_236936644(a1 + 3, 0);
  return a1;
}

void sub_23692A084(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_23692A098(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26E9CD958;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_23692A0B8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26E9CD958;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x237E07580);
}

uint64_t sub_23692A10C(uint64_t a1)
{
  return sub_23693676C(a1 + 24);
}

void *sub_23692A118@<X0>(void *a1@<X8>)
{
  uint64_t v2 = operator new(0x48uLL);
  uint64_t result = sub_23692A164(v2);
  *a1 = v2 + 3;
  a1[1] = v2;
  return result;
}

void sub_23692A150(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_23692A164(void *a1)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_26E9CD9A8;
  sub_236937200(a1 + 3, 0);
  return a1;
}

void sub_23692A1B0(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_23692A1C4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26E9CD9A8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_23692A1E4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26E9CD9A8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x237E07580);
}

uint64_t sub_23692A238(uint64_t a1)
{
  return sub_2369372BC(a1 + 24);
}

uint64_t sub_23692A244(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_23693F2FC();
    JUMPOUT(0x237E07580);
  }
  return result;
}

void sub_23692A294(void *__src@<X0>, size_t __len@<X1>, void **a3@<X2>, char *a4@<X3>, void **a5@<X4>, std::string *a6@<X8>)
{
  sub_236919A94(&__dst, __src, __len);
  int v10 = *((char *)a3 + 23);
  if (v10 >= 0) {
    int64_t v11 = a3;
  }
  else {
    int64_t v11 = *a3;
  }
  if (v10 >= 0) {
    size_t v12 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    size_t v12 = (size_t)a3[1];
  }
  sub_23692A398(v11, v12, a4, a5, &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  uint64_t v15 = std::string::append(&__dst, (const std::string::value_type *)p_p, size);
  *a6 = *v15;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
}

void sub_23692A364(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void sub_23692A398(void *__src@<X0>, size_t __len@<X1>, char *a3@<X2>, void **a4@<X3>, std::string *a5@<X8>)
{
  sub_236919A94(&__dst, __src, __len);
  size_t v8 = strlen(a3);
  sub_23692A48C(a3, v8, a4, &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  int64_t v11 = std::string::append(&__dst, (const std::string::value_type *)p_p, size);
  *a5 = *v11;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
}

void sub_23692A458(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void sub_23692A48C(void *__src@<X0>, size_t __len@<X1>, void **a3@<X2>, std::string *a4@<X8>)
{
  sub_236919A94(&__dst, __src, __len);
  int v6 = *((char *)a3 + 23);
  if (v6 >= 0) {
    char v7 = a3;
  }
  else {
    char v7 = *a3;
  }
  if (v6 >= 0) {
    size_t v8 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    size_t v8 = (size_t)a3[1];
  }
  sub_236919A94(__p, v7, v8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v9 = __p;
  }
  else {
    uint64_t v9 = (void **)__p[0];
  }
  if ((v13 & 0x80u) == 0) {
    std::string::size_type v10 = v13;
  }
  else {
    std::string::size_type v10 = (std::string::size_type)__p[1];
  }
  int64_t v11 = std::string::append(&__dst, (const std::string::value_type *)v9, v10);
  *a4 = *v11;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if ((char)v13 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
}

void sub_23692A544(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23692A578(uint64_t *a1, void *a2)
{
  uint64_t result = sub_23692A5F0((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_23692A5F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  void v12[2] = &v15;
  if (a3 != a5)
  {
    uint64_t v9 = a7;
    do
    {
      long long v10 = *(_OWORD *)(a3 - 24);
      *(void *)(v9 - 8) = *(void *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v10;
      v9 -= 24;
      *(void *)(a3 - 16) = 0;
      *(void *)(a3 - 8) = 0;
      *(void *)(a3 - 24) = 0;
      v7 -= 24;
      a3 -= 24;
    }
    while (a3 != a5);
    *((void *)&v15 + 1) = v9;
  }
  char v13 = 1;
  sub_23692A690((uint64_t)v12);
  return a6;
}

uint64_t sub_23692A690(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_23692A6C8(a1);
  }
  return a1;
}

void sub_23692A6C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    v1 += 24;
  }
}

uint64_t sub_23692A710(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_23692A748(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      uint64_t v5 = v2 - 3;
      *(void *)(a1 + 16) = v2 - 3;
      if (*((char *)v2 - 1) < 0)
      {
        operator delete(*v5);
        uint64_t v5 = *(void ***)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != a2);
  }
}

uint64_t sub_23692A7A0(uint64_t a1, _OWORD *a2, _OWORD *a3)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_23692A824((uint64_t **)a1, v4, (uint64_t)v6, v6);
      ++v6;
    }
    while (v6 != a3);
  }
  return a1;
}

void sub_23692A80C(_Unwind_Exception *a1)
{
  sub_236914648(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_23692A824(uint64_t **a1, void *a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v6 = sub_23692A8AC(a1, a2, &v11, &v10, a3);
  uint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    uint64_t v8 = (uint64_t **)v6;
    uint64_t v7 = (uint64_t *)operator new(0x30uLL);
    *((_OWORD *)v7 + 2) = *a4;
    sub_236914A80(a1, v11, v8, v7);
  }
  return v7;
}

uint64_t *sub_23692A8AC(void *a1, void *a2, void *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v9 = a1 + 1;
  if (a1 + 1 != a2 && !sub_236914AD8((uint64_t)(a1 + 2), a5, (uint64_t)(a2 + 4)))
  {
    if (!sub_236914AD8((uint64_t)(a1 + 2), (uint64_t)(a2 + 4), a5))
    {
      *a3 = a2;
      *a4 = (uint64_t)a2;
      return a4;
    }
    a4 = a2 + 1;
    uint64_t v13 = a2[1];
    if (v13)
    {
      long long v14 = (void *)a2[1];
      do
      {
        long long v15 = v14;
        long long v14 = (void *)*v14;
      }
      while (v14);
    }
    else
    {
      uint64_t v18 = a2;
      do
      {
        long long v15 = (void *)v18[2];
        BOOL v17 = *v15 == (void)v18;
        uint64_t v18 = v15;
      }
      while (!v17);
    }
    if (v15 != v9)
    {
      if (!sub_236914AD8((uint64_t)(a1 + 2), a5, (uint64_t)(v15 + 4))) {
        goto LABEL_28;
      }
      uint64_t v13 = *a4;
    }
    if (v13)
    {
      *a3 = v15;
      return v15;
    }
    else
    {
      *a3 = a2;
    }
    return a4;
  }
  if ((void *)*a1 == a2)
  {
    size_t v12 = a2;
LABEL_16:
    if (*a2)
    {
      *a3 = v12;
      return v12 + 1;
    }
    else
    {
      *a3 = a2;
      return a2;
    }
  }
  uint64_t v11 = (void *)*a2;
  if (*a2)
  {
    do
    {
      size_t v12 = v11;
      uint64_t v11 = (void *)v11[1];
    }
    while (v11);
  }
  else
  {
    uint64_t v16 = a2;
    do
    {
      size_t v12 = (void *)v16[2];
      BOOL v17 = *v12 == (void)v16;
      uint64_t v16 = v12;
    }
    while (v17);
  }
  if (sub_236914AD8((uint64_t)(a1 + 2), (uint64_t)(v12 + 4), a5)) {
    goto LABEL_16;
  }
LABEL_28:
  return sub_2369149E0((uint64_t)a1, a3, a5);
}

void *sub_23692AA58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = a1 + 16;
  uint64_t v6 = (void *)(a1 + 8);
  do
  {
    int v7 = sub_236914AD8(v5, (uint64_t)(v3 + 4), a2);
    uint64_t v8 = v3 + 1;
    if (!v7)
    {
      uint64_t v8 = v3;
      uint64_t v6 = v3;
    }
    uint64_t v3 = (void *)*v8;
  }
  while (*v8);
  if (v6 == v2 || sub_236914AD8(v5, a2, (uint64_t)(v6 + 4))) {
    return v2;
  }
  return v6;
}

uint64_t sub_23692AAE8(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x263F8C328] + 104;
  *(void *)(a1 + 128) = MEMORY[0x263F8C328] + 104;
  uint64_t v3 = a1 + 16;
  uint64_t v4 = MEMORY[0x263F8C328] + 64;
  *(void *)(a1 + 16) = MEMORY[0x263F8C328] + 64;
  uint64_t v5 = (void *)MEMORY[0x263F8C2B8];
  uint64_t v6 = *(void *)(MEMORY[0x263F8C2B8] + 24);
  uint64_t v7 = *(void *)(MEMORY[0x263F8C2B8] + 16);
  *(void *)a1 = v7;
  *(void *)(a1 + *(void *)(v7 - 24)) = v6;
  *(void *)(a1 + 8) = 0;
  uint64_t v8 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24));
  std::ios_base::init(v8, (void *)(a1 + 24));
  uint64_t v9 = MEMORY[0x263F8C328] + 24;
  v8[1].__vftable = 0;
  v8[1].__fmtflags_ = -1;
  uint64_t v10 = v5[5];
  uint64_t v11 = v5[4];
  *(void *)(a1 + 16) = v11;
  *(void *)(v3 + *(void *)(v11 - 24)) = v10;
  uint64_t v12 = v5[1];
  *(void *)a1 = v12;
  *(void *)(a1 + *(void *)(v12 - 24)) = v5[6];
  *(void *)a1 = v9;
  *(void *)(a1 + 128) = v2;
  *(void *)(a1 + 16) = v4;
  std::streambuf::basic_streambuf();
  *(void *)(a1 + 24) = MEMORY[0x263F8C318] + 16;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_DWORD *)(a1 + 12sub_23692A244(&a9, 0) = 24;
  return a1;
}

void sub_23692AD98(_Unwind_Exception *a1)
{
  std::iostream::~basic_iostream();
  MEMORY[0x237E07510](v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23692ADC0(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x263F8C2B8];
  uint64_t v3 = *MEMORY[0x263F8C2B8];
  *(void *)a1 = *MEMORY[0x263F8C2B8];
  uint64_t v4 = *(void *)(v2 + 72);
  *(void *)(a1 + *(void *)(v3 - 24)) = *(void *)(v2 + 64);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = MEMORY[0x263F8C318] + 16;
  if (*(char *)(a1 + 111) < 0) {
    operator delete(*(void **)(a1 + 88));
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x237E07510](a1 + 128);
  return a1;
}

void *sub_23692AEF8(void *result, long long *a2)
{
  uint64_t v2 = result;
  uint64_t v3 = result[1];
  if (*((char *)a2 + 23) < 0)
  {
    uint64_t result = sub_23692B07C((unsigned char *)result[1], *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *(void *)(v3 + 16) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v3 = v4;
  }
  v2[1] = v3 + 24;
  return result;
}

void sub_23692AF50(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_23692AF58(uint64_t *a1, long long *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_236913FC4();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  uint64_t v18 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_236913FDC(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = &v10[24 * v4];
  v15[0] = v10;
  v15[1] = v11;
  uint64_t v16 = v11;
  BOOL v17 = &v10[24 * v9];
  if (*((char *)a2 + 23) < 0)
  {
    sub_23692B07C(v11, *(void **)a2, *((void *)a2 + 1));
    uint64_t v11 = v16;
  }
  else
  {
    long long v12 = *a2;
    *((void *)v11 + 2) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v11 = v12;
  }
  uint64_t v16 = v11 + 24;
  sub_23692A578(a1, v15);
  uint64_t v13 = a1[1];
  sub_23692A710((uint64_t)v15);
  return v13;
}

void sub_23692B068(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_23692A710((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_23692B07C(unsigned char *__dst, void *__src, unint64_t a3)
{
  unint64_t v5 = __dst;
  if (a3 > 0x16)
  {
    if (a3 >= 0x7FFFFFFFFFFFFFF8) {
      sub_236914158();
    }
    uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a3 | 7) != 0x17) {
      uint64_t v6 = a3 | 7;
    }
    uint64_t v7 = v6 + 1;
    unint64_t v8 = operator new(v6 + 1);
    v5[1] = a3;
    v5[2] = v7 | 0x8000000000000000;
    *unint64_t v5 = v8;
    unint64_t v5 = v8;
  }
  else
  {
    __dst[23] = a3;
  }
  return memmove(v5, __src, a3 + 1);
}

char *sub_23692B11C(uint64_t a1, long long **a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  *(void *)uint64_t v3 = 0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 16) = 0;
  uint64_t result = sub_23692B2A0((char *)v3, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a2[1] - (char *)*a2) >> 3));
  *(void *)(a1 + 8) = v3 + 24;
  return result;
}

void sub_23692B174(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_23692B17C(uint64_t *a1, long long **a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_236913FC4();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  BOOL v17 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_236913FDC(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = &v10[24 * v4];
  v14[0] = v10;
  v14[1] = v11;
  long long v15 = v11;
  uint64_t v16 = &v10[24 * v9];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  *((void *)v11 + 2) = 0;
  sub_23692B2A0(v11, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a2[1] - (char *)*a2) >> 3));
  v15 += 24;
  sub_23692B468(a1, v14);
  uint64_t v12 = a1[1];
  sub_23692B608(v14);
  return v12;
}

void sub_23692B28C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_23692B608((void **)va);
  _Unwind_Resume(a1);
}

char *sub_23692B2A0(char *result, long long *a2, long long *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    sub_236913F70(result, a4);
    uint64_t result = sub_23692B328((uint64_t)(v6 + 16), a2, a3, *((char **)v6 + 1));
    *((void *)v6 + 1) = result;
  }
  return result;
}

void sub_23692B308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_236929834(&a9);
  _Unwind_Resume(a1);
}

char *sub_23692B328(uint64_t a1, long long *a2, long long *a3, char *__dst)
{
  unint64_t v4 = __dst;
  uint64_t v11 = __dst;
  uint64_t v12 = __dst;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        sub_23692B07C(v4, *(void **)v6, *((void *)v6 + 1));
        unint64_t v4 = v12;
      }
      else
      {
        long long v7 = *v6;
        *((void *)v4 + 2) = *((void *)v6 + 2);
        *(_OWORD *)unint64_t v4 = v7;
      }
      uint64_t v6 = (long long *)((char *)v6 + 24);
      v4 += 24;
      uint64_t v12 = v4;
    }
    while (v6 != a3);
  }
  char v10 = 1;
  sub_23692B3E8((uint64_t)v9);
  return v4;
}

void sub_23692B3D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_23692B3E8(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_23692B420(a1);
  }
  return a1;
}

void sub_23692B420(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 - 1) < 0) {
      operator delete(*(void **)(v1 - 24));
    }
    v1 -= 24;
  }
}

uint64_t sub_23692B468(uint64_t *a1, void *a2)
{
  uint64_t result = sub_23692B4E0((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_23692B4E0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  void v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      *(void *)(v7 - 8) = 0;
      long long v8 = *(_OWORD *)(a3 - 3);
      a3 -= 3;
      *(_OWORD *)(v7 - 24) = v8;
      *(void *)(v7 - 8) = a3[2];
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      uint64_t v7 = *((void *)&v14 + 1) - 24;
      *((void *)&v14 + 1) -= 24;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  sub_23692B584((uint64_t)v11);
  return v9;
}

uint64_t sub_23692B584(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_23692B5BC(a1);
  }
  return a1;
}

void sub_23692B5BC(uint64_t a1)
{
  uint64_t v1 = *(void ***)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void ***)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = v1;
    sub_236929834(&v3);
    v1 += 3;
  }
}

void **sub_23692B608(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_23692B63C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v2; uint64_t i = *(void *)(a1 + 16))
  {
    unint64_t v4 = (void **)(i - 24);
    *(void *)(a1 + 16) = v4;
    uint64_t v5 = v4;
    sub_236929834(&v5);
  }
}

void *sub_23692B690(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a1 + 8);
  *uint64_t v3 = 0;
  v3[1] = 0;
  v3[2] = 0;
  uint64_t result = sub_23692B7FC(v3, *(const void **)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 2);
  *(void *)(a1 + 8) = v3 + 3;
  return result;
}

void sub_23692B6DC(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_23692B6E4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_236913FC4();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  BOOL v17 = a1 + 2;
  if (v9) {
    char v10 = (char *)sub_236913FDC(v7, v9);
  }
  else {
    char v10 = 0;
  }
  uint64_t v11 = &v10[24 * v4];
  v14[0] = v10;
  v14[1] = v11;
  long long v15 = v11;
  uint64_t v16 = &v10[24 * v9];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  *((void *)v11 + 2) = 0;
  sub_23692B7FC(v11, *(const void **)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 2);
  v15 += 24;
  sub_23692B878(a1, v14);
  uint64_t v12 = a1[1];
  sub_23692BA14((uint64_t)v14);
  return v12;
}

void sub_23692B7E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_23692BA14((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_23692B7FC(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = sub_2369291BC(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_23692B85C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23692B878(uint64_t *a1, void *a2)
{
  uint64_t result = sub_23692B8F0((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_23692B8F0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  void v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      *(void *)(v7 - 8) = 0;
      long long v8 = *(_OWORD *)(a3 - 3);
      a3 -= 3;
      *(_OWORD *)(v7 - 24) = v8;
      *(void *)(v7 - 8) = a3[2];
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      uint64_t v7 = *((void *)&v14 + 1) - 24;
      *((void *)&v14 + 1) -= 24;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  sub_23692B994((uint64_t)v11);
  return v9;
}

uint64_t sub_23692B994(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_23692B9CC(a1);
  }
  return a1;
}

void sub_23692B9CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = *(void **)v1;
    if (*(void *)v1)
    {
      *(void *)(v1 + 8) = v3;
      operator delete(v3);
    }
    v1 += 24;
  }
}

uint64_t sub_23692BA14(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_23692BA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != a2)
  {
    uint64_t v5 = *(void **)(v2 - 24);
    *(void *)(a1 + 16) = v2 - 24;
    if (v5)
    {
      *(void *)(v2 - 16) = v5;
      operator delete(v5);
      uint64_t v2 = *(void *)(a1 + 16);
    }
    else
    {
      v2 -= 24;
    }
  }
}

uint64_t sub_23692BAA8(uint64_t *a1, void *a2)
{
  uint64_t result = sub_23692BB58((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_23692BB20(uint64_t a1, unint64_t a2)
{
  if (a2 >> 59) {
    sub_236913AB8();
  }
  return operator new(32 * a2);
}

uint64_t sub_23692BB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  void v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 32) = 0;
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      long long v8 = *(_OWORD *)(a3 - 32);
      a3 -= 32;
      *(_OWORD *)(v7 - 32) = v8;
      *(void *)(v7 - 16) = *(void *)(a3 + 16);
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)a3 = 0;
      *(_DWORD *)(v7 - 8) = *(_DWORD *)(a3 + 24);
      uint64_t v7 = *((void *)&v14 + 1) - 32;
      *((void *)&v14 + 1) -= 32;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  sub_23692BC04((uint64_t)v11);
  return v9;
}

uint64_t sub_23692BC04(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_23692BC3C(a1);
  }
  return a1;
}

void sub_23692BC3C(uint64_t a1)
{
  uint64_t v1 = *(void ***)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void ***)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = v1;
    sub_236929834(&v3);
    v1 += 4;
  }
}

void **sub_23692BC88(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_23692BCBC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v2; uint64_t i = *(void *)(a1 + 16))
  {
    unint64_t v4 = (void **)(i - 32);
    *(void *)(a1 + 16) = v4;
    uint64_t v5 = v4;
    sub_236929834(&v5);
  }
}

float sub_23692BD10(uint64_t a1, long long **a2, float *a3)
{
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)uint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  *(void *)(v5 + 16) = 0;
  sub_23692B2A0((char *)v5, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a2[1] - (char *)*a2) >> 3));
  float result = *a3;
  *(float *)(v5 + 24) = *a3;
  *(void *)(a1 + 8) = v5 + 32;
  return result;
}

void sub_23692BD7C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_23692BD84(uint64_t *a1, long long **a2, _DWORD *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (a1[1] - *a1) >> 5;
  unint64_t v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) >> 59) {
    sub_236913FC4();
  }
  uint64_t v9 = (uint64_t)(a1 + 2);
  uint64_t v10 = a1[2] - v4;
  if (v10 >> 4 > v6) {
    unint64_t v6 = v10 >> 4;
  }
  if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFE0) {
    unint64_t v11 = 0x7FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v11 = v6;
  }
  std::string::size_type v19 = a1 + 2;
  if (v11) {
    char v12 = (char *)sub_23692BB20(v9, v11);
  }
  else {
    char v12 = 0;
  }
  long long v13 = &v12[32 * v5];
  v16[0] = v12;
  v16[1] = v13;
  BOOL v17 = v13;
  uint64_t v18 = &v12[32 * v11];
  *(void *)long long v13 = 0;
  *((void *)v13 + 1) = 0;
  *((void *)v13 + 2) = 0;
  sub_23692B2A0(v13, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a2[1] - (char *)*a2) >> 3));
  *((_DWORD *)v13 + 6) = *a3;
  v17 += 32;
  sub_23692BAA8(a1, v16);
  uint64_t v14 = a1[1];
  sub_23692BC88(v16);
  return v14;
}

void sub_23692BE80(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_23692BC88((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23692BE94(uint64_t *a1, void *a2)
{
  uint64_t result = sub_23692BF0C((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_23692BF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  void v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 32) = 0;
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      long long v8 = *(_OWORD *)(a3 - 32);
      a3 -= 32;
      *(_OWORD *)(v7 - 32) = v8;
      *(void *)(v7 - 16) = *(void *)(a3 + 16);
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)a3 = 0;
      *(_DWORD *)(v7 - 8) = *(_DWORD *)(a3 + 24);
      uint64_t v7 = *((void *)&v14 + 1) - 32;
      *((void *)&v14 + 1) -= 32;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  sub_23692BFB8((uint64_t)v11);
  return v9;
}

uint64_t sub_23692BFB8(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_23692BFF0(a1);
  }
  return a1;
}

void sub_23692BFF0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = *(void **)v1;
    if (*(void *)v1)
    {
      *(void *)(v1 + 8) = v3;
      operator delete(v3);
    }
    v1 += 32;
  }
}

uint64_t sub_23692C038(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_23692C070(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != a2)
  {
    uint64_t v5 = *(void **)(v2 - 32);
    *(void *)(a1 + 16) = v2 - 32;
    if (v5)
    {
      *(void *)(v2 - 24) = v5;
      operator delete(v5);
      uint64_t v2 = *(void *)(a1 + 16);
    }
    else
    {
      v2 -= 32;
    }
  }
}

float sub_23692C0CC(uint64_t a1, uint64_t a2, float *a3)
{
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)uint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  *(void *)(v5 + 16) = 0;
  sub_23692B7FC((void *)v5, *(const void **)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 2);
  float result = *a3;
  *(float *)(v5 + 24) = *a3;
  *(void *)(a1 + 8) = v5 + 32;
  return result;
}

void sub_23692C12C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_23692C134(uint64_t *a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (a1[1] - *a1) >> 5;
  unint64_t v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) >> 59) {
    sub_236913FC4();
  }
  uint64_t v9 = (uint64_t)(a1 + 2);
  uint64_t v10 = a1[2] - v4;
  if (v10 >> 4 > v6) {
    unint64_t v6 = v10 >> 4;
  }
  if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFE0) {
    unint64_t v11 = 0x7FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v11 = v6;
  }
  std::string::size_type v19 = a1 + 2;
  if (v11) {
    char v12 = (char *)sub_23692BB20(v9, v11);
  }
  else {
    char v12 = 0;
  }
  long long v13 = &v12[32 * v5];
  v16[0] = v12;
  v16[1] = v13;
  BOOL v17 = v13;
  uint64_t v18 = &v12[32 * v11];
  *(void *)long long v13 = 0;
  *((void *)v13 + 1) = 0;
  *((void *)v13 + 2) = 0;
  sub_23692B7FC(v13, *(const void **)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 2);
  *((_DWORD *)v13 + 6) = *a3;
  v17 += 32;
  sub_23692BE94(a1, v16);
  uint64_t v14 = a1[1];
  sub_23692C038((uint64_t)v16);
  return v14;
}

void sub_23692C224(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_23692C038((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_23692C238(void *a1, unint64_t a2, _DWORD *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_2369291BC(a1, a2);
    unint64_t v6 = (_DWORD *)a1[1];
    uint64_t v7 = &v6[a2];
    uint64_t v8 = 4 * a2;
    do
    {
      *v6++ = *a3;
      v8 -= 4;
    }
    while (v8);
    a1[1] = v7;
  }
  return a1;
}

void sub_23692C2A0(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23692C2BC(uint64_t a1, float *a2, float *a3)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  sub_23692C424((char *)a1, a2, a3, a3 - a2);
  sub_23692C318((double **)a1);
  return a1;
}

void sub_23692C2FC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_23692C318(double **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1 != v2)
  {
    if ((unint64_t)((char *)v2 - (char *)v1) < 9)
    {
      a1[1] = v1;
      sub_23692C49C((uint64_t)a1);
    }
    else
    {
      uint64_t v4 = v2 - v1;
      double v5 = 0.0;
      unint64_t v6 = *a1;
      do
      {
        double v7 = *v6++;
        double v5 = v5 + v7;
      }
      while (v6 != v2);
      while (v1 < v2)
      {
        *uint64_t v1 = *v1 / v5;
        ++v1;
      }
      sub_23692C564(&v16, v4 - 1);
      uint64_t v8 = *a1;
      uint64_t v9 = (uint64_t)(a1[1] - 1);
      uint64_t v10 = v16;
      if (*a1 != (double *)v9)
      {
        unint64_t v11 = v8 + 1;
        double v12 = *v8;
        *uint64_t v16 = *v8;
        if (v8 + 1 != (double *)v9)
        {
          long long v13 = v10 + 1;
          do
          {
            double v14 = *v11++;
            double v12 = v12 + v14;
            *v13++ = v12;
          }
          while (v11 != (double *)v9);
        }
      }
      *a1 = v10;
      long long v15 = a1[2];
      *(_OWORD *)(a1 + 1) = v17;
      uint64_t v16 = v8;
      *((void *)&v17 + 1) = v15;
      if (v8)
      {
        *(void *)&long long v17 = v8;
        operator delete(v8);
      }
    }
  }
}

char *sub_23692C424(char *result, float *a2, float *a3, unint64_t a4)
{
  if (a4)
  {
    unint64_t v6 = result;
    float result = sub_236929FA8(result, a4);
    double v7 = (double *)*((void *)v6 + 1);
    while (a2 != a3)
    {
      float v8 = *a2++;
      *v7++ = v8;
    }
    *((void *)v6 + 1) = v7;
  }
  return result;
}

void sub_23692C480(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_23692C49C(uint64_t a1)
{
  uint64_t v2 = a1 + 16;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(char **)a1;
  double v5 = *(unsigned char **)(a1 + 8);
  unint64_t v6 = (v5 - v4) >> 3;
  if (v6 >= (v3 - (uint64_t)v4) >> 3) {
    return;
  }
  if (v5 == v4)
  {
    unint64_t v11 = 0;
    uint64_t v9 = 8 * v6;
    goto LABEL_8;
  }
  double v7 = (char *)sub_2369147B8(v2, v6);
  uint64_t v4 = *(char **)a1;
  float v8 = *(char **)(a1 + 8);
  uint64_t v9 = (uint64_t)&v7[8 * v6];
  unint64_t v11 = &v7[8 * v10];
  if (v8 == *(char **)a1)
  {
LABEL_8:
    uint64_t v12 = v9;
    goto LABEL_9;
  }
  uint64_t v12 = v9;
  do
  {
    uint64_t v13 = *((void *)v8 - 1);
    v8 -= 8;
    *(void *)(v12 - 8) = v13;
    v12 -= 8;
  }
  while (v8 != v4);
LABEL_9:
  *(void *)a1 = v12;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v11;
  if (v4)
  {
    operator delete(v4);
  }
}

void *sub_23692C564(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_236929FA8(a1, a2);
    uint64_t v4 = (char *)a1[1];
    bzero(v4, 8 * a2);
    a1[1] = &v4[8 * a2];
  }
  return a1;
}

void sub_23692C5C0(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_23692C5DC(uint64_t a1, uint64_t a2, double **a3)
{
  double v5 = *a3;
  unint64_t v6 = a3[1];
  unsigned int v7 = sub_23692C694(a2);
  unsigned int v8 = sub_23692C694(a2);
  if (v6 != v5)
  {
    unint64_t v9 = v6 - v5;
    do
    {
      unint64_t v10 = v9 >> 1;
      unint64_t v11 = &v5[v9 >> 1];
      double v13 = *v11;
      uint64_t v12 = v11 + 1;
      v9 += ~(v9 >> 1);
      if (((double)v7 + (double)v8 * 4294967300.0) * 5.42101086e-20 + 0.0 < v13) {
        unint64_t v9 = v10;
      }
      else {
        double v5 = v12;
      }
    }
    while (v9);
    unint64_t v6 = v5;
  }
  return (unint64_t)((char *)v6 - (char *)*a3) >> 3;
}

uint64_t sub_23692C694(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 2496);
  unint64_t v2 = (v1 + 1) % 0x270uLL;
  unsigned int v3 = *(_DWORD *)(a1 + 4 * ((v1 + 397) % 0x270uLL)) ^ ((*(_DWORD *)(a1 + 4 * v2) & 0x7FFFFFFE | *(_DWORD *)(a1 + 4 * v1) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(a1 + 4 * v2) << 31) >> 31) & 0x9908B0DF;
  *(_DWORD *)(a1 + 4 * v1) = v3;
  *(void *)(a1 + 2496) = v2;
  LODWORD(v1) = ((v3 ^ (v3 >> 11)) << 7) & 0x9D2C5680 ^ v3 ^ (v3 >> 11);
  return (v1 << 15) & 0xEFC60000 ^ v1 ^ (((v1 << 15) & 0xEFC60000 ^ v1) >> 18);
}

uint64_t sub_23692C734()
{
  sub_236912F84((uint64_t)v1);
  std::ostream::operator<<();
  std::stringbuf::str();
  v1[0] = *MEMORY[0x263F8C2C8];
  *(void *)((char *)v1 + *(void *)(v1[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  v1[1] = MEMORY[0x263F8C318] + 16;
  if (v2 < 0) {
    operator delete((void *)v1[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x237E07510](&v3);
}

void sub_23692C868(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2369292E0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23692C87C(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_236913FC4();
  }
  if (0x5555555555555556 * ((a1[2] - *a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * ((a1[2] - *a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - *a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  double v14 = a1 + 2;
  if (v6) {
    unsigned int v7 = (char *)sub_236913FDC((uint64_t)(a1 + 2), v6);
  }
  else {
    unsigned int v7 = 0;
  }
  unint64_t v10 = v7;
  unint64_t v11 = &v7[24 * v3];
  double v13 = &v7[24 * v6];
  sub_23692C98C(a1 + 16, v11, a2);
  uint64_t v12 = v11 + 24;
  sub_23692A578(a1, &v10);
  uint64_t v8 = a1[1];
  sub_23692A710((uint64_t)&v10);
  return v8;
}

void sub_23692C978(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_23692A710((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23692C98C(int a1, unsigned char *__dst, uint64_t a3)
{
  unint64_t v3 = __dst;
  size_t v4 = *(void *)(a3 + 8);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_236914158();
  }
  double v5 = *(const void **)a3;
  if (v4 >= 0x17)
  {
    uint64_t v6 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v6 = v4 | 7;
    }
    uint64_t v7 = v6 + 1;
    uint64_t v8 = operator new(v6 + 1);
    v3[1] = v4;
    v3[2] = v7 | 0x8000000000000000;
    *unint64_t v3 = v8;
    unint64_t v3 = v8;
  }
  else
  {
    __dst[23] = v4;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v3, v5, v4);
LABEL_9:
  *((unsigned char *)v3 + v4) = 0;
}

uint64_t sub_23692CA28(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    uint64_t v2 = *(void *)(a1 + 8);
    unint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if (v2) {
      unint64_t v3 = (void *)*v3;
    }
    uint64_t v4 = *(void *)(a2 + 8);
    double v5 = (void *)(v4 & 0xFFFFFFFFFFFFFFFELL);
    if (v4) {
      double v5 = (void *)*v5;
    }
    if (v3 == v5) {
      return (uint64_t)sub_236936388(a1, a2);
    }
    else {
      return sub_236952794(a1, a2);
    }
  }
  return a1;
}

uint64_t sub_23692CA6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 24 * a3;
    do
    {
      sub_23692CAF0((uint64_t **)a1, v4, a2, a2);
      a2 += 24;
      v6 -= 24;
    }
    while (v6);
  }
  return a1;
}

void sub_23692CAD8(_Unwind_Exception *a1)
{
  sub_236914648(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

_OWORD *sub_23692CAF0(uint64_t **a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_23692A8AC(a1, a2, &v11, &v10, a3);
  uint64_t v7 = (_OWORD *)*v6;
  if (!*v6)
  {
    uint64_t v8 = (uint64_t **)v6;
    uint64_t v7 = operator new(0x38uLL);
    v7[2] = *(_OWORD *)a4;
    *((void *)v7 + 6) = *(void *)(a4 + 16);
    sub_236914A80(a1, v11, v8, (uint64_t *)v7);
  }
  return v7;
}

void sub_23692CB84(void *a1)
{
  sub_23692CBBC(a1);
  JUMPOUT(0x237E07580);
}

void *sub_23692CBBC(void *a1)
{
  *a1 = &unk_26E9CD9F8;
  sub_23692CC04((uint64_t)a1);
  return a1;
}

void *sub_23692CC04(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 24);
  if ((v2 & 0x80000000) == 0)
  {
    close(v2);
    *(_DWORD *)(a1 + 24) = -1;
  }
  float result = *(void **)(a1 + 8);
  if (result) {
    float result = (void *)munmap(result, *(void *)(a1 + 16));
  }
  *(void *)(a1 + 8) = 0;
  return result;
}

double sub_23692CC4C@<D0>(const std::__fs::filesystem::path *a1@<X0>, uint64_t a2@<X8>)
{
  std::__fs::filesystem::path::__string_view v3 = std::__fs::filesystem::path::__parent_path(a1);
  if (v3.__size_ >= 0x7FFFFFFFFFFFFFF8) {
    sub_236914158();
  }
  if (v3.__size_ >= 0x17)
  {
    std::basic_string_view<_CharT, _Traits>::size_type v5 = (v3.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v3.__size_ | 7) != 0x17) {
      std::basic_string_view<_CharT, _Traits>::size_type v5 = v3.__size_ | 7;
    }
    std::basic_string_view<_CharT, _Traits>::size_type v6 = v5 + 1;
    p_dst = (long long *)operator new(v5 + 1);
    *((void *)&__dst + 1) = v3.__size_;
    unint64_t v9 = v6 | 0x8000000000000000;
    *(void *)&long long __dst = p_dst;
  }
  else
  {
    HIBYTE(v9) = v3.__size_;
    p_dst = &__dst;
    if (!v3.__size_) {
      goto LABEL_9;
    }
  }
  memmove(p_dst, v3.__data_, v3.__size_);
LABEL_9:
  *((unsigned char *)p_dst + v3.__size_) = 0;
  double result = *(double *)&__dst;
  *(_OWORD *)a2 = __dst;
  *(void *)(a2 + 16) = v9;
  return result;
}

double sub_23692CD10@<D0>(const std::__fs::filesystem::path *a1@<X0>, uint64_t a2@<X8>)
{
  std::__fs::filesystem::path::__string_view v3 = std::__fs::filesystem::path::__filename(a1);
  if (v3.__size_ >= 0x7FFFFFFFFFFFFFF8) {
    sub_236914158();
  }
  if (v3.__size_ >= 0x17)
  {
    std::basic_string_view<_CharT, _Traits>::size_type v5 = (v3.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v3.__size_ | 7) != 0x17) {
      std::basic_string_view<_CharT, _Traits>::size_type v5 = v3.__size_ | 7;
    }
    std::basic_string_view<_CharT, _Traits>::size_type v6 = v5 + 1;
    p_dst = (long long *)operator new(v5 + 1);
    *((void *)&__dst + 1) = v3.__size_;
    unint64_t v9 = v6 | 0x8000000000000000;
    *(void *)&long long __dst = p_dst;
  }
  else
  {
    HIBYTE(v9) = v3.__size_;
    p_dst = &__dst;
    if (!v3.__size_) {
      goto LABEL_9;
    }
  }
  memmove(p_dst, v3.__data_, v3.__size_);
LABEL_9:
  *((unsigned char *)p_dst + v3.__size_) = 0;
  double result = *(double *)&__dst;
  *(_OWORD *)a2 = __dst;
  *(void *)(a2 + 16) = v9;
  return result;
}

void *sub_23692CDD4(void *a1, unsigned char *a2, unsigned char *a3, unsigned __int8 __c, unsigned __int8 a5)
{
  memset(&v15, 0, sizeof(v15));
  std::string::push_back(&v15, __c);
  while (a2 != a3)
  {
    int v10 = *a2;
    if (v10 == a5 || v10 == __c)
    {
      std::string::push_back(&v15, a5);
      LOBYTE(v1sub_23692A244(&a9, 0) = *a2;
    }
    std::string::push_back(&v15, v10);
    ++a2;
  }
  std::string::push_back(&v15, __c);
  if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v11 = &v15;
  }
  else {
    uint64_t v11 = (std::string *)v15.__r_.__value_.__r.__words[0];
  }
  if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v15.__r_.__value_.__l.__size_;
  }
  double v13 = sub_236914270(a1, (uint64_t)v11, size);
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v13;
}

void sub_23692CEB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_23692CED8(std::string *this, char **a2)
{
  *(_OWORD *)&this->__r_.__value_.__l.__data_ = 0uLL;
  this->__r_.__value_.__r.__words[2] = 0;
  std::__fs::filesystem::path::__string_view v3 = *a2;
  uint64_t v4 = v3 - 1;
  while (*++v4)
    ;
  sub_23692CF38(this, v3, v4);
  return this;
}

void sub_23692CF1C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_23692CF38(std::string *this, char *a2, char *a3)
{
  uint64_t v4 = a2;
  LODWORD(v6) = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  unint64_t v7 = a3 - a2;
  if ((v6 & 0x80000000) != 0)
  {
    if (a3 == a2) {
      return this;
    }
    std::string::size_type size = this->__r_.__value_.__l.__size_;
    unint64_t v11 = this->__r_.__value_.__r.__words[2];
    std::string::size_type v9 = (v11 & 0x7FFFFFFFFFFFFFFFLL) - 1;
    int v10 = (std::string *)this->__r_.__value_.__r.__words[0];
    unint64_t v6 = HIBYTE(v11);
  }
  else
  {
    if (a3 == a2) {
      return this;
    }
    std::string::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    std::string::size_type v9 = 22;
    int v10 = this;
  }
  if (v10 > (std::string *)v4 || (char *)&v10->__r_.__value_.__l.__data_ + size + 1 <= v4)
  {
    if (v9 - size < v7)
    {
      std::string::__grow_by(this, v9, size - v9 + v7, size, size, 0, 0);
      this->__r_.__value_.__l.__size_ = size;
      LOBYTE(v6) = *((unsigned char *)&this->__r_.__value_.__s + 23);
    }
    double v14 = this;
    if ((v6 & 0x80) != 0) {
      double v14 = (std::string *)this->__r_.__value_.__r.__words[0];
    }
    for (uint64_t i = (char *)v14 + size; v4 != a3; ++i)
    {
      char v16 = *v4++;
      *uint64_t i = v16;
    }
    *uint64_t i = 0;
    std::string::size_type v17 = v7 + size;
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
      this->__r_.__value_.__l.__size_ = v17;
    }
    else {
      *((unsigned char *)&this->__r_.__value_.__s + 23) = v17 & 0x7F;
    }
  }
  else
  {
    sub_23692D0B0(__p, v4, a3, v7);
    if ((v20 & 0x80u) == 0) {
      uint64_t v12 = __p;
    }
    else {
      uint64_t v12 = (void **)__p[0];
    }
    if ((v20 & 0x80u) == 0) {
      std::string::size_type v13 = v20;
    }
    else {
      std::string::size_type v13 = (std::string::size_type)__p[1];
    }
    std::string::append(this, (const std::string::value_type *)v12, v13);
    if ((char)v20 < 0) {
      operator delete(__p[0]);
    }
  }
  return this;
}

void sub_23692D094(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_23692D0B0(void *result, char *a2, char *a3, unint64_t a4)
{
  uint64_t v4 = result;
  if (a4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_236914158();
  }
  if (a4 > 0x16)
  {
    uint64_t v8 = (a4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a4 | 7) != 0x17) {
      uint64_t v8 = a4 | 7;
    }
    uint64_t v9 = v8 + 1;
    double result = operator new(v8 + 1);
    v4[1] = a4;
    v4[2] = v9 | 0x8000000000000000;
    *uint64_t v4 = result;
    uint64_t v4 = result;
  }
  else
  {
    *((unsigned char *)result + 23) = a4;
  }
  while (a2 != a3)
  {
    char v10 = *a2++;
    *(unsigned char *)uint64_t v4 = v10;
    uint64_t v4 = (void *)((char *)v4 + 1);
  }
  *(unsigned char *)uint64_t v4 = 0;
  return result;
}

void sub_23692D158()
{
}

uint64_t sub_23692D184(uint64_t a1)
{
  *(void *)a1 = &unk_26E9CDA28;
  sub_236933E4C((void *)(a1 + 96));
  uint64_t v4 = (void **)(a1 + 72);
  sub_236929CA8(&v4);
  uint64_t v4 = (void **)(a1 + 48);
  sub_236929CA8(&v4);
  int v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(void *)(a1 + 32) = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_23692D208(uint64_t a1)
{
  sub_23692D184(a1);
  JUMPOUT(0x237E07580);
}

uint64_t sub_23692D240(void *a1)
{
  uint64_t v2 = a1[5];
  unint64_t v3 = a1[6];
  unint64_t v4 = a1[4];
  if (v4 >= v3)
  {
    unint64_t v4 = 0;
    ++v2;
    a1[4] = 0;
    a1[5] = v2;
  }
  uint64_t v5 = a1[1];
  if (v2 == (a1[2] - v5) >> 3)
  {
    is_mul_ok(v3, 0x30uLL);
    operator new[]();
  }
  uint64_t result = *(void *)(v5 + 8 * v2) + 48 * v4;
  a1[4] = v4 + 1;
  return result;
}

void sub_23692D3C4(void *a1)
{
  sub_236929CFC(a1 + 6);
  sub_236929CFC(a1 + 9);
  a1[1] = "";
  a1[2] = 0;
  a1[4] = a1[3];
  sub_23692D41C((uint64_t)(a1 + 12));
}

void sub_23692D41C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 40);
  if (v2 + 1 < (int)((*(void *)(a1 + 16) - *(void *)(a1 + 8)) >> 3)) {
    int v3 = v2 + 1;
  }
  else {
    int v3 = (*(void *)(a1 + 16) - *(void *)(a1 + 8)) >> 3;
  }
  if (v3 >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 8 * v3;
    do
    {
      bzero(*(void **)(*(void *)(a1 + 8) + v4), 48 * *(void *)(a1 + 48));
      v4 += 8;
    }
    while (v5 != v4);
  }
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 4sub_23692A244(&a9, 0) = 0;
}

void sub_23692D498(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  sub_23692D3C4((void *)a1);
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = a3;
  unint64_t v6 = (char **)(a1 + 24);
  sub_2369198AC((void **)(a1 + 24), a3 + 1);
  if (a3)
  {
    unint64_t v7 = (void *)(a1 + 40);
    uint64_t v8 = *(void **)(a1 + 32);
    do
    {
      if ((int)a3 >= asc_236999B08[(unint64_t)*a2 >> 4]) {
        int v9 = asc_236999B08[(unint64_t)*a2 >> 4];
      }
      else {
        int v9 = a3;
      }
      if ((unint64_t)v8 >= *v7)
      {
        uint64_t v10 = ((char *)v8 - *v6) >> 3;
        if ((unint64_t)(v10 + 1) >> 61) {
          goto LABEL_76;
        }
        uint64_t v11 = *v7 - (void)*v6;
        uint64_t v12 = v11 >> 2;
        if (v11 >> 2 <= (unint64_t)(v10 + 1)) {
          uint64_t v12 = v10 + 1;
        }
        if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v13 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v13 = v12;
        }
        if (v13) {
          double v14 = (char *)sub_2369147B8(a1 + 40, v13);
        }
        else {
          double v14 = 0;
        }
        std::string v15 = &v14[8 * v10];
        *(void *)std::string v15 = a2;
        uint64_t v8 = v15 + 8;
        std::string::size_type v17 = *(char **)(a1 + 24);
        char v16 = *(char **)(a1 + 32);
        if (v16 != v17)
        {
          do
          {
            uint64_t v18 = *((void *)v16 - 1);
            v16 -= 8;
            *((void *)v15 - 1) = v18;
            v15 -= 8;
          }
          while (v16 != v17);
          char v16 = *v6;
        }
        *(void *)(a1 + 24) = v15;
        *(void *)(a1 + 32) = v8;
        *(void *)(a1 + 4sub_23692A244(&a9, 0) = &v14[8 * v13];
        if (v16) {
          operator delete(v16);
        }
      }
      else
      {
        *v8++ = a2;
      }
      *(void *)(a1 + 32) = v8;
      a2 += v9;
      a3 -= v9;
    }
    while (a3);
  }
  else
  {
    uint64_t v8 = *(void **)(a1 + 32);
  }
  unint64_t v19 = *(void *)(a1 + 40);
  if ((unint64_t)v8 >= v19)
  {
    uint64_t v21 = ((char *)v8 - *v6) >> 3;
    if ((unint64_t)(v21 + 1) >> 61) {
LABEL_76:
    }
      sub_236913FC4();
    uint64_t v22 = v19 - (void)*v6;
    uint64_t v23 = v22 >> 2;
    if (v22 >> 2 <= (unint64_t)(v21 + 1)) {
      uint64_t v23 = v21 + 1;
    }
    if ((unint64_t)v22 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v24 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v24 = v23;
    }
    if (v24) {
      uint64_t v25 = (char *)sub_2369147B8(a1 + 40, v24);
    }
    else {
      uint64_t v25 = 0;
    }
    uint64_t v26 = &v25[8 * v21];
    uint64_t v27 = &v25[8 * v24];
    *(void *)uint64_t v26 = a2;
    unsigned __int8 v20 = v26 + 8;
    int v29 = *(char **)(a1 + 24);
    unint64_t v28 = *(char **)(a1 + 32);
    if (v28 != v29)
    {
      do
      {
        uint64_t v30 = *((void *)v28 - 1);
        v28 -= 8;
        *((void *)v26 - 1) = v30;
        v26 -= 8;
      }
      while (v28 != v29);
      unint64_t v28 = *v6;
    }
    *(void *)(a1 + 24) = v26;
    *(void *)(a1 + 32) = v20;
    *(void *)(a1 + 4sub_23692A244(&a9, 0) = v27;
    if (v28) {
      operator delete(v28);
    }
  }
  else
  {
    void *v8 = a2;
    unsigned __int8 v20 = v8 + 1;
  }
  *(void *)(a1 + 32) = v20;
  int v31 = (((unint64_t)v20 - *(void *)(a1 + 24)) >> 3) - 1;
  unsigned int v32 = v31 & ~(v31 >> 31);
  sub_23692D8D8((uint64_t *)(a1 + 48), v32 + 1);
  sub_23692D8D8((uint64_t *)(a1 + 72), v32 + 1);
  uint64_t v33 = 0;
  do
  {
    sub_2369198AC((void **)(*(void *)(a1 + 48) + v33), 0x10uLL);
    sub_2369198AC((void **)(*(void *)(a1 + 72) + v33), 0x10uLL);
    v33 += 24;
  }
  while (24 * v32 + 24 != v33);
  BOOL v34 = (_DWORD *)sub_23692D240((void *)(a1 + 96));
  v34[6] = *(_DWORD *)(a1 + 128) + *(_DWORD *)(a1 + 136) * *(_DWORD *)(a1 + 144) - 1;
  v34[7] = -1;
  v34[4] = 0;
  unint64_t v35 = *(void ***)(a1 + 72);
  uint64_t v36 = v35[1];
  unint64_t v37 = (unint64_t)v35[2];
  if ((unint64_t)v36 >= v37)
  {
    uint64_t v39 = ((char *)v36 - (unsigned char *)*v35) >> 3;
    if ((unint64_t)(v39 + 1) >> 61) {
      sub_236913FC4();
    }
    uint64_t v40 = v37 - (void)*v35;
    uint64_t v41 = v40 >> 2;
    if (v40 >> 2 <= (unint64_t)(v39 + 1)) {
      uint64_t v41 = v39 + 1;
    }
    if ((unint64_t)v40 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v42 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v42 = v41;
    }
    if (v42) {
      BOOL v43 = (char *)sub_2369147B8((uint64_t)(v35 + 2), v42);
    }
    else {
      BOOL v43 = 0;
    }
    uint64_t v44 = &v43[8 * v39];
    uint64_t v45 = &v43[8 * v42];
    *(void *)uint64_t v44 = v34;
    uint64_t v38 = v44 + 8;
    size_t v47 = (char *)*v35;
    uint64_t v46 = (char *)v35[1];
    if (v46 != *v35)
    {
      do
      {
        uint64_t v48 = *((void *)v46 - 1);
        v46 -= 8;
        *((void *)v44 - 1) = v48;
        v44 -= 8;
      }
      while (v46 != v47);
      uint64_t v46 = (char *)*v35;
    }
    *unint64_t v35 = v44;
    v35[1] = v38;
    v35[2] = v45;
    if (v46) {
      operator delete(v46);
    }
  }
  else
  {
    *uint64_t v36 = v34;
    uint64_t v38 = v36 + 1;
  }
  v35[1] = v38;
  BOOL v49 = (_DWORD *)sub_23692D240((void *)(a1 + 96));
  uint64_t v50 = v49;
  v49[6] = *(_DWORD *)(a1 + 128) + *(_DWORD *)(a1 + 136) * *(_DWORD *)(a1 + 144) - 1;
  v49[7] = -1;
  v49[4] = v32;
  uint64_t v51 = (void **)(*(void *)(a1 + 48) + 24 * v32);
  uint64_t v52 = v51 + 1;
  size_t v53 = v51[1];
  unint64_t v54 = (unint64_t)v51[2];
  if ((unint64_t)v53 >= v54)
  {
    uint64_t v56 = ((char *)v53 - (unsigned char *)*v51) >> 3;
    if ((unint64_t)(v56 + 1) >> 61) {
      sub_236913FC4();
    }
    uint64_t v57 = v54 - (void)*v51;
    uint64_t v58 = v57 >> 2;
    if (v57 >> 2 <= (unint64_t)(v56 + 1)) {
      uint64_t v58 = v56 + 1;
    }
    if ((unint64_t)v57 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v59 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v59 = v58;
    }
    if (v59) {
      uint64_t v60 = (char *)sub_2369147B8((uint64_t)(v51 + 2), v59);
    }
    else {
      uint64_t v60 = 0;
    }
    uint64_t v61 = &v60[8 * v56];
    long long v62 = &v60[8 * v59];
    *(void *)uint64_t v61 = v50;
    int v55 = v61 + 8;
    uint64_t v63 = (char *)*v52;
    BOOL v64 = (char *)*v51;
    if (*v52 != *v51)
    {
      do
      {
        uint64_t v65 = *((void *)v63 - 1);
        v63 -= 8;
        *((void *)v61 - 1) = v65;
        v61 -= 8;
      }
      while (v63 != v64);
      uint64_t v63 = (char *)*v51;
    }
    *uint64_t v51 = v61;
    *uint64_t v52 = v55;
    v51[2] = v62;
    if (v63) {
      operator delete(v63);
    }
  }
  else
  {
    *size_t v53 = v49;
    int v55 = v53 + 1;
  }
  *uint64_t v52 = v55;
}

void sub_23692D8D8(uint64_t *a1, unint64_t a2)
{
  uint64_t v3 = a1[1];
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((v3 - *a1) >> 3);
  BOOL v5 = a2 >= v4;
  unint64_t v6 = a2 - v4;
  if (v6 != 0 && v5)
  {
    sub_236933EDC(a1, v6);
  }
  else if (!v5)
  {
    uint64_t v7 = *a1 + 24 * a2;
    if (v3 != v7)
    {
      uint64_t v8 = a1[1];
      do
      {
        uint64_t v10 = *(void **)(v8 - 24);
        v8 -= 24;
        int v9 = v10;
        if (v10)
        {
          *(void *)(v3 - 16) = v9;
          operator delete(v9);
        }
        uint64_t v3 = v8;
      }
      while (v8 != v7);
    }
    a1[1] = v7;
  }
}

uint64_t sub_23692D980(uint64_t a1, int a2, int a3)
{
  uint64_t v6 = sub_23692D240((void *)(a1 + 96));
  uint64_t v7 = v6;
  int v8 = *(_DWORD *)(a1 + 128) + *(_DWORD *)(a1 + 136) * *(_DWORD *)(a1 + 144) - 1;
  *(_DWORD *)(v6 + 2sub_23692A244(&a9, 0) = a3;
  *(_DWORD *)(v6 + 24) = v8;
  *(_DWORD *)(v6 + 16) = a2;
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(v9 + 8 * (a3 + a2));
  uint64_t v11 = *(void *)(v9 + 8 * a2);
  *(void *)uint64_t v6 = v11;
  *(void *)(v6 + 8) = (int)v10 - (int)v11;
  uint64_t v12 = (uint64_t **)(*(void *)(a1 + 48) + 24 * a2);
  unint64_t v13 = (void **)(v12 + 1);
  double v14 = v12[1];
  char v16 = (char **)(v12 + 2);
  unint64_t v15 = (unint64_t)v12[2];
  if ((unint64_t)v14 >= v15)
  {
    uint64_t v18 = v14 - *v12;
    if ((unint64_t)(v18 + 1) >> 61) {
      sub_236913FC4();
    }
    uint64_t v19 = v15 - (void)*v12;
    uint64_t v20 = v19 >> 2;
    if (v19 >> 2 <= (unint64_t)(v18 + 1)) {
      uint64_t v20 = v18 + 1;
    }
    if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v21 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v21 = v20;
    }
    if (v21) {
      uint64_t v22 = (char *)sub_2369147B8((uint64_t)v16, v21);
    }
    else {
      uint64_t v22 = 0;
    }
    uint64_t v23 = (uint64_t *)&v22[8 * v18];
    unint64_t v24 = &v22[8 * v21];
    *uint64_t v23 = v7;
    std::string::size_type v17 = v23 + 1;
    uint64_t v25 = (char *)*v13;
    uint64_t v26 = (char *)*v12;
    if (*v13 != *v12)
    {
      do
      {
        uint64_t v27 = *((void *)v25 - 1);
        v25 -= 8;
        *--uint64_t v23 = v27;
      }
      while (v25 != v26);
      uint64_t v25 = (char *)*v12;
    }
    *uint64_t v12 = v23;
    *unint64_t v13 = v17;
    *char v16 = v24;
    if (v25) {
      operator delete(v25);
    }
  }
  else
  {
    *double v14 = v6;
    std::string::size_type v17 = v14 + 1;
  }
  *unint64_t v13 = v17;
  unint64_t v28 = (void **)(*(void *)(a1 + 72) + 24 * (*(_DWORD *)(v7 + 20) + a2));
  int v29 = v28 + 1;
  uint64_t v30 = (uint64_t *)v28[1];
  unint64_t v31 = (unint64_t)v28[2];
  if ((unint64_t)v30 >= v31)
  {
    uint64_t v33 = ((char *)v30 - (unsigned char *)*v28) >> 3;
    if ((unint64_t)(v33 + 1) >> 61) {
      sub_236913FC4();
    }
    uint64_t v34 = v31 - (void)*v28;
    uint64_t v35 = v34 >> 2;
    if (v34 >> 2 <= (unint64_t)(v33 + 1)) {
      uint64_t v35 = v33 + 1;
    }
    if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v36 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v36 = v35;
    }
    if (v36) {
      unint64_t v37 = (char *)sub_2369147B8((uint64_t)(v28 + 2), v36);
    }
    else {
      unint64_t v37 = 0;
    }
    uint64_t v38 = (uint64_t *)&v37[8 * v33];
    uint64_t v39 = &v37[8 * v36];
    *uint64_t v38 = v7;
    unsigned int v32 = v38 + 1;
    uint64_t v40 = (char *)*v29;
    uint64_t v41 = (char *)*v28;
    if (*v29 != *v28)
    {
      do
      {
        uint64_t v42 = *((void *)v40 - 1);
        v40 -= 8;
        *--uint64_t v38 = v42;
      }
      while (v40 != v41);
      uint64_t v40 = (char *)*v28;
    }
    *unint64_t v28 = v38;
    *int v29 = v32;
    v28[2] = v39;
    if (v40) {
      operator delete(v40);
    }
  }
  else
  {
    *uint64_t v30 = v7;
    unsigned int v32 = v30 + 1;
  }
  *int v29 = v32;
  return v7;
}

void sub_23692DBA8(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = 0;
  int v4 = ((a1[4] - a1[3]) >> 3) - 1;
  unsigned int v5 = v4 & ~(v4 >> 31);
  uint64_t v6 = a1[6];
  while (1)
  {
    uint64_t v7 = (uint64_t **)(v6 + 24 * v3);
    int v8 = *v7;
    uint64_t v9 = v7[1];
    if (v8 != v9) {
      break;
    }
LABEL_14:
    if (++v3 == v5 + 1)
    {
      std::string __p = 0;
      uint64_t v46 = 0;
      size_t v47 = 0;
      uint64_t v21 = **(void **)(v6 + 24 * v5);
      int v22 = *(_DWORD *)(v21 + 36);
      uint64_t v23 = *(void *)(v21 + 40);
      if (*(void *)(v23 + 40))
      {
        unint64_t v24 = 0;
        do
        {
          if (v24 >= v47)
          {
            uint64_t v25 = (v24 - (unsigned char *)__p) >> 3;
            if ((unint64_t)(v25 + 1) >> 61) {
              sub_236913FC4();
            }
            unint64_t v26 = (v47 - (unsigned char *)__p) >> 2;
            if (v26 <= v25 + 1) {
              unint64_t v26 = v25 + 1;
            }
            if ((unint64_t)(v47 - (unsigned char *)__p) >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v27 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v27 = v26;
            }
            if (v27) {
              unint64_t v28 = (char *)sub_2369147B8((uint64_t)&v47, v27);
            }
            else {
              unint64_t v28 = 0;
            }
            int v29 = &v28[8 * v25];
            *(void *)int v29 = v23;
            unint64_t v24 = v29 + 8;
            unint64_t v31 = (char *)__p;
            uint64_t v30 = v46;
            if (v46 != __p)
            {
              do
              {
                uint64_t v32 = *((void *)v30 - 1);
                v30 -= 8;
                *((void *)v29 - 1) = v32;
                v29 -= 8;
              }
              while (v30 != v31);
              uint64_t v30 = (char *)__p;
            }
            std::string __p = v29;
            uint64_t v46 = v24;
            size_t v47 = &v28[8 * v27];
            if (v30) {
              operator delete(v30);
            }
          }
          else
          {
            *(void *)unint64_t v24 = v23;
            v24 += 8;
          }
          uint64_t v46 = v24;
          uint64_t v23 = *(void *)(v23 + 40);
        }
        while (*(void *)(v23 + 40));
        uint64_t v33 = __p;
        uint64_t v34 = v24 - 8;
        if (__p != v24 && v34 > __p)
        {
          unint64_t v36 = (char *)__p + 8;
          do
          {
            uint64_t v37 = *((void *)v36 - 1);
            *((void *)v36 - 1) = *(void *)v34;
            *(void *)uint64_t v34 = v37;
            v34 -= 8;
            BOOL v38 = v36 >= v34;
            v36 += 8;
          }
          while (!v38);
          uint64_t v33 = __p;
          unint64_t v24 = v46;
        }
      }
      else
      {
        unint64_t v24 = 0;
        uint64_t v33 = 0;
      }
      *(void *)a2 = 0;
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = 0;
      sub_236932F98((void *)a2, v33, (uint64_t)v24, (v24 - (unsigned char *)v33) >> 3);
      *(_DWORD *)(a2 + 24) = v22;
      if (__p)
      {
        uint64_t v46 = (char *)__p;
        operator delete(__p);
      }
      return;
    }
  }
  uint64_t v10 = (uint64_t **)(a1[9] + 24 * v3);
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  while (1)
  {
    uint64_t v13 = *v8;
    *(void *)(*v8 + 4sub_23692A244(&a9, 0) = 0;
    if (v11 == v12) {
      break;
    }
    uint64_t v14 = 0;
    float v15 = 0.0;
    char v16 = v11;
    do
    {
      uint64_t v18 = *v16++;
      uint64_t v17 = v18;
      float v19 = *(float *)(v18 + 36) + *(float *)(v13 + 32);
      if (v19 > v15 || v14 == 0)
      {
        float v15 = v19;
        uint64_t v14 = v17;
      }
    }
    while (v16 != v12);
    if (!v14) {
      break;
    }
    *(void *)(v13 + 4sub_23692A244(&a9, 0) = v14;
    *(float *)(v13 + 36) = v15;
    if (++v8 == v9) {
      goto LABEL_14;
    }
  }
  if ((int)sub_236942B98() <= 2)
  {
    LOBYTE(__p) = 0;
    uint64_t v39 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"unigram_model.cc", 16);
    sub_236914270(v39, (uint64_t)"(", 1);
    uint64_t v40 = (void *)std::ostream::operator<<();
    uint64_t v41 = sub_236914270(v40, (uint64_t)") ", 2);
    uint64_t v42 = sub_236914270(v41, (uint64_t)"LOG(", 4);
    BOOL v43 = sub_236914270(v42, (uint64_t)"ERROR", 5);
    uint64_t v44 = sub_236914270(v43, (uint64_t)") ", 2);
    sub_236914270(v44, (uint64_t)"Failed to find the best path in Viterbi.", 40);
    sub_23691311C(&__p);
  }
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(_DWORD *)(a2 + 24) = 0;
  *(void *)(a2 + 16) = 0;
}

void sub_23692DEA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_23692DED8(void *a1@<X0>, uint64_t *a2@<X8>, float a3@<S0>)
{
  int v6 = ((a1[4] - a1[3]) >> 3) - 1;
  int v7 = v6 & ~(v6 >> 31);
  unint64_t v8 = a1[16] + a1[17] * a1[18];
  int v29 = 0;
  uint64_t v25 = a2;
  sub_23692C238(a2, v8, &v29);
  uint64_t v9 = 0;
  uint64_t v28 = a1[6];
  unint64_t v26 = a1;
  uint64_t v27 = (v7 + 1);
  do
  {
    uint64_t v10 = (uint64_t *)(v28 + 24 * v9);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    if (*v10 != v12)
    {
      uint64_t v13 = v26[9] + 24 * v9;
      float v15 = *(void **)v13;
      uint64_t v14 = *(void **)(v13 + 8);
      uint64_t v16 = *v25;
      do
      {
        if (v15 != v14)
        {
          uint64_t v17 = *(unsigned int *)(*(void *)v11 + 24);
          uint64_t v18 = *v15;
          float v19 = *(float *)(v16 + 4 * v17);
          uint64_t v20 = v15;
          do
          {
            float v21 = *(float *)(v16 + 4 * *(unsigned int *)(*v20 + 24)) + (float)(a3 * *(float *)(*v20 + 32));
            if (*v20 != v18)
            {
              if (v21 >= v19) {
                float v22 = v19;
              }
              else {
                float v22 = *(float *)(v16 + 4 * *(unsigned int *)(*v20 + 24)) + (float)(a3 * *(float *)(*v20 + 32));
              }
              if (v19 >= v21) {
                float v21 = v19;
              }
              if (v21 <= (float)(v22 + 50.0))
              {
                double v23 = v21;
                long double v24 = exp((float)(v22 - v21));
                float v21 = log(v24 + 1.0) + v23;
              }
            }
            *(float *)(v16 + 4 * v17) = v21;
            ++v20;
            float v19 = v21;
          }
          while (v20 != v14);
        }
        v11 += 8;
      }
      while (v11 != v12);
    }
    ++v9;
  }
  while (v9 != v27);
}

float sub_23692E060(void *a1, float a2)
{
  uint64_t v5 = a1[3];
  uint64_t v4 = a1[4];
  unint64_t v6 = a1[16] + a1[17] * a1[18];
  LODWORD(__p[0]) = 0;
  sub_23692C238(v29, v6, __p);
  sub_23692DED8(a1, (uint64_t *)__p, a2);
  uint64_t v7 = 0;
  uint64_t v27 = a1[6];
  unsigned int v25 = (((unint64_t)(v4 - v5) >> 3) - 1) & ~((int)(((unint64_t)(v4 - v5) >> 3) - 1) >> 31);
  unint64_t v26 = a1;
  do
  {
    unint64_t v8 = (uint64_t *)(v27 + 24 * v7);
    uint64_t v9 = *v8;
    uint64_t v10 = v8[1];
    if (*v8 != v10)
    {
      uint64_t v11 = (uint64_t **)(v26[9] + 24 * v7);
      uint64_t v12 = *v11;
      uint64_t v13 = v11[1];
      uint64_t v14 = (float *)__p[0];
      float v15 = (float *)v29[0];
      do
      {
        if (v12 != v13)
        {
          uint64_t v16 = *(unsigned int *)(*(void *)v9 + 24);
          float v17 = v15[v16];
          uint64_t v18 = v12;
          do
          {
            uint64_t v19 = *v18++;
            uint64_t v20 = *(unsigned int *)(v19 + 24);
            float v21 = (float)(v14[v20] + (float)(a2 * *(float *)(v19 + 32))) - v14[v16];
            float v17 = v17 + (float)(expf(v21) * (float)(v21 + v15[v20]));
            v15[v16] = v17;
          }
          while (v18 != v13);
        }
        v9 += 8;
      }
      while (v9 != v10);
    }
    ++v7;
  }
  while (v7 != v25 + 1);
  float v22 = v29[0];
  float v23 = *((float *)v29[0] + *(unsigned int *)(**(void **)(v27 + 24 * v25) + 24));
  if (!__p[0] || (__p[1] = __p[0], operator delete(__p[0]), (float v22 = v29[0]) != 0))
  {
    v29[1] = v22;
    operator delete(v22);
  }
  return -v23;
}

void sub_23692E204(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_23692E220(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t *a4@<X8>, float a5@<S0>)
{
  uint64_t v175 = *MEMORY[0x263EF8340];
  if (a2 == 1)
  {
    if ((a3 & 1) == 0)
    {
      sub_23692DBA8(a1, (uint64_t)&v171);
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      *(void *)uint64_t v157 = a4;
      v157[8] = 0;
      char v145 = operator new(0x20uLL);
      *a4 = (uint64_t)v145;
      a4[1] = (uint64_t)v145;
      a4[2] = (uint64_t)v145 + 32;
      a4[1] = sub_236934198((uint64_t)(a4 + 2), (uint64_t)&v171, (uint64_t)&v173[1], (uint64_t)v145);
      if (v171)
      {
        *(void *)&long long v172 = v171;
        operator delete(v171);
      }
      return;
    }
  }
  else if (!a2)
  {
    if ((int)sub_236942B98() <= 1)
    {
      LOBYTE(v171) = 0;
      uint64_t v9 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"unigram_model.cc", 16);
      sub_236914270(v9, (uint64_t)"(", 1);
      uint64_t v10 = (void *)std::ostream::operator<<();
      uint64_t v11 = sub_236914270(v10, (uint64_t)") ", 2);
      uint64_t v12 = sub_236914270(v11, (uint64_t)"LOG(", 4);
      uint64_t v13 = sub_236914270(v12, (uint64_t)"WARNING", 7);
      uint64_t v14 = sub_236914270(v13, (uint64_t)") ", 2);
      sub_236914270(v14, (uint64_t)"nbest_size >= 1. Returns empty result.", 38);
      sub_23691311C(&v171);
    }
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    return;
  }
  long long v172 = 0u;
  memset(v173, 0, sizeof(v173));
  uint64_t v171 = &unk_26E9CDB90;
  uint64_t v174 = 512;
  long long v168 = 0uLL;
  uint64_t v169 = 0;
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  uint64_t v15 = sub_23692F40C(&v171);
  uint64_t v167 = v15;
  int v16 = ((a1[4] - a1[3]) >> 3) - 1;
  *(void *)uint64_t v15 = **(void **)(a1[6] + 24 * (v16 & ~(v16 >> 31)));
  *(void *)(v15 + 8) = 0;
  *(_DWORD *)(v15 + 2sub_23692A244(&a9, 0) = 0;
  unint64_t v17 = a1[16] + a1[17] * a1[18];
  *(_DWORD *)uint64_t v157 = 0;
  sub_23692C238(__p, v17, v157);
  if (a3)
  {
    sub_23692DED8(a1, (uint64_t *)v157, a5);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    *(_OWORD *)std::string __p = *(_OWORD *)v157;
    std::string __p[2] = *(void **)&v157[16];
    uint64_t v18 = sub_236942CF0();
    unsigned int v19 = sub_23692C694(v18);
    float v20 = logf((float)((float)((float)v19 * 2.3283e-10) + 0.0) + 0.0000001);
    float v21 = -logf(-v20);
  }
  else
  {
    sub_23692DBA8(a1, (uint64_t)v165);
    if (v165[0])
    {
      v165[1] = v165[0];
      operator delete(v165[0]);
    }
    float v21 = *(float *)(*(void *)v15 + 36);
  }
  *(float *)(v15 + 16) = v21;
  sub_23692F57C((uint64_t *)&v168, &v167);
  int v146 = 0;
  char v147 = 0;
  if (10 * (int)a2 >= 512) {
    int v22 = 512;
  }
  else {
    int v22 = 10 * a2;
  }
  if (v22 <= 1) {
    int v23 = 1;
  }
  else {
    int v23 = v22;
  }
  int v148 = v23;
  while (1)
  {
    long long v24 = v168;
    if ((void)v168 == *((void *)&v168 + 1)) {
      break;
    }
    unsigned int v25 = *(uint64_t **)v168;
    if ((uint64_t)(*((void *)&v168 + 1) - v168) >= 9)
    {
      uint64_t v26 = 0;
      uint64_t v27 = (uint64_t)(*((void *)&v168 + 1) - v168) >> 3;
      uint64_t v28 = (void *)v168;
      do
      {
        int v29 = v28;
        v28 += v26 + 1;
        uint64_t v30 = 2 * v26;
        uint64_t v26 = (2 * v26) | 1;
        uint64_t v31 = v30 + 2;
        if (v31 < v27 && *(float *)(*v28 + 16) < *(float *)(v28[1] + 16))
        {
          ++v28;
          uint64_t v26 = v31;
        }
        *int v29 = *v28;
      }
      while (v26 <= (uint64_t)((unint64_t)(v27 - 2) >> 1));
      if (v28 == (void *)(*((void *)&v24 + 1) - 8))
      {
        *uint64_t v28 = v25;
      }
      else
      {
        *uint64_t v28 = **((void **)&v24 + 1);
        **((void **)&v24 + 1) = v25;
        sub_2369342C4(v24, (uint64_t)(v28 + 1), (uint64_t)((uint64_t)v28 - v24 + 8) >> 3);
      }
    }
    *((void *)&v168 + 1) -= 8;
    uint64_t v32 = *v25;
    uint64_t v33 = (void **)a1[9];
    if (*v25 == **v33)
    {
      sub_23692F690(a4, ((a4[1] - *a4) >> 5) + 1);
      for (uint64_t i = (void *)v25[1]; i[1]; uint64_t i = (void *)i[1])
      {
        uint64_t v35 = a4[1];
        unint64_t v36 = *(void **)(v35 - 24);
        unint64_t v37 = *(void *)(v35 - 16);
        if ((unint64_t)v36 >= v37)
        {
          uint64_t v39 = *(void *)(v35 - 32);
          uint64_t v40 = ((uint64_t)v36 - v39) >> 3;
          if ((unint64_t)(v40 + 1) >> 61) {
            sub_236913FC4();
          }
          uint64_t v41 = v37 - v39;
          uint64_t v42 = v41 >> 2;
          if (v41 >> 2 <= (unint64_t)(v40 + 1)) {
            uint64_t v42 = v40 + 1;
          }
          if ((unint64_t)v41 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v43 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v43 = v42;
          }
          if (v43) {
            uint64_t v44 = (char *)sub_2369147B8(v35 - 16, v43);
          }
          else {
            uint64_t v44 = 0;
          }
          uint64_t v45 = &v44[8 * v40];
          *(void *)uint64_t v45 = *i;
          BOOL v38 = v45 + 8;
          size_t v47 = *(char **)(v35 - 32);
          uint64_t v46 = *(char **)(v35 - 24);
          if (v46 != v47)
          {
            do
            {
              uint64_t v48 = *((void *)v46 - 1);
              v46 -= 8;
              *((void *)v45 - 1) = v48;
              v45 -= 8;
            }
            while (v46 != v47);
            uint64_t v46 = *(char **)(v35 - 32);
          }
          *(void *)(v35 - 32) = v45;
          *(void *)(v35 - 24) = v38;
          *(void *)(v35 - 16) = &v44[8 * v43];
          if (v46) {
            operator delete(v46);
          }
        }
        else
        {
          *unint64_t v36 = *i;
          BOOL v38 = v36 + 1;
        }
        *(void *)(v35 - 24) = v38;
      }
      uint64_t v49 = a4[1];
      *(_DWORD *)(v49 - 8) = *((_DWORD *)v25 + 4);
      if (a2 == (v49 - *a4) >> 5) {
        break;
      }
    }
    else
    {
      unint64_t v50 = (int)(v33[3 * *(int *)(v32 + 16) + 1] - v33[3 * *(int *)(v32 + 16)]);
      *(_DWORD *)uint64_t v157 = 0;
      sub_23692C238(v164, v50, v157);
      *(_DWORD *)uint64_t v157 = 0;
      sub_23692C238(v163, v50, v157);
      *(void *)uint64_t v157 = 0;
      sub_2369345A4(&v161, v50, v157);
      int v51 = *(_DWORD *)(v32 + 16);
      uint64_t v52 = a1[9];
      if (a3)
      {
        uint64_t v53 = *(void *)(v52 + 24 * v51);
        float v54 = -100000000.0;
        if (*(void *)(v52 + 24 * v51 + 8) != v53)
        {
          unint64_t v55 = 0;
          float v56 = *((float *)__p[0] + *(unsigned int *)(v32 + 24));
          float v54 = -100000000.0;
          do
          {
            float v57 = (float)((float)(*((float *)v25 + 5)
                                + *((float *)__p[0] + *(unsigned int *)(*(void *)(v53 + 8 * v55) + 24)))
                        + (float)(a5 * *(float *)(*(void *)(v53 + 8 * v55) + 32)))
                - v56;
            *((float *)v164[0] + v55) = v57;
            uint64_t v58 = sub_236942CF0();
            unsigned int v59 = sub_23692C694(v58);
            float v60 = logf((float)((float)((float)v59 * 2.3283e-10) + 0.0) + 0.0000001);
            float v61 = v57 - logf(-v60);
            *((float *)v163[0] + v55) = v61;
            if (v61 > v54) {
              float v54 = v61;
            }
            ++v55;
            int v62 = *(_DWORD *)(v32 + 16);
            uint64_t v52 = a1[9];
            uint64_t v53 = *(void *)(v52 + 24 * v62);
          }
          while (v55 < (*(void *)(v52 + 24 * v62 + 8) - v53) >> 3);
          int v51 = *(_DWORD *)(v32 + 16);
        }
        uint64_t v63 = (double *)v161;
        if (v162 != v161)
        {
          float v64 = *((float *)v25 + 4);
          uint64_t v65 = (float *)v163[0];
          if ((unint64_t)((v162 - (unsigned char *)v161) >> 3) <= 1) {
            uint64_t v5 = 1;
          }
          else {
            uint64_t v5 = (v162 - (unsigned char *)v161) >> 3;
          }
          do
          {
            float v66 = *v65++;
            float v67 = expf(v66 - v54);
            float v68 = (float)(v64 - v66) + log1pf(-v67);
            float v69 = v64 - fmaxf(v68, 0.0);
            float v70 = expf(-fabsf(v68));
            *v63++ = (float)(v69 - log1pf(v70));
            --v5;
          }
          while (v5);
        }
      }
      uint64_t v71 = *(void *)(v52 + 24 * v51);
      if (*(void *)(v52 + 24 * v51 + 8) != v71)
      {
        unint64_t v72 = 0;
        do
        {
          uint64_t v73 = *(void *)(v71 + 8 * v72);
          uint64_t v74 = sub_23692F40C(&v171);
          *(void *)uint64_t v157 = v74;
          *(void *)uint64_t v74 = v73;
          if (a3)
          {
            *(_DWORD *)(v74 + 2sub_23692A244(&a9, 0) = *((_DWORD *)v164[0] + v72);
            float v75 = *((double *)v161 + v72);
          }
          else
          {
            *(float *)(v74 + 2sub_23692A244(&a9, 0) = *(float *)(v73 + 32) + *((float *)v25 + 5);
            float v75 = *(float *)(v73 + 36) + *((float *)v25 + 5);
          }
          *(float *)(v74 + 16) = v75;
          *(void *)(v74 + 8) = v25;
          sub_23692F57C((uint64_t *)&v168, v157);
          ++v72;
          uint64_t v71 = *(void *)(a1[9] + 24 * *(int *)(v32 + 16));
        }
        while (v72 < (*(void *)(a1[9] + 24 * *(int *)(v32 + 16) + 8) - v71) >> 3);
      }
      if (!(((unint64_t)(v173[1] + v173[2] * v174) < 0x3B9ACA00) | v147 & 1))
      {
        if ((int)sub_236942B98() <= 1)
        {
          v157[0] = 0;
          uint64_t v76 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"unigram_model.cc", 16);
          sub_236914270(v76, (uint64_t)"(", 1);
          long long v77 = (void *)std::ostream::operator<<();
          uint64_t v78 = sub_236914270(v77, (uint64_t)") ", 2);
          uint64_t v79 = sub_236914270(v78, (uint64_t)"LOG(", 4);
          size_t v80 = sub_236914270(v79, (uint64_t)"WARNING", 7);
          uint64_t v81 = sub_236914270(v80, (uint64_t)") ", 2);
          sub_236914270(v81, (uint64_t)"Allocator size exceeds ", 23);
          std::string::size_type v82 = (void *)std::ostream::operator<<();
          sub_236914270(v82, (uint64_t)" with an example of length ", 27);
          std::ostream::operator<<();
          sub_23691311C(v157);
        }
        char v147 = 1;
      }
      uint64_t v83 = *((void *)&v168 + 1);
      uint64_t v84 = (void *)v168;
      if (*((void *)&v168 + 1) - (void)v168 >= 0x13879uLL)
      {
        long long v159 = 0uLL;
        uint64_t v160 = 0;
        memset(&v157[8], 0, 40);
        *(void *)uint64_t v157 = &unk_26E9CDB90;
        uint64_t v158 = 512;
        *(_OWORD *)char v154 = 0u;
        long long v155 = 0u;
        float v156 = 1.0;
        ++v146;
        if ((int)sub_236942B98() <= 1)
        {
          LOBYTE(v17sub_23692A244(&a9, 0) = 0;
          unint64_t v85 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"unigram_model.cc", 16);
          sub_236914270(v85, (uint64_t)"(", 1);
          int v86 = (void *)std::ostream::operator<<();
          uint64_t v87 = sub_236914270(v86, (uint64_t)") ", 2);
          std::string::size_type v88 = sub_236914270(v87, (uint64_t)"LOG(", 4);
          uint64_t v89 = sub_236914270(v88, (uint64_t)"WARNING", 7);
          long long v90 = sub_236914270(v89, (uint64_t)") ", 2);
          sub_236914270(v90, (uint64_t)"Too big agenda size ", 20);
          uint64_t v91 = (void *)std::ostream::operator<<();
          sub_236914270(v91, (uint64_t)". Shrinking (round ", 19);
          uint64_t v92 = (void *)std::ostream::operator<<();
          sub_236914270(v92, (uint64_t)") down to ", 10);
          uint64_t v93 = (void *)std::ostream::operator<<();
          sub_236914270(v93, (uint64_t)".", 1);
          sub_23691311C(&v170);
        }
        if (10 * (int)a2 >= 1)
        {
          int v94 = 0;
          while (1)
          {
            unint64_t v149 = (void *)v168;
            uint64_t v150 = v83;
            unint64_t v95 = *(void *)v168;
            uint64_t v153 = 0;
            uint64_t v170 = 0;
            if (!v95) {
              goto LABEL_181;
            }
            BOOL v96 = &v170;
            unint64_t v97 = (unint64_t)v154[1];
            do
            {
              unint64_t v98 = 0x9DDFEA08EB382D69 * (((8 * v95) + 8) ^ HIDWORD(v95));
              unint64_t v99 = 0x9DDFEA08EB382D69 * (HIDWORD(v95) ^ (v98 >> 47) ^ v98);
              unint64_t v100 = 0x9DDFEA08EB382D69 * (v99 ^ (v99 >> 47));
              if (v97)
              {
                uint8x8_t v101 = (uint8x8_t)vcnt_s8((int8x8_t)v97);
                v101.i16[0] = vaddlv_u8(v101);
                if (v101.u32[0] > 1uLL)
                {
                  unint64_t v102 = 0x9DDFEA08EB382D69 * (v99 ^ (v99 >> 47));
                  if (v100 >= v97) {
                    unint64_t v102 = v100 % v97;
                  }
                }
                else
                {
                  unint64_t v102 = v100 & (v97 - 1);
                }
                uint64_t v103 = (void *)*((void *)v154[0] + v102);
                if (v103)
                {
                  for (j = (void *)*v103; j; j = (void *)*j)
                  {
                    unint64_t v105 = j[1];
                    if (v105 == v100)
                    {
                      if (j[2] == v95)
                      {
                        *BOOL v96 = j[3];
                        goto LABEL_181;
                      }
                    }
                    else
                    {
                      if (v101.u32[0] > 1uLL)
                      {
                        if (v105 >= v97) {
                          v105 %= v97;
                        }
                      }
                      else
                      {
                        v105 &= v97 - 1;
                      }
                      if (v105 != v102) {
                        break;
                      }
                    }
                  }
                }
              }
              uint64_t v106 = sub_23692F40C(v157);
              long long v107 = *(_OWORD *)v95;
              *(void *)(v106 + 16) = *(void *)(v95 + 16);
              *(_OWORD *)uint64_t v106 = v107;
              *BOOL v96 = v106;
              unint64_t v97 = (unint64_t)v154[1];
              if (v154[1])
              {
                uint8x8_t v108 = (uint8x8_t)vcnt_s8((int8x8_t)v154[1]);
                v108.i16[0] = vaddlv_u8(v108);
                if (v108.u32[0] > 1uLL)
                {
                  uint64_t v5 = v100;
                  if ((void *)v100 >= v154[1]) {
                    uint64_t v5 = v100 % (unint64_t)v154[1];
                  }
                }
                else
                {
                  uint64_t v5 = ((unint64_t)v154[1] - 1) & v100;
                }
                uint64_t v109 = (void *)*((void *)v154[0] + v5);
                if (v109)
                {
                  for (k = (void *)*v109; k; k = (void *)*k)
                  {
                    unint64_t v111 = k[1];
                    if (v111 == v100)
                    {
                      if (k[2] == v95) {
                        goto LABEL_170;
                      }
                    }
                    else
                    {
                      if (v108.u32[0] > 1uLL)
                      {
                        if ((void *)v111 >= v154[1]) {
                          v111 %= (unint64_t)v154[1];
                        }
                      }
                      else
                      {
                        v111 &= (unint64_t)v154[1] - 1;
                      }
                      if (v111 != v5) {
                        break;
                      }
                    }
                  }
                }
              }
              uint64_t v112 = operator new(0x20uLL);
              *uint64_t v112 = 0;
              v112[1] = v100;
              v112[2] = v95;
              v112[3] = v106;
              float v113 = (float)(unint64_t)(*((void *)&v155 + 1) + 1);
              if (!v97 || (float)(v156 * (float)v97) < v113)
              {
                BOOL v114 = (v97 & (v97 - 1)) == 0;
                if (v97 < 3) {
                  BOOL v114 = 0;
                }
                unint64_t v115 = (2 * v97) | !v114;
                unint64_t v116 = vcvtps_u32_f32(v113 / v156);
                if (v115 <= v116) {
                  int8x8_t prime = (int8x8_t)v116;
                }
                else {
                  int8x8_t prime = (int8x8_t)v115;
                }
                if (*(void *)&prime == 1)
                {
                  int8x8_t prime = (int8x8_t)2;
                }
                else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
                {
                  int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
                  unint64_t v97 = (unint64_t)v154[1];
                }
                if (*(void *)&prime <= v97)
                {
                  if (*(void *)&prime < v97)
                  {
                    unint64_t v124 = vcvtps_u32_f32((float)*((unint64_t *)&v155 + 1) / v156);
                    if (v97 < 3
                      || (uint8x8_t v125 = (uint8x8_t)vcnt_s8((int8x8_t)v97), v125.i16[0] = vaddlv_u8(v125), v125.u32[0] > 1uLL))
                    {
                      unint64_t v124 = std::__next_prime(v124);
                    }
                    else
                    {
                      uint64_t v126 = 1 << -(char)__clz(v124 - 1);
                      if (v124 >= 2) {
                        unint64_t v124 = v126;
                      }
                    }
                    if (*(void *)&prime <= v124) {
                      int8x8_t prime = (int8x8_t)v124;
                    }
                    if (*(void *)&prime >= v97)
                    {
                      unint64_t v97 = (unint64_t)v154[1];
                    }
                    else
                    {
                      if (prime) {
                        goto LABEL_126;
                      }
                      uint64_t v132 = v154[0];
                      v154[0] = 0;
                      if (v132) {
                        operator delete(v132);
                      }
                      unint64_t v97 = 0;
                      v154[1] = 0;
                    }
                  }
                }
                else
                {
LABEL_126:
                  if (*(void *)&prime >> 61) {
                    sub_236913AB8();
                  }
                  uint64_t v118 = operator new(8 * *(void *)&prime);
                  char v119 = v154[0];
                  v154[0] = v118;
                  if (v119) {
                    operator delete(v119);
                  }
                  uint64_t v120 = 0;
                  v154[1] = (void *)prime;
                  do
                    *((void *)v154[0] + v120++) = 0;
                  while (*(void *)&prime != v120);
                  uint64_t v121 = (void **)v155;
                  if ((void)v155)
                  {
                    unint64_t v122 = *(void *)(v155 + 8);
                    uint8x8_t v123 = (uint8x8_t)vcnt_s8(prime);
                    v123.i16[0] = vaddlv_u8(v123);
                    if (v123.u32[0] > 1uLL)
                    {
                      if (v122 >= *(void *)&prime) {
                        v122 %= *(void *)&prime;
                      }
                    }
                    else
                    {
                      v122 &= *(void *)&prime - 1;
                    }
                    *((void *)v154[0] + v122) = &v155;
                    for (m = *v121; m; unint64_t v122 = v128)
                    {
                      unint64_t v128 = m[1];
                      if (v123.u32[0] > 1uLL)
                      {
                        if (v128 >= *(void *)&prime) {
                          v128 %= *(void *)&prime;
                        }
                      }
                      else
                      {
                        v128 &= *(void *)&prime - 1;
                      }
                      if (v128 != v122)
                      {
                        if (!*((void *)v154[0] + v128))
                        {
                          *((void *)v154[0] + v128) = v121;
                          goto LABEL_151;
                        }
                        *uint64_t v121 = (void *)*m;
                        void *m = **((void **)v154[0] + v128);
                        **((void **)v154[0] + v128) = m;
                        m = v121;
                      }
                      unint64_t v128 = v122;
LABEL_151:
                      uint64_t v121 = (void **)m;
                      m = (void *)*m;
                    }
                  }
                  unint64_t v97 = (unint64_t)prime;
                }
                if ((v97 & (v97 - 1)) != 0)
                {
                  if (v100 >= v97) {
                    uint64_t v5 = v100 % v97;
                  }
                  else {
                    uint64_t v5 = v100;
                  }
                }
                else
                {
                  uint64_t v5 = (v97 - 1) & v100;
                }
              }
              uint64_t v129 = v154[0];
              char v130 = (void *)*((void *)v154[0] + v5);
              if (v130)
              {
                *uint64_t v112 = *v130;
LABEL_168:
                *char v130 = v112;
                goto LABEL_169;
              }
              *uint64_t v112 = v155;
              *(void *)&long long v155 = v112;
              v129[v5] = &v155;
              if (*v112)
              {
                unint64_t v131 = *(void *)(*v112 + 8);
                if ((v97 & (v97 - 1)) != 0)
                {
                  if (v131 >= v97) {
                    v131 %= v97;
                  }
                }
                else
                {
                  v131 &= v97 - 1;
                }
                char v130 = (char *)v154[0] + 8 * v131;
                goto LABEL_168;
              }
LABEL_169:
              ++*((void *)&v155 + 1);
LABEL_170:
              unint64_t v95 = *(void *)(v95 + 8);
              BOOL v96 = (uint64_t *)(v106 + 8);
            }
            while (v95);
LABEL_181:
            uint64_t v153 = v170;
            sub_23692F57C((uint64_t *)&v159, &v153);
            if (v150 - (uint64_t)v149 >= 9)
            {
              uint64_t v133 = 0;
              uint64_t v134 = (v150 - (uint64_t)v149) >> 3;
              uint64_t v135 = *v149;
              char v136 = v149;
              do
              {
                uint64_t v137 = v136;
                v136 += v133 + 1;
                uint64_t v138 = 2 * v133;
                uint64_t v133 = (2 * v133) | 1;
                uint64_t v139 = v138 + 2;
                if (v139 < v134 && *(float *)(*v136 + 16) < *(float *)(v136[1] + 16))
                {
                  ++v136;
                  uint64_t v133 = v139;
                }
                *uint64_t v137 = *v136;
              }
              while (v133 <= (uint64_t)((unint64_t)(v134 - 2) >> 1));
              uint64_t v140 = (void *)(v150 - 8);
              if (v136 == (void *)(v150 - 8))
              {
                void *v136 = v135;
              }
              else
              {
                void *v136 = *v140;
                void *v140 = v135;
                sub_2369342C4((uint64_t)v149, (uint64_t)(v136 + 1), v136 + 1 - v149);
              }
            }
            uint64_t v83 = *((void *)&v168 + 1) - 8;
            *((void *)&v168 + 1) -= 8;
            if (++v94 == v148)
            {
              uint64_t v84 = (void *)v168;
              break;
            }
          }
        }
        if (v84)
        {
          *((void *)&v168 + 1) = v84;
          operator delete(v84);
        }
        long long v168 = v159;
        uint64_t v169 = v160;
        long long v141 = v172;
        long long v172 = *(_OWORD *)&v157[8];
        *(_OWORD *)&v157[8] = v141;
        uint64_t v142 = *(void *)&v157[24];
        uint64_t v143 = v174;
        *(void *)&v157[24] = v173[0];
        long long v144 = *(_OWORD *)&v173[1];
        *(_OWORD *)&v173[1] = *(_OWORD *)&v157[32];
        *(_OWORD *)&v157[32] = v144;
        v173[0] = v142;
        uint64_t v174 = v158;
        uint64_t v158 = v143;
        sub_23692F72C((uint64_t)v154);
        sub_23692F778(v157);
      }
      if (v161)
      {
        uint64_t v162 = v161;
        operator delete(v161);
      }
      if (v163[0])
      {
        v163[1] = v163[0];
        operator delete(v163[0]);
      }
      if (v164[0])
      {
        v164[1] = v164[0];
        operator delete(v164[0]);
      }
    }
  }
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if ((void)v168) {
    operator delete((void *)v168);
  }
  sub_23692F778(&v171);
}

void sub_23692F29C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void *__p,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,void *a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57)
{
  sub_23692F72C((uint64_t)&a21);
  sub_23692F778(&a27);
  if (__p)
  {
    a41 = (uint64_t)__p;
    operator delete(__p);
  }
  if (a43)
  {
    a44 = (uint64_t)a43;
    operator delete(a43);
  }
  if (a46)
  {
    a47 = (uint64_t)a46;
    operator delete(a46);
  }
  if (a53)
  {
    a54 = (uint64_t)a53;
    operator delete(a53);
  }
  unsigned int v59 = a57;
  sub_2369140AC((void ***)&a27);
  if (v59) {
    operator delete(v59);
  }
  sub_23692F778((void *)(v57 - 224));
  _Unwind_Resume(a1);
}

uint64_t sub_23692F40C(void *a1)
{
  uint64_t v2 = a1[5];
  unint64_t v3 = a1[6];
  unint64_t v4 = a1[4];
  if (v4 >= v3)
  {
    unint64_t v4 = 0;
    ++v2;
    a1[4] = 0;
    a1[5] = v2;
  }
  uint64_t v5 = a1[1];
  if (v2 == (a1[2] - v5) >> 3)
  {
    is_mul_ok(v3, 0x18uLL);
    operator new[]();
  }
  uint64_t result = *(void *)(v5 + 8 * v2) + 24 * v4;
  a1[4] = v4 + 1;
  return result;
}

uint64_t sub_23692F57C(uint64_t *a1, void *a2)
{
  uint64_t v5 = (void *)a1[1];
  unint64_t v4 = a1[2];
  if ((unint64_t)v5 >= v4)
  {
    uint64_t v7 = (void *)*a1;
    uint64_t v8 = ((uint64_t)v5 - *a1) >> 3;
    unint64_t v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 61) {
      sub_236913FC4();
    }
    uint64_t v10 = v4 - (void)v7;
    if (v10 >> 2 > v9) {
      unint64_t v9 = v10 >> 2;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v11 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11)
    {
      if (v11 >> 61) {
        sub_236913AB8();
      }
      uint64_t v12 = (char *)operator new(8 * v11);
    }
    else
    {
      uint64_t v12 = 0;
    }
    uint64_t v13 = &v12[8 * v8];
    *(void *)uint64_t v13 = *a2;
    uint64_t v6 = (uint64_t)(v13 + 8);
    if (v5 != v7)
    {
      do
      {
        uint64_t v14 = *--v5;
        *((void *)v13 - 1) = v14;
        v13 -= 8;
      }
      while (v5 != v7);
      uint64_t v5 = (void *)*a1;
    }
    *a1 = (uint64_t)v13;
    a1[1] = v6;
    a1[2] = (uint64_t)&v12[8 * v11];
    if (v5) {
      operator delete(v5);
    }
  }
  else
  {
    *uint64_t v5 = *a2;
    uint64_t v6 = (uint64_t)(v5 + 1);
  }
  a1[1] = v6;
  uint64_t v15 = *a1;
  uint64_t v16 = (v6 - *a1) >> 3;
  return sub_2369342C4(v15, v6, v16);
}

void sub_23692F690(uint64_t *a1, unint64_t a2)
{
  uint64_t v3 = a1[1];
  unint64_t v4 = (v3 - *a1) >> 5;
  if (a2 <= v4)
  {
    if (a2 < v4)
    {
      uint64_t v6 = *a1 + 32 * a2;
      if (v3 != v6)
      {
        uint64_t v7 = a1[1];
        do
        {
          unint64_t v9 = *(void **)(v7 - 32);
          v7 -= 32;
          uint64_t v8 = v9;
          if (v9)
          {
            *(void *)(v3 - 24) = v8;
            operator delete(v8);
          }
          uint64_t v3 = v7;
        }
        while (v7 != v6);
      }
      a1[1] = v6;
    }
  }
  else
  {
    unint64_t v5 = a2 - v4;
    sub_236934320(a1, v5);
  }
}

uint64_t sub_23692F72C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      uint64_t v3 = (void *)*v2;
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  unint64_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

void *sub_23692F778(void *a1)
{
  *a1 = &unk_26E9CDB90;
  uint64_t v2 = (void *)a1[1];
  uint64_t v3 = (void *)a1[2];
  if (v2 != v3)
  {
    do
    {
      if (*v2) {
        MEMORY[0x237E07550](*v2, 0x1020C8062D53EE8);
      }
      ++v2;
    }
    while (v2 != v3);
    uint64_t v2 = (void *)a1[1];
  }
  if (v2)
  {
    a1[2] = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_23692F808(void *a1@<X0>, void **a2@<X8>, float a3@<S0>)
{
  if ((int)(((a1[4] - a1[3]) >> 3) - 1) <= 0)
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  else
  {
    unint64_t v6 = a1[16] + a1[17] * a1[18];
    LODWORD(v48[0]) = 0;
    sub_23692C238(__p, v6, v48);
    sub_23692DED8(a1, (uint64_t *)v48, a3);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    *(_OWORD *)std::string __p = *(_OWORD *)v48;
    int v51 = v49;
    uint64_t v46 = sub_236942CF0();
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    v48[0] = 0;
    v48[1] = 0;
    uint64_t v49 = 0;
    int v7 = ((a1[4] - a1[3]) >> 3) - 1;
    uint64_t v8 = **(void **)(a1[6] + 24 * (v7 & ~(v7 >> 31)));
    float v9 = *((float *)__p[0] + *(unsigned int *)(v8 + 24));
    do
    {
      uint64_t v10 = (float *)v48[0];
      v48[1] = v48[0];
      unint64_t v11 = (uint64_t *)(a1[9] + 24 * *(unsigned int *)(v8 + 16));
      uint64_t v13 = *v11;
      uint64_t v12 = v11[1];
      uint64_t v14 = (float *)v48[0];
      if (*v11 != v12)
      {
        do
        {
          float v15 = exp((float)((float)(*((float *)__p[0] + *(unsigned int *)(*(void *)v13 + 24))
                                  + (float)(a3 * *(float *)(*(void *)v13 + 32)))
                          - v9));
          if (v10 >= v49)
          {
            uint64_t v16 = (float *)v48[0];
            uint64_t v17 = ((char *)v10 - (char *)v48[0]) >> 2;
            unint64_t v18 = v17 + 1;
            if ((unint64_t)(v17 + 1) >> 62) {
              sub_236913FC4();
            }
            uint64_t v19 = (char *)v49 - (char *)v48[0];
            if (((char *)v49 - (char *)v48[0]) >> 1 > v18) {
              unint64_t v18 = v19 >> 1;
            }
            if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v20 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v20 = v18;
            }
            if (v20)
            {
              float v21 = (char *)sub_236914FFC((uint64_t)&v49, v20);
              uint64_t v16 = (float *)v48[0];
              uint64_t v10 = (float *)v48[1];
            }
            else
            {
              float v21 = 0;
            }
            int v22 = (float *)&v21[4 * v17];
            *int v22 = v15;
            int v23 = v22 + 1;
            while (v10 != v16)
            {
              int v24 = *((_DWORD *)v10-- - 1);
              *((_DWORD *)v22-- - 1) = v24;
            }
            v48[0] = v22;
            v48[1] = v23;
            uint64_t v49 = (float *)&v21[4 * v20];
            if (v16) {
              operator delete(v16);
            }
            uint64_t v10 = (float *)v23;
          }
          else
          {
            *v10++ = v15;
          }
          v48[1] = v10;
          v13 += 8;
        }
        while (v13 != v12);
        uint64_t v14 = (float *)v48[0];
      }
      sub_23692C2BC((uint64_t)v47, v14, v10);
      unsigned int v25 = *(_DWORD *)(v8 + 16);
      uint64_t v26 = a1[9];
      uint64_t v8 = *(void *)(*(void *)(v26 + 24 * v25) + 8 * (int)sub_23692C5DC((uint64_t)v47, v46, (double **)v47));
      uint64_t v27 = **(void **)a1[9];
      if (v8 != v27)
      {
        float v9 = *((float *)__p[0] + *(unsigned int *)(v8 + 24));
        int v29 = a2[1];
        unint64_t v28 = (unint64_t)a2[2];
        if ((unint64_t)v29 >= v28)
        {
          uint64_t v31 = ((char *)v29 - (unsigned char *)*a2) >> 3;
          if ((unint64_t)(v31 + 1) >> 61) {
            sub_236913FC4();
          }
          uint64_t v32 = v28 - (void)*a2;
          uint64_t v33 = v32 >> 2;
          if (v32 >> 2 <= (unint64_t)(v31 + 1)) {
            uint64_t v33 = v31 + 1;
          }
          if ((unint64_t)v32 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v34 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v34 = v33;
          }
          if (v34) {
            uint64_t v35 = (char *)sub_2369147B8((uint64_t)(a2 + 2), v34);
          }
          else {
            uint64_t v35 = 0;
          }
          unint64_t v36 = &v35[8 * v31];
          *(void *)unint64_t v36 = v8;
          uint64_t v30 = v36 + 8;
          BOOL v38 = (char *)*a2;
          unint64_t v37 = (char *)a2[1];
          if (v37 != *a2)
          {
            do
            {
              uint64_t v39 = *((void *)v37 - 1);
              v37 -= 8;
              *((void *)v36 - 1) = v39;
              v36 -= 8;
            }
            while (v37 != v38);
            unint64_t v37 = (char *)*a2;
          }
          *a2 = v36;
          a2[1] = v30;
          a2[2] = &v35[8 * v34];
          if (v37) {
            operator delete(v37);
          }
        }
        else
        {
          *int v29 = v8;
          uint64_t v30 = v29 + 1;
        }
        a2[1] = v30;
      }
      if (v47[0])
      {
        v47[1] = v47[0];
        operator delete(v47[0]);
      }
    }
    while (v8 != v27);
    unint64_t v41 = (unint64_t)*a2;
    uint64_t v40 = (char *)a2[1];
    if (*a2 != v40)
    {
      uint64_t v42 = v40 - 8;
      if ((unint64_t)v42 > v41)
      {
        unint64_t v43 = v41 + 8;
        do
        {
          uint64_t v44 = *(void *)(v43 - 8);
          *(void *)(v43 - 8) = *(void *)v42;
          *(void *)uint64_t v42 = v44;
          v42 -= 8;
          BOOL v45 = v43 >= (unint64_t)v42;
          v43 += 8;
        }
        while (!v45);
      }
    }
    if (v48[0])
    {
      v48[1] = v48[0];
      operator delete(v48[0]);
    }
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
  }
}

void sub_23692FBC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_23692FC2C(uint64_t a1, void *a2)
{
  float v4 = *(float *)(a1 + 104);
  uint64_t v5 = ((a2[4] - a2[3]) >> 3) - 1;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  sub_236917D6C(&__p, *(int *)(a1 + 92) + 1);
  uint64_t v42 = v5;
  if ((int)v5 < 1) {
    goto LABEL_40;
  }
  uint64_t v43 = 0;
  uint64_t v8 = 0;
  float v9 = v4 + -10.0;
  uint64_t v41 = v6 + (int)v7;
  do
  {
    uint64_t v10 = *(unsigned char **)(a2[3] + 8 * v8);
    unint64_t v11 = (char *)__p;
    unint64_t v12 = (v46 - (unsigned char *)__p) >> 4;
    uint64_t v13 = *(_DWORD **)(a1 + 40);
    uint64_t v14 = (*v13 >> 10 << ((*v13 >> 6) & 8));
    if ((v41 - (void)v10) << 32)
    {
      uint64_t v15 = 0;
      unint64_t v16 = 0;
      do
      {
        uint64_t v17 = v10[v15];
        uint64_t v18 = v14 ^ v17;
        unsigned int v19 = v13[v18];
        if ((v19 & 0x800000FF) != v17) {
          break;
        }
        uint64_t v14 = v18 ^ (v19 >> 10 << ((v19 >> 6) & 8));
        if ((v19 & 0x100) != 0)
        {
          if (v16 < v12)
          {
            unint64_t v20 = &v11[16 * v16];
            *(_DWORD *)unint64_t v20 = v13[v14] & 0x7FFFFFFF;
            *((void *)v20 + 1) = v15 + 1;
          }
          ++v16;
        }
        ++v15;
      }
      while (v41 - v10 != v15);
    }
    else
    {
      unsigned int v21 = *v10;
      if (*v10)
      {
        unint64_t v16 = 0;
        uint64_t v22 = 1;
        do
        {
          uint64_t v23 = v14 ^ v21;
          unsigned int v24 = v13[v23];
          if ((v24 & 0x800000FF) != v21) {
            break;
          }
          uint64_t v14 = v23 ^ (v24 >> 10 << ((v24 >> 6) & 8));
          if ((v24 & 0x100) != 0)
          {
            if (v16 < v12)
            {
              unsigned int v25 = &v11[16 * v16];
              *(_DWORD *)unsigned int v25 = v13[v14] & 0x7FFFFFFF;
              *((void *)v25 + 1) = v22;
            }
            ++v16;
          }
          unsigned int v21 = v10[v22++];
        }
        while (v21);
      }
      else
      {
        unint64_t v16 = 0;
      }
    }
    if (v16 >= v12)
    {
      char v44 = 1;
      uint64_t v26 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"unigram_model.cc", 16);
      sub_236914270(v26, (uint64_t)"(", 1);
      uint64_t v27 = (void *)std::ostream::operator<<();
      unint64_t v28 = sub_236914270(v27, (uint64_t)") [", 3);
      int v29 = sub_236914270(v28, (uint64_t)"(num_nodes) < (trie_results.size())", 35);
      sub_236914270(v29, (uint64_t)"] ", 2);
      sub_23691311C(&v44);
    }
    if (!v16)
    {
LABEL_38:
      uint64_t v40 = sub_23692D980((uint64_t)a2, v8, 1);
      *(_DWORD *)(v40 + 28) = *(_DWORD *)(a1 + 88);
      *(float *)(v40 + 32) = v9;
      goto LABEL_39;
    }
    uint64_t v30 = 0;
    BOOL v31 = 0;
    do
    {
      while (1)
      {
        uint64_t v32 = (unint64_t *)(a2[3] + v43);
        int v33 = -1;
        do
        {
          unint64_t v34 = *v32++;
          ++v33;
        }
        while (v34 < (unint64_t)&v10[*((void *)__p + 2 * v30 + 1)]);
        uint64_t v35 = *((unsigned int *)__p + 4 * v30);
        if ((*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 8) + 128))(*(void *)(a1 + 8), v35)) {
          break;
        }
        uint64_t v36 = v8;
        uint64_t v37 = sub_23692D980((uint64_t)a2, v8, v33);
        *(_DWORD *)(v37 + 28) = v35;
        if ((*(unsigned int (**)(void, uint64_t))(**(void **)(a1 + 8) + 136))(*(void *)(a1 + 8), v35)) {
          double v38 = (float)(*(float *)(a1 + 108) * (float)v33) + -0.1;
        }
        else {
          double v38 = (*(float (**)(void, uint64_t))(**(void **)(a1 + 8) + 96))(*(void *)(a1 + 8), v35);
        }
        float v39 = v38;
        *(float *)(v37 + 32) = v39;
        if (!v31)
        {
          BOOL v31 = *(_DWORD *)(v37 + 20) == 1;
          uint64_t v8 = v36;
          break;
        }
        ++v30;
        BOOL v31 = 1;
        uint64_t v8 = v36;
        if (v30 == v16) {
          goto LABEL_39;
        }
      }
      ++v30;
    }
    while (v30 != v16);
    if (!v31) {
      goto LABEL_38;
    }
LABEL_39:
    ++v8;
    v43 += 8;
  }
  while (v8 != v42);
LABEL_40:
  if (__p)
  {
    uint64_t v46 = __p;
    operator delete(__p);
  }
}

void sub_236930000(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_236930034(uint64_t a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  (*(void (**)(void **__return_ptr))(*(void *)a1 + 16))(&__p);
  unint64_t v12 = __p;
  sub_236944CE4((uint64_t *)&__p);
  if (v12)
  {
    sub_236944F00(a6, a1 + 96);
  }
  else
  {
    int v13 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 128))(a1);
    sub_23693024C(a1 + 24, a2, a3, a4, v13, (uint64_t *)&__p);
    uint64_t v14 = (unsigned int *)__p;
    uint64_t v15 = v22;
    if (__p != v22)
    {
      do
      {
        uint64_t v16 = *v14;
        if (((*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 144))(a1, v16) & 1) == 0
          && ((*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 152))(a1, v16) & 1) == 0)
        {
          v20[0] = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 120))(a1, v16);
          v20[1] = v17;
          unint64_t v18 = a5[1];
          if (v18 >= a5[2])
          {
            uint64_t v19 = sub_23692C87C(a5, (uint64_t)v20);
          }
          else
          {
            sub_23692C98C(a5 + 16, (unsigned char *)a5[1], (uint64_t)v20);
            uint64_t v19 = v18 + 24;
            a5[1] = v18 + 24;
          }
          a5[1] = v19;
        }
        v14 += 4;
      }
      while (v14 != v15);
    }
    sub_236944F00(a6, a1 + 96);
    if (__p)
    {
      uint64_t v22 = (unsigned int *)__p;
      operator delete(__p);
    }
  }
}

void sub_23693021C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_23693024C(uint64_t a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t *a6@<X8>)
{
  if (a4 != -1) {
    a5 = a4;
  }
  sub_236917D6C(a6, a5);
  unint64_t v12 = sub_236933014(a1, a2, *a6, (a6[1] - *a6) >> 4, a3, a4);
  sub_23693331C((uint64_t)a6, v12);
}

void sub_2369302CC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_2369302E8(uint64_t a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  (*(void (**)(void **__return_ptr))(*(void *)a1 + 16))(&__p);
  unint64_t v12 = __p;
  sub_236944CE4((uint64_t *)&__p);
  if (v12)
  {
    sub_236944F00(a6, a1 + 96);
  }
  else
  {
    int v13 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 128))(a1);
    sub_23693024C(a1 + 24, a2, a3, a4, v13, (uint64_t *)&__p);
    uint64_t v14 = (unsigned int *)__p;
    uint64_t v15 = v29;
    if (__p != v29)
    {
      do
      {
        uint64_t v16 = *v14;
        if (((*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 144))(a1, v16) & 1) == 0
          && ((*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 152))(a1, v16) & 1) == 0)
        {
          unint64_t v18 = *(_DWORD **)(a5 + 8);
          unint64_t v17 = *(void *)(a5 + 16);
          if ((unint64_t)v18 >= v17)
          {
            unint64_t v20 = *(_DWORD **)a5;
            uint64_t v21 = ((uint64_t)v18 - *(void *)a5) >> 2;
            unint64_t v22 = v21 + 1;
            if ((unint64_t)(v21 + 1) >> 62) {
              sub_236913FC4();
            }
            uint64_t v23 = v17 - (void)v20;
            if (v23 >> 1 > v22) {
              unint64_t v22 = v23 >> 1;
            }
            if ((unint64_t)v23 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v24 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v24 = v22;
            }
            if (v24)
            {
              unsigned int v25 = (char *)sub_236914FFC(a5 + 16, v24);
              unint64_t v20 = *(_DWORD **)a5;
              unint64_t v18 = *(_DWORD **)(a5 + 8);
            }
            else
            {
              unsigned int v25 = 0;
            }
            uint64_t v26 = &v25[4 * v21];
            *(_DWORD *)uint64_t v26 = v16;
            uint64_t v19 = v26 + 4;
            while (v18 != v20)
            {
              int v27 = *--v18;
              *((_DWORD *)v26 - 1) = v27;
              v26 -= 4;
            }
            *(void *)a5 = v26;
            *(void *)(a5 + 8) = v19;
            *(void *)(a5 + 16) = &v25[4 * v24];
            if (v20) {
              operator delete(v20);
            }
          }
          else
          {
            *unint64_t v18 = v16;
            uint64_t v19 = v18 + 1;
          }
          *(void *)(a5 + 8) = v19;
        }
        v14 += 4;
      }
      while (v14 != v15);
    }
    sub_236944F00(a6, a1 + 96);
    if (__p)
    {
      int v29 = (unsigned int *)__p;
      operator delete(__p);
    }
  }
}

void sub_236930520(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_236930544(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2369306AC(a1);
  *(void *)(v4 + 104) = 0;
  *(_DWORD *)(v4 + 112) = 0;
  *(void *)uint64_t v4 = &unk_26E9CDA48;
  *(void *)(v4 + 8) = a2 + 16;
  sub_236911090(v4);
  unint64_t v5 = 0;
  *(void *)(a1 + 104) = 0x8000007F7FFFFFLL;
  while (v5 < (*(int (**)(void))(**(void **)(a1 + 8) + 16))(*(void *)(a1 + 8)))
  {
    if ((*(unsigned int (**)(void, unint64_t))(**(void **)(a1 + 8) + 104))(*(void *)(a1 + 8), v5))
    {
      float v6 = (*(float (**)(void, unint64_t))(**(void **)(a1 + 8) + 96))(*(void *)(a1 + 8), v5);
      if (v6 >= *(float *)(a1 + 104)) {
        float v6 = *(float *)(a1 + 104);
      }
      *(float *)(a1 + 104) = v6;
      float v7 = (*(float (**)(void, unint64_t))(**(void **)(a1 + 8) + 96))(*(void *)(a1 + 8), v5);
      if (*(float *)(a1 + 108) >= v7) {
        float v7 = *(float *)(a1 + 108);
      }
      *(float *)(a1 + 108) = v7;
    }
    ++v5;
  }
  return a1;
}

void sub_23693068C(_Unwind_Exception *a1)
{
  sub_236910A8C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2369306AC(uint64_t a1)
{
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_26E9CD490;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 24) = &unk_26E9CD5A0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 4sub_23692A244(&a9, 0) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = &unk_26E9CD5A0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 8sub_23692A244(&a9, 0) = 0;
  *(_DWORD *)(a1 + 88) = 0;
  sub_236944CDC((void *)(a1 + 96));
  return a1;
}

void sub_236930750(_Unwind_Exception *a1)
{
  sub_23690FB40(v3);
  sub_23690FB40(v2);
  unint64_t v5 = *v1;
  *uint64_t v1 = 0;
  if (v5) {
    sub_2369141F4((uint64_t)v1, v5);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_236930784(uint64_t a1, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  BOOL v7 = a4 > 7;
  if (a4 <= 7) {
    unint64_t v8 = 0;
  }
  else {
    unint64_t v8 = a4 - 8;
  }
  if (v7) {
    float v9 = (char *)(a3 + 2);
  }
  else {
    float v9 = "";
  }
  uint64_t v10 = sub_23690FBA4(a1, a2, v9, v8);
  *(_DWORD *)(v10 + 104) = 0;
  unint64_t v11 = (_DWORD *)(v10 + 104);
  *(void *)uint64_t v10 = &unk_26E9CDA48;
  *(_DWORD *)(v10 + 108) = 0;
  unint64_t v12 = (_DWORD *)(v10 + 108);
  *(_DWORD *)(v10 + 112) = 0;
  int v13 = (uint64_t *)(v10 + 96);
  sub_236944F00(&v17, v10 + 96);
  uint64_t v14 = v17;
  sub_236944CE4(&v17);
  if (!v14)
  {
    sub_236930900(a3, a4, v11, &v17);
    sub_236944F04(v13, &v17);
    sub_236944CE4(&v17);
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)a1 + 16))(&v17, a1);
    uint64_t v15 = v17;
    sub_236944CE4(&v17);
    if (!v15)
    {
      sub_236930900(a3 + 1, a4 - 4, v12, &v17);
      sub_236944F04(v13, &v17);
      sub_236944CE4(&v17);
    }
  }
  return a1;
}

void sub_2369308CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_236944CE4((uint64_t *)va);
  sub_236910A8C(v2);
  _Unwind_Resume(a1);
}

void *sub_236930900@<X0>(_DWORD *a1@<X0>, unint64_t a2@<X1>, _DWORD *a3@<X2>, void *a4@<X8>)
{
  if (a2 <= 3)
  {
    unsigned int v7 = 13;
    float v6 = (void *)sub_236912F84((uint64_t)v8);
    sub_236914270(v6, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/util.h", 62);
    sub_236914270(v8, (uint64_t)"(", 1);
    std::ostream::operator<<();
    sub_236914270(v8, (uint64_t)") [", 3);
    sub_236914270(v8, (uint64_t)"string.size() >= sizeof(T)", 26);
    sub_236914270(v8, (uint64_t)"] ", 2);
    sub_2369107FC(&v7, (uint64_t)a4);
    v8[0] = *MEMORY[0x263F8C2C8];
    *(void *)((char *)v8 + *(void *)(v8[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
    v8[1] = MEMORY[0x263F8C318] + 16;
    if (v9 < 0) {
      operator delete((void *)v8[9]);
    }
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    return (void *)MEMORY[0x237E07510](&v10);
  }
  else
  {
    *a3 = *a1;
    return sub_236944CDC(a4);
  }
}

void sub_236930AE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_236930B04(void *a1)
{
  sub_236910A8C(a1);
  JUMPOUT(0x237E07580);
}

void sub_236930B3C(_DWORD *a1@<X0>, unsigned __int8 *a2@<X1>, unint64_t a3@<X2>, void *a4@<X8>)
{
  if (a1[28])
  {
    (*(void (**)(void **__return_ptr, _DWORD *))(*(void *)a1 + 16))(&v25, a1);
    if (v25)
    {
      sub_236944CE4((uint64_t *)&v25);
LABEL_4:
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      return;
    }
    sub_236944CE4((uint64_t *)&v25);
    if (!a3) {
      goto LABEL_4;
    }
    unsigned int v25 = &unk_26E9CDA28;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    long long v30 = 0u;
    uint64_t v31 = 0;
    uint64_t v32 = &unk_26E9CDB60;
    long long v33 = 0u;
    long long v34 = 0u;
    uint64_t v35 = 0;
    uint64_t v36 = 1024;
    sub_23692D498((uint64_t)&v25, a2, a3);
    sub_23692FC2C((uint64_t)a1, &v25);
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    sub_23692DBA8(&v25, (uint64_t)&v23);
    unint64_t v8 = v23;
    char v9 = v24;
    if (v23 != v24)
    {
      uint64_t v10 = a4 + 2;
      unint64_t v11 = (char *)a4[1];
      do
      {
        uint64_t v12 = *v8;
        if ((unint64_t)v11 >= *v10)
        {
          unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v11[-*a4] >> 3);
          unint64_t v14 = v13 + 1;
          if (v13 + 1 > 0xAAAAAAAAAAAAAAALL) {
            sub_236913FC4();
          }
          if (0x5555555555555556 * ((uint64_t)(*v10 - *a4) >> 3) > v14) {
            unint64_t v14 = 0x5555555555555556 * ((uint64_t)(*v10 - *a4) >> 3);
          }
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v10 - *a4) >> 3) >= 0x555555555555555) {
            unint64_t v15 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v15 = v14;
          }
          uint64_t v16 = (char *)sub_236913FDC((uint64_t)(a4 + 2), v15);
          unint64_t v18 = &v16[24 * v13];
          *(_OWORD *)unint64_t v18 = *(_OWORD *)v12;
          *((_DWORD *)v18 + 4) = *(_DWORD *)(v12 + 28);
          unint64_t v20 = (char *)*a4;
          uint64_t v19 = (char *)a4[1];
          uint64_t v21 = v18;
          if (v19 != (char *)*a4)
          {
            do
            {
              long long v22 = *(_OWORD *)(v19 - 24);
              *((void *)v21 - 1) = *((void *)v19 - 1);
              *(_OWORD *)(v21 - 24) = v22;
              v21 -= 24;
              v19 -= 24;
            }
            while (v19 != v20);
            uint64_t v19 = (char *)*a4;
          }
          unint64_t v11 = v18 + 24;
          *a4 = v21;
          a4[1] = v18 + 24;
          a4[2] = &v16[24 * v17];
          if (v19) {
            operator delete(v19);
          }
        }
        else
        {
          *(_OWORD *)unint64_t v11 = *(_OWORD *)v12;
          *((_DWORD *)v11 + 4) = *(_DWORD *)(v12 + 28);
          v11 += 24;
        }
        a4[1] = v11;
        ++v8;
      }
      while (v8 != v9);
      unint64_t v8 = v23;
    }
    if (v8)
    {
      unint64_t v24 = v8;
      operator delete(v8);
    }
    sub_23692D184((uint64_t)&v25);
  }
  else
  {
    sub_236930E4C((uint64_t)a1, (uint64_t)a2, a3, a4);
  }
}

void sub_236930E04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  unint64_t v15 = *(void **)v13;
  if (*(void *)v13)
  {
    *(void *)(v13 + 8) = v15;
    operator delete(v15);
  }
  sub_23692D184((uint64_t)&a13);
  _Unwind_Resume(a1);
}

void sub_236930E4C(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, void *a4@<X8>)
{
  (*(void (**)(long long *__return_ptr))(*(void *)a1 + 16))(&v67);
  if ((void)v67)
  {
    sub_236944CE4((uint64_t *)&v67);
LABEL_3:
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    return;
  }
  sub_236944CE4((uint64_t *)&v67);
  if (!a3) {
    goto LABEL_3;
  }
  float v8 = *(float *)(a1 + 104);
  uint64_t v9 = (a3 << 32) + 0x100000000;
  uint64_t v66 = a2;
  if (a3 << 32 == 0xFFFFFFFF00000000)
  {
    uint64_t v12 = 0;
  }
  else
  {
    if (v9 < 0) {
      sub_236913FC4();
    }
    uint64_t v10 = v9 >> 32;
    uint64_t v11 = 3 * v10;
    uint64_t v12 = (float *)operator new(12 * v10);
    uint64_t v13 = v12;
    do
    {
      *(void *)uint64_t v13 = 0xFFFFFFFFLL;
      v13[2] = NAN;
      v13 += 3;
    }
    while (v13 != &v12[v11]);
    a2 = v66;
  }
  if ((int)a3 <= 0)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
  }
  else
  {
    uint64_t v65 = a4;
    int v14 = 0;
    float v15 = v8 + -10.0;
    unint64_t v16 = (int)a3;
    int v62 = (char *)(v12 + 5);
    unint64_t v63 = a3;
    float v64 = v12;
    unint64_t v61 = (int)a3;
    do
    {
      float v17 = v12[3 * v14 + 1];
      if ((int)a3 - v14 >= asc_236999B08[(unint64_t)*(unsigned __int8 *)(a2 + v14) >> 4]) {
        int v18 = asc_236999B08[(unint64_t)*(unsigned __int8 *)(a2 + v14) >> 4];
      }
      else {
        int v18 = a3 - v14;
      }
      if (v16 <= v14) {
        goto LABEL_31;
      }
      uint64_t v19 = 0;
      char v20 = 0;
      uint64_t v21 = 0;
      uint64_t v22 = a2 + v14;
      unint64_t v23 = v16 - v14;
      unint64_t v24 = (int *)&v62[12 * v14];
      do
      {
        uint64_t v25 = *(void *)(a1 + 40);
        int v26 = *(unsigned __int8 *)(v22 + v19);
        LODWORD(v21) = (*(_DWORD *)(v25 + 4 * v21) >> 10 << ((*(_DWORD *)(v25 + 4 * v21) >> 6) & 8)) ^ v21 ^ v26;
        unsigned int v27 = *(_DWORD *)(v25 + 4 * v21);
        if ((v27 & 0x800000FF) != v26) {
          break;
        }
        if ((v27 & 0x100) != 0)
        {
          uint64_t v28 = *(_DWORD *)(v25 + 4 * ((v27 >> 10 << ((v27 >> 6) & 8)) ^ v21)) & 0x7FFFFFFF;
          if (((*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 8) + 128))(*(void *)(a1 + 8), v28) & 1) == 0)
          {
            if ((*(unsigned int (**)(void, uint64_t))(**(void **)(a1 + 8) + 136))(*(void *)(a1 + 8), v28))
            {
              double v29 = (float)(*(float *)(a1 + 108) * (float)(unint64_t)(v19 + 1)) + -0.1;
            }
            else
            {
              double v29 = (*(float (**)(void, uint64_t))(**(void **)(a1 + 8) + 96))(*(void *)(a1 + 8), v28);
            }
            double v30 = v29 + v17;
            if (*v24 == -1 || v30 > *((float *)v24 - 1))
            {
              float v31 = v30;
              *((float *)v24 - 1) = v31;
              *unint64_t v24 = v14;
              *(v24 - 2) = v28;
            }
            v20 |= v18 - 1 == v19;
          }
        }
        ++v19;
        v24 += 3;
      }
      while (v23 != v19);
      LODWORD(a3) = v63;
      uint64_t v12 = v64;
      a2 = v66;
      unint64_t v16 = v61;
      if ((v20 & 1) == 0)
      {
LABEL_31:
        uint64_t v32 = &v12[3 * v18 + 3 * v14];
        int v34 = *((_DWORD *)v32 + 2);
        long long v33 = (int *)(v32 + 2);
        float v35 = v15 + v17;
        if (v34 == -1 || v35 > *((float *)v33 - 1))
        {
          *((float *)v33 - 1) = v35;
          int *v33 = v14;
          v12[3 * v18 + 3 * v14] = *(float *)(a1 + 88);
        }
      }
      v14 += v18;
    }
    while (v14 < (int)a3);
    uint64_t v37 = 0;
    v65[2] = 0;
    double v38 = v65 + 2;
    *uint64_t v65 = 0;
    v65[1] = 0;
    unsigned int v39 = a3;
    do
    {
      uint64_t v40 = &v12[3 * v39];
      uint64_t v42 = (unsigned int *)(v40 + 2);
      unint64_t v41 = *((int *)v40 + 2);
      if (v63 < v41) {
        sub_236929BA4("string_view::substr");
      }
      int v43 = v39 - v41;
      uint64_t v44 = v66 + v41;
      if (v63 - v41 >= v43) {
        unint64_t v45 = v43;
      }
      else {
        unint64_t v45 = v63 - v41;
      }
      if ((unint64_t)v37 >= *v38)
      {
        unint64_t v47 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v37[-*v65] >> 3);
        unint64_t v48 = v47 + 1;
        if (v47 + 1 > 0xAAAAAAAAAAAAAAALL) {
          sub_236913FC4();
        }
        if (0x5555555555555556 * ((uint64_t)(*v38 - *v65) >> 3) > v48) {
          unint64_t v48 = 0x5555555555555556 * ((uint64_t)(*v38 - *v65) >> 3);
        }
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v38 - *v65) >> 3) >= 0x555555555555555) {
          unint64_t v49 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v49 = v48;
        }
        unint64_t v50 = (char *)sub_236913FDC((uint64_t)v38, v49);
        uint64_t v52 = &v50[24 * v47];
        *(void *)uint64_t v52 = v44;
        *((void *)v52 + 1) = v45;
        *((float *)v52 + 4) = *v40;
        uint64_t v46 = (char **)v65;
        float v54 = (char *)*v65;
        uint64_t v53 = (char *)v65[1];
        unint64_t v55 = v52;
        if (v53 == (char *)*v65)
        {
          uint64_t v12 = v64;
        }
        else
        {
          uint64_t v12 = v64;
          do
          {
            long long v56 = *(_OWORD *)(v53 - 24);
            *((void *)v55 - 1) = *((void *)v53 - 1);
            *(_OWORD *)(v55 - 24) = v56;
            v55 -= 24;
            v53 -= 24;
          }
          while (v53 != v54);
          uint64_t v53 = (char *)*v65;
        }
        uint64_t v37 = v52 + 24;
        *uint64_t v65 = v55;
        v65[1] = v52 + 24;
        v65[2] = &v50[24 * v51];
        if (v53) {
          operator delete(v53);
        }
      }
      else
      {
        *(void *)uint64_t v37 = v44;
        *((void *)v37 + 1) = v45;
        *((float *)v37 + 4) = *v40;
        v37 += 24;
        uint64_t v12 = v64;
        uint64_t v46 = (char **)v65;
      }
      v46[1] = v37;
      unsigned int v39 = *v42;
    }
    while ((int)*v42 > 0);
    uint64_t v57 = (long long *)*v46;
    if (*v46 != v37)
    {
      for (uint64_t i = v37 - 24; v57 < (long long *)i; i -= 24)
      {
        long long v67 = *v57;
        long long v59 = v67;
        *uint64_t v57 = *(_OWORD *)i;
        *(_OWORD *)uint64_t i = v59;
        int v60 = *((_DWORD *)v57 + 4);
        *((_DWORD *)v57 + 4) = *((_DWORD *)i + 4);
        *((_DWORD *)i + 4) = v60;
        uint64_t v57 = (long long *)((char *)v57 + 24);
      }
    }
  }
  if (v12) {
    operator delete(v12);
  }
}

void sub_236931388(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  float v15 = *(void **)a14;
  if (*(void *)a14)
  {
    *(void *)(a14 + 8) = v15;
    operator delete(v15);
  }
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2369313CC(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  (*(void (**)(void **__return_ptr))(*(void *)a1 + 16))(__p);
  if (__p[0])
  {
    sub_236944CE4((uint64_t *)__p);
LABEL_3:
    memset(__p, 0, 24);
    sub_236913EF0((char *)__p, 0, 0, 0);
    LODWORD(__p[3]) = 0;
    a5[1] = 0;
    a5[2] = 0;
    *a5 = 0;
    *(void *)&long long v38 = a5;
    BYTE8(v38) = 0;
    uint64_t v10 = (char *)operator new(0x20uLL);
    *a5 = (uint64_t)v10;
    a5[1] = (uint64_t)v10;
    a5[2] = (uint64_t)(v10 + 32);
    a5[1] = sub_236913E28((uint64_t)(a5 + 2), (uint64_t)__p, (uint64_t)&__p[4], (uint64_t)v10);
    uint64_t v11 = __p[0];
    if (!__p[0]) {
      return;
    }
    __p[1] = __p[0];
    goto LABEL_5;
  }
  sub_236944CE4((uint64_t *)__p);
  if (!a3) {
    goto LABEL_3;
  }
  if (a4 >= 1024) {
    int v12 = 1024;
  }
  else {
    int v12 = a4;
  }
  if (v12 <= 1) {
    uint64_t v13 = 1;
  }
  else {
    uint64_t v13 = v12;
  }
  if (v13 > 1)
  {
    __p[0] = &unk_26E9CDA28;
    memset(&__p[1], 0, 88);
    __p[12] = &unk_26E9CDB60;
    long long v41 = 0u;
    long long v42 = 0u;
    uint64_t v43 = 0;
    uint64_t v44 = 1024;
    sub_23692D498((uint64_t)__p, a2, a3);
    sub_23692FC2C(a1, __p);
    *a5 = 0;
    a5[1] = 0;
    a5[2] = 0;
    int v34 = a5;
    sub_23692E220(__p, v13, 0, (uint64_t *)&v38, 0.0);
    uint64_t v33 = *((void *)&v38 + 1);
    for (uint64_t i = v38; i != v33; i += 32)
    {
      float v35 = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      unint64_t v16 = *(uint64_t **)i;
      float v17 = *(uint64_t **)(i + 8);
      if (*(uint64_t **)i != v17)
      {
        int v18 = 0;
        do
        {
          uint64_t v19 = *v16;
          if (v18 >= v37)
          {
            unint64_t v20 = 0xAAAAAAAAAAAAAAABLL * ((v18 - (unsigned char *)v35) >> 3);
            unint64_t v21 = v20 + 1;
            if (v20 + 1 > 0xAAAAAAAAAAAAAAALL) {
              sub_236913FC4();
            }
            if (0x5555555555555556 * ((v37 - (unsigned char *)v35) >> 3) > v21) {
              unint64_t v21 = 0x5555555555555556 * ((v37 - (unsigned char *)v35) >> 3);
            }
            if (0xAAAAAAAAAAAAAAABLL * ((v37 - (unsigned char *)v35) >> 3) >= 0x555555555555555) {
              unint64_t v22 = 0xAAAAAAAAAAAAAAALL;
            }
            else {
              unint64_t v22 = v21;
            }
            unint64_t v23 = (char *)sub_236913FDC((uint64_t)&v37, v22);
            uint64_t v25 = &v23[24 * v20];
            *(_OWORD *)uint64_t v25 = *(_OWORD *)v19;
            *((_DWORD *)v25 + 4) = *(_DWORD *)(v19 + 28);
            unsigned int v27 = (char *)v35;
            int v26 = v36;
            uint64_t v28 = v25;
            if (v36 != v35)
            {
              do
              {
                long long v29 = *(_OWORD *)(v26 - 24);
                *((void *)v28 - 1) = *((void *)v26 - 1);
                *(_OWORD *)(v28 - 24) = v29;
                v28 -= 24;
                v26 -= 24;
              }
              while (v26 != v27);
              int v26 = (char *)v35;
            }
            int v18 = v25 + 24;
            float v35 = v28;
            uint64_t v36 = v25 + 24;
            uint64_t v37 = &v23[24 * v24];
            if (v26) {
              operator delete(v26);
            }
          }
          else
          {
            *(_OWORD *)int v18 = *(_OWORD *)v19;
            *((_DWORD *)v18 + 4) = *(_DWORD *)(v19 + 28);
            v18 += 24;
          }
          uint64_t v36 = v18;
          ++v16;
        }
        while (v16 != v17);
      }
      double v30 = (float *)(i + 24);
      unint64_t v31 = v34[1];
      if (v31 >= v34[2])
      {
        uint64_t v32 = sub_23693469C(v34, (long long **)&v35, v30);
      }
      else
      {
        sub_236934628((uint64_t)v34, (long long **)&v35, v30);
        uint64_t v32 = v31 + 32;
      }
      v34[1] = v32;
      if (v35)
      {
        uint64_t v36 = (char *)v35;
        operator delete(v35);
      }
    }
    float v35 = &v38;
    sub_2369140AC((void ***)&v35);
    sub_23692D184((uint64_t)__p);
  }
  else
  {
    (*(void (**)(long long *__return_ptr, uint64_t, unsigned __int8 *, uint64_t))(*(void *)a1 + 40))(&v38, a1, a2, a3);
    *(_OWORD *)std::string __p = v38;
    std::string __p[2] = v39;
    unsigned int v39 = 0;
    long long v38 = 0uLL;
    LODWORD(__p[3]) = 0;
    a5[1] = 0;
    a5[2] = 0;
    *a5 = 0;
    float v35 = a5;
    LOBYTE(v36) = 0;
    int v14 = (char *)operator new(0x20uLL);
    *a5 = (uint64_t)v14;
    a5[1] = (uint64_t)v14;
    a5[2] = (uint64_t)(v14 + 32);
    a5[1] = sub_236913E28((uint64_t)(a5 + 2), (uint64_t)__p, (uint64_t)&__p[4], (uint64_t)v14);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    uint64_t v11 = (void *)v38;
    if ((void)v38)
    {
      *((void *)&v38 + 1) = v38;
LABEL_5:
      operator delete(v11);
    }
  }
}

void sub_236931834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20)
{
  a12 = a11;
  sub_2369140AC((void ***)&a12);
  sub_23692D184((uint64_t)&__p);
  _Unwind_Resume(a1);
}

uint64_t *sub_236931904@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>, float a5@<S0>)
{
  (*(void (**)(void **__return_ptr))(*(void *)a1 + 16))(&v28);
  if (v28)
  {
    uint64_t result = sub_236944CE4((uint64_t *)&v28);
LABEL_3:
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    return result;
  }
  uint64_t result = sub_236944CE4((uint64_t *)&v28);
  if (!a3) {
    goto LABEL_3;
  }
  uint64_t v28 = &unk_26E9CDA28;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  uint64_t v34 = 0;
  float v35 = &unk_26E9CDB60;
  long long v36 = 0u;
  long long v37 = 0u;
  uint64_t v38 = 0;
  uint64_t v39 = 1024;
  sub_23692D498((uint64_t)&v28, a2, a3);
  sub_23692FC2C(a1, &v28);
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  sub_23692F808(&v28, (void **)&v26, a5);
  uint64_t v11 = v26;
  int v12 = v27;
  if (v26 != v27)
  {
    uint64_t v13 = 0;
    int v14 = a4 + 2;
    do
    {
      uint64_t v15 = *v11;
      if ((unint64_t)v13 >= *v14)
      {
        unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v13[-*a4] >> 3);
        unint64_t v17 = v16 + 1;
        if (v16 + 1 > 0xAAAAAAAAAAAAAAALL) {
          sub_236913FC4();
        }
        if (0x5555555555555556 * ((uint64_t)(*v14 - *a4) >> 3) > v17) {
          unint64_t v17 = 0x5555555555555556 * ((uint64_t)(*v14 - *a4) >> 3);
        }
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v14 - *a4) >> 3) >= 0x555555555555555) {
          unint64_t v18 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v18 = v17;
        }
        uint64_t v19 = (char *)sub_236913FDC((uint64_t)(a4 + 2), v18);
        unint64_t v21 = &v19[24 * v16];
        *(_OWORD *)unint64_t v21 = *(_OWORD *)v15;
        *((_DWORD *)v21 + 4) = *(_DWORD *)(v15 + 28);
        unint64_t v23 = (char *)*a4;
        unint64_t v22 = (char *)a4[1];
        uint64_t v24 = v21;
        if (v22 != (char *)*a4)
        {
          do
          {
            long long v25 = *(_OWORD *)(v22 - 24);
            *((void *)v24 - 1) = *((void *)v22 - 1);
            *(_OWORD *)(v24 - 24) = v25;
            v24 -= 24;
            v22 -= 24;
          }
          while (v22 != v23);
          unint64_t v22 = (char *)*a4;
        }
        uint64_t v13 = v21 + 24;
        *a4 = v24;
        a4[1] = v21 + 24;
        a4[2] = &v19[24 * v20];
        if (v22) {
          operator delete(v22);
        }
      }
      else
      {
        *(_OWORD *)uint64_t v13 = *(_OWORD *)v15;
        *((_DWORD *)v13 + 4) = *(_DWORD *)(v15 + 28);
        v13 += 24;
      }
      a4[1] = v13;
      ++v11;
    }
    while (v11 != v12);
    uint64_t v11 = v26;
  }
  if (v11)
  {
    unsigned int v27 = v11;
    operator delete(v11);
  }
  return (uint64_t *)sub_23692D184((uint64_t)&v28);
}

void sub_236931B90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, char a13)
{
}

void sub_236931BD4(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, char a5@<W4>, int a6@<W5>, uint64_t *a7@<X8>, float a8@<S0>)
{
  (*(void (**)(void ***__return_ptr))(*(void *)a1 + 16))(&v122);
  if (v122)
  {
    sub_236944CE4((uint64_t *)&v122);
LABEL_3:
    *a7 = 0;
    a7[1] = 0;
    a7[2] = 0;
    return;
  }
  sub_236944CE4((uint64_t *)&v122);
  if (!a3) {
    goto LABEL_3;
  }
  uint64_t v103 = a7;
  uint64_t v134 = 0;
  uint64_t v135 = 0;
  unint64_t v136 = 0;
  unint64_t v122 = (void **)&unk_26E9CDA28;
  long long v123 = 0u;
  long long v124 = 0u;
  long long v125 = 0u;
  long long v126 = 0u;
  long long v127 = 0u;
  uint64_t v128 = 0;
  uint64_t v129 = &unk_26E9CDB60;
  long long v130 = 0u;
  long long v131 = 0u;
  uint64_t v132 = 0;
  uint64_t v133 = 1024;
  sub_23692D498((uint64_t)&v122, a2, a3);
  sub_23692FC2C(a1, &v122);
  sub_23692DED8(&v122, (uint64_t *)v121, a8);
  float v16 = *((float *)v121[0]
        + *(unsigned int *)(**(void **)(*((void *)&v125 + 1)
                                        + 24
                                        * ((((*((void *)&v124 + 1) - (void)v124) >> 3) - 1) & ~((int)(((*((void *)&v124 + 1) - (void)v124) >> 3) - 1) >> 31)))
                          + 24));
  if (a6)
  {
    if ((a5 & 1) == 0)
    {
      if ((int)sub_236942B98() <= 2)
      {
        LOBYTE(__p[0]) = 0;
        uint64_t v34 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"unigram_model.cc", 16);
        sub_236914270(v34, (uint64_t)"(", 1);
        float v35 = (void *)std::ostream::operator<<();
        long long v36 = sub_236914270(v35, (uint64_t)") ", 2);
        long long v37 = sub_236914270(v36, (uint64_t)"LOG(", 4);
        uint64_t v38 = sub_236914270(v37, (uint64_t)"ERROR", 5);
        uint64_t v39 = sub_236914270(v38, (uint64_t)") ", 2);
        sub_236914270(v39, (uint64_t)"include_best not supported for wor false", 40);
        sub_23691311C(__p);
      }
      uint64_t v40 = a7;
      goto LABEL_114;
    }
    int v104 = a6;
    uint64_t v107 = a3;
    unint64_t v105 = a2;
    uint64_t v118 = 0;
    char v119 = 0;
    uint64_t v120 = 0;
    sub_23692DBA8(&v122, (uint64_t)__p);
    unint64_t v17 = (uint64_t *)__p[0];
    unint64_t v18 = (uint64_t *)__p[1];
    if (__p[0] != __p[1])
    {
      uint64_t v19 = v119;
      do
      {
        uint64_t v20 = *v17;
        if (v19 >= (long long *)v120)
        {
          unint64_t v21 = 0xAAAAAAAAAAAAAAABLL * (((char *)v19 - (char *)v118) >> 3);
          unint64_t v22 = v21 + 1;
          if (v21 + 1 > 0xAAAAAAAAAAAAAAALL) {
            sub_236913FC4();
          }
          if (0x5555555555555556 * ((v120 - (char *)v118) >> 3) > v22) {
            unint64_t v22 = 0x5555555555555556 * ((v120 - (char *)v118) >> 3);
          }
          if (0xAAAAAAAAAAAAAAABLL * ((v120 - (char *)v118) >> 3) >= 0x555555555555555) {
            unint64_t v23 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v23 = v22;
          }
          uint64_t v24 = (char *)sub_236913FDC((uint64_t)&v120, v23);
          int v26 = &v24[24 * v21];
          *(_OWORD *)int v26 = *(_OWORD *)v20;
          *((_DWORD *)v26 + 4) = *(_DWORD *)(v20 + 28);
          uint64_t v28 = v118;
          unsigned int v27 = v119;
          long long v29 = (long long *)v26;
          if (v119 != v118)
          {
            do
            {
              long long v30 = *(long long *)((char *)v27 - 24);
              *((void *)v29 - 1) = *((void *)v27 - 1);
              *(long long *)((char *)v29 - 24) = v30;
              long long v29 = (long long *)((char *)v29 - 24);
              unsigned int v27 = (long long *)((char *)v27 - 24);
            }
            while (v27 != v28);
            unsigned int v27 = v118;
          }
          uint64_t v19 = (long long *)(v26 + 24);
          uint64_t v118 = v29;
          char v119 = (long long *)(v26 + 24);
          uint64_t v120 = &v24[24 * v25];
          if (v27) {
            operator delete(v27);
          }
        }
        else
        {
          *uint64_t v19 = *(_OWORD *)v20;
          *((_DWORD *)v19 + 4) = *(_DWORD *)(v20 + 28);
          uint64_t v19 = (long long *)((char *)v19 + 24);
        }
        char v119 = v19;
        ++v17;
      }
      while (v17 != v18);
    }
    double v116 = 0.0;
    long long v31 = v135;
    if ((unint64_t)v135 >= v136)
    {
      uint64_t v33 = sub_236934908(&v134, &v118, &v116);
    }
    else
    {
      *(void *)uint64_t v135 = 0;
      *((void *)v31 + 1) = 0;
      *((void *)v31 + 2) = 0;
      sub_236913EF0(v31, v118, v119, 0xAAAAAAAAAAAAAAABLL * (((char *)v119 - (char *)v118) >> 3));
      float v32 = v116;
      *((float *)v31 + 6) = v32;
      uint64_t v33 = (uint64_t)(v31 + 32);
    }
    a2 = v105;
    a3 = v107;
    a6 = v104;
    uint64_t v135 = (char *)v33;
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    if (v118)
    {
      char v119 = v118;
      operator delete(v118);
    }
  }
  if (a5)
  {
    sub_23692E220(&v122, a4 + 1, 1, (uint64_t *)&v118, a8);
    if (a6)
    {
      sub_236934A1C(&v116, ((char *)v119 - (char *)v118) >> 5);
      long long v42 = v118;
      long long v41 = v119;
      if (v119 != v118)
      {
        uint64_t v43 = 0;
        uint64_t v44 = 0;
        unint64_t v45 = 0;
        do
        {
          if (&v42[v43] != (long long *)(*(void *)&v116 + v44))
          {
            sub_236934AC0((char *)(*(void *)&v116 + v44), *(char **)&v42[v43], *((void *)&v42[v43] + 1), (uint64_t)(*((void *)&v42[v43] + 1) - *(void *)&v42[v43]) >> 3);
            long long v42 = v118;
            long long v41 = v119;
          }
          ++v45;
          v44 += 24;
          v43 += 2;
        }
        while (v45 < ((char *)v41 - (char *)v42) >> 5);
      }
      sub_23692DBA8(&v122, (uint64_t)__p);
      uint64_t v46 = sub_236934BCC(*(uint64_t *)&v116, *(uint64_t *)&v117, (uint64_t)__p);
      uint64_t v47 = (int)(-1431655765 * ((unint64_t)(v46 - *(void *)&v116) >> 3));
      if (v47 == ((char *)v119 - (char *)v118) >> 5)
      {
        unint64_t v49 = v119 - 2;
        unint64_t v48 = (void *)*((void *)v119 - 4);
        if (v48)
        {
          *((void *)v119 - 3) = v48;
          operator delete(v48);
        }
      }
      else
      {
        sub_236934C3C((__n128 *)&v118[2 * v47 + 2], (__n128 *)v119, (uint64_t)&v118[2 * v47]);
        unint64_t v49 = v69;
        float v70 = v119;
        if (v119 != v69)
        {
          uint64_t v71 = v119;
          do
          {
            uint64_t v73 = (void *)*((void *)v71 - 4);
            v71 -= 2;
            unint64_t v72 = v73;
            if (v73)
            {
              *((void *)v70 - 3) = v72;
              operator delete(v72);
            }
            float v70 = v71;
          }
          while (v71 != v49);
        }
      }
      char v119 = v49;
      if (__p[0])
      {
        __p[1] = __p[0];
        operator delete(__p[0]);
      }
      __p[0] = &v116;
      sub_236929CA8((void ***)__p);
    }
    uint64_t v74 = (void *)*((void *)v119 - 4);
    uint64_t v109 = v119 - 2;
    float v75 = *((float *)v119 - 2);
    if (v74)
    {
      *((void *)v119 - 3) = v74;
      operator delete(v74);
    }
    char v119 = v109;
    for (uint64_t i = v118; i != v109; i += 2)
    {
      memset(__p, 0, 24);
      long long v77 = *(uint64_t **)i;
      uint64_t v78 = (uint64_t *)*((void *)i + 1);
      if (*(uint64_t **)i == v78)
      {
        float v80 = 0.0;
      }
      else
      {
        uint64_t v79 = 0;
        float v80 = 0.0;
        do
        {
          uint64_t v81 = *v77;
          float v82 = *(float *)(*v77 + 32);
          if (v79 >= __p[2])
          {
            unint64_t v83 = 0xAAAAAAAAAAAAAAABLL * ((v79 - (char *)__p[0]) >> 3);
            unint64_t v84 = v83 + 1;
            if (v83 + 1 > 0xAAAAAAAAAAAAAAALL) {
              sub_236913FC4();
            }
            if (0x5555555555555556 * (((char *)__p[2] - (char *)__p[0]) >> 3) > v84) {
              unint64_t v84 = 0x5555555555555556 * (((char *)__p[2] - (char *)__p[0]) >> 3);
            }
            if (0xAAAAAAAAAAAAAAABLL * (((char *)__p[2] - (char *)__p[0]) >> 3) >= 0x555555555555555) {
              unint64_t v85 = 0xAAAAAAAAAAAAAAALL;
            }
            else {
              unint64_t v85 = v84;
            }
            int v86 = (char *)sub_236913FDC((uint64_t)&__p[2], v85);
            std::string::size_type v88 = &v86[24 * v83];
            *(_OWORD *)std::string::size_type v88 = *(_OWORD *)v81;
            *((_DWORD *)v88 + 4) = *(_DWORD *)(v81 + 28);
            long long v90 = (char *)__p[0];
            uint64_t v89 = (char *)__p[1];
            uint64_t v91 = v88;
            if (__p[1] != __p[0])
            {
              do
              {
                long long v92 = *(_OWORD *)(v89 - 24);
                *((void *)v91 - 1) = *((void *)v89 - 1);
                *(_OWORD *)(v91 - 24) = v92;
                v91 -= 24;
                v89 -= 24;
              }
              while (v89 != v90);
              uint64_t v89 = (char *)__p[0];
            }
            uint64_t v79 = v88 + 24;
            __p[0] = v91;
            __p[1] = v88 + 24;
            std::string __p[2] = &v86[24 * v87];
            if (v89) {
              operator delete(v89);
            }
          }
          else
          {
            *(_OWORD *)uint64_t v79 = *(_OWORD *)v81;
            *((_DWORD *)v79 + 4) = *(_DWORD *)(v81 + 28);
            v79 += 24;
          }
          __p[1] = v79;
          float v80 = v80 + (float)(a8 * v82);
          ++v77;
        }
        while (v77 != v78);
      }
      *(float *)&double v116 = v80 - v16;
      uint64_t v93 = v135;
      if ((unint64_t)v135 >= v136)
      {
        uint64_t v94 = sub_236934CFC(&v134, (long long **)__p, &v116);
      }
      else
      {
        *(void *)uint64_t v135 = 0;
        *((void *)v93 + 1) = 0;
        *((void *)v93 + 2) = 0;
        sub_236913EF0(v93, (long long *)__p[0], (long long *)__p[1], 0xAAAAAAAAAAAAAAABLL * (((char *)__p[1] - (char *)__p[0]) >> 3));
        *((_DWORD *)v93 + 6) = LODWORD(v116);
        uint64_t v94 = (uint64_t)(v93 + 32);
      }
      uint64_t v135 = (char *)v94;
      if (__p[0])
      {
        __p[1] = __p[0];
        operator delete(__p[0]);
      }
    }
    uint64_t v95 = v134;
    for (j = v135; (char *)v95 != j; v95 += 32)
    {
      float v97 = *(float *)(v95 + 24);
      if (v97 != 0.0)
      {
        double v98 = v97 - v75;
        long double v99 = exp(v98);
        if (v98 <= -10.0)
        {
          double v101 = v98 + v99 * -0.5 + v99 * v99 / 24.0 + pow(v99, 4.0) / -2880.0;
        }
        else
        {
          long double v100 = expm1(-v99);
          double v101 = log(-v100);
        }
        float v102 = v101;
        *(float *)(v95 + 24) = v102;
      }
    }
    __p[0] = &v118;
    sub_2369140AC((void ***)__p);
    uint64_t v51 = v134;
    unint64_t v50 = v135;
  }
  else
  {
    uint64_t v51 = v134;
    unint64_t v50 = v135;
    if (a4 > (unint64_t)((uint64_t)&v135[-v134] >> 5))
    {
      uint64_t v108 = a3;
      uint64_t v106 = a2;
      do
      {
        memset(&__p[1], 0, 88);
        __p[0] = &unk_26E9CDA28;
        __p[12] = &unk_26E9CDB60;
        long long v112 = 0u;
        long long v113 = 0u;
        uint64_t v114 = 0;
        uint64_t v115 = 1024;
        sub_23692D498((uint64_t)__p, a2, a3);
        sub_23692FC2C(a1, __p);
        uint64_t v118 = 0;
        char v119 = 0;
        uint64_t v120 = 0;
        sub_23692F808(__p, (void **)&v116, a8);
        double v53 = v116;
        double v52 = v117;
        float v54 = 0.0;
        if (*(void *)&v116 != *(void *)&v117)
        {
          unint64_t v55 = v119;
          do
          {
            uint64_t v56 = **(void **)&v53;
            if (v55 >= (long long *)v120)
            {
              unint64_t v57 = 0xAAAAAAAAAAAAAAABLL * (((char *)v55 - (char *)v118) >> 3);
              unint64_t v58 = v57 + 1;
              if (v57 + 1 > 0xAAAAAAAAAAAAAAALL) {
                sub_236913FC4();
              }
              if (0x5555555555555556 * ((v120 - (char *)v118) >> 3) > v58) {
                unint64_t v58 = 0x5555555555555556 * ((v120 - (char *)v118) >> 3);
              }
              if (0xAAAAAAAAAAAAAAABLL * ((v120 - (char *)v118) >> 3) >= 0x555555555555555) {
                unint64_t v59 = 0xAAAAAAAAAAAAAAALL;
              }
              else {
                unint64_t v59 = v58;
              }
              int v60 = (char *)sub_236913FDC((uint64_t)&v120, v59);
              int v62 = &v60[24 * v57];
              *(_OWORD *)int v62 = *(_OWORD *)v56;
              *((_DWORD *)v62 + 4) = *(_DWORD *)(v56 + 28);
              float v64 = v118;
              unint64_t v63 = v119;
              uint64_t v65 = (long long *)v62;
              if (v119 != v118)
              {
                do
                {
                  long long v66 = *(long long *)((char *)v63 - 24);
                  *((void *)v65 - 1) = *((void *)v63 - 1);
                  *(long long *)((char *)v65 - 24) = v66;
                  uint64_t v65 = (long long *)((char *)v65 - 24);
                  unint64_t v63 = (long long *)((char *)v63 - 24);
                }
                while (v63 != v64);
                unint64_t v63 = v118;
              }
              unint64_t v55 = (long long *)(v62 + 24);
              uint64_t v118 = v65;
              char v119 = (long long *)(v62 + 24);
              uint64_t v120 = &v60[24 * v61];
              if (v63) {
                operator delete(v63);
              }
            }
            else
            {
              *unint64_t v55 = *(_OWORD *)v56;
              *((_DWORD *)v55 + 4) = *(_DWORD *)(v56 + 28);
              unint64_t v55 = (long long *)((char *)v55 + 24);
            }
            char v119 = v55;
            float v54 = v54 + (float)(a8 * *(float *)(v56 + 32));
            *(void *)&v53 += 8;
          }
          while (*(void *)&v53 != *(void *)&v52);
        }
        float v110 = v54 - v16;
        long long v67 = v135;
        if ((unint64_t)v135 >= v136)
        {
          uint64_t v68 = sub_236934CFC(&v134, &v118, &v110);
        }
        else
        {
          *(void *)uint64_t v135 = 0;
          *((void *)v67 + 1) = 0;
          *((void *)v67 + 2) = 0;
          sub_236913EF0(v67, v118, v119, 0xAAAAAAAAAAAAAAABLL * (((char *)v119 - (char *)v118) >> 3));
          *((float *)v67 + 6) = v110;
          uint64_t v68 = (uint64_t)(v67 + 32);
        }
        a2 = v106;
        a3 = v108;
        uint64_t v135 = (char *)v68;
        if (v116 != 0.0)
        {
          double v117 = v116;
          operator delete(*(void **)&v116);
        }
        if (v118)
        {
          char v119 = v118;
          operator delete(v118);
        }
        sub_23692D184((uint64_t)__p);
        uint64_t v51 = v134;
        unint64_t v50 = v135;
      }
      while (a4 > (unint64_t)((uint64_t)&v135[-v134] >> 5));
    }
  }
  *uint64_t v103 = v51;
  v103[1] = (uint64_t)v50;
  v103[2] = v136;
  uint64_t v40 = &v134;
LABEL_114:
  *uint64_t v40 = 0;
  v40[1] = 0;
  void v40[2] = 0;
  if (v121[0])
  {
    v121[1] = v121[0];
    operator delete(v121[0]);
  }
  sub_23692D184((uint64_t)&v122);
  unint64_t v122 = (void **)&v134;
  sub_2369140AC(&v122);
}

void sub_2369326D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char *__p, char *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,void **a46)
{
  if (__p)
  {
    a19 = __p;
    operator delete(__p);
  }
  std::string __p = &a37;
  sub_236929CA8((void ***)&__p);
  std::string __p = &a40;
  sub_2369140AC((void ***)&__p);
  unint64_t v49 = *(void **)(v46 + 200);
  if (v49)
  {
    *(void *)(v46 + 208) = v49;
    operator delete(v49);
  }
  sub_23692D184((uint64_t)&a46);
  a46 = (void **)(v47 - 160);
  sub_2369140AC(&a46);
  _Unwind_Resume(a1);
}

float sub_236932848(uint64_t a1, unsigned __int8 *a2, uint64_t a3, float a4)
{
  float v8 = &unk_26E9CDA28;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  uint64_t v14 = 0;
  uint64_t v15 = &unk_26E9CDB60;
  long long v16 = 0u;
  long long v17 = 0u;
  uint64_t v18 = 0;
  uint64_t v19 = 1024;
  sub_23692D498((uint64_t)&v8, a2, a3);
  sub_23692FC2C(a1, &v8);
  float v6 = sub_23692E060(&v8, a4);
  sub_23692D184((uint64_t)&v8);
  return v6;
}

void sub_236932908(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_23692D184((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_23693291C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  strcpy(__s, " ");
  size_t v10 = strlen(__s);
  sub_2369294C4((char **)&v43, a2, a3, (unsigned __int8 *)__s, v10, 0);
  uint64_t v46 = 0;
  uint64_t v47 = 0;
  std::string __p = 0;
  sub_236933D98(&__p, v43, (uint64_t)v44, (v44 - (unsigned char *)v43) >> 4);
  long long v11 = __p;
  long long v12 = v46;
  if (__p == v46)
  {
    float v14 = 0.0;
    if (__p)
    {
LABEL_11:
      uint64_t v46 = v11;
      operator delete(v11);
    }
  }
  else
  {
    float v13 = *(float *)(a1 + 104) + -10.0;
    float v14 = 0.0;
    do
    {
      uint64_t v15 = v11[1];
      uint64_t v16 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)a1 + 112))(a1, *v11, v15);
      if (v16 == *(_DWORD *)(a1 + 88))
      {
        float v14 = v13 + v14;
      }
      else
      {
        if ((*(unsigned int (**)(void, uint64_t))(**(void **)(a1 + 8) + 136))(*(void *)(a1 + 8), v16)) {
          double v17 = (float)(*(float *)(a1 + 108) * (float)(int)v15) + -0.1;
        }
        else {
          double v17 = (*(float (**)(void, uint64_t))(**(void **)(a1 + 8) + 96))(*(void *)(a1 + 8), v16);
        }
        float v14 = v17 + v14;
      }
      v11 += 2;
    }
    while (v11 != v12);
    long long v11 = __p;
    if (__p) {
      goto LABEL_11;
    }
  }
  if (v43)
  {
    uint64_t v44 = v43;
    operator delete(v43);
  }
  strcpy(__s, " ");
  size_t v18 = strlen(__s);
  sub_2369294C4((char **)&v43, a4, a5, (unsigned __int8 *)__s, v18, 0);
  long long v41 = 0;
  uint64_t v42 = 0;
  uint64_t v40 = 0;
  sub_236933D98(&v40, v43, (uint64_t)v44, (v44 - (unsigned char *)v43) >> 4);
  uint64_t v19 = v40;
  uint64_t v20 = v41;
  if (v40 != v41)
  {
    float v21 = *(float *)(a1 + 104) + -10.0;
    float v22 = 0.0;
    do
    {
      uint64_t v23 = v19[1];
      uint64_t v24 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)a1 + 112))(a1, *v19, v23);
      if (v24 == *(_DWORD *)(a1 + 88))
      {
        float v22 = v21 + v22;
      }
      else
      {
        if ((*(unsigned int (**)(void, uint64_t))(**(void **)(a1 + 8) + 136))(*(void *)(a1 + 8), v24)) {
          double v25 = (float)(*(float *)(a1 + 108) * (float)(int)v23) + -0.1;
        }
        else {
          double v25 = (*(float (**)(void, uint64_t))(**(void **)(a1 + 8) + 96))(*(void *)(a1 + 8), v24);
        }
        float v22 = v25 + v22;
      }
      v19 += 2;
    }
    while (v19 != v20);
    uint64_t v19 = v40;
    if (!v40) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  float v22 = 0.0;
  if (v40)
  {
LABEL_24:
    long long v41 = v19;
    operator delete(v19);
  }
LABEL_25:
  if (v43)
  {
    uint64_t v44 = v43;
    operator delete(v43);
  }
  float v26 = vabds_f32(v14, v22);
  if (v26 > 0.0000001 && (int)sub_236942B98() <= 1)
  {
    LOBYTE(v43) = 0;
    unsigned int v27 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"unigram_model.cc", 16);
    sub_236914270(v27, (uint64_t)"(", 1);
    uint64_t v28 = (void *)std::ostream::operator<<();
    long long v29 = sub_236914270(v28, (uint64_t)") ", 2);
    long long v30 = sub_236914270(v29, (uint64_t)"LOG(", 4);
    long long v31 = sub_236914270(v30, (uint64_t)"WARNING", 7);
    float v32 = sub_236914270(v31, (uint64_t)") ", 2);
    uint64_t v33 = sub_236914270(v32, (uint64_t)"Two sentence piece sequences are not equivalent! Left: ", 55);
    uint64_t v34 = sub_236914270(v33, a2, a3);
    sub_236914270(v34, (uint64_t)", Score: ", 9);
    float v35 = (void *)std::ostream::operator<<();
    long long v36 = sub_236914270(v35, (uint64_t)". Right: ", 9);
    long long v37 = sub_236914270(v36, a4, a5);
    sub_236914270(v37, (uint64_t)", Score: ", 9);
    uint64_t v38 = (void *)std::ostream::operator<<();
    sub_236914270(v38, (uint64_t)".", 1);
    sub_23691311C(&v43);
  }
  return v26 <= 0.0000001;
}

void sub_236932D84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_236932DE0(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  sub_236911EBC(a1, &v13);
  memset(&__p, 0, sizeof(__p));
  std::string::resize(&__p, 4uLL, 0);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  LODWORD(p_p->__r_.__value_.__l.__data_) = *(_DWORD *)(a1 + 104);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    unint64_t v5 = &__p;
  }
  else {
    unint64_t v5 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  std::string::append(a2, (const std::string::value_type *)v5, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  memset(&__p, 0, sizeof(__p));
  std::string::resize(&__p, 4uLL, 0);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    unsigned int v7 = &__p;
  }
  else {
    unsigned int v7 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  LODWORD(v7->__r_.__value_.__l.__data_) = *(_DWORD *)(a1 + 108);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    float v8 = &__p;
  }
  else {
    float v8 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v9 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v9 = __p.__r_.__value_.__l.__size_;
  }
  std::string::append(a2, (const std::string::value_type *)v8, v9);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v10 = &v13;
  }
  else {
    size_t v10 = (std::string *)v13.__r_.__value_.__r.__words[0];
  }
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v11 = HIBYTE(v13.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v11 = v13.__r_.__value_.__l.__size_;
  }
  std::string::append(a2, (const std::string::value_type *)v10, v11);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
}

void sub_236932F20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v20 + 23) < 0) {
    operator delete(*(void **)v20);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_236932F78()
{
  return 1;
}

uint64_t sub_236932F80()
{
  return 1;
}

uint64_t sub_236932F88()
{
  return 1;
}

uint64_t sub_236932F90()
{
  return 1;
}

void *sub_236932F98(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    float v6 = result;
    uint64_t result = sub_236929FA8(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_236932FF8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_236933014(uint64_t a1, unsigned char *a2, uint64_t a3, unint64_t a4, uint64_t a5, int a6)
{
  std::string::size_type v9 = *(unsigned int **)(a1 + 16);
  unsigned int v10 = *v9;
  if (a5)
  {
    int v11 = *a2;
    unint64_t v12 = (v10 >> 10 << ((v10 >> 6) & 8)) ^ v11;
    unsigned int v10 = v9[v12];
    if ((v10 & 0x800000FF) == v11)
    {
      uint64_t v13 = a5 - 1;
      float v14 = a2 + 1;
      while (1)
      {
        unint64_t v15 = v12;
        if (!v13) {
          goto LABEL_16;
        }
        int v16 = *v14++;
        unint64_t v12 = (v10 >> 10 << ((v10 >> 6) & 8)) ^ v12 ^ v16;
        unsigned int v10 = v9[v12];
        --v13;
        if ((v10 & 0x800000FF) != v16) {
          goto LABEL_14;
        }
      }
    }
  }
  else
  {
    int v17 = *a2;
    if (!*a2)
    {
      unint64_t v15 = 0;
      LODWORD(v12) = 0;
LABEL_16:
      if ((v10 & 0x100) != 0) {
        int v22 = v9[(v10 >> 10 << ((v10 >> 6) & 8)) ^ v12] & 0x7FFFFFFF;
      }
      else {
        int v22 = -1;
      }
      goto LABEL_19;
    }
    unint64_t v18 = (v10 >> 10 << ((v10 >> 6) & 8)) ^ v17;
    unsigned int v10 = v9[v18];
    if ((v10 & 0x800000FF) == v17)
    {
      uint64_t v19 = a2 + 1;
      LODWORD(v12) = v18;
      while (1)
      {
        unint64_t v15 = v18;
        int v21 = *v19++;
        int v20 = v21;
        if (!v21) {
          goto LABEL_16;
        }
        unint64_t v18 = (v10 >> 10 << ((v10 >> 6) & 8)) ^ v12 ^ v20;
        unsigned int v10 = v9[v18];
        LODWORD(v12) = v18;
        if ((v10 & 0x800000FF) != v20) {
          goto LABEL_14;
        }
      }
    }
  }
  unint64_t v15 = 0;
LABEL_14:
  int v22 = -2;
LABEL_19:
  long long v44 = 0u;
  memset(v43, 0, sizeof(v43));
  v41.n128_u32[0] = 0;
  v41.n128_u64[1] = v15;
  int v42 = v22;
  sub_23693334C(v43, &v41);
  uint64_t v23 = *((void *)&v44 + 1);
  if (*((void *)&v44 + 1))
  {
    unint64_t v24 = 0;
    do
    {
      double v25 = (int *)(*(void *)(*((void *)&v43[0] + 1) + 8 * ((unint64_t)v44 / 0xAA))
                  + 24 * ((unint64_t)v44 % 0xAA));
      int v26 = *v25;
      uint64_t v27 = v25[2];
      int v28 = v25[4];
      *(void *)&long long v44 = v44 + 1;
      *((void *)&v44 + 1) = v23 - 1;
      if ((unint64_t)v44 >= 0x154)
      {
        operator delete(**((void ***)&v43[0] + 1));
        *((void *)&v43[0] + 1) += 8;
        *(void *)&long long v44 = v44 - 170;
      }
      if ((v28 & 0x80000000) == 0)
      {
        uint64_t v29 = a3 + 16 * v24;
        *(_DWORD *)uint64_t v29 = v28;
        *(void *)(v29 + 8) = a5;
        ++v24;
      }
      BOOL v31 = a6 >= 0 && v26 > a6;
      if (v24 >= a4 || v31) {
        break;
      }
      if (v28 != -2)
      {
        unsigned __int32 v32 = v26 + 1;
        for (int i = 1; i != 256; ++i)
        {
          uint64_t v34 = *(void *)(a1 + 16);
          unint64_t v35 = (*(_DWORD *)(v34 + 4 * v27) >> 10 << ((*(_DWORD *)(v34 + 4 * v27) >> 6) & 8)) ^ v27 ^ i;
          unsigned int v36 = *(_DWORD *)(v34 + 4 * v35);
          if (i == (v36 & 0x800000FF))
          {
            if ((v36 & 0x100) != 0) {
              int v37 = *(_DWORD *)(v34 + 4 * ((v36 >> 10 << ((v36 >> 6) & 8)) ^ v35)) & 0x7FFFFFFF;
            }
            else {
              int v37 = -1;
            }
            v41.n128_u32[0] = v32;
            v41.n128_u64[1] = v35;
            int v42 = v37;
            sub_23693334C(v43, &v41);
          }
        }
      }
      uint64_t v23 = *((void *)&v44 + 1);
    }
    while (*((void *)&v44 + 1));
  }
  else
  {
    unint64_t v24 = 0;
  }
  sub_236933B80(v43);
  return v24;
}

void sub_236933304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_236933B80((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23693331C(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 4;
  if (a2 <= v2)
  {
    if (a2 < v2) {
      *(void *)(a1 + 8) = *(void *)a1 + 16 * a2;
    }
  }
  else
  {
    sub_236933C78((void **)a1, a2 - v2);
  }
}

__n128 sub_23693334C(void *a1, __n128 *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 170 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_2369333FC(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  size_t v8 = (__n128 *)(*(void *)(v5 + 8 * (v7 / 0xAA)) + 24 * (v7 % 0xAA));
  __n128 result = *a2;
  v8[1].n128_u64[0] = a2[1].n128_u64[0];
  __n128 *v8 = result;
  ++a1[5];
  return result;
}

void sub_2369333FC(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0xAA;
  unint64_t v4 = v2 - 170;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    size_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    std::string::size_type v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)size_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_2369147B8(v5, v33);
      unint64_t v35 = &v34[8 * (v33 >> 2)];
      int v37 = &v34[8 * v36];
      uint64_t v38 = (uint64_t *)a1[1];
      size_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        size_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        __n128 v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)__n128 v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      std::string::size_type v9 = (char *)a1[1];
    }
    size_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0xFF0uLL);
      sub_236933714(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0xFF0uLL);
    sub_23693382C((uint64_t)a1, &v54);
    long long v44 = (void *)a1[1];
    size_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    std::string::size_type v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_2369147B8((uint64_t)(a1 + 3), v46);
      unint64_t v35 = &v34[8 * (v46 >> 2)];
      int v37 = &v34[8 * v47];
      unint64_t v48 = (uint64_t *)a1[1];
      size_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        size_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      uint64_t v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        size_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&long long v54 = sub_2369147B8((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  double v53 = operator new(0xFF0uLL);
  sub_23693394C(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_236933A64((uint64_t)&v54, v27);
  }
  uint64_t v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_2369336C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_236933714(void *a1, void *a2)
{
  uint64_t v5 = (char *)a1[3];
  uint64_t v4 = (uint64_t)(a1 + 3);
  uint64_t v6 = *(char **)(v4 - 8);
  if (v6 == v5)
  {
    unint64_t v7 = (char *)a1[1];
    uint64_t v8 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1) {
        unint64_t v18 = 1;
      }
      else {
        unint64_t v18 = (uint64_t)&v6[-*a1] >> 2;
      }
      uint64_t v19 = (char *)sub_2369147B8(v4, v18);
      uint64_t v21 = &v19[8 * (v18 >> 2)];
      unint64_t v22 = (uint64_t *)a1[1];
      uint64_t v6 = v21;
      uint64_t v23 = a1[2] - (void)v22;
      if (v23)
      {
        uint64_t v6 = &v21[v23 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v24 = 8 * (v23 >> 3);
        unint64_t v25 = &v19[8 * (v18 >> 2)];
        do
        {
          uint64_t v26 = *v22++;
          *(void *)unint64_t v25 = v26;
          v25 += 8;
          v24 -= 8;
        }
        while (v24);
      }
      uint64_t v27 = (char *)*a1;
      *a1 = v19;
      a1[1] = v21;
      a1[2] = v6;
      a1[3] = &v19[8 * v20];
      if (v27)
      {
        operator delete(v27);
        uint64_t v6 = (char *)a1[2];
      }
    }
    else
    {
      uint64_t v9 = v8 >> 3;
      BOOL v10 = v8 >> 3 < -1;
      uint64_t v11 = (v8 >> 3) + 2;
      if (v10) {
        uint64_t v12 = v11;
      }
      else {
        uint64_t v12 = v9 + 1;
      }
      uint64_t v13 = -(v12 >> 1);
      uint64_t v14 = v12 >> 1;
      uint64_t v15 = &v7[-8 * v14];
      int64_t v16 = v6 - v7;
      if (v6 != v7)
      {
        memmove(&v7[-8 * v14], v7, v6 - v7);
        uint64_t v6 = (char *)a1[1];
      }
      uint64_t v17 = &v6[8 * v13];
      uint64_t v6 = &v15[v16];
      a1[1] = v17;
      a1[2] = &v15[v16];
    }
  }
  *(void *)uint64_t v6 = *a2;
  a1[2] += 8;
}

void sub_23693382C(uint64_t a1, void *a2)
{
  uint64_t v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    uint64_t v6 = a1 + 24;
    unint64_t v7 = *(unsigned char **)(a1 + 24);
    uint64_t v8 = *(unsigned char **)(a1 + 16);
    if (v8 >= v7)
    {
      if (v7 == v4) {
        unint64_t v12 = 1;
      }
      else {
        unint64_t v12 = (v7 - v4) >> 2;
      }
      uint64_t v13 = 2 * v12;
      uint64_t v14 = (char *)sub_2369147B8(v6, v12);
      uint64_t v5 = &v14[(v13 + 6) & 0xFFFFFFFFFFFFFFF8];
      int64_t v16 = *(uint64_t **)(a1 + 8);
      uint64_t v17 = v5;
      uint64_t v18 = *(void *)(a1 + 16) - (void)v16;
      if (v18)
      {
        uint64_t v17 = &v5[v18 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v19 = 8 * (v18 >> 3);
        uint64_t v20 = v5;
        do
        {
          uint64_t v21 = *v16++;
          *(void *)uint64_t v20 = v21;
          v20 += 8;
          v19 -= 8;
        }
        while (v19);
      }
      unint64_t v22 = *(char **)a1;
      *(void *)a1 = v14;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v17;
      *(void *)(a1 + 24) = &v14[8 * v15];
      if (v22)
      {
        operator delete(v22);
        uint64_t v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      uint64_t v9 = (v7 - v8) >> 3;
      if (v9 >= -1) {
        uint64_t v10 = v9 + 1;
      }
      else {
        uint64_t v10 = v9 + 2;
      }
      uint64_t v11 = v10 >> 1;
      uint64_t v5 = &v4[8 * (v10 >> 1)];
      if (v8 != v4)
      {
        memmove(&v4[8 * (v10 >> 1)], v4, v8 - v4);
        uint64_t v4 = *(char **)(a1 + 16);
      }
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = &v4[8 * v11];
    }
  }
  else
  {
    uint64_t v5 = *(char **)(a1 + 8);
  }
  *((void *)v5 - 1) = *a2;
  *(void *)(a1 + 8) -= 8;
}

void sub_23693394C(void *a1, void *a2)
{
  uint64_t v4 = (char *)a1[2];
  if (v4 == (char *)a1[3])
  {
    uint64_t v5 = (char *)a1[1];
    uint64_t v6 = (uint64_t)&v5[-*a1];
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == (char *)*a1) {
        unint64_t v16 = 1;
      }
      else {
        unint64_t v16 = (uint64_t)&v4[-*a1] >> 2;
      }
      uint64_t v17 = (char *)sub_2369147B8(a1[4], v16);
      uint64_t v19 = &v17[8 * (v16 >> 2)];
      uint64_t v20 = (uint64_t *)a1[1];
      uint64_t v4 = v19;
      uint64_t v21 = a1[2] - (void)v20;
      if (v21)
      {
        uint64_t v4 = &v19[v21 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v22 = 8 * (v21 >> 3);
        uint64_t v23 = &v17[8 * (v16 >> 2)];
        do
        {
          uint64_t v24 = *v20++;
          *(void *)uint64_t v23 = v24;
          v23 += 8;
          v22 -= 8;
        }
        while (v22);
      }
      unint64_t v25 = (char *)*a1;
      *a1 = v17;
      a1[1] = v19;
      a1[2] = v4;
      a1[3] = &v17[8 * v18];
      if (v25)
      {
        operator delete(v25);
        uint64_t v4 = (char *)a1[2];
      }
    }
    else
    {
      uint64_t v7 = v6 >> 3;
      BOOL v8 = v6 >> 3 < -1;
      uint64_t v9 = (v6 >> 3) + 2;
      if (v8) {
        uint64_t v10 = v9;
      }
      else {
        uint64_t v10 = v7 + 1;
      }
      uint64_t v11 = -(v10 >> 1);
      uint64_t v12 = v10 >> 1;
      uint64_t v13 = &v5[-8 * v12];
      int64_t v14 = v4 - v5;
      if (v4 != v5)
      {
        memmove(&v5[-8 * v12], v5, v4 - v5);
        uint64_t v4 = (char *)a1[1];
      }
      uint64_t v15 = &v4[8 * v11];
      uint64_t v4 = &v13[v14];
      a1[1] = v15;
      a1[2] = &v13[v14];
    }
  }
  *(void *)uint64_t v4 = *a2;
  a1[2] += 8;
}

void sub_236933A64(uint64_t a1, void *a2)
{
  uint64_t v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    uint64_t v6 = *(unsigned char **)(a1 + 16);
    uint64_t v7 = *(unsigned char **)(a1 + 24);
    if (v6 >= v7)
    {
      if (v7 == v4) {
        unint64_t v11 = 1;
      }
      else {
        unint64_t v11 = (v7 - v4) >> 2;
      }
      uint64_t v12 = 2 * v11;
      uint64_t v13 = (char *)sub_2369147B8(*(void *)(a1 + 32), v11);
      uint64_t v5 = &v13[(v12 + 6) & 0xFFFFFFFFFFFFFFF8];
      uint64_t v15 = *(uint64_t **)(a1 + 8);
      unint64_t v16 = v5;
      uint64_t v17 = *(void *)(a1 + 16) - (void)v15;
      if (v17)
      {
        unint64_t v16 = &v5[v17 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v18 = 8 * (v17 >> 3);
        uint64_t v19 = v5;
        do
        {
          uint64_t v20 = *v15++;
          *(void *)uint64_t v19 = v20;
          v19 += 8;
          v18 -= 8;
        }
        while (v18);
      }
      uint64_t v21 = *(char **)a1;
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v16;
      *(void *)(a1 + 24) = &v13[8 * v14];
      if (v21)
      {
        operator delete(v21);
        uint64_t v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      uint64_t v8 = (v7 - v6) >> 3;
      if (v8 >= -1) {
        uint64_t v9 = v8 + 1;
      }
      else {
        uint64_t v9 = v8 + 2;
      }
      uint64_t v10 = v9 >> 1;
      uint64_t v5 = &v4[8 * (v9 >> 1)];
      if (v6 != v4)
      {
        memmove(&v4[8 * (v9 >> 1)], v4, v6 - v4);
        uint64_t v4 = *(char **)(a1 + 16);
      }
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = &v4[8 * v10];
    }
  }
  else
  {
    uint64_t v5 = *(char **)(a1 + 8);
  }
  *((void *)v5 - 1) = *a2;
  *(void *)(a1 + 8) -= 8;
}

uint64_t sub_236933B80(void *a1)
{
  unint64_t v2 = (void **)a1[1];
  BOOL v3 = (void **)a1[2];
  a1[5] = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      BOOL v3 = (void **)a1[2];
      unint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 85;
  }
  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 170;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    uint64_t v7 = *v2++;
    operator delete(v7);
  }
  return sub_236933C28((uint64_t)a1);
}

uint64_t sub_236933C28(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != v3) {
    *(void *)(a1 + 16) = v2 + ((v3 - v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  unint64_t v4 = *(void **)a1;
  if (*(void *)a1) {
    operator delete(v4);
  }
  return a1;
}

void sub_236933C78(void **a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  uint64_t v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 4)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 16 * a2);
      v7 += 16 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = v7 - (unsigned char *)*a1;
    unint64_t v9 = a2 + (v8 >> 4);
    if (v9 >> 60) {
      sub_236913FC4();
    }
    uint64_t v10 = v8 >> 4;
    uint64_t v11 = v5 - (unsigned char *)*a1;
    if (v11 >> 3 > v9) {
      unint64_t v9 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v9;
    }
    if (v12) {
      uint64_t v13 = (char *)sub_236914EC0(v4, v12);
    }
    else {
      uint64_t v13 = 0;
    }
    uint64_t v14 = &v13[16 * v10];
    uint64_t v15 = &v13[16 * v12];
    bzero(v14, 16 * a2);
    unint64_t v16 = &v14[16 * a2];
    uint64_t v18 = (char *)*a1;
    uint64_t v17 = (char *)a1[1];
    if (v17 != *a1)
    {
      do
      {
        *((_OWORD *)v14 - 1) = *((_OWORD *)v17 - 1);
        v14 -= 16;
        v17 -= 16;
      }
      while (v17 != v18);
      uint64_t v17 = (char *)*a1;
    }
    *a1 = v14;
    a1[1] = v16;
    a1[2] = v15;
    if (v17)
    {
      operator delete(v17);
    }
  }
}

void *sub_236933D98(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    __n128 result = sub_236917DE4(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      __n128 result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_236933DF8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_236933E14(void *a1)
{
  sub_236933E4C(a1);
  JUMPOUT(0x237E07580);
}

void *sub_236933E4C(void *a1)
{
  *a1 = &unk_26E9CDB60;
  uint64_t v2 = (void *)a1[1];
  uint64_t v3 = (void *)a1[2];
  if (v2 != v3)
  {
    do
    {
      if (*v2) {
        MEMORY[0x237E07550](*v2, 0x1070C8005A2B047);
      }
      ++v2;
    }
    while (v2 != v3);
    uint64_t v2 = (void *)a1[1];
  }
  if (v2)
  {
    a1[2] = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_236933EDC(uint64_t *a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  uint64_t v5 = v6;
  uint64_t v7 = *(void *)(v4 - 8);
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - v7) >> 3) >= a2)
  {
    if (a2)
    {
      size_t v13 = 24 * ((24 * a2 - 24) / 0x18) + 24;
      bzero(*(void **)(v4 - 8), v13);
      v7 += v13;
    }
    a1[1] = v7;
  }
  else
  {
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((v7 - *a1) >> 3);
    unint64_t v9 = v8 + a2;
    if (v8 + a2 > 0xAAAAAAAAAAAAAAALL) {
      sub_236913FC4();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v5 - *a1) >> 3);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v9;
    }
    uint64_t v19 = v4;
    if (v11) {
      unint64_t v12 = (char *)sub_236913FDC(v4, v11);
    }
    else {
      unint64_t v12 = 0;
    }
    uint64_t v15 = v12;
    unint64_t v16 = &v12[24 * v8];
    uint64_t v18 = &v12[24 * v11];
    size_t v14 = 24 * ((24 * a2 - 24) / 0x18) + 24;
    bzero(v16, v14);
    uint64_t v17 = &v16[v14];
    sub_236934044(a1, &v15);
    sub_23692BA14((uint64_t)&v15);
  }
}

void sub_236934030(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_23692BA14((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_236934044(uint64_t *a1, void *a2)
{
  uint64_t result = sub_2369340BC((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_2369340BC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  void v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      *(void *)(v7 - 8) = 0;
      long long v8 = *(_OWORD *)(a3 - 3);
      a3 -= 3;
      *(_OWORD *)(v7 - 24) = v8;
      *(void *)(v7 - 8) = a3[2];
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      uint64_t v7 = *((void *)&v14 + 1) - 24;
      *((void *)&v14 + 1) -= 24;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  sub_236934160((uint64_t)v11);
  return v9;
}

uint64_t sub_236934160(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_23692B9CC(a1);
  }
  return a1;
}

uint64_t sub_236934198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  std::string v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      *(void *)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      *(void *)(v4 + 16) = 0;
      sub_236932F98((void *)v4, *(const void **)v6, *(void *)(v6 + 8), (uint64_t)(*(void *)(v6 + 8) - *(void *)v6) >> 3);
      *(_DWORD *)(v4 + 24) = *(_DWORD *)(v6 + 24);
      uint64_t v4 = v11 + 32;
      v11 += 32;
      v6 += 32;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  sub_236934254((uint64_t)v8);
  return v4;
}

void sub_236934240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_236934254(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_23691405C(a1);
  }
  return a1;
}

void sub_23693428C(void *a1)
{
  sub_23692F778(a1);
  JUMPOUT(0x237E07580);
}

uint64_t sub_2369342C4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3 >= 2)
  {
    unint64_t v3 = (unint64_t)(a3 - 2) >> 1;
    uint64_t v4 = (void *)(result + 8 * v3);
    uint64_t v5 = *v4;
    uint64_t v8 = *(void *)(a2 - 8);
    uint64_t v6 = (void *)(a2 - 8);
    uint64_t v7 = v8;
    float v9 = *(float *)(v8 + 16);
    if (*(float *)(*v4 + 16) < v9)
    {
      do
      {
        uint64_t v10 = v4;
        *uint64_t v6 = v5;
        if (!v3) {
          break;
        }
        unint64_t v3 = (v3 - 1) >> 1;
        uint64_t v4 = (void *)(result + 8 * v3);
        uint64_t v5 = *v4;
        uint64_t v6 = v10;
      }
      while (*(float *)(*v4 + 16) < v9);
      *uint64_t v10 = v7;
    }
  }
  return result;
}

uint64_t sub_236934320(uint64_t *a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  uint64_t v5 = v6;
  uint64_t v7 = *(void *)(result - 8);
  if (a2 <= (v6 - v7) >> 5)
  {
    if (a2)
    {
      uint64_t v14 = 32 * a2;
      uint64_t v15 = v7 + 32 * a2;
      do
      {
        *(void *)uint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        *(_DWORD *)(v7 + 24) = 0;
        *(void *)(v7 + 16) = 0;
        v7 += 32;
        v14 -= 32;
      }
      while (v14);
      uint64_t v7 = v15;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = v7 - *a1;
    unint64_t v9 = a2 + (v8 >> 5);
    if (v9 >> 59) {
      sub_236913FC4();
    }
    uint64_t v10 = v8 >> 5;
    uint64_t v11 = v5 - *a1;
    if (v11 >> 4 > v9) {
      unint64_t v9 = v11 >> 4;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v12 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v9;
    }
    v19[4] = result;
    if (v12) {
      long long v13 = (char *)sub_23692BB20(result, v12);
    }
    else {
      long long v13 = 0;
    }
    unint64_t v16 = &v13[32 * v10];
    v19[0] = v13;
    v19[1] = v16;
    v19[3] = &v13[32 * v12];
    uint64_t v17 = 32 * a2;
    uint64_t v18 = &v16[32 * a2];
    do
    {
      *(void *)unint64_t v16 = 0;
      *((void *)v16 + 1) = 0;
      *((_DWORD *)v16 + 6) = 0;
      *((void *)v16 + 2) = 0;
      v16 += 32;
      v17 -= 32;
    }
    while (v17);
    v19[2] = v18;
    sub_236934448(a1, v19);
    return sub_23692C038((uint64_t)v19);
  }
  return result;
}

void sub_236934434(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_23692C038((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_236934448(uint64_t *a1, void *a2)
{
  uint64_t result = sub_2369344C0((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_2369344C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  void v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 32) = 0;
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      long long v8 = *(_OWORD *)(a3 - 32);
      a3 -= 32;
      *(_OWORD *)(v7 - 32) = v8;
      *(void *)(v7 - 16) = *(void *)(a3 + 16);
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)a3 = 0;
      *(_DWORD *)(v7 - 8) = *(_DWORD *)(a3 + 24);
      uint64_t v7 = *((void *)&v14 + 1) - 32;
      *((void *)&v14 + 1) -= 32;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  sub_23693456C((uint64_t)v11);
  return v9;
}

uint64_t sub_23693456C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_23692BFF0(a1);
  }
  return a1;
}

void *sub_2369345A4(void *a1, unint64_t a2, void *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_236929FA8(a1, a2);
    uint64_t v6 = (void *)a1[1];
    uint64_t v7 = &v6[a2];
    uint64_t v8 = 8 * a2;
    do
    {
      *v6++ = *a3;
      v8 -= 8;
    }
    while (v8);
    a1[1] = v7;
  }
  return a1;
}

void sub_23693460C(_Unwind_Exception *exception_object)
{
  unint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

float sub_236934628(uint64_t a1, long long **a2, float *a3)
{
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)uint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  *(void *)(v5 + 16) = 0;
  sub_236913EF0((char *)v5, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a2[1] - (char *)*a2) >> 3));
  float result = *a3;
  *(float *)(v5 + 24) = *a3;
  *(void *)(a1 + 8) = v5 + 32;
  return result;
}

void sub_236934694(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_23693469C(uint64_t *a1, long long **a2, _DWORD *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (a1[1] - *a1) >> 5;
  unint64_t v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) >> 59) {
    sub_236913FC4();
  }
  uint64_t v9 = (uint64_t)(a1 + 2);
  uint64_t v10 = a1[2] - v4;
  if (v10 >> 4 > v6) {
    unint64_t v6 = v10 >> 4;
  }
  if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFE0) {
    unint64_t v11 = 0x7FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v11 = v6;
  }
  uint64_t v19 = a1 + 2;
  if (v11) {
    char v12 = (char *)sub_23692BB20(v9, v11);
  }
  else {
    char v12 = 0;
  }
  long long v13 = &v12[32 * v5];
  v16[0] = v12;
  v16[1] = v13;
  uint64_t v17 = v13;
  uint64_t v18 = &v12[32 * v11];
  *(void *)long long v13 = 0;
  *((void *)v13 + 1) = 0;
  *((void *)v13 + 2) = 0;
  sub_236913EF0(v13, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a2[1] - (char *)*a2) >> 3));
  *((_DWORD *)v13 + 6) = *a3;
  v17 += 32;
  sub_2369347AC(a1, v16);
  uint64_t v14 = a1[1];
  sub_23692C038((uint64_t)v16);
  return v14;
}

void sub_236934798(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_23692C038((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2369347AC(uint64_t *a1, void *a2)
{
  uint64_t result = sub_236934824((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_236934824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  void v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 32) = 0;
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      long long v8 = *(_OWORD *)(a3 - 32);
      a3 -= 32;
      *(_OWORD *)(v7 - 32) = v8;
      *(void *)(v7 - 16) = *(void *)(a3 + 16);
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)a3 = 0;
      *(_DWORD *)(v7 - 8) = *(_DWORD *)(a3 + 24);
      uint64_t v7 = *((void *)&v14 + 1) - 32;
      *((void *)&v14 + 1) -= 32;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  sub_2369348D0((uint64_t)v11);
  return v9;
}

uint64_t sub_2369348D0(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_23692BFF0(a1);
  }
  return a1;
}

uint64_t sub_236934908(uint64_t *a1, long long **a2, double *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (a1[1] - *a1) >> 5;
  unint64_t v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) >> 59) {
    sub_236913FC4();
  }
  uint64_t v9 = (uint64_t)(a1 + 2);
  uint64_t v10 = a1[2] - v4;
  if (v10 >> 4 > v6) {
    unint64_t v6 = v10 >> 4;
  }
  if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFE0) {
    unint64_t v11 = 0x7FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v11 = v6;
  }
  uint64_t v20 = a1 + 2;
  if (v11) {
    char v12 = (char *)sub_23692BB20(v9, v11);
  }
  else {
    char v12 = 0;
  }
  long long v13 = &v12[32 * v5];
  v17[0] = v12;
  v17[1] = v13;
  uint64_t v18 = v13;
  uint64_t v19 = &v12[32 * v11];
  *(void *)long long v13 = 0;
  *((void *)v13 + 1) = 0;
  *((void *)v13 + 2) = 0;
  sub_236913EF0(v13, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a2[1] - (char *)*a2) >> 3));
  float v14 = *a3;
  *((float *)v13 + 6) = v14;
  v18 += 32;
  sub_2369347AC(a1, v17);
  uint64_t v15 = a1[1];
  sub_23692C038((uint64_t)v17);
  return v15;
}

void sub_236934A08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_23692C038((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_236934A1C(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_236913F70(a1, a2);
    uint64_t v4 = (char *)a1[1];
    size_t v5 = 24 * ((24 * a2 - 24) / 0x18) + 24;
    bzero(v4, v5);
    a1[1] = &v4[v5];
  }
  return a1;
}

void sub_236934AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

char *sub_236934AC0(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = result;
  uint64_t v8 = *((void *)result + 2);
  uint64_t v9 = *(char **)result;
  if (a4 > (v8 - *(void *)result) >> 3)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      void *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 61) {
      sub_236913FC4();
    }
    uint64_t v10 = v8 >> 2;
    if (v8 >> 2 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v11 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    uint64_t result = sub_236929FA8(v7, v11);
    long long v13 = (char *)v7[1];
    char v12 = (void **)(v7 + 1);
    uint64_t v9 = v13;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      uint64_t v18 = v9;
      uint64_t v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  char v12 = (void **)(result + 8);
  float v14 = (unsigned char *)*((void *)result + 1);
  unint64_t v15 = (v14 - v9) >> 3;
  if (v15 >= a4) {
    goto LABEL_16;
  }
  unint64_t v16 = &__src[8 * v15];
  if (v14 != v9)
  {
    uint64_t result = (char *)memmove(*(void **)result, __src, v14 - v9);
    uint64_t v9 = (char *)*v12;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    uint64_t v18 = v9;
    uint64_t v19 = v16;
LABEL_18:
    uint64_t result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *char v12 = &v9[v17];
  return result;
}

uint64_t sub_236934BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a1;
  if (a1 != a2)
  {
    size_t v5 = *(const void **)a3;
    size_t v6 = *(void *)(a3 + 8) - *(void *)a3;
    while (*(void *)(v3 + 8) - *(void *)v3 != v6 || memcmp(*(const void **)v3, v5, v6))
    {
      v3 += 24;
      if (v3 == a2) {
        return a2;
      }
    }
  }
  return v3;
}

__n128 *sub_236934C3C(__n128 *a1, __n128 *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if (a1 == a2) {
    return a1;
  }
  size_t v5 = a2;
  do
  {
    sub_236934CA8(a3, v4);
    *(_DWORD *)(a3 + 24) = v4[1].n128_u32[2];
    a3 += 32;
    v4 += 2;
  }
  while (v4 != v5);
  return v5;
}

__n128 sub_236934CA8(uint64_t a1, __n128 *a2)
{
  uint64_t v4 = *(void **)a1;
  if (v4)
  {
    *(void *)(a1 + 8) = v4;
    operator delete(v4);
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
  }
  __n128 result = *a2;
  *(__n128 *)a1 = *a2;
  *(void *)(a1 + 16) = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

uint64_t sub_236934CFC(uint64_t *a1, long long **a2, _DWORD *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (a1[1] - *a1) >> 5;
  unint64_t v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) >> 59) {
    sub_236913FC4();
  }
  uint64_t v9 = (uint64_t)(a1 + 2);
  uint64_t v10 = a1[2] - v4;
  if (v10 >> 4 > v6) {
    unint64_t v6 = v10 >> 4;
  }
  if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFE0) {
    unint64_t v11 = 0x7FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v11 = v6;
  }
  uint64_t v19 = a1 + 2;
  if (v11) {
    char v12 = (char *)sub_23692BB20(v9, v11);
  }
  else {
    char v12 = 0;
  }
  long long v13 = &v12[32 * v5];
  v16[0] = v12;
  v16[1] = v13;
  size_t v17 = v13;
  uint64_t v18 = &v12[32 * v11];
  *(void *)long long v13 = 0;
  *((void *)v13 + 1) = 0;
  *((void *)v13 + 2) = 0;
  sub_236913EF0(v13, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a2[1] - (char *)*a2) >> 3));
  *((_DWORD *)v13 + 6) = *a3;
  v17 += 32;
  sub_2369347AC(a1, v16);
  uint64_t v14 = a1[1];
  sub_23692C038((uint64_t)v16);
  return v14;
}

void sub_236934DF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_23692C038((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_236934E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)sub_2369306AC(a1);
  *uint64_t v4 = &unk_26E9CDBC0;
  v4[1] = a2 + 16;
  sub_236911090((uint64_t)v4);
  return a1;
}

void sub_236934E5C(_Unwind_Exception *a1)
{
  sub_236910A8C(v1);
  _Unwind_Resume(a1);
}

void sub_236934E78(void *a1)
{
  sub_236910A8C(a1);
  JUMPOUT(0x237E07580);
}

void sub_236934EB0(uint64_t *a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X2>, void **a4@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*a1 + 16))(&v25);
  if (v25)
  {
    sub_236944CE4(&v25);
LABEL_3:
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    return;
  }
  sub_236944CE4(&v25);
  if (!a3) {
    goto LABEL_3;
  }
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  do
  {
    uint64_t v8 = (int)sub_2369192C4(a1[2], a2, a3, 0);
    int v9 = (*(uint64_t (**)(uint64_t *, unsigned char *, uint64_t))(*a1 + 112))(a1, a2, v8);
    int v10 = v9;
    char v12 = (char *)a4[1];
    unint64_t v11 = (char *)a4[2];
    if (v12 >= v11)
    {
      unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((v12 - (unsigned char *)*a4) >> 3);
      unint64_t v15 = v14 + 1;
      if (v14 + 1 > 0xAAAAAAAAAAAAAAALL) {
        sub_236913FC4();
      }
      unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((v11 - (unsigned char *)*a4) >> 3);
      if (2 * v16 > v15) {
        unint64_t v15 = 2 * v16;
      }
      if (v16 >= 0x555555555555555) {
        unint64_t v17 = 0xAAAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v17 = v15;
      }
      uint64_t v18 = (char *)sub_236913FDC((uint64_t)(a4 + 2), v17);
      uint64_t v20 = &v18[24 * v14];
      *(void *)uint64_t v20 = a2;
      *((void *)v20 + 1) = v8;
      *((_DWORD *)v20 + 4) = v10;
      uint64_t v22 = (char *)*a4;
      uint64_t v21 = (char *)a4[1];
      uint64_t v23 = v20;
      if (v21 != *a4)
      {
        do
        {
          long long v24 = *(_OWORD *)(v21 - 24);
          *((void *)v23 - 1) = *((void *)v21 - 1);
          *(_OWORD *)(v23 - 24) = v24;
          v23 -= 24;
          v21 -= 24;
        }
        while (v21 != v22);
        uint64_t v21 = (char *)*a4;
      }
      long long v13 = v20 + 24;
      *a4 = v23;
      a4[1] = v20 + 24;
      a4[2] = &v18[24 * v19];
      if (v21) {
        operator delete(v21);
      }
    }
    else
    {
      *(void *)char v12 = a2;
      *((void *)v12 + 1) = v8;
      long long v13 = v12 + 24;
      *((_DWORD *)v12 + 4) = v9;
    }
    a4[1] = v13;
    a2 += v8;
    a3 -= v8;
  }
  while (a3);
}

void sub_2369350A4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2369350C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)sub_2369306AC(a1);
  *uint64_t v4 = &unk_26E9CDCC8;
  v4[1] = a2 + 16;
  sub_236911090((uint64_t)v4);
  return a1;
}

void sub_236935118(_Unwind_Exception *a1)
{
  sub_236910A8C(v1);
  _Unwind_Resume(a1);
}

void sub_236935134(void *a1)
{
  sub_236910A8C(a1);
  JUMPOUT(0x237E07580);
}

void sub_23693516C(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, void **a4@<X8>)
{
  (*(void (**)(unsigned __int8 ***__return_ptr))(*(void *)a1 + 16))(&v26);
  if (v26)
  {
    sub_236944CE4((uint64_t *)&v26);
LABEL_3:
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    return;
  }
  sub_236944CE4((uint64_t *)&v26);
  if (!a3) {
    goto LABEL_3;
  }
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  sub_2369121FC(a2, a3, 0, 0, &v26);
  uint64_t v8 = v26;
  int v9 = v27;
  if (v26 != v27)
  {
    do
    {
      int v10 = (*(uint64_t (**)(uint64_t, unsigned __int8 *, unsigned __int8 *))(*(void *)a1 + 112))(a1, *v8, v8[1]);
      int v11 = v10;
      long long v13 = (char *)a4[1];
      char v12 = (char *)a4[2];
      if (v13 >= v12)
      {
        unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * ((v13 - (unsigned char *)*a4) >> 3);
        unint64_t v16 = v15 + 1;
        if (v15 + 1 > 0xAAAAAAAAAAAAAAALL) {
          sub_236913FC4();
        }
        unint64_t v17 = 0xAAAAAAAAAAAAAAABLL * ((v12 - (unsigned char *)*a4) >> 3);
        if (2 * v17 > v16) {
          unint64_t v16 = 2 * v17;
        }
        if (v17 >= 0x555555555555555) {
          unint64_t v18 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v18 = v16;
        }
        uint64_t v19 = (char *)sub_236913FDC((uint64_t)(a4 + 2), v18);
        uint64_t v21 = &v19[24 * v15];
        *(_OWORD *)uint64_t v21 = *(_OWORD *)v8;
        *((_DWORD *)v21 + 4) = v11;
        uint64_t v23 = (char *)*a4;
        uint64_t v22 = (char *)a4[1];
        long long v24 = v21;
        if (v22 != *a4)
        {
          do
          {
            long long v25 = *(_OWORD *)(v22 - 24);
            *((void *)v24 - 1) = *((void *)v22 - 1);
            *(_OWORD *)(v24 - 24) = v25;
            v24 -= 24;
            v22 -= 24;
          }
          while (v22 != v23);
          uint64_t v22 = (char *)*a4;
        }
        unint64_t v14 = v21 + 24;
        *a4 = v24;
        a4[1] = v21 + 24;
        a4[2] = &v19[24 * v20];
        if (v22) {
          operator delete(v22);
        }
      }
      else
      {
        *(_OWORD *)long long v13 = *(_OWORD *)v8;
        *((_DWORD *)v13 + 4) = v10;
        unint64_t v14 = v13 + 24;
      }
      a4[1] = v14;
      v8 += 2;
    }
    while (v8 != v9);
    uint64_t v8 = v26;
  }
  if (v8)
  {
    uint64_t v27 = v8;
    operator delete(v8);
  }
}

void sub_236935384(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  long long v13 = *(void **)v11;
  if (*(void *)v11)
  {
    *(void *)(v11 + 8) = v13;
    operator delete(v13);
  }
  _Unwind_Resume(exception_object);
}

void sub_2369353B4()
{
  sub_236946D88(3014000, 3014000, "/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece.pb.cc");
  sub_23693717C((uint64_t)&unk_26889AD30, 0);
  sub_2369532CC((uint64_t)sub_2369526B0, (uint64_t)&unk_26889AD30);
}

void sub_236935424()
{
  sub_236946D88(3014000, 3014000, "/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece.pb.cc");
  sub_236936590((uint64_t)&unk_26889ACD8, 0);
  sub_2369532CC((uint64_t)sub_2369526B0, (uint64_t)&unk_26889ACD8);
}

void sub_236935494()
{
  sub_236946D88(3014000, 3014000, "/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece.pb.cc");
  sub_236935504((uint64_t)&unk_26889AC88, 0);
  sub_2369532CC((uint64_t)sub_2369526B0, (uint64_t)&unk_26889AC88);
}

uint64_t sub_236935504(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26E9CDDD0;
  *(void *)(a1 + 8) = a2;
  sub_236947714(a1 + 16, a2);
  *(void *)(a1 + 4sub_23692A244(&a9, 0) = 0;
  if (atomic_load_explicit(dword_26B808C50, memory_order_acquire)) {
    sub_236952920(dword_26B808C50);
  }
  *(void *)(a1 + 48) = &qword_26889B028;
  *(void *)(a1 + 56) = &qword_26889B028;
  *(void *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 72) = 0;
  return a1;
}

void sub_236935588(_Unwind_Exception *a1)
{
  sub_2369477F4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23693559C(uint64_t a1)
{
  return a1;
}

uint64_t *sub_2369355D8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if ((v2 & 1) == 0)
  {
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*v3)
  {
LABEL_3:
    sub_2369470F4((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece.pb.cc", 140);
    uint64_t v4 = sub_23694710C(v13, "CHECK failed: GetArena() == nullptr: ");
    sub_236947248((uint64_t)&v12, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v13);
  }
LABEL_4:
  __n128 result = (uint64_t *)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_26889B028)
  {
    uint64_t v6 = sub_236937CC8(result);
    uint64_t v7 = v6;
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    __n128 result = (uint64_t *)MEMORY[0x237E07580](v7, 0x1012C40EC159624);
  }
  int v9 = *(uint64_t **)(a1 + 56);
  uint64_t v8 = (uint64_t *)(a1 + 56);
  if (v9 != &qword_26889B028)
  {
    uint64_t v10 = sub_236937CC8(v8);
    uint64_t v11 = v10;
    if (*(char *)(v10 + 23) < 0) {
      operator delete(*(void **)v10);
    }
    return (uint64_t *)MEMORY[0x237E07580](v11, 0x1012C40EC159624);
  }
  return result;
}

void sub_2369356E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_236935700(uint64_t *result)
{
  uint64_t v1 = *result;
  if (*result)
  {
    unint64_t v2 = v1 & 0xFFFFFFFFFFFFFFFELL;
    if (!*(void *)(v1 & 0xFFFFFFFFFFFFFFFELL) && v2 != 0)
    {
      if (*(char *)(v2 + 31) < 0) {
        operator delete(*(void **)(v2 + 8));
      }
      JUMPOUT(0x237E07580);
    }
  }
  return result;
}

void sub_23693577C(uint64_t a1)
{
  sub_23693559C(a1);
  JUMPOUT(0x237E07580);
}

void *sub_2369357B4()
{
  if (atomic_load_explicit(dword_26B808C50, memory_order_acquire)) {
    sub_236952920(dword_26B808C50);
  }
  return &unk_26889AC88;
}

unsigned __int8 *sub_2369357F0(uint64_t a1)
{
  __n128 result = sub_23694B59C((unsigned __int8 *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)unint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v3 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v5 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
LABEL_11:
  if ((v3 & 0x1C) != 0)
  {
    *(_DWORD *)(a1 + 72) = 0;
    *(void *)(a1 + 64) = 0;
  }
  *(_DWORD *)(a1 + 4sub_23692A244(&a9, 0) = 0;
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 31) < 0)
    {
      **(unsigned char **)(v7 + 8) = 0;
      *(void *)(v7 + 16) = 0;
    }
    else
    {
      *(unsigned char *)(v7 + 8) = 0;
      *(unsigned char *)(v7 + 31) = 0;
    }
  }
  return result;
}

uint64_t sub_2369358C0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v36 = a2;
  int v5 = 0;
  if ((sub_236937D9C((uint64_t)a3, (char **)v36, a3[11].i32[1]) & 1) == 0)
  {
    unint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (char *)(*(void *)v36 + 1);
      unsigned int v9 = **(unsigned char **)v36;
      if ((char)**(unsigned char **)v36 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*v8 < 0)
        {
          uint64_t v27 = sub_2369543D8(*(uint64_t *)v36, v10 - 128);
          *(void *)uint64_t v36 = v27;
          if (!v27) {
            goto LABEL_56;
          }
          uint64_t v8 = (char *)v27;
          unsigned int v9 = v28;
          goto LABEL_8;
        }
        uint64_t v8 = (char *)(*(void *)v36 + 2);
      }
      *(void *)uint64_t v36 = v8;
LABEL_8:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_37;
          }
          *(_DWORD *)(a1 + 40) |= 1u;
          uint64_t v11 = *(void *)(a1 + 8);
          char v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFELL);
          if (v11) {
            char v12 = (void *)*v12;
          }
          long long v13 = (uint64_t *)(a1 + 48);
          goto LABEL_22;
        case 2u:
          if (v9 != 16) {
            goto LABEL_37;
          }
          v5 |= 4u;
          unint64_t v14 = v8 + 1;
          int v15 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_17;
          }
          int v16 = *v14;
          int v15 = v15 + (v16 << 7) - 128;
          if (v16 < 0)
          {
            uint64_t v30 = sub_236954328((uint64_t)v8, v15);
            *(void *)uint64_t v36 = v30;
            *(_DWORD *)(a1 + 64) = v31;
            if (!v30) {
              goto LABEL_56;
            }
          }
          else
          {
            unint64_t v14 = v8 + 2;
LABEL_17:
            *(void *)uint64_t v36 = v14;
            *(_DWORD *)(a1 + 64) = v15;
          }
          goto LABEL_35;
        case 3u:
          if (v9 != 26) {
            goto LABEL_37;
          }
          *(_DWORD *)(a1 + 40) |= 2u;
          uint64_t v17 = *(void *)(a1 + 8);
          char v12 = (void *)(v17 & 0xFFFFFFFFFFFFFFFELL);
          if (v17) {
            char v12 = (void *)*v12;
          }
          long long v13 = (uint64_t *)(a1 + 56);
LABEL_22:
          unint64_t v18 = (std::string *)sub_236945F50(v13, (uint64_t)v12);
          uint64_t v19 = (void *)sub_23695448C(v18, *(char **)v36, (uint64_t)a3);
          goto LABEL_23;
        case 4u:
          if (v9 != 32) {
            goto LABEL_37;
          }
          v5 |= 8u;
          uint64_t v20 = v8 + 1;
          int v21 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_29;
          }
          int v22 = *v20;
          int v21 = v21 + (v22 << 7) - 128;
          if (v22 < 0)
          {
            uint64_t v32 = sub_236954328((uint64_t)v8, v21);
            *(void *)uint64_t v36 = v32;
            *(_DWORD *)(a1 + 68) = v33;
            if (!v32) {
              goto LABEL_56;
            }
          }
          else
          {
            uint64_t v20 = v8 + 2;
LABEL_29:
            *(void *)uint64_t v36 = v20;
            *(_DWORD *)(a1 + 68) = v21;
          }
          goto LABEL_35;
        case 5u:
          if (v9 != 40) {
            goto LABEL_37;
          }
          v5 |= 0x10u;
          uint64_t v23 = v8 + 1;
          int v24 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_34;
          }
          int v25 = *v23;
          int v24 = v24 + (v25 << 7) - 128;
          if (v25 < 0)
          {
            uint64_t v34 = sub_236954328((uint64_t)v8, v24);
            *(void *)uint64_t v36 = v34;
            *(_DWORD *)(a1 + 72) = v35;
            if (!v34) {
              goto LABEL_56;
            }
          }
          else
          {
            uint64_t v23 = v8 + 2;
LABEL_34:
            *(void *)uint64_t v36 = v23;
            *(_DWORD *)(a1 + 72) = v24;
          }
          goto LABEL_35;
        default:
LABEL_37:
          if (v9) {
            BOOL v26 = (v9 & 7) == 4;
          }
          else {
            BOOL v26 = 1;
          }
          if (v26)
          {
            a3[10].i32[0] = v9 - 1;
            goto LABEL_2;
          }
          if (v9 < 0x640)
          {
            if (*v7)
            {
              uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              uint64_t v29 = (std::string *)sub_236937EDC((unint64_t *)(a1 + 8));
              uint64_t v8 = *(char **)v36;
            }
            uint64_t v19 = sub_236954948(v9, v29, v8, a3);
          }
          else
          {
            uint64_t v19 = sub_23694CE6C((uint64_t *)(a1 + 16), v9, (unsigned __int8 *)v8, (uint64_t)&unk_26889AC88, (unint64_t *)(a1 + 8), a3);
          }
LABEL_23:
          *(void *)uint64_t v36 = v19;
          if (!v19)
          {
LABEL_56:
            *(void *)uint64_t v36 = 0;
            goto LABEL_2;
          }
LABEL_35:
          if (sub_236937D9C((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return *(void *)v36;
}

char *sub_236935C04(uint64_t a1, char *a2, unint64_t *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 4) == 0) {
      goto LABEL_3;
    }
LABEL_11:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_236946668((uint64_t)a3, v4);
    }
    unsigned int v8 = *(_DWORD *)(a1 + 64);
    *unint64_t v4 = 16;
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        v4 += 3;
        do
        {
          *(v4 - 1) = v10 | 0x80;
          unsigned int v13 = v10 >> 7;
          ++v4;
          unsigned int v14 = v10 >> 14;
          v10 >>= 7;
        }
        while (v14);
        *(v4 - 1) = v13;
        if ((v6 & 2) != 0) {
          goto LABEL_27;
        }
      }
      else
      {
        v4[2] = v10;
        v4 += 3;
        if ((v6 & 2) != 0) {
          goto LABEL_27;
        }
      }
    }
    else
    {
      v4[1] = v8;
      v4 += 2;
      if ((v6 & 2) != 0) {
        goto LABEL_27;
      }
    }
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_28;
  }
  unint64_t v4 = sub_236935EBC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v6 & 4) != 0) {
    goto LABEL_11;
  }
LABEL_3:
  if ((v6 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_27:
  unint64_t v4 = sub_236935EBC(a3, 3, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_39;
    }
    goto LABEL_6;
  }
LABEL_28:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_236946668((uint64_t)a3, v4);
  }
  unsigned int v15 = *(_DWORD *)(a1 + 68);
  *unint64_t v4 = 32;
  if (v15 > 0x7F)
  {
    v4[1] = v15 | 0x80;
    unsigned int v16 = v15 >> 7;
    if (v15 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - 1) = v16 | 0x80;
        unsigned int v17 = v16 >> 7;
        ++v4;
        unsigned int v18 = v16 >> 14;
        v16 >>= 7;
      }
      while (v18);
      *(v4 - 1) = v17;
      if ((v6 & 0x10) == 0) {
        goto LABEL_39;
      }
    }
    else
    {
      v4[2] = v16;
      v4 += 3;
      if ((v6 & 0x10) == 0) {
        goto LABEL_39;
      }
    }
  }
  else
  {
    v4[1] = v15;
    v4 += 2;
    if ((v6 & 0x10) == 0) {
      goto LABEL_39;
    }
  }
LABEL_6:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_236946668((uint64_t)a3, v4);
  }
  unsigned int v7 = *(_DWORD *)(a1 + 72);
  *unint64_t v4 = 40;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unsigned int v9 = v7 >> 7;
    if (v7 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - 1) = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        ++v4;
        unsigned int v12 = v9 >> 14;
        v9 >>= 7;
      }
      while (v12);
      *(v4 - 1) = v11;
    }
    else
    {
      v4[2] = v9;
      v4 += 3;
    }
  }
  else
  {
    v4[1] = v7;
    v4 += 2;
  }
LABEL_39:
  uint64_t v19 = sub_23694DC64(a1 + 16, 200, 0x20000000, v4, (uint64_t *)a3);
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v20;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v23 + 31) < 0)
  {
    int v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    int v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if ((uint64_t)(*a3 - (void)v19) >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v19, v24, (int)v25);
    v20 += v26;
    return v20;
  }
  return sub_23694677C((uint64_t *)a3, (char *)v24, v25, (unint64_t)v19);
}

char *sub_236935EBC(unint64_t *a1, int a2, const void **a3, char *a4)
{
  if (*((char *)a3 + 23) < 0)
  {
    int64_t v4 = (int64_t)a3[1];
    if (v4 > 127) {
      goto LABEL_24;
    }
  }
  else
  {
    int64_t v4 = *((unsigned __int8 *)a3 + 23);
  }
  unsigned int v5 = 8 * a2;
  uint64_t v6 = 1;
  uint64_t v7 = 2;
  uint64_t v8 = 3;
  uint64_t v9 = 4;
  if ((8 * a2) >> 28) {
    uint64_t v9 = 5;
  }
  if (v5 >= 0x200000) {
    uint64_t v8 = v9;
  }
  if (v5 >= 0x4000) {
    uint64_t v7 = v8;
  }
  if (v5 >= 0x80) {
    uint64_t v6 = v7;
  }
  if ((uint64_t)(*a1 + ~(unint64_t)&a4[v6] + 16) >= v4)
  {
    unsigned int v10 = v5 | 2;
    if ((v5 | 2) > 0x7F)
    {
      *a4 = v5 | 0x82;
      unsigned int v12 = v5 >> 7;
      if (v10 >> 14)
      {
        unsigned int v11 = a4 + 2;
        do
        {
          *(v11 - 1) = v12 | 0x80;
          unsigned int v13 = v12 >> 7;
          ++v11;
          unsigned int v14 = v12 >> 14;
          v12 >>= 7;
        }
        while (v14);
        *(v11 - 1) = v13;
      }
      else
      {
        a4[1] = v12;
        unsigned int v11 = a4 + 2;
      }
    }
    else
    {
      *a4 = v10;
      unsigned int v11 = a4 + 1;
    }
    *unsigned int v11 = v4;
    unsigned int v15 = v11 + 1;
    if (*((char *)a3 + 23) >= 0) {
      unsigned int v16 = a3;
    }
    else {
      unsigned int v16 = *a3;
    }
    memcpy(v15, v16, v4);
    return &v15[v4];
  }
LABEL_24:
  return sub_2369469C4(a1, a2, (void **)a3, a4);
}

uint64_t sub_236935FE8(uint64_t a1)
{
  uint64_t result = sub_236950998(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v3)
  {
    unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    result += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_16:
      result += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v3 & 8) == 0)
      {
LABEL_6:
        if ((v3 & 0x10) == 0) {
          goto LABEL_8;
        }
        goto LABEL_7;
      }
      goto LABEL_17;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  unint64_t v8 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  uint64_t v10 = *(void *)(v8 + 8);
  if ((v9 & 0x80u) == 0) {
    uint64_t v10 = v9;
  }
  result += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_5:
  if ((v3 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_17:
  result += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x10) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v11 = v4 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    result += v12;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_23693615C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26E9CE938, (const struct __class_type_info *)&unk_26E9CDF40, 0))sub_2369386E0(); {
  sub_2369361E4(a1, (uint64_t)lpsrc);
  }
}

void sub_2369361E4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    sub_2369470F4((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece.pb.cc", 375);
    uint64_t v4 = sub_23694710C(v21, "CHECK failed: (&from) != (this): ");
    sub_236947248((uint64_t)&v20, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v21);
  }
  sub_23694B63C(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFELL;
    unint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFFELL) + 8;
    uint64_t v8 = *(void *)(a1 + 8);
    if (v8) {
      uint64_t v9 = (std::string *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
    }
    else {
      uint64_t v9 = (std::string *)sub_236937EDC((unint64_t *)(a1 + 8));
    }
    int v10 = *(char *)(v6 + 31);
    if (v10 >= 0) {
      unint64_t v11 = (const std::string::value_type *)v7;
    }
    else {
      unint64_t v11 = *(const std::string::value_type **)(v6 + 8);
    }
    if (v10 >= 0) {
      std::string::size_type v12 = *(unsigned __int8 *)(v6 + 31);
    }
    else {
      std::string::size_type v12 = *(void *)(v6 + 16);
    }
    std::string::append(v9, v11, v12);
  }
  int v13 = *(_DWORD *)(a2 + 40);
  if ((v13 & 0x1F) != 0)
  {
    if (v13)
    {
      unsigned int v14 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v15 = *(void *)(a1 + 8);
      unsigned int v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFELL);
      if (v15) {
        unsigned int v16 = (void *)*v16;
      }
      sub_236945F18((uint64_t *)(a1 + 48), v14, (uint64_t)v16);
      if ((v13 & 2) == 0)
      {
LABEL_16:
        if ((v13 & 4) == 0) {
          goto LABEL_17;
        }
        goto LABEL_28;
      }
    }
    else if ((v13 & 2) == 0)
    {
      goto LABEL_16;
    }
    unsigned int v17 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFELL);
    if (v18) {
      uint64_t v19 = (void *)*v19;
    }
    sub_236945F18((uint64_t *)(a1 + 56), v17, (uint64_t)v19);
    if ((v13 & 4) == 0)
    {
LABEL_17:
      if ((v13 & 8) == 0) {
        goto LABEL_18;
      }
      goto LABEL_29;
    }
LABEL_28:
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    if ((v13 & 8) == 0)
    {
LABEL_18:
      if ((v13 & 0x10) == 0)
      {
LABEL_20:
        *(_DWORD *)(a1 + 40) |= v13;
        return;
      }
LABEL_19:
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      goto LABEL_20;
    }
LABEL_29:
    *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
    if ((v13 & 0x10) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
}

void sub_236936368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_236936380(uint64_t a1)
{
  return sub_23694CACC(a1 + 16);
}

uint64_t *sub_236936388(uint64_t a1, uint64_t a2)
{
  sub_23694C8B4(a1 + 16, a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a2 + 8);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      unint64_t v10 = sub_236937EDC((unint64_t *)(a2 + 8));
      uint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
LABEL_21:
      unint64_t v11 = sub_236937EDC((unint64_t *)(a1 + 8));
      goto LABEL_7;
    }
  }
  else if ((v6 & 1) == 0)
  {
    uint64_t v7 = 0;
    int v8 = *(_DWORD *)(a1 + 40);
    *(_DWORD *)(a1 + 4sub_23692A244(&a9, 0) = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a2 + 4sub_23692A244(&a9, 0) = v8;
    uint64_t v9 = (uint64_t *)(v4 & 0xFFFFFFFFFFFFFFFELL);
    goto LABEL_9;
  }
  unint64_t v10 = (v6 & 0xFFFFFFFFFFFFFFFELL) + 8;
  if ((v4 & 1) == 0) {
    goto LABEL_21;
  }
LABEL_6:
  unint64_t v11 = (v4 & 0xFFFFFFFFFFFFFFFELL) + 8;
LABEL_7:
  uint64_t v12 = *(void *)(v11 + 16);
  long long v13 = *(_OWORD *)v11;
  uint64_t v14 = *(void *)(v10 + 16);
  *(_OWORD *)unint64_t v11 = *(_OWORD *)v10;
  *(void *)(v11 + 16) = v14;
  *(_OWORD *)unint64_t v10 = v13;
  *(void *)(v10 + 16) = v12;
  uint64_t v15 = *(void *)(a1 + 8);
  LODWORD(v14) = *(_DWORD *)(a1 + 40);
  *(_DWORD *)(a1 + 4sub_23692A244(&a9, 0) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a2 + 4sub_23692A244(&a9, 0) = v14;
  uint64_t v9 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFELL);
  if (v15)
  {
    uint64_t v16 = *v9;
    uint64_t v7 = 1;
    goto LABEL_10;
  }
  uint64_t v7 = 0;
LABEL_9:
  uint64_t v16 = (uint64_t)v9;
LABEL_10:
  if (*(uint64_t **)(a1 + 48) != &qword_26889B028 || *(uint64_t **)(a2 + 48) != &qword_26889B028)
  {
    unsigned int v17 = sub_236945F50((uint64_t *)(a1 + 48), v16);
    uint64_t v18 = sub_236945F50((uint64_t *)(a2 + 48), v16);
    uint64_t v19 = v17[2];
    long long v20 = *(_OWORD *)v17;
    uint64_t v21 = v18[2];
    *(_OWORD *)unsigned int v17 = *(_OWORD *)v18;
    void v17[2] = v21;
    *(_OWORD *)uint64_t v18 = v20;
    void v18[2] = v19;
    uint64_t v7 = *v5 & 1;
    uint64_t v9 = (uint64_t *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t result = (uint64_t *)(a1 + 56);
  if (v7) {
    uint64_t v9 = (uint64_t *)*v9;
  }
  if ((uint64_t *)*result != &qword_26889B028 || *(uint64_t **)(a2 + 56) != &qword_26889B028)
  {
    unint64_t v23 = sub_236945F50(result, (uint64_t)v9);
    uint64_t result = sub_236945F50((uint64_t *)(a2 + 56), (uint64_t)v9);
    uint64_t v24 = v23[2];
    long long v25 = *(_OWORD *)v23;
    uint64_t v26 = result[2];
    *(_OWORD *)unint64_t v23 = *(_OWORD *)result;
    _OWORD v23[2] = v26;
    *(_OWORD *)uint64_t result = v25;
    result[2] = v24;
  }
  uint64_t v27 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a2 + 64) = v27;
  LODWORD(v27) = *(_DWORD *)(a1 + 72);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a2 + 72) = v27;
  return result;
}

void *sub_236936580@<X0>(void *a1@<X8>)
{
  return sub_236919B40(a1, "sentencepiece.SentencePieceText.SentencePiece");
}

uint64_t sub_236936590(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26E9CDE50;
  *(void *)(a1 + 8) = a2;
  sub_236947714(a1 + 16, a2);
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 4sub_23692A244(&a9, 0) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  if (atomic_load_explicit(dword_26B808C30, memory_order_acquire)) {
    sub_236952920(dword_26B808C30);
  }
  *(void *)(a1 + 72) = &qword_26889B028;
  *(_DWORD *)(a1 + 8sub_23692A244(&a9, 0) = 0;
  return a1;
}

void sub_236936628(_Unwind_Exception *a1)
{
  sub_236938118(v2);
  sub_2369477F4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_236936648(uint64_t a1)
{
  return a1;
}

uint64_t sub_23693668C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(void *)(result + 8);
  int v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if ((v2 & 1) == 0)
  {
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*v3)
  {
LABEL_3:
    sub_2369470F4((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece.pb.cc", 486);
    uint64_t v4 = sub_23694710C(v10, "CHECK failed: GetArena() == nullptr: ");
    sub_236947248((uint64_t)&v9, (const char **)&v4->__r_.__value_.__l.__data_);
    uint64_t result = sub_236947250((uint64_t)v10);
  }
LABEL_4:
  uint64_t v6 = *(uint64_t **)(v1 + 72);
  uint64_t v5 = (uint64_t *)(v1 + 72);
  if (v6 != &qword_26889B028)
  {
    uint64_t v7 = sub_236937CC8(v5);
    uint64_t v8 = v7;
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    return MEMORY[0x237E07580](v8, 0x1012C40EC159624);
  }
  return result;
}

void sub_236936754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_236936770(uint64_t a1)
{
  sub_236936648(a1);
  JUMPOUT(0x237E07580);
}

void *sub_2369367A8()
{
  if (atomic_load_explicit(dword_26B808C30, memory_order_acquire)) {
    sub_236952920(dword_26B808C30);
  }
  return &unk_26889ACD8;
}

unsigned __int8 *sub_2369367E4(uint64_t a1)
{
  sub_23694B59C((unsigned __int8 *)(a1 + 16));
  uint64_t result = sub_236937FB8((unsigned __int8 *)(a1 + 48));
  if (*(unsigned char *)(a1 + 40))
  {
    unint64_t v3 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  *(_DWORD *)(a1 + 8sub_23692A244(&a9, 0) = 0;
  *(_DWORD *)(a1 + 4sub_23692A244(&a9, 0) = 0;
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 31) < 0)
    {
      **(unsigned char **)(v5 + 8) = 0;
      *(void *)(v5 + 16) = 0;
    }
    else
    {
      *(unsigned char *)(v5 + 8) = 0;
      *(unsigned char *)(v5 + 31) = 0;
    }
  }
  return result;
}

uint64_t sub_236936878(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v29 = a2;
  int v5 = 0;
  if ((sub_236937D9C((uint64_t)a3, (char **)v29, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (char *)(*(void *)v29 + 1);
      unsigned int v9 = **(unsigned char **)v29;
      if (((char)**(unsigned char **)v29 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*v8 & 0x80000000) == 0) {
        break;
      }
      uint64_t v26 = sub_2369543D8(*(uint64_t *)v29, v10 - 128);
      *(void *)uint64_t v29 = v26;
      if (!v26) {
        goto LABEL_48;
      }
      uint64_t v8 = (char *)v26;
      unsigned int v9 = v27;
LABEL_8:
      unsigned int v11 = v9 >> 3;
      if (v9 >> 3 == 3)
      {
        if (v9 == 29)
        {
          v5 |= 2u;
          *(_DWORD *)(a1 + 8sub_23692A244(&a9, 0) = *(_DWORD *)v8;
          *(void *)uint64_t v29 = v8 + 4;
          goto LABEL_44;
        }
        goto LABEL_14;
      }
      if (v11 == 2)
      {
        if (v9 == 18)
        {
          uint64_t v15 = v8 - 1;
          while (1)
          {
            uint64_t v16 = (unsigned __int8 *)(v15 + 1);
            *(void *)uint64_t v29 = v15 + 1;
            unsigned int v17 = *(int **)(a1 + 64);
            if (!v17) {
              break;
            }
            uint64_t v18 = *(int *)(a1 + 56);
            int v19 = *v17;
            if ((int)v18 >= *v17)
            {
              if (v19 == *(_DWORD *)(a1 + 60))
              {
LABEL_29:
                sub_2369597C8(a1 + 48, v19 + 1);
                unsigned int v17 = *(int **)(a1 + 64);
                int v19 = *v17;
              }
              *unsigned int v17 = v19 + 1;
              uint64_t v20 = sub_236937A08(*(void *)(a1 + 48));
              uint64_t v21 = *(void *)(a1 + 64);
              uint64_t v22 = *(int *)(a1 + 56);
              *(_DWORD *)(a1 + 56) = v22 + 1;
              *(void *)(v21 + 8 * v22 + 8) = v20;
              uint64_t v16 = *(unsigned __int8 **)v29;
              goto LABEL_31;
            }
            *(_DWORD *)(a1 + 56) = v18 + 1;
            uint64_t v20 = *(void *)&v17[2 * v18 + 2];
LABEL_31:
            uint64_t v15 = (char *)sub_236936B30(a3, v20, v16);
            *(void *)uint64_t v29 = v15;
            if (!v15) {
              goto LABEL_48;
            }
            if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
              goto LABEL_44;
            }
          }
          int v19 = *(_DWORD *)(a1 + 60);
          goto LABEL_29;
        }
LABEL_14:
        if (v9) {
          BOOL v13 = (v9 & 7) == 4;
        }
        else {
          BOOL v13 = 1;
        }
        if (v13)
        {
          a3[10].i32[0] = v9 - 1;
          goto LABEL_2;
        }
        if (v9 < 0x640)
        {
          if (*v7)
          {
            unsigned int v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            unsigned int v28 = (std::string *)sub_236937EDC((unint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v29;
          }
          uint64_t v14 = sub_236954948(v9, v28, v8, a3);
        }
        else
        {
          uint64_t v14 = sub_23694CE6C((uint64_t *)(a1 + 16), v9, (unsigned __int8 *)v8, (uint64_t)&unk_26889ACD8, (unint64_t *)(a1 + 8), a3);
        }
        goto LABEL_43;
      }
      if (v11 != 1 || v9 != 10) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v23 = *(void *)(a1 + 8);
      uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFELL);
      if (v23) {
        uint64_t v24 = (void *)*v24;
      }
      long long v25 = (std::string *)sub_236945F50((uint64_t *)(a1 + 72), (uint64_t)v24);
      uint64_t v14 = (void *)sub_23695448C(v25, *(char **)v29, (uint64_t)a3);
LABEL_43:
      *(void *)uint64_t v29 = v14;
      if (!v14)
      {
LABEL_48:
        *(void *)uint64_t v29 = 0;
        goto LABEL_2;
      }
LABEL_44:
      if (sub_236937D9C((uint64_t)a3, (char **)v29, a3[11].i32[1])) {
        goto LABEL_2;
      }
    }
    uint64_t v8 = (char *)(*(void *)v29 + 2);
LABEL_7:
    *(void *)uint64_t v29 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return *(void *)v29;
}

uint64_t sub_236936B30(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v6 = (char)*a3;
  unsigned int v7 = *a3;
  if (v6 < 0)
  {
    uint64_t result = sub_23695441C((uint64_t)a3, v7);
    if (!result) {
      return result;
    }
    uint64_t v8 = result;
    unsigned int v7 = v10;
  }
  else
  {
    uint64_t v8 = (uint64_t)(a3 + 1);
  }
  int v11 = sub_236938208((uint64_t)a1, v8, v7);
  int v12 = a1[11].i32[0];
  BOOL v13 = __OFSUB__(v12--, 1);
  a1[11].i32[0] = v12;
  if (v12 < 0 != v13) {
    return 0;
  }
  int v14 = v11;
  uint64_t result = sub_2369358C0(a2, v8, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v15 = a1[3].i32[1] + v14;
  a1[3].i32[1] = v15;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v15 & (v15 >> 31)));
  return result;
}

char *sub_236936BF8(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6) {
    uint64_t v4 = sub_236935EBC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  int v7 = *(_DWORD *)(a1 + 56);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_236946668((uint64_t)a3, v4);
      }
      uint64_t v9 = sub_2369290DC(a1 + 48, i);
      *uint64_t v4 = 18;
      unsigned int v10 = *(_DWORD *)(v9 + 44);
      if (v10 > 0x7F)
      {
        v4[1] = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        if (v10 >> 14)
        {
          int v11 = v4 + 3;
          do
          {
            *(v11 - 1) = v12 | 0x80;
            unsigned int v13 = v12 >> 7;
            ++v11;
            unsigned int v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - 1) = v13;
        }
        else
        {
          v4[2] = v12;
          int v11 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v10;
        int v11 = v4 + 2;
      }
      uint64_t v4 = sub_236935C04(v9, v11, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_236946668((uint64_t)a3, v4);
    }
    int v15 = *(_DWORD *)(a1 + 80);
    *uint64_t v4 = 29;
    *(_DWORD *)(v4 + 1) = v15;
    v4 += 5;
  }
  uint64_t v16 = sub_23694DC64(a1 + 16, 200, 0x20000000, v4, (uint64_t *)a3);
  unsigned int v17 = v16;
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v17;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v16) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v16, v21, (int)v22);
    v17 += v23;
    return v17;
  }
  return sub_23694677C((uint64_t *)a3, (char *)v21, v22, (unint64_t)v16);
}

uint64_t sub_236936DEC(uint64_t a1)
{
  uint64_t v2 = sub_236950998(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_236935FE8(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 3) != 0)
  {
    if (v10)
    {
      unint64_t v11 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v10 & 2) != 0) {
      v4 += 5;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v4 += v17;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_236936EF8(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26E9CE938, (const struct __class_type_info *)&unk_26E9CDF58, 0))sub_2369386E0(); {
  sub_236936F80(a1, (uint64_t)lpsrc);
  }
}

void sub_236936F80(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece.pb.cc", 674);
    uint64_t v4 = sub_23694710C(v18, "CHECK failed: (&from) != (this): ");
    sub_236947248((uint64_t)&v17, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v18);
  }
  sub_23694B63C(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFELL;
    unint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFFELL) + 8;
    uint64_t v8 = *(void *)(a1 + 8);
    if (v8) {
      uint64_t v9 = (std::string *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
    }
    else {
      uint64_t v9 = (std::string *)sub_236937EDC((unint64_t *)(a1 + 8));
    }
    int v10 = *(char *)(v6 + 31);
    if (v10 >= 0) {
      unint64_t v11 = (const std::string::value_type *)v7;
    }
    else {
      unint64_t v11 = *(const std::string::value_type **)(v6 + 8);
    }
    if (v10 >= 0) {
      std::string::size_type v12 = *(unsigned __int8 *)(v6 + 31);
    }
    else {
      std::string::size_type v12 = *(void *)(v6 + 16);
    }
    std::string::append(v9, v11, v12);
  }
  sub_2369382C4(a1 + 48, a2 + 48);
  int v13 = *(_DWORD *)(a2 + 40);
  if ((v13 & 3) != 0)
  {
    if (v13)
    {
      uint64_t v14 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v15 = *(void *)(a1 + 8);
      unint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFELL);
      if (v15) {
        unint64_t v16 = (void *)*v16;
      }
      sub_236945F18((uint64_t *)(a1 + 72), v14, (uint64_t)v16);
    }
    if ((v13 & 2) != 0) {
      *(_DWORD *)(a1 + 8sub_23692A244(&a9, 0) = *(_DWORD *)(a2 + 80);
    }
    *(_DWORD *)(a1 + 40) |= v13;
  }
}

void sub_2369370B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2369370C8(uint64_t a1)
{
  uint64_t result = sub_23694CACC(a1 + 16);
  if (result)
  {
    return sub_236937114(a1 + 48);
  }
  return result;
}

BOOL sub_236937114(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8);
  do
  {
    int v3 = v2;
    BOOL v4 = __OFSUB__(v2--, 1);
    if (v2 < 0 != v4) {
      break;
    }
    uint64_t v5 = sub_2369290DC(a1, v2);
  }
  while ((sub_23694CACC(v5 + 16) & 1) != 0);
  return v3 < 1;
}

void *sub_23693716C@<X0>(void *a1@<X8>)
{
  return sub_236919B40(a1, "sentencepiece.SentencePieceText");
}

uint64_t sub_23693717C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26E9CDED0;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 4sub_23692A244(&a9, 0) = 0;
  if (atomic_load_explicit(dword_26B808C10, memory_order_acquire)) {
    sub_236952920(dword_26B808C10);
  }
  return a1;
}

void sub_2369371EC(_Unwind_Exception *a1)
{
  sub_236938474(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_236937204(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  BOOL v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if (v2)
  {
    if (!*v4) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (v4)
  {
LABEL_3:
    sub_2369470F4((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece.pb.cc", 755);
    uint64_t v5 = sub_23694710C(v8, "CHECK failed: GetArena() == nullptr: ");
    sub_236947248((uint64_t)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v8);
  }
LABEL_4:
  sub_236935700(v3);
  sub_236938474((uint64_t *)(a1 + 16));
  return a1;
}

void sub_23693729C(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  sub_236912F70(a1);
}

void sub_2369372C0(uint64_t a1)
{
  sub_236937204(a1);
  JUMPOUT(0x237E07580);
}

unsigned __int8 *sub_2369372F8(uint64_t a1)
{
  uint64_t result = sub_236938068((unsigned __int8 *)(a1 + 16));
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 31) < 0)
    {
      **(unsigned char **)(v4 + 8) = 0;
      *(void *)(v4 + 16) = 0;
    }
    else
    {
      *(unsigned char *)(v4 + 8) = 0;
      *(unsigned char *)(v4 + 31) = 0;
    }
  }
  return result;
}

char *sub_23693734C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v22 = a2;
  if ((sub_236937D9C((uint64_t)a3, &v22, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v6 = v22 + 1;
      unsigned int v7 = *v22;
      if ((*v22 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*v6 & 0x80000000) == 0) {
        break;
      }
      int v19 = (char *)sub_2369543D8((uint64_t)v22, v8 - 128);
      uint64_t v22 = v19;
      if (!v19) {
        return 0;
      }
      unint64_t v6 = v19;
      unsigned int v7 = v20;
LABEL_7:
      if (v7 == 10)
      {
        unint64_t v11 = v6 - 1;
        while (1)
        {
          std::string::size_type v12 = (unsigned __int8 *)(v11 + 1);
          uint64_t v22 = v11 + 1;
          int v13 = *(int **)(a1 + 32);
          if (!v13) {
            break;
          }
          uint64_t v14 = *(int *)(a1 + 24);
          int v15 = *v13;
          if ((int)v14 >= *v13)
          {
            if (v15 == *(_DWORD *)(a1 + 28))
            {
LABEL_22:
              sub_2369597C8(a1 + 16, v15 + 1);
              int v13 = *(int **)(a1 + 32);
              int v15 = *v13;
            }
            *int v13 = v15 + 1;
            uint64_t v16 = sub_236937AD8(*(void *)(a1 + 16));
            uint64_t v17 = *(void *)(a1 + 32);
            uint64_t v18 = *(int *)(a1 + 24);
            *(_DWORD *)(a1 + 24) = v18 + 1;
            *(void *)(v17 + 8 * v18 + 8) = v16;
            std::string::size_type v12 = (unsigned __int8 *)v22;
            goto LABEL_24;
          }
          *(_DWORD *)(a1 + 24) = v14 + 1;
          uint64_t v16 = *(void *)&v13[2 * v14 + 2];
LABEL_24:
          unint64_t v11 = (char *)sub_23693752C(a3, v16, v12);
          uint64_t v22 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 10) {
            goto LABEL_27;
          }
        }
        int v15 = *(_DWORD *)(a1 + 28);
        goto LABEL_22;
      }
      if (v7) {
        BOOL v9 = (v7 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
        a3[10].i32[0] = v7 - 1;
        return v22;
      }
      if (*v5)
      {
        int v10 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        int v10 = (std::string *)sub_236937EDC((unint64_t *)(a1 + 8));
        unint64_t v6 = v22;
      }
      uint64_t v22 = (char *)sub_236954948(v7, v10, v6, a3);
      if (!v22) {
        return 0;
      }
LABEL_27:
      if (sub_236937D9C((uint64_t)a3, &v22, a3[11].i32[1])) {
        return v22;
      }
    }
    unint64_t v6 = v22 + 2;
LABEL_6:
    uint64_t v22 = v6;
    goto LABEL_7;
  }
  return v22;
}

uint64_t sub_23693752C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v6 = (char)*a3;
  unsigned int v7 = *a3;
  if (v6 < 0)
  {
    uint64_t result = sub_23695441C((uint64_t)a3, v7);
    if (!result) {
      return result;
    }
    uint64_t v8 = result;
    unsigned int v7 = v10;
  }
  else
  {
    uint64_t v8 = (uint64_t)(a3 + 1);
  }
  int v11 = sub_236938208((uint64_t)a1, v8, v7);
  int v12 = a1[11].i32[0];
  BOOL v13 = __OFSUB__(v12--, 1);
  a1[11].i32[0] = v12;
  if (v12 < 0 != v13) {
    return 0;
  }
  int v14 = v11;
  uint64_t result = sub_236936878(a2, v8, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v15 = a1[3].i32[1] + v14;
  a1[3].i32[1] = v15;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v15 & (v15 >> 31)));
  return result;
}

char *sub_2369375F4(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        long long __dst = sub_236946668((uint64_t)a3, __dst);
      }
      uint64_t v8 = sub_236929200(a1 + 16, i);
      void *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      if (v9 > 0x7F)
      {
        __dst[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          unsigned int v10 = __dst + 3;
          do
          {
            *(v10 - 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - 1) = v12;
        }
        else
        {
          __dst[2] = v11;
          unsigned int v10 = __dst + 3;
        }
      }
      else
      {
        __dst[1] = v9;
        unsigned int v10 = __dst + 2;
      }
      long long __dst = sub_236936BF8(v8, v10, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return __dst;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(__dst, v17, (int)v18);
    __dst += v19;
    return __dst;
  }
  return sub_23694677C((uint64_t *)a3, (char *)v17, v18, (unint64_t)__dst);
}

uint64_t sub_236937770(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    unint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    unint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_236936DEC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 4sub_23692A244(&a9, 0) = v2;
  return v2;
}

void sub_23693781C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26E9CE938, (const struct __class_type_info *)&unk_26E9CDF70, 0))sub_2369386E0(); {
  sub_2369378A4(a1, (uint64_t)lpsrc);
  }
}

void sub_2369378A4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    sub_2369470F4((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece.pb.cc", 877);
    unint64_t v4 = sub_23694710C(v14, "CHECK failed: (&from) != (this): ");
    sub_236947248((uint64_t)&v13, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v14);
  }
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFELL;
    unint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFFELL) + 8;
    uint64_t v8 = *(void *)(a1 + 8);
    if (v8) {
      unsigned int v9 = (std::string *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
    }
    else {
      unsigned int v9 = (std::string *)sub_236937EDC((unint64_t *)(a1 + 8));
    }
    int v10 = *(char *)(v6 + 31);
    if (v10 >= 0) {
      uint64_t v11 = (const std::string::value_type *)v7;
    }
    else {
      uint64_t v11 = *(const std::string::value_type **)(v6 + 8);
    }
    if (v10 >= 0) {
      std::string::size_type v12 = *(unsigned __int8 *)(v6 + 31);
    }
    else {
      std::string::size_type v12 = *(void *)(v6 + 16);
    }
    std::string::append(v9, v11, v12);
  }
  sub_236938530(a1 + 16, a2 + 16);
}

void sub_236937970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_236937988(uint64_t a1)
{
  return sub_236937990(a1 + 16);
}

BOOL sub_236937990(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8);
  do
  {
    int v3 = v2;
    BOOL v4 = __OFSUB__(v2--, 1);
    if (v2 < 0 != v4) {
      break;
    }
    uint64_t v5 = sub_236929200(a1, v2);
    if (!sub_23694CACC(v5 + 16)) {
      break;
    }
  }
  while (sub_236937114(v5 + 48));
  return v3 < 1;
}

void *sub_2369379F8@<X0>(void *a1@<X8>)
{
  return sub_236919B40(a1, "sentencepiece.NBestSentencePieceText");
}

uint64_t sub_236937A08(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  if (*(unsigned char *)(a1 + 24)) {
    (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(a1 + 32) + 32) + 40))(*(void *)(*(void *)(a1 + 32) + 32), &unk_26E9CDF40, 80);
  }
  uint64_t v2 = sub_236945A60(a1, 80);
  sub_236935504(v2, a1);
  return v2;
}

void sub_236937AB4(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x10A1C40E4A317A1);
  _Unwind_Resume(a1);
}

uint64_t sub_236937AD8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  if (*(unsigned char *)(a1 + 24)) {
    (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(a1 + 32) + 32) + 40))(*(void *)(*(void *)(a1 + 32) + 32), &unk_26E9CDF58, 88);
  }
  uint64_t v2 = sub_236945A60(a1, 88);
  sub_236936590(v2, a1);
  return v2;
}

void sub_236937B84(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x10A1C40431D3885);
  _Unwind_Resume(a1);
}

uint64_t sub_236937BA8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  if (*(unsigned char *)(a1 + 24)) {
    (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(a1 + 32) + 32) + 40))(*(void *)(*(void *)(a1 + 32) + 32), &unk_26E9CDF70, 48);
  }
  uint64_t v2 = sub_236945A60(a1, 48);
  sub_23693717C(v2, a1);
  return v2;
}

void sub_236937C54(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t sub_236937C78()
{
  return sub_236937A08(0);
}

uint64_t sub_236937C80(uint64_t a1, uint64_t a2)
{
  return sub_236937A08(a2);
}

uint64_t sub_236937C88(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_236937C90()
{
  return 0;
}

uint64_t sub_236937C98()
{
  return sub_236937AD8(0);
}

uint64_t sub_236937CA0(uint64_t a1, uint64_t a2)
{
  return sub_236937AD8(a2);
}

uint64_t sub_236937CA8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_236937CB0()
{
  return sub_236937BA8(0);
}

uint64_t sub_236937CB8(uint64_t a1, uint64_t a2)
{
  return sub_236937BA8(a2);
}

uint64_t sub_236937CC0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_236937CC8(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result)
  {
    sub_2369470F4((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/arenastring.h", 363);
    int v3 = sub_23694710C(v6, "CHECK failed: !tagged_ptr_.IsTagged(): ");
    sub_236947248((uint64_t)&v5, (const char **)&v3->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v6);
    uint64_t result = *a1;
  }
  if (!result)
  {
    sub_2369470F4((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/arenastring.h", 364);
    BOOL v4 = sub_23694710C(v6, "CHECK failed: tagged_ptr_.UnsafeGet() != nullptr: ");
    sub_236947248((uint64_t)&v5, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v6);
    return *a1;
  }
  return result;
}

void sub_236937D7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_236937D9C(uint64_t a1, char **a2, int a3)
{
  unint64_t v6 = *a2;
  if (!*a2)
  {
    sub_2369470F4((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/parse_context.h", 209);
    unint64_t v7 = sub_23694710C(v13, "CHECK failed: *ptr: ");
    sub_236947248((uint64_t)&v12, (const char **)&v7->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v13);
    unint64_t v6 = *a2;
  }
  if ((unint64_t)v6 < *(void *)a1) {
    return 0;
  }
  signed int v9 = v6 - *(_DWORD *)(a1 + 8);
  if (v9 >= 17)
  {
    sub_2369470F4((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/parse_context.h", 212);
    int v10 = sub_23694710C(v13, "CHECK failed: (overrun) <= (kSlopBytes): ");
    sub_236947248((uint64_t)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v13);
  }
  if (*(_DWORD *)(a1 + 28) == v9)
  {
    if (v9 >= 1 && !*(void *)(a1 + 16)) {
      *a2 = 0;
    }
    return 1;
  }
  else
  {
    *a2 = sub_236953AC0(a1, v9, a3);
    return v11 & 1;
  }
}

void sub_236937EBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

unint64_t sub_236937EDC(unint64_t *a1)
{
  unint64_t v2 = *a1 & 0xFFFFFFFFFFFFFFFELL;
  if ((*a1 & 1) == 0)
  {
    if (v2) {
      goto LABEL_3;
    }
LABEL_7:
    operator new();
  }
  unint64_t v2 = *(void *)v2;
  if (!v2) {
    goto LABEL_7;
  }
LABEL_3:
  if (*(unsigned char *)(v2 + 24)) {
    (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v2 + 32) + 32) + 40))(*(void *)(*(void *)(v2 + 32) + 32), &unk_26E9CDF98, 32);
  }
  unint64_t v3 = sub_236945764((void *)v2, 0x20uLL, (uint64_t)sub_236937FA4);
  *(_OWORD *)unint64_t v3 = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  *a1 = v3 | 1;
  *(void *)unint64_t v3 = v2;
  return v3 + 8;
}

void sub_236937FA4(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
}

unsigned __int8 *sub_236937FB8(unsigned __int8 *result)
{
  uint64_t v1 = *((unsigned int *)result + 2);
  if ((v1 & 0x80000000) != 0)
  {
    sub_2369470F4((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1780);
    char v5 = sub_23694710C(v7, "CHECK failed: (n) >= (0): ");
    sub_236947248((uint64_t)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    return (unsigned __int8 *)sub_236947250((uint64_t)v7);
  }
  else if (v1)
  {
    unint64_t v2 = result;
    unint64_t v3 = (uint64_t *)(*((void *)result + 2) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_2369357F0(v4);
      --v1;
    }
    while (v1);
    *((_DWORD *)v2 + 2) = 0;
  }
  return result;
}

void sub_236938050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_236938068(unsigned __int8 *result)
{
  uint64_t v1 = *((unsigned int *)result + 2);
  if ((v1 & 0x80000000) != 0)
  {
    sub_2369470F4((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1780);
    char v5 = sub_23694710C(v7, "CHECK failed: (n) >= (0): ");
    sub_236947248((uint64_t)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    return (unsigned __int8 *)sub_236947250((uint64_t)v7);
  }
  else if (v1)
  {
    unint64_t v2 = result;
    unint64_t v3 = (uint64_t *)(*((void *)result + 2) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_2369367E4(v4);
      --v1;
    }
    while (v1);
    *((_DWORD *)v2 + 2) = 0;
  }
  return result;
}

void sub_236938100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_236938118(uint64_t *a1)
{
  sub_236938154(a1);
  return sub_2369381D4(a1);
}

void sub_236938154(void *a1)
{
  unint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          uint64_t v5 = sub_23693559C(*v3);
          MEMORY[0x237E07580](v5, 0x10A1C40E4A317A1);
        }
        ++v3;
        --v4;
      }
      while (v4);
      unint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_2369381D4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2) {
    sub_236945448(v2);
  }
  return a1;
}

uint64_t sub_236938208(uint64_t a1, int a2, unsigned int a3)
{
  if (a3 >= 0x7FFFFFF0)
  {
    sub_2369470F4((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/parse_context.h", 128);
    char v6 = sub_23694710C(v11, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
    sub_236947248((uint64_t)&v10, (const char **)&v6->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v11);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  int v8 = a2 - v7 + a3;
  *(void *)a1 = v7 + (v8 & (v8 >> 31));
  LODWORD(v7) = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v8;
  return (v7 - v8);
}

void sub_2369382AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2369382C4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    sub_2369470F4((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1799);
    uint64_t v4 = sub_23694710C(v11, "CHECK failed: (&other) != (this): ");
    sub_236947248((uint64_t)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v11);
  }
  unsigned int v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    char v6 = (uint64_t *)(*(void *)(a2 + 16) + 8);
    uint64_t v7 = (uint64_t *)sub_2369597DC((uint64_t *)a1, v5);
    sub_2369383B4((uint64_t *)a1, v7, v6, v5, **(_DWORD **)(a1 + 16) - *(_DWORD *)(a1 + 8));
    signed int v8 = *(_DWORD *)(a1 + 8) + v5;
    *(_DWORD *)(a1 + 8) = v8;
    signed int v9 = *(signed int **)(a1 + 16);
    if (*v9 < v8) {
      *signed int v9 = v8;
    }
  }
}

void sub_23693839C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2369383B4(uint64_t *a1, uint64_t *a2, uint64_t *a3, unsigned int a4, unsigned int a5)
{
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    char v11 = a3;
    char v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      uint64_t v13 = v14;
      uint64_t v15 = *v12++;
      sub_236938464(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *a1;
    uint64_t v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = sub_236937A08(v18);
      sub_236938464(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void sub_236938464(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_236938474(uint64_t *a1)
{
  sub_2369384B0(a1);
  return sub_2369381D4(a1);
}

void sub_2369384B0(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          uint64_t v5 = sub_236936648(*v3);
          MEMORY[0x237E07580](v5, 0x10A1C40431D3885);
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_236938530(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    sub_2369470F4((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1799);
    uint64_t v4 = sub_23694710C(v11, "CHECK failed: (&other) != (this): ");
    sub_236947248((uint64_t)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v11);
  }
  unsigned int v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    char v6 = (uint64_t *)(*(void *)(a2 + 16) + 8);
    uint64_t v7 = (uint64_t *)sub_2369597DC((uint64_t *)a1, v5);
    sub_236938620((uint64_t *)a1, v7, v6, v5, **(_DWORD **)(a1 + 16) - *(_DWORD *)(a1 + 8));
    signed int v8 = *(_DWORD *)(a1 + 8) + v5;
    *(_DWORD *)(a1 + 8) = v8;
    signed int v9 = *(signed int **)(a1 + 16);
    if (*v9 < v8) {
      *signed int v9 = v8;
    }
  }
}

void sub_236938608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_236938620(uint64_t *a1, uint64_t *a2, uint64_t *a3, unsigned int a4, unsigned int a5)
{
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    char v11 = a3;
    char v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      uint64_t v13 = v14;
      uint64_t v15 = *v12++;
      sub_2369386D0(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *a1;
    uint64_t v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = sub_236937AD8(v18);
      sub_2369386D0(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void sub_2369386D0(uint64_t a1, uint64_t a2)
{
}

void sub_2369386E0()
{
  __assert_rtn("down_cast", "casts.h", 94, "f == nullptr || dynamic_cast<To>(f) != nullptr");
}

void sub_23693870C()
{
  sub_236946D88(3014000, 3014000, "/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.cc");
  sub_23693F0C0((uint64_t)&unk_26889AFB0, 0);
  sub_2369532CC((uint64_t)sub_2369526B0, (uint64_t)&unk_26889AFB0);
}

void sub_23693877C()
{
  sub_236946D88(3014000, 3014000, "/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.cc");
  sub_23693E730(qword_26889AF70, 0);
  sub_2369532CC((uint64_t)sub_2369526B0, (uint64_t)qword_26889AF70);
}

void sub_2369387EC()
{
  sub_236946D88(3014000, 3014000, "/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.cc");
  sub_23693C864((uint64_t)&unk_26889AEA8, 0);
  sub_2369532CC((uint64_t)sub_2369526B0, (uint64_t)&unk_26889AEA8);
}

void sub_23693885C()
{
  sub_236946D88(3014000, 3014000, "/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.cc");
  sub_23693DE7C((uint64_t)&unk_26889AF28, 0);
  sub_2369532CC((uint64_t)sub_2369526B0, (uint64_t)&unk_26889AF28);
}

void sub_2369388CC()
{
  sub_236946D88(3014000, 3014000, "/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.cc");
  sub_23693D67C(qword_26889AF00, 0);
  sub_2369532CC((uint64_t)sub_2369526B0, (uint64_t)qword_26889AF00);
}

void sub_23693893C()
{
  sub_236946D88(3014000, 3014000, "/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.cc");
  sub_2369389BC((uint64_t)&unk_26889AD60, 0);
  sub_2369532CC((uint64_t)sub_2369526B0, (uint64_t)&unk_26889AD60);
}

BOOL sub_2369389AC(int a1)
{
  return (a1 - 1) < 6;
}

uint64_t sub_2369389BC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26E9CDFC0;
  *(void *)(a1 + 8) = a2;
  sub_236947714(a1 + 16, a2);
  *(void *)(a1 + 128) = a2;
  *(void *)(a1 + 4sub_23692A244(&a9, 0) = 0;
  *(void *)(a1 + 56) = a2;
  *(_DWORD *)(a1 + 48) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 8sub_23692A244(&a9, 0) = a2;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = a2;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 12sub_23692A244(&a9, 0) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  if (atomic_load_explicit(dword_26B808D08, memory_order_acquire)) {
    sub_236952920(dword_26B808D08);
  }
  *(void *)(a1 + 152) = &qword_26889B028;
  *(void *)(a1 + 16sub_23692A244(&a9, 0) = &qword_26889B028;
  *(void *)(a1 + 168) = &qword_26889B028;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = &qword_26889B028;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 24sub_23692A244(&a9, 0) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(void *)(a1 + 272) = 0x1F4000000001;
  *(void *)(a1 + 28sub_23692A244(&a9, 0) = 0xF42403F7FDF3BLL;
  *(_DWORD *)(a1 + 288) = 1061158912;
  *(_OWORD *)(a1 + 292) = xmmword_23698EA90;
  *(_DWORD *)(a1 + 308) = 16843009;
  *(_WORD *)(a1 + 312) = 257;
  *(_DWORD *)(a1 + 316) = 1;
  *(void *)(a1 + 32sub_23692A244(&a9, 0) = 0xFFFFFFFF00000002;
  return a1;
}

void sub_236938AF8(_Unwind_Exception *a1)
{
  sub_2369597C4(v3);
  sub_2369597C4(v5);
  sub_2369597C4(v4);
  sub_2369597C4(v2);
  sub_2369477F4(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_236938B2C(uint64_t *a1)
{
  return a1;
}

uint64_t *sub_236938B88(uint64_t *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if ((v2 & 1) == 0)
  {
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*v3)
  {
LABEL_3:
    sub_2369470F4((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.cc", 519);
    uint64_t v4 = sub_23694710C(v27, "CHECK failed: GetArena() == nullptr: ");
    sub_236947248((uint64_t)&v26, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v27);
  }
LABEL_4:
  if ((uint64_t *)a1[19] != &qword_26889B028)
  {
    uint64_t v5 = sub_236937CC8(a1 + 19);
    uint64_t v6 = v5;
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    MEMORY[0x237E07580](v6, 0x1012C40EC159624);
  }
  if ((uint64_t *)a1[20] != &qword_26889B028)
  {
    uint64_t v7 = sub_236937CC8(a1 + 20);
    uint64_t v8 = v7;
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    MEMORY[0x237E07580](v8, 0x1012C40EC159624);
  }
  if ((uint64_t *)a1[21] != &qword_26889B028)
  {
    uint64_t v9 = sub_236937CC8(a1 + 21);
    uint64_t v10 = v9;
    if (*(char *)(v9 + 23) < 0) {
      operator delete(*(void **)v9);
    }
    MEMORY[0x237E07580](v10, 0x1012C40EC159624);
  }
  if (a1[22])
  {
    uint64_t v11 = sub_236937CC8(a1 + 22);
    uint64_t v12 = v11;
    if (*(char *)(v11 + 23) < 0) {
      operator delete(*(void **)v11);
    }
    MEMORY[0x237E07580](v12, 0x1012C40EC159624);
  }
  if (a1[23])
  {
    uint64_t v13 = sub_236937CC8(a1 + 23);
    uint64_t v14 = v13;
    if (*(char *)(v13 + 23) < 0) {
      operator delete(*(void **)v13);
    }
    MEMORY[0x237E07580](v14, 0x1012C40EC159624);
  }
  if (a1[24])
  {
    uint64_t v15 = sub_236937CC8(a1 + 24);
    uint64_t v16 = v15;
    if (*(char *)(v15 + 23) < 0) {
      operator delete(*(void **)v15);
    }
    MEMORY[0x237E07580](v16, 0x1012C40EC159624);
  }
  if (a1[25])
  {
    uint64_t v17 = sub_236937CC8(a1 + 25);
    uint64_t v18 = v17;
    if (*(char *)(v17 + 23) < 0) {
      operator delete(*(void **)v17);
    }
    MEMORY[0x237E07580](v18, 0x1012C40EC159624);
  }
  uint64_t result = a1 + 26;
  if (a1[26])
  {
    uint64_t v20 = sub_236937CC8(result);
    uint64_t v21 = v20;
    if (*(char *)(v20 + 23) < 0) {
      operator delete(*(void **)v20);
    }
    uint64_t result = (uint64_t *)MEMORY[0x237E07580](v21, 0x1012C40EC159624);
  }
  uint64_t v23 = (uint64_t *)a1[27];
  uint64_t v22 = a1 + 27;
  if (v23 != &qword_26889B028)
  {
    uint64_t v24 = sub_236937CC8(v22);
    uint64_t v25 = v24;
    if (*(char *)(v24 + 23) < 0) {
      operator delete(*(void **)v24);
    }
    return (uint64_t *)MEMORY[0x237E07580](v25, 0x1012C40EC159624);
  }
  return result;
}

void sub_236938E44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_236938E60(uint64_t *a1)
{
  sub_236938B2C(a1);
  JUMPOUT(0x237E07580);
}

uint64_t sub_236938E98(uint64_t a1)
{
  sub_23694B59C((unsigned __int8 *)(a1 + 16));
  sub_2369415C8(a1 + 56);
  sub_2369415C8(a1 + 80);
  sub_2369415C8(a1 + 104);
  uint64_t result = sub_2369415C8(a1 + 128);
  unsigned int v3 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v3) {
    goto LABEL_10;
  }
  if (v3)
  {
    unint64_t v4 = *(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_16;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_16;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_20:
    unint64_t v6 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_24;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_24;
      }
    }
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_16:
  unint64_t v5 = *(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v3 & 4) != 0) {
      goto LABEL_20;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v3 & 4) != 0) {
      goto LABEL_20;
    }
  }
LABEL_5:
  if ((v3 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_24:
  uint64_t result = (uint64_t)sub_236946244((std::string *)(a1 + 176), &off_26889A4C8);
  if ((v3 & 0x10) == 0)
  {
LABEL_7:
    if ((v3 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = (uint64_t)sub_236946244((std::string *)(a1 + 184), &off_26889A448);
  if ((v3 & 0x20) == 0)
  {
LABEL_8:
    if ((v3 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = (uint64_t)sub_236946244((std::string *)(a1 + 192), &off_26889A468);
  if ((v3 & 0x40) != 0)
  {
LABEL_27:
    uint64_t result = (uint64_t)sub_236946244((std::string *)(a1 + 200), &off_26889A488);
    if ((v3 & 0x80) != 0) {
      goto LABEL_28;
    }
LABEL_10:
    if ((v3 & 0x100) == 0) {
      goto LABEL_32;
    }
    goto LABEL_29;
  }
LABEL_9:
  if ((v3 & 0x80) == 0) {
    goto LABEL_10;
  }
LABEL_28:
  uint64_t result = (uint64_t)sub_236946244((std::string *)(a1 + 208), &off_26889A4A8);
  if ((v3 & 0x100) == 0) {
    goto LABEL_32;
  }
LABEL_29:
  unint64_t v7 = *(void *)(a1 + 216) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    **(unsigned char **)unint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
  }
  else
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
  }
LABEL_32:
  if ((v3 & 0xFE00) != 0)
  {
    *(void *)(a1 + 224) = 0;
    *(void *)(a1 + 232) = 0;
    *(void *)(a1 + 239) = 0;
  }
  if ((v3 & 0xFF0000) != 0)
  {
    *(void *)(a1 + 247) = 0;
    *(unsigned char *)(a1 + 271) = 0;
    *(void *)(a1 + 255) = 0;
    *(void *)(a1 + 263) = 0;
    *(_DWORD *)(a1 + 272) = 1;
  }
  if (HIBYTE(v3))
  {
    *(void *)(a1 + 276) = 0x3F7FDF3B00001F40;
    *(void *)(a1 + 284) = 0x3F400000000F4240;
    *(_OWORD *)(a1 + 292) = xmmword_23698EA90;
  }
  if (*(unsigned char *)(a1 + 44))
  {
    *(_WORD *)(a1 + 312) = 257;
    *(_DWORD *)(a1 + 308) = 16843009;
    *(void *)(a1 + 316) = 0x200000001;
  }
  *(_DWORD *)(a1 + 324) = -1;
  *(void *)(a1 + 4sub_23692A244(&a9, 0) = 0;
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 31) < 0)
    {
      **(unsigned char **)(v9 + 8) = 0;
      *(void *)(v9 + 16) = 0;
    }
    else
    {
      *(unsigned char *)(v9 + 8) = 0;
      *(unsigned char *)(v9 + 31) = 0;
    }
  }
  return result;
}

char *sub_236939160(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v188 = a2;
  char v5 = sub_236937D9C((uint64_t)a3, (char **)v188, a3[11].i32[1]);
  uint64_t result = *(char **)v188;
  if (v5) {
    return result;
  }
  long long v187 = (unint64_t *)(a1 + 8);
  unint64_t v7 = (uint64_t *)(a1 + 128);
  uint64_t v8 = (uint64_t *)(a1 + 104);
  unint64_t v9 = (uint64_t *)(a1 + 80);
  uint64_t v10 = (uint64_t *)(a1 + 56);
  while (2)
  {
    uint64_t v11 = result + 1;
    unsigned int v12 = *result;
    if ((*result & 0x80000000) == 0) {
      goto LABEL_7;
    }
    unsigned int v13 = v12 + (*v11 << 7);
    unsigned int v12 = v13 - 128;
    if ((*v11 & 0x80000000) == 0)
    {
      uint64_t v11 = result + 2;
LABEL_7:
      *(void *)uint64_t v188 = v11;
      goto LABEL_8;
    }
    uint64_t result = (char *)sub_2369543D8((uint64_t)result, v13 - 128);
    *(void *)uint64_t v188 = result;
    if (!result) {
      return result;
    }
    uint64_t v11 = result;
    unsigned int v12 = v22;
LABEL_8:
    switch(v12 >> 3)
    {
      case 1u:
        if (v12 != 10) {
          goto LABEL_275;
        }
        uint64_t result = v11 - 1;
        while (2)
        {
          uint64_t v14 = result + 1;
          *(void *)uint64_t v188 = result + 1;
          uint64_t v15 = *(int **)(a1 + 72);
          if (!v15)
          {
            int v17 = *(_DWORD *)(a1 + 68);
LABEL_16:
            sub_2369597C8(a1 + 56, v17 + 1);
            uint64_t v15 = *(int **)(a1 + 72);
            int v17 = *v15;
            goto LABEL_17;
          }
          uint64_t v16 = *(int *)(a1 + 64);
          int v17 = *v15;
          if ((int)v16 < *v15)
          {
            *(_DWORD *)(a1 + 64) = v16 + 1;
            uint64_t v18 = *(std::string **)&v15[2 * v16 + 2];
            goto LABEL_22;
          }
          if (v17 == *(_DWORD *)(a1 + 68)) {
            goto LABEL_16;
          }
LABEL_17:
          *uint64_t v15 = v17 + 1;
          uint64_t v19 = *v10;
          if (!*v10) {
            operator new();
          }
          if (*(unsigned char *)(v19 + 24)) {
            (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v19 + 32) + 32) + 40))(*(void *)(*(void *)(v19 + 32) + 32), &unk_26E9CE540, 24);
          }
          uint64_t v18 = (std::string *)sub_236945764((void *)v19, 0x18uLL, (uint64_t)sub_2369414D4);
          v18->__r_.__value_.__r.__words[0] = 0;
          v18->__r_.__value_.__l.__size_ = 0;
          v18->__r_.__value_.__r.__words[2] = 0;
          uint64_t v20 = *(void *)(a1 + 72);
          uint64_t v21 = *(int *)(a1 + 64);
          *(_DWORD *)(a1 + 64) = v21 + 1;
          *(void *)(v20 + 8 * v21 + 8) = v18;
          uint64_t v14 = *(char **)v188;
LABEL_22:
          uint64_t result = (char *)sub_23695448C(v18, v14, (uint64_t)a3);
          *(void *)uint64_t v188 = result;
          if (result)
          {
            if (*(void *)a3 <= (unint64_t)result || *result != 10) {
              goto LABEL_273;
            }
            continue;
          }
          return result;
        }
      case 2u:
        if (v12 != 18) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v23 = *(void *)(a1 + 8);
        uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFELL);
        if (v23) {
          uint64_t v24 = (void *)*v24;
        }
        uint64_t v25 = (uint64_t *)(a1 + 152);
        goto LABEL_265;
      case 3u:
        if (v12 != 24) {
          goto LABEL_275;
        }
        char v26 = v11 + 1;
        unint64_t v27 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_36;
        }
        int v28 = *v26;
        int v29 = v27 + (v28 << 7);
        unint64_t v27 = (v29 - 128);
        if (v28 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, (v29 - 128));
          *(void *)uint64_t v188 = result;
          if (!result) {
            return result;
          }
          unint64_t v27 = v157;
        }
        else
        {
          char v26 = v11 + 2;
LABEL_36:
          *(void *)uint64_t v188 = v26;
        }
        if ((v27 - 1) > 3)
        {
          if (*v187) {
            id v186 = (std::string *)((*v187 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else {
            id v186 = (std::string *)sub_236937EDC(v187);
          }
          sub_23695427C(3, v27, v186);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x800000u;
          *(_DWORD *)(a1 + 272) = v27;
        }
        goto LABEL_273;
      case 4u:
        if (v12 != 32) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x1000000u;
        int v31 = v11 + 1;
        LODWORD(v3sub_23692A244(&a9, 0) = *v11;
        if ((v30 & 0x80) == 0) {
          goto LABEL_43;
        }
        int v32 = *v31;
        uint64_t v30 = v30 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v30);
          *(void *)uint64_t v188 = result;
          *(_DWORD *)(a1 + 276) = v158;
          if (!result) {
            return result;
          }
        }
        else
        {
          int v31 = v11 + 2;
LABEL_43:
          *(void *)uint64_t v188 = v31;
          *(_DWORD *)(a1 + 276) = v30;
        }
        goto LABEL_273;
      case 5u:
        if (v12 != 42) {
          goto LABEL_275;
        }
        uint64_t result = v11 - 1;
        while (1)
        {
          int v33 = result + 1;
          *(void *)uint64_t v188 = result + 1;
          uint64_t v34 = *(int **)(a1 + 96);
          if (!v34) {
            break;
          }
          uint64_t v35 = *(int *)(a1 + 88);
          int v36 = *v34;
          if ((int)v35 >= *v34)
          {
            if (v36 == *(_DWORD *)(a1 + 92))
            {
LABEL_51:
              sub_2369597C8(a1 + 80, v36 + 1);
              uint64_t v34 = *(int **)(a1 + 96);
              int v36 = *v34;
            }
            *uint64_t v34 = v36 + 1;
            uint64_t v38 = *v9;
            if (!*v9) {
              operator new();
            }
            if (*(unsigned char *)(v38 + 24)) {
              (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v38 + 32) + 32) + 40))(*(void *)(*(void *)(v38 + 32) + 32), &unk_26E9CE540, 24);
            }
            int v37 = (std::string *)sub_236945764((void *)v38, 0x18uLL, (uint64_t)sub_2369414D4);
            v37->__r_.__value_.__r.__words[0] = 0;
            v37->__r_.__value_.__l.__size_ = 0;
            v37->__r_.__value_.__r.__words[2] = 0;
            uint64_t v39 = *(void *)(a1 + 96);
            uint64_t v40 = *(int *)(a1 + 88);
            *(_DWORD *)(a1 + 88) = v40 + 1;
            *(void *)(v39 + 8 * v40 + 8) = v37;
            int v33 = *(char **)v188;
            goto LABEL_57;
          }
          *(_DWORD *)(a1 + 88) = v35 + 1;
          int v37 = *(std::string **)&v34[2 * v35 + 2];
LABEL_57:
          uint64_t result = (char *)sub_23695448C(v37, v33, (uint64_t)a3);
          *(void *)uint64_t v188 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *result != 42) {
            goto LABEL_273;
          }
        }
        int v36 = *(_DWORD *)(a1 + 92);
        goto LABEL_51;
      case 6u:
        if (v12 != 48) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x200u;
        uint64_t v42 = v11 + 1;
        LODWORD(v41) = *v11;
        if ((v41 & 0x80) == 0) {
          goto LABEL_65;
        }
        int v43 = *v42;
        uint64_t v41 = v41 + (v43 << 7) - 128;
        if (v43 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v41);
          *(void *)uint64_t v188 = result;
          *(_DWORD *)(a1 + 224) = v159;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v42 = v11 + 2;
LABEL_65:
          *(void *)uint64_t v188 = v42;
          *(_DWORD *)(a1 + 224) = v41;
        }
        goto LABEL_273;
      case 7u:
        if (v12 != 58) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v44 = *(void *)(a1 + 8);
        uint64_t v24 = (void *)(v44 & 0xFFFFFFFFFFFFFFFELL);
        if (v44) {
          uint64_t v24 = (void *)*v24;
        }
        uint64_t v25 = (uint64_t *)(a1 + 160);
        goto LABEL_265;
      case 0xAu:
        if (v12 != 85) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x2000000u;
        int v46 = *(_DWORD *)v11;
        uint64_t v45 = v11 + 4;
        *(_DWORD *)(a1 + 28sub_23692A244(&a9, 0) = v46;
        goto LABEL_255;
      case 0xBu:
        if (v12 != 88) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x800u;
        uint64_t v47 = v11 + 1;
        uint64_t v48 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_76;
        }
        int v49 = *v47;
        uint64_t v48 = v48 + (v49 << 7) - 128;
        if (v49 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v48);
          *(void *)uint64_t v188 = result;
          *(void *)(a1 + 232) = v160;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v47 = v11 + 2;
LABEL_76:
          *(void *)uint64_t v188 = v47;
          *(void *)(a1 + 232) = v48;
        }
        goto LABEL_273;
      case 0xCu:
        if (v12 != 96) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x400u;
        uint64_t v51 = v11 + 1;
        LODWORD(v5sub_23692A244(&a9, 0) = *v11;
        if ((v50 & 0x80) == 0) {
          goto LABEL_81;
        }
        int v52 = *v51;
        uint64_t v50 = v50 + (v52 << 7) - 128;
        if (v52 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v50);
          *(void *)uint64_t v188 = result;
          *(_DWORD *)(a1 + 228) = v161;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v51 = v11 + 2;
LABEL_81:
          *(void *)uint64_t v188 = v51;
          *(_DWORD *)(a1 + 228) = v50;
        }
        goto LABEL_273;
      case 0xDu:
        if (v12 != 104) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x1000u;
        long long v54 = v11 + 1;
        LODWORD(v53) = *v11;
        if ((v53 & 0x80) == 0) {
          goto LABEL_86;
        }
        int v55 = *v54;
        uint64_t v53 = v53 + (v55 << 7) - 128;
        if (v55 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v53);
          *(void *)uint64_t v188 = result;
          *(_DWORD *)(a1 + 24sub_23692A244(&a9, 0) = v162;
          if (!result) {
            return result;
          }
        }
        else
        {
          long long v54 = v11 + 2;
LABEL_86:
          *(void *)uint64_t v188 = v54;
          *(_DWORD *)(a1 + 24sub_23692A244(&a9, 0) = v53;
        }
        goto LABEL_273;
      case 0xEu:
        if (v12 != 112) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x4000000u;
        unint64_t v57 = v11 + 1;
        LODWORD(v56) = *v11;
        if ((v56 & 0x80) == 0) {
          goto LABEL_91;
        }
        int v58 = *v57;
        uint64_t v56 = v56 + (v58 << 7) - 128;
        if (v58 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v56);
          *(void *)uint64_t v188 = result;
          *(_DWORD *)(a1 + 284) = v163;
          if (!result) {
            return result;
          }
        }
        else
        {
          unint64_t v57 = v11 + 2;
LABEL_91:
          *(void *)uint64_t v188 = v57;
          *(_DWORD *)(a1 + 284) = v56;
        }
        goto LABEL_273;
      case 0xFu:
        if (v12 != 125) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x8000000u;
        int v59 = *(_DWORD *)v11;
        uint64_t v45 = v11 + 4;
        *(_DWORD *)(a1 + 288) = v59;
        goto LABEL_255;
      case 0x10u:
        if (v12 != 128) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x10000000u;
        uint64_t v61 = v11 + 1;
        LODWORD(v6sub_23692A244(&a9, 0) = *v11;
        if ((v60 & 0x80) == 0) {
          goto LABEL_98;
        }
        int v62 = *v61;
        uint64_t v60 = v60 + (v62 << 7) - 128;
        if (v62 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v60);
          *(void *)uint64_t v188 = result;
          *(_DWORD *)(a1 + 292) = v164;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v61 = v11 + 2;
LABEL_98:
          *(void *)uint64_t v188 = v61;
          *(_DWORD *)(a1 + 292) = v60;
        }
        goto LABEL_273;
      case 0x11u:
        if (v12 != 136) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x20000000u;
        float v64 = v11 + 1;
        LODWORD(v63) = *v11;
        if ((v63 & 0x80) == 0) {
          goto LABEL_103;
        }
        int v65 = *v64;
        uint64_t v63 = v63 + (v65 << 7) - 128;
        if (v65 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v63);
          *(void *)uint64_t v188 = result;
          *(_DWORD *)(a1 + 296) = v165;
          if (!result) {
            return result;
          }
        }
        else
        {
          float v64 = v11 + 2;
LABEL_103:
          *(void *)uint64_t v188 = v64;
          *(_DWORD *)(a1 + 296) = v63;
        }
        goto LABEL_273;
      case 0x12u:
        if (v12 != 144) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x40000000u;
        long long v67 = v11 + 1;
        LODWORD(v66) = *v11;
        if ((v66 & 0x80) == 0) {
          goto LABEL_108;
        }
        int v68 = *v67;
        uint64_t v66 = v66 + (v68 << 7) - 128;
        if (v68 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v66);
          *(void *)uint64_t v188 = result;
          *(_DWORD *)(a1 + 30sub_23692A244(&a9, 0) = v166;
          if (!result) {
            return result;
          }
        }
        else
        {
          long long v67 = v11 + 2;
LABEL_108:
          *(void *)uint64_t v188 = v67;
          *(_DWORD *)(a1 + 30sub_23692A244(&a9, 0) = v66;
        }
        goto LABEL_273;
      case 0x13u:
        if (v12 != 152) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        float v69 = v11 + 1;
        uint64_t v70 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_113;
        }
        int v71 = *v69;
        uint64_t v70 = v70 + (v71 << 7) - 128;
        if (v71 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v70);
          *(void *)uint64_t v188 = result;
          *(unsigned char *)(a1 + 308) = v167 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          float v69 = v11 + 2;
LABEL_113:
          *(void *)uint64_t v188 = v69;
          *(unsigned char *)(a1 + 308) = v70 != 0;
        }
        goto LABEL_273;
      case 0x14u:
        if (v12 != 160) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x80000000;
        uint64_t v73 = v11 + 1;
        LODWORD(v72) = *v11;
        if ((v72 & 0x80) == 0) {
          goto LABEL_118;
        }
        int v74 = *v73;
        uint64_t v72 = v72 + (v74 << 7) - 128;
        if (v74 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v72);
          *(void *)uint64_t v188 = result;
          *(_DWORD *)(a1 + 304) = v168;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v73 = v11 + 2;
LABEL_118:
          *(void *)uint64_t v188 = v73;
          *(_DWORD *)(a1 + 304) = v72;
        }
        goto LABEL_273;
      case 0x15u:
        if (v12 != 168) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 44) |= 2u;
        float v75 = v11 + 1;
        uint64_t v76 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_123;
        }
        int v77 = *v75;
        uint64_t v76 = v76 + (v77 << 7) - 128;
        if (v77 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v76);
          *(void *)uint64_t v188 = result;
          *(unsigned char *)(a1 + 309) = v169 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          float v75 = v11 + 2;
LABEL_123:
          *(void *)uint64_t v188 = v75;
          *(unsigned char *)(a1 + 309) = v76 != 0;
        }
        goto LABEL_273;
      case 0x16u:
        if (v12 != 176) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 44) |= 8u;
        uint64_t v78 = v11 + 1;
        uint64_t v79 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_128;
        }
        int v80 = *v78;
        uint64_t v79 = v79 + (v80 << 7) - 128;
        if (v80 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v79);
          *(void *)uint64_t v188 = result;
          *(unsigned char *)(a1 + 311) = v170 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v78 = v11 + 2;
LABEL_128:
          *(void *)uint64_t v188 = v78;
          *(unsigned char *)(a1 + 311) = v79 != 0;
        }
        goto LABEL_273;
      case 0x17u:
        if (v12 != 184) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 44) |= 4u;
        uint64_t v81 = v11 + 1;
        uint64_t v82 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_133;
        }
        int v83 = *v81;
        uint64_t v82 = v82 + (v83 << 7) - 128;
        if (v83 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v82);
          *(void *)uint64_t v188 = result;
          *(unsigned char *)(a1 + 31sub_23692A244(&a9, 0) = v171 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v81 = v11 + 2;
LABEL_133:
          *(void *)uint64_t v188 = v81;
          *(unsigned char *)(a1 + 31sub_23692A244(&a9, 0) = v82 != 0;
        }
        goto LABEL_273;
      case 0x18u:
        if (v12 != 192) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x4000u;
        unint64_t v84 = v11 + 1;
        uint64_t v85 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_138;
        }
        int v86 = *v84;
        uint64_t v85 = v85 + (v86 << 7) - 128;
        if (v86 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v85);
          *(void *)uint64_t v188 = result;
          *(unsigned char *)(a1 + 245) = v172 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          unint64_t v84 = v11 + 2;
LABEL_138:
          *(void *)uint64_t v188 = v84;
          *(unsigned char *)(a1 + 245) = v85 != 0;
        }
        goto LABEL_273;
      case 0x19u:
        if (v12 != 200) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x10000u;
        uint64_t v87 = v11 + 1;
        uint64_t v88 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_143;
        }
        int v89 = *v87;
        uint64_t v88 = v88 + (v89 << 7) - 128;
        if (v89 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v88);
          *(void *)uint64_t v188 = result;
          *(unsigned char *)(a1 + 247) = v173 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v87 = v11 + 2;
LABEL_143:
          *(void *)uint64_t v188 = v87;
          *(unsigned char *)(a1 + 247) = v88 != 0;
        }
        goto LABEL_273;
      case 0x1Au:
        if (v12 != 208) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x8000u;
        long long v90 = v11 + 1;
        uint64_t v91 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_148;
        }
        int v92 = *v90;
        uint64_t v91 = v91 + (v92 << 7) - 128;
        if (v92 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v91);
          *(void *)uint64_t v188 = result;
          *(unsigned char *)(a1 + 246) = v174 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          long long v90 = v11 + 2;
LABEL_148:
          *(void *)uint64_t v188 = v90;
          *(unsigned char *)(a1 + 246) = v91 != 0;
        }
        goto LABEL_273;
      case 0x1Eu:
        if (v12 != 242) {
          goto LABEL_275;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          uint64_t v93 = result + 2;
          *(void *)uint64_t v188 = result + 2;
          uint64_t v94 = *(int **)(a1 + 120);
          if (!v94) {
            break;
          }
          uint64_t v95 = *(int *)(a1 + 112);
          int v96 = *v94;
          if ((int)v95 >= *v94)
          {
            if (v96 == *(_DWORD *)(a1 + 116))
            {
LABEL_156:
              sub_2369597C8(a1 + 104, v96 + 1);
              uint64_t v94 = *(int **)(a1 + 120);
              int v96 = *v94;
            }
            *uint64_t v94 = v96 + 1;
            uint64_t v98 = *v8;
            if (!*v8) {
              operator new();
            }
            if (*(unsigned char *)(v98 + 24)) {
              (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v98 + 32) + 32) + 40))(*(void *)(*(void *)(v98 + 32) + 32), &unk_26E9CE540, 24);
            }
            float v97 = (std::string *)sub_236945764((void *)v98, 0x18uLL, (uint64_t)sub_2369414D4);
            v97->__r_.__value_.__r.__words[0] = 0;
            v97->__r_.__value_.__l.__size_ = 0;
            v97->__r_.__value_.__r.__words[2] = 0;
            uint64_t v99 = *(void *)(a1 + 120);
            uint64_t v100 = *(int *)(a1 + 112);
            *(_DWORD *)(a1 + 112) = v100 + 1;
            *(void *)(v99 + 8 * v100 + 8) = v97;
            uint64_t v93 = *(char **)v188;
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 112) = v95 + 1;
          float v97 = *(std::string **)&v94[2 * v95 + 2];
LABEL_162:
          uint64_t result = (char *)sub_23695448C(v97, v93, (uint64_t)a3);
          *(void *)uint64_t v188 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 498) {
            goto LABEL_273;
          }
        }
        int v96 = *(_DWORD *)(a1 + 116);
        goto LABEL_156;
      case 0x1Fu:
        if (v12 != 250) {
          goto LABEL_275;
        }
        uint64_t result = v11 - 2;
        break;
      case 0x20u:
        if ((_BYTE)v12) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 44) |= 0x10u;
        uint64_t v109 = v11 + 1;
        uint64_t v110 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_187;
        }
        int v111 = *v109;
        uint64_t v110 = v110 + (v111 << 7) - 128;
        if (v111 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v110);
          *(void *)uint64_t v188 = result;
          *(unsigned char *)(a1 + 312) = v175 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v109 = v11 + 2;
LABEL_187:
          *(void *)uint64_t v188 = v109;
          *(unsigned char *)(a1 + 312) = v110 != 0;
        }
        goto LABEL_273;
      case 0x21u:
        if (v12 != 8) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 44) |= 0x20u;
        long long v112 = v11 + 1;
        uint64_t v113 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_192;
        }
        int v114 = *v112;
        uint64_t v113 = v113 + (v114 << 7) - 128;
        if (v114 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v113);
          *(void *)uint64_t v188 = result;
          *(unsigned char *)(a1 + 313) = v176 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          long long v112 = v11 + 2;
LABEL_192:
          *(void *)uint64_t v188 = v112;
          *(unsigned char *)(a1 + 313) = v113 != 0;
        }
        goto LABEL_273;
      case 0x22u:
        if (v12 != 16) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x40000u;
        uint64_t v115 = v11 + 1;
        uint64_t v116 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_197;
        }
        int v117 = *v115;
        uint64_t v116 = v116 + (v117 << 7) - 128;
        if (v117 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v116);
          *(void *)uint64_t v188 = result;
          *(unsigned char *)(a1 + 249) = v177 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v115 = v11 + 2;
LABEL_197:
          *(void *)uint64_t v188 = v115;
          *(unsigned char *)(a1 + 249) = v116 != 0;
        }
        goto LABEL_273;
      case 0x23u:
        if (v12 != 24) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x20000u;
        uint64_t v118 = v11 + 1;
        uint64_t v119 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_202;
        }
        int v120 = *v118;
        uint64_t v119 = v119 + (v120 << 7) - 128;
        if (v120 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v119);
          *(void *)uint64_t v188 = result;
          *(unsigned char *)(a1 + 248) = v178 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v118 = v11 + 2;
LABEL_202:
          *(void *)uint64_t v188 = v118;
          *(unsigned char *)(a1 + 248) = v119 != 0;
        }
        goto LABEL_273;
      case 0x24u:
        if (v12 != 34) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v121 = *(void *)(a1 + 8);
        uint64_t v24 = (void *)(v121 & 0xFFFFFFFFFFFFFFFELL);
        if (v121) {
          uint64_t v24 = (void *)*v24;
        }
        uint64_t v25 = (uint64_t *)(a1 + 168);
        goto LABEL_265;
      case 0x28u:
        if (v12 != 64) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x100000u;
        long long v123 = v11 + 1;
        LODWORD(v122) = *v11;
        if ((v122 & 0x80) == 0) {
          goto LABEL_211;
        }
        int v124 = *v123;
        uint64_t v122 = v122 + (v124 << 7) - 128;
        if (v124 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v122);
          *(void *)uint64_t v188 = result;
          *(_DWORD *)(a1 + 252) = v179;
          if (!result) {
            return result;
          }
        }
        else
        {
          long long v123 = v11 + 2;
LABEL_211:
          *(void *)uint64_t v188 = v123;
          *(_DWORD *)(a1 + 252) = v122;
        }
        goto LABEL_273;
      case 0x29u:
        if (v12 != 72) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 44) |= 0x40u;
        long long v126 = v11 + 1;
        LODWORD(v125) = *v11;
        if ((v125 & 0x80) == 0) {
          goto LABEL_216;
        }
        int v127 = *v126;
        uint64_t v125 = v125 + (v127 << 7) - 128;
        if (v127 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v125);
          *(void *)uint64_t v188 = result;
          *(_DWORD *)(a1 + 316) = v180;
          if (!result) {
            return result;
          }
        }
        else
        {
          long long v126 = v11 + 2;
LABEL_216:
          *(void *)uint64_t v188 = v126;
          *(_DWORD *)(a1 + 316) = v125;
        }
        goto LABEL_273;
      case 0x2Au:
        if (v12 != 80) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 44) |= 0x80u;
        uint64_t v129 = v11 + 1;
        LODWORD(v128) = *v11;
        if ((v128 & 0x80) == 0) {
          goto LABEL_221;
        }
        int v130 = *v129;
        uint64_t v128 = v128 + (v130 << 7) - 128;
        if (v130 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v128);
          *(void *)uint64_t v188 = result;
          *(_DWORD *)(a1 + 32sub_23692A244(&a9, 0) = v181;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v129 = v11 + 2;
LABEL_221:
          *(void *)uint64_t v188 = v129;
          *(_DWORD *)(a1 + 32sub_23692A244(&a9, 0) = v128;
        }
        goto LABEL_273;
      case 0x2Bu:
        if (v12 != 88) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 44) |= 0x100u;
        uint64_t v132 = v11 + 1;
        LODWORD(v131) = *v11;
        if ((v131 & 0x80) == 0) {
          goto LABEL_226;
        }
        int v133 = *v132;
        uint64_t v131 = v131 + (v133 << 7) - 128;
        if (v133 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v131);
          *(void *)uint64_t v188 = result;
          *(_DWORD *)(a1 + 324) = v182;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v132 = v11 + 2;
LABEL_226:
          *(void *)uint64_t v188 = v132;
          *(_DWORD *)(a1 + 324) = v131;
        }
        goto LABEL_273;
      case 0x2Cu:
        if (v12 != 98) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v153 = *(void *)(a1 + 8);
        uint64_t v135 = (void *)(v153 & 0xFFFFFFFFFFFFFFFELL);
        if (v153) {
          uint64_t v135 = (void *)*v135;
        }
        unint64_t v136 = &off_26889A4C8;
        uint64_t v137 = (uint64_t *)(a1 + 176);
        goto LABEL_270;
      case 0x2Du:
        if (v12 != 106) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v134 = *(void *)(a1 + 8);
        uint64_t v135 = (void *)(v134 & 0xFFFFFFFFFFFFFFFELL);
        if (v134) {
          uint64_t v135 = (void *)*v135;
        }
        unint64_t v136 = &off_26889A448;
        uint64_t v137 = (uint64_t *)(a1 + 184);
        goto LABEL_270;
      case 0x2Eu:
        if (v12 != 114) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v138 = *(void *)(a1 + 8);
        uint64_t v135 = (void *)(v138 & 0xFFFFFFFFFFFFFFFELL);
        if (v138) {
          uint64_t v135 = (void *)*v135;
        }
        unint64_t v136 = &off_26889A468;
        uint64_t v137 = (uint64_t *)(a1 + 192);
        goto LABEL_270;
      case 0x2Fu:
        if (v12 != 122) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v139 = *(void *)(a1 + 8);
        uint64_t v135 = (void *)(v139 & 0xFFFFFFFFFFFFFFFELL);
        if (v139) {
          uint64_t v135 = (void *)*v135;
        }
        unint64_t v136 = &off_26889A488;
        uint64_t v137 = (uint64_t *)(a1 + 200);
        goto LABEL_270;
      case 0x30u:
        if (v12 != 130) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        uint64_t v140 = *(void *)(a1 + 8);
        uint64_t v135 = (void *)(v140 & 0xFFFFFFFFFFFFFFFELL);
        if (v140) {
          uint64_t v135 = (void *)*v135;
        }
        unint64_t v136 = &off_26889A4A8;
        uint64_t v137 = (uint64_t *)(a1 + 208);
LABEL_270:
        id v152 = (std::string *)sub_23694608C(v137, v136, (uint64_t)v135);
        goto LABEL_271;
      case 0x31u:
        if (v12 != 136) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x80000u;
        long long v141 = v11 + 1;
        uint64_t v142 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_247;
        }
        int v143 = *v141;
        uint64_t v142 = v142 + (v143 << 7) - 128;
        if (v143 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v142);
          *(void *)uint64_t v188 = result;
          *(unsigned char *)(a1 + 25sub_23692A244(&a9, 0) = v183 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          long long v141 = v11 + 2;
LABEL_247:
          *(void *)uint64_t v188 = v141;
          *(unsigned char *)(a1 + 25sub_23692A244(&a9, 0) = v142 != 0;
        }
        goto LABEL_273;
      case 0x32u:
        if (v12 != 144) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x2000u;
        long long v144 = v11 + 1;
        uint64_t v145 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_252;
        }
        int v146 = *v144;
        uint64_t v145 = v145 + (v146 << 7) - 128;
        if (v146 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v145);
          *(void *)uint64_t v188 = result;
          *(unsigned char *)(a1 + 244) = v184 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          long long v144 = v11 + 2;
LABEL_252:
          *(void *)uint64_t v188 = v144;
          *(unsigned char *)(a1 + 244) = v145 != 0;
        }
        goto LABEL_273;
      case 0x33u:
        if (v12 != 157) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x200000u;
        int v147 = *(_DWORD *)v11;
        uint64_t v45 = v11 + 4;
        *(_DWORD *)(a1 + 256) = v147;
LABEL_255:
        *(void *)uint64_t v188 = v45;
        goto LABEL_273;
      case 0x34u:
        if (v12 != 160) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x400000u;
        int v148 = v11 + 1;
        uint64_t v149 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_260;
        }
        int v150 = *v148;
        uint64_t v149 = v149 + (v150 << 7) - 128;
        if (v150 < 0)
        {
          uint64_t result = (char *)sub_236954390((uint64_t)v11, v149);
          *(void *)uint64_t v188 = result;
          *(void *)(a1 + 264) = v185;
          if (!result) {
            return result;
          }
        }
        else
        {
          int v148 = v11 + 2;
LABEL_260:
          *(void *)uint64_t v188 = v148;
          *(void *)(a1 + 264) = v149;
        }
        goto LABEL_273;
      case 0x35u:
        if (v12 != 170) {
          goto LABEL_275;
        }
        *(_DWORD *)(a1 + 40) |= 0x100u;
        uint64_t v151 = *(void *)(a1 + 8);
        uint64_t v24 = (void *)(v151 & 0xFFFFFFFFFFFFFFFELL);
        if (v151) {
          uint64_t v24 = (void *)*v24;
        }
        uint64_t v25 = (uint64_t *)(a1 + 216);
LABEL_265:
        id v152 = (std::string *)sub_236945F50(v25, (uint64_t)v24);
LABEL_271:
        uint64_t result = (char *)sub_23695448C(v152, *(char **)v188, (uint64_t)a3);
        goto LABEL_272;
      default:
LABEL_275:
        if (v12) {
          BOOL v155 = (v12 & 7) == 4;
        }
        else {
          BOOL v155 = 1;
        }
        if (v155)
        {
          a3[10].i32[0] = v12 - 1;
          return v11;
        }
        if (v12 < 0x640)
        {
          if (*v187)
          {
            float v156 = (std::string *)((*v187 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            float v156 = (std::string *)sub_236937EDC(v187);
            uint64_t v11 = *(char **)v188;
          }
          uint64_t result = (char *)sub_236954948(v12, v156, v11, a3);
        }
        else
        {
          uint64_t result = (char *)sub_23694CE6C((uint64_t *)(a1 + 16), v12, (unsigned __int8 *)v11, (uint64_t)&unk_26889AD60, v187, a3);
        }
LABEL_272:
        *(void *)uint64_t v188 = result;
        if (!result) {
          return result;
        }
LABEL_273:
        int v154 = sub_236937D9C((uint64_t)a3, (char **)v188, a3[11].i32[1]);
        uint64_t result = *(char **)v188;
        if (v154) {
          return result;
        }
        continue;
    }
    break;
  }
  while (1)
  {
    double v101 = result + 2;
    *(void *)uint64_t v188 = result + 2;
    float v102 = *(int **)(a1 + 144);
    if (!v102) {
      break;
    }
    uint64_t v103 = *(int *)(a1 + 136);
    int v104 = *v102;
    if ((int)v103 >= *v102)
    {
      if (v104 == *(_DWORD *)(a1 + 140))
      {
LABEL_173:
        sub_2369597C8(a1 + 128, v104 + 1);
        float v102 = *(int **)(a1 + 144);
        int v104 = *v102;
      }
      *float v102 = v104 + 1;
      uint64_t v106 = *v7;
      if (!*v7) {
        operator new();
      }
      if (*(unsigned char *)(v106 + 24)) {
        (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v106 + 32) + 32) + 40))(*(void *)(*(void *)(v106 + 32) + 32), &unk_26E9CE540, 24);
      }
      unint64_t v105 = (std::string *)sub_236945764((void *)v106, 0x18uLL, (uint64_t)sub_2369414D4);
      v105->__r_.__value_.__r.__words[0] = 0;
      v105->__r_.__value_.__l.__size_ = 0;
      v105->__r_.__value_.__r.__words[2] = 0;
      uint64_t v107 = *(void *)(a1 + 144);
      uint64_t v108 = *(int *)(a1 + 136);
      *(_DWORD *)(a1 + 136) = v108 + 1;
      *(void *)(v107 + 8 * v108 + 8) = v105;
      double v101 = *(char **)v188;
      goto LABEL_179;
    }
    *(_DWORD *)(a1 + 136) = v103 + 1;
    unint64_t v105 = *(std::string **)&v102[2 * v103 + 2];
LABEL_179:
    uint64_t result = (char *)sub_23695448C(v105, v101, (uint64_t)a3);
    *(void *)uint64_t v188 = result;
    if (!result) {
      return result;
    }
    if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 506) {
      goto LABEL_273;
    }
  }
  int v104 = *(_DWORD *)(a1 + 140);
  goto LABEL_173;
}

char *sub_23693A7D8(uint64_t a1, char *a2, uint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 64);
  if (v6 >= 1)
  {
    for (int i = 0; v6 != i; ++i)
    {
      uint64_t v8 = sub_23694168C(a1 + 56, i);
      if (*(char *)(v8 + 23) < 0)
      {
        int64_t v9 = *(void *)(v8 + 8);
        if (v9 > 127) {
          goto LABEL_13;
        }
      }
      else
      {
        int64_t v9 = *(unsigned __int8 *)(v8 + 23);
      }
      if (*a3 - (uint64_t)a2 + 14 >= v9)
      {
        *a2 = 10;
        a2[1] = v9;
        if (*(char *)(v8 + 23) >= 0) {
          uint64_t v10 = (const void *)v8;
        }
        else {
          uint64_t v10 = *(const void **)v8;
        }
        memcpy(a2 + 2, v10, v9);
        a2 += v9 + 2;
        continue;
      }
LABEL_13:
      a2 = sub_236946BD8(a3, 1, v8, a2);
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if (v11)
  {
    a2 = sub_236935EBC((unint64_t *)a3, 2, (const void **)(*(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v11 & 0x800000) == 0)
    {
LABEL_16:
      if ((v11 & 0x1000000) == 0) {
        goto LABEL_38;
      }
      goto LABEL_17;
    }
  }
  else if ((v11 & 0x800000) == 0)
  {
    goto LABEL_16;
  }
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_236946668((uint64_t)a3, a2);
  }
  unint64_t v13 = *(int *)(a1 + 272);
  *a2 = 24;
  if (v13 > 0x7F)
  {
    a2[1] = v13 | 0x80;
    unint64_t v15 = v13 >> 7;
    if (v13 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - 1) = v15 | 0x80;
        unint64_t v18 = v15 >> 7;
        ++a2;
        unint64_t v19 = v15 >> 14;
        v15 >>= 7;
      }
      while (v19);
      *(a2 - 1) = v18;
      if ((v11 & 0x1000000) == 0) {
        goto LABEL_38;
      }
    }
    else
    {
      a2[2] = v15;
      a2 += 3;
      if ((v11 & 0x1000000) == 0) {
        goto LABEL_38;
      }
    }
  }
  else
  {
    a2[1] = v13;
    a2 += 2;
    if ((v11 & 0x1000000) == 0) {
      goto LABEL_38;
    }
  }
LABEL_17:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_236946668((uint64_t)a3, a2);
  }
  unint64_t v12 = *(int *)(a1 + 276);
  *a2 = 32;
  if (v12 > 0x7F)
  {
    a2[1] = v12 | 0x80;
    unint64_t v14 = v12 >> 7;
    if (v12 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - 1) = v14 | 0x80;
        unint64_t v16 = v14 >> 7;
        ++a2;
        unint64_t v17 = v14 >> 14;
        v14 >>= 7;
      }
      while (v17);
      *(a2 - 1) = v16;
    }
    else
    {
      a2[2] = v14;
      a2 += 3;
    }
  }
  else
  {
    a2[1] = v12;
    a2 += 2;
  }
LABEL_38:
  int v20 = *(_DWORD *)(a1 + 88);
  if (v20 >= 1)
  {
    for (int j = 0; v20 != j; ++j)
    {
      uint64_t v22 = sub_23694168C(a1 + 80, j);
      if (*(char *)(v22 + 23) < 0)
      {
        int64_t v23 = *(void *)(v22 + 8);
        if (v23 > 127) {
          goto LABEL_50;
        }
      }
      else
      {
        int64_t v23 = *(unsigned __int8 *)(v22 + 23);
      }
      if (*a3 - (uint64_t)a2 + 14 >= v23)
      {
        *a2 = 42;
        a2[1] = v23;
        if (*(char *)(v22 + 23) >= 0) {
          uint64_t v24 = (const void *)v22;
        }
        else {
          uint64_t v24 = *(const void **)v22;
        }
        memcpy(a2 + 2, v24, v23);
        a2 += v23 + 2;
        continue;
      }
LABEL_50:
      a2 = sub_236946BD8(a3, 5, v22, a2);
    }
  }
  if ((v11 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_236946668((uint64_t)a3, a2);
    }
    unint64_t v26 = *(int *)(a1 + 224);
    *a2 = 48;
    if (v26 > 0x7F)
    {
      a2[1] = v26 | 0x80;
      unint64_t v28 = v26 >> 7;
      if (v26 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - 1) = v28 | 0x80;
          unint64_t v31 = v28 >> 7;
          ++a2;
          unint64_t v32 = v28 >> 14;
          v28 >>= 7;
        }
        while (v32);
        *(a2 - 1) = v31;
        if ((v11 & 2) != 0) {
          goto LABEL_82;
        }
      }
      else
      {
        a2[2] = v28;
        a2 += 3;
        if ((v11 & 2) != 0) {
          goto LABEL_82;
        }
      }
    }
    else
    {
      a2[1] = v26;
      a2 += 2;
      if ((v11 & 2) != 0) {
        goto LABEL_82;
      }
    }
LABEL_53:
    if ((v11 & 0x2000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_83;
  }
  if ((v11 & 2) == 0) {
    goto LABEL_53;
  }
LABEL_82:
  a2 = sub_236935EBC((unint64_t *)a3, 7, (const void **)(*(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v11 & 0x2000000) == 0)
  {
LABEL_54:
    if ((v11 & 0x800) == 0) {
      goto LABEL_55;
    }
    goto LABEL_86;
  }
LABEL_83:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_236946668((uint64_t)a3, a2);
  }
  int v33 = *(_DWORD *)(a1 + 280);
  *a2 = 85;
  *(_DWORD *)(a2 + 1) = v33;
  a2 += 5;
  if ((v11 & 0x800) == 0)
  {
LABEL_55:
    if ((v11 & 0x400) == 0) {
      goto LABEL_56;
    }
LABEL_97:
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_236946668((uint64_t)a3, a2);
    }
    unint64_t v38 = *(int *)(a1 + 228);
    *a2 = 96;
    if (v38 > 0x7F)
    {
      a2[1] = v38 | 0x80;
      unint64_t v39 = v38 >> 7;
      if (v38 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - 1) = v39 | 0x80;
          unint64_t v40 = v39 >> 7;
          ++a2;
          unint64_t v41 = v39 >> 14;
          v39 >>= 7;
        }
        while (v41);
        *(a2 - 1) = v40;
        if ((v11 & 0x1000) != 0) {
          goto LABEL_108;
        }
      }
      else
      {
        a2[2] = v39;
        a2 += 3;
        if ((v11 & 0x1000) != 0) {
          goto LABEL_108;
        }
      }
    }
    else
    {
      a2[1] = v38;
      a2 += 2;
      if ((v11 & 0x1000) != 0) {
        goto LABEL_108;
      }
    }
LABEL_57:
    if ((v11 & 0x4000000) == 0) {
      goto LABEL_58;
    }
LABEL_119:
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_236946668((uint64_t)a3, a2);
    }
    unint64_t v46 = *(int *)(a1 + 284);
    *a2 = 112;
    if (v46 > 0x7F)
    {
      a2[1] = v46 | 0x80;
      unint64_t v47 = v46 >> 7;
      if (v46 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - 1) = v47 | 0x80;
          unint64_t v48 = v47 >> 7;
          ++a2;
          unint64_t v49 = v47 >> 14;
          v47 >>= 7;
        }
        while (v49);
        *(a2 - 1) = v48;
        if ((v11 & 0x8000000) != 0) {
          goto LABEL_130;
        }
      }
      else
      {
        a2[2] = v47;
        a2 += 3;
        if ((v11 & 0x8000000) != 0) {
          goto LABEL_130;
        }
      }
    }
    else
    {
      a2[1] = v46;
      a2 += 2;
      if ((v11 & 0x8000000) != 0) {
        goto LABEL_130;
      }
    }
LABEL_59:
    if ((v11 & 0x10000000) == 0) {
      goto LABEL_60;
    }
LABEL_133:
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_236946668((uint64_t)a3, a2);
    }
    unint64_t v51 = *(int *)(a1 + 292);
    *(_WORD *)a2 = 384;
    if (v51 > 0x7F)
    {
      a2[2] = v51 | 0x80;
      unint64_t v52 = v51 >> 7;
      if (v51 >> 14)
      {
        a2 += 4;
        do
        {
          *(a2 - 1) = v52 | 0x80;
          unint64_t v53 = v52 >> 7;
          ++a2;
          unint64_t v54 = v52 >> 14;
          v52 >>= 7;
        }
        while (v54);
        *(a2 - 1) = v53;
        if ((v11 & 0x20000000) != 0) {
          goto LABEL_144;
        }
      }
      else
      {
        a2[3] = v52;
        a2 += 4;
        if ((v11 & 0x20000000) != 0) {
          goto LABEL_144;
        }
      }
    }
    else
    {
      a2[2] = v51;
      a2 += 3;
      if ((v11 & 0x20000000) != 0) {
        goto LABEL_144;
      }
    }
LABEL_61:
    if ((v11 & 0x40000000) == 0) {
      goto LABEL_155;
    }
    goto LABEL_62;
  }
LABEL_86:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_236946668((uint64_t)a3, a2);
  }
  unint64_t v34 = *(void *)(a1 + 232);
  *a2 = 88;
  if (v34 > 0x7F)
  {
    a2[1] = v34 | 0x80;
    unint64_t v35 = v34 >> 7;
    if (v34 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - 1) = v35 | 0x80;
        unint64_t v36 = v35 >> 7;
        ++a2;
        unint64_t v37 = v35 >> 14;
        v35 >>= 7;
      }
      while (v37);
      *(a2 - 1) = v36;
      if ((v11 & 0x400) != 0) {
        goto LABEL_97;
      }
    }
    else
    {
      a2[2] = v35;
      a2 += 3;
      if ((v11 & 0x400) != 0) {
        goto LABEL_97;
      }
    }
  }
  else
  {
    a2[1] = v34;
    a2 += 2;
    if ((v11 & 0x400) != 0) {
      goto LABEL_97;
    }
  }
LABEL_56:
  if ((v11 & 0x1000) == 0) {
    goto LABEL_57;
  }
LABEL_108:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_236946668((uint64_t)a3, a2);
  }
  unint64_t v42 = *(int *)(a1 + 240);
  *a2 = 104;
  if (v42 > 0x7F)
  {
    a2[1] = v42 | 0x80;
    unint64_t v43 = v42 >> 7;
    if (v42 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - 1) = v43 | 0x80;
        unint64_t v44 = v43 >> 7;
        ++a2;
        unint64_t v45 = v43 >> 14;
        v43 >>= 7;
      }
      while (v45);
      *(a2 - 1) = v44;
      if ((v11 & 0x4000000) != 0) {
        goto LABEL_119;
      }
    }
    else
    {
      a2[2] = v43;
      a2 += 3;
      if ((v11 & 0x4000000) != 0) {
        goto LABEL_119;
      }
    }
  }
  else
  {
    a2[1] = v42;
    a2 += 2;
    if ((v11 & 0x4000000) != 0) {
      goto LABEL_119;
    }
  }
LABEL_58:
  if ((v11 & 0x8000000) == 0) {
    goto LABEL_59;
  }
LABEL_130:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_236946668((uint64_t)a3, a2);
  }
  int v50 = *(_DWORD *)(a1 + 288);
  *a2 = 125;
  *(_DWORD *)(a2 + 1) = v50;
  a2 += 5;
  if ((v11 & 0x10000000) != 0) {
    goto LABEL_133;
  }
LABEL_60:
  if ((v11 & 0x20000000) == 0) {
    goto LABEL_61;
  }
LABEL_144:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_236946668((uint64_t)a3, a2);
  }
  unint64_t v55 = *(int *)(a1 + 296);
  *(_WORD *)a2 = 392;
  if (v55 > 0x7F)
  {
    a2[2] = v55 | 0x80;
    unint64_t v56 = v55 >> 7;
    if (v55 >> 14)
    {
      a2 += 4;
      do
      {
        *(a2 - 1) = v56 | 0x80;
        unint64_t v57 = v56 >> 7;
        ++a2;
        unint64_t v58 = v56 >> 14;
        v56 >>= 7;
      }
      while (v58);
      *(a2 - 1) = v57;
      if ((v11 & 0x40000000) == 0) {
        goto LABEL_155;
      }
    }
    else
    {
      a2[3] = v56;
      a2 += 4;
      if ((v11 & 0x40000000) == 0) {
        goto LABEL_155;
      }
    }
  }
  else
  {
    a2[2] = v55;
    a2 += 3;
    if ((v11 & 0x40000000) == 0) {
      goto LABEL_155;
    }
  }
LABEL_62:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_236946668((uint64_t)a3, a2);
  }
  unint64_t v25 = *(int *)(a1 + 300);
  *(_WORD *)a2 = 400;
  if (v25 > 0x7F)
  {
    a2[2] = v25 | 0x80;
    unint64_t v27 = v25 >> 7;
    if (v25 >> 14)
    {
      a2 += 4;
      do
      {
        *(a2 - 1) = v27 | 0x80;
        unint64_t v29 = v27 >> 7;
        ++a2;
        unint64_t v30 = v27 >> 14;
        v27 >>= 7;
      }
      while (v30);
      *(a2 - 1) = v29;
    }
    else
    {
      a2[3] = v27;
      a2 += 4;
    }
  }
  else
  {
    a2[2] = v25;
    a2 += 3;
  }
LABEL_155:
  if (*(unsigned char *)(a1 + 44))
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_236946668((uint64_t)a3, a2);
    }
    char v59 = *(unsigned char *)(a1 + 308);
    *(_WORD *)a2 = 408;
    a2[2] = v59;
    a2 += 3;
  }
  if ((*(_DWORD *)(a1 + 40) & 0x80000000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_236946668((uint64_t)a3, a2);
    }
    unint64_t v60 = *(int *)(a1 + 304);
    *(_WORD *)a2 = 416;
    if (v60 > 0x7F)
    {
      a2[2] = v60 | 0x80;
      unint64_t v61 = v60 >> 7;
      if (v60 >> 14)
      {
        a2 += 4;
        do
        {
          *(a2 - 1) = v61 | 0x80;
          unint64_t v62 = v61 >> 7;
          ++a2;
          unint64_t v63 = v61 >> 14;
          v61 >>= 7;
        }
        while (v63);
        *(a2 - 1) = v62;
      }
      else
      {
        a2[3] = v61;
        a2 += 4;
      }
    }
    else
    {
      a2[2] = v60;
      a2 += 3;
    }
  }
  int v64 = *(_DWORD *)(a1 + 44);
  if ((v64 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_236946668((uint64_t)a3, a2);
    }
    char v65 = *(unsigned char *)(a1 + 309);
    *(_WORD *)a2 = 424;
    a2[2] = v65;
    a2 += 3;
    if ((v64 & 8) == 0)
    {
LABEL_171:
      if ((v64 & 4) == 0) {
        goto LABEL_182;
      }
      goto LABEL_179;
    }
  }
  else if ((v64 & 8) == 0)
  {
    goto LABEL_171;
  }
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_236946668((uint64_t)a3, a2);
  }
  char v66 = *(unsigned char *)(a1 + 311);
  *(_WORD *)a2 = 432;
  a2[2] = v66;
  a2 += 3;
  if ((v64 & 4) != 0)
  {
LABEL_179:
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_236946668((uint64_t)a3, a2);
    }
    char v67 = *(unsigned char *)(a1 + 310);
    *(_WORD *)a2 = 440;
    a2[2] = v67;
    a2 += 3;
  }
LABEL_182:
  int v68 = *(_DWORD *)(a1 + 40);
  if ((v68 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_236946668((uint64_t)a3, a2);
    }
    char v69 = *(unsigned char *)(a1 + 245);
    *(_WORD *)a2 = 448;
    a2[2] = v69;
    a2 += 3;
    if ((v68 & 0x10000) == 0)
    {
LABEL_184:
      if ((v68 & 0x8000) == 0) {
        goto LABEL_195;
      }
      goto LABEL_192;
    }
  }
  else if ((v68 & 0x10000) == 0)
  {
    goto LABEL_184;
  }
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_236946668((uint64_t)a3, a2);
  }
  char v70 = *(unsigned char *)(a1 + 247);
  *(_WORD *)a2 = 456;
  a2[2] = v70;
  a2 += 3;
  if ((v68 & 0x8000) != 0)
  {
LABEL_192:
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_236946668((uint64_t)a3, a2);
    }
    char v71 = *(unsigned char *)(a1 + 246);
    *(_WORD *)a2 = 464;
    a2[2] = v71;
    a2 += 3;
  }
LABEL_195:
  int v72 = *(_DWORD *)(a1 + 112);
  if (v72 >= 1)
  {
    for (int k = 0; v72 != k; ++k)
    {
      uint64_t v74 = sub_23694168C(a1 + 104, k);
      if (*(char *)(v74 + 23) < 0)
      {
        int64_t v75 = *(void *)(v74 + 8);
        if (v75 > 127) {
          goto LABEL_207;
        }
      }
      else
      {
        int64_t v75 = *(unsigned __int8 *)(v74 + 23);
      }
      if (*a3 - (uint64_t)a2 + 13 >= v75)
      {
        *(_WORD *)a2 = 498;
        a2[2] = v75;
        if (*(char *)(v74 + 23) >= 0) {
          uint64_t v76 = (const void *)v74;
        }
        else {
          uint64_t v76 = *(const void **)v74;
        }
        memcpy(a2 + 3, v76, v75);
        a2 += v75 + 3;
        continue;
      }
LABEL_207:
      a2 = sub_236946BD8(a3, 30, v74, a2);
    }
  }
  int v77 = *(_DWORD *)(a1 + 136);
  if (v77 >= 1)
  {
    for (int m = 0; v77 != m; ++m)
    {
      uint64_t v79 = sub_23694168C(a1 + 128, m);
      if (*(char *)(v79 + 23) < 0)
      {
        int64_t v80 = *(void *)(v79 + 8);
        if (v80 > 127) {
          goto LABEL_220;
        }
      }
      else
      {
        int64_t v80 = *(unsigned __int8 *)(v79 + 23);
      }
      if (*a3 - (uint64_t)a2 + 13 >= v80)
      {
        *(_WORD *)a2 = 506;
        a2[2] = v80;
        if (*(char *)(v79 + 23) >= 0) {
          uint64_t v81 = (const void *)v79;
        }
        else {
          uint64_t v81 = *(const void **)v79;
        }
        memcpy(a2 + 3, v81, v80);
        a2 += v80 + 3;
        continue;
      }
LABEL_220:
      a2 = sub_236946BD8(a3, 31, v79, a2);
    }
  }
  int v82 = *(_DWORD *)(a1 + 44);
  if ((v82 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_236946668((uint64_t)a3, a2);
    }
    char v83 = *(unsigned char *)(a1 + 312);
    *(_WORD *)a2 = 640;
    a2[2] = v83;
    a2 += 3;
  }
  if ((v82 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_236946668((uint64_t)a3, a2);
    }
    char v84 = *(unsigned char *)(a1 + 313);
    *(_WORD *)a2 = 648;
    a2[2] = v84;
    a2 += 3;
  }
  int v85 = *(_DWORD *)(a1 + 40);
  if ((v85 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_236946668((uint64_t)a3, a2);
    }
    char v86 = *(unsigned char *)(a1 + 249);
    *(_WORD *)a2 = 656;
    a2[2] = v86;
    a2 += 3;
    if ((v85 & 0x20000) == 0)
    {
LABEL_231:
      if ((v85 & 4) == 0) {
        goto LABEL_232;
      }
      goto LABEL_240;
    }
  }
  else if ((v85 & 0x20000) == 0)
  {
    goto LABEL_231;
  }
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_236946668((uint64_t)a3, a2);
  }
  char v87 = *(unsigned char *)(a1 + 248);
  *(_WORD *)a2 = 664;
  a2[2] = v87;
  a2 += 3;
  if ((v85 & 4) == 0)
  {
LABEL_232:
    if ((v85 & 0x100000) == 0) {
      goto LABEL_250;
    }
    goto LABEL_241;
  }
LABEL_240:
  a2 = sub_236935EBC((unint64_t *)a3, 36, (const void **)(*(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v85 & 0x100000) == 0) {
    goto LABEL_250;
  }
LABEL_241:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_236946668((uint64_t)a3, a2);
  }
  unint64_t v88 = *(int *)(a1 + 252);
  *(_WORD *)a2 = 704;
  if (v88 > 0x7F)
  {
    a2[2] = v88 | 0x80;
    unint64_t v89 = v88 >> 7;
    if (v88 >> 14)
    {
      a2 += 4;
      do
      {
        *(a2 - 1) = v89 | 0x80;
        unint64_t v90 = v89 >> 7;
        ++a2;
        unint64_t v91 = v89 >> 14;
        v89 >>= 7;
      }
      while (v91);
      *(a2 - 1) = v90;
    }
    else
    {
      a2[3] = v89;
      a2 += 4;
    }
  }
  else
  {
    a2[2] = v88;
    a2 += 3;
  }
LABEL_250:
  int v92 = *(_DWORD *)(a1 + 44);
  if ((v92 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_236946668((uint64_t)a3, a2);
    }
    unint64_t v94 = *(int *)(a1 + 316);
    *(_WORD *)a2 = 712;
    if (v94 > 0x7F)
    {
      a2[2] = v94 | 0x80;
      unint64_t v96 = v94 >> 7;
      if (v94 >> 14)
      {
        a2 += 4;
        do
        {
          *(a2 - 1) = v96 | 0x80;
          unint64_t v99 = v96 >> 7;
          ++a2;
          unint64_t v100 = v96 >> 14;
          v96 >>= 7;
        }
        while (v100);
        *(a2 - 1) = v99;
        if ((v92 & 0x80) != 0) {
          goto LABEL_273;
        }
      }
      else
      {
        a2[3] = v96;
        a2 += 4;
        if ((v92 & 0x80) != 0) {
          goto LABEL_273;
        }
      }
    }
    else
    {
      a2[2] = v94;
      a2 += 3;
      if ((v92 & 0x80) != 0) {
        goto LABEL_273;
      }
    }
LABEL_252:
    if ((v92 & 0x100) == 0) {
      goto LABEL_284;
    }
    goto LABEL_253;
  }
  if ((v92 & 0x80) == 0) {
    goto LABEL_252;
  }
LABEL_273:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_236946668((uint64_t)a3, a2);
  }
  unint64_t v101 = *(int *)(a1 + 320);
  *(_WORD *)a2 = 720;
  if (v101 > 0x7F)
  {
    a2[2] = v101 | 0x80;
    unint64_t v102 = v101 >> 7;
    if (v101 >> 14)
    {
      a2 += 4;
      do
      {
        *(a2 - 1) = v102 | 0x80;
        unint64_t v103 = v102 >> 7;
        ++a2;
        unint64_t v104 = v102 >> 14;
        v102 >>= 7;
      }
      while (v104);
      *(a2 - 1) = v103;
      if ((v92 & 0x100) == 0) {
        goto LABEL_284;
      }
    }
    else
    {
      a2[3] = v102;
      a2 += 4;
      if ((v92 & 0x100) == 0) {
        goto LABEL_284;
      }
    }
  }
  else
  {
    a2[2] = v101;
    a2 += 3;
    if ((v92 & 0x100) == 0) {
      goto LABEL_284;
    }
  }
LABEL_253:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_236946668((uint64_t)a3, a2);
  }
  unint64_t v93 = *(int *)(a1 + 324);
  *(_WORD *)a2 = 728;
  if (v93 > 0x7F)
  {
    a2[2] = v93 | 0x80;
    unint64_t v95 = v93 >> 7;
    if (v93 >> 14)
    {
      a2 += 4;
      do
      {
        *(a2 - 1) = v95 | 0x80;
        unint64_t v97 = v95 >> 7;
        ++a2;
        unint64_t v98 = v95 >> 14;
        v95 >>= 7;
      }
      while (v98);
      *(a2 - 1) = v97;
    }
    else
    {
      a2[3] = v95;
      a2 += 4;
    }
  }
  else
  {
    a2[2] = v93;
    a2 += 3;
  }
LABEL_284:
  int v105 = *(_DWORD *)(a1 + 40);
  if ((v105 & 8) != 0)
  {
    a2 = sub_236935EBC((unint64_t *)a3, 44, (const void **)(*(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v105 & 0x10) == 0)
    {
LABEL_286:
      if ((v105 & 0x20) == 0) {
        goto LABEL_287;
      }
      goto LABEL_299;
    }
  }
  else if ((v105 & 0x10) == 0)
  {
    goto LABEL_286;
  }
  a2 = sub_236935EBC((unint64_t *)a3, 45, (const void **)(*(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v105 & 0x20) == 0)
  {
LABEL_287:
    if ((v105 & 0x40) == 0) {
      goto LABEL_288;
    }
    goto LABEL_300;
  }
LABEL_299:
  a2 = sub_236935EBC((unint64_t *)a3, 46, (const void **)(*(void *)(a1 + 192) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v105 & 0x40) == 0)
  {
LABEL_288:
    if ((v105 & 0x80) == 0) {
      goto LABEL_289;
    }
    goto LABEL_301;
  }
LABEL_300:
  a2 = sub_236935EBC((unint64_t *)a3, 47, (const void **)(*(void *)(a1 + 200) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v105 & 0x80) == 0)
  {
LABEL_289:
    if ((v105 & 0x80000) == 0) {
      goto LABEL_290;
    }
    goto LABEL_302;
  }
LABEL_301:
  a2 = sub_236935EBC((unint64_t *)a3, 48, (const void **)(*(void *)(a1 + 208) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v105 & 0x80000) == 0)
  {
LABEL_290:
    if ((v105 & 0x2000) == 0) {
      goto LABEL_291;
    }
    goto LABEL_305;
  }
LABEL_302:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_236946668((uint64_t)a3, a2);
  }
  char v110 = *(unsigned char *)(a1 + 250);
  *(_WORD *)a2 = 904;
  a2[2] = v110;
  a2 += 3;
  if ((v105 & 0x2000) == 0)
  {
LABEL_291:
    if ((v105 & 0x200000) == 0) {
      goto LABEL_292;
    }
    goto LABEL_308;
  }
LABEL_305:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_236946668((uint64_t)a3, a2);
  }
  char v111 = *(unsigned char *)(a1 + 244);
  *(_WORD *)a2 = 912;
  a2[2] = v111;
  a2 += 3;
  if ((v105 & 0x200000) == 0)
  {
LABEL_292:
    if ((v105 & 0x400000) == 0) {
      goto LABEL_293;
    }
    goto LABEL_311;
  }
LABEL_308:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_236946668((uint64_t)a3, a2);
  }
  int v112 = *(_DWORD *)(a1 + 256);
  *(_WORD *)a2 = 925;
  *(_DWORD *)(a2 + 2) = v112;
  a2 += 6;
  if ((v105 & 0x400000) == 0)
  {
LABEL_293:
    if ((v105 & 0x100) == 0) {
      goto LABEL_295;
    }
    goto LABEL_294;
  }
LABEL_311:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_236946668((uint64_t)a3, a2);
  }
  unint64_t v113 = *(void *)(a1 + 264);
  *(_WORD *)a2 = 928;
  if (v113 <= 0x7F)
  {
    a2[2] = v113;
    a2 += 3;
    if ((v105 & 0x100) == 0) {
      goto LABEL_295;
    }
LABEL_294:
    a2 = sub_236935EBC((unint64_t *)a3, 53, (const void **)(*(void *)(a1 + 216) & 0xFFFFFFFFFFFFFFFELL), a2);
    goto LABEL_295;
  }
  a2[2] = v113 | 0x80;
  unint64_t v114 = v113 >> 7;
  if (v113 >> 14)
  {
    a2 += 4;
    do
    {
      *(a2 - 1) = v114 | 0x80;
      unint64_t v115 = v114 >> 7;
      ++a2;
      unint64_t v116 = v114 >> 14;
      v114 >>= 7;
    }
    while (v116);
    *(a2 - 1) = v115;
    if ((v105 & 0x100) != 0) {
      goto LABEL_294;
    }
  }
  else
  {
    a2[3] = v114;
    a2 += 4;
    if ((v105 & 0x100) != 0) {
      goto LABEL_294;
    }
  }
LABEL_295:
  uint64_t v106 = sub_23694DC64(a1 + 16, 200, 0x20000000, a2, a3);
  uint64_t v107 = v106;
  uint64_t v108 = *(void *)(a1 + 8);
  if ((v108 & 1) == 0) {
    return v107;
  }
  unint64_t v117 = v108 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v117 + 31) < 0)
  {
    uint64_t v118 = *(void **)(v117 + 8);
    uint64_t v119 = *(void *)(v117 + 16);
  }
  else
  {
    uint64_t v118 = (void *)(v117 + 8);
    LODWORD(v119) = *(unsigned __int8 *)(v117 + 31);
  }
  if (*a3 - (uint64_t)v106 >= (int)v119)
  {
    uint64_t v120 = (int)v119;
    memcpy(v106, v118, (int)v119);
    v107 += v120;
    return v107;
  }
  return sub_23694677C(a3, (char *)v118, v119, (unint64_t)v106);
}

uint64_t sub_23693B9A0(uint64_t a1)
{
  uint64_t v2 = sub_236950998(a1 + 16);
  uint64_t v3 = *(unsigned int *)(a1 + 64);
  uint64_t v4 = v2 + v3;
  if ((int)v3 >= 1)
  {
    int v5 = 0;
    do
    {
      uint64_t v6 = sub_23694168C(a1 + 56, v5);
      uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
      if ((v7 & 0x80u) != 0) {
        uint64_t v7 = *(void *)(v6 + 8);
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      ++v5;
    }
    while (v3 != v5);
  }
  uint64_t v8 = *(unsigned int *)(a1 + 88);
  uint64_t v9 = v4 + v8;
  if ((int)v8 >= 1)
  {
    int v10 = 0;
    do
    {
      uint64_t v11 = sub_23694168C(a1 + 80, v10);
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      if ((v12 & 0x80u) != 0) {
        uint64_t v12 = *(void *)(v11 + 8);
      }
      v9 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      ++v10;
    }
    while (v8 != v10);
  }
  uint64_t v13 = *(unsigned int *)(a1 + 112);
  uint64_t v14 = v9 + 2 * v13;
  if ((int)v13 >= 1)
  {
    int v15 = 0;
    do
    {
      uint64_t v16 = sub_23694168C(a1 + 104, v15);
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      if ((v17 & 0x80u) != 0) {
        uint64_t v17 = *(void *)(v16 + 8);
      }
      v14 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6);
      ++v15;
    }
    while (v13 != v15);
  }
  uint64_t v18 = *(unsigned int *)(a1 + 136);
  uint64_t v19 = v14 + 2 * v18;
  if ((int)v18 >= 1)
  {
    int v20 = 0;
    do
    {
      uint64_t v21 = sub_23694168C(a1 + 128, v20);
      uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
      if ((v22 & 0x80u) != 0) {
        uint64_t v22 = *(void *)(v21 + 8);
      }
      v19 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6);
      ++v20;
    }
    while (v18 != v20);
  }
  unsigned int v23 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v23) {
    goto LABEL_33;
  }
  if (v23)
  {
    unint64_t v58 = *(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v59 = *(unsigned __int8 *)(v58 + 23);
    uint64_t v60 = *(void *)(v58 + 8);
    if ((v59 & 0x80u) == 0) {
      uint64_t v60 = v59;
    }
    v19 += v60 + ((9 * (__clz(v60 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v23 & 2) == 0)
    {
LABEL_24:
      if ((v23 & 4) == 0) {
        goto LABEL_25;
      }
      goto LABEL_131;
    }
  }
  else if ((v23 & 2) == 0)
  {
    goto LABEL_24;
  }
  unint64_t v61 = *(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v62 = *(unsigned __int8 *)(v61 + 23);
  uint64_t v63 = *(void *)(v61 + 8);
  if ((v62 & 0x80u) == 0) {
    uint64_t v63 = v62;
  }
  v19 += v63 + ((9 * (__clz(v63 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v23 & 4) == 0)
  {
LABEL_25:
    if ((v23 & 8) == 0) {
      goto LABEL_26;
    }
    goto LABEL_134;
  }
LABEL_131:
  unint64_t v64 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v65 = *(unsigned __int8 *)(v64 + 23);
  uint64_t v66 = *(void *)(v64 + 8);
  if ((v65 & 0x80u) == 0) {
    uint64_t v66 = v65;
  }
  v19 += v66 + ((9 * (__clz(v66 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v23 & 8) == 0)
  {
LABEL_26:
    if ((v23 & 0x10) == 0) {
      goto LABEL_27;
    }
    goto LABEL_137;
  }
LABEL_134:
  unint64_t v67 = *(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v68 = *(unsigned __int8 *)(v67 + 23);
  uint64_t v69 = *(void *)(v67 + 8);
  if ((v68 & 0x80u) == 0) {
    uint64_t v69 = v68;
  }
  v19 += v69 + ((9 * (__clz(v69 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v23 & 0x10) == 0)
  {
LABEL_27:
    if ((v23 & 0x20) == 0) {
      goto LABEL_28;
    }
LABEL_140:
    unint64_t v73 = *(void *)(a1 + 192) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v74 = *(unsigned __int8 *)(v73 + 23);
    uint64_t v75 = *(void *)(v73 + 8);
    if ((v74 & 0x80u) == 0) {
      uint64_t v75 = v74;
    }
    v19 += v75 + ((9 * (__clz(v75 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v23 & 0x40) == 0)
    {
LABEL_29:
      if ((v23 & 0x80) == 0) {
        goto LABEL_33;
      }
      goto LABEL_30;
    }
    goto LABEL_143;
  }
LABEL_137:
  unint64_t v70 = *(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v71 = *(unsigned __int8 *)(v70 + 23);
  uint64_t v72 = *(void *)(v70 + 8);
  if ((v71 & 0x80u) == 0) {
    uint64_t v72 = v71;
  }
  v19 += v72 + ((9 * (__clz(v72 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v23 & 0x20) != 0) {
    goto LABEL_140;
  }
LABEL_28:
  if ((v23 & 0x40) == 0) {
    goto LABEL_29;
  }
LABEL_143:
  unint64_t v76 = *(void *)(a1 + 200) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v77 = *(unsigned __int8 *)(v76 + 23);
  uint64_t v78 = *(void *)(v76 + 8);
  if ((v77 & 0x80u) == 0) {
    uint64_t v78 = v77;
  }
  v19 += v78 + ((9 * (__clz(v78 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v23 & 0x80) != 0)
  {
LABEL_30:
    unint64_t v24 = *(void *)(a1 + 208) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
    uint64_t v26 = *(void *)(v24 + 8);
    if ((v25 & 0x80u) == 0) {
      uint64_t v26 = v25;
    }
    v19 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_33:
  if ((v23 & 0xFF00) == 0) {
    goto LABEL_50;
  }
  if ((v23 & 0x100) != 0)
  {
    unint64_t v79 = *(void *)(a1 + 216) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v80 = *(unsigned __int8 *)(v79 + 23);
    uint64_t v81 = *(void *)(v79 + 8);
    if ((v80 & 0x80u) == 0) {
      uint64_t v81 = v80;
    }
    v19 += v81 + ((9 * (__clz(v81 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v23 & 0x200) == 0)
    {
LABEL_36:
      if ((v23 & 0x400) == 0) {
        goto LABEL_37;
      }
      goto LABEL_154;
    }
  }
  else if ((v23 & 0x200) == 0)
  {
    goto LABEL_36;
  }
  int v82 = *(_DWORD *)(a1 + 224);
  uint64_t v83 = (9 * (__clz(v82 | 1) ^ 0x1F) + 73) >> 6;
  if (v82 >= 0) {
    uint64_t v84 = v83;
  }
  else {
    uint64_t v84 = 10;
  }
  v19 += v84 + 1;
  if ((v23 & 0x400) == 0)
  {
LABEL_37:
    if ((v23 & 0x800) == 0) {
      goto LABEL_38;
    }
LABEL_158:
    v19 += ((9 * (__clz(*(void *)(a1 + 232) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v23 & 0x1000) != 0) {
      goto LABEL_39;
    }
    goto LABEL_43;
  }
LABEL_154:
  int v85 = *(_DWORD *)(a1 + 228);
  uint64_t v86 = (9 * (__clz(v85 | 1) ^ 0x1F) + 73) >> 6;
  if (v85 >= 0) {
    uint64_t v87 = v86;
  }
  else {
    uint64_t v87 = 10;
  }
  v19 += v87 + 1;
  if ((v23 & 0x800) != 0) {
    goto LABEL_158;
  }
LABEL_38:
  if ((v23 & 0x1000) != 0)
  {
LABEL_39:
    int v27 = *(_DWORD *)(a1 + 240);
    uint64_t v28 = (9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6;
    if (v27 >= 0) {
      uint64_t v29 = v28;
    }
    else {
      uint64_t v29 = 10;
    }
    v19 += v29 + 1;
  }
LABEL_43:
  uint64_t v30 = v19 + 3;
  if ((v23 & 0x2000) == 0) {
    uint64_t v30 = v19;
  }
  if ((v23 & 0x4000) != 0) {
    v30 += 3;
  }
  if ((v23 & 0x8000) != 0) {
    uint64_t v19 = v30 + 3;
  }
  else {
    uint64_t v19 = v30;
  }
LABEL_50:
  if ((v23 & 0xFF0000) != 0)
  {
    uint64_t v31 = v19 + 3;
    if ((v23 & 0x10000) == 0) {
      uint64_t v31 = v19;
    }
    if ((v23 & 0x20000) != 0) {
      v31 += 3;
    }
    if ((v23 & 0x40000) != 0) {
      v31 += 3;
    }
    if ((v23 & 0x80000) != 0) {
      v31 += 3;
    }
    if ((v23 & 0x100000) != 0)
    {
      int v32 = *(_DWORD *)(a1 + 252);
      uint64_t v33 = (9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6;
      if (v32 >= 0) {
        uint64_t v34 = v33;
      }
      else {
        uint64_t v34 = 10;
      }
      v31 += v34 + 2;
    }
    if ((v23 & 0x200000) != 0) {
      uint64_t v19 = v31 + 6;
    }
    else {
      uint64_t v19 = v31;
    }
    if ((v23 & 0x400000) != 0) {
      v19 += ((9 * (__clz(*(void *)(a1 + 264) | 1) ^ 0x3F) + 73) >> 6) + 2;
    }
    if ((v23 & 0x800000) != 0)
    {
      int v35 = *(_DWORD *)(a1 + 272);
      uint64_t v36 = (9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6;
      if (v35 >= 0) {
        uint64_t v37 = v36;
      }
      else {
        uint64_t v37 = 10;
      }
      v19 += v37 + 1;
    }
  }
  if (!HIBYTE(v23)) {
    goto LABEL_94;
  }
  if ((v23 & 0x1000000) != 0)
  {
    int v38 = *(_DWORD *)(a1 + 276);
    uint64_t v39 = (9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6;
    if (v38 >= 0) {
      uint64_t v40 = v39;
    }
    else {
      uint64_t v40 = 10;
    }
    v19 += v40 + 1;
  }
  uint64_t v41 = v19 + 5;
  if ((v23 & 0x2000000) == 0) {
    uint64_t v41 = v19;
  }
  if ((v23 & 0x4000000) != 0)
  {
    int v42 = *(_DWORD *)(a1 + 284);
    uint64_t v43 = (9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6;
    if (v42 >= 0) {
      uint64_t v44 = v43;
    }
    else {
      uint64_t v44 = 10;
    }
    v41 += v44 + 1;
  }
  if ((v23 & 0x8000000) != 0) {
    uint64_t v19 = v41 + 5;
  }
  else {
    uint64_t v19 = v41;
  }
  if ((v23 & 0x10000000) == 0)
  {
    if ((v23 & 0x20000000) == 0) {
      goto LABEL_92;
    }
LABEL_164:
    int v91 = *(_DWORD *)(a1 + 296);
    uint64_t v92 = ((9 * (__clz(v91 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v91 >= 0) {
      uint64_t v93 = v92;
    }
    else {
      uint64_t v93 = 12;
    }
    v19 += v93;
    if ((v23 & 0x40000000) == 0)
    {
LABEL_93:
      if ((v23 & 0x80000000) == 0) {
        goto LABEL_94;
      }
      goto LABEL_172;
    }
    goto LABEL_168;
  }
  int v88 = *(_DWORD *)(a1 + 292);
  uint64_t v89 = (9 * (__clz(v88 | 1) ^ 0x1F) + 73) >> 6;
  if (v88 >= 0) {
    uint64_t v90 = v89;
  }
  else {
    uint64_t v90 = 10;
  }
  v19 += v90 + 2;
  if ((v23 & 0x20000000) != 0) {
    goto LABEL_164;
  }
LABEL_92:
  if ((v23 & 0x40000000) == 0) {
    goto LABEL_93;
  }
LABEL_168:
  int v94 = *(_DWORD *)(a1 + 300);
  uint64_t v95 = ((9 * (__clz(v94 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if (v94 >= 0) {
    uint64_t v96 = v95;
  }
  else {
    uint64_t v96 = 12;
  }
  v19 += v96;
  if ((v23 & 0x80000000) != 0)
  {
LABEL_172:
    int v97 = *(_DWORD *)(a1 + 304);
    uint64_t v98 = ((9 * (__clz(v97 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v97 >= 0) {
      uint64_t v99 = v98;
    }
    else {
      uint64_t v99 = 12;
    }
    v19 += v99;
  }
LABEL_94:
  int v45 = *(_DWORD *)(a1 + 44);
  if ((_BYTE)v45)
  {
    uint64_t v46 = v19 + 3;
    if ((v45 & 1) == 0) {
      uint64_t v46 = v19;
    }
    if ((v45 & 2) != 0) {
      v46 += 3;
    }
    if ((v45 & 4) != 0) {
      v46 += 3;
    }
    if ((v45 & 8) != 0) {
      v46 += 3;
    }
    if ((v45 & 0x10) != 0) {
      v46 += 3;
    }
    if ((v45 & 0x20) != 0) {
      uint64_t v19 = v46 + 3;
    }
    else {
      uint64_t v19 = v46;
    }
    if ((v45 & 0x40) != 0)
    {
      int v47 = *(_DWORD *)(a1 + 316);
      uint64_t v48 = ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v47 >= 0) {
        uint64_t v49 = v48;
      }
      else {
        uint64_t v49 = 12;
      }
      v19 += v49;
    }
    if ((v45 & 0x80) != 0)
    {
      int v50 = *(_DWORD *)(a1 + 320);
      uint64_t v51 = ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v50 >= 0) {
        uint64_t v52 = v51;
      }
      else {
        uint64_t v52 = 12;
      }
      v19 += v52;
    }
  }
  if ((v45 & 0x100) != 0)
  {
    int v53 = *(_DWORD *)(a1 + 324);
    uint64_t v54 = ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v53 >= 0) {
      uint64_t v55 = v54;
    }
    else {
      uint64_t v55 = 12;
    }
    v19 += v55;
  }
  uint64_t v56 = *(void *)(a1 + 8);
  if (v56)
  {
    unint64_t v100 = v56 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v100 + 31) < 0) {
      uint64_t v101 = *(void *)(v100 + 16);
    }
    else {
      uint64_t v101 = *(unsigned __int8 *)(v100 + 31);
    }
    v19 += v101;
  }
  *(_DWORD *)(a1 + 48) = v19;
  return v19;
}

unint64_t sub_23693C250(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26E9CE938, (const struct __class_type_info *)&unk_26E9CE460, 0))sub_2369386E0(); {
  return sub_23693C2D8(a1, (uint64_t)lpsrc);
  }
}

unint64_t sub_23693C2D8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    sub_2369470F4((uint64_t)v45, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.cc", 1671);
    uint64_t v4 = sub_23694710C(v45, "CHECK failed: (&from) != (this): ");
    sub_236947248((uint64_t)&v44, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v45);
  }
  sub_23694B63C(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFELL;
    unint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFFELL) + 8;
    uint64_t v8 = *(void *)(a1 + 8);
    if (v8) {
      uint64_t v9 = (std::string *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
    }
    else {
      uint64_t v9 = (std::string *)sub_236937EDC((unint64_t *)(a1 + 8));
    }
    int v10 = *(char *)(v6 + 31);
    if (v10 >= 0) {
      uint64_t v11 = (const std::string::value_type *)v7;
    }
    else {
      uint64_t v11 = *(const std::string::value_type **)(v6 + 8);
    }
    if (v10 >= 0) {
      std::string::size_type v12 = *(unsigned __int8 *)(v6 + 31);
    }
    else {
      std::string::size_type v12 = *(void *)(v6 + 16);
    }
    std::string::append(v9, v11, v12);
  }
  sub_2369418CC(a1 + 56, a2 + 56);
  sub_2369418CC(a1 + 80, a2 + 80);
  sub_2369418CC(a1 + 104, a2 + 104);
  unint64_t result = sub_2369418CC(a1 + 128, a2 + 128);
  unsigned int v14 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v14) {
    goto LABEL_47;
  }
  if (v14)
  {
    int v15 = (long long *)(*(void *)(a2 + 152) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v16 = *(void *)(a1 + 8);
    uint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFELL);
    if (v16) {
      uint64_t v17 = (void *)*v17;
    }
    unint64_t result = sub_236945F18((uint64_t *)(a1 + 152), v15, (uint64_t)v17);
    if ((v14 & 2) == 0)
    {
LABEL_16:
      if ((v14 & 4) == 0) {
        goto LABEL_17;
      }
      goto LABEL_29;
    }
  }
  else if ((v14 & 2) == 0)
  {
    goto LABEL_16;
  }
  uint64_t v18 = (long long *)(*(void *)(a2 + 160) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v19 = *(void *)(a1 + 8);
  int v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFELL);
  if (v19) {
    int v20 = (void *)*v20;
  }
  unint64_t result = sub_236945F18((uint64_t *)(a1 + 160), v18, (uint64_t)v20);
  if ((v14 & 4) == 0)
  {
LABEL_17:
    if ((v14 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_32;
  }
LABEL_29:
  uint64_t v21 = (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v22 = *(void *)(a1 + 8);
  unsigned int v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFELL);
  if (v22) {
    unsigned int v23 = (void *)*v23;
  }
  unint64_t result = sub_236945F18((uint64_t *)(a1 + 168), v21, (uint64_t)v23);
  if ((v14 & 8) == 0)
  {
LABEL_18:
    if ((v14 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_35;
  }
LABEL_32:
  unint64_t v24 = (long long *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v25 = *(void *)(a1 + 8);
  uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFELL);
  if (v25) {
    uint64_t v26 = (void *)*v26;
  }
  unint64_t result = sub_236945F40((uint64_t *)(a1 + 176), v24, (uint64_t)v26);
  if ((v14 & 0x10) == 0)
  {
LABEL_19:
    if ((v14 & 0x20) == 0) {
      goto LABEL_20;
    }
LABEL_38:
    uint64_t v30 = (long long *)(*(void *)(a2 + 192) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v31 = *(void *)(a1 + 8);
    int v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFELL);
    if (v31) {
      int v32 = (void *)*v32;
    }
    unint64_t result = sub_236945F40((uint64_t *)(a1 + 192), v30, (uint64_t)v32);
    if ((v14 & 0x40) == 0)
    {
LABEL_21:
      if ((v14 & 0x80) == 0) {
        goto LABEL_47;
      }
      goto LABEL_44;
    }
    goto LABEL_41;
  }
LABEL_35:
  int v27 = (long long *)(*(void *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v28 = *(void *)(a1 + 8);
  uint64_t v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFELL);
  if (v28) {
    uint64_t v29 = (void *)*v29;
  }
  unint64_t result = sub_236945F40((uint64_t *)(a1 + 184), v27, (uint64_t)v29);
  if ((v14 & 0x20) != 0) {
    goto LABEL_38;
  }
LABEL_20:
  if ((v14 & 0x40) == 0) {
    goto LABEL_21;
  }
LABEL_41:
  uint64_t v33 = (long long *)(*(void *)(a2 + 200) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x40u;
  uint64_t v34 = *(void *)(a1 + 8);
  int v35 = (void *)(v34 & 0xFFFFFFFFFFFFFFFELL);
  if (v34) {
    int v35 = (void *)*v35;
  }
  unint64_t result = sub_236945F40((uint64_t *)(a1 + 200), v33, (uint64_t)v35);
  if ((v14 & 0x80) != 0)
  {
LABEL_44:
    uint64_t v36 = (long long *)(*(void *)(a2 + 208) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v37 = *(void *)(a1 + 8);
    int v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFELL);
    if (v37) {
      int v38 = (void *)*v38;
    }
    unint64_t result = sub_236945F40((uint64_t *)(a1 + 208), v36, (uint64_t)v38);
  }
LABEL_47:
  if ((v14 & 0xFF00) == 0) {
    goto LABEL_58;
  }
  if ((v14 & 0x100) != 0)
  {
    uint64_t v41 = (long long *)(*(void *)(a2 + 216) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x100u;
    uint64_t v42 = *(void *)(a1 + 8);
    uint64_t v43 = (void *)(v42 & 0xFFFFFFFFFFFFFFFELL);
    if (v42) {
      uint64_t v43 = (void *)*v43;
    }
    unint64_t result = sub_236945F18((uint64_t *)(a1 + 216), v41, (uint64_t)v43);
    if ((v14 & 0x200) == 0)
    {
LABEL_50:
      if ((v14 & 0x400) == 0) {
        goto LABEL_51;
      }
      goto LABEL_97;
    }
  }
  else if ((v14 & 0x200) == 0)
  {
    goto LABEL_50;
  }
  *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
  if ((v14 & 0x400) == 0)
  {
LABEL_51:
    if ((v14 & 0x800) == 0) {
      goto LABEL_52;
    }
    goto LABEL_98;
  }
LABEL_97:
  *(_DWORD *)(a1 + 228) = *(_DWORD *)(a2 + 228);
  if ((v14 & 0x800) == 0)
  {
LABEL_52:
    if ((v14 & 0x1000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_99;
  }
LABEL_98:
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  if ((v14 & 0x1000) == 0)
  {
LABEL_53:
    if ((v14 & 0x2000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_100;
  }
LABEL_99:
  *(_DWORD *)(a1 + 24sub_23692A244(&a9, 0) = *(_DWORD *)(a2 + 240);
  if ((v14 & 0x2000) == 0)
  {
LABEL_54:
    if ((v14 & 0x4000) == 0) {
      goto LABEL_55;
    }
LABEL_101:
    *(unsigned char *)(a1 + 245) = *(unsigned char *)(a2 + 245);
    if ((v14 & 0x8000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_56;
  }
LABEL_100:
  *(unsigned char *)(a1 + 244) = *(unsigned char *)(a2 + 244);
  if ((v14 & 0x4000) != 0) {
    goto LABEL_101;
  }
LABEL_55:
  if ((v14 & 0x8000) != 0) {
LABEL_56:
  }
    *(unsigned char *)(a1 + 246) = *(unsigned char *)(a2 + 246);
LABEL_57:
  *(_DWORD *)(a1 + 40) |= v14;
LABEL_58:
  if ((v14 & 0xFF0000) == 0) {
    goto LABEL_69;
  }
  if ((v14 & 0x10000) != 0)
  {
    *(unsigned char *)(a1 + 247) = *(unsigned char *)(a2 + 247);
    if ((v14 & 0x20000) == 0)
    {
LABEL_61:
      if ((v14 & 0x40000) == 0) {
        goto LABEL_62;
      }
      goto LABEL_105;
    }
  }
  else if ((v14 & 0x20000) == 0)
  {
    goto LABEL_61;
  }
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  if ((v14 & 0x40000) == 0)
  {
LABEL_62:
    if ((v14 & 0x80000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_106;
  }
LABEL_105:
  *(unsigned char *)(a1 + 249) = *(unsigned char *)(a2 + 249);
  if ((v14 & 0x80000) == 0)
  {
LABEL_63:
    if ((v14 & 0x100000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_107;
  }
LABEL_106:
  *(unsigned char *)(a1 + 25sub_23692A244(&a9, 0) = *(unsigned char *)(a2 + 250);
  if ((v14 & 0x100000) == 0)
  {
LABEL_64:
    if ((v14 & 0x200000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_108;
  }
LABEL_107:
  *(_DWORD *)(a1 + 252) = *(_DWORD *)(a2 + 252);
  if ((v14 & 0x200000) == 0)
  {
LABEL_65:
    if ((v14 & 0x400000) == 0) {
      goto LABEL_66;
    }
LABEL_109:
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    if ((v14 & 0x800000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_67;
  }
LABEL_108:
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  if ((v14 & 0x400000) != 0) {
    goto LABEL_109;
  }
LABEL_66:
  if ((v14 & 0x800000) != 0) {
LABEL_67:
  }
    *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
LABEL_68:
  *(_DWORD *)(a1 + 40) |= v14;
LABEL_69:
  if (!HIBYTE(v14)) {
    goto LABEL_79;
  }
  if ((v14 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
    if ((v14 & 0x2000000) == 0)
    {
LABEL_72:
      if ((v14 & 0x4000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_121;
    }
  }
  else if ((v14 & 0x2000000) == 0)
  {
    goto LABEL_72;
  }
  *(_DWORD *)(a1 + 28sub_23692A244(&a9, 0) = *(_DWORD *)(a2 + 280);
  if ((v14 & 0x4000000) == 0)
  {
LABEL_73:
    if ((v14 & 0x8000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_122;
  }
LABEL_121:
  *(_DWORD *)(a1 + 284) = *(_DWORD *)(a2 + 284);
  if ((v14 & 0x8000000) == 0)
  {
LABEL_74:
    if ((v14 & 0x10000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_123;
  }
LABEL_122:
  *(_DWORD *)(a1 + 288) = *(_DWORD *)(a2 + 288);
  if ((v14 & 0x10000000) == 0)
  {
LABEL_75:
    if ((v14 & 0x20000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_124;
  }
LABEL_123:
  *(_DWORD *)(a1 + 292) = *(_DWORD *)(a2 + 292);
  if ((v14 & 0x20000000) == 0)
  {
LABEL_76:
    if ((v14 & 0x40000000) == 0) {
      goto LABEL_77;
    }
LABEL_125:
    *(_DWORD *)(a1 + 30sub_23692A244(&a9, 0) = *(_DWORD *)(a2 + 300);
    if ((v14 & 0x80000000) == 0) {
      goto LABEL_78;
    }
LABEL_126:
    *(_DWORD *)(a1 + 304) = *(_DWORD *)(a2 + 304);
    goto LABEL_78;
  }
LABEL_124:
  *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
  if ((v14 & 0x40000000) != 0) {
    goto LABEL_125;
  }
LABEL_77:
  if ((v14 & 0x80000000) != 0) {
    goto LABEL_126;
  }
LABEL_78:
  *(_DWORD *)(a1 + 40) |= v14;
LABEL_79:
  int v39 = *(_DWORD *)(a2 + 44);
  if (!(_BYTE)v39) {
    goto LABEL_90;
  }
  if (v39)
  {
    *(unsigned char *)(a1 + 308) = *(unsigned char *)(a2 + 308);
    if ((v39 & 2) == 0)
    {
LABEL_82:
      if ((v39 & 4) == 0) {
        goto LABEL_83;
      }
      goto LABEL_113;
    }
  }
  else if ((v39 & 2) == 0)
  {
    goto LABEL_82;
  }
  *(unsigned char *)(a1 + 309) = *(unsigned char *)(a2 + 309);
  if ((v39 & 4) == 0)
  {
LABEL_83:
    if ((v39 & 8) == 0) {
      goto LABEL_84;
    }
    goto LABEL_114;
  }
LABEL_113:
  *(unsigned char *)(a1 + 31sub_23692A244(&a9, 0) = *(unsigned char *)(a2 + 310);
  if ((v39 & 8) == 0)
  {
LABEL_84:
    if ((v39 & 0x10) == 0) {
      goto LABEL_85;
    }
    goto LABEL_115;
  }
LABEL_114:
  *(unsigned char *)(a1 + 311) = *(unsigned char *)(a2 + 311);
  if ((v39 & 0x10) == 0)
  {
LABEL_85:
    if ((v39 & 0x20) == 0) {
      goto LABEL_86;
    }
    goto LABEL_116;
  }
LABEL_115:
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  if ((v39 & 0x20) == 0)
  {
LABEL_86:
    if ((v39 & 0x40) == 0) {
      goto LABEL_87;
    }
LABEL_117:
    *(_DWORD *)(a1 + 316) = *(_DWORD *)(a2 + 316);
    if ((v39 & 0x80) == 0) {
      goto LABEL_89;
    }
    goto LABEL_88;
  }
LABEL_116:
  *(unsigned char *)(a1 + 313) = *(unsigned char *)(a2 + 313);
  if ((v39 & 0x40) != 0) {
    goto LABEL_117;
  }
LABEL_87:
  if ((v39 & 0x80) != 0) {
LABEL_88:
  }
    *(_DWORD *)(a1 + 32sub_23692A244(&a9, 0) = *(_DWORD *)(a2 + 320);
LABEL_89:
  *(_DWORD *)(a1 + 44) |= v39;
LABEL_90:
  if ((v39 & 0x100) != 0)
  {
    int v40 = *(_DWORD *)(a2 + 324);
    *(_DWORD *)(a1 + 44) |= 0x100u;
    *(_DWORD *)(a1 + 324) = v40;
  }
  return result;
}

void sub_23693C834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23693C84C(uint64_t a1)
{
  return sub_23694CACC(a1 + 16);
}

void *sub_23693C854@<X0>(void *a1@<X8>)
{
  return sub_236919B40(a1, "sentencepiece.TrainerSpec");
}

uint64_t sub_23693C864(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26E9CE040;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = &unk_26E9CE0E0;
  sub_236947714(a1 + 24, a2);
  *(void *)(a1 + 48) = 0;
  if (atomic_load_explicit(dword_26B808CB8, memory_order_acquire)) {
    sub_236952920(dword_26B808CB8);
  }
  *(void *)(a1 + 56) = &qword_26889B028;
  *(void *)(a1 + 64) = &qword_26889B028;
  *(void *)(a1 + 72) = &qword_26889B028;
  *(_DWORD *)(a1 + 8sub_23692A244(&a9, 0) = 16843008;
  return a1;
}

void sub_23693C910(_Unwind_Exception *a1)
{
  sub_2369477F4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23693C924(uint64_t a1)
{
  return a1;
}

uint64_t *sub_23693C960(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if ((v2 & 1) == 0)
  {
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*v3)
  {
LABEL_3:
    sub_2369470F4((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.cc", 1972);
    uint64_t v4 = sub_23694710C(v15, "CHECK failed: GetArena() == nullptr: ");
    sub_236947248((uint64_t)&v14, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v15);
  }
LABEL_4:
  if (*(uint64_t **)(a1 + 56) != &qword_26889B028)
  {
    uint64_t v5 = sub_236937CC8((uint64_t *)(a1 + 56));
    uint64_t v6 = v5;
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    MEMORY[0x237E07580](v6, 0x1012C40EC159624);
  }
  unint64_t result = (uint64_t *)(a1 + 64);
  if (*(uint64_t **)(a1 + 64) != &qword_26889B028)
  {
    uint64_t v8 = sub_236937CC8(result);
    uint64_t v9 = v8;
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    unint64_t result = (uint64_t *)MEMORY[0x237E07580](v9, 0x1012C40EC159624);
  }
  uint64_t v11 = *(uint64_t **)(a1 + 72);
  int v10 = (uint64_t *)(a1 + 72);
  if (v11 != &qword_26889B028)
  {
    uint64_t v12 = sub_236937CC8(v10);
    uint64_t v13 = v12;
    if (*(char *)(v12 + 23) < 0) {
      operator delete(*(void **)v12);
    }
    return (uint64_t *)MEMORY[0x237E07580](v13, 0x1012C40EC159624);
  }
  return result;
}

void sub_23693CAB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23693CACC(uint64_t a1)
{
  return sub_23693C924(a1 - 16);
}

void sub_23693CAD4(uint64_t a1)
{
  sub_23693C924(a1);
  JUMPOUT(0x237E07580);
}

void sub_23693CB0C(uint64_t a1)
{
  sub_23693C924(a1 - 16);
  JUMPOUT(0x237E07580);
}

unsigned __int8 *sub_23693CB48(uint64_t a1)
{
  unint64_t result = sub_23694B59C((unsigned __int8 *)(a1 + 24));
  int v3 = *(_DWORD *)(a1 + 48);
  if ((v3 & 7) != 0)
  {
    if ((v3 & 1) == 0)
    {
      if ((v3 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      unint64_t v5 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)unint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
        if ((v3 & 4) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
        if ((v3 & 4) == 0) {
          goto LABEL_17;
        }
      }
      goto LABEL_14;
    }
    unint64_t v4 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v6 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
LABEL_17:
  if ((v3 & 0x78) != 0) {
    *(_DWORD *)(a1 + 8sub_23692A244(&a9, 0) = 16843008;
  }
  *(_DWORD *)(a1 + 48) = 0;
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 31) < 0)
    {
      **(unsigned char **)(v8 + 8) = 0;
      *(void *)(v8 + 16) = 0;
    }
    else
    {
      *(unsigned char *)(v8 + 8) = 0;
      *(unsigned char *)(v8 + 31) = 0;
    }
  }
  return result;
}

uint64_t sub_23693CC58(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v42 = a2;
  int v5 = 0;
  if ((sub_236937D9C((uint64_t)a3, (char **)v42, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v8 = (char *)(*(void *)v42 + 1);
      unsigned int v9 = **(unsigned char **)v42;
      if ((char)**(unsigned char **)v42 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*v8 < 0)
        {
          uint64_t v17 = sub_2369543D8(*(uint64_t *)v42, v10 - 128);
          *(void *)uint64_t v42 = v17;
          if (!v17) {
            goto LABEL_67;
          }
          unint64_t v8 = (char *)v17;
          unsigned int v9 = v18;
          goto LABEL_8;
        }
        unint64_t v8 = (char *)(*(void *)v42 + 2);
      }
      *(void *)uint64_t v42 = v8;
LABEL_8:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_48;
          }
          *(_DWORD *)(a1 + 48) |= 1u;
          uint64_t v11 = *(void *)(a1 + 8);
          uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFELL);
          if (v11) {
            uint64_t v12 = (void *)*v12;
          }
          uint64_t v13 = (uint64_t *)(a1 + 56);
          goto LABEL_44;
        case 2u:
          if (v9 != 18) {
            goto LABEL_48;
          }
          *(_DWORD *)(a1 + 48) |= 2u;
          uint64_t v19 = *(void *)(a1 + 8);
          uint64_t v12 = (void *)(v19 & 0xFFFFFFFFFFFFFFFELL);
          if (v19) {
            uint64_t v12 = (void *)*v12;
          }
          uint64_t v13 = (uint64_t *)(a1 + 64);
          goto LABEL_44;
        case 3u:
          if (v9 != 24) {
            goto LABEL_48;
          }
          v5 |= 0x10u;
          int v20 = v8 + 1;
          uint64_t v21 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_29;
          }
          int v22 = *v20;
          uint64_t v21 = v21 + (v22 << 7) - 128;
          if (v22 < 0)
          {
            uint64_t v36 = sub_236954390((uint64_t)v8, v21);
            *(void *)uint64_t v42 = v36;
            *(unsigned char *)(a1 + 81) = v37 != 0;
            if (!v36) {
              goto LABEL_67;
            }
          }
          else
          {
            int v20 = v8 + 2;
LABEL_29:
            *(void *)uint64_t v42 = v20;
            *(unsigned char *)(a1 + 81) = v21 != 0;
          }
          goto LABEL_46;
        case 4u:
          if (v9 != 32) {
            goto LABEL_48;
          }
          v5 |= 0x20u;
          unsigned int v23 = v8 + 1;
          uint64_t v24 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_34;
          }
          int v25 = *v23;
          uint64_t v24 = v24 + (v25 << 7) - 128;
          if (v25 < 0)
          {
            uint64_t v38 = sub_236954390((uint64_t)v8, v24);
            *(void *)uint64_t v42 = v38;
            *(unsigned char *)(a1 + 82) = v39 != 0;
            if (!v38) {
              goto LABEL_67;
            }
          }
          else
          {
            unsigned int v23 = v8 + 2;
LABEL_34:
            *(void *)uint64_t v42 = v23;
            *(unsigned char *)(a1 + 82) = v24 != 0;
          }
          goto LABEL_46;
        case 5u:
          if (v9 != 40) {
            goto LABEL_48;
          }
          v5 |= 0x40u;
          uint64_t v26 = v8 + 1;
          uint64_t v27 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_39;
          }
          int v28 = *v26;
          uint64_t v27 = v27 + (v28 << 7) - 128;
          if (v28 < 0)
          {
            uint64_t v40 = sub_236954390((uint64_t)v8, v27);
            *(void *)uint64_t v42 = v40;
            *(unsigned char *)(a1 + 83) = v41 != 0;
            if (!v40) {
              goto LABEL_67;
            }
          }
          else
          {
            uint64_t v26 = v8 + 2;
LABEL_39:
            *(void *)uint64_t v42 = v26;
            *(unsigned char *)(a1 + 83) = v27 != 0;
          }
          goto LABEL_46;
        case 6u:
          if (v9 != 50) {
            goto LABEL_48;
          }
          *(_DWORD *)(a1 + 48) |= 4u;
          uint64_t v29 = *(void *)(a1 + 8);
          uint64_t v12 = (void *)(v29 & 0xFFFFFFFFFFFFFFFELL);
          if (v29) {
            uint64_t v12 = (void *)*v12;
          }
          uint64_t v13 = (uint64_t *)(a1 + 72);
LABEL_44:
          uint64_t v30 = (std::string *)sub_236945F50(v13, (uint64_t)v12);
          uint64_t v31 = (void *)sub_23695448C(v30, *(char **)v42, (uint64_t)a3);
          goto LABEL_45;
        default:
          if (v9 >> 3 == 200 && v9 == 64)
          {
            v5 |= 8u;
            char v14 = v8 + 1;
            uint64_t v15 = *v8;
            if ((*v8 & 0x80000000) == 0) {
              goto LABEL_18;
            }
            int v16 = *v14;
            uint64_t v15 = v15 + (v16 << 7) - 128;
            if ((v16 & 0x80000000) == 0)
            {
              char v14 = v8 + 2;
LABEL_18:
              *(void *)uint64_t v42 = v14;
              *(unsigned char *)(a1 + 8sub_23692A244(&a9, 0) = v15 != 0;
              goto LABEL_46;
            }
            uint64_t v34 = sub_236954390((uint64_t)v8, v15);
            *(void *)uint64_t v42 = v34;
            *(unsigned char *)(a1 + 8sub_23692A244(&a9, 0) = v35 != 0;
            if (!v34) {
              goto LABEL_67;
            }
          }
          else
          {
LABEL_48:
            if (v9) {
              BOOL v32 = (v9 & 7) == 4;
            }
            else {
              BOOL v32 = 1;
            }
            if (v32)
            {
              a3[10].i32[0] = v9 - 1;
              goto LABEL_2;
            }
            if (v9 < 0x648)
            {
              if (*v7)
              {
                uint64_t v33 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
              }
              else
              {
                uint64_t v33 = (std::string *)sub_236937EDC((unint64_t *)(a1 + 8));
                unint64_t v8 = *(char **)v42;
              }
              uint64_t v31 = sub_236954948(v9, v33, v8, a3);
            }
            else
            {
              uint64_t v31 = sub_23694CE6C((uint64_t *)(a1 + 24), v9, (unsigned __int8 *)v8, (uint64_t)&unk_26889AEA8, (unint64_t *)(a1 + 8), a3);
            }
LABEL_45:
            *(void *)uint64_t v42 = v31;
            if (!v31)
            {
LABEL_67:
              *(void *)uint64_t v42 = 0;
              goto LABEL_2;
            }
          }
LABEL_46:
          if (sub_236937D9C((uint64_t)a3, (char **)v42, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 48) |= v5;
  return *(void *)v42;
}

char *sub_23693D07C(uint64_t a1, char *a2, unint64_t *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    unint64_t v4 = sub_236935EBC(a3, 1, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_236935EBC(a3, 2, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_4:
    if ((v6 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_11:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_236946668((uint64_t)a3, v4);
  }
  char v7 = *(unsigned char *)(a1 + 81);
  *unint64_t v4 = 24;
  v4[1] = v7;
  v4 += 2;
  if ((v6 & 0x20) == 0)
  {
LABEL_5:
    if ((v6 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_14:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_236946668((uint64_t)a3, v4);
  }
  char v8 = *(unsigned char *)(a1 + 82);
  *unint64_t v4 = 32;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 0x40) == 0)
  {
LABEL_6:
    if ((v6 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_17:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_236946668((uint64_t)a3, v4);
  }
  char v9 = *(unsigned char *)(a1 + 83);
  *unint64_t v4 = 40;
  v4[1] = v9;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_21;
  }
LABEL_20:
  unint64_t v4 = sub_236935EBC(a3, 6, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_24;
  }
LABEL_21:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_236946668((uint64_t)a3, v4);
  }
  char v10 = *(unsigned char *)(a1 + 80);
  *(_WORD *)unint64_t v4 = 3264;
  v4[2] = v10;
  v4 += 3;
LABEL_24:
  uint64_t v11 = sub_23694DC64(a1 + 24, 201, 0x20000000, v4, (uint64_t *)a3);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v12;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v11) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v11, v16, (int)v17);
    v12 += v18;
    return v12;
  }
  return sub_23694677C((uint64_t *)a3, (char *)v16, v17, (unint64_t)v11);
}

uint64_t sub_23693D290(uint64_t a1)
{
  uint64_t result = sub_236950998(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 48);
  if ((v3 & 0x7F) == 0) {
    goto LABEL_17;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_22:
    unint64_t v12 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    uint64_t v14 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      uint64_t v14 = v13;
    }
    result += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_5;
  }
  unint64_t v9 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
  uint64_t v11 = *(void *)(v9 + 8);
  if ((v10 & 0x80u) == 0) {
    uint64_t v11 = v10;
  }
  result += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 2) != 0) {
    goto LABEL_22;
  }
LABEL_4:
  if ((v3 & 4) != 0)
  {
LABEL_5:
    unint64_t v4 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    result += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v7 = result + 3;
  if ((v3 & 8) == 0) {
    uint64_t v7 = result;
  }
  if ((v3 & 0x10) != 0) {
    v7 += 2;
  }
  if ((v3 & 0x20) != 0) {
    v7 += 2;
  }
  if ((v3 & 0x40) != 0) {
    uint64_t result = v7 + 2;
  }
  else {
    uint64_t result = v7;
  }
LABEL_17:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v15 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    result += v16;
  }
  *(_DWORD *)(a1 + 52) = result;
  return result;
}

void sub_23693D3F8(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26E9CE938, (const struct __class_type_info *)&unk_26E9CE488, 0))sub_2369386E0(); {
  sub_23693D480(a1, (uint64_t)lpsrc);
  }
}

void sub_23693D480(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    sub_2369470F4((uint64_t)v24, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.cc", 2246);
    unint64_t v4 = sub_23694710C(v24, "CHECK failed: (&from) != (this): ");
    sub_236947248((uint64_t)&v23, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v24);
  }
  sub_23694B63C(a1 + 24, a2 + 24);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFELL;
    unint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFFELL) + 8;
    uint64_t v8 = *(void *)(a1 + 8);
    if (v8) {
      unint64_t v9 = (std::string *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
    }
    else {
      unint64_t v9 = (std::string *)sub_236937EDC((unint64_t *)(a1 + 8));
    }
    int v10 = *(char *)(v6 + 31);
    if (v10 >= 0) {
      uint64_t v11 = (const std::string::value_type *)v7;
    }
    else {
      uint64_t v11 = *(const std::string::value_type **)(v6 + 8);
    }
    if (v10 >= 0) {
      std::string::size_type v12 = *(unsigned __int8 *)(v6 + 31);
    }
    else {
      std::string::size_type v12 = *(void *)(v6 + 16);
    }
    std::string::append(v9, v11, v12);
  }
  int v13 = *(_DWORD *)(a2 + 48);
  if ((v13 & 0x7F) != 0)
  {
    if (v13)
    {
      uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 48) |= 1u;
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFELL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      sub_236945F18((uint64_t *)(a1 + 56), v14, (uint64_t)v16);
      if ((v13 & 2) == 0)
      {
LABEL_16:
        if ((v13 & 4) == 0) {
          goto LABEL_17;
        }
        goto LABEL_30;
      }
    }
    else if ((v13 & 2) == 0)
    {
      goto LABEL_16;
    }
    uint64_t v17 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 48) |= 2u;
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFELL);
    if (v18) {
      uint64_t v19 = (void *)*v19;
    }
    sub_236945F18((uint64_t *)(a1 + 64), v17, (uint64_t)v19);
    if ((v13 & 4) == 0)
    {
LABEL_17:
      if ((v13 & 8) == 0) {
        goto LABEL_18;
      }
      goto LABEL_33;
    }
LABEL_30:
    int v20 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 48) |= 4u;
    uint64_t v21 = *(void *)(a1 + 8);
    int v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFELL);
    if (v21) {
      int v22 = (void *)*v22;
    }
    sub_236945F18((uint64_t *)(a1 + 72), v20, (uint64_t)v22);
    if ((v13 & 8) == 0)
    {
LABEL_18:
      if ((v13 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_34;
    }
LABEL_33:
    *(unsigned char *)(a1 + 8sub_23692A244(&a9, 0) = *(unsigned char *)(a2 + 80);
    if ((v13 & 0x10) == 0)
    {
LABEL_19:
      if ((v13 & 0x20) == 0) {
        goto LABEL_20;
      }
      goto LABEL_35;
    }
LABEL_34:
    *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
    if ((v13 & 0x20) == 0)
    {
LABEL_20:
      if ((v13 & 0x40) == 0)
      {
LABEL_22:
        *(_DWORD *)(a1 + 48) |= v13;
        return;
      }
LABEL_21:
      *(unsigned char *)(a1 + 83) = *(unsigned char *)(a2 + 83);
      goto LABEL_22;
    }
LABEL_35:
    *(unsigned char *)(a1 + 82) = *(unsigned char *)(a2 + 82);
    if ((v13 & 0x40) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
}

void sub_23693D64C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23693D664(uint64_t a1)
{
  return sub_23694CACC(a1 + 24);
}

void *sub_23693D66C@<X0>(void *a1@<X8>)
{
  return sub_236919B40(a1, "sentencepiece.NormalizerSpec");
}

void *sub_23693D67C(void *a1, uint64_t a2)
{
  *a1 = &unk_26E9CE120;
  a1[1] = a2;
  a1[2] = 0;
  if (atomic_load_explicit(dword_26B808CF0, memory_order_acquire)) {
    sub_236952920(dword_26B808CF0);
  }
  a1[3] = &qword_26889B028;
  a1[4] = &qword_26889B028;
  return a1;
}

uint64_t sub_23693D6EC(uint64_t a1)
{
  return a1;
}

uint64_t *sub_23693D720(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  int v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if ((v2 & 1) == 0)
  {
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*v3)
  {
LABEL_3:
    sub_2369470F4((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.cc", 2362);
    unint64_t v4 = sub_23694710C(v13, "CHECK failed: GetArena() == nullptr: ");
    sub_236947248((uint64_t)&v12, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v13);
  }
LABEL_4:
  uint64_t result = (uint64_t *)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_26889B028)
  {
    uint64_t v6 = sub_236937CC8(result);
    uint64_t v7 = v6;
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    uint64_t result = (uint64_t *)MEMORY[0x237E07580](v7, 0x1012C40EC159624);
  }
  unint64_t v9 = *(uint64_t **)(a1 + 32);
  uint64_t v8 = (uint64_t *)(a1 + 32);
  if (v9 != &qword_26889B028)
  {
    uint64_t v10 = sub_236937CC8(v8);
    uint64_t v11 = v10;
    if (*(char *)(v10 + 23) < 0) {
      operator delete(*(void **)v10);
    }
    return (uint64_t *)MEMORY[0x237E07580](v11, 0x1012C40EC159624);
  }
  return result;
}

void sub_23693D830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23693D84C(uint64_t a1)
{
  sub_23693D6EC(a1);
  JUMPOUT(0x237E07580);
}

uint64_t sub_23693D884(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  *(_DWORD *)(result + 16) = 0;
  uint64_t v4 = *(void *)(result + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 31) < 0)
    {
      **(unsigned char **)(v5 + 8) = 0;
      *(void *)(v5 + 16) = 0;
    }
    else
    {
      *(unsigned char *)(v5 + 8) = 0;
      *(unsigned char *)(v5 + 31) = 0;
    }
  }
  return result;
}

uint64_t sub_23693D920(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v21 = a2;
  if ((sub_236937D9C((uint64_t)a3, (char **)v21, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = (char *)(*(void *)v21 + 1);
      unsigned int v8 = **(unsigned char **)v21;
      if (((char)**(unsigned char **)v21 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*v7 & 0x80000000) == 0) {
        break;
      }
      uint64_t v19 = sub_2369543D8(*(uint64_t *)v21, v9 - 128);
      *(void *)uint64_t v21 = v19;
      if (!v19)
      {
LABEL_35:
        *(void *)uint64_t v21 = 0;
        return *(void *)v21;
      }
      uint64_t v7 = (char *)v19;
      unsigned int v8 = v20;
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v14 = *(void *)(a1 + 8);
          uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFELL);
          if (v14) {
            uint64_t v15 = (void *)*v15;
          }
          uint64_t v16 = (uint64_t *)(a1 + 32);
          goto LABEL_27;
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v15 = (void *)(v17 & 0xFFFFFFFFFFFFFFFELL);
        if (v17) {
          uint64_t v15 = (void *)*v15;
        }
        uint64_t v16 = (uint64_t *)(a1 + 24);
LABEL_27:
        uint64_t v18 = (std::string *)sub_236945F50(v16, (uint64_t)v15);
        int v13 = (void *)sub_23695448C(v18, *(char **)v21, (uint64_t)a3);
        goto LABEL_28;
      }
      if (v8) {
        BOOL v11 = (v8 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
        a3[10].i32[0] = v8 - 1;
        return *(void *)v21;
      }
      if (*v6)
      {
        char v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        char v12 = (std::string *)sub_236937EDC((unint64_t *)(a1 + 8));
        uint64_t v7 = *(char **)v21;
      }
      int v13 = sub_236954948(v8, v12, v7, a3);
LABEL_28:
      *(void *)uint64_t v21 = v13;
      if (!v13) {
        goto LABEL_35;
      }
      if (sub_236937D9C((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
        return *(void *)v21;
      }
    }
    uint64_t v7 = (char *)(*(void *)v21 + 2);
LABEL_7:
    *(void *)uint64_t v21 = v7;
    goto LABEL_8;
  }
  return *(void *)v21;
}

char *sub_23693DACC(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_236935EBC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_236935EBC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 31) < 0)
  {
    uint64_t v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    uint64_t v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }
  return sub_23694677C((uint64_t *)a3, (char *)v10, v11, (unint64_t)v4);
}

uint64_t sub_23693DBB8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 2sub_23692A244(&a9, 0) = v2;
  return v2;
}

unint64_t sub_23693DC90(unint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26E9CE938, (const struct __class_type_info *)&unk_26E9CE4C0, 0))sub_2369386E0(); {
  return sub_23693DD18(a1, (uint64_t)lpsrc);
  }
}

unint64_t sub_23693DD18(unint64_t result, uint64_t a2)
{
  unint64_t v3 = result;
  if (a2 == result)
  {
    sub_2369470F4((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.cc", 2516);
    uint64_t v4 = sub_23694710C(v21, "CHECK failed: (&from) != (this): ");
    sub_236947248((uint64_t)&v20, (const char **)&v4->__r_.__value_.__l.__data_);
    uint64_t result = sub_236947250((uint64_t)v21);
  }
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFELL;
    unint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFFELL) + 8;
    uint64_t v8 = *(void *)(v3 + 8);
    if (v8) {
      uint64_t v9 = (std::string *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
    }
    else {
      uint64_t v9 = (std::string *)sub_236937EDC((unint64_t *)(v3 + 8));
    }
    int v10 = *(char *)(v6 + 31);
    if (v10 >= 0) {
      unint64_t v11 = (const std::string::value_type *)v7;
    }
    else {
      unint64_t v11 = *(const std::string::value_type **)(v6 + 8);
    }
    if (v10 >= 0) {
      std::string::size_type v12 = *(unsigned __int8 *)(v6 + 31);
    }
    else {
      std::string::size_type v12 = *(void *)(v6 + 16);
    }
    uint64_t result = (unint64_t)std::string::append(v9, v11, v12);
  }
  int v13 = *(_DWORD *)(a2 + 16);
  if ((v13 & 3) != 0)
  {
    if (v13)
    {
      uint64_t v14 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(v3 + 16) |= 1u;
      uint64_t v15 = *(void *)(v3 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFELL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t result = sub_236945F18((uint64_t *)(v3 + 24), v14, (uint64_t)v16);
    }
    if ((v13 & 2) != 0)
    {
      uint64_t v17 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(v3 + 16) |= 2u;
      uint64_t v18 = *(void *)(v3 + 8);
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFELL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      return sub_236945F18((uint64_t *)(v3 + 32), v17, (uint64_t)v19);
    }
  }
  return result;
}

void sub_23693DE4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23693DE64()
{
  return 1;
}

void *sub_23693DE6C@<X0>(void *a1@<X8>)
{
  return sub_236919B40(a1, "sentencepiece.SelfTestData.Sample");
}

uint64_t sub_23693DE7C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26E9CE1A0;
  *(void *)(a1 + 8) = a2;
  sub_236947714(a1 + 16, a2);
  *(void *)(a1 + 4sub_23692A244(&a9, 0) = a2;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  if (atomic_load_explicit(dword_26B808CD0, memory_order_acquire)) {
    sub_236952920(dword_26B808CD0);
  }
  return a1;
}

void sub_23693DF04(_Unwind_Exception *a1)
{
  sub_236941AF4(v2);
  sub_2369477F4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23693DF20(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if (v2)
  {
    if (!*v4) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (v4)
  {
LABEL_3:
    sub_2369470F4((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.cc", 2589);
    uint64_t v5 = sub_23694710C(v8, "CHECK failed: GetArena() == nullptr: ");
    sub_236947248((uint64_t)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v8);
  }
LABEL_4:
  sub_236935700(v3);
  sub_236941AF4((uint64_t *)(a1 + 40));
  sub_2369477F4(a1 + 16);
  return a1;
}

void sub_23693DFC0(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  sub_236912F70(a1);
}

void sub_23693DFE4(uint64_t a1)
{
  sub_23693DF20(a1);
  JUMPOUT(0x237E07580);
}

uint64_t sub_23693E01C(uint64_t a1)
{
  sub_23694B59C((unsigned __int8 *)(a1 + 16));
  uint64_t result = sub_23694176C(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 31) < 0)
    {
      **(unsigned char **)(v4 + 8) = 0;
      *(void *)(v4 + 16) = 0;
    }
    else
    {
      *(unsigned char *)(v4 + 8) = 0;
      *(unsigned char *)(v4 + 31) = 0;
    }
  }
  return result;
}

char *sub_23693E078(uint64_t a1, char *a2, int32x2_t *a3)
{
  char v23 = a2;
  if ((sub_236937D9C((uint64_t)a3, &v23, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v6 = v23 + 1;
      unsigned int v7 = *v23;
      if ((*v23 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*v6 & 0x80000000) == 0) {
        break;
      }
      char v20 = (char *)sub_2369543D8((uint64_t)v23, v8 - 128);
      char v23 = v20;
      if (!v20) {
        return 0;
      }
      unint64_t v6 = v20;
      unsigned int v7 = v21;
LABEL_7:
      if (v7 == 10)
      {
        unint64_t v11 = v6 - 1;
        while (1)
        {
          std::string::size_type v12 = (unsigned __int8 *)(v11 + 1);
          char v23 = v11 + 1;
          int v13 = *(int **)(a1 + 56);
          if (!v13) {
            break;
          }
          uint64_t v14 = *(int *)(a1 + 48);
          int v15 = *v13;
          if ((int)v14 >= *v13)
          {
            if (v15 == *(_DWORD *)(a1 + 52))
            {
LABEL_20:
              sub_2369597C8(a1 + 40, v15 + 1);
              int v13 = *(int **)(a1 + 56);
              int v15 = *v13;
            }
            *int v13 = v15 + 1;
            uint64_t v16 = sub_2369408AC(*(void *)(a1 + 40));
            uint64_t v17 = *(void *)(a1 + 56);
            uint64_t v18 = *(int *)(a1 + 48);
            *(_DWORD *)(a1 + 48) = v18 + 1;
            *(void *)(v17 + 8 * v18 + 8) = v16;
            std::string::size_type v12 = (unsigned __int8 *)v23;
            goto LABEL_22;
          }
          *(_DWORD *)(a1 + 48) = v14 + 1;
          uint64_t v16 = *(void **)&v13[2 * v14 + 2];
LABEL_22:
          unint64_t v11 = (char *)sub_23693E290(a3, (uint64_t)v16, v12);
          char v23 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 10) {
            goto LABEL_30;
          }
        }
        int v15 = *(_DWORD *)(a1 + 52);
        goto LABEL_20;
      }
      if (v7) {
        BOOL v9 = (v7 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
        a3[10].i32[0] = v7 - 1;
        return v23;
      }
      if (v7 < 0x640)
      {
        if (*v5)
        {
          uint64_t v19 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          uint64_t v19 = (std::string *)sub_236937EDC((unint64_t *)(a1 + 8));
          unint64_t v6 = v23;
        }
        int v10 = sub_236954948(v7, v19, v6, a3);
      }
      else
      {
        int v10 = sub_23694CE6C((uint64_t *)(a1 + 16), v7, (unsigned __int8 *)v6, (uint64_t)&unk_26889AF28, (unint64_t *)(a1 + 8), a3);
      }
      char v23 = (char *)v10;
      if (!v10) {
        return 0;
      }
LABEL_30:
      if (sub_236937D9C((uint64_t)a3, &v23, a3[11].i32[1])) {
        return v23;
      }
    }
    unint64_t v6 = v23 + 2;
LABEL_6:
    char v23 = v6;
    goto LABEL_7;
  }
  return v23;
}

uint64_t sub_23693E290(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v6 = (char)*a3;
  unsigned int v7 = *a3;
  if (v6 < 0)
  {
    uint64_t result = sub_23695441C((uint64_t)a3, v7);
    if (!result) {
      return result;
    }
    uint64_t v8 = result;
    unsigned int v7 = v10;
  }
  else
  {
    uint64_t v8 = (uint64_t)(a3 + 1);
  }
  int v11 = sub_236938208((uint64_t)a1, v8, v7);
  int v12 = a1[11].i32[0];
  BOOL v13 = __OFSUB__(v12--, 1);
  a1[11].i32[0] = v12;
  if (v12 < 0 != v13) {
    return 0;
  }
  int v14 = v11;
  uint64_t result = sub_23693D920(a2, v8, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v15 = a1[3].i32[1] + v14;
  a1[3].i32[1] = v15;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v15 & (v15 >> 31)));
  return result;
}

char *sub_23693E358(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_236946668((uint64_t)a3, a2);
      }
      uint64_t v8 = sub_2369414E8(a1 + 40, i);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          unsigned int v10 = a2 + 3;
          do
          {
            *(v10 - 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - 1) = v12;
        }
        else
        {
          a2[2] = v11;
          unsigned int v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_23693DACC(v8, v10, a3);
    }
  }
  int v14 = sub_23694DC64(a1 + 16, 200, 0x20000000, a2, (uint64_t *)a3);
  int v15 = v14;
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v15;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v2sub_23692A244(&a9, 0) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v14) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v14, v19, (int)v20);
    v15 += v21;
    return v15;
  }
  return sub_23694677C((uint64_t *)a3, (char *)v19, v20, (unint64_t)v14);
}

uint64_t sub_23693E4F0(uint64_t a1)
{
  uint64_t v2 = sub_236950998(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_23693DBB8(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v4 += v13;
  }
  *(_DWORD *)(a1 + 64) = v4;
  return v4;
}

unint64_t sub_23693E5A0(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26E9CE938, (const struct __class_type_info *)&unk_26E9CE4D8, 0))sub_2369386E0(); {
  return sub_23693E628(a1, (uint64_t)lpsrc);
  }
}

unint64_t sub_23693E628(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    sub_2369470F4((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.cc", 2724);
    uint64_t v4 = sub_23694710C(v15, "CHECK failed: (&from) != (this): ");
    sub_236947248((uint64_t)&v14, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v15);
  }
  sub_23694B63C(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFELL;
    unint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFFELL) + 8;
    uint64_t v8 = *(void *)(a1 + 8);
    if (v8) {
      uint64_t v9 = (std::string *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
    }
    else {
      uint64_t v9 = (std::string *)sub_236937EDC((unint64_t *)(a1 + 8));
    }
    int v10 = *(char *)(v6 + 31);
    if (v10 >= 0) {
      unsigned int v11 = (const std::string::value_type *)v7;
    }
    else {
      unsigned int v11 = *(const std::string::value_type **)(v6 + 8);
    }
    if (v10 >= 0) {
      std::string::size_type v12 = *(unsigned __int8 *)(v6 + 31);
    }
    else {
      std::string::size_type v12 = *(void *)(v6 + 16);
    }
    std::string::append(v9, v11, v12);
  }
  return sub_236941BB0(a1 + 40, a2 + 40);
}

void sub_23693E700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23693E718(uint64_t a1)
{
  return sub_23694CACC(a1 + 16);
}

void *sub_23693E720@<X0>(void *a1@<X8>)
{
  return sub_236919B40(a1, "sentencepiece.SelfTestData");
}

void *sub_23693E730(void *a1, uint64_t a2)
{
  *a1 = &unk_26E9CE220;
  a1[1] = a2;
  sub_236947714((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  if (atomic_load_explicit(dword_26B808CA0, memory_order_acquire)) {
    sub_236952920(dword_26B808CA0);
  }
  a1[6] = &qword_26889B028;
  a1[7] = 0x100000000;
  return a1;
}

void sub_23693E7B0(_Unwind_Exception *a1)
{
  sub_2369477F4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23693E7C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_23693E800(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(void *)(result + 8);
  uint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if ((v2 & 1) == 0)
  {
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*v3)
  {
LABEL_3:
    sub_2369470F4((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.cc", 2813);
    uint64_t v4 = sub_23694710C(v10, "CHECK failed: GetArena() == nullptr: ");
    sub_236947248((uint64_t)&v9, (const char **)&v4->__r_.__value_.__l.__data_);
    uint64_t result = sub_236947250((uint64_t)v10);
  }
LABEL_4:
  unint64_t v6 = *(uint64_t **)(v1 + 48);
  uint64_t v5 = (uint64_t *)(v1 + 48);
  if (v6 != &qword_26889B028)
  {
    uint64_t v7 = sub_236937CC8(v5);
    uint64_t v8 = v7;
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    return MEMORY[0x237E07580](v8, 0x1012C40EC159624);
  }
  return result;
}

void sub_23693E8C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23693E8E4(uint64_t a1)
{
  sub_23693E7C4(a1);
  JUMPOUT(0x237E07580);
}

unsigned __int8 *sub_23693E91C(uint64_t a1)
{
  uint64_t result = sub_23694B59C((unsigned __int8 *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3)
  {
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
  if ((v3 & 6) != 0) {
    *(void *)(a1 + 56) = 0x100000000;
  }
  *(_DWORD *)(a1 + 4sub_23692A244(&a9, 0) = 0;
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 31) < 0)
    {
      **(unsigned char **)(v6 + 8) = 0;
      *(void *)(v6 + 16) = 0;
    }
    else
    {
      *(unsigned char *)(v6 + 8) = 0;
      *(unsigned char *)(v6 + 31) = 0;
    }
  }
  return result;
}

uint64_t sub_23693E9B4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  int v5 = 0;
  if ((sub_236937D9C((uint64_t)a3, (char **)v27, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (char *)(*(void *)v27 + 1);
      unsigned int v9 = **(unsigned char **)v27;
      if (((char)**(unsigned char **)v27 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*v8 & 0x80000000) == 0) {
        break;
      }
      uint64_t v22 = sub_2369543D8(*(uint64_t *)v27, v10 - 128);
      *(void *)uint64_t v27 = v22;
      if (!v22) {
        goto LABEL_48;
      }
      uint64_t v8 = (char *)v22;
      unsigned int v9 = v23;
LABEL_8:
      unsigned int v11 = v9 >> 3;
      if (v9 >> 3 == 3)
      {
        if (v9 == 24)
        {
          int v15 = v8 + 1;
          unint64_t v16 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_24;
          }
          int v17 = *v15;
          int v18 = v16 + (v17 << 7);
          unint64_t v16 = (v18 - 128);
          if (v17 < 0)
          {
            *(void *)uint64_t v27 = sub_236954390((uint64_t)v8, (v18 - 128));
            if (!*(void *)v27)
            {
LABEL_48:
              *(void *)uint64_t v27 = 0;
              goto LABEL_2;
            }
            unint64_t v16 = v25;
          }
          else
          {
            int v15 = v8 + 2;
LABEL_24:
            *(void *)uint64_t v27 = v15;
          }
          if ((v16 - 1) > 5)
          {
            if (*v7) {
              uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else {
              uint64_t v26 = (std::string *)sub_236937EDC((unint64_t *)(a1 + 8));
            }
            sub_23695427C(3, v16, v26);
          }
          else
          {
            *(_DWORD *)(a1 + 40) |= 4u;
            *(_DWORD *)(a1 + 6sub_23692A244(&a9, 0) = v16;
          }
          goto LABEL_38;
        }
      }
      else if (v11 == 2)
      {
        if (v9 == 21)
        {
          v5 |= 2u;
          *(_DWORD *)(a1 + 56) = *(_DWORD *)v8;
          *(void *)uint64_t v27 = v8 + 4;
          goto LABEL_38;
        }
      }
      else if (v11 == 1 && v9 == 10)
      {
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFELL);
        if (v19) {
          uint64_t v20 = (void *)*v20;
        }
        uint64_t v21 = (std::string *)sub_236945F50((uint64_t *)(a1 + 48), (uint64_t)v20);
        char v14 = (void *)sub_23695448C(v21, *(char **)v27, (uint64_t)a3);
        goto LABEL_37;
      }
      if (v9) {
        BOOL v13 = (v9 & 7) == 4;
      }
      else {
        BOOL v13 = 1;
      }
      if (v13)
      {
        a3[10].i32[0] = v9 - 1;
        goto LABEL_2;
      }
      if (v9 < 0x640)
      {
        if (*v7)
        {
          uint64_t v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          uint64_t v24 = (std::string *)sub_236937EDC((unint64_t *)(a1 + 8));
          uint64_t v8 = *(char **)v27;
        }
        char v14 = sub_236954948(v9, v24, v8, a3);
      }
      else
      {
        char v14 = sub_23694CE6C((uint64_t *)(a1 + 16), v9, (unsigned __int8 *)v8, (uint64_t)qword_26889AF70, (unint64_t *)(a1 + 8), a3);
      }
LABEL_37:
      *(void *)uint64_t v27 = v14;
      if (!v14) {
        goto LABEL_48;
      }
LABEL_38:
      if (sub_236937D9C((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
        goto LABEL_2;
      }
    }
    uint64_t v8 = (char *)(*(void *)v27 + 2);
LABEL_7:
    *(void *)uint64_t v27 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return *(void *)v27;
}

char *sub_23693EC3C(uint64_t a1, char *a2, unint64_t *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    unint64_t v4 = sub_236935EBC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_18;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_236946668((uint64_t)a3, v4);
  }
  int v7 = *(_DWORD *)(a1 + 56);
  *unint64_t v4 = 21;
  *(_DWORD *)(v4 + 1) = v7;
  v4 += 5;
  if ((v6 & 4) != 0)
  {
LABEL_9:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_236946668((uint64_t)a3, v4);
    }
    unint64_t v8 = *(int *)(a1 + 60);
    *unint64_t v4 = 24;
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unint64_t v9 = v8 >> 7;
      if (v8 >> 14)
      {
        v4 += 3;
        do
        {
          *(v4 - 1) = v9 | 0x80;
          unint64_t v10 = v9 >> 7;
          ++v4;
          unint64_t v11 = v9 >> 14;
          v9 >>= 7;
        }
        while (v11);
        *(v4 - 1) = v10;
      }
      else
      {
        v4[2] = v9;
        v4 += 3;
      }
    }
    else
    {
      v4[1] = v8;
      v4 += 2;
    }
  }
LABEL_18:
  std::string::size_type v12 = sub_23694DC64(a1 + 16, 200, 0x20000000, v4, (uint64_t *)a3);
  BOOL v13 = v12;
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v13;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v12) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v12, v17, (int)v18);
    v13 += v19;
    return v13;
  }
  return sub_23694677C((uint64_t *)a3, (char *)v17, v18, (unint64_t)v12);
}

uint64_t sub_23693EDE8(uint64_t a1)
{
  uint64_t result = sub_236950998(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) != 0)
  {
    if (v3)
    {
      unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      result += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v3 & 2) != 0) {
      result += 5;
    }
    if ((v3 & 4) != 0)
    {
      int v7 = *(_DWORD *)(a1 + 60);
      if (v7 < 0) {
        uint64_t v8 = 11;
      }
      else {
        uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      result += v8;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_23693EECC(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26E9CE938, (const struct __class_type_info *)&unk_26E9CE4F0, 0))sub_2369386E0(); {
  sub_23693EF54(a1, (uint64_t)lpsrc);
  }
}

void sub_23693EF54(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.cc", 3001);
    unint64_t v4 = sub_23694710C(v18, "CHECK failed: (&from) != (this): ");
    sub_236947248((uint64_t)&v17, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v18);
  }
  sub_23694B63C(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFELL;
    unint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFFELL) + 8;
    uint64_t v8 = *(void *)(a1 + 8);
    if (v8) {
      uint64_t v9 = (std::string *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
    }
    else {
      uint64_t v9 = (std::string *)sub_236937EDC((unint64_t *)(a1 + 8));
    }
    int v10 = *(char *)(v6 + 31);
    if (v10 >= 0) {
      uint64_t v11 = (const std::string::value_type *)v7;
    }
    else {
      uint64_t v11 = *(const std::string::value_type **)(v6 + 8);
    }
    if (v10 >= 0) {
      std::string::size_type v12 = *(unsigned __int8 *)(v6 + 31);
    }
    else {
      std::string::size_type v12 = *(void *)(v6 + 16);
    }
    std::string::append(v9, v11, v12);
  }
  int v13 = *(_DWORD *)(a2 + 40);
  if ((v13 & 7) != 0)
  {
    if (v13)
    {
      uint64_t v14 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v15 = *(void *)(a1 + 8);
      unint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFELL);
      if (v15) {
        unint64_t v16 = (void *)*v16;
      }
      sub_236945F18((uint64_t *)(a1 + 48), v14, (uint64_t)v16);
      if ((v13 & 2) == 0)
      {
LABEL_16:
        if ((v13 & 4) == 0)
        {
LABEL_18:
          *(_DWORD *)(a1 + 40) |= v13;
          return;
        }
LABEL_17:
        *(_DWORD *)(a1 + 6sub_23692A244(&a9, 0) = *(_DWORD *)(a2 + 60);
        goto LABEL_18;
      }
    }
    else if ((v13 & 2) == 0)
    {
      goto LABEL_16;
    }
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    if ((v13 & 4) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
}

void sub_23693F090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23693F0A8(uint64_t a1)
{
  return sub_23694CACC(a1 + 16);
}

void *sub_23693F0B0@<X0>(void *a1@<X8>)
{
  return sub_236919B40(a1, "sentencepiece.ModelProto.SentencePiece");
}

uint64_t sub_23693F0C0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26E9CE2A0;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = &unk_26E9CE3B8;
  sub_236947714(a1 + 24, a2);
  *(void *)(a1 + 56) = a2;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  if (atomic_load_explicit(dword_26B808C68, memory_order_acquire)) {
    sub_236952920(dword_26B808C68);
  }
  *(_OWORD *)(a1 + 8sub_23692A244(&a9, 0) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  return a1;
}

void sub_23693F170(_Unwind_Exception *a1)
{
  sub_236941D60(v2);
  sub_2369477F4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23693F190(uint64_t a1)
{
  return a1;
}

uint64_t sub_23693F1D4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(void *)(result + 8);
  int v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if ((v2 & 1) == 0)
  {
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*v3)
  {
LABEL_3:
    sub_2369470F4((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.cc", 3145);
    unint64_t v4 = sub_23694710C(v13, "CHECK failed: GetArena() == nullptr: ");
    sub_236947248((uint64_t)&v12, (const char **)&v4->__r_.__value_.__l.__data_);
    uint64_t result = sub_236947250((uint64_t)v13);
  }
LABEL_4:
  if ((_UNKNOWN *)v1 != &unk_26889AFB0)
  {
    uint64_t v5 = *(uint64_t **)(v1 + 80);
    if (v5)
    {
      unint64_t v6 = sub_236938B2C(v5);
      MEMORY[0x237E07580](v6, 0x10A1C4074230EEALL);
    }
    uint64_t v7 = *(void *)(v1 + 88);
    if (v7)
    {
      uint64_t v8 = sub_23693C924(v7);
      MEMORY[0x237E07580](v8, 0x10A1C402CDD3876);
    }
    uint64_t v9 = *(void *)(v1 + 96);
    if (v9)
    {
      uint64_t v10 = sub_23693DF20(v9);
      MEMORY[0x237E07580](v10, 0x10A1C4075D007F8);
    }
    uint64_t result = *(void *)(v1 + 104);
    if (result)
    {
      uint64_t v11 = sub_23693C924(result);
      return MEMORY[0x237E07580](v11, 0x10A1C402CDD3876);
    }
  }
  return result;
}

void sub_23693F2E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23693F300(uint64_t a1)
{
  return sub_23693F190(a1 - 16);
}

void sub_23693F308(uint64_t a1)
{
  sub_23693F190(a1);
  JUMPOUT(0x237E07580);
}

void sub_23693F340(uint64_t a1)
{
  sub_23693F190(a1 - 16);
  JUMPOUT(0x237E07580);
}

uint64_t sub_23693F37C(uint64_t a1)
{
  sub_23694B59C((unsigned __int8 *)(a1 + 24));
  uint64_t result = (uint64_t)sub_23694181C((unsigned __int8 *)(a1 + 56));
  int v3 = *(_DWORD *)(a1 + 48);
  if ((v3 & 0xF) != 0)
  {
    if (v3)
    {
      uint64_t v4 = *(void *)(a1 + 80);
      if (!v4)
      {
        sub_2369470F4((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.cc", 3178);
        uint64_t v5 = sub_23694710C(v15, "CHECK failed: trainer_spec_ != nullptr: ");
        sub_236947248((uint64_t)&v14, (const char **)&v5->__r_.__value_.__l.__data_);
        sub_236947250((uint64_t)v15);
        uint64_t v4 = *(void *)(a1 + 80);
      }
      uint64_t result = sub_236938E98(v4);
    }
    if ((v3 & 2) != 0)
    {
      uint64_t v6 = *(void *)(a1 + 88);
      if (!v6)
      {
        sub_2369470F4((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.cc", 3182);
        uint64_t v7 = sub_23694710C(v15, "CHECK failed: normalizer_spec_ != nullptr: ");
        sub_236947248((uint64_t)&v14, (const char **)&v7->__r_.__value_.__l.__data_);
        sub_236947250((uint64_t)v15);
        uint64_t v6 = *(void *)(a1 + 88);
      }
      uint64_t result = (uint64_t)sub_23693CB48(v6);
    }
    if ((v3 & 4) != 0)
    {
      uint64_t v8 = *(void *)(a1 + 96);
      if (!v8)
      {
        sub_2369470F4((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.cc", 3186);
        uint64_t v9 = sub_23694710C(v15, "CHECK failed: self_test_data_ != nullptr: ");
        sub_236947248((uint64_t)&v14, (const char **)&v9->__r_.__value_.__l.__data_);
        sub_236947250((uint64_t)v15);
        uint64_t v8 = *(void *)(a1 + 96);
      }
      uint64_t result = sub_23693E01C(v8);
    }
    if ((v3 & 8) != 0)
    {
      uint64_t v10 = *(void *)(a1 + 104);
      if (!v10)
      {
        sub_2369470F4((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.cc", 3190);
        uint64_t v11 = sub_23694710C(v15, "CHECK failed: denormalizer_spec_ != nullptr: ");
        sub_236947248((uint64_t)&v14, (const char **)&v11->__r_.__value_.__l.__data_);
        sub_236947250((uint64_t)v15);
        uint64_t v10 = *(void *)(a1 + 104);
      }
      uint64_t result = (uint64_t)sub_23693CB48(v10);
    }
  }
  *(_DWORD *)(a1 + 48) = 0;
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v13 + 31) < 0)
    {
      **(unsigned char **)(v13 + 8) = 0;
      *(void *)(v13 + 16) = 0;
    }
    else
    {
      *(unsigned char *)(v13 + 8) = 0;
      *(unsigned char *)(v13 + 31) = 0;
    }
  }
  return result;
}

void sub_23693F530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_23693F560(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  if ((sub_236937D9C((uint64_t)a3, &v30, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (2)
    {
      uint64_t v7 = v30 + 1;
      unsigned int v8 = *v30;
      if (*v30 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v27 = (char *)sub_2369543D8((uint64_t)v30, v9 - 128);
          uint64_t v30 = v27;
          if (!v27) {
            return 0;
          }
          uint64_t v7 = v27;
          unsigned int v8 = v28;
LABEL_8:
          switch(v8 >> 3)
          {
            case 1u:
              if (v8 != 10) {
                goto LABEL_49;
              }
              uint64_t v10 = v7 - 1;
              break;
            case 2u:
              if (v8 != 18) {
                goto LABEL_49;
              }
              *(_DWORD *)(a1 + 48) |= 1u;
              uint64_t v18 = *(void *)(a1 + 80);
              if (!v18)
              {
                uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
                if (*v6) {
                  uint64_t v19 = (void *)*v19;
                }
                uint64_t v18 = sub_23694070C((uint64_t)v19);
                *(void *)(a1 + 8sub_23692A244(&a9, 0) = v18;
                uint64_t v7 = v30;
              }
              uint64_t v20 = (char *)sub_23693F9C0(a3, v18, (unsigned __int8 *)v7);
              goto LABEL_46;
            case 3u:
              if (v8 != 26) {
                goto LABEL_49;
              }
              *(_DWORD *)(a1 + 48) |= 2u;
              uint64_t v21 = *(void *)(a1 + 88);
              if (v21) {
                goto LABEL_45;
              }
              uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
              if (*v6) {
                uint64_t v22 = (void *)*v22;
              }
              uint64_t v21 = sub_2369407DC((uint64_t)v22);
              *(void *)(a1 + 88) = v21;
              goto LABEL_44;
            case 4u:
              if (v8 != 34) {
                goto LABEL_49;
              }
              *(_DWORD *)(a1 + 48) |= 4u;
              uint64_t v23 = *(void *)(a1 + 96);
              if (!v23)
              {
                uint64_t v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
                if (*v6) {
                  uint64_t v24 = (void *)*v24;
                }
                uint64_t v23 = sub_23694097C((uint64_t)v24);
                *(void *)(a1 + 96) = v23;
                uint64_t v7 = v30;
              }
              uint64_t v20 = (char *)sub_23693FB50(a3, v23, v7);
              goto LABEL_46;
            case 5u:
              if (v8 != 42) {
                goto LABEL_49;
              }
              *(_DWORD *)(a1 + 48) |= 8u;
              uint64_t v21 = *(void *)(a1 + 104);
              if (v21) {
                goto LABEL_45;
              }
              unint64_t v25 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
              if (*v6) {
                unint64_t v25 = (void *)*v25;
              }
              uint64_t v21 = sub_2369407DC((uint64_t)v25);
              *(void *)(a1 + 104) = v21;
LABEL_44:
              uint64_t v7 = v30;
LABEL_45:
              uint64_t v20 = (char *)sub_23693FA88(a3, v21, (unsigned __int8 *)v7);
              goto LABEL_46;
            default:
LABEL_49:
              if (v8) {
                BOOL v26 = (v8 & 7) == 4;
              }
              else {
                BOOL v26 = 1;
              }
              if (v26)
              {
                a3[10].i32[0] = v8 - 1;
                return v30;
              }
              if (v8 < 0x640)
              {
                if (*v6)
                {
                  uint64_t v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
                }
                else
                {
                  uint64_t v29 = (std::string *)sub_236937EDC((unint64_t *)(a1 + 8));
                  uint64_t v7 = v30;
                }
                uint64_t v20 = (char *)sub_236954948(v8, v29, v7, a3);
              }
              else
              {
                uint64_t v20 = (char *)sub_23694CE6C((uint64_t *)(a1 + 24), v8, (unsigned __int8 *)v7, (uint64_t)&unk_26889AFB0, (unint64_t *)(a1 + 8), a3);
              }
LABEL_46:
              uint64_t v30 = v20;
              if (!v20) {
                return 0;
              }
LABEL_47:
              if (sub_236937D9C((uint64_t)a3, &v30, a3[11].i32[1])) {
                return v30;
              }
              continue;
          }
          while (1)
          {
            uint64_t v11 = (unsigned __int8 *)(v10 + 1);
            uint64_t v30 = v10 + 1;
            uint64_t v12 = *(int **)(a1 + 72);
            if (!v12) {
              break;
            }
            uint64_t v13 = *(int *)(a1 + 64);
            int v14 = *v12;
            if ((int)v13 >= *v12)
            {
              if (v14 == *(_DWORD *)(a1 + 68))
              {
LABEL_16:
                sub_2369597C8(a1 + 56, v14 + 1);
                uint64_t v12 = *(int **)(a1 + 72);
                int v14 = *v12;
              }
              *uint64_t v12 = v14 + 1;
              uint64_t v15 = sub_236940A4C(*(void *)(a1 + 56));
              uint64_t v16 = *(void *)(a1 + 72);
              uint64_t v17 = *(int *)(a1 + 64);
              *(_DWORD *)(a1 + 64) = v17 + 1;
              *(void *)(v16 + 8 * v17 + 8) = v15;
              uint64_t v11 = (unsigned __int8 *)v30;
              goto LABEL_18;
            }
            *(_DWORD *)(a1 + 64) = v13 + 1;
            uint64_t v15 = *(void **)&v12[2 * v13 + 2];
LABEL_18:
            uint64_t v10 = (char *)sub_23693F8F8(a3, (uint64_t)v15, v11);
            uint64_t v30 = v10;
            if (!v10) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v10 || *v10 != 10) {
              goto LABEL_47;
            }
          }
          int v14 = *(_DWORD *)(a1 + 68);
          goto LABEL_16;
        }
        uint64_t v7 = v30 + 2;
      }
      break;
    }
    uint64_t v30 = v7;
    goto LABEL_8;
  }
  return v30;
}

uint64_t sub_23693F8F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v6 = (char)*a3;
  unsigned int v7 = *a3;
  if (v6 < 0)
  {
    uint64_t result = sub_23695441C((uint64_t)a3, v7);
    if (!result) {
      return result;
    }
    uint64_t v8 = result;
    unsigned int v7 = v10;
  }
  else
  {
    uint64_t v8 = (uint64_t)(a3 + 1);
  }
  int v11 = sub_236938208((uint64_t)a1, v8, v7);
  int v12 = a1[11].i32[0];
  BOOL v13 = __OFSUB__(v12--, 1);
  a1[11].i32[0] = v12;
  if (v12 < 0 != v13) {
    return 0;
  }
  int v14 = v11;
  uint64_t result = sub_23693E9B4(a2, v8, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v15 = a1[3].i32[1] + v14;
  a1[3].i32[1] = v15;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v15 & (v15 >> 31)));
  return result;
}

uint64_t sub_23693F9C0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v6 = (char)*a3;
  unsigned int v7 = *a3;
  if (v6 < 0)
  {
    uint64_t result = sub_23695441C((uint64_t)a3, v7);
    if (!result) {
      return result;
    }
    uint64_t v8 = result;
    unsigned int v7 = v10;
  }
  else
  {
    uint64_t v8 = (uint64_t)(a3 + 1);
  }
  int v11 = sub_236938208((uint64_t)a1, v8, v7);
  int v12 = a1[11].i32[0];
  BOOL v13 = __OFSUB__(v12--, 1);
  a1[11].i32[0] = v12;
  if (v12 < 0 != v13) {
    return 0;
  }
  int v14 = v11;
  uint64_t result = (uint64_t)sub_236939160(a2, v8, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v15 = a1[3].i32[1] + v14;
  a1[3].i32[1] = v15;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v15 & (v15 >> 31)));
  return result;
}

uint64_t sub_23693FA88(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v6 = (char)*a3;
  unsigned int v7 = *a3;
  if (v6 < 0)
  {
    uint64_t result = sub_23695441C((uint64_t)a3, v7);
    if (!result) {
      return result;
    }
    uint64_t v8 = result;
    unsigned int v7 = v10;
  }
  else
  {
    uint64_t v8 = (uint64_t)(a3 + 1);
  }
  int v11 = sub_236938208((uint64_t)a1, v8, v7);
  int v12 = a1[11].i32[0];
  BOOL v13 = __OFSUB__(v12--, 1);
  a1[11].i32[0] = v12;
  if (v12 < 0 != v13) {
    return 0;
  }
  int v14 = v11;
  uint64_t result = sub_23693CC58(a2, v8, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v15 = a1[3].i32[1] + v14;
  a1[3].i32[1] = v15;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v15 & (v15 >> 31)));
  return result;
}

uint64_t sub_23693FB50(int32x2_t *a1, uint64_t a2, char *a3)
{
  int v6 = *a3;
  unsigned int v7 = *a3;
  if (v6 < 0)
  {
    uint64_t result = sub_23695441C((uint64_t)a3, v7);
    if (!result) {
      return result;
    }
    uint64_t v8 = (char *)result;
    unsigned int v7 = v10;
  }
  else
  {
    uint64_t v8 = a3 + 1;
  }
  int v11 = sub_236938208((uint64_t)a1, (int)v8, v7);
  int v12 = a1[11].i32[0];
  BOOL v13 = __OFSUB__(v12--, 1);
  a1[11].i32[0] = v12;
  if (v12 < 0 != v13) {
    return 0;
  }
  int v14 = v11;
  uint64_t result = (uint64_t)sub_23693E078(a2, v8, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v15 = a1[3].i32[1] + v14;
  a1[3].i32[1] = v15;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v15 & (v15 >> 31)));
  return result;
}

char *sub_23693FC18(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 64);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_236946668((uint64_t)a3, a2);
      }
      uint64_t v8 = sub_2369131F8(a1 + 56, i);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          unsigned int v10 = a2 + 3;
          do
          {
            *(v10 - 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - 1) = v12;
        }
        else
        {
          a2[2] = v11;
          unsigned int v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_23693EC3C(v8, v10, a3);
    }
  }
  int v14 = *(_DWORD *)(a1 + 48);
  if (v14)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_236946668((uint64_t)a3, a2);
    }
    uint64_t v15 = *(void *)(a1 + 80);
    *a2 = 18;
    unsigned int v16 = *(_DWORD *)(v15 + 48);
    if (v16 > 0x7F)
    {
      a2[1] = v16 | 0x80;
      unsigned int v18 = v16 >> 7;
      if (v16 >> 14)
      {
        uint64_t v17 = a2 + 3;
        do
        {
          *(v17 - 1) = v18 | 0x80;
          unsigned int v19 = v18 >> 7;
          ++v17;
          unsigned int v20 = v18 >> 14;
          v18 >>= 7;
        }
        while (v20);
        *(v17 - 1) = v19;
      }
      else
      {
        a2[2] = v18;
        uint64_t v17 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v16;
      uint64_t v17 = a2 + 2;
    }
    a2 = sub_23693A7D8(v15, v17, (uint64_t *)a3);
    if ((v14 & 2) == 0)
    {
LABEL_15:
      if ((v14 & 4) == 0) {
        goto LABEL_16;
      }
      goto LABEL_38;
    }
  }
  else if ((v14 & 2) == 0)
  {
    goto LABEL_15;
  }
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_236946668((uint64_t)a3, a2);
  }
  uint64_t v21 = *(void *)(a1 + 88);
  *a2 = 26;
  unsigned int v22 = *(_DWORD *)(v21 + 52);
  if (v22 > 0x7F)
  {
    a2[1] = v22 | 0x80;
    unsigned int v24 = v22 >> 7;
    if (v22 >> 14)
    {
      uint64_t v23 = a2 + 3;
      do
      {
        *(v23 - 1) = v24 | 0x80;
        unsigned int v25 = v24 >> 7;
        ++v23;
        unsigned int v26 = v24 >> 14;
        v24 >>= 7;
      }
      while (v26);
      *(v23 - 1) = v25;
    }
    else
    {
      a2[2] = v24;
      uint64_t v23 = a2 + 3;
    }
  }
  else
  {
    a2[1] = v22;
    uint64_t v23 = a2 + 2;
  }
  a2 = sub_23693D07C(v21, v23, a3);
  if ((v14 & 4) == 0)
  {
LABEL_16:
    if ((v14 & 8) == 0) {
      goto LABEL_58;
    }
    goto LABEL_48;
  }
LABEL_38:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_236946668((uint64_t)a3, a2);
  }
  uint64_t v27 = *(void *)(a1 + 96);
  *a2 = 34;
  unsigned int v28 = *(_DWORD *)(v27 + 64);
  if (v28 > 0x7F)
  {
    a2[1] = v28 | 0x80;
    unsigned int v30 = v28 >> 7;
    if (v28 >> 14)
    {
      uint64_t v29 = a2 + 3;
      do
      {
        *(v29 - 1) = v30 | 0x80;
        unsigned int v31 = v30 >> 7;
        ++v29;
        unsigned int v32 = v30 >> 14;
        v30 >>= 7;
      }
      while (v32);
      *(v29 - 1) = v31;
    }
    else
    {
      a2[2] = v30;
      uint64_t v29 = a2 + 3;
    }
  }
  else
  {
    a2[1] = v28;
    uint64_t v29 = a2 + 2;
  }
  a2 = sub_23693E358(v27, v29, a3);
  if ((v14 & 8) != 0)
  {
LABEL_48:
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_236946668((uint64_t)a3, a2);
    }
    uint64_t v33 = *(void *)(a1 + 104);
    *a2 = 42;
    unsigned int v34 = *(_DWORD *)(v33 + 52);
    if (v34 > 0x7F)
    {
      a2[1] = v34 | 0x80;
      unsigned int v36 = v34 >> 7;
      if (v34 >> 14)
      {
        uint64_t v35 = a2 + 3;
        do
        {
          *(v35 - 1) = v36 | 0x80;
          unsigned int v37 = v36 >> 7;
          ++v35;
          unsigned int v38 = v36 >> 14;
          v36 >>= 7;
        }
        while (v38);
        *(v35 - 1) = v37;
      }
      else
      {
        a2[2] = v36;
        uint64_t v35 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v34;
      uint64_t v35 = a2 + 2;
    }
    a2 = sub_23693D07C(v33, v35, a3);
  }
LABEL_58:
  uint64_t v39 = sub_23694DC64(a1 + 24, 200, 0x20000000, a2, (uint64_t *)a3);
  uint64_t v40 = v39;
  uint64_t v41 = *(void *)(a1 + 8);
  if ((v41 & 1) == 0) {
    return v40;
  }
  unint64_t v43 = v41 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v43 + 31) < 0)
  {
    char v44 = *(void **)(v43 + 8);
    uint64_t v45 = *(void *)(v43 + 16);
  }
  else
  {
    char v44 = (void *)(v43 + 8);
    LODWORD(v45) = *(unsigned __int8 *)(v43 + 31);
  }
  if ((uint64_t)(*a3 - (void)v39) >= (int)v45)
  {
    uint64_t v46 = (int)v45;
    memcpy(v39, v44, (int)v45);
    v40 += v46;
    return v40;
  }
  return sub_23694677C((uint64_t *)a3, (char *)v44, v45, (unint64_t)v39);
}

uint64_t sub_236940024(uint64_t a1)
{
  uint64_t v2 = sub_236950998(a1 + 24);
  uint64_t v3 = *(int *)(a1 + 64);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 72);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_23693EDE8(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 48);
  if ((v10 & 0xF) == 0) {
    goto LABEL_13;
  }
  if ((v10 & 1) == 0)
  {
    if ((v10 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_16:
    uint64_t v15 = sub_23693D290(*(void *)(a1 + 88));
    v4 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 4) == 0)
    {
LABEL_11:
      if ((v10 & 8) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_17;
  }
  uint64_t v14 = sub_23693B9A0(*(void *)(a1 + 80));
  v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 2) != 0) {
    goto LABEL_16;
  }
LABEL_10:
  if ((v10 & 4) == 0) {
    goto LABEL_11;
  }
LABEL_17:
  uint64_t v16 = sub_23693E4F0(*(void *)(a1 + 96));
  v4 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 8) != 0)
  {
LABEL_12:
    uint64_t v11 = sub_23693D290(*(void *)(a1 + 104));
    v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_13:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v17 = v12 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v4 += v18;
  }
  *(_DWORD *)(a1 + 52) = v4;
  return v4;
}

void sub_2369401B0(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26E9CE938, (const struct __class_type_info *)&unk_26E9CE508, 0))sub_2369386E0(); {
  sub_236940238(a1, (uint64_t)lpsrc);
  }
}

void sub_236940238(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    sub_2369470F4((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.cc", 3397);
    uint64_t v4 = sub_23694710C(v27, "CHECK failed: (&from) != (this): ");
    sub_236947248((uint64_t)&v26, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v27);
  }
  sub_23694B63C(a1 + 24, a2 + 24);
  uint64_t v5 = (void *)(a1 + 8);
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    unint64_t v8 = (v6 & 0xFFFFFFFFFFFFFFFELL) + 8;
    if (*v5) {
      uint64_t v9 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
    }
    else {
      uint64_t v9 = (std::string *)sub_236937EDC((unint64_t *)(a1 + 8));
    }
    int v10 = *(char *)(v7 + 31);
    if (v10 >= 0) {
      uint64_t v11 = (const std::string::value_type *)v8;
    }
    else {
      uint64_t v11 = *(const std::string::value_type **)(v7 + 8);
    }
    if (v10 >= 0) {
      std::string::size_type v12 = *(unsigned __int8 *)(v7 + 31);
    }
    else {
      std::string::size_type v12 = *(void *)(v7 + 16);
    }
    std::string::append(v9, v11, v12);
  }
  sub_236941E1C(a1 + 56, a2 + 56);
  int v13 = *(_DWORD *)(a2 + 48);
  if ((v13 & 0xF) != 0)
  {
    if (v13)
    {
      *(_DWORD *)(a1 + 48) |= 1u;
      uint64_t v14 = *(void *)(a1 + 80);
      if (!v14)
      {
        uint64_t v15 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
        if (*v5) {
          uint64_t v15 = (void *)*v15;
        }
        uint64_t v14 = sub_23694070C((uint64_t)v15);
        *(void *)(a1 + 8sub_23692A244(&a9, 0) = v14;
      }
      if (*(void *)(a2 + 80)) {
        uint64_t v16 = *(void **)(a2 + 80);
      }
      else {
        uint64_t v16 = &unk_26889AD60;
      }
      sub_23693C2D8(v14, (uint64_t)v16);
    }
    if ((v13 & 2) != 0)
    {
      *(_DWORD *)(a1 + 48) |= 2u;
      uint64_t v17 = *(void *)(a1 + 88);
      if (!v17)
      {
        uint64_t v18 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
        if (*v5) {
          uint64_t v18 = (void *)*v18;
        }
        uint64_t v17 = sub_2369407DC((uint64_t)v18);
        *(void *)(a1 + 88) = v17;
      }
      if (*(void *)(a2 + 88)) {
        unsigned int v19 = *(void **)(a2 + 88);
      }
      else {
        unsigned int v19 = &unk_26889AEA8;
      }
      sub_23693D480(v17, (uint64_t)v19);
      if ((v13 & 4) == 0)
      {
LABEL_25:
        if ((v13 & 8) == 0) {
          return;
        }
        goto LABEL_43;
      }
    }
    else if ((v13 & 4) == 0)
    {
      goto LABEL_25;
    }
    *(_DWORD *)(a1 + 48) |= 4u;
    uint64_t v20 = *(void *)(a1 + 96);
    if (!v20)
    {
      uint64_t v21 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
      if (*v5) {
        uint64_t v21 = (void *)*v21;
      }
      uint64_t v20 = sub_23694097C((uint64_t)v21);
      *(void *)(a1 + 96) = v20;
    }
    if (*(void *)(a2 + 96)) {
      unsigned int v22 = *(void **)(a2 + 96);
    }
    else {
      unsigned int v22 = &unk_26889AF28;
    }
    sub_23693E628(v20, (uint64_t)v22);
    if ((v13 & 8) != 0)
    {
LABEL_43:
      *(_DWORD *)(a1 + 48) |= 8u;
      uint64_t v23 = *(void *)(a1 + 104);
      if (!v23)
      {
        unsigned int v24 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
        if (*v5) {
          unsigned int v24 = (void *)*v24;
        }
        uint64_t v23 = sub_2369407DC((uint64_t)v24);
        *(void *)(a1 + 104) = v23;
      }
      if (*(void *)(a2 + 104)) {
        unsigned int v25 = *(void **)(a2 + 104);
      }
      else {
        unsigned int v25 = &unk_26889AEA8;
      }
      sub_23693D480(v23, (uint64_t)v25);
    }
  }
}

void sub_23694045C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_236940474(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_23693F37C(a1);
    sub_236940238(a1, a2);
  }
}

uint64_t sub_2369404C0(uint64_t a1)
{
  uint64_t result = sub_23694CACC(a1 + 24);
  if (!result) {
    return result;
  }
  uint64_t result = sub_2369406A4(a1 + 56);
  if (!result) {
    return result;
  }
  int v3 = *(_DWORD *)(a1 + 48);
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 80);
    if (!v4)
    {
      sub_2369470F4((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.h", 4741);
      uint64_t v5 = sub_23694710C(v13, "CHECK failed: !value || trainer_spec_ != nullptr: ");
      sub_236947248((uint64_t)&v12, (const char **)&v5->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v13);
      uint64_t v4 = *(void *)(a1 + 80);
    }
    uint64_t result = sub_23694CACC(v4 + 16);
    if (!result) {
      return result;
    }
    int v3 = *(_DWORD *)(a1 + 48);
  }
  if ((v3 & 2) != 0)
  {
    uint64_t v6 = *(void *)(a1 + 88);
    if (!v6)
    {
      sub_2369470F4((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.h", 4824);
      unint64_t v7 = sub_23694710C(v13, "CHECK failed: !value || normalizer_spec_ != nullptr: ");
      sub_236947248((uint64_t)&v12, (const char **)&v7->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v13);
      uint64_t v6 = *(void *)(a1 + 88);
    }
    uint64_t result = sub_23694CACC(v6 + 24);
    if (!result) {
      return result;
    }
    int v3 = *(_DWORD *)(a1 + 48);
  }
  if ((v3 & 4) == 0)
  {
LABEL_18:
    if ((v3 & 8) == 0) {
      return 1;
    }
    uint64_t v10 = *(void *)(a1 + 104);
    if (!v10)
    {
      sub_2369470F4((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.h", 4990);
      uint64_t v11 = sub_23694710C(v13, "CHECK failed: !value || denormalizer_spec_ != nullptr: ");
      sub_236947248((uint64_t)&v12, (const char **)&v11->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v13);
      uint64_t v10 = *(void *)(a1 + 104);
    }
    uint64_t result = sub_23694CACC(v10 + 24);
    if (result) {
      return 1;
    }
    return result;
  }
  uint64_t v8 = *(void *)(a1 + 96);
  if (!v8)
  {
    sub_2369470F4((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/builtin_pb/sentencepiece_model.pb.h", 4907);
    uint64_t v9 = sub_23694710C(v13, "CHECK failed: !value || self_test_data_ != nullptr: ");
    sub_236947248((uint64_t)&v12, (const char **)&v9->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v13);
    uint64_t v8 = *(void *)(a1 + 96);
  }
  uint64_t result = sub_23694CACC(v8 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 48);
    goto LABEL_18;
  }
  return result;
}

void sub_236940674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_2369406A4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8);
  do
  {
    int v3 = v2;
    BOOL v4 = __OFSUB__(v2--, 1);
    if (v2 < 0 != v4) {
      break;
    }
    uint64_t v5 = sub_2369131F8(a1, v2);
  }
  while ((sub_23694CACC(v5 + 16) & 1) != 0);
  return v3 < 1;
}

void *sub_2369406FC@<X0>(void *a1@<X8>)
{
  return sub_236919B40(a1, "sentencepiece.ModelProto");
}

uint64_t sub_23694070C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  if (*(unsigned char *)(a1 + 24)) {
    (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(a1 + 32) + 32) + 40))(*(void *)(*(void *)(a1 + 32) + 32), &unk_26E9CE460, 328);
  }
  uint64_t v2 = sub_236945A60(a1, 328);
  sub_2369389BC(v2, a1);
  return v2;
}

void sub_2369407B8(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x10A1C4074230EEALL);
  _Unwind_Resume(a1);
}

uint64_t sub_2369407DC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  if (*(unsigned char *)(a1 + 24)) {
    (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(a1 + 32) + 32) + 40))(*(void *)(*(void *)(a1 + 32) + 32), &unk_26E9CE488, 88);
  }
  uint64_t v2 = sub_236945A60(a1, 88);
  sub_23693C864(v2, a1);
  return v2;
}

void sub_236940888(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x10A1C402CDD3876);
  _Unwind_Resume(a1);
}

void *sub_2369408AC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  if (*(unsigned char *)(a1 + 24)) {
    (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(a1 + 32) + 32) + 40))(*(void *)(*(void *)(a1 + 32) + 32), &unk_26E9CE4C0, 40);
  }
  uint64_t v2 = (void *)sub_236945A60(a1, 40);
  sub_23693D67C(v2, a1);
  return v2;
}

void sub_236940958(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x1081C400F7E8713);
  _Unwind_Resume(a1);
}

uint64_t sub_23694097C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  if (*(unsigned char *)(a1 + 24)) {
    (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(a1 + 32) + 32) + 40))(*(void *)(*(void *)(a1 + 32) + 32), &unk_26E9CE4D8, 72);
  }
  uint64_t v2 = sub_236945A60(a1, 72);
  sub_23693DE7C(v2, a1);
  return v2;
}

void sub_236940A28(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x10A1C4075D007F8);
  _Unwind_Resume(a1);
}

void *sub_236940A4C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  if (*(unsigned char *)(a1 + 24)) {
    (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(a1 + 32) + 32) + 40))(*(void *)(*(void *)(a1 + 32) + 32), &unk_26E9CE4F0, 64);
  }
  uint64_t v2 = (void *)sub_236945A60(a1, 64);
  sub_23693E730(v2, a1);
  return v2;
}

void sub_236940AF8(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x10A1C40F497E4DALL);
  _Unwind_Resume(a1);
}

uint64_t sub_236940B1C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  if (*(unsigned char *)(a1 + 24)) {
    (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(a1 + 32) + 32) + 40))(*(void *)(*(void *)(a1 + 32) + 32), &unk_26E9CE508, 112);
  }
  uint64_t v2 = sub_236945A60(a1, 112);
  sub_23693F0C0(v2, a1);
  return v2;
}

void sub_236940BC8(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x10A1C4047CE62CFLL);
  _Unwind_Resume(a1);
}

uint64_t sub_236940BEC()
{
  return sub_23694070C(0);
}

uint64_t sub_236940BF4(uint64_t a1, uint64_t a2)
{
  return sub_23694070C(a2);
}

uint64_t sub_236940BFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_236940C04()
{
  return sub_2369407DC(0);
}

uint64_t sub_236940C0C(uint64_t a1, uint64_t a2)
{
  return sub_2369407DC(a2);
}

uint64_t sub_236940C14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_236940C1C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 80);
}

uint64_t sub_236940C24(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 81);
}

uint64_t sub_236940C2C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 82);
}

uint64_t sub_236940C34(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 83);
}

uint64_t sub_236940C3C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 65);
}

uint64_t sub_236940C44(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 66);
}

uint64_t sub_236940C4C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 67);
}

uint64_t sub_236940C54(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 64);
}

void *sub_236940C5C()
{
  return sub_2369408AC(0);
}

void *sub_236940C64(uint64_t a1, uint64_t a2)
{
  return sub_2369408AC(a2);
}

uint64_t sub_236940C6C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_236940C74()
{
  return sub_23694097C(0);
}

uint64_t sub_236940C7C(uint64_t a1, uint64_t a2)
{
  return sub_23694097C(a2);
}

uint64_t sub_236940C84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void *sub_236940C8C()
{
  return sub_236940A4C(0);
}

void *sub_236940C94(uint64_t a1, uint64_t a2)
{
  return sub_236940A4C(a2);
}

uint64_t sub_236940C9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_236940CA4()
{
  return sub_236940B1C(0);
}

uint64_t sub_236940CAC(uint64_t a1, uint64_t a2)
{
  return sub_236940B1C(a2);
}

uint64_t sub_236940CB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_236940CBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

char *sub_236940CC4(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 80);
  if (!v1) {
    uint64_t v1 = &unk_26889AD60;
  }
  uint64_t v2 = v1[22];
  if (v2)
  {
    uint64_t result = (char *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  else
  {
    uint64_t result = (char *)atomic_load_explicit(&qword_26889A4E0, memory_order_acquire);
    if (!result) {
      uint64_t result = (char *)sub_236945BB4(&off_26889A4C8);
    }
  }
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

char *sub_236940D30(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 80);
  if (!v1) {
    uint64_t v1 = &unk_26889AD60;
  }
  uint64_t v2 = v1[23];
  if (v2)
  {
    uint64_t result = (char *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  else
  {
    uint64_t result = (char *)atomic_load_explicit(&qword_26889A460, memory_order_acquire);
    if (!result) {
      uint64_t result = (char *)sub_236945BB4(&off_26889A448);
    }
  }
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

char *sub_236940D9C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 80);
  if (!v1) {
    uint64_t v1 = &unk_26889AD60;
  }
  uint64_t v2 = v1[24];
  if (v2)
  {
    uint64_t result = (char *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  else
  {
    uint64_t result = (char *)atomic_load_explicit(&qword_26889A480, memory_order_acquire);
    if (!result) {
      uint64_t result = (char *)sub_236945BB4(&off_26889A468);
    }
  }
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

char *sub_236940E08(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 80);
  if (!v1) {
    uint64_t v1 = &unk_26889AD60;
  }
  uint64_t v2 = v1[25];
  if (v2)
  {
    uint64_t result = (char *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  else
  {
    uint64_t result = (char *)atomic_load_explicit(&qword_26889A4A0, memory_order_acquire);
    if (!result) {
      uint64_t result = (char *)sub_236945BB4(&off_26889A488);
    }
  }
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

char *sub_236940E74(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 80);
  if (!v1) {
    uint64_t v1 = &unk_26889AD60;
  }
  uint64_t v2 = v1[26];
  if (v2)
  {
    uint64_t result = (char *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  else
  {
    uint64_t result = (char *)atomic_load_explicit(&qword_26889A4C0, memory_order_acquire);
    if (!result) {
      uint64_t result = (char *)sub_236945BB4(&off_26889A4A8);
    }
  }
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

uint64_t sub_236940EE0(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 **)(a1 + 80);
  if (!v1) {
    uint64_t v1 = (unsigned __int8 *)&unk_26889AD60;
  }
  return v1[248];
}

uint64_t sub_236940EFC(uint64_t a1)
{
  uint64_t v1 = (unsigned __int8 *)&unk_26889AD60;
  if (*(void *)(a1 + 80)) {
    uint64_t v1 = *(unsigned __int8 **)(a1 + 80);
  }
  return (v1[40] >> 3) & 1;
}

char *sub_236940F1C(uint64_t a1, int a2)
{
  uint64_t result = (char *)(*(void *)(sub_2369131F8(a1 + 56, a2) + 48) & 0xFFFFFFFFFFFFFFFELL);
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

float sub_236940F54(uint64_t a1, int a2)
{
  return *(float *)(sub_2369131F8(a1 + 56, a2) + 56);
}

BOOL sub_236940F74(uint64_t a1, int a2)
{
  return *(_DWORD *)(sub_2369131F8(a1 + 56, a2) + 60) == 1;
}

BOOL sub_236940F9C(uint64_t a1, int a2)
{
  return *(_DWORD *)(sub_2369131F8(a1 + 56, a2) + 60) == 2;
}

BOOL sub_236940FC4(uint64_t a1, int a2)
{
  return *(_DWORD *)(sub_2369131F8(a1 + 56, a2) + 60) == 3;
}

BOOL sub_236940FEC(uint64_t a1, int a2)
{
  return *(_DWORD *)(sub_2369131F8(a1 + 56, a2) + 60) == 5;
}

BOOL sub_236941014(uint64_t a1, int a2)
{
  return *(_DWORD *)(sub_2369131F8(a1 + 56, a2) + 60) == 4;
}

BOOL sub_23694103C(uint64_t a1, int a2)
{
  return *(_DWORD *)(sub_2369131F8(a1 + 56, a2) + 60) == 6;
}

char *sub_236941064(uint64_t a1)
{
  uint64_t v1 = *(char **)(a1 + 88);
  if (!v1) {
    uint64_t v1 = (char *)&unk_26889AEA8;
  }
  return v1 + 16;
}

char *sub_236941080(uint64_t a1)
{
  uint64_t v1 = *(char **)(a1 + 104);
  if (!v1) {
    uint64_t v1 = (char *)&unk_26889AEA8;
  }
  return v1 + 16;
}

uint64_t sub_23694109C(uint64_t a1)
{
  uint64_t v1 = *(_DWORD **)(a1 + 80);
  if (!v1) {
    uint64_t v1 = &unk_26889AD60;
  }
  int v2 = v1[68];
  unsigned int v3 = v2 - 2;
  unsigned int v4 = v2 - 1;
  if (v3 >= 3) {
    return 0;
  }
  else {
    return v4;
  }
}

uint64_t sub_2369410C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

char *sub_2369410D0(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 64);
  if (!v1) {
    uint64_t v1 = &unk_26889AD60;
  }
  uint64_t v2 = v1[22];
  if (v2)
  {
    uint64_t result = (char *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  else
  {
    uint64_t result = (char *)atomic_load_explicit(&qword_26889A4E0, memory_order_acquire);
    if (!result) {
      uint64_t result = (char *)sub_236945BB4(&off_26889A4C8);
    }
  }
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

char *sub_23694113C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 64);
  if (!v1) {
    uint64_t v1 = &unk_26889AD60;
  }
  uint64_t v2 = v1[23];
  if (v2)
  {
    uint64_t result = (char *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  else
  {
    uint64_t result = (char *)atomic_load_explicit(&qword_26889A460, memory_order_acquire);
    if (!result) {
      uint64_t result = (char *)sub_236945BB4(&off_26889A448);
    }
  }
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

char *sub_2369411A8(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 64);
  if (!v1) {
    uint64_t v1 = &unk_26889AD60;
  }
  uint64_t v2 = v1[24];
  if (v2)
  {
    uint64_t result = (char *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  else
  {
    uint64_t result = (char *)atomic_load_explicit(&qword_26889A480, memory_order_acquire);
    if (!result) {
      uint64_t result = (char *)sub_236945BB4(&off_26889A468);
    }
  }
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

char *sub_236941214(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 64);
  if (!v1) {
    uint64_t v1 = &unk_26889AD60;
  }
  uint64_t v2 = v1[25];
  if (v2)
  {
    uint64_t result = (char *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  else
  {
    uint64_t result = (char *)atomic_load_explicit(&qword_26889A4A0, memory_order_acquire);
    if (!result) {
      uint64_t result = (char *)sub_236945BB4(&off_26889A488);
    }
  }
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

char *sub_236941280(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 64);
  if (!v1) {
    uint64_t v1 = &unk_26889AD60;
  }
  uint64_t v2 = v1[26];
  if (v2)
  {
    uint64_t result = (char *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  else
  {
    uint64_t result = (char *)atomic_load_explicit(&qword_26889A4C0, memory_order_acquire);
    if (!result) {
      uint64_t result = (char *)sub_236945BB4(&off_26889A4A8);
    }
  }
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

uint64_t sub_2369412EC(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 **)(a1 + 64);
  if (!v1) {
    uint64_t v1 = (unsigned __int8 *)&unk_26889AD60;
  }
  return v1[248];
}

uint64_t sub_236941308(uint64_t a1)
{
  uint64_t v1 = (unsigned __int8 *)&unk_26889AD60;
  if (*(void *)(a1 + 64)) {
    uint64_t v1 = *(unsigned __int8 **)(a1 + 64);
  }
  return (v1[40] >> 3) & 1;
}

uint64_t sub_236941328(uint64_t a1)
{
  uint64_t v1 = *(_DWORD **)(a1 + 64);
  if (!v1) {
    uint64_t v1 = &unk_26889AD60;
  }
  int v2 = v1[68];
  unsigned int v3 = v2 - 2;
  unsigned int v4 = v2 - 1;
  if (v3 >= 3) {
    return 0;
  }
  else {
    return v4;
  }
}

char *sub_236941354(uint64_t a1, int a2)
{
  uint64_t result = (char *)(*(void *)(sub_2369131F8(a1 + 40, a2) + 48) & 0xFFFFFFFFFFFFFFFELL);
  if (result[23] < 0) {
    return *(char **)result;
  }
  return result;
}

float sub_23694138C(uint64_t a1, int a2)
{
  return *(float *)(sub_2369131F8(a1 + 40, a2) + 56);
}

BOOL sub_2369413AC(uint64_t a1, int a2)
{
  return *(_DWORD *)(sub_2369131F8(a1 + 40, a2) + 60) == 1;
}

BOOL sub_2369413D4(uint64_t a1, int a2)
{
  return *(_DWORD *)(sub_2369131F8(a1 + 40, a2) + 60) == 2;
}

BOOL sub_2369413FC(uint64_t a1, int a2)
{
  return *(_DWORD *)(sub_2369131F8(a1 + 40, a2) + 60) == 3;
}

BOOL sub_236941424(uint64_t a1, int a2)
{
  return *(_DWORD *)(sub_2369131F8(a1 + 40, a2) + 60) == 5;
}

BOOL sub_23694144C(uint64_t a1, int a2)
{
  return *(_DWORD *)(sub_2369131F8(a1 + 40, a2) + 60) == 4;
}

BOOL sub_236941474(uint64_t a1, int a2)
{
  return *(_DWORD *)(sub_2369131F8(a1 + 40, a2) + 60) == 6;
}

char *sub_23694149C(uint64_t a1)
{
  uint64_t v1 = *(char **)(a1 + 72);
  if (!v1) {
    uint64_t v1 = (char *)&unk_26889AEA8;
  }
  return v1 + 16;
}

char *sub_2369414B8(uint64_t a1)
{
  uint64_t v1 = *(char **)(a1 + 88);
  if (!v1) {
    uint64_t v1 = (char *)&unk_26889AEA8;
  }
  return v1 + 16;
}

void sub_2369414D4(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
}

uint64_t sub_2369414E8(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    sub_2369470F4((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1705);
    unsigned int v4 = sub_23694710C(v8, "CHECK failed: (index) >= (0): ");
    sub_236947248((uint64_t)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v8);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    sub_2369470F4((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1706);
    uint64_t v5 = sub_23694710C(v8, "CHECK failed: (index) < (current_size_): ");
    sub_236947248((uint64_t)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v8);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_2369415A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2369415C8(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 8);
  if ((v1 & 0x80000000) != 0)
  {
    sub_2369470F4((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1780);
    unsigned int v4 = sub_23694710C(v6, "CHECK failed: (n) >= (0): ");
    sub_236947248((uint64_t)&v5, (const char **)&v4->__r_.__value_.__l.__data_);
    return sub_236947250((uint64_t)v6);
  }
  else if (v1)
  {
    uint64_t v2 = *(void *)(result + 16) + 8;
    do
    {
      uint64_t v3 = *(void *)v2;
      if (*(char *)(*(void *)v2 + 23) < 0)
      {
        **(unsigned char **)uint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
      }
      v2 += 8;
      --v1;
    }
    while (v1);
    *(_DWORD *)(result + 8) = 0;
  }
  return result;
}

void sub_236941674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23694168C(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    sub_2369470F4((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1705);
    unsigned int v4 = sub_23694710C(v8, "CHECK failed: (index) >= (0): ");
    sub_236947248((uint64_t)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v8);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    sub_2369470F4((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1706);
    char v5 = sub_23694710C(v8, "CHECK failed: (index) < (current_size_): ");
    sub_236947248((uint64_t)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v8);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_23694174C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23694176C(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 8);
  if ((v1 & 0x80000000) != 0)
  {
    sub_2369470F4((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1780);
    char v5 = sub_23694710C(v7, "CHECK failed: (n) >= (0): ");
    sub_236947248((uint64_t)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    return sub_236947250((uint64_t)v7);
  }
  else if (v1)
  {
    uint64_t v2 = result;
    uint64_t v3 = (uint64_t *)(*(void *)(result + 16) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_23693D884(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 8) = 0;
  }
  return result;
}

void sub_236941804(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_23694181C(unsigned __int8 *result)
{
  uint64_t v1 = *((unsigned int *)result + 2);
  if ((v1 & 0x80000000) != 0)
  {
    sub_2369470F4((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1780);
    char v5 = sub_23694710C(v7, "CHECK failed: (n) >= (0): ");
    sub_236947248((uint64_t)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    return (unsigned __int8 *)sub_236947250((uint64_t)v7);
  }
  else if (v1)
  {
    uint64_t v2 = result;
    uint64_t v3 = (uint64_t *)(*((void *)result + 2) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_23693E91C(v4);
      --v1;
    }
    while (v1);
    *((_DWORD *)v2 + 2) = 0;
  }
  return result;
}

void sub_2369418B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2369418CC(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  if (a2 == result)
  {
    sub_2369470F4((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1799);
    uint64_t v4 = sub_23694710C(v11, "CHECK failed: (&other) != (this): ");
    sub_236947248((uint64_t)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    uint64_t result = sub_236947250((uint64_t)v11);
  }
  unsigned int v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    char v6 = (const std::string **)(*(void *)(a2 + 16) + 8);
    char v7 = (std::string **)sub_2369597DC((uint64_t *)v3, v5);
    uint64_t result = (uint64_t)sub_2369419BC((std::string *)v3, v7, v6, v5, **(_DWORD **)(v3 + 16) - *(_DWORD *)(v3 + 8));
    signed int v8 = *(_DWORD *)(v3 + 8) + v5;
    *(_DWORD *)(v3 + 8) = v8;
    uint64_t v9 = *(signed int **)(v3 + 16);
    if (*v9 < v8) {
      *uint64_t v9 = v8;
    }
  }
  return result;
}

void sub_2369419A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

std::string *sub_2369419BC(std::string *result, std::string **a2, const std::string **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v9 = (std::string::__raw *)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    uint64_t v11 = a3;
    char v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      int v13 = v14;
      uint64_t v15 = *v12++;
      uint64_t result = std::string::operator=(v15, v13);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    std::string::size_type v18 = v9->__words[0];
    unsigned int v19 = &a3[a5];
    uint64_t v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19;
      if (!v18) {
        operator new();
      }
      if (*(unsigned char *)(v18 + 24)) {
        (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v18 + 32) + 32) + 40))(*(void *)(*(void *)(v18 + 32) + 32), &unk_26E9CE540, 24);
      }
      unsigned int v22 = (std::string *)sub_236945764((void *)v18, 0x18uLL, (uint64_t)sub_2369414D4);
      v22->__r_.__value_.__r.__words[0] = 0;
      v22->__r_.__value_.__l.__size_ = 0;
      v22->__r_.__value_.__r.__words[2] = 0;
      uint64_t result = std::string::operator=(v22, v21);
      *v20++ = v22;
      ++v19;
      --v17;
    }
    while (v17);
  }
  return result;
}

uint64_t *sub_236941AF4(uint64_t *a1)
{
  sub_236941B30(a1);
  return sub_2369381D4(a1);
}

void sub_236941B30(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          uint64_t v5 = sub_23693D6EC(*v3);
          MEMORY[0x237E07580](v5, 0x1081C400F7E8713);
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

unint64_t sub_236941BB0(unint64_t result, uint64_t a2)
{
  unint64_t v3 = result;
  if (a2 == result)
  {
    sub_2369470F4((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1799);
    uint64_t v4 = sub_23694710C(v11, "CHECK failed: (&other) != (this): ");
    sub_236947248((uint64_t)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    uint64_t result = sub_236947250((uint64_t)v11);
  }
  unsigned int v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    char v6 = (uint64_t *)(*(void *)(a2 + 16) + 8);
    char v7 = (unint64_t *)sub_2369597DC((uint64_t *)v3, v5);
    uint64_t result = sub_236941CA0(v3, v7, v6, v5, **(_DWORD **)(v3 + 16) - *(_DWORD *)(v3 + 8));
    signed int v8 = *(_DWORD *)(v3 + 8) + v5;
    *(_DWORD *)(v3 + 8) = v8;
    uint64_t v9 = *(signed int **)(v3 + 16);
    if (*v9 < v8) {
      *uint64_t v9 = v8;
    }
  }
  return result;
}

void sub_236941C88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

unint64_t sub_236941CA0(unint64_t result, unint64_t *a2, uint64_t *a3, unsigned int a4, unsigned int a5)
{
  uint64_t v9 = (uint64_t *)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    uint64_t v11 = a3;
    char v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      uint64_t v13 = v14;
      unint64_t v15 = *v12++;
      uint64_t result = sub_236941D50(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    unsigned int v19 = &a3[a5];
    uint64_t v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      unsigned int v22 = sub_2369408AC(v18);
      uint64_t result = sub_236941D50(v21, (unint64_t)v22);
      *v20++ = (unint64_t)v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

unint64_t sub_236941D50(uint64_t a1, unint64_t a2)
{
  return sub_23693DD18(a2, a1);
}

uint64_t *sub_236941D60(uint64_t *a1)
{
  sub_236941D9C(a1);
  return sub_2369381D4(a1);
}

void sub_236941D9C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          uint64_t v5 = sub_23693E7C4(*v3);
          MEMORY[0x237E07580](v5, 0x10A1C40F497E4DALL);
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_236941E1C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    sub_2369470F4((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/repeated_field.h", 1799);
    uint64_t v4 = sub_23694710C(v11, "CHECK failed: (&other) != (this): ");
    sub_236947248((uint64_t)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v11);
  }
  unsigned int v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    char v6 = (uint64_t *)(*(void *)(a2 + 16) + 8);
    char v7 = (uint64_t *)sub_2369597DC((uint64_t *)a1, v5);
    sub_236941F0C((uint64_t *)a1, v7, v6, v5, **(_DWORD **)(a1 + 16) - *(_DWORD *)(a1 + 8));
    signed int v8 = *(_DWORD *)(a1 + 8) + v5;
    *(_DWORD *)(a1 + 8) = v8;
    uint64_t v9 = *(signed int **)(a1 + 16);
    if (*v9 < v8) {
      *uint64_t v9 = v8;
    }
  }
}

void sub_236941EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_236941F0C(uint64_t *a1, uint64_t *a2, uint64_t *a3, unsigned int a4, unsigned int a5)
{
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    uint64_t v11 = a3;
    char v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      uint64_t v13 = v14;
      uint64_t v15 = *v12++;
      sub_236941FBC(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *a1;
    unsigned int v19 = &a3[a5];
    uint64_t v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      unsigned int v22 = sub_236940A4C(v18);
      sub_236941FBC(v21, (uint64_t)v22);
      *v20++ = (uint64_t)v22;
      --v17;
    }
    while (v17);
  }
}

void sub_236941FBC(uint64_t a1, uint64_t a2)
{
}

void sub_236941FCC()
{
}

void sub_236942014()
{
}

void sub_236942070(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0xA1C409BE6959DLL);
  _Unwind_Resume(a1);
}

void *sub_236942094(void *a1, const char *a2, uint64_t a3)
{
  *a1 = &unk_26E9CE560;
  char v6 = a1 + 1;
  sub_236944CDC(a1 + 1);
  if (a3) {
    operator new();
  }
  char v7 = (void *)MEMORY[0x263F8C0E8];
  a1[2] = MEMORY[0x263F8C0E8];
  if ((*((unsigned char *)v7 + *(void *)(*v7 - 24) + 32) & 5) != 0)
  {
    unsigned int v15 = 5;
    sub_236912F84((uint64_t)v16);
    sub_236914270(v16, (uint64_t)"\"", 1);
    size_t v8 = strlen(a2);
    sub_236914270(v16, (uint64_t)a2, v8);
    sub_236914270(v16, (uint64_t)"\": ", 3);
    uint64_t v9 = __error();
    sub_236942DA8(*v9);
    if ((v14 & 0x80u) == 0) {
      uint64_t v10 = __p;
    }
    else {
      uint64_t v10 = (void **)__p[0];
    }
    if ((v14 & 0x80u) == 0) {
      uint64_t v11 = v14;
    }
    else {
      uint64_t v11 = (uint64_t)__p[1];
    }
    sub_236914270(v16, (uint64_t)v10, v11);
    sub_2369107FC(&v15, (uint64_t)&v19);
    sub_236944F04(v6, &v19);
    sub_236944CE4(&v19);
    if ((char)v14 < 0) {
      operator delete(__p[0]);
    }
    v16[0] = *MEMORY[0x263F8C2C8];
    *(void *)((char *)v16 + *(void *)(v16[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
    v16[1] = MEMORY[0x263F8C318] + 16;
    if (v17 < 0) {
      operator delete((void *)v16[9]);
    }
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    MEMORY[0x237E07510](&v18);
  }
  return a1;
}

void sub_236942308(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  sub_236944CE4((uint64_t *)(v16 - 56));
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_23691088C((uint64_t)&a15);
  sub_236944CE4(v15);
  _Unwind_Resume(a1);
}

void sub_236942384(void *a1)
{
  sub_2369425C8(a1);
  JUMPOUT(0x237E07580);
}

uint64_t sub_2369423BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_236944F00(a2, a1 + 8);
}

BOOL sub_2369423C8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void **)(a1 + 16);
  std::ios_base::getloc((const std::ios_base *)((char *)v3 + *(void *)(*v3 - 24)));
  uint64_t v4 = std::locale::use_facet(&v8, MEMORY[0x263F8C108]);
  unsigned __int8 v5 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v4->__vftable[2].~facet_0)(v4, 10);
  std::locale::~locale(&v8);
  char v6 = sub_23694264C(v3, a2, v5);
  return (*((unsigned char *)v6 + *(void *)(*v6 - 24) + 32) & 5) == 0;
}

void sub_236942498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::locale a10)
{
}

BOOL sub_2369424AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 16);
  unint64_t v3 = (void *)MEMORY[0x263F8C0E8];
  if (v2 == (void *)MEMORY[0x263F8C0E8])
  {
    if ((int)sub_236942B98() <= 2)
    {
      char v11 = 0;
      uint64_t v4 = sub_236914270(MEMORY[0x263F8C0F8], (uint64_t)"filesystem.cc", 13);
      sub_236914270(v4, (uint64_t)"(", 1);
      unsigned __int8 v5 = (void *)std::ostream::operator<<();
      char v6 = sub_236914270(v5, (uint64_t)") ", 2);
      char v7 = sub_236914270(v6, (uint64_t)"LOG(", 4);
      std::locale v8 = sub_236914270(v7, (uint64_t)"ERROR", 5);
      uint64_t v9 = sub_236914270(v8, (uint64_t)") ", 2);
      sub_236914270(v9, (uint64_t)"ReadAll is not supported for stdin.", 35);
      sub_23691311C(&v11);
    }
  }
  else
  {
    sub_23694283C(a2, *(void **)((char *)v2 + *(void *)(*v2 - 24) + 40), 0);
  }
  return v2 != v3;
}

void sub_2369425B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
}

void *sub_2369425C8(void *a1)
{
  *a1 = &unk_26E9CE560;
  uint64_t v2 = a1[2];
  if (v2 != MEMORY[0x263F8C0E8] && v2 != 0) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  sub_236944CE4(a1 + 1);
  return a1;
}

void *sub_23694264C(void *a1, uint64_t a2, unsigned __int8 a3)
{
  MEMORY[0x237E07330](&v11, a1, 1);
  if (!v11) {
    return a1;
  }
  if (*(char *)(a2 + 23) < 0)
  {
    **(unsigned char **)a2 = 0;
    *(void *)(a2 + 8) = 0;
  }
  else
  {
    *(unsigned char *)a2 = 0;
    *(unsigned char *)(a2 + 23) = 0;
  }
  uint64_t v6 = 0;
  while (1)
  {
    char v7 = *(void **)((char *)a1 + *(void *)(*a1 - 24) + 40);
    std::locale v8 = (unsigned char *)v7[3];
    if (v8 != (unsigned char *)v7[4])
    {
      v7[3] = v8 + 1;
      LOBYTE(v7) = *v8;
      goto LABEL_9;
    }
    LODWORD(v7) = (*(uint64_t (**)(void *))(*v7 + 80))(v7);
    if (v7 == -1) {
      break;
    }
LABEL_9:
    if (v7 == a3)
    {
      int v9 = 0;
      goto LABEL_17;
    }
    std::string::push_back((std::string *)a2, (std::string::value_type)v7);
    --v6;
    if (*(char *)(a2 + 23) < 0 && *(void *)(a2 + 8) == 0x7FFFFFFFFFFFFFF7)
    {
      int v9 = 4;
      goto LABEL_17;
    }
  }
  if (v6) {
    int v9 = 2;
  }
  else {
    int v9 = 6;
  }
LABEL_17:
  std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | v9);
  return a1;
}

void sub_2369427AC(void *a1)
{
  __cxa_begin_catch(a1);
  uint64_t v2 = *v1;
  *(_DWORD *)((char *)v1 + *(void *)(*v1 - 24) + 32) |= 1u;
  if ((*((unsigned char *)v1 + *(void *)(v2 - 24) + 36) & 1) == 0)
  {
    __cxa_end_catch();
    JUMPOUT(0x23694276CLL);
  }
  __cxa_rethrow();
}

void sub_236942828(_Unwind_Exception *a1)
{
}

void sub_23694283C(uint64_t a1, void *a2, void *a3)
{
  sub_2369428BC(&__p, a2, a3);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  MEMORY[0x237E07280](a1, p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_2369428A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_2369428BC(std::string *a1, void *a2, void *a3)
{
  char v11 = a3;
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  a1->__r_.__value_.__r.__words[0] = 0;
  while (1)
  {
    if (a2)
    {
      if (a2[3] == a2[4])
      {
        int v6 = (*(uint64_t (**)(void *))(*a2 + 72))(a2);
        int v5 = v6 == -1;
        if (v6 == -1) {
          a2 = 0;
        }
      }
      else
      {
        int v5 = 0;
      }
    }
    else
    {
      int v5 = 1;
    }
    BOOL result = sub_236942A1C(&v11);
    if (v5 == result) {
      break;
    }
    std::locale v8 = (std::string::value_type *)a2[3];
    if (v8 == (std::string::value_type *)a2[4]) {
      std::string::value_type v9 = (*(uint64_t (**)(void *))(*a2 + 72))(a2);
    }
    else {
      std::string::value_type v9 = *v8;
    }
    std::string::push_back(a1, v9);
    uint64_t v10 = a2[3];
    if (v10 == a2[4]) {
      (*(void (**)(void *))(*a2 + 80))(a2);
    }
    else {
      a2[3] = v10 + 1;
    }
  }
  return result;
}

void sub_2369429EC(void *a1)
{
  __cxa_begin_catch(a1);
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  __cxa_rethrow();
}

void sub_236942A08(_Unwind_Exception *a1)
{
}

BOOL sub_236942A1C(void **a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    if (v2[3] != v2[4]) {
      return 0;
    }
    if ((*(unsigned int (**)(void *))(*v2 + 72))(v2) != -1) {
      return *a1 == 0;
    }
    *a1 = 0;
  }
  return 1;
}

uint64_t sub_236942A9C()
{
  unsigned int v0 = atomic_load((unsigned int *)&unk_26889A4E8);
  if (v0 != -1) {
    return atomic_load((unsigned int *)&unk_26889A4E8);
  }
  sub_236942B24(&v3);
  uint64_t v1 = MEMORY[0x237E07430](&v3);
  std::random_device::~random_device(&v3);
  return v1;
}

void sub_236942AFC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, std::random_device a11, std::random_device a12)
{
  std::random_device::~random_device(&a11);
  __cxa_begin_catch(a1);
  atomic_load(v12);
  __cxa_end_catch();
  JUMPOUT(0x236942AE8);
}

std::random_device *sub_236942B24(std::random_device *a1)
{
  sub_236919B40(&__token, "/dev/urandom");
  std::random_device::random_device(a1, &__token);
  if (SHIBYTE(__token.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__token.__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_236942B7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_236942B98()
{
  return atomic_load((unsigned int *)&unk_2688A6E80);
}

uint64_t sub_236942BA8(unsigned __int8 *a1, uint64_t a2, uint64_t *a3)
{
  int v3 = (char)*a1;
  if ((v3 & 0x80000000) == 0)
  {
    *a3 = 1;
    return *a1;
  }
  unint64_t v5 = a2 - (void)a1;
  if ((unint64_t)(a2 - (void)a1) >= 2)
  {
    if ((v3 & 0xE0) == 0xC0)
    {
      char v6 = a1[1];
      if (v6 <= -65)
      {
        uint64_t result = v6 & 0x3F | ((v3 & 0x1F) << 6);
        if (result >= 0x80)
        {
          uint64_t v7 = 2;
LABEL_8:
          *a3 = v7;
          return result;
        }
      }
    }
    else if (v5 >= 3)
    {
      if ((v3 & 0xF0) == 0xE0)
      {
        int v8 = (char)a1[1];
        if (v8 <= -65)
        {
          char v9 = a1[2];
          if (v9 <= -65)
          {
            uint64_t result = v9 & 0x3F | ((v8 & 0x3F) << 6) & 0xFFF | ((v3 & 0xF) << 12);
            if (result >= 0x800
              && (((v3 & 0xF) << 12) - 57344 < 0x102000u || result >> 11 <= 0x1A))
            {
              uint64_t v7 = 3;
              goto LABEL_8;
            }
          }
        }
      }
      else if (v5 >= 4 && (v3 & 0xF8) == 0xF0)
      {
        int v10 = (char)a1[1];
        if (v10 <= -65)
        {
          int v11 = (char)a1[2];
          if (v11 <= -65)
          {
            char v12 = a1[3];
            if (v12 <= -65)
            {
              int v13 = ((v3 & 7) << 18) | ((v10 & 0x3F) << 12);
              uint64_t result = v12 & 0x3F | ((v11 & 0x3F) << 6) | v13;
              if (result >= 0x10000 && (v13 - 57344) < 0x102000)
              {
                uint64_t v7 = 4;
                goto LABEL_8;
              }
            }
          }
        }
      }
    }
  }
  *a3 = 1;
  return 65533;
}

uint64_t sub_236942CF0()
{
  unsigned int v0 = off_26B808D40;
  if ((*(unsigned char *)off_26B808D40(&off_26B808D40) & 1) == 0)
  {
    sub_236942A9C();
    uint64_t v2 = (_DWORD *)off_26B808D28(&off_26B808D28);
    *uint64_t v2 = v4;
    do
    {
      uint64_t v5 = v3(&off_26B808D28);
      *(_DWORD *)(v5 + 4 * v7) = v6;
    }
    while (v7 != 623);
    *(void *)(v3(&off_26B808D28) + 2496) = 0;
    *(unsigned char *)v0(&off_26B808D4sub_23692A244(&a9, 0) = 1;
  }
  return off_26B808D28(&off_26B808D28);
}

uint64_t sub_236942DA8(int a1)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  strerror_r(a1, __strerrbuf, 0x3FFuLL);
  sub_236912F84((uint64_t)v4);
  size_t v1 = strlen(__strerrbuf);
  uint64_t v2 = sub_236914270(v4, (uint64_t)__strerrbuf, v1);
  sub_236914270(v2, (uint64_t)" Error #", 8);
  std::ostream::operator<<();
  std::stringbuf::str();
  v4[0] = *MEMORY[0x263F8C2C8];
  *(void *)((char *)v4 + *(void *)(v4[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  v4[1] = MEMORY[0x263F8C318] + 16;
  if (v5 < 0) {
    operator delete((void *)v4[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x237E07510](&v6);
}

void sub_236942F38(_Unwind_Exception *exception_object)
{
}

unint64_t sub_236942F54(uint64_t a1, unint64_t a2)
{
  if (!a2) {
    sub_2369431E4();
  }
  return (a1 + a2 - 1) / a2 * a2;
}

void sub_236942F7C(std::string *this)
{
  LOBYTE(size) = *((unsigned char *)&this->__r_.__value_.__s + 23);
  if ((size & 0x80u) != 0) {
    std::string::size_type size = this->__r_.__value_.__l.__size_;
  }
  if ((size & 3) != 0)
  {
    do
    {
      std::string::push_back(this, 0);
      LOBYTE(v3) = *((unsigned char *)&this->__r_.__value_.__s + 23);
      if ((v3 & 0x80u) != 0) {
        std::string::size_type v3 = this->__r_.__value_.__l.__size_;
      }
    }
    while ((v3 & 3) != 0);
  }
}

void *sub_236942FE0@<X0>(void *a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  unint64_t v4 = a1[1];
  BOOL v5 = v4 >= a2;
  unint64_t v6 = v4 - a2;
  if (v5)
  {
    *a1 += a2;
    a1[1] = v6;
    return sub_236944CDC(a3);
  }
  else
  {
    unsigned int v9 = 13;
    uint64_t v7 = (void *)sub_236912F84((uint64_t)v10);
    sub_236914270(v7, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/src/util.cc", 63);
    sub_236914270(v10, (uint64_t)"(", 1);
    std::ostream::operator<<();
    sub_236914270(v10, (uint64_t)") [", 3);
    sub_236914270(v10, (uint64_t)"string.size() >= size", 21);
    sub_236914270(v10, (uint64_t)"] ", 2);
    sub_2369107FC(&v9, (uint64_t)a3);
    v10[0] = *MEMORY[0x263F8C2C8];
    *(void *)((char *)v10 + *(void *)(v10[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
    v10[1] = MEMORY[0x263F8C318] + 16;
    if (v11 < 0) {
      operator delete((void *)v10[9]);
    }
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    return (void *)MEMORY[0x237E07510](&v12);
  }
}

void sub_2369431CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2369431E4()
{
}

uint64_t sub_236943210(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (void *)sub_2369306AC(a1);
  *unint64_t v4 = &unk_26E9CE5C0;
  v4[1] = a2 + 16;
  sub_236911090((uint64_t)v4);
  return a1;
}

void sub_236943260(_Unwind_Exception *a1)
{
  sub_236910A8C(v1);
  _Unwind_Resume(a1);
}

void *sub_236943278(uint64_t a1, uint64_t a2, _DWORD *a3, unint64_t a4)
{
  uint64_t result = (void *)sub_23690FBA4(a1, a2, a3, a4);
  *uint64_t result = &unk_26E9CE5C0;
  return result;
}

void sub_2369432B0(void *a1)
{
  sub_236910A8C(a1);
  JUMPOUT(0x237E07580);
}

void sub_2369432E8(uint64_t *a1@<X0>, unsigned char *a2@<X1>, unint64_t a3@<X2>, void *a4@<X8>, float a5@<S0>)
{
  uint64_t v82 = *MEMORY[0x263EF8340];
  (*(void (**)(void **__return_ptr))(*a1 + 16))(&v66);
  if (v66)
  {
    sub_236944CE4((uint64_t *)&v66);
LABEL_3:
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    return;
  }
  sub_236944CE4((uint64_t *)&v66);
  if (!a3) {
    goto LABEL_3;
  }
  unint64_t v76 = 0;
  uint64_t v77 = 0;
  uint64_t v78 = 0;
  std::string __p = 0;
  uint64_t v74 = 0;
  uint64_t v75 = 0;
  if (a3 >> 59) {
    sub_236913FC4();
  }
  int v8 = 0;
  std::string __p = operator new(32 * a3);
  uint64_t v74 = (char *)__p;
  uint64_t v75 = (char *)__p + 32 * a3;
  memset(v71, 0, sizeof(v71));
  int v72 = 1065353216;
  long long v67 = 0u;
  long long v68 = 0u;
  uint64_t v69 = 0;
  uint64_t v70 = 256;
  v65[0] = (uint64_t)a1;
  v65[1] = (uint64_t)&v66;
  v65[2] = (uint64_t)&__p;
  v65[3] = (uint64_t)&v76;
  v65[4] = (uint64_t)v71;
  uint64_t v66 = &unk_26E9CE6C8;
  do
  {
    long long v81 = 0uLL;
    int v9 = sub_2369192C4(a1[2], a2, a3, (BOOL *)&v80 + 8);
    *(void *)&long long v81 = a2;
    *((void *)&v81 + 1) = v9;
    a3 -= v9;
    if (a3) {
      int v10 = v8 + 1;
    }
    else {
      int v10 = -1;
    }
    LODWORD(v8sub_23692A244(&a9, 0) = v8 - 1;
    DWORD1(v8sub_23692A244(&a9, 0) = v10;
    char v11 = v74;
    if (v74 >= v75)
    {
      unsigned __int8 v14 = (char *)__p;
      uint64_t v15 = (v74 - (unsigned char *)__p) >> 5;
      unint64_t v16 = v15 + 1;
      if ((unint64_t)(v15 + 1) >> 59) {
        sub_236913FC4();
      }
      uint64_t v17 = v75 - (unsigned char *)__p;
      if ((v75 - (unsigned char *)__p) >> 4 > v16) {
        unint64_t v16 = v17 >> 4;
      }
      if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFE0) {
        unint64_t v18 = 0x7FFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v18 = v16;
      }
      if (v18)
      {
        if (v18 >> 59) {
          sub_236913AB8();
        }
        uint64_t v19 = (char *)operator new(32 * v18);
      }
      else
      {
        uint64_t v19 = 0;
      }
      long long v20 = v81;
      uint64_t v21 = &v19[32 * v15];
      *(_OWORD *)uint64_t v21 = v80;
      *((_OWORD *)v21 + 1) = v20;
      unsigned int v22 = v21;
      if (v11 != v14)
      {
        do
        {
          long long v23 = *((_OWORD *)v11 - 1);
          *((_OWORD *)v22 - 2) = *((_OWORD *)v11 - 2);
          *((_OWORD *)v22 - 1) = v23;
          v22 -= 32;
          v11 -= 32;
        }
        while (v11 != v14);
        char v11 = v14;
      }
      unsigned int v24 = &v19[32 * v18];
      int v13 = v21 + 32;
      std::string __p = v22;
      uint64_t v74 = v21 + 32;
      uint64_t v75 = v24;
      if (v11) {
        operator delete(v11);
      }
    }
    else
    {
      long long v12 = v81;
      *(_OWORD *)uint64_t v74 = v80;
      *((_OWORD *)v11 + 1) = v12;
      int v13 = v11 + 32;
    }
    a2 += v9;
    ++v8;
    uint64_t v74 = v13;
  }
  while (a3);
  if (__p == v13)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
  }
  else
  {
    if ((unint64_t)(v13 - (unsigned char *)__p) >= 0x21)
    {
      unint64_t v25 = 1;
      do
      {
        sub_236943A4C(v65, v25 - 1, v25);
        ++v25;
      }
      while (v25 < (v74 - (unsigned char *)__p) >> 5);
    }
    char v26 = (int **)v76;
    uint64_t v27 = v77;
    if (v76 != v77)
    {
      uint64_t v28 = 0;
      do
      {
        uint64_t v29 = *v26;
        if (v27 - (char *)v26 >= 9)
        {
          uint64_t v30 = 0;
          uint64_t v31 = (v27 - (char *)v26) >> 3;
          unsigned int v32 = v26;
          do
          {
            uint64_t v33 = v32;
            v32 += v30 + 1;
            uint64_t v34 = 2 * v30;
            uint64_t v30 = (2 * v30) | 1;
            uint64_t v35 = v34 + 2;
            if (v35 < v31)
            {
              unsigned int v36 = v32[1];
              float v37 = *((float *)*v32 + 2);
              float v38 = *((float *)v36 + 2);
              if (v37 < v38 || v37 == v38 && **v32 > *v36)
              {
                ++v32;
                uint64_t v30 = v35;
              }
            }
            std::string *v33 = *v32;
          }
          while (v30 <= (uint64_t)((unint64_t)(v31 - 2) >> 1));
          uint64_t v39 = (int **)(v27 - 8);
          if (v32 == v39)
          {
            *unsigned int v32 = v29;
          }
          else
          {
            *unsigned int v32 = *v39;
            *uint64_t v39 = v29;
            sub_236943FC0((uint64_t)v26, (uint64_t)(v32 + 1), v32 + 1 - v26);
          }
        }
        v77 -= 8;
        int v40 = *v29;
        uint64_t v41 = *v29;
        uint64_t v42 = __p;
        uint64_t v43 = *((void *)__p + 4 * v41 + 3);
        if (!v43) {
          goto LABEL_58;
        }
        uint64_t v44 = v29[1];
        uint64_t v45 = *((void *)__p + 4 * v44 + 3);
        if (!v45) {
          goto LABEL_58;
        }
        uint64_t v46 = v45 + v43;
        if (v46 != *((void *)v29 + 2)) {
          goto LABEL_58;
        }
        if (a5 > 0.0)
        {
          if (a5 >= 1.0) {
            goto LABEL_58;
          }
          if (!v28) {
            uint64_t v28 = sub_236942CF0();
          }
          unsigned int v47 = sub_23692C694(v28);
          if (((double)v47 + (double)sub_23692C694(v28) * 4294967300.0) * 5.42101086e-20 + 0.0 < a5) {
            goto LABEL_58;
          }
          uint64_t v42 = __p;
          int v40 = *v29;
          uint64_t v44 = v29[1];
          uint64_t v41 = *v29;
          uint64_t v46 = *((void *)__p + 4 * v44 + 3) + *((void *)__p + 4 * v41 + 3);
        }
        uint64_t v48 = (char *)&v42[8 * v41];
        uint64_t v49 = (char *)&v42[8 * v44];
        *((void *)v48 + 3) = v46;
        *((_DWORD *)v48 + 1) = *((_DWORD *)v49 + 1);
        uint64_t v50 = *((unsigned int *)v49 + 1);
        if ((v50 & 0x80000000) == 0) {
          v42[8 * v50] = v40;
        }
        *((void *)v49 + 2) = "";
        *((void *)v49 + 3) = 0;
        sub_236943A4C(v65, *((_DWORD *)__p + 8 * v41), v40);
        sub_236943A4C(v65, *v29, *((_DWORD *)__p + 8 * *v29 + 1));
LABEL_58:
        char v26 = (int **)v76;
        uint64_t v27 = v77;
      }
      while (v76 != v77);
    }
    v79[3] = 0;
    uint64_t v51 = operator new(0x20uLL);
    *uint64_t v51 = &unk_26E9CE738;
    v51[1] = a1;
    v51[2] = v79;
    void v51[3] = v71;
    *((void *)&v81 + 1) = v51;
    sub_236944920(&v80, v79);
    sub_236944330(&v80);
    int v52 = 0;
    int v53 = (void *)MEMORY[0x263F8C0F8];
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    do
    {
      if (v52 < 0)
      {
        LOBYTE(v8sub_23692A244(&a9, 0) = 1;
        uint64_t v54 = sub_236914270(v53, (uint64_t)"bpe_model.cc", 12);
        sub_236914270(v54, (uint64_t)"(", 1);
        uint64_t v55 = (void *)std::ostream::operator<<();
        uint64_t v56 = sub_236914270(v55, (uint64_t)") [", 3);
        unint64_t v57 = sub_236914270(v56, (uint64_t)"(index) >= (0)", 14);
        sub_236914270(v57, (uint64_t)"] ", 2);
        sub_23691311C(&v80);
      }
      unint64_t v58 = __p;
      if (v52 >= (int)((unint64_t)(v74 - (unsigned char *)__p) >> 5))
      {
        LOBYTE(v8sub_23692A244(&a9, 0) = 1;
        uint64_t v59 = sub_236914270(v53, (uint64_t)"bpe_model.cc", 12);
        sub_236914270(v59, (uint64_t)"(", 1);
        uint64_t v60 = (void *)std::ostream::operator<<();
        unint64_t v61 = sub_236914270(v60, (uint64_t)") [", 3);
        uint64_t v62 = sub_236914270(v61, (uint64_t)"(index) < (static_cast<int>(symbols.size()))", 44);
        sub_236914270(v62, (uint64_t)"] ", 2);
        sub_23691311C(&v80);
        unint64_t v58 = __p;
      }
      sub_236943E9C((uint64_t)v79, v58[4 * v52 + 2], v58[4 * v52 + 3], (uint64_t)a4);
      int v52 = *((_DWORD *)__p + 8 * v52 + 1);
    }
    while (v52 != -1);
    sub_236944330(v79);
  }
  sub_236943EF8(&v66);
  sub_23692F72C((uint64_t)v71);
  if (__p)
  {
    uint64_t v74 = (char *)__p;
    operator delete(__p);
  }
  if (v76)
  {
    uint64_t v77 = (char *)v76;
    operator delete(v76);
  }
}

void sub_2369439B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  sub_236944330((void *)(v33 - 200));
  sub_236943EF8(&a16);
  sub_23692F72C((uint64_t)&a23);
  if (__p)
  {
    a30 = (uint64_t)__p;
    operator delete(__p);
  }
  if (a32)
  {
    a33 = (uint64_t)a32;
    operator delete(a32);
  }
  _Unwind_Resume(a1);
}

__n128 sub_236943A4C(uint64_t *a1, int a2, int a3)
{
  if (a2 != -1 && a3 != -1)
  {
    uint64_t v4 = a2;
    uint64_t v5 = *(void *)a1[2];
    if (!*(unsigned char *)(v5 + 32 * a2 + 8))
    {
      uint64_t v6 = a3;
      uint64_t v7 = v5 + 32 * a3;
      if (!*(unsigned char *)(v7 + 8))
      {
        uint64_t v8 = *a1;
        uint64_t v9 = v5 + 32 * a2;
        int v10 = *(unsigned char **)(v9 + 16);
        uint64_t v11 = *(void *)(v7 + 24) + *(void *)(v9 + 24);
        v47[0] = v10;
        v47[1] = v11;
        long long v12 = *(unsigned int **)(v8 + 40);
        unsigned int v13 = *v12;
        if (v11)
        {
          uint64_t v14 = 0;
          uint64_t v15 = v11;
          while (1)
          {
            int v16 = *v10++;
            v14 ^= (v13 >> 10 << ((v13 >> 6) & 8)) ^ v16;
            unsigned int v13 = v12[v14];
            if ((v13 & 0x800000FF) != v16) {
              break;
            }
            if (!--v15) {
              goto LABEL_17;
            }
          }
        }
        else
        {
          int v17 = *v10;
          if (*v10)
          {
            uint64_t v14 = 0;
            unint64_t v18 = v10 + 1;
            while (1)
            {
              v14 ^= (v13 >> 10 << ((v13 >> 6) & 8)) ^ v17;
              unsigned int v13 = v12[v14];
              if ((v13 & 0x800000FF) != v17) {
                break;
              }
              int v19 = *v18++;
              int v17 = v19;
              if (!v19) {
                goto LABEL_17;
              }
            }
          }
          else
          {
            uint64_t v14 = 0;
LABEL_17:
            if ((v13 & 0x100) != 0)
            {
              unsigned int v20 = v12[v14 ^ (v13 >> 10 << ((v13 >> 6) & 8))];
              uint64_t v21 = (void *)a1[1];
              uint64_t v22 = v21[5];
              unint64_t v23 = v21[6];
              unint64_t v24 = v21[4];
              if (v24 >= v23)
              {
                unint64_t v24 = 0;
                ++v22;
                v21[4] = 0;
                v21[5] = v22;
              }
              uint64_t v25 = v21[1];
              if (v22 == (v21[2] - v25) >> 3)
              {
                is_mul_ok(v23, 0x18uLL);
                operator new[]();
              }
              uint64_t v26 = *(void *)(v25 + 8 * v22) + 24 * v24;
              v21[4] = v24 + 1;
              *(_DWORD *)uint64_t v26 = a2;
              *(_DWORD *)(v26 + 4) = a3;
              unsigned int v44 = v20 & 0x7FFFFFFF;
              *(float *)(v26 + 8) = (*(float (**)(uint64_t))(*(void *)v8 + 136))(v8);
              *(void *)(v26 + 16) = v11;
              uint64_t v27 = (uint64_t *)a1[3];
              uint64_t v29 = (void *)v27[1];
              unint64_t v28 = v27[2];
              if ((unint64_t)v29 >= v28)
              {
                uint64_t v32 = *v27;
                uint64_t v33 = ((uint64_t)v29 - *v27) >> 3;
                unint64_t v34 = v33 + 1;
                if ((unint64_t)(v33 + 1) >> 61) {
                  sub_236913FC4();
                }
                uint64_t v35 = v28 - v32;
                if (v35 >> 2 > v34) {
                  unint64_t v34 = v35 >> 2;
                }
                if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v36 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v36 = v34;
                }
                if (v36)
                {
                  if (v36 >> 61) {
                    sub_236913AB8();
                  }
                  float v37 = (char *)operator new(8 * v36);
                }
                else
                {
                  float v37 = 0;
                }
                float v38 = (uint64_t *)&v37[8 * v33];
                *float v38 = v26;
                uint64_t v30 = (uint64_t)(v38 + 1);
                if (v29 == (void *)v32)
                {
                  uint64_t v31 = v44;
                }
                else
                {
                  uint64_t v31 = v44;
                  do
                  {
                    uint64_t v39 = *--v29;
                    *--float v38 = v39;
                  }
                  while (v29 != (void *)v32);
                  uint64_t v29 = (void *)*v27;
                }
                *uint64_t v27 = (uint64_t)v38;
                v27[1] = v30;
                std::string v27[2] = (uint64_t)&v37[8 * v36];
                if (v29) {
                  operator delete(v29);
                }
              }
              else
              {
                *uint64_t v29 = v26;
                uint64_t v30 = (uint64_t)(v29 + 1);
                uint64_t v31 = v44;
              }
              v27[1] = v30;
              sub_236943FC0(*v27, v30, (v30 - *v27) >> 3);
              if ((*(unsigned int (**)(void, uint64_t))(**(void **)(v8 + 8) + 128))(*(void *)(v8 + 8), v31))
              {
                uint64_t v41 = *(void *)a1[2];
                __n128 v45 = *(__n128 *)(v41 + 32 * v4 + 16);
                __n128 v46 = *(__n128 *)(v41 + 32 * v6 + 16);
                uint64_t v42 = a1[4];
                uint64_t v48 = v47;
                uint64_t v43 = (__n128 *)sub_236944058(v42, (uint64_t)v47, (uint64_t)&unk_23698E634, &v48);
                __n128 result = v45;
                _OWORD v43[2] = v45;
                v43[3] = v46;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_236943E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v7[0] = a2;
  v7[1] = a3;
  uint64_t v6 = a4;
  uint64_t v4 = *(void *)(a1 + 24);
  if (!v4) {
    sub_2369443B4();
  }
  return (*(uint64_t (**)(uint64_t, void *, uint64_t *))(*(void *)v4 + 48))(v4, v7, &v6);
}

void *sub_236943EF8(void *a1)
{
  *a1 = &unk_26E9CE6C8;
  uint64_t v2 = (void *)a1[1];
  std::string::size_type v3 = (void *)a1[2];
  if (v2 != v3)
  {
    do
    {
      if (*v2) {
        MEMORY[0x237E07550](*v2, 0x1000C801E56706BLL);
      }
      ++v2;
    }
    while (v2 != v3);
    uint64_t v2 = (void *)a1[1];
  }
  if (v2)
  {
    a1[2] = v2;
    operator delete(v2);
  }
  return a1;
}

uint64_t sub_236943F88(uint64_t a1)
{
  return (*(uint64_t (**)(double))(*(void *)a1 + 56))(0.0);
}

uint64_t sub_236943FB0()
{
  return 1;
}

uint64_t sub_236943FB8()
{
  return 0;
}

uint64_t sub_236943FC0(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = a3 - 2;
  if (a3 >= 2)
  {
    unint64_t v4 = v3 >> 1;
    uint64_t v5 = result + 8 * (v3 >> 1);
    uint64_t v6 = *(_DWORD **)v5;
    uint64_t v7 = *(void *)(a2 - 8);
    float v8 = *(float *)(*(void *)v5 + 8);
    float v9 = *(float *)(v7 + 8);
    if (v8 < v9 || v8 == v9 && *v6 > *(_DWORD *)v7)
    {
      *(void *)(a2 - 8) = v6;
      if (v3 >= 2)
      {
        while (1)
        {
          unint64_t v11 = v4 - 1;
          unint64_t v4 = (v4 - 1) >> 1;
          uint64_t v10 = result + 8 * v4;
          long long v12 = *(_DWORD **)v10;
          float v13 = *(float *)(*(void *)v10 + 8);
          if (v13 >= v9 && (v13 != v9 || *v12 <= *(_DWORD *)v7)) {
            break;
          }
          *(void *)uint64_t v5 = v12;
          uint64_t v5 = result + 8 * v4;
          if (v11 <= 1) {
            goto LABEL_11;
          }
        }
      }
      uint64_t v10 = v5;
LABEL_11:
      *(void *)uint64_t v10 = v7;
    }
  }
  return result;
}

void *sub_236944058(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD **a4)
{
  float v8 = (void *)(a1 + 24);
  unint64_t v9 = sub_2369442D0(a1 + 24, *(uint64_t **)a2, *(void *)(a2 + 8));
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }
    uint64_t v14 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      uint64_t v15 = *v14;
      if (*v14)
      {
        uint64_t v18 = a2;
        int v16 = *(uint64_t **)a2;
        size_t v17 = *(void *)(v18 + 8);
        do
        {
          unint64_t v19 = *((void *)v15 + 1);
          if (v19 == v10)
          {
            if (*((void *)v15 + 3) == v17 && !memcmp(*((const void **)v15 + 2), v16, v17)) {
              return v15;
            }
          }
          else
          {
            if (v13 > 1)
            {
              if (v19 >= v11) {
                v19 %= v11;
              }
            }
            else
            {
              v19 &= v11 - 1;
            }
            if (v19 != v4) {
              break;
            }
          }
          uint64_t v15 = *(void **)v15;
        }
        while (v15);
      }
    }
  }
  uint64_t v15 = operator new(0x40uLL);
  *(void *)uint64_t v15 = 0;
  *((void *)v15 + 1) = v10;
  *((_OWORD *)v15 + 1) = **a4;
  *((_OWORD *)v15 + 2) = 0u;
  *((_OWORD *)v15 + 3) = 0u;
  float v20 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v21 = *(float *)(a1 + 32);
  if (!v11 || (float)(v21 * (float)v11) < v20)
  {
    BOOL v22 = 1;
    if (v11 >= 3) {
      BOOL v22 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v23 = v22 | (2 * v11);
    unint64_t v24 = vcvtps_u32_f32(v20 / v21);
    if (v23 <= v24) {
      size_t v25 = v24;
    }
    else {
      size_t v25 = v23;
    }
    sub_236913AEC(a1, v25);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  uint64_t v26 = *(void *)a1;
  uint64_t v27 = *(void **)(*(void *)a1 + 8 * v4);
  if (v27)
  {
    *(void *)uint64_t v15 = *v27;
LABEL_40:
    *uint64_t v27 = v15;
    goto LABEL_41;
  }
  *(void *)uint64_t v15 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v15;
  *(void *)(v26 + 8 * v4) = a1 + 16;
  if (*(void *)v15)
  {
    unint64_t v28 = *(void *)(*(void *)v15 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v28 >= v11) {
        v28 %= v11;
      }
    }
    else
    {
      v28 &= v11 - 1;
    }
    uint64_t v27 = (void *)(*(void *)a1 + 8 * v28);
    goto LABEL_40;
  }
LABEL_41:
  ++*v8;
  return v15;
}

void sub_2369442BC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_2369442D0(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  return sub_2369135A4((uint64_t)&v4, a2, a3);
}

void sub_2369442F8(void *a1)
{
  sub_236943EF8(a1);
  JUMPOUT(0x237E07580);
}

void *sub_236944330(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_2369443B4()
{
  exception = __cxa_allocate_exception(8uLL);
  void *exception = &unk_26E9CE710;
  __cxa_throw(exception, (struct type_info *)&unk_26E9CE6E8, (void (*)(void *))std::exception::~exception);
}

void sub_236944404(std::exception *a1)
{
  std::exception::~exception(a1);
  JUMPOUT(0x237E07580);
}

void sub_236944440()
{
}

__n128 sub_236944454(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = &unk_26E9CE738;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 sub_2369444A8(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E9CE738;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_2369444E0(uint64_t a1, void *a2, void ***a3)
{
  uint64_t v4 = a2[1];
  uint64_t v5 = *a3;
  *(void *)&long long v33 = *a2;
  *((void *)&v33 + 1) = v4;
  uint64_t v6 = *(void ***)(a1 + 8);
  uint64_t v7 = ((uint64_t (*)(void **, void, uint64_t))(*v6)[14])(v6, v33, v4);
  if (v7 == -1 || ((*(uint64_t (**)(void *, uint64_t))(*v6[1] + 128))(v6[1], v7) & 1) == 0)
  {
    unint64_t v10 = (char *)v5[2];
    unint64_t v11 = (char *)v5[1];
    if (v11 >= v10)
    {
      unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * ((v11 - (unsigned char *)*v5) >> 3);
      unint64_t v14 = v13 + 1;
      if (v13 + 1 <= 0xAAAAAAAAAAAAAAALL)
      {
        unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * ((v10 - (unsigned char *)*v5) >> 3);
        if (2 * v15 > v14) {
          unint64_t v14 = 2 * v15;
        }
        if (v15 >= 0x555555555555555) {
          unint64_t v16 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v16 = v14;
        }
        size_t v17 = (char *)sub_236913FDC((uint64_t)(v5 + 2), v16);
        uint64_t v18 = &v17[24 * v13];
        float v20 = &v17[24 * v19];
        *(_OWORD *)uint64_t v18 = v33;
        *((_DWORD *)v18 + 4) = v7;
        uint8x8_t v12 = v18 + 24;
        BOOL v22 = (char *)*v5;
        float v21 = (char *)v5[1];
        if (v21 == *v5) {
          goto LABEL_16;
        }
        do
        {
          long long v23 = *(_OWORD *)(v21 - 24);
          *((void *)v18 - 1) = *((void *)v21 - 1);
          *(_OWORD *)(v18 - 24) = v23;
          v18 -= 24;
          v21 -= 24;
        }
        while (v21 != v22);
        goto LABEL_15;
      }
LABEL_30:
      sub_236913FC4();
    }
  }
  else
  {
    float v8 = sub_2369447B8(*(void **)(a1 + 24), (uint64_t)&v33);
    if (v8)
    {
      unint64_t v9 = (uint64_t *)v8;
      sub_236943E9C(*(void *)(a1 + 16), v9[4], v9[5], (uint64_t)v5);
      sub_236943E9C(*(void *)(a1 + 16), v9[6], v9[7], (uint64_t)v5);
      return;
    }
    unint64_t v24 = (char *)v5[2];
    unint64_t v11 = (char *)v5[1];
    if (v11 >= v24)
    {
      unint64_t v25 = 0xAAAAAAAAAAAAAAABLL * ((v11 - (unsigned char *)*v5) >> 3);
      unint64_t v26 = v25 + 1;
      if (v25 + 1 <= 0xAAAAAAAAAAAAAAALL)
      {
        unint64_t v27 = 0xAAAAAAAAAAAAAAABLL * ((v24 - (unsigned char *)*v5) >> 3);
        if (2 * v27 > v26) {
          unint64_t v26 = 2 * v27;
        }
        if (v27 >= 0x555555555555555) {
          unint64_t v28 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v28 = v26;
        }
        uint64_t v29 = (char *)sub_236913FDC((uint64_t)(v5 + 2), v28);
        uint64_t v18 = &v29[24 * v25];
        float v20 = &v29[24 * v30];
        *(_OWORD *)uint64_t v18 = v33;
        *((_DWORD *)v18 + 4) = v7;
        uint8x8_t v12 = v18 + 24;
        uint64_t v31 = (char *)*v5;
        float v21 = (char *)v5[1];
        if (v21 == *v5) {
          goto LABEL_16;
        }
        do
        {
          long long v32 = *(_OWORD *)(v21 - 24);
          *((void *)v18 - 1) = *((void *)v21 - 1);
          *(_OWORD *)(v18 - 24) = v32;
          v18 -= 24;
          v21 -= 24;
        }
        while (v21 != v31);
LABEL_15:
        float v21 = (char *)*v5;
LABEL_16:
        *uint64_t v5 = v18;
        v5[1] = v12;
        v5[2] = v20;
        if (v21) {
          operator delete(v21);
        }
        goto LABEL_18;
      }
      goto LABEL_30;
    }
  }
  *(_OWORD *)unint64_t v11 = v33;
  *((_DWORD *)v11 + 4) = v7;
  uint8x8_t v12 = v11 + 24;
LABEL_18:
  v5[1] = v12;
}

uint64_t sub_23694476C(uint64_t a1, uint64_t a2)
{
  if (sub_2369448D0(a2, (uint64_t)&unk_26E9CE7A8)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

void *sub_2369447AC()
{
  return &unk_26E9CE7A8;
}

uint64_t **sub_2369447B8(void *a1, uint64_t a2)
{
  unint64_t v4 = sub_2369442D0((uint64_t)(a1 + 3), *(uint64_t **)a2, *(void *)(a2 + 8));
  int8x8_t v5 = (int8x8_t)a1[1];
  if (!*(void *)&v5) {
    return 0;
  }
  unint64_t v6 = v4;
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  unint64_t v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v9 = v4;
    if (v4 >= *(void *)&v5) {
      unint64_t v9 = v4 % *(void *)&v5;
    }
  }
  else
  {
    unint64_t v9 = (*(void *)&v5 - 1) & v4;
  }
  unint64_t v10 = *(uint64_t ****)(*a1 + 8 * v9);
  if (!v10) {
    return 0;
  }
  unint64_t v11 = *v10;
  if (*v10)
  {
    uint64_t v14 = a2;
    uint8x8_t v12 = *(uint64_t **)a2;
    size_t v13 = *(void *)(v14 + 8);
    do
    {
      unint64_t v15 = (unint64_t)v11[1];
      if (v15 == v6)
      {
        if (v11[3] == (uint64_t *)v13 && !memcmp(v11[2], v12, v13)) {
          return v11;
        }
      }
      else
      {
        if (v8 > 1)
        {
          if (v15 >= *(void *)&v5) {
            v15 %= *(void *)&v5;
          }
        }
        else
        {
          v15 &= *(void *)&v5 - 1;
        }
        if (v15 != v9) {
          return 0;
        }
      }
      unint64_t v11 = (uint64_t **)*v11;
    }
    while (v11);
  }
  return v11;
}

BOOL sub_2369448D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if (v2 == v3) {
    return 1;
  }
  if ((v3 & v2) < 0 != __OFSUB__(v2, v3)) {
    return strcmp((const char *)(v2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  }
  return 0;
}

void *sub_236944920(void *result, void *a2)
{
  v6[3] = *MEMORY[0x263EF8340];
  if (a2 != result)
  {
    uint64_t v3 = result;
    unint64_t v4 = (void *)result[3];
    int8x8_t v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        __n128 result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        __n128 result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      __n128 result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_236944B80(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_236912F70(a1);
}

void sub_236944B8C()
{
  if (!dword_26889B020)
  {
    unsigned int v0 = sub_236944BD8(MEMORY[0x263F8C0F8], "Program terminated with an unrecoverable error.");
    size_t v1 = sub_236944C20(v0);
    sub_236944CD8(v1);
    exit(-1);
  }
  dword_26889B020 = 2;
}

void *sub_236944BD8(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  return sub_236914270(a1, (uint64_t)__s, v4);
}

void *sub_236944C20(void *a1)
{
  std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)));
  uint64_t v2 = std::locale::use_facet(&v4, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v2->__vftable[2].~facet_0)(v2, 10);
  std::locale::~locale(&v4);
  std::ostream::put();
  std::ostream::flush();
  return a1;
}

void sub_236944CC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::locale a10)
{
}

void *sub_236944CDC(void *result)
{
  *__n128 result = 0;
  return result;
}

uint64_t *sub_236944CE4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2) {
    sub_2369450EC((uint64_t)a1, v2);
  }
  return a1;
}

void sub_236944D1C()
{
}

void sub_236944E28(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *v1;
  *size_t v1 = 0;
  if (v3) {
    sub_2369450EC((uint64_t)v1, v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_236944E4C(void *result, void *a2)
{
  if (*a2) {
    operator new();
  }
  *__n128 result = 0;
  return result;
}

void sub_236944EDC(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x1012C40849EBCB1);
  _Unwind_Resume(a1);
}

void sub_236944F04(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  if (*a1 != *a2)
  {
    if (*a2) {
      operator new();
    }
    *a1 = 0;
    if (v3)
    {
      sub_2369450EC((uint64_t)a1, v3);
    }
  }
}

void sub_236944FC8(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x1012C40849EBCB1);
  _Unwind_Resume(a1);
}

const char *sub_236944FEC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (!*a1) {
    return "";
  }
  __n128 result = (const char *)(v1 + 8);
  if (*(char *)(v1 + 31) < 0) {
    return *(const char **)result;
  }
  return result;
}

std::string *sub_236945018@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v3 = *(_DWORD **)a1;
  if (*(void *)a1)
  {
    a2->__r_.__value_.__r.__words[0] = 0;
    a2->__r_.__value_.__l.__size_ = 0;
    a2->__r_.__value_.__r.__words[2] = 0;
    unsigned int v5 = *v3 - 1;
    if (v5 < 0x10) {
      MEMORY[0x237E07270](a2, (&off_264CB41D8)[v5]);
    }
    std::string::append(a2, ": ");
    int v6 = *(char *)(*(void *)a1 + 31);
    if (v6 >= 0) {
      uint8x8_t v7 = (const std::string::value_type *)(*(void *)a1 + 8);
    }
    else {
      uint8x8_t v7 = *(const std::string::value_type **)(*(void *)a1 + 8);
    }
    if (v6 >= 0) {
      std::string::size_type v8 = *(unsigned __int8 *)(*(void *)a1 + 31);
    }
    else {
      std::string::size_type v8 = *(void *)(*(void *)a1 + 16);
    }
    return std::string::append(a2, v7, v8);
  }
  else
  {
    return (std::string *)sub_236919B40(a2, "OK");
  }
}

void sub_2369450D0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_2369450EC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    if (*(char *)(a2 + 31) < 0) {
      operator delete(*(void **)(a2 + 8));
    }
    JUMPOUT(0x237E07580);
  }
}

void *sub_236945160()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2688A6E90, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2688A6E90))
  {
    operator new();
  }
  unsigned int v0 = (pthread_key_t *)qword_2688A6E88;
  return sub_236945230(v0);
}

void sub_2369451F8(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x1000C4000313F17);
  __cxa_guard_abort(&qword_2688A6E90);
  _Unwind_Resume(a1);
}

void *sub_236945230(pthread_key_t *a1)
{
  uint64_t v2 = pthread_getspecific(*a1);
  if (!v2)
  {
    uint64_t v2 = operator new(0x40uLL, (std::align_val_t)0x40uLL);
    *(_OWORD *)uint64_t v2 = xmmword_23698EE80;
    v2[2] = 0;
    pthread_setspecific(*a1, v2);
  }
  return v2;
}

uint64_t sub_23694529C(uint64_t a1, unint64_t a2)
{
  if (*(void *)(a1 + 16) < a2)
  {
    sub_2369470F4((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/arena_impl.h", 111);
    std::locale v4 = sub_23694710C(v7, "CHECK failed: n <= size_: ");
    sub_236947248((uint64_t)&v6, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v7);
  }
  return a1 + a2;
}

void sub_236945314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_236945348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = v6 + 72;
  if (v6 + 72 > *(void *)(a1 + 16))
  {
    sub_2369470F4((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/arena.cc", 398);
    std::string::size_type v8 = sub_23694710C(v13, "CHECK failed: (pos + ArenaImpl::kSerialArenaSize) <= (b->size()): ");
    sub_236947248((uint64_t)&v12, (const char **)&v8->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v13);
  }
  unint64_t v9 = (void *)sub_23694529C(a1, v6);
  *(void *)(a1 + 8) = v7;
  *unint64_t v9 = a3;
  v9[1] = a2;
  v9[2] = a1;
  v9[5] = sub_23694529C(a1, v7);
  uint64_t v10 = sub_23694529C(a1, *(void *)(a1 + 16));
  void v9[3] = 0;
  v9[7] = 0;
  v9[8] = 0;
  v9[6] = v10;
  return v9;
}

void sub_23694541C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_236945448(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void *sub_236945464(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 32);
  if (a2 == -1)
  {
    if (v5) {
      unint64_t v7 = *(void *)v5;
    }
    else {
      unint64_t v7 = 256;
    }
  }
  else
  {
    if (v5) {
      unint64_t v6 = *(void *)(v5 + 8);
    }
    else {
      unint64_t v6 = 0x2000;
    }
    if (v6 >= 2 * a2) {
      unint64_t v7 = 2 * a2;
    }
    else {
      unint64_t v7 = v6;
    }
  }
  if (a3 >= 0xFFFFFFFFFFFFFFE8)
  {
    sub_2369470F4((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/arena.cc", 245);
    std::string::size_type v8 = sub_23694710C(v12, "CHECK failed: (min_bytes) <= (std::numeric_limits<size_t>::max() - kBlockHeaderSize): ");
    sub_236947248((uint64_t)&v11, (const char **)&v8->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v12);
    uint64_t v5 = *(void *)(a1 + 32);
  }
  if (v7 <= a3 + 24) {
    size_t v9 = a3 + 24;
  }
  else {
    size_t v9 = v7;
  }
  if (v5) {
    __n128 result = (void *)(*(uint64_t (**)(size_t))(v5 + 16))(v9);
  }
  else {
    __n128 result = operator new(v9);
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)(a1 + 16), v9, memory_order_relaxed);
  return result;
}

void sub_236945550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_236945568(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (a1) {
    uint64_t v6 = *(void *)(a1 + 16);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = (uint64_t *)sub_236945464(a3, v6, a2);
  return sub_236945AF8(v7, v8, a1, 0, 0);
}

void *sub_2369455C4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  __n128 result = (void *)a1[3];
  do
  {
    if (result)
    {
      if ((unint64_t)(2 * *result) >= 0x40) {
        uint64_t v7 = 64;
      }
      else {
        uint64_t v7 = 2 * *result;
      }
    }
    else
    {
      uint64_t v7 = 8;
    }
    __n128 result = (void *)sub_23694565C(a1, (16 * (_WORD)v7 + 23) & 0xFF0);
    uint64_t v8 = a1[3];
    *__n128 result = v7;
    result[1] = v8;
    a1[3] = (uint64_t)result;
    a1[7] = (uint64_t)(result + 2);
    a1[8] = (uint64_t)&result[2 * v7 + 2];
  }
  while (!(16 * v7));
  result[2] = a2;
  result[3] = a3;
  a1[7] = (uint64_t)(result + 4);
  return result;
}

unint64_t sub_23694565C(uint64_t *a1, unint64_t a2)
{
  if (((a2 + 7) & 0xFFFFFFFFFFFFFFF8) != a2)
  {
    sub_2369470F4((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/arena_impl.h", 159);
    std::locale v4 = sub_23694710C(v9, "CHECK failed: (internal::AlignUpTo8(n)) == (n): ");
    sub_236947248((uint64_t)&v8, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v9);
  }
  unint64_t result = a1[5];
  unint64_t v6 = a1[6];
  if (v6 < result)
  {
    sub_2369470F4((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/arena_impl.h", 160);
    uint64_t v7 = sub_23694710C(v9, "CHECK failed: (limit_) >= (ptr_): ");
    sub_236947248((uint64_t)&v8, (const char **)&v7->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v9);
    unint64_t result = a1[5];
    unint64_t v6 = a1[6];
  }
  if (v6 - result < a2) {
    return sub_2369459E4(a1, a2);
  }
  a1[5] = result + a2;
  return result;
}

void sub_236945744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

unint64_t sub_236945764(void *a1, unint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_236945160();
  if (v6[1] == a1[3])
  {
    explicit = (uint64_t *)v6[2];
    goto LABEL_3;
  }
  size_t v9 = sub_236945160();
  explicit = (uint64_t *)atomic_load_explicit(a1 + 1, memory_order_acquire);
  if (explicit && (void *)explicit[1] == v9)
  {
LABEL_3:
    return sub_236945810(explicit, a2, a3);
  }
  return sub_236945870(a1, a2, a3);
}

unint64_t sub_236945810(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  unint64_t v5 = sub_23694565C(a1, a2);
  unint64_t v6 = v5;
  uint64_t v7 = (unint64_t *)a1[7];
  if (v7 == (unint64_t *)a1[8])
  {
    sub_2369455C4(a1, v5, a3);
  }
  else
  {
    unint64_t *v7 = v5;
    v7[1] = a3;
    a1[7] = (uint64_t)(v7 + 2);
  }
  return v6;
}

unint64_t sub_236945870(void *a1, unint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_236945160();
  uint64_t v7 = (uint64_t *)sub_23694591C(a1, (uint64_t)v6);
  return sub_236945810(v7, a2, a3);
}

unint64_t sub_2369458D4(void *a1, unint64_t a2)
{
  std::locale v4 = sub_236945160();
  unint64_t v5 = (uint64_t *)sub_23694591C(a1, (uint64_t)v4);
  return sub_23694565C(v5, a2);
}

unint64_t sub_23694591C(void *a1, uint64_t a2)
{
  unint64_t explicit = atomic_load_explicit(a1, memory_order_acquire);
  if (explicit)
  {
    while (*(void *)(explicit + 8) != a2)
    {
      unint64_t explicit = *(void *)(explicit + 32);
      if (!explicit) {
        goto LABEL_4;
      }
    }
  }
  else
  {
LABEL_4:
    unint64_t v5 = sub_236945464((uint64_t)a1, -1, 0x48uLL);
    *(_OWORD *)unint64_t v5 = xmmword_23698EE90;
    v5[2] = v6;
    uint64_t v7 = sub_236945348((uint64_t)v5, a2, (uint64_t)a1);
    unint64_t explicit = (unint64_t)v7;
    atomic_ullong v8 = *a1;
    v7[4] = *a1;
    atomic_ullong v9 = v8;
    atomic_compare_exchange_strong_explicit(a1, (unint64_t *)&v9, (unint64_t)v7, memory_order_release, memory_order_relaxed);
    if (v9 != v8)
    {
      atomic_ullong v10 = v9;
      do
      {
        v7[4] = v9;
        atomic_compare_exchange_strong_explicit(a1, (unint64_t *)&v10, (unint64_t)v7, memory_order_release, memory_order_relaxed);
        BOOL v11 = v10 == v9;
        atomic_ullong v9 = v10;
      }
      while (!v11);
    }
  }
  sub_236945160()[2] = explicit;
  uint64_t v12 = a1[3];
  sub_236945160()[1] = v12;
  atomic_store(explicit, a1 + 1);
  return explicit;
}

uint64_t sub_2369459E4(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  *(void *)(v4 + 8) = *(void *)(v4 + 16) - a1[6] + a1[5];
  unint64_t v5 = sub_236945568(v4, a2, *a1);
  a1[2] = (uint64_t)v5;
  a1[5] = sub_23694529C((uint64_t)v5, v5[1]);
  a1[6] = sub_23694529C(a1[2], *(void *)(a1[2] + 16));
  return sub_23694565C(a1, a2);
}

unint64_t sub_236945A64(void *a1, unint64_t a2)
{
  uint64_t v4 = sub_236945160();
  if (v4[1] == a1[3])
  {
    unint64_t explicit = (uint64_t *)v4[2];
    goto LABEL_3;
  }
  uint64_t v7 = sub_236945160();
  unint64_t explicit = (uint64_t *)atomic_load_explicit(a1 + 1, memory_order_acquire);
  if (explicit && (void *)explicit[1] == v7)
  {
LABEL_3:
    return sub_23694565C(explicit, a2);
  }
  return sub_2369458D4(a1, a2);
}

uint64_t *sub_236945AF8(uint64_t *a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5)
{
  uint64_t v6 = 2;
  if (!a5) {
    uint64_t v6 = 0;
  }
  *a1 = v6 | a4 | a3;
  a1[1] = 24;
  a1[2] = a2;
  if ((a3 & 3) != 0)
  {
    sub_2369470F4((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/arena_impl.h", 107);
    uint64_t v7 = sub_23694710C(v10, "CHECK failed: (reinterpret_cast<uintptr_t>(next) & 3) == (0u): ");
    sub_236947248((uint64_t)&v9, (const char **)&v7->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v10);
  }
  return a1;
}

void sub_236945B8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_236945BA4(uint64_t result)
{
  if (result) {
    JUMPOUT(0x237E07570);
  }
  return result;
}

unint64_t sub_236945BB4(void *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2688A6E98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2688A6E98))
  {
    __cxa_atexit((void (*)(void *))std::mutex::~mutex, &stru_26889A4F0, &dword_2367AD000);
    __cxa_guard_release(&qword_2688A6E98);
  }
  std::mutex::lock(&stru_26889A4F0);
  unint64_t explicit = atomic_load_explicit(a1 + 3, memory_order_acquire);
  if (!explicit)
  {
    sub_236919A94(a1, (void *)*a1, a1[1]);
    atomic_store((unint64_t)a1, a1 + 3);
    unint64_t explicit = (unint64_t)a1;
  }
  std::mutex::unlock(&stru_26889A4F0);
  return explicit;
}

unint64_t sub_236945C70(uint64_t *a1, uint64_t a2, long long *a3, uint64_t a4)
{
  if (*a1 != a2)
  {
    sub_236937CC8(a1);
    JUMPOUT(0x237E07280);
  }
  if (!a4) {
    operator new();
  }
  if (*(unsigned char *)(a4 + 24)) {
    (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(a4 + 32) + 32) + 40))(*(void *)(*(void *)(a4 + 32) + 32), &unk_26E9CE540, 24);
  }
  unint64_t result = sub_236945764((void *)a4, 0x18uLL, (uint64_t)sub_2369414D4);
  unint64_t v8 = result;
  if (*((char *)a3 + 23) < 0)
  {
    unint64_t result = (unint64_t)sub_23692B07C((unsigned char *)result, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v9 = *a3;
    *(void *)(result + 16) = *((void *)a3 + 2);
    *(_OWORD *)unint64_t result = v9;
  }
  *a1 = v8;
  return result;
}

void sub_236945DC8(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void sub_236945DEC(uint64_t *a1, uint64_t a2, long long *a3, uint64_t a4)
{
  if (*a1 == a2)
  {
    if (!a4) {
      operator new();
    }
    if (*(unsigned char *)(a4 + 24))
    {
      uint64_t v11 = a4;
      (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(a4 + 32) + 32) + 40))(*(void *)(*(void *)(a4 + 32) + 32), &unk_26E9CE540, 24);
      a4 = v11;
    }
    unint64_t v9 = sub_236945764((void *)a4, 0x18uLL, (uint64_t)sub_2369414D4);
    uint64_t v10 = *((void *)a3 + 2);
    *(_OWORD *)unint64_t v9 = *a3;
    *(void *)(v9 + 16) = v10;
    *((void *)a3 + 1) = 0;
    *((void *)a3 + 2) = 0;
    *(void *)a3 = 0;
    *a1 = v9;
  }
  else
  {
    uint64_t v6 = sub_236937CC8(a1);
    uint64_t v7 = v6;
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    long long v8 = *a3;
    *(void *)(v7 + 16) = *((void *)a3 + 2);
    *(_OWORD *)uint64_t v7 = v8;
    *((unsigned char *)a3 + 23) = 0;
    *(unsigned char *)a3 = 0;
  }
}

unint64_t sub_236945F18(uint64_t *a1, long long *a2, uint64_t a3)
{
  return sub_236945C70(a1, (uint64_t)&qword_26889B028, a2, a3);
}

void sub_236945F2C(uint64_t *a1, long long *a2, uint64_t a3)
{
}

unint64_t sub_236945F40(uint64_t *a1, long long *a2, uint64_t a3)
{
  return sub_236945C70(a1, 0, a2, a3);
}

uint64_t *sub_236945F50(uint64_t *a1, uint64_t a2)
{
  if ((uint64_t *)*a1 == &qword_26889B028) {
    return sub_236945F6C((uint64_t **)a1, a2);
  }
  else {
    return (uint64_t *)sub_236937CC8(a1);
  }
}

uint64_t *sub_236945F6C(uint64_t **a1, uint64_t a2)
{
  if (*a1 != &qword_26889B028)
  {
    sub_2369470F4((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/arenastring.cc", 147);
    uint64_t v4 = sub_23694710C(v7, "CHECK failed: IsDefault(default_value): ");
    sub_236947248((uint64_t)&v6, (const char **)&v4->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v7);
  }
  if (!a2) {
    operator new();
  }
  if (*(unsigned char *)(a2 + 24)) {
    (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(a2 + 32) + 32) + 40))(*(void *)(*(void *)(a2 + 32) + 32), &unk_26E9CE540, 24);
  }
  unint64_t result = (uint64_t *)sub_236945764((void *)a2, 0x18uLL, (uint64_t)sub_2369414D4);
  *unint64_t result = 0;
  result[1] = 0;
  result[2] = 0;
  *a1 = result;
  return result;
}

void sub_236946074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

unint64_t sub_23694608C(uint64_t *a1, void *a2, uint64_t a3)
{
  if (*a1) {
    return sub_236937CC8(a1);
  }
  else {
    return sub_2369460A8((unint64_t *)a1, a3, a2);
  }
}

unint64_t sub_2369460A8(unint64_t *a1, uint64_t a2, void *a3)
{
  if (*a1)
  {
    sub_2369470F4((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/arenastring.cc", 147);
    char v6 = sub_23694710C(v13, "CHECK failed: IsDefault(default_value): ");
    sub_236947248((uint64_t)&v12, (const char **)&v6->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v13);
  }
  unint64_t explicit = atomic_load_explicit(a3 + 3, memory_order_acquire);
  if (explicit)
  {
    if (a2) {
      goto LABEL_5;
    }
LABEL_10:
    operator new();
  }
  unint64_t explicit = sub_236945BB4(a3);
  if (!a2) {
    goto LABEL_10;
  }
LABEL_5:
  if (*(unsigned char *)(a2 + 24)) {
    (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(a2 + 32) + 32) + 40))(*(void *)(*(void *)(a2 + 32) + 32), &unk_26E9CE540, 24);
  }
  unint64_t v8 = sub_236945764((void *)a2, 0x18uLL, (uint64_t)sub_2369414D4);
  unint64_t v9 = v8;
  if (*(char *)(explicit + 23) < 0)
  {
    sub_23692B07C((unsigned char *)v8, *(void **)explicit, *(void *)(explicit + 8));
  }
  else
  {
    long long v10 = *(_OWORD *)explicit;
    *(void *)(v8 + 16) = *(void *)(explicit + 16);
    *(_OWORD *)unint64_t v8 = v10;
  }
  *a1 = v9;
  return v9;
}

void sub_23694620C(_Unwind_Exception *a1)
{
  MEMORY[0x237E07580](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

std::string *sub_236946244(std::string *result, void *a2)
{
  if (result->__r_.__value_.__r.__words[0])
  {
    uint64_t v3 = (std::string *)sub_236937CC8((uint64_t *)result);
    unint64_t explicit = (const std::string *)atomic_load_explicit(a2 + 3, memory_order_acquire);
    if (!explicit) {
      unint64_t explicit = (const std::string *)sub_236945BB4(a2);
    }
    return std::string::operator=(v3, explicit);
  }
  return result;
}

int64_t sub_2369462B0(uint64_t a1, char *a2)
{
  while (1)
  {
    unint64_t v5 = *(char **)a1;
    uint64_t v4 = *(void **)(a1 + 8);
    if (!v4)
    {
      int64_t v10 = v5 - a2;
      int64_t v9 = v10 + 16;
      *(void *)(a1 + 8) = a2;
      if (((v10 + 16) & 0x80000000) == 0) {
        return v9;
      }
      goto LABEL_12;
    }
    int v6 = a2 - v5;
    if (a2 <= v5) {
      break;
    }
    if (*(unsigned char *)(a1 + 56))
    {
      sub_2369470F4((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/coded_stream.cc", 685);
      uint64_t v7 = sub_23694710C(v15, "CHECK failed: !had_error_: ");
      sub_236947248((uint64_t)&v14, (const char **)&v7->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v15);
    }
    if (v6 >= 17)
    {
      sub_2369470F4((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/coded_stream.cc", 686);
      unint64_t v8 = sub_23694710C(v15, "CHECK failed: overrun <= kSlopBytes: ");
      sub_236947248((uint64_t)&v14, (const char **)&v8->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v15);
    }
    a2 = &sub_236946448((char **)a1)[v6];
    if (*(unsigned char *)(a1 + 56)) {
      return 0;
    }
  }
  memcpy(v4, (const void *)(a1 + 16), (size_t)&a2[-a1 - 16]);
  uint64_t v11 = *(char **)a1;
  *(void *)(a1 + 8) += &a2[-a1 - 16];
  int64_t v9 = v11 - a2;
  if (((v11 - a2) & 0x80000000) == 0) {
    return v9;
  }
LABEL_12:
  sub_2369470F4((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/coded_stream.cc", 700);
  char v12 = sub_23694710C(v15, "CHECK failed: s >= 0: ");
  sub_236947248((uint64_t)&v14, (const char **)&v12->__r_.__value_.__l.__data_);
  sub_236947250((uint64_t)v15);
  return v9;
}

void sub_236946420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_236946448(char **a1)
{
  if (*((unsigned char *)a1 + 56))
  {
    sub_2369470F4((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/coded_stream.cc", 788);
    uint64_t v2 = sub_23694710C(v13, "CHECK failed: !had_error_: ");
    sub_236947248((uint64_t)&v12, (const char **)&v2->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v13);
  }
  if (a1[6])
  {
    uint64_t v3 = (char *)(a1 + 2);
    unint64_t v5 = *a1;
    uint64_t v4 = a1[1];
    if (v4)
    {
      memcpy(v4, a1 + 2, v5 - v3);
      int v12 = 0;
      do
      {
        v13[0].__r_.__value_.__r.__words[0] = 0;
        if (((*(uint64_t (**)(char *, std::string *, int *))(*(void *)a1[6] + 16))(a1[6], v13, &v12) & 1) == 0)
        {
          *((unsigned char *)a1 + 56) = 1;
          goto LABEL_14;
        }
        uint64_t v6 = v12;
      }
      while (!v12);
      unint64_t v5 = (char *)v13[0].__r_.__value_.__r.__words[0];
      if (v12 >= 17)
      {
        *(_OWORD *)v13[0].__r_.__value_.__l.__data_ = *(_OWORD *)*a1;
        *a1 = &v5[v6 - 16];
        a1[1] = 0;
        return v5;
      }
      if (v12 <= 0)
      {
        std::string::size_type v10 = v13[0].__r_.__value_.__r.__words[0];
        sub_2369470F4((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/coded_stream.cc", 810);
        int64_t v9 = sub_23694710C(v13, "CHECK failed: size > 0: ");
        sub_236947248((uint64_t)&v11, (const char **)&v9->__r_.__value_.__l.__data_);
        sub_236947250((uint64_t)v13);
        LODWORD(v6) = v12;
        unint64_t v5 = (char *)v10;
      }
      *(_OWORD *)uint64_t v3 = *(_OWORD *)*a1;
      uint64_t v7 = &v3[(int)v6];
    }
    else
    {
      *(_OWORD *)uint64_t v3 = *(_OWORD *)v5;
      uint64_t v7 = (char *)(a1 + 4);
    }
    *a1 = v7;
    a1[1] = v5;
  }
  else
  {
    *((unsigned char *)a1 + 56) = 1;
    uint64_t v3 = (char *)(a1 + 2);
LABEL_14:
    *a1 = (char *)(a1 + 4);
  }
  return v3;
}

void sub_2369465E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_236946600(uint64_t a1, char *a2)
{
  if (!*(unsigned char *)(a1 + 56))
  {
    int64_t v3 = sub_2369462B0(a1, a2);
    if (v3) {
      (*(void (**)(void, int64_t))(**(void **)(a1 + 48) + 24))(*(void *)(a1 + 48), v3);
    }
    a2 = (char *)(a1 + 16);
    *(void *)a1 = a1 + 16;
    *(void *)(a1 + 8) = a1 + 16;
  }
  return a2;
}

char *sub_236946668(uint64_t a1, char *a2)
{
  while (!*(unsigned char *)(a1 + 56))
  {
    int64_t v3 = &a2[-*(void *)a1];
    if ((v3 & 0x80000000) != 0)
    {
      sub_2369470F4((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/coded_stream.cc", 829);
      unint64_t v5 = sub_23694710C(v8, "CHECK failed: overrun >= 0: ");
      sub_236947248((uint64_t)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
      goto LABEL_6;
    }
    if (v3 > 0x10)
    {
      sub_2369470F4((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/coded_stream.cc", 830);
      uint64_t v4 = sub_23694710C(v8, "CHECK failed: overrun <= kSlopBytes: ");
      sub_236947248((uint64_t)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
LABEL_6:
      sub_236947250((uint64_t)v8);
    }
    a2 = &sub_236946448((char **)a1)[(int)v3];
    if ((unint64_t)a2 < *(void *)a1) {
      return a2;
    }
  }
  return (char *)(a1 + 16);
}

void sub_23694675C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_23694677C(uint64_t *a1, char *a2, int a3, unint64_t a4)
{
  uint64_t v4 = (char *)a4;
  for (int i = sub_236946820(a1, a4); a3 > i; int i = sub_236946820(a1, (unint64_t)v4))
  {
    memcpy(v4, a2, i);
    a3 -= i;
    a2 += i;
    uint64_t v4 = sub_236946668((uint64_t)a1, &v4[i]);
  }
  memcpy(v4, a2, a3);
  return &v4[a3];
}

uint64_t sub_236946820(uint64_t *a1, unint64_t a2)
{
  uint64_t v3 = *a1;
  if (*a1 + 16 < a2)
  {
    sub_2369470F4((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/io/coded_stream.h", 838);
    unint64_t v5 = sub_23694710C(v8, "CHECK failed: ptr <= end_ + kSlopBytes: ");
    sub_236947248((uint64_t)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v8);
    uint64_t v3 = *a1;
  }
  return v3 - a2 + 16;
}

void sub_2369468A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_2369468BC(uint64_t a1, void *a2, uint64_t a3, char *a4)
{
  if (sub_236946820((uint64_t *)a1, (unint64_t)a4) <= (int)a3)
  {
    unint64_t v8 = sub_236946600(a1, a4);
    if (((*(uint64_t (**)(void, void *, uint64_t))(**(void **)(a1 + 48) + 40))(*(void *)(a1 + 48), a2, a3) & 1) == 0)
    {
      *(unsigned char *)(a1 + 56) = 1;
      unint64_t v8 = (char *)(a1 + 16);
      *(void *)a1 = a1 + 32;
    }
    return v8;
  }
  if (*(void *)a1 - (void)a4 >= (int)a3)
  {
    memcpy(a4, a2, (int)a3);
    return &a4[(int)a3];
  }
  return sub_23694677C((uint64_t *)a1, (char *)a2, a3, (unint64_t)a4);
}

char *sub_2369469C4(unint64_t *a1, int a2, void **a3, char *a4)
{
  uint64_t v4 = a4;
  unint64_t v8 = *a1;
  if (*a1 <= (unint64_t)a4)
  {
    uint64_t v4 = sub_236946668((uint64_t)a1, a4);
    unint64_t v8 = *a1;
  }
  if (*((char *)a3 + 23) >= 0) {
    uint64_t v9 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    uint64_t v9 = *((unsigned int *)a3 + 2);
  }
  if (v8 <= (unint64_t)v4)
  {
    sub_2369470F4((uint64_t)v23, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/io/coded_stream.h", 858);
    std::string::size_type v10 = sub_23694710C(v23, "CHECK failed: ptr < end_: ");
    sub_236947248((uint64_t)&v22, (const char **)&v10->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v23);
  }
  unsigned int v11 = (8 * a2) | 2;
  if (v11 > 0x7F)
  {
    *uint64_t v4 = (8 * a2) | 0x82;
    unsigned int v13 = (8 * a2) >> 7;
    if (v11 >> 14)
    {
      int v12 = v4 + 2;
      do
      {
        *(v12 - 1) = v13 | 0x80;
        unsigned int v14 = v13 >> 7;
        ++v12;
        unsigned int v15 = v13 >> 14;
        v13 >>= 7;
      }
      while (v15);
      *(v12 - 1) = v14;
    }
    else
    {
      v4[1] = v13;
      int v12 = v4 + 2;
    }
  }
  else
  {
    *uint64_t v4 = v11;
    int v12 = v4 + 1;
  }
  if (v9 >= 0x80)
  {
    unsigned int v20 = v9;
    do
    {
      *v12++ = v20 | 0x80;
      unsigned int v16 = v20 >> 7;
      unsigned int v21 = v20 >> 14;
      v20 >>= 7;
    }
    while (v21);
  }
  else
  {
    LOBYTE(v16) = v9;
  }
  *int v12 = v16;
  size_t v17 = v12 + 1;
  if (*((char *)a3 + 23) >= 0) {
    uint64_t v18 = a3;
  }
  else {
    uint64_t v18 = *a3;
  }
  return sub_236946B4C((uint64_t)a1, v18, v9, v17);
}

void sub_236946B34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_236946B4C(uint64_t a1, void *a2, uint64_t a3, char *__dst)
{
  if (*(unsigned char *)(a1 + 57))
  {
    return sub_2369468BC(a1, a2, a3, __dst);
  }
  else if (*(void *)a1 - (void)__dst < (int)a3)
  {
    return sub_23694677C((uint64_t *)a1, (char *)a2, a3, (unint64_t)__dst);
  }
  else
  {
    uint64_t v6 = (int)a3;
    memcpy(__dst, a2, (int)a3);
    return &__dst[v6];
  }
}

char *sub_236946BD8(uint64_t *a1, int a2, uint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  unint64_t v8 = *a1;
  if (*a1 <= (unint64_t)a4)
  {
    uint64_t v4 = sub_236946668((uint64_t)a1, a4);
    unint64_t v8 = *a1;
  }
  if (*(char *)(a3 + 23) >= 0) {
    LODWORD(v9) = *(unsigned __int8 *)(a3 + 23);
  }
  else {
    uint64_t v9 = *(void *)(a3 + 8);
  }
  if (v8 <= (unint64_t)v4)
  {
    sub_2369470F4((uint64_t)v23, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/google/protobuf/io/coded_stream.h", 858);
    std::string::size_type v10 = sub_23694710C(v23, "CHECK failed: ptr < end_: ");
    sub_236947248((uint64_t)&v22, (const char **)&v10->__r_.__value_.__l.__data_);
    sub_236947250((uint64_t)v23);
  }
  unsigned int v11 = (8 * a2) | 2;
  if (v11 > 0x7F)
  {
    *uint64_t v4 = (8 * a2) | 0x82;
    unsigned int v13 = (8 * a2) >> 7;
    if (v11 >> 14)
    {
      int v12 = v4 + 2;
      do
      {
        *(v12 - 1) = v13 | 0x80;
        unsigned int v14 = v13 >> 7;
        ++v12;
        unsigned int v15 = v13 >> 14;
        v13 >>= 7;
      }
      while (v15);
      *(v12 - 1) = v14;
    }
    else
    {
      v4[1] = v13;
      int v12 = v4 + 2;
    }
  }
  else
  {
    *uint64_t v4 = v11;
    int v12 = v4 + 1;
  }
  if (v9 >= 0x80)
  {
    unsigned int v20 = v9;
    do
    {
      *v12++ = v20 | 0x80;
      unsigned int v16 = v20 >> 7;
      unsigned int v21 = v20 >> 14;
      v20 >>= 7;
    }
    while (v21);
  }
  else
  {
    LOBYTE(v16) = v9;
  }
  *int v12 = v16;
  size_t v17 = v12 + 1;
  if (*(char *)(a3 + 23) >= 0) {
    uint64_t v18 = (char *)a3;
  }
  else {
    uint64_t v18 = *(char **)a3;
  }
  if (*a1 - (uint64_t)v17 < (int)v9) {
    return sub_23694677C(a1, v18, v9, (unint64_t)v17);
  }
  memcpy(v17, v18, (int)v9);
  return &v17[(int)v9];
}

void sub_236946D70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_236946D88(int a1, int a2, const std::string::value_type *a3)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  if (a2 > 3014000)
  {
    LODWORD(v2sub_23692A244(&a9, 0) = 3;
    unsigned int v21 = "/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/common.cc";
    int v22 = 76;
    memset(&v23, 0, sizeof(v23));
    std::string::append(&v23, "This program requires version ");
    sub_23694717C(a2, &v17);
    if ((v19 & 0x80u) == 0) {
      uint64_t v6 = (const std::string::value_type *)&v17;
    }
    else {
      uint64_t v6 = (const std::string::value_type *)v17;
    }
    if ((v19 & 0x80u) == 0) {
      std::string::size_type v7 = v19;
    }
    else {
      std::string::size_type v7 = v18;
    }
    std::string::append(&v23, v6, v7);
    std::string::append(&v23, " of the Protocol Buffer runtime library, but the installed version is ");
    snprintf(__str, 0x80uLL, "%d.%d.%d", 3, 14, 0);
    char v25 = 0;
    sub_236919B40(&__p, __str);
    if ((v16 & 0x80u) == 0) {
      p_p = (const std::string::value_type *)&__p;
    }
    else {
      p_p = (const std::string::value_type *)__p;
    }
    if ((v16 & 0x80u) == 0) {
      std::string::size_type v9 = v16;
    }
    else {
      std::string::size_type v9 = v15;
    }
    std::string::append(&v23, p_p, v9);
    std::string::append(&v23, ".  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"");
    std::string::append(&v23, a3);
    std::string::append(&v23, "\".)");
    sub_236947404(&v20);
    if ((char)v16 < 0) {
      operator delete(__p);
    }
    if ((char)v19 < 0) {
      operator delete(v17);
    }
    if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v23.__r_.__value_.__l.__data_);
    }
  }
  if (a1 < 3014000)
  {
    LODWORD(v2sub_23692A244(&a9, 0) = 3;
    unsigned int v21 = "/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/common.cc";
    int v22 = 87;
    memset(&v23, 0, sizeof(v23));
    std::string::append(&v23, "This program was compiled against version ");
    sub_23694717C(a1, &v17);
    if ((v19 & 0x80u) == 0) {
      std::string::size_type v10 = (const std::string::value_type *)&v17;
    }
    else {
      std::string::size_type v10 = (const std::string::value_type *)v17;
    }
    if ((v19 & 0x80u) == 0) {
      std::string::size_type v11 = v19;
    }
    else {
      std::string::size_type v11 = v18;
    }
    std::string::append(&v23, v10, v11);
    std::string::append(&v23, " of the Protocol Buffer runtime library, which is not compatible with the installed version (");
    snprintf(__str, 0x80uLL, "%d.%d.%d", 3, 14, 0);
    char v25 = 0;
    sub_236919B40(&__p, __str);
    if ((v16 & 0x80u) == 0) {
      int v12 = (const std::string::value_type *)&__p;
    }
    else {
      int v12 = (const std::string::value_type *)__p;
    }
    if ((v16 & 0x80u) == 0) {
      std::string::size_type v13 = v16;
    }
    else {
      std::string::size_type v13 = v15;
    }
    std::string::append(&v23, v12, v13);
    std::string::append(&v23, ").  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"");
    std::string::append(&v23, a3);
    std::string::append(&v23, "\".)");
    sub_236947404(&v20);
    if ((char)v16 < 0) {
      operator delete(__p);
    }
    if ((char)v19 < 0) {
      operator delete(v17);
    }
    if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v23.__r_.__value_.__l.__data_);
    }
  }
}

void sub_236947084(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2369470F4(uint64_t result, int a2, uint64_t a3, int a4)
{
  *(_DWORD *)unint64_t result = a2;
  *(void *)(result + 8) = a3;
  *(_DWORD *)(result + 16) = a4;
  *(void *)(result + 32) = 0;
  *(void *)(result + 4sub_23692A244(&a9, 0) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

std::string *sub_23694710C(std::string *a1, const std::string::value_type *a2)
{
  return a1;
}

std::string *sub_236947138(std::string *a1, const std::string::value_type *a2)
{
  uint64_t v3 = a1 + 1;
  std::string::size_type v4 = *((void *)a2 + 1);
  if (a2[23] >= 0)
  {
    std::string::size_type v5 = *((unsigned __int8 *)a2 + 23);
  }
  else
  {
    a2 = *(const std::string::value_type **)a2;
    std::string::size_type v5 = v4;
  }
  std::string::append(v3, a2, v5);
  return a1;
}

void *sub_23694717C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  snprintf(__str, 0x80uLL, "%d.%d.%d", a1 / 1000000, a1 / 1000 % 1000, a1 % 1000);
  char __str[127] = 0;
  return sub_236919B40(a2, __str);
}

const char **sub_236947248(uint64_t a1, const char **a2)
{
  return sub_236947404(a2);
}

uint64_t sub_236947250(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  return a1;
}

uint64_t sub_236947284(uint64_t result, const char *a2, int a3, uint64_t a4)
{
  if ((result & 0x80000000) == 0)
  {
    std::string::size_type v4 = (FILE **)MEMORY[0x263EF8348];
    if (*(char *)(a4 + 23) >= 0) {
      uint64_t v5 = (const char *)a4;
    }
    else {
      uint64_t v5 = *(const char **)a4;
    }
    fprintf((FILE *)*MEMORY[0x263EF8348], "[libprotobuf %s %s:%d] %s\n", (&off_264CB4258)[result], a2, a3, v5);
    uint64_t v6 = *v4;
    return fflush(v6);
  }
  return result;
}

std::string *sub_236947304(std::string *a1, int a2)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  snprintf(__str, 0x80uLL, "%d", a2);
  char __str[127] = 0;
  std::string::append(a1 + 1, __str);
  return a1;
}

std::string *sub_236947384(std::string *a1, uint64_t a2)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  snprintf(__str, 0x80uLL, "%lu", a2);
  char __str[127] = 0;
  std::string::append(a1 + 1, __str);
  return a1;
}

const char **sub_236947404(const char **result)
{
  uint64_t v1 = result;
  if (*(_DWORD *)result == 3)
  {
    uint64_t v2 = 3;
  }
  else
  {
    int v3 = atomic_load((unsigned int *)&unk_2688A6EA0);
    if (v3 > 0) {
      goto LABEL_6;
    }
    uint64_t v2 = *(unsigned int *)result;
  }
  unint64_t result = (const char **)off_26B808D20(v2, v1[1], *((_DWORD *)v1 + 4), (uint64_t)(v1 + 3));
LABEL_6:
  if (*(_DWORD *)v1 == 3)
  {
    exception = __cxa_allocate_exception(0x30uLL);
    sub_2369474C4(exception, v1[1], *((unsigned int *)v1 + 4), v1 + 3);
    __cxa_throw(exception, (struct type_info *)&unk_26E9CE7B8, (void (*)(void *))sub_2369474C8);
  }
  return result;
}

void sub_2369474B0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2369474CC(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)&unk_26E9CE7E0;
  if (SHIBYTE(this[5].__vftable) < 0) {
    operator delete(this[3].__vftable);
  }
  std::exception::~exception(this);
}

void sub_23694752C(std::exception *a1)
{
  sub_2369474CC(a1);
  JUMPOUT(0x237E07580);
}

uint64_t sub_236947564(uint64_t a1)
{
  uint64_t result = a1 + 24;
  if (*(char *)(a1 + 47) < 0) {
    return *(void *)result;
  }
  return result;
}

uint64_t sub_236947580(uint64_t a1, uint64_t a2, int a3, long long *a4)
{
  *(void *)a1 = &unk_26E9CE7E0;
  *(void *)(a1 + 8) = a2;
  *(_DWORD *)(a1 + 16) = a3;
  uint64_t v5 = a1 + 24;
  if (*((char *)a4 + 23) < 0)
  {
    sub_23692B07C((unsigned char *)v5, *(void **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v6 = *a4;
    *(void *)(v5 + 16) = *((void *)a4 + 2);
    *(_OWORD *)uint64_t v5 = v6;
  }
  return a1;
}

void sub_2369475EC(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_236947600(uint64_t a1, int a2, _OWORD *a3)
{
  if (qword_2688A6EA8)
  {
    int8x8_t v3 = *(int8x8_t *)(qword_2688A6EA8 + 8);
    if (v3)
    {
      unint64_t v4 = *(void *)(a1 + 8);
      unint64_t v5 = 0x9DDFEA08EB382D69 * (((8 * v4) + 8) ^ HIDWORD(v4));
      unint64_t v6 = 0x9DDFEA08EB382D69 * (HIDWORD(v4) ^ (v5 >> 47) ^ v5);
      unint64_t v7 = (0x9DDFEA08EB382D69 * (v6 ^ (v6 >> 47))) ^ a2;
      uint8x8_t v8 = (uint8x8_t)vcnt_s8(v3);
      v8.i16[0] = vaddlv_u8(v8);
      if (v8.u32[0] > 1uLL)
      {
        unint64_t v9 = v7;
        if (v7 >= *(void *)&v3) {
          unint64_t v9 = v7 % *(void *)&v3;
        }
      }
      else
      {
        unint64_t v9 = (*(void *)&v3 - 1) & v7;
      }
      std::string::size_type v10 = *(uint64_t ***)(*(void *)qword_2688A6EA8 + 8 * v9);
      if (v10)
      {
        for (int i = *v10; i; int i = (uint64_t *)*i)
        {
          unint64_t v12 = i[1];
          if (v7 == v12)
          {
            if (i[2] == v4 && *((_DWORD *)i + 6) == a2)
            {
              long long v14 = *((_OWORD *)i + 3);
              *a3 = *((_OWORD *)i + 2);
              a3[1] = v14;
              return 1;
            }
          }
          else
          {
            if (v8.u32[0] > 1uLL)
            {
              if (v12 >= *(void *)&v3) {
                v12 %= *(void *)&v3;
              }
            }
            else
            {
              v12 &= *(void *)&v3 - 1;
            }
            if (v12 != v9) {
              return 0;
            }
          }
        }
      }
    }
  }
  return 0;
}

uint64_t sub_236947714(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = a2;
  *(_DWORD *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  return result;
}

uint64_t sub_236947724(uint64_t a1)
{
  if (!*(void *)a1)
  {
    uint64_t v2 = *(void *)(a1 + 16);
    if (*(unsigned __int16 *)(a1 + 8) >= 0x101u)
    {
      sub_236951A2C(*(unsigned __int8 **)v2, (unsigned __int8 *)(v2 + 8));
    }
    else if (*(_WORD *)(a1 + 10))
    {
      uint64_t v3 = 32 * *(unsigned __int16 *)(a1 + 10);
      unint64_t v4 = (unsigned __int8 *)(v2 + 8);
      do
      {
        sub_236951770(v4);
        v4 += 32;
        v3 -= 32;
      }
      while (v3);
    }
    uint64_t v5 = *(void *)(a1 + 16);
    if (*(unsigned __int16 *)(a1 + 8) >= 0x101u)
    {
      if (v5)
      {
        uint64_t v7 = *(void *)(a1 + 16);
        sub_236914648(v5, *(void **)(v5 + 8));
        MEMORY[0x237E07580](v7, 0x1020C4062D53EE8);
      }
    }
    else if (v5)
    {
      MEMORY[0x237E07550](v5, 0x1062C802AB6010CLL);
    }
  }
  return a1;
}

unsigned __int8 *sub_2369477F8(unsigned __int8 *result)
{
  uint64_t v1 = result;
  if (result[9])
  {
    uint64_t v2 = result[8];
    if ((v2 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      uint64_t v3 = sub_23694710C(v10, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v9, (const char **)&v3->__r_.__value_.__l.__data_);
      uint64_t result = (unsigned __int8 *)sub_236947250((uint64_t)v10);
    }
    switch(v2)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
        **(_DWORD **)uint64_t v1 = 0;
        break;
      case 9:
      case 12:
        uint64_t result = (unsigned __int8 *)sub_2369415C8(*(void *)v1);
        break;
      case 10:
      case 11:
        uint64_t result = (unsigned __int8 *)sub_236952234(*(void *)v1);
        break;
      default:
        return result;
    }
  }
  else if ((result[10] & 1) == 0)
  {
    uint64_t v4 = result[8];
    if ((v4 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      uint64_t v5 = sub_23694710C(v10, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v9, (const char **)&v5->__r_.__value_.__l.__data_);
      uint64_t result = (unsigned __int8 *)sub_236947250((uint64_t)v10);
    }
    int v6 = dword_23698F210[v4];
    if (v6 == 10)
    {
      uint64_t v8 = **(void **)v1;
      if ((v1[10] & 0x10) != 0) {
        uint64_t result = (unsigned __int8 *)(*(uint64_t (**)(void))(v8 + 112))();
      }
      else {
        uint64_t result = (unsigned __int8 *)(*(uint64_t (**)(void))(v8 + 40))();
      }
    }
    else if (v6 == 9)
    {
      uint64_t v7 = *(void *)v1;
      if (*(char *)(*(void *)v1 + 23) < 0)
      {
        **(unsigned char **)uint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
      }
    }
    v1[10] = v1[10] & 0xF0 | 1;
  }
  return result;
}

void sub_2369479CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_236947A14(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5)
{
  uint64_t result = (uint64_t)sub_23694C980(a1, a2);
  uint64_t v9 = result;
  *(void *)(result + 16) = a5;
  if (v10)
  {
    *(unsigned char *)(result + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      std::string::size_type v11 = sub_23694710C(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v17, (const char **)&v11->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    if (dword_23698F210[a3] != 1)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 348);
      unint64_t v12 = sub_23694710C(v18, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_INT32): ");
      sub_236947248((uint64_t)&v17, (const char **)&v12->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    *(unsigned char *)(v9 + 9) = 0;
  }
  else
  {
    if (*(unsigned char *)(result + 9))
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 348);
      std::string::size_type v13 = sub_23694710C(v18, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
      sub_236947248((uint64_t)&v17, (const char **)&v13->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    uint64_t v14 = *(unsigned __int8 *)(v9 + 8);
    if ((v14 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      std::string::size_type v15 = sub_23694710C(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v17, (const char **)&v15->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    if (dword_23698F210[v14] != 1)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 348);
      unsigned __int8 v16 = sub_23694710C(v18, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_INT32): ");
      sub_236947248((uint64_t)&v17, (const char **)&v16->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
  }
  *(unsigned char *)(v9 + 10) &= 0xF0u;
  *(_DWORD *)uint64_t v9 = a4;
  return result;
}

void sub_236947BF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_236947C2C(uint64_t *a1, uint64_t a2, int a3, int a4, int a5, uint64_t *a6)
{
  std::string::size_type v11 = sub_23694C980((uint64_t)a1, a2);
  unint64_t v12 = v11;
  std::string v11[2] = a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      uint64_t v14 = sub_23694710C(v28, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v27, (const char **)&v14->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (dword_23698F210[a3] != 1)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 348);
      std::string::size_type v15 = sub_23694710C(v28, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_INT32): ");
      sub_236947248((uint64_t)&v27, (const char **)&v15->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    *((unsigned char *)v12 + 9) = 1;
    *((unsigned char *)v12 + 11) = a4;
    uint64_t v16 = *a1;
    if (!*a1) {
      operator new();
    }
    if (*(unsigned char *)(v16 + 24)) {
      (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v16 + 32) + 32) + 40))(*(void *)(*(void *)(v16 + 32) + 32), &unk_26E9CE858, 16);
    }
    char v17 = (uint64_t *)sub_236945764((void *)v16, 0x10uLL, (uint64_t)sub_236951A9C);
    *char v17 = 0;
    v17[1] = v16;
    *unint64_t v12 = v17;
  }
  else
  {
    if (!*((unsigned char *)v11 + 9))
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 348);
      std::string::size_type v18 = sub_23694710C(v28, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
      sub_236947248((uint64_t)&v27, (const char **)&v18->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    uint64_t v19 = *((unsigned __int8 *)v12 + 8);
    if ((v19 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      unsigned int v20 = sub_23694710C(v28, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v27, (const char **)&v20->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (dword_23698F210[v19] != 1)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 348);
      unsigned int v21 = sub_23694710C(v28, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_INT32): ");
      sub_236947248((uint64_t)&v27, (const char **)&v21->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (*((unsigned __int8 *)v12 + 11) != a4)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 348);
      int v22 = sub_23694710C(v28, "CHECK failed: (extension->is_packed) == (packed): ");
      sub_236947248((uint64_t)&v27, (const char **)&v22->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
  }
  std::string v23 = (int *)*v12;
  uint64_t v24 = *v23;
  if (v24 == v23[1])
  {
    int v25 = v24 + 1;
    sub_2369570D0(v23, v24 + 1);
    uint64_t result = sub_236957570((uint64_t)v23);
    *(_DWORD *)(result + 4 * v24) = a5;
  }
  else
  {
    uint64_t result = sub_236957570((uint64_t)v23);
    *(_DWORD *)(result + 4 * v24) = a5;
    int v25 = v24 + 1;
  }
  *std::string v23 = v25;
  return result;
}

void sub_236947F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_236947F70(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = (uint64_t)sub_23694C980(a1, a2);
  uint64_t v9 = result;
  *(void *)(result + 16) = a5;
  if (v10)
  {
    *(unsigned char *)(result + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      std::string::size_type v11 = sub_23694710C(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v17, (const char **)&v11->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    if (dword_23698F210[a3] != 2)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 349);
      unint64_t v12 = sub_23694710C(v18, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_INT64): ");
      sub_236947248((uint64_t)&v17, (const char **)&v12->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    *(unsigned char *)(v9 + 9) = 0;
  }
  else
  {
    if (*(unsigned char *)(result + 9))
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 349);
      char v13 = sub_23694710C(v18, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
      sub_236947248((uint64_t)&v17, (const char **)&v13->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    uint64_t v14 = *(unsigned __int8 *)(v9 + 8);
    if ((v14 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      std::string::size_type v15 = sub_23694710C(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v17, (const char **)&v15->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    if (dword_23698F210[v14] != 2)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 349);
      uint64_t v16 = sub_23694710C(v18, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_INT64): ");
      sub_236947248((uint64_t)&v17, (const char **)&v16->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
  }
  *(unsigned char *)(v9 + 10) &= 0xF0u;
  *(void *)uint64_t v9 = a4;
  return result;
}

void sub_236948150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_236948188(uint64_t *a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t *a6)
{
  std::string::size_type v11 = sub_23694C980((uint64_t)a1, a2);
  unint64_t v12 = v11;
  std::string v11[2] = a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      uint64_t v14 = sub_23694710C(v28, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v27, (const char **)&v14->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (dword_23698F210[a3] != 2)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 349);
      std::string::size_type v15 = sub_23694710C(v28, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_INT64): ");
      sub_236947248((uint64_t)&v27, (const char **)&v15->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    *((unsigned char *)v12 + 9) = 1;
    *((unsigned char *)v12 + 11) = a4;
    uint64_t v16 = *a1;
    if (!*a1) {
      operator new();
    }
    if (*(unsigned char *)(v16 + 24)) {
      (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v16 + 32) + 32) + 40))(*(void *)(*(void *)(v16 + 32) + 32), &unk_26E9CE868, 16);
    }
    char v17 = (uint64_t *)sub_236945764((void *)v16, 0x10uLL, (uint64_t)sub_236951AA0);
    *char v17 = 0;
    v17[1] = v16;
    *unint64_t v12 = v17;
  }
  else
  {
    if (!*((unsigned char *)v11 + 9))
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 349);
      std::string::size_type v18 = sub_23694710C(v28, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
      sub_236947248((uint64_t)&v27, (const char **)&v18->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    uint64_t v19 = *((unsigned __int8 *)v12 + 8);
    if ((v19 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      unsigned int v20 = sub_23694710C(v28, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v27, (const char **)&v20->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (dword_23698F210[v19] != 2)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 349);
      unsigned int v21 = sub_23694710C(v28, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_INT64): ");
      sub_236947248((uint64_t)&v27, (const char **)&v21->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (*((unsigned __int8 *)v12 + 11) != a4)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 349);
      int v22 = sub_23694710C(v28, "CHECK failed: (extension->is_packed) == (packed): ");
      sub_236947248((uint64_t)&v27, (const char **)&v22->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
  }
  std::string v23 = (int *)*v12;
  uint64_t v24 = *v23;
  if (v24 == v23[1])
  {
    int v25 = v24 + 1;
    sub_236957D88(v23, v24 + 1);
    uint64_t result = sub_236958228((uint64_t)v23);
    *(void *)(result + 8 * v24) = a5;
  }
  else
  {
    uint64_t result = sub_236958228((uint64_t)v23);
    *(void *)(result + 8 * v24) = a5;
    int v25 = v24 + 1;
  }
  *std::string v23 = v25;
  return result;
}

void sub_23694848C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2369484CC(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5)
{
  uint64_t result = (uint64_t)sub_23694C980(a1, a2);
  uint64_t v9 = result;
  *(void *)(result + 16) = a5;
  if (v10)
  {
    *(unsigned char *)(result + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      std::string::size_type v11 = sub_23694710C(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v17, (const char **)&v11->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    if (dword_23698F210[a3] != 3)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 350);
      unint64_t v12 = sub_23694710C(v18, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_UINT32): ");
      sub_236947248((uint64_t)&v17, (const char **)&v12->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    *(unsigned char *)(v9 + 9) = 0;
  }
  else
  {
    if (*(unsigned char *)(result + 9))
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 350);
      char v13 = sub_23694710C(v18, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
      sub_236947248((uint64_t)&v17, (const char **)&v13->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    uint64_t v14 = *(unsigned __int8 *)(v9 + 8);
    if ((v14 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      std::string::size_type v15 = sub_23694710C(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v17, (const char **)&v15->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    if (dword_23698F210[v14] != 3)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 350);
      uint64_t v16 = sub_23694710C(v18, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_UINT32): ");
      sub_236947248((uint64_t)&v17, (const char **)&v16->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
  }
  *(unsigned char *)(v9 + 10) &= 0xF0u;
  *(_DWORD *)uint64_t v9 = a4;
  return result;
}

void sub_2369486AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2369486E4(uint64_t *a1, uint64_t a2, int a3, int a4, int a5, uint64_t *a6)
{
  std::string::size_type v11 = sub_23694C980((uint64_t)a1, a2);
  unint64_t v12 = v11;
  std::string v11[2] = a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      uint64_t v14 = sub_23694710C(v28, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v27, (const char **)&v14->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (dword_23698F210[a3] != 3)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 350);
      std::string::size_type v15 = sub_23694710C(v28, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_UINT32): ");
      sub_236947248((uint64_t)&v27, (const char **)&v15->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    *((unsigned char *)v12 + 9) = 1;
    *((unsigned char *)v12 + 11) = a4;
    uint64_t v16 = *a1;
    if (!*a1) {
      operator new();
    }
    if (*(unsigned char *)(v16 + 24)) {
      (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v16 + 32) + 32) + 40))(*(void *)(*(void *)(v16 + 32) + 32), &unk_26E9CE878, 16);
    }
    char v17 = (uint64_t *)sub_236945764((void *)v16, 0x10uLL, (uint64_t)sub_236951AA4);
    *char v17 = 0;
    v17[1] = v16;
    *unint64_t v12 = v17;
  }
  else
  {
    if (!*((unsigned char *)v11 + 9))
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 350);
      std::string::size_type v18 = sub_23694710C(v28, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
      sub_236947248((uint64_t)&v27, (const char **)&v18->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    uint64_t v19 = *((unsigned __int8 *)v12 + 8);
    if ((v19 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      unsigned int v20 = sub_23694710C(v28, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v27, (const char **)&v20->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (dword_23698F210[v19] != 3)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 350);
      unsigned int v21 = sub_23694710C(v28, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_UINT32): ");
      sub_236947248((uint64_t)&v27, (const char **)&v21->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (*((unsigned __int8 *)v12 + 11) != a4)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 350);
      int v22 = sub_23694710C(v28, "CHECK failed: (extension->is_packed) == (packed): ");
      sub_236947248((uint64_t)&v27, (const char **)&v22->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
  }
  std::string v23 = (int *)*v12;
  uint64_t v24 = *v23;
  if (v24 == v23[1])
  {
    int v25 = v24 + 1;
    sub_23695772C(v23, v24 + 1);
    uint64_t result = sub_236957BCC((uint64_t)v23);
    *(_DWORD *)(result + 4 * v24) = a5;
  }
  else
  {
    uint64_t result = sub_236957BCC((uint64_t)v23);
    *(_DWORD *)(result + 4 * v24) = a5;
    int v25 = v24 + 1;
  }
  *std::string v23 = v25;
  return result;
}

void sub_2369489E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_236948A28(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = (uint64_t)sub_23694C980(a1, a2);
  uint64_t v9 = result;
  *(void *)(result + 16) = a5;
  if (v10)
  {
    *(unsigned char *)(result + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      std::string::size_type v11 = sub_23694710C(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v17, (const char **)&v11->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    if (dword_23698F210[a3] != 4)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 351);
      unint64_t v12 = sub_23694710C(v18, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_UINT64): ");
      sub_236947248((uint64_t)&v17, (const char **)&v12->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    *(unsigned char *)(v9 + 9) = 0;
  }
  else
  {
    if (*(unsigned char *)(result + 9))
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 351);
      char v13 = sub_23694710C(v18, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
      sub_236947248((uint64_t)&v17, (const char **)&v13->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    uint64_t v14 = *(unsigned __int8 *)(v9 + 8);
    if ((v14 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      std::string::size_type v15 = sub_23694710C(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v17, (const char **)&v15->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    if (dword_23698F210[v14] != 4)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 351);
      uint64_t v16 = sub_23694710C(v18, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_UINT64): ");
      sub_236947248((uint64_t)&v17, (const char **)&v16->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
  }
  *(unsigned char *)(v9 + 10) &= 0xF0u;
  *(void *)uint64_t v9 = a4;
  return result;
}

void sub_236948C08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_236948C40(uint64_t *a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t *a6)
{
  std::string::size_type v11 = sub_23694C980((uint64_t)a1, a2);
  unint64_t v12 = v11;
  std::string v11[2] = a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      uint64_t v14 = sub_23694710C(v28, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v27, (const char **)&v14->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (dword_23698F210[a3] != 4)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 351);
      std::string::size_type v15 = sub_23694710C(v28, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_UINT64): ");
      sub_236947248((uint64_t)&v27, (const char **)&v15->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    *((unsigned char *)v12 + 9) = 1;
    *((unsigned char *)v12 + 11) = a4;
    uint64_t v16 = *a1;
    if (!*a1) {
      operator new();
    }
    if (*(unsigned char *)(v16 + 24)) {
      (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v16 + 32) + 32) + 40))(*(void *)(*(void *)(v16 + 32) + 32), &unk_26E9CE888, 16);
    }
    char v17 = (uint64_t *)sub_236945764((void *)v16, 0x10uLL, (uint64_t)sub_236951AA8);
    *char v17 = 0;
    v17[1] = v16;
    *unint64_t v12 = v17;
  }
  else
  {
    if (!*((unsigned char *)v11 + 9))
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 351);
      std::string::size_type v18 = sub_23694710C(v28, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
      sub_236947248((uint64_t)&v27, (const char **)&v18->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    uint64_t v19 = *((unsigned __int8 *)v12 + 8);
    if ((v19 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      unsigned int v20 = sub_23694710C(v28, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v27, (const char **)&v20->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (dword_23698F210[v19] != 4)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 351);
      unsigned int v21 = sub_23694710C(v28, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_UINT64): ");
      sub_236947248((uint64_t)&v27, (const char **)&v21->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (*((unsigned __int8 *)v12 + 11) != a4)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 351);
      int v22 = sub_23694710C(v28, "CHECK failed: (extension->is_packed) == (packed): ");
      sub_236947248((uint64_t)&v27, (const char **)&v22->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
  }
  std::string v23 = (int *)*v12;
  uint64_t v24 = *v23;
  if (v24 == v23[1])
  {
    int v25 = v24 + 1;
    sub_2369583E4(v23, v24 + 1);
    uint64_t result = sub_236958884((uint64_t)v23);
    *(void *)(result + 8 * v24) = a5;
  }
  else
  {
    uint64_t result = sub_236958884((uint64_t)v23);
    *(void *)(result + 8 * v24) = a5;
    int v25 = v24 + 1;
  }
  *std::string v23 = v25;
  return result;
}

void sub_236948F44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_236948F84(uint64_t a1, uint64_t a2, int a3, uint64_t a4, float a5)
{
  uint64_t result = (uint64_t)sub_23694C980(a1, a2);
  uint64_t v9 = result;
  *(void *)(result + 16) = a4;
  if (v10)
  {
    *(unsigned char *)(result + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      std::string::size_type v11 = sub_23694710C(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v17, (const char **)&v11->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    if (dword_23698F210[a3] != 6)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 352);
      unint64_t v12 = sub_23694710C(v18, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_FLOAT): ");
      sub_236947248((uint64_t)&v17, (const char **)&v12->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    *(unsigned char *)(v9 + 9) = 0;
  }
  else
  {
    if (*(unsigned char *)(result + 9))
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 352);
      char v13 = sub_23694710C(v18, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
      sub_236947248((uint64_t)&v17, (const char **)&v13->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    uint64_t v14 = *(unsigned __int8 *)(v9 + 8);
    if ((v14 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      std::string::size_type v15 = sub_23694710C(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v17, (const char **)&v15->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    if (dword_23698F210[v14] != 6)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 352);
      uint64_t v16 = sub_23694710C(v18, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_FLOAT): ");
      sub_236947248((uint64_t)&v17, (const char **)&v16->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
  }
  *(unsigned char *)(v9 + 10) &= 0xF0u;
  *(float *)uint64_t v9 = a5;
  return result;
}

void sub_23694916C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2369491A4(uint64_t *a1, uint64_t a2, int a3, int a4, uint64_t *a5, float a6)
{
  std::string::size_type v11 = sub_23694C980((uint64_t)a1, a2);
  unint64_t v12 = v11;
  std::string v11[2] = a5;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      uint64_t v14 = sub_23694710C(v28, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v27, (const char **)&v14->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (dword_23698F210[a3] != 6)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 352);
      std::string::size_type v15 = sub_23694710C(v28, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_FLOAT): ");
      sub_236947248((uint64_t)&v27, (const char **)&v15->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    *((unsigned char *)v12 + 9) = 1;
    *((unsigned char *)v12 + 11) = a4;
    uint64_t v16 = *a1;
    if (!*a1) {
      operator new();
    }
    if (*(unsigned char *)(v16 + 24)) {
      (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v16 + 32) + 32) + 40))(*(void *)(*(void *)(v16 + 32) + 32), &unk_26E9CE898, 16);
    }
    char v17 = (uint64_t *)sub_236945764((void *)v16, 0x10uLL, (uint64_t)sub_236951AAC);
    *char v17 = 0;
    v17[1] = v16;
    *unint64_t v12 = v17;
  }
  else
  {
    if (!*((unsigned char *)v11 + 9))
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 352);
      std::string::size_type v18 = sub_23694710C(v28, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
      sub_236947248((uint64_t)&v27, (const char **)&v18->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    uint64_t v19 = *((unsigned __int8 *)v12 + 8);
    if ((v19 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      unsigned int v20 = sub_23694710C(v28, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v27, (const char **)&v20->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (dword_23698F210[v19] != 6)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 352);
      unsigned int v21 = sub_23694710C(v28, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_FLOAT): ");
      sub_236947248((uint64_t)&v27, (const char **)&v21->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (*((unsigned __int8 *)v12 + 11) != a4)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 352);
      int v22 = sub_23694710C(v28, "CHECK failed: (extension->is_packed) == (packed): ");
      sub_236947248((uint64_t)&v27, (const char **)&v22->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
  }
  std::string v23 = (int *)*v12;
  uint64_t v24 = *v23;
  if (v24 == v23[1])
  {
    int v25 = v24 + 1;
    sub_236958A40(v23, v24 + 1);
    uint64_t result = sub_236958EE0((uint64_t)v23);
    *(float *)(result + 4 * v24) = a6;
  }
  else
  {
    uint64_t result = sub_236958EE0((uint64_t)v23);
    *(float *)(result + 4 * v24) = a6;
    int v25 = v24 + 1;
  }
  *std::string v23 = v25;
  return result;
}

void sub_2369494B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2369494F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, double a5)
{
  uint64_t result = (uint64_t)sub_23694C980(a1, a2);
  uint64_t v9 = result;
  *(void *)(result + 16) = a4;
  if (v10)
  {
    *(unsigned char *)(result + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      std::string::size_type v11 = sub_23694710C(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v17, (const char **)&v11->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    if (dword_23698F210[a3] != 5)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 353);
      unint64_t v12 = sub_23694710C(v18, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_DOUBLE): ");
      sub_236947248((uint64_t)&v17, (const char **)&v12->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    *(unsigned char *)(v9 + 9) = 0;
  }
  else
  {
    if (*(unsigned char *)(result + 9))
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 353);
      char v13 = sub_23694710C(v18, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
      sub_236947248((uint64_t)&v17, (const char **)&v13->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    uint64_t v14 = *(unsigned __int8 *)(v9 + 8);
    if ((v14 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      std::string::size_type v15 = sub_23694710C(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v17, (const char **)&v15->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    if (dword_23698F210[v14] != 5)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 353);
      uint64_t v16 = sub_23694710C(v18, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_DOUBLE): ");
      sub_236947248((uint64_t)&v17, (const char **)&v16->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
  }
  *(unsigned char *)(v9 + 10) &= 0xF0u;
  *(double *)uint64_t v9 = a5;
  return result;
}

void sub_2369496D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_236949710(uint64_t *a1, uint64_t a2, int a3, int a4, uint64_t *a5, double a6)
{
  std::string::size_type v11 = sub_23694C980((uint64_t)a1, a2);
  unint64_t v12 = v11;
  std::string v11[2] = a5;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      uint64_t v14 = sub_23694710C(v28, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v27, (const char **)&v14->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (dword_23698F210[a3] != 5)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 353);
      std::string::size_type v15 = sub_23694710C(v28, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_DOUBLE): ");
      sub_236947248((uint64_t)&v27, (const char **)&v15->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    *((unsigned char *)v12 + 9) = 1;
    *((unsigned char *)v12 + 11) = a4;
    uint64_t v16 = *a1;
    if (!*a1) {
      operator new();
    }
    if (*(unsigned char *)(v16 + 24)) {
      (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v16 + 32) + 32) + 40))(*(void *)(*(void *)(v16 + 32) + 32), &unk_26E9CE8A8, 16);
    }
    char v17 = (uint64_t *)sub_236945764((void *)v16, 0x10uLL, (uint64_t)sub_236951AB0);
    *char v17 = 0;
    v17[1] = v16;
    *unint64_t v12 = v17;
  }
  else
  {
    if (!*((unsigned char *)v11 + 9))
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 353);
      std::string::size_type v18 = sub_23694710C(v28, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
      sub_236947248((uint64_t)&v27, (const char **)&v18->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    uint64_t v19 = *((unsigned __int8 *)v12 + 8);
    if ((v19 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      unsigned int v20 = sub_23694710C(v28, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v27, (const char **)&v20->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (dword_23698F210[v19] != 5)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 353);
      unsigned int v21 = sub_23694710C(v28, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_DOUBLE): ");
      sub_236947248((uint64_t)&v27, (const char **)&v21->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (*((unsigned __int8 *)v12 + 11) != a4)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 353);
      int v22 = sub_23694710C(v28, "CHECK failed: (extension->is_packed) == (packed): ");
      sub_236947248((uint64_t)&v27, (const char **)&v22->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
  }
  std::string v23 = (int *)*v12;
  uint64_t v24 = *v23;
  if (v24 == v23[1])
  {
    int v25 = v24 + 1;
    sub_23695909C(v23, v24 + 1);
    uint64_t result = sub_23695953C((uint64_t)v23);
    *(double *)(result + 8 * v24) = a6;
  }
  else
  {
    uint64_t result = sub_23695953C((uint64_t)v23);
    *(double *)(result + 8 * v24) = a6;
    int v25 = v24 + 1;
  }
  *std::string v23 = v25;
  return result;
}

void sub_236949A1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_236949A5C(uint64_t a1, uint64_t a2, int a3, char a4, uint64_t a5)
{
  uint64_t result = (uint64_t)sub_23694C980(a1, a2);
  uint64_t v9 = (unsigned char *)result;
  *(void *)(result + 16) = a5;
  if (v10)
  {
    *(unsigned char *)(result + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      std::string::size_type v11 = sub_23694710C(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v17, (const char **)&v11->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    if (dword_23698F210[a3] != 7)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 354);
      unint64_t v12 = sub_23694710C(v18, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_BOOL): ");
      sub_236947248((uint64_t)&v17, (const char **)&v12->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    v9[9] = 0;
  }
  else
  {
    if (*(unsigned char *)(result + 9))
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 354);
      char v13 = sub_23694710C(v18, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
      sub_236947248((uint64_t)&v17, (const char **)&v13->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    uint64_t v14 = v9[8];
    if ((v14 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      std::string::size_type v15 = sub_23694710C(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v17, (const char **)&v15->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    if (dword_23698F210[v14] != 7)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 354);
      uint64_t v16 = sub_23694710C(v18, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_BOOL): ");
      sub_236947248((uint64_t)&v17, (const char **)&v16->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
  }
  v9[10] &= 0xF0u;
  *uint64_t v9 = a4;
  return result;
}

void sub_236949C3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_236949C74(uint64_t *a1, uint64_t a2, int a3, int a4, char a5, uint64_t *a6)
{
  std::string::size_type v11 = sub_23694C980((uint64_t)a1, a2);
  unint64_t v12 = v11;
  std::string v11[2] = a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      uint64_t v14 = sub_23694710C(v28, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v27, (const char **)&v14->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (dword_23698F210[a3] != 7)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 354);
      std::string::size_type v15 = sub_23694710C(v28, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_BOOL): ");
      sub_236947248((uint64_t)&v27, (const char **)&v15->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    *((unsigned char *)v12 + 9) = 1;
    *((unsigned char *)v12 + 11) = a4;
    uint64_t v16 = *a1;
    if (!*a1) {
      operator new();
    }
    if (*(unsigned char *)(v16 + 24)) {
      (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v16 + 32) + 32) + 40))(*(void *)(*(void *)(v16 + 32) + 32), &unk_26E9CE8B8, 16);
    }
    char v17 = (uint64_t *)sub_236945764((void *)v16, 0x10uLL, (uint64_t)sub_236951AB4);
    *char v17 = 0;
    v17[1] = v16;
    *unint64_t v12 = v17;
  }
  else
  {
    if (!*((unsigned char *)v11 + 9))
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 354);
      std::string::size_type v18 = sub_23694710C(v28, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
      sub_236947248((uint64_t)&v27, (const char **)&v18->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    uint64_t v19 = *((unsigned __int8 *)v12 + 8);
    if ((v19 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      unsigned int v20 = sub_23694710C(v28, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v27, (const char **)&v20->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (dword_23698F210[v19] != 7)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 354);
      unsigned int v21 = sub_23694710C(v28, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_BOOL): ");
      sub_236947248((uint64_t)&v27, (const char **)&v21->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (*((unsigned __int8 *)v12 + 11) != a4)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 354);
      int v22 = sub_23694710C(v28, "CHECK failed: (extension->is_packed) == (packed): ");
      sub_236947248((uint64_t)&v27, (const char **)&v22->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
  }
  std::string v23 = (int *)*v12;
  uint64_t v24 = *v23;
  if (v24 == v23[1])
  {
    int v25 = v24 + 1;
    sub_236956A7C(v23, v24 + 1);
    uint64_t result = sub_236956F18((uint64_t)v23);
    *(unsigned char *)(result + v24) = a5;
  }
  else
  {
    uint64_t result = sub_236956F18((uint64_t)v23);
    *(unsigned char *)(result + v24) = a5;
    int v25 = v24 + 1;
  }
  *std::string v23 = v25;
  return result;
}

void sub_236949F78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_236949FB8(uint64_t *a1, uint64_t a2, int a3, char a4, uint64_t *a5)
{
  uint64_t v9 = sub_23694C980((uint64_t)a1, a2);
  char v10 = v9;
  std::string v9[2] = a5;
  if (v11)
  {
    *((unsigned char *)v9 + 9) = 1;
    *((unsigned char *)v9 + 8) = a3;
    *((unsigned char *)v9 + 11) = a4;
    switch(a3)
    {
      case 1:
        uint64_t v12 = *a1;
        if (!v12) {
          goto LABEL_32;
        }
        if (*(unsigned char *)(v12 + 24)) {
          (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v12 + 32) + 32) + 40))(*(void *)(*(void *)(v12 + 32) + 32), &unk_26E9CE8A8, 16);
        }
        char v13 = sub_236951AB0;
        goto LABEL_31;
      case 2:
        uint64_t v12 = *a1;
        if (!v12) {
          goto LABEL_32;
        }
        if (*(unsigned char *)(v12 + 24)) {
          (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v12 + 32) + 32) + 40))(*(void *)(*(void *)(v12 + 32) + 32), &unk_26E9CE898, 16);
        }
        char v13 = sub_236951AAC;
        goto LABEL_31;
      case 3:
      case 16:
      case 18:
        uint64_t v12 = *a1;
        if (!v12) {
          goto LABEL_32;
        }
        if (*(unsigned char *)(v12 + 24)) {
          (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v12 + 32) + 32) + 40))(*(void *)(*(void *)(v12 + 32) + 32), &unk_26E9CE868, 16);
        }
        char v13 = sub_236951AA0;
        goto LABEL_31;
      case 4:
      case 6:
        uint64_t v12 = *a1;
        if (!v12) {
          goto LABEL_32;
        }
        if (*(unsigned char *)(v12 + 24)) {
          (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v12 + 32) + 32) + 40))(*(void *)(*(void *)(v12 + 32) + 32), &unk_26E9CE888, 16);
        }
        char v13 = sub_236951AA8;
        goto LABEL_31;
      case 5:
      case 14:
      case 15:
      case 17:
        uint64_t v12 = *a1;
        if (!v12) {
          goto LABEL_32;
        }
        if (*(unsigned char *)(v12 + 24)) {
          (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v12 + 32) + 32) + 40))(*(void *)(*(void *)(v12 + 32) + 32), &unk_26E9CE858, 16);
        }
        char v13 = sub_236951A9C;
        goto LABEL_31;
      case 7:
      case 13:
        uint64_t v12 = *a1;
        if (!v12) {
          goto LABEL_32;
        }
        if (*(unsigned char *)(v12 + 24)) {
          (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v12 + 32) + 32) + 40))(*(void *)(*(void *)(v12 + 32) + 32), &unk_26E9CE878, 16);
        }
        char v13 = sub_236951AA4;
        goto LABEL_31;
      case 8:
        uint64_t v12 = *a1;
        if (!v12) {
LABEL_32:
        }
          operator new();
        if (*(unsigned char *)(v12 + 24)) {
          (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v12 + 32) + 32) + 40))(*(void *)(*(void *)(v12 + 32) + 32), &unk_26E9CE8B8, 16);
        }
        char v13 = sub_236951AB4;
LABEL_31:
        uint64_t v14 = (uint64_t *)sub_236945764((void *)v12, 0x10uLL, (uint64_t)v13);
        *uint64_t v14 = 0;
        v14[1] = v12;
        goto LABEL_43;
      case 9:
      case 12:
        uint64_t v15 = *a1;
        if (!v15) {
          goto LABEL_42;
        }
        if (*(unsigned char *)(v15 + 24)) {
          (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v15 + 32) + 32) + 40))(*(void *)(*(void *)(v15 + 32) + 32), &unk_26E9CE8D8, 24);
        }
        uint64_t v16 = (uint64_t *(*)(uint64_t *))sub_236951AB8;
        goto LABEL_41;
      case 10:
      case 11:
        uint64_t v15 = *a1;
        if (!v15) {
LABEL_42:
        }
          operator new();
        if (*(unsigned char *)(v15 + 24)) {
          (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v15 + 32) + 32) + 40))(*(void *)(*(void *)(v15 + 32) + 32), &unk_26E9CE900, 24);
        }
        uint64_t v16 = sub_236951ABC;
LABEL_41:
        uint64_t v14 = (uint64_t *)sub_236945764((void *)v15, 0x18uLL, (uint64_t)v16);
        std::string v14[2] = 0;
        *uint64_t v14 = v15;
        v14[1] = 0;
LABEL_43:
        *char v10 = v14;
        break;
      default:
        return *v10;
    }
  }
  return *v10;
}

uint64_t sub_23694A42C(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5)
{
  uint64_t result = (uint64_t)sub_23694C980(a1, a2);
  uint64_t v9 = result;
  *(void *)(result + 16) = a5;
  if (v10)
  {
    *(unsigned char *)(result + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      char v11 = sub_23694710C(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v17, (const char **)&v11->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    if (dword_23698F210[a3] != 8)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 460);
      uint64_t v12 = sub_23694710C(v18, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_ENUM): ");
      sub_236947248((uint64_t)&v17, (const char **)&v12->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    *(unsigned char *)(v9 + 9) = 0;
  }
  else
  {
    if (*(unsigned char *)(result + 9))
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 463);
      char v13 = sub_23694710C(v18, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
      sub_236947248((uint64_t)&v17, (const char **)&v13->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    uint64_t v14 = *(unsigned __int8 *)(v9 + 8);
    if ((v14 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      uint64_t v15 = sub_23694710C(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v17, (const char **)&v15->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
    if (dword_23698F210[v14] != 8)
    {
      sub_2369470F4((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 463);
      uint64_t v16 = sub_23694710C(v18, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_ENUM): ");
      sub_236947248((uint64_t)&v17, (const char **)&v16->__r_.__value_.__l.__data_);
      uint64_t result = sub_236947250((uint64_t)v18);
    }
  }
  *(unsigned char *)(v9 + 10) &= 0xF0u;
  *(_DWORD *)uint64_t v9 = a4;
  return result;
}

void sub_23694A60C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23694A644(uint64_t *a1, uint64_t a2, int a3, int a4, int a5, uint64_t *a6)
{
  char v11 = sub_23694C980((uint64_t)a1, a2);
  uint64_t v12 = v11;
  std::string v11[2] = a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      uint64_t v14 = sub_23694710C(v28, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v27, (const char **)&v14->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (dword_23698F210[a3] != 8)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 488);
      uint64_t v15 = sub_23694710C(v28, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_ENUM): ");
      sub_236947248((uint64_t)&v27, (const char **)&v15->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    *((unsigned char *)v12 + 9) = 1;
    *((unsigned char *)v12 + 11) = a4;
    uint64_t v16 = *a1;
    if (!*a1) {
      operator new();
    }
    if (*(unsigned char *)(v16 + 24)) {
      (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v16 + 32) + 32) + 40))(*(void *)(*(void *)(v16 + 32) + 32), &unk_26E9CE858, 16);
    }
    char v17 = (uint64_t *)sub_236945764((void *)v16, 0x10uLL, (uint64_t)sub_236951A9C);
    *char v17 = 0;
    v17[1] = v16;
    *uint64_t v12 = v17;
  }
  else
  {
    if (!*((unsigned char *)v11 + 9))
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 494);
      std::string::size_type v18 = sub_23694710C(v28, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
      sub_236947248((uint64_t)&v27, (const char **)&v18->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    uint64_t v19 = *((unsigned __int8 *)v12 + 8);
    if ((v19 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      unsigned int v20 = sub_23694710C(v28, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v27, (const char **)&v20->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (dword_23698F210[v19] != 8)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 494);
      unsigned int v21 = sub_23694710C(v28, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_ENUM): ");
      sub_236947248((uint64_t)&v27, (const char **)&v21->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
    if (*((unsigned __int8 *)v12 + 11) != a4)
    {
      sub_2369470F4((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 495);
      int v22 = sub_23694710C(v28, "CHECK failed: (extension->is_packed) == (packed): ");
      sub_236947248((uint64_t)&v27, (const char **)&v22->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v28);
    }
  }
  std::string v23 = (int *)*v12;
  uint64_t v24 = *v23;
  if (v24 == v23[1])
  {
    int v25 = v24 + 1;
    sub_2369570D0(v23, v24 + 1);
    uint64_t result = sub_236957570((uint64_t)v23);
    *(_DWORD *)(result + 4 * v24) = a5;
  }
  else
  {
    uint64_t result = sub_236957570((uint64_t)v23);
    *(_DWORD *)(result + 4 * v24) = a5;
    int v25 = v24 + 1;
  }
  *std::string v23 = v25;
  return result;
}

void sub_23694A948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23694A988(uint64_t *a1, uint64_t a2, int a3, uint64_t *a4)
{
  uint64_t v7 = sub_23694C980((uint64_t)a1, a2);
  uint64_t v8 = (unsigned __int8 *)v7;
  std::string v7[2] = a4;
  if (v9)
  {
    *((unsigned char *)v7 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      char v10 = sub_23694710C(v20, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v19, (const char **)&v10->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v20);
    }
    if (dword_23698F210[a3] != 9)
    {
      sub_2369470F4((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 520);
      char v11 = sub_23694710C(v20, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_STRING): ");
      sub_236947248((uint64_t)&v19, (const char **)&v11->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v20);
    }
    v8[9] = 0;
    uint64_t v12 = *a1;
    if (!v12) {
      operator new();
    }
    if (*(unsigned char *)(v12 + 24)) {
      (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v12 + 32) + 32) + 40))(*(void *)(*(void *)(v12 + 32) + 32), &unk_26E9CE540, 24);
    }
    char v13 = (void *)sub_236945764((void *)v12, 0x18uLL, (uint64_t)sub_2369414D4);
    *char v13 = 0;
    v13[1] = 0;
    std::string v13[2] = 0;
    *(void *)uint64_t v8 = v13;
  }
  else
  {
    if (*((unsigned char *)v7 + 9))
    {
      sub_2369470F4((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 524);
      uint64_t v14 = sub_23694710C(v20, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
      sub_236947248((uint64_t)&v19, (const char **)&v14->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v20);
    }
    uint64_t v15 = v8[8];
    if ((v15 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      uint64_t v16 = sub_23694710C(v20, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v19, (const char **)&v16->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v20);
    }
    if (dword_23698F210[v15] != 9)
    {
      sub_2369470F4((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 524);
      char v17 = sub_23694710C(v20, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_STRING): ");
      sub_236947248((uint64_t)&v19, (const char **)&v17->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v20);
    }
  }
  v8[10] &= 0xF0u;
  return *(void *)v8;
}

void sub_23694ABF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_23694AC30(uint64_t *a1, uint64_t a2, int a3, uint64_t *a4)
{
  uint64_t v7 = sub_23694C980((uint64_t)a1, a2);
  uint64_t v8 = v7;
  std::string v7[2] = a4;
  if (v9)
  {
    *((unsigned char *)v7 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      char v10 = sub_23694710C(v27, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v26, (const char **)&v10->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v27);
    }
    if (dword_23698F210[a3] != 9)
    {
      sub_2369470F4((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 550);
      char v11 = sub_23694710C(v27, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_STRING): ");
      sub_236947248((uint64_t)&v26, (const char **)&v11->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v27);
    }
    *((unsigned char *)v8 + 9) = 1;
    *((unsigned char *)v8 + 11) = 0;
    uint64_t v12 = *a1;
    if (!v12) {
      operator new();
    }
    if (*(unsigned char *)(v12 + 24)) {
      (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v12 + 32) + 32) + 40))(*(void *)(*(void *)(v12 + 32) + 32), &unk_26E9CE8D8, 24);
    }
    char v13 = (uint64_t *)sub_236945764((void *)v12, 0x18uLL, (uint64_t)sub_236951AB8);
    std::string v13[2] = 0;
    *char v13 = v12;
    v13[1] = 0;
    unsigned __int8 *v8 = v13;
  }
  else
  {
    if (!*((unsigned char *)v7 + 9))
    {
      sub_2369470F4((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 556);
      uint64_t v14 = sub_23694710C(v27, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
      sub_236947248((uint64_t)&v26, (const char **)&v14->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v27);
    }
    uint64_t v15 = *((unsigned __int8 *)v8 + 8);
    if ((v15 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      uint64_t v16 = sub_23694710C(v27, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v26, (const char **)&v16->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v27);
    }
    if (dword_23698F210[v15] != 9)
    {
      sub_2369470F4((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 556);
      char v17 = sub_23694710C(v27, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_STRING): ");
      sub_236947248((uint64_t)&v26, (const char **)&v17->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v27);
    }
  }
  uint64_t v18 = (uint64_t)*v8;
  char v19 = *(int **)(v18 + 16);
  if (!v19)
  {
    int v21 = *(_DWORD *)(v18 + 12);
LABEL_22:
    sub_2369597C8(v18, v21 + 1);
    char v19 = *(int **)(v18 + 16);
    int v21 = *v19;
    goto LABEL_23;
  }
  uint64_t v20 = *(int *)(v18 + 8);
  int v21 = *v19;
  if ((int)v20 < *v19)
  {
    *(_DWORD *)(v18 + 8) = v20 + 1;
    return *(void **)&v19[2 * v20 + 2];
  }
  if (v21 == *(_DWORD *)(v18 + 12)) {
    goto LABEL_22;
  }
LABEL_23:
  *char v19 = v21 + 1;
  uint64_t v23 = *(void *)v18;
  if (!*(void *)v18) {
    operator new();
  }
  if (*(unsigned char *)(v23 + 24)) {
    (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v23 + 32) + 32) + 40))(*(void *)(*(void *)(v23 + 32) + 32), &unk_26E9CE540, 24);
  }
  uint64_t result = (void *)sub_236945764((void *)v23, 0x18uLL, (uint64_t)sub_2369414D4);
  *uint64_t result = 0;
  result[1] = 0;
  result[2] = 0;
  uint64_t v24 = *(void *)(v18 + 16);
  uint64_t v25 = *(int *)(v18 + 8);
  *(_DWORD *)(v18 + 8) = v25 + 1;
  *(void *)(v24 + 8 * v25 + 8) = result;
  return result;
}

void sub_23694AFA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23694AFE0(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  char v9 = sub_23694C980((uint64_t)a1, a2);
  char v10 = v9;
  std::string v9[2] = a5;
  if (v11)
  {
    *((unsigned char *)v9 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      uint64_t v12 = sub_23694710C(v21, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v20, (const char **)&v12->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v21);
    }
    if (dword_23698F210[a3] != 10)
    {
      sub_2369470F4((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 591);
      char v13 = sub_23694710C(v21, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_MESSAGE): ");
      sub_236947248((uint64_t)&v20, (const char **)&v13->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v21);
    }
    *((unsigned char *)v10 + 9) = 0;
    *((unsigned char *)v10 + 10) &= 0xFu;
    uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)a4 + 32))(a4, *a1);
    *char v10 = (uint64_t *)result;
    *((unsigned char *)v10 + 10) &= 0xF0u;
  }
  else
  {
    if (*((unsigned char *)v9 + 9))
    {
      sub_2369470F4((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 598);
      uint64_t v15 = sub_23694710C(v21, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
      sub_236947248((uint64_t)&v20, (const char **)&v15->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v21);
    }
    uint64_t v16 = *((unsigned __int8 *)v10 + 8);
    if ((v16 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      char v17 = sub_23694710C(v21, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v20, (const char **)&v17->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v21);
    }
    if (dword_23698F210[v16] != 10)
    {
      sub_2369470F4((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 598);
      uint64_t v18 = sub_23694710C(v21, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_MESSAGE): ");
      sub_236947248((uint64_t)&v20, (const char **)&v18->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v21);
    }
    char v19 = *((unsigned char *)v10 + 10);
    *((unsigned char *)v10 + 1sub_23692A244(&a9, 0) = v19 & 0xF0;
    uint64_t result = (uint64_t)*v10;
    if ((v19 & 0x10) != 0) {
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 32))(result, a4);
    }
  }
  return result;
}

void sub_23694B240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23694B278(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  char v9 = sub_23694C980((uint64_t)a1, a2);
  char v10 = (unsigned __int8 *)v9;
  std::string v9[2] = a5;
  if (v11)
  {
    *((unsigned char *)v9 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v26, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      uint64_t v12 = sub_23694710C(v26, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v25, (const char **)&v12->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v26);
    }
    if (dword_23698F210[a3] != 10)
    {
      sub_2369470F4((uint64_t)v26, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 762);
      char v13 = sub_23694710C(v26, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_MESSAGE): ");
      sub_236947248((uint64_t)&v25, (const char **)&v13->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v26);
    }
    v10[9] = 1;
    uint64_t v14 = *a1;
    if (!*a1) {
      operator new();
    }
    if (*(unsigned char *)(v14 + 24)) {
      (*(void (**)(void, void *, uint64_t))(**(void **)(*(void *)(v14 + 32) + 32) + 40))(*(void *)(*(void *)(v14 + 32) + 32), &unk_26E9CE900, 24);
    }
    uint64_t v15 = (void *)sub_236945764((void *)v14, 0x18uLL, (uint64_t)sub_236951ABC);
    std::string v15[2] = 0;
    *uint64_t v15 = v14;
    v15[1] = 0;
    *(void *)char v10 = v15;
  }
  else
  {
    if (!*((unsigned char *)v9 + 9))
    {
      sub_2369470F4((uint64_t)v26, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 767);
      uint64_t v16 = sub_23694710C(v26, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
      sub_236947248((uint64_t)&v25, (const char **)&v16->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v26);
    }
    uint64_t v17 = v10[8];
    if ((v17 - 19) <= 0xFFFFFFED)
    {
      sub_2369470F4((uint64_t)v26, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 60);
      uint64_t v18 = sub_23694710C(v26, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      sub_236947248((uint64_t)&v25, (const char **)&v18->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v26);
    }
    if (dword_23698F210[v17] != 10)
    {
      sub_2369470F4((uint64_t)v26, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SentencePiece/third_party/protobuf-lite/extension_set.cc", 767);
      char v19 = sub_23694710C(v26, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_MESSAGE): ");
      sub_236947248((uint64_t)&v25, (const char **)&v19->__r_.__value_.__l.__data_);
      sub_236947250((uint64_t)v26);
    }
  }
  uint64_t v20 = *(void *)v10;
  int v21 = *(_DWORD **)(*(void *)v10 + 16);
  if (!v21
    || (uint64_t v22 = *(int *)(v20 + 8), (int)v22 >= *v21)
    || (*(_DWORD *)(v20 + 8) = v22 + 1, (uint64_t v23 = *(void *)&v21[2 * v22 + 2]) == 0))
  {
    uint64_t v23 = (*(uint64_t (**)(uint64_t, void))(*(void *)a4 + 32))(a4, *a1);
    sub_236951BD4(*(void *)v10, v23);
  }
  return v23;
}

void sub_23694B564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_236947250((uint64_t)va);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_23694B59C(unsigned __int8 *result)
{
  uint64_t v1 = (void *)*((void *)result + 2);
  if (*((unsigned __int16 *)result + 4) >= 0x101u)
  {
    int v6 = (unsigned __int8 *)*v1;
    uint64_t v4 = (unsigned __int8 *)(v1 + 1);
    uint64_t v5 = v6;
    if (v6 != v4)
    {
      do
      {
        uint64_t result = sub_2369477F8(v5 + 40);
        uint64_t v7 = (unsigned __int8 *)*((void *)v5 + 1);
        if (v7)
        {
          do
          {
            uint64_t v8 = v7;
            uint64_t v7 = *(unsigned __int8 **)v7;
          }
          while (v7);
        }
        else
        {
          do
          {
            uint64_t v8 = (unsigned __int8 *)*((void *)v5 + 2);
            BOOL v9 = *(void *)v8 == (void)v5;
            uint64_t v5 = v8;
          }
          while (!v9);
        }
        uint64_t v5 = v8;
      }
      while (v8 != v4);
    }
  }
  else if (*((_WORD *)result + 5))
  {
    uint64_t v2 = 32 * *((unsigned __int16 *)result + 5);
    uint64_t v3 = (unsigned __int8 *)(v1 + 1);
    do
    {
      uint64_t result = sub_2369477F8(v3);
      v3 += 32;
      v2 -= 32;
    }
    while (v2);
  }
  return result;
}